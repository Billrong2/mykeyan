{"Single":[{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(2000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1038/buggy-version/app.src.main.java.com.geeky7.rohit.flash_a.activities.HomeAddress.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "1e96a624f8d9cd389aad1952e34f94f9f155f6c9", "Url": "https://api.github.com/repos/kumar7rk/FLASH-A", "Date": "2017-10-15T10:51:40Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { temp = ((com.miniprojekt.danielmathiasdaniel.yatzy2.ScoreList) (com.miniprojekt.danielmathiasdaniel.yatzy2.Base64.toObject(sharedPreferences.getString(\"SCORELIST\", null)))); } catch (java.lang.NullPointerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8061/buggy-version/app.src.main.java.com.miniprojekt.danielmathiasdaniel.yatzy2.MainActivity.java", "BodyUseAPI": ["android.content.SharedPreferences.getString(java.lang.String,<nulltype>)", "com.miniprojekt.danielmathiasdaniel.yatzy2.Base64.toObject(sharedPreferences.getString(\"SCORELIST\", null))"], "Fixed commit": "512cb51b3dca1a934e443644c6fbc31f16b14aad", "Url": "https://api.github.com/repos/stonecompass/Yatzy", "Date": "2015-02-27T08:00:43Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.lang.Thread.currentThread().getContextClassLoader().loadClass(cl.getName()); } catch (java.lang.ClassNotFoundException e) { try { return java.lang.Class.forName(cl.getName(), false, classLoader); } catch (java.lang.ClassNotFoundException e2) { return super.resolveClass(cl); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7622/buggy-version/jetty-nosql-kvs.src.main.java.org.eclipse.jetty.nosql.kvs.session.serializable.ClassLoadingObjectInputStream.java", "BodyUseAPI": ["java.io.ObjectStreamClass.getName()", "java.lang.Thread.currentThread()", "java.lang.Thread.getContextClassLoader()", "java.lang.ClassLoader.loadClass(java.lang.String)"], "Fixed commit": "1de8e24af518eba07264a2820985d3ef2c6d87f8", "Url": "https://api.github.com/repos/kauppalehti/jetty-nosql-memcached", "Date": "2014-04-01T13:31:19Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { id = java.lang.Integer.parseInt(str.split(\" \", 2)[0]); } catch (java.lang.Exception e) { return TextBuddy.MESSAGE_INVALID_COMMAND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4065/buggy-version/src.TextBuddy.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String,int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "088a94beb80f0d726a8de58a701872fe41cd0c12", "Url": "https://api.github.com/repos/chewonit/cs2103-ce1", "Date": "2013-08-28T17:05:54Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final org.esa.snap.core.datamodel.RasterDataNode[] refRasters = org.esa.snap.core.dataop.barithm.BandArithmetic.getRefRasters(expression, product); if ((refRasters.length) > 0) { model = refRasters[0].getMultiLevelModel(); } } catch (org.esa.snap.core.jexp.ParseException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1839/buggy-version/snap-core.src.main.java.org.esa.snap.core.image.ColoredMaskImageMultiLevelSource.java", "BodyUseAPI": ["org.esa.snap.core.dataop.barithm.BandArithmetic.getRefRasters(java.lang.String,org.esa.snap.core.datamodel.Product)", "refRasters[0].getMultiLevelModel()"], "Fixed commit": "c6c7109b804e828de9316d2378c88ec374d16021", "Url": "https://api.github.com/repos/senbox-org/snap-engine", "Date": "2015-11-12T15:55:13Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.cloudml.deployer.PaaSConnector connector = ((org.cloudml.deployer.PaaSConnector) (org.cloudml.deployer.ConnectorFactory.createPaaSConnector(pltf.getProvider()))); connector.uploadWar(client.getProperties().valueOf(\"temp-warfile\"), \"db-reconfig\", clienti.getName(), pltfi.getName(), 600); } catch (java.lang.NullPointerException e) { org.cloudml.deployer.CloudAppDeployer.journal.log(java.util.logging.Level.INFO, \">> no temp-warfile specified, no re-deploy\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5250/buggy-version/deployer.src.main.java.org.cloudml.deployer.CloudAppDeployer.java", "BodyUseAPI": ["org.cloudml.deployer.ConnectorFactory.createPaaSConnector(pltf.getProvider())", "client.getProperties().valueOf(java.lang.String)", "org.cloudml.deployer.ComponentInstance.getName()", "org.cloudml.deployer.Component.getProperties()", "org.cloudml.deployer.PaaSConnector.uploadWar(client.getProperties().valueOf(\"temp-warfile\"),java.lang.String,clienti.getName(),pltfi.getName(),int)", "org.cloudml.deployer.ExternalComponent.getProvider()", "org.cloudml.deployer.ComponentInstance.getName()"], "Fixed commit": "6688b28a74ff562e4ddd7a7ea37167708f77c48f", "Url": "https://api.github.com/repos/SINTEF-9012/cloudml", "Date": "2014-09-03T22:02:28Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { sourceOperator = new edu.uci.ics.textdb.dataflow.keywordmatch.KeywordMatcherSourceOperator(keywordPredicate, dataStore); } catch (edu.uci.ics.textdb.common.exception.DataFlowException e) { throw new edu.uci.ics.textdb.common.exception.PlanGenException(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1249/buggy-version/textdb.textdb-dataflow.src.main.java.edu.uci.ics.textdb.plangen.operatorbuilder.KeywordSourceBuilder.java", "BodyUseAPI": [], "Fixed commit": "9f99af9155c65e5580c2eb5e50214b2744a700c4", "Url": "https://api.github.com/repos/Texera/texera", "Date": "2016-11-13T07:44:08Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { p = new Pokemon(PokemonNames.getSpeciesFromName(species), level, ivs, false); } catch (java.lang.NullPointerException e) { Main.appendln(\"Error in your config file. Perhaps you have an incorrect pokemon species name?\"); java.io.FileWriter fw = new java.io.FileWriter(ini.get(\"files\", \"outputFile\")); java.io.BufferedWriter bw = new java.io.BufferedWriter(fw); bw.write(Main.output.toString()); bw.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8609/buggy-version/src.Main.java", "BodyUseAPI": ["PokemonNames.getSpeciesFromName(java.lang.String)"], "Fixed commit": "14b28b0314c5b0e38a51206270aba94b8cf498de", "Url": "https://api.github.com/repos/HRoll/poke-router", "Date": "2013-04-17T02:44:22Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return org.syphr.mythtv.proto.impl.ProtocolUtils.combineInts(java.lang.Integer.parseInt(args.get(0)), java.lang.Integer.parseInt(args.get(1))); } catch (java.lang.NumberFormatException e) { throw new org.syphr.mythtv.proto.ProtocolException(response, org.syphr.mythtv.proto.ProtocolException.Direction.RECEIVE, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/400/buggy-version/src.main.java.org.syphr.mythtv.proto.impl.Command63QueryRecorderGetFramesWritten.java", "BodyUseAPI": ["org.syphr.mythtv.proto.impl.ProtocolUtils.combineInts(int,int)", "java.lang.Integer.parseInt(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.lang.Integer.parseInt(java.lang.String)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "db66388b11ae10124022ccad66fdfbedf467c8f8", "Url": "https://api.github.com/repos/syphr42/libmythtv-java", "Date": "2011-03-15T03:30:55Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tasks = new com.cmput301.classproject.Model.Tasks.ReceiveServerData(JSONServer.TaskType.GetTasks, mContext).execute().get(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } catch (java.util.concurrent.ExecutionException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5887/buggy-version/classproject.src.com.cmput301.classproject.Model.TaskManager.java", "BodyUseAPI": ["new com.cmput301.classproject.Model.Tasks.ReceiveServerData(JSONServer.TaskType.GetTasks, mContext).execute().get()", "com.cmput301.classproject.Model.Tasks.ReceiveServerData.execute()"], "Fixed commit": "3279f0f69387ef7a25fa127a0b14133d80b0c153", "Url": "https://api.github.com/repos/CMPUT301F12T06/classproject", "Date": "2012-11-04T00:11:00Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { returnCode = new com.cmput301.classproject.Model.Tasks.ModifyServerData(JSONServer.TaskType.AddTask, mContext).execute(task).get(); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5887/buggy-version/classproject.src.com.cmput301.classproject.Model.TaskManager.java", "BodyUseAPI": ["new com.cmput301.classproject.Model.Tasks.ModifyServerData(JSONServer.TaskType.AddTask, mContext).execute(task).get()", "com.cmput301.classproject.Model.Tasks.ModifyServerData.execute(com.cmput301.classproject.Model.Task)"], "Fixed commit": "3279f0f69387ef7a25fa127a0b14133d80b0c153", "Url": "https://api.github.com/repos/CMPUT301F12T06/classproject", "Date": "2012-11-04T00:11:00Z"},
{"Line": "=>1116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { clueSizeStr = prefs.getString(\"clueSize\", \"12\"); } catch (java.lang.ClassCastException e) { int clueSize = prefs.getInt(\"clueSize\", 12); prefs.edit().putString(\"clueSize\", java.lang.Integer.toString(clueSize)).commit(); setClueSize(clueSize); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3450/buggy-version/wordswithcrosses.src.com.adamrosenfield.wordswithcrosses.PlayActivity.java", "BodyUseAPI": ["com.adamrosenfield.wordswithcrosses.PlayActivity.getString(java.lang.String,java.lang.String)"], "Fixed commit": "b65b4879c1f2ddca77130e6e658708b39836b84d", "Url": "https://api.github.com/repos/adamantoise/wordswithcrosses", "Date": "2013-11-05T03:03:59Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.lang.Double.valueOf(pref.getString(key.toString(), \"0\")); } catch (java.lang.NumberFormatException nfe) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6145/buggy-version/src.com.alimuzaffar.sunalarm.util.AppSettings.java", "BodyUseAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)", "java.lang.Double.valueOf(pref.getString(key.toString(), \"0\"))", "com.alimuzaffar.sunalarm.util.AppSettings.Key.toString()"], "Fixed commit": "1d36a8161a82008f4f4071a15d0d0fee976b07f0", "Url": "https://api.github.com/repos/atgheb/sun-status-app", "Date": "2012-08-05T11:12:46Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (dialog.isShowing()) dialog.dismiss(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8987/buggy-version/src.main.java.com.ladinc.showrss.utilities.LoadingDialog.java", "BodyUseAPI": ["android.app.ProgressDialog.isShowing()", "android.app.ProgressDialog.dismiss()"], "Fixed commit": "8818e8b11c03efedfddbb117d8d58e42b167bcf2", "Url": "https://api.github.com/repos/LAD-inc/ShowRSS-Mobile", "Date": "2012-10-16T20:34:46Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { romanNumber = chapterHeading.split(\" \")[1]; } catch (java.lang.IndexOutOfBoundsException ex) { romanNumber = \"I\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4421/buggy-version/src.main.java.agh.cs.lab.constitution.constitutionProcessors.ChapterSplitter.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "4545974a7d83e1609e28993d02025c4487f8e0d7", "Url": "https://api.github.com/repos/grpawel/obiektowe-konstytucja", "Date": "2016-12-09T11:55:36Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.CharSequence seq2 = new java.lang.String(Decrypt(editText1.getText().toString().toCharArray())); editText2.setText(seq2); } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, getString(R.string.except), 1).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7513/buggy-version/src.ru.narkdevils.shifr.ShifrActivity.java", "BodyUseAPI": ["editText1.getText().toString()", "editText1.getText().toString().toCharArray()", "android.widget.EditText.getText()", "ru.narkdevils.shifr.ShifrActivity.Decrypt(editText1.getText().toString().toCharArray())", "android.widget.EditText.setText(java.lang.CharSequence)"], "Fixed commit": "c8ebd25b8a563979723a8203a8075b0e530ecc2c", "Url": "https://api.github.com/repos/NarkDevils/Shifr", "Date": "2012-06-18T04:10:52Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.CharSequence seq1 = new java.lang.String(Crypt(editText1.getText().toString().toCharArray())); editText2.setText(seq1); } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, getString(R.string.except), 1).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7513/buggy-version/src.ru.narkdevils.shifr.ShifrActivity.java", "BodyUseAPI": ["ru.narkdevils.shifr.ShifrActivity.Crypt(editText1.getText().toString().toCharArray())", "editText1.getText().toString().toCharArray()", "editText1.getText().toString()", "android.widget.EditText.setText(java.lang.CharSequence)", "android.widget.EditText.getText()"], "Fixed commit": "c8ebd25b8a563979723a8203a8075b0e530ecc2c", "Url": "https://api.github.com/repos/NarkDevils/Shifr", "Date": "2012-06-18T04:10:52Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { urlParametersBuilder.append((((java.net.URLEncoder.encode(key, \"UTF-8\")) + \"=\") + (java.net.URLEncoder.encode(data.get(key).toString(), \"UTF-8\")))); } catch (java.lang.Exception e) { urlParametersBuilder.append(((key + \"=\") + (data.get(key).toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5780/buggy-version/src.main.java.aptxx.wifipassword.Scanner.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "java.lang.String.toString()"], "Fixed commit": "42b44fbb1db5a81602d23cdbab397b138385e3bd", "Url": "https://api.github.com/repos/aptxx/lianwifi-android", "Date": "2016-02-20T10:23:58Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.http.util.EntityUtils.consume(response.getEntity()); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8760/buggy-version/pesp-was8.5-ext-srcs.services.src.main.java.gov.medicaid.screening.dao.impl.BaseDAO.java", "BodyUseAPI": ["org.apache.http.util.EntityUtils.consume(response.getEntity())", "org.apache.http.HttpResponse.getEntity()"], "Fixed commit": "c8f304b561b9444a505cf0eb77cd00745520c293", "Url": "https://api.github.com/repos/nasa/coeci-cms-mpsp", "Date": "2013-12-25T05:20:30Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { stmt.close(); } catch (java.sql.SQLException e) { e.printStackTrace(); } finally { try { con.close(); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2613/buggy-version/Java_PayPalCheckout.versions.step3.com.appdynamics.sample.servlet.AccountLookupDBServlet.java", "BodyUseAPI": ["java.sql.Statement.close()"], "Fixed commit": "4744ee6f597e9bbea5a0267da4c12e17b9050b35", "Url": "https://api.github.com/repos/sturtesm/appdynamics-paypal-integration-java-checkout", "Date": "2015-08-02T18:38:38Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { stmt.close(); } catch (java.sql.SQLException e) { e.printStackTrace(); } finally { try { con.close(); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2613/buggy-version/Java_PayPalCheckout.src.main.java.com.appdynamics.sample.servlet.AccountLookupDBServlet.java", "BodyUseAPI": ["java.sql.Statement.close()"], "Fixed commit": "4744ee6f597e9bbea5a0267da4c12e17b9050b35", "Url": "https://api.github.com/repos/sturtesm/appdynamics-paypal-integration-java-checkout", "Date": "2015-08-02T18:38:38Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { stmt.close(); } catch (java.sql.SQLException e) { e.printStackTrace(); } finally { try { con.close(); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2613/buggy-version/Java_PayPalCheckout.versions.step4.com.appdynamics.sample.servlet.AccountLookupDBServlet.java", "BodyUseAPI": ["java.sql.Statement.close()"], "Fixed commit": "4744ee6f597e9bbea5a0267da4c12e17b9050b35", "Url": "https://api.github.com/repos/sturtesm/appdynamics-paypal-integration-java-checkout", "Date": "2015-08-02T18:38:38Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { selected_num = java.lang.Integer.parseInt(editText.getText().toString()); } catch (java.lang.Exception ex) { consoleView.setText(R.string.select_not_valid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6710/buggy-version/src.android_foo.control_app.src.main.java.com.robotca.ControlApp.Fragments.CameraViewFragment.java", "BodyUseAPI": ["android.widget.EditText.getText()", "editText.getText().toString()", "java.lang.Integer.parseInt(editText.getText().toString())"], "Fixed commit": "f1c27f7804b98f9eeec8ebec4104c2db1ac06f12", "Url": "https://api.github.com/repos/NEU-TEAM/JARVIS", "Date": "2016-11-16T02:25:07Z"},
{"Line": "=>966", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { bioModel.changeSpeciesId(selected, newSpeciesID); } catch (edu.utah.ece.async.ibiosim.dataModels.util.exceptions.BioSimException e) { javax.swing.JOptionPane.showMessageDialog(Gui.frame, e.getMessage(), e.getTitle(), javax.swing.JOptionPane.ERROR_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1705/buggy-version/gui.src.main.java.edu.utah.ece.async.ibiosim.gui.modelEditor.sbmlcore.SpeciesPanel.java", "BodyUseAPI": ["edu.utah.ece.async.ibiosim.dataModels.biomodel.parser.BioModel.changeSpeciesId(java.lang.String,java.lang.String)"], "Fixed commit": "63f290a2bc95fbaa1385e5ffab68812375f420a6", "Url": "https://api.github.com/repos/MyersResearchGroup/iBioSim", "Date": "2017-09-04T05:57:14Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { s = unmarshal(sessions.get(sId)); } catch (com.hazelcast.nio.serialization.HazelcastSerializationException e) { sendError(message, (\"Error in deserializing new hazelcast session \" + sId), e); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7433/buggy-version/session.src.main.java.org.entcore.session.AuthManager.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "1.unmarshal(java.lang.String)"], "Fixed commit": "ee029f982e6d339499622506f30cd26cc11339eb", "Url": "https://api.github.com/repos/entcore/entcore", "Date": "2015-11-26T14:44:21Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { session = unmarshal(sessions.get(sessionId)); } catch (com.hazelcast.nio.serialization.HazelcastSerializationException e) { sessions.remove(sessionId); logger.warn((\"Error in deserializing hazelcast session \" + sessionId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7433/buggy-version/session.src.main.java.org.entcore.session.AuthManager.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "org.entcore.session.AuthManager.unmarshal(java.lang.String)"], "Fixed commit": "ee029f982e6d339499622506f30cd26cc11339eb", "Url": "https://api.github.com/repos/entcore/entcore", "Date": "2015-11-26T14:44:21Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { bgImage = new javax.swing.ImageIcon(getClass().getResource(\"/images/backgroundImage.jpg\")); } catch (java.lang.NullPointerException e) { bgImage = new javax.swing.ImageIcon(getClass().getResource(\"backgroundImage.jpg\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4601/buggy-version/enigma-project.src.enigma.EnigmaGUI.java", "BodyUseAPI": ["enigma.EnigmaGUI.getClass()", "java.lang.Class<? extends enigma.EnigmaGUI>.getResource(java.lang.String)"], "Fixed commit": "60f635bd2b6c7c2e09fc634265d2abb17b06a3a3", "Url": "https://api.github.com/repos/bmwinstead/enigma-project", "Date": "2013-11-20T21:47:46Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (com.sun.syndication.feed.synd.SyndEntry entry : entries) { if ((site.lastLoadTime.compareTo(entry.getPublishedDate())) == (-1)) { new org.kilnyy.feedreader.Article(site, entry.getTitle(), entry.getDescription().getValue(), new java.sql.Timestamp(entry.getPublishedDate().getTime())); } } } catch (final java.lang.Exception ex) { java.lang.System.err.println((\"ERROR: \" + (ex.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2911/buggy-version/src.main.java.org.kilnyy.feedreader.Mapper.java", "BodyUseAPI": ["com.sun.syndication.feed.synd.SyndEntry.getDescription()", "entry.getPublishedDate().getTime()", "site.lastLoadTime.compareTo(entry.getPublishedDate())", "com.sun.syndication.feed.synd.SyndEntry.getPublishedDate()", "com.sun.syndication.feed.synd.SyndEntry.getPublishedDate()", "com.sun.syndication.feed.synd.SyndEntry.getTitle()", "entry.getDescription().getValue()"], "Fixed commit": "372e923b3f6983be36a4c0ef2a96878fc34767e9", "Url": "https://api.github.com/repos/kilnyy/FeedReader", "Date": "2014-06-16T14:05:00Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (event.isCancelled()) { return; } } catch (java.lang.NoSuchMethodError ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5370/buggy-version/src.main.java.com.laytonsmith.commandhelper.CommandHelperServerListener.java", "BodyUseAPI": ["org.bukkit.event.server.ServerCommandEvent.isCancelled()"], "Fixed commit": "7b3d69143eb1158d409386c7afe721b3472b835e", "Url": "https://api.github.com/repos/EngineHub/CommandHelper", "Date": "2017-10-25T22:25:44Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((android.support.v4.app.ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_COARSE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { return; } } catch (java.lang.Exception e) { java.lang.String s = \"s\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3993/buggy-version/app.src.main.java.com.example.usi.lanloc.map.MapFragment.java", "BodyUseAPI": ["com.example.usi.lanloc.map.MapFragment.getActivity()", "android.support.v4.app.ActivityCompat.checkSelfPermission(getActivity(),Manifest.permission.ACCESS_COARSE_LOCATION)", "android.support.v4.app.ActivityCompat.checkSelfPermission(getActivity(),Manifest.permission.ACCESS_FINE_LOCATION)", "com.example.usi.lanloc.map.MapFragment.getActivity()"], "Fixed commit": "cd3374d553547df09af68c324e7324b9e35f04d0", "Url": "https://api.github.com/repos/jennyBu/LanLoc", "Date": "2017-12-18T22:53:01Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((android.support.v4.app.ActivityCompat.checkSelfPermission(getActivity(), android.Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(getActivity(), android.Manifest.permission.ACCESS_COARSE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { return; } } catch (java.lang.Exception e) { java.lang.String s = \"s\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3993/buggy-version/app.src.main.java.com.example.usi.lanloc.MostPopularFragment.java", "BodyUseAPI": ["android.support.v4.app.ActivityCompat.checkSelfPermission(getActivity(),android.Manifest.permission.ACCESS_COARSE_LOCATION)", "android.support.v4.app.ActivityCompat.checkSelfPermission(getActivity(),android.Manifest.permission.ACCESS_FINE_LOCATION)", "com.example.usi.lanloc.MostPopularFragment.getActivity()", "com.example.usi.lanloc.MostPopularFragment.getActivity()"], "Fixed commit": "cd3374d553547df09af68c324e7324b9e35f04d0", "Url": "https://api.github.com/repos/jennyBu/LanLoc", "Date": "2017-12-18T22:53:01Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((android.support.v4.app.ActivityCompat.checkSelfPermission(getContext(), android.Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(getContext(), android.Manifest.permission.ACCESS_COARSE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { return; } } catch (java.lang.Exception e) { java.lang.String s = \"s\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3993/buggy-version/app.src.main.java.com.example.usi.lanloc.NewestFragment.java", "BodyUseAPI": ["com.example.usi.lanloc.NewestFragment.getContext()", "android.support.v4.app.ActivityCompat.checkSelfPermission(getContext(),android.Manifest.permission.ACCESS_COARSE_LOCATION)", "com.example.usi.lanloc.NewestFragment.getContext()", "android.support.v4.app.ActivityCompat.checkSelfPermission(getContext(),android.Manifest.permission.ACCESS_FINE_LOCATION)"], "Fixed commit": "cd3374d553547df09af68c324e7324b9e35f04d0", "Url": "https://api.github.com/repos/jennyBu/LanLoc", "Date": "2017-12-18T22:53:01Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mEvernoteSession.logOut(this); } catch (com.evernote.client.android.InvalidAuthenticationException e) { android.util.Log.e(com.evernote.android.sample.HelloEDAM.LOGTAG, \"Tried to call logout with not logged in\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6762/buggy-version/samples.HelloEDAM.src.com.evernote.android.sample.HelloEDAM.java", "BodyUseAPI": ["com.evernote.android.sample.HelloEDAM.logOut(com.evernote.android.sample.HelloEDAM)"], "Fixed commit": "15d16550db8898128ad7deb9bf182803c5648e85", "Url": "https://api.github.com/repos/evernote/evernote-sdk-android", "Date": "2013-03-18T21:43:11Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final com.orientechnologies.orient.core.record.ORecord<?> rec = ((com.orientechnologies.orient.core.id.ORecordId) (value)).getRecord(); if ((underlying) instanceof com.orientechnologies.common.collection.OLazyIterator<?>) ((com.orientechnologies.common.collection.OLazyIterator<com.orientechnologies.orient.core.db.record.OIdentifiable>) (underlying)).update(rec); value = rec; } catch (java.lang.Exception e) { com.orientechnologies.common.log.OLogManager.instance().error(this, \"Error on iterating record collection\", e); value = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5389/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.OLazyRecordIterator.java", "BodyUseAPI": ["java.util.Iterator<? extends com.orientechnologies.orient.core.db.record.OIdentifiable>.update(com.orientechnologies.orient.core.record.ORecord<?>)", "com.orientechnologies.orient.core.db.record.OIdentifiable.getRecord()"], "Fixed commit": "7e0494e82bc10903c82812c030d272d19c889a48", "Url": "https://api.github.com/repos/giastfader/orientdb", "Date": "2013-01-11T15:40:14Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { serial.write(toByteArray()); } catch (java.lang.Exception e) { throw new java.io.IOException(e); } finally { super.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1811/buggy-version/src.com.invertor.modbus.serial.SerialPort.java", "BodyUseAPI": ["com.invertor.modbus.serial.SerialPort.write(toByteArray())", "com.invertor.modbus.serial.SerialPort.1.toByteArray()"], "Fixed commit": "7dcf4e4a8f7f27ea42195bcb73f6f12fd446fcda", "Url": "https://api.github.com/repos/kochedykov/jlibmodbus", "Date": "2016-12-14T11:52:15Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { os.write(toByteArray()); os.flush(); } catch (java.lang.Exception e) { throw new java.io.IOException(e); } finally { super.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1811/buggy-version/src.com.invertor.modbus.net.stream.OutputStreamTCP.java", "BodyUseAPI": ["java.io.BufferedOutputStream.flush()", "java.io.BufferedOutputStream.write(toByteArray())", "com.invertor.modbus.net.stream.OutputStreamTCP.1.toByteArray()"], "Fixed commit": "7dcf4e4a8f7f27ea42195bcb73f6f12fd446fcda", "Url": "https://api.github.com/repos/kochedykov/jlibmodbus", "Date": "2016-12-14T11:52:15Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String stringLatitude = recList.get(0).get(SQLiteFields.CURRENT_LATITUDE); if (stringLatitude.equals(\"\")) { latitude = 0; }else { latitude = java.lang.Double.parseDouble(stringLatitude); } java.lang.String stringLongitude = recList.get(0).get(SQLiteFields.CURRENT_LONGITUDE); if (stringLongitude.equals(\"\")) { longitude = 0; }else { longitude = java.lang.Double.parseDouble(stringLongitude); } return new com.khasang.forecast.position.Coordinate(latitude, longitude); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4895/buggy-version/Forecast.app.src.main.java.com.khasang.forecast.sqlite.SQLiteProcessData.java", "BodyUseAPI": ["java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.String>>.get(int)", "java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.String>>.get(int)", "java.util.HashMap<java.lang.String, java.lang.String>.get(SQLiteFields.CURRENT_LONGITUDE)", "java.lang.String.equals(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(SQLiteFields.CURRENT_LATITUDE)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "07d243a01f15b1987a5076eedb1ec9429c9a04b5", "Url": "https://api.github.com/repos/khasang/SmartForecast", "Date": "2016-04-09T12:31:36Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { session = com.mendix.core.Core.login(username, password); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8763/buggy-version/javasource.restservices.publish.RestServiceRequest.java", "BodyUseAPI": ["com.mendix.core.Core.login(java.lang.String,java.lang.String)"], "Fixed commit": "5dc6a68e02f03ded13851a7ab9bedd179087f222", "Url": "https://api.github.com/repos/mendix/RestServices", "Date": "2014-06-20T18:19:40Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((((android.support.v4.content.ContextCompat.checkSelfPermission(view, Manifest.permission.READ_CONTACTS)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) && ((android.support.v4.content.ContextCompat.checkSelfPermission(view, Manifest.permission.PROCESS_OUTGOING_CALLS)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) && ((android.support.v4.content.ContextCompat.checkSelfPermission(view, Manifest.permission.READ_CALL_LOG)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) && ((android.support.v4.content.ContextCompat.checkSelfPermission(view, Manifest.permission.WRITE_CONTACTS)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { android.support.v4.app.ActivityCompat.requestPermissions(view, new java.lang.String[]{ Manifest.permission.PROCESS_OUTGOING_CALLS, Manifest.permission.READ_CONTACTS, Manifest.permission.WRITE_CONTACTS, Manifest.permission.READ_CALL_LOG, Manifest.permission.CALL_PHONE, Manifest.permission.SYSTEM_ALERT_WINDOW }, view.MY_PERMISSIONS_REQUEST); } } catch (java.lang.RuntimeException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3655/buggy-version/app.src.main.java.com.whois.whoiswho.activity.MainActivityPresenter.java", "BodyUseAPI": ["android.support.v4.content.ContextCompat.checkSelfPermission(com.whois.whoiswho.activity.MainActivity,Manifest.permission.READ_CONTACTS)", "android.support.v4.content.ContextCompat.checkSelfPermission(com.whois.whoiswho.activity.MainActivity,Manifest.permission.WRITE_CONTACTS)", "android.support.v4.content.ContextCompat.checkSelfPermission(com.whois.whoiswho.activity.MainActivity,Manifest.permission.PROCESS_OUTGOING_CALLS)", "android.support.v4.content.ContextCompat.checkSelfPermission(com.whois.whoiswho.activity.MainActivity,Manifest.permission.READ_CALL_LOG)", "android.support.v4.app.ActivityCompat.requestPermissions(com.whois.whoiswho.activity.MainActivity,java.lang.String[],view.MY_PERMISSIONS_REQUEST)"], "Fixed commit": "f3f253b35462f855dd35e04eaf11be978b99fb1e", "Url": "https://api.github.com/repos/Patrick7893/whoIsIt", "Date": "2016-09-05T09:51:10Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (se.slashat.slashapp.service.HighFiveService.hasToken()) { populate(true); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3941/buggy-version/slashat.se.src.main.java.se.slashat.slashapp.fragments.highfive.MyHighFiversFragment.java", "BodyUseAPI": ["se.slashat.slashapp.service.HighFiveService.hasToken()", "se.slashat.slashapp.fragments.highfive.MyHighFiversFragment.populate(boolean)"], "Fixed commit": "723d447d22f2619ba3c83946c7164b66836f30e5", "Url": "https://api.github.com/repos/Slashat/slashat-android", "Date": "2013-11-01T10:35:15Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (se.slashat.slashapp.service.HighFiveService.hasToken()) { populate(true); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3941/buggy-version/slashat.se.src.main.java.se.slashat.slashapp.fragments.highfive.HighfiveFragment.java", "BodyUseAPI": ["se.slashat.slashapp.service.HighFiveService.hasToken()", "se.slashat.slashapp.fragments.highfive.HighfiveFragment.populate(boolean)"], "Fixed commit": "723d447d22f2619ba3c83946c7164b66836f30e5", "Url": "https://api.github.com/repos/Slashat/slashat-android", "Date": "2013-11-01T10:35:15Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.concurrent.TimeUnit.MILLISECONDS.sleep(100); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2426/buggy-version/QuizDuelloCarboneColussoForest.src.model.Server.java", "BodyUseAPI": ["java.util.concurrent.TimeUnit.sleep(int)"], "Fixed commit": "9eceb1141d04c98b4bc6f0fd153285fc26d589d7", "Url": "https://api.github.com/repos/perfect4situa/QuizZello", "Date": "2017-11-20T10:43:42Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { prefixDir = mContext.getExternalFilesDir(null); } catch (java.lang.NullPointerException e) { android.util.Log.e(com.radicalninja.mybootx.Bootscreen.LOG_TAG, \"The external storage folder could not be accessed! Make sure you aren't creating this Bootscreen from withing Activity.onCreate()!\"); android.util.Log.i(com.radicalninja.mybootx.Bootscreen.LOG_TAG, (\"External Storage State: \" + (com.radicalninja.mybootx.Environment.getExternalStorageState()))); prefixDir = mContext.getFilesDir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1005/buggy-version/src.com.radicalninja.mybootx.Bootscreen.java", "BodyUseAPI": ["android.content.Context.getExternalFilesDir(<nulltype>)"], "Fixed commit": "d12954508683afd53562adf3018dd3b4eef5695b", "Url": "https://api.github.com/repos/geeksunny/MyBootX", "Date": "2013-12-15T05:28:19Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { t.setContent(((el.get(\"content\").getAsString()) == null ? \"\" : el.get(\"content\").getAsString())); } catch (java.lang.Exception e) { if (de.azapps.mirakel.Mirakel.DEBUG) { android.util.Log.d(de.azapps.mirakel.model.task.Task.TAG, \"Content=NULL?\"); } t.setContent(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2514/buggy-version/src.de.azapps.mirakel.model.task.Task.java", "BodyUseAPI": ["de.azapps.mirakel.model.task.Task.setContent(((el.get(\"content\").getAsString()) == null ? \"\" : el.get(\"content\").getAsString()))", "el.get(\"content\").getAsString()", "com.google.gson.JsonObject.get(java.lang.String)", "el.get(\"content\").getAsString()", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "c1a93f2d2f8f0efe161c1fb7f9e22b8ad1f241ce", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-05-15T17:12:45Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mEventsThread.start(); } catch (java.lang.Exception e) { android.util.Log.e(org.matrix.androidsdk.MXSession.LOG_TAG, (\"## startEventStream() : mEventsThread.start failed \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1292/buggy-version/matrix-sdk.src.main.java.org.matrix.androidsdk.MXSession.java", "BodyUseAPI": ["org.matrix.androidsdk.sync.EventsThread.start()"], "Fixed commit": "88916441efa5f00c3908386370e860e45a7bab4c", "Url": "https://api.github.com/repos/matrix-org/matrix-android-sdk", "Date": "2016-12-09T10:43:41Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { path = file.getLocation().makeAbsolute().toOSString(); } catch (java.lang.NullPointerException ex) { } finally { if (path == null) { path = entry.getPath().makeAbsolute().toOSString(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3938/buggy-version/src.com.laex.j2objc.preferences.ClasspathPropertyPage.java", "BodyUseAPI": ["file.getLocation().makeAbsolute()", "org.eclipse.core.resources.IFile.getLocation()", "file.getLocation().makeAbsolute().toOSString()"], "Fixed commit": "6435ff0650b3413cff4ce4f169ccd3c0bd654943", "Url": "https://api.github.com/repos/hemantasapkota/j2objc-eclipse-plugin", "Date": "2013-03-04T15:12:12Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { c = g.getOperations().getNodeColor(name.get()); } catch (uk.ac.cam.echo2016.multinarrative.GraphElementNotFoundException e) { c = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3032/buggy-version/src.main.java.uk.ac.cam.echo2016.multinarrative.gui.graph.GraphNode.java", "BodyUseAPI": ["javafx.beans.property.StringProperty.get()", "g.getOperations().getNodeColor(name.get())", "uk.ac.cam.echo2016.multinarrative.gui.graph.Graph.getOperations()"], "Fixed commit": "139a0ee6965da028af8eda0f3738aea8ae7652b2", "Url": "https://api.github.com/repos/echocam/dynamo", "Date": "2016-02-13T13:06:33Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String url = findElement(regionUrl, stationName).attr(\"href\"); url = \"http://www.bom.gov.au\".concat(url); currentUser.addFavorite(new model.WeatherStation(stationName, url)); } catch (java.io.IOException e) { theLogger.log(java.util.logging.Level.FINE, \"Failed to get data\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7788/buggy-version/src.model.Model.java", "BodyUseAPI": ["org.jsoup.nodes.Element.attr(java.lang.String)", "model.User.addFavorite(model.WeatherStation)", "model.Model.findElement(java.lang.String,java.lang.String)", "java.lang.String.concat(java.lang.String)"], "Fixed commit": "8ba51a1af1dc9e987d61e4e0053d419b3ba9976a", "Url": "https://api.github.com/repos/rmit-s3485426-jayden-bayangosbrandt/SE-P-T", "Date": "2016-05-26T05:55:11Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String sq = command.split(\" \")[1]; if (run.Main.checkMoveString(sq)) { material.Square square = run.Main.algebraicToPos(sq.toLowerCase().substring(0, 1), java.lang.Integer.parseInt(sq.substring(1))); material.Piece p; if ((p = run.Main.board.getSquare(square)) != null) { for (material.Square s : p.getValidMoves(run.Main.board, false)) { java.lang.System.out.println(s); } }else { java.lang.System.out.println(\"No piece on square.\"); } }else { java.lang.System.out.println(\"Please enter a valid square.\"); } } catch (java.lang.Exception e) { java.lang.System.out.println(\"Please enter a valid square.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7117/buggy-version/src.run.Main.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "material.Piece.getValidMoves(material.Board,boolean)", "java.io.PrintStream.println(material.Square)", "java.io.PrintStream.println(java.lang.String)", "java.lang.String.substring(int,int)", "material.Board.getSquare(material.Square)", "run.Main.algebraicToPos(java.lang.String,int)", "java.lang.String.substring(int)", "run.Main.checkMoveString(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.lang.String.toLowerCase()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "ae2b6702c073dce43c8993f5738011241e68602f", "Url": "https://api.github.com/repos/philosophe/ConsoleChess", "Date": "2011-11-24T17:48:36Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { progressDialog.dismiss(); } catch (java.lang.Exception ex) { com.yandex.metrica.YandexMetrica.reportError(\"progressDialog\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5991/buggy-version/app.src.main.java.org.stepic.droid.util.ProgressHelper.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "7ac44c5b52f6d52dd243d49b9208b24a77cd6d8f", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2016-02-06T08:35:11Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ccrequest.updateCC(content_path, extractPercentFinished(history_dir, content_path)); } catch (java.lang.Exception e) { log((\"E: \" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3058/buggy-version/src.com.github.chrox.kpvbooklet.KPVBooklet.java", "BodyUseAPI": ["com.github.chrox.kpvbooklet.KPVBooklet.ReaderWaitThread.extractPercentFinished(java.lang.String,java.lang.String)", "com.github.chrox.kpvbooklet.ccadapter.CCAdapter.updateCC(java.lang.String,float)"], "Fixed commit": "c7ec1c370f980e212198b5fa0c00ebeabb1013f6", "Url": "https://api.github.com/repos/koreader/kpvbooklet", "Date": "2013-04-16T07:15:59Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (sysIn.hasNext()) { probNumber = sysIn.nextInt(); } } catch (java.util.InputMismatchException ex) { java.lang.System.out.println(\"ERROR: Not a number.\"); sysIn.nextLine(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2840/buggy-version/ProjectEuler.src.projecteuler.ProjectEuler.java", "BodyUseAPI": ["java.util.Scanner.nextInt()", "java.util.Scanner.hasNext()"], "Fixed commit": "341bc6881196c59b7be83fdd22202d45e9bac413", "Url": "https://api.github.com/repos/tylergaravaglia/ProjectEuler", "Date": "2017-07-26T02:50:06Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.springframework.http.ResponseEntity<java.lang.String> responseEntity = requestIntegers(number); if (successful(responseEntity)) { java.util.List<java.lang.Integer> integers = convertToIntegers(responseEntity.getBody()); return java.util.Optional.of(integers); } } catch (java.lang.Throwable e) { java.lang.System.out.println((\"RandomDiceService::Error:\" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1254/buggy-version/src.main.java.snakeeyes.RandomDiceService.java", "BodyUseAPI": ["snakeeyes.RandomDiceService.successful(org.springframework.http.ResponseEntity<java.lang.String>)", "snakeeyes.RandomDiceService.convertToIntegers(responseEntity.getBody())", "org.springframework.http.ResponseEntity<java.lang.String>.getBody()", "java.util.Optional.of(java.util.List<java.lang.Integer>)", "snakeeyes.RandomDiceService.requestIntegers(int)"], "Fixed commit": "48fd89484b20ba60e1ac34e495194e3f5d990d3d", "Url": "https://api.github.com/repos/d5andy/dice-game", "Date": "2017-07-05T07:51:35Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.codenergic.theskeleton.user.UserEntity user = registrationService.registerUser(registrationForm); if ((user != null) && ((user.getId()) != null)) { java.lang.String host = ((httpServletRequest.getServerName()) + \":\") + (httpServletRequest.getServerPort()); registrationService.sendConfirmationNotification(user, host); } } catch (org.codenergic.theskeleton.registration.RegistrationException e) { bindingResult.rejectValue(\"username\", \"error.registrationForm\", e.getMessage()); return registrationView(registrationForm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3683/buggy-version/src.main.java.org.codenergic.theskeleton.registration.RegistrationController.java", "BodyUseAPI": ["org.codenergic.theskeleton.registration.RegistrationService.sendConfirmationNotification(org.codenergic.theskeleton.user.UserEntity,java.lang.String)", "javax.servlet.http.HttpServletRequest.getServerName()", "org.codenergic.theskeleton.user.UserEntity.getId()", "javax.servlet.http.HttpServletRequest.getServerPort()", "org.codenergic.theskeleton.registration.RegistrationService.registerUser(org.codenergic.theskeleton.registration.RegistrationForm)"], "Fixed commit": "2e6bbf1676fffebe4d9d97544629335be582310d", "Url": "https://api.github.com/repos/codenergic/theskeleton", "Date": "2017-09-16T11:40:29Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sendResponse(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2570/buggy-version/server.src.com.chiorichan.http.HttpResponse.java", "BodyUseAPI": ["com.chiorichan.http.HttpResponse.sendResponse()"], "Fixed commit": "ee8a1c0b9a1346f9a86b05a6d5e584ce3c2421e7", "Url": "https://api.github.com/repos/ChioriGreene/ChioriWebServer", "Date": "2014-01-13T17:41:20Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final int exitValue = executor.execute(cmdLine); java.lang.System.out.println(); return exitValue; } catch (org.apache.commons.exec.ExecuteException e) { java.lang.System.out.println(\"Process timed out.\"); return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3802/buggy-version/trainbenchmark-tool.src.main.java.hu.bme.mit.trainbenchmark.benchmark.runner.BenchmarkRunner.java", "BodyUseAPI": ["java.io.PrintStream.println()", "org.apache.commons.exec.Executor.execute(org.apache.commons.exec.CommandLine)"], "Fixed commit": "456520dc1f7340bf7881e9045ec1da8f8854764a", "Url": "https://api.github.com/repos/FTSRG/trainbenchmark", "Date": "2016-06-29T16:08:01Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { lapTime = ((com.example.chow.minigamemarathon.GameContainerFragment) (getParentFragment())).timer.getLapTimeElapsed(); } catch (java.lang.ClassCastException e) { android.util.Log.d(com.example.chow.minigamemarathon.BinaryGameFragment.TAG, \"notifyGameEnd: there is no timer\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6401/buggy-version/app.src.main.java.com.example.chow.minigamemarathon.BinaryGameFragment.java", "BodyUseAPI": ["com.example.chow.minigamemarathon.BinaryGameFragment.getParentFragment()", "((com.example.chow.minigamemarathon.GameContainerFragment) (getParentFragment())).timer.getLapTimeElapsed()"], "Fixed commit": "511d19654ee8586b2616d1849eff69df619dbdfa", "Url": "https://api.github.com/repos/TheCompSciNoob/MinigameMarathon", "Date": "2017-12-14T20:36:31Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String decodedStr = new java.lang.String(org.bouncycastle2.util.encoders.Base64.decode(appMessage.getBytes()), \"UTF-8\"); final java.lang.String urlDecoded = java.net.URLDecoder.decode(decodedStr, \"UTF-8\"); webView.post(new java.lang.Runnable() { @java.lang.Override public void run() { webView.loadUrl(((\"javascript:clientTool.unescapedMsg(unescape('\" + urlDecoded) + \"'))\")); } }); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1727/buggy-version/app.src.main.java.org.votingsystem.activity.BrowserVSActivity.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)", "java.lang.Object()", "android.webkit.WebView.post(java.lang.Runnable)", "java.lang.String.getBytes()", "org.bouncycastle2.util.encoders.Base64.decode(byte[])", "android.webkit.WebView.loadUrl(java.lang.String)"], "Fixed commit": "a5aaedfa518c8f547da763b3653d2e66c6f6c349", "Url": "https://api.github.com/repos/votingsystem/votingsystem-android-client", "Date": "2015-11-05T19:30:59Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { datastore.put(soundingsEntity); } catch (com.google.apphosting.api.ApiProxy e) { net.exent.flywithme.NoaaProxy.log.warning(\"Unable to cache sounding, peculiar 'RequestTooLargeException' exception caught\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3498/buggy-version/appengine.src.net.exent.flywithme.NoaaProxy.java", "BodyUseAPI": ["net.exent.flywithme.DatastoreService.put(net.exent.flywithme.Entity)"], "Fixed commit": "897386af6f0bb004c0d93c1a8c4947bc8eb521b7", "Url": "https://api.github.com/repos/canidae/FlyWithMe", "Date": "2014-08-08T18:41:55Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { datastore.put(meteogramsEntity); } catch (com.google.apphosting.api.ApiProxy e) { net.exent.flywithme.NoaaProxy.log.warning(\"Unable to cache meteogram, peculiar 'RequestTooLargeException' exception caught\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3498/buggy-version/appengine.src.net.exent.flywithme.NoaaProxy.java", "BodyUseAPI": ["net.exent.flywithme.DatastoreService.put(net.exent.flywithme.Entity)"], "Fixed commit": "897386af6f0bb004c0d93c1a8c4947bc8eb521b7", "Url": "https://api.github.com/repos/canidae/FlyWithMe", "Date": "2014-08-08T18:41:55Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5451/buggy-version/app.src.main.java.com.example.jjamie.virtualadhoc.ConnectionManager.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "540c2383ef85239a5b768f9693b4d58563272713", "Url": "https://api.github.com/repos/JJamiie/VirtualAdhoc", "Date": "2016-02-21T16:46:35Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = new org.qii.weiciyuan.dao.send.StatusNewMsgDao(token).setPic(picPath).sendNewMsg(content); } catch (org.qii.weiciyuan.support.error.WeiboException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5304/buggy-version/src.org.qii.weiciyuan.othercomponent.PhotoUploadService.java", "BodyUseAPI": ["new org.qii.weiciyuan.dao.send.StatusNewMsgDao(token).setPic(picPath).sendNewMsg(java.lang.String)", "org.qii.weiciyuan.dao.send.StatusNewMsgDao.setPic(java.lang.String)"], "Fixed commit": "cb795635a5f5baca63bbef5203dcbc8f9ff6cc78", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-02T05:21:26Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.anysoftkeyboard.ui.dev.DeveloperUtils.startTracing(); android.widget.Toast.makeText(getApplicationContext(), R.string.debug_tracing_starting, Toast.LENGTH_SHORT).show(); } catch (java.lang.Exception e) { e.printStackTrace(); android.widget.Toast.makeText(getApplicationContext(), R.string.debug_tracing_starting_failed, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/349/buggy-version/src.com.anysoftkeyboard.AnySoftKeyboard.java", "BodyUseAPI": ["android.widget.Toast.makeText(getApplicationContext(),R.string.debug_tracing_starting,Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(getApplicationContext(), R.string.debug_tracing_starting, Toast.LENGTH_SHORT).show()", "com.anysoftkeyboard.AnySoftKeyboard.getApplicationContext()", "com.anysoftkeyboard.ui.dev.DeveloperUtils.startTracing()"], "Fixed commit": "0d5cbca28ab0b478e85ce5320f04794ee86a4225", "Url": "https://api.github.com/repos/AnySoftKeyboard/AnySoftKeyboard", "Date": "2013-04-18T00:03:59Z"},
{"Line": "=>629", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { br.com.carlosrafaelgn.fplay.playback.Player.thread.join(3750); } catch (java.lang.Throwable ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3553/buggy-version/src.br.com.carlosrafaelgn.fplay.playback.Player.java", "BodyUseAPI": ["java.lang.Thread.join(int)"], "Fixed commit": "389547e985a1e5570b8b639e649632c9bd5bef6d", "Url": "https://api.github.com/repos/carlosrafaelgn/FPlayAndroid", "Date": "2017-05-28T14:29:02Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4744/buggy-version/reactivesocket-tck-drivers.src.main.java.io.reactivesocket.tckdrivers.client.JavaClientDriver.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "cc01d36e1190caabae9cdc11b9ef97b42382cce6", "Url": "https://api.github.com/repos/xytosis/reactivesocket-java", "Date": "2016-07-30T23:41:40Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { serializePriorityDatabase(); } catch (java.io.IOException e) { de.netprojectev.server.model.PreferencesModelServer.log.log(java.util.logging.Level.WARNING, \"Error writing priorities to disk.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8175/buggy-version/BeamerLibrary.src.de.netprojectev.server.model.PreferencesModelServer.java", "BodyUseAPI": ["de.netprojectev.server.model.PreferencesModelServer.serializePriorityDatabase()"], "Fixed commit": "dbe0adec3a19d41e571cfe85ab66ed3eba00c72d", "Url": "https://api.github.com/repos/sMau/Beamer", "Date": "2015-03-03T14:19:11Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((!(location.equals(\"false\"))) && (!(location.equals(\"\")))) { java.lang.String map = \"geo:0,0?q=\" + location; android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(map)); context.startActivity(intent); } } catch (java.lang.Exception e) { android.widget.Toast.makeText(context, R.string.toast_no_map, Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7149/buggy-version/app.src.main.java.com.odoo.core.utils.IntentUtils.java", "BodyUseAPI": ["android.content.Context.startActivity(android.content.Intent)", "java.lang.String.equals(java.lang.String)", "android.net.Uri.parse(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "336d9340a8cdeefa6497e295a7681fc4740473b3", "Url": "https://api.github.com/repos/mikedream89/crm", "Date": "2016-03-08T06:24:13Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int inputNumber = java.lang.Integer.parseInt(userInput); if (library.returnBook(java.lang.Integer.parseInt(userInput))) { printStream.println(\"Thank you for returning the book.\"); }else { printStream.println(\"That is not a valid book to return\"); } } catch (java.lang.NumberFormatException e) { printStream.println(\"Invalid input given\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3977/buggy-version/src.com.twu.biblioteca.ReturnBookOption.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "com.twu.biblioteca.Library.returnBook(int)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "a3e067eb575ea2178bda328b1ee0e5d5a8399a08", "Url": "https://api.github.com/repos/archana-khanal/twu-biblioteca-archanakhanal", "Date": "2017-09-28T05:00:56Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int inputNumber = java.lang.Integer.parseInt(userInput); if (library.checkOutBook(java.lang.Integer.parseInt(userInput))) { printStream.println(\"Thank you! Enjoy the Book.\"); }else { printStream.println(\"That book is not available\"); } } catch (java.lang.NumberFormatException e) { printStream.println(\"Invalid input given\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3977/buggy-version/src.com.twu.biblioteca.CheckOutBookOption.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "com.twu.biblioteca.Library.checkOutBook(int)"], "Fixed commit": "a3e067eb575ea2178bda328b1ee0e5d5a8399a08", "Url": "https://api.github.com/repos/archana-khanal/twu-biblioteca-archanakhanal", "Date": "2017-09-28T05:00:56Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.BufferedReader br = new java.io.BufferedReader(new java.io.FileReader(\"shapes\")); java.lang.StringBuilder sb = new java.lang.StringBuilder(); java.lang.String line = br.readLine(); while (line != null) { sb.append(line); sb.append(\"\\n\"); line = br.readLine(); } } catch (java.lang.Exception ex) { java.lang.System.out.println(\"Loading error, StackTrace:\"); ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8615/buggy-version/ANPaint.src.anpaint.DrawPanel.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.io.BufferedReader.readLine()"], "Fixed commit": "f92f9444155fd5382312d27cee953f810836c362", "Url": "https://api.github.com/repos/nbguzman/Drawing-Application", "Date": "2013-04-07T16:48:04Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { m.printMessage(javax.tools.Diagnostic.Kind.WARNING, \"About to touch Data.class for the first time!\"); els = roundEnv.getElementsAnnotatedWith(de.hsrm.cs.jscala.Data.class); } catch (java.lang.Exception e) { de.hsrm.cs.jscala.helpers.Dbg.printException(processingEnv, e); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8040/buggy-version/annotation-processor.src.de.hsrm.cs.jscala.AdtGen.java", "BodyUseAPI": ["javax.annotation.processing.RoundEnvironment.getElementsAnnotatedWith(java.lang.Class)", "javax.annotation.processing.Messager.printMessage(javax.tools.Diagnostic.Kind,java.lang.String)"], "Fixed commit": "fc6cf188d81618a19d9342e6ab83860cb5e23f35", "Url": "https://api.github.com/repos/AndreiBarsan/FunJava", "Date": "2014-02-17T15:39:46Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { kylinConfig.getCliCommandExecutor().execute(yarnCmd); } catch (java.lang.Exception ex) { org.apache.kylin.tool.JobDiagnosisInfoCLI.logger.warn(\"Failed to get yarn logs. \", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8461/buggy-version/tool.src.main.java.org.apache.kylin.tool.JobDiagnosisInfoCLI.java", "BodyUseAPI": ["kylinConfig.getCliCommandExecutor().execute(java.lang.String)", "org.apache.kylin.common.KylinConfig.getCliCommandExecutor()"], "Fixed commit": "74fc2d9c57825770fa736e89e8119a17d53b63c0", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2016-05-13T07:55:45Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.jetbrains.plugins.github.GithubUtil.testConnection(auth, login); } catch (org.jetbrains.plugins.github.JsonException e) { throw new org.apache.commons.httpclient.auth.AuthenticationException(\"Can't get user info\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6521/buggy-version/plugins.github.src.org.jetbrains.plugins.github.GithubUtil.java", "BodyUseAPI": ["org.jetbrains.plugins.github.GithubUtil.testConnection(org.jetbrains.plugins.github.GithubAuthData,java.lang.String)"], "Fixed commit": "93c4520cc665c5dbd4c16d8ec157166860fa1753", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2013-07-17T08:58:05Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (int i = 1; i < 3; i++) { temp = g.getPiece(getx(), ((gety()) + (i * w))); if (temp instanceof NullPiece) { moves.add(new Coordinate(getx(), ((gety()) + (i * w)))); } } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5833/buggy-version/Chess1.Pawn.java", "BodyUseAPI": ["Pawn.add(Coordinate)", "GameBoard.getPiece(getx(),((gety()) + (i * w)))", "Pawn.gety()", "Pawn.getx()", "Pawn.gety()", "Pawn.getx()"], "Fixed commit": "378c40776046195e84ec97f13b9a31d843716c5a", "Url": "https://api.github.com/repos/devendrashivraj/pd1-ChessAI-Wei-Wang-Shivraj", "Date": "2014-06-15T22:12:43Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { super.attachBaseContext(base); android.support.multidex.MultiDex.install(this); } catch (java.lang.RuntimeException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7641/buggy-version/app.src.main.java.dev.blunch.blunch.MyApplication.java", "BodyUseAPI": ["android.support.multidex.MultiDex.install(dev.blunch.blunch.MyApplication)", "android.app.Application.attachBaseContext(android.content.Context)"], "Fixed commit": "61fe2e39e66bd9f0046fe0e4810ea3f96bd9f609", "Url": "https://api.github.com/repos/BlunchDev/blunch_android", "Date": "2016-05-19T17:12:31Z"},
{"Line": "=>2734", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { is = inputUrl.openStream(); sorcer.util.GenericUtil.redirectInputStream2File(is, localInputFile); } catch (java.lang.Exception e) { if (is != null) is.close(); throw e; } finally { if (is != null) is.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5780/buggy-version/core.sorcer-platform.src.main.java.sorcer.util.GenericUtil.java", "BodyUseAPI": ["java.net.URL.openStream()", "sorcer.util.GenericUtil.redirectInputStream2File(java.io.InputStream,java.io.File)"], "Fixed commit": "d21d4405d39c9331adb268d9cf0ad577b4c51043", "Url": "https://api.github.com/repos/mwsobol/SORCER", "Date": "2017-05-01T16:56:48Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Class.forName(\"org.spigotmc.CustomTimingsHandler\"); } catch (java.lang.ClassNotFoundException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4133/buggy-version/src.main.java.com.lenis0012.bukkit.ls.util.SpigotUtil.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)"], "Fixed commit": "231e87a6b38289bc45481375f05a83130d5082c7", "Url": "https://api.github.com/repos/lenis0012/LoginSecurity-2", "Date": "2015-05-25T20:30:41Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.reflect.Method startAsyncMethod = req.getClass().getMethod(\"startAsync\"); async = ((javax.servlet.AsyncContext) (startAsyncMethod.invoke(req))); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3355/buggy-version/core.src.main.java.org.fourthline.cling.transport.impl.AsyncServletStreamServerImpl.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(javax.servlet.http.HttpServletRequest)", "req.getClass().getMethod(java.lang.String)", "javax.servlet.http.HttpServletRequest.getClass()"], "Fixed commit": "4522d1efe29078321f8e78162d823e503e569546", "Url": "https://api.github.com/repos/rzwuhan/cling", "Date": "2017-05-08T04:25:44Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(5000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7063/buggy-version/src.VideoManager.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "c528809241b74171ba4010e45f7ad217117e4000", "Url": "https://api.github.com/repos/kevuno/Offline-Streamer", "Date": "2016-07-15T05:40:42Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return (context.getPackageManager().getPackageInfo(\"com.tmobile.pr.mytmobile\", 0)) != null; } catch (android.content.pm.PackageManager e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3233/buggy-version/src.com.android.settings.PrivacySettings.java", "BodyUseAPI": ["context.getPackageManager().getPackageInfo(java.lang.String,int)", "android.content.Context.getPackageManager()"], "Fixed commit": "8123deb2fae6474682a1739cf9b92ca342656b74", "Url": "https://api.github.com/repos/Citrus-CAF/packages_apps_Settings", "Date": "2016-12-20T22:01:55Z"},
{"Line": "=>1368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mEventBus.register(mBusEventListener); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8082/buggy-version/app.src.main.java.acr.browser.lightning.activity.BrowserActivity.java", "BodyUseAPI": ["com.squareup.otto.Bus.register(java.lang.Object)"], "Fixed commit": "87f93527be1907af0d161320c5b0af2182dc0ebc", "Url": "https://api.github.com/repos/toandrew/Lightning-Browser", "Date": "2016-07-31T13:41:39Z"},
{"Line": "=>1280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mEventBus.unregister(mBusEventListener); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8082/buggy-version/app.src.main.java.acr.browser.lightning.activity.BrowserActivity.java", "BodyUseAPI": ["com.squareup.otto.Bus.unregister(java.lang.Object)"], "Fixed commit": "87f93527be1907af0d161320c5b0af2182dc0ebc", "Url": "https://api.github.com/repos/toandrew/Lightning-Browser", "Date": "2016-07-31T13:41:39Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { database.execSQL(com.sbbs.me.android.database.PrivateMessageDatabase.SQL_MESSAGES); } catch (java.lang.Exception e) { android.util.Log.e(\"PrivateMessageDatabase\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6247/buggy-version/SbbsMeClient.src.com.sbbs.me.android.database.PrivateMessageDatabase.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)"], "Fixed commit": "c8c986275dde1b9d2f33accfd4b3e97938e34734", "Url": "https://api.github.com/repos/baijian/root-tools", "Date": "2013-08-14T15:51:18Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cursor = db.query(true, \"pokemon\", new java.lang.String[]{ \"id\", \"nickname\", \"pv\" }, where, null, null, null, \"nickname\", null); } catch (android.database.sqlite.SQLiteException e) { android.util.Log.e(\"Pokedeck\", (\"Error on query : \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1391/buggy-version/app.src.main.java.com.pokedeck.imie.pokedeck.entity.Pokedeck.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.query(boolean,java.lang.String,java.lang.String[],java.lang.String,<nulltype>,<nulltype>,<nulltype>,java.lang.String,<nulltype>)"], "Fixed commit": "37e2d5441853a7f77774ce93699643800047177f", "Url": "https://api.github.com/repos/fabfromsky/Pokedeck", "Date": "2016-06-20T14:10:22Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { intent.putExtra(PluginIntentResolver.ACTIVITY_ACTION_IN_PLUGIN, className); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3525/buggy-version/PluginCore.src.com.plugin.core.PluginInstrumentionWrapper.java", "BodyUseAPI": ["android.content.Intent.putExtra(PluginIntentResolver.ACTIVITY_ACTION_IN_PLUGIN,java.lang.String)"], "Fixed commit": "d2f02822186029653a4494f60fc4f1e587cdc328", "Url": "https://api.github.com/repos/limpoxe/Android-Plugin-Framework", "Date": "2015-10-10T01:23:04Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { clip.stop(); } catch (java.lang.IllegalArgumentException e) { device = false; java.lang.System.out.println(\"no device to play audio from\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/204/buggy-version/src.main.java.utillities.Sound.java", "BodyUseAPI": ["javax.sound.sampled.Clip.stop()"], "Fixed commit": "774e8fe08b286eef90865eaa99871e4d0f3d249b", "Url": "https://api.github.com/repos/arjanvanschendel/KauwgombalMisere", "Date": "2015-10-05T15:30:58Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { post.businessProfilePictureId = jsonObject.getInt(Params.BUSINESS_PROFILE_PICUTE_ID_INT); post.businessIdentifier = jsonObject.getString(Params.BUSINESS_ID_STRING); post.businessUserName = post.businessIdentifier; } catch (java.lang.Exception e1) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7818/buggy-version/app.src.main.java.ir.rasen.charsoo.controller.object.Post.java", "BodyUseAPI": ["org.json.JSONObject.getInt(Params.BUSINESS_PROFILE_PICUTE_ID_INT)", "org.json.JSONObject.getString(Params.BUSINESS_ID_STRING)"], "Fixed commit": "e89d6445f6c6470459646fee89720ebe29c21a84", "Url": "https://api.github.com/repos/rasenir/charsoo", "Date": "2015-07-12T09:55:10Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.List<fr.lesmenusdumarche.lesmenusdumarche.domain.NavigationStep> steps = stepsRequest.execute().body(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/506/buggy-version/app.src.main.java.fr.lesmenusdumarche.lesmenusdumarche.activity.MainActivity.java", "BodyUseAPI": ["stepsRequest.execute().body()", "retrofit2.Call<java.util.List<fr.lesmenusdumarche.lesmenusdumarche.domain.NavigationStep>>.execute()"], "Fixed commit": "d8274f72c3b36e7dc920e9c5384208edbabf3497", "Url": "https://api.github.com/repos/LesMenusDuMarche/androidApp", "Date": "2016-03-21T16:15:37Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { currentVersion = ((java.lang.Integer) (this.getClass().getField(\"CURRENT_CLASS_VERSION\").get(this))); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8543/buggy-version/bpel-nobj.src.main.java.org.apache.ode.bpel.obj.ExtensibleImpl.java", "BodyUseAPI": ["java.lang.reflect.Field.get(org.apache.ode.bpel.obj.ExtensibleImpl)", "org.apache.ode.bpel.obj.ExtensibleImpl.getClass()", "java.lang.Class<? extends org.apache.ode.bpel.obj.ExtensibleImpl>.getField(java.lang.String)"], "Fixed commit": "32fa79b34bff66079ff1b1f2e978ba5297309726", "Url": "https://api.github.com/repos/fangzhen/ode", "Date": "2014-08-09T13:26:06Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { currentVersion = ((java.lang.Integer) (eobj.getClass().getField(\"CURRENT_CLASS_VERSION\").get(obj))); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8543/buggy-version/bpel-nobj.src.main.java.org.apache.ode.bpel.obj.migrate.UpgradeChecker.java", "BodyUseAPI": ["org.apache.ode.bpel.obj.ExtensibleImpl.getClass()", "eobj.getClass().getField(java.lang.String)", "eobj.getClass().getField(\"CURRENT_CLASS_VERSION\").get(java.lang.Object)"], "Fixed commit": "32fa79b34bff66079ff1b1f2e978ba5297309726", "Url": "https://api.github.com/repos/fangzhen/ode", "Date": "2014-08-09T13:26:06Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { sp = new edu.wpi.first.wpilibj.SerialPort(115200, edu.wpi.first.wpilibj.SerialPort.Port.kUSB); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8558/buggy-version/src.org.usfirst.frc.team95.robot.ArduPilotAthenaInputStream.java", "BodyUseAPI": [], "Fixed commit": "c9babc849bc472ba1f3dda882cad9ad1dd086584", "Url": "https://api.github.com/repos/first95/FRC2016", "Date": "2016-02-16T00:32:14Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((progressDialog) != null) { progressDialog.cancel(); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/320/buggy-version/app.src.main.java.com.vis.utilities.WebServiceUtility.java", "BodyUseAPI": ["android.app.ProgressDialog.cancel()"], "Fixed commit": "b194f6058d52834495e6c23d5c7a53c986fea743", "Url": "https://api.github.com/repos/HuzefaGadi/VideoInShortNative", "Date": "2016-01-14T12:22:06Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { loadScenario(scenario); } catch (jade.wrapper.StaleProxyException e) { logger.log(Logger.WARNING, e.getMessage(), e); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3524/buggy-version/src.main.java.maas.main.Start.java", "BodyUseAPI": ["maas.main.Start.loadScenario(java.lang.String)"], "Fixed commit": "a3095efe7eaa5d8f595eaefb22fab098a17f4dde", "Url": "https://api.github.com/repos/HBRS-MAAS/project-pieceofcake", "Date": "2017-12-04T01:23:22Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.task.init(); } catch (java.lang.Throwable t) { handle.finish(); handle = null; throw t; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8022/buggy-version/src.main.java.qubexplorer.ui.task.TaskExecutor.java", "BodyUseAPI": ["qubexplorer.ui.task.Task<T>.init()"], "Fixed commit": "da1917bc665783d33fc05caff82fe1b0ddb66867", "Url": "https://api.github.com/repos/hmvictor/radar-netbeans", "Date": "2017-05-25T05:53:09Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.content.Intent intent = new android.content.Intent(this, com.project.unibibliotek.DetailedActivity.class); com.project.unibibliotek.model.Book book = booksList.get(pos); com.project.unibibliotek.ObjectsSharer.setBook(book); startActivity(intent); } catch (java.lang.Exception e) { android.util.Log.e(\"DetailedActivity\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/9099/buggy-version/UniBibliotek.src.com.project.unibibliotek.ResultsActivity.java", "BodyUseAPI": ["java.util.List<com.project.unibibliotek.model.Book>.get(int)", "com.project.unibibliotek.ObjectsSharer.setBook(com.project.unibibliotek.model.Book)", "com.project.unibibliotek.ResultsActivity.startActivity(android.content.Intent)"], "Fixed commit": "561ab56b7d044a76961a6b1be25f93a9d5f97279", "Url": "https://api.github.com/repos/ckoryom/unibibliotek", "Date": "2014-04-25T17:01:00Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { manager.connect(parameters[1], null, null); } catch (ua.com.juja.eugene.sqlcmd.model.DatabaseManagerException e) { manager.connect(\"\", null, null); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6392/buggy-version/src.main.java.ua.com.juja.eugene.sqlcmd.controller.command.Connect.java", "BodyUseAPI": ["ua.com.juja.eugene.sqlcmd.controller.command.Connect.connect(java.lang.String,<nulltype>,<nulltype>)"], "Fixed commit": "399815737ae0b6188dad786b72fcb5ba680f12e7", "Url": "https://api.github.com/repos/jenchenUA/SQLCmd", "Date": "2016-03-24T10:24:38Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.resultSize = java.lang.Integer.parseInt(getProperty(org.apache.zeppelin.elasticsearch.ElasticsearchInterpreter.ELASTICSEARCH_RESULT_SIZE)); } catch (java.lang.NumberFormatException e) { this.resultSize = 10; org.apache.zeppelin.elasticsearch.ElasticsearchInterpreter.logger.error((((\"Unable to parse \" + (org.apache.zeppelin.elasticsearch.ElasticsearchInterpreter.ELASTICSEARCH_RESULT_SIZE)) + \" : \") + (property.get(org.apache.zeppelin.elasticsearch.ElasticsearchInterpreter.ELASTICSEARCH_RESULT_SIZE))), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5408/buggy-version/elasticsearch.src.main.java.org.apache.zeppelin.elasticsearch.ElasticsearchInterpreter.java", "BodyUseAPI": ["java.lang.Integer.parseInt(getProperty(org.apache.zeppelin.elasticsearch.ElasticsearchInterpreter.ELASTICSEARCH_RESULT_SIZE))", "org.apache.zeppelin.elasticsearch.ElasticsearchInterpreter.getProperty(java.lang.String)"], "Fixed commit": "331eae685f496fc1634f7358d7f51a46fd2b4891", "Url": "https://api.github.com/repos/AhyoungRyu/zeppelin", "Date": "2016-07-13T04:12:29Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (response.contains(\"<?xml\")) { update = com.pindroid.client.Update.valueOf(response); }else { android.util.Log.e(com.pindroid.client.PinboardApi.TAG, \"Server error in fetching bookmark list\"); throw new java.io.IOException(); } } catch (java.lang.Exception e) { android.util.Log.e(com.pindroid.client.PinboardApi.TAG, \"Server error in fetching bookmark list\"); throw new java.io.IOException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4188/buggy-version/src.com.pindroid.client.PinboardApi.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "com.pindroid.client.Update.valueOf(java.lang.String)", "android.util.Log.e(java.lang.String,java.lang.String)"], "Fixed commit": "5f74525180381c1bff1ca925c305ace9bb794297", "Url": "https://api.github.com/repos/maxpower47/PinDroid", "Date": "2011-06-22T18:49:22Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (java.io.File workingFile : folder.listFiles()) { if (workingFile.isDirectory()) { recList.addAll(recFileFind(workingFile, contains)); if (workingFile.getName().toLowerCase().contains(contains.toLowerCase())) { recList.add(workingFile); } }else { if (workingFile.getName().toLowerCase().contains(contains.toLowerCase())) { recList.add(workingFile); } } } } catch (java.lang.NullPointerException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8121/buggy-version/src.CommandTable.CommandTable.java", "BodyUseAPI": ["CommandTable.CommandTable.recFileFind(java.io.File,java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.util.LinkedList<java.io.File>.addAll(java.util.LinkedList<java.io.File>)", "java.lang.String.toLowerCase()", "java.lang.String.toLowerCase()", "java.io.File.getName()", "java.io.File.isDirectory()", "java.lang.String.contains(java.lang.String)", "java.util.LinkedList<java.io.File>.add(java.io.File)", "java.lang.String.toLowerCase()", "java.io.File.getName()", "java.io.File.listFiles()", "java.lang.String.toLowerCase()", "java.util.LinkedList<java.io.File>.add(java.io.File)"], "Fixed commit": "3840e6e07ebfd777224624b77c5770ddb0eb966b", "Url": "https://api.github.com/repos/bgeraci714/java-terminal", "Date": "2017-05-15T03:00:15Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { doSetFieldValue(newValue); } finally { settingValueFromControl = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4901/buggy-version/plugin_ide.ui.src-lang.melnorme.util.swt.components.AbstractField.java", "BodyUseAPI": ["melnorme.util.swt.components.AbstractField<VALUE>.doSetFieldValue(VALUE)"], "Fixed commit": "8f345840884f6a3e5b1c32192a6136f7ac4a8d98", "Url": "https://api.github.com/repos/RustDT/RustDT", "Date": "2015-05-20T18:49:54Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return playerID < (scores.length) ? java.lang.Integer.parseInt(scores[playerID]) : java.lang.Integer.parseInt(scores[0]); } catch (java.lang.Exception e) { core.logging.Logger.getInstance().addMessage(new core.logging.Message(core.logging.Message.WARNING, ((\"scoreChange must be an integer number not \" + (scoreChange)) + \".\"))); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6052/buggy-version/src.ontology.effects.Effect.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "4413f492c9a946d39ac8080ca0eefdc4b24d6c97", "Url": "https://api.github.com/repos/mcgreentn/gvgai-myFork", "Date": "2017-04-03T05:18:22Z"},
{"Line": "=>645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return storedPw.equals(password); } catch (java.lang.Exception ex) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2910/buggy-version/src.at.jku.se.eatemup.core.Engine.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "afc5ac255e7f3b1b91312979bebc66aafcc531d6", "Url": "https://api.github.com/repos/marce155/eat-em-up", "Date": "2013-11-10T10:56:05Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { setProvider(provider); } catch (java.lang.Exception e1) { javax.swing.JOptionPane.showMessageDialog(null, e1.getMessage(), \"ERREUR\", javax.swing.JOptionPane.ERROR_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1396/buggy-version/src.org.magic.gui.MagicGUI.java", "BodyUseAPI": ["org.magic.gui.MagicGUI.4.setProvider(org.magic.api.interfaces.MagicCardsProvider)"], "Fixed commit": "06548bd0c46e022c8b26cc667bfd9f40ce6be050", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2016-04-11T15:33:56Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((mouseEvent.getClickCount()) == 2) { showInformInTree(); } if ((mouseEvent.getClickCount()) == 1) { ControllerFiles.TreeItem item = ((ControllerFiles.TreeItem) (TreePlanet.getSelectionModel().getSelectedItem())); java.lang.System.out.println(item.getValue()); java.lang.System.out.println((\"name => \" + (item.getValue().getClass()))); imageUpdateInThePanel(item); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7412/buggy-version/src.ControllerFiles.MainController.java", "BodyUseAPI": ["ControllerFiles.TreeView.getSelectionModel()", "java.io.PrintStream.println((\"name => \" + (item.getValue().getClass())))", "javafx.scene.input.MouseEvent.getClickCount()", "java.io.PrintStream.println(item.getValue())", "ControllerFiles.MainController.showInformInTree()", "TreePlanet.getSelectionModel().getSelectedItem()", "ControllerFiles.MainController.imageUpdateInThePanel(ControllerFiles.TreeItem)", "javafx.scene.input.MouseEvent.getClickCount()", "item.getValue().getClass()", "ControllerFiles.TreeItem.getValue()", "ControllerFiles.TreeItem.getValue()"], "Fixed commit": "e5e5219ae24b90134e8dfff5d092e3992f839b4c", "Url": "https://api.github.com/repos/Markewish/RGROOP", "Date": "2017-12-19T00:13:02Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((((realm.getFacebookId()) != null) && (!(realm.getFacebookId().equals(\"0\")))) && (!(realm.getFacebookId().isEmpty()))) { readGroupEvents(realm, accessToken); readGroupFeed(realm, accessToken); } } catch (java.lang.Exception e) { logService.logCriticalError(\"Unable to store events for realm\", e, realm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1668/buggy-version/src.main.java.com.dagorhir.api.service.EventService.java", "BodyUseAPI": ["realm.getFacebookId().isEmpty()", "realm.getFacebookId().equals(java.lang.String)", "main.java.com.dagorhir.api.domain.Realm.getFacebookId()", "main.java.com.dagorhir.api.domain.Realm.getFacebookId()", "main.java.com.dagorhir.api.service.EventService.readGroupEvents(main.java.com.dagorhir.api.domain.Realm,java.lang.String)", "main.java.com.dagorhir.api.domain.Realm.getFacebookId()", "main.java.com.dagorhir.api.service.EventService.readGroupFeed(main.java.com.dagorhir.api.domain.Realm,java.lang.String)"], "Fixed commit": "03226a7814bae7090b0afadf3f9a07cf413be54d", "Url": "https://api.github.com/repos/aolsenjazz/dagorhir-api", "Date": "2017-11-11T18:56:35Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(startLatch.await(5, java.util.concurrent.TimeUnit.MINUTES))) { org.infinispan.distribution.DistributionManagerImpl.log.warn(\"DistributionManager not started after waiting up to 5 minutes! Not rehashing!\"); return null; } } catch (java.lang.InterruptedException e) { java.lang.Thread.currentThread().interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/747/buggy-version/core.src.main.java.org.infinispan.distribution.DistributionManagerImpl.java", "BodyUseAPI": ["org.infinispan.util.logging.Log.warn(java.lang.String)", "org.infinispan.util.concurrent.ReclosableLatch.await(int,java.util.concurrent.TimeUnit)"], "Fixed commit": "108d07508d4a29eb95986c8500a9837bdcf96b85", "Url": "https://api.github.com/repos/pmuir/infinispan", "Date": "2011-03-02T10:17:53Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final java.lang.String result = httpClient.simpleRequest(\"https://www.hotslogs.com/API/Data/Heroes\"); final com.metacodestudio.hotsuploader.models.Hero[] heroes = new com.fasterxml.jackson.databind.ObjectMapper().readValue(result, com.metacodestudio.hotsuploader.models.Hero[].class); return java.util.Arrays.asList(heroes); } catch (java.io.IOException e) { java.lang.Thread.sleep(10000); return call(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2381/buggy-version/src.main.java.com.metacodestudio.hotsuploader.concurrent.tasks.HeroListTask.java", "BodyUseAPI": ["java.util.Arrays.asList(com.metacodestudio.hotsuploader.models.Hero[])", "com.fasterxml.jackson.databind.ObjectMapper.readValue(java.lang.String,java.lang.Class)", "com.metacodestudio.hotsuploader.utils.SimpleHttpClient.simpleRequest(java.lang.String)"], "Fixed commit": "83bed405f789eb4511fe549eed4f2435c5c763b1", "Url": "https://api.github.com/repos/eivindveg/HotSUploader", "Date": "2015-09-08T00:15:09Z"},
{"Line": "=>3", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int i = 100 / 0; java.lang.System.out.println(i); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4308/buggy-version/Main.java", "BodyUseAPI": ["java.io.PrintStream.println(int)"], "Fixed commit": "02cfc5f1c8988c6d6f3b6d2bbf3bc1a923104a26", "Url": "https://api.github.com/repos/schy-hqh/learngit", "Date": "2015-03-21T10:06:35Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { config.memoryCache(new com.nostra13.universalimageloader.cache.memory.impl.WeakLRULimitedMemoryCache(((16 * 1024) * 1024))); } catch (java.lang.Exception pE) { pE.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/392/buggy-version/sample.src.main.java.com.nostra13.universalimageloader.sample.UILApplication.java", "BodyUseAPI": ["ImageLoaderConfiguration.Builder.memoryCache(com.nostra13.universalimageloader.cache.memory.impl.WeakLRULimitedMemoryCache)"], "Fixed commit": "14b1d808d277db180a96d1df7f9bfe6cf9b553ee", "Url": "https://api.github.com/repos/congtuyenvip/ctvip-uil", "Date": "2016-11-08T02:45:47Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { unregisterInactiveDevices(); be.appfoundry.promtius.apple.ApplePushNotificationServicePusher.LOGGER.debug(\"Inactive devices unregistered - starting actual push now\"); } catch (java.lang.Throwable t) { be.appfoundry.promtius.apple.ApplePushNotificationServicePusher.LOGGER.error(\"Unregistering devices failed - still trying to push though.\", t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/9195/buggy-version/promtius-apns.src.main.java.be.appfoundry.promtius.apple.ApplePushNotificationServicePusher.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)", "be.appfoundry.promtius.apple.ApplePushNotificationServicePusher<CT, P, G>.unregisterInactiveDevices()"], "Fixed commit": "e985d1b62ad89a4b030d6308f853ee45e6596029", "Url": "https://api.github.com/repos/appfoundry/Promtius", "Date": "2015-07-17T10:22:47Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { T entity = new com.google.gson.Gson().fromJson(response.body().string(), ((java.lang.reflect.ParameterizedType) (getClass().getGenericSuperclass())).getActualTypeArguments()[0]); onSuccess(entity, response.headers()); } catch (java.lang.Exception e) { onSuccess(null, null); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3868/buggy-version/app.src.main.java.cn.edu.jxnu.awesome_campus.support.utils.net.callback.JsonEntityCallback.java", "BodyUseAPI": ["java.lang.Class<? extends cn.edu.jxnu.awesome_campus.support.utils.net.callback.JsonEntityCallback>.getGenericSuperclass()", "cn.edu.jxnu.awesome_campus.support.utils.net.callback.JsonEntityCallback<T>.onSuccess(T,response.headers())", "com.google.gson.Gson.fromJson(response.body().string(),java.lang.reflect.Type)", "com.squareup.okhttp.Response.headers()", "response.body().string()", "com.squareup.okhttp.Response.body()", "cn.edu.jxnu.awesome_campus.support.utils.net.callback.JsonEntityCallback<T>.getClass()", "java.lang.reflect.Type.getActualTypeArguments()"], "Fixed commit": "abdc191227fade58ed9af5ebceaa78919c3e8c15", "Url": "https://api.github.com/repos/MummyDing/Awesome-Campus", "Date": "2017-10-31T07:36:31Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { field = object.getClass().getDeclaredField(\"mSolidColors\"); } catch (java.lang.Exception e) { field = object.getClass().getDeclaredField(\"mColorStateList\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2582/buggy-version/ScoreKeeper.src.main.java.codepath.apps.demointroandroid.util.ScoreKeeperUtils.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getDeclaredField(java.lang.String)", "java.lang.Object.getClass()"], "Fixed commit": "58216f8b362910fe400b9528e0d05120090904a7", "Url": "https://api.github.com/repos/djtbdanner/andriod_score_keeper", "Date": "2017-03-05T15:20:46Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { s.remove(); } catch (java.lang.IllegalStateException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1591/buggy-version/Binding-of-Erik.src.binding_of_erik_game.Room.java", "BodyUseAPI": ["java.util.Iterator<binding_of_erik_game.Shot>.remove()"], "Fixed commit": "e893c26a95e56feb0fc1cd416b64b85bc076bd66", "Url": "https://api.github.com/repos/eriksandberg/TDDD78", "Date": "2016-10-23T19:23:21Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { e.remove(); } catch (java.lang.IllegalStateException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1591/buggy-version/Binding-of-Erik.src.binding_of_erik_game.Room.java", "BodyUseAPI": ["java.util.Iterator<binding_of_erik_game.Enemy>.remove()"], "Fixed commit": "e893c26a95e56feb0fc1cd416b64b85bc076bd66", "Url": "https://api.github.com/repos/eriksandberg/TDDD78", "Date": "2016-10-23T19:23:21Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (gelframe.gelstylers.GelStyler styler : stylers) { styler.style(this); } } catch (java.util.ConcurrentModificationException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4265/buggy-version/src.gelframe.GelTextPane.java", "BodyUseAPI": ["gelframe.gelstylers.GelStyler.style(gelframe.GelTextPane)"], "Fixed commit": "c76d80535c06750407f32aecb23c628dadc1b571", "Url": "https://api.github.com/repos/aedans/Gel", "Date": "2016-10-04T19:19:06Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { captain.getMoney().changeAmount(valueDifference); readShip.setCaptain(captain); model.GameState.getInstance().setAirship(readShip); } catch (java.lang.ArithmeticException arithmeticException) { controller.WindowController.showError(\"Not enough money\", (((\"You need \" + (java.lang.Math.abs(valueDifference))) + \" but only have \") + (captain.getMoney().getAmount()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5467/buggy-version/src.controller.ShipExportController.java", "BodyUseAPI": ["model.GameState.getInstance()", "model.gameobject.Airship.setCaptain(model.gameobject.Captain)", "model.gameobject.Captain.getMoney()", "model.GameState.getInstance().setAirship(model.gameobject.Airship)", "captain.getMoney().changeAmount(double)"], "Fixed commit": "b04cc1fc5ee4da7ea866c9460f43df7df06249b5", "Url": "https://api.github.com/repos/Laranto/Airship-Captain", "Date": "2014-12-06T13:31:31Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2452/buggy-version/astrid.src.com.aroundroidgroup.astrid.googleAccounts.AroundRoidConnectionManager.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "10e5b37e7222b7b634a10447048a59cb3376849d", "Url": "https://api.github.com/repos/AroundRoidGroup/astrid", "Date": "2011-08-25T05:53:52Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { worldObj.playSoundAtEntity(this, cocoonType.getDeathSound(), getSoundVolume(), getSoundPitch()); } catch (java.lang.Throwable e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7757/buggy-version/Minecraft.1.7.2.src.main.java.spiderqueen.entity.EntityCocoon.java", "BodyUseAPI": ["spiderqueen.entity.EntityCocoon.getSoundVolume()", "spiderqueen.entity.EntityCocoon.getSoundPitch()", "spiderqueen.enums.EnumCocoonType.getDeathSound()", "spiderqueen.entity.EntityCocoon.playSoundAtEntity(spiderqueen.entity.EntityCocoon,cocoonType.getDeathSound(),getSoundVolume(),getSoundPitch())"], "Fixed commit": "836b6eae7f859522bc8a3e43cbe4dfb6656ca447", "Url": "https://api.github.com/repos/WildBamaBoy/spider-queen", "Date": "2014-03-15T10:43:25Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(fi.csc.microarray.util.UrlTransferUtil.POST_UPLOAD_TIMEOUT_MILLISECONDS); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3317/buggy-version/src.main.java.fi.csc.microarray.util.UrlTransferUtil.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "861b7384e8a1c6972f1a8f83d87a0c9537e87279", "Url": "https://api.github.com/repos/chipster/chipster", "Date": "2014-07-03T10:38:04Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder(context).addConnectionCallbacks(this).addOnConnectionFailedListener(this).addApi(LocationServices.API).build(); } catch (java.lang.Exception e) { com.jstakun.gms.android.utils.LoggerUtils.error(\"GmsLocationServicesManager.buildGoogleApiClient() exception:\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2969/buggy-version/GMSLib.src.com.jstakun.gms.android.location.GmsLocationServicesManager.java", "BodyUseAPI": ["new com.google.android.gms.common.api.GoogleApiClient.Builder(context).addConnectionCallbacks(this).addOnConnectionFailedListener(this).addApi(LocationServices.API).build()", "new com.google.android.gms.common.api.GoogleApiClient.Builder(context).addConnectionCallbacks(this).addOnConnectionFailedListener(this).addApi(LocationServices.API)", "new com.google.android.gms.common.api.GoogleApiClient.Builder(context).addConnectionCallbacks(this).addOnConnectionFailedListener(com.jstakun.gms.android.location.GmsLocationServicesManager)", "com.google.android.gms.common.api.GoogleApiClient.Builder.addConnectionCallbacks(com.jstakun.gms.android.location.GmsLocationServicesManager)"], "Fixed commit": "dad0941aabe25d6a8f795789774907fadcd76efd", "Url": "https://api.github.com/repos/jstakun/gms-world-client", "Date": "2017-08-22T14:28:29Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(10000L); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3978/buggy-version/src.com.secpro.platform.monitoring.agent.actions.FetchSysLogStandardRuleAction.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "a31e57af2a4b23ca49d5ea7c324e95f9ea14063e", "Url": "https://api.github.com/repos/baiyanwei/metrics-collect-agent", "Date": "2013-08-18T13:48:04Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String query = \"latest/meta-data/iam/security-credentials/\"; java.net.URL url; url = new java.net.URL(\"http\", com.hazelcast.aws.impl.DescribeInstances.IAM_ROLE_ENDPOINT, query); is = new java.io.InputStreamReader(url.openStream(), \"UTF-8\"); reader = new java.io.BufferedReader(is); awsConfig.setIamRole(reader.readLine()); is.close(); } catch (java.io.IOException e) { throw new com.hazelcast.config.InvalidConfigurationException(\"Invalid Aws Configuration\"); } finally { if (is != null) { is.close(); } if (reader != null) { reader.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/257/buggy-version/hazelcast-cloud.src.main.java.com.hazelcast.aws.impl.DescribeInstances.java", "BodyUseAPI": ["java.io.InputStreamReader.close()", "java.net.URL.openStream()", "com.hazelcast.config.AwsConfig.setIamRole(java.lang.String)", "java.io.BufferedReader.readLine()"], "Fixed commit": "d8e93500feeb5d580e6ded58a4079f71401d6042", "Url": "https://api.github.com/repos/bilalyasar/hazelcast", "Date": "2016-05-06T12:28:28Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.ArrayList<java.lang.String> results; results = data.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS); java.lang.String text = results.get(0).replace(\"'\", \"\"); mySearchview.setQuery(text, true); mySearchview.setIconifiedByDefault(false); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7988/buggy-version/app.src.main.java.com.example.elazaoui.projet.Search.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "android.content.Intent.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS)", "android.widget.SearchView.setQuery(java.lang.String,boolean)", "android.widget.SearchView.setIconifiedByDefault(boolean)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "1c570cf3af6bf92c13d20399ed9253015f19a054", "Url": "https://api.github.com/repos/INGmeriem/shareurfood", "Date": "2016-03-18T13:05:28Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mobi.devteam.demofalldetector.utils.Utils.cancelAlarmWakeUp(getActivity(), selected_reminder); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1092/buggy-version/app.src.main.java.mobi.devteam.demofalldetector.fragment.HomeFragment.java", "BodyUseAPI": ["mobi.devteam.demofalldetector.utils.Utils.cancelAlarmWakeUp(getActivity(),mobi.devteam.demofalldetector.model.Reminder)", "mobi.devteam.demofalldetector.fragment.HomeFragment.getActivity()"], "Fixed commit": "3057af18ede5cce0fef009176318031a869ec262", "Url": "https://api.github.com/repos/TruongThanhIT/HealthCareSupporter", "Date": "2017-08-01T14:26:23Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Integer.valueOf(args[0]); } catch (java.lang.NumberFormatException e) { player.sendMessage(\"You ain't got dat much, bro!\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2845/buggy-version/src.com.trentsterling.cobbleconverter.ConverterCommand.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "5ec1058857bc2cf2c2b79ff3e4a9344a605b4b57", "Url": "https://api.github.com/repos/TrentSterling/CobbleConverter", "Date": "2013-07-30T17:56:21Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { callback.run(data); } catch (java.lang.ClassCastException e) { throw new me.mneri.eloop.CallbackDataCastException(event, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3634/buggy-version/library.src.main.java.me.mneri.eloop.Emitter.java", "BodyUseAPI": ["me.mneri.eloop.Callback<T>.run(T)"], "Fixed commit": "a25991e6b5a4da98484c7921c903a6f20d71a5e4", "Url": "https://api.github.com/repos/mneri/eloop", "Date": "2015-12-12T12:13:52Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.shaolin.uimaster.page.cache.PageCacheManager.addWebService(event.getNewEntity()); } catch (org.shaolin.javacc.exception.ParsingException e) { org.shaolin.uimaster.page.flow.MasterInstanceListener.logger.error((\"Parse web service error: \" + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5649/buggy-version/modules.uipage.src.main.java.org.shaolin.uimaster.page.flow.MasterInstanceListener.java", "BodyUseAPI": ["org.shaolin.uimaster.page.cache.PageCacheManager.addWebService(event.getNewEntity())", "org.shaolin.bmdp.runtime.entity.EntityUpdatedEvent<org.shaolin.bmdp.datamodel.page.WebService, org.shaolin.bmdp.datamodel.common.DiagramType>.getNewEntity()"], "Fixed commit": "ddd95ee9003ea136ba249e8f2853a591c3305d15", "Url": "https://api.github.com/repos/shaolinwu/uimaster", "Date": "2017-03-03T10:37:38Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return ((java.util.List<T>) (client.invoke(read))).iterator(); } catch (java.lang.Exception e) { if (e.getMessage().contains(\"End of result set\")) { return new java.util.ArrayList<T>().iterator(); }else { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7100/buggy-version/sdk.src.main.java.com.bronto.api.request.BrontoReadPager.java", "BodyUseAPI": ["com.bronto.api.BrontoApi.invoke(com.bronto.api.request.BrontoReadRequest)", "((java.util.List<T>) (client.invoke(read))).iterator()"], "Fixed commit": "0f388b9288b9d23fb99ef58b2d42baf83f69c079", "Url": "https://api.github.com/repos/erichydrick/bronto-api-java-sdk", "Date": "2014-10-29T14:15:09Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { clazz = railo.commons.lang.ClassUtil.loadClass(cl, className); } catch (railo.commons.lang.ClassException ce) { if ((className.indexOf('.')) == (-1)) { try { clazz = railo.commons.lang.ClassUtil.loadClass(cl, (\"java.lang.\" + className)); } catch (railo.commons.lang.ClassException e) { throw ce; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5140/buggy-version/railo-java.railo-core.src.railo.runtime.functions.other.CreateObject.java", "BodyUseAPI": ["railo.commons.lang.ClassUtil.loadClass(java.lang.ClassLoader,java.lang.String)"], "Fixed commit": "848b21ad467a0e97c22ac4397cdef8d83f56641d", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-10-23T13:36:33Z"},
{"Line": "=>698", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { users.setActiveUser(activeUserString); } catch (java.lang.IllegalArgumentException ex) { com.google.gct.login.GoogleLogin.GOOGLE_LOGIN_LOG.error(\"Error while initiating users\", ex); users.removeActiveUser(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7987/buggy-version/login.src.com.google.gct.login.GoogleLogin.java", "BodyUseAPI": ["com.google.gct.login.CredentialedUserRoster.setActiveUser(java.lang.String)"], "Fixed commit": "507028e964c7cbc448cc7273daf5017a3d2fad9f", "Url": "https://api.github.com/repos/xin3liang/platform_tools_studio_google_cloud_tools", "Date": "2014-08-22T16:03:57Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { user = com.parse.ParseQuery.getQuery(com.walmartlabs.classwork.rideone.models.User.class).get(user.getObjectId()); } catch (com.parse.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/698/buggy-version/app.src.main.java.com.walmartlabs.classwork.rideone.activities.HomeActivity.java", "BodyUseAPI": ["com.walmartlabs.classwork.rideone.models.User.getObjectId()", "com.parse.ParseQuery.getQuery(com.walmartlabs.classwork.rideone.models.User.class).get(user.getObjectId())", "com.parse.ParseQuery.getQuery(java.lang.Class)"], "Fixed commit": "058248099b38faa7496ab9a7e50e822134388ca6", "Url": "https://api.github.com/repos/arvindh5686/rideone", "Date": "2015-11-20T05:24:27Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { length = java.lang.Long.parseLong(input.substring(0, ((input.length()) - 1))); } catch (java.lang.Throwable error) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/663/buggy-version/src.ml.bjorn.shadowban.EndTimeCalculator.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.Long.parseLong(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "4fabeac0ae9e618e9e8bbd2e6177eda25b07dc54", "Url": "https://api.github.com/repos/JadaSwiry/Shadowban", "Date": "2017-08-25T11:39:23Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { dbaseConnection = new icecreamshop.DBConnect(\"jdbc:mysql://localhost:3306/icecream\", \"root\", \"csc4500\"); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1754/buggy-version/ControllerQueue.java", "BodyUseAPI": [], "Fixed commit": "9462fca86e7c467d313f2cbd8014bf4076d6272e", "Url": "https://api.github.com/repos/bmorris0620/Ice-Cream-Store-Project", "Date": "2015-11-11T02:57:05Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tblView_orders.getItems().addAll(dbaseConnection.getOrders()); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1754/buggy-version/ControllerQueue.java", "BodyUseAPI": ["javafx.scene.control.TableView<icecreamshop.Order>.getItems()", "icecreamshop.DBConnect.getOrders()", "tblView_orders.getItems().addAll(dbaseConnection.getOrders())"], "Fixed commit": "9462fca86e7c467d313f2cbd8014bf4076d6272e", "Url": "https://api.github.com/repos/bmorris0620/Ice-Cream-Store-Project", "Date": "2015-11-11T02:57:05Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { user = services.User.getUser(params.get(\"email\")); } catch (exceptions.UserNotFoundException e) { java.lang.System.out.println(\"Utilisateur non trouv\ufffd\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/9039/buggy-version/src.servlets.CreateUserServlet.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "services.User.getUser(java.lang.String)"], "Fixed commit": "5e9ad9ae81326cea5f1a23d5af72fbf0097fa04c", "Url": "https://api.github.com/repos/nekonaute/GPSTL-KasuKasu", "Date": "2017-01-24T17:30:35Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(50); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/557/buggy-version/src.app.server.udpservers.FailureDetectorObjectUDPServer.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "6181e3133d3cee5774883eeee8f0677b4bd49dee", "Url": "https://api.github.com/repos/mchliakh/423-Project", "Date": "2012-12-02T02:00:13Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((this.oStream) != null) { this.oStream.close(); } } catch (java.io.IOException e) { org.zuinnote.hadoop.office.format.common.writer.MSExcelWriter.LOG.error(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7269/buggy-version/fileformat.src.main.java.org.zuinnote.hadoop.office.format.common.writer.MSExcelWriter.java", "BodyUseAPI": ["java.io.OutputStream.close()"], "Fixed commit": "9490e3047c6556e8abd5aacb00ec867af1236cf4", "Url": "https://api.github.com/repos/ZuInnoTe/hadoopoffice", "Date": "2017-03-18T20:59:01Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { gash.router.communication.CommConnection cc = gash.router.communication.CommConnection.initConnection(ei.getHost(), ei.getPort()); ei.setChannel(cc.connect()); ei.setActive(true); } catch (java.lang.Exception e) { gash.router.server.edges.EdgeMonitor.logger.error(\"Cannot connect to host!! Server is down!!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4162/buggy-version/src.gash.router.server.edges.EdgeMonitor.java", "BodyUseAPI": ["gash.router.server.edges.EdgeInfo.getHost()", "gash.router.server.edges.EdgeInfo.getPort()", "gash.router.server.edges.EdgeInfo.setChannel(cc.connect())", "gash.router.server.edges.EdgeInfo.setActive(boolean)", "gash.router.communication.CommConnection.connect()", "gash.router.communication.CommConnection.initConnection(ei.getHost(),ei.getPort())"], "Fixed commit": "2e101ca241e963239949c0cb2e4e7e8c3ad462c3", "Url": "https://api.github.com/repos/shafi-dayatar/sturdy-happiness", "Date": "2017-03-20T22:47:38Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dsp.DSProjectHelper.setSysClipboardText((((cudatsa.rng.RNGExperiments.zRuns) + \"_\") + time)); } catch (java.lang.Exception ex) { java.lang.System.out.println(\"> Copy & Paste feature not available. \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6445/buggy-version/src.main.java.cudatsa.rng.RNGExperiments.java", "BodyUseAPI": ["dsp.DSProjectHelper.setSysClipboardText(java.lang.String)"], "Fixed commit": "cb6b7ad3f310d671d4bf64e44de24164b5a7feb3", "Url": "https://api.github.com/repos/kamir/cuda-tsa", "Date": "2017-07-29T15:01:03Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { journalName = parameters.getParameter(org.dspace.app.xmlui.aspect.journal.landing.PARAM_JOURNAL_NAME); } catch (org.apache.avalon.framework.parameters.ParameterException ex) { org.dspace.app.xmlui.aspect.journal.landing.JournalSearch.log.error(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4692/buggy-version/dspace.modules.journal-landing.journal-landing-webapp.src.main.java.org.dspace.app.xmlui.aspect.journal.landing.JournalSearch.java", "BodyUseAPI": ["org.dspace.app.xmlui.aspect.journal.landing.JournalSearch.getParameter(org.dspace.app.xmlui.aspect.journal.landing.PARAM_JOURNAL_NAME)"], "Fixed commit": "b29c1289389d2f81149fedb66870a2478c5f3cc9", "Url": "https://api.github.com/repos/datadryad/dryad-repo", "Date": "2015-02-10T23:41:00Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { uuid = java.util.UUID.fromString(id); } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1686/buggy-version/src.main.java.net.stormdev.uPlanes.utils.uCarsCompatibility.java", "BodyUseAPI": ["java.util.UUID.fromString(java.lang.String)"], "Fixed commit": "b5efe019f8d1cc1d66ba150f8323131272160bd6", "Url": "https://api.github.com/repos/storm345dev/uPlanes", "Date": "2014-05-23T17:13:42Z"},
{"Line": "=>1012", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ((android.widget.ImageView) (view)).setScaleType(ImageView.ScaleType.valueOf(value)); } catch (java.lang.IllegalArgumentException e) { if (value.contains(\"CENTERCROP\")) { ((android.widget.ImageView) (view)).setScaleType(ImageView.ScaleType.CENTER_CROP); }else if (value.contains(\"CENTERINSIDE\")) { ((android.widget.ImageView) (view)).setScaleType(ImageView.ScaleType.CENTER_INSIDE); }else if (value.contains(\"FITCENTER\")) { ((android.widget.ImageView) (view)).setScaleType(ImageView.ScaleType.FIT_CENTER); }else if (value.contains(\"FITEND\")) { ((android.widget.ImageView) (view)).setScaleType(ImageView.ScaleType.FIT_END); }else if (value.contains(\"FITSTART\")) { ((android.widget.ImageView) (view)).setScaleType(ImageView.ScaleType.FIT_START); }else if (value.contains(\"FITXY\")) { ((android.widget.ImageView) (view)).setScaleType(ImageView.ScaleType.FIT_XY); }else { java.lang.System.err.println(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/641/buggy-version/xmlconvert.src.main.java.com.dvc.xml.XmlDynamicUtils.java", "BodyUseAPI": ["android.view.View.setScaleType(ImageView.ScaleType.valueOf(value))", "ImageView.ScaleType.valueOf(java.lang.String)"], "Fixed commit": "c7b9f352dd30b07d3b3bc5b76292c88b02f48a3f", "Url": "https://api.github.com/repos/dvc890/Xml2View_android", "Date": "2017-08-23T10:23:34Z"},
{"Line": "=>878", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { localTopologyManager.setCacheAvailability(getName(), availability); } catch (java.lang.Exception e) { throw new org.infinispan.commons.CacheException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8120/buggy-version/core.src.main.java.org.infinispan.cache.impl.CacheImpl.java", "BodyUseAPI": ["org.infinispan.topology.LocalTopologyManager.setCacheAvailability(java.lang.String,org.infinispan.partionhandling.AvailabilityMode)", "org.infinispan.cache.impl.CacheImpl<K, V>.getName()"], "Fixed commit": "689f84256e615bc0e194f088feb10474bc69cae4", "Url": "https://api.github.com/repos/danberindei/infinispan", "Date": "2014-10-20T14:43:22Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.google.gson.JsonElement jsonLine = parser.parse(this.lineReader.getCurrentValue().toString()); if (jsonLine.isJsonObject()) { com.google.gson.JsonElement tweets = jsonLine.getAsJsonObject().get(\"id\"); for (java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> entry : tweets.getAsJsonObject().entrySet()) { if (!(entry.getValue().isJsonNull())) { this.tweetsToProcess.push(entry.getValue().toString()); } } } } catch (com.google.gson.JsonSyntaxException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/588/buggy-version/src.interaction.readers.MixedRecordReader.java", "BodyUseAPI": ["entry.getValue().isJsonNull()", "java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement>.getValue()", "com.google.gson.JsonElement.getAsJsonObject()", "tweets.getAsJsonObject().entrySet()", "com.google.gson.JsonParser.parse(this.lineReader.getCurrentValue().toString())", "jsonLine.getAsJsonObject().get(java.lang.String)", "entry.getValue().toString()", "com.google.gson.JsonElement.getAsJsonObject()", "java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement>.getValue()", "org.apache.hadoop.mapreduce.lib.input.LineRecordReader.getCurrentValue()", "java.util.LinkedList<java.lang.String>.push(entry.getValue().toString())", "com.google.gson.JsonElement.isJsonObject()", "this.lineReader.getCurrentValue().toString()"], "Fixed commit": "4379ee85f6967d0ea5ca955d24d26d0119de3f11", "Url": "https://api.github.com/repos/wild-fire/interaction-graph-filter", "Date": "2015-04-13T22:48:45Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.graphics.Canvas canvas = this.lockCanvas(); if (canvas != null) { canvas.drawColor(Color.TRANSPARENT, PorterDuff.Mode.CLEAR); } this.unlockCanvasAndPost(canvas); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5069/buggy-version/library.src.main.java.com.daasuu.library.FPSTextureView.java", "BodyUseAPI": ["android.graphics.Canvas.drawColor(Color.TRANSPARENT,PorterDuff.Mode.CLEAR)", "com.daasuu.library.FPSTextureView.lockCanvas()", "com.daasuu.library.FPSTextureView.unlockCanvasAndPost(android.graphics.Canvas)"], "Fixed commit": "264f53e3579efe6326592a4b6a3ca3f90179d4f1", "Url": "https://api.github.com/repos/MasayukiSuda/FPSAnimator", "Date": "2017-09-12T07:55:17Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { im.addItemFlags(ItemFlag.HIDE_ENCHANTS); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/827/buggy-version/src.io.github.yannici.bedwars.Shop.NewItemShop.java", "BodyUseAPI": ["org.bukkit.inventory.meta.ItemMeta.addItemFlags(ItemFlag.HIDE_ENCHANTS)"], "Fixed commit": "7c353dfc74adfbbd483c7cf30859f6a6a7117a57", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-05-24T16:16:36Z"},
{"Line": "=>914", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { nextIndex(); this.remove(cursor); } finally { forward = dir; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7607/buggy-version/core.src.java.org.jdom.ContentList.java", "BodyUseAPI": ["org.jdom.ContentList.remove(int)", "org.jdom.ContentList.FilterListIterator.nextIndex()"], "Fixed commit": "9bc47985dbfb4ef6420f3e9d667e1ddb3b09c638", "Url": "https://api.github.com/repos/hunterhacker/jdom", "Date": "2011-09-02T14:27:19Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { siftedText.setText(sifter.sift()); } catch (java.lang.Exception e) { siftedText.setText(\"ERROR: Exception occurred while sifting text.\"); android.util.Log.e(\"Sift\", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2078/buggy-version/src.main.java.com.pebbleSifter.asyncTasks.SetSifter.java", "BodyUseAPI": ["android.widget.TextView.setText(sifter.sift())", "com.pebbleSifter.sifters.PebbleSifter.sift()"], "Fixed commit": "48db6cd3fe1a58237111e70e10fc05c010dfc7a1", "Url": "https://api.github.com/repos/thompsnm/PebbleSifter", "Date": "2013-11-19T14:23:36Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.List<java.lang.String> friendsList = api.friends().getFriends(targetId); if (friendsList != null) { return friendsList; } } catch (com.github.mastersobg.odkl.exception.OdklApiException a) { if (com.github.mastersobg.odkl.photoGrabber.PhotoGrabber.LOGS) java.lang.System.out.println(java.lang.String.format(\"[ERR][uid%s] Privacy error.\", targetId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3113/buggy-version/src.main.java.com.github.mastersobg.odkl.photoGrabber.PhotoGrabber.java", "BodyUseAPI": ["api.friends().getFriends(java.lang.String)", "com.github.mastersobg.odkl.OdklApi.friends()"], "Fixed commit": "042d5993407abe0a276e5c59a83b98a53f56ba48", "Url": "https://api.github.com/repos/dmedov/odnoklassniki-api", "Date": "2014-10-07T10:55:36Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { setCloner(org.arl.fjage.Container.SERIAL_CLONER); } catch (org.arl.fjage.FjageError ex) { log.warning(\"Cloning disabled\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1575/buggy-version/src.main.java.org.arl.fjage.Container.java", "BodyUseAPI": ["org.arl.fjage.Container.setCloner(java.lang.String)"], "Fixed commit": "5dde29501dc8b514c7752d5097de11fcc07afd16", "Url": "https://api.github.com/repos/org-arl/fjage", "Date": "2013-07-18T08:08:59Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { setCloner(org.arl.fjage.Container.SERIAL_CLONER); } catch (org.arl.fjage.FjageError ex) { log.warning(\"Cloning disabled\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1575/buggy-version/src.main.java.org.arl.fjage.Container.java", "BodyUseAPI": ["org.arl.fjage.Container.setCloner(java.lang.String)"], "Fixed commit": "5dde29501dc8b514c7752d5097de11fcc07afd16", "Url": "https://api.github.com/repos/org-arl/fjage", "Date": "2013-07-18T08:08:59Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { config.fromYamlObject(configYamlObj); } catch (org.sahagin.share.yaml.YamlConvertException e) { throw new org.sahagin.share.yaml.YamlConvertException(java.lang.String.format(org.sahagin.jenkins.SahaginMainExecutor.INVALID_CONFIG_YAML, file.getAbsolutePath(), e.getLocalizedMessage()), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7184/buggy-version/src.main.java.org.sahagin.jenkins.SahaginMainExecutor.java", "BodyUseAPI": ["org.sahagin.share.Config.fromYamlObject(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "f8fd4d26703a4eea4e7e00507a215f24ce0bf691", "Url": "https://api.github.com/repos/jenkinsci/sahagin-plugin", "Date": "2015-09-22T09:20:46Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { chartNum = ((java.lang.Double) (dat.next())); } catch (java.util.ConcurrentModificationException CME) { java.lang.System.out.println(CME.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/517/buggy-version/src.Graphing.GraphLayer.java", "BodyUseAPI": ["java.util.Iterator.next()"], "Fixed commit": "911870d56f000c6b26c750073a853e7cbe51109e", "Url": "https://api.github.com/repos/gufi/OpenLogViewer", "Date": "2011-03-01T11:16:06Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ecEditor.getViewer().refresh(); } catch (org.eclipse.swt.SWTException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6706/buggy-version/Source.eu.modelwriter.marker.src.eu.modelwriter.marker.internal.AnnotationFactory.java", "BodyUseAPI": ["ecEditor.getViewer().refresh()", "org.eclipse.emf.ecore.presentation.EcoreEditor.getViewer()"], "Fixed commit": "97400ecd76a03831cbc944db4676f475fa87afb3", "Url": "https://api.github.com/repos/ModelWriter/WP3", "Date": "2015-12-08T14:51:52Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final java.lang.String name = new java.lang.String(input.data, (openingUnicode + 1), ((closingUnicode - openingUnicode) - 1)); final java.lang.String result = org.apache.commons.lang3.StringEscapeUtils.unescapeHtml4(((\"&\" + name) + \";\")); if ((result.length()) == 1) { codePoint = ((int) (result.charAt(0))); }else if (name.equalsIgnoreCase(\"apos\")) { codePoint = ((int) ('\\'')); }else if (name.equalsIgnoreCase(\"nsub\")) { codePoint = ((int) ('\u2284')); } } catch (java.lang.Throwable ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8573/buggy-version/src.main.java.org.quantumbadger.redreader.reddit.prepared.markdown.MarkdownTokenizer.java", "BodyUseAPI": ["org.apache.commons.lang3.StringEscapeUtils.unescapeHtml4(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.charAt(int)", "java.lang.String.length()", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "9e47d41fad1a8355fa42e578e10e9903182c0279", "Url": "https://api.github.com/repos/QuantumBadger/RedReader", "Date": "2014-11-15T17:26:53Z"},
{"Line": "=>1065", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((((com.nijikokun.bukkit.Permissions.Permissions) (legacy)).getHandler()) instanceof com.platymuus.bukkit.permcompat.PermissionHandler) { permissions = new com.griefcraft.integration.permissions.SuperPermsPermissions(); }else { permissions = new com.griefcraft.integration.permissions.NijiPermissions(); } } catch (java.lang.NoClassDefFoundError e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6752/buggy-version/src.main.java.com.griefcraft.lwc.LWC.java", "BodyUseAPI": ["org.bukkit.plugin.Plugin.getHandler()"], "Fixed commit": "65c213a6471d0aa239e624b3505d6fe7cbe7e4ae", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2011-09-20T19:28:11Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1722/buggy-version/GrepProcess.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "78dd66d1cb6c82a5215700710dcd33058848059b", "Url": "https://api.github.com/repos/doodlekitt/440-Lab1", "Date": "2013-09-16T01:20:25Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { Values.messageQueue.set(0, message); } catch (java.lang.Exception e) { Values.messageQueue.add(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8814/buggy-version/src.fx.client.ClientNetwork.java", "BodyUseAPI": ["Values.messageQueue.set(int,java.lang.String)"], "Fixed commit": "be44e5a008c5f294c68442e908db0ae6e69d3120", "Url": "https://api.github.com/repos/KaiserWilly/EcoFX", "Date": "2016-06-27T08:28:17Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { job.join(); } catch (java.lang.InterruptedException e5) { e5.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/394/buggy-version/fr.inria.soctrace.tools.ocelotl.ui.src.fr.inria.soctrace.tools.ocelotl.ui.views.OcelotlView.java", "BodyUseAPI": ["org.eclipse.core.runtime.jobs.Job.join()"], "Fixed commit": "56711d0c915a3c5629d7336aa2d4dbe51b1e999e", "Url": "https://api.github.com/repos/dosimont/ocelotl", "Date": "2014-09-08T15:26:04Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { authorityValue = projectService.getProjectByAuthorityId(context, metadatum.authority); } catch (java.lang.IllegalArgumentException e) { org.dspace.app.xmlui.objectmanager.RioxxProjectFunderEnricher.log.error(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7115/buggy-version/dspace.modules.xmlui.src.main.java.org.dspace.app.xmlui.objectmanager.RioxxProjectFunderEnricher.java", "BodyUseAPI": ["org.dspace.app.xmlui.objectmanager.ProjectService.getProjectByAuthorityId(org.dspace.app.xmlui.objectmanager.Context,metadatum.authority)"], "Fixed commit": "595be4785da5047c363fca303e42ef53ace581c2", "Url": "https://api.github.com/repos/atmire/RIOXX4x", "Date": "2017-01-02T14:22:32Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { commit.setName(commit.getName().getBytes(\"US-ASCII\").toString()); } catch (java.io.UnsupportedEncodingException e1) { java.lang.System.err.println(\"ERROR: Commitment names must be input in ASCII.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1078/buggy-version/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.controller.AddCommitmentController.java", "BodyUseAPI": ["commit.getName().getBytes(\"US-ASCII\").toString()", "commit.getName().getBytes(java.lang.String)", "edu.wpi.cs.wpisuitetng.modules.calendar.model.Commitment.getName()", "edu.wpi.cs.wpisuitetng.modules.calendar.model.Commitment.setName(commit.getName().getBytes(\"US-ASCII\").toString())"], "Fixed commit": "82c0ceafa36e56ebc5f4e54a9c6ae19a7903aacd", "Url": "https://api.github.com/repos/CS3733Team1/wpi-suite", "Date": "2013-11-11T23:38:08Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mylocation = new com.google.android.gms.maps.model.LatLng(java.lang.Double.parseDouble(splits[0]), java.lang.Double.parseDouble(splits[1])); } catch (java.lang.NumberFormatException e) { android.util.Log.e(com.eveningoutpost.dexdrip.MapsActivity.TAG, ((\"Mylocation exception: '\" + (com.eveningoutpost.dexdrip.MapsActivity.lastGeoLocation)) + \"'\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2655/buggy-version/app.src.main.java.com.eveningoutpost.dexdrip.MapsActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "379482c67e609e2cebc160f869e9b89f321a50a8", "Url": "https://api.github.com/repos/jamorham/xDrip-plus", "Date": "2016-03-17T09:19:46Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { keys = Global.config.getConfigurationSection(\"machines\").getKeys(false); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7218/buggy-version/src.main.java.net.dasigns.simpleslots.SlotMachine.java", "BodyUseAPI": ["Global.config.getConfigurationSection(\"machines\").getKeys(boolean)", "Global.config.getConfigurationSection(java.lang.String)"], "Fixed commit": "42274f47042b44fe0914f7ff901bfbb05a517d50", "Url": "https://api.github.com/repos/Mike724/SimpleSlots", "Date": "2013-02-11T20:26:48Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { keys = Global.config.getConfigurationSection(\"machines\").getKeys(false); } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7218/buggy-version/src.main.java.net.dasigns.simpleslots.SlotMachine.java", "BodyUseAPI": ["Global.config.getConfigurationSection(java.lang.String)", "Global.config.getConfigurationSection(\"machines\").getKeys(boolean)"], "Fixed commit": "42274f47042b44fe0914f7ff901bfbb05a517d50", "Url": "https://api.github.com/repos/Mike724/SimpleSlots", "Date": "2013-02-11T20:26:48Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rowStr[j] = sheet.getRow(i).getCell(j).toString(); } catch (java.lang.Exception e) { rowStr[j] = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5558/buggy-version/Filter.src.main.java.gov.sc.file.ReadFile.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Sheet.getRow(int)", "sheet.getRow(i).getCell(int)", "sheet.getRow(i).getCell(j).toString()"], "Fixed commit": "524c24827246b0b2e4c8a4cf5fea6b8a253d5c12", "Url": "https://api.github.com/repos/gaoyan601/FilterUtility", "Date": "2016-06-05T11:42:40Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { response.sendRedirect(PROJECT_DISPLAY_PAGE); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4160/buggy-version/src.main.java.nl.amc.biolab.pgportal.portlets.AutodockVinaPortlet.java", "BodyUseAPI": ["javax.portlet.ActionResponse.sendRedirect(java.lang.String)"], "Fixed commit": "a689567723099d6d45b62fb4dc8deba9a3b728c7", "Url": "https://api.github.com/repos/AMCeScience/docking-gateway", "Date": "2014-12-08T14:48:14Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.rackspace.cloud.valve.server.ProxyApp.validateConfigDirectory(commandLineArgs); } catch (java.io.IOException e) { java.lang.System.err.println(e.getMessage()); cmdLineParser.printUsage(java.lang.System.err); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4251/buggy-version/project-set.core.valve.src.main.java.com.rackspace.cloud.valve.server.ProxyApp.java", "BodyUseAPI": ["com.rackspace.cloud.valve.server.ProxyApp.validateConfigDirectory(com.rackspace.cloud.valve.server.CommandLineArguments)"], "Fixed commit": "69a220dd2c32fadeed59f9130cac261f94cd880b", "Url": "https://api.github.com/repos/malconis/repose", "Date": "2013-05-14T21:23:28Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result = com.jayway.jsonpath.JsonPath.read(value, jsonPathString); } catch (final com.jayway.jsonpath.PathNotFoundException e) { org.culturegraph.mf.morph.functions.ParseJSON.LOG.debug(\"couldn't find path '{}' in input JSON string '{}'\", jsonPathString, value); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5335/buggy-version/src.main.java.org.culturegraph.mf.morph.functions.ParseJSON.java", "BodyUseAPI": ["com.jayway.jsonpath.JsonPath.read(java.lang.String,java.lang.String)"], "Fixed commit": "72c83a6b7847acfe2a9f445e0c039c1506341b3b", "Url": "https://api.github.com/repos/dswarm/metafacture-core", "Date": "2017-11-17T12:57:37Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (org.cytoscape.view.presentation.annotations.Annotation annotation : org.baderlab.csplugins.enrichmentmap.autoannotate.AutoAnnotationManager.getInstance().getAnnotationManager().getAnnotations(view)) { annotation.removeAnnotation(); } } catch (java.lang.Exception e) { java.lang.System.out.println(\"There are no annotations in this view\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6603/buggy-version/EnrichmentMapPlugin.src.main.java.org.baderlab.csplugins.enrichmentmap.autoannotate.AutoAnnotationParameters.java", "BodyUseAPI": ["org.baderlab.csplugins.enrichmentmap.autoannotate.AutoAnnotationManager.getInstance().getAnnotationManager()", "org.baderlab.csplugins.enrichmentmap.autoannotate.AutoAnnotationManager.getInstance()", "org.baderlab.csplugins.enrichmentmap.autoannotate.AutoAnnotationManager.getInstance().getAnnotationManager().getAnnotations(org.cytoscape.view.model.CyNetworkView)", "org.cytoscape.view.presentation.annotations.Annotation.removeAnnotation()"], "Fixed commit": "4ab7046d1f3a0d93b6e9fa316b8be2fea8502119", "Url": "https://api.github.com/repos/BaderLab/EnrichmentMapApp", "Date": "2014-09-11T16:48:39Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { filePath = seedu.taskscheduler.MainApp.class.getProtectionDomain().getCodeSource().getLocation().toURI().getPath().substring(1); } catch (java.net.URISyntaxException e1) { assert false : \"Severe Error: Unable to restart\"; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6613/buggy-version/src.main.java.seedu.taskscheduler.MainApp.java", "BodyUseAPI": ["java.net.URI.getPath()", "java.security.CodeSource.getLocation()", "java.lang.String.substring(int)", "java.security.ProtectionDomain.getCodeSource()", "java.net.URL.toURI()", "java.lang.Class.getProtectionDomain()"], "Fixed commit": "0fa01b9d0a8d0eacc1706eb8ff8dfae7af080f8e", "Url": "https://api.github.com/repos/MustDoList/main", "Date": "2016-11-07T08:49:12Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final double value = java.lang.Double.parseDouble(str); item.setValue(value); } catch (java.lang.NumberFormatException e) { timber.log.Timber.e(e, \"Couldn't parse to double\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6089/buggy-version/app.src.main.java.com.nikolaykul.waveadvance.adapter.PropertiesRVAdapter.java", "BodyUseAPI": ["com.nikolaykul.waveadvance.data.properties.Property.setValue(double)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "263e654e2d620f7af38b0a6bfa194ba2bf15ec28", "Url": "https://api.github.com/repos/NikolayKul/WaveAdvance", "Date": "2016-06-10T16:34:07Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { meta.setUnbreakable(true); } catch (java.lang.NoSuchMethodError ex) { meta.spigot().setUnbreakable(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4053/buggy-version/Genie.src.main.java.com.djrapitops.genie.lamp.LampItem.java", "BodyUseAPI": ["org.bukkit.inventory.meta.ItemMeta.setUnbreakable(boolean)"], "Fixed commit": "02ad2d971c53da809f0e1e58c0d4172d0f8443fd", "Url": "https://api.github.com/repos/Rsl1122/Genie", "Date": "2017-08-11T13:11:05Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { processIndexUpdate(iDocument, dirtyFields, index); } catch (com.orientechnologies.orient.core.storage.ORecordDuplicatedException ex) { iDocument.undo(); iDocument.setDirty(); database.save(iDocument); throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8905/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.OClassIndexManager.java", "BodyUseAPI": ["com.orientechnologies.orient.core.index.OClassIndexManager.processIndexUpdate(com.orientechnologies.orient.core.record.impl.ODocument,java.util.Set<java.lang.String>,com.orientechnologies.orient.core.index.OIndex<?>)"], "Fixed commit": "a45571b7cf270d22d5b259cecfa362b17f03f658", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-02-01T12:47:35Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rel = org.sugarj.common.FileCommands.getRelativePath(context.baseDir, new org.sugarj.common.path.AbsolutePath(input.analysisResult.source.getURL().getPath())); } catch (org.apache.commons.vfs2.FileSystemException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8745/buggy-version/build-spoofax.src.build.pluto.buildspoofax.builders.CompileMetalanguageFiles_Transform.java", "BodyUseAPI": ["org.sugarj.common.FileCommands.getRelativePath(context.baseDir,org.sugarj.common.path.AbsolutePath)", "input.analysisResult.source.getURL()", "input.analysisResult.source.getURL().getPath()"], "Fixed commit": "2f4a4adc1f88311b0327d8e202733798b9e06ff8", "Url": "https://api.github.com/repos/pluto-build/build-spoofax", "Date": "2015-04-20T09:48:56Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { hologram.addLine(line); } catch (com.sainttx.holograms.api.exception.HologramEntitySpawnException e) { plugin.getLogger().log(java.util.logging.Level.WARNING, ((\"Failed to spawn Hologram \\\"\" + hologramName) + \"\\\"\"), e); continue loadHolograms; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1764/buggy-version/Holograms.src.main.java.com.sainttx.holograms.ManagerImpl.java", "BodyUseAPI": ["com.sainttx.holograms.api.Hologram.addLine(com.sainttx.holograms.api.line.HologramLine)"], "Fixed commit": "4e001c564c3354b191ab3de357f327ea0d3f99e2", "Url": "https://api.github.com/repos/sainttx/Holograms", "Date": "2017-03-14T04:32:07Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { chunk = new org.bukkit.craftbukkit.v1_8_R1.CraftChunk(nmsChunk); } catch (java.lang.NullPointerException e) { throw new com.sainttx.holograms.api.exception.HologramEntitySpawnException(\"Attempted to spawn hologram entity in invalid chunk\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1764/buggy-version/Holograms-v1_8_R1.src.main.java.com.sainttx.holograms.nms.v1_8_R1.HologramEntityControllerImpl.java", "BodyUseAPI": [], "Fixed commit": "4e001c564c3354b191ab3de357f327ea0d3f99e2", "Url": "https://api.github.com/repos/sainttx/Holograms", "Date": "2017-03-14T04:32:07Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { chunk = new org.bukkit.craftbukkit.v1_8_R3.CraftChunk(nmsChunk); } catch (java.lang.NullPointerException e) { throw new com.sainttx.holograms.api.exception.HologramEntitySpawnException(\"Attempted to spawn hologram entity in invalid chunk\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1764/buggy-version/Holograms-v1_8_R3.src.main.java.com.sainttx.holograms.nms.v1_8_R3.HologramEntityControllerImpl.java", "BodyUseAPI": [], "Fixed commit": "4e001c564c3354b191ab3de357f327ea0d3f99e2", "Url": "https://api.github.com/repos/sainttx/Holograms", "Date": "2017-03-14T04:32:07Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { chunk = new org.bukkit.craftbukkit.v1_8_R2.CraftChunk(nmsChunk); } catch (java.lang.NullPointerException e) { throw new com.sainttx.holograms.api.exception.HologramEntitySpawnException(\"Attempted to spawn hologram entity in invalid chunk\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1764/buggy-version/Holograms-v1_8_R2.src.main.java.com.sainttx.holograms.nms.v1_8_R2.HologramEntityControllerImpl.java", "BodyUseAPI": [], "Fixed commit": "4e001c564c3354b191ab3de357f327ea0d3f99e2", "Url": "https://api.github.com/repos/sainttx/Holograms", "Date": "2017-03-14T04:32:07Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String status_common = getString(R.string.common_exception_none); if (status.equals(status_common)) { adapter.reset(courseBeans); adapter.notifyDataSetChanged(); }else { android.widget.Toast.makeText(getActivity(), status, Toast.LENGTH_SHORT).show(); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6477/buggy-version/app.src.main.java.luolc.project.thecourses.view.CourseListFragment.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "luolc.project.thecourses.view.CourseListFragment.LoadCourseInfoTask.getActivity()", "luolc.project.thecourses.adapter.CourseListViewAdapter.reset(java.util.List<luolc.project.thecourses.bean.CourseShortBean>)", "android.widget.Toast.makeText(getActivity(), status, Toast.LENGTH_SHORT).show()", "luolc.project.thecourses.view.CourseListFragment.LoadCourseInfoTask.getString(R.string.common_exception_none)", "luolc.project.thecourses.adapter.CourseListViewAdapter.notifyDataSetChanged()", "android.widget.Toast.makeText(getActivity(),java.lang.String,Toast.LENGTH_SHORT)"], "Fixed commit": "f57a177696d2f6b28ab094d88f0996dd4d2eee4d", "Url": "https://api.github.com/repos/Luolc/TheCourses", "Date": "2015-08-28T09:54:47Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { loadDatabase(); } catch (android.content.pm.PackageManager e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4300/buggy-version/app.src.main.java.edu.uci.zotfinder.service.DatabaseBuilderService.java", "BodyUseAPI": ["edu.uci.ZotFinder.service.DatabaseBuilderService.loadDatabase()"], "Fixed commit": "e996859efdd1b42cf6099eb3b04566eeef77f17f", "Url": "https://api.github.com/repos/stacks217/AndroidZotFinder", "Date": "2016-09-15T05:25:27Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final it.polimi.dima.bookshare.tables.BookRequest bookRequest = mBookRequests.get(position); user = bookRequest.getUser(); book = bookRequest.getBook(); java.util.ArrayList<it.polimi.dima.bookshare.tables.BookRequest> bookRequests = new it.polimi.dima.bookshare.amazon.DynamoDBManager(context).getMyBookRequests(); for (it.polimi.dima.bookshare.tables.BookRequest br : bookRequests) { if ((br.getBookISBN().equals(book.getIsbn())) && (br.getReceiverID().equals(book.getOwnerID()))) { br.setAccepted(4); new it.polimi.dima.bookshare.amazon.DynamoDBManager(context).updateBookRequest(br); android.widget.Toast.makeText(context, R.string.return_sent, Toast.LENGTH_SHORT).show(); holder.buttonConfirm.setVisibility(Button.INVISIBLE); break; } } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6909/buggy-version/app.src.main.java.it.polimi.dima.bookshare.adapters.RequestsAdapter.java", "BodyUseAPI": ["it.polimi.dima.bookshare.tables.BookRequest.getBookISBN()", "android.widget.Button.setVisibility(Button.INVISIBLE)", "it.polimi.dima.bookshare.tables.BookRequest.getUser()", "it.polimi.dima.bookshare.amazon.DynamoDBManager.getMyBookRequests()", "it.polimi.dima.bookshare.tables.Book.getIsbn()", "br.getReceiverID().equals(book.getOwnerID())", "java.util.ArrayList<it.polimi.dima.bookshare.tables.BookRequest>.get(int)", "it.polimi.dima.bookshare.tables.BookRequest.setAccepted(int)", "it.polimi.dima.bookshare.tables.BookRequest.getBook()", "it.polimi.dima.bookshare.amazon.DynamoDBManager.updateBookRequest(it.polimi.dima.bookshare.tables.BookRequest)", "android.widget.Toast.makeText(android.content.Context,R.string.return_sent,Toast.LENGTH_SHORT)", "br.getBookISBN().equals(book.getIsbn())", "it.polimi.dima.bookshare.tables.Book.getOwnerID()", "it.polimi.dima.bookshare.tables.BookRequest.getReceiverID()", "android.widget.Toast.makeText(context, R.string.return_sent, Toast.LENGTH_SHORT).show()"], "Fixed commit": "dc16f0e2161cdb872d55fb97f2de1e080bfe7014", "Url": "https://api.github.com/repos/alessioros/BookShare", "Date": "2016-05-04T14:06:06Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { s.chars().map(( v) -> v & 255).forEach(( v) -> { try { writeByte(v); } catch (java.io.IOException e) { throw new java.lang.RuntimeException(e); } }); } catch (java.lang.RuntimeException e) { if ((e.getCause()) instanceof java.io.IOException) { throw ((java.io.IOException) (e.getCause())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2077/buggy-version/src.main.java.com.github.psygate.bitutils.bitstreams.BitOutputStream.java", "BodyUseAPI": ["java.util.stream.IntStream.forEach(java.util.function.IntConsumer)", "java.util.stream.IntStream.map(java.util.function.IntUnaryOperator)", "java.lang.String.chars()", "com.github.psygate.bitutils.bitstreams.BitOutputStream.writeByte(int)"], "Fixed commit": "34cb71bce6b0a4f1512c4992c0e89fc8f62417cb", "Url": "https://api.github.com/repos/psygate/bitvectors", "Date": "2017-10-03T07:53:45Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { s.chars().forEach(( v) -> { try { writeChar(v); } catch (java.io.IOException e) { throw new java.lang.RuntimeException(e); } }); } catch (java.lang.RuntimeException e) { if ((e.getCause()) instanceof java.io.IOException) { throw ((java.io.IOException) (e.getCause())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2077/buggy-version/src.main.java.com.github.psygate.bitutils.bitstreams.BitOutputStream.java", "BodyUseAPI": ["java.util.stream.IntStream.forEach(java.util.function.IntConsumer)", "com.github.psygate.bitutils.bitstreams.BitOutputStream.writeChar(int)", "java.lang.String.chars()"], "Fixed commit": "34cb71bce6b0a4f1512c4992c0e89fc8f62417cb", "Url": "https://api.github.com/repos/psygate/bitvectors", "Date": "2017-10-03T07:53:45Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.corfudb.runtime.view.Layout l = router.getClient(org.corfudb.runtime.clients.LayoutClient.class).getLayout().get(); if (l != null) { log.trace((\"Set router's epoch to \" + (l.getEpoch()))); router.setEpoch(l.getEpoch()); }else { log.trace(\"Cannot set router's epoch\"); } } catch (java.lang.Exception e) { return cmdlet.err((\"ERROR Exception getting initial epoch \" + (e.getCause()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6153/buggy-version/src.main.java.org.corfudb.cmdlets.corfu_layout.java", "BodyUseAPI": ["org.corfudb.runtime.clients.NettyClientRouter.getClient(java.lang.Class)", "org.corfudb.runtime.clients.NettyClientRouter.setEpoch(l.getEpoch())", "org.corfudb.runtime.view.Layout.getEpoch()", "org.corfudb.runtime.view.Layout.getEpoch()", "router.getClient(org.corfudb.runtime.clients.LayoutClient.class).getLayout()", "org.corfudb.cmdlets.corfu_layout.trace(java.lang.String)", "router.getClient(org.corfudb.runtime.clients.LayoutClient.class).getLayout().get()", "org.corfudb.cmdlets.corfu_layout.trace((\"Set router's epoch to \" + (l.getEpoch())))"], "Fixed commit": "9bc78699b8280903b2933640fe71baf31facca0b", "Url": "https://api.github.com/repos/slfritchie/CorfuDB", "Date": "2016-08-10T20:30:01Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { v = org.zkoss.zk.ui.Executions.evaluate(comp, el_path, java.lang.Object.class); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5488/buggy-version/zk.src.org.zkoss.zk.ui.sys.ComponentsCtrl.java", "BodyUseAPI": ["org.zkoss.zk.ui.Executions.evaluate(org.zkoss.zk.ui.Component,java.lang.String,java.lang.Class)"], "Fixed commit": "99ddf64e8195d653fa3b7a9befb8b3a9e2c51250", "Url": "https://api.github.com/repos/DevChu/zk", "Date": "2015-05-18T08:23:40Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { unregisterReceiver(mWeatherBroadcastReceiver); } catch (java.lang.IllegalArgumentException e) { android.util.Log.e(com.tapptitude.weatherforecast.MainActivity.TAG, \"Weather broadcast receiver not registered\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5204/buggy-version/app.src.main.java.com.tapptitude.weatherforecast.MainActivity.java", "BodyUseAPI": ["com.tapptitude.weatherforecast.MainActivity.unregisterReceiver(android.content.BroadcastReceiver)"], "Fixed commit": "ec715a2356971e179cdd1972ce75e067c87e0377", "Url": "https://api.github.com/repos/AmbroziePaval/WeatherForecast", "Date": "2016-10-19T12:02:31Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { lives = arena.type().getLives(player); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5317/buggy-version/src.net.slipcor.pvparena.listeners.PlayerListener.java", "BodyUseAPI": ["arena.type().getLives(org.bukkit.entity.Player)", "net.slipcor.pvparena.arena.Arena.type()"], "Fixed commit": "d825b7036bbcd7135071b7cdf3bb742f61c9193e", "Url": "https://api.github.com/repos/slipcor/pvparena", "Date": "2012-06-25T21:54:14Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return new java.math.BigDecimal(left).compareTo(new java.math.BigDecimal(right)); } catch (java.lang.Throwable t) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6760/buggy-version/railo-java.railo-core.src.railo.runtime.op.Operator.java", "BodyUseAPI": ["java.math.BigDecimal.compareTo(java.math.BigDecimal)"], "Fixed commit": "faa478bf4e859dc7ed19b449cf8b089e9f34126f", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-06-05T21:14:56Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { spielerRemoveListe.add(plugin.getServer().getPlayer(param[1]).getName()); } catch (java.lang.NullPointerException npe) { spielerRemoveListe.add(param[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/802/buggy-version/src.me.terradominik.plugins.terrasnowspleef.Commands.java", "BodyUseAPI": ["plugin.getServer().getPlayer(param[1]).getName()", "me.terradominik.plugins.terrasnowspleef.TerraSnowSpleef.getServer()", "java.util.List<java.lang.String>.add(plugin.getServer().getPlayer(param[1]).getName())", "plugin.getServer().getPlayer(java.lang.String)"], "Fixed commit": "0849b94b916869bd96145c45b791f68413101266", "Url": "https://api.github.com/repos/Terradominik/TerraSnowSpleef", "Date": "2013-01-06T07:45:42Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { spielerAddListe.add(plugin.getServer().getPlayer(param[1]).getName()); } catch (java.lang.NullPointerException npe) { spielerAddListe.add(param[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/802/buggy-version/src.me.terradominik.plugins.terrasnowspleef.Commands.java", "BodyUseAPI": ["plugin.getServer().getPlayer(param[1]).getName()", "plugin.getServer().getPlayer(java.lang.String)", "java.util.List<java.lang.String>.add(plugin.getServer().getPlayer(param[1]).getName())", "me.terradominik.plugins.terrasnowspleef.TerraSnowSpleef.getServer()"], "Fixed commit": "0849b94b916869bd96145c45b791f68413101266", "Url": "https://api.github.com/repos/Terradominik/TerraSnowSpleef", "Date": "2013-01-06T07:45:42Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { util.auth.Secured.authenticationStrategy = injector.getInstance(util.auth.IAuthentication.class); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4145/buggy-version/app.Global.java", "BodyUseAPI": ["com.google.inject.Injector.getInstance(java.lang.Class)"], "Fixed commit": "0b24b06af57f78866bcd3af998347658495aa2a3", "Url": "https://api.github.com/repos/magenta-aps/cpreader", "Date": "2014-12-22T11:14:32Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (plugin.gameScheduler.trackInUse(game.getTrackName())) { plugin.gameScheduler.removeRace(game.getTrackName()); } } catch (java.lang.Exception e1) { try { plugin.gameScheduler.removeRace(game.getTrackName()); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5755/buggy-version/MarioKart.src.net.stormdev.ucars.race.URaceListener.java", "BodyUseAPI": ["net.stormdev.ucars.race.Race.getTrackName()", "plugin.gameScheduler.removeRace(game.getTrackName())", "plugin.gameScheduler.trackInUse(game.getTrackName())", "net.stormdev.ucars.race.Race.getTrackName()"], "Fixed commit": "ef823435720019f350c30a5a8598301675f50ff4", "Url": "https://api.github.com/repos/storm345dev/MarioKart", "Date": "2013-11-25T18:18:49Z"},
{"Line": "=>723", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((org.bukkit.entity.Minecart) (listent)).setDamage(0); penalty(((org.bukkit.entity.Minecart) (listent)), 4); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5755/buggy-version/MarioKart.src.net.stormdev.ucars.race.URaceListener.java", "BodyUseAPI": ["net.stormdev.ucars.race.URaceListener.penalty(org.bukkit.entity.Entity,int)", "org.bukkit.entity.Entity.setDamage(int)"], "Fixed commit": "ef823435720019f350c30a5a8598301675f50ff4", "Url": "https://api.github.com/repos/storm345dev/MarioKart", "Date": "2013-11-25T18:18:49Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pl.removeMetadata(\"car.stayIn\", plugin); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5755/buggy-version/MarioKart.src.net.stormdev.ucars.race.RaceScheduler.java", "BodyUseAPI": ["org.bukkit.entity.Player.removeMetadata(java.lang.String,net.stormdev.ucars.race.main)"], "Fixed commit": "ef823435720019f350c30a5a8598301675f50ff4", "Url": "https://api.github.com/repos/storm345dev/MarioKart", "Date": "2013-11-25T18:18:49Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { railo.runtime.config.DeployHandler.deploy(configServer); } catch (java.lang.Throwable t) { t.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/875/buggy-version/railo-java.railo-core.src.railo.runtime.engine.Controler.java", "BodyUseAPI": ["railo.runtime.config.DeployHandler.deploy(railo.runtime.config.ConfigServer)"], "Fixed commit": "12f89d58be050d83dac887362a5adc6b86610e07", "Url": "https://api.github.com/repos/clitnak/mcrailo", "Date": "2013-04-26T08:56:32Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { railo.runtime.config.DeployHandler.deploy(config); } catch (java.lang.Throwable t) { t.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/875/buggy-version/railo-java.railo-core.src.railo.runtime.engine.Controler.java", "BodyUseAPI": ["railo.runtime.config.DeployHandler.deploy(railo.runtime.config.ConfigWeb)"], "Fixed commit": "12f89d58be050d83dac887362a5adc6b86610e07", "Url": "https://api.github.com/repos/clitnak/mcrailo", "Date": "2013-04-26T08:56:32Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Double.parseDouble(((android.widget.EditText) (v)).getText().toString().replace(\"$\", \"\")); dinerList.get(i).updateTotal(((android.widget.EditText) (v)), tipPercentValue); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7265/buggy-version/app.src.main.java.com.example.android.splitr.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<com.example.android.splitr.Diner>.get(int)", "dinerList.get(i).updateTotal(android.view.View,double)", "java.lang.Double.parseDouble(((android.widget.EditText) (v)).getText().toString().replace(\"$\", \"\"))", "android.view.View.getText()", "((android.widget.EditText) (v)).getText().toString().replace(java.lang.String,java.lang.String)", "((android.widget.EditText) (v)).getText().toString()"], "Fixed commit": "494f6a50cb79b054d034535371bd3639f012f715", "Url": "https://api.github.com/repos/auzwa/splyt", "Date": "2016-03-23T14:16:14Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { jsonpost = new org.json.JSONObject(postdata); } catch (java.lang.Exception ex) { upatras.hivesensorapihandler.virtualhive.post.AuthenticationHandler.LOGGER.severe(\"invalid json in post\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6078/buggy-version/src.main.java.upatras.hivesensorapihandler.virtualhive.post.AuthenticationHandler.java", "BodyUseAPI": [], "Fixed commit": "39fa178b27f1d00ec88b514d4a2c724c7c723a98", "Url": "https://api.github.com/repos/ParisStefanou/HiveSensorApiHandler", "Date": "2017-10-29T16:53:11Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return com.demigodsrpg.stoa.inventory.StoaPlayerInventory.DATA_ACCESS.getDirect(id); } catch (java.lang.NullPointerException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5933/buggy-version/src.main.java.com.demigodsrpg.stoa.inventory.StoaPlayerInventory.java", "BodyUseAPI": ["com.demigodsrpg.stoa.data.DataAccess<java.util.UUID, com.demigodsrpg.stoa.inventory.StoaPlayerInventory>.getDirect(java.util.UUID)"], "Fixed commit": "f020997d4b2930e6cc42f618fcbf2ad393124f4a", "Url": "https://api.github.com/repos/DemigodsRPG/Stoa", "Date": "2014-05-19T05:07:26Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return com.demigodsrpg.stoa.inventory.StoaEnderInventory.DATA_ACCESS.getDirect(id); } catch (java.lang.NullPointerException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5933/buggy-version/src.main.java.com.demigodsrpg.stoa.inventory.StoaEnderInventory.java", "BodyUseAPI": ["com.demigodsrpg.stoa.data.DataAccess<java.util.UUID, com.demigodsrpg.stoa.inventory.StoaEnderInventory>.getDirect(java.util.UUID)"], "Fixed commit": "f020997d4b2930e6cc42f618fcbf2ad393124f4a", "Url": "https://api.github.com/repos/DemigodsRPG/Stoa", "Date": "2014-05-19T05:07:26Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { env.include(template); } finally { env.setFastInvalidReferenceExceptions(lastFIRE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1943/buggy-version/src.main.java.freemarker.core.Interpret.java", "BodyUseAPI": ["freemarker.core.Environment.include(freemarker.template.Template)"], "Fixed commit": "432935d15bec11fc99913b09a88faf76f7b53641", "Url": "https://api.github.com/repos/freemarker/freemarker", "Date": "2013-06-09T14:48:20Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/211/buggy-version/app.src.main.java.picshare.mk.com.picshare.PostsAdapter.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "32d6b122bc4856b211a7f3d90d3a7e15d99709b6", "Url": "https://api.github.com/repos/elkamel/PicShare", "Date": "2016-04-27T20:07:32Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((recipe.getRecipeOutput().getUnlocalizedName()) == null) { igwmod.lib.IGWLog.error((\"Item has no unlocalized name: \" + (recipe.getRecipeOutput().getItem()))); }else { java.lang.String blockCode = igwmod.WikiUtils.getNameFromStack(recipe.getRecipeOutput()); if (!(IntegratorCraftingRecipe.autoMappedRecipes.containsKey(blockCode))) IntegratorCraftingRecipe.autoMappedRecipes.put(blockCode, recipe); } } catch (java.lang.Throwable e) { igwmod.lib.IGWLog.error((\"IGW-Mod failed to add recipe handling support for \" + (recipe.getRecipeOutput()))); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/458/buggy-version/src.igwmod.ClientProxy.java", "BodyUseAPI": ["IntegratorCraftingRecipe.autoMappedRecipes.put(java.lang.String,net.minecraft.item.crafting.IRecipe)", "igwmod.lib.IGWLog.error((\"Item has no unlocalized name: \" + (recipe.getRecipeOutput().getItem())))", "net.minecraft.item.crafting.IRecipe.getRecipeOutput()", "recipe.getRecipeOutput().getUnlocalizedName()", "recipe.getRecipeOutput().getItem()", "net.minecraft.item.crafting.IRecipe.getRecipeOutput()", "IntegratorCraftingRecipe.autoMappedRecipes.containsKey(java.lang.String)", "net.minecraft.item.crafting.IRecipe.getRecipeOutput()", "igwmod.WikiUtils.getNameFromStack(recipe.getRecipeOutput())"], "Fixed commit": "ba3ec6baf2cb198f52c12fcf4951c4607cdf0753", "Url": "https://api.github.com/repos/MineMaarten/IGW-mod", "Date": "2015-07-16T15:09:40Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { copy.setGenericSignature(ctMethod.getGenericSignature()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3921/buggy-version/src.main.java.org.jsweet.transpiler.candies.CandiesMerger.java", "BodyUseAPI": ["javassist.CtMethod.setGenericSignature(ctMethod.getGenericSignature())", "javassist.CtMethod.getGenericSignature()"], "Fixed commit": "766adf9269949b077fa3b77ef79352f84e88a175", "Url": "https://api.github.com/repos/lgrignon/jsweet", "Date": "2016-02-26T10:11:56Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Process pr = rt.exec((((\"git clone \" + (Repository.getDowload_link())) + \" \") + (Repository.getStrAlias()))); } catch (java.lang.Exception e) { java.lang.System.out.println(\"---------------- ERROR ----------------\"); java.lang.System.out.println(\"You must install Git : Failed to execute the command 'git clone'\"); java.lang.System.out.println(\"Open Windows Environment Variables/Path Window\"); java.lang.System.out.println(\"Right-Click on My Computer\"); java.lang.System.out.println(\"Click Advanced System Settings link from the left side column\"); java.lang.System.out.println(\"Click Environment Variables in the bottom of the window\"); java.lang.System.out.println(\"Then under System Variables look for the path variable and click edit\"); java.lang.System.out.println(\"Add the pwd to git's bin and cmd at the end of the string like this:\"); java.lang.System.out.println(\";C:/Program Files (x86)/Git/bin;C:/Program Files (x86)/Git/cmd\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8726/buggy-version/AutoPackageRepository.src.autopackagerepository.AutoPackageRepository.java", "BodyUseAPI": ["autopackagerepository.Repository.getStrAlias()", "java.lang.Runtime.exec((((\"git clone \" + (Repository.getDowload_link())) + \" \") + (Repository.getStrAlias())))", "autopackagerepository.Repository.getDowload_link()"], "Fixed commit": "402f6c8ff3f7893a26db96beca747048ba4c699c", "Url": "https://api.github.com/repos/Ealenn/SublimeText-AutoPackageRepository", "Date": "2016-04-05T08:35:07Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.hp.hpl.jena.ontology.OntClass op = ((com.hp.hpl.jena.ontology.OntClass) (i.next())); getMembers(op, resources, recursive); } catch (com.hp.hpl.jena.ontology.ConversionException e) { edu.isi.karma.modeling.ontology.OntologyHandler.logger.error(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4306/buggy-version/src.main.java.edu.isi.karma.modeling.ontology.OntologyHandler.java", "BodyUseAPI": ["edu.isi.karma.modeling.ontology.OntologyHandler.getMembers(com.hp.hpl.jena.ontology.OntClass,java.util.HashSet<com.hp.hpl.jena.ontology.OntResource>,boolean)", "java.util.Iterator<? extends com.hp.hpl.jena.ontology.OntClass>.next()"], "Fixed commit": "c6324ed414bd6a4848daf1f3ab007697b560fa85", "Url": "https://api.github.com/repos/InformationIntegrationGroup/Web-Karma", "Date": "2013-10-11T00:30:30Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.hp.hpl.jena.ontology.OntClass op = ((com.hp.hpl.jena.ontology.OntClass) (i.next())); getMembers(op, resources, recursive); } catch (com.hp.hpl.jena.ontology.ConversionException e) { edu.isi.karma.modeling.ontology.OntologyHandler.logger.error(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4306/buggy-version/src.main.java.edu.isi.karma.modeling.ontology.OntologyHandler.java", "BodyUseAPI": ["java.util.Iterator<? extends com.hp.hpl.jena.ontology.OntClass>.next()", "edu.isi.karma.modeling.ontology.OntologyHandler.getMembers(com.hp.hpl.jena.ontology.OntClass,java.util.HashSet<com.hp.hpl.jena.ontology.OntResource>,boolean)"], "Fixed commit": "c6324ed414bd6a4848daf1f3ab007697b560fa85", "Url": "https://api.github.com/repos/InformationIntegrationGroup/Web-Karma", "Date": "2013-10-11T00:30:30Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return sorcer.rio.rmi.SorcerResolvingLoader.loader.loadClass(resolvedCodebase, name, defaultLoader); } catch (java.lang.Exception fe) { sorcer.rio.rmi.SorcerResolvingLoader.logger.warn(((((((\"Problem loading class: \" + name) + \" from: \") + resolvedCodebase) + \" \") + (fe.getMessage())) + \" - trying again\")); return sorcer.rio.rmi.SorcerResolvingLoader.loader.loadClass(resolvedCodebase, name, defaultLoader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/347/buggy-version/sorcer-rio.sorcer-rio-start.src.main.java.sorcer.rio.rmi.SorcerResolvingLoader.java", "BodyUseAPI": ["java.rmi.server.RMIClassLoaderSpi.loadClass(java.lang.String,java.lang.String,java.lang.ClassLoader)"], "Fixed commit": "0733dfad0f4741f7de46e42e17eb7bdb2e2160ee", "Url": "https://api.github.com/repos/sorcersoft/sorcer", "Date": "2014-03-31T22:43:15Z"},
{"Line": "=>1275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stmt.executeUpdate(cmd); } catch (java.sql.SQLException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1113/buggy-version/src.webapp.src.ch.specchio.factories.SpectrumFactory.java", "BodyUseAPI": ["java.sql.Statement.executeUpdate(java.lang.String)"], "Fixed commit": "84f3bf1f7e476d2a91dabdc8b8a2dd3c8d46b5d7", "Url": "https://api.github.com/repos/ahueni/SPECCHIO", "Date": "2016-10-17T12:33:50Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { newKeys.addAll(this.keySet()); } finally { lock.readLock().unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4094/buggy-version/config-toolkit.src.main.java.com.dangdang.config.service.GeneralConfigGroup.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.addAll(java.util.Set<java.lang.String>)", "com.dangdang.config.service.GeneralConfigGroup.keySet()"], "Fixed commit": "597e75cc1e7d3b5ae601cebf12fcb84fdf2b1322", "Url": "https://api.github.com/repos/dangdangdotcom/config-toolkit", "Date": "2015-05-11T10:50:15Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { for (java.lang.String redundance : redundances) { this.remove(redundance); } } finally { lock.writeLock().unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4094/buggy-version/config-toolkit.src.main.java.com.dangdang.config.service.GeneralConfigGroup.java", "BodyUseAPI": ["com.dangdang.config.service.GeneralConfigGroup.remove(java.lang.String)"], "Fixed commit": "597e75cc1e7d3b5ae601cebf12fcb84fdf2b1322", "Url": "https://api.github.com/repos/dangdangdotcom/config-toolkit", "Date": "2015-05-11T10:50:15Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { net.canarymod.Canary.commands().registerCommands(this, this, false); } catch (net.canarymod.commandsys.CommandDependencyException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3911/buggy-version/src.tobleminer.minefight.Main.java", "BodyUseAPI": ["net.canarymod.Canary.commands().registerCommands(tobleminer.minefight.Main,tobleminer.minefight.Main,boolean)", "net.canarymod.Canary.commands()"], "Fixed commit": "36a9f79159047d53be8fa1d5b287a5eb561730e0", "Url": "https://api.github.com/repos/TobleMiner/MF-Canary", "Date": "2015-03-30T22:23:30Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.viewer.refresh(); } catch (java.lang.Throwable ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5312/buggy-version/org.dawb.workbench.plotting.src.org.dawb.workbench.plotting.tools.InfoPixelTool.java", "BodyUseAPI": ["org.eclipse.jface.viewers.TableViewer.refresh()"], "Fixed commit": "809eb40a411acda2caec7ddc3dfa1ca909ec9de0", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2012-06-06T10:12:09Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { languageModuleArtifact = repoManager.getArtifact(new com.redhat.ceylon.cmr.api.ArtifactContext(null, moduleName, moduleVersion, com.redhat.ceylon.cmr.api.ArtifactContext.CAR)); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1276/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.core.classpath.CeylonLanguageModuleContainer.java", "BodyUseAPI": ["com.redhat.ceylon.cmr.api.RepositoryManager.getArtifact(com.redhat.ceylon.cmr.api.ArtifactContext)"], "Fixed commit": "ba44ac8725085af98c852123eedf598fefde7c16", "Url": "https://api.github.com/repos/eclipse/ceylon-ide-eclipse", "Date": "2016-09-08T21:12:14Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ceylonLanguageJavaSources = com.redhat.ceylon.eclipse.core.classpath.CeylonClasspathUtil.ceylonSourceArchiveToJavaSourceArchive(moduleName, moduleVersion, repoManager.getArtifact(new com.redhat.ceylon.cmr.api.ArtifactContext(null, moduleName, moduleVersion, com.redhat.ceylon.cmr.api.ArtifactContext.SRC))); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1276/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.core.classpath.CeylonLanguageModuleContainer.java", "BodyUseAPI": ["com.redhat.ceylon.eclipse.core.classpath.CeylonClasspathUtil.ceylonSourceArchiveToJavaSourceArchive(java.lang.String,java.lang.String,repoManager.getArtifact(new com.redhat.ceylon.cmr.api.ArtifactContext(null, moduleName, moduleVersion, com.redhat.ceylon.cmr.api.ArtifactContext.SRC)))", "com.redhat.ceylon.cmr.api.RepositoryManager.getArtifact(com.redhat.ceylon.cmr.api.ArtifactContext)"], "Fixed commit": "ba44ac8725085af98c852123eedf598fefde7c16", "Url": "https://api.github.com/repos/eclipse/ceylon-ide-eclipse", "Date": "2016-09-08T21:12:14Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cost = java.lang.Double.valueOf(costField.getText()); } catch (java.lang.Exception e) { cost = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4918/buggy-version/trunk.Line_Wars.src.editor.tech.NCTIEditor.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)", "javax.swing.JTextField.getText()"], "Fixed commit": "0a410c5eeba0cf8b8a545bd296e157cb2b8dbf8e", "Url": "https://api.github.com/repos/rex1fernando/linewars", "Date": "2011-03-06T01:55:43Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { config.update(toDictionary(configuration)); } catch (java.lang.IllegalStateException e) { activate(configuration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3617/buggy-version/mq.mq-fabric.src.main.java.io.fabric8.mq.fabric.BrokerDeployment.java", "BodyUseAPI": ["io.fabric8.mq.fabric.BrokerDeployment.toDictionary(java.util.Map<java.lang.String, ?>)", "org.osgi.service.cm.Configuration.update(java.util.Dictionary<java.lang.String, ?>)"], "Fixed commit": "a60b1da81eb7dc543dbe5620786bb22f5febe8f0", "Url": "https://api.github.com/repos/jboss-fuse/fabric8", "Date": "2015-05-05T16:19:24Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { config.delete(); } catch (java.lang.IllegalStateException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3617/buggy-version/mq.mq-fabric.src.main.java.io.fabric8.mq.fabric.BrokerDeployment.java", "BodyUseAPI": ["org.osgi.service.cm.Configuration.delete()"], "Fixed commit": "a60b1da81eb7dc543dbe5620786bb22f5febe8f0", "Url": "https://api.github.com/repos/jboss-fuse/fabric8", "Date": "2015-05-05T16:19:24Z"},
{"Line": "=>1338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { parts = getClient(sessionid).getPartitionsByFilter(storageTableName, org.apache.lens.server.metastore.StorageConstants.getLatestPartFilter(partitionColumn)); } catch (org.apache.hadoop.hive.ql.metadata.HiveException e) { org.apache.lens.server.metastore.CubeMetastoreServiceImpl.LOG.info(((\"Storage Table \" + storageTableName) + \" skipped while finding latestDate due to exception: \"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7411/buggy-version/lens-server.src.main.java.org.apache.lens.server.metastore.CubeMetastoreServiceImpl.java", "BodyUseAPI": ["org.apache.lens.server.metastore.CubeMetastoreServiceImpl.getClient(org.apache.lens.api.LensSessionHandle)", "org.apache.lens.server.metastore.CubeMetastoreClient.getPartitionsByFilter(java.lang.String,org.apache.lens.server.metastore.StorageConstants.getLatestPartFilter(partitionColumn))", "org.apache.lens.server.metastore.StorageConstants.getLatestPartFilter(java.lang.String)"], "Fixed commit": "0c3b0537f3152231e5a6b9e939272fcf093c1241", "Url": "https://api.github.com/repos/laxman-ch/incubator-lens", "Date": "2015-01-15T09:48:02Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { loadStudentPicture(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5495/buggy-version/app.src.main.java.app.sunstreak.yourpisd.net.data.Student.java", "BodyUseAPI": ["app.sunstreak.yourpisd.net.data.Student.loadStudentPicture()"], "Fixed commit": "447bac715f621aa6bb14ba25ad54fe49e5086fe8", "Url": "https://api.github.com/repos/theKidOfArcrania/yourpisd", "Date": "2016-09-05T07:48:15Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bakedModel = renderItem.getItemModelWithOverrides(stack, null, null); } catch (java.lang.Throwable throwable) { mezz.jei.api.ingredients.IIngredientHelper<V> ingredientHelper = ingredientRegistry.getIngredientHelper(ingredient); java.lang.String stackInfo = ingredientHelper.getErrorInfo(ingredient); mezz.jei.util.Log.error((\"ItemStack crashed getting IBakedModel. \" + stackInfo), throwable); guiItemStack.clear(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3366/buggy-version/src.main.java.mezz.jei.gui.ingredients.GuiIngredientFastList.java", "BodyUseAPI": ["net.minecraft.client.renderer.RenderItem.getItemModelWithOverrides(net.minecraft.item.ItemStack,<nulltype>,<nulltype>)"], "Fixed commit": "905d67ecd9b755ce9fdcc63ffa1502615982d600", "Url": "https://api.github.com/repos/mezz/JustEnoughItems", "Date": "2016-11-03T04:35:52Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { connection = ((java.net.HttpURLConnection) (new java.net.URL(track.getWaveformUri().toString()).openConnection())); connection.connect(); java.io.InputStream input = connection.getInputStream(); bitmap = android.graphics.BitmapFactory.decodeStream(input); } finally { if (connection != null) { connection.disconnect(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1599/buggy-version/src.main.java.com.github.michaelengland.api.SoundCloudClient.java", "BodyUseAPI": ["android.graphics.BitmapFactory.decodeStream(java.io.InputStream)", "com.github.michaelengland.entities.Track.getWaveformUri()", "track.getWaveformUri().toString()", "java.net.URL.openConnection()", "java.net.HttpURLConnection.connect()", "java.net.HttpURLConnection.getInputStream()"], "Fixed commit": "ce8cfcda53168a62d9842435fddbc44f829ee856", "Url": "https://api.github.com/repos/michaelengland/SoundWall", "Date": "2013-04-21T12:44:59Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { collection = com.eightkdata.mongowp.utils.BsonReaderTool.getString(doc, com.eightkdata.mongowp.mongoserver.api.safe.library.v3m0.commands.diagnostic.CollStatsCommand.CollStatsArgument.COLLECTION_FIELD); } catch (com.eightkdata.mongowp.exceptions.NoSuchKeyException noSuchKeyException) { try { collection = com.eightkdata.mongowp.utils.BsonReaderTool.getString(doc, com.eightkdata.mongowp.mongoserver.api.safe.library.v3m0.commands.diagnostic.CollStatsCommand.CollStatsArgument.LOWERCASE_COLLECTION_FIELD); } catch (com.eightkdata.mongowp.exceptions.NoSuchKeyException noSuchLowercaseKeyException) { throw noSuchKeyException; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4072/buggy-version/library.v3m0.src.main.java.com.eightkdata.mongowp.mongoserver.api.safe.library.v3m0.commands.diagnostic.CollStatsCommand.java", "BodyUseAPI": ["com.eightkdata.mongowp.utils.BsonReaderTool.getString(com.eightkdata.mongowp.bson.BsonDocument,com.eightkdata.mongowp.mongoserver.api.safe.library.v3m0.commands.diagnostic.StringField)"], "Fixed commit": "1e99794f963b2566fe8ec5c6bd6bb7e4994103f6", "Url": "https://api.github.com/repos/torodb/mongowp", "Date": "2016-03-21T17:06:12Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ssh.loadKnownHosts(); } catch (java.io.IOException e) { es.unizar.disco.core.logger.DiceLogger.logException(es.unizar.disco.simulation.greatspn.ssh.GspnSshSimulationPlugin.getDefault(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6361/buggy-version/es.unizar.disco.simulation.greatspn.ssh.src.es.unizar.disco.simulation.greatspn.ssh.simulator.GspnSshSimulator.java", "BodyUseAPI": ["net.schmizz.sshj.SSHClient.loadKnownHosts()"], "Fixed commit": "c7345bb1775788cff4ea996566443f5b05a28921", "Url": "https://api.github.com/repos/dice-project/DICE-Simulation", "Date": "2016-09-01T14:33:09Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.fasterxml.jackson.databind.JsonNode node1 = gov.healthit.chpl.JSONUtils.getReader().readTree(json1); com.fasterxml.jackson.databind.JsonNode node2 = gov.healthit.chpl.JSONUtils.getReader().readTree(json2); equals = node1.equals(node2); } catch (java.lang.NullPointerException e) { equals = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5418/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.JSONUtils.java", "BodyUseAPI": ["gov.healthit.chpl.JSONUtils.getReader()", "com.fasterxml.jackson.databind.ObjectReader.readTree(java.lang.String)", "com.fasterxml.jackson.databind.ObjectReader.readTree(java.lang.String)", "com.fasterxml.jackson.databind.JsonNode.equals(com.fasterxml.jackson.databind.JsonNode)", "gov.healthit.chpl.JSONUtils.getReader()"], "Fixed commit": "127b8f1eafdf33656dc1967ae33c21ae166243fb", "Url": "https://api.github.com/repos/kekey1/chpl-api", "Date": "2015-11-05T17:34:14Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dataManager = com.example.xml.XMLSerialize.read(getActivity()); FillLessonAdapter(dataManager.getSubGroup(getActivity())); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1424/buggy-version/mainp5.src.com.example.view.fragments.FragmentOne.java", "BodyUseAPI": ["com.example.view.fragments.FragmentOne.FillLessonAdapter(dataManager.getSubGroup(getActivity()))", "com.example.xml.XMLSerialize.read(getActivity())", "com.example.xml.DataManager.getSubGroup(getActivity())", "com.example.view.fragments.FragmentOne.getActivity()", "com.example.view.fragments.FragmentOne.getActivity()"], "Fixed commit": "c6e58d9f8464ea34c3be7da9a3c1901935fd690c", "Url": "https://api.github.com/repos/macmaczhl/AndroidTimetableForBntu", "Date": "2016-03-16T20:11:13Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return client.verify(otp); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2119/buggy-version/src.eu.webteq.services.impl.YubikeyServiceImpl.java", "BodyUseAPI": ["com.yubico.client.v2.YubicoClient.verify(java.lang.String)"], "Fixed commit": "8432b0f68410d7fc75344e27b13c997cdebb643a", "Url": "https://api.github.com/repos/sbuckle/Alfresco-Yubikey-Extension", "Date": "2014-04-06T09:29:18Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return org.motechproject.ananya.referencedata.web.mapper.LocationResponseMapper.mapLocationsToBeVerified(locationService.getLocationsToBeVerified()); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(\"The system is down. Please try after some time.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8144/buggy-version/ananya-reference-data-web.src.main.java.org.motechproject.ananya.referencedata.web.controller.HomeController.java", "BodyUseAPI": ["org.motechproject.ananya.referencedata.web.mapper.LocationResponseMapper.mapLocationsToBeVerified(locationService.getLocationsToBeVerified())", "org.motechproject.ananya.referencedata.contactCenter.service.LocationService.getLocationsToBeVerified()"], "Fixed commit": "147fe7920f2c66b5af2b159552e81fb821fcf95e", "Url": "https://api.github.com/repos/motech/ananya-reference-data", "Date": "2012-11-20T09:55:47Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((computer.getNumberOfRunningJobs()) == null) { computer.setNumberOfRunningJobs(0); } computerService.saveUpdate(computer); } catch (java.lang.Exception e) { org.experimenter.web.common.panel.ComputerFormPanel.LOG.error(\"Unable to save the computer\", e); error(\"Error creating the computer.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8880/buggy-version/experimenter-web.src.main.java.org.experimenter.web.common.panel.ComputerFormPanel.java", "BodyUseAPI": ["org.experimenter.repository.entity.Computer.setNumberOfRunningJobs(int)", "org.experimenter.repository.entity.Computer.getNumberOfRunningJobs()", "org.experimenter.repository.service.ComputerService.saveUpdate(org.experimenter.repository.entity.Computer)"], "Fixed commit": "be727410c93101303316a235242735c23068c6b1", "Url": "https://api.github.com/repos/jfaryad/experimenter", "Date": "2012-12-04T12:59:58Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { javax.naming.Context initCtx = new javax.naming.InitialContext(); path = ((java.lang.String) (initCtx.lookup((\"java:comp/env/\" + pathkey)))); } catch (javax.naming.NamingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7278/buggy-version/src.main.java.com.nidhinova.tika.server.TikaService.java", "BodyUseAPI": ["javax.naming.Context.lookup(java.lang.String)"], "Fixed commit": "e81b79445440e3eb9acaeaf18ea10339a94dbc05", "Url": "https://api.github.com/repos/gselva/Simple-Tika-Server", "Date": "2011-04-20T17:01:54Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(zkMap.get(keyInZk).equals(valueInDb.toString().trim()))) { errorKeyList.add(keyInZk); } } catch (java.lang.Exception e) { com.baidu.disconf.web.service.config.service.impl.ConfigMgrImpl.LOG.warn((((((e.toString()) + \" \") + (zkMap.get(keyInZk))) + \" ; \") + valueInDb)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9133/buggy-version/disconf-web.src.main.java.com.baidu.disconf.web.service.config.service.impl.ConfigMgrImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.Object.toString()", "java.lang.String.trim()", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "ae6267c60dbe750afd59611dd9a59c59b15751c8", "Url": "https://api.github.com/repos/knightliao/disconf", "Date": "2014-09-17T09:03:10Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { chapterList.add(java.lang.Integer.parseInt(f.getName())); } catch (java.lang.NumberFormatException e) { org.wycliffeassociates.translationrecorder.Reporting.Logger.e(this.toString(), ((\"Tried to add chapter \" + (f.getName())) + \" which does not parse as an Integer\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6685/buggy-version/translationRecorder.app.src.main.java.org.wycliffeassociates.translationrecorder.ProjectManager.tasks.resync.ChapterResyncTask.java", "BodyUseAPI": ["java.io.File.getName()", "java.util.List<java.lang.Integer>.add(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "3e7bc0b5a5d8f7ebcb5cb2c1cf1385441e74db05", "Url": "https://api.github.com/repos/WycliffeAssociates/translationRecorder", "Date": "2017-01-26T19:57:26Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1); } catch (java.lang.InterruptedException e) { com.crashlytics.android.Crashlytics.logException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5817/buggy-version/app.src.main.java.org.jorge.lolin1.io.database.SQLiteDAO.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "c6053824718328231dd85ec802bf9ae3d60c8cae", "Url": "https://api.github.com/repos/Stoyicker/LoLin1", "Date": "2014-12-23T12:10:43Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ret = opt.toByteArray(); } catch (java.lang.OutOfMemoryError e) { ret = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/464/buggy-version/src.us.shandian.blacklight.cache.file.FileCacheManager.java", "BodyUseAPI": ["java.io.ByteArrayOutputStream.toByteArray()"], "Fixed commit": "3a871bf3ef05f71524ec0b2ceb8cd2fc9e269671", "Url": "https://api.github.com/repos/PeterCxy/BlackLight", "Date": "2014-05-23T13:15:18Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { chercherFonc(nom).ajouteParam(type); } catch (Compil.TabIdent.NoSuchKeyException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3720/buggy-version/Compil.TabIdent.java", "BodyUseAPI": ["Compil.TabIdent.chercherFonc(java.lang.String)", "Compil.IdFonc.ajouteParam(int)"], "Fixed commit": "d11550ae7fa231b95268bbabaa244a589395b27d", "Url": "https://api.github.com/repos/miuhaki/ProjCompil", "Date": "2014-03-24T14:03:18Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { startActivity(intent(com.example.damian.projektgrupowy.view.activity.PhoneActivity.class)); java.lang.Thread.sleep(5000); finish(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5058/buggy-version/app.src.main.java.com.example.damian.projektgrupowy.view.activity.SplashActivity.java", "BodyUseAPI": ["com.example.damian.projektgrupowy.view.activity.SplashActivity.intent(java.lang.Class)", "com.example.damian.projektgrupowy.view.activity.SplashActivity.startActivity(android.content.Intent)", "java.lang.Thread.sleep(int)", "com.example.damian.projektgrupowy.view.activity.SplashActivity.finish()"], "Fixed commit": "0cd3b292714b1c29a500088de65d33f77979eec1", "Url": "https://api.github.com/repos/damiengrzelak/ProjektGrupowy", "Date": "2017-04-14T14:40:28Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { no.stelar7.api.l4j8.impl.raw.SpectatorGameInfo fg = ((no.stelar7.api.l4j8.impl.raw.SpectatorGameInfo) (builder.build())); no.stelar7.api.l4j8.impl.raw.DataCall.getCacheProvider().store(URLEndpoint.V3_SPECTATOR_CURRENT, fg, server); return fg; } catch (java.lang.ClassCastException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8975/buggy-version/src.main.java.no.stelar7.api.l4j8.impl.raw.SpectatorAPI.java", "BodyUseAPI": ["no.stelar7.api.l4j8.impl.raw.DataCall.getCacheProvider()", "no.stelar7.api.l4j8.impl.raw.DataCallBuilder.build()", "no.stelar7.api.l4j8.impl.raw.DataCall.getCacheProvider().store(URLEndpoint.V3_SPECTATOR_CURRENT,no.stelar7.api.l4j8.impl.raw.SpectatorGameInfo,no.stelar7.api.l4j8.impl.raw.Platform)"], "Fixed commit": "3b1a7a3410030e6dcbfe96aa0b8de071847ebc38", "Url": "https://api.github.com/repos/stelar7/L4J8", "Date": "2017-12-01T00:24:30Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Integer gender = com.jayway.jsonpath.JsonPath.parse(dataStateJson).read((commonJsonPath + \".gender\")); if ((gender != null) && (gender == 1)) { user.setSex(\"male\"); }else if ((gender != null) && (gender == 0)) { user.setSex(\"female\"); } } catch (com.jayway.jsonpath.PathNotFoundException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8378/buggy-version/src.main.java.com.crawl.zhihu.parser.ZhiHuNewUserDetailPageParser.java", "BodyUseAPI": ["com.jayway.jsonpath.JsonPath.parse(dataStateJson).read(java.lang.String)", "com.crawl.zhihu.entity.User.setSex(java.lang.String)", "com.jayway.jsonpath.JsonPath.parse(java.lang.String)", "com.crawl.zhihu.entity.User.setSex(java.lang.String)"], "Fixed commit": "9a2bb33952ed07a289ccfba120149e68ffa31eed", "Url": "https://api.github.com/repos/wycm/zhihu-crawler", "Date": "2017-01-10T02:00:48Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { amount = java.lang.Double.parseDouble(args[1]); } catch (java.lang.RuntimeException ex) { cmdsender.sendMessage(((((net.md_5.bungee.api.ChatColor.GRAY) + \"[Realms] \") + (net.md_5.bungee.api.ChatColor.RED)) + \"invalid number.\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3969/buggy-version/src.main.java.net.ghostrealms.cmd.PayCommand.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "2d5a2cf0b7e0058b21d52609bde441243a7c4594", "Url": "https://api.github.com/repos/GhostRealms/EconAliases", "Date": "2015-02-16T00:13:26Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (de.larmic.butterfaces.util.StringUtils.isNotEmpty(ajaxBehavior.getDelay())) { delay = ajaxBehavior.getDelay(); } resetValues = ajaxBehavior.isResetValues(); } catch (java.lang.NoSuchMethodError e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2403/buggy-version/components.src.main.java.de.larmic.butterfaces.component.behavior.JsfAjaxRequest.java", "BodyUseAPI": ["de.larmic.butterfaces.util.StringUtils.isNotEmpty(ajaxBehavior.getDelay())", "javax.faces.component.behavior.AjaxBehavior.getDelay()", "javax.faces.component.behavior.AjaxBehavior.isResetValues()", "javax.faces.component.behavior.AjaxBehavior.getDelay()"], "Fixed commit": "68f4e993abf6cc12f5ca3b54f3a85f3b978c0607", "Url": "https://api.github.com/repos/ButterFaces/ButterFaces", "Date": "2016-04-29T07:59:07Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stack.writeToNBT(tag); list.appendTag(tag); } catch (java.lang.NullPointerException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5129/buggy-version/src.main.java.joshie.harvest.core.helpers.NBTHelper.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagList.appendTag(net.minecraft.nbt.NBTTagCompound)", "joshie.harvest.core.util.holder.AbstractHolder.writeToNBT(net.minecraft.nbt.NBTTagCompound)"], "Fixed commit": "b4624e1115cfb26f24ed26ff53007abcfad45f9a", "Url": "https://api.github.com/repos/PenguinSquad/Harvest-Festival", "Date": "2017-02-14T01:22:08Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { inputStream = new java.io.FileInputStream(configFile); java.util.Properties properties = new java.util.Properties(); properties.load(inputStream); configuration.addProperties(properties); } catch (java.io.FileNotFoundException e) { } catch (java.io.IOException e) { e.printStackTrace(); } finally { org.apache.commons.io.IOUtils.closeQuietly(inputStream); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1563/buggy-version/src.main.java.org.rpwf.model.ORMUtil.java", "BodyUseAPI": ["java.util.Properties.load(java.io.InputStream)", "org.hibernate.cfg.Configuration.addProperties(java.util.Properties)"], "Fixed commit": "0ccedac34338927a46aace93f29d57adb9e1ebc8", "Url": "https://api.github.com/repos/mheck136/TUB_RPWF", "Date": "2014-11-21T10:09:05Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fi.helsinki.cs.tmc.core.domain.Course currentCourse = fi.helsinki.cs.tmc.core.Core.getCourseDAO().getCurrentCourse(fi.helsinki.cs.tmc.core.Core.getSettings()); fi.helsinki.cs.tmc.core.Core.getUpdater().updateExercises(currentCourse); } catch (fi.helsinki.cs.tmc.core.ui.UserVisibleException uve) { fi.helsinki.cs.tmc.core.Core.getErrorHandler().raise(uve.getLocalizedMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/680/buggy-version/eclipse-plugin.src.tmc.eclipse.ui.SettingsDialog.java", "BodyUseAPI": ["fi.helsinki.cs.tmc.core.Core.getCourseDAO()", "fi.helsinki.cs.tmc.core.Core.getUpdater()", "fi.helsinki.cs.tmc.core.Core.getSettings()", "fi.helsinki.cs.tmc.core.Core.getUpdater().updateExercises(fi.helsinki.cs.tmc.core.domain.Course)", "fi.helsinki.cs.tmc.core.Core.getCourseDAO().getCurrentCourse(fi.helsinki.cs.tmc.core.Core.getSettings())"], "Fixed commit": "a006215bdb5244d3a876d0d104cbcb38956cce61", "Url": "https://api.github.com/repos/tmc-eclipse/tmc-eclipse", "Date": "2014-06-25T08:14:19Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final java.lang.String languageTag = de.norvos.account.SettingsService.getStringSetting(de.norvos.account.SettingsService.Setting.LOCALE); return de.norvos.i18n.AvailableLanguage.forLocaleLanguage(java.util.Locale.forLanguageTag(languageTag)); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1649/buggy-version/src.main.java.de.norvos.account.SettingsService.java", "BodyUseAPI": ["de.norvos.account.SettingsService.getStringSetting(de.norvos.account.SettingsService.Setting)", "java.util.Locale.forLanguageTag(java.lang.String)", "de.norvos.i18n.AvailableLanguage.forLocaleLanguage(java.util.Locale)"], "Fixed commit": "924bb890ce362f5d611ed5ad7557409134569857", "Url": "https://api.github.com/repos/connorlanigan/norvos", "Date": "2015-10-17T13:28:02Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sendIntent.putExtra(Intent.EXTRA_TEXT, buildOutput().toString()); } catch (java.lang.Exception e) { sendIntent.putExtra(Intent.EXTRA_TEXT, getString(R.string.msg_too_large)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2446/buggy-version/src.de.onyxbits.listmyapps.MainActivity.java", "BodyUseAPI": ["java.lang.CharSequence.toString()", "de.onyxbits.listmyapps.MainActivity.buildOutput()", "android.content.Intent.putExtra(Intent.EXTRA_TEXT,java.lang.String)"], "Fixed commit": "e134061435f109ad57143b9625ab974701362bb0", "Url": "https://api.github.com/repos/onyxbits/listmyaps", "Date": "2013-10-01T19:55:06Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mPowerManagerService = ((com.spazedog.lib.reflecttools.ReflectClass) (mPowerManager.findField(\"mService\").getValue(Result.INSTANCE))); } catch (com.spazedog.lib.reflecttools.ReflectException e) { mPowerManagerService = com.spazedog.lib.reflecttools.ReflectClass.fromName(\"android.os.IPowerManager\").bindInterface(\"power\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8253/buggy-version/src.java.com.spazedog.xposed.additionsgb.backend.pwm.iface.IMediatorSetup.java", "BodyUseAPI": ["mPowerManager.findField(\"mService\").getValue(Result.INSTANCE)", "com.spazedog.lib.reflecttools.ReflectClass.findField(java.lang.String)"], "Fixed commit": "1cd52afa44409cd5d0ac0bc8cf0200d55afa2452", "Url": "https://api.github.com/repos/SpazeDog/xposed-additions", "Date": "2015-12-21T01:23:21Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/441/buggy-version/app.src.main.java.gsoc.google.com.byop.ui.poisList.CreatePOIDialogFragment.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "eb5a7b1f1638c6480ce5ac19361ebffd6ec8b1e8", "Url": "https://api.github.com/repos/LiquidGalaxyLAB/BYOP", "Date": "2016-08-24T10:18:08Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { super.processResultFiles(); } catch (org.apache.commons.vfs.FileSystemException ex) { java.util.logging.Logger.getLogger(pt.webdetails.cpk.elements.impl.kettleOutputs.ResultFilesKettleOutput.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/9106/buggy-version/src.pt.webdetails.cpk.elements.impl.kettleOutputs.ResultFilesKettleOutput.java", "BodyUseAPI": ["pt.webdetails.cpk.elements.impl.kettleOutputs.KettleOutput.processResultFiles()"], "Fixed commit": "3d9655d6e7641de4d54bb1bed10e7a0581c2d558", "Url": "https://api.github.com/repos/webdetails/cpf", "Date": "2013-04-18T17:25:27Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8882/buggy-version/src.de.touhou.game.GameEngine.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "ff8fd29e4fcdea9b405e0067a661277b9d3d5850", "Url": "https://api.github.com/repos/SelfGamer/AdvancedPlatformer", "Date": "2015-10-08T21:07:06Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { isRedirected = waiter.until(org.openqa.selenium.support.ui.ExpectedConditions.titleIs(cpe.getLPageTitle())); com.tch.gui.page.main.LoginPage.loger.info(\"The web access is redirected to login page firstly\"); } catch (org.openqa.selenium.TimeoutException toe) { com.tch.gui.page.main.LoginPage.loger.debug(\"Home page display directly without redirect\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7316/buggy-version/java.autowork.genericGUI.src.main.java.com.tch.gui.page.main.LoginPage.java", "BodyUseAPI": ["org.openqa.selenium.support.ui.WebDriverWait.until(org.openqa.selenium.support.ui.ExpectedConditions.titleIs(cpe.getLPageTitle()))", "org.openqa.selenium.support.ui.ExpectedConditions.titleIs(cpe.getLPageTitle())", "org.apache.logging.log4j.Logger.info(java.lang.String)", "com.tch.common.CPE.getLPageTitle()"], "Fixed commit": "1a6aec2f309751b4c86ffd49cf16cc52dbf2c397", "Url": "https://api.github.com/repos/zach2014/autoware", "Date": "2015-06-14T12:28:53Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { Out.write(\"rtdeact localhost/SimplePathFollower01.rtc\"); Out.write(\"rtdeact localhost/AutonomousVehicleModelRTC0.rtc\"); Out.write(\"rtdeact localhost/SimplePathFollower02.rtc\"); Out.close(); } catch (java.io.IOException ex) { ex.printStackTrace(); java.lang.System.out.println(\"\ufffdh\ufffd\ufffd\ufffdC\ufffdo\ufffdN\ufffd\ufffd\ufffdX\ufffd\u0303\ufffd\ufffd[\ufffdh\ufffd\u024e\ufffd\ufffds\ufffd\ufffd\ufffd\u0702\ufffd\ufffd\ufffd\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2959/buggy-version/src.Application.java", "BodyUseAPI": ["java.io.PipedWriter.write(java.lang.String)", "java.io.PipedWriter.write(java.lang.String)", "java.io.PipedWriter.write(java.lang.String)", "java.io.PipedWriter.close()"], "Fixed commit": "a75f221b6aee7e7ef542db13a2c2f5267c5c3aef", "Url": "https://api.github.com/repos/futail2a/NavigationManager", "Date": "2017-01-28T02:27:46Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { plugin.MCPlayers.get(killer).addKills(1); } catch (java.lang.NullPointerException ex) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2270/buggy-version/src.main.java.me.stutiguias.listeners.McpkOnDeathListener.java", "BodyUseAPI": ["plugin.MCPlayers.get(killer).addKills(int)", "plugin.MCPlayers.get(java.lang.String)"], "Fixed commit": "c3eb0cb92965babdd6d7ccf5eb1da90494cc5f79", "Url": "https://api.github.com/repos/stutiguias/MCPK", "Date": "2013-11-24T20:38:19Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { usernumber = java.lang.String.valueOf(sharedPreferences.get(getActivity(), \"usernumber\", \"\")); userid = java.lang.String.valueOf(sharedPreferences.get(getActivity(), \"userid\", \"\")); username = java.lang.String.valueOf(sharedPreferences.get(getActivity(), \"username\", \"\")); sessionid = java.lang.String.valueOf(sharedPreferences.get(getActivity(), \"sessionid\", \"\")); userlogourl = java.lang.String.valueOf(sharedPreferences.get(getActivity(), \"userlogo\", \"\")); } catch (java.lang.Throwable throwable) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5837/buggy-version/smallrecipe.src.main.java.com.cn.smallrecipe.fragment.F_My.java", "BodyUseAPI": ["cn.com.xxutils.util.XXSharedPreferences.get(getActivity(),java.lang.String,java.lang.String)", "com.cn.smallrecipe.fragment.F_My.getActivity()", "com.cn.smallrecipe.fragment.F_My.getActivity()", "java.lang.String.valueOf(sharedPreferences.get(getActivity(), \"usernumber\", \"\"))", "cn.com.xxutils.util.XXSharedPreferences.get(getActivity(),java.lang.String,java.lang.String)", "java.lang.String.valueOf(sharedPreferences.get(getActivity(), \"sessionid\", \"\"))", "cn.com.xxutils.util.XXSharedPreferences.get(getActivity(),java.lang.String,java.lang.String)", "java.lang.String.valueOf(sharedPreferences.get(getActivity(), \"userid\", \"\"))", "com.cn.smallrecipe.fragment.F_My.getActivity()", "java.lang.String.valueOf(sharedPreferences.get(getActivity(), \"userlogo\", \"\"))", "cn.com.xxutils.util.XXSharedPreferences.get(getActivity(),java.lang.String,java.lang.String)", "cn.com.xxutils.util.XXSharedPreferences.get(getActivity(),java.lang.String,java.lang.String)", "java.lang.String.valueOf(sharedPreferences.get(getActivity(), \"username\", \"\"))", "com.cn.smallrecipe.fragment.F_My.getActivity()", "com.cn.smallrecipe.fragment.F_My.getActivity()"], "Fixed commit": "116f6ad80748bbc4ffac04e3c6b7c7103ddbd110", "Url": "https://api.github.com/repos/AndroidDevelopersZhao/SmallRecipe", "Date": "2016-02-27T20:57:02Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String s = net.minecraft.client.Minecraft.getMinecraft().getCurrentServerData().serverIP; kenijey.harshencastle.network.events.NetworkEventHarshenInvToggle.go(player); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4659/buggy-version/src.main.java.kenijey.harshencastle.HarshenKeybinding.java", "BodyUseAPI": ["net.minecraft.client.Minecraft.getMinecraft()", "kenijey.harshencastle.network.events.NetworkEventHarshenInvToggle.go(net.minecraft.entity.player.EntityPlayer)", "net.minecraft.client.Minecraft.getMinecraft().getCurrentServerData()"], "Fixed commit": "67e7d7464843d1f02c37f2c10b3342306c356157", "Url": "https://api.github.com/repos/kenijey/harshenuniverse", "Date": "2017-07-26T13:42:09Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(500L); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7137/buggy-version/app.controllers.DatabaseController.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "fea8c6330248d4a85c58c9054363403c0b5d90c2", "Url": "https://api.github.com/repos/coreycaplan3/PlaySimpleNewsFeed", "Date": "2016-06-20T05:27:13Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { de.weltraumschaf.commons.InvokableAdapter.main(invokanle, de.weltraumschaf.commons.IOStreams.newDefault()); } catch (java.io.UnsupportedEncodingException ex) { java.util.logging.Logger.getLogger(de.weltraumschaf.commons.InvokableAdapter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); invokanle.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6902/buggy-version/src.main.java.de.weltraumschaf.commons.InvokableAdapter.java", "BodyUseAPI": ["de.weltraumschaf.commons.InvokableAdapter.main(de.weltraumschaf.commons.Invokable,de.weltraumschaf.commons.IOStreams.newDefault())", "de.weltraumschaf.commons.IOStreams.newDefault()"], "Fixed commit": "ef627ac6a1df344a184cc7cf0583964d7192ed38", "Url": "https://api.github.com/repos/Weltraumschaf/commons", "Date": "2012-10-05T18:29:09Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { runCommand(arr[0], arr[1]); } catch (java.lang.Exception e) { runCommand(arr[0], \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5515/buggy-version/src.bot.events.EventHandler.java", "BodyUseAPI": ["bot.events.EventHandler.runCommand(java.lang.String,java.lang.String)"], "Fixed commit": "b3eee89e003e1cfc7dce70da85b940db67a992da", "Url": "https://api.github.com/repos/Jenna3715/ChatBot", "Date": "2017-06-02T07:40:07Z"},
{"Line": "=>859", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { defaultFilterWrappers = mavenFileFilter.getDefaultFilterWrappers(mavenResourcesExecution); } catch (org.apache.maven.shared.filtering.MavenFilteringException e) { getLog().error((\"fail to build filering wrappers \" + (e.getMessage()))); throw new org.apache.maven.plugin.MojoExecutionException(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2887/buggy-version/src.main.java.org.codehaus.mojo.rpm.AbstractRPMMojo.java", "BodyUseAPI": ["org.apache.maven.shared.filtering.MavenFileFilter.getDefaultFilterWrappers(org.apache.maven.shared.filtering.MavenResourcesExecution)"], "Fixed commit": "dfe5bb503d83be5116a11d955d02f2c067039322", "Url": "https://api.github.com/repos/chiknrice/rpm-maven-plugin", "Date": "2017-04-01T11:00:26Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { router.updateDataNodeStatus(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4675/buggy-version/src.main.java.edu.usfca.cs.thread.ServerGeneralHeartbeatThread.java", "BodyUseAPI": ["edu.usfca.cs.route.HeartbeatRouter.updateDataNodeStatus()"], "Fixed commit": "abeaf1540591b579e2718a09c482d603eedbe87a", "Url": "https://api.github.com/repos/peterpandayang/temp_dfs", "Date": "2017-10-07T20:50:04Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { super.complete(dbClient, status, coded); switch (status) { case error : dbClient.error(com.emc.storageos.db.client.model.BlockSnapshot.class, getId(), getOpId(), coded); break; default : dbClient.ready(com.emc.storageos.db.client.model.BlockSnapshot.class, getId(), getOpId()); } com.emc.storageos.volumecontroller.impl.block.taskcompleter.BlockSnapshotEstablishGroupTaskCompleter.logger.info(\"Done Establish Volume-Snapshot group relation {}, with Status: {}\", getOpId(), status.name()); } catch (java.lang.Exception e) { com.emc.storageos.volumecontroller.impl.block.taskcompleter.BlockSnapshotEstablishGroupTaskCompleter.logger.error((\"Failed updating status. Establish Volume-Snapshot group relation {}, for task \" + (getOpId())), getId(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7282/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.block.taskcompleter.BlockSnapshotEstablishGroupTaskCompleter.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,getOpId(),status.name())", "com.emc.storageos.volumecontroller.impl.block.taskcompleter.BlockSnapshotEstablishGroupTaskCompleter.getId()", "Operation.Status.name()", "com.emc.storageos.volumecontroller.impl.block.taskcompleter.BlockSnapshotEstablishGroupTaskCompleter.getOpId()", "com.emc.storageos.volumecontroller.impl.block.taskcompleter.BlockSnapshotTaskCompleter.complete(com.emc.storageos.db.client.DbClient,Operation.Status,com.emc.storageos.svcs.errorhandling.model.ServiceCoded)", "com.emc.storageos.volumecontroller.impl.block.taskcompleter.BlockSnapshotEstablishGroupTaskCompleter.getId()", "com.emc.storageos.volumecontroller.impl.block.taskcompleter.BlockSnapshotEstablishGroupTaskCompleter.getOpId()", "com.emc.storageos.volumecontroller.impl.block.taskcompleter.BlockSnapshotEstablishGroupTaskCompleter.getOpId()", "com.emc.storageos.db.client.DbClient.ready(java.lang.Class,getId(),getOpId())", "com.emc.storageos.db.client.DbClient.error(java.lang.Class,getId(),getOpId(),com.emc.storageos.svcs.errorhandling.model.ServiceCoded)"], "Fixed commit": "e9f7db4953b417b16050a6989e685ff0edc497d8", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-09-08T14:56:09Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (null != (getSelectedServer())) { treeViewer.setInput(getSelectedServer()); }else { treeViewer.getTree().removeAll(); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5998/buggy-version/bundles.org.eclipse.ecf.salvo.ui.src.org.eclipse.ecf.salvo.ui.internal.views.digest.DigestView.java", "BodyUseAPI": ["org.eclipse.jface.viewers.TreeViewer.setInput(org.eclipse.ecf.protocol.nntp.model.IServer)", "treeViewer.getTree().removeAll()", "org.eclipse.ecf.salvo.ui.internal.views.digest.DigestView.5.getSelectedServer()", "org.eclipse.ecf.salvo.ui.internal.views.digest.DigestView.5.getSelectedServer()", "org.eclipse.jface.viewers.TreeViewer.getTree()"], "Fixed commit": "32cf5701099a64a28f14f97abedd5ee97cb93e32", "Url": "https://api.github.com/repos/isudana/Newsreader", "Date": "2011-07-31T06:48:40Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { long currentTime = java.lang.System.currentTimeMillis(); if (!(((note.getCA_Parcial().getDateFrom().getTime()) <= currentTime) && ((note.getCA_Parcial().getDateTo().getTime()) >= currentTime))) { decimalBox.setReadonly(true); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8127/buggy-version/CustomZKLookAndFeel37.WEB-INF.src.org.fcaq.components.WNoteEditor.java", "BodyUseAPI": ["org.zkoss.zul.Decimalbox.setReadonly(boolean)", "org.fcaq.model.X_CA_Note.getCA_Parcial()", "note.getCA_Parcial().getDateFrom()", "note.getCA_Parcial().getDateTo().getTime()", "org.fcaq.model.X_CA_Note.getCA_Parcial()", "note.getCA_Parcial().getDateFrom().getTime()", "note.getCA_Parcial().getDateTo()", "java.lang.System.currentTimeMillis()"], "Fixed commit": "1cf19fd60af2d18e56cd2f299156d97ef8499661", "Url": "https://api.github.com/repos/albertojuarez/FCAQCustomZK", "Date": "2013-01-12T07:13:11Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { rootpoa = org.omg.PortableServer.POAHelper.narrow(orb.resolve_initial_references(\"RootPOA\")); org.omg.CORBA.Object roomObject = rootpoa.servant_to_reference(rooms.get(0)); room = interfaces.RoomHelper.narrow(roomObject); } catch (org.omg.CORBA.ORBPackage.InvalidName e) { e.printStackTrace(); } catch (org.omg.PortableServer.POAPackage.ServantNotActive e) { e.printStackTrace(); } catch (org.omg.PortableServer.POAPackage.WrongPolicy e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8075/buggy-version/server.src.server.WorldManagerImpl.java", "BodyUseAPI": ["org.omg.PortableServer.POAHelper.narrow(orb.resolve_initial_references(\"RootPOA\"))", "interfaces.RoomHelper.narrow(org.omg.CORBA.Object)", "java.util.List<server.RoomImpl>.get(int)", "org.omg.PortableServer.POA.servant_to_reference(rooms.get(0))", "org.omg.CORBA.ORB.resolve_initial_references(java.lang.String)"], "Fixed commit": "c2615b915098d29d109073f7d6ba3c55c0927a68", "Url": "https://api.github.com/repos/noullet/corba", "Date": "2012-04-24T17:04:19Z"},
{"Line": "=>868", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { skuDetails = mService.getSkuDetails(3, mContext.getPackageName(), com.android.vending.billing.util.IabHelper.ITEM_TYPE_INAPP, querySkus); } catch (java.lang.NullPointerException e) { e.printStackTrace(); return com.android.vending.billing.util.IabHelper.BILLING_RESPONSE_RESULT_ERROR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1975/buggy-version/src.com.android.vending.billing.util.IabHelper.java", "BodyUseAPI": ["com.android.vending.billing.IInAppBillingService.getSkuDetails(int,mContext.getPackageName(),java.lang.String,android.os.Bundle)", "android.content.Context.getPackageName()"], "Fixed commit": "afa6e1954c50ac6fffeef87ab7a72e0714ed6e05", "Url": "https://api.github.com/repos/Xlythe/PlayBilling", "Date": "2013-10-09T19:42:04Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mobTrophy = openblocks.common.TrophyHandler.Trophy.valueOf(net.minecraft.entity.EntityList.getEntityString(entity)); } catch (java.lang.Exception e) { if (mobTrophy != null) { openblocks.utils.BlockUtils.dropItemStackInWorld(entity.worldObj, entity.posX, entity.posY, entity.posZ, mobTrophy.getItemStack()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3255/buggy-version/src.openblocks.common.TrophyHandler.java", "BodyUseAPI": ["openblocks.common.TrophyHandler.Trophy.valueOf(net.minecraft.entity.EntityList.getEntityString(entity))", "net.minecraft.entity.EntityList.getEntityString(net.minecraft.entity.Entity)"], "Fixed commit": "3a4c12a38342c6b11dda36ae989dfaacffd7b717", "Url": "https://api.github.com/repos/OpenMods/OpenBlocks", "Date": "2013-08-17T11:38:15Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { inputStream = getAsStream(blobRef); return inputStream == null ? null : org.apache.commons.io.IOUtils.toByteArray(getAsStream(blobRef)); } catch (final java.io.IOException e) { throw org.nickelproject.lib.util.RethrownException.rethrow(e); } finally { if (inputStream != null) { try { inputStream.close(); } catch (final java.io.IOException e) { throw org.nickelproject.lib.util.RethrownException.rethrow(e); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3674/buggy-version/src.main.java.org.nickelproject.lib.blobStore.S3BlobStore.java", "BodyUseAPI": ["org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)", "org.nickelproject.lib.blobStore.S3BlobStore.getAsStream(org.nickelproject.lib.blobStore.BlobRef)", "org.nickelproject.lib.blobStore.S3BlobStore.getAsStream(org.nickelproject.lib.blobStore.BlobRef)"], "Fixed commit": "1a727e7fe4b0a06e18637dd487bcaa2d23074c92", "Url": "https://api.github.com/repos/nyjle/nickel", "Date": "2013-11-06T04:28:06Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String role = resolveDependency(org.neo4j.kernel.ha.cluster.member.ClusterMembers.class).getCurrentMemberRole(); if (\"master\".equalsIgnoreCase(role)) { return com.graphaware.common.policy.role.InstanceRole.MASTER; } return com.graphaware.common.policy.role.InstanceRole.SLAVE; } catch (java.lang.NoClassDefFoundError e) { return com.graphaware.common.policy.role.InstanceRole.SINGLE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1207/buggy-version/runtime.src.main.java.com.graphaware.runtime.config.util.InstanceRoleUtils.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "org.neo4j.kernel.ha.cluster.member.ClusterMembers.getCurrentMemberRole()", "com.graphaware.runtime.config.util.InstanceRoleUtils.resolveDependency(java.lang.Class)"], "Fixed commit": "d756de1887de94196bef529102cb5b75d64231b9", "Url": "https://api.github.com/repos/graphaware/neo4j-framework", "Date": "2017-04-06T14:03:58Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { wl.acquire(); } catch (java.lang.Exception e) { android.util.Log.e(com.knirirr.beecount.CountingActivity.TAG, (\"Couldn't acquire wakelock: \" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1701/buggy-version/beecount.src.main.java.com.knirirr.beecount.CountingActivity.java", "BodyUseAPI": ["PowerManager.WakeLock.acquire()"], "Fixed commit": "f1559447551c797505c4153d0b4f1eac16f1699f", "Url": "https://api.github.com/repos/knirirr/BeeCount", "Date": "2015-11-15T11:46:23Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { user.sock.send(identMsgStr); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Sending failed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2364/buggy-version/netflux.src.main.java.org.xwiki.contrib.realtime.internal.NetfluxBackend.java", "BodyUseAPI": ["org.xwiki.contrib.websocket.WebSocket.send(java.lang.String)"], "Fixed commit": "4c6913775880e589ed3eb531d59865e917082783", "Url": "https://api.github.com/repos/yflory/realtime-backend", "Date": "2016-04-22T12:39:33Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { epfl.lsr.bachelor.project.server.Server.mThreadPool.execute(connection); } catch (java.util.concurrent.RejectedExecutionException e) { connection.closeConnection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4828/buggy-version/ConcurrentKeyValueStore.src.epfl.lsr.bachelor.project.server.Server.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.execute(epfl.lsr.bachelor.project.server.Connection)"], "Fixed commit": "3aad54dc30bed18f5b4e906f7d97a2368d394a5c", "Url": "https://api.github.com/repos/PatrickAndrade/top2developers", "Date": "2013-10-20T14:17:40Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.widget.Toast.makeText(com.kureda.android.keepaneye.both.ui.App.getContext(), com.kureda.android.keepaneye.both.util.Res.getString(stringCode), Toast.LENGTH_LONG).show(); } catch (java.lang.Exception ex) { android.util.Log.e(com.kureda.android.keepaneye.both.util.Util.TAG, \"Failed to toast\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8268/buggy-version/app.src.main.java.com.kureda.android.keepaneye.both.util.Util.java", "BodyUseAPI": ["com.kureda.android.keepaneye.both.util.Res.getString(int)", "android.widget.Toast.makeText(com.kureda.android.keepaneye.both.ui.App.getContext(), com.kureda.android.keepaneye.both.util.Res.getString(stringCode), Toast.LENGTH_LONG).show()", "com.kureda.android.keepaneye.both.ui.App.getContext()", "android.widget.Toast.makeText(com.kureda.android.keepaneye.both.ui.App.getContext(),com.kureda.android.keepaneye.both.util.Res.getString(stringCode),Toast.LENGTH_LONG)"], "Fixed commit": "df666ac89991d74d17473a704ef59ab1f802436f", "Url": "https://api.github.com/repos/kureda/KeepAnEye", "Date": "2016-11-05T01:54:38Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { helper.getUserPostRefernce(dataSnapshot.getKey()).addChildEventListener(listener); } catch (java.lang.NullPointerException nu) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6031/buggy-version/app.src.main.java.projects.bryang8.com.postlife.posts.postlist.PostRepoImpl.java", "BodyUseAPI": ["projects.bryang8.com.postlife.lib.domain.FirebaseHelper.getUserPostRefernce(dataSnapshot.getKey())", "com.firebase.client.DataSnapshot.getKey()", "helper.getUserPostRefernce(dataSnapshot.getKey()).addChildEventListener(com.firebase.client.ChildEventListener)"], "Fixed commit": "3b887be92aeb61412ea56e29ed309aa8c5e95007", "Url": "https://api.github.com/repos/bryang8/android-postlife", "Date": "2016-07-21T13:42:15Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { model.addAttribute(\"ads\", adService.findAllUnreviewedBy(user.getId())); } catch (java.lang.Exception e) { java.lang.System.out.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4117/buggy-version/src.main.java.project.controller.UserController.java", "BodyUseAPI": ["project.service.AdService.findAllUnreviewedBy(user.getId())", "project.persistence.entities.User.getId()", "org.springframework.ui.Model.addAttribute(java.lang.String,adService.findAllUnreviewedBy(user.getId()))"], "Fixed commit": "fa3eff07b89742bd34dfe19b1c23930329be7d58", "Url": "https://api.github.com/repos/andribja/hbv", "Date": "2015-11-25T23:11:53Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { user = ((project.persistence.entities.User) (request.getSession().getAttribute(\"user\"))); } catch (java.lang.Exception e) { java.lang.System.out.println(\"No user logged in\"); return \"redirect:/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4117/buggy-version/src.main.java.project.controller.UserController.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getSession()", "request.getSession().getAttribute(java.lang.String)"], "Fixed commit": "fa3eff07b89742bd34dfe19b1c23930329be7d58", "Url": "https://api.github.com/repos/andribja/hbv", "Date": "2015-11-25T23:11:53Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result = java.net.URLDecoder.decode(java.net.URLEncoder.encode(result, \"iso8859-1\"), \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8110/buggy-version/LunchOrder.app.src.main.java.Controller.FoodItemControl.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "100b67c189b55357789c27990a765e3fbd969b6b", "Url": "https://api.github.com/repos/max9159/AS.Dev", "Date": "2016-01-21T19:13:57Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class[] clasesDeParametrosMetodoMiClaseHija = new java.lang.Class[parametrosMetodoMiClaseHija.length]; int iterador = 0; for (java.lang.Object o : parametrosMetodoMiClaseHija) clasesDeParametrosMetodoMiClaseHija[(iterador++)] = o.getClass(); method = invokedClass.getDeclaredMethod(metodoMiClaseHija, clasesDeParametrosMetodoMiClaseHija); } catch (java.lang.Exception ex) { invokedClass = miClaseExtensionDeClaseHija; play.Logger.warn(((((\"Cuidado!!!: No existe una clase que herede de \" + (miClaseExtensionDeClaseHija.getName())) + \" y que contenga un m\u00e9todo que se llame \") + metodoMiClaseHija) + \", se usar\u00e1 esta clase por defecto\")); try { java.lang.Class[] clasesDeParametrosMetodoMiClaseHija = new java.lang.Class[parametrosMetodoMiClaseHija.length]; int iterador = 0; for (java.lang.Object o : parametrosMetodoMiClaseHija) clasesDeParametrosMetodoMiClaseHija[(iterador++)] = o.getClass(); method = invokedClass.getDeclaredMethod(metodoMiClaseHija, clasesDeParametrosMetodoMiClaseHija); } catch (java.lang.Exception e) { play.Logger.error((((\"Error 102: No se ha podido encontrar el m\u00e9todo \" + metodoMiClaseHija) + \" de la clase \") + (invokedClass.getName()))); messages.Messages.error(\"Error interno 102. No se ha podido Guardar correctamente\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/324/buggy-version/fap.app.utils.ModelUtils.java", "BodyUseAPI": ["java.lang.Object.getClass()", "java.lang.Class.getDeclaredMethod(java.lang.String,java.lang.Class[])"], "Fixed commit": "8ddd86e6233000de1b6b040bebc3bdc8e50d7059", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2012-10-05T09:35:03Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { method = invokedClass.getDeclaredMethod(\"validarCEconomicos\", long.class, java.util.List.class); } catch (java.lang.Exception ex) { invokedClass = baremacion.BaremacionFAP.class; if (invokedClass != null) { method = null; try { method = invokedClass.getDeclaredMethod(\"validarCEconomicos\", long.class, java.util.List.class); } catch (java.lang.Exception e) { play.Logger.error(\"Error g001: No se ha podido encontrar el m\u00e9todo validarCEconomicos de la clase BaremacionFAP\"); messages.Messages.error(\"Error interno g001. No se ha podido Guardar correctamente\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/324/buggy-version/fap.app.controllers.PCEconomicosController.java", "BodyUseAPI": ["java.lang.Class.getDeclaredMethod(java.lang.String,java.lang.Class,java.lang.Class)"], "Fixed commit": "8ddd86e6233000de1b6b040bebc3bdc8e50d7059", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2012-10-05T09:35:03Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { plugin.getLogger().info(((((((\"Player '\" + (player.getName())) + \"' was killed. Death cause: \") + (player.getLastDamageCause().getEntity().toString())) + \" (\") + (player.getLastDamageCause().getCause().name())) + \")\")); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8801/buggy-version/src.com.andor.stopwhiners.StopWhinersEntityListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.getLastDamageCause()", "player.getLastDamageCause().getCause()", "player.getLastDamageCause().getEntity().toString()", "com.andor.stopwhiners.StopWhinersPlugin.getLogger()", "org.bukkit.entity.Player.getName()", "player.getLastDamageCause().getCause().name()", "player.getLastDamageCause().getEntity()", "plugin.getLogger().info(((((((\"Player '\" + (player.getName())) + \"' was killed. Death cause: \") + (player.getLastDamageCause().getEntity().toString())) + \" (\") + (player.getLastDamageCause().getCause().name())) + \")\"))", "org.bukkit.entity.Player.getLastDamageCause()"], "Fixed commit": "bdc36561a486d8460688d7309816b3f8e326a9fd", "Url": "https://api.github.com/repos/andor44/Stop-Whiners", "Date": "2011-09-04T18:58:31Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { return this.time; } catch (java.lang.NullPointerException e) { return -1L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3012/buggy-version/src.main.java.edu.oakland.production.Team4.java", "BodyUseAPI": [], "Fixed commit": "e03caadc642e695449f8fd88eb318619eb25d9fb", "Url": "https://api.github.com/repos/cse231Project1/homework5", "Date": "2016-04-08T14:34:00Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.dna.radius.clientmode.ClientData.clientInfo.fetchIfNeeded(); } catch (com.parse.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8775/buggy-version/MapSample.src.com.dna.radius.clientmode.ClientData.java", "BodyUseAPI": ["com.parse.ParseObject.fetchIfNeeded()"], "Fixed commit": "f73f01ba9677276417c2b84637e1f6fb13fe9452", "Url": "https://api.github.com/repos/drorcohe/finalPostPCProject", "Date": "2014-09-04T14:25:54Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((declaringType != null) && (declaringType.isInterface())) { return (org.eclipse.jdt.core.Flags.isPublic(flags)) || (org.eclipse.jdt.core.Flags.isPackageDefault(flags)); } } catch (org.eclipse.jdt.core.JavaModelException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1273/buggy-version/net.atos.webtools.tapestry.core.src.main.java.net.atos.webtools.tapestry.core.util.helpers.JavaModelHelper.java", "BodyUseAPI": ["org.eclipse.jdt.core.IType.isInterface()", "org.eclipse.jdt.core.Flags.isPackageDefault(int)", "org.eclipse.jdt.core.Flags.isPublic(int)"], "Fixed commit": "fd9a9352dfc01eda2e50b0ab596159a221e09554", "Url": "https://api.github.com/repos/awltech/webtools-tapestry", "Date": "2014-07-22T12:56:58Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mainClass.initializeData(); } catch (java.io.IOException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7527/buggy-version/src.MainClass.java", "BodyUseAPI": ["MainClass.initializeData()"], "Fixed commit": "e43a6d42642f66e352b6622d98d0e5c46f78cd4b", "Url": "https://api.github.com/repos/HRDPhnomPenhProjects/Stock-Management-System", "Date": "2016-05-31T09:08:23Z"},
{"Line": "=>1138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { convertedDOB = dateFormat.parse(org.ednovo.gooru.application.client.gin.AppClientFactory.getLoggedInUser().getDateOfBirth()); loggedInUserAge = getAge(convertedDOB); if (loggedInUserAge <= (org.ednovo.gooru.client.mvp.assessments.play.resource.body.AssessmentsResourcePlayerMetadataView.CHILD_AGE)) { isChild = true; }else if (loggedInUserAge > (org.ednovo.gooru.client.mvp.assessments.play.resource.body.AssessmentsResourcePlayerMetadataView.CHILD_AGE)) { isChild = false; } } catch (java.lang.Exception ex) { isChild = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6127/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.assessments.play.resource.body.AssessmentsResourcePlayerMetadataView.java", "BodyUseAPI": ["org.ednovo.gooru.application.client.gin.AppClientFactory.getLoggedInUser().getDateOfBirth()", "org.ednovo.gooru.client.mvp.assessments.play.resource.body.AssessmentsResourcePlayerMetadataView.getAge(java.util.Date)", "org.ednovo.gooru.application.client.gin.AppClientFactory.getLoggedInUser()", "com.google.gwt.i18n.client.DateTimeFormat.parse(org.ednovo.gooru.application.client.gin.AppClientFactory.getLoggedInUser().getDateOfBirth())"], "Fixed commit": "aa9b2cd20336247e733d54879dcf46f31b22b1c5", "Url": "https://api.github.com/repos/chandrasekharv/Gooru-Web", "Date": "2015-10-06T07:10:40Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((java.lang.Double.parseDouble(moneyBack.getText())) >= 0.0) { item.dispose(); } } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/9049/buggy-version/POS.src.ee.ut.math.tvt.salessystem.ui.tabs.ConformationTab.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "javax.swing.JFrame.dispose()", "javax.swing.JTextField.getText()"], "Fixed commit": "a2acbb209a82f7bde64b16ac8dfae58c0af66fdc", "Url": "https://api.github.com/repos/IHallik/-include--name-", "Date": "2013-10-27T21:16:29Z"},
{"Line": "=>988", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { top.setMaxStackSize(64); } catch (java.lang.AbstractMethodError e) { plugin.supportsInventoryStackSize = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1058/buggy-version/mods.bukkit.src.haveric.stackableItems.listeners.SIPlayerListener.java", "BodyUseAPI": ["org.bukkit.inventory.Inventory.setMaxStackSize(int)"], "Fixed commit": "18e71d9d0823c9e7c7ee7258d46f0836e6a0becf", "Url": "https://api.github.com/repos/haveric/StackableItems", "Date": "2015-11-13T01:30:01Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { retCode = zkfc.run(parser.getRemainingArgs()); } catch (java.lang.Throwable t) { org.apache.hadoop.hdfs.tools.DFSZKFailoverController.LOG.fatal(\"Got a fatal error, exiting now\", t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5129/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.tools.DFSZKFailoverController.java", "BodyUseAPI": ["org.apache.hadoop.hdfs.tools.DFSZKFailoverController.run(parser.getRemainingArgs())", "org.apache.hadoop.util.GenericOptionsParser.getRemainingArgs()"], "Fixed commit": "3d50263081dedb3ab8de56405aa7e2ba72da5136", "Url": "https://api.github.com/repos/apache/hadoop", "Date": "2015-02-24T23:31:13Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dbHelper.close(); } catch (android.database.SQLException e) { android.util.Log.e(net.taviscaron.bsuirschedule.activity.LessonsListActivity.TAG, (\"can't close db connection \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1413/buggy-version/BsuirSchedule.src.net.taviscaron.bsuirschedule.activity.LessonsListActivity.java", "BodyUseAPI": ["net.taviscaron.bsuirschedule.storage.DBHelper.close()"], "Fixed commit": "f7b31f09ffd693ea6aaf659bf45fdf7d9e04eb02", "Url": "https://api.github.com/repos/taviscaron/BsuirSchedule", "Date": "2012-09-05T19:59:34Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { updateAll(com.google.common.collect.Lists.newArrayList(callGraphAPI(postId)), seriesType); } catch (java.lang.Exception ex) { deprecatedThis(postId); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4976/buggy-version/src.main.java.co.gibar.travel.PostTracker.java", "BodyUseAPI": ["co.gibar.travel.PostTracker.updateAll(com.google.common.collect.Lists.newArrayList(callGraphAPI(postId)),java.lang.String)", "co.gibar.travel.PostTracker.callGraphAPI(java.lang.String)", "com.google.common.collect.Lists.newArrayList(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "ffe2d4b7a4048e2abf7fcde3ca4e7205066b9f82", "Url": "https://api.github.com/repos/abola/CrawlerTmp", "Date": "2015-09-04T12:54:35Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { nestedScrollView.post(new java.lang.Runnable() { @java.lang.Override public void run() { nestedScrollView.fullScroll(nestedScrollView.FOCUS_DOWN); } }); } catch (java.lang.Exception e) { android.util.Log.d(\"Excep\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6046/buggy-version/app.src.main.java.com.example.naveen.EmotionApp.WriteNotesActivity.java", "BodyUseAPI": ["android.support.v4.widget.NestedScrollView.fullScroll(nestedScrollView.FOCUS_DOWN)", "android.support.v4.widget.NestedScrollView.post(java.lang.Runnable)", "java.lang.Object()"], "Fixed commit": "0820d56f71763f2652d018d6d7cea9b235f83a9a", "Url": "https://api.github.com/repos/rahulbiswas876/EmotionApp", "Date": "2017-04-12T16:45:05Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7813/buggy-version/src.main.java.scenarii.camera.GifSequenceWriter.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "0bd0cc88d63770295dd1bea293870e21cec8087d", "Url": "https://api.github.com/repos/ggeoffrey/scenarii", "Date": "2016-07-18T07:39:32Z"},
{"Line": "=>1348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.connection.close(); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/161/buggy-version/Flow-Server.src.database.SQLDatabase.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "74c166b7b6db2a633d708b17342632acf98dda75", "Url": "https://api.github.com/repos/ecnivo/Flow", "Date": "2016-01-17T21:21:10Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { process(shardingContext); } catch (final java.lang.Exception ex) { log.error(\"Elastic job: exception occur in job processing...\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6293/buggy-version/elastic-job-core.src.main.java.com.dangdang.ddframe.job.api.AbstractOneOffElasticJob.java", "BodyUseAPI": ["com.dangdang.ddframe.job.api.AbstractOneOffElasticJob.process(com.dangdang.ddframe.job.api.JobExecutionMultipleShardingContext)"], "Fixed commit": "7b949ebb701b20bb08ee1557ea8d80a4e03a565f", "Url": "https://api.github.com/repos/zhangwei5095/elastic-job", "Date": "2015-10-21T06:29:09Z"},
{"Line": "=>654", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { error = com.pingplusplus.net.APIResource.getGson().fromJson(rBody, com.pingplusplus.net.APIResource.ErrorContainer.class).error; } catch (com.google.gson.JsonSyntaxException e) { error = new com.pingplusplus.net.APIResource.Error(); error.message = rBody; error.code = java.lang.String.valueOf(rCode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7176/buggy-version/src.main.java.com.pingplusplus.net.APIResource.java", "BodyUseAPI": ["com.pingplusplus.net.APIResource.getGson()", "com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Fixed commit": "1612d469b728952db2e3b1b29219a29b28e84375", "Url": "https://api.github.com/repos/PingPlusPlus/pingpp-java", "Date": "2017-10-11T08:03:03Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.kiteq.commons.monitor.KiteQMonitor.LOGGER.info(this.formatOutput()); } catch (java.lang.Exception e) { org.kiteq.commons.monitor.KiteQMonitor.LOGGER.error(\"monitorUpload.formatOutput|FAIL\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/498/buggy-version/kiteq-commons.src.main.java.org.kiteq.commons.monitor.KiteQMonitor.java", "BodyUseAPI": ["org.kiteq.commons.monitor.KiteQMonitor.formatOutput()", "org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "cecd230037da8d90765f79903515503e0667fafe", "Url": "https://api.github.com/repos/blackbeans/kiteq-client-java", "Date": "2016-06-29T15:31:00Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { t = name.substring(5); } catch (java.lang.Exception ex) { return name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/9165/buggy-version/denoflionsx.denLib.denLib.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "171c2c3a30a4aac5ddb083ccc2266d06bccb64e9", "Url": "https://api.github.com/repos/denoflionsx/denLib", "Date": "2012-10-08T19:21:02Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ru.tehkode.permissions.PermissionManager manager = server.getServicesManager().load(ru.tehkode.permissions.PermissionManager.class); if (manager == null) { return null; } return new com.sk89q.bukkit.migration.PermissionsExResolver(server, manager); } catch (java.lang.Throwable t) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2710/buggy-version/src.main.java.com.sk89q.bukkit.migration.PermissionsExResolver.java", "BodyUseAPI": ["org.bukkit.Server.getServicesManager()", "server.getServicesManager().load(java.lang.Class)"], "Fixed commit": "bd5c78bb4084ca4a70433c4eecafd69198d9b271", "Url": "https://api.github.com/repos/wizjany/worldedit", "Date": "2011-10-23T16:19:29Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new carismaresepsionis.boundaries.jadwaldokter(this.client, this.userName).show(); } catch (java.rmi.RemoteException ex) { java.util.logging.Logger.getLogger(carismaresepsionis.boundaries.dokterform.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7099/buggy-version/Project.CarismaResepsionis.src.carismaresepsionis.boundaries.dokterform.java", "BodyUseAPI": ["carismaresepsionis.boundaries.jadwaldokter.show()"], "Fixed commit": "580ce4bba53b11ddd034178b424267f631fa80f2", "Url": "https://api.github.com/repos/k-milcaster/carisma", "Date": "2015-05-03T05:23:51Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new carismaapoteker.boundaries.TransaksiBeliObat(this.client, this.userName).setVisible(true); } catch (java.rmi.RemoteException ex) { java.util.logging.Logger.getLogger(carismaapoteker.boundaries.MenuApoteker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7099/buggy-version/Project.CarismaApoteker.src.carismaapoteker.boundaries.MenuApoteker.java", "BodyUseAPI": ["carismaapoteker.boundaries.TransaksiBeliObat.setVisible(boolean)"], "Fixed commit": "580ce4bba53b11ddd034178b424267f631fa80f2", "Url": "https://api.github.com/repos/k-milcaster/carisma", "Date": "2015-05-03T05:23:51Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { gp.getPlayer().setScoreboard(org.bukkit.Bukkit.getScoreboardManager().getNewScoreboard()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/719/buggy-version/MiniGames.src.me.toxiccoke.minigames.bomber.BomberGame.java", "BodyUseAPI": ["me.toxiccoke.minigames.GamePlayer.getPlayer()", "org.bukkit.Bukkit.getScoreboardManager()", "org.bukkit.Bukkit.getScoreboardManager().getNewScoreboard()", "gp.getPlayer().setScoreboard(org.bukkit.Bukkit.getScoreboardManager().getNewScoreboard())"], "Fixed commit": "c98b39f31b8bc4ee430f87da5d4e4a91685ad059", "Url": "https://api.github.com/repos/bobtheblueberry/ServerPack", "Date": "2016-08-31T23:45:18Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result = cudalib.cuDeviceTotalMem_v2(ram, num); } catch (java.lang.UnsatisfiedLinkError e) { result = cudalib.cuDeviceTotalMem(ram, num); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4367/buggy-version/src.com.sheepit.client.hardware.gpu.GPU.java", "BodyUseAPI": ["com.sheepit.client.hardware.gpu.CUDA.cuDeviceTotalMem_v2(com.sun.jna.ptr.LongByReference,int)"], "Fixed commit": "673a4249003eced16966bcdbed75dfd48a249bc3", "Url": "https://api.github.com/repos/principat/sheepit-client", "Date": "2017-02-28T11:55:12Z"},
{"Line": "=>591", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { locationPair = moveBlockInternal(userId, blockId, newLocation); } catch (tachyon.exception.NotFoundException nfe) { tachyon.worker.block.TieredBlockStore.LOG.info(((\"Failed to move blockId \" + blockId) + \", it could be already deleted\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8485/buggy-version/servers.src.main.java.tachyon.worker.block.TieredBlockStore.java", "BodyUseAPI": ["tachyon.worker.block.TieredBlockStore.moveBlockInternal(long,long,tachyon.worker.block.BlockStoreLocation)"], "Fixed commit": "f1f595390419a736672f144ab7ca4f43ab5f2baf", "Url": "https://api.github.com/repos/calvinjia/tachyon", "Date": "2015-08-01T23:21:59Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { removeBlockInternal(userId, blockId); } catch (tachyon.exception.NotFoundException nfe) { tachyon.worker.block.TieredBlockStore.LOG.info(((\"Failed to evict blockId \" + blockId) + \", it could be already deleted\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8485/buggy-version/servers.src.main.java.tachyon.worker.block.TieredBlockStore.java", "BodyUseAPI": ["tachyon.worker.block.TieredBlockStore.removeBlockInternal(long,long)"], "Fixed commit": "f1f595390419a736672f144ab7ca4f43ab5f2baf", "Url": "https://api.github.com/repos/calvinjia/tachyon", "Date": "2015-08-01T23:21:59Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (com.liferay.portal.kernel.notifications.UserNotificationManagerUtil.isDeliver(user.getUserId(), portletId, _notificationClassNameId, _notificationType, UserNotificationDeliveryConstants.TYPE_EMAIL)) { javax.mail.internet.InternetAddress to = new javax.mail.internet.InternetAddress(user.getEmailAddress(), user.getFullName()); sendEmail(to, user.getLocale()); } } catch (java.lang.Exception e) { com.liferay.portal.util.SubscriptionSender._log.error(e, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/962/buggy-version/portal-service.src.com.liferay.portal.util.SubscriptionSender.java", "BodyUseAPI": ["com.liferay.portal.model.User.getEmailAddress()", "com.liferay.portal.model.User.getFullName()", "com.liferay.portal.util.SubscriptionSender.sendEmail(javax.mail.internet.InternetAddress,user.getLocale())", "com.liferay.portal.model.User.getUserId()", "com.liferay.portal.kernel.notifications.UserNotificationManagerUtil.isDeliver(user.getUserId(),java.lang.String,long,int,UserNotificationDeliveryConstants.TYPE_EMAIL)", "com.liferay.portal.model.User.getLocale()"], "Fixed commit": "211db3eb6d6eb582d73a87400bfa27721028d75c", "Url": "https://api.github.com/repos/robertoDiaz/liferay-portal", "Date": "2014-02-19T08:04:36Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { out = new java.io.FileOutputStream(\"jssecacerts\"); ks.store(out, passphrase); } finally { if (out != null) { out.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1683/buggy-version/src.main.java.org.obliquid.scripts.InstallCert.java", "BodyUseAPI": ["java.security.KeyStore.store(java.io.OutputStream,char[])"], "Fixed commit": "913d8137654ade67451fa8228559c46393a07065", "Url": "https://api.github.com/repos/stivlo/obliquid-lib", "Date": "2011-07-03T14:45:43Z"},
{"Line": "=>609", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fixAgInIAandFunctions(this); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5425/buggy-version/src.main.java.jason.asSemantics.Agent.java", "BodyUseAPI": ["jason.asSemantics.Agent.fixAgInIAandFunctions(jason.asSemantics.Agent)"], "Fixed commit": "d5936349da0e36e2ca330cb86f40b2ff7379c386", "Url": "https://api.github.com/repos/jason-lang/jason", "Date": "2017-07-03T15:35:25Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startActivity(intent); } catch (android.content.ActivityNotFoundException e) { android.widget.Toast monToast = android.widget.Toast.makeText(getApplicationContext(), getString(R.string.erreurEnvoiMail), Toast.LENGTH_LONG); monToast.show(); if (com.pcinpact.utils.Constantes.DEBUG) { android.util.Log.e(\"ListeArticlesActivity\", \"onOptionsItemSelected() - Support -> exception\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3481/buggy-version/app.src.main.java.com.pcinpact.ListeArticlesActivity.java", "BodyUseAPI": ["com.pcinpact.ListeArticlesActivity.startActivity(android.content.Intent)"], "Fixed commit": "4a21b63db561124d3678d3d1db608a4ef48790ac", "Url": "https://api.github.com/repos/AnaelMobilia/NextINpact-Unofficial", "Date": "2016-09-29T00:30:01Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return idx < (scores.length) ? java.lang.Integer.parseInt(scores[idx]) : java.lang.Integer.parseInt(scores[0]); } catch (java.lang.Exception e) { core.logging.Logger.getInstance().addMessage(new core.logging.Message(core.logging.Message.WARNING, ((\"counter must be an integer number not \" + (counter)) + \".\"))); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4297/buggy-version/src.ontology.effects.Effect.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "3831d70b46299b3493afdcf74fb1270d758e2413", "Url": "https://api.github.com/repos/mcgreentn/gvgai-myFork", "Date": "2017-04-03T05:20:52Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return idx < (scores.length) ? java.lang.Integer.parseInt(scores[idx]) : java.lang.Integer.parseInt(scores[0]); } catch (java.lang.Exception e) { core.logging.Logger.getInstance().addMessage(new core.logging.Message(core.logging.Message.WARNING, ((\"counterElse must be an integer number not \" + (counterElse)) + \".\"))); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4297/buggy-version/src.ontology.effects.Effect.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "3831d70b46299b3493afdcf74fb1270d758e2413", "Url": "https://api.github.com/repos/mcgreentn/gvgai-myFork", "Date": "2017-04-03T05:20:52Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { out = new java.io.FileOutputStream(destination); byte[] buffer = new byte[100]; int len = 0; while ((len = source.read(buffer)) != (-1)) { out.write(buffer, 0, len); } } finally { if (out != null) { try { out.close(); } catch (java.io.IOException e) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7539/buggy-version/ch.bittailor.filetemplates.src.ch.bittailor.filetemplates.Activator.java", "BodyUseAPI": ["java.io.InputStream.read(byte[])", "java.io.FileOutputStream.write(byte[],int,int)"], "Fixed commit": "5b492487d37321853332d77455619ea0122fa29e", "Url": "https://api.github.com/repos/bittailor/FileTemplatesWizard", "Date": "2011-06-15T20:57:11Z"},
{"Line": "=>2946", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { code = executor.execute(org.apache.commons.exec.CommandLine.parse(startCmd)); } catch (org.apache.commons.exec.ExecuteException e) { throw new java.lang.Exception((((\"Failed to start Solr using command: \" + startCmd) + \" Exception : \") + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3271/buggy-version/solr.core.src.java.org.apache.solr.util.SolrCLI.java", "BodyUseAPI": ["org.apache.commons.exec.Executor.execute(org.apache.commons.exec.CommandLine.parse(startCmd))", "org.apache.commons.exec.CommandLine.parse(java.lang.String)"], "Fixed commit": "5ee18c8ab5286842af66aaeee46e6ca935b9297d", "Url": "https://api.github.com/repos/apache/lucene-solr", "Date": "2017-04-03T20:45:54Z"},
{"Line": "=>698", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { keyAction = keyEvent.getAction(); } catch (java.lang.NullPointerException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/889/buggy-version/Android.DAT255Grupp12Project.DAT255Grupp12.src.main.java.se.dat255.grupp12.MainActivity.java", "BodyUseAPI": ["android.view.KeyEvent.getAction()"], "Fixed commit": "efa1e58c1ab8dc47164b45d36801982b51f5b09a", "Url": "https://api.github.com/repos/villepetersson/DAT255-Grupp12", "Date": "2013-10-22T13:30:34Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(10); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5370/buggy-version/src.cupcarbon.CupCarbonController.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "a0064078ac509eb240da71593940176c44832e52", "Url": "https://api.github.com/repos/bounceur/CupCarbon", "Date": "2017-12-26T20:10:19Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { responseHeaders.setLocation(new java.net.URI(request.getRequestURL().toString())); re = new org.springframework.http.ResponseEntity(responseHeaders, org.springframework.http.HttpStatus.SEE_OTHER); } catch (java.net.URISyntaxException urise) { info.lotharschulz.item.controller.ItemController.log.error(((\"URISyntaxException: \" + urise) + \" \\n\")); re = new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.SEE_OTHER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/280/buggy-version/src.main.java.info.lotharschulz.item.controller.ItemController.java", "BodyUseAPI": ["request.getRequestURL().toString()", "org.springframework.http.HttpHeaders.setLocation(java.net.URI)", "javax.servlet.http.HttpServletRequest.getRequestURL()"], "Fixed commit": "c99dd62f41f8b55a88795cfa919c080dc9f239d5", "Url": "https://api.github.com/repos/lotharschulz/exceptionHTTPcodes", "Date": "2013-08-20T20:41:18Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { try { stmt.executeUpdate((\"CREATE SCHEMA \" + (schema))); } catch (java.sql.SQLException e) { if ((e.getErrorCode()) != 90078) { throw e; } } try { stmt.executeUpdate(((((\"CREATE TABLE \" + (schema)) + \".\") + (table)) + \" ( UUID CHAR(36) NOT NULL, CONTENT VARCHAR)\")); stmt.executeUpdate(((((((\"ALTER TABLE \" + (schema)) + \".\") + (table)) + \" ADD CONSTRAINT \") + (table)) + \"_IDX_01 UNIQUE (UUID)\")); } catch (java.sql.SQLException e) { if ((e.getErrorCode()) != 42101) { throw e; } } } finally { blueprint.sdk.util.jdbc.CloseHelper.close(stmt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5505/buggy-version/blueprint-sdk.src.blueprint.sdk.util.jdbc.H2Queue.java", "BodyUseAPI": ["java.sql.Statement.executeUpdate(java.lang.String)", "java.sql.Statement.executeUpdate(java.lang.String)", "java.sql.Statement.executeUpdate(java.lang.String)", "java.sql.SQLException.getErrorCode()", "java.sql.SQLException.getErrorCode()"], "Fixed commit": "292efa364354163a38fe28d87159b4f06a483541", "Url": "https://api.github.com/repos/lempel/blueprint-sdk", "Date": "2013-08-28T08:04:10Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.currentThread().sleep(200); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/996/buggy-version/src.main.java.io.pivotal.pal.tracker.InMemoryTimeEntryRepository.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)", "java.lang.Thread.currentThread()"], "Fixed commit": "25afe2d18735d4c22bc92d3fcccdb1be33b0f2d3", "Url": "https://api.github.com/repos/PATHoqingfengATGH/pal-tracker", "Date": "2017-09-06T07:22:19Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { s.addPizza(name, java.lang.Integer.parseInt(price), description); } catch (java.lang.Exception e) { request.setAttribute(\"error\", \"Could not add pizza to database, please try again.\"); javax.servlet.RequestDispatcher view = request.getRequestDispatcher(\"views/pizza/addpizza.jsp\"); view.forward(request, response); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7400/buggy-version/src.controller.PizzaController.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "model.Statements.addPizza(java.lang.String,int,java.lang.String)"], "Fixed commit": "7208f208840b2faafd5c39396ed79d8b314d64d6", "Url": "https://api.github.com/repos/lomholdt/la-pizzeria", "Date": "2015-03-07T15:51:54Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(this.serviceURL.isEmpty())) { this.operations.clear(); com.predic8.wsdl.WSDLParser parser = new com.predic8.wsdl.WSDLParser(); com.predic8.wsdl.Definitions defs = parser.parse(((this.serviceURL) + \"?wsdl\")); for (com.predic8.wsdl.Binding pt : defs.getBindings()) { for (com.predic8.wsdl.BindingOperation op : pt.getOperations()) { this.operations.add(op.getName()); } } } } catch (java.lang.Exception e) { org.primefaces.context.RequestContext currentInstance = org.primefaces.context.RequestContext.getCurrentInstance(); javax.faces.application.FacesMessage message = new javax.faces.application.FacesMessage(javax.faces.application.FacesMessage.SEVERITY_ERROR, \"ERROR\", \"El servicio no es v\u00e1lido\"); currentInstance.showMessageInDialog(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7656/buggy-version/context-management-web.src.main.java.edu.fing.context.management.bean.ServiceBean.java", "BodyUseAPI": ["com.predic8.wsdl.Binding.getOperations()", "com.predic8.wsdl.WSDLParser.parse(java.lang.String)", "java.util.List<java.lang.String>.clear()", "java.lang.String.isEmpty()", "java.util.List<java.lang.String>.add(op.getName())", "com.predic8.wsdl.BindingOperation.getName()", "com.predic8.wsdl.Definitions.getBindings()"], "Fixed commit": "bc8f1f797c9171c30b8f521c7cac92bf6afa67c6", "Url": "https://api.github.com/repos/ppirotto/gestion_de_contexto_fing", "Date": "2015-06-24T00:55:13Z"},
{"Line": "=>2666", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mNextMediaPlayer.release(); } catch (java.lang.Throwable e) { android.util.Log.w(com.andrew.apollo.MusicPlaybackService.TAG, \"Something wrong releasing mNextMediaPlayer\", e); } finally { mNextMediaPlayer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1110/buggy-version/android.apollo.src.com.andrew.apollo.MusicPlaybackService.java", "BodyUseAPI": ["android.media.MediaPlayer.release()"], "Fixed commit": "83a056d0121a816a69634f79f65f38d4889102b4", "Url": "https://api.github.com/repos/frostwire/frostwire", "Date": "2016-02-18T03:29:57Z"},
{"Line": "=>2695", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mNextMediaPlayer.release(); } catch (java.lang.Throwable e) { android.util.Log.w(com.andrew.apollo.MusicPlaybackService.TAG, \"Something wrong releasing mNextMediaPlayer\", e); } finally { mNextMediaPlayer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1110/buggy-version/android.apollo.src.com.andrew.apollo.MusicPlaybackService.java", "BodyUseAPI": ["android.media.MediaPlayer.release()"], "Fixed commit": "83a056d0121a816a69634f79f65f38d4889102b4", "Url": "https://api.github.com/repos/frostwire/frostwire", "Date": "2016-02-18T03:29:57Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { url = c.getString(R.string.query_url, java.net.URLEncoder.encode(query, \"UTF-8\")); } catch (java.io.UnsupportedEncodingException e) { url = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1134/buggy-version/IUXE2015.app.src.main.java.com.undefined.iuxe2015.tools.ConnectionTool.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "android.content.Context.getString(R.string.query_url,java.lang.String)"], "Fixed commit": "551846c966607518e5f5e17f8621c29a32ee4ad9", "Url": "https://api.github.com/repos/marijngoedegebure/IUXE2015", "Date": "2015-04-30T14:32:02Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if (!(webSocketChannel.isCloseFrameReceived())) { if (closeReason == null) { webSocketChannel.sendClose(); }else { io.undertow.websockets.core.WebSockets.sendClose(new io.undertow.websockets.core.CloseMessage(closeReason.getCloseCode().getCode(), closeReason.getReasonPhrase()).toByteBuffer(), webSocketChannel, null); } } } finally { try { if (closeReason == null) { endpoint.getInstance().onClose(this, new javax.websocket.CloseReason(CloseReason.CloseCodes.NO_STATUS_CODE, null)); }else { endpoint.getInstance().onClose(this, closeReason); } } catch (java.lang.Exception e) { endpoint.getInstance().onError(this, e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8505/buggy-version/websockets-jsr.src.main.java.io.undertow.websockets.jsr.UndertowSession.java", "BodyUseAPI": ["io.undertow.websockets.core.WebSocketChannel.isCloseFrameReceived()", "io.undertow.websockets.core.WebSocketChannel.sendClose()", "javax.websocket.CloseReason.getCloseCode()", "closeReason.getCloseCode().getCode()", "javax.websocket.CloseReason.getReasonPhrase()", "io.undertow.websockets.core.WebSockets.sendClose(new io.undertow.websockets.core.CloseMessage(closeReason.getCloseCode().getCode(), closeReason.getReasonPhrase()).toByteBuffer(),io.undertow.websockets.core.WebSocketChannel,<nulltype>)", "io.undertow.websockets.core.CloseMessage.toByteBuffer()"], "Fixed commit": "edd16c0fe0a76342a5f2a23420045a7df2510630", "Url": "https://api.github.com/repos/darranl/undertow", "Date": "2014-09-29T05:24:19Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return identified.getCanonicalUri().replace(org.atlasapi.feeds.interlinking.C4PlaylistToInterlinkFeedAdapter.CANONICAL_URI_PREFIX, org.atlasapi.feeds.interlinking.C4PlaylistToInterlinkFeedAdapter.C4_TAG_PREFIX); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException((\"Could not find CanonicalUri for Id \" + (identified.getId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2321/buggy-version/src.main.java.org.atlasapi.feeds.interlinking.C4PlaylistToInterlinkFeedAdapter.java", "BodyUseAPI": ["identified.getCanonicalUri().replace(java.lang.String,java.lang.String)", "org.atlasapi.media.entity.Identified.getCanonicalUri()"], "Fixed commit": "ea3e804142bbeada72ce263d829b5ff712175a8e", "Url": "https://api.github.com/repos/atlasapi/atlas-feeds", "Date": "2016-12-22T20:07:17Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int level = java.lang.Integer.parseInt(transactionIsolationName); switch (level) { case java.sql.Connection.TRANSACTION_READ_UNCOMMITTED : case java.sql.Connection.TRANSACTION_READ_COMMITTED : case java.sql.Connection.TRANSACTION_REPEATABLE_READ : case java.sql.Connection.TRANSACTION_SERIALIZABLE : return level; } throw new java.lang.IllegalArgumentException((\"Invalid transaction isolation value: \" + transactionIsolationName)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1198/buggy-version/src.main.java.com.zaxxer.hikari.pool.PoolElf.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "285bcfc415d5ae1ed6f02f47c42d39b865ab96fb", "Url": "https://api.github.com/repos/nitincchauhan/HikariCP", "Date": "2015-07-21T15:42:14Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { byte[] fileData = (isRemoteUrl) ? com.mantacode.reactnativeparseimageupload.FileHelpers.getJpgImageFromRemoteUrl(uri, maxWidth, maxHeight) : com.mantacode.reactnativeparseimageupload.FileHelpers.getJpgImageFromUri(getReactApplicationContext(), uri, maxWidth, maxHeight); saveFile(fileData, (fileName + \".jpg\"), promise); } catch (java.lang.Exception ex) { promise.reject(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3703/buggy-version/android.src.main.java.com.mantacode.reactnativeparseimageupload.ParseImageUploadModule.java", "BodyUseAPI": ["com.mantacode.reactnativeparseimageupload.FileHelpers.getJpgImageFromUri(getReactApplicationContext(),java.lang.String,int,int)", "com.mantacode.reactnativeparseimageupload.FileHelpers.getJpgImageFromRemoteUrl(java.lang.String,int,int)", "com.mantacode.reactnativeparseimageupload.ParseImageUploadModule.getReactApplicationContext()", "com.mantacode.reactnativeparseimageupload.ParseImageUploadModule.saveFile(byte[],java.lang.String,com.mantacode.reactnativeparseimageupload.Promise)"], "Fixed commit": "03cf38facf8803756ca306f9f80036d5fb3780aa", "Url": "https://api.github.com/repos/MantaCodeDevs/react-native-parse-image-upload", "Date": "2017-04-01T08:56:53Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { kernelUserEmail = userInfoService.currentUser().getEmail(); } catch (java.lang.Exception e) { if ((devmode) && (noauthdevmode)) { org.ozwillo.energy.service.ContractService.logger.info(\"devmode && noauthdevmode activated - No user found : switching to default user jacques.colard@gmail.com\"); }else { org.ozwillo.energy.service.ContractService.logger.info(\"devmode or noauthdevmode not activated - No user found : returning no contract\"); return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6261/buggy-version/oz-energy.src.main.java.org.ozwillo.energy.service.ContractService.java", "BodyUseAPI": ["userInfoService.currentUser().getEmail()", "org.oasis_eu.spring.kernel.service.UserInfoService.currentUser()"], "Fixed commit": "077d1c17e755347a0fc51b8e08b8dea8db2bb98d", "Url": "https://api.github.com/repos/ozwillo/ozwillo-ozenergy", "Date": "2017-06-15T14:58:43Z"},
{"Line": "=>779", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.cloudant.client.api.Database.getGson().fromJson(selectorJson, com.google.gson.JsonObject.class); } catch (com.google.gson.JsonParseException e) { isObject = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7263/buggy-version/src.main.java.com.cloudant.client.api.Database.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)", "com.cloudant.client.api.Database.getGson()"], "Fixed commit": "8e9f8a28b7535e45ea058867a6133dfaca94e5b1", "Url": "https://api.github.com/repos/cloudant/java-cloudant", "Date": "2015-01-27T09:39:19Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { groupObjectList = query.find(); } catch (com.parse.ParseException e) { android.util.Log.d(com.groupalarm.asijge.groupalarm.AlarmManaging.ParseHelper.TAG, \"getGroupsForUser struggle to query the Parse cloud.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8157/buggy-version/GroupAlarm.app.src.main.java.com.groupalarm.asijge.groupalarm.AlarmManaging.ParseHelper.java", "BodyUseAPI": ["com.parse.ParseQuery<com.parse.ParseObject>.find()"], "Fixed commit": "1457710edabe7a2fcc6120c91019b9521db4a4f3", "Url": "https://api.github.com/repos/AlexanderHederstaf/groupalarm", "Date": "2015-05-19T17:26:58Z"},
{"Line": "=>624", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { absPackageFile = new abs.frontend.parser.ABSPackageFile(f); isPackage = absPackageFile.isABSPackage(); absPackageFile.close(); } catch (java.io.IOException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6132/buggy-version/frontend.src.abs.frontend.parser.Main.java", "BodyUseAPI": ["abs.frontend.parser.ABSPackageFile.close()", "abs.frontend.parser.ABSPackageFile.isABSPackage()"], "Fixed commit": "be28c0aa3b93ed8f96e1a71ada215cddac1250ce", "Url": "https://api.github.com/repos/abstools/abstools", "Date": "2015-12-09T11:46:03Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.content.SharedPreferences sharedPrefs = android.preference.PreferenceManager.getDefaultSharedPreferences(getActivity()); java.lang.String sortInput = sharedPrefs.getString(getString(R.string.pref_units_key), getString(R.string.pref_units_descending)); if (sortInput == (getString(R.string.pref_units_descending))) { sort = getString(R.string.pref_units_descending); }else if (sortInput != (getString(R.string.pref_units_descending))) { sort = getString(R.string.pref_units_ascending); } } catch (java.lang.Exception e) { sort = getString(R.string.pref_units_descending); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7788/buggy-version/app.src.main.java.com.michaelsolati.popularmovies.MovieFragment.java", "BodyUseAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(getActivity())", "android.content.SharedPreferences.getString(getString(R.string.pref_units_key),getString(R.string.pref_units_descending))", "com.michaelsolati.popularmovies.MovieFragment.FetchMoviesTask.getString(R.string.pref_units_key)", "com.michaelsolati.popularmovies.MovieFragment.FetchMoviesTask.getString(R.string.pref_units_ascending)", "com.michaelsolati.popularmovies.MovieFragment.FetchMoviesTask.getString(R.string.pref_units_descending)", "com.michaelsolati.popularmovies.MovieFragment.FetchMoviesTask.getString(R.string.pref_units_descending)", "com.michaelsolati.popularmovies.MovieFragment.FetchMoviesTask.getActivity()", "com.michaelsolati.popularmovies.MovieFragment.FetchMoviesTask.getString(R.string.pref_units_descending)", "com.michaelsolati.popularmovies.MovieFragment.FetchMoviesTask.getString(R.string.pref_units_descending)"], "Fixed commit": "c1003931cf936814531ea68d8f25b3b34074083e", "Url": "https://api.github.com/repos/MichaelSolati/Project-1-Popular-Movies", "Date": "2016-05-02T02:46:34Z"},
{"Line": "=>603", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { index.releaseKeysForUpdate(entry.getValue()); } catch (java.lang.RuntimeException e) { com.orientechnologies.common.log.OLogManager.instance().error(this, \"Error during unlock of keys for index %s\", e, index.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6932/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.OClassIndexManager.java", "BodyUseAPI": ["com.orientechnologies.orient.core.index.OIndexInternal<?>.releaseKeysForUpdate(entry.getValue())", "java.util.Map.Entry<com.orientechnologies.orient.core.index.OIndex<?>, java.util.List<java.lang.Object>>.getValue()"], "Fixed commit": "36034f226fda586f1306fc2a9f8146463ec03aa4", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-12-17T09:46:28Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { reader.close(); } catch (java.lang.ArrayIndexOutOfBoundsException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/194/buggy-version/HttpClient.src.com.levelup.http.InputStreamStringParser.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "8553b467ac34845cf629ee2be0a6c6e4f39dee76", "Url": "https://api.github.com/repos/levelup/Android-HttpClient", "Date": "2014-04-09T06:56:42Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { httpclient.sendHttpRequest(this._request); } catch (java.lang.Exception e) { org.jocean.nettyhttpclient.flow.DownloadImageFlow2.LOG.error(\"exception when sendHttpRequest, detail: {}\", org.jocean.idiom.ExceptionUtils.exception2detail(e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/41/buggy-version/nettyhttpclient-demo.src.org.jocean.nettyhttpclient.flow.DownloadImageFlow2.java", "BodyUseAPI": ["org.jocean.transportclient.api.HttpClient.sendHttpRequest(io.netty.handler.codec.http.HttpRequest)"], "Fixed commit": "943f0cf22a7022a63b46c9aaf6da26bdbf169af8", "Url": "https://api.github.com/repos/isdom/demo", "Date": "2014-04-22T09:11:36Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { httpclient.sendHttpRequest(request); } catch (java.lang.Exception e) { org.jocean.nettyhttpclient.flow.GetJsonFlow.LOG.error(\"exception when sendHttpRequest, detail: {}\", org.jocean.idiom.ExceptionUtils.exception2detail(e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/41/buggy-version/nettyhttpclient-demo.src.org.jocean.nettyhttpclient.flow.GetJsonFlow.java", "BodyUseAPI": ["org.jocean.transportclient.api.HttpClient.sendHttpRequest(io.netty.handler.codec.http.HttpRequest)"], "Fixed commit": "943f0cf22a7022a63b46c9aaf6da26bdbf169af8", "Url": "https://api.github.com/repos/isdom/demo", "Date": "2014-04-22T09:11:36Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { if (isRevealAnimationEnabled) startRevealAnimation(activity); else { startFadeInAnimation(activity); } }else { startFadeInAnimation(activity); } } catch (java.lang.IllegalStateException e) { listener.onSpotlightError(com.wooplr.spotlight.SpotlightView.ERROR_TARGET_VIEW_NOT_ATTACHED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/631/buggy-version/Spotlight-library.src.main.java.com.wooplr.spotlight.SpotlightView.java", "BodyUseAPI": ["com.wooplr.spotlight.SpotlightView.1.startFadeInAnimation(android.app.Activity)", "com.wooplr.spotlight.SpotlightView.1.startRevealAnimation(android.app.Activity)", "com.wooplr.spotlight.SpotlightView.1.startFadeInAnimation(android.app.Activity)"], "Fixed commit": "0137242e1ce6a850a15f4b50d5b60ba3c63101c7", "Url": "https://api.github.com/repos/PGrube26/Spotlight", "Date": "2017-02-15T09:31:30Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { RAFile.close(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/9018/buggy-version/Client.java", "BodyUseAPI": ["java.io.RandomAccessFile.close()"], "Fixed commit": "2ff7efa3dc2c92bee629e57c1398d2184b11a580", "Url": "https://api.github.com/repos/CS3103-Project-Group-5/HALPZ", "Date": "2017-11-13T08:13:09Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { template.put(\"fieldTypes\", com.liferay.portlet.dynamicdatamapping.io.DDMFormFieldTypesJSONSerializerUtil.serialize(ddmFormFieldTypes)); } catch (com.liferay.portal.kernel.exception.PortalException pe) { throw new com.liferay.dynamic.data.mapping.form.renderer.DDMFormRenderingException(pe); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5906/buggy-version/modules.apps.dynamic-data-mapping.dynamic-data-mapping-form-renderer.src.com.liferay.dynamic.data.mapping.form.renderer.internal.DDMFormRendererImpl.java", "BodyUseAPI": ["com.liferay.portal.kernel.template.Template.put(java.lang.String,com.liferay.portlet.dynamicdatamapping.io.DDMFormFieldTypesJSONSerializerUtil.serialize(ddmFormFieldTypes))", "com.liferay.portlet.dynamicdatamapping.io.DDMFormFieldTypesJSONSerializerUtil.serialize(java.util.List<com.liferay.portlet.dynamicdatamapping.registry.DDMFormFieldType>)"], "Fixed commit": "3c81737b5e2a878fe5e3d4e5e5f4e88f964fa93d", "Url": "https://api.github.com/repos/brianchiu/liferay-portal", "Date": "2015-06-09T02:13:02Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.jme3.system.android.GvrOGLESContext.logger.fine(\"GL Surface is setup, initializing application\"); listener.initialize(); renderable.set(true); } catch (java.lang.Exception e) { e.printStackTrace(); java.lang.System.err.println(\"SEVERE ERROR - EXITING !\"); java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8158/buggy-version/jme-gvr-bridge.src.main.java.com.jme3.system.android.GvrOGLESContext.java", "BodyUseAPI": ["java.util.logging.Logger.fine(java.lang.String)", "com.jme3.system.android.SystemListener.initialize()", "java.util.concurrent.atomic.AtomicBoolean.set(boolean)"], "Fixed commit": "53da694988ee91eeea305b90c53a9b4dd8a37086", "Url": "https://api.github.com/repos/nordfalk/gvr-android-jme", "Date": "2016-10-04T21:34:46Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return taxonomyRepository.findTaxonomyTree(taxonomyCode, format); } catch (org.dom4j.DocumentException e) { throw new org.ednovo.gooru.core.exception.BadRequestException(FILE_NOT_FOUND, \"400\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2483/buggy-version/api.src.main.java.org.ednovo.gooru.domain.service.taxonomy.TaxonomyServiceImpl.java", "BodyUseAPI": ["org.ednovo.gooru.infrastructure.persistence.hibernate.taxonomy.TaxonomyRespository.findTaxonomyTree(java.lang.String,java.lang.String)"], "Fixed commit": "d32220931a66ea531188e0b83d118193d886e995", "Url": "https://api.github.com/repos/RenukaGurumurthy/Gooru-Core-API", "Date": "2015-09-29T04:40:39Z"},
{"Line": "=>1357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { segments[segmentIndex].visit(this); } finally { segment.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8357/buggy-version/collections.src.main.java.net.openhft.collections.VanillaSharedHashMap.java", "BodyUseAPI": ["net.openhft.collections.AbstractVanillaSharedHashMap<K, V>.Segment.visit(net.openhft.collections.AbstractVanillaSharedHashMap<K, V>.EntryIterator)"], "Fixed commit": "ba73d452d7ad49277c746e8b0ed6c83482335f25", "Url": "https://api.github.com/repos/OpenHFT/HugeCollections", "Date": "2014-05-19T21:19:33Z"},
{"Line": "=>1336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { while (!(segmentPositions.isEmpty())) { java.util.Map.Entry<K, V> entry = segment.getEntry(segmentPositions.removeFirst()); if (entry != null) { return entry; } } } finally { segment.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8357/buggy-version/collections.src.main.java.net.openhft.collections.VanillaSharedHashMap.java", "BodyUseAPI": ["java.util.Deque<java.lang.Integer>.isEmpty()", "net.openhft.collections.AbstractVanillaSharedHashMap<K, V>.Segment.getEntry(java.lang.Integer)", "java.util.Deque<java.lang.Integer>.removeFirst()"], "Fixed commit": "ba73d452d7ad49277c746e8b0ed6c83482335f25", "Url": "https://api.github.com/repos/OpenHFT/HugeCollections", "Date": "2014-05-19T21:19:33Z"},
{"Line": "=>1050", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { db.execSQL((\"create table messages \" + (((((((\"(id integer primary key autoincrement,\" + \" msg_id,\") + \" date datetime,\") + \" status integer,\") + \" address,\") + \" text,\") + \" removed integer\") + \");\"))); db.execSQL((\"create table blacklist \" + (((\"(id integer primary key autoincrement,\" + \" address,\") + \" user_phone_number,\") + \" last_report_date datetime);\"))); db.execSQL((\"create table queue \" + ((\"(id integer primary key autoincrement, msg_id,\" + \" text, user_phone_number, subscription_agreed boolean,\") + \" order_id);\"))); com.sbar.smsnenado.Common.LOGI(\"DatabaseHelper.onCreate done\"); } catch (java.lang.Throwable t) { com.sbar.smsnenado.Common.LOGE((\"!! DatabaseHelper.onCreate: \" + (t.getMessage()))); t.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3883/buggy-version/src.com.sbar.smsnenado.DatabaseConnector.java", "BodyUseAPI": ["com.sbar.smsnenado.Common.LOGI(java.lang.String)", "android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)", "android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)", "android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)"], "Fixed commit": "619019f98e3f5b3aef93a5be2100fa15f49993b2", "Url": "https://api.github.com/repos/sbar/smsnenado", "Date": "2013-11-16T15:46:40Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { zos.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4727/buggy-version/editor.exporter.src.main.java.es.eucm.ead.editor.utils.ZipUtils.java", "BodyUseAPI": ["java.util.zip.ZipOutputStream.close()"], "Fixed commit": "a2da9f9b6c72a9896bce15bc626bf095257dbab2", "Url": "https://api.github.com/repos/RotaruDan/ead", "Date": "2014-11-19T13:46:34Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { variableUpdates.put(tempKey, valueConverter.convertValue(null, aValue, null)); } catch (de.gebit.integrity.utils.ParameterUtil.UnresolvableVariableException exc) { java.lang.System.err.println(((\"SKIPPED SYNCING OF VARIABLE '\" + tempKey) + \"' TO FORK - EXCEPTION OCCURRED\")); exc.printStackTrace(); } catch (de.gebit.integrity.operations.UnexecutableException exc) { java.lang.System.err.println(((\"SKIPPED SYNCING OF VARIABLE '\" + tempKey) + \"' TO FORK - EXCEPTION OCCURRED\")); exc.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7968/buggy-version/de.gebit.integrity.runner.src.de.gebit.integrity.runner.forking.Fork.java", "BodyUseAPI": ["de.gebit.integrity.parameter.conversion.ValueConverter.convertValue(<nulltype>,java.lang.Object,<nulltype>)", "java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,valueConverter.convertValue(null, aValue, null))"], "Fixed commit": "03a77fc3ac34e7e86d146d3edce49e4c8b09cb32", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2014-09-22T08:23:00Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.commons.io.FileUtils.moveFile(a.tempFile, newFile); } catch (org.apache.commons.io.FileExistsException fee) { a.tempFile.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2983/buggy-version/src.main.java.com.cloudant.sync.datastore.AttachmentManager.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.moveFile(a.tempFile,java.io.File)"], "Fixed commit": "7243656484aba152933b6bd7c5f5a8ac44ff1201", "Url": "https://api.github.com/repos/cloudant/sync-android", "Date": "2014-07-08T09:59:06Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { date = sdf.parse(\"27/02/2017\"); } catch (java.text.ParseException ex) { java.util.logging.Logger.getLogger(com.itk.chaabouni.dao.AdService.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2065/buggy-version/ItkPortalApplication.src.main.java.com.itk.chaabouni.dao.AdService.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "bad9dea362584cad4a7aef53f4085ae3aecc974d", "Url": "https://api.github.com/repos/miryamch/itkemployeesportal", "Date": "2017-02-27T15:55:11Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { scanner = new java.util.Scanner(file); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5608/buggy-version/src.Simulation.java", "BodyUseAPI": [], "Fixed commit": "682b453778009dc76313ca4220f7632d23d5e268", "Url": "https://api.github.com/repos/NulllTeam/HashCode-Google2016", "Date": "2016-02-11T19:21:58Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.thoughtworks.go.plugin.access.common.settings.Image icon = registry.getIcon(descriptor.id()); pluginInfos.add(new com.thoughtworks.go.server.ui.plugins.PluginInfo(descriptor, com.thoughtworks.go.plugin.access.elastic.Constants.EXTENSION_NAME, null, null, icon)); } catch (java.lang.Exception e) { com.thoughtworks.go.server.service.plugins.builder.ElasticAgentViewViewModelBuilder.LOGGER.error(\"Failed to load plugin info for {}\", descriptor.id(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1877/buggy-version/server.src.com.thoughtworks.go.server.service.plugins.builder.ElasticAgentViewViewModelBuilder.java", "BodyUseAPI": ["com.thoughtworks.go.plugin.api.info.PluginDescriptor.id()", "java.util.List<com.thoughtworks.go.server.ui.plugins.PluginInfo>.add(com.thoughtworks.go.server.ui.plugins.PluginInfo)", "com.thoughtworks.go.plugin.access.elastic.ElasticAgentPluginRegistry.getIcon(descriptor.id())"], "Fixed commit": "ba70a44fa2aa32bc222cd578e240b96c213e908b", "Url": "https://api.github.com/repos/naveenbhaskar/gocd", "Date": "2016-11-23T05:30:52Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { assignment4.Critter.makeCritter(\"assignment4.Craig\"); } catch (assignment4.InvalidCritterException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8802/buggy-version/src.assignment4.Main.java", "BodyUseAPI": ["assignment4.Critter.makeCritter(java.lang.String)"], "Fixed commit": "a90db126ee835471b35b16ca2355cf2c56a7a319", "Url": "https://api.github.com/repos/LeoXia360/Critters", "Date": "2016-10-17T03:44:24Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ru.catstack.texture_resizer.model.ImageTools.saveImageToFile(image, saveFile); } catch (java.lang.IllegalArgumentException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3377/buggy-version/src.ru.catstack.texture_resizer.controllers.MainController.java", "BodyUseAPI": ["ru.catstack.texture_resizer.model.ImageTools.saveImageToFile(javafx.scene.image.Image,java.io.File)"], "Fixed commit": "9da6147fbc01705f017965d89b010bc6c32e71f1", "Url": "https://api.github.com/repos/GORR174/Texture_Resizer", "Date": "2017-07-06T17:05:18Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new java.io.File((((getDataFolder().getAbsolutePath()) + (java.io.File.separator)) + \"config.yml\")).createNewFile(); newC.save(new java.io.File((((getDataFolder().getAbsolutePath()) + (java.io.File.separator)) + \"config.yml\"))); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5385/buggy-version/uCars.src.com.useful.ucars.ucars.java", "BodyUseAPI": ["getDataFolder().getAbsolutePath()", "com.useful.ucars.ucars.getDataFolder()", "org.bukkit.configuration.file.YamlConfiguration.save(java.io.File)", "java.io.File.createNewFile()", "getDataFolder().getAbsolutePath()", "com.useful.ucars.ucars.getDataFolder()"], "Fixed commit": "4923bae684793fbfdfbfd673f0b18fa75c3ea1ef", "Url": "https://api.github.com/repos/storm345/ucars", "Date": "2013-03-13T20:24:33Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class<?> classKeyButtonRipple = de.robv.android.xposed.XposedHelpers.findClass(com.gzplanet.xposed.xperianavbarbuttons.KeyButtonViewL.CLASSNAME_KEYBUTTONRIPPLE, context.getClassLoader()); setBackground(((android.graphics.drawable.Drawable) (de.robv.android.xposed.XposedHelpers.newInstance(classKeyButtonRipple, context, this)))); } catch (de.robv.android.xposed.XposedHelpers e) { de.robv.android.xposed.XposedBridge.log(\"Class KeyButtonRipple not found\"); } catch (java.lang.NoSuchMethodError e2) { de.robv.android.xposed.XposedBridge.log(\"Method setBackground not found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3879/buggy-version/src.com.gzplanet.xposed.xperianavbarbuttons.KeyButtonViewL.java", "BodyUseAPI": ["android.content.Context.getClassLoader()", "de.robv.android.xposed.XposedHelpers.findClass(java.lang.String,context.getClassLoader())", "com.gzplanet.xposed.xperianavbarbuttons.KeyButtonViewL.setBackground(((android.graphics.drawable.Drawable) (de.robv.android.xposed.XposedHelpers.newInstance(classKeyButtonRipple, context, this))))", "de.robv.android.xposed.XposedHelpers.newInstance(java.lang.Class<?>,android.content.Context,com.gzplanet.xposed.xperianavbarbuttons.KeyButtonViewL)"], "Fixed commit": "f07d12eee7a8d3fdc87db706876974780aa735cb", "Url": "https://api.github.com/repos/itandy/XperiaAOSPNavBarButtons", "Date": "2016-12-12T16:21:35Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class<?> classKeyButtonRipple = de.robv.android.xposed.XposedHelpers.findClass(com.gzplanet.xposed.xperianavbarbuttons.KeyButtonViewL.CLASSNAME_KEYBUTTONRIPPLE, context.getClassLoader()); setBackground(((android.graphics.drawable.Drawable) (de.robv.android.xposed.XposedHelpers.newInstance(classKeyButtonRipple, context, this)))); } catch (de.robv.android.xposed.XposedHelpers e) { de.robv.android.xposed.XposedBridge.log(\"Class KeyButtonRipple not found\"); } catch (java.lang.NoSuchMethodError e2) { de.robv.android.xposed.XposedBridge.log(\"Method setBackground not found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3879/buggy-version/src.com.gzplanet.xposed.xperianavbarbuttons.KeyButtonViewL.java", "BodyUseAPI": ["com.gzplanet.xposed.xperianavbarbuttons.KeyButtonViewL.setBackground(((android.graphics.drawable.Drawable) (de.robv.android.xposed.XposedHelpers.newInstance(classKeyButtonRipple, context, this))))", "de.robv.android.xposed.XposedHelpers.newInstance(java.lang.Class<?>,android.content.Context,com.gzplanet.xposed.xperianavbarbuttons.KeyButtonViewL)", "de.robv.android.xposed.XposedHelpers.findClass(java.lang.String,context.getClassLoader())", "android.content.Context.getClassLoader()"], "Fixed commit": "f07d12eee7a8d3fdc87db706876974780aa735cb", "Url": "https://api.github.com/repos/itandy/XperiaAOSPNavBarButtons", "Date": "2016-12-12T16:21:35Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { xml = this.SEPATransferGenerator.format(this.getData()); } catch (final org.projectforge.framework.i18n.UserException ex) { this.form.error(this.translateParams(ex)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6501/buggy-version/projectforge-wicket.src.main.java.org.projectforge.web.fibu.EingangsrechnungEditPage.java", "BodyUseAPI": ["org.projectforge.business.fibu.kost.reporting.SEPATransferGenerator.format(this.getData())", "org.projectforge.web.fibu.EingangsrechnungEditPage.getData()"], "Fixed commit": "698fad9d12ff00c25b7b3c51a7ee6ec3d53fbc24", "Url": "https://api.github.com/repos/micromata/projectforge", "Date": "2017-06-19T11:13:00Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final android.content.Intent sendIntent = new android.content.Intent(); sendIntent.setAction(Intent.ACTION_SEND); sendIntent.setType(mediaInfo.mMimeType); sendIntent.putExtra(Intent.EXTRA_STREAM, mediaUri); startActivity(sendIntent); } catch (java.lang.Exception e) { android.util.Log.e(im.vector.activity.VectorMediasViewerActivity.LOG_TAG, (((\"## onAction : cannot display the media \" + mediaUri) + \" mimeType \") + (mediaInfo.mMimeType))); im.vector.activity.CommonActivityUtils.displayToast(this, e.getLocalizedMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2206/buggy-version/vector.src.main.java.im.vector.activity.VectorMediasViewerActivity.java", "BodyUseAPI": ["android.content.Intent.setType(mediaInfo.mMimeType)", "android.content.Intent.putExtra(Intent.EXTRA_STREAM,android.net.Uri)", "android.content.Intent.setAction(Intent.ACTION_SEND)", "im.vector.activity.VectorMediasViewerActivity.startActivity(android.content.Intent)"], "Fixed commit": "6c50c88e720f5faa2950ab67d4b6c81e17067852", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2016-08-11T08:32:36Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { timer.block(); } catch (java.lang.InterruptedException e) { running = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5770/buggy-version/src.main.java.io.metacake.core.common.TimedLoopThread.java", "BodyUseAPI": ["io.metacake.core.common.MilliTimer.block()"], "Fixed commit": "ecc2b7ac4481e6b8d3c48b739528156b58a53748", "Url": "https://api.github.com/repos/metacake/core", "Date": "2013-11-12T01:52:05Z"},
{"Line": "=>878", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { localTopologyManager.setCacheAvailability(getName(), availability); } catch (java.lang.Exception e) { throw new org.infinispan.commons.CacheException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/555/buggy-version/core.src.main.java.org.infinispan.cache.impl.CacheImpl.java", "BodyUseAPI": ["org.infinispan.cache.impl.CacheImpl<K, V>.getName()", "org.infinispan.topology.LocalTopologyManager.setCacheAvailability(java.lang.String,org.infinispan.partionhandling.AvailabilityMode)"], "Fixed commit": "bb076f82946922a63a4c15626da28c2215e9501e", "Url": "https://api.github.com/repos/danberindei/infinispan", "Date": "2014-10-20T14:43:22Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { return ((int) (dp * ((metrics.densityDpi) / 160.0F))); } catch (java.lang.NoSuchFieldError ignored) { return ((int) (android.util.TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, metrics))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4396/buggy-version/bottom-bar.src.main.java.com.roughike.bottombar.MiscUtils.java", "BodyUseAPI": [], "Fixed commit": "0dfab8feb8d70cf0a1fe442d451820e0b6ea97bf", "Url": "https://api.github.com/repos/pocheshire/BottomBar", "Date": "2016-06-07T13:49:24Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { buckets = entry.getValue().collectGarbage(); } catch (java.io.IOException e1) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7008/buggy-version/core.src.main.java.com.srotya.sidewinder.core.storage.mem.MemStorageEngine.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, com.srotya.sidewinder.core.storage.mem.TimeSeries>.getValue()", "entry.getValue().collectGarbage()"], "Fixed commit": "53c2ec5b874927c832e483094a58ce380cf246bb", "Url": "https://api.github.com/repos/srotya/sidewinder", "Date": "2017-07-04T19:27:20Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int n = ((it.wm.perdue.NewsListFragment.NewsJSONListAdapter) (adapter)).addFromJSON(response); if (n == 0) { notifyDataEnded(); } setListShown(true); notifyDownloadEnded(); saveData(response); } catch (java.lang.NullPointerException e) { android.util.Log.d(it.wm.perdue.NewsListFragment.DEBUG_TAG, (\"Eccezione in list fragment ---> \" + (e.getLocalizedMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6690/buggy-version/src.it.wm.perdue.NewsListFragment.java", "BodyUseAPI": ["it.wm.perdue.NewsListFragment.setListShown(boolean)", "it.wm.perdue.NewsListFragment.addFromJSON(java.lang.String)", "it.wm.perdue.NewsListFragment.notifyDownloadEnded()", "it.wm.perdue.NewsListFragment.saveData(java.lang.String)", "it.wm.perdue.NewsListFragment.notifyDataEnded()"], "Fixed commit": "c8de3a16091a32c6b491153f2d1302a3254e2ff0", "Url": "https://api.github.com/repos/eltazar/x2Android", "Date": "2012-12-13T09:46:31Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Integer.parseInt(s); return true; } catch (java.lang.NumberFormatException nfe) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1298/buggy-version/foretagskvitton.app.src.main.java.corp.skaj.foretagskvitton.services.ReceiptScanner.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "e27c3a55e4fea5e8abbd342f0f87171f3524cbb8", "Url": "https://api.github.com/repos/mattssonj/KvittoSkanner", "Date": "2017-04-29T16:35:46Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final org.springframework.http.ResponseEntity<ar.edu.itba.paw.webapp.external.TwitchClientImpl.StreamsCollectionResponse> response = restTemplate.exchange(endpointUri, HttpMethod.GET, this.requestEntity, ar.edu.itba.paw.webapp.external.TwitchClientImpl.StreamsCollectionResponse.class); return ar.edu.itba.paw.webapp.external.TwitchClientImpl.fromStreamResponse(response.getBody()); } catch (java.lang.Throwable e) { throw new ar.edu.itba.paw.webapp.exceptions.ExternalServiceException(\"Could not access the Twitch API\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3186/buggy-version/paw-webapp.service.src.main.java.ar.edu.itba.paw.webapp.external.TwitchClientImpl.java", "BodyUseAPI": ["ar.edu.itba.paw.webapp.external.TwitchClientImpl.fromStreamResponse(response.getBody())", "org.springframework.http.ResponseEntity<ar.edu.itba.paw.webapp.external.TwitchClientImpl.StreamsCollectionResponse>.getBody()", "org.springframework.web.client.RestTemplate.exchange(java.net.URI,HttpMethod.GET,org.springframework.http.HttpEntity<java.lang.String>,java.lang.Class)"], "Fixed commit": "17d98fffd414e39ac5e0fe3b22d94f1089303246", "Url": "https://api.github.com/repos/juanmbellini/PowerUp", "Date": "2017-12-10T13:14:00Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { iterator = projector.apply(iterator); } catch (java.lang.Throwable t) { consumer.accept(null, t); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5122/buggy-version/sql.src.main.java.io.crate.operation.projectors.ProjectingBatchConsumer.java", "BodyUseAPI": ["io.crate.data.Projector.apply(io.crate.data.BatchIterator)"], "Fixed commit": "0f3b1a819f7bc0ff028150dd079efc35d4731124", "Url": "https://api.github.com/repos/EvilMcJerkface/crate", "Date": "2017-03-21T16:59:22Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (result != null) { updateView(result); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4350/buggy-version/src.ru.ifmo.mobdev.mekhanikov.weather.WeatherFragment.java", "BodyUseAPI": ["ru.ifmo.mobdev.mekhanikov.weather.WeatherFragment.ForecastUpdater.updateView(ru.ifmo.mobdev.mekhanikov.weather.Forecast)"], "Fixed commit": "0edebd80cf05f09d57ecb7c3a04dce9fe8441cfa", "Url": "https://api.github.com/repos/Megabyte777/AndroidWeather", "Date": "2012-11-25T08:50:01Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getArtifacts(element.toStringWithConsume()); } catch (java.lang.Exception e) { if ((!(elementSub.getLocalName().equals(\"proxy\"))) && (!(elementSub.getLocalName().equals(\"target\")))) { java.lang.String nameSpace = \"xmlns=\\\"http://ws.apache.org/ns/synapse\\\"\"; java.lang.String errorLine = elementSub.toStringWithConsume(); java.lang.String errorLineWithoutNS = errorLine.replaceAll(nameSpace, \"\"); return ((((\"Unknown synapse configuration tag: \\n\\n\" + \"At Line \") + (elementSub.getLineNumber())) + \", \") + errorLineWithoutNS) + \"\\n\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4813/buggy-version/esb.org.wso2.developerstudio.eclipse.gmf.esb.diagram.src.org.wso2.developerstudio.eclipse.gmf.esb.diagram.custom.deserializer.Deserializer.java", "BodyUseAPI": ["org.apache.axiom.om.OMElement.toStringWithConsume()", "org.wso2.developerstudio.eclipse.gmf.esb.diagram.custom.deserializer.Deserializer.getArtifacts(element.toStringWithConsume())"], "Fixed commit": "03915a938c3a7a0b314c5d20c0a26e2b19fa9c5b", "Url": "https://api.github.com/repos/nwnpallewela/developer-studio", "Date": "2015-10-04T17:21:16Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { handler = new android.os.Handler(); } catch (java.lang.RuntimeException e) { android.util.Log.w(com.heinrichreimer.inquiry.Inquiry.DEBUG_TAG, \"Caller thread has no default looper, using main looper instead\"); handler = new android.os.Handler(android.os.Looper.getMainLooper()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3457/buggy-version/library.src.main.java.com.heinrichreimer.inquiry.Inquiry.java", "BodyUseAPI": [], "Fixed commit": "216be964050268c295545d90abffeac0ee73d76f", "Url": "https://api.github.com/repos/aitorvs/android-inquiry", "Date": "2016-09-09T16:11:11Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { classBasePackage = compUnit.getPackage().getName().toString(); } catch (java.lang.NullPointerException npe) { classBasePackage = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3388/buggy-version/SourceMiner.src.main.java.br.com.jvoliveira.sourceminer.component.javaparser.visitor.JavaClassVisitor.java", "BodyUseAPI": ["compUnit.getPackage().getName().toString()", "com.github.javaparser.ast.CompilationUnit.getPackage()", "compUnit.getPackage().getName()"], "Fixed commit": "e7cf964833268a7fa24add3747894a6ae75df839", "Url": "https://api.github.com/repos/jvoliveiran/sourceminer", "Date": "2017-03-06T02:51:28Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { constructor = getType().getDeclaredConstructor(paramargs); } catch (java.lang.NoSuchMethodException e) { constructor = getType().getConstructor(paramargs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6981/buggy-version/reflection-proxy.src.main.java.io.descoped.reflection.proxy.ClassProxy.java", "BodyUseAPI": ["io.descoped.reflection.proxy.ClassProxy<T>.getType()", "java.lang.Class<T>.getDeclaredConstructor(java.lang.Class[])"], "Fixed commit": "7b6f392ea5407b92fee0afa01af31db2b2d5a6f2", "Url": "https://api.github.com/repos/descoped/descoped-reflection", "Date": "2017-02-13T11:09:22Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { task = org.voltdb.utils.MiscUtils.roundTripForCL(task); } catch (java.lang.Exception e) { java.lang.String fmt = \"Cannot invoke procedure %s. failed to create task.\"; org.voltdb.LightweightNTClientResponseAdapter.m_logger.rateLimitedLog(org.voltdb.LightweightNTClientResponseAdapter.SUPPRESS_INTERVAL, Level.ERROR, null, fmt, procName); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7625/buggy-version/src.frontend.org.voltdb.LightweightNTClientResponseAdapter.java", "BodyUseAPI": ["org.voltdb.utils.MiscUtils.roundTripForCL(org.voltdb.StoredProcedureInvocation)"], "Fixed commit": "63bf978b7fa4162e858d79362f22a2e0891ce104", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2017-05-10T21:02:40Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { parkinggarage.views.StatisticsScreen statisticsScreen = new parkinggarage.views.StatisticsScreen(); statisticsScreen.show(); } catch (java.lang.NullPointerException i) { java.lang.System.out.println(\"Statistics file not found\"); new javafx.scene.control.Alert(Alert.AlertType.ERROR, \"Layout file not found\").show(); i.printStackTrace(); } catch (java.io.IOException i) { java.lang.System.out.println(\"Something went wrong\"); new javafx.scene.control.Alert(Alert.AlertType.ERROR, \"FXML not valid\").show(); i.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8119/buggy-version/src.parkinggarage.SimulationView.java", "BodyUseAPI": ["parkinggarage.views.StatisticsScreen.show()"], "Fixed commit": "4530c3b6a8ef7c38b90c51294ba269c49fcb3c0b", "Url": "https://api.github.com/repos/JanD98/ParkingGarage", "Date": "2017-01-27T10:23:31Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ((de.linearbits.subframe.analyzer.Analyzer<java.lang.Double>) (analyzers[i])).add(value); } catch (java.lang.ClassCastException e) { throw new java.lang.RuntimeException(\"Incompatible analyzer for value of type 'double'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1250/buggy-version/src.main.de.linearbits.subframe.Benchmark.java", "BodyUseAPI": ["((de.linearbits.subframe.analyzer.Analyzer<java.lang.Double>) (analyzers[i])).add(java.lang.Double)"], "Fixed commit": "099d7b790c6fa406daa252fe9ce67745902e9316", "Url": "https://api.github.com/repos/prasser/subframe", "Date": "2014-07-25T09:57:44Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ((de.linearbits.subframe.analyzer.Analyzer<java.lang.Object>) (analyzers[i])).add(value); } catch (java.lang.ClassCastException e) { throw new java.lang.RuntimeException(\"Incompatible analyzer for value of type 'object'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1250/buggy-version/src.main.de.linearbits.subframe.Benchmark.java", "BodyUseAPI": ["((de.linearbits.subframe.analyzer.Analyzer<java.lang.Object>) (analyzers[i])).add(java.lang.Object)"], "Fixed commit": "099d7b790c6fa406daa252fe9ce67745902e9316", "Url": "https://api.github.com/repos/prasser/subframe", "Date": "2014-07-25T09:57:44Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { op = words.get(0); } catch (java.lang.IndexOutOfBoundsException e) { java.lang.System.out.println(\"Format: <operation> [arg...]\"); op = \"\"; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3383/buggy-version/database_api.src.audiohosting.utils.CLI.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "8447354733eb6a332df7396aee045e150107b15a", "Url": "https://api.github.com/repos/Yakkodash/audiohosting-sql-itmo", "Date": "2016-12-12T22:18:41Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { prof.setRating(java.lang.Integer.valueOf(rating.getText().toString())); } catch (java.lang.Exception e) { android.widget.Toast.makeText(getActivity(), \"Rating is not valid because it is too high.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1131/buggy-version/src.com.Centaurii.app.RatingCalculator.fragments.ProfileViewerFragment.java", "BodyUseAPI": ["rating.getText().toString()", "com.Centaurii.app.RatingCalculator.model.Profile.setRating(java.lang.Integer)", "java.lang.Integer.valueOf(rating.getText().toString())", "android.widget.EditText.getText()"], "Fixed commit": "5bb820c15106f5fc160da7dd2f1279dc66e07831", "Url": "https://api.github.com/repos/gnarizzy/GameRatingCalculator", "Date": "2013-10-25T19:05:12Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { j.put(\"id\", conceptCollection.getConceptCollection().getConceptCollectionId()); j.put(\"name\", conceptCollection.getConceptCollection().getConceptCollectionName()); ja.put(j); } catch (org.codehaus.jettison.json.JSONException e) { throw new edu.asu.spring.quadriga.exceptions.QuadrigaException(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7856/buggy-version/Quadriga.src.main.java.edu.asu.spring.quadriga.web.workbench.ConceptCollectionProjectController.java", "BodyUseAPI": ["org.codehaus.jettison.json.JSONObject.put(java.lang.String,conceptCollection.getConceptCollection().getConceptCollectionName())", "conceptCollection.getConceptCollection().getConceptCollectionId()", "edu.asu.spring.quadriga.domain.workbench.IProjectConceptCollection.getConceptCollection()", "conceptCollection.getConceptCollection().getConceptCollectionName()", "org.codehaus.jettison.json.JSONObject.put(java.lang.String,conceptCollection.getConceptCollection().getConceptCollectionId())", "org.codehaus.jettison.json.JSONArray.put(org.codehaus.jettison.json.JSONObject)", "edu.asu.spring.quadriga.domain.workbench.IProjectConceptCollection.getConceptCollection()"], "Fixed commit": "6731cccaa1ece40892914c0c94049c74c46cdf64", "Url": "https://api.github.com/repos/diging/quadriga", "Date": "2016-02-08T21:03:28Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { j.put(\"id\", dictionary.getDictionary().getDictionaryId()); j.put(\"name\", dictionary.getDictionary().getDictionaryName()); ja.put(j); } catch (org.codehaus.jettison.json.JSONException e) { throw new edu.asu.spring.quadriga.exceptions.QuadrigaException(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7856/buggy-version/Quadriga.src.main.java.edu.asu.spring.quadriga.web.workbench.DictionaryProjectController.java", "BodyUseAPI": ["org.codehaus.jettison.json.JSONObject.put(java.lang.String,dictionary.getDictionary().getDictionaryId())", "edu.asu.spring.quadriga.domain.workbench.IProjectDictionary.getDictionary()", "dictionary.getDictionary().getDictionaryName()", "org.codehaus.jettison.json.JSONArray.put(org.codehaus.jettison.json.JSONObject)", "dictionary.getDictionary().getDictionaryId()", "org.codehaus.jettison.json.JSONObject.put(java.lang.String,dictionary.getDictionary().getDictionaryName())", "edu.asu.spring.quadriga.domain.workbench.IProjectDictionary.getDictionary()"], "Fixed commit": "6731cccaa1ece40892914c0c94049c74c46cdf64", "Url": "https://api.github.com/repos/diging/quadriga", "Date": "2016-02-08T21:03:28Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { method = subscriberClass.getDeclaredMethod(methodName, eventType); } catch (java.lang.Throwable th) { method = subscriberClass.getMethod(methodName, eventType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1728/buggy-version/EventBus.src.org.greenrobot.eventbus.meta.AbstractSubscriberInfo.java", "BodyUseAPI": ["java.lang.Class.getDeclaredMethod(java.lang.String,java.lang.Class<?>)"], "Fixed commit": "3fb87cd13806827364f1013a78deada39d98c493", "Url": "https://api.github.com/repos/bezineb5/EventBus", "Date": "2016-02-25T03:15:25Z"},
{"Line": "=>732", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { collectionShareAlertPopup.center(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3342/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.shelf.collection.CollectionShareTabVc.java", "BodyUseAPI": ["org.ednovo.gooru.client.mvp.shelf.collection.CollectionShareAlertPopup.center()"], "Fixed commit": "677a62911b9ff18ca74862bf21b48b0085496a3d", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-01-08T13:32:03Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.content.Intent sendIntent = new android.content.Intent(); sendIntent.setAction(Intent.ACTION_SEND); sendIntent.setPackage(\"com.whatsapp\"); sendIntent.putExtra(Intent.EXTRA_TEXT, (((donor.getName()) + \" \") + (donor.getContact()))); sendIntent.setType(\"text/plain\"); startActivity(sendIntent); } catch (android.content.ActivityNotFoundException ex) { android.widget.Toast.makeText(getContext(), \"WhatsApp not Found\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/670/buggy-version/app.src.main.java.com.styx.gta.donorblood.fragments.donordetail.DonorDetailFragment.java", "BodyUseAPI": ["com.styx.gta.donorblood.models.Donor.getName()", "android.content.Intent.setAction(Intent.ACTION_SEND)", "com.styx.gta.donorblood.models.Donor.getContact()", "android.content.Intent.setType(java.lang.String)", "com.styx.gta.donorblood.fragments.donordetail.DonorDetailFragment.2.startActivity(android.content.Intent)", "android.content.Intent.setPackage(java.lang.String)", "android.content.Intent.putExtra(Intent.EXTRA_TEXT,(((donor.getName()) + \" \") + (donor.getContact())))"], "Fixed commit": "5381f2bfa61a094b3986b40bddab40d3ed4b4c2c", "Url": "https://api.github.com/repos/amalgta/DonorBlood", "Date": "2016-12-19T09:30:20Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return horses.get(horseIndex.get(horseNumber)); } catch (java.lang.Exception e) { throw new org.zahm.horsetrack.exception.InvalidHorseException(java.lang.Integer.toString(horseNumber)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2123/buggy-version/src.org.zahm.horsetrack.data.HorseDataAccess.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.lang.Integer>.get(int)", "java.util.ArrayList<org.zahm.horsetrack.model.Horse>.get(java.lang.Integer)"], "Fixed commit": "67bedc64ffb566a243635bc6d9f0b1405a7a2815", "Url": "https://api.github.com/repos/robzahm/horsetrack", "Date": "2017-04-04T23:35:37Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { transaction.commitAllowingStateLoss(); } catch (java.lang.IllegalStateException e) { return selectedFragment; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2677/buggy-version/src.eu.siacs.conversations.ui.ConversationActivity.java", "BodyUseAPI": ["android.app.FragmentTransaction.commitAllowingStateLoss()"], "Fixed commit": "c067bf96b032e1bef3b021df246dadccbb1b5fd7", "Url": "https://api.github.com/repos/SamWhited/Conversations", "Date": "2014-10-22T15:32:59Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(2000); } catch (java.lang.InterruptedException e) { getLog().error(\"Error in random wait...\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5354/buggy-version/src.main.java.org.codehaus.mojo.cassandra.StartCassandraMojo.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "ef78b9e7946d048ba6fa7d8aa9163eefede25503", "Url": "https://api.github.com/repos/xburgos/cassandra-maven-plugin", "Date": "2015-02-23T15:45:43Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { perm = ExpeditConst.databaseUtils.getSetting(\"modrole\", guild.getID()); } catch (java.lang.ClassNotFoundException | java.lang.IllegalAccessException | java.sql.SQLException | java.lang.InstantiationException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6161/buggy-version/src.main.java.io.github.johnfg10.commands.GeneralCommandHandler.java", "BodyUseAPI": ["io.github.johnfg10.commands.IGuild.getID()", "ExpeditConst.databaseUtils.getSetting(java.lang.String,guild.getID())"], "Fixed commit": "04d35e7b4225c1a15b70dcf688022d6705ee7958", "Url": "https://api.github.com/repos/johnfg10/Expedit_Public", "Date": "2017-04-17T11:47:17Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { perm = ExpeditConst.databaseUtils.getSetting(\"modrole\", guild.getID()); } catch (java.lang.ClassNotFoundException | java.lang.IllegalAccessException | java.sql.SQLException | java.lang.InstantiationException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6161/buggy-version/src.main.java.io.github.johnfg10.commands.GeneralCommandHandler.java", "BodyUseAPI": ["ExpeditConst.databaseUtils.getSetting(java.lang.String,guild.getID())", "io.github.johnfg10.commands.IGuild.getID()"], "Fixed commit": "04d35e7b4225c1a15b70dcf688022d6705ee7958", "Url": "https://api.github.com/repos/johnfg10/Expedit_Public", "Date": "2017-04-17T11:47:17Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { perm = ExpeditConst.databaseUtils.getSetting(\"modrole\", guild.getID()); } catch (java.lang.ClassNotFoundException | java.lang.IllegalAccessException | java.sql.SQLException | java.lang.InstantiationException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6161/buggy-version/src.main.java.io.github.johnfg10.commands.GeneralCommandHandler.java", "BodyUseAPI": ["ExpeditConst.databaseUtils.getSetting(java.lang.String,guild.getID())", "io.github.johnfg10.commands.IGuild.getID()"], "Fixed commit": "04d35e7b4225c1a15b70dcf688022d6705ee7958", "Url": "https://api.github.com/repos/johnfg10/Expedit_Public", "Date": "2017-04-17T11:47:17Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { perm = ExpeditConst.databaseUtils.getSetting(\"modrole\", guild.getID()); } catch (java.lang.ClassNotFoundException | java.lang.IllegalAccessException | java.sql.SQLException | java.lang.InstantiationException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6161/buggy-version/src.main.java.io.github.johnfg10.commands.GeneralCommandHandler.java", "BodyUseAPI": ["io.github.johnfg10.commands.IGuild.getID()", "ExpeditConst.databaseUtils.getSetting(java.lang.String,guild.getID())"], "Fixed commit": "04d35e7b4225c1a15b70dcf688022d6705ee7958", "Url": "https://api.github.com/repos/johnfg10/Expedit_Public", "Date": "2017-04-17T11:47:17Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { perm = ExpeditConst.databaseUtils.getSetting(\"modrole\", guild.getID()); } catch (java.lang.ClassNotFoundException | java.lang.IllegalAccessException | java.sql.SQLException | java.lang.InstantiationException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6161/buggy-version/src.main.java.io.github.johnfg10.commands.GeneralCommandHandler.java", "BodyUseAPI": ["ExpeditConst.databaseUtils.getSetting(java.lang.String,guild.getID())", "io.github.johnfg10.commands.IGuild.getID()"], "Fixed commit": "04d35e7b4225c1a15b70dcf688022d6705ee7958", "Url": "https://api.github.com/repos/johnfg10/Expedit_Public", "Date": "2017-04-17T11:47:17Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return serveStaticResource(req, rsp, con.stream, con.connection.getLastModified(), expiration, con.connection.getContentLength(), con.connection.getURL().toString()); } finally { con.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3552/buggy-version/stapler-core.src.main.java.org.kohsuke.stapler.Stapler.java", "BodyUseAPI": ["java.net.URLConnection.getContentLength()", "java.net.URLConnection.getURL()", "org.kohsuke.stapler.Stapler.serveStaticResource(javax.servlet.http.HttpServletRequest,org.kohsuke.stapler.StaplerResponse,java.io.InputStream,long,long,int,java.lang.String)", "java.net.URL.toString()", "java.net.URLConnection.getLastModified()"], "Fixed commit": "cdaa402100cb53d845ba79edfd3b8736db161520", "Url": "https://api.github.com/repos/hudson/stapler", "Date": "2012-05-17T00:48:31Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return IO.readText(); } catch (java.lang.IllegalArgumentException e) { e.printStackTrace(); return readText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4255/buggy-version/Chocohalics-GitUpload.src.frontEnd.Terminal.java", "BodyUseAPI": ["frontEnd.UI.readText()"], "Fixed commit": "12780957e0abcef9792c8f4a07f6da22526a9beb", "Url": "https://api.github.com/repos/RobertBonanno/CSC440-SoftwareDevelopment-V2", "Date": "2017-12-20T06:47:29Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { shuken.TaTeTi.TaTeTi.getInstance().getMainMenuScreen().invitarAJugar(rows.get(i).nick); shuken.Engine.ShukenInput.ShukenInput.getInstance().consumeClick(0); } catch (java.lang.IndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2594/buggy-version/src.shuken.TaTeTi.Entities.TableOfPlayersOnline.java", "BodyUseAPI": ["shuken.Engine.ShukenInput.ShukenInput.getInstance().consumeClick(int)", "shuken.Engine.ShukenInput.ShukenInput.getInstance()", "shuken.TaTeTi.TaTeTi.getInstance().getMainMenuScreen().invitarAJugar(rows.get(i).nick)", "java.util.ArrayList<shuken.TaTeTi.Entities.PlayersOnlineRecord>.get(int)", "shuken.TaTeTi.TaTeTi.getInstance().getMainMenuScreen()", "shuken.TaTeTi.TaTeTi.getInstance()"], "Fixed commit": "9f78b8e894e3ef5bb193be2ca0c03ab2b4fe74da", "Url": "https://api.github.com/repos/FabricioMarrone/TaTeTi_Online", "Date": "2014-09-12T18:21:07Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { lock.lockInterruptibly(); } catch (java.lang.InterruptedException e) { interrupt(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3735/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.util.LooperThread.java", "BodyUseAPI": ["java.util.concurrent.locks.Lock.lockInterruptibly()"], "Fixed commit": "47c3eb4ca21dd2b0277d104fbd665c157b6ec866", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-10-31T02:26:08Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.socket.close(); this.in.close(); this.out.close(); } catch (java.lang.Exception e) { java.lang.System.out.println((\"Caught non-problematic exception: \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5191/buggy-version/project.Server.ChatServerThread.java", "BodyUseAPI": ["java.net.Socket.close()", "java.io.BufferedReader.close()", "java.io.PrintWriter.close()"], "Fixed commit": "ad17f44a7e56ebe9de8e6df98d92ad0d6445246b", "Url": "https://api.github.com/repos/AlecZadikian9001/Chat-System-BlueJ", "Date": "2013-09-23T04:42:56Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { server.start(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7933/buggy-version/src.main.java.ru.ocelotjungle.GetScoreboardVariable.Main.java", "BodyUseAPI": ["org.eclipse.jetty.server.Server.start()"], "Fixed commit": "371c7ce2c2756734e5116508d57c85f1964b7d4d", "Url": "https://api.github.com/repos/VELLEVET/GetScoreboardVariable", "Date": "2017-05-30T15:58:32Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Integer score = var.getScore(pname).getScore(); resp.getWriter().write(score.toString()); operationStatus = 2; } catch (java.lang.IllegalArgumentException iae) { resp.sendError(HttpServletResponse.SC_BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7933/buggy-version/src.main.java.ru.ocelotjungle.GetScoreboardVariable.HTTPHandler.java", "BodyUseAPI": ["java.lang.Integer.toString()", "resp.getWriter().write(java.lang.String)", "javax.servlet.http.HttpServletResponse.getWriter()", "var.getScore(pname).getScore()", "org.bukkit.scoreboard.Objective.getScore(java.lang.String)"], "Fixed commit": "371c7ce2c2756734e5116508d57c85f1964b7d4d", "Url": "https://api.github.com/repos/VELLEVET/GetScoreboardVariable", "Date": "2017-05-30T15:58:32Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { initFromConf(); } catch (org.linphone.LinphoneConfigException ec) { android.util.Log.w(org.linphone.LinphoneService.TAG, \"no valid settings found\", ec); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/211/buggy-version/src.org.linphone.LinphoneService.java", "BodyUseAPI": ["org.linphone.LinphoneService.initFromConf()"], "Fixed commit": "8cf42643f55d4de3fde59a780c0912d7b676171c", "Url": "https://api.github.com/repos/hanatann/Linphone-android", "Date": "2010-03-19T16:39:23Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.openmrs.Cohort inStates = org.openmrs.api.context.Context.getService(org.openmrs.module.reporting.cohort.definition.service.CohortDefinitionService.class).evaluate(iscd, new org.openmrs.module.reporting.evaluation.EvaluationContext()); cohort = org.openmrs.module.mdrtb.MdrtbUtil.nullSafeIntersect(cohort, inStates); } catch (org.openmrs.module.reporting.evaluation.EvaluationException e) { throw new org.openmrs.module.mdrtb.exception.MdrtbAPIException(\"Unable to evalute patients in states\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6626/buggy-version/api.src.main.java.org.openmrs.module.mdrtb.MdrtbUtil.java", "BodyUseAPI": ["org.openmrs.api.context.Context.getService(java.lang.Class)", "org.openmrs.api.context.Context.getService(org.openmrs.module.reporting.cohort.definition.service.CohortDefinitionService.class).evaluate(org.openmrs.module.reporting.cohort.definition.InStateCohortDefinition,org.openmrs.module.reporting.evaluation.EvaluationContext)", "org.openmrs.module.mdrtb.MdrtbUtil.nullSafeIntersect(org.openmrs.Cohort,org.openmrs.Cohort)"], "Fixed commit": "99bf5fb78cd52314e4e2d2d577f1a8b155ac5a99", "Url": "https://api.github.com/repos/openmrs/openmrs-module-mdrtb", "Date": "2016-04-16T23:28:17Z"},
{"Line": "=>1089", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { json = new org.codehaus.jackson.map.ObjectMapper().readTree(defaultConfiguration.getBody()); } catch (java.io.IOException e) { org.kaaproject.kaa.server.control.service.DefaultControlService.LOG.error(\"Unable to convert default configuration data to json\", e); throw new org.kaaproject.kaa.server.control.service.exception.ControlServiceException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7104/buggy-version/server.node.src.main.java.org.kaaproject.kaa.server.control.service.DefaultControlService.java", "BodyUseAPI": ["org.codehaus.jackson.map.ObjectMapper.readTree(defaultConfiguration.getBody())", "org.kaaproject.kaa.server.control.service.ConfigurationDto.getBody()"], "Fixed commit": "78696c7d1d73b57d36ee7c0ac7bbdcdf8fe81606", "Url": "https://api.github.com/repos/kaaproject/kaa", "Date": "2016-08-03T11:23:18Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { LOG.info(\"ThriftServerConfiguration destroy, shutdown eureka client.\"); eurekaClient.shutdown(); } catch (java.lang.Exception e) { LOG.error(\"eurekaClient shutdown exception\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7358/buggy-version/sbmvt-abc-server.src.main.java.com.coder4.sbmvt.abc.server.configuration.ThriftServerConfiguration.java", "BodyUseAPI": ["com.netflix.discovery.EurekaClient.shutdown()", "org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "93ab7a4e34ac0a2cd90760e31780b64d8cb548fd", "Url": "https://api.github.com/repos/liheyuan/sbmvt-abc", "Date": "2017-08-31T06:15:42Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { uk.bl.wa.indexer.WARCIndexerCommand.forceSubmission(solrWeb, docs); } catch (org.apache.solr.client.solrj.SolrServerException s) { uk.bl.wa.indexer.WARCIndexerCommand.log.warn(\"SolrServerException\", s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8753/buggy-version/warc-indexer.src.main.java.uk.bl.wa.indexer.WARCIndexerCommand.java", "BodyUseAPI": ["uk.bl.wa.indexer.WARCIndexerCommand.forceSubmission(uk.bl.wa.solr.SolrWebServer,java.util.ArrayList<org.apache.solr.common.SolrInputDocument>)"], "Fixed commit": "bfe9b65368162d23ac59d714436e7324f59fe192", "Url": "https://api.github.com/repos/netarchivesuite/webarchive-discovery", "Date": "2016-05-23T12:37:39Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return ((legendsPath) != null) && (java.nio.file.Files.exists(legendsPlusPath)); } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5737/buggy-version/src.main.java.legends.helper.WorldConfig.java", "BodyUseAPI": ["java.nio.file.Files.exists(java.nio.file.Path)"], "Fixed commit": "b7148ad5079f8aaa991d7e316c12baa74ba502aa", "Url": "https://api.github.com/repos/robertjanetzko/LegendsBrowser", "Date": "2016-01-15T05:47:35Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return request.getJsonMap().toJson(); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8048/buggy-version/src.com.jbrown.jnet.commands.Responder.java", "BodyUseAPI": ["com.jbrown.jnet.core.RequestI.getJsonMap()", "request.getJsonMap().toJson()"], "Fixed commit": "55a78b59aa76e04dd0e10f3666554aa900dd9206", "Url": "https://api.github.com/repos/javabrown/jnet", "Date": "2015-11-18T02:32:44Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { main.loginChild(child); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4960/buggy-version/src.Controler.ChildLoginSelection.java", "BodyUseAPI": ["Main.Main.loginChild(Model.Child)"], "Fixed commit": "f6409abf84b1d89bc7aac64ccf858b81afa69f5e", "Url": "https://api.github.com/repos/LaurentNoyon/LOGO-Project", "Date": "2017-04-18T09:37:42Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { server.MsgHandlers.WhoIsInHandler.handle(pUser); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5658/buggy-version/src.server.SlashCommand.java", "BodyUseAPI": ["server.MsgHandlers.WhoIsInHandler.handle(server.User)"], "Fixed commit": "79a5dabd6d9b58e0dab22f9a257b3b01a3adf14b", "Url": "https://api.github.com/repos/bthomas50/COMP7081", "Date": "2014-11-18T21:46:09Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { toneGenerator = new android.media.ToneGenerator(android.media.AudioManager.STREAM_MUSIC, 100); } catch (java.lang.RuntimeException e) { android.content.SharedPreferences.Editor editor = prefs.edit(); editor.putBoolean(\"silence\", true); editor.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3216/buggy-version/app.src.main.java.com.icelandic_courses.elie.myfirstapp.view.GameView.java", "BodyUseAPI": [], "Fixed commit": "4f424b67ec8985583707a9987f02a55f3c0c0b90", "Url": "https://api.github.com/repos/ElieGUILLAUMES/Dots-Android-Game", "Date": "2015-09-20T21:17:09Z"},
{"Line": "=>742", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(10000); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/426/buggy-version/rules.src.main.java.it.polimi.tower4clouds.rules.actions.CloudMLCall.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "587a876c4945d08ab3cdacb0dec731b18ff2cf31", "Url": "https://api.github.com/repos/davidev87/tower4clouds", "Date": "2015-07-16T10:25:28Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { user = org.bukkit.Bukkit.getOfflinePlayer(net.ghostrealms.UUIDLib.getID(s)); } catch (java.lang.RuntimeException ex) { sender.sendMessage((((((((net.md_5.bungee.api.ChatColor.GRAY) + \"[Realms] \") + (net.md_5.bungee.api.ChatColor.RED)) + s) + \" \") + (net.md_5.bungee.api.ChatColor.DARK_RED)) + \"does not have an account.\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7130/buggy-version/src.main.java.net.ghostrealms.cmd.BalanceCommand.java", "BodyUseAPI": ["net.ghostrealms.UUIDLib.getID(java.lang.String)", "org.bukkit.Bukkit.getOfflinePlayer(net.ghostrealms.UUIDLib.getID(s))"], "Fixed commit": "77c551d54e66fdba13a8b9cb587cb1dd56281be8", "Url": "https://api.github.com/repos/GhostRealms/EconAliases", "Date": "2015-02-16T00:42:34Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (java.lang.Integer.class.equals(clazz)) { valueBytes = (((java.lang.Integer) (record.getDataValue())) == 0) ? com.twitter.hraven.Constants.ZERO_INT_BYTES : org.apache.hadoop.hbase.util.Bytes.toBytes(((java.lang.Integer) (record.getDataValue()))); }else if (java.lang.Long.class.equals(clazz)) { valueBytes = (((java.lang.Long) (record.getDataValue())) == 0) ? com.twitter.hraven.Constants.ZERO_LONG_BYTES : org.apache.hadoop.hbase.util.Bytes.toBytes(((java.lang.Long) (record.getDataValue()))); }else { valueBytes = org.apache.hadoop.hbase.util.Bytes.toBytes(((java.lang.String) (record.getDataValue()))); } } catch (java.lang.Exception e) { com.twitter.hraven.mapreduce.HbaseHistoryWriter.LOG.error(java.lang.String.format(\"Error serializing dataKey: %s, value: %s\", dataKey, record.getDataValue())); valueBytes = org.apache.hadoop.hbase.util.Bytes.toBytes(((java.lang.String) (record.getDataValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/372/buggy-version/hraven-etl.src.main.java.com.twitter.hraven.mapreduce.HbaseHistoryWriter.java", "BodyUseAPI": ["java.lang.Class.equals(java.lang.Class)", "com.twitter.hraven.HravenRecord.getDataValue()", "com.twitter.hraven.HravenRecord.getDataValue()", "com.twitter.hraven.HravenRecord.getDataValue()", "com.twitter.hraven.HravenRecord.getDataValue()", "org.apache.hadoop.hbase.util.Bytes.toBytes(((java.lang.Long) (record.getDataValue())))", "com.twitter.hraven.HravenRecord.getDataValue()", "java.lang.Class.equals(java.lang.Class)", "org.apache.hadoop.hbase.util.Bytes.toBytes(((java.lang.Integer) (record.getDataValue())))", "org.apache.hadoop.hbase.util.Bytes.toBytes(((java.lang.String) (record.getDataValue())))"], "Fixed commit": "7b36649d89cf19c31ec7b2e9b8ccea0f4f2542af", "Url": "https://api.github.com/repos/angadsingh/hraven", "Date": "2014-12-22T14:50:07Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { s = this.getSignFromArena(args[1]); } catch (java.lang.Exception e) { getLogger().warning(((\"No sign found for arena \" + (args[1])) + \". May lead to errors.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8662/buggy-version/src.com.comze_instancelabs.colormatch.Main.java", "BodyUseAPI": ["com.comze_instancelabs.colormatch.Main.getSignFromArena(java.lang.String)"], "Fixed commit": "6b3ef9b6ff66eb5a7f1831e4152cb8ec57ce06d6", "Url": "https://api.github.com/repos/instance01/ColorMatch", "Date": "2014-01-04T08:37:22Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.bukkit.block.Sign s = this.getSignFromArena(arena); if (s != null) { s.setLine(3, (((java.lang.Integer.toString(count)) + \"/\") + (java.lang.Integer.toString(this.minplayers)))); s.update(); } } catch (java.lang.Exception e) { getLogger().warning(((\"You forgot to set a sign for arena \" + arena) + \"! This may lead to errors.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8662/buggy-version/src.com.comze_instancelabs.colormatch.Main.java", "BodyUseAPI": ["com.comze_instancelabs.colormatch.Main.getSignFromArena(java.lang.String)", "org.bukkit.block.Sign.update()", "java.lang.Integer.toString(int)", "org.bukkit.block.Sign.setLine(int,java.lang.String)", "java.lang.Integer.toString(int)"], "Fixed commit": "6b3ef9b6ff66eb5a7f1831e4152cb8ec57ce06d6", "Url": "https://api.github.com/repos/instance01/ColorMatch", "Date": "2014-01-04T08:37:22Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { info.setMasteryLevel(mainPage.select(\".masteryLv\").text().split(\" \")[1]); } catch (java.lang.IndexOutOfBoundsException e) { info.setMasteryLevel(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5000/buggy-version/src.ClanMember.java", "BodyUseAPI": ["org.jsoup.nodes.Document.select(java.lang.String)", "mainPage.select(\".masteryLv\").text().split(java.lang.String)", "ItemInformation.setMasteryLevel(mainPage.select(\".masteryLv\").text().split(\" \")[1])", "mainPage.select(\".masteryLv\").text()"], "Fixed commit": "faa85d3d89163f8fb09ec80cb45c092d55969f51", "Url": "https://api.github.com/repos/EmperorLeo/PloggystyleClanLog", "Date": "2017-05-23T05:20:01Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { commitmentView.updateCommData(commList.filter(day)); } catch (edu.wpi.cs.wpisuitetng.modules.calendar.CalendarException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2734/buggy-version/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.DayView.java", "BodyUseAPI": ["edu.wpi.cs.wpisuitetng.modules.calendar.view.DayView.updateCommData(commList.filter(day))", "edu.wpi.cs.wpisuitetng.modules.calendar.datatypes.CommitmentList.filter(java.util.GregorianCalendar)"], "Fixed commit": "4accdecad6bcfda69a6a87f65304b95981ec7211", "Url": "https://api.github.com/repos/magwitch324/wpi-suite", "Date": "2013-12-07T06:29:36Z"},
{"Line": "=>603", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { subComponent.populateDisplayData(this); } catch (java.lang.Throwable e) { java.lang.String msg = java.lang.String.format(\"Error while populating display data for component: %s\", namespace); throw new java.lang.RuntimeException(msg, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/811/buggy-version/sdks.java.core.src.main.java.org.apache.beam.sdk.transforms.display.DisplayData.java", "BodyUseAPI": ["org.apache.beam.sdk.transforms.display.HasDisplayData.populateDisplayData(org.apache.beam.sdk.transforms.display.DisplayData.InternalBuilder)"], "Fixed commit": "f5125223dca5fdc50ea213f242372240b5fbfb45", "Url": "https://api.github.com/repos/swegner/beam", "Date": "2016-05-20T23:32:17Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { view = recycler.getViewForPosition(position); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3423/buggy-version/app.src.main.java.com.insa.thibault.ihm.view.custom.CustomLinearLayoutManager.java", "BodyUseAPI": ["RecyclerView.Recycler.getViewForPosition(int)"], "Fixed commit": "9c9fee6d43d07a43a1b0b77d7fd83642461d5091", "Url": "https://api.github.com/repos/SIGSWAG/IHM", "Date": "2016-01-07T16:53:20Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { lot = java.lang.Integer.parseInt(LOT); } catch (java.lang.NumberFormatException nfe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4873/buggy-version/app.src.main.java.my.i906.klparkingspot.model.Mall.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "c5ab3211d1ab40edbc83330c65487f463ae580b9", "Url": "https://api.github.com/repos/i906/KLParkingSpot", "Date": "2015-06-27T03:04:40Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { findMixinMethod(methodName, new java.lang.Class[0]); } catch (org.codehaus.groovy.runtime.metaclass.MethodSelectionException msex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7836/buggy-version/src.main.groovy.lang.ExpandoMetaClass.java", "BodyUseAPI": ["groovy.lang.ExpandoMetaClass.findMixinMethod(java.lang.String,java.lang.Class[])"], "Fixed commit": "4c75ec2f6fd2a436ed6749f2a9008e1e9bba4182", "Url": "https://api.github.com/repos/russel/groovy", "Date": "2011-09-13T00:25:27Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { CreateDirectory(inputMessage.filePath); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/659/buggy-version/TFS.src.base.MasterServerNode.java", "BodyUseAPI": ["base.MasterServerNode.CreateDirectory(inputMessage.filePath)"], "Fixed commit": "032df8a964e1cf68f8bfd3da81491a4d2528cca6", "Url": "https://api.github.com/repos/liangvic/ChunkyMonkeys", "Date": "2014-04-11T10:49:19Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String im = ((\"/\" + (imagePath.substring(3, 11))) + \"/\") + (imagePath.substring(11, imagePath.length())); image.setIcon(new javax.swing.ImageIcon(getClass().getResource(im))); } catch (java.lang.Exception e) { image.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/pictures/icons/noImage.gif\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6795/buggy-version/WinkelAppProject.src.view.CategoryList.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "javax.swing.JLabel.setIcon(javax.swing.ImageIcon)", "java.lang.String.length()", "view.CategoryList.getClass()", "java.lang.String.substring(int,int)", "java.lang.Class<? extends view.CategoryList>.getResource(java.lang.String)"], "Fixed commit": "491d86952dc66a6e0fb0a063ec29a246190f91e8", "Url": "https://api.github.com/repos/Tjarco/Outfit4You", "Date": "2013-01-13T15:05:50Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dao.removeUser(userId); } catch (com.ofn.dao.impl.PersistenceException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6602/buggy-version/OneFinalNote.src.main.java.com.ofn.dao.controller.UserController.java", "BodyUseAPI": ["com.ofn.service.BlogService.removeUser(int)"], "Fixed commit": "3c1d7491f10dc76b2381558e684e0fcc98d0a86d", "Url": "https://api.github.com/repos/theuwtseth/SoftwareGuildJavaCapstoneAug2017", "Date": "2017-11-02T02:16:43Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dao.addUser(newUser); } catch (com.ofn.dao.impl.PersistenceException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6602/buggy-version/OneFinalNote.src.main.java.com.ofn.dao.controller.UserController.java", "BodyUseAPI": ["com.ofn.service.BlogService.addUser(com.ofn.model.User)"], "Fixed commit": "3c1d7491f10dc76b2381558e684e0fcc98d0a86d", "Url": "https://api.github.com/repos/theuwtseth/SoftwareGuildJavaCapstoneAug2017", "Date": "2017-11-02T02:16:43Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { reply.setContentObject(suggestPrice); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1315/buggy-version/src.main.java.se.kth.id2209.hw2.auctionstrategies.Strategy.java", "BodyUseAPI": ["jade.lang.acl.ACLMessage.setContentObject(int)"], "Fixed commit": "deb5687c14386dfa625603c9db5659a7fd116ba5", "Url": "https://api.github.com/repos/borak/ID2209-HW2", "Date": "2015-11-25T14:07:08Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(500); } catch (java.lang.InterruptedException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/85/buggy-version/PDCA.src.at.ac.tuwien.imw.pdca.cppi.service.CPPISimulation.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "f0bc930a84b17acc7c0da9a5d1b865fdfb5a564f", "Url": "https://api.github.com/repos/mathck/itbased", "Date": "2016-02-04T19:02:57Z"},
{"Line": "=>5268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { layer.updateHopByHopRoutingDemand(demand); } catch (java.lang.Exception e) { layer.forwardingRules_f_de.set(demand.index, link.index, oldSplittingRatio); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1647/buggy-version/src.main.java.com.net2plan.interfaces.networkDesign.NetPlan.java", "BodyUseAPI": ["com.net2plan.interfaces.networkDesign.NetworkLayer.updateHopByHopRoutingDemand(com.net2plan.interfaces.networkDesign.Demand)"], "Fixed commit": "e222eb4087f2e6d902da31541efdb5cedde2db45", "Url": "https://api.github.com/repos/girtel/Net2Plan", "Date": "2016-12-14T16:21:34Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (url != null) { com.bumptech.glide.Glide.with(context).load(url).thumbnail(0.1F).skipMemoryCache(true).into(imageView); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5691/buggy-version/qq.src.main.java.com.handsome.didi.Utils.GlideUtils.java", "BodyUseAPI": ["com.bumptech.glide.Glide.with(context).load(url).thumbnail(0.1F).skipMemoryCache(boolean)", "com.bumptech.glide.Glide.with(context).load(java.lang.String)", "com.bumptech.glide.Glide.with(context).load(url).thumbnail(float)", "com.bumptech.glide.Glide.with(context).load(url).thumbnail(0.1F).skipMemoryCache(true).into(android.widget.ImageView)", "com.bumptech.glide.Glide.with(android.content.Context)"], "Fixed commit": "96716a51d3fa91eca354695e763b1cfd2906cc57", "Url": "https://api.github.com/repos/AndroidHensen/YaNi", "Date": "2017-06-23T11:03:51Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { bluePredScore += oprs.get(m_match.getBlue1()); bluePredScore += oprs.get(m_match.getBlue2()); bluePredScore += oprs.get(m_match.getBlue3()); redPredScore += oprs.get(m_match.getRed1()); redPredScore += oprs.get(m_match.getRed2()); redPredScore += oprs.get(m_match.getRed3()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3655/buggy-version/Scouting.src.main.java.ca.team2706.scouting.mcmergemanager.gui.PreMatchReportFragment.java", "BodyUseAPI": ["MatchSchedule.Match.getRed3()", "java.util.Map<java.lang.Integer, java.lang.Double>.get(m_match.getRed1())", "java.util.Map<java.lang.Integer, java.lang.Double>.get(m_match.getRed3())", "MatchSchedule.Match.getBlue3()", "MatchSchedule.Match.getRed1()", "MatchSchedule.Match.getBlue2()", "java.util.Map<java.lang.Integer, java.lang.Double>.get(m_match.getBlue2())", "MatchSchedule.Match.getRed2()", "java.util.Map<java.lang.Integer, java.lang.Double>.get(m_match.getBlue1())", "java.util.Map<java.lang.Integer, java.lang.Double>.get(m_match.getBlue3())", "java.util.Map<java.lang.Integer, java.lang.Double>.get(m_match.getRed2())", "MatchSchedule.Match.getBlue1()"], "Fixed commit": "9b5fb3f7f2736cda43d82081dae22df62d44d902", "Url": "https://api.github.com/repos/FRC2706/MCMergeManager", "Date": "2017-03-11T12:28:06Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { userService.create(userForm); } catch (org.springframework.dao.DuplicateKeyException e) { bindingResult.rejectValue(\"username\", \"Duplicate.userForm.username\"); return \"registration\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5026/buggy-version/src.main.java.com.demo.controller.UserController.java", "BodyUseAPI": ["com.demo.service.UserService.create(com.demo.model.User)"], "Fixed commit": "804fc4f1967ccf0efcae061db173ce58ac16f6f9", "Url": "https://api.github.com/repos/Alsaril/demo", "Date": "2017-10-23T12:50:01Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return PaintroidApplication.commandManager.getAllCommandList().get(pos).getThumbnail(); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3577/buggy-version/Paintroid.src.org.catrobat.paintroid.dialog.layerchooser.LayerRowAdapter.java", "BodyUseAPI": ["PaintroidApplication.commandManager.getAllCommandList().get(int)", "PaintroidApplication.commandManager.getAllCommandList().get(pos).getThumbnail()", "PaintroidApplication.commandManager.getAllCommandList()"], "Fixed commit": "0c390b1daa7432e20bf2fc26fe15f254ee639f5c", "Url": "https://api.github.com/repos/Catrobat/Paintroid", "Date": "2014-01-15T20:08:49Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { core.ReadWrite.ReadFromFile(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8473/buggy-version/Hotelbuchung.src.core.CoreBooking.java", "BodyUseAPI": ["core.ReadWrite.ReadFromFile()"], "Fixed commit": "fabe088dce893e5095fb936e1943be9d48695f62", "Url": "https://api.github.com/repos/LF6/ranz", "Date": "2015-05-13T08:12:11Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { core.ReadWrite.ReadFromFile(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8473/buggy-version/Hotelbuchung.src.core.CoreBooking.java", "BodyUseAPI": ["core.ReadWrite.ReadFromFile()"], "Fixed commit": "fabe088dce893e5095fb936e1943be9d48695f62", "Url": "https://api.github.com/repos/LF6/ranz", "Date": "2015-05-13T08:12:11Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mDiaries = mSerializer.loadDiary(); } catch (java.lang.Exception e) { mDiaries = new java.util.ArrayList<yiou.yuzhe.yeseul.androiddiaryapp.Diary>(); android.util.Log.e(yiou.yuzhe.yeseul.androiddiaryapp.DiarySystem.TAG, \"Error loading diaries: \", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7814/buggy-version/app.src.main.java.yiou.yuzhe.yeseul.androiddiaryapp.DiarySystem.java", "BodyUseAPI": ["yiou.yuzhe.yeseul.androiddiaryapp.DiaryJSONSerializer.loadDiary()"], "Fixed commit": "2c636e02d1a52045795496561900bff30d2496eb", "Url": "https://api.github.com/repos/yiochen/Friend2", "Date": "2014-10-03T14:05:56Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { jpsh.unsubscribe(); } catch (java.lang.Exception e1) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5230/buggy-version/src.main.java.com.imaginarycode.minecraft.redisbungee.RedisBungee.java", "BodyUseAPI": ["com.imaginarycode.minecraft.redisbungee.RedisBungee.JedisPubSubHandler.unsubscribe()"], "Fixed commit": "b71dbd82833846aa42f41fef70feea8cf2f4aa58", "Url": "https://api.github.com/repos/minecrafter/RedisBungee", "Date": "2016-03-11T01:19:40Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/329/buggy-version/src.com.example.peerbased.Quiz.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "ce15d1d65f00c7bc788d69b9d346d4586ff271df", "Url": "https://api.github.com/repos/vamshireddy/Quizing-System-Server", "Date": "2014-06-16T12:59:32Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((java.lang.System.currentTimeMillis()) - (java.lang.Long.parseLong(P.lastOpenedEpoch.get()))) > (com.jorge.boats.xkcd.task.UserRetentionGcmTaskService.APP_IGNORED_LIMIT_MILLISECONDS)) { showReengageNotification(); } return com.google.android.gms.gcm.GcmNetworkManager.RESULT_SUCCESS; } catch (final java.lang.NumberFormatException e) { return com.google.android.gms.gcm.GcmNetworkManager.RESULT_RESCHEDULE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4688/buggy-version/presentation.src.main.java.com.jorge.boats.xkcd.task.UserRetentionGcmTaskService.java", "BodyUseAPI": ["java.lang.System.currentTimeMillis()", "com.jorge.boats.xkcd.task.UserRetentionGcmTaskService.showReengageNotification()", "P.lastOpenedEpoch.get()", "java.lang.Long.parseLong(P.lastOpenedEpoch.get())"], "Fixed commit": "8c1264f9deafbcdc11105210f262b69c356da2a2", "Url": "https://api.github.com/repos/stoyicker/boats-xkcd", "Date": "2016-04-02T08:27:05Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (new loci.common.CaseInsensitiveLocation(tiff).exists()) { files.add(tiff); } } catch (java.io.IOException e) { loci.formats.in.LOGGER.debug((\"Error checking existence of \" + tiff), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1691/buggy-version/components.formats-gpl.src.loci.formats.in.ZeissTIFFReader.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "loci.common.CaseInsensitiveLocation.exists()"], "Fixed commit": "a2ba97ffe2e5bae4f8caacdb3a781097148d4ecf", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-11-19T14:02:42Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (new loci.common.CaseInsensitiveLocation(tiffInfo.xmlname).exists()) { files.add(tiffInfo.xmlname); } } catch (java.io.IOException e) { loci.formats.in.LOGGER.debug((\"Error checking existence of \" + (tiffInfo.xmlname)), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1691/buggy-version/components.formats-gpl.src.loci.formats.in.ZeissTIFFReader.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "loci.common.CaseInsensitiveLocation.exists()"], "Fixed commit": "a2ba97ffe2e5bae4f8caacdb3a781097148d4ecf", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-11-19T14:02:42Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((!noPixels) && ((tiffInfo.origname) != null)) && (new loci.common.CaseInsensitiveLocation(tiffInfo.origname).exists())) { files.add(tiffInfo.origname); } } catch (java.io.IOException e) { loci.formats.in.LOGGER.debug((\"Error checking existence of \" + (tiffInfo.origname)), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1691/buggy-version/components.formats-gpl.src.loci.formats.in.ZeissTIFFReader.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "loci.common.CaseInsensitiveLocation.exists()"], "Fixed commit": "a2ba97ffe2e5bae4f8caacdb3a781097148d4ecf", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-11-19T14:02:42Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((this.gds) == null) { this.g = dna.io.GraphReader.read(this.dir, this.filename); this.gds = g.getGraphDatastructures(); }else { this.g = dna.io.GraphReader.read(this.dir, this.filename, this.gds); } } catch (java.io.IOException | java.lang.ClassNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1169/buggy-version/src.dna.graph.generators.util.ReadableFileGraph.java", "BodyUseAPI": ["dna.io.GraphReader.read(java.lang.String,java.lang.String)", "dna.graph.Graph.getGraphDatastructures()", "dna.io.GraphReader.read(java.lang.String,java.lang.String,this.gds)"], "Fixed commit": "5a5f284320524783f30e86550147b0a06d44f05f", "Url": "https://api.github.com/repos/NicoHaase/DNA", "Date": "2014-03-01T13:25:19Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dir = file.getCanonicalFile().getParentFile(); } catch (java.io.IOException ex) { throw new com.puppycrawl.tools.checkstyle.api.CheckstyleException((\"IOException occurred while tried to get canonical path to file: \" + file), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6287/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck.java", "BodyUseAPI": ["java.io.File.getCanonicalFile()", "java.io.File.getParentFile()"], "Fixed commit": "f37daf64e97106ee6c029ef6cda5b047a46f9903", "Url": "https://api.github.com/repos/epam/checkstyle", "Date": "2017-10-18T10:01:00Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { y.add(((java.lang.Number) (java.lang.Double.valueOf(java.lang.String.valueOf(row.get(i)))))); } catch (java.lang.Exception e) { java.lang.System.out.println(\"bla\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2184/buggy-version/org.aksw.iguana.src.main.java.org.aksw.iguana.utils.ResultSet.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.Object)", "java.util.List<java.lang.Object>.get(int)", "java.lang.Double.valueOf(java.lang.String)", "java.util.List<java.lang.Number>.add(java.lang.Double)"], "Fixed commit": "df260b84605644ab228e05ae9590c80ca37be94e", "Url": "https://api.github.com/repos/dice-group/IGUANA", "Date": "2016-03-11T14:40:57Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fastRead(position, buffer, offset, length); } catch (java.lang.Exception e) { localFile = null; io.indexr.io.DFSByteBufferReader.logger.warn(\"fast read failed, roll back to normal read: {}\", name); normalRead(position, buffer, offset, length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6623/buggy-version/indexr-common.src.main.java.io.indexr.io.DFSByteBufferReader.java", "BodyUseAPI": ["io.indexr.io.DFSByteBufferReader.fastRead(long,byte[],int,int)"], "Fixed commit": "0dbae9503dcf141ed9f4a2930e4f8deaa69f7c7b", "Url": "https://api.github.com/repos/shunfei/indexr", "Date": "2017-09-04T02:36:14Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fastRead(position, dst); } catch (java.lang.Exception e) { localFile = null; io.indexr.io.DFSByteBufferReader.logger.warn(\"fast read failed, roll back to normal read: {}\", name); dst.position(dst_pos); dst.limit(dst_limit); normalRead(position, dst); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6623/buggy-version/indexr-common.src.main.java.io.indexr.io.DFSByteBufferReader.java", "BodyUseAPI": ["io.indexr.io.DFSByteBufferReader.fastRead(long,java.nio.ByteBuffer)"], "Fixed commit": "0dbae9503dcf141ed9f4a2930e4f8deaa69f7c7b", "Url": "https://api.github.com/repos/shunfei/indexr", "Date": "2017-09-04T02:36:14Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { shortcutDirectory.deleteObserver(this); iconDirectory.deleteObserver(this); } finally { super.finalize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7862/buggy-version/src.main.java.com.playonlinux.domain.ShortcutSet.java", "BodyUseAPI": ["com.playonlinux.utils.ObservableDirectory.deleteObserver(com.playonlinux.domain.ShortcutSet)", "com.playonlinux.utils.ObservableDirectory.deleteObserver(com.playonlinux.domain.ShortcutSet)"], "Fixed commit": "52e4e005f2dec739c2e5888231d9040953c03598", "Url": "https://api.github.com/repos/PhoenicisOrg/phoenicis", "Date": "2015-05-25T12:52:26Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { observableWineprefixes.deleteObserver(this); } finally { super.finalize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7862/buggy-version/src.main.java.com.playonlinux.services.InstalledVirtualDrivesPlayOnLinuxImplementation.java", "BodyUseAPI": ["com.playonlinux.utils.ObservableDirectory.deleteObserver(com.playonlinux.services.InstalledVirtualDrivesPlayOnLinuxImplementation)"], "Fixed commit": "52e4e005f2dec739c2e5888231d9040953c03598", "Url": "https://api.github.com/repos/PhoenicisOrg/phoenicis", "Date": "2015-05-25T12:52:26Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { shortcutSet.deleteObserver(this); } finally { super.finalize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7862/buggy-version/src.main.java.com.playonlinux.services.InstalledApplicationsPlayOnLinuxImplementation.java", "BodyUseAPI": ["com.playonlinux.domain.ShortcutSet.deleteObserver(com.playonlinux.services.InstalledApplicationsPlayOnLinuxImplementation)"], "Fixed commit": "52e4e005f2dec739c2e5888231d9040953c03598", "Url": "https://api.github.com/repos/PhoenicisOrg/phoenicis", "Date": "2015-05-25T12:52:26Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { javax.swing.UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.gtk.GTKLookAndFeel\"); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7695/buggy-version/src.org.gextractor.Main.java", "BodyUseAPI": ["javax.swing.UIManager.setLookAndFeel(java.lang.String)"], "Fixed commit": "94a96102a57e61cd98dc8616129289e12ade0adb", "Url": "https://api.github.com/repos/david4122/gextractor", "Date": "2016-10-19T19:30:49Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { _e.setAttribute(attName, a.getValue()); } catch (org.w3c.dom.DOMException domExcept) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3299/buggy-version/src.main.java.org.searsia.engine.DOMBuilder.java", "BodyUseAPI": ["org.w3c.dom.Element.setAttribute(java.lang.String,a.getValue())", "org.jsoup.nodes.Attribute.getValue()"], "Fixed commit": "4569a7e12035a23736aac5b63f339326459e6a35", "Url": "https://api.github.com/repos/searsia/searsiaserver", "Date": "2016-04-22T09:53:36Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Long pratilpiId = java.lang.Long.parseLong(patilipiIdStr); if ((readPageViewsMap.get(pratilpiId)) == null) readPageViewsMap.put(pratilpiId, entry.getValue()); else readPageViewsMap.put(pratilpiId, ((readPageViewsMap.get(pratilpiId)) + (entry.getValue()))); } catch (java.lang.NumberFormatException e) { com.pratilipi.data.util.PratilipiDocUtil.logger.log(java.util.logging.Level.SEVERE, (\"Exception while processing reader uri \" + uri), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1069/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDocUtil.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, java.lang.Integer>.get(java.lang.Long)", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getValue()", "java.lang.Long.parseLong(java.lang.String)", "java.util.Map<java.lang.Long, java.lang.Integer>.put(java.lang.Long,java.lang.Integer)", "java.util.Map<java.lang.Long, java.lang.Integer>.put(java.lang.Long,int)", "java.util.Map<java.lang.Long, java.lang.Integer>.get(java.lang.Long)", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getValue()"], "Fixed commit": "b82f00cbde0e34bae91f9285e9d43e581ef08e4f", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-05-07T02:32:53Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { currUserAdmin = currRoom.getCreator().getUsername().equals(com.parse.ParseUser.getCurrentUser().getUsername()); } catch (java.lang.IllegalStateException e) { currUserAdmin = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/9129/buggy-version/app.src.main.java.com.example.lucasrosario.extensionchord.ViewRoomUsersFragment.java", "BodyUseAPI": ["currRoom.getCreator().getUsername().equals(com.parse.ParseUser.getCurrentUser().getUsername())", "currRoom.getCreator().getUsername()", "com.example.lucasrosario.extensionchord.ParseRoom.getCreator()", "com.parse.ParseUser.getCurrentUser()", "com.parse.ParseUser.getCurrentUser().getUsername()"], "Fixed commit": "0cc67fb153dd5f51b9be58c4bfd377916c9e08c8", "Url": "https://api.github.com/repos/rosario-luke/ExtensionChord", "Date": "2015-04-09T02:49:00Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { parsedId = java.lang.Integer.parseInt(id); } catch (java.lang.NumberFormatException e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1826/buggy-version/src.tv.acfun.a63.util.TextViewUtils.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "853102b84ea9b52ac78b85aa47361d9880560904", "Url": "https://api.github.com/repos/yrom/AcFun-Area63", "Date": "2014-09-21T03:07:19Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { double last = ((com.google.gson.JsonObject) (currency.getValue())).get(\"last\").getAsDouble(); double buy = ((com.google.gson.JsonObject) (currency.getValue())).get(\"buy\").getAsDouble(); double sell = ((com.google.gson.JsonObject) (currency.getValue())).get(\"sell\").getAsDouble(); double day = ((com.google.gson.JsonObject) (currency.getValue())).get(\"24h\").getAsDouble(); rates.add(new com.teambitcoin.coinwallet.api.Conversion.Currency(name, rate, symbol, last, buy, sell, day)); } catch (java.lang.Exception e) { rates.add(new com.teambitcoin.coinwallet.api.Conversion.Currency(name, rate, symbol)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4749/buggy-version/CoinWallet.src.main.java.com.teambitcoin.coinwallet.api.BlockchainAPI.java", "BodyUseAPI": ["((com.google.gson.JsonObject) (currency.getValue())).get(\"24h\").getAsDouble()", "java.util.List<com.teambitcoin.coinwallet.api.Conversion.Currency>.add(com.teambitcoin.coinwallet.api.Conversion.Currency)", "((com.google.gson.JsonObject) (currency.getValue())).get(\"last\").getAsDouble()", "java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement>.getValue()", "java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement>.getValue()", "java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement>.getValue()", "((com.google.gson.JsonObject) (currency.getValue())).get(java.lang.String)", "java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement>.getValue()", "((com.google.gson.JsonObject) (currency.getValue())).get(java.lang.String)", "((com.google.gson.JsonObject) (currency.getValue())).get(java.lang.String)", "((com.google.gson.JsonObject) (currency.getValue())).get(\"buy\").getAsDouble()", "((com.google.gson.JsonObject) (currency.getValue())).get(java.lang.String)", "((com.google.gson.JsonObject) (currency.getValue())).get(\"sell\").getAsDouble()"], "Fixed commit": "306f94bcfb3cfbed75e23cb371b7f9928dd947ba", "Url": "https://api.github.com/repos/cwallet/coinwallet", "Date": "2014-03-21T01:54:51Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { d = r.getDrawable(defaultImage); } catch (java.lang.Exception e) { fileFound = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/525/buggy-version/pearl.src.main.java.com.hanuor.pearl.Pearl.java", "BodyUseAPI": ["android.content.res.Resources.getDrawable(int)"], "Fixed commit": "52b8a528e2c83f6603ea247a95a94ff9c57d3eed", "Url": "https://api.github.com/repos/hanuor/pearl", "Date": "2016-08-07T13:56:58Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return super.onTouchEvent(ev); } catch (java.lang.IllegalStateException ex) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2773/buggy-version/app.src.main.java.qiu.niorgai.refreshview.bottom.AutoLoadListView.java", "BodyUseAPI": ["android.widget.ListView.onTouchEvent(android.view.MotionEvent)"], "Fixed commit": "7550f487885ecb1760ccf52d9d34f4ff9b038e25", "Url": "https://api.github.com/repos/niorgai/RefreshView", "Date": "2016-01-14T09:38:42Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { javax.xml.stream.XMLStreamReader xsr = xif.createXMLStreamReader(new javax.xml.transform.stream.StreamSource(file)); return org.opendaylight.controller.config.persist.storage.directory.xml.XmlDirectoryPersister.asHolder(((org.opendaylight.controller.config.persist.storage.file.xml.model.ConfigSnapshot) (um.unmarshal(xsr)))); } catch (final javax.xml.stream.XMLStreamException e) { throw new javax.xml.bind.JAXBException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/629/buggy-version/opendaylight.config.config-persister-directory-xml-adapter.src.main.java.org.opendaylight.controller.config.persist.storage.directory.xml.XmlDirectoryPersister.java", "BodyUseAPI": ["javax.xml.bind.Unmarshaller.unmarshal(javax.xml.stream.XMLStreamReader)", "javax.xml.stream.XMLInputFactory.createXMLStreamReader(javax.xml.transform.stream.StreamSource)", "org.opendaylight.controller.config.persist.storage.directory.xml.XmlDirectoryPersister.asHolder(((org.opendaylight.controller.config.persist.storage.file.xml.model.ConfigSnapshot) (um.unmarshal(xsr))))"], "Fixed commit": "4b2e28032b61c23e2c488a3f33c76611fc80c9d7", "Url": "https://api.github.com/repos/mandeepdhami/controller", "Date": "2014-12-18T14:16:30Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { openNewElement(position); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/613/buggy-version/InTempore.app.src.main.java.org.devheap.intempore.MapsActivity.java", "BodyUseAPI": ["1.openNewElement(int)"], "Fixed commit": "b21219102426c814593c4bf08310942892f4449b", "Url": "https://api.github.com/repos/andrew-it/In-Tempore", "Date": "2017-10-13T23:28:41Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { def = au.com.addstar.monolith.util.Parser.parseMaterialDefinition(args[0]); if (def == null) { sender.sendMessage((((org.bukkit.ChatColor.RED) + \"Unknown item \") + (args[0]))); return true; } } catch (java.lang.IllegalArgumentException e) { sender.sendMessage((((org.bukkit.ChatColor.RED) + \"Unknown item \") + (args[0]))); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5732/buggy-version/src.au.com.addstar.pansentials.modules.RecipeModule.java", "BodyUseAPI": ["au.com.addstar.monolith.util.Parser.parseMaterialDefinition(java.lang.String)", "org.bukkit.command.CommandSender.sendMessage((((org.bukkit.ChatColor.RED) + \"Unknown item \") + (args[0])))"], "Fixed commit": "381157739c2ed43fa32779594c13dc4ea816eb31", "Url": "https://api.github.com/repos/AddstarMC/Pansentials", "Date": "2015-03-25T07:42:26Z"},
{"Line": "=>925", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { r.run(); } finally { currentRunningJob = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8343/buggy-version/OsmAnd.src.net.osmand.plus.routing.RoutingHelper.java", "BodyUseAPI": ["java.lang.Runnable.run()"], "Fixed commit": "6ab2ee629f6b7523c2290cdec0432c6661531673", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2016-03-17T08:44:23Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (retStatus == (org.gitools.ui.app.wizard.add.data.DataIntegrationCriteriaDialog.RET_OK)) { javax.swing.table.TableColumnModel columnModel = table.getColumnModel(); boolean b; b = columnModel.getColumn(0).getCellEditor().stopCellEditing(); b = columnModel.getColumn(1).getCellEditor().stopCellEditing(); b = columnModel.getColumn(2).getCellEditor().stopCellEditing(); b = columnModel.getColumn(3).getCellEditor().stopCellEditing(); b = columnModel.getColumn(4).getCellEditor().stopCellEditing(); } setVisible(false); dispose(); } catch (java.lang.Exception e) { e.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7833/buggy-version/org.gitools.ui.app.src.main.java.org.gitools.ui.app.wizard.add.data.DataIntegrationCriteriaDialog.java", "BodyUseAPI": ["javax.swing.table.TableColumn.getCellEditor()", "javax.swing.table.TableColumn.getCellEditor()", "javax.swing.table.TableColumn.getCellEditor()", "javax.swing.table.TableCellEditor.stopCellEditing()", "javax.swing.JTable.getColumnModel()", "javax.swing.table.TableColumnModel.getColumn(int)", "javax.swing.table.TableCellEditor.stopCellEditing()", "javax.swing.table.TableCellEditor.stopCellEditing()", "javax.swing.table.TableColumnModel.getColumn(int)", "javax.swing.table.TableColumnModel.getColumn(int)", "javax.swing.table.TableColumn.getCellEditor()", "javax.swing.table.TableColumnModel.getColumn(int)", "javax.swing.table.TableCellEditor.stopCellEditing()", "org.gitools.ui.app.wizard.add.data.DataIntegrationCriteriaDialog.setVisible(boolean)", "javax.swing.table.TableCellEditor.stopCellEditing()", "org.gitools.ui.app.wizard.add.data.DataIntegrationCriteriaDialog.dispose()", "javax.swing.table.TableColumn.getCellEditor()", "javax.swing.table.TableColumnModel.getColumn(int)"], "Fixed commit": "cdfad0ad6baa5e93161a5cddbea0a190f036f2f2", "Url": "https://api.github.com/repos/gitools/gitools", "Date": "2014-03-05T22:23:29Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((disc.getDiscNumber()) > (to.retrieveDisc().getDiscNumber())) { throw new java.lang.IllegalStateException((\"You can't put a disc with bigger discNumber \" + \"on the disc with smaller discNumber\")); } } catch (java.util.NoSuchElementException e) { } finally { to.putDisc(disc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3772/buggy-version/src.main.java.Towers.java", "BodyUseAPI": ["to.retrieveDisc().getDiscNumber()", "Disc.getDiscNumber()", "Peg.retrieveDisc()"], "Fixed commit": "551faa879f8008ec3d779ff750bfdd993a562870", "Url": "https://api.github.com/repos/NataliiaPrivezentseva/TowerofHanoi", "Date": "2016-10-27T19:02:53Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { r = r.replaceAll(\"E[0-9]\", net.svglol.helm.util.TwitterStatusUtil.suffix[((java.lang.Character.getNumericValue(r.charAt(((r.length()) - 1)))) / 3)]); r = r.replaceAll(\"e[0-9]\", net.svglol.helm.util.TwitterStatusUtil.suffix[((java.lang.Character.getNumericValue(r.charAt(((r.length()) - 1)))) / 3)]); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7331/buggy-version/app.src.main.java.net.svglol.helm.util.TwitterStatusUtil.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.Character.getNumericValue(char)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.Character.getNumericValue(char)", "java.lang.String.length()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "779f4ac4f64992aace8b78bbdb0c32f54c9e6f1f", "Url": "https://api.github.com/repos/svglol/helm", "Date": "2017-03-03T04:28:40Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { targetBlockMethod = player.getClass().getMethod(\"getTargetBlock\", new java.lang.Class<?>[]{ java.util.HashSet.class, int.class }); } catch (java.lang.Exception ex) { try { targetBlockMethod = player.getClass().getMethod(\"getTargetBlock\", new java.lang.Class<?>[]{ java.util.Set.class, int.class }); } catch (java.lang.Exception exc) { exc.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/330/buggy-version/src.io.github.yannici.bedwars.Commands.SetBedCommand.java", "BodyUseAPI": ["org.bukkit.entity.Player.getClass()", "player.getClass().getMethod(java.lang.String,java.lang.Class<?>[])"], "Fixed commit": "9f768490803d0089c8007d7e5122b7a4aba9ffe1", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-05-04T07:50:39Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.log4j.PropertyConfigurator.configure(new java.net.URL(\"http://streamreasoning.org/configuration_files/rspCsparql/log4j.properties\")); } catch (java.lang.Exception e) { org.apache.log4j.PropertyConfigurator.configure(\"config/log4j.properties\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/792/buggy-version/src.main.java.it.polimi.deib.rsp_service4csparql_client_example.Client_Server_triplewave.java", "BodyUseAPI": ["org.apache.log4j.PropertyConfigurator.configure(java.net.URL)"], "Fixed commit": "bf4c987e8dfa3e7bb8712532c184523dbbd11f9d", "Url": "https://api.github.com/repos/streamreasoning/rsp-services-client-example", "Date": "2016-05-25T09:45:31Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new java.io.File(destinationName).getParentFile().mkdirs(); } catch (java.lang.Exception ioe) { throw new java.io.IOException(\"dir name error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2425/buggy-version/src.teamEleven.zip.Zip.java", "BodyUseAPI": ["java.io.File.getParentFile()", "java.io.File.mkdirs()"], "Fixed commit": "a83c07c97cbcab009526f5e2bee03508863b1703", "Url": "https://api.github.com/repos/WeiyiChen/SoftwareReuse-Project", "Date": "2016-05-03T11:58:02Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { readBody(); } catch (java.lang.IndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2872/buggy-version/src.com.four142.png2audio.player.OggPlayer.java", "BodyUseAPI": ["com.four142.png2audio.player.OggPlayer.readBody()"], "Fixed commit": "b490d07669de9029c362a44a610a4bfe146bd461", "Url": "https://api.github.com/repos/4142/png2audio-player", "Date": "2014-06-07T02:50:23Z"},
{"Line": "=>2027", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { slices[ip.z][(((ip.y) * width) + (ip.x))] = ((byte) (255)); } catch (final java.lang.ArrayIndexOutOfBoundsException ignored) { final int x = java.lang.Math.min((width - 1), java.lang.Math.max(0, ip.x)); final int y = java.lang.Math.min((height - 1), java.lang.Math.max(0, ip.y)); final int z = java.lang.Math.min((depth - 1), java.lang.Math.max(0, ip.z)); slices[z][((y * width) + x)] = ((byte) (255)); if (SimpleNeuriteTracer.verbose) tracing.SNT.log(java.lang.String.format(\"Bresenham3D: Forced out-of-bounds point to [%d][%d]\", z, ((y * width) + x))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/665/buggy-version/src.main.java.tracing.PathAndFillManager.java", "BodyUseAPI": [], "Fixed commit": "eb3a9b22d77ac0b5d220f358f7ff0840a5fd4ae3", "Url": "https://api.github.com/repos/tferr/Simple_Neurite_Tracer", "Date": "2017-06-09T04:06:55Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { out.remove(out.getText(0, out.getLength()).lastIndexOf(\"working...\"), 10); } catch (javax.swing.text.BadLocationException e1) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6045/buggy-version/src.Main.java", "BodyUseAPI": ["javax.swing.text.StyledDocument.getLength()", "javax.swing.text.StyledDocument.getText(int,int)", "javax.swing.text.StyledDocument.remove(int,int)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "ea90d21d87710f8b020fc3d6e9e30da0910a50b2", "Url": "https://api.github.com/repos/bencarlisle15/GabGuy", "Date": "2017-05-22T16:46:32Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { visit(page); } catch (java.lang.Exception e) { edu.uci.ics.crawler4j.crawler.WebCrawler.logger.error((((\"Exception while running the visit method. Message: '\" + (e.getMessage())) + \"' at \") + (e.getStackTrace()[0]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2132/buggy-version/src.main.java.edu.uci.ics.crawler4j.crawler.WebCrawler.java", "BodyUseAPI": ["edu.uci.ics.crawler4j.crawler.WebCrawler.visit(edu.uci.ics.crawler4j.crawler.Page)"], "Fixed commit": "8f3be74249bc631bc520bda413793aa184f0a3d5", "Url": "https://api.github.com/repos/boyddensmore/crawler4j", "Date": "2013-03-03T07:24:33Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { v = inflater.inflate(R.layout.sell_fragment, container, false); com.google.android.gms.maps.MapsInitializer.initialize(getActivity()); setupList(v); } catch (android.view.InflateException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1341/buggy-version/app.src.main.java.io.alstonlin.pennapps_android.SellFragment.java", "BodyUseAPI": ["io.alstonlin.pennapps_android.SellFragment.setupList(android.view.View)", "com.google.android.gms.maps.MapsInitializer.initialize(getActivity())", "android.view.LayoutInflater.inflate(R.layout.sell_fragment,android.view.ViewGroup,boolean)", "io.alstonlin.pennapps_android.SellFragment.getActivity()"], "Fixed commit": "9407143d0e2518990c03319f698a6ec2c9fabec4", "Url": "https://api.github.com/repos/AlstonLin/PennApps-Android", "Date": "2016-01-24T11:12:00Z"},
{"Line": "=>1892", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.text.DecimalFormat twoDForm = new java.text.DecimalFormat(\"#.##\"); val = java.lang.Double.valueOf(twoDForm.format(this.getDurchschnitsspreis(i, 14))); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2539/buggy-version/src.de.bdh.ks.KSHelper.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)", "de.bdh.ks.KSHelper.getDurchschnitsspreis(org.bukkit.inventory.ItemStack,int)", "java.text.DecimalFormat.format(double)"], "Fixed commit": "2bcffec2ed34dd0f12197e8c9c663592a202ce25", "Url": "https://api.github.com/repos/wmchris/KrimSale", "Date": "2013-08-15T22:17:57Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6779/buggy-version/Android___UDP.src.com.tomxue.udp.AndroidUDP.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "97fa5e79e970ce877bc401055d8e94d5c1f40ce6", "Url": "https://api.github.com/repos/tomxue/Android_UDP", "Date": "2014-11-13T15:08:44Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { nfcAdapter.enableForegroundDispatch(getActivity(), getPendingIntent(), getIntentFilters(), getTechLists()); if ((p2pMessage) != null) { nfcAdapter.setNdefPushMessage(p2pMessage, getActivity()); } } catch (java.lang.IllegalStateException e) { android.util.Log.w(com.chariotsolutions.nfc.plugin.NfcPlugin.TAG, \"Illegal State Exception starting NFC. Assuming application is terminating.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1312/buggy-version/platforms.android.src.com.chariotsolutions.nfc.plugin.NfcPlugin.java", "BodyUseAPI": ["com.chariotsolutions.nfc.plugin.NfcPlugin.2.getTechLists()", "com.chariotsolutions.nfc.plugin.NfcAdapter.enableForegroundDispatch(android.app.Activity,android.app.PendingIntent,android.content.IntentFilter[],java.lang.String[][])", "com.chariotsolutions.nfc.plugin.NfcPlugin.2.getActivity()", "com.chariotsolutions.nfc.plugin.NfcPlugin.2.getPendingIntent()", "com.chariotsolutions.nfc.plugin.NfcPlugin.2.getIntentFilters()", "com.chariotsolutions.nfc.plugin.NfcAdapter.setNdefPushMessage(com.chariotsolutions.nfc.plugin.NdefMessage,android.app.Activity)", "com.chariotsolutions.nfc.plugin.NfcPlugin.2.getActivity()"], "Fixed commit": "ff2398a69199b0fab19f4ab4b87cf9e7b0cbc22b", "Url": "https://api.github.com/repos/mclear/NFC_Ring_Control", "Date": "2014-01-21T17:32:10Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { nfcAdapter.enableForegroundDispatch(getActivity(), getPendingIntent(), getIntentFilters(), getTechLists()); if ((p2pMessage) != null) { nfcAdapter.setNdefPushMessage(p2pMessage, getActivity()); } } catch (java.lang.IllegalStateException e) { android.util.Log.w(com.chariotsolutions.nfc.plugin.NfcPlugin.TAG, \"Illegal State Exception starting NFC. Assuming application is terminating.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1312/buggy-version/plugins.com.chariotsolutions.nfc.plugin.src.android.src.com.chariotsolutions.nfc.plugin.NfcPlugin.java", "BodyUseAPI": ["com.chariotsolutions.nfc.plugin.NfcPlugin.2.getPendingIntent()", "com.chariotsolutions.nfc.plugin.NfcPlugin.2.getTechLists()", "com.chariotsolutions.nfc.plugin.NfcPlugin.2.getActivity()", "com.chariotsolutions.nfc.plugin.NfcPlugin.2.getActivity()", "com.chariotsolutions.nfc.plugin.NfcAdapter.setNdefPushMessage(com.chariotsolutions.nfc.plugin.NdefMessage,android.app.Activity)", "com.chariotsolutions.nfc.plugin.NfcAdapter.enableForegroundDispatch(android.app.Activity,android.app.PendingIntent,android.content.IntentFilter[],java.lang.String[][])", "com.chariotsolutions.nfc.plugin.NfcPlugin.2.getIntentFilters()"], "Fixed commit": "ff2398a69199b0fab19f4ab4b87cf9e7b0cbc22b", "Url": "https://api.github.com/repos/mclear/NFC_Ring_Control", "Date": "2014-01-21T17:32:10Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { builder = new org.robovm.compiler.config.Config.Builder(); } catch (java.io.IOException e) { throw new org.apache.maven.plugin.MojoExecutionException(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6437/buggy-version/src.main.java.org.robovm.maven.plugin.AbstractRoboVMMojo.java", "BodyUseAPI": [], "Fixed commit": "dbe4dd3763fb50c5cfe79ae3b45d2ac1b11882a7", "Url": "https://api.github.com/repos/ashleyj/robovm-maven-plugin", "Date": "2014-09-04T06:38:26Z"},
{"Line": "=>899", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { localTopologyManager.setCacheAvailability(getName(), availability); } catch (java.lang.Exception e) { throw new org.infinispan.commons.CacheException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8159/buggy-version/core.src.main.java.org.infinispan.cache.impl.CacheImpl.java", "BodyUseAPI": ["org.infinispan.topology.LocalTopologyManager.setCacheAvailability(java.lang.String,org.infinispan.partionhandling.AvailabilityMode)", "org.infinispan.cache.impl.CacheImpl<K, V>.getName()"], "Fixed commit": "d6a25bec9a7964b3a79c1415b8b5127546762981", "Url": "https://api.github.com/repos/danberindei/infinispan", "Date": "2014-10-20T14:43:22Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { config = config.clone(); } catch (java.lang.CloneNotSupportedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3673/buggy-version/org.openhealthtools.ihe.atna.auditor.src.main.java.org.openhealthtools.ihe.atna.auditor.AuditorFactory.java", "BodyUseAPI": ["org.openhealthtools.ihe.atna.auditor.context.AuditorModuleConfig.clone()"], "Fixed commit": "7f8feb23247b4c8ed77bc3f20351928d83d223bc", "Url": "https://api.github.com/repos/TopicusZorg/ipf-oht-auditor", "Date": "2015-07-31T12:11:56Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { extension = android.webkit.MimeTypeMap.getFileExtensionFromUrl(java.net.URLEncoder.encode(url.replaceAll(\"\\\\s*\", \"\"), \"UTF-8\")); } catch (java.io.UnsupportedEncodingException uee) { android.util.Log.e(mil.nga.giat.mage.sdk.utils.MediaUtility.LOG_NAME, \"Unable to determine file extension\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7847/buggy-version/sdk.src.main.java.mil.nga.giat.mage.sdk.utils.MediaUtility.java", "BodyUseAPI": ["android.webkit.MimeTypeMap.getFileExtensionFromUrl(java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "d075fd029c38d24485400029f6c7f3d8411da4fc", "Url": "https://api.github.com/repos/ngageoint/mage-android-sdk", "Date": "2015-03-27T20:47:17Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fixSize = java.lang.Integer.parseInt(this.groupSizeField.getText()); } catch (final java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8791/buggy-version/GroupBuilder.src.com.kn.groupBuilder.Gui.Popups.Listener.CreateGroupFrameListener.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JTextField.getText()"], "Fixed commit": "8d303532dd59643c67474bc9b6f5d19fa5e70f4a", "Url": "https://api.github.com/repos/DennisMarkmann/GroupBuilder", "Date": "2013-07-12T06:54:25Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { deviceProfile = registerDeviceProfileReceived(); if (deviceProfile == null) return; } catch (java.lang.Exception e) { e.printStackTrace(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7441/buggy-version/app.src.main.java.com.augeo.helper.AuGeoAppFlowManager.java", "BodyUseAPI": ["com.augeo.helper.AuGeoAppFlowManager.1.registerDeviceProfileReceived()"], "Fixed commit": "fbef21b13657a4ee8dfb3972c6f81c37ba1eb40c", "Url": "https://api.github.com/repos/harold-hernandez30/CSipSimple", "Date": "2015-07-17T22:05:46Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.commons.io.FileUtils.copyURLToFile(new java.net.URL(href), imgFile); } catch (java.io.IOException ioe) { eu.transkribus.core.io.GoobiMetsImporter.logger.error((\"Could not download file from: \" + href), ioe); throw ioe; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2237/buggy-version/src.main.java.eu.transkribus.core.io.GoobiMetsImporter.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.copyURLToFile(java.net.URL,java.io.File)"], "Fixed commit": "d287761647fe44a54019ea3132041d10342d4a54", "Url": "https://api.github.com/repos/Transkribus/TranskribusCore", "Date": "2017-05-04T14:23:47Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (clazz != null) { set.addAll(java.util.Arrays.asList(clazz.getDeclaredMethods())); set.addAll(java.util.Arrays.asList(clazz.getMethods())); } return set.toArray(new java.lang.reflect.Method[set.size()]); } catch (java.lang.NoClassDefFoundError | java.lang.ExceptionInInitializerError err) { return new java.lang.reflect.Method[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6988/buggy-version/src.main.java.com.gdssecurity.pmd.Utils.java", "BodyUseAPI": ["java.util.Set<java.lang.reflect.Method>.addAll(java.util.List<java.lang.reflect.Method>)", "java.util.Set<java.lang.reflect.Method>.addAll(java.util.List<java.lang.reflect.Method>)", "java.util.Arrays.asList(java.lang.reflect.Method[])", "java.util.Set<java.lang.reflect.Method>.size()", "java.lang.Class<?>.getMethods()", "java.lang.Class<?>.getDeclaredMethods()", "java.util.Set<java.lang.reflect.Method>.toArray(java.lang.reflect.Method[])", "java.util.Arrays.asList(java.lang.reflect.Method[])"], "Fixed commit": "b58ea70768c5b8f2ddd2f215549ffa6397fe824b", "Url": "https://api.github.com/repos/albfernandez/GDS-PMD-Security-Rules", "Date": "2016-03-06T20:31:55Z"},
{"Line": "=>1095", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { messageBody = org.orbeon.oxf.xforms.submission.SubmissionUtils.readByteArray(model, resolvedURI); } catch (java.lang.Exception e) { throw new org.orbeon.oxf.xforms.submission.XFormsSubmissionException(this, \"xf:submission: binary serialization with anyURI type failed reading URL.\", \"serializing instance\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3199/buggy-version/src.main.java.org.orbeon.oxf.xforms.submission.XFormsModelSubmission.java", "BodyUseAPI": ["org.orbeon.oxf.xforms.submission.SubmissionUtils.readByteArray(org.orbeon.oxf.xforms.submission.XFormsModel,java.lang.String)"], "Fixed commit": "f503ed586e2148515a79ab9de05629e86c97bf25", "Url": "https://api.github.com/repos/orbeon/orbeon-forms", "Date": "2014-05-15T18:38:35Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { customBound = java.lang.Integer.parseInt(((android.widget.EditText) (findViewById(R.id.editTextCustom))).getText().toString()); } catch (java.lang.NumberFormatException e) { ((android.widget.EditText) (findViewById(R.id.editTextCustom))).setText(\"10\"); customBound = 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1243/buggy-version/src.echelonfour.quantumdice.MainActivity.java", "BodyUseAPI": ["echelonfour.quantumdice.MainActivity.RunRandomLookup.findViewById(R.id.editTextCustom)", "((android.widget.EditText) (findViewById(R.id.editTextCustom))).getText()", "((android.widget.EditText) (findViewById(R.id.editTextCustom))).getText().toString()", "java.lang.Integer.parseInt(((android.widget.EditText) (findViewById(R.id.editTextCustom))).getText().toString())"], "Fixed commit": "25598f9741a9282cb0e2ca4d863b8d9c74e39dd1", "Url": "https://api.github.com/repos/EchelonFour/QuantumDice", "Date": "2013-02-19T15:42:49Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getActivity().unregisterReceiver(mBatteryReceiver); } catch (java.lang.IllegalArgumentException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5483/buggy-version/app.src.main.java.com.grarak.kerneladiutor.fragments.statistics.OverallFragment.java", "BodyUseAPI": ["getActivity().unregisterReceiver(android.content.BroadcastReceiver)", "com.grarak.kerneladiutor.fragments.statistics.OverallFragment.getActivity()"], "Fixed commit": "23596142fbe66968d1739c33dde1761e93d55ace", "Url": "https://api.github.com/repos/Grarak/KernelAdiutor", "Date": "2016-05-14T13:24:04Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.FileOutputStream o = new java.io.FileOutputStream(f); track.writeToFile(o); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1760/buggy-version/appsolut.src.com.appsolut.composition.pitch_detection.WaveToMidi.java", "BodyUseAPI": ["com.appsolut.composition.pitch_detection.MidiTrack.writeToFile(java.io.FileOutputStream)"], "Fixed commit": "b24e9c2a7198d7fad447da2c9a0f82d1c98efab5", "Url": "https://api.github.com/repos/decouto/ZetesWithApps", "Date": "2013-04-17T01:50:04Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.wolvencraft.prison.util.Message.debug((\"Task expired: \" + (task.getName()))); com.wolvencraft.prison.PrisonSuite.tasks.remove(task); } catch (java.util.ConcurrentModificationException ex) { com.wolvencraft.prison.util.Message.debug(\"ConcurrentModificationException thrown\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4544/buggy-version/src.com.wolvencraft.prison.PrisonSuite.java", "BodyUseAPI": ["com.wolvencraft.prison.util.Message.debug((\"Task expired: \" + (task.getName())))", "com.wolvencraft.prison.hooks.TimedTask.getName()", "java.util.List<com.wolvencraft.prison.hooks.TimedTask>.remove(com.wolvencraft.prison.hooks.TimedTask)"], "Fixed commit": "59178db3c36d77772f022b83345d73fad20997ee", "Url": "https://api.github.com/repos/bitWolfy/PrisonSuite", "Date": "2012-12-09T17:24:48Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return !(Gdx.files.internal(filePath).exists()); } catch (java.lang.Exception e) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/892/buggy-version/src.com.rpsg.rpg.io.Files.java", "BodyUseAPI": ["Gdx.files.internal(filePath).exists()", "Gdx.files.internal(java.lang.String)"], "Fixed commit": "56d09feb22e6844f7ede4127efe1df11e7b80979", "Url": "https://api.github.com/repos/dingjibang/GDX-RPG", "Date": "2015-05-09T07:37:26Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { c = ((java.lang.Class<org.atmosphere.cpr.Broadcaster>) (java.lang.Class.forName(((java.lang.String) (req.getAttribute(ApplicationConfig.BROADCASTER_CLASS)))))); } catch (java.lang.Throwable e) { throw new java.lang.IllegalStateException(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2125/buggy-version/modules.jersey.src.main.java.org.atmosphere.jersey.AtmosphereProviders.java", "BodyUseAPI": ["java.lang.Class.forName(((java.lang.String) (req.getAttribute(ApplicationConfig.BROADCASTER_CLASS))))", "javax.servlet.http.HttpServletRequest.getAttribute(ApplicationConfig.BROADCASTER_CLASS)"], "Fixed commit": "aa968fa92a74a7bef63c20b623b68a42a1ecd8c6", "Url": "https://api.github.com/repos/leusonmario/atmosphere", "Date": "2011-10-31T22:56:13Z"},
{"Line": "=>969", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if ((!(highPriority.isEmpty())) && (!(lowPriority.isEmpty()))) { transportHandler.transmit(highPriority); transportHandler.transmit(lowPriority); }else { for (final org.jboss.errai.bus.client.api.messaging.Message message : storedMessages) { try { throw new org.jboss.errai.bus.client.api.base.NoSubscribersToDeliverTo(message.getSubject()); } catch (org.jboss.errai.bus.client.api.base.NoSubscribersToDeliverTo ex) { if ((message.getErrorCallback()) != null) { message.getErrorCallback().error(message, ex); } } } } } finally { deferredMessages.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5619/buggy-version/errai-bus.src.main.java.org.jboss.errai.bus.client.framework.ClientMessageBusImpl.java", "BodyUseAPI": ["org.jboss.errai.bus.client.api.messaging.Message.getErrorCallback()", "java.util.List<org.jboss.errai.bus.client.api.messaging.Message>.isEmpty()", "org.jboss.errai.bus.client.api.messaging.Message.getSubject()", "org.jboss.errai.bus.client.framework.transports.TransportHandler.transmit(java.util.List<org.jboss.errai.bus.client.api.messaging.Message>)", "org.jboss.errai.bus.client.framework.transports.TransportHandler.transmit(java.util.List<org.jboss.errai.bus.client.api.messaging.Message>)", "org.jboss.errai.bus.client.api.messaging.Message.getErrorCallback()", "java.util.List<org.jboss.errai.bus.client.api.messaging.Message>.isEmpty()", "message.getErrorCallback().error(org.jboss.errai.bus.client.api.messaging.Message,org.jboss.errai.bus.client.api.base.NoSubscribersToDeliverTo)"], "Fixed commit": "d7a7985bc798230daaa07cb628dc6c708f673bb4", "Url": "https://api.github.com/repos/BenDol/errai", "Date": "2017-11-14T14:00:15Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { future.get(); } finally { policyExecutor.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1427/buggy-version/heron.healthm.src.java.com.twitter.heron.healthmgr.HealthManager.java", "BodyUseAPI": ["java.util.concurrent.ScheduledFuture<?>.get()"], "Fixed commit": "7525e339463e7df51f027641a71705e35aed0e59", "Url": "https://api.github.com/repos/ashvina/heron", "Date": "2017-05-31T19:20:30Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { status = getFileStatus(client, file); } catch (java.io.FileNotFoundException fnfe) { status = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2170/buggy-version/hadoop-common-project.hadoop-common.src.main.java.org.apache.hadoop.fs.ftp.FTPFileSystem.java", "BodyUseAPI": ["org.apache.hadoop.fs.ftp.FTPFileSystem.getFileStatus(org.apache.commons.net.ftp.FTPClient,org.apache.hadoop.fs.Path)"], "Fixed commit": "b7f9abe61525d90316d3a25ec671444d6b1d1af3", "Url": "https://api.github.com/repos/steveloughran/hadoop-trunk", "Date": "2013-07-10T17:43:05Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.apache.hadoop.fs.FileStatus fileStat = getFileStatus(client, absolute); if (fileStat.isFile()) { return client.deleteFile(pathName); } } catch (java.io.FileNotFoundException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2170/buggy-version/hadoop-common-project.hadoop-common.src.main.java.org.apache.hadoop.fs.ftp.FTPFileSystem.java", "BodyUseAPI": ["org.apache.commons.net.ftp.FTPClient.deleteFile(java.lang.String)", "org.apache.hadoop.fs.FileStatus.isFile()", "org.apache.hadoop.fs.ftp.FTPFileSystem.getFileStatus(org.apache.commons.net.ftp.FTPClient,org.apache.hadoop.fs.Path)"], "Fixed commit": "b7f9abe61525d90316d3a25ec671444d6b1d1af3", "Url": "https://api.github.com/repos/steveloughran/hadoop-trunk", "Date": "2013-07-10T17:43:05Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((hpParts.length) >= 2) { hpStr = hpParts[1]; hpStr = hpStr.substring(0, ((hpStr.length()) - 2)); }else if ((hpParts.length) == 1) { hpStr = hpParts[0]; hpStr = hpStr.substring(0, ((hpStr.length()) - 2)); }else { return com.google.common.base.Optional.absent(); } } catch (java.lang.StringIndexOutOfBoundsException e) { return com.google.common.base.Optional.absent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5834/buggy-version/app.src.main.java.com.kamron.pogoiv.pokeflycomponents.ocrhelper.OcrHelper.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "com.google.common.base.Optional.absent()", "java.lang.String.length()", "java.lang.String.length()"], "Fixed commit": "d20680c62b4425eb0842a786f2b1a64b79464687", "Url": "https://api.github.com/repos/thearaks/GoIV", "Date": "2017-09-25T22:40:56Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (ratpack.registry.PredicateCacheability.SPECIAL_PREDICATE_CLASSES.contains(key)) { return true; } java.lang.reflect.Method equals = key.getDeclaredMethod(\"equals\", java.lang.Object.class); java.lang.Class<?> declaringClass = equals.getDeclaringClass(); return !(declaringClass.equals(java.lang.Object.class)); } catch (java.lang.NoSuchMethodException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1873/buggy-version/ratpack-core.src.main.java.ratpack.registry.PredicateCacheability.java", "BodyUseAPI": ["com.google.common.collect.ImmutableSet<java.lang.Class<? extends com.google.common.base.Predicate>>.contains(java.lang.Class<? extends com.google.common.base.Predicate>)", "java.lang.Class<? extends com.google.common.base.Predicate>.getDeclaredMethod(java.lang.String,java.lang.Class)", "java.lang.Class<?>.equals(java.lang.Class)", "java.lang.reflect.Method.getDeclaringClass()"], "Fixed commit": "1eb56a5521b79bd09e4280318e331a296c5baab3", "Url": "https://api.github.com/repos/danhyun/ratpack", "Date": "2014-09-02T14:04:54Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tempFile.delete(); } catch (java.lang.Exception e) { java.lang.System.out.println(\"A file could not be deleted.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1186/buggy-version/backend.src.main.java.de.uni_potsdam.hpi.metanome.algorithm_execution.TempFileGenerator.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "a3b2839330be93335051911085ec3cb131d61d5d", "Url": "https://api.github.com/repos/Jens-Hildebrandt/Metanome", "Date": "2014-05-30T06:39:56Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sync = producer.process(exchange, new org.apache.camel.AsyncCallback() { @java.lang.Override public void done(boolean doneSync) { try { target.setPattern(existingPattern); long timeTaken = watch.stop(); org.apache.camel.util.EventHelper.notifyExchangeSent(target.getContext(), target, destination, timeTaken); } finally { callback.done(doneSync); } } }); } catch (java.lang.Throwable throwable) { if (exchange != null) { exchange.setException(throwable); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/80/buggy-version/camel-core.src.main.java.org.apache.camel.processor.SendProcessor.java", "BodyUseAPI": ["org.apache.camel.util.StopWatch.stop()", "org.apache.camel.Exchange.getContext()", "org.apache.camel.Exchange.setPattern(org.apache.camel.ExchangePattern)", "org.apache.camel.AsyncProcessor.process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)", "org.apache.camel.util.EventHelper.notifyExchangeSent(target.getContext(),org.apache.camel.Exchange,org.apache.camel.Endpoint,long)", "org.apache.camel.AsyncCallback.done(boolean)"], "Fixed commit": "ac492ebcc7f4bdd6b63cb7f9eaea7958833f09f3", "Url": "https://api.github.com/repos/apache/camel", "Date": "2013-11-04T22:25:28Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { map.updateOperation(pnfsId, exception); } catch (java.lang.IllegalStateException e) { org.dcache.resilience.handlers.PnfsTaskCompletionHandler.LOGGER.trace(\"{}\", new org.dcache.util.ExceptionMessage(e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1340/buggy-version/modules.dcache.src.main.java.org.dcache.resilience.handlers.PnfsTaskCompletionHandler.java", "BodyUseAPI": ["org.dcache.resilience.data.PnfsOperationMap.updateOperation(diskCacheV111.util.PnfsId,diskCacheV111.util.CacheException)"], "Fixed commit": "652390fa16b62006df95fce70cc5af5224890e61", "Url": "https://api.github.com/repos/alrossi/dcache-server", "Date": "2016-02-20T17:49:53Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userDao.registerUser(user); } catch (com.example.phr.exceptions.DatabaseErrorException e) { throw new com.example.phr.exceptions.ServiceException(\"Error in registration\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4475/buggy-version/src.com.example.phr.serviceimpl.UserServiceImpl.java", "BodyUseAPI": ["com.example.phr.dao.UserDao.registerUser(com.example.phr.model.User)"], "Fixed commit": "efd00317bace2f0976cf1e4094af0b07d3a6295e", "Url": "https://api.github.com/repos/givmefive5/PHR-Android", "Date": "2014-06-25T13:30:26Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.codehaus.groovy.grails.io.support.IOUtils.saxParserFactory.setFeature(\"http://xml.org/sax/features/external-general-entities\", false); } catch (java.lang.Exception pce) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4194/buggy-version/grails-bootstrap.src.main.groovy.org.codehaus.groovy.grails.io.support.IOUtils.java", "BodyUseAPI": ["javax.xml.parsers.SAXParserFactory.setFeature(java.lang.String,boolean)"], "Fixed commit": "3718d5625cde2d3ef6e6efbc5a1af3efdeeb0501", "Url": "https://api.github.com/repos/balsamiq/grails-core", "Date": "2016-03-08T14:11:10Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.codehaus.groovy.grails.io.support.IOUtils.saxParserFactory.setFeature(\"http://xml.org/sax/features/external-parameter-entities\", false); } catch (java.lang.Exception pce) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4194/buggy-version/grails-bootstrap.src.main.groovy.org.codehaus.groovy.grails.io.support.IOUtils.java", "BodyUseAPI": ["javax.xml.parsers.SAXParserFactory.setFeature(java.lang.String,boolean)"], "Fixed commit": "3718d5625cde2d3ef6e6efbc5a1af3efdeeb0501", "Url": "https://api.github.com/repos/balsamiq/grails-core", "Date": "2016-03-08T14:11:10Z"},
{"Line": "=>1165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { convertedDOB = dateFormat.parse(org.ednovo.gooru.application.client.gin.AppClientFactory.getLoggedInUser().getDateOfBirth()); loggedInUserAge = getAge(convertedDOB); if (loggedInUserAge <= (org.ednovo.gooru.client.mvp.play.resource.body.ResourcePlayerMetadataView.CHILD_AGE)) { isChild = true; }else if (loggedInUserAge > (org.ednovo.gooru.client.mvp.play.resource.body.ResourcePlayerMetadataView.CHILD_AGE)) { isChild = false; } } catch (java.lang.Exception ex) { isChild = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1269/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.play.resource.body.ResourcePlayerMetadataView.java", "BodyUseAPI": ["org.ednovo.gooru.application.client.gin.AppClientFactory.getLoggedInUser()", "org.ednovo.gooru.application.client.gin.AppClientFactory.getLoggedInUser().getDateOfBirth()", "com.google.gwt.i18n.client.DateTimeFormat.parse(org.ednovo.gooru.application.client.gin.AppClientFactory.getLoggedInUser().getDateOfBirth())", "org.ednovo.gooru.client.mvp.play.resource.body.ResourcePlayerMetadataView.getAge(java.util.Date)"], "Fixed commit": "ca2dae6555059cefb73b7c316d7892f5f58db911", "Url": "https://api.github.com/repos/chandrasekharv/Gooru-Web", "Date": "2015-10-05T11:28:00Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result.language = com.github.ansell.csvsum.CSVMapping.CSVMappingLanguage.valueOf(language.toUpperCase()); } catch (java.lang.IllegalArgumentException e) { result.language = com.github.ansell.csvsum.CSVMapping.CSVMappingLanguage.DEFAULT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/766/buggy-version/src.main.java.com.github.ansell.csvsum.CSVMapping.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "com.github.ansell.csvsum.CSVMapping.CSVMappingLanguage.valueOf(java.lang.String)"], "Fixed commit": "7ee8b64916a94923fe662798868dabeda0935e46", "Url": "https://api.github.com/repos/ansell/csvsum", "Date": "2016-02-10T23:03:56Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { connections.close(); } catch (java.lang.Exception e) { throw new org.neo4j.driver.v1.exceptions.ClientException(\"Failed to close driver.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8692/buggy-version/driver.src.main.java.org.neo4j.driver.internal.InternalDriver.java", "BodyUseAPI": ["org.neo4j.driver.internal.spi.ConnectionPool.close()"], "Fixed commit": "af9083fae30cdbe2f623cef592ec53a2d09dc44c", "Url": "https://api.github.com/repos/pontusmelke/neo4j-java-driver", "Date": "2016-03-18T16:03:50Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.webkit.CookieManager.getInstance().removeAllCookie(); } catch (java.lang.UnsatisfiedLinkError ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5357/buggy-version/app.src.main.java.fr.kayrnt.tindplayer.utils.SessionManager.java", "BodyUseAPI": ["android.webkit.CookieManager.getInstance()", "android.webkit.CookieManager.getInstance().removeAllCookie()"], "Fixed commit": "106ee94611816824b5292629e99c6406d19d3269", "Url": "https://api.github.com/repos/Kayrnt/TindPlayer", "Date": "2016-09-11T22:39:53Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Object obj = org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getPrincipal(); if (obj instanceof org.springframework.security.core.userdetails.UserDetails) { return ((org.springframework.security.core.userdetails.UserDetails) (obj)).getUsername(); }else { return \"Guest\"; } } catch (java.lang.Exception w) { return \"Guest\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6022/buggy-version/src.main.java.com.dbalota.show.security.VelocitySecurity.java", "BodyUseAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext()", "java.lang.Object.getUsername()", "org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getPrincipal()", "org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()"], "Fixed commit": "fb34d658cfaa5a626259ab2a502fafc64060cedc", "Url": "https://api.github.com/repos/DmytroBalota/show", "Date": "2016-03-29T13:39:20Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3838/buggy-version/src.net.bubbaland.trivia.client.TriviaDialog.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "e9e024526deca9663e5ed0f26b5c9406361ebe9b", "Url": "https://api.github.com/repos/bubba0077/Trivia", "Date": "2013-10-12T04:47:21Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { title = musiclinkIntent.getStringExtra(getString(R.string.songtitle)); } catch (java.lang.Exception e) { android.util.Log.w(\"OnDrive\", \"Playlist\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3377/buggy-version/app.src.main.java.com.example.cmq.musicapp.PlayMusicActivity.java", "BodyUseAPI": ["android.content.Intent.getStringExtra(getString(R.string.songtitle))", "com.example.cmq.musicapp.PlayMusicActivity.getString(R.string.songtitle)"], "Fixed commit": "52bf4ec3acb5f27ebcefafbb7d4b7a3abe89810e", "Url": "https://api.github.com/repos/manhquynh-github/MusicApp", "Date": "2017-12-25T16:27:22Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { evento = new java.lang.String(it.next().message()); if (log.isDebugEnabled()) { log.debug((\"Event received in Kafka Event Adaptor - \" + (evento))); } brokerListener.onEvent(evento); } catch (java.lang.Throwable t) { log.error((\"Error while transforming the event : \" + (evento)), t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7732/buggy-version/components.event-receiver.event-input-adapters.org.wso2.carbon.event.input.adapter.kafka.src.main.java.org.wso2.carbon.event.input.adapter.kafka.KafkaConsumer.java", "BodyUseAPI": ["kafka.consumer.ConsumerIterator<byte[], byte[]>.next()", "org.apache.commons.logging.Log.debug(java.lang.String)", "org.wso2.carbon.event.input.adapter.core.InputEventAdapterListener.onEvent(java.lang.String)", "it.next().message()", "org.apache.commons.logging.Log.isDebugEnabled()"], "Fixed commit": "4bc62896e485e6e5607a335b41137badc572a89f", "Url": "https://api.github.com/repos/sajithshn/carbon-analytics-common", "Date": "2017-01-06T07:36:03Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { de.tubs.variantsync.core.utilities.MarkerUtils.cleanProject(project.getProject()); } catch (org.eclipse.core.runtime.CoreException e) { de.tubs.variantsync.core.utilities.LogOperations.logError(\"A marker could not be deleted\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7836/buggy-version/de.tubs.variantsync.core.src.de.tubs.variantsync.core.VariantSyncPlugin.java", "BodyUseAPI": ["de.ovgu.featureide.core.IFeatureProject.getProject()", "de.tubs.variantsync.core.utilities.MarkerUtils.cleanProject(project.getProject())"], "Fixed commit": "bfa42be486e3b8a1749817f73308abd8449250ab", "Url": "https://api.github.com/repos/Kogoro/VariantSync", "Date": "2017-10-25T07:02:02Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.json.JSONArray workoutData = wTask.get(); for (int i = 0; i < (workoutData.length()); i++) { org.json.JSONObject ex = workoutData.getJSONObject(i); workouts.add(ex.getString(\"name\")); } } catch (java.lang.InterruptedException e) { e.printStackTrace(); } catch (java.util.concurrent.ExecutionException e) { e.printStackTrace(); } catch (org.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4179/buggy-version/app.src.main.java.com.training.superior.superiortraining.Views.HomeView.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(ex.getString(\"name\"))", "org.json.JSONArray.length()", "org.json.JSONObject.getString(java.lang.String)", "com.training.superior.superiortraining.Models.WorkoutTask.get()", "org.json.JSONArray.getJSONObject(int)"], "Fixed commit": "61b676a24a26145c21db909eb5cb42900e79cfdc", "Url": "https://api.github.com/repos/Putoke/SuperiorTraining", "Date": "2015-04-12T08:43:55Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { data.writeBytes(out); } finally { out.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5891/buggy-version/storemate-shared.src.main.java.com.fasterxml.storemate.shared.util.IOUtil.java", "BodyUseAPI": ["com.fasterxml.storemate.shared.ByteContainer.writeBytes(java.io.FileOutputStream)"], "Fixed commit": "28ea2713034eeb57e55e4825465d8058080f4dd5", "Url": "https://api.github.com/repos/cowtowncoder/StoreMate", "Date": "2013-06-30T21:44:36Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { out.write(data, offset, length); } finally { out.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5891/buggy-version/storemate-shared.src.main.java.com.fasterxml.storemate.shared.util.IOUtil.java", "BodyUseAPI": ["java.io.FileOutputStream.write(byte[],int,int)"], "Fixed commit": "28ea2713034eeb57e55e4825465d8058080f4dd5", "Url": "https://api.github.com/repos/cowtowncoder/StoreMate", "Date": "2013-06-30T21:44:36Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mLocationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, mLocationListener); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5861/buggy-version/devsmartlib.src.com.devsmart.android.LocationService.java", "BodyUseAPI": ["android.location.LocationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER,int,int,android.location.LocationListener)"], "Fixed commit": "f1e69408877e9712ce25e0897e19f97cea66ac42", "Url": "https://api.github.com/repos/cfgxy/DevsmartLib-Android", "Date": "2012-07-04T08:36:56Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mLocationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, mLocationListener); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5861/buggy-version/devsmartlib.src.com.devsmart.android.LocationService.java", "BodyUseAPI": ["android.location.LocationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER,int,int,android.location.LocationListener)"], "Fixed commit": "f1e69408877e9712ce25e0897e19f97cea66ac42", "Url": "https://api.github.com/repos/cfgxy/DevsmartLib-Android", "Date": "2012-07-04T08:36:56Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mBestLocation = mLocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5861/buggy-version/devsmartlib.src.com.devsmart.android.LocationService.java", "BodyUseAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER)"], "Fixed commit": "f1e69408877e9712ce25e0897e19f97cea66ac42", "Url": "https://api.github.com/repos/cfgxy/DevsmartLib-Android", "Date": "2012-07-04T08:36:56Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mLocationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, mLocationListener); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5861/buggy-version/devsmartlib.src.com.devsmart.android.LocationService.java", "BodyUseAPI": ["android.location.LocationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER,int,int,android.location.LocationListener)"], "Fixed commit": "f1e69408877e9712ce25e0897e19f97cea66ac42", "Url": "https://api.github.com/repos/cfgxy/DevsmartLib-Android", "Date": "2012-07-04T08:36:56Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { runtimeDiscovery.performRuntimeDiscovery(); } catch (org.jivesoftware.smack.XMPPException e) { javax.swing.JOptionPane.showMessageDialog(null, e.getMessage(), \"Specified Runtime NOT Available\", javax.swing.JOptionPane.ERROR_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/255/buggy-version/MobilisServer_ConsoleClient.src.de.tudresden.inf.rn.mobilis.consoleclient.userinterface.panels.FileUploadPanel.java", "BodyUseAPI": ["de.tudresden.inf.rn.mobilis.consoleclient.RuntimeDiscovery.performRuntimeDiscovery()"], "Fixed commit": "589af9181635f294d1ac93a94cd8e7eaf53564e1", "Url": "https://api.github.com/repos/mobilis/mobilis", "Date": "2014-05-02T05:53:18Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((conn) != null) { conn.close(); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4234/buggy-version/src.kenh.xscript.database.wrap.Connection.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "29156a46477bf3d1af0b470de3c6bb38e68f8ac1", "Url": "https://api.github.com/repos/KennethHuang/xScript.database", "Date": "2015-12-22T06:51:37Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(20); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2425/buggy-version/ListFileGUI.src.service.ListFileThread.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "616b7c6693fff6c8dcbd925510923ce2e9eeb167", "Url": "https://api.github.com/repos/khoahv/khoahv", "Date": "2014-01-13T12:39:43Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(20); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2425/buggy-version/ListFileGUI.src.service.ListFileThread.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "616b7c6693fff6c8dcbd925510923ce2e9eeb167", "Url": "https://api.github.com/repos/khoahv/khoahv", "Date": "2014-01-13T12:39:43Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cursor.newRow().add(code.hashCode()).add(rate.currencyCode).add(rate.rate.longValue()).add(rate.source); } catch (java.lang.NullPointerException e) { android.util.Log.e(\"Litecoin\", \"Unable to add an exchange rate. NullPointerException.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1279/buggy-version/wallet.src.de.schildbach.wallet.litecoin.ExchangeRatesProvider.java", "BodyUseAPI": ["cursor.newRow().add(code.hashCode()).add(rate.currencyCode).add(long)", "java.lang.String.hashCode()", "cursor.newRow().add(code.hashCode()).add(java.lang.String)", "cursor.newRow().add(int)", "cursor.newRow().add(code.hashCode()).add(rate.currencyCode).add(rate.rate.longValue()).add(java.lang.String)", "android.database.MatrixCursor.newRow()", "java.math.BigInteger.longValue()"], "Fixed commit": "4371c1e00aaaa73d3f7caabbbeb93643dd5986c7", "Url": "https://api.github.com/repos/hank/litecoin-wallet", "Date": "2013-04-14T02:26:20Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(startLatch.await(5, java.util.concurrent.TimeUnit.MINUTES))) { org.infinispan.distribution.DistributionManagerImpl.log.warn(\"DistributionManager not started after waiting up to 5 minutes! Not rehashing!\"); return null; } } catch (java.lang.InterruptedException e) { java.lang.Thread.currentThread().interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1037/buggy-version/core.src.main.java.org.infinispan.distribution.DistributionManagerImpl.java", "BodyUseAPI": ["org.infinispan.util.logging.Log.warn(java.lang.String)", "org.infinispan.util.concurrent.ReclosableLatch.await(int,java.util.concurrent.TimeUnit)"], "Fixed commit": "44975e3460b705d5cc3f340fcdfb1d2b0c089f34", "Url": "https://api.github.com/repos/mmarkus/infinispan", "Date": "2011-03-02T10:17:53Z"},
{"Line": "=>758", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setLoggerDefFilePath(availableLoggerDefFiles.values().iterator().next().getAbsolutePath()); } catch (java.lang.Exception e) { loggerDefExists = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8291/buggy-version/src.main.java.com.romraider.Settings.java", "BodyUseAPI": ["java.util.Iterator<java.io.File>.next()", "java.io.File.getAbsolutePath()", "java.util.Map<java.lang.String, java.io.File>.values()", "java.util.Collection<java.io.File>.iterator()", "com.romraider.Settings.setLoggerDefFilePath(java.lang.String)"], "Fixed commit": "e4630b8620f1ef932a26b17d67924f7d5a2a771a", "Url": "https://api.github.com/repos/Merp/RomRaider", "Date": "2013-03-09T01:11:51Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String klassName = ((qualifiedClassName.substring(0, ipos)) + '$') + (qualifiedClassName.substring((ipos + 1))); klassName = jetbrick.template.utils.ClassLoaderUtils.getCanonicalClassName(klassName); return java.lang.Class.forName(klassName, false, loader); } catch (java.lang.ClassNotFoundException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6221/buggy-version/src.main.java.jetbrick.template.utils.ClassLoaderUtils.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String,boolean,java.lang.ClassLoader)", "jetbrick.template.utils.ClassLoaderUtils.getCanonicalClassName(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int)"], "Fixed commit": "b1a4b5be21f095e599a28667c6f9dace45ffba56", "Url": "https://api.github.com/repos/subchen/jetbrick-template", "Date": "2014-01-20T15:18:03Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ref.child(java.lang.String.valueOf((-(i + 1)))).child(\"Added_By\").setValue(dataSnapshot.child(java.lang.String.valueOf((-(i + 2)))).child(\"Added_By\").getValue().toString()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4710/buggy-version/app.src.main.java.com.venkibellu.myapplication.Campus_Adding.java", "BodyUseAPI": ["dataSnapshot.child(java.lang.String.valueOf((-(i + 2)))).child(\"Added_By\").getValue()", "java.lang.String.valueOf(int)", "dataSnapshot.child(java.lang.String.valueOf((-(i + 2)))).child(\"Added_By\").getValue().toString()", "com.google.firebase.database.DatabaseReference.child(java.lang.String)", "java.lang.String.valueOf(int)", "dataSnapshot.child(java.lang.String.valueOf((-(i + 2)))).child(java.lang.String)", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "ref.child(java.lang.String.valueOf((-(i + 1)))).child(java.lang.String)", "ref.child(java.lang.String.valueOf((-(i + 1)))).child(\"Added_By\").setValue(dataSnapshot.child(java.lang.String.valueOf((-(i + 2)))).child(\"Added_By\").getValue().toString())"], "Fixed commit": "803fa9a58a1ba568b244b4ed1d2fcb059446ef4c", "Url": "https://api.github.com/repos/venki-bellu/UVCEConnectRetake", "Date": "2017-09-07T05:18:36Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { httpServer.start(); } catch (java.io.IOException e) { throw new java.lang.InterruptedException(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2469/buggy-version/src.main.java.manila.frogmod.mcs.simpleHttp.SimpleHttpEndpoint.java", "BodyUseAPI": ["manila.frogmod.mcs.simpleHttp.SimpleHttpServer.start()"], "Fixed commit": "39225d819ef8bdfd2e792a4116de7ab15fb2172d", "Url": "https://api.github.com/repos/ManilaWitcheryResearch/FrogMod", "Date": "2016-11-18T18:19:18Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userCpuPercentage = java.lang.Integer.parseInt(cpuUsagePercentages[0]); systemCpuPercentage = java.lang.Integer.parseInt(cpuUsagePercentages[1]); } catch (java.lang.NumberFormatException e) { com.crashlytics.android.Crashlytics.log(1, Crashlytics.TAG, (\"Error formatting top output: \" + topCpuStats)); com.crashlytics.android.Crashlytics.log(1, Crashlytics.TAG, (((\"Unable to parse to integer: \" + (cpuUsagePercentages[0])) + \"|\") + (cpuUsagePercentages[1]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5260/buggy-version/src.main.java.com.pixelus.dashclock.ext.mydevice.helpers.CpuUsage.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "dd150a5b46a2d0a358d4600301f163a157fa14f3", "Url": "https://api.github.com/repos/mouserd/dashclock-extension-device-info", "Date": "2014-08-13T10:16:40Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fis = fileContext.openFileInput(name); } catch (java.io.IOException e) { try { fos = fileContext.openFileOutput(name, Context.MODE_PRIVATE); fos.close(); fis = fileContext.openFileInput(name); } catch (java.io.IOException err) { android.util.Log.d(\"IOException\", \"Unexcepted\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/179/buggy-version/app.src.main.java.centralcpccommittee.shopwithfriends.dataExchanger.java", "BodyUseAPI": ["android.content.Context.openFileInput(java.lang.String)"], "Fixed commit": "5c464696701a0ce49bc8f05003dee7e9116f74f4", "Url": "https://api.github.com/repos/axeisghost/cpc-documentary", "Date": "2015-02-03T03:06:24Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { outputFile.write(xmlHlp.genXMLIndexEntry(outputMap)); outputFile.write(apps.Source2XML.NL); } catch (java.lang.Exception e) { e.printStackTrace(); java.lang.System.err.println(\"Error processing/saving a document!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5168/buggy-version/src.main.java.apps.Source2XML.java", "BodyUseAPI": ["java.io.BufferedWriter.write(java.lang.String)", "java.io.BufferedWriter.write(xmlHlp.genXMLIndexEntry(outputMap))", "apps.XmlHelper.genXMLIndexEntry(java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "bfa399173817ec0ad68c18415810d02661b614b1", "Url": "https://api.github.com/repos/searchivarius/AccurateLuceneBM25", "Date": "2017-01-04T02:27:21Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { matchingBankAccountBankingModel = this.findBankAccountBankingModel(bankAccountBankingModelList, bankAccountId); } catch (de.fau.amos.virtualledger.server.banking.model.BankingException ex) { return new java.util.ArrayList<de.fau.amos.virtualledger.server.banking.model.BookingModel>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2172/buggy-version/server.src.main.java.de.fau.amos.virtualledger.server.banking.adorsys.api.bankAccountEndpoint.DummyBankAccountEndpoint.java", "BodyUseAPI": ["de.fau.amos.virtualledger.server.banking.adorsys.api.bankAccountEndpoint.DummyBankAccountEndpoint.findBankAccountBankingModel(java.util.List<de.fau.amos.virtualledger.server.banking.model.BankAccountBankingModel>,java.lang.String)"], "Fixed commit": "1ba7d0c564253920a45c5f26fd92e1cd925c4593", "Url": "https://api.github.com/repos/BankingBoys/amos-ss17-proj7", "Date": "2017-06-06T19:14:26Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { storage.getMethod().invoke(storage.getCommand(), sender, new kr.rvs.mclibrary.util.collection.VolatileArrayList(java.util.Arrays.asList(newArgs))); } catch (java.lang.IllegalAccessException | java.lang.reflect.InvocationTargetException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6571/buggy-version/src.main.java.kr.rvs.mclibrary.struct.command.CommandProcessor.java", "BodyUseAPI": ["kr.rvs.mclibrary.struct.command.CommandStorage.getCommand()", "storage.getMethod().invoke(storage.getCommand(),org.bukkit.command.CommandSender,kr.rvs.mclibrary.util.collection.VolatileArrayList)", "kr.rvs.mclibrary.struct.command.CommandStorage.getMethod()", "java.util.Arrays.asList(java.lang.String[])"], "Fixed commit": "bfeb0423f0d09eaa5bc9994c334e7d5cfadbbe40", "Url": "https://api.github.com/repos/EntryPointKR/MCLibrary", "Date": "2017-07-27T03:25:56Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.writer.write(localIndexUpdates, true); } catch (java.lang.Throwable t) { java.lang.String msg = \"Failed to update index with entries:\" + localIndexUpdates; org.apache.phoenix.index.PhoenixTransactionalIndexer.LOG.error(msg, t); org.apache.phoenix.util.ServerUtil.throwIOException(msg, t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/9012/buggy-version/phoenix-core.src.main.java.org.apache.phoenix.index.PhoenixTransactionalIndexer.java", "BodyUseAPI": ["org.apache.phoenix.hbase.index.write.IndexWriter.write(java.util.Collection<org.apache.hadoop.hbase.util.Pair<org.apache.hadoop.hbase.client.Mutation, byte[]>>,boolean)"], "Fixed commit": "78f6459df8bb2fa33de9f999cc6a282dd58f18ea", "Url": "https://api.github.com/repos/apache/phoenix", "Date": "2016-06-17T16:02:43Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.writer.write(localIndexUpdates, true); } catch (java.lang.Throwable t) { java.lang.String msg = \"Failed to update index with entries:\" + localIndexUpdates; org.apache.phoenix.index.PhoenixTransactionalIndexer.LOG.error(msg, t); org.apache.phoenix.util.ServerUtil.throwIOException(msg, t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/9012/buggy-version/phoenix-core.src.main.java.org.apache.phoenix.index.PhoenixTransactionalIndexer.java", "BodyUseAPI": ["org.apache.phoenix.hbase.index.write.IndexWriter.write(java.util.Collection<org.apache.hadoop.hbase.util.Pair<org.apache.hadoop.hbase.client.Mutation, byte[]>>,boolean)"], "Fixed commit": "78f6459df8bb2fa33de9f999cc6a282dd58f18ea", "Url": "https://api.github.com/repos/apache/phoenix", "Date": "2016-06-17T16:02:43Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (com.liferay.portal.kernel.notifications.UserNotificationManagerUtil.isDeliver(user.getUserId(), portletId, _notificationClassNameId, _notificationType, UserNotificationDeliveryConstants.TYPE_EMAIL)) { javax.mail.internet.InternetAddress to = new javax.mail.internet.InternetAddress(user.getEmailAddress(), user.getFullName()); sendEmail(to, user.getLocale()); } } catch (java.lang.Exception e) { com.liferay.portal.util.SubscriptionSender._log.error(e, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2311/buggy-version/portal-service.src.com.liferay.portal.util.SubscriptionSender.java", "BodyUseAPI": ["com.liferay.portal.model.User.getUserId()", "com.liferay.portal.model.User.getLocale()", "com.liferay.portal.model.User.getEmailAddress()", "com.liferay.portal.model.User.getFullName()", "com.liferay.portal.util.SubscriptionSender.sendEmail(javax.mail.internet.InternetAddress,user.getLocale())", "com.liferay.portal.kernel.notifications.UserNotificationManagerUtil.isDeliver(user.getUserId(),java.lang.String,long,int,UserNotificationDeliveryConstants.TYPE_EMAIL)"], "Fixed commit": "9b4cbe76f179a60c6675a7b1a58ec92b0f93f8d2", "Url": "https://api.github.com/repos/robertoDiaz/liferay-portal", "Date": "2014-02-19T08:04:36Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return non.Non.script.eval(non.plugins.internal.non.Non.file(path).readString()); } catch (java.io.IOException e) { return log(\"Resource not found\", path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/386/buggy-version/src.core.src.non.plugins.internal.Non.java", "BodyUseAPI": ["non.plugins.internal.non.Non.file(java.lang.String)", "non.plugins.internal.non.Non.file(path).readString()", "non.Non.script.eval(non.plugins.internal.non.Non.file(path).readString())"], "Fixed commit": "110a3b4da07c81f6dfe038288588260cbf1c9b5c", "Url": "https://api.github.com/repos/codeindie/non", "Date": "2014-12-30T17:11:04Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { node = new com.informatica.surf.Node(src, tgt, transforms, contexts); node.open(); com.informatica.surf.Surf._logger.info(\"Surf Node opened\"); node.run(); } catch (java.lang.Exception ex) { com.informatica.surf.Surf._logger.error(\"An exception occurred: \", ex); com.informatica.surf.Surf._logger.error(\"Shutting down node\"); node.shutdown(); java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1607/buggy-version/surf.src.main.java.com.informatica.surf.Surf.java", "BodyUseAPI": ["com.informatica.surf.Node.open()", "org.slf4j.Logger.info(java.lang.String)", "com.informatica.surf.Node.run()"], "Fixed commit": "8e10d2b348f5d0f1646fe52061cb1d4acc1cf14b", "Url": "https://api.github.com/repos/InformaticaCorp/Surf", "Date": "2014-03-13T08:50:46Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return new com.jcabi.github.SmartJson(this).text(\"name\"); } catch (java.lang.IllegalStateException ex) { throw new java.lang.IllegalStateException(java.lang.String.format((\"User %s doesn't have a name specified in\" + \" his/her Github account; use hasName() first.\"), this.login()), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7591/buggy-version/src.main.java.com.jcabi.github.User.java", "BodyUseAPI": ["com.jcabi.github.SmartJson.text(java.lang.String)"], "Fixed commit": "0dfe16de4a9ea78f66dc1910b181b235781a196f", "Url": "https://api.github.com/repos/jcabi/jcabi-github", "Date": "2014-01-07T19:18:25Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { responseString = com.petersamokhin.bots.sdk.utils.web.Connection.getRequestResponse(((((((((((((\"https://\" + (server)) + \"?act=a_check&key=\") + (key)) + \"&ts=\") + (ts)) + \"&wait=\") + (wait)) + \"&mode=\") + (mode)) + \"&version=\") + (version)) + \"&msgs_limit=100000\")); response = new org.json.JSONObject(responseString); } catch (org.json.JSONException ignored) { com.petersamokhin.bots.sdk.longpoll.LongPoll.LOG.error(\"Some error occured, no updates got from longpoll server: {}\", responseString); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2111/buggy-version/src.main.java.com.petersamokhin.bots.sdk.longpoll.LongPoll.java", "BodyUseAPI": ["com.petersamokhin.bots.sdk.utils.web.Connection.getRequestResponse(java.lang.String)"], "Fixed commit": "e64e1b9852a33e5acfbc7e144e09945ef496c04e", "Url": "https://api.github.com/repos/petersamokhin/vk-bot-java-sdk", "Date": "2017-08-25T12:16:37Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { is = getContentResolver().openInputStream(selectedImage); final android.graphics.BitmapFactory.Options options = new android.graphics.BitmapFactory.Options(); options.inJustDecodeBounds = true; android.graphics.BitmapFactory.decodeStream(is, null, options); is.close(); is = getContentResolver().openInputStream(selectedImage); options.inSampleSize = com.example.oss.MainActivity.calculateInSampleSize(options, iv_show.getWidth(), iv_show.getHeight()); options.inJustDecodeBounds = false; android.graphics.Bitmap bm = android.graphics.BitmapFactory.decodeStream(is, null, options); iv_show.setImageBitmap(bm); tv_url.setText(selectedImage.getPath()); } catch (java.lang.Exception e) { e.printStackTrace(); } finally { if (is != null) { try { is.close(); } catch (java.io.IOException e) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6908/buggy-version/src.com.example.oss.MainActivity.java", "BodyUseAPI": ["android.net.Uri.getPath()", "android.widget.ImageView.getHeight()", "com.example.oss.MainActivity.getContentResolver()", "com.example.oss.MainActivity.getContentResolver()", "android.widget.ImageView.getWidth()", "com.example.oss.MainActivity.calculateInSampleSize(BitmapFactory.Options,iv_show.getWidth(),iv_show.getHeight())", "android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)", "android.graphics.BitmapFactory.decodeStream(java.io.InputStream,<nulltype>,BitmapFactory.Options)", "android.widget.TextView.setText(selectedImage.getPath())", "android.graphics.BitmapFactory.decodeStream(java.io.InputStream,<nulltype>,BitmapFactory.Options)", "getContentResolver().openInputStream(android.net.Uri)", "getContentResolver().openInputStream(android.net.Uri)", "java.io.InputStream.close()"], "Fixed commit": "c82a6cd109ee3c7a696744941b98f7e18be7897b", "Url": "https://api.github.com/repos/zouyuefu/OSSLib_android", "Date": "2014-11-23T11:57:10Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { adView.removeAllViews(); adView.destroy(); } catch (java.lang.Throwable t) { org.mtransit.android.commons.MTLog.w(org.mtransit.android.util.AdsUtils.TAG, t, \"Error while destroying ad view!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2398/buggy-version/src.org.mtransit.android.util.AdsUtils.java", "BodyUseAPI": ["com.google.android.gms.ads.AdView.removeAllViews()", "com.google.android.gms.ads.AdView.destroy()"], "Fixed commit": "c874b8f373cc1e419723a3a7b208414a91a076bf", "Url": "https://api.github.com/repos/mtransitapps/mtransit-for-android", "Date": "2015-03-26T15:32:48Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Class.forName(\"com.nijikokun.bukkit.Permissions.Permissions\"); } catch (java.lang.ClassNotFoundException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4505/buggy-version/src.main.java.com.sk89q.bukkit.migration.NijiPermissionsResolver.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)"], "Fixed commit": "927cab001e3366efddd52237761e8cda72920d29", "Url": "https://api.github.com/repos/sk89q/WorldEdit", "Date": "2011-11-16T04:36:29Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { checkNumber(context, incomingNumber); } finally { li.doerf.leavemealone.telephony.IncomingCallReceiver.myIsRingingFrom = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2533/buggy-version/app.src.main.java.li.doerf.leavemealone.telephony.IncomingCallReceiver.java", "BodyUseAPI": ["li.doerf.leavemealone.telephony.IncomingCallReceiver.checkNumber(android.content.Context,java.lang.String)"], "Fixed commit": "4bdfdd7d8c83e5eeac37a1531c96da57b0f502fa", "Url": "https://api.github.com/repos/doerfli/leavemealone", "Date": "2016-01-12T22:52:36Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mConfigurationService.putInt(NgnConfigurationEntry.NATT_STUN_PORT, java.lang.Integer.parseInt(mEtStunPort.getText().toString())); } catch (java.lang.NumberFormatException e) { android.util.Log.e(org.doubango.imsdroid.Screens.ScreenNatt.TAG, \"stun port must be an integer\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/9148/buggy-version/imsdroid.src.org.doubango.imsdroid.Screens.ScreenNatt.java", "BodyUseAPI": ["org.doubango.ngn.services.INgnConfigurationService.putInt(NgnConfigurationEntry.NATT_STUN_PORT,int)", "android.widget.EditText.getText()", "mEtStunPort.getText().toString()", "java.lang.Integer.parseInt(mEtStunPort.getText().toString())"], "Fixed commit": "ed77140a8cfc86569982354791840d816ef00ef2", "Url": "https://api.github.com/repos/yage99/imsdroid", "Date": "2016-08-25T11:02:41Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { badgeRuleRepository.save(badgeRuleModel); } catch (org.springframework.dao.DataIntegrityViolationException e) { return org.springframework.http.ResponseEntity.status(HttpStatus.CONFLICT).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5209/buggy-version/spring-server.src.main.java.ch.heigvd.gamification.api.BadgeRulesEndPoint.java", "BodyUseAPI": ["ch.heigvd.gamification.database.dao.BadgeRuleRepository.save(ch.heigvd.gamification.api.dto.BadgeRule)"], "Fixed commit": "ccedb4df7b4bd5fadfa8fb0e9f1286057304f5f7", "Url": "https://api.github.com/repos/gsern1/AMT-Gamification-Platform", "Date": "2017-01-25T03:02:36Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { badgeRuleRepository.save(newBadgeRule); } catch (org.springframework.dao.DataIntegrityViolationException e) { return org.springframework.http.ResponseEntity.status(HttpStatus.CONFLICT).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5209/buggy-version/spring-server.src.main.java.ch.heigvd.gamification.api.BadgeRulesEndPoint.java", "BodyUseAPI": ["ch.heigvd.gamification.database.dao.BadgeRuleRepository.save(ch.heigvd.gamification.api.dto.BadgeRule)"], "Fixed commit": "ccedb4df7b4bd5fadfa8fb0e9f1286057304f5f7", "Url": "https://api.github.com/repos/gsern1/AMT-Gamification-Platform", "Date": "2017-01-25T03:02:36Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pointScaleRuleRepository.save(pointScaleRuleDB); } catch (org.springframework.dao.DataIntegrityViolationException e) { return org.springframework.http.ResponseEntity.status(HttpStatus.CONFLICT).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5209/buggy-version/spring-server.src.main.java.ch.heigvd.gamification.api.PointScaleRulesEndPoint.java", "BodyUseAPI": ["ch.heigvd.gamification.database.dao.PointScaleRuleRepository.save(ch.heigvd.gamification.api.dto.PointScaleRule)"], "Fixed commit": "ccedb4df7b4bd5fadfa8fb0e9f1286057304f5f7", "Url": "https://api.github.com/repos/gsern1/AMT-Gamification-Platform", "Date": "2017-01-25T03:02:36Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pointScaleRuleRepository.save(pointScaleRuleDB); } catch (org.springframework.dao.DataIntegrityViolationException e) { return org.springframework.http.ResponseEntity.status(HttpStatus.CONFLICT).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5209/buggy-version/spring-server.src.main.java.ch.heigvd.gamification.api.PointScaleRulesEndPoint.java", "BodyUseAPI": ["ch.heigvd.gamification.database.dao.PointScaleRuleRepository.save(ch.heigvd.gamification.api.dto.PointScaleRule)"], "Fixed commit": "ccedb4df7b4bd5fadfa8fb0e9f1286057304f5f7", "Url": "https://api.github.com/repos/gsern1/AMT-Gamification-Platform", "Date": "2017-01-25T03:02:36Z"},
{"Line": "=>1192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { methods = itype.getMethods(); } catch (org.eclipse.jdt.core.JavaModelException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4480/buggy-version/codehint-plugin.src.codehint.utils.EclipseUtils.java", "BodyUseAPI": ["org.eclipse.jdt.core.IType.getMethods()"], "Fixed commit": "404eac3ab1e3e0ad4fa457678089931e95492461", "Url": "https://api.github.com/repos/jgalenson/codehint", "Date": "2013-04-09T01:13:30Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cluster.shutdown(); throw new java.io.IOException(\"test\"); } catch (java.io.IOException e) { java.lang.System.out.println((\"IOException when shutting down the cluster, continued afterwards, error message: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8756/buggy-version/src.storm.topology.TopologyWithThreeBF.java", "BodyUseAPI": ["backtype.storm.LocalCluster.shutdown()"], "Fixed commit": "70f22c5956274ba28a60334dafa5f72c889a56e1", "Url": "https://api.github.com/repos/sophiesongge/ContinuousRDF", "Date": "2016-01-15T14:20:58Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { createOtherRemotes(); } catch (java.lang.Exception e) { e.printStackTrace(); } finally { return Data.GlobalConstant.SIGNUP_SUCCESS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/9045/buggy-version/IDE-Server.src.logic.remoteInterfaces.AccountServer.java", "BodyUseAPI": ["logic.remoteInterfaces.AccountServer.createOtherRemotes()"], "Fixed commit": "564ef3d372cc942af3f6596814d96e0e29c9bec7", "Url": "https://api.github.com/repos/XZ-X/IDE", "Date": "2017-06-23T15:14:52Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { updateDeviceCache((!(devicesById.containsKey(id)))); } catch (java.sql.SQLException e) { org.traccar.helper.Log.warning(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6077/buggy-version/src.org.traccar.database.DataManager.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, org.traccar.model.Device>.containsKey(long)", "org.traccar.database.DataManager.updateDeviceCache((!(devicesById.containsKey(id))))"], "Fixed commit": "33b2a5c9ab70ffe7bbdd074ce430920d2a0d3941", "Url": "https://api.github.com/repos/kimetrica/traccar", "Date": "2015-12-06T20:55:54Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { projects.addBusinessObject(project); } catch (be.dafke.ObjectModel.Exceptions.EmptyNameException e) { e.printStackTrace(); } catch (be.dafke.ObjectModel.Exceptions.DuplicateNameException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2670/buggy-version/ProjectExtension.src.main.java.be.dafke.Project.GUI.ProjectManagementGUI.java", "BodyUseAPI": ["be.dafke.Project.Objects.Projects.addBusinessObject(be.dafke.Project.Objects.Project)"], "Fixed commit": "fee9744fd5c5b1c825174ef257528ce0c1622197", "Url": "https://api.github.com/repos/DavidCADanneels/Accounting", "Date": "2015-02-14T10:01:19Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mPM.setApplicationEnabledSetting(curPkg, newState, PackageManager.DONT_KILL_APP); } catch (java.lang.SecurityException e) { android.util.Log.e(com.cwgoover.applications.ManageApplications.TAG, ((\"Error: set GMS state to system fail! [\" + (e.toString())) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1330/buggy-version/app.src.main.java.com.cwgoover.applications.ManageApplications.java", "BodyUseAPI": ["android.content.pm.PackageManager.setApplicationEnabledSetting(java.lang.String,int,PackageManager.DONT_KILL_APP)"], "Fixed commit": "f4dcd648e4e04ab8403ab49f6ace54578a19991a", "Url": "https://api.github.com/repos/cwgoover/Android-App-Settings-Structure", "Date": "2016-07-25T02:07:08Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mPm.setApplicationEnabledSetting(curPkgName, newState, PackageManager.DONT_KILL_APP); } catch (java.lang.SecurityException e) { android.util.Log.e(com.cwgoover.applications.ApplicationsAdapter.TAG, ((\"Error: set state to system fail! [\" + (e.toString())) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1330/buggy-version/app.src.main.java.com.cwgoover.applications.ApplicationsAdapter.java", "BodyUseAPI": ["android.content.pm.PackageManager.setApplicationEnabledSetting(java.lang.String,int,PackageManager.DONT_KILL_APP)"], "Fixed commit": "f4dcd648e4e04ab8403ab49f6ace54578a19991a", "Url": "https://api.github.com/repos/cwgoover/Android-App-Settings-Structure", "Date": "2016-07-25T02:07:08Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cb_laser_properties.setSelectedIndex(0); } catch (java.lang.IllegalArgumentException ex) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3004/buggy-version/src.ch.epfl.leb.alica.MainGUI.java", "BodyUseAPI": ["javax.swing.JComboBox.setSelectedIndex(int)"], "Fixed commit": "d19cdf14e8ebf9ea073899087f9291b13c6d3a32", "Url": "https://api.github.com/repos/LEB-EPFL/ALICA", "Date": "2017-05-03T17:19:34Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (name != null) { name = java.net.URLDecoder.decode(name, \"UTF-8\"); } } catch (java.lang.Exception e) { org.python.pydev.core.log.Log.log(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1191/buggy-version/plugins.org.python.pydev.debug.src.org.python.pydev.debug.model.XMLUtils.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "5ba2ef33e7ba94a36139e97741595982d8fdca47", "Url": "https://api.github.com/repos/akruis/Pydev", "Date": "2014-07-28T12:55:24Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.android.volley.toolbox.ImageRequest request = new com.android.volley.toolbox.ImageRequest(imageUrl, new com.android.volley.Response.Listener<android.graphics.Bitmap>() { @java.lang.Override public void onResponse(android.graphics.Bitmap response) { callback.onResult(response); } }, 0, 0, null, new com.android.volley.Response.ErrorListener() { @java.lang.Override public void onErrorResponse(com.android.volley.VolleyError error) { callback.onError(error); } }); requestQueue.add(request); } catch (java.lang.NullPointerException npe) { callback.onResult(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8060/buggy-version/app.src.main.java.com.dcrichards.stravadora.StravaAPI.java", "BodyUseAPI": ["callback.onResult(response)", "com.android.volley.RequestQueue.add(com.android.volley.toolbox.ImageRequest)", "com.dcrichards.stravadora.StravaCallback<android.graphics.Bitmap>.onError(com.android.volley.VolleyError)"], "Fixed commit": "fc9fe641b6ece202fea50d5bcdf4d4c328e2ce48", "Url": "https://api.github.com/repos/DCRichards/stravadora", "Date": "2016-01-28T22:36:15Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { alertDialog.show(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/173/buggy-version/Android.KNOWtime.src.com.knowtime.RouteMapActivity.java", "BodyUseAPI": ["AlertDialog.Builder.show()"], "Fixed commit": "b04f6e7837671e1975e4e1e2c2c281918a490ea9", "Url": "https://api.github.com/repos/aeisses/KNOWtime", "Date": "2014-01-13T04:16:56Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.graphics.Bitmap myBitmap = android.graphics.BitmapFactory.decodeFile(mCurrentPhotoPath); profilePIc_iv.setImageBitmap(myBitmap); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8347/buggy-version/app.src.main.java.com.biglynx.fulfiller.ui.EditProfileActivity.java", "BodyUseAPI": ["com.mikhaellopez.circularimageview.CircularImageView.setImageBitmap(android.graphics.Bitmap)", "android.graphics.BitmapFactory.decodeFile(java.lang.String)"], "Fixed commit": "ee7a3fdf995915f66f724bfff4bb0d992a90786b", "Url": "https://api.github.com/repos/JgdshSeerm/Fulfiller", "Date": "2017-05-21T21:21:33Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { updateTags(file, episode); } catch (java.lang.Exception x) { net.sourceforge.subsonic.service.PodcastService.LOG.warn((\"Failed to update tags for podcast \" + (episode.getUrl())), x); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7937/buggy-version/subsonic-main.src.main.java.net.sourceforge.subsonic.service.PodcastService.java", "BodyUseAPI": ["net.sourceforge.subsonic.service.PodcastService.updateTags(java.io.File,net.sourceforge.subsonic.domain.PodcastEpisode)"], "Fixed commit": "eb1050830fb8f36db95c798b2b18a0794b2af0e0", "Url": "https://api.github.com/repos/daneren2005/Subsonic-Plus", "Date": "2014-03-05T22:43:25Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pool.initialize(); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/225/buggy-version/src.com.bittiger.AdsSearch.service.generators.AdsGenerator.java", "BodyUseAPI": ["com.bittiger.AdsSearch.service.parser.TokensPool.initialize()"], "Fixed commit": "e117203f358e5a967fc382cb39cd39edc9287d03", "Url": "https://api.github.com/repos/BitTigerInst/AdsSearch", "Date": "2016-08-20T16:13:41Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((this.oldMetaboliteUsedMap) != null) { metaboliteUsedMap = ((java.util.Map<java.lang.String, java.lang.Object>) (edu.rutgers.MOST.data.ObjectCloner.deepCopy(this.oldMetaboliteUsedMap))); edu.rutgers.MOST.config.LocalConfig.getInstance().setMetaboliteUsedMap(metaboliteUsedMap); } } catch (java.lang.Exception e3) { e3.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8240/buggy-version/src.edu.rutgers.MOST.data.ReactionUndoItem.java", "BodyUseAPI": ["edu.rutgers.MOST.config.LocalConfig.getInstance()", "edu.rutgers.MOST.data.ObjectCloner.deepCopy(java.util.Map<java.lang.String, java.lang.Object>)", "edu.rutgers.MOST.config.LocalConfig.getInstance().setMetaboliteUsedMap(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "37aa1698c7da1ce111456de6464355328b9e1dfa", "Url": "https://api.github.com/repos/jimkell/MOST", "Date": "2014-03-14T18:37:09Z"},
{"Line": "=>695", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.view.View tileView = ((android.view.View) (de.robv.android.xposed.XposedHelpers.getObjectField(tileRecord, \"tileView\"))); param.args[2] = (tileView.getLeft()) + ((tileView.getWidth()) / 2); param.args[3] = (((tileView.getTop()) + (tk.wasdennnoch.androidn_ify.systemui.notifications.StatusBarHeaderHooks.qsHooks.getTileLayout().getOffsetTop(tileRecord))) + ((tileView.getHeight()) / 2)) + (tk.wasdennnoch.androidn_ify.systemui.notifications.StatusBarHeaderHooks.mQsPanel.getTop()); } catch (java.lang.Throwable ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1719/buggy-version/app.src.main.java.tk.wasdennnoch.androidn_ify.systemui.notifications.StatusBarHeaderHooks.java", "BodyUseAPI": ["android.view.View.getWidth()", "android.view.View.getTop()", "de.robv.android.xposed.XposedHelpers.getObjectField(java.lang.Object,java.lang.String)", "android.view.View.getLeft()", "android.view.View.getHeight()", "tk.wasdennnoch.androidn_ify.systemui.qs.QuickSettingsHooks.getTileLayout()", "android.view.ViewGroup.getTop()", "tk.wasdennnoch.androidn_ify.systemui.notifications.StatusBarHeaderHooks.qsHooks.getTileLayout().getOffsetTop(java.lang.Object)"], "Fixed commit": "24026aaedf043038d823810fbe916581d60809d6", "Url": "https://api.github.com/repos/wasdennnoch/AndroidN-ify", "Date": "2016-10-24T19:29:49Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { writer.setOutput(output); javax.imageio.IIOImage image = new javax.imageio.IIOImage(bufferedImage, null, null); writer.write(null, image, iwp); writer.dispose(); } finally { output.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5472/buggy-version/xchart.src.main.java.com.xeiam.xchart.BitmapEncoder.java", "BodyUseAPI": ["javax.imageio.ImageWriter.write(<nulltype>,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "javax.imageio.ImageWriter.setOutput(javax.imageio.stream.FileImageOutputStream)", "javax.imageio.ImageWriter.dispose()"], "Fixed commit": "da44c0536f14476bfd8447f5e540e8c76b8c07aa", "Url": "https://api.github.com/repos/knowm/XChart", "Date": "2015-03-16T11:49:10Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mca.data.NBTPlayerData data = mca.core.MCA.getPlayerData(playerTarget); unparsedPhrase = unparsedPhrase.replace(\"%PlayerName%\", data.getMcaName()); } catch (java.lang.Exception e) { unparsedPhrase = unparsedPhrase.replace(\"%PlayerName%\", playerTarget.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/9011/buggy-version/src.main.java.mca.core.radix.LanguageParser.java", "BodyUseAPI": ["mca.core.MCA.getPlayerData(net.minecraft.entity.player.EntityPlayer)", "java.lang.String.replace(java.lang.String,data.getMcaName())", "mca.data.NBTPlayerData.getMcaName()"], "Fixed commit": "9564e241daa90f42770d23c62027d42363101bd2", "Url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive", "Date": "2017-08-28T03:42:08Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (int i = 0; i < (elevators.size()); i++) { if (!(elevators.get(i).atCapacity())) return elevators.get(i); } } catch (java.lang.NullPointerException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7272/buggy-version/ElevatorThreads_HrafnkellIvarsson_RaquelitaAguilar.src.com.ru.usty.elevator.Floor.java", "BodyUseAPI": ["java.util.ArrayList<com.ru.usty.elevator.Elevator>.size()", "elevators.get(i).atCapacity()", "java.util.ArrayList<com.ru.usty.elevator.Elevator>.get(int)", "java.util.ArrayList<com.ru.usty.elevator.Elevator>.get(int)"], "Fixed commit": "ce5c5a832ec13c99f30d1b7c36d8c87da0979561", "Url": "https://api.github.com/repos/Group-USTY17/programming_assignment1", "Date": "2017-02-28T01:40:16Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { observerMessage = bookingData.getAvailability(facility); } catch (java.lang.CloneNotSupportedException e) { observerMessage = ServerClient.BookingServer.getServerExceptionMessage(\"Something happened to the facility you are monitorin but an error was generated while trying to notify you.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8699/buggy-version/BookingSystem.src.ServerClient.BookingServer.java", "BodyUseAPI": ["ServerClient.BookingData.getAvailability(java.lang.String)"], "Fixed commit": "dda52ba14c1b0d4020e2635c497ec346beba9ba1", "Url": "https://api.github.com/repos/dWarf-In-thE-FlaSk/CSC411", "Date": "2013-03-24T04:06:06Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pwd = cursor.getString(1); } catch (android.database.CursorIndexOutOfBoundsException e) { return \"NO_SUCH_USER\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1770/buggy-version/src.directi.androidteam.training.chatclient.Authentication.UserDatabaseHandler.java", "BodyUseAPI": ["android.database.Cursor.getString(int)"], "Fixed commit": "19e4b01afa1cdf1ef181932639cbaa1a8e21680f", "Url": "https://api.github.com/repos/vinayakbhavnani/android_chat_client", "Date": "2012-09-14T08:38:17Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { proxy = new java.net.Proxy(java.net.Proxy.Type.HTTP, new java.net.InetSocketAddress(java.net.InetAddress.getByName(proxyHostname), port)); } catch (java.net.UnknownHostException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1971/buggy-version/org.archicontribs.modelrepository.src.org.archicontribs.modelrepository.grafico.GraficoUtils.java", "BodyUseAPI": ["java.net.InetAddress.getByName(java.lang.String)"], "Fixed commit": "ab2ad7d0aadfd2b3677ca06a8af4e8031581c850", "Url": "https://api.github.com/repos/archimatetool/archi-modelrepository-plugin", "Date": "2017-05-17T12:51:04Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return java.lang.String.format(\"%s = %s\", getEndpoint().getName(), me.legrange.panstamp.gui.model.Format.formatValue(getEndpoint())); } catch (me.legrange.panstamp.NetworkException ex) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5412/buggy-version/src.main.java.me.legrange.panstamp.gui.model.tree.EndpointNode.java", "BodyUseAPI": ["me.legrange.panstamp.Endpoint.getName()", "java.lang.String.format(java.lang.String,getEndpoint().getName(),me.legrange.panstamp.gui.model.Format.formatValue(getEndpoint()))", "me.legrange.panstamp.gui.model.Format.formatValue(me.legrange.panstamp.Endpoint)", "me.legrange.panstamp.gui.model.tree.EndpointNode.getEndpoint()", "me.legrange.panstamp.gui.model.tree.EndpointNode.getEndpoint()"], "Fixed commit": "884742563692de5da5d0ce19dd21f8ad3e9cc4b6", "Url": "https://api.github.com/repos/GideonLeGrange/panstamp-tools", "Date": "2015-04-06T13:07:53Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.apache.hadoop.fs.FileSystem fs = org.apache.kylin.engine.mr.HadoopUtil.getFileSystem(outputPath); inputStream = fs.open(outputFile); bufferedReader = new java.io.BufferedReader(new java.io.InputStreamReader(inputStream)); minValue = currentValue = bufferedReader.readLine(); while (currentValue != null) { maxValue = currentValue; currentValue = bufferedReader.readLine(); } } catch (java.io.IOException e) { org.apache.kylin.source.kafka.UpdateTimeRangeStep.logger.error((\"fail to read file \" + outputFile), e); return new org.apache.kylin.job.execution.ExecuteResult(ExecuteResult.State.ERROR, e.getLocalizedMessage()); } finally { org.apache.commons.io.IOUtils.closeQuietly(bufferedReader); org.apache.commons.io.IOUtils.closeQuietly(inputStream); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3560/buggy-version/source-kafka.src.main.java.org.apache.kylin.source.kafka.UpdateTimeRangeStep.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()", "org.apache.kylin.engine.mr.HadoopUtil.getFileSystem(java.lang.String)", "org.apache.hadoop.fs.FileSystem.open(org.apache.hadoop.fs.Path)", "java.io.BufferedReader.readLine()"], "Fixed commit": "afdec89fe09dcb28b368775f8b830c78f74e7489", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2016-10-09T11:06:07Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new appReader.control.HomeWindow(this).show(); } catch (java.io.IOException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5753/buggy-version/src.appReader.control.Control.java", "BodyUseAPI": ["appReader.control.HomeWindow.show()"], "Fixed commit": "6b66f3dbbd6997fa2b5b28c0301ab4c9d5f094ed", "Url": "https://api.github.com/repos/rripamonti/schoolLib", "Date": "2017-09-26T08:48:02Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stop(workspace); } catch (org.apache.sling.api.resource.PersistenceException e1) { com.adobe.acs.commons.workflow.bulk.execution.impl.runners.AEMTransientWorkflowRunnerImpl.log.error(\"Unable to mark this workspace [ {} ] as stopped.\", workspace.getPath(), e1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6861/buggy-version/bundle.src.main.java.com.adobe.acs.commons.workflow.bulk.execution.impl.runners.AEMTransientWorkflowRunnerImpl.java", "BodyUseAPI": ["com.adobe.acs.commons.workflow.bulk.execution.impl.runners.AEMTransientWorkflowRunnerImpl.AEMTransientWorkflowRunnable.stop(com.adobe.acs.commons.workflow.bulk.execution.model.Workspace)"], "Fixed commit": "d9fe9bac0e0f3fc16ce468a138cb2168c2f9fb6b", "Url": "https://api.github.com/repos/Adobe-Consulting-Services/acs-aem-commons", "Date": "2017-04-15T22:54:36Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stop(workspace); } catch (org.apache.sling.api.resource.PersistenceException e1) { com.adobe.acs.commons.workflow.bulk.execution.impl.runners.AEMWorkflowRunnerImpl.log.error(\"Unable to mark this workspace [ {} ] as stopped.\", workspace.getPath(), e1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6861/buggy-version/bundle.src.main.java.com.adobe.acs.commons.workflow.bulk.execution.impl.runners.AEMWorkflowRunnerImpl.java", "BodyUseAPI": ["com.adobe.acs.commons.workflow.bulk.execution.impl.runners.AEMWorkflowRunnerImpl.AEMWorkflowRunnable.stop(com.adobe.acs.commons.workflow.bulk.execution.model.Workspace)"], "Fixed commit": "d9fe9bac0e0f3fc16ce468a138cb2168c2f9fb6b", "Url": "https://api.github.com/repos/Adobe-Consulting-Services/acs-aem-commons", "Date": "2017-04-15T22:54:36Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { celltext = ConvertPropertyToSpecificDateFormat(celltext); } catch (java.lang.Exception e) { celltext = \"Formatting failed\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1979/buggy-version/src.main.java.ru.onyx.clipper.model.ReportCell.java", "BodyUseAPI": ["ru.onyx.clipper.model.ReportCell.ConvertPropertyToSpecificDateFormat(java.lang.String)"], "Fixed commit": "f4044bcbec8b3136fbef51e8b35ba8d7ce3de01b", "Url": "https://api.github.com/repos/MasterSPB/pdf-generator", "Date": "2014-10-13T06:28:59Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { io.ddf.util.Utils.deleteFile(this.getDataFileName(namespace, name)); io.ddf.util.Utils.deleteFile(this.getSchemaFileName(namespace, name)); } catch (java.lang.Exception e) { throw new io.ddf.exception.DDFException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/9241/buggy-version/core.src.main.java.io.basic.ddf.content.PersistenceHandler.java", "BodyUseAPI": ["io.ddf.util.Utils.deleteFile(java.lang.String)", "io.basic.ddf.content.PersistenceHandler.getDataFileName(java.lang.String,java.lang.String)", "io.basic.ddf.content.PersistenceHandler.getSchemaFileName(java.lang.String,java.lang.String)", "io.ddf.util.Utils.deleteFile(java.lang.String)"], "Fixed commit": "16f2fb43c3bf4bac6e2d3bbb8c4220457699e74a", "Url": "https://api.github.com/repos/ddf-project/DDF", "Date": "2015-03-19T17:35:30Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { workflowSystemActor = akka.actor.TypedActor.get(system).typedActorOf(new akka.actor.TypedProps<org.gumtree.workflow.support.WorkflowSystemActor>(org.gumtree.workflow.IWorkflowSystem.class, org.gumtree.workflow.support.WorkflowSystemActor.class), \"workflowSystem\"); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/612/buggy-version/framework.common.org.gumtree.core.src.org.gumtree.workflow.support.WorkflowSystemProxy.java", "BodyUseAPI": ["akka.actor.TypedActor.get(system).typedActorOf(akka.actor.TypedProps<org.gumtree.workflow.support.WorkflowSystemActor>,java.lang.String)", "akka.actor.TypedActor.get(akka.actor.ActorSystem)"], "Fixed commit": "f198ff5e31b3d3011cafb8b97950a424f02dcc52", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2014-04-30T02:23:42Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(3000); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1263/buggy-version/src.org.nschmidt.ldparteditor.opengl.OpenGLRenderer.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "bb1e91221db0eb3d80e460cbc71c3ae078721f37", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-05-15T14:29:52Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return query.setParameter(\"login\", login).getSingleResult(); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/194/buggy-version/src.main.java.daos.UserDAO.java", "BodyUseAPI": ["query.setParameter(\"login\", login).getSingleResult()", "javax.persistence.TypedQuery<beans.User>.setParameter(java.lang.String,java.lang.String)"], "Fixed commit": "7425aa74540835cf7bf877798551313b22b23d4e", "Url": "https://api.github.com/repos/surgicalbanana/jpa-labwork", "Date": "2016-12-31T18:15:31Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((edu.berkeley.xtrace.XTraceContext.hostname) == null) { edu.berkeley.xtrace.XTraceContext.hostname = java.net.InetAddress.getLocalHost().getHostName(); } } catch (java.net.UnknownHostException e) { edu.berkeley.xtrace.XTraceContext.hostname = \"unknown\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8938/buggy-version/src.java.src.main.java.edu.berkeley.xtrace.XTraceContext.java", "BodyUseAPI": ["java.net.InetAddress.getLocalHost()", "java.net.InetAddress.getHostName()"], "Fixed commit": "e317589ff8e4142e49caa11e6ca03041f720ceb3", "Url": "https://api.github.com/repos/ww2cmu/X-Trace", "Date": "2011-06-10T13:41:22Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { db = com.mindbuilders.cognitivemoodlog.BaseApplication.getDbHelper().getReadableDatabase(BaseApplication.passwordHash); android.database.Cursor cursor = db.rawQuery(\"select * from emotion\", null); } catch (net.sqlcipher.database.SQLiteException s) { android.widget.Toast.makeText(getBaseContext(), \"You must use the password you set up earlier, or delete everything and start over\", Toast.LENGTH_LONG).show(); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1458/buggy-version/app.src.main.java.com.mindbuilders.cognitivemoodlog.MainActivity.java", "BodyUseAPI": ["com.mindbuilders.cognitivemoodlog.BaseApplication.getDbHelper().getReadableDatabase(BaseApplication.passwordHash)", "com.mindbuilders.cognitivemoodlog.BaseApplication.getDbHelper()", "net.sqlcipher.database.SQLiteDatabase.rawQuery(java.lang.String,<nulltype>)"], "Fixed commit": "237f1325563ab009eec64321b239dbfb3052460b", "Url": "https://api.github.com/repos/petemit/CognitiveMoodLog", "Date": "2017-12-11T22:40:10Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { todos.remove(t); java.lang.System.out.printf(\"deleted from %s: \\\"%s\\\"\\n\", fileName, t.toString()); } catch (java.lang.Exception e) { java.lang.System.out.printf(((t.toString()) + \" is not found in todos.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7830/buggy-version/src.model.TodoFile.java", "BodyUseAPI": ["java.util.List<model.TodoItem>.remove(model.TodoItem)", "java.io.PrintStream.printf(java.lang.String,java.lang.String,t.toString())", "model.TodoItem.toString()"], "Fixed commit": "046768fe147fc187aa05c62c0d641324f8095d9e", "Url": "https://api.github.com/repos/cs2103jan2016-t11-1j/main", "Date": "2016-03-30T17:53:45Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { jsonObject.getJSONObject(\"fields\").getJSONObject(\"assignee\").getJSONObject(\"avatarUrls\").get(\"48x48\").toString(); } catch (java.lang.Exception ex) { android.util.Log.e(\"BATU\", ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3482/buggy-version/app.src.main.java.restprovider.RestConnectionProvider.java", "BodyUseAPI": ["jsonObject.getJSONObject(\"fields\").getJSONObject(\"assignee\").getJSONObject(java.lang.String)", "jsonObject.getJSONObject(\"fields\").getJSONObject(java.lang.String)", "jsonObject.getJSONObject(\"fields\").getJSONObject(\"assignee\").getJSONObject(\"avatarUrls\").get(java.lang.String)", "jsonObject.getJSONObject(\"fields\").getJSONObject(\"assignee\").getJSONObject(\"avatarUrls\").get(\"48x48\").toString()", "org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "32ae0f2dc5e223d8032b420d0631150f20127635", "Url": "https://api.github.com/repos/batuhanka/vestel-jira-mobile-new", "Date": "2016-05-05T10:38:01Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { currentUser.setPhone(Phone.getText()); } catch (java.lang.IllegalArgumentException error) { javax.swing.JOptionPane.showMessageDialog(panel, \"Make sure Phone number is 10 digits.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5382/buggy-version/src.main.java.DatabaseFrame.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "User.setPhone(java.lang.String)"], "Fixed commit": "46f9d023d3135b0c5656196ec3c9b92c0534d3f9", "Url": "https://api.github.com/repos/natemara/databases-project", "Date": "2016-05-02T23:29:04Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { currentUser.setCreditCard(CreditCard.getText()); } catch (java.lang.IllegalArgumentException error) { javax.swing.JOptionPane.showMessageDialog(panel, \"Make sure credit card is 16 digits.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5382/buggy-version/src.main.java.DatabaseFrame.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "User.setCreditCard(java.lang.String)"], "Fixed commit": "46f9d023d3135b0c5656196ec3c9b92c0534d3f9", "Url": "https://api.github.com/repos/natemara/databases-project", "Date": "2016-05-02T23:29:04Z"},
{"Line": "=>2612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { velocityEngine.evaluate(velocityContext, w, org.openmrs.module.xforms.XformBuilder.class.getName(), value); value = w.toString(); if ((value != null) && ((value.trim().length()) > 0)) org.openmrs.module.xforms.XformBuilder.setNodeValue(child, value.toString()); } catch (java.lang.Exception ex) { org.openmrs.module.xforms.XformBuilder.log.error((((\"Failed to evaluate: \" + value) + \" for field: \") + name), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5746/buggy-version/api.src.main.java.org.openmrs.module.xforms.XformBuilder.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.toString()", "org.openmrs.module.xforms.XformBuilder.setNodeValue(org.kxml2.kdom.Element,java.lang.String)", "java.lang.String.trim()", "java.io.StringWriter.toString()", "org.apache.velocity.app.VelocityEngine.evaluate(org.apache.velocity.VelocityContext,java.io.StringWriter,java.lang.String,java.lang.String)", "java.lang.Class.getName()"], "Fixed commit": "efc113a9ec586941ca71e20f63a1fe5df1448e97", "Url": "https://api.github.com/repos/openmrs/openmrs-module-xforms", "Date": "2013-02-27T14:46:03Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { uuid = java.util.UUID.fromString(uuidS); } catch (java.lang.IllegalArgumentException e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/178/buggy-version/PlanPluginBridge.src.main.java.com.djrapitops.pluginbridge.plan.litebans.LiteBansDatabaseQueries.java", "BodyUseAPI": ["java.util.UUID.fromString(java.lang.String)"], "Fixed commit": "d900d1d1d984f6bf6afae094e575748e3749ee27", "Url": "https://api.github.com/repos/Rsl1122/Plan-PlayerAnalytics", "Date": "2017-12-03T07:56:26Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { eintraege.addAll(retList); } catch (java.lang.Exception ex) { android.support.design.widget.Snackbar.make(getView(), getActivity().getString(R.string.keininternet), Snackbar.LENGTH_INDEFINITE).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4532/buggy-version/app.src.main.java.gvapp.diplomprojekt.at.gv_appandroid.Basisklassen.Liste.java", "BodyUseAPI": ["java.util.List<gvapp.diplomprojekt.at.gv_appandroid.Basisklassen.ListenEintrag>.addAll(java.util.List)"], "Fixed commit": "a3fc9c8c754207f0f84b6f5491acab3bf826dddd", "Url": "https://api.github.com/repos/HigHendHd/Gesundheitsvorsorge", "Date": "2016-03-25T14:29:30Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (io.jboot.utils.StringUtils.isBlank(value)) { method.invoke(obj, new java.lang.Object[]{ null }); }else { java.lang.Object val = io.jboot.config.JbootConfigManager.convert(method.getParameterTypes()[0], value); method.invoke(obj, val); } } catch (java.lang.Throwable ex) { io.jboot.config.LogKit.error(ex.toString(), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5266/buggy-version/src.main.java.io.jboot.config.JbootConfigManager.java", "BodyUseAPI": ["io.jboot.utils.StringUtils.isBlank(java.lang.String)", "io.jboot.config.JbootConfigManager.convert(java.lang.Class<?>,java.lang.String)", "java.lang.reflect.Method.getParameterTypes()", "java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object)", "java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])"], "Fixed commit": "cbe2d74f536d43817f472a290c3d7fbb6b93390a", "Url": "https://api.github.com/repos/yangfuhai/jboot", "Date": "2017-12-18T10:15:22Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { net.peakgames.libgdx.stagebuilder.core.builder.ActorBuilder builder = builders.get(model.getClass()); rootGroup.addActor(builder.build(model)); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException((\"Failed to build stage on actor: \" + (model.getName())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4841/buggy-version/core.src.main.java.net.peakgames.libgdx.stagebuilder.core.builder.StageBuilder.java", "BodyUseAPI": ["net.peakgames.libgdx.stagebuilder.core.builder.BaseModel.getClass()", "java.util.Map<java.lang.Class<? extends net.peakgames.libgdx.stagebuilder.core.builder.BaseModel>, net.peakgames.libgdx.stagebuilder.core.builder.ActorBuilder>.get(model.getClass())", "com.badlogic.gdx.scenes.scene2d.Group.addActor(builder.build(model))", "net.peakgames.libgdx.stagebuilder.core.builder.ActorBuilder.build(net.peakgames.libgdx.stagebuilder.core.builder.BaseModel)"], "Fixed commit": "9a20df2ae758feac44647e39cb5b672e3eddd114", "Url": "https://api.github.com/repos/peakgames/libgdx-stagebuilder", "Date": "2014-02-28T10:31:42Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { lock.writeLock().lock(); queryResultList.add(qr); } finally { lock.writeLock().unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7590/buggy-version/client.src.main.java.org.apache.rocketmq.client.impl.MQAdminImpl.java", "BodyUseAPI": ["java.util.List<org.apache.rocketmq.client.QueryResult>.add(org.apache.rocketmq.client.QueryResult)", "java.util.concurrent.locks.ReadWriteLock.writeLock()", "java.util.concurrent.locks.Lock.lock()"], "Fixed commit": "89e5898a59f64d0468d5d43215d22764c73ff081", "Url": "https://api.github.com/repos/lizhanhui/rocketmq", "Date": "2016-12-29T06:58:59Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final org.osgi.framework.ServiceReference[] refs = context.getServiceReferences(org.osgi.service.event.EventHandler.class.getName(), ((((\"(\" + (org.osgi.service.event.EventConstants.EVENT_TOPIC)) + \"=\") + fullTopic) + \")\")); if ((refs == null) || (!(contains(refs, this)))) { final java.util.Dictionary<java.lang.String, java.lang.String> properties = new java.util.Hashtable<java.lang.String, java.lang.String>(); properties.put(EventConstants.EVENT_TOPIC, fullTopic); context.registerService(org.osgi.service.event.EventHandler.class.getName(), this, properties); } } catch (final org.osgi.framework.InvalidSyntaxException e) { org.erlide.jinterface.ErlLogger.warn(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3131/buggy-version/org.erlide.core.src.org.erlide.core.backend.events.ErlangEventHandler.java", "BodyUseAPI": ["org.erlide.core.backend.events.ErlangEventHandler.contains(org.osgi.framework.ServiceReference[],org.erlide.core.backend.events.ErlangEventHandler)", "java.lang.Class.getName()", "java.util.Dictionary<java.lang.String, java.lang.String>.put(EventConstants.EVENT_TOPIC,java.lang.String)", "org.osgi.framework.BundleContext.getServiceReferences(java.lang.String,((((\"(\" + (org.osgi.service.event.EventConstants.EVENT_TOPIC)) + \"=\") + fullTopic) + \")\"))", "org.osgi.framework.BundleContext.registerService(java.lang.String,org.erlide.core.backend.events.ErlangEventHandler,java.util.Dictionary<java.lang.String, java.lang.String>)", "java.lang.Class.getName()"], "Fixed commit": "f51e35f4ddc89085169f93005dfb1452094768b9", "Url": "https://api.github.com/repos/vladdu/erlide_eclipse", "Date": "2011-11-17T13:35:23Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.nio.file.Files.delete(java.nio.file.Paths.get((\"src/main/resources/static/image/book/\" + fileName))); } catch (java.io.IOException e) { e.printStackTrace(); java.lang.System.out.println(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u0432 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8135/buggy-version/IdeaProjects.admin.src.main.java.com.admin.controller.BookResource.java", "BodyUseAPI": ["java.nio.file.Paths.get(java.lang.String)", "java.nio.file.Files.delete(java.nio.file.Path)"], "Fixed commit": "e02c8956db108558ed9769e3326917cd33fe29f8", "Url": "https://api.github.com/repos/inozemtsev32/admin", "Date": "2017-12-07T13:55:41Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { monitorLogging(); java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { java.lang.Thread.currentThread().interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7332/buggy-version/src.main.java.org.magicdgs.thaplv.tools.ld.engine.QueueLD.java", "BodyUseAPI": ["org.magicdgs.thaplv.tools.ld.engine.QueueLD.monitorLogging()", "java.lang.Thread.sleep(int)"], "Fixed commit": "19fce46de718734b401464c017a073817bcbc3f8", "Url": "https://api.github.com/repos/magicDGS/thaplv", "Date": "2016-10-05T14:37:03Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { ds.prepare(sql).setString(firstName).setString(lastName).setDate(new java.util.Date()).setDate(new java.util.Date()).execute(); } finally { ds.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8340/buggy-version/src.main.java.com.bodejidi.hellojdbc.MemberService.java", "BodyUseAPI": ["ds.prepare(sql).setString(firstName).setString(lastName).setDate(java.util.Date)", "ds.prepare(sql).setString(firstName).setString(java.lang.String)", "ds.prepare(sql).setString(firstName).setString(lastName).setDate(new java.util.Date()).setDate(java.util.Date)", "ds.prepare(sql).setString(firstName).setString(lastName).setDate(new java.util.Date()).setDate(new java.util.Date()).execute()", "com.bodejidi.hellojdbc.DatabaseService.prepare(java.lang.String)", "ds.prepare(sql).setString(java.lang.String)"], "Fixed commit": "6a61a18f26385c8c8a614360e754d5d7fd1e8730", "Url": "https://api.github.com/repos/baldurtech/psychic-octo-ironman", "Date": "2014-04-02T03:35:43Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { @java.lang.SuppressWarnings(\"unchecked\") java.util.Map<java.lang.String, java.lang.Object> pubInfoMap = ((java.util.Map<java.lang.String, java.lang.Object>) (pubInfoObj)); boolean shouldAdd = false; us.kbase.narrativemethodstore.Publication p = new us.kbase.narrativemethodstore.Publication(); if ((pubInfoMap.get(\"pmid\")) != null) { p.setPmid(pubInfoMap.get(\"pmid\").toString()); shouldAdd = true; } if ((pubInfoMap.get(\"link\")) != null) { p.setLink(pubInfoMap.get(\"link\").toString()); shouldAdd = true; } if ((pubInfoMap.get(\"display-text\")) != null) { p.setDisplayText(pubInfoMap.get(\"display-text\").toString()); shouldAdd = true; }else if (shouldAdd) { if ((p.getLink()) != null) { p.setDisplayText(p.getLink()); }else if ((p.getPmid()) != null) { p.setDisplayText(p.getPmid()); } } if (shouldAdd) { publications.add(p); } } catch (java.lang.Exception ex) { throw new us.kbase.narrativemethodstore.exceptions.NarrativeMethodStoreException((\"Error parsing publication: \" + pubInfoObj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8815/buggy-version/src.us.kbase.narrativemethodstore.db.NarrativeMethodData.java", "BodyUseAPI": ["us.kbase.narrativemethodstore.Publication.setDisplayText(p.getPmid())", "java.util.List<us.kbase.narrativemethodstore.Publication>.add(us.kbase.narrativemethodstore.Publication)", "us.kbase.narrativemethodstore.Publication.getLink()", "us.kbase.narrativemethodstore.Publication.setPmid(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "us.kbase.narrativemethodstore.Publication.getPmid()", "java.lang.Object.toString()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "us.kbase.narrativemethodstore.Publication.getPmid()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "us.kbase.narrativemethodstore.Publication.setDisplayText(java.lang.String)", "us.kbase.narrativemethodstore.Publication.setLink(java.lang.String)", "us.kbase.narrativemethodstore.Publication.setDisplayText(p.getLink())", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Object.toString()", "java.lang.Object.toString()", "us.kbase.narrativemethodstore.Publication.getLink()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "78f50fd1af75a1545d4699bb64c724732c1e18ed", "Url": "https://api.github.com/repos/rsutormin/narrative_method_store", "Date": "2016-02-04T21:04:05Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { db.execSQL(command); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6055/buggy-version/src.com.activeandroid.DatabaseHelper.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)"], "Fixed commit": "203063993cc123f7ef9e5982b8c1291fb3b82907", "Url": "https://api.github.com/repos/vicpinm/ActiveAndroidRx", "Date": "2016-09-28T10:45:58Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { db.execSQL(line); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6055/buggy-version/src.com.activeandroid.DatabaseHelper.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)"], "Fixed commit": "203063993cc123f7ef9e5982b8c1291fb3b82907", "Url": "https://api.github.com/repos/vicpinm/ActiveAndroidRx", "Date": "2016-09-28T10:45:58Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { value = java.net.URLDecoder.decode(value, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { org.zkoss.bind.impl.BinderImpl._log.error((\"Failed to decode cookie \" + name), e); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/727/buggy-version/zkbind.src.org.zkoss.bind.impl.BinderImpl.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "3c359e4d705b89243a084d647f146977d56831ca", "Url": "https://api.github.com/repos/wenninghsu/zk", "Date": "2016-11-15T07:48:57Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { data.delete(adapter.toDelete); } catch (io.requery.sql.RowCountException rce) { rce.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6097/buggy-version/app.src.main.java.in.dc297.mqttclpro.activity.PublishActivity.java", "BodyUseAPI": ["io.requery.sql.EntityDataStore<io.requery.Persistable>.delete(in.dc297.mqttclpro.entity.TopicEntity)"], "Fixed commit": "95f6ee7e5e3f5121158591a2b60737583b4d1bf5", "Url": "https://api.github.com/repos/dc297/mqttclpro", "Date": "2017-11-16T08:01:35Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { in.dc297.mqttclpro.entity.TopicEntity insertedTopicEntity = data.insert(topicEntity); if ((insertedTopicEntity.getId()) > 0) { adapter.queryAsync(); in.dc297.mqttclpro.activity.SubscribedTopicsActivity.mqttClients.subscribeToTopic(broker, topic, java.lang.Integer.parseInt(qos)); return true; } } catch (io.requery.sql.StatementExecutionException see) { android.widget.Toast.makeText(getApplicationContext(), \"Topic already Exists or some error occured!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6097/buggy-version/app.src.main.java.in.dc297.mqttclpro.activity.SubscribedTopicsActivity.java", "BodyUseAPI": ["io.requery.sql.EntityDataStore<io.requery.Persistable>.insert(in.dc297.mqttclpro.entity.TopicEntity)", "in.dc297.mqttclpro.mqtt.internal.MQTTClients.subscribeToTopic(in.dc297.mqttclpro.entity.BrokerEntity,java.lang.String,int)", "in.dc297.mqttclpro.entity.TopicEntity.getId()", "in.dc297.mqttclpro.activity.SubscribedTopicsActivity.TopicsListAdapter.queryAsync()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "95f6ee7e5e3f5121158591a2b60737583b4d1bf5", "Url": "https://api.github.com/repos/dc297/mqttclpro", "Date": "2017-11-16T08:01:35Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { api.get(5, java.util.concurrent.TimeUnit.SECONDS); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } catch (java.util.concurrent.ExecutionException e) { e.printStackTrace(); } catch (java.util.concurrent.TimeoutException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7370/buggy-version/source.android.Nourriture.app.src.main.java.com.android.nourriture.nourriture.LoginActivity.java", "BodyUseAPI": ["com.android.nurriture.util.PostRequestAPI.get(int,java.util.concurrent.TimeUnit)"], "Fixed commit": "44c4a50d3faf4c1cb582bc06109ee798b715fdd7", "Url": "https://api.github.com/repos/Tchitos/nourriture-7", "Date": "2016-01-03T05:26:34Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { x = new int[k]; } catch (java.lang.OutOfMemoryError ex) { throw com.oracle.truffle.r.runtime.RError.error(RError.SHOW_CALLER, com.oracle.truffle.r.library.stats.CALLOC_COULD_NOT_ALLOCATE_INF); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/9116/buggy-version/com.oracle.truffle.r.library.src.com.oracle.truffle.r.library.stats.Wilcox.java", "BodyUseAPI": [], "Fixed commit": "13a9feb6942a18623dbf545d7a6ef4d12372bca2", "Url": "https://api.github.com/repos/oracle/fastr", "Date": "2016-11-30T10:31:51Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { session.resetCurrentProcessInstance(processId); } catch (com.silverpeas.processManager.servlets.ProcessManagerException e) { return \"/admin/jsp/documentNotFound.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5937/buggy-version/process-manager.process-manager-war.src.main.java.com.silverpeas.processManager.servlets.ProcessManagerRequestRouter.java", "BodyUseAPI": ["com.silverpeas.processManager.servlets.ProcessManagerSessionController.resetCurrentProcessInstance(java.lang.String)"], "Fixed commit": "012b0e1e039fd4d8c3ee6d7441c9baf09fd97f38", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Components", "Date": "2015-10-22T22:08:25Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { matchs = matchsDAO.getAllFutureMatchs(); } catch (java.lang.Exception e) { java.lang.System.out.print(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6320/buggy-version/app.src.main.java.com.gmail.moreau1006.mikael.attendancemanager.Activity.ListMatchsActivity.java", "BodyUseAPI": ["com.gmail.moreau1006.mikael.attendancemanager.DAO.MatchsDAO.getAllFutureMatchs()"], "Fixed commit": "af975250a59037f312cf70d35f100fb0bb4509b6", "Url": "https://api.github.com/repos/Mikael1006/attendance-manager", "Date": "2017-10-24T11:40:38Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { loadFile(); } catch (java.io.FileNotFoundException e) { } catch (java.io.IOException e) { } catch (org.bukkit.configuration.InvalidConfigurationException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3345/buggy-version/src.me.armar.plugins.autorank.config.SimpleYamlConfiguration.java", "BodyUseAPI": ["me.armar.plugins.autorank.config.SimpleYamlConfiguration.loadFile()"], "Fixed commit": "ad64f6f777dffbc73237edd31de067d0f7b3737d", "Url": "https://api.github.com/repos/Staartvin/Autorank-2", "Date": "2017-01-29T16:58:45Z"},
{"Line": "=>686", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mR = com.google.gwt.user.client.DOM.getStyleAttribute(toolbarElement, \"marginRight\"); mT = com.google.gwt.user.client.DOM.getStyleAttribute(toolbarElement, \"marginTop\"); } catch (java.lang.Exception e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3810/buggy-version/org.semanticsoft.vaaclipse.widgets.src.org.semanticsoft.vaaclipse.widgets.client.ui.stackwidget.VStackWidget.java", "BodyUseAPI": ["com.google.gwt.user.client.DOM.getStyleAttribute(com.google.gwt.user.client.Element,java.lang.String)", "com.google.gwt.user.client.DOM.getStyleAttribute(com.google.gwt.user.client.Element,java.lang.String)"], "Fixed commit": "903836c5d774f22fb2c49993de8f26704f65b6d7", "Url": "https://api.github.com/repos/zadeluca/vaaclipse", "Date": "2013-12-23T10:31:33Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { this.db.beginTransaction(); com.perrier.music.entity.album.Album album = this.albumProvider.findById(id); if (album == null) { throw new com.perrier.music.server.EntityExistsException(\"Track does not exist\"); } com.perrier.music.entity.album.Album updatedAlbum = this.albumProvider.update(album, albumUpdateDto); this.db.commit(); return javax.ws.rs.core.Response.status(Response.Status.CREATED).entity(updatedAlbum).build(); } finally { this.db.endTransaction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4921/buggy-version/server.src.main.java.com.perrier.music.rest.resource.AlbumResource.java", "BodyUseAPI": ["javax.ws.rs.core.Response.status(Response.Status.CREATED).entity(updatedAlbum).build()", "com.perrier.music.entity.album.AlbumProvider.update(com.perrier.music.entity.album.Album,com.perrier.music.api.AlbumUpdateDto)", "javax.ws.rs.core.Response.status(Response.Status.CREATED)", "com.perrier.music.db.IDatabase.beginTransaction()", "javax.ws.rs.core.Response.status(Response.Status.CREATED).entity(com.perrier.music.entity.album.Album)", "com.perrier.music.entity.album.AlbumProvider.findById(java.lang.Long)", "com.perrier.music.db.IDatabase.commit()"], "Fixed commit": "864b4276e5eb2de8d11c038457fbcd1820d711fd", "Url": "https://api.github.com/repos/nperrier/music-server", "Date": "2016-12-10T02:35:35Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sequenceString = controller.compose(sequence, genbankFormatter); } catch (java.lang.Exception e) { org.jbei.ice.lib.common.logging.Logger.error(e); sequenceString = sequence.getSequenceUser(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/182/buggy-version/src.main.java.org.jbei.ice.lib.net.RemoteTransfer.java", "BodyUseAPI": ["org.jbei.ice.lib.entry.sequence.SequenceController.compose(org.jbei.ice.lib.models.Sequence,org.jbei.ice.lib.entry.sequence.composers.formatters.GenbankFormatter)"], "Fixed commit": "6433f24c9e80a6910a0590ec699c973a3862e806", "Url": "https://api.github.com/repos/JBEI/ice", "Date": "2015-04-05T16:56:26Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { connection.close(); } catch (java.lang.NullPointerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6261/buggy-version/src.main.java.com.kylepfromer.database.Account.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "427188bc6b8c8f4d89c60d0b1b4d2e78a86c5f01", "Url": "https://api.github.com/repos/kpfromer/HomeWorkManager", "Date": "2016-11-26T23:21:41Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int character; while ((character = ciphertext.read()) != (-1)) { character = charMap.mapChar(character); if (character != (-1)) { character = charMap.remapChar(character); ciphertextList.add(character); }else { } } cleartext.close(); ciphertext.close(); } catch (java.io.IOException e) { java.lang.System.err.println((\"Abbruch: Fehler beim Zugriff auf Klar- oder \" + \"Chiffretextdatei.\")); e.printStackTrace(); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2241/buggy-version/01_Vigenere.src.task1.Vigenere.java", "BodyUseAPI": ["java.io.BufferedReader.close()", "task1.Vigenere.mapChar(int)", "java.io.BufferedReader.read()", "java.io.BufferedWriter.close()", "task1.Vigenere.remapChar(int)", "java.util.LinkedList<java.lang.Integer>.add(int)"], "Fixed commit": "46b63d897095b40b790b8404162b9f236caf29a9", "Url": "https://api.github.com/repos/Venorah/KryptoPraktikum", "Date": "2011-04-14T16:06:03Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { ds = com.bodejidi.DataBaseService.newInstance(); java.lang.String sql = ((((\"delete from \" + (com.bodejidi.Constants.SHIHANG_TABLE)) + \" where \") + (com.bodejidi.Constants.SHIHANG_ID)) + \"=\") + paraId; debug((\"SQL: \" + sql)); ds.execute(sql); } finally { ds.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1797/buggy-version/src.main.java.com.bodejidi.MemberService.java", "BodyUseAPI": ["com.bodejidi.DataBaseService.newInstance()", "com.bodejidi.MemberService.debug(java.lang.String)", "com.bodejidi.DataBaseService.execute(java.lang.String)"], "Fixed commit": "e315625e6c44ee859c9d076a5dfae3664b84dd13", "Url": "https://api.github.com/repos/shihang1228/laughing-octo-bear", "Date": "2014-04-12T07:30:05Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { consumer.close(); } catch (java.lang.Exception e) { com.heimuheimu.naiveasync.kafka.consumer.KafkaConsumerManager.LOGGER.error(\"KafkaConsumer closed failed.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/845/buggy-version/src.main.java.com.heimuheimu.naiveasync.kafka.consumer.KafkaConsumerManager.java", "BodyUseAPI": ["com.heimuheimu.naiveasync.kafka.consumer.KafkaConsumer<byte[], byte[]>.close()"], "Fixed commit": "75a8ed343f154d781b0df8b9b89e7e51b09f51f3", "Url": "https://api.github.com/repos/heimuheimu/naiveasync", "Date": "2017-10-27T04:02:42Z"},
{"Line": "=>3022", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { this.rrs = new org.apache.hadoop.hive.metastore.newms.RawStoreImp(); } catch (java.io.IOException e) { LOG.error(e, e); throw new org.apache.hadoop.hive.metastore.api.MetaException(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8361/buggy-version/src.metastore.src.java.org.apache.hadoop.hive.metastore.DiskManager.java", "BodyUseAPI": [], "Fixed commit": "f442e05ccadff0a09317699dc0a37c94bf988e43", "Url": "https://api.github.com/repos/bd-group/metastore", "Date": "2014-04-09T01:38:09Z"},
{"Line": "=>963", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { this.trs = new org.apache.hadoop.hive.metastore.newms.RawStoreImp(); } catch (java.io.IOException e) { LOG.error(e, e); throw new org.apache.hadoop.hive.metastore.api.MetaException(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8361/buggy-version/src.metastore.src.java.org.apache.hadoop.hive.metastore.DiskManager.java", "BodyUseAPI": [], "Fixed commit": "f442e05ccadff0a09317699dc0a37c94bf988e43", "Url": "https://api.github.com/repos/bd-group/metastore", "Date": "2014-04-09T01:38:09Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Object comment = s.getExtension(\"comment\"); if (comment instanceof java.lang.String) { java.lang.String c = ((java.lang.String) (comment)); body.append(\" /* \"); body.append(c.replace(\"*/\", \"* /\")); body.append(\" */\"); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2967/buggy-version/src.uniol.apt.io.renderer.impl.APTRenderer.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "uniol.apt.adt.ts.State.getExtension(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "2cc8ed29afdce22180551812e752f225590a51db", "Url": "https://api.github.com/repos/renke/apt", "Date": "2013-05-22T15:03:19Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { main.plugin.getServer().getScheduler().runTask(main.plugin, new java.lang.Runnable() { public void run() { race.end(); return; } }); } catch (java.lang.IllegalArgumentException e) { try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e1) { } run(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/900/buggy-version/uCarsRace.src.net.stormdev.ucars.race.Race.java", "BodyUseAPI": ["main.plugin.getServer().getScheduler().runTask(main.plugin,java.lang.Runnable)", "main.plugin.getServer().getScheduler()", "net.stormdev.ucars.race.Race.end()", "main.plugin.getServer()", "java.lang.Object()"], "Fixed commit": "1400ab5db1caaec92fc127da1c15d64505c27a1b", "Url": "https://api.github.com/repos/storm345dev/uCarsRace", "Date": "2013-10-06T11:00:02Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { parser.beginObject(); if (!(parser.nextName().equals(\"text\"))) { throw new java.net.ProtocolException(); } rawDisplayName = parser.nextString(); } catch (java.lang.Throwable e) { org.opendatakit.logging.WebLogger.getLogger(getAppName()).printStackTrace(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/42/buggy-version/tables_app.src.main.java.org.opendatakit.tables.fragments.ColumnPreferenceFragment.java", "BodyUseAPI": ["android.util.JsonReader.beginObject()", "android.util.JsonReader.nextString()", "parser.nextName().equals(java.lang.String)", "android.util.JsonReader.nextName()"], "Fixed commit": "55b0a10016ac128660cbd7a815ed33e3a0fea6ec", "Url": "https://api.github.com/repos/opendatakit/tables", "Date": "2017-06-06T22:04:39Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return com.technophobia.substeps.runner.syntax.SyntaxBuilder.buildSyntax(stepClasses, new java.io.File(projectLocationPath(javaProject).toOSString()), true, null, new com.technophobia.substeps.classloader.ClassLoadedClassAnalyser(classLoader), false); } catch (final java.lang.RuntimeException ex) { com.technophobia.substeps.FeatureEditorPlugin.instance().log(IStatus.WARNING, (((\"Error when building syntax for project \" + project) + \": \") + (ex.getMessage()))); final com.technophobia.substeps.model.Syntax nullSyntax = new com.technophobia.substeps.model.Syntax(); nullSyntax.setSubStepsMap(new com.technophobia.substeps.model.PatternMap<com.technophobia.substeps.model.ParentStep>()); return nullSyntax; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4600/buggy-version/com.technophobia.substeps.editor.src.main.java.com.technophobia.substeps.document.content.assist.feature.ProjectToSyntaxTransformer.java", "BodyUseAPI": ["com.technophobia.substeps.runner.syntax.SyntaxBuilder.buildSyntax(java.util.List<java.lang.Class<?>>,java.io.File,boolean,<nulltype>,com.technophobia.substeps.classloader.ClassLoadedClassAnalyser,boolean)", "org.eclipse.core.runtime.IPath.toOSString()", "com.technophobia.substeps.document.content.assist.feature.ProjectToSyntaxTransformer.projectLocationPath(org.eclipse.jdt.core.IJavaProject)"], "Fixed commit": "c7f57f15d59043d59348878876ae69a0e990d77d", "Url": "https://api.github.com/repos/technophobia/substeps-eclipse-plugin", "Date": "2012-11-14T09:58:02Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { distance = java.lang.Double.valueOf(newdst); } catch (java.lang.RuntimeException e) { android.util.Log.i(\"Error\", \"No ha sido posible calcular la distancia\"); distance = 0.0; android.widget.Toast warningMessage = android.widget.Toast.makeText(getApplicationContext(), getResources().getString(R.string.distance_not_available), Toast.LENGTH_LONG); warningMessage.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3552/buggy-version/src.com.example.ohmytaxi.activities.RouteActivity.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)"], "Fixed commit": "dfac1de310834e7d809f923056f1e6d4c576aae0", "Url": "https://api.github.com/repos/Yonmaklein/OhMyTaxi", "Date": "2014-05-20T17:07:38Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { content = scan.next(); } catch (java.util.NoSuchElementException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5018/buggy-version/src.com.znow.aquatexteditor.controller.FileManager.java", "BodyUseAPI": ["java.util.Scanner.next()"], "Fixed commit": "6b098016b01b672a40eb4c6b1ab4f3d9d9f8a2da", "Url": "https://api.github.com/repos/Zn0w/TextEditor", "Date": "2017-08-21T04:00:40Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { queryParaDecode = org.apache.commons.lang.StringUtils.trim(queryParaDecode); queryParaPuny = java.net.IDN.toASCII(queryParaDecode); } catch (java.lang.Exception e) { map = com.cnnic.whois.util.WhoisUtil.processError(WhoisUtil.COMMENDRRORCODE, role, format); processRespone(request, response, map); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3855/buggy-version/source.whois.src.com.cnnic.whois.controller.QueryServlet.java", "BodyUseAPI": ["org.apache.commons.lang.StringUtils.trim(java.lang.String)", "java.net.IDN.toASCII(java.lang.String)"], "Fixed commit": "42e6d808f60c5875dfd23113ea6af71d51c52534", "Url": "https://api.github.com/repos/forumbyr/restfulwhois", "Date": "2013-11-04T06:02:40Z"},
{"Line": "=>873", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { if ((playerTypes[turn]) != 0) { return; } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4734/buggy-version/common.risk.game.Game.java", "BodyUseAPI": [], "Fixed commit": "8548073b38f3c6b5b700ba3652092f50bf9c865e", "Url": "https://api.github.com/repos/iburinoc/risk", "Date": "2013-11-18T14:20:24Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.isanwenyu.tabview.TabView.SavedState ss = ((com.isanwenyu.tabview.TabView.SavedState) (state)); super.onRestoreInstanceState(ss.getSuperState()); setChecked(ss.checked); requestLayout(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1918/buggy-version/tabview.src.main.java.com.isanwenyu.tabview.TabView.java", "BodyUseAPI": ["com.isanwenyu.tabview.TabView.setChecked(boolean)", "com.isanwenyu.tabview.TabView.requestLayout()", "com.andexert.library.RippleView.onRestoreInstanceState(ss.getSuperState())", "com.isanwenyu.tabview.TabView.SavedState.getSuperState()"], "Fixed commit": "93a7fd32bb761ea6a1e1ffcd10ef23b823f534b6", "Url": "https://api.github.com/repos/isanwenyu/TabView", "Date": "2016-11-04T09:57:36Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rez = line.split(\" \")[7]; } catch (java.lang.Exception e) { utils.FruitUtils.log.severe((\"There has been an error in program. Fruit output is:\\r\\n\" + fruitOutput)); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7302/buggy-version/src.main.java.utils.FruitUtils.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "7834b5cbb6c31a5450438612b204ced1a39af43c", "Url": "https://api.github.com/repos/ak83/MCTS", "Date": "2012-03-14T18:50:52Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String componentPVob = component.getBaseline().getComponent().load().getPVob().getName(); componentFileName = ((((ConfigurationRotator.FEED_FULL_PATH) + componentPVob) + (ConfigurationRotator.SEPARATOR)) + componentName) + \".xml\"; } catch (java.lang.Exception ex) { localListener.getLogger().print((((((\"onCompleted runlistener - caught Exception, trying to load PVob name. build: \" + (build.getDisplayName())) + \", #\") + (build.getNumber())) + \". Exception was: \") + (ex.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5120/buggy-version/src.main.java.net.praqma.jenkins.configrotator.ConfigurationRotatorRunListener.java", "BodyUseAPI": ["component.getBaseline().getComponent().load()", "component.getBaseline().getComponent().load().getPVob().getName()", "net.praqma.jenkins.configrotator.scm.clearcaseucm.ClearCaseUCMConfigurationComponent.getBaseline()", "component.getBaseline().getComponent().load().getPVob()", "component.getBaseline().getComponent()"], "Fixed commit": "1924b68bd7b1c89054863fc4fb411586c93290de", "Url": "https://api.github.com/repos/jenkinsci/config-rotator-plugin", "Date": "2012-04-26T11:09:31Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((getFuture()) == null) || ((getChannel()) == null)) { return; } if (!(getChannel().isActive())) { return; } getChannel().close(); channel = null; future = null; bootstrap = null; eventLoopGroup = null; } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6298/buggy-version/src.main.java.de.bluplayz.networkhandler.netty.client.NettyClient.java", "BodyUseAPI": ["getChannel().isActive()", "de.bluplayz.networkhandler.netty.client.NettyClient.getFuture()", "de.bluplayz.networkhandler.netty.client.NettyClient.getChannel()", "getChannel().close()", "de.bluplayz.networkhandler.netty.client.NettyClient.getChannel()", "de.bluplayz.networkhandler.netty.client.NettyClient.getChannel()"], "Fixed commit": "282a26fea70b61810a7cfbda50a7fac78abd8cc4", "Url": "https://api.github.com/repos/Bluplayz/LibraryHandler", "Date": "2017-09-18T16:09:36Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { u = com.example.john.bignews.User.register(\"sb2\", \"sh\"); } catch (com.example.john.bignews.UserRegisterException e) { listItems.add(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2545/buggy-version/modules.BigNews.app.src.main.java.com.example.john.bignews.PageFragment.java", "BodyUseAPI": ["com.example.john.bignews.User.register(java.lang.String,java.lang.String)"], "Fixed commit": "b82b4a439527ae20a2e0b6e2efdb5cf913176f04", "Url": "https://api.github.com/repos/hockey-for-NOI/TsinghuaBigNews", "Date": "2017-09-09T09:10:15Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { net.minecraft.client.Minecraft.getMinecraft().getSoundHandler().playSound(sound); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1230/buggy-version/src.main.java.com.creativemd.ambientsounds.TickHandler.java", "BodyUseAPI": ["net.minecraft.client.Minecraft.getMinecraft().getSoundHandler()", "net.minecraft.client.Minecraft.getMinecraft()", "net.minecraft.client.Minecraft.getMinecraft().getSoundHandler().playSound(net.minecraft.client.audio.ISound)"], "Fixed commit": "c78bef3be7f57eba1490b5363b645831659bcf08", "Url": "https://api.github.com/repos/CreativeMD/AmbientSounds", "Date": "2016-06-01T20:15:58Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { puf.m2.hms.model.DB.closeConnection(); } catch (puf.m2.hms.db.DbException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8073/buggy-version/src.main.java.puf.m2.hms.model.User.java", "BodyUseAPI": ["puf.m2.hms.model.DB.closeConnection()"], "Fixed commit": "2fb3487a62229925a0cf264e08fa1708fe61c4f6", "Url": "https://api.github.com/repos/pufm2/hms", "Date": "2012-05-06T03:17:42Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { beaconManager.unbind(this); } catch (java.lang.Exception e) { android.util.Log.e(this.getClass().getName(), e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1066/buggy-version/app.src.main.java.uk.ac.edina.floorplan.MainActivity.java", "BodyUseAPI": ["org.altbeacon.beacon.BeaconManager.unbind(uk.ac.edina.floorplan.MainActivity)"], "Fixed commit": "8aa58fcb57e7d11e3eead318334f65446f4d2cbd", "Url": "https://api.github.com/repos/edina/floorplan-viewer", "Date": "2015-07-22T09:23:08Z"},
{"Line": "=>950", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result[i] = org.wso2.carbon.dataservices.core.DBUtils.convertInputParamValue(param.getValue().getValueAsString(), param.getSqlType()); } catch (org.wso2.carbon.dataservices.core.DataServiceFault dataServiceFault) { throw new org.wso2.carbon.dataservices.core.DataServiceFault(dataServiceFault, (((\"Error processing parameter - \" + (param.getName())) + \", Error - \") + (dataServiceFault.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1627/buggy-version/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBUtils.java", "BodyUseAPI": ["org.wso2.carbon.dataservices.core.engine.InternalParam.getSqlType()", "org.wso2.carbon.dataservices.core.DBUtils.convertInputParamValue(param.getValue().getValueAsString(),param.getSqlType())", "param.getValue().getValueAsString()", "org.wso2.carbon.dataservices.core.engine.InternalParam.getValue()"], "Fixed commit": "8ce403d5818e55a137dddcf7e4d3478400d0cf0e", "Url": "https://api.github.com/repos/wso2/carbon-data", "Date": "2015-08-28T12:51:40Z"},
{"Line": "=>776", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_VIEW, uri); intent.putExtra(Browser.EXTRA_APPLICATION_ID, getActivity().getPackageName()); getActivity().startActivity(intent); } catch (java.lang.Exception e) { android.util.Log.e(im.vector.fragments.VectorMessageListFragment.LOG_TAG, (((\"## onURLClick() : has to viewser to open \" + uri) + \" with error\") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1310/buggy-version/vector.src.main.java.im.vector.fragments.VectorMessageListFragment.java", "BodyUseAPI": ["getActivity().getPackageName()", "im.vector.fragments.VectorMessageListFragment.getActivity()", "im.vector.fragments.VectorMessageListFragment.getActivity()", "android.content.Intent.putExtra(Browser.EXTRA_APPLICATION_ID,getActivity().getPackageName())", "getActivity().startActivity(android.content.Intent)"], "Fixed commit": "e0cfbee34779beece23b2287035ba00db08aeae7", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2016-09-26T07:32:48Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { gtTarget.addCoordinateOperation(gd, opList1.inverse()); } catch (org.cts.crs.NonInvertibleOperationException ex) { org.cts.crs.CRSHelper.LOGGER.warn(((\"The grid transformation \" + grid) + \" is not inversible.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1826/buggy-version/src.main.java.org.cts.crs.CRSHelper.java", "BodyUseAPI": ["org.cts.datum.GeodeticDatum.addCoordinateOperation(org.cts.datum.GeodeticDatum,opList1.inverse())", "org.cts.op.CoordinateOperationSequence.inverse()"], "Fixed commit": "666f9c1080f247343334365641ef4daf91e021de", "Url": "https://api.github.com/repos/irstv/CTS", "Date": "2013-05-31T14:12:29Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { transformed = baos.toString(\"utf8\"); } catch (java.io.UnsupportedEncodingException e) { throw new java.lang.IllegalStateException(\"Could not use UTF-8\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5292/buggy-version/converter-core.src.main.java.de.unigoettingen.sub.convert.output.XsltWriter.java", "BodyUseAPI": ["java.io.ByteArrayOutputStream.toString(java.lang.String)"], "Fixed commit": "2510a1dad1ef142c5ea8e5b77e37f8d5560a4588", "Url": "https://api.github.com/repos/subugoe/format-converter", "Date": "2013-08-06T11:13:17Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result = super.onInterceptTouchEvent(ev); } catch (java.lang.IllegalArgumentException e) { e.printStackTrace(); result = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5357/buggy-version/src.main.java.com.sen.lib.support.CustomViewPager.java", "BodyUseAPI": ["android.support.v4.view.ViewPager.onInterceptTouchEvent(android.view.MotionEvent)"], "Fixed commit": "c329f377ac4305c68269eb20d3acaeba042b8a76", "Url": "https://api.github.com/repos/hle999/Senlib", "Date": "2015-05-28T07:22:01Z"},
{"Line": "=>878", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { localTopologyManager.setCacheAvailability(getName(), availability); } catch (java.lang.Exception e) { throw new org.infinispan.commons.CacheException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/277/buggy-version/core.src.main.java.org.infinispan.cache.impl.CacheImpl.java", "BodyUseAPI": ["org.infinispan.cache.impl.CacheImpl<K, V>.getName()", "org.infinispan.topology.LocalTopologyManager.setCacheAvailability(java.lang.String,org.infinispan.partionhandling.AvailabilityMode)"], "Fixed commit": "dce0e0674aa34574afce060134cf7d0884908a3d", "Url": "https://api.github.com/repos/danberindei/infinispan", "Date": "2014-10-20T14:43:22Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { success = myJukeBox.login(username, password); } catch (java.lang.Exception e2) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5742/buggy-version/src.view.GUIManager.java", "BodyUseAPI": ["model.JukeBox.login(java.lang.String,java.lang.String)"], "Fixed commit": "95882c1ec8f562b571ebbee6496ce9c1e8a153a8", "Url": "https://api.github.com/repos/ianrtracey/jukebox", "Date": "2015-10-06T01:40:08Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { double numberAmt = java.lang.Double.parseDouble(stringAmt); if ((Customer.balance) >= numberAmt) { Customer.balance -= numberAmt; java.lang.System.out.println(); java.lang.System.out.println(((\"Success. Your remaining balance is $\" + (Customer.balance)) + \".\")); t = false; }else { java.lang.System.out.println(); java.lang.System.out.println(((\"Withdrawal exceeds balance of $\" + (Customer.balance)) + \". Please enter another amount.\")); } } catch (java.lang.Exception e) { java.lang.System.out.println(); java.lang.System.out.println(\"Please enter a valid number.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6111/buggy-version/src.Customer.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println()", "java.io.PrintStream.println(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.io.PrintStream.println()"], "Fixed commit": "6b8e53d0e69ed6b3678ae821d5bae56d165cbbfa", "Url": "https://api.github.com/repos/lmflatt/control_flow", "Date": "2016-08-31T21:55:17Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tempavailableLanguages = new java.util.ArrayList(tts.getAvailableLanguages()); } catch (java.lang.Exception e) { e.printStackTrace(); tempavailableLanguages = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/977/buggy-version/Android.src.org.droidplanner.android.notifications.TTSNotificationProvider.java", "BodyUseAPI": ["android.speech.tts.TextToSpeech.getAvailableLanguages()"], "Fixed commit": "42cb4812c67d0961f6f9a4632d8a84af3f6d3aa4", "Url": "https://api.github.com/repos/zack1007x2/Tower", "Date": "2015-11-16T03:49:46Z"},
{"Line": "=>497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { label = tmpString[1]; } catch (java.lang.ArrayIndexOutOfBoundsException e) { label = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6984/buggy-version/app.src.main.java.com.lgallardo.qbittorrentclient.JSONParser.java", "BodyUseAPI": [], "Fixed commit": "0f56208106bcb0fb3127081c8568f8eeda961b2a", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Controller", "Date": "2016-04-26T04:52:36Z"},
{"Line": "=>2259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { labelEncoded = java.net.URLEncoder.encode(label.getText().toString(), \"utf-8\"); } catch (java.io.UnsupportedEncodingException e) { labelEncoded = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6984/buggy-version/app.src.main.java.com.lgallardo.qbittorrentclient.MainActivity.java", "BodyUseAPI": ["java.net.URLEncoder.encode(label.getText().toString(),java.lang.String)", "label.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "0f56208106bcb0fb3127081c8568f8eeda961b2a", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Controller", "Date": "2016-04-26T04:52:36Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { AR.insertRecipe(addedRecipe); } catch (com.groupd.cookbook.objects.myException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5345/buggy-version/app.src.main.java.com.groupd.cookbook.presentation.MainActivity.java", "BodyUseAPI": ["com.groupd.cookbook.business.AccessRecipe.insertRecipe(com.groupd.cookbook.objects.Recipe)"], "Fixed commit": "5676d45d31b5bac255b26d000feda35e30e58935", "Url": "https://api.github.com/repos/git4cook/cookbook", "Date": "2017-06-28T19:07:05Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { AR.insertRecipe(addedRecipe); } catch (com.groupd.cookbook.objects.myException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5345/buggy-version/app.src.main.java.com.groupd.cookbook.presentation.searchResult.java", "BodyUseAPI": ["com.groupd.cookbook.business.AccessRecipe.insertRecipe(com.groupd.cookbook.objects.Recipe)"], "Fixed commit": "5676d45d31b5bac255b26d000feda35e30e58935", "Url": "https://api.github.com/repos/git4cook/cookbook", "Date": "2017-06-28T19:07:05Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(200); } catch (java.lang.InterruptedException e) { java.lang.System.out.println((\"Hit Wait failed \" + i)); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1406/buggy-version/src.model.Button.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "f516f0a0a925b79ea8cb2091226b42d175ff244b", "Url": "https://api.github.com/repos/dasada/Blackjack", "Date": "2014-12-06T10:38:03Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { visit.setOPD(java.lang.Long.valueOf(opdNum.getText().toString())); } catch (java.lang.NumberFormatException e) { alert.showAlert(\"Invalid number\", \"Please enter a valid number.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6321/buggy-version/HIP.app.src.main.java.org.mti.hip.ConsultationActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "org.mti.hip.model.Visit.setOPD(java.lang.Long)", "opdNum.getText().toString()", "java.lang.Long.valueOf(opdNum.getText().toString())"], "Fixed commit": "768c1da71804353a2654a3142c87564e6d54d0eb", "Url": "https://api.github.com/repos/MedicalTeams/mti-android-app", "Date": "2015-12-06T01:30:08Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { filename = getContext().getString(R.string.context_logger3_google_config_json_file_name); } catch (java.lang.NoClassDefFoundError e) { android.util.Log.e(getClassName(), \"can not get the file name from R class\", e); filename = \"context_logger3_google_config.json\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/777/buggy-version/clientframework.ClientFramework.src.org.apps8os.contextlogger3.android.probe.ContextLogger3Probe.java", "BodyUseAPI": ["getContext().getString(R.string.context_logger3_google_config_json_file_name)", "org.apps8os.contextlogger3.android.probe.ContextLogger3Probe.getContext()"], "Fixed commit": "bc4a8e677c05f7b42b4307d95a5e72dcda33a4f5", "Url": "https://api.github.com/repos/apps8os/contextlogger3", "Date": "2014-03-02T20:34:49Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (channel.hasTalkPermission(player)) for (final java.lang.String alias : channel.getAliases()) res.put(alias, channel); } catch (final java.lang.Exception e) { java.lang.System.err.println((((\"[CrazyChats] Error checking \" + channel) + \"'s access permissions for player \") + (player.getName()))); java.lang.System.err.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6632/buggy-version/CrazyChats.src.de.st_ddt.crazychats.data.ChatPlayerData.java", "BodyUseAPI": ["java.util.Map<java.lang.String, de.st_ddt.crazychats.channels.ChannelInterface>.put(java.lang.String,de.st_ddt.crazychats.channels.ChannelInterface)", "de.st_ddt.crazychats.channels.ChannelInterface.getAliases()", "de.st_ddt.crazychats.channels.ChannelInterface.hasTalkPermission(org.bukkit.entity.Player)"], "Fixed commit": "81ea203dfc2bbad456d56e895ec8c4bd68ba3ab5", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2013-11-30T12:05:46Z"},
{"Line": "=>843", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { id = java.lang.Long.parseLong(getChild(position).getDomObject().ref); } catch (java.lang.RuntimeException e) { com.taobao.weex.utils.WXLogUtils.e(TAG, com.taobao.weex.utils.WXLogUtils.getStackTrace(e)); id = android.support.v7.widget.RecyclerView.NO_ID; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1672/buggy-version/android.sdk.src.main.java.com.taobao.weex.ui.component.list.WXListComponent.java", "BodyUseAPI": ["com.taobao.weex.ui.component.list.WXListComponent.getChild(int)", "java.lang.Long.parseLong(getChild(position).getDomObject().ref)", "getChild(position).getDomObject()"], "Fixed commit": "dab3cc52ccafebc8aadbe5eabb6422e40472f786", "Url": "https://api.github.com/repos/sospartan/weex", "Date": "2016-07-12T07:59:12Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { game.setRating((org.apache.commons.lang3.StringUtils.isEmpty(rating) ? 0 : (java.lang.Float.valueOf(rating)) / 20.0F)); } catch (java.lang.NumberFormatException nfe) { game.setRating(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3484/buggy-version/src.main.java.daaa.qdscraper.services.api.impl.ScreenScraperApiService.java", "BodyUseAPI": ["java.lang.Float.valueOf(java.lang.String)", "org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)", "daaa.qdscraper.model.Game.setRating((org.apache.commons.lang3.StringUtils.isEmpty(rating) ? 0 : (java.lang.Float.valueOf(rating)) / 20.0F))"], "Fixed commit": "44c84e9563cbef7263127feb4af6d7499b382bfb", "Url": "https://api.github.com/repos/daaa57150/QDScraper", "Date": "2016-11-13T19:18:58Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { v = org.zkoss.zk.ui.Executions.evaluate(comp, el_path, java.lang.Object.class); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5651/buggy-version/zk.src.org.zkoss.zk.ui.sys.ComponentsCtrl.java", "BodyUseAPI": ["org.zkoss.zk.ui.Executions.evaluate(org.zkoss.zk.ui.Component,java.lang.String,java.lang.Class)"], "Fixed commit": "782e344878e251cd05778451c21a80ad33ad5bbb", "Url": "https://api.github.com/repos/chunfuchang/zk", "Date": "2015-05-18T08:23:40Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int searchServiceImplementation = sernet.gs.ui.rcp.main.service.ServiceFactory.lookupSearchService().getImplementationtype(); if ((sernet.verinice.interfaces.search.ISearchService.ES_IMPLEMENTATION_TYPE_DUMMY) == searchServiceImplementation) { this.setEnabled(false); }else if ((checkRights()) && ((sernet.verinice.interfaces.search.ISearchService.ES_IMPLEMENTATION_TYPE_REAL) == searchServiceImplementation)) { this.setEnabled(true); } } catch (java.lang.Exception e) { org.apache.log4j.Logger.getLogger(sernet.gs.ui.rcp.main.actions.OpenSearchViewAction.class).error(\"Can't connect to searchService, disabling searchView\", e); this.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6733/buggy-version/sernet.gs.ui.rcp.main.src.sernet.gs.ui.rcp.main.actions.OpenSearchViewAction.java", "BodyUseAPI": ["sernet.gs.ui.rcp.main.actions.OpenSearchViewAction.setEnabled(boolean)", "sernet.gs.ui.rcp.main.actions.OpenSearchViewAction.checkRights()", "sernet.gs.ui.rcp.main.service.ServiceFactory.lookupSearchService()", "sernet.gs.ui.rcp.main.service.ServiceFactory.lookupSearchService().getImplementationtype()", "sernet.gs.ui.rcp.main.actions.OpenSearchViewAction.setEnabled(boolean)"], "Fixed commit": "c0ac79e0fc10dcbdc66224a8d15f02517e3a3739", "Url": "https://api.github.com/repos/viktorianer/verinice", "Date": "2016-01-26T09:22:12Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (game.getMap().getSquare(columnR, rowR).isMine()) { game.setState(MS_Game.LOSE); mswindow.MS_Panel.showAll = true; mslogic.Logger.logUserMessage(\"User has lost.\"); faceClicked = false; } } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1647/buggy-version/src.mswindow.MS_Panel.java", "BodyUseAPI": ["mslogic.Logger.logUserMessage(java.lang.String)", "mslogic.MS_Game.getMap()", "mslogic.MS_Game.setState(MS_Game.LOSE)", "game.getMap().getSquare(columnR, rowR).isMine()", "game.getMap().getSquare(int,int)"], "Fixed commit": "e5d32e2a17d2360dcebf9a5d011f4a143e7690c3", "Url": "https://api.github.com/repos/TheRealGangsir/MinesweeperProject", "Date": "2016-11-17T19:53:41Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result = method.invoke(target, params); } catch (java.lang.reflect.InvocationTargetException e) { if (((e.getCause()) != null) && ((e.getCause()) instanceof java.lang.Exception)) { throw ((java.lang.Exception) (e.getCause())); }else { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5731/buggy-version/java.src.main.java.org.msgpack.rpc.reflect.ReflectionInvokerBuilder.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])"], "Fixed commit": "d12c83ef38cb1bda6b70229dac63ea80184f6ffc", "Url": "https://api.github.com/repos/msgpack/msgpack-rpc", "Date": "2012-06-15T03:50:00Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { url = ((((((\"http://46.101.189.104/insert.php?beer=\" + (java.net.URLEncoder.encode(beer_name.getText().toString(), \"UTF-8\"))) + \"&price=\") + (beer_price.getText())) + \"&lat=\") + (loc.getLatitude())) + \"&long=\") + (loc.getLongitude()); } catch (java.io.UnsupportedEncodingException uee) { url = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6923/buggy-version/app.src.main.java.olivegumball.bira.AddActivity.java", "BodyUseAPI": ["android.location.Location.getLatitude()", "java.net.URLEncoder.encode(beer_name.getText().toString(),java.lang.String)", "beer_name.getText().toString()", "android.location.Location.getLongitude()", "android.widget.EditText.getText()", "android.widget.EditText.getText()"], "Fixed commit": "645d33622151cd626fc856f6b0633cff63dce603", "Url": "https://api.github.com/repos/rel-s/Bira", "Date": "2016-01-29T04:58:09Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (builder != null) { this.model.parse(((org.deidentifier.arx.aggregates.HierarchyBuilder<T>) (builder))); } } catch (java.lang.Exception e) { this.model = new org.deidentifier.arx.gui.view.impl.wizard.HierarchyWizardModel<T>(datatype, items); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5432/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.wizard.HierarchyWizard.java", "BodyUseAPI": ["org.deidentifier.arx.gui.view.impl.wizard.HierarchyWizardModel<T>.parse(org.deidentifier.arx.aggregates.HierarchyBuilder<?>)"], "Fixed commit": "4fde14fa8823601057b46db0b91a75418ff4374a", "Url": "https://api.github.com/repos/johnpatcher/arx", "Date": "2014-04-16T09:44:13Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (int i = 0; i < (bin_main.Pixel.squares.size()); i++) { bin_main.Square squ = bin_main.Pixel.squares.get(i); squ.drawShape(); } } catch (java.lang.Exception e) { java.lang.System.out.println(\"Saving\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3941/buggy-version/src.bin_main.Pixel.java", "BodyUseAPI": ["bin_main.Square.drawShape()", "java.util.ArrayList<bin_main.Square>.size()", "java.util.ArrayList<bin_main.Square>.get(int)"], "Fixed commit": "b3cfe73e8c960bae4f82e0465076057ddc764d3b", "Url": "https://api.github.com/repos/Simononeill493/oopProject3", "Date": "2016-05-23T14:21:08Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((com.comag.aku.symptomtracker.services.InputPopup.popupLayout) != null) windowManager.removeView(com.comag.aku.symptomtracker.services.InputPopup.popupLayout); } catch (java.lang.IllegalArgumentException e) { android.util.Log.d(\"input_popup\", \"crash while trying to hide non-existing popups\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3853/buggy-version/app.src.main.java.com.comag.aku.symptomtracker.services.InputPopup.java", "BodyUseAPI": ["android.view.WindowManager.removeView(android.view.View)"], "Fixed commit": "ecbd0d965b7394d7d9a61ede0030d7e81ec9e184", "Url": "https://api.github.com/repos/akuvisur/SymptomTracker2", "Date": "2016-01-15T13:09:38Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { array[i] = list.get(i).toString(); } catch (java.lang.NullPointerException e) { array[i] = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8729/buggy-version/Tumordatenbank.src.main.java.fx.controller_SQLManager.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.List<java.lang.Object>.get(int)"], "Fixed commit": "cc7f320cdd0778392aba5703eb401bd3c083809e", "Url": "https://api.github.com/repos/koehler84/DatabaseConvert", "Date": "2015-12-01T19:20:07Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { antwort = in.readLine(); log(antwort); } catch (java.io.IOException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2813/buggy-version/RNChat.src.client.protocol.HCPClient.java", "BodyUseAPI": ["client.protocol.HCPClient.log(java.lang.String)", "java.io.BufferedReader.readLine()"], "Fixed commit": "4a7171e8c913fcb15c89621d9ecb280688a8778b", "Url": "https://api.github.com/repos/RechnerNetzeSoSe2017/RNChat", "Date": "2017-05-11T08:04:51Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Date d = a.parse(studentStr[4].trim()); timestamp = d.getTime(); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5654/buggy-version/src.com.server.data.FileDataService.java", "BodyUseAPI": ["java.util.Date.getTime()", "java.lang.String.trim()", "java.text.DateFormat.parse(java.lang.String)"], "Fixed commit": "bfa842f8977898a2b34c1575cdb39eb223adb304", "Url": "https://api.github.com/repos/dany171/student-solution", "Date": "2017-02-20T02:10:46Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ruleContainer.KieManager.loadAllRules(); } catch (java.io.FileNotFoundException e2) { java.lang.System.out.println(\"Unable to load drools files\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3284/buggy-version/Prototype_FINAL.src.main.java.driver.Driver.java", "BodyUseAPI": ["ruleContainer.KieManager.loadAllRules()"], "Fixed commit": "6a251ac861e1704f7746e768bd064d889cb5afcd", "Url": "https://api.github.com/repos/SirKersh/Walrus", "Date": "2016-12-07T18:59:20Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { inverseOfProp = op.getInverse(); } catch (com.hp.hpl.jena.ontology.ConversionException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6806/buggy-version/src.main.java.edu.isi.karma.modeling.ontology.OntologyHandler.java", "BodyUseAPI": ["com.hp.hpl.jena.ontology.ObjectProperty.getInverse()"], "Fixed commit": "c443544f3ae77ca89930f8ac32d68e7f37645993", "Url": "https://api.github.com/repos/InformationIntegrationGroup/Web-Karma", "Date": "2013-02-25T19:12:45Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { inverseProp = op.getInverse(); } catch (com.hp.hpl.jena.ontology.ConversionException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6806/buggy-version/src.main.java.edu.isi.karma.modeling.ontology.OntologyHandler.java", "BodyUseAPI": ["com.hp.hpl.jena.ontology.ObjectProperty.getInverse()"], "Fixed commit": "c443544f3ae77ca89930f8ac32d68e7f37645993", "Url": "https://api.github.com/repos/InformationIntegrationGroup/Web-Karma", "Date": "2013-02-25T19:12:45Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { errors.add(errorMessageFactory.createDroolsException(e, input.LT(1))); } catch (java.lang.Exception ignored) { errors.add(new org.drools.compiler.compiler.DroolsParserException((\"Unexpected error: \" + (e.getMessage())), e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7210/buggy-version/drools-compiler.src.main.java.org.drools.compiler.lang.ParserHelper.java", "BodyUseAPI": ["org.antlr.runtime.TokenStream.LT(int)", "java.util.List<org.drools.compiler.compiler.DroolsParserException>.add(errorMessageFactory.createDroolsException(e, input.LT(1)))", "org.drools.compiler.lang.DroolsParserExceptionFactory.createDroolsException(java.lang.Exception,input.LT(1))"], "Fixed commit": "6498da712c6d3a7326bacce2834f4084bd352a66", "Url": "https://api.github.com/repos/baldimir/drools", "Date": "2015-09-25T16:23:43Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { date = shortDateParser.parseDateTime(line.substring(\"date:\".length()).trim()).toString(dateOutputFormat); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/650/buggy-version/src.main.java.edu.psu.ist.acs.micro.event.scratch.ConstructMID5NewsDocumentSet.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.length()", "org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)", "java.lang.String.trim()", "shortDateParser.parseDateTime(line.substring(\"date:\".length()).trim()).toString(org.joda.time.format.DateTimeFormatter)"], "Fixed commit": "4c5696f5007a672184b7338301f3395f3b8581ae", "Url": "https://api.github.com/repos/forkunited/micro-event", "Date": "2016-01-28T05:05:06Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { clientSocket.close(); } catch (java.io.IOException ioException) { spaceinvaders.server.network.SocketWrapper.LOGGER.log(java.util.logging.Level.SEVERE, ioException.toString(), ioException); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7733/buggy-version/src.spaceinvaders.server.network.SocketWrapper.java", "BodyUseAPI": ["java.net.Socket.close()"], "Fixed commit": "41f399d98c383cff362a2490c77ae570f98bcab0", "Url": "https://api.github.com/repos/apetenchea/SpaceInvaders", "Date": "2017-02-24T21:41:48Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { image = javax.imageio.ImageIO.read(getClass().getResourceAsStream(\"resources/vulture.png\")); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7425/buggy-version/src.Enemy.java", "BodyUseAPI": ["Enemy.getClass()", "java.lang.Class<? extends Enemy>.getResourceAsStream(java.lang.String)", "javax.imageio.ImageIO.read(java.io.InputStream)"], "Fixed commit": "4e054aeefea3c565e43e10a5c42f428009209bda", "Url": "https://api.github.com/repos/VladYY/Mnementh_Team_Project", "Date": "2017-02-10T19:57:44Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ssli = new sslcheck.core.TLSInfo(((java.security.cert.X509Certificate) (cert)).getSubjectDN().toString(), certs); sslcheck.core.NotaryManager nm = new sslcheck.core.NotaryManager(); sslcheck.core.NotaryRating nr = sslcheck.core.NotaryRating.getInstance(); ssli.validateCertificates(nm); try { if (nr.isPossiblyTrusted()) { sslcheck.server.NotaryServer.log.info(((\"Certificate \" + (ssli.getCertificates().getSHA1Fingerprint())) + \" is valid.\")); return ValidationResult.TRUSTED; }else { sslcheck.server.NotaryServer.log.info(((\"Certificate \" + (ssli.getCertificates().getSHA1Fingerprint())) + \" is invalid.\")); return ValidationResult.UNTRUSTED; } } catch (sslcheck.core.NotaryRatingException e) { sslcheck.server.NotaryServer.log.debug((((\"Error while checking Certificate \" + (ssli.getCertificates().getSHA1Fingerprint())) + \": \") + e)); } } catch (sslcheck.core.TLSCertificateException e1) { sslcheck.server.NotaryServer.log.error((\"Can'parse certificate!!! Error: \" + e1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8328/buggy-version/src.sslcheck.server.NotaryServer.java", "BodyUseAPI": ["sslcheck.core.NotaryRating.isPossiblyTrusted()", "org.apache.logging.log4j.Logger.debug((((\"Error while checking Certificate \" + (ssli.getCertificates().getSHA1Fingerprint())) + \": \") + e))", "sslcheck.core.TLSInfo.getCertificates()", "sslcheck.core.TLSInfo.getCertificates()", "ssli.getCertificates().getSHA1Fingerprint()", "java.security.cert.Certificate.getSubjectDN()", "ssli.getCertificates().getSHA1Fingerprint()", "ssli.getCertificates().getSHA1Fingerprint()", "org.apache.logging.log4j.Logger.info(((\"Certificate \" + (ssli.getCertificates().getSHA1Fingerprint())) + \" is invalid.\"))", "sslcheck.core.NotaryRating.getInstance()", "sslcheck.core.TLSInfo.getCertificates()", "sslcheck.core.TLSInfo.validateCertificates(sslcheck.core.NotaryManager)", "org.apache.logging.log4j.Logger.info(((\"Certificate \" + (ssli.getCertificates().getSHA1Fingerprint())) + \" is valid.\"))", "java.security.Principal.toString()"], "Fixed commit": "9463d65d5ae5ab6cd363752fe1f3990d52d8842a", "Url": "https://api.github.com/repos/letzkus/sslcheck", "Date": "2014-03-10T12:50:56Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { timeline.loadNewer().get(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1431/buggy-version/src.net.miz_hi.smileessence.command.user.UserCommandOpenTimeline.java", "BodyUseAPI": ["timeline.loadNewer().get()", "net.miz_hi.smileessence.model.statuslist.timeline.impl.UserTimeline.loadNewer()"], "Fixed commit": "00c43872f2ed193d2e7133d03e3debc2b9a67002", "Url": "https://api.github.com/repos/laco0416/SmileEssence-Lite", "Date": "2013-12-08T14:15:40Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { firstValue = java.lang.Double.parseDouble(min.getValue()); lastValue = java.lang.Double.parseDouble(max.getValue()); } catch (java.lang.NumberFormatException nfe) { line.put(field, min.getValue()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1051/buggy-version/data-processor.interpolate-linear.src.main.java.com.ericfitchett.car_data_logger.interpolate.LinearInterpolator.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.util.Map.Entry<java.lang.Long, java.lang.String>.getValue()", "java.util.Map.Entry<java.lang.Long, java.lang.String>.getValue()"], "Fixed commit": "aad2262623229d44cd5feeca9a8288771ede8cea", "Url": "https://api.github.com/repos/EricFitchett/car-data-logger", "Date": "2012-11-09T05:09:15Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((ni.supportsMulticast()) && (ni.isUp())) { for (java.net.InterfaceAddress ia : ni.getInterfaceAddresses()) { if ((((ia.getAddress()) instanceof java.net.Inet4Address) && (!(ia.getAddress().isLoopbackAddress()))) && (!(ni.getDisplayName().startsWith(\"vnic\")))) { possibles.add(ni); } } } } catch (java.net.SocketException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7230/buggy-version/activemq-client.src.main.java.org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.java", "BodyUseAPI": ["java.net.NetworkInterface.isUp()", "java.net.NetworkInterface.getDisplayName()", "java.net.NetworkInterface.getInterfaceAddresses()", "java.lang.String.startsWith(java.lang.String)", "java.net.InterfaceAddress.getAddress()", "java.net.InterfaceAddress.getAddress()", "java.net.InetAddress.isLoopbackAddress()", "java.net.NetworkInterface.supportsMulticast()", "java.util.List<java.net.NetworkInterface>.add(java.net.NetworkInterface)"], "Fixed commit": "bd1226b60c399b01f1960af4ee6c296d921dd5e0", "Url": "https://api.github.com/repos/apache/activemq", "Date": "2015-02-11T15:51:55Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startActivityForResult(intent, Constants.CAMERA_PIC_REQUEST); } catch (java.lang.Exception e) { com.araneaapps.android.libs.logger.ALog.w(\"Could not start the camera. Memory is full.\"); com.chute.android.photopickerplus.util.NotificationUtil.makeToast(getApplicationContext(), R.string.toast_memory_full); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3281/buggy-version/ChutePhotoPicker+.src.com.chute.android.photopickerplus.ui.activity.ServicesActivity.java", "BodyUseAPI": ["com.chute.android.photopickerplus.ui.activity.ServicesActivity.startActivityForResult(android.content.Intent,Constants.CAMERA_PIC_REQUEST)"], "Fixed commit": "1f3a74ceb9433896bfbefee5fdc4ace53fcd6b61", "Url": "https://api.github.com/repos/chute/photo-picker-plus-android", "Date": "2014-04-11T10:44:06Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { pixels[(x + (y * (width)))] = 16711935; } catch (java.lang.ArrayIndexOutOfBoundsException e) { java.lang.System.out.println(\"OUT OF SCREEN!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/67/buggy-version/Game.src.com.EnderVizion.game.graphics.Screen.java", "BodyUseAPI": [], "Fixed commit": "ae8ee6af22aa60d7e6a7b6392e1a3c6e33ca46b7", "Url": "https://api.github.com/repos/LukeJansen/Game", "Date": "2014-06-26T13:52:32Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((mCell.getMCC()) == (java.lang.Integer.MAX_VALUE)) mCell.setMCC(java.lang.Integer.valueOf(homeOperator.substring(0, 3))); if ((mCell.getMNC()) == (java.lang.Integer.MAX_VALUE)) mCell.setMNC(java.lang.Integer.valueOf(homeOperator.substring(3, 5))); } catch (java.lang.Exception e) { android.util.Log.i(TAG, (\"homeOperator parse exception - \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6925/buggy-version/app.src.main.java.com.SecUpwN.AIMSICD.utils.Device.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)", "com.SecUpwN.AIMSICD.utils.Cell.getMCC()", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "com.SecUpwN.AIMSICD.utils.Cell.setMNC(java.lang.Integer)", "com.SecUpwN.AIMSICD.utils.Cell.setMCC(java.lang.Integer)", "com.SecUpwN.AIMSICD.utils.Cell.getMNC()", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "ae1cc8602031566cb5b36f584499bb125d21cb74", "Url": "https://api.github.com/repos/tobykurien/Android-IMSI-Catcher-Detector", "Date": "2014-12-07T08:42:07Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String objectString = gson.toJson(Game.INSTANCE.world.gameObjects); browser.AwesomiumHelper.executeJavascript(((\"window.sendReceiveObjects(\" + objectString) + \")\")); } catch (java.lang.IllegalArgumentException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/9034/buggy-version/src.browser.AwesomiumWrapper.java", "BodyUseAPI": ["com.google.gson.Gson.toJson(Game.INSTANCE.world.gameObjects)", "browser.AwesomiumHelper.executeJavascript(java.lang.String)"], "Fixed commit": "a8f28a2ba3eedd9e8a1a835b8fb9c3fcf333b021", "Url": "https://api.github.com/repos/david-westreicher/fungine", "Date": "2013-11-24T20:21:47Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { listener.onLiveResult(next); } catch (java.lang.Exception e) { com.orientechnologies.common.log.OLogManager.instance().warn(this, \"Error executing live query subscriber.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4577/buggy-version/core.src.main.java.com.orientechnologies.orient.core.query.live.OLiveQueryQueueThread.java", "BodyUseAPI": ["com.orientechnologies.orient.core.query.live.OLiveQueryListener.onLiveResult(com.orientechnologies.orient.core.db.record.ORecordOperation)"], "Fixed commit": "8e7c166f120cff8c3576519324b6939895080c26", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-06-15T15:11:08Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { replaceMetadataFiles(item); } catch (java.io.IOException e) { com.surevine.community.gateway.hooks.MetadataPersistingTransportHook.LOG.warning(\"Encountered IOException when attempting to replace metadata files. Aborting transfer\"); break; } catch (java.lang.InterruptedException e) { com.surevine.community.gateway.hooks.MetadataPersistingTransportHook.LOG.warning(\"Encountered InterruptedException when attempting to replace metadata files. Aborting transfer\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8667/buggy-version/gateway-web.src.main.java.com.surevine.community.gateway.hooks.MetadataPersistingTransportHook.java", "BodyUseAPI": ["com.surevine.community.gateway.hooks.MetadataPersistingTransportHook.replaceMetadataFiles(com.surevine.community.gateway.model.TransferItem)"], "Fixed commit": "4277b8960a3ff7fa8c2af3cfdfbf153404f3cd6b", "Url": "https://api.github.com/repos/surevine/gateway", "Date": "2014-09-27T14:23:08Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { s.close(); } catch (java.io.IOException e) { ch.hf.snakeonlan.network.common.Log.log(ch.hf.snakeonlan.client.network.NetworkClient2.CLASS_NAME, ((\"socket \" + (s.getRemoteSocketAddress())) + \" can not be closed\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2395/buggy-version/SnakeOnLan.src.ch.hf.snakeonlan.client.network.NetworkClient2.java", "BodyUseAPI": ["java.net.Socket.close()"], "Fixed commit": "711572a554c816892f15dbb3018eaadbcba481fd", "Url": "https://api.github.com/repos/ryru/SnakeOnLan", "Date": "2014-04-23T23:04:21Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { channel = connectToServer(request, host, port); } catch (java.io.IOException ioe) { org.eclipse.jetty.server.handler.ConnectHandler.LOG.info((\"ConnectHandler: \" + (ioe.getMessage()))); response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR); baseRequest.setHandled(true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7155/buggy-version/jetty-server.src.main.java.org.eclipse.jetty.server.handler.ConnectHandler.java", "BodyUseAPI": ["org.eclipse.jetty.server.handler.ConnectHandler.connectToServer(javax.servlet.http.HttpServletRequest,java.lang.String,int)"], "Fixed commit": "9b2d7bb9bf6c052fa80169f91bfd1d9e1b6f9343", "Url": "https://api.github.com/repos/eclipse/jetty.project", "Date": "2012-06-21T15:50:06Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { input = new java.io.InputStreamReader(new java.io.BufferedInputStream(new java.io.FileInputStream(file)), encoding); } catch (java.lang.Exception e) { throw new org.dom4j.DocumentException(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1793/buggy-version/crafter-search-batch-indexer.src.main.java.org.craftercms.search.batch.utils.XmlUtils.java", "BodyUseAPI": [], "Fixed commit": "f50bf7ac2a5983b2a045ab6e5c1c01f457475b37", "Url": "https://api.github.com/repos/craftercms/search", "Date": "2016-06-17T01:02:11Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.wso2.carbon.throttle.service.impl.ThrottlingDBUtil.initialize(); return org.wso2.carbon.throttle.service.impl.ThrottlingDBUtil.dataSource.getConnection(); } catch (java.lang.Exception e) { throw new java.sql.SQLException(\"Data source is not configured properly.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5126/buggy-version/components.apimgt.org.wso2.carbon.throttling.service.src.main.java.org.wso2.carbon.throttle.service.impl.ThrottlingDBUtil.java", "BodyUseAPI": ["org.wso2.carbon.throttle.service.impl.ThrottlingDBUtil.initialize()", "javax.sql.DataSource.getConnection()"], "Fixed commit": "d340e3923d034f201e84c954702fc6384ec4d4bf", "Url": "https://api.github.com/repos/harsha89/carbon-apimgt", "Date": "2016-02-24T12:21:29Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.sql.DriverManager.registerDriver(new com.mysql.jdbc.Driver()); } catch (java.sql.SQLException e) { throw new servermanager.SMRuntimeException(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2571/buggy-version/src.servermanager.SMDatabase.java", "BodyUseAPI": ["java.sql.DriverManager.registerDriver(com.mysql.jdbc.Driver)"], "Fixed commit": "4158df71ac4f1293ca8a8f0ab36c61adf6d03aa2", "Url": "https://api.github.com/repos/takasurazeem/zombies_servermanager", "Date": "2015-07-07T09:07:24Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.stericson.RootTools.RootTools.offerBusyBox(this); } catch (android.content.ActivityNotFoundException anfe) { this.startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(\"https://play.google.com/store/apps/details?id=stericson.busybox\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4988/buggy-version/src.main.java.de.j4velin.systemappmover.MoverActivity.java", "BodyUseAPI": ["com.stericson.RootTools.RootTools.offerBusyBox(de.j4velin.systemappmover.MoverActivity)"], "Fixed commit": "37e361b9f0e5f789094d39957c64c8ebe0bd62ac", "Url": "https://api.github.com/repos/j4velin/SystemAppMover", "Date": "2016-10-22T08:29:24Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mBitmap = android.graphics.Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_8888); mBuffer = new android.graphics.Canvas(mBitmap); } catch (java.lang.Throwable e) { android.util.Log.i(\"Error\", \"mBitmap DrawingView.java\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8320/buggy-version/app.src.main.java.com.drawstuff.mah.drawstuff.Draw.DrawingView.java", "BodyUseAPI": ["android.graphics.Bitmap.createBitmap(int,int,Bitmap.Config.ARGB_8888)"], "Fixed commit": "a1282aeebd5523b453cfdb1dce3cbd1416fec861", "Url": "https://api.github.com/repos/TimFra/IDKProject_MID2_PFID3", "Date": "2015-05-22T07:42:52Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { canvas.drawColor(-1); canvas.drawBitmap(mBitmap, 0, 0, mBitmapPaint); canvas.drawPath(mPath, mPaint); } catch (java.lang.Throwable e) { android.util.Log.i(\"Error\", \"mBitmap DrawingView.java\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8320/buggy-version/app.src.main.java.com.drawstuff.mah.drawstuff.Draw.DrawingView.java", "BodyUseAPI": ["android.graphics.Canvas.drawPath(android.graphics.Path,android.graphics.Paint)", "android.graphics.Canvas.drawBitmap(android.graphics.Bitmap,int,int,android.graphics.Paint)", "android.graphics.Canvas.drawColor(int)"], "Fixed commit": "a1282aeebd5523b453cfdb1dce3cbd1416fec861", "Url": "https://api.github.com/repos/TimFra/IDKProject_MID2_PFID3", "Date": "2015-05-22T07:42:52Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getDevicePolicyManager().enableSystemApp(getCdmDeviceAdmin(), packageName); } catch (java.lang.IllegalArgumentException e) { android.util.Log.d(org.wso2.iot.agent.services.operation.OperationManagerWorkProfile.TAG, (\"App is not available on the device to enable. \" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2716/buggy-version/client.client.src.main.java.org.wso2.iot.agent.services.operation.OperationManagerWorkProfile.java", "BodyUseAPI": ["org.wso2.iot.agent.services.operation.OperationManagerWorkProfile.getCdmDeviceAdmin()", "org.wso2.iot.agent.services.operation.OperationManagerWorkProfile.getDevicePolicyManager()", "getDevicePolicyManager().enableSystemApp(getCdmDeviceAdmin(),java.lang.String)"], "Fixed commit": "244bee110cb61a7ab794b7e0f13889af2ccb7d3c", "Url": "https://api.github.com/repos/madawas/cdmf-agent-android", "Date": "2017-05-29T07:16:21Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.Iterator<org.bukkit.entity.Entity> itr = ents.iterator(); while (itr.hasNext()) { org.bukkit.entity.Entity ent = itr.next(); if (ent.isDead()) ents.remove(ent); } } catch (java.util.ConcurrentModificationException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5940/buggy-version/src.com.zombies.InGameFeatures.Features.Barrier.java", "BodyUseAPI": ["java.util.Iterator<org.bukkit.entity.Entity>.hasNext()", "java.util.Iterator<org.bukkit.entity.Entity>.next()", "java.util.List<org.bukkit.entity.Entity>.iterator()", "java.util.List<org.bukkit.entity.Entity>.remove(org.bukkit.entity.Entity)", "org.bukkit.entity.Entity.isDead()"], "Fixed commit": "d61cbb4e4eec0d160d76cd2ec85f2bbdac9fb195", "Url": "https://api.github.com/repos/Turkey2349/Call_Of_Minecraft-Zombies", "Date": "2015-04-07T01:53:29Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { slot = java.lang.Integer.parseInt(args[0]); } catch (java.lang.Exception e) { sendMessage(p, \"Invalid Tombstone\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5095/buggy-version/src.net.TheDgtl.Tombstone.Tombstone.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "c247ce02909da1f10bde46a761ea0475e30dd069", "Url": "https://api.github.com/repos/TheDgtl/Tombstone", "Date": "2011-04-11T18:41:40Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { parsedMessage = parseMessage(clientMessage); } catch (java.lang.IllegalStateException e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8082/buggy-version/src.DistGrep.ConnectionHandler.java", "BodyUseAPI": ["DistGrep.ConnectionHandler.parseMessage(java.lang.String)"], "Fixed commit": "90e6081aa67fb5851d46bf5bb3d91ce0c3f16efe", "Url": "https://api.github.com/repos/knusbaum/DistributedGrep", "Date": "2013-09-16T02:24:59Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.get.wazzon.MyApp.PreDefinedEventAnalytics(\"sign_up\", com.get.wazzon.EventChatActivity.eventDetail.getEvent_title(), com.get.wazzon.EventChatActivity.eventID); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5507/buggy-version/app.src.main.java.com.get.wazzon.NewSignUpActivity.java", "BodyUseAPI": ["com.get.wazzon.NewSignUpActivity.UserLoginSignupAction.2.getEvent_title()", "com.get.wazzon.MyApp.PreDefinedEventAnalytics(java.lang.String,com.get.wazzon.EventChatActivity.eventDetail.getEvent_title(),com.get.wazzon.NewSignUpActivity.UserLoginSignupAction.2)"], "Fixed commit": "5b513a7e5bc4636756f94c9a27d44f83bf9a06bd", "Url": "https://api.github.com/repos/AbhishekApp/EventChat", "Date": "2017-04-06T13:02:13Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final java.util.Set<java.util.Locale> languagesSet = tts.getAvailableLanguages(); if ((languagesSet != null) && (!(languagesSet.isEmpty()))) { final java.util.List<java.util.Locale> availableLanguages = new java.util.ArrayList<>(languagesSet); ttsLanguage = availableLanguages.get(0); } } catch (java.lang.NullPointerException e) { timber.log.Timber.e(e, \"Unable to retrieve available languages.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1021/buggy-version/Android.src.org.droidplanner.android.notifications.TTSNotificationProvider.java", "BodyUseAPI": ["android.speech.tts.TextToSpeech.getAvailableLanguages()", "java.util.Set<java.util.Locale>.isEmpty()", "java.util.List<java.util.Locale>.get(int)"], "Fixed commit": "3eecbe29dd1f50b3c9a458e2955f8437fe91c94c", "Url": "https://api.github.com/repos/DroidPlanner/Tower", "Date": "2016-09-21T17:50:14Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String query = \"latest/meta-data/iam/security-credentials/\"; java.net.URL url; url = new java.net.URL(\"http\", com.hazelcast.aws.impl.DescribeInstances.IAM_ROLE_ENDPOINT, query); is = new java.io.InputStreamReader(url.openStream(), \"UTF-8\"); reader = new java.io.BufferedReader(is); awsConfig.setIamRole(reader.readLine()); } catch (java.io.IOException e) { throw new com.hazelcast.config.InvalidConfigurationException(\"Invalid Aws Configuration\"); } finally { if (is != null) { is.close(); } if (reader != null) { reader.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3927/buggy-version/hazelcast-cloud.src.main.java.com.hazelcast.aws.impl.DescribeInstances.java", "BodyUseAPI": ["java.net.URL.openStream()", "com.hazelcast.config.AwsConfig.setIamRole(java.lang.String)", "java.io.BufferedReader.readLine()"], "Fixed commit": "81d7eb6dd80e654f0ca43a61297e599f086b07cf", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2016-05-06T12:28:28Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.documentsAvailable = java.lang.Integer.valueOf(documentsElement.getAttributeValue(\"documentsAvailable\")); } catch (java.lang.NumberFormatException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8816/buggy-version/docear_plugin_services.src.org.docear.plugin.services.features.documentretrieval.DocumentRetrievalController.java", "BodyUseAPI": ["org.docear.plugin.services.xml.DocearXmlElement.getAttributeValue(java.lang.String)", "java.lang.Integer.valueOf(documentsElement.getAttributeValue(\"documentsAvailable\"))"], "Fixed commit": "6e2cf9acaa845a3aabec3e48ddfa4fc0541c7740", "Url": "https://api.github.com/repos/Docear/Desktop", "Date": "2014-06-28T13:49:59Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { checksums = gson.fromJson(json, typeOfHashMap); } catch (com.google.gson.JsonSyntaxException ex) { java.lang.System.err.println(\"WARNING: corrupt cachefile, ignoring and overwriting\"); checksums = new java.util.HashMap<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3808/buggy-version/src.main.java.hy.tmc.core.commands.DownloadExercises.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)"], "Fixed commit": "3bb7658d82969e74a935369176065737b534fbfb", "Url": "https://api.github.com/repos/testmycode/tmc-core", "Date": "2015-08-04T07:52:20Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { wakeLock.release(); android.util.Log.i(\"status\", \"released wakelock\"); } catch (java.lang.Exception ex) { android.util.Log.e(\"wakelock\", \"error releasing wakelock, proceeding normally\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8339/buggy-version/Glass.src.com.socaldevs.timelapse.glass.MainActivity.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,java.lang.String)", "android.os.PowerManager.WakeLock.release()"], "Fixed commit": "07ae23bc8a5af57a9b5933c6500fc3c0fb8d7aa0", "Url": "https://api.github.com/repos/vmagro/GlassTimelapse", "Date": "2013-09-08T06:16:43Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dataRepository.dropDBSchema(conn); } catch (java.sql.SQLException e) { log.debug(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6032/buggy-version/quest-sesame.src.main.java.sesameWrapper.SemanticIndexManager.java", "BodyUseAPI": ["it.unibz.krdb.obda.owlrefplatform.core.abox.RDBMSSIRepositoryManager.dropDBSchema(java.sql.Connection)"], "Fixed commit": "89427e5443da60fddcfb9494a7e822739f9ae3a7", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2014-11-25T10:24:42Z"},
{"Line": "=>1165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((android.view.ViewGroup) (cacheView.getParent())).removeView(cacheView); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6129/buggy-version/LC1.src.main.java.tv.piratemedia.lightcontroler.controller.java", "BodyUseAPI": ["android.view.View.getParent()", "((android.view.ViewGroup) (cacheView.getParent())).removeView(android.view.View)"], "Fixed commit": "da71bf669c962123cdfea267dc7acbf97bd09b1e", "Url": "https://api.github.com/repos/coconup/Light-Controller", "Date": "2015-08-10T17:46:51Z"},
{"Line": "=>951", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((android.view.ViewGroup) (cacheView.getParent())).removeView(cacheView); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6129/buggy-version/LC1.src.main.java.tv.piratemedia.lightcontroler.controller.java", "BodyUseAPI": ["((android.view.ViewGroup) (cacheView.getParent())).removeView(android.view.View)", "android.view.View.getParent()"], "Fixed commit": "da71bf669c962123cdfea267dc7acbf97bd09b1e", "Url": "https://api.github.com/repos/coconup/Light-Controller", "Date": "2015-08-10T17:46:51Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { this.build = ((hudson.model.Build<?, ?>) (build)); } catch (java.lang.ClassCastException e) { this.build = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1493/buggy-version/src.main.java.org.jenkinsci.plugins.jobmail.actions.JobMailBuildAction.java", "BodyUseAPI": [], "Fixed commit": "805743e40d3c15e8ea555452c22ef516cb9fca45", "Url": "https://api.github.com/repos/jenkinsci/job-direct-mail-plugin", "Date": "2013-03-19T16:10:55Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return (recipients + \",\") + (this.project.getPublishersList().get(hudson.plugins.emailext.ExtendedEmailPublisher.class).recipientList); } catch (java.lang.NullPointerException e) { return recipients; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1493/buggy-version/src.main.java.org.jenkinsci.plugins.jobmail.actions.JobMailProjectAction.java", "BodyUseAPI": ["this.project.getPublishersList().get(java.lang.Class)", "hudson.model.AbstractProject<?, ?>.getPublishersList()"], "Fixed commit": "805743e40d3c15e8ea555452c22ef516cb9fca45", "Url": "https://api.github.com/repos/jenkinsci/job-direct-mail-plugin", "Date": "2013-03-19T16:10:55Z"},
{"Line": "=>836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { directSpecification = new com.vrublack.nutrition.console.DirectInputExpressionParser().parse(input); } catch (com.vrublack.nutrition.console.ParseException e) { directSpecification = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2538/buggy-version/src.main.com.vrublack.nutrition.console.Console.java", "BodyUseAPI": ["com.vrublack.nutrition.console.DirectInputExpressionParser.parse(java.lang.String)"], "Fixed commit": "195fe6e2e7253cdba1f25e7cde1b15928126cf4f", "Url": "https://api.github.com/repos/vrublack/TacoShell", "Date": "2017-07-20T21:35:40Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { client.startConnection(loginIP); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8088/buggy-version/325RPG.src.RPG.gui.GUI1.java", "BodyUseAPI": ["RPG.client.Client.startConnection(java.lang.String)"], "Fixed commit": "28b1484ba48f8c262c674cf2bf78300f74ad734a", "Url": "https://api.github.com/repos/chicbot2k/325RPG", "Date": "2016-12-05T00:58:15Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { key.interestOps(((key.interestOps()) | (java.nio.channels.SelectionKey.OP_WRITE))); key.selector().wakeup(); } catch (java.nio.channels.CancelledKeyException e) { org.bitcoinj.net.ConnectionHandler.log.warn((\"Error \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8224/buggy-version/core.src.main.java.org.bitcoinj.net.ConnectionHandler.java", "BodyUseAPI": ["java.nio.channels.SelectionKey.interestOps()", "java.nio.channels.SelectionKey.interestOps(int)", "java.nio.channels.SelectionKey.selector()", "java.nio.channels.Selector.wakeup()"], "Fixed commit": "81a5a1cdbb6a53fef9d6c43850ca6bce0e403905", "Url": "https://api.github.com/repos/RdeWilde/ionj-old", "Date": "2016-04-21T21:40:18Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cX = h.xy.intervalX.compareTo(box.intervalX); cY = h.xy.intervalY.compareTo(box.intervalY); } catch (java.lang.Throwable t) { int z = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3854/buggy-version/src.thirdparty.edu.princeton.cs.algs4.QuadTreeInterval2D.java", "BodyUseAPI": ["h.xy.intervalX.compareTo(box.intervalX)", "h.xy.intervalY.compareTo(box.intervalY)"], "Fixed commit": "878d3efb9aded6bdd6531ce0f6604ffac980d521", "Url": "https://api.github.com/repos/nking/curvature-scale-space-corners-and-transformations", "Date": "2016-07-22T01:20:37Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { owner.drawSprite(g, this.x, this.y, this.cloneFacing, this.cloneAnimState, this.cloneFrame); } finally { g.setComposite(reset); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/20/buggy-version/Ascension.src.blockfighter.client.entities.particles.skills.utility.ParticleUtilityAdrenalineCloneParticle.java", "BodyUseAPI": ["blockfighter.client.entities.particles.skills.utility.ParticleUtilityAdrenalineCloneParticle.drawSprite(java.awt.Graphics2D,this.x,this.y,byte,byte,byte)"], "Fixed commit": "3bdc1779e95fbb6ceecc20cafd160ba27f0bbf7c", "Url": "https://api.github.com/repos/K-Games/Ascension", "Date": "2017-02-02T06:00:32Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (edu.illinois.library.cantaloupe.image.redaction.RedactionService.isEnabled()) { java.util.List<edu.illinois.library.cantaloupe.image.redaction.Redaction> redactions = edu.illinois.library.cantaloupe.image.redaction.RedactionService.redactionsFor(opList.getIdentifier(), getRequest().getHeaders().getValuesMap(), getCanonicalClientIpAddress(), getRequest().getCookies().getValuesMap()); for (edu.illinois.library.cantaloupe.image.redaction.Redaction redaction : redactions) { opList.add(redaction); } }else { edu.illinois.library.cantaloupe.resource.AbstractResource.logger.debug((\"addNonEndpointOperations(): redactions are \" + \"disabled; skipping.\")); } } catch (edu.illinois.library.cantaloupe.script.DelegateScriptDisabledException e) { edu.illinois.library.cantaloupe.resource.AbstractResource.logger.debug((\"addNonEndpointOperations(): delegate script is \" + \"disabled; skipping redactions.\")); } catch (java.lang.Exception e) { edu.illinois.library.cantaloupe.resource.AbstractResource.logger.error(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7430/buggy-version/src.main.java.edu.illinois.library.cantaloupe.resource.AbstractResource.java", "BodyUseAPI": ["getRequest().getCookies().getValuesMap()", "edu.illinois.library.cantaloupe.image.OperationList.getIdentifier()", "edu.illinois.library.cantaloupe.resource.AbstractResource.getRequest()", "getRequest().getHeaders().getValuesMap()", "org.slf4j.Logger.debug(java.lang.String)", "edu.illinois.library.cantaloupe.resource.AbstractResource.getCanonicalClientIpAddress()", "edu.illinois.library.cantaloupe.image.redaction.RedactionService.isEnabled()", "getRequest().getCookies()", "edu.illinois.library.cantaloupe.image.OperationList.add(edu.illinois.library.cantaloupe.image.redaction.Redaction)", "edu.illinois.library.cantaloupe.resource.AbstractResource.getRequest()", "getRequest().getHeaders()", "edu.illinois.library.cantaloupe.image.redaction.RedactionService.redactionsFor(opList.getIdentifier(),getRequest().getHeaders().getValuesMap(),java.lang.String,getRequest().getCookies().getValuesMap())"], "Fixed commit": "31663fb363267e9e104004ededaed32a0e7675e4", "Url": "https://api.github.com/repos/medusa-project/cantaloupe", "Date": "2016-07-16T02:20:45Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.net.DhcpInfo info = org.wahtod.wififixer.AsyncWifiManager.getWifiManager(org.wahtod.wififixer.WFMonitor.ctxt.get()).getDhcpInfo(); org.wahtod.wififixer.WFMonitor._wfmonitor.accesspointIP = android.text.format.Formatter.formatIpAddress(info.gateway); org.wahtod.wififixer.LogUtil.log(context, new java.lang.StringBuilder(context.getString(R.string.cached_ip)).append(org.wahtod.wififixer.WFMonitor._wfmonitor.accesspointIP).toString()); } catch (java.lang.NullPointerException e) { if (org.wahtod.wififixer.prefs.PrefUtil.getFlag(Pref.DEBUG)) org.wahtod.wififixer.LogUtil.log(context, \"Invalid Gateway on ICMP cache\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2472/buggy-version/wififixer.src.org.wahtod.wififixer.WFMonitor.java", "BodyUseAPI": ["org.wahtod.wififixer.AsyncWifiManager.getWifiManager(org.wahtod.wififixer.WFMonitor.ctxt.get())", "org.wahtod.wififixer.LogUtil.log(android.content.Context,java.lang.String)", "java.lang.StringBuilder.toString()", "java.lang.ref.WeakReference<android.content.Context>.get()", "org.wahtod.wififixer.AsyncWifiManager.getWifiManager(org.wahtod.wififixer.WFMonitor.ctxt.get()).getDhcpInfo()", "java.lang.StringBuilder.append(java.lang.String)", "android.content.Context.getString(R.string.cached_ip)", "android.text.format.Formatter.formatIpAddress(info.gateway)"], "Fixed commit": "4a69eed085d0c78a1a96cd9d1f895f276bbed975", "Url": "https://api.github.com/repos/Zanshinmu/Wifi-Fixer", "Date": "2015-06-30T02:56:44Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { inStream = conn.getInputStream(); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Bad username/password\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3607/buggy-version/src.main.java.edu.cshl.schatz.jnomics.manager.client.GlobusPasswordPrompter.java", "BodyUseAPI": ["javax.net.ssl.HttpsURLConnection.getInputStream()"], "Fixed commit": "a5aa56f3d7653863f5572c67e9e9217c8ea69bd3", "Url": "https://api.github.com/repos/jgurtowski/jnomics-manager", "Date": "2012-11-21T15:21:23Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.algohub.engine.judge.JudgeInterface.removeRecursive(tmpDir.toPath()); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5840/buggy-version/src.main.java.org.algohub.engine.judge.JudgeInterface.java", "BodyUseAPI": ["java.io.File.toPath()", "org.algohub.engine.judge.JudgeInterface.removeRecursive(java.nio.file.Path)"], "Fixed commit": "fae6e8c6bc0203767dad3e2f705d07b9360aaef0", "Url": "https://api.github.com/repos/algohub/judge-engine", "Date": "2017-03-23T09:44:01Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { lock.lock(); java.lang.String memberId = this.getMemberIdFromTaskName(taskName, true); this.setServerLocationOfTask(taskName, memberId); this.scheduleTask(memberId, taskName); } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7431/buggy-version/components.ntask.org.wso2.carbon.ntask.core.src.main.java.org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.java", "BodyUseAPI": ["java.util.concurrent.locks.Lock.lock()", "org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.getMemberIdFromTaskName(java.lang.String,boolean)", "org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.scheduleTask(java.lang.String,java.lang.String)", "org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.setServerLocationOfTask(java.lang.String,java.lang.String)"], "Fixed commit": "a8e3aee1bd74b9ec9e1936fff8710ed98fd490c3", "Url": "https://api.github.com/repos/callkalpa/carbon-commons", "Date": "2015-08-05T04:30:20Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mBuilder = new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_launcher2).setContentTitle(title).setTicker(message).setWhen(when).setShowWhen(true).setAutoCancel(true).setVibrate(pattern).setContentText(message); } catch (java.lang.SecurityException se) { android.util.Log.e(edu.kit.isco.kitalumniapp.gcm.GcmIntentService.TAG, (\"Can not initialize NotificationCompat.Builder due security exception: \" + (se.getLocalizedMessage()))); } catch (java.lang.Exception e) { android.util.Log.e(edu.kit.isco.kitalumniapp.gcm.GcmIntentService.TAG, (\"Can not initialize NotificationCompat.Builder due exception: \" + (e.getLocalizedMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1686/buggy-version/app.src.main.java.edu.kit.isco.kitalumniapp.gcm.GcmIntentService.java", "BodyUseAPI": ["new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_launcher2).setContentTitle(title).setTicker(message).setWhen(long)", "new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_launcher2).setContentTitle(title).setTicker(message).setWhen(when).setShowWhen(true).setAutoCancel(boolean)", "new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_launcher2).setContentTitle(java.lang.String)", "new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_launcher2).setContentTitle(title).setTicker(message).setWhen(when).setShowWhen(boolean)", "new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_launcher2).setContentTitle(title).setTicker(message).setWhen(when).setShowWhen(true).setAutoCancel(true).setVibrate(long[])", "new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_launcher2).setContentTitle(title).setTicker(java.lang.String)", "new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_launcher2).setContentTitle(title).setTicker(message).setWhen(when).setShowWhen(true).setAutoCancel(true).setVibrate(pattern).setContentText(java.lang.String)", "android.support.v4.app.NotificationCompat.Builder.setSmallIcon(R.drawable.ic_launcher2)"], "Fixed commit": "edf288a86bec2fa1e8ebc5e454789f63826bc041", "Url": "https://api.github.com/repos/maksim-m/KitAlumniApp-Client", "Date": "2015-03-25T17:04:55Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mBuilder = new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_launcher2).setContentTitle(title).setTicker(message).setWhen(when).setShowWhen(true).setAutoCancel(true).setContentText(message); } catch (java.lang.Exception e) { android.util.Log.e(edu.kit.isco.kitalumniapp.gcm.GcmIntentService.TAG, (\"Can not initialize NotificationCompat.Builder due exception: \" + (e.getLocalizedMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1686/buggy-version/app.src.main.java.edu.kit.isco.kitalumniapp.gcm.GcmIntentService.java", "BodyUseAPI": ["new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_launcher2).setContentTitle(title).setTicker(message).setWhen(when).setShowWhen(true).setAutoCancel(boolean)", "new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_launcher2).setContentTitle(java.lang.String)", "android.support.v4.app.NotificationCompat.Builder.setSmallIcon(R.drawable.ic_launcher2)", "new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_launcher2).setContentTitle(title).setTicker(java.lang.String)", "new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_launcher2).setContentTitle(title).setTicker(message).setWhen(when).setShowWhen(true).setAutoCancel(true).setContentText(java.lang.String)", "new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_launcher2).setContentTitle(title).setTicker(message).setWhen(when).setShowWhen(boolean)", "new android.support.v4.app.NotificationCompat.Builder(context).setSmallIcon(R.drawable.ic_launcher2).setContentTitle(title).setTicker(message).setWhen(long)"], "Fixed commit": "edf288a86bec2fa1e8ebc5e454789f63826bc041", "Url": "https://api.github.com/repos/maksim-m/KitAlumniApp-Client", "Date": "2015-03-25T17:04:55Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((com.laboki.eclipse.plugin.smartsave.saver.EditorContext.canSaveAutomatically()) && (com.laboki.eclipse.plugin.smartsave.saver.EditorContext.canSaveFile(editor))) com.laboki.eclipse.plugin.smartsave.saver.EditorContext.save(editor); } catch (final java.lang.Exception e) { com.laboki.eclipse.plugin.smartsave.saver.EditorContext.save(editor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8011/buggy-version/com.laboki.eclipse.plugin.smartsave.src.com.laboki.eclipse.plugin.smartsave.saver.EditorContext.java", "BodyUseAPI": ["com.laboki.eclipse.plugin.smartsave.saver.EditorContext.canSaveFile(org.eclipse.ui.IEditorPart)", "com.laboki.eclipse.plugin.smartsave.saver.EditorContext.canSaveAutomatically()", "com.laboki.eclipse.plugin.smartsave.saver.EditorContext.save(org.eclipse.ui.IEditorPart)"], "Fixed commit": "0c0183abb22b0c7e6d5c318578ba805fdcd94e69", "Url": "https://api.github.com/repos/mystilleef/eclipse4-smartsave", "Date": "2013-04-24T05:23:55Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return java.util.UUID.fromString(s); } catch (java.lang.IllegalArgumentException ex) { throw new java.lang.IllegalArgumentException((\"invalid UUID: \" + s)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3132/buggy-version/cadcDALI.src.ca.nrc.cadc.dali.util.UUIDFormat.java", "BodyUseAPI": ["java.util.UUID.fromString(java.lang.String)"], "Fixed commit": "3b272c810b92e5e7fac9cec79fc26bf37b4f3064", "Url": "https://api.github.com/repos/opencadc/dal", "Date": "2016-05-20T23:48:18Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { img0 = core.getLastTaggedImage(); } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2607/buggy-version/src.org.bdgp.OpenHiCAMM.Modules.SlideSurveyor.java", "BodyUseAPI": ["mmcorej.CMMCore.getLastTaggedImage()"], "Fixed commit": "2aa4714a12ff76aa390ff395c844acda55847fb0", "Url": "https://api.github.com/repos/bdgp/OpenHiCAMM", "Date": "2017-02-02T22:21:49Z"},
{"Line": "=>1137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { date = mysqlDateTimeFormatter.parse((((((((dateOfRegistration) + \" \") + (curDate.getHours())) + \":\") + (curDate.getMinutes())) + \":\") + (curDate.getSeconds()))); o.setObsDatetime(date); } catch (java.text.ParseException e) { date = curDate; e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6115/buggy-version/omod.src.main.java.org.openmrs.module.kenyaemr.fragment.controller.patient.EditPatientFragmentController.java", "BodyUseAPI": ["java.util.Date.getMinutes()", "java.util.Date.getHours()", "org.openmrs.Obs.setObsDatetime(java.util.Date)", "java.util.Date.getSeconds()", "java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "c619968e6ed1bec8bc5ed715a2049b992291151d", "Url": "https://api.github.com/repos/hispindia/his-hiv-emr", "Date": "2016-10-04T11:53:21Z"},
{"Line": "=>1217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { date = mysqlDateTimeFormatter.parse((((((((dateOfRegistration) + \" \") + (curDate.getHours())) + \":\") + (curDate.getMinutes())) + \":\") + (curDate.getSeconds()))); o.setObsDatetime(date); } catch (java.text.ParseException e) { date = curDate; e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6115/buggy-version/omod.src.main.java.org.openmrs.module.kenyaemr.fragment.controller.patient.EditPatientFragmentController.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)", "org.openmrs.Obs.setObsDatetime(java.util.Date)", "java.util.Date.getSeconds()", "java.util.Date.getMinutes()", "java.util.Date.getHours()"], "Fixed commit": "c619968e6ed1bec8bc5ed715a2049b992291151d", "Url": "https://api.github.com/repos/hispindia/his-hiv-emr", "Date": "2016-10-04T11:53:21Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { containerObj.create(); } catch (org.javaswift.joss.exception.AlreadyExistsException e) { com.ibm.stocator.fs.swift.SwiftAPIClient.LOG.debug(\"Create container failed. {} was already exists. \", container); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5310/buggy-version/src.main.java.com.ibm.stocator.fs.swift.SwiftAPIClient.java", "BodyUseAPI": ["org.javaswift.joss.model.Container.create()"], "Fixed commit": "aad1891904f4d444eae09da759689ac342980eb8", "Url": "https://api.github.com/repos/djalova/stocator", "Date": "2016-12-15T13:44:13Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.net.URL url = org.jsoar.util.UrlTools.lookupClassPathURL(path.toPortableString()); if (url != null) { externalExists = true; } } catch (java.lang.Exception e) { externalExists = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4932/buggy-version/com.soartech.soar.ide.core.src.com.soartech.soar.ide.core.model.impl.TclFileReferenceBuilder.java", "BodyUseAPI": ["org.jsoar.util.UrlTools.lookupClassPathURL(path.toPortableString())", "org.eclipse.core.runtime.IPath.toPortableString()"], "Fixed commit": "971fd6a512bb09a8dc44e7d28e844fc1ddba7ccd", "Url": "https://api.github.com/repos/soartech/soaride", "Date": "2016-08-25T15:04:27Z"},
{"Line": "=>686", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { userMovieDao.merge(userMovie); } catch (org.springframework.dao.DataIntegrityViolationException ex) { java.lang.System.out.println(\"UserMovieDao persist error!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8338/buggy-version/src.at.fh.swenga.controller.MovieController.java", "BodyUseAPI": ["at.fh.swenga.controller.UserMovieDao.merge(at.fh.swenga.controller.UserMovie)"], "Fixed commit": "a6c506e5e679fd8ffa3840bf06a7f43ee093e167", "Url": "https://api.github.com/repos/MrOrange1992/oreely", "Date": "2017-06-21T20:37:32Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.lang.Integer.parseInt(new java.lang.String(chars, 0, i), 16); } catch (java.lang.NumberFormatException e) { throw new java.lang.IllegalStateException(((\"Invalid chunk-size (\" + (e.getMessage())) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4372/buggy-version/rawhttp-core.src.main.java.com.athaydes.rawhttp.core.EagerBodyReader.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String,int)"], "Fixed commit": "7dff9206647cba5e490200d357ea40b211bf154a", "Url": "https://api.github.com/repos/renatoathaydes/rawhttp", "Date": "2017-12-05T19:50:40Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.System.in.read(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2022/buggy-version/swen422project.src.swen422.SignLanguageMain.java", "BodyUseAPI": ["java.io.InputStream.read()"], "Fixed commit": "6e148960de8948fd793ca4bc9dd4ca958875164b", "Url": "https://api.github.com/repos/eman3220/swen422project", "Date": "2015-09-23T07:17:37Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { delegate.ensureIsValid(); } catch (org.sejda.model.exception.TaskExecutionException tee) { boolean noTextFound = org.apache.commons.lang3.StringUtils.isBlank(getTextByPage(1)); if (noTextFound) { throw tee; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3074/buggy-version/sejda-sambox.src.main.java.org.sejda.impl.sambox.component.split.SplitByTextChangesOutputStrategy.java", "BodyUseAPI": ["org.sejda.model.split.SplitPages.ensureIsValid()"], "Fixed commit": "378e420ea8039ad0e35388241c3fc9d21059288a", "Url": "https://api.github.com/repos/torakiki/sejda", "Date": "2016-08-30T20:32:58Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { clone = gitUtils.clone(cloneFolder, uri.getValue()); } finally { gitUtils.close(clone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5628/buggy-version/git.impl.src.main.java.org.jboss.forge.addon.git.ui.GitCloneCommand.java", "BodyUseAPI": ["org.jboss.forge.addon.git.GitUtils.clone(org.jboss.forge.addon.resource.DirectoryResource,uri.getValue())", "org.jboss.forge.addon.ui.input.UIInput<java.lang.String>.getValue()"], "Fixed commit": "76578b760c4d0374fe84454a0a1df73dffae9f6a", "Url": "https://api.github.com/repos/gastaldi/core", "Date": "2014-04-04T02:16:26Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result = org.springframework.util.ReflectionUtils.invokeMethod(method, target, args); } catch (java.lang.Exception e) { try { org.springframework.util.ReflectionUtils.handleReflectionException(e); } catch (java.lang.reflect.UndeclaredThrowableException ute) { throw ute.getUndeclaredThrowable(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1776/buggy-version/alien4cloud-core.src.main.java.alien4cloud.plugin.aop.ChildContextAspectsManager.java", "BodyUseAPI": ["org.springframework.util.ReflectionUtils.invokeMethod(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])"], "Fixed commit": "4babacc31e281d6a46c4c27a4e6cca29f4587003", "Url": "https://api.github.com/repos/alien4cloud/alien4cloud", "Date": "2016-04-11T13:36:00Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.lang.Long.parseLong(s); } catch (java.lang.Exception e) { return java.lang.Long.MAX_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2266/buggy-version/src.simulator.Factory.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "73a36602d9d77b5d27225c0cdad1ecf0e386b2a5", "Url": "https://api.github.com/repos/petergodfrey/TradeSimulator", "Date": "2013-05-03T05:33:49Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { player.getSettings().setPluginsEnabled(true); } catch (java.lang.Exception err) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7962/buggy-version/src.com.dokgu.joindota.WatchLivestream.java", "BodyUseAPI": ["player.getSettings().setPluginsEnabled(boolean)", "android.webkit.WebView.getSettings()"], "Fixed commit": "84e1739d9d13a2e5d3ae6996995c2b71a667e5be", "Url": "https://api.github.com/repos/dokgu/JoinDOTA", "Date": "2012-04-02T17:07:12Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { player.getSettings().setPluginsEnabled(true); } catch (java.lang.Exception err) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7962/buggy-version/src.com.dokgu.joindota.WatchVOD.java", "BodyUseAPI": ["android.webkit.WebView.getSettings()", "player.getSettings().setPluginsEnabled(boolean)"], "Fixed commit": "84e1739d9d13a2e5d3ae6996995c2b71a667e5be", "Url": "https://api.github.com/repos/dokgu/JoinDOTA", "Date": "2012-04-02T17:07:12Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { reader = new java.io.InputStreamReader(clazz.getResourceAsStream(fileName), \"UTF8\"); com.leon.util.IToken token = new com.leon.cc.CCToken(reader); while (token.has_next()) { list.add(token.next_token()); } } catch (java.io.IOException e) { throw e; } finally { if (reader != null) { reader.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7627/buggy-version/llsp.src.com.leon.util.Utils.java", "BodyUseAPI": ["java.util.List<com.leon.util.ISymbol>.add(token.next_token())", "com.leon.util.IToken.next_token()", "java.lang.Class<?>.getResourceAsStream(java.lang.String)", "com.leon.util.IToken.has_next()"], "Fixed commit": "8facb2fe75ffea4bbefb18ecef611f09e7765322", "Url": "https://api.github.com/repos/leonchen83/sparser", "Date": "2013-09-14T06:01:02Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { departmentDao.addOrEdit(department); } catch (com.departments.exceptions.DBUtilException ex) { throw new com.departments.exceptions.AppException(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6312/buggy-version/src.main.java.com.departments.service.DepartmentServiceImpl.java", "BodyUseAPI": ["com.departments.dao.DepartmentDaoImpl.addOrEdit(com.departments.entity.Department)"], "Fixed commit": "1baea7fbe8ccb45d3ef6f0491e891a56c25b31e6", "Url": "https://api.github.com/repos/Shark21ua/DepartmentsProject", "Date": "2017-12-05T10:33:44Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return departmentDao.all(); } catch (com.departments.exceptions.DBUtilException ex) { throw new com.departments.exceptions.AppException(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6312/buggy-version/src.main.java.com.departments.service.DepartmentServiceImpl.java", "BodyUseAPI": ["com.departments.dao.DepartmentDaoImpl.all()"], "Fixed commit": "1baea7fbe8ccb45d3ef6f0491e891a56c25b31e6", "Url": "https://api.github.com/repos/Shark21ua/DepartmentsProject", "Date": "2017-12-05T10:33:44Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return departmentDao.findByName(name); } catch (com.departments.exceptions.DBUtilException ex) { throw new com.departments.exceptions.AppException(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6312/buggy-version/src.main.java.com.departments.service.DepartmentServiceImpl.java", "BodyUseAPI": ["com.departments.dao.DepartmentDaoImpl.findByName(java.lang.String)"], "Fixed commit": "1baea7fbe8ccb45d3ef6f0491e891a56c25b31e6", "Url": "https://api.github.com/repos/Shark21ua/DepartmentsProject", "Date": "2017-12-05T10:33:44Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return departmentDao.findById(id); } catch (com.departments.exceptions.DBUtilException ex) { throw new com.departments.exceptions.AppException(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6312/buggy-version/src.main.java.com.departments.service.DepartmentServiceImpl.java", "BodyUseAPI": ["com.departments.dao.DepartmentDaoImpl.findById(java.lang.Integer)"], "Fixed commit": "1baea7fbe8ccb45d3ef6f0491e891a56c25b31e6", "Url": "https://api.github.com/repos/Shark21ua/DepartmentsProject", "Date": "2017-12-05T10:33:44Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fromPoint.setExpectedType(toPoint.getExpectedType()); } catch (java.lang.ClassCastException e) { if (!(toPoint.getExpectedType().canBeAssignedFrom(fromPoint.getExpectedType()))) { int result = javax.swing.JOptionPane.showConfirmDialog(panel, ((((\"The source type is \" + (fromPoint.getExpectedType())) + \", the destination type is \") + (toPoint.getExpectedType())) + \". Do you want to proceed and create the connection anyway?\"), \"Type Mismatch\", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.WARNING_MESSAGE); if (result == (javax.swing.JOptionPane.NO_OPTION)) { return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5200/buggy-version/src.actions.global.globalactions.ConstructDataLineSegmentGlobalAction.java", "BodyUseAPI": ["paintcomponents.data.DataToPoint.getExpectedType()", "paintcomponents.data.DataFromPoint.setExpectedType(toPoint.getExpectedType())"], "Fixed commit": "4b4c0735fd0ee1cd0d7c88dd146cdd792538ef28", "Url": "https://api.github.com/repos/UCSDOalads/JavaSketchPad", "Date": "2017-05-13T19:41:30Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { serviceRegisterStatus.pass(); } catch (java.lang.Exception e) { com.loukou.jconsul.spring.ServiceRegisterLifecycle.LOG.warn(\"consul serivce pass error, msg: {}\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8987/buggy-version/jconsul-spring.src.main.java.com.loukou.jconsul.spring.ServiceRegisterLifecycle.java", "BodyUseAPI": ["com.loukou.jconsul.client.AgentRequestBuilder.RegisterStatus.pass()"], "Fixed commit": "0691500bd251fc37344be104e1f9247ff68c72a3", "Url": "https://api.github.com/repos/kdlan/jconsul", "Date": "2015-03-25T08:46:36Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { serviceRegisterStatus.fail(\"service stopped\"); } catch (java.lang.Exception e) { com.loukou.jconsul.spring.ServiceRegisterLifecycle.LOG.warn(\"consul serivce fail error, msg: {}\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8987/buggy-version/jconsul-spring.src.main.java.com.loukou.jconsul.spring.ServiceRegisterLifecycle.java", "BodyUseAPI": ["com.loukou.jconsul.client.AgentRequestBuilder.RegisterStatus.fail(java.lang.String)"], "Fixed commit": "0691500bd251fc37344be104e1f9247ff68c72a3", "Url": "https://api.github.com/repos/kdlan/jconsul", "Date": "2015-03-25T08:46:36Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mNumPhotos = java.lang.Integer.parseInt(com.brousalis.NetUtils.getHTTPData((((getString(R.string.actual_data_root)) + (getString(R.string.photo_path))) + (mID)))); verifyImageCache(mID); } catch (java.lang.NumberFormatException e) { mConnectionBroke = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8918/buggy-version/Android.src.com.brousalis.ItemDetails.java", "BodyUseAPI": ["com.brousalis.ItemDetails.AsyncImageChecker.getString(R.string.actual_data_root)", "com.brousalis.ItemDetails.AsyncImageChecker.getString(R.string.photo_path)", "com.brousalis.NetUtils.getHTTPData((((getString(R.string.actual_data_root)) + (getString(R.string.photo_path))) + (mID)))", "java.lang.Integer.parseInt(com.brousalis.NetUtils.getHTTPData((((getString(R.string.actual_data_root)) + (getString(R.string.photo_path))) + (mID))))", "com.brousalis.ItemDetails.AsyncImageChecker.verifyImageCache(int)"], "Fixed commit": "2deb7209fb9c87d5a0f8438c19b16d978f2e21c5", "Url": "https://api.github.com/repos/Mobile-Trail-Mapping/Android", "Date": "2011-02-16T00:40:33Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { giveChanceRewardItemSiteReward(user); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/760/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.VoteSite.java", "BodyUseAPI": ["com.Ben12345rocks.VotingPlugin.Objects.VoteSite.giveChanceRewardItemSiteReward(com.Ben12345rocks.VotingPlugin.Objects.User)"], "Fixed commit": "7fe08a40cb88aca5cad964aaf3e04960b196c2f8", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-03-24T21:49:42Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rewardmsg = rewardmsg.replace(\"%items%\", com.Ben12345rocks.VotingPlugin.Utils.getInstance().makeStringList(com.Ben12345rocks.VotingPlugin.Utils.getInstance().convert(com.Ben12345rocks.VotingPlugin.Objects.VoteSite.configVoteSites.getItems(siteName)))); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/760/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.VoteSite.java", "BodyUseAPI": ["com.Ben12345rocks.VotingPlugin.Utils.getInstance()", "java.lang.String.replace(java.lang.String,com.Ben12345rocks.VotingPlugin.Utils.getInstance().makeStringList(com.Ben12345rocks.VotingPlugin.Utils.getInstance().convert(com.Ben12345rocks.VotingPlugin.Objects.VoteSite.configVoteSites.getItems(siteName))))", "com.Ben12345rocks.VotingPlugin.Utils.getInstance()", "com.Ben12345rocks.VotingPlugin.Utils.getInstance().convert(com.Ben12345rocks.VotingPlugin.Objects.VoteSite.configVoteSites.getItems(siteName))", "com.Ben12345rocks.VotingPlugin.Config.ConfigVoteSites.getItems(java.lang.String)", "com.Ben12345rocks.VotingPlugin.Utils.getInstance().makeStringList(com.Ben12345rocks.VotingPlugin.Utils.getInstance().convert(com.Ben12345rocks.VotingPlugin.Objects.VoteSite.configVoteSites.getItems(siteName)))"], "Fixed commit": "7fe08a40cb88aca5cad964aaf3e04960b196c2f8", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-03-24T21:49:42Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(isItemTypeEqualTo(\"SN\"))) { return false; } eu.europa.ec.fisheries.uvms.rules.service.business.fact.SalesDocumentFact salesDocument = includedSalesDocuments.get(0); eu.europa.ec.fisheries.uvms.rules.service.business.fact.SalesPriceType totalSalesPrice = salesDocument.getTotalSalesPrice(); boolean totalSalesPriceIsNull = (((totalSalesPrice == null) || (isEmpty(totalSalesPrice.getChargeAmounts()))) || ((totalSalesPrice.getChargeAmounts().get(0)) == null)) || ((totalSalesPrice.getChargeAmounts().get(0).getValue()) == null); boolean allProductsHaveAZeroPrice = doAllProductHaveAZeroPrice(salesDocument); return totalSalesPriceIsNull && allProductsHaveAZeroPrice; } catch (java.lang.NullPointerException | java.lang.IndexOutOfBoundsException ex) { log.error(\"Could not evaluate that the report has a total sales price, if the report is a sales note and products are withdrawn from the market\", ex); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/441/buggy-version/service.src.main.java.eu.europa.ec.fisheries.uvms.rules.service.business.fact.SalesReportFact.java", "BodyUseAPI": ["totalSalesPrice.getChargeAmounts().get(int)", "eu.europa.ec.fisheries.uvms.rules.service.business.fact.SalesPriceType.getChargeAmounts()", "eu.europa.ec.fisheries.uvms.rules.service.business.fact.SalesDocumentFact.getTotalSalesPrice()", "eu.europa.ec.fisheries.uvms.rules.service.business.fact.SalesPriceType.getChargeAmounts()", "totalSalesPrice.getChargeAmounts().get(int)", "java.util.List<eu.europa.ec.fisheries.uvms.rules.service.business.fact.SalesDocumentFact>.get(int)", "eu.europa.ec.fisheries.uvms.rules.service.business.fact.SalesPriceType.getChargeAmounts()", "eu.europa.ec.fisheries.uvms.rules.service.business.fact.SalesReportFact.isItemTypeEqualTo(java.lang.String)", "eu.europa.ec.fisheries.uvms.rules.service.business.fact.SalesReportFact.doAllProductHaveAZeroPrice(eu.europa.ec.fisheries.uvms.rules.service.business.fact.SalesDocumentFact)", "totalSalesPrice.getChargeAmounts().get(0).getValue()", "eu.europa.ec.fisheries.uvms.rules.service.business.fact.SalesReportFact.isEmpty(totalSalesPrice.getChargeAmounts())"], "Fixed commit": "09773e4d33a06bd8d75066f6c4e9a02e4363690b", "Url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP", "Date": "2017-11-23T09:48:04Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { answer = consumer.Util.sendAndGetMessage(new consumer.Message(MessageType.RegisterConsumer, null), serverAddress, consumer.Consumer.serverPort); } catch (java.io.IOException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3522/buggy-version/src.consumer.Consumer.java", "BodyUseAPI": ["consumer.Util.sendAndGetMessage(consumer.Message,java.net.InetAddress,int)"], "Fixed commit": "07c6cde5dde792e4addcca322730abb9b692d58d", "Url": "https://api.github.com/repos/TINF15ITNS/MB", "Date": "2016-07-22T14:03:06Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { answer = consumer.Util.sendAndGetMessage(new consumer.Message(MessageType.DeregisterConsumer, new consumer.PayloadDeregisterConsumer(consumerID)), serverAddress, consumer.Consumer.serverPort); } catch (java.io.IOException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3522/buggy-version/src.consumer.Consumer.java", "BodyUseAPI": ["consumer.Util.sendAndGetMessage(consumer.Message,java.net.InetAddress,int)"], "Fixed commit": "07c6cde5dde792e4addcca322730abb9b692d58d", "Url": "https://api.github.com/repos/TINF15ITNS/MB", "Date": "2016-07-22T14:03:06Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startActivity(sendEmailIntent); } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, R.string.failed_to_send_email, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4563/buggy-version/Mezu.app.src.main.java.money.mezu.mezu.EditBudgetActivity.java", "BodyUseAPI": ["money.mezu.mezu.EditBudgetActivity.1.startActivity(android.content.Intent)"], "Fixed commit": "ee265dd047eace5be571a27815626fdd3969b8f6", "Url": "https://api.github.com/repos/Assafbs/Mezu", "Date": "2017-08-11T14:09:04Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { orchestrate(); } catch (java.lang.Throwable t) { handleError(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3594/buggy-version/xdstools2.src.main.java.gov.nist.toolkit.xdstools2.client.widgets.buttons.AbstractOrchestrationButton.java", "BodyUseAPI": ["gov.nist.toolkit.xdstools2.client.widgets.buttons.AbstractOrchestrationButton.orchestrate()"], "Fixed commit": "56ed08598f036f01d2500684cf062049f3c96e11", "Url": "https://api.github.com/repos/usnistgov/iheos-toolkit2", "Date": "2017-09-07T16:54:30Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.jsoup.select.Elements comments = document.getElementById(\"abstract\").getElementsByTag(\"textarea\"); if ((comments != null) && ((comments.size()) > 0)) { org.jsoup.nodes.Element content = comments.first(); editorComment = content.text(); } } catch (java.lang.Exception e) { com.dreamy.handler.DangDangCrawlerHandler.log.error(\"\u89e3\u6790 \u7f16\u8f91\u63a8\u8350 \u5f02\u5e38\", e); } finally { bean.setEditorComment(editorComment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2139/buggy-version/crawler.src.main.java.com.dreamy.handler.DangDangCrawlerHandler.java", "BodyUseAPI": ["document.getElementById(\"abstract\").getElementsByTag(java.lang.String)", "org.jsoup.select.Elements.first()", "org.jsoup.nodes.Document.getElementById(java.lang.String)", "org.jsoup.nodes.Element.text()", "org.jsoup.select.Elements.size()"], "Fixed commit": "ee919503ab8b2508c3ea0f223a9b383a1e995ea0", "Url": "https://api.github.com/repos/dreamyteam/dreamy_ip", "Date": "2016-04-25T04:03:42Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { _myEvents.proxy().onChange(value()); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException((((((((((((\"Problem with property:\" + (path())) + \":\") + (name())) + \":\") + (value())) + \":\") + (value().getClass().getName())) + \":\") + (_myMember.value())) + \":\") + (_myMember.value().getClass().getName())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5277/buggy-version/cc-control.src.main.java.cc.creativecomputing.control.handles.CCPropertyHandle.java", "BodyUseAPI": ["_myEvents.proxy().onChange(Type)", "cc.creativecomputing.core.events.CCListenerManager<cc.creativecomputing.control.handles.CCPropertyListener>.proxy()", "cc.creativecomputing.control.handles.CCPropertyHandle<Type>.value()"], "Fixed commit": "29ae0d87d0437bc18ab2813054cfeb1bdb302152", "Url": "https://api.github.com/repos/texone/creativecomputing", "Date": "2015-11-10T09:13:30Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(500); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7361/buggy-version/src.main.java.edu.caltech.networksimulator.Link.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "9368ec7c0021866613a65dac2f235d5a5bf75481", "Url": "https://api.github.com/repos/TheNumenorean/NetworkSimulator", "Date": "2016-10-29T05:32:49Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((currentGame.getPlayerLimit()) == (currentGame.getPlayers().size())) { return true; }else { return false; } } catch (java.lang.Exception e) { java.lang.System.out.println(\"Current game is null\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1492/buggy-version/app.src.main.java.com.example.jacobcovey.Presenters.GameLobbyPresenter.java", "BodyUseAPI": ["shared.classes.Game.getPlayers()", "currentGame.getPlayers().size()", "shared.classes.Game.getPlayerLimit()"], "Fixed commit": "e75a558e327b27074f926caf6d7a43f7b3716b5d", "Url": "https://api.github.com/repos/jacobcovey/CS_340_project", "Date": "2017-05-31T17:19:19Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { showProject(projectId, historyToken.getPage(), historyToken.getEntityId()); } catch (java.lang.Exception ex) { log.error(\"Opening project failed:\", projectId, ex); showUserMode(historyToken.getPage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/897/buggy-version/src.main.java.scrum.client.workspace.Navigator.java", "BodyUseAPI": ["scrum.client.workspace.Navigator.showProject(java.lang.String,historyToken.getPage(),historyToken.getEntityId())", "scrum.client.workspace.history.HistoryToken.getPage()", "scrum.client.workspace.history.HistoryToken.getEntityId()"], "Fixed commit": "02ccfba0cf24894d0e61a75185d7630568def687", "Url": "https://api.github.com/repos/Kunagi/kunagi", "Date": "2013-12-19T16:32:07Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { setDefaultCounts(); } catch (java.io.FileNotFoundException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7917/buggy-version/src.imp.gui.IntervalLearningPanel.java", "BodyUseAPI": ["imp.gui.IntervalLearningPanel.setDefaultCounts()"], "Fixed commit": "a269385bb812a8cc21125fee3462d9a275ebe8be", "Url": "https://api.github.com/repos/Impro-Visor/Impro-Visor", "Date": "2015-08-05T23:30:18Z"},
{"Line": "=>801", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { where = java.lang.Integer.parseInt(params[3]); } catch (java.lang.NumberFormatException e) { main.Application.targetOS.println(\"Sikertelen. A valto nem allithato a kert helyzetbe, mert nincs ilyen helyzet.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8047/buggy-version/ProjlabProto.src.main.Application.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "534b8ffde5824c13ada8b9a5d9cff4d53900b938", "Url": "https://api.github.com/repos/ProjlabFlash/proto", "Date": "2017-04-19T03:04:11Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((java.lang.System.getProperty(\"java.version\").charAt(2)) < '8') pokebankmanager.PokeBankManagerGUI.main(args); else pokebankmanager.PokeBankManagerGUI_FX.main(args); } catch (java.lang.Exception e) { java.lang.System.out.println(e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6042/buggy-version/src.pokebankmanager.LaunchGUI.java", "BodyUseAPI": ["java.lang.System.getProperty(java.lang.String)", "pokebankmanager.PokeBankManagerGUI.main(java.lang.String[])", "pokebankmanager.PokeBankManagerGUI_FX.main(java.lang.String[])", "java.lang.String.charAt(int)"], "Fixed commit": "4b136adac1b770353a664a07d45686d17a42be4c", "Url": "https://api.github.com/repos/spencerk80/Pokebank-Manager", "Date": "2016-10-18T07:01:22Z"},
{"Line": "=>969", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if ((!(highPriority.isEmpty())) && (!(lowPriority.isEmpty()))) { transportHandler.transmit(highPriority); transportHandler.transmit(lowPriority); }else { for (final org.jboss.errai.bus.client.api.messaging.Message message : storedMessages) { try { throw new org.jboss.errai.bus.client.api.base.NoSubscribersToDeliverTo(message.getSubject()); } catch (org.jboss.errai.bus.client.api.base.NoSubscribersToDeliverTo ex) { if ((message.getErrorCallback()) != null) { message.getErrorCallback().error(message, ex); } } } } } finally { deferredMessages.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5335/buggy-version/errai-bus.src.main.java.org.jboss.errai.bus.client.framework.ClientMessageBusImpl.java", "BodyUseAPI": ["org.jboss.errai.bus.client.framework.transports.TransportHandler.transmit(java.util.List<org.jboss.errai.bus.client.api.messaging.Message>)", "org.jboss.errai.bus.client.api.messaging.Message.getErrorCallback()", "org.jboss.errai.bus.client.api.messaging.Message.getErrorCallback()", "org.jboss.errai.bus.client.framework.transports.TransportHandler.transmit(java.util.List<org.jboss.errai.bus.client.api.messaging.Message>)", "java.util.List<org.jboss.errai.bus.client.api.messaging.Message>.isEmpty()", "org.jboss.errai.bus.client.api.messaging.Message.getSubject()", "message.getErrorCallback().error(org.jboss.errai.bus.client.api.messaging.Message,org.jboss.errai.bus.client.api.base.NoSubscribersToDeliverTo)", "java.util.List<org.jboss.errai.bus.client.api.messaging.Message>.isEmpty()"], "Fixed commit": "42b0d7b1088e951a09888679d6591f2c76170634", "Url": "https://api.github.com/repos/BenDol/errai", "Date": "2017-11-14T13:37:47Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { final de.zib.gndms.neomodel.gorfx.Task task = getTask(session); final de.zib.gndms.neomodel.gorfx.Task st = session.findTask(subTaskId); fta = new de.zib.gndms.taskflows.filetransfer.server.logic.FileTransferTaskAction(getEmf().createEntityManager(), getDao(), st.getTaskling()); getInjector().injectMembers(fta); fta.setCredentialProvider(getCredentialProvider()); fta.setEmf(getEmf()); session.success(); } finally { session.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5856/buggy-version/taskflows.interSliceTransfer.server.src.de.zib.gndms.taskflows.interslicetransfer.server.logic.InterSliceTransferTaskAction.java", "BodyUseAPI": ["de.zib.gndms.neomodel.common.Session.success()", "de.zib.gndms.taskflows.interslicetransfer.server.logic.InterSliceTransferTaskAction.getCredentialProvider()", "de.zib.gndms.taskflows.interslicetransfer.server.logic.InterSliceTransferTaskAction.getEmf()", "de.zib.gndms.taskflows.interslicetransfer.server.logic.InterSliceTransferTaskAction.getTask(de.zib.gndms.neomodel.common.Session)", "de.zib.gndms.taskflows.interslicetransfer.server.logic.InterSliceTransferTaskAction.getEmf()", "de.zib.gndms.taskflows.filetransfer.server.logic.FileTransferTaskAction.setEmf(getEmf())", "de.zib.gndms.neomodel.common.Session.findTask(java.lang.String)", "getInjector().injectMembers(de.zib.gndms.taskflows.filetransfer.server.logic.FileTransferTaskAction)", "getEmf().createEntityManager()", "de.zib.gndms.taskflows.interslicetransfer.server.logic.InterSliceTransferTaskAction.getInjector()", "de.zib.gndms.neomodel.gorfx.Task.getTaskling()", "de.zib.gndms.taskflows.interslicetransfer.server.logic.InterSliceTransferTaskAction.getDao()", "de.zib.gndms.taskflows.filetransfer.server.logic.FileTransferTaskAction.setCredentialProvider(getCredentialProvider())"], "Fixed commit": "6ef2f56771dcb690c4cf3c1ecd640964a61d2463", "Url": "https://api.github.com/repos/zibhub/GNDMS", "Date": "2012-06-04T19:13:54Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { final de.zib.gndms.neomodel.gorfx.Task task = getTask(session); final de.zib.gndms.neomodel.gorfx.Task st = session.findTask(subTaskId); if (st.getTaskState().equals(TaskState.FINISHED)) { ((de.zib.gndms.taskflows.interslicetransfer.client.model.InterSliceTransferResult) (task.getPayload())).populate(((de.zib.gndms.taskflows.filetransfer.client.model.FileTransferResult) (st.getPayload()))); task.setTaskState(TaskState.FINISHED); if (altTaskState) task.setAltTaskState(null); }else throw ((java.lang.RuntimeException) (st.getPayload())); session.success(); } finally { session.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5856/buggy-version/taskflows.interSliceTransfer.server.src.de.zib.gndms.taskflows.interslicetransfer.server.logic.InterSliceTransferTaskAction.java", "BodyUseAPI": ["de.zib.gndms.neomodel.common.Session.success()", "de.zib.gndms.neomodel.gorfx.Task.getTaskState()", "de.zib.gndms.neomodel.gorfx.Task.getPayload()", "((de.zib.gndms.taskflows.interslicetransfer.client.model.InterSliceTransferResult) (task.getPayload())).populate(((de.zib.gndms.taskflows.filetransfer.client.model.FileTransferResult) (st.getPayload())))", "de.zib.gndms.taskflows.interslicetransfer.server.logic.InterSliceTransferTaskAction.getTask(de.zib.gndms.neomodel.common.Session)", "de.zib.gndms.neomodel.common.Session.findTask(java.lang.String)", "de.zib.gndms.neomodel.gorfx.Task.getPayload()", "de.zib.gndms.neomodel.gorfx.Task.setAltTaskState(<nulltype>)", "st.getTaskState().equals(TaskState.FINISHED)", "de.zib.gndms.neomodel.gorfx.Task.setTaskState(TaskState.FINISHED)", "de.zib.gndms.neomodel.gorfx.Task.getPayload()"], "Fixed commit": "6ef2f56771dcb690c4cf3c1ecd640964a61d2463", "Url": "https://api.github.com/repos/zibhub/GNDMS", "Date": "2012-06-04T19:13:54Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { report = reportDao.getReport(xid); } catch (org.springframework.dao.IncorrectResultSizeDataAccessException e) { importContext.getResult().addGenericMessage(\"reports.emport.duplicateXids\", xid); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3406/buggy-version/Reports.src.com.serotonin.m2m2.reports.ReportEmportDefinition.java", "BodyUseAPI": ["com.serotonin.m2m2.reports.ReportDao.getReport(java.lang.String)"], "Fixed commit": "6125141ac97b08e7fbaa2e7cfc33a1ba93511ac8", "Url": "https://api.github.com/repos/infiniteautomation/ma-modules-public", "Date": "2016-05-24T20:06:45Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Date d = df.parse(token); if (d != null) { return d; } } catch (java.text.ParseException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3516/buggy-version/src.parser.Parser.java", "BodyUseAPI": ["java.text.DateFormat.parse(java.lang.String)"], "Fixed commit": "3cadffaff7ed250e3dee01ceb8e5feb4f6d59e43", "Url": "https://api.github.com/repos/cs2103aug2015-w11-3j/main", "Date": "2015-10-06T14:54:08Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cur.wait(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5253/buggy-version/src.BankersAlgorithm.Banker.java", "BodyUseAPI": ["java.lang.Thread.wait()"], "Fixed commit": "d839fc4878fb14d8c0d30a793e9d1feab6707de7", "Url": "https://api.github.com/repos/cman131/TheMunchingThinkers", "Date": "2014-10-10T17:37:41Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { currentCustomer = getIntent().getExtras().getParcelable(\"currentCustomer\"); } catch (android.os.BadParcelableException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/469/buggy-version/Team-1-Project.WindowReplacement.src.org.acm.windowreplacement.WindowActivity2.java", "BodyUseAPI": ["org.acm.windowreplacement.WindowActivity2.getIntent()", "getIntent().getExtras().getParcelable(java.lang.String)", "getIntent().getExtras()"], "Fixed commit": "355e052ca790b0e60311d845856db85582596f11", "Url": "https://api.github.com/repos/pdxacm/Android-Projects", "Date": "2013-12-13T01:48:14Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { albumArtUri = android.net.Uri.parse(cursor.getString(cursor.getColumnIndexOrThrow(MediaStore.Audio.Artists.Albums.ALBUM_ART))); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8709/buggy-version/src.com.ideabag.playtunes.adapter.ArtistsOneAdapter.java", "BodyUseAPI": ["android.net.Uri.parse(cursor.getString(cursor.getColumnIndexOrThrow(MediaStore.Audio.Artists.Albums.ALBUM_ART)))", "android.database.Cursor.getColumnIndexOrThrow(MediaStore.Audio.Artists.Albums.ALBUM_ART)", "android.database.Cursor.getString(cursor.getColumnIndexOrThrow(MediaStore.Audio.Artists.Albums.ALBUM_ART))"], "Fixed commit": "cd5628c29451666e1b783bb27e78724f5ac9904e", "Url": "https://api.github.com/repos/jeffington/PlayTunes", "Date": "2014-08-04T20:03:42Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { doc = org.jsoup.Jsoup.connect(url).get(); } catch (java.net.UnknownHostException e) { dialog.dispose(); throw new java.io.IOException(\"Unable to connect to Internet. Please try again.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8620/buggy-version/FDA.src.fda.Scrapers.FandomScraper.java", "BodyUseAPI": ["org.jsoup.Jsoup.connect(java.lang.String)", "org.jsoup.Jsoup.connect(url).get()"], "Fixed commit": "07cf193dd9319cd5980e0533b45841e512f64ee6", "Url": "https://api.github.com/repos/JonathanMeans/FDA", "Date": "2014-12-07T20:40:28Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { maxDate = df.parse(cal.toString()); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5902/buggy-version/SMA.src.pk.lums.edu.sma.processing.ProcessClusterThread.java", "BodyUseAPI": ["java.text.DateFormat.parse(java.lang.String)", "java.util.Calendar.toString()"], "Fixed commit": "17a3782d73c0ae8111bf79e9386ad7bf6d7bee3c", "Url": "https://api.github.com/repos/jawadtahir/Social-Media-Analytics", "Date": "2015-05-04T21:24:44Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { data = java.nio.file.Files.readAllBytes(path); m_friendsLists = ((java.util.HashMap<java.lang.String, java.util.Set<java.lang.String>>) (il.ac.technion.cs.sd.lib.Serializer.deserialize(data))); } catch (java.nio.file.NoSuchFileException e) { m_friendsLists.replaceAll(( k, v) -> new java.util.HashSet<java.lang.String>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2789/buggy-version/app-msg-server.src.main.java.il.ac.technion.cs.sd.app.msg.TTalkServer.java", "BodyUseAPI": ["java.nio.file.Files.readAllBytes(java.nio.file.Path)", "il.ac.technion.cs.sd.lib.Serializer.deserialize(byte[])"], "Fixed commit": "5f98ef1972ff6f8524e65248ea56fd4dc06d8a94", "Url": "https://api.github.com/repos/TalZahavi/TTalk", "Date": "2015-06-06T12:45:18Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { data = java.nio.file.Files.readAllBytes(path); m_outgoingMessages = ((java.util.HashMap<java.lang.String, java.util.List<il.ac.technion.cs.sd.lib.MessageWrapper>>) (il.ac.technion.cs.sd.lib.Serializer.deserialize(data))); } catch (java.nio.file.NoSuchFileException e) { m_outgoingMessages.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2789/buggy-version/app-msg-server.src.main.java.il.ac.technion.cs.sd.app.msg.TTalkServer.java", "BodyUseAPI": ["java.nio.file.Files.readAllBytes(java.nio.file.Path)", "il.ac.technion.cs.sd.lib.Serializer.deserialize(byte[])"], "Fixed commit": "5f98ef1972ff6f8524e65248ea56fd4dc06d8a94", "Url": "https://api.github.com/repos/TalZahavi/TTalk", "Date": "2015-06-06T12:45:18Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cc.deletegPerm(perm, perms.get(perm)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1171/buggy-version/src.net.estinet.gFeatures.Feature.gRanks.Perms.Cleanup.java", "BodyUseAPI": ["net.estinet.gFeatures.Feature.gRanks.Retrieve.deletegPerm(java.lang.String,java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "4b612d8dc95ab56c2ecd2be9dc987ff5f8615b8a", "Url": "https://api.github.com/repos/EstiNet/gFeatures", "Date": "2015-12-07T21:46:57Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cc.addgPerm(perm, perms.get(perm)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1171/buggy-version/src.net.estinet.gFeatures.Feature.gRanks.Perms.Cleanup.java", "BodyUseAPI": ["net.estinet.gFeatures.Feature.gRanks.Retrieve.addgPerm(java.lang.String,java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "4b612d8dc95ab56c2ecd2be9dc987ff5f8615b8a", "Url": "https://api.github.com/repos/EstiNet/gFeatures", "Date": "2015-12-07T21:46:57Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { crawlPage(new wood.poulos.webcrawler.WebCrawler.CrawlerData(page, 0)); } catch (java.lang.IllegalArgumentException e) { wood.poulos.webcrawler.WebCrawler.logger.error(e.getMessage()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4227/buggy-version/src.main.java.wood.poulos.webcrawler.WebCrawler.java", "BodyUseAPI": ["wood.poulos.webcrawler.WebCrawler.crawlPage(wood.poulos.webcrawler.WebCrawler.CrawlerData)"], "Fixed commit": "2159b84fd3cffd1e97ae6a4e68551983712ca064", "Url": "https://api.github.com/repos/dumptruckman/webcrawler", "Date": "2017-11-30T03:57:04Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { group = com.klinker.android.send_message.Transaction.settings.getGroup(); } catch (java.lang.Exception e) { group = android.preference.PreferenceManager.getDefaultSharedPreferences(context).getBoolean(\"group_message\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5539/buggy-version/src.com.android.mms.transaction.MmsMessageSender.java", "BodyUseAPI": ["com.klinker.android.send_message.Transaction.settings.getGroup()"], "Fixed commit": "2edfe1f7fa4e2234952ca46e586bc9bf0859552c", "Url": "https://api.github.com/repos/lauren7249/android-smsmms", "Date": "2014-11-23T23:55:09Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { group = com.klinker.android.send_message.Transaction.settings.getGroup(); } catch (java.lang.Exception e) { group = android.preference.PreferenceManager.getDefaultSharedPreferences(mContext).getBoolean(\"group_message\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5539/buggy-version/src.com.android.mms.transaction.RetrieveTransaction.java", "BodyUseAPI": ["com.klinker.android.send_message.Transaction.settings.getGroup()"], "Fixed commit": "2edfe1f7fa4e2234952ca46e586bc9bf0859552c", "Url": "https://api.github.com/repos/lauren7249/android-smsmms", "Date": "2014-11-23T23:55:09Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { guid = new com.filenet.api.util.Id(idParts[1]); } catch (com.filenet.api.exception.EngineRuntimeException e) { com.google.enterprise.adaptor.filenet.FileNetAdaptor.logger.log(java.util.logging.Level.FINE, (\"Invalid DocId: \" + id), e); resp.respondNotFound(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6978/buggy-version/src.com.google.enterprise.adaptor.filenet.FileNetAdaptor.java", "BodyUseAPI": [], "Fixed commit": "9339a5f17159c1a51e20c594632429fc229862d6", "Url": "https://api.github.com/repos/googlegsa/filenet", "Date": "2017-06-17T20:10:09Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { setText(text.toString().toUpperCase(java.util.Locale.ROOT)); } catch (java.lang.NoSuchFieldError e) { setText(text.toString().toUpperCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8617/buggy-version/library.src.com.actionbarsherlock.internal.widget.CapitalizingButton.java", "BodyUseAPI": ["java.lang.String.toUpperCase(java.util.Locale)", "com.actionbarsherlock.internal.widget.CapitalizingButton.setText(java.lang.String)", "java.lang.CharSequence.toString()"], "Fixed commit": "c5ef4d9ea430181bfef2475b956652e2ec047a12", "Url": "https://api.github.com/repos/Bigbublik/ActionBarSherlock", "Date": "2012-11-24T21:28:11Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { enchantId = java.lang.Integer.parseInt(args[1]); enchantLevel = ((args.length) == 3) ? java.lang.Integer.parseInt(args[2]) : 1; } catch (java.lang.Exception e) { sender.sendMessage(new cn.nukkit.event.TranslationContainer(\"commands.generic.usage\", this.usageMessage)); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2987/buggy-version/src.main.java.cn.nukkit.command.defaults.EnchantCommand.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "ce52fae33d2b18aa405c9da5ed14822562041b92", "Url": "https://api.github.com/repos/Snake1999/Nukkit", "Date": "2016-01-23T00:55:33Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { createServer(); } finally { synchronized(this) { this.notifyAll(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5282/buggy-version/maude-backend.src.main.java.org.kframework.krun.ioserver.main.IOServer.java", "BodyUseAPI": ["org.kframework.krun.ioserver.main.IOServer.createServer()"], "Fixed commit": "864e4ea3a2b276d52e2b79a37dd9da9a5d4f00e8", "Url": "https://api.github.com/repos/yilongli/k", "Date": "2014-11-06T19:02:01Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { Client.CheckersLobby.serverConnection.getTblStatus(myName, t); } catch (java.rmi.RemoteException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7941/buggy-version/CEG-4110-Checkers-Client.src.Client.CheckersLobby.java", "BodyUseAPI": ["RMIConnection.Interfaces.RMIServerInterface.getTblStatus(java.lang.String,int)"], "Fixed commit": "e071e8586d08a288caa40b29c331b74fe7711c2f", "Url": "https://api.github.com/repos/bollingerscott/CEG-4110-Checkers-Client", "Date": "2014-11-21T18:34:16Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(500); } catch (java.lang.InterruptedException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1549/buggy-version/src.kamisado.client.anmeldefenster.AnmeldefensterController.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "697f3ba37be78ba9c1ca88823595d88c833fab87", "Url": "https://api.github.com/repos/RaphaelaRey/Adventure", "Date": "2017-08-11T16:04:04Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { implAssets = resourceImpl.getClass().getDeclaredField(\"mAssets\"); } catch (java.lang.NoSuchFieldException e) { implAssets = resourceImpl.getClass().getSuperclass().getDeclaredField(\"mAssets\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1765/buggy-version/Android.DevSample.small.src.main.java.net.wequick.small.util.ReflectAccelerator.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getDeclaredField(java.lang.String)", "java.lang.Object.getClass()"], "Fixed commit": "8b81daecd0bdeb3b397d775be488d40aa1fd64df", "Url": "https://api.github.com/repos/wequick/Small", "Date": "2016-12-26T09:55:50Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { validOctaveNumberCheck(octaveNumber); } catch (com.modulo7.common.InvalidOctaveRangeException ie) { ie.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4219/buggy-version/src.main.java.com.modulo7.musicstatmodels.Note.java", "BodyUseAPI": ["com.modulo7.musicstatmodels.Note.validOctaveNumberCheck(int)"], "Fixed commit": "40d7e24719eeeae5968fde47a421f5fc0f5fc70d", "Url": "https://api.github.com/repos/Khalian/Modulo7", "Date": "2015-07-18T22:15:04Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { context = com.google.gwt.i18n.client.Dictionary.getDictionary(pl.djvuhtml5.client.Djvu_html5.CONTEXT_GLOBAL_VARIABLE); } catch (java.util.MissingResourceException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7199/buggy-version/djvu-html5.src.pl.djvuhtml5.client.Djvu_html5.java", "BodyUseAPI": ["com.google.gwt.i18n.client.Dictionary.getDictionary(java.lang.String)"], "Fixed commit": "0fbf908066a4b6956d077c852a23d98fc85ccf4c", "Url": "https://api.github.com/repos/mateusz-matela/djvu-html5", "Date": "2016-01-04T17:00:53Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { flagImage.setImageResource(iconFlag); } catch (android.content.res.Resources e) { android.util.Log.d(\"ERROR ICON\", \"Cannot load the icon, please select the icon again!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7227/buggy-version/app.src.main.java.br.com.inmypocket.fragments.CardFragment.java", "BodyUseAPI": ["android.widget.ImageView.setImageResource(int)"], "Fixed commit": "02fc0b84d18568ae3f84b62dfdffc42f1b88299d", "Url": "https://api.github.com/repos/kevinmelo/InMyPocket", "Date": "2016-07-29T20:03:30Z"},
{"Line": "=>3257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getITelephony().toggleLTE(LTE); } catch (android.os.RemoteException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3894/buggy-version/telephony.java.android.telephony.TelephonyManager.java", "BodyUseAPI": ["android.telephony.TelephonyManager.getITelephony()", "com.android.internal.telephony.ITelephony.toggleLTE(boolean)"], "Fixed commit": "1b18e3fa22ccc833dfad463d23aa8f0bb806133f", "Url": "https://api.github.com/repos/DennySPB/platform_frameworks_base", "Date": "2017-08-10T12:00:47Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { companyProfile = sql.getSingleResult(); } catch (javax.persistence.NoResultException nre) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/992/buggy-version/src.main.java.com.team.treasure.DAO_Profile.java", "BodyUseAPI": ["org.hibernate.query.Query<com.team.treasure.CompanyProfile>.getSingleResult()"], "Fixed commit": "b12ed0cbed7fb368f781ad6d75879fb8920a52a3", "Url": "https://api.github.com/repos/emmanuelthegrey/FoundHarvest", "Date": "2016-12-13T18:10:38Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { return new com.macklive.objects.Team(e); } catch (com.macklive.exceptions.EntityMismatchException e1) { e1.printStackTrace(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5792/buggy-version/src.com.macklive.storage.DataManager.java", "BodyUseAPI": [], "Fixed commit": "4c2985dccf41bd0059b0c65ada439d821d410804", "Url": "https://api.github.com/repos/nmcmahon1215/MackLive", "Date": "2015-10-20T02:52:28Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.ArrayList<DTO.LoanDTO> loans = new java.util.ArrayList<>(); java.sql.PreparedStatement stm = CONN.prepareStatement(sql); stm.setString(1, keyword); stm.setString(2, keyword); stm.setString(3, keyword); stm.setString(4, keyword); stm.setString(5, keyword); java.sql.ResultSet result = stm.executeQuery(); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4799/buggy-version/src.java.DAL.LoanDAO.java", "BodyUseAPI": ["java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.Connection.prepareStatement(java.lang.String)", "java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.PreparedStatement.executeQuery()", "java.sql.PreparedStatement.setString(int,java.lang.String)"], "Fixed commit": "02fb773103044149df7db78d3c66de53c9993db8", "Url": "https://api.github.com/repos/Quayed/komponentMis", "Date": "2016-04-23T18:47:13Z"},
{"Line": "=>1747", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { float tempSpeed = java.lang.Float.parseFloat(workingText.toString()); if ((motionType == (global.Fields.MTYPE_LINEAR)) || (motionType == (global.Fields.MTYPE_CIRCULAR))) { tempSpeed /= robot.RoboticArm.motorSpeed; }else { tempSpeed /= 100.0F; } m.setSpdMod(global.RMath.clamp(tempSpeed, 0.01F, 1.0F)); } catch (java.lang.NumberFormatException NFEx) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2584/buggy-version/RobotRun.src.core.RobotRun.java", "BodyUseAPI": ["global.RMath.clamp(float,float,float)", "java.lang.Float.parseFloat(java.lang.String)", "java.lang.StringBuilder.toString()", "programming.MotionInstruction.setSpdMod(global.RMath.clamp(tempSpeed, 0.01F, 1.0F))"], "Fixed commit": "3e686f8504567efcd510512b3d15eddae33b5291", "Url": "https://api.github.com/repos/skuhl/RobotRun", "Date": "2017-06-15T17:53:39Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { twitterAuthClient.onActivityResult(requestCode, resultCode, data); } catch (java.lang.RuntimeException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8335/buggy-version/app.src.main.java.com.example.mjokic.quizapp.activities.LoginActivity.java", "BodyUseAPI": ["com.twitter.sdk.android.core.identity.TwitterAuthClient.onActivityResult(int,int,android.content.Intent)"], "Fixed commit": "168ba426a2a51762e836a6cf567026959fbcf044", "Url": "https://api.github.com/repos/mjokic/QuizAndroidApp", "Date": "2017-09-25T08:54:48Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { while (maps.next()) { int modelid = maps.getInt(getFromIdColumn()); int foreignid = maps.getInt(getToIdColumn()); getIdListOnModel(idToModelMap.get(modelid)).add(foreignid); } } catch (database.DatabaseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8282/buggy-version/src.main.java.infrastructure.map.BaseListMapper.java", "BodyUseAPI": ["database.IDatabaseResult.next()", "database.IDatabaseResult.getInt(java.lang.String)", "java.util.HashMap<java.lang.Integer, TModel>.get(int)", "infrastructure.map.BaseListMapper<TModel>.getIdListOnModel(TModel)", "database.IDatabaseResult.getInt(java.lang.String)", "infrastructure.map.BaseListMapper<TModel>.getFromIdColumn()", "infrastructure.map.BaseListMapper<TModel>.getToIdColumn()", "java.util.ArrayList<java.lang.Integer>.add(int)"], "Fixed commit": "e485d536d56ec65c74577b5d0c5505d2ccdd3744", "Url": "https://api.github.com/repos/MichSchli/DataApi", "Date": "2016-05-08T16:01:54Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((zk.exists(fullPath, false)) == null) { return getValue(key, com.iquanwai.platon.biz.util.zk.ZKConfigUtils.CONFIG_PATH); }else { return getArchValue(key); } } catch (java.lang.Exception e) { logger.error(e.getLocalizedMessage(), e); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/652/buggy-version/platon-biz.src.main.java.com.iquanwai.platon.biz.util.zk.ZKConfigUtils.java", "BodyUseAPI": ["com.iquanwai.platon.biz.util.zk.ZKConfigUtils.getValue(java.lang.String,java.lang.String)", "org.apache.zookeeper.ZooKeeper.exists(java.lang.String,boolean)", "com.iquanwai.platon.biz.util.zk.ZKConfigUtils.getArchValue(java.lang.String)"], "Fixed commit": "baea061562912d904b5dfe002f65db07d843a76d", "Url": "https://api.github.com/repos/sfwind/platon", "Date": "2017-05-01T12:56:57Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { withdraw(java.lang.Double.parseDouble(withdrawField.getText())); } catch (java.lang.NumberFormatException e) { alert(\"Please enter an ammount to withdraw field.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1202/buggy-version/src.ATM.AccountScreen.java", "BodyUseAPI": ["ATM.AccountScreen.withdraw(double)", "java.lang.Double.parseDouble(java.lang.String)", "javax.swing.JTextField.getText()"], "Fixed commit": "67c70c6d73331cadc2a0379816bbd039aef1acac", "Url": "https://api.github.com/repos/if2159/Group_Project_Mar-2016", "Date": "2016-04-12T05:55:00Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { statement.executeUpdate(builder.toString()); } catch (java.sql.SQLException e) { it.mineblock.mbcore.Chat.getLogger(Errors.EXCEPTION.getError(Errors.DB_GENERIC_ERROR.getError(e)), \"severe\"); if (Reference.debug) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4734/buggy-version/src.main.java.it.mineblock.mbcore.MySQL.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.sql.Statement.executeUpdate(java.lang.String)"], "Fixed commit": "072eafe6872e2fe10439cd3b937fbe8e52a26f87", "Url": "https://api.github.com/repos/LoreSchaeffer/MBCore", "Date": "2017-08-27T18:54:27Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return formula(); } catch (com.tony.fitch.Parser.ParseError error) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5091/buggy-version/src.com.tony.fitch.Parser.java", "BodyUseAPI": ["com.tony.fitch.Parser.formula()"], "Fixed commit": "fff08977dc065f7be97f2c82e3bbc45a51bfa7d9", "Url": "https://api.github.com/repos/TonyMalz/aParser", "Date": "2017-10-31T17:40:52Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return getRepos((((repo.getOwner().getLogin()) + \"/\") + (repo.getName()))); } catch (java.lang.Exception ex) { org.jenkinsci.plugins.ghprb.GhprbRootAction.logger.log(java.util.logging.Level.WARNING, \"Can't get a valid owner for repo\"); java.lang.String repoUrl = repo.getUrl(); if (repoUrl.endsWith(\"/\")) repoUrl = repoUrl.substring(0, ((repoUrl.length()) - 2)); int slashIndex = repoUrl.lastIndexOf('/'); java.lang.String owner = repoUrl.substring((slashIndex + 1)); org.jenkinsci.plugins.ghprb.GhprbRootAction.logger.log(java.util.logging.Level.INFO, (((\"Parsed \" + owner) + \" from \") + repoUrl)); return getRepos(((owner + \"/\") + (repo.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7874/buggy-version/src.main.java.org.jenkinsci.plugins.ghprb.GhprbRootAction.java", "BodyUseAPI": ["repo.getOwner().getLogin()", "org.kohsuke.github.GHRepository.getName()", "org.kohsuke.github.GHRepository.getOwner()", "org.jenkinsci.plugins.ghprb.GhprbRootAction.getRepos((((repo.getOwner().getLogin()) + \"/\") + (repo.getName())))"], "Fixed commit": "a4d0dd3953b094188cf9ac76f4b0b41e286b0294", "Url": "https://api.github.com/repos/jenkinsci/ghprb-plugin", "Date": "2013-06-19T15:45:35Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { saveIHave(); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Save failed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7811/buggy-version/src.database.Database.java", "BodyUseAPI": ["database.Database.saveIHave()"], "Fixed commit": "757b156047652a31239fc037e6b59e4806b4507a", "Url": "https://api.github.com/repos/jfabris26/DanceData", "Date": "2016-05-22T18:21:56Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { channelPage = org.jsoup.Jsoup.connect((\"http://www.youtube.com/channel/\" + channelId)).get(); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7006/buggy-version/app.src.main.java.com.eyeop.rorschach.ui.YoutubeSearch.java", "BodyUseAPI": ["org.jsoup.Jsoup.connect((\"http://www.youtube.com/channel/\" + channelId)).get()", "org.jsoup.Jsoup.connect(java.lang.String)"], "Fixed commit": "b540c7cbea7aeb4b54b44d7013c8f570bcfa2ed0", "Url": "https://api.github.com/repos/dfmaloney/Rorschach", "Date": "2015-10-04T23:54:40Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dataSocket.setBroadcast(false); } catch (java.net.SocketException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/9274/buggy-version/catroid.src.org.catrobat.catroid.io.PcConnectionManager.java", "BodyUseAPI": ["java.net.DatagramSocket.setBroadcast(boolean)"], "Fixed commit": "0e7e6b68ae9b59aded5a4ac8a2aca620d25375ca", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-08-29T05:40:34Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { db.closeDocument(); } finally { writeLock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8442/buggy-version/src.org.exist.storage.dom.RawNodeIterator.java", "BodyUseAPI": ["org.exist.storage.dom.DOMFile.closeDocument()"], "Fixed commit": "2ac97d5059d159caa1352a6618004fb391e9e467", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2016-03-24T15:55:04Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.enrichPublicationByExtractOriginalSources(selectedPublications, author, false); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4838/buggy-version/src.main.java.de.rwth.i9.palm.datasetcollect.service.PublicationCollectionService.java", "BodyUseAPI": ["de.rwth.i9.palm.datasetcollect.service.PublicationCollectionService.enrichPublicationByExtractOriginalSources(java.util.List<de.rwth.i9.palm.model.Publication>,de.rwth.i9.palm.model.Author,boolean)"], "Fixed commit": "942dcc6c780fa8192a61ed634b8f421022025144", "Url": "https://api.github.com/repos/palm-toolkit/palm-core", "Date": "2016-02-02T22:36:40Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return ((com.yahoo.platform.yui.compressor.JavaScriptToken) (tokens.get(((offset) + delta)))); } catch (java.lang.IndexOutOfBoundsException ex) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2710/buggy-version/src.com.yahoo.platform.yui.compressor.JavaScriptCompressor.java", "BodyUseAPI": ["java.util.ArrayList.get(int)"], "Fixed commit": "98eb2c0e6632bc26a274af7478d3c0ce44544981", "Url": "https://api.github.com/repos/akkumar/yuicompressor", "Date": "2014-04-21T17:23:38Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { irm.setACL(object, acl, username, roles); } catch (javax.jcr.RepositoryException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1987/buggy-version/saiku-core.saiku-service.src.main.java.org.saiku.service.datasource.RepositoryDatasourceManager.java", "BodyUseAPI": ["org.saiku.service.datasource.IRepositoryManager.setACL(java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.String>)"], "Fixed commit": "db381c827ffd7c4d01638ad19c78077eb42b703c", "Url": "https://api.github.com/repos/OSBI/saiku", "Date": "2014-08-26T22:19:16Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.commons.beanutils.BeanUtils.populate(config, map); } catch (java.lang.IllegalArgumentException e) { logger.warn(\"error setting configuration fields\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6777/buggy-version/web.src.main.java.com.driverstack.yunos.core.DeviceManagerImpl.java", "BodyUseAPI": ["org.apache.commons.beanutils.BeanUtils.populate(java.lang.Object,java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "d4a9303d653a0a85106863938f51832006eda22f", "Url": "https://api.github.com/repos/jackhatedance/yunos", "Date": "2014-10-05T02:08:58Z"},
{"Line": "=>1170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return getSingleResult(\"giftCardUsage.sumByGiftCard\", java.lang.Integer.class, new com.idega.core.persistence.Param(\"card\", card)); } catch (java.lang.Exception e) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2230/buggy-version/src.java.is.idega.idegaweb.pheidippides.dao.impl.PheidippidesDaoImpl.java", "BodyUseAPI": ["is.idega.idegaweb.pheidippides.dao.impl.PheidippidesDaoImpl.getSingleResult(java.lang.String,java.lang.Class,com.idega.core.persistence.Param)"], "Fixed commit": "01a30d31519f4520ec05998d5ef8a6d522f22ceb", "Url": "https://api.github.com/repos/bluebottle/is.idega.idegaweb.block.pheidippides", "Date": "2013-02-07T22:40:27Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { builder.addData(key, value); } catch (java.lang.IllegalArgumentException e) { throw new java.text.ParseException(e.getMessage(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1001/buggy-version/plugins.graphml.src.main.java.edu.kit.student.graphml.GraphmlImporter.java", "BodyUseAPI": ["edu.kit.student.graphmodel.builder.IVertexBuilder.addData(java.lang.String,java.lang.String)"], "Fixed commit": "cb613f9ed7777dd763d0e65251c8c0654a228711", "Url": "https://api.github.com/repos/HiWiGAns/GraphVonAnsicht", "Date": "2016-08-22T13:24:39Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { smp.stateMachine.Settings.setDebug(java.lang.Integer.parseInt(args[1])); } catch (java.lang.NumberFormatException e) { smp.stateMachine.Settings.setDebug(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4376/buggy-version/src.smp.SuperMarioPaint.java", "BodyUseAPI": ["smp.stateMachine.Settings.setDebug(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "e39b338912e239e0713ccb0583748c356e615a85", "Url": "https://api.github.com/repos/DC37/Super-Mario-Paint", "Date": "2013-08-11T07:28:01Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.bukkit.plugin.RegisteredServiceProvider<net.milkbowl.vault.permission.Permission> rsp = getServer().getServicesManager().getRegistration(net.milkbowl.vault.permission.Permission.class); com.massivecraft.factions.P.perms = rsp.getProvider(); } catch (java.lang.NoClassDefFoundError ex) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/537/buggy-version/src.main.java.com.massivecraft.factions.P.java", "BodyUseAPI": ["getServer().getServicesManager().getRegistration(java.lang.Class)", "org.bukkit.plugin.RegisteredServiceProvider<net.milkbowl.vault.permission.Permission>.getProvider()", "getServer().getServicesManager()", "com.massivecraft.factions.P.getServer()"], "Fixed commit": "871c839562a666a9595ccb9aa231438040add63c", "Url": "https://api.github.com/repos/mrlolethan/Factions", "Date": "2015-01-03T23:00:58Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (int i = 0; i < (Game.NUM_GAMES); i++) { Game game = new Game(); (results[game.run()])++; } } catch (InvalidBidException e) { e.printError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4106/buggy-version/Game.java", "BodyUseAPI": ["Game.run()"], "Fixed commit": "81c582e3e058c6a07f92a6004a4264a34ae34fbe", "Url": "https://api.github.com/repos/mozerfazer/dmkmmas14", "Date": "2014-03-06T18:33:19Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return rm.vote(this.OP_ID, this.operation); } catch (java.rmi.RemoteException e) { e.printStackTrace(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2337/buggy-version/src.TransactionManager.Operation.java", "BodyUseAPI": ["ResInterface.ResourceManager.vote(int,TransactionManager.OP_CODE)"], "Fixed commit": "d097cd4804eed6f10a9c7bca4c151f33d0fa4adc", "Url": "https://api.github.com/repos/pmanko2/512_project", "Date": "2013-11-26T00:46:15Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { provider.getBackendDatabase().commit(); } catch (java.lang.Exception e) { java.lang.System.err.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/77/buggy-version/src.ru.fizteh.fivt.students.standy66_new.runners.Task5Runner.java", "BodyUseAPI": ["provider.getBackendDatabase().commit()", "ru.fizteh.fivt.students.standy66_new.storage.structured.StructuredDatabase.getBackendDatabase()"], "Fixed commit": "5b6a6337b5a75ed7bec520239502a61c822f86de", "Url": "https://api.github.com/repos/standy66/fizteh-java-2014", "Date": "2014-11-25T11:47:15Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return me.wcy.music.utils.ImageUtils.blur(sentBitmap, me.wcy.music.utils.ImageUtils.BLUR_RADIUS); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2665/buggy-version/app.src.main.java.me.wcy.music.utils.ImageUtils.java", "BodyUseAPI": ["me.wcy.music.utils.ImageUtils.blur(android.graphics.Bitmap,int)"], "Fixed commit": "84f2060910c6d240cdd26cefba826731761fa0f9", "Url": "https://api.github.com/repos/wangchenyan/ponymusic", "Date": "2017-04-26T02:26:02Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { configGitService.releaseGitService(); } catch (java.lang.IllegalMonitorStateException e) { logger.debug(\"Released unattained read lock.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/901/buggy-version/servlets.src.main.java.com.meltmedia.cadmium.servlets.jersey.StatusService.java", "BodyUseAPI": ["com.meltmedia.cadmium.core.git.DelayedGitServiceInitializer.releaseGitService()"], "Fixed commit": "b72bec4c910cb96ab1d9b05698898972f0469add", "Url": "https://api.github.com/repos/meltmedia/cadmium", "Date": "2012-10-01T19:39:37Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { gitService.releaseGitService(); } catch (java.lang.IllegalMonitorStateException e) { logger.debug(\"Released unattained read lock.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/901/buggy-version/servlets.src.main.java.com.meltmedia.cadmium.servlets.jersey.StatusService.java", "BodyUseAPI": ["com.meltmedia.cadmium.core.git.DelayedGitServiceInitializer.releaseGitService()"], "Fixed commit": "b72bec4c910cb96ab1d9b05698898972f0469add", "Url": "https://api.github.com/repos/meltmedia/cadmium", "Date": "2012-10-01T19:39:37Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { classSplit = classSplit.split(\"\u00e9l\u00e8vede\")[1]; } catch (java.lang.ArrayIndexOutOfBoundsException e) { android.util.Log.e(\"Error\", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7246/buggy-version/app.src.main.java.json.UserBoard.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "47812d1522a9bb5fe1b1ca6e6607f967ba3f34f8", "Url": "https://api.github.com/repos/AlexTeixeira/idboard_android", "Date": "2016-07-06T18:14:07Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (java.lang.String course : old_coursesArray) { maxReal += fagbase.get(course); } } catch (java.lang.NullPointerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/2406/buggy-version/app.src.main.java.com.example.erikkjernlie.tdt4140project.Add_information.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Double>.get(java.lang.String)"], "Fixed commit": "e0aef4b389de0ae7c49631a4ad8b3b532264a3b8", "Url": "https://api.github.com/repos/erikkjernlie/TDT4140project2", "Date": "2017-04-19T11:19:25Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { listenTo(\"TRAP\", iListener); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4778/buggy-version/core.src.main.java.com.orientechnologies.orient.core.OSignalHandler.java", "BodyUseAPI": ["com.orientechnologies.orient.core.OSignalHandler.listenTo(java.lang.String,sun.misc.SignalHandler)"], "Fixed commit": "eed69558b59080f26341d149a310d0931805ca55", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-10-13T13:03:09Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (nars.grid2d.GridObject g : objects) { nars.grid2d.Effect e = (g instanceof nars.grid2d.GridAgent) ? ((nars.grid2d.GridAgent) (g)).perceiveNext() : null; g.update(e); if (g instanceof nars.grid2d.GridAgent) { nars.grid2d.GridAgent b = ((nars.grid2d.GridAgent) (g)); if ((b.actions.size()) > 0) { nars.grid2d.Action a = b.actions.pop(); if (a != null) { process(b, a); } } } } } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6091/buggy-version/nars_lab.nars.grid2d.Grid2DSpace.java", "BodyUseAPI": ["nars.grid2d.GridObject.perceiveNext()", "b.actions.pop()", "nars.grid2d.GridObject.update(nars.grid2d.Effect)", "nars.grid2d.Grid2DSpace.process(nars.grid2d.GridAgent,nars.grid2d.Action)", "b.actions.size()"], "Fixed commit": "077927d4a2a0a042e0af72872140165ca4f8300a", "Url": "https://api.github.com/repos/opennars/opennars", "Date": "2014-08-15T05:38:56Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getSignFromArena(arenaname).getBlock().setType(Material.AIR); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4251/buggy-version/src.com.comze_instancelabs.colormatch.Main.java", "BodyUseAPI": ["org.bukkit.block.Sign.getBlock()", "getSignFromArena(arenaname).getBlock().setType(Material.AIR)", "com.comze_instancelabs.colormatch.Main.getSignFromArena(java.lang.String)"], "Fixed commit": "13402319b09a308eddfe81a871195a3a8e84760b", "Url": "https://api.github.com/repos/instance01/ColorMatch", "Date": "2014-02-16T12:11:25Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { textPack.setText(term.getPack().getName()); } catch (java.lang.Exception e) { term.getPack().fetchIfNeededInBackground(new com.parse.GetCallback<com.parse.ParseObject>() { @java.lang.Override public void done(com.parse.ParseObject object, com.parse.ParseException e) { if (e == null) { mx.evin.apps.words.model.entities.parse.Pack pack = ((mx.evin.apps.words.model.entities.parse.Pack) (object)); textPack.setText(pack.getName()); }else { textPack.setText(\"\"); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6370/buggy-version/app.src.main.java.mx.evin.apps.words.viewmodel.adapters.TermAutoAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(term.getPack().getName())", "mx.evin.apps.words.model.entities.parse.Term.getPack()", "term.getPack().getName()"], "Fixed commit": "1dca742b82ba8134b0405f929c2002e60a651989", "Url": "https://api.github.com/repos/Evin1-/Words", "Date": "2016-01-22T03:27:27Z"},
{"Line": "=>971", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.jsr107.ri.RICache.RIEntry<K, V> entry = new org.jsr107.ri.RICache.RIEntry<K, V>(key, oldValue); javax.cache.expiry.Duration duration = expiryPolicy.getExpiryForAccessedEntry(entry); if (duration != null) { long expiryTime = duration.getAdjustedTime(now); cachedValue.setExpiryTime(expiryTime); } } catch (java.lang.Throwable t) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3185/buggy-version/cache-ri-impl.src.main.java.org.jsr107.ri.RICache.java", "BodyUseAPI": ["org.jsr107.ri.RICachedValue.setExpiryTime(long)", "javax.cache.expiry.ExpiryPolicy<? super K, ? super V>.getExpiryForAccessedEntry(org.jsr107.ri.RICache.RIEntry<K, V>)", "javax.cache.expiry.Duration.getAdjustedTime(long)"], "Fixed commit": "e628633cfb287d691f9a115cad58269f3ae76fa1", "Url": "https://api.github.com/repos/jsr107/RI", "Date": "2013-06-18T13:38:09Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.net.InetAddress inet = java.net.InetAddress.getByName(ip); this.ip = (inet != null) ? inet.getHostAddress() : null; } catch (java.io.IOException e) { uk.ac.bbsrc.tgac.miso.core.data.AbstractSequencerReference.log.error((\"Error getting InetAddress from given ip \" + ip), e); this.ip = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1737/buggy-version/core.src.main.java.uk.ac.bbsrc.tgac.miso.core.data.AbstractSequencerReference.java", "BodyUseAPI": ["java.net.InetAddress.getHostAddress()", "java.net.InetAddress.getByName(java.lang.String)"], "Fixed commit": "2e7c3be314ca9a87202f6300b4bf242cb0bbdd8a", "Url": "https://api.github.com/repos/oicr-gsi/miso-lims", "Date": "2016-12-16T17:26:09Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { net.minecraft.network.packet.Packet.writePacket(p, dataout); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/1447/buggy-version/codechicken.lib.packet.MetaPacket.java", "BodyUseAPI": ["net.minecraft.network.packet.Packet.writePacket(net.minecraft.network.packet.Packet,java.io.DataOutput)"], "Fixed commit": "3c81313a8c2c3666dc23881eae95f74fb9d628ea", "Url": "https://api.github.com/repos/Chicken-Bones/CodeChickenLib", "Date": "2013-12-21T13:01:53Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { USDwalletJson = ((org.json.simple.JSONObject) (((org.json.simple.JSONObject) (walletsJson.get(\"USD\"))).get(\"Balance\"))); USDBalance = ((java.lang.String) (USDwalletJson.get(\"value\"))); } catch (java.lang.Exception e) { hasDollars = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4472/buggy-version/src.com.mtgox.api.MtGox.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)", "org.json.simple.JSONObject.get(java.lang.String)", "((org.json.simple.JSONObject) (walletsJson.get(\"USD\"))).get(java.lang.String)"], "Fixed commit": "39a70b2803c4d318f452c6bc173be13a210a3cc0", "Url": "https://api.github.com/repos/adv0r/mtgox-api-v2-java", "Date": "2013-05-03T08:07:50Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { EURwalletJson = ((org.json.simple.JSONObject) (((org.json.simple.JSONObject) (walletsJson.get(\"EUR\"))).get(\"Balance\"))); EURBalance = ((java.lang.String) (EURwalletJson.get(\"value\"))); } catch (java.lang.Exception e) { hasEuros = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4472/buggy-version/src.com.mtgox.api.MtGox.java", "BodyUseAPI": ["((org.json.simple.JSONObject) (walletsJson.get(\"EUR\"))).get(java.lang.String)", "org.json.simple.JSONObject.get(java.lang.String)", "org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "39a70b2803c4d318f452c6bc173be13a210a3cc0", "Url": "https://api.github.com/repos/adv0r/mtgox-api-v2-java", "Date": "2013-05-03T08:07:50Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { byte[] imageData = ((byte[]) (values.get(i).get(3))); java.io.ByteArrayInputStream imageStream = new java.io.ByteArrayInputStream(imageData); android.graphics.Bitmap theImage = android.graphics.BitmapFactory.decodeStream(imageStream); listImageChild.put(listDataHeader.get(i), theImage); } catch (java.lang.Exception e) { android.util.Log.i(\"SavedSub\", \"No picture with entry\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/8846/buggy-version/app.src.main.java.com.logobuico.johnathan.subwaysandwichscrambler.ViewSavedSubs.java", "BodyUseAPI": ["java.util.ArrayList<java.util.ArrayList>.get(int)", "java.util.List<java.lang.String>.get(int)", "android.graphics.BitmapFactory.decodeStream(java.io.ByteArrayInputStream)", "java.util.ArrayList.get(int)", "java.util.HashMap<java.lang.String, android.graphics.Bitmap>.put(java.lang.String,android.graphics.Bitmap)"], "Fixed commit": "509f396f1f764410a968ea44edc784f1e6263f66", "Url": "https://api.github.com/repos/ITASJHall/SubwaySandwichScrambler", "Date": "2015-04-03T18:33:42Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { inputManager = ((android.view.inputmethod.InputMethodManager) (getSystemService(Context.INPUT_METHOD_SERVICE))); inputManager.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3711/buggy-version/app.src.main.java.com.hbbsolution.owner.maid_profile.choose_maid.view.ChooseMaidActivity.java", "BodyUseAPI": ["com.hbbsolution.owner.maid_profile.choose_maid.view.ChooseMaidActivity.getCurrentFocus()", "getCurrentFocus().getWindowToken()", "android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(),InputMethodManager.HIDE_NOT_ALWAYS)", "com.hbbsolution.owner.maid_profile.choose_maid.view.ChooseMaidActivity.getSystemService(Context.INPUT_METHOD_SERVICE)"], "Fixed commit": "8453bec61b19131a7555e682201307c64dd70b1b", "Url": "https://api.github.com/repos/thanhduy26091995/Owner", "Date": "2017-07-25T07:32:17Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { inputManager = ((android.view.inputmethod.InputMethodManager) (getSystemService(Context.INPUT_METHOD_SERVICE))); inputManager.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3711/buggy-version/app.src.main.java.com.hbbsolution.owner.work_management.view.jobpost.JobPostActivity.java", "BodyUseAPI": ["android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(),InputMethodManager.HIDE_NOT_ALWAYS)", "getCurrentFocus().getWindowToken()", "com.hbbsolution.owner.work_management.view.jobpost.JobPostActivity.getSystemService(Context.INPUT_METHOD_SERVICE)", "com.hbbsolution.owner.work_management.view.jobpost.JobPostActivity.getCurrentFocus()"], "Fixed commit": "8453bec61b19131a7555e682201307c64dd70b1b", "Url": "https://api.github.com/repos/thanhduy26091995/Owner", "Date": "2017-07-25T07:32:17Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { inputManager = ((android.view.inputmethod.InputMethodManager) (getSystemService(Context.INPUT_METHOD_SERVICE))); inputManager.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3711/buggy-version/app.src.main.java.com.hbbsolution.owner.work_management.view.quickpost.QuickPostActivity.java", "BodyUseAPI": ["android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(),InputMethodManager.HIDE_NOT_ALWAYS)", "getCurrentFocus().getWindowToken()", "com.hbbsolution.owner.work_management.view.quickpost.QuickPostActivity.getSystemService(Context.INPUT_METHOD_SERVICE)", "com.hbbsolution.owner.work_management.view.quickpost.QuickPostActivity.getCurrentFocus()"], "Fixed commit": "8453bec61b19131a7555e682201307c64dd70b1b", "Url": "https://api.github.com/repos/thanhduy26091995/Owner", "Date": "2017-07-25T07:32:17Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { jarPath = java.net.URLDecoder.decode(url.getPath().substring(5, url.getPath().indexOf(\"!\")).replace(\"+\", \"%2B\"), \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e1) { org.openflexo.rm.InJarResourceImpl.logger.severe(\"Unable to decode given PATH\"); e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6848/buggy-version/flexoutils.src.main.java.org.openflexo.rm.InJarResourceImpl.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.net.URLDecoder.decode(java.lang.String,java.lang.String)", "java.net.URL.getPath()", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.net.URL.getPath()", "java.lang.String.substring(int,int)"], "Fixed commit": "6cff6d858d2152ec0afbd22c9f7275aaf9129ffe", "Url": "https://api.github.com/repos/openflexo-team/connie", "Date": "2014-03-20T13:07:56Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { setUserPrincipal(request.getUserPrincipal()); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/452/buggy-version/WgsAPI.src.org.wgs.wamp.transport.http.longpolling.WampLongPollingSocket.java", "BodyUseAPI": ["org.wgs.wamp.transport.http.longpolling.WampLongPollingSocket.setUserPrincipal(request.getUserPrincipal())", "javax.servlet.http.HttpServletRequest.getUserPrincipal()"], "Fixed commit": "ade0dd6c8e934b1c326b4ad42ece3c7e8b0045ff", "Url": "https://api.github.com/repos/jmarine/wgs", "Date": "2014-09-05T18:18:03Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (edu.unh.cs.treccar.Data.Paragraph p : dev.DeserializeData.iterableParagraphs(new java.io.FileInputStream(new java.io.File(dev.XX.CBOR_PARA)))) { count++; for (java.lang.String w : words) docFreq.add(getDocumentFrequency(count, w)); } } catch (co.nstant.in.cbor.CborException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/7896/buggy-version/p1.src.main.java.dev.XX.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.add(long)", "dev.XX.getDocumentFrequency(int,java.lang.String)", "dev.DeserializeData.iterableParagraphs(java.io.FileInputStream)"], "Fixed commit": "c7845d5663baa010da93291e25c59aef6e3fcf9e", "Url": "https://api.github.com/repos/slek87/lucene-trec-car", "Date": "2017-09-28T22:50:35Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.kalei.views.CaptureView.mCamera.autoFocus(new android.hardware.Camera.AutoFocusCallback() { @java.lang.Override public void onAutoFocus(boolean b, android.hardware.Camera camera) { } }); } catch (java.lang.RuntimeException e) { android.util.Log.e(\"pl\", \"auto focus failed\"); com.crashlytics.android.Crashlytics.log(\"Auto focus failed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/3120/buggy-version/app.src.main.java.com.kalei.views.CaptureView.java", "BodyUseAPI": ["android.hardware.Camera.autoFocus(android.hardware.Camera.AutoFocusCallback)"], "Fixed commit": "66b2dbbaf0ca7e47eae7d20f4a2ec608a4837baa", "Url": "https://api.github.com/repos/reidisaki/pholocation", "Date": "2016-09-13T01:28:00Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (ontario.accounts.Account anAccountArray : accountArray) { seneca.btp400.BankingApp.displayAccount(anAccountArray); } } catch (java.lang.Exception e) { java.lang.System.out.println(\"Name entry error. Account not found.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/9062/buggy-version/BankingApp.src.seneca.btp400.BankingApp.java", "BodyUseAPI": ["seneca.btp400.BankingApp.displayAccount(ontario.accounts.Account)"], "Fixed commit": "418bda10bdcfff6bb03f55e7c53e5e5f5e90cb2d", "Url": "https://api.github.com/repos/Gammaalpha/BankingApp", "Date": "2016-02-26T18:13:11Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.rosterStore.store(r); } catch (edu.psu.sweng.ff.common.DatabaseException e) { throw new edu.psu.sweng.ff.common.DraftException(\"Database problem with the draft!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4166/buggy-version/src.main.java.edu.psu.sweng.ff.common.Draft.java", "BodyUseAPI": ["edu.psu.sweng.ff.common.RosterStore.store(edu.psu.sweng.ff.common.Roster)"], "Fixed commit": "3d4da0c0ff06ab6f364dabac47d12be19c430e5c", "Url": "https://api.github.com/repos/cwleonard/ff_common", "Date": "2012-11-10T01:55:36Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.rosterStore.store(r); } catch (edu.psu.sweng.ff.common.DatabaseException e) { throw new edu.psu.sweng.ff.common.DraftException(\"Database problem with the draft!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4166/buggy-version/src.main.java.edu.psu.sweng.ff.common.Draft.java", "BodyUseAPI": ["edu.psu.sweng.ff.common.RosterStore.store(edu.psu.sweng.ff.common.Roster)"], "Fixed commit": "3d4da0c0ff06ab6f364dabac47d12be19c430e5c", "Url": "https://api.github.com/repos/cwleonard/ff_common", "Date": "2012-11-10T01:55:36Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { serviceClient.setOptions(options); org.intalio.tempo.workflow.tms.client.RemoteTMSClient._log.debug(((\"serviceClient.getOptions().getTimeOutInMilliSeconds() = \" + (serviceClient.getOptions().getTimeOutInMilliSeconds())) + \" ms\")); org.apache.axiom.om.OMElement response = serviceClient.sendReceive(request); response.build(); return response; } finally { serviceClient.cleanupTransport(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6182/buggy-version/tms-client.src.main.java.org.intalio.tempo.workflow.tms.client.RemoteTMSClient.java", "BodyUseAPI": ["org.apache.axis2.client.ServiceClient.sendReceive(org.apache.axiom.om.OMElement)", "org.apache.axiom.om.OMElement.build()", "org.apache.axis2.client.ServiceClient.setOptions(org.apache.axis2.client.Options)", "org.slf4j.Logger.debug(((\"serviceClient.getOptions().getTimeOutInMilliSeconds() = \" + (serviceClient.getOptions().getTimeOutInMilliSeconds())) + \" ms\"))", "serviceClient.getOptions().getTimeOutInMilliSeconds()", "org.apache.axis2.client.ServiceClient.getOptions()"], "Fixed commit": "d59823b46d2b4b6f2478afc02f07f8be40cbb83e", "Url": "https://api.github.com/repos/Everteam-Software/tempo", "Date": "2011-07-28T13:42:45Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { SSID = SSID.replaceAll(\"(^\\\")|(\\\"$)\", \"\"); android.util.Log.d(com.matoski.adbm.service.ManagerService.LOG_TAG, (\"Connection SSID: \" + SSID)); } catch (java.lang.Exception e) { android.util.Log.e(com.matoski.adbm.service.ManagerService.LOG_TAG, \"Failed to format the SSID\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5622/buggy-version/src.com.matoski.adbm.service.ManagerService.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)"], "Fixed commit": "ce13fd3c8f123281f1bd15b4b0e03e7da14bc099", "Url": "https://api.github.com/repos/ilijamt/android-adbm", "Date": "2014-01-27T22:53:31Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (int i = 0; i < (stories.length); ++i) { list.add(stories[i].getName()); } } catch (java.lang.NullPointerException ex) { android.widget.Toast.makeText(getApplicationContext(), \"Wait until point are loaded from Database\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4578/buggy-version/app.src.main.java.de.ifgi.igiapp.igi_app.StoryListActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(stories[i].getName())", "stories[i].getName()"], "Fixed commit": "057dee6cb01b489c91d48762dbeaff5d1a5eec1f", "Url": "https://api.github.com/repos/froehr/IGI-app", "Date": "2015-01-29T16:49:53Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { while ((b = in.readByte()) != (-1)) { out.write(b); } } catch (java.io.EOFException eof) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6793/buggy-version/source.org.vinsert.bot.IOHelper.java", "BodyUseAPI": ["java.io.DataInputStream.readByte()", "java.io.ByteArrayOutputStream.write(byte)"], "Fixed commit": "ffb9b279d27b1d39591b00b38341a5f6a29bbe8a", "Url": "https://api.github.com/repos/dunnkers/vInsert", "Date": "2013-04-02T10:54:46Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dataDir = fuku.eb4j.io.EBFile.searchDirectory(dir, \"data\"); } catch (fuku.eb4j.EBException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6300/buggy-version/eb4j-core.src.main.java.fuku.eb4j.SubBook.java", "BodyUseAPI": ["fuku.eb4j.io.EBFile.searchDirectory(java.io.File,java.lang.String)"], "Fixed commit": "28a903bf28c7f9aa9a65f5d3881a39c629176bf7", "Url": "https://api.github.com/repos/amake/eb4j", "Date": "2016-05-22T13:20:10Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { file = new java.io.File(repoPath.toURI()); } catch (java.net.URISyntaxException e1) { com.google.common.base.Throwables.propagate(e1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/524/buggy-version/src.storage.bdbje.src.main.java.org.geogit.storage.bdbje.JEStagingDatabase.java", "BodyUseAPI": ["java.net.URL.toURI()"], "Fixed commit": "8623b6e6a56e6003a587c0973c895d1ff5aa6ded", "Url": "https://api.github.com/repos/jdgarrett/GeoGit", "Date": "2013-05-16T17:27:00Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.vexsoftware.votifier.bungee.forwarding.proxy.ProxyForwardingVoteSource.BackendServer server = new com.vexsoftware.votifier.bungee.forwarding.proxy.ProxyForwardingVoteSource.BackendServer(s, new java.net.InetSocketAddress(address, section.getShort(\"port\")), com.vexsoftware.votifier.util.KeyCreator.createKeyFrom(section.getString(\"token\", section.getString(\"key\")))); serverList.add(server); } catch (java.lang.IllegalArgumentException ex) { getLogger().info(((((\"Skipped \" + (section.getString(\"address\"))) + \":\") + (section.getShort(\"port\"))) + \" because: Empty key\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1396/buggy-version/bungeecord.src.main.java.com.vexsoftware.votifier.bungee.NuVotifier.java", "BodyUseAPI": ["net.md_5.bungee.config.Configuration.getString(java.lang.String,section.getString(\"key\"))", "java.util.List<ProxyForwardingVoteSource.BackendServer>.add(ProxyForwardingVoteSource.BackendServer)", "com.vexsoftware.votifier.util.KeyCreator.createKeyFrom(section.getString(\"token\", section.getString(\"key\")))", "net.md_5.bungee.config.Configuration.getShort(java.lang.String)", "net.md_5.bungee.config.Configuration.getString(java.lang.String)"], "Fixed commit": "2c5ac09dcd736fcf31d4eac1c7f6dc45d8ae05a8", "Url": "https://api.github.com/repos/Hodel1/NuVotifier", "Date": "2017-10-06T15:51:38Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.sk89q.worldguard.bukkit.util.Materials.ENTITY_ITEMS.put(EntityType.ARMOR_STAND, Material.ARMOR_STAND); } catch (java.lang.NoSuchFieldError ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7800/buggy-version/src.main.java.com.sk89q.worldguard.bukkit.util.Materials.java", "BodyUseAPI": ["com.google.common.collect.BiMap<org.bukkit.entity.EntityType, org.bukkit.Material>.put(EntityType.ARMOR_STAND,Material.ARMOR_STAND)"], "Fixed commit": "dfe536a2d24466e8b17ce812650590a6d67a87d2", "Url": "https://api.github.com/repos/sk89q/WorldGuard", "Date": "2015-01-28T09:11:36Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result = experimentGraph.addBox(new org.pikater.web.experiment.server.BoxInfoServer(info, (absX - (absoluteLeft)), (absY - (absoluteTop)))); } catch (java.lang.CloneNotSupportedException e) { org.pikater.shared.logging.web.PikaterWebLogger.logThrowable(\"Could not create a new server box because:\", e); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5757/buggy-version/src.org.pikater.web.vaadin.gui.server.ui_expeditor.expeditor.kineticcomponent.KineticComponent.java", "BodyUseAPI": ["org.pikater.web.experiment.server.ExperimentGraphServer.addBox(org.pikater.web.experiment.server.BoxInfoServer)"], "Fixed commit": "008896540767a99c86c9b189ef29c2c5448c2792", "Url": "https://api.github.com/repos/krajj7/pikater", "Date": "2014-09-19T11:40:37Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (coverPhotoBase64.isEmpty()) { coverPhotoBitmap = ((android.graphics.drawable.BitmapDrawable) (android.support.v4.content.ContextCompat.getDrawable(getApplicationContext(), R.drawable.back_05))).getBitmap(); }else { coverPhotoBitmap = br.edu.ifce.swappers.swappers.miscellaneous.utils.ImageUtil.stringToBitMap(coverPhotoBase64); } } catch (java.lang.Exception e) { coverPhotoBitmap = ((android.graphics.drawable.BitmapDrawable) (android.support.v4.content.ContextCompat.getDrawable(getApplicationContext(), R.drawable.back_05))).getBitmap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6605/buggy-version/app.src.main.java.br.edu.ifce.swappers.swappers.activities.MainActivity.java", "BodyUseAPI": ["br.edu.ifce.swappers.swappers.miscellaneous.utils.ImageUtil.stringToBitMap(java.lang.String)", "((android.graphics.drawable.BitmapDrawable) (android.support.v4.content.ContextCompat.getDrawable(getApplicationContext(), R.drawable.back_05))).getBitmap()", "java.lang.String.isEmpty()", "android.support.v4.content.ContextCompat.getDrawable(getApplicationContext(),R.drawable.back_05)", "br.edu.ifce.swappers.swappers.activities.MainActivity.getApplicationContext()"], "Fixed commit": "0935c8ddaf3ae6c30e3e198d60ac0289b12d6e4b", "Url": "https://api.github.com/repos/francisceioseph/Swappers", "Date": "2015-11-14T17:54:02Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { in.close(); } catch (java.lang.Throwable t) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5781/buggy-version/src.com.hula.web.service.routing.RouteServiceImpl.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "f9eecd56d7a3417d3ebee4c3c1a0e4e6d3347e83", "Url": "https://api.github.com/repos/simoncurd/hula-web", "Date": "2013-05-10T21:48:28Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { weather = new com.game.connect4.WeatherInfo(apiObject); } catch (java.lang.Exception ex) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5653/buggy-version/ConnectN.src.com.game.connect4.MainScreen.java", "BodyUseAPI": [], "Fixed commit": "0f54cd07b035cf116daa143dfbb97afef0d6319e", "Url": "https://api.github.com/repos/sieg-lu/connect-4", "Date": "2014-10-14T20:53:41Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { streamService.pause(stream); faultCount.set(0); LOG.error(((((((\"Processing of stream <\" + (stream.getId())) + \"> failed to return within \") + timeout) + \"ms for more than \") + maxFaultCount) + \" times. Disabling stream.\")); org.graylog2.notifications.Notification notification = notificationService.buildNow().addType(Notification.Type.STREAM_PROCESSING_DISABLED).addSeverity(Notification.Severity.URGENT).addDetail(\"stream_id\", stream.getId()).addDetail(\"fault_count\", streamFaultCount); notificationService.publishIfFirst(notification); } catch (org.graylog2.database.ValidationException ex) { LOG.error(\"Unable to pause stream: {}\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4754/buggy-version/graylog2-server.src.main.java.org.graylog2.streams.StreamRouter.java", "BodyUseAPI": ["org.graylog2.plugin.streams.Stream.getId()", "java.util.concurrent.atomic.AtomicInteger.set(int)", "notificationService.buildNow().addType(Notification.Type.STREAM_PROCESSING_DISABLED).addSeverity(Notification.Severity.URGENT).addDetail(java.lang.String,stream.getId())", "org.graylog2.streams.StreamService.pause(org.graylog2.plugin.streams.Stream)", "org.graylog2.notifications.NotificationService.buildNow()", "org.slf4j.Logger.error(((((((\"Processing of stream <\" + (stream.getId())) + \"> failed to return within \") + timeout) + \"ms for more than \") + maxFaultCount) + \" times. Disabling stream.\"))", "notificationService.buildNow().addType(Notification.Type.STREAM_PROCESSING_DISABLED)", "org.graylog2.plugin.streams.Stream.getId()", "notificationService.buildNow().addType(Notification.Type.STREAM_PROCESSING_DISABLED).addSeverity(Notification.Severity.URGENT)", "org.graylog2.notifications.NotificationService.publishIfFirst(org.graylog2.notifications.Notification)", "notificationService.buildNow().addType(Notification.Type.STREAM_PROCESSING_DISABLED).addSeverity(Notification.Severity.URGENT).addDetail(\"stream_id\", stream.getId()).addDetail(java.lang.String,java.lang.Integer)"], "Fixed commit": "01400ae4b23ee237918eec6c505373c83f5876bf", "Url": "https://api.github.com/repos/Graylog2/graylog2-server", "Date": "2014-08-13T10:03:21Z"},
{"Line": "=>1551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { deck = com.ichi2.anki.Deck.openDeck(filePath, false); } catch (android.database.SQLException e) { android.util.Log.w(AnkiDroidApp.TAG, (((\"Could not open database \" + filePath) + \": \") + e)); if (!(mBrokenDecks.contains(filePath))) { mBrokenDecks.add(filePath); } } catch (java.lang.RuntimeException e) { android.util.Log.w(AnkiDroidApp.TAG, (((\"Could not open database \" + filePath) + \": \") + e)); if (!(mBrokenDecks.contains(filePath))) { mBrokenDecks.add(filePath); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3947/buggy-version/src.com.ichi2.anki.DeckPicker.java", "BodyUseAPI": ["com.ichi2.anki.Deck.openDeck(java.lang.String,boolean)"], "Fixed commit": "dc40c8eeae7a439d78275c4fce6520d060059e6e", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-10-10T21:11:22Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.StringBuilder rootURL = baseRequest.getRootURL(); java.net.URL url = new java.net.URL(rootURL.toString()); hostAddress = url.getHost(); } catch (java.lang.Exception e1) { java.lang.System.out.println(\"host address parse error!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1273/buggy-version/src.main.java.br.com.soapboxrace.engine.Router.java", "BodyUseAPI": ["java.net.URL.getHost()", "org.eclipse.jetty.server.Request.getRootURL()", "java.lang.StringBuilder.toString()"], "Fixed commit": "c2cba06d014c62e890f0a901187b8efdb15f9b0f", "Url": "https://api.github.com/repos/nilzao/soapbox-race", "Date": "2016-06-03T01:27:48Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { Jama.Matrix theta = new Jama.Matrix(pacman.utils.Utils.getDoubles(coeffVariations)); Jama.Matrix j = new Jama.Matrix(pacman.utils.Utils.getDoubles(coeffEvaluations)); Jama.Matrix g = theta.transpose().times(theta).inverse().times(theta.transpose()).times(j); return pacman.utils.Utils.getFloats(g.getColumnPackedCopy()); } catch (java.lang.Exception e) { return new float[initialCoefficients.length]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6081/buggy-version/PacMan.src.pacman.utils.Utils.java", "BodyUseAPI": ["Jama.Matrix.getColumnPackedCopy()", "theta.transpose().times(theta).inverse()", "Jama.Matrix.transpose()", "theta.transpose().times(Jama.Matrix)", "theta.transpose().times(theta).inverse().times(theta.transpose()).times(Jama.Matrix)", "pacman.utils.Utils.getFloats(g.getColumnPackedCopy())", "theta.transpose().times(theta).inverse().times(theta.transpose())", "Jama.Matrix.transpose()", "pacman.utils.Utils.getDoubles(float[][])", "pacman.utils.Utils.getDoubles(float[][])"], "Fixed commit": "bc4ca90d2e6501fe437dfcc21163195bb7bf3da4", "Url": "https://api.github.com/repos/ztrewq/PacManML", "Date": "2014-02-01T15:27:15Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { saveNewPluginConfiguration(pluginConfiguration); } catch (java.lang.RuntimeException ex) { throw new org.jtalks.jcommune.model.plugins.exceptions.UnexpectedErrorException(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5669/buggy-version/jcommune-service.src.main.java.org.jtalks.jcommune.service.transactional.TransactionalPluginService.java", "BodyUseAPI": ["org.jtalks.jcommune.service.transactional.TransactionalPluginService.saveNewPluginConfiguration(org.jtalks.jcommune.model.entity.PluginConfiguration)"], "Fixed commit": "aa0e50037c81397d901099170079a150ef134af9", "Url": "https://api.github.com/repos/jtalks-org/jcommune", "Date": "2013-11-05T13:30:38Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.example.thierry.eventplanner.CalendarFragment.calendarView.setDate(new java.text.SimpleDateFormat(\"yyyy-MM-dd\").parse(com.example.thierry.eventplanner.CalendarFragment.dateSelected).getTime(), true, true); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2565/buggy-version/app.src.main.java.com.example.thierry.eventplanner.CalendarFragment.java", "BodyUseAPI": ["java.util.Date.getTime()", "java.text.SimpleDateFormat.parse(java.lang.String)", "android.widget.CalendarView.setDate(long,boolean,boolean)"], "Fixed commit": "c2003407ac0b76a941f928502fed554bb04bc133", "Url": "https://api.github.com/repos/thierrywanless/mobileAppDev", "Date": "2017-04-13T14:56:32Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pipedWriter.close(); } catch (java.io.IOException ioe2) { org.restlet.Context.getCurrentLogger().log(java.util.logging.Level.WARNING, \"Error while closing the pipe.\", ioe2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6840/buggy-version/modules.org.restlet.src.org.restlet.engine.io.BioUtils.java", "BodyUseAPI": ["java.io.PipedWriter.close()"], "Fixed commit": "6050959309d5e4f70e027131e4a016556bf9db3a", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2012-06-04T15:34:23Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int filled = buffer.fill(getEntityChannel()); if (filled == (-1)) { setMessageState(MessageState.END); } } catch (java.io.IOException ioe) { if (getLogger().isLoggable(java.util.logging.Level.WARNING)) { getLogger().log(java.util.logging.Level.WARNING, \"Unable to read the entity\", ioe); } throw ioe; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6840/buggy-version/modules.org.restlet.src.org.restlet.engine.connector.OutboundWay.java", "BodyUseAPI": ["org.restlet.engine.connector.OutboundWay.setMessageState(MessageState.END)", "org.restlet.engine.connector.OutboundWay.getEntityChannel()", "org.restlet.engine.io.Buffer.fill(java.nio.channels.ReadableByteChannel)"], "Fixed commit": "6050959309d5e4f70e027131e4a016556bf9db3a", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2012-06-04T15:34:23Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result = getStatusService().getRepresentation(status, request, response); } catch (java.lang.Exception e) { getLogger().log(java.util.logging.Level.WARNING, \"Unable to get the custom status representation\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6840/buggy-version/modules.org.restlet.src.org.restlet.engine.application.StatusFilter.java", "BodyUseAPI": ["org.restlet.engine.application.StatusFilter.getStatusService()", "org.restlet.service.StatusService.getRepresentation(org.restlet.data.Status,org.restlet.Request,org.restlet.Response)"], "Fixed commit": "6050959309d5e4f70e027131e4a016556bf9db3a", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2012-06-04T15:34:23Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { action.Manager.saveSession(action.Manager.userRoleToken, token.Role.getRole(inner)); } catch (java.lang.Exception e) { action.Manager.removeSession(action.Manager.userRoleToken); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4429/buggy-version/src.action.Manager.java", "BodyUseAPI": ["token.Role.getRole(obj.staticObject.InnerPerson)", "action.Manager.saveSession(java.lang.String,token.Role.getRole(inner))"], "Fixed commit": "ad60aefab711b2a14fcb06b50801fcb6333e38f0", "Url": "https://api.github.com/repos/LionCherry/EPMS", "Date": "2017-11-24T16:00:47Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.ubs.springer.data.Field old = controller.getField(steps.get(i).getField()); com.ubs.springer.data.Field next = controller.getField(steps.get((i + 1)).getField()); g.setColor(java.awt.Color.black); g.drawLine((((old.getX()) + ((old.getWidth()) / 2)) + (getWidthDiff())), (((old.getY()) + ((old.getHeight()) / 2)) + (getHeightDiff())), (((next.getX()) + ((next.getWidth()) / 2)) + (getWidthDiff())), (((next.getY()) + ((next.getHeight()) / 2)) + (getHeightDiff()))); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1856/buggy-version/src.com.ubs.springer.gui.SpringerGUI.java", "BodyUseAPI": ["steps.get(i).getField()", "java.util.List<com.ubs.springer.data.Step>.get(int)", "com.ubs.springer.data.Field.getY()", "com.ubs.springer.data.Field.getHeight()", "com.ubs.springer.gui.SpringerGUI.getWidthDiff()", "com.ubs.springer.gui.SpringerGUI.getWidthDiff()", "java.util.List<com.ubs.springer.data.Step>.get(int)", "java.awt.Graphics.drawLine((((old.getX()) + ((old.getWidth()) / 2)) + (getWidthDiff())),(((old.getY()) + ((old.getHeight()) / 2)) + (getHeightDiff())),(((next.getX()) + ((next.getWidth()) / 2)) + (getWidthDiff())),(((next.getY()) + ((next.getHeight()) / 2)) + (getHeightDiff())))", "steps.get((i + 1)).getField()", "com.ubs.springer.data.Field.getY()", "com.ubs.springer.gui.SpringerGUI.getHeightDiff()", "com.ubs.springer.data.Field.getHeight()", "com.ubs.springer.gui.SpringerGUI.getHeightDiff()", "com.ubs.springer.controller.SController.getField(steps.get(i).getField())", "java.awt.Graphics.setColor(java.awt.Color)", "com.ubs.springer.data.Field.getWidth()", "com.ubs.springer.data.Field.getX()", "com.ubs.springer.controller.SController.getField(steps.get((i + 1)).getField())", "com.ubs.springer.data.Field.getWidth()", "com.ubs.springer.data.Field.getX()"], "Fixed commit": "693c9c1322187431d0c98532375c00e3d850a61d", "Url": "https://api.github.com/repos/ElectronicManuel/M223", "Date": "2017-01-11T19:24:39Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return readLoaderBeans(loader, beanFactory); } catch (java.io.IOException e) { throw e; } catch (java.lang.Exception e) { getLog().error((((\"Failed to register loader module at '\" + (f.getAbsolutePath())) + \"', \") + \"loading resources from this loader will not be available\")); getLog().debug(((\"Failed to registter loader module at '\" + (f.getAbsolutePath())) + \"':\"), e); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4576/buggy-version/zooma-impl.src.main.java.uk.ac.ebi.fgpt.zooma.config.LoaderDiscoveringPostProcessor.java", "BodyUseAPI": ["uk.ac.ebi.fgpt.zooma.config.LoaderDiscoveringPostProcessor.readLoaderBeans(java.net.URLClassLoader,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)"], "Fixed commit": "95a32a086f49f8b65db942f44de3853cc0943cba", "Url": "https://api.github.com/repos/EBISPOT/zooma", "Date": "2015-06-04T14:13:09Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return readLoaderBeans(loader, beanFactory); } catch (java.io.IOException e) { throw e; } catch (java.lang.Exception e) { getLog().error((((\"Failed to register loader module at '\" + (f.getAbsolutePath())) + \"', \") + \"loading resources from this loader will not be available\")); getLog().debug(((\"Failed to registter loader module at '\" + (f.getAbsolutePath())) + \"':\"), e); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4576/buggy-version/zooma-impl.src.main.java.uk.ac.ebi.fgpt.zooma.config.LoaderDiscoveringPostProcessor.java", "BodyUseAPI": ["uk.ac.ebi.fgpt.zooma.config.LoaderDiscoveringPostProcessor.readLoaderBeans(uk.ac.ebi.fgpt.zooma.io.ZoomaJarClassLoader,org.springframework.beans.factory.config.ConfigurableListableBeanFactory)"], "Fixed commit": "95a32a086f49f8b65db942f44de3853cc0943cba", "Url": "https://api.github.com/repos/EBISPOT/zooma", "Date": "2015-06-04T14:13:09Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { setAPKApplication(realApplication); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1326/buggy-version/amigo-lib.src.main.java.me.ele.amigo.Amigo.java", "BodyUseAPI": ["me.ele.amigo.Amigo.setAPKApplication(android.app.Application)"], "Fixed commit": "b4d5bf0001e761fa7548b3fab4eaa058d98f5683", "Url": "https://api.github.com/repos/weatherfish/Amigo", "Date": "2017-04-09T06:17:20Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { gradePlot = new ru.analyzer.plot.GradePlot(subject); } catch (java.text.ParseException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8599/buggy-version/src.main.java.ru.analyzer.Graph.Graph.java", "BodyUseAPI": [], "Fixed commit": "2984a024dfa3cab88b4d716b43b3db8c1cde0289", "Url": "https://api.github.com/repos/danilova-e/analyzer", "Date": "2014-05-03T22:17:41Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pane2.add(createComponentPlot()); } catch (java.text.ParseException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8599/buggy-version/src.main.java.ru.analyzer.Graph.Graph.java", "BodyUseAPI": ["ru.analyzer.graph.Graph.2.createComponentPlot()", "javax.swing.JPanel.add(javax.swing.JComponent)"], "Fixed commit": "2984a024dfa3cab88b4d716b43b3db8c1cde0289", "Url": "https://api.github.com/repos/danilova-e/analyzer", "Date": "2014-05-03T22:17:41Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { controller.start(); } catch (java.lang.Exception e) { Hibu.Debugger.traceln(e); Hibu.Debugger.traceln(\"Script terminated unexpected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1747/buggy-version/HibuImage.Crawler.src.Hibu.CrawlerMain.java", "BodyUseAPI": ["Hibu.CrawlingController.start()"], "Fixed commit": "8b797f904b0bec4bcd27d6912c0f70af4af6dfc7", "Url": "https://api.github.com/repos/cyokin/JAVA", "Date": "2013-10-10T21:08:26Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { columns[((index)++)] = o; } catch (java.lang.ArrayIndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5154/buggy-version/src.main.java.com.github.bartekdobija.omniture.row.Row.java", "BodyUseAPI": [], "Fixed commit": "4de9f12d8e9835607466df3c3966834496a463a4", "Url": "https://api.github.com/repos/bartekdobija/omniture-clickstream", "Date": "2016-09-08T18:18:56Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { return columns[pos]; } catch (java.lang.ArrayIndexOutOfBoundsException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/5154/buggy-version/src.main.java.com.github.bartekdobija.omniture.row.Row.java", "BodyUseAPI": [], "Fixed commit": "4de9f12d8e9835607466df3c3966834496a463a4", "Url": "https://api.github.com/repos/bartekdobija/omniture-clickstream", "Date": "2016-09-08T18:18:56Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.commons.io.FileUtils.cleanDirectory(new java.io.File(\"./temp\")); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3506/buggy-version/GetDataFromTeamWork.src.main.java.com.kainos.Migration.Main.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)"], "Fixed commit": "eb21e3f769870a0c92b3091dd317b17912ad788d", "Url": "https://api.github.com/repos/waveq/Migration-to-confluence", "Date": "2014-07-28T06:31:40Z"},
{"Line": "=>720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cp = ctx.getReferencedElement(clippedElement, uri); } catch (org.apache.batik.bridge.BridgeException ex) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2292/buggy-version/sources.org.apache.batik.bridge.CSSUtilities.java", "BodyUseAPI": ["org.apache.batik.bridge.BridgeContext.getReferencedElement(org.w3c.dom.Element,java.lang.String)"], "Fixed commit": "22da1acccf0093c43509456a0936fa1d7514da30", "Url": "https://api.github.com/repos/iconfinder/batik", "Date": "2013-11-07T17:52:06Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { files = utils.getFiles(currentDirectory); } catch (java.lang.Exception e) { currentDirectory = new java.io.File(\"/\"); files = utils.getFiles(currentDirectory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8849/buggy-version/ComicsMagic.src.net.kaleidos.comicsmagic.SelectComicActivity.java", "BodyUseAPI": ["net.kaleidos.comicsmagic.helper.Utils.getFiles(java.io.File)"], "Fixed commit": "618e19b9af41b1771662999f017fb94b223f8217", "Url": "https://api.github.com/repos/pabloalba/komics", "Date": "2013-12-16T09:58:20Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { profileImage = org.smartregister.path.application.VaccinatorApplication.getInstance().context().imageRepository().findByEntityId(client.entityId()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3013/buggy-version/opensrp-path.src.main.java.util.ImageUtils.java", "BodyUseAPI": ["org.smartregister.path.application.VaccinatorApplication.getInstance()", "org.smartregister.commonregistry.CommonPersonObjectClient.entityId()", "org.smartregister.path.application.VaccinatorApplication.getInstance().context().imageRepository()", "org.smartregister.path.application.VaccinatorApplication.getInstance().context().imageRepository().findByEntityId(client.entityId())", "org.smartregister.path.application.VaccinatorApplication.getInstance().context()"], "Fixed commit": "0d30567471d749e31fb43fda5d9c5fc0ce43f1ab", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client-bangladesh", "Date": "2017-12-05T09:21:47Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return com.xrtb.tools.NameNode.getMembers(redis); } catch (java.lang.Exception error) { if (error.toString().contains(\"Long cannot be cast to java.util.List\")) { java.util.List<java.lang.String> empty = new java.util.ArrayList(); return empty; } throw error; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4508/buggy-version/src.com.xrtb.tools.NameNode.java", "BodyUseAPI": ["com.xrtb.tools.NameNode.getMembers(redis.clients.jedis.Jedis)"], "Fixed commit": "1b8e11a43d915fa9960fb944c4ee88d8c73567e5", "Url": "https://api.github.com/repos/benmfaul/XRTB", "Date": "2016-01-04T15:59:59Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return mDiskCache.get(data, config); } catch (java.lang.OutOfMemoryError error) { error.printStackTrace(); return getBitmapFromDiskCache(data, config); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/536/buggy-version/src.com.android.opensource.bitmapfun.util.ImageCache.java", "BodyUseAPI": ["com.android.opensource.bitmapfun.util.DiskLruCache.get(java.lang.String,Bitmap.Config)"], "Fixed commit": "53846b859686b14d518325b5a630fbb144785731", "Url": "https://api.github.com/repos/yinglovezhuzhu/bitmapfun", "Date": "2013-09-18T10:08:31Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { camera.autoFocus(new android.hardware.Camera.AutoFocusCallback() { public void onAutoFocus(boolean success, android.hardware.Camera camera) { camera.takePicture(null, null, mPicture); } }); } catch (java.lang.RuntimeException ex) { android.util.Log.e(com.wezka.nativecamera.CameraActivity.TAG, \"Auto-focus crash\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1887/buggy-version/src.android.CameraActivity.java", "BodyUseAPI": ["android.hardware.Camera.takePicture(<nulltype>,<nulltype>,android.hardware.Camera.PictureCallback)", "android.hardware.Camera.autoFocus(android.hardware.Camera.AutoFocusCallback)"], "Fixed commit": "0edca1a084bceb6e1da542cc0e41380fea0afc38", "Url": "https://api.github.com/repos/shaithana/cordova-plugin-wezka-nativecamera", "Date": "2014-07-12T19:49:20Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { camera.autoFocus(new android.hardware.Camera.AutoFocusCallback() { public void onAutoFocus(boolean success, android.hardware.Camera camera) { camera.takePicture(null, null, mPicture); } }); } catch (java.lang.RuntimeException ex) { android.util.Log.e(com.wezka.nativecamera.CameraActivity.TAG, \"Auto-focus crash\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/1887/buggy-version/src.android.CameraActivity.java", "BodyUseAPI": ["android.hardware.Camera.autoFocus(android.hardware.Camera.AutoFocusCallback)", "android.hardware.Camera.takePicture(<nulltype>,<nulltype>,android.hardware.Camera.PictureCallback)"], "Fixed commit": "0edca1a084bceb6e1da542cc0e41380fea0afc38", "Url": "https://api.github.com/repos/shaithana/cordova-plugin-wezka-nativecamera", "Date": "2014-07-12T19:49:20Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return co.smartreceipts.android.model.PriceCurrency.getInstance(java.util.Currency.getInstance(java.util.Locale.getDefault()).getCurrencyCode()); } catch (java.lang.IllegalArgumentException e) { co.smartreceipts.android.utils.log.Logger.warn(co.smartreceipts.android.model.PriceCurrency.class, \"Unable to find a default currency, since the device has an unsupported ISO 3166 locale. Returning USD instead\"); return co.smartreceipts.android.model.PriceCurrency.getInstance(\"USD\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/145/buggy-version/app.src.main.java.co.smartreceipts.android.model.PriceCurrency.java", "BodyUseAPI": ["java.util.Locale.getDefault()", "co.smartreceipts.android.model.PriceCurrency.getInstance(java.lang.String)", "java.util.Currency.getInstance(java.util.Locale)", "java.util.Currency.getCurrencyCode()"], "Fixed commit": "5046668dec5957fa758b43345439f9b29ea246fe", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2017-05-01T13:53:34Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { com.j256.ormlite.stmt.QueryBuilder qb = closedCashDao.queryBuilder(); qb.where().eq(ClosedCash.HOST, hostName).and().isNull(ClosedCash.DATEEND); return ((mobi.nordpos.dao.model.ClosedCash) (qb.queryForFirst())); } finally { if ((connectionSource) != null) { connectionSource.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/677/buggy-version/src.main.java.mobi.nordpos.dao.ormlite.ClosedCashPersist.java", "BodyUseAPI": ["com.j256.ormlite.stmt.QueryBuilder.queryForFirst()", "qb.where().eq(ClosedCash.HOST, hostName).and().isNull(ClosedCash.DATEEND)", "mobi.nordpos.dao.ormlite.ClosedCashDao.queryBuilder()", "qb.where().eq(ClosedCash.HOST, hostName).and()", "qb.where().eq(ClosedCash.HOST,java.lang.String)", "com.j256.ormlite.stmt.QueryBuilder.where()"], "Fixed commit": "9ac5ea414f4ed5667afe173b37810eb835199c61", "Url": "https://api.github.com/repos/nordpos-mobi/nordpos-dao", "Date": "2015-01-14T04:27:53Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { binExpr = ((jkind.lustre.BinaryExpr) (statement.expr)); varId = ((jkind.lustre.IdExpr) (binExpr.left)); } catch (java.lang.ClassCastException e) { assertions.add(statement.expr); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/3653/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.analysis.src.com.rockwellcollins.atc.agree.analysis.translation.LustreAstBuilder.java", "BodyUseAPI": [], "Fixed commit": "3c3694912d4048238fa2907a7dec56956bd13356", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2016-08-01T18:33:48Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return application.getHunt().getTargetList().get(position); } catch (java.lang.NullPointerException npe) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8913/buggy-version/app.src.main.java.com.radiusnetworks.scavengerhunt.TargetCollectionActivity.java", "BodyUseAPI": ["com.radiusnetworks.scavengerhunt.ScavengerHuntApplication.getHunt()", "application.getHunt().getTargetList().get(int)", "application.getHunt().getTargetList()"], "Fixed commit": "839c80932df86af638aa4198c06ae55367242203", "Url": "https://api.github.com/repos/RadiusNetworks/scavenger-hunt-android-os", "Date": "2014-09-15T20:58:28Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return application.getHunt().getTargetList().size(); } catch (java.lang.NullPointerException npe) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8913/buggy-version/app.src.main.java.com.radiusnetworks.scavengerhunt.TargetCollectionActivity.java", "BodyUseAPI": ["application.getHunt().getTargetList().size()", "application.getHunt().getTargetList()", "com.radiusnetworks.scavengerhunt.ScavengerHuntApplication.getHunt()"], "Fixed commit": "839c80932df86af638aa4198c06ae55367242203", "Url": "https://api.github.com/repos/RadiusNetworks/scavenger-hunt-android-os", "Date": "2014-09-15T20:58:28Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { application.getHunt().sortTargetList(); } catch (java.lang.NullPointerException npe) { npe.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/8913/buggy-version/app.src.main.java.com.radiusnetworks.scavengerhunt.TargetCollectionActivity.java", "BodyUseAPI": ["application.getHunt().sortTargetList()", "com.radiusnetworks.scavengerhunt.ScavengerHuntApplication.getHunt()"], "Fixed commit": "839c80932df86af638aa4198c06ae55367242203", "Url": "https://api.github.com/repos/RadiusNetworks/scavenger-hunt-android-os", "Date": "2014-09-15T20:58:28Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { configBuilder = new org.robovm.compiler.config.Config.Builder(); } catch (java.io.IOException e) { throw new org.eclipse.core.runtime.CoreException(new org.eclipse.core.runtime.Status(org.eclipse.core.runtime.IStatus.ERROR, org.robovm.eclipse.RoboVMPlugin.PLUGIN_ID, \"Launch failed. Check the RoboVM console for more information.\", e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6135/buggy-version/ui.src.org.robovm.eclipse.internal.AbstractLaunchConfigurationDelegate.java", "BodyUseAPI": [], "Fixed commit": "ef0a47d9e9b709a2b0b92c653c61b472250068c1", "Url": "https://api.github.com/repos/badlogic/robovm-eclipse", "Date": "2014-09-04T13:59:07Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mOnNetworkActivityCallback = new java.lang.ref.WeakReference(((com.farfromsober.networkviews.callbacks.OnNetworkActivityCallback) (getActivity()))); } catch (java.lang.Exception e) { throw new java.lang.ClassCastException(((context.toString()) + \" must implement OnNetworkActivityCallback in Activity\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4922/buggy-version/app.src.main.java.com.farfromsober.ffs.fragments.ProductDetailFragment.java", "BodyUseAPI": ["com.farfromsober.ffs.fragments.ProductDetailFragment.getActivity()"], "Fixed commit": "125bbb348051ede71ba5db58ac93a6d2e32907fb", "Url": "https://api.github.com/repos/farfromsober/ffs_android", "Date": "2016-01-22T18:14:31Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { net.minecraft.client.Minecraft.getMinecraft().getSoundHandler().playSound(glassWorksOpening); } catch (java.lang.Exception exeption) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2859/buggy-version/1.12.src.main.java.com.wynprice.Sound.SoundEventPlay.java", "BodyUseAPI": ["net.minecraft.client.Minecraft.getMinecraft().getSoundHandler()", "net.minecraft.client.Minecraft.getMinecraft()", "net.minecraft.client.Minecraft.getMinecraft().getSoundHandler().playSound(net.minecraft.client.audio.ISound)"], "Fixed commit": "77f4bf890116350fb285aa23b9d834abf5d4340c", "Url": "https://api.github.com/repos/Wyn-Price/Sounds-Extended", "Date": "2017-06-19T17:38:25Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { float[] stats = game.endGame(); android.content.Intent intent = new android.content.Intent(this, com.android.whatsongisitanyway.GameScoreActivity.class).putExtra(\"stats\", stats); startActivity(intent); } catch (java.lang.NullPointerException e) { android.content.Intent intent = new android.content.Intent(this, com.android.whatsongisitanyway.GameScoreActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/9084/buggy-version/src.com.android.whatsongisitanyway.PlayActivity.java", "BodyUseAPI": ["com.android.whatsongisitanyway.models.Game.endGame()", "android.content.Intent.putExtra(java.lang.String,float[])", "com.android.whatsongisitanyway.PlayActivity.startActivity(android.content.Intent)"], "Fixed commit": "c1cdcfdc009b0a43fdc01724628b352e273fabb3", "Url": "https://api.github.com/repos/Bandits789/WhatSongIsItAnyway", "Date": "2014-03-26T17:24:38Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.jlk.tools.AuthInfoSingleton authInfo = org.jlk.tools.AuthInfoSingleton.getInstance(); java.lang.String accessToken = org.jlk.tools.Util.refreshtoken(authInfo.getOpenID(), authInfo.getRefreshToken()).getAccessToken(); authInfo.setAccessToken(accessToken); org.jlk.task.AccessTokenRefreshTask.log.info(((\"New AccessToken : [\" + accessToken) + \"]\")); } catch (java.lang.Exception e) { org.jlk.task.AccessTokenRefreshTask.log.error(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/4519/buggy-version/src.org.jlk.task.AccessTokenRefreshTask.java", "BodyUseAPI": ["org.jlk.tools.Util.refreshtoken(authInfo.getOpenID(), authInfo.getRefreshToken()).getAccessToken()", "org.jlk.tools.AuthInfoSingleton.getRefreshToken()", "org.jlk.tools.AuthInfoSingleton.getInstance()", "org.jlk.tools.AuthInfoSingleton.getOpenID()", "org.jlk.tools.Util.refreshtoken(authInfo.getOpenID(),authInfo.getRefreshToken())", "org.apache.log4j.Logger.info(java.lang.String)", "org.jlk.tools.AuthInfoSingleton.setAccessToken(java.lang.String)"], "Fixed commit": "91e0f86e0699c8de7b92492c1d53a09a021f6a13", "Url": "https://api.github.com/repos/Earthaveeman/ppd", "Date": "2017-09-04T02:22:50Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { removePlayers(); } catch (java.util.ConcurrentModificationException cme) { com.wolvencraft.prison.mines.util.Message.log(java.util.logging.Level.WARNING, \"An error occured while removing players from the mine\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7715/buggy-version/src.com.wolvencraft.prison.mines.mine.Mine.java", "BodyUseAPI": ["com.wolvencraft.prison.mines.mine.Mine.removePlayers()"], "Fixed commit": "3237115eb973f700618b7abadaa9ede0def9fd43", "Url": "https://api.github.com/repos/bitWolfy/PrisonMine", "Date": "2012-12-27T21:08:24Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { unregisterReceiver(batteryInfoReceiver); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/7203/buggy-version/app.src.main.java.com.carlos.ramirez.android.service.pfc.fragment.ConnectionDetails.java", "BodyUseAPI": ["com.carlos.ramirez.android.service.pfc.fragment.ConnectionDetails.unregisterReceiver(android.content.BroadcastReceiver)"], "Fixed commit": "7660e9e4516dc90850a6e696341ba995469a872c", "Url": "https://api.github.com/repos/carlosRamirezLizan/pfc", "Date": "2015-09-27T15:02:21Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { str.append(org.warheim.file.FileTool.readFile(css)); } catch (java.io.IOException ex) { org.warheim.eledger.formatter.NotificationsHTMLFormatter.logger.warn(\"CSS inaccessible\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/6587/buggy-version/eledger-parser.src.main.java.org.warheim.eledger.formatter.NotificationsHTMLFormatter.java", "BodyUseAPI": ["java.lang.StringBuilder.append(org.warheim.file.FileTool.readFile(css))", "org.warheim.file.FileTool.readFile(java.lang.String)"], "Fixed commit": "b730ed7e24b213135dd5d0cf1abce41f8429c7f7", "Url": "https://api.github.com/repos/andy1024/eledger-parser", "Date": "2015-12-14T20:10:28Z"},
{"Line": "=>1816", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class numberPickerClass = java.lang.Class.forName(\"android.widget.NumberPicker\"); if (numberPickerClass != null) { return viewFetcher.getCurrentViews(numberPickerClass); } } catch (java.lang.ClassNotFoundException cnfe) { cnfe.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/218/buggy-version/robotium-solo.src.main.java.com.jayway.android.robotium.solo.Solo.java", "BodyUseAPI": ["com.jayway.android.robotium.solo.ViewFetcher.getCurrentViews(java.lang.Class)", "java.lang.Class.forName(java.lang.String)"], "Fixed commit": "45d3b8277b82fd9b16bf0a63e7e17ef55d35e7a5", "Url": "https://api.github.com/repos/masconsult/robotium", "Date": "2012-10-17T13:16:10Z"},
{"Line": "=>670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { io.bigdime.handler.hive.HiveJdbcReaderHandler.logger.info(getHandlerPhase(), \"sleeping before callback\"); java.lang.Thread.sleep(io.bigdime.handler.hive.HiveJdbcReaderHandler.sleepBetweenRetriesMillis); } catch (java.lang.Exception ex) { io.bigdime.handler.hive.HiveJdbcReaderHandler.logger.info(getHandlerPhase(), \"_message=\\\"sleep interrupted before call back\\\" exception={}\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V18/2327/buggy-version/bigdime-data-handlers.src.main.java.io.bigdime.handler.hive.HiveJdbcReaderHandler.java", "BodyUseAPI": ["io.bigdime.handler.hive.HiveJdbcReaderHandler.getHandlerPhase()", "java.lang.Thread.sleep(long)", "io.bigdime.core.commons.AdaptorLogger.info(getHandlerPhase(),java.lang.String)"], "Fixed commit": "99b40fe9d7013312f4b6ccad10fec30de4c1030b", "Url": "https://api.github.com/repos/a-ninja/bigdime", "Date": "2016-08-09T18:40:36Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (int i = 0; i < (stories.length); ++i) { list.add(stories[i].getName()); } } catch (java.lang.NullPointerException ex) { android.widget.Toast.makeText(getApplicationContext(), \"Wait until point are loaded from Database\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3384/buggy-version/app.src.main.java.de.ifgi.igiapp.igi_app.StoryListActivity.java", "BodyUseAPI": ["stories[i].getName()", "java.util.ArrayList<java.lang.String>.add(stories[i].getName())"], "Fixed commit": "d5a75c5ebb12e2cd565964c5059efcad04683f26", "Url": "https://api.github.com/repos/froehr/IGI-app", "Date": "2015-01-29T16:49:53Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { includeStartIndex = request.isIncludeStartIndex(); } catch (java.lang.NullPointerException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/770/buggy-version/search.src.main.java.org.jboss.capedwarf.search.CapedwarfSearchService.java", "BodyUseAPI": ["com.google.appengine.api.search.ListIndexesRequest.isIncludeStartIndex()"], "Fixed commit": "a5615838844128122b01679290216bddb2ad3e86", "Url": "https://api.github.com/repos/capedwarf/capedwarf-blue", "Date": "2012-10-27T22:27:14Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { listSupplier.setRowSelectionInterval(0, 0); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4567/buggy-version/AGCOOPSys.src.agcoopsys.viewSupplier.java", "BodyUseAPI": ["javax.swing.JTable.setRowSelectionInterval(int,int)"], "Fixed commit": "698e91f42c318be979f1302787cfdfc9cfdfba23", "Url": "https://api.github.com/repos/Velvette/AGCoopSys", "Date": "2014-05-25T09:30:22Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { statement.setString(2, name); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5416/buggy-version/src.main.java.com.tehbeard.BeardStat.DataProviders.JDBCStatDataProvider.java", "BodyUseAPI": ["java.sql.PreparedStatement.setString(int,java.lang.String)"], "Fixed commit": "800fb7217e0ceab35286a1e1d341fcf49bfde0bf", "Url": "https://api.github.com/repos/tehbeard/BeardStat", "Date": "2013-06-26T23:31:57Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dataOutput.close(); } catch (java.io.IOException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7775/buggy-version/core.src.java.main.org.uncommons.maths.random.DiehardInputGenerator.java", "BodyUseAPI": ["java.io.DataOutputStream.close()"], "Fixed commit": "72b31de276d1f4ebc44c6661e7b55e164785fb92", "Url": "https://api.github.com/repos/Pr0methean/uncommons-maths", "Date": "2017-07-16T03:40:42Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { boolean dealResult = dealer.deal(); if (!dealResult) { return; } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3649/buggy-version/src.main.java.com.vmstar.designpattern.chain.SimpleChain.java", "BodyUseAPI": ["com.vmstar.designpattern.chain.Dealer.deal()"], "Fixed commit": "210312b398c515d856c585f0c6caa570d989270d", "Url": "https://api.github.com/repos/vmstar/study", "Date": "2017-05-16T07:56:13Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { flashOFF(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/273/buggy-version/app.src.main.java.com.music.aman.musicg.Activity_Dialog_Found.java", "BodyUseAPI": ["com.music.aman.musicg.Activity_Dialog_Found.flashOFF()"], "Fixed commit": "095fe2fec2029bacbe7dce31e034ab004ba4c27e", "Url": "https://api.github.com/repos/amansinghal/MusicWhistleListener", "Date": "2015-11-15T03:27:33Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { outToServer.writeBytes(move); } catch (java.io.IOException ex) { java.lang.System.out.println(\"You should first connetct to the vehicle.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4482/buggy-version/src.all.Client.java", "BodyUseAPI": ["java.io.DataOutputStream.writeBytes(java.lang.String)"], "Fixed commit": "28061ad5b372ea75f06e27e83c6eb43b9a451f35", "Url": "https://api.github.com/repos/kmchmk1026/Micro-Controller-Remote", "Date": "2016-08-17T07:57:38Z"},
{"Line": "=>1008", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { javax.xml.stream.XMLOutputFactory xof = javax.xml.stream.XMLOutputFactory.newInstance(); java.io.OutputStream os = new java.io.FileOutputStream(new java.io.File(\"D:/getCardRuleData.xml\")); javax.xml.stream.XMLStreamWriter xmlWriter = xof.createXMLStreamWriter(os); getCardRuleData50.serialize(new javax.xml.namespace.QName(\"http://www.topsunit.com/rms\", \"getCardRuleData\", \"ns1\"), xmlWriter); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2504/buggy-version/com.topsun.posclient.system.core.src.com.topsun.posclient.system.dao.SyncDataDao.java", "BodyUseAPI": ["javax.xml.stream.XMLOutputFactory.createXMLStreamWriter(java.io.OutputStream)", "javax.xml.stream.XMLOutputFactory.newInstance()", "com.topsun.posclient.webservice.dto.GetCardRuleData.serialize(javax.xml.namespace.QName,javax.xml.stream.XMLStreamWriter)"], "Fixed commit": "ce1d7d674f8b6bfd9a4eb71722c1b85c1f653ce6", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2013-12-16T23:31:23Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { processSingleRequest(((com.google.gson.JsonObject) (requests.get(r))), jsonToken, httpRequest, out); } catch (java.lang.Exception e) { handleException(out, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3374/buggy-version/BimServer.src.org.bimserver.JsonHandler.java", "BodyUseAPI": ["org.bimserver.JsonHandler.processSingleRequest(((com.google.gson.JsonObject) (requests.get(r))),java.lang.String,javax.servlet.http.HttpServletRequest,com.google.gson.stream.JsonWriter)", "com.google.gson.JsonArray.get(int)"], "Fixed commit": "fdf750f00959872486cf01ba3965d6611fb1c524", "Url": "https://api.github.com/repos/catenda/BIMserver", "Date": "2013-09-27T13:55:16Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (eclipseReader != null) { eclipseReader.close(); } } catch (java.io.IOException e) { throw new com.photon.phresco.exception.PhrescoException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/84/buggy-version/phresco-framework-impl.src.main.java.com.photon.phresco.framework.impl.ProjectManagerImpl.java", "BodyUseAPI": ["java.io.BufferedInputStream.close()"], "Fixed commit": "15c34609a9fbc93869b7c49f8d1910d0c2bc8917", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2013-09-27T10:46:58Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.timeTask.cancel(); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/24/buggy-version/src.io.github.yannici.bedwarsreloaded.Main.java", "BodyUseAPI": ["org.bukkit.scheduler.BukkitTask.cancel()"], "Fixed commit": "ff243e8ffa63398e66e0b675344f98444b6ac0c0", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-04-10T09:37:25Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { job.join(); } catch (java.lang.InterruptedException e) { process.terminate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1226/buggy-version/eclipse.plugins.net.sf.orcc.ui.src.net.sf.orcc.ui.launching.OrccRunLaunchDelegate.java", "BodyUseAPI": ["org.eclipse.core.runtime.jobs.Job.join()"], "Fixed commit": "22a6fad9f312ecd83821df54d33d0162b32dda42", "Url": "https://api.github.com/repos/ManuelSelva/orcc", "Date": "2015-01-04T10:17:14Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { output = readExecResult(consoleOutputStream); } catch (java.io.IOException e) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2346/buggy-version/docker.src.main.java.org.arquillian.cube.impl.docker.DockerClientExecutor.java", "BodyUseAPI": ["org.arquillian.cube.impl.docker.DockerClientExecutor.readExecResult(java.io.InputStream)"], "Fixed commit": "bec9bf4f2a3d06447764ef1f19aa68979ff4c2da", "Url": "https://api.github.com/repos/lordofthejars/arquillian-cube", "Date": "2015-02-02T18:57:58Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return makeObject(); } catch (java.lang.RuntimeException e) { totalPermit.release(); throw e; } catch (java.lang.Error e) { totalPermit.release(); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5972/buggy-version/java.connector-framework-internal.src.main.java.org.identityconnectors.framework.impl.api.local.ObjectPool.java", "BodyUseAPI": ["org.identityconnectors.framework.impl.api.local.ObjectPool<T>.makeObject()"], "Fixed commit": "af56eab13c32c8eaa15e1f14451e08067925abbf", "Url": "https://api.github.com/repos/Tirasa/ConnId", "Date": "2015-03-10T15:57:05Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(zanataInterface.createFile(resource))) { messages.get(org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType.ERROR).add((((((\"Topic ID \" + (topic.getId())) + \", Revision \") + (topic.getRevision())) + \" failed to be \") + \"created in Zanata.\")); error = true; }else if (!translatedTopicExists) { createPressGangTranslatedTopic(providerFactory, topic, condition, customEntities, translatedCSNode, messages); } } catch (org.jboss.resteasy.spi.UnauthorizedException e) { messages.get(org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType.ERROR).add((((((\"Topic ID \" + (topic.getId())) + \", Revision \") + (topic.getRevision())) + \" failed to be \") + \"created in Zanata due to having incorrect privileges.\")); error = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4235/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.zanata.ZanataInterface.createFile(org.zanata.rest.dto.resource.Resource)", "java.util.List<java.lang.String>.add((((((\"Topic ID \" + (topic.getId())) + \", Revision \") + (topic.getRevision())) + \" failed to be \") + \"created in Zanata.\"))", "org.jboss.pressgang.ccms.wrapper.TopicWrapper.getId()", "java.util.Map<org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType, java.util.List<java.lang.String>>.get(org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType)", "org.jboss.pressgang.ccms.wrapper.TopicWrapper.getRevision()", "org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.createPressGangTranslatedTopic(org.jboss.pressgang.ccms.provider.DataProviderFactory,org.jboss.pressgang.ccms.wrapper.TopicWrapper,java.lang.String,java.lang.String,org.jboss.pressgang.ccms.wrapper.TranslatedCSNodeWrapper,java.util.Map<org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType, java.util.List<java.lang.String>>)"], "Fixed commit": "cea49a66a8cae457b24051da103696eb5073213b", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSCSPClient", "Date": "2014-03-01T10:07:58Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(zanataInterface.createFile(resource))) { messages.get(org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType.ERROR).add((((((\"Content Spec ID \" + (contentSpecEntity.getId())) + \", \") + \"Revision \") + (contentSpecEntity.getRevision())) + \" failed to be created in Zanata.\")); return null; }else if (translatedContentSpec == null) { return createPressGangTranslatedContentSpec(providerFactory, contentSpecEntity, messages); } } catch (org.jboss.resteasy.spi.UnauthorizedException e) { messages.get(org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType.ERROR).add((((((\"Content Spec ID \" + (contentSpecEntity.getId())) + \", \") + \"Revision \") + (contentSpecEntity.getRevision())) + \" failed to be created in Zanata due to having incorrect privileges.\")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4235/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.java", "BodyUseAPI": ["java.util.Map<org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType, java.util.List<java.lang.String>>.get(org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType)", "org.jboss.pressgang.ccms.wrapper.ContentSpecWrapper.getId()", "org.jboss.pressgang.ccms.wrapper.ContentSpecWrapper.getRevision()", "org.jboss.pressgang.ccms.zanata.ZanataInterface.createFile(org.zanata.rest.dto.resource.Resource)", "java.util.List<java.lang.String>.add((((((\"Content Spec ID \" + (contentSpecEntity.getId())) + \", \") + \"Revision \") + (contentSpecEntity.getRevision())) + \" failed to be created in Zanata.\"))", "org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.createPressGangTranslatedContentSpec(org.jboss.pressgang.ccms.provider.DataProviderFactory,org.jboss.pressgang.ccms.wrapper.ContentSpecWrapper,java.util.Map<org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType, java.util.List<java.lang.String>>)"], "Fixed commit": "cea49a66a8cae457b24051da103696eb5073213b", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSCSPClient", "Date": "2014-03-01T10:07:58Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { out = java.lang.Long.parseLong(cursor.getString(0)); } catch (java.lang.NumberFormatException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8381/buggy-version/wififixer.src.org.wahtod.wififixer.utility.LogOpenHelper.java", "BodyUseAPI": ["java.lang.Long.parseLong(cursor.getString(0))", "android.database.Cursor.getString(int)"], "Fixed commit": "0758c71edde5cb83d515aee0b4bfcc34f4a5574a", "Url": "https://api.github.com/repos/Zanshinmu/Wifi-Fixer", "Date": "2014-08-19T13:46:09Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { causeOfDeath = org.simiancage.DeathTpPlus.utils.DTPConfig.DeathEventType.valueOf(org.simiancage.DeathTpPlus.utils.DTPUtils.getCreatureType(damager).toString()); } catch (java.lang.IllegalArgumentException e) { causeOfDeath = org.simiancage.DeathTpPlus.utils.DTPConfig.DeathEventType.UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4587/buggy-version/src.main.java.org.simiancage.DeathTpPlus.models.DeathDetail.java", "BodyUseAPI": ["org.simiancage.DeathTpPlus.utils.DTPConfig.DeathEventType.valueOf(org.simiancage.DeathTpPlus.utils.DTPUtils.getCreatureType(damager).toString())", "org.simiancage.DeathTpPlus.utils.DTPUtils.getCreatureType(damager).toString()", "org.simiancage.DeathTpPlus.utils.DTPUtils.getCreatureType(org.bukkit.entity.Entity)"], "Fixed commit": "83dd0f9636aac442c923988e554684d57f286555", "Url": "https://api.github.com/repos/mung3r/DeathTpPlus", "Date": "2011-12-19T01:25:34Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { recordBytes = org.warcbase.data.WarcRecordUtils.toBytes(record); content = org.warcbase.data.WarcRecordUtils.getContent(org.warcbase.data.WarcRecordUtils.fromBytes(recordBytes)); url = header.getUrl(); type = org.warcbase.data.WarcRecordUtils.getWarcResponseMimeType(content); } catch (java.lang.OutOfMemoryError e) { org.warcbase.analysis.graph.ExtractLinksWac.LOG.error(\"Caught OutOfMemoryError, skipping record.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1269/buggy-version/src.main.java.org.warcbase.analysis.graph.ExtractLinksWac.java", "BodyUseAPI": ["org.warcbase.data.WarcRecordUtils.getWarcResponseMimeType(byte[])", "org.warcbase.data.WarcRecordUtils.toBytes(org.archive.io.warc.WARCRecord)", "org.warcbase.data.WarcRecordUtils.getContent(org.warcbase.data.WarcRecordUtils.fromBytes(recordBytes))", "org.warcbase.data.WarcRecordUtils.fromBytes(byte[])", "org.archive.io.ArchiveRecordHeader.getUrl()"], "Fixed commit": "59949b3d7af49f0c60225fdb829af18f9ee67a15", "Url": "https://api.github.com/repos/jrwiebe/warcbase", "Date": "2014-12-23T03:59:01Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { bytes = org.warcbase.data.WarcRecordUtils.getBodyContent(org.warcbase.data.WarcRecordUtils.fromBytes(recordBytes)); } catch (java.lang.Exception e) { org.warcbase.analysis.graph.ExtractLinksWac.LOG.error(((e.getMessage()) + \": skipping record.\")); return; } catch (java.lang.OutOfMemoryError e) { org.warcbase.analysis.graph.ExtractLinksWac.LOG.error(\"Caught OutOfMemoryError, skipping record.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1269/buggy-version/src.main.java.org.warcbase.analysis.graph.ExtractLinksWac.java", "BodyUseAPI": ["org.warcbase.data.WarcRecordUtils.fromBytes(byte[])", "org.warcbase.data.WarcRecordUtils.getBodyContent(org.warcbase.data.WarcRecordUtils.fromBytes(recordBytes))"], "Fixed commit": "59949b3d7af49f0c60225fdb829af18f9ee67a15", "Url": "https://api.github.com/repos/jrwiebe/warcbase", "Date": "2014-12-23T03:59:01Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { extension.onUpdateData(com.pixelus.dashclock.ext.hotspot.HotspotExtension.UPDATE_REASON_CLIENT_SCAN, java.util.Arrays.asList(intent.getCharSequenceArrayExtra(HotspotExtension.WIFI_AP_CLIENTS_SCANNED_EXTRA))); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3435/buggy-version/src.main.java.com.pixelus.dashclock.ext.hotspot.broadcast.WifiApClientsScanCompleteBroadcastReceiver.java", "BodyUseAPI": ["java.util.Arrays.asList(intent.getCharSequenceArrayExtra(HotspotExtension.WIFI_AP_CLIENTS_SCANNED_EXTRA))", "android.content.Intent.getCharSequenceArrayExtra(HotspotExtension.WIFI_AP_CLIENTS_SCANNED_EXTRA)", "com.pixelus.dashclock.ext.hotspot.HotspotExtension.onUpdateData(com.pixelus.dashclock.ext.hotspot.HotspotExtension.UPDATE_REASON_CLIENT_SCAN,java.util.List)"], "Fixed commit": "45ce39a5aaa80cd9aea0d52f6a120748a4160d98", "Url": "https://api.github.com/repos/mouserd/dashclock-extension-hotspot", "Date": "2014-08-30T05:26:19Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { extension.onUpdateData(HotspotExtension.UPDATE_REASON_FORCED); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3435/buggy-version/src.main.java.com.pixelus.dashclock.ext.hotspot.broadcast.SettingsUpdatedBroadcastReceiver.java", "BodyUseAPI": ["com.pixelus.dashclock.ext.hotspot.HotspotExtension.onUpdateData(HotspotExtension.UPDATE_REASON_FORCED)"], "Fixed commit": "45ce39a5aaa80cd9aea0d52f6a120748a4160d98", "Url": "https://api.github.com/repos/mouserd/dashclock-extension-hotspot", "Date": "2014-08-30T05:26:19Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { preferences = this.loadPreferences(this.getPreferencesPath()); } catch (java.lang.Exception e) { this.preferences = new com.t_oster.visicut.Preferences(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1085/buggy-version/src.com.t_oster.visicut.managers.PreferencesManager.java", "BodyUseAPI": ["com.t_oster.visicut.managers.PreferencesManager.getPreferencesPath()", "com.t_oster.visicut.managers.PreferencesManager.loadPreferences(java.io.File)"], "Fixed commit": "c25a784159f9b8ad1638385fe5460d2b61856c13", "Url": "https://api.github.com/repos/t-oster/VisiCut", "Date": "2012-10-28T17:29:26Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { superU = ((soot.Unit) (soot.jimple.Jimple.v().newInvokeStmt(soot.jimple.Jimple.v().newSpecialInvokeExpr(thisLocal, compSootClass.getMethod(name, new java.util.ArrayList<soot.Type>(), soot.VoidType.v()).makeRef())))); } catch (java.lang.Exception ex) { noDefaultConstructMethod = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4317/buggy-version/src.soot.jimple.infoflow.android.iccta.ICCInstrumentDestination.java", "BodyUseAPI": ["soot.jimple.Jimple.v().newInvokeStmt(soot.jimple.Jimple.v().newSpecialInvokeExpr(thisLocal, compSootClass.getMethod(name, new java.util.ArrayList<soot.Type>(), soot.VoidType.v()).makeRef()))", "soot.VoidType.v()", "soot.SootClass.getMethod(java.lang.String,java.util.ArrayList<soot.Type>,soot.VoidType.v())", "soot.jimple.Jimple.v()", "soot.jimple.Jimple.v()", "soot.jimple.Jimple.v().newSpecialInvokeExpr(soot.Local,compSootClass.getMethod(name, new java.util.ArrayList<soot.Type>(), soot.VoidType.v()).makeRef())", "compSootClass.getMethod(name, new java.util.ArrayList<soot.Type>(), soot.VoidType.v()).makeRef()"], "Fixed commit": "e2c75d212f0bbfc21d610f19fcb723e2830d8b79", "Url": "https://api.github.com/repos/chubbymaggie/soot-infoflow-android-iccta", "Date": "2015-03-07T15:53:03Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.sun.awt.AWTUtilities.setWindowOpaque(this, false); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7767/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.MainSplash.java", "BodyUseAPI": ["com.sun.awt.AWTUtilities.setWindowOpaque(org.deidentifier.arx.gui.view.impl.MainSplash,boolean)"], "Fixed commit": "4ecca54872c925e99ba22b546f8804f4e8893ec9", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-03-05T16:32:29Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { database.execSQL(\"DROP TABLE playergame\"); } catch (android.database.sqlite.SQLiteException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3756/buggy-version/java.com.james.android.meepleaid.ResumeGameActivity.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)"], "Fixed commit": "21a4f3aefb2cfd80e66c06d53dd1d03cd4bbb8d4", "Url": "https://api.github.com/repos/JamesBie/meeple", "Date": "2017-09-12T15:45:03Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { privateKey = manager.getPrivateKey(publicKey, password); } catch (java.security.UnrecoverableKeyException e) { server.StrongBoxHttpHandler.logger.log(java.util.logging.Level.WARNING, \"Empty password\"); privateKey = manager.getPrivateKey(publicKey, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/644/buggy-version/strongbox-server.src.main.java.server.StrongBoxHttpHandler.java", "BodyUseAPI": ["core.KeyStoreManager.getPrivateKey(java.security.PublicKey,java.lang.String)"], "Fixed commit": "21ef3f43cb81bc968623da8f097f404b0eec3c36", "Url": "https://api.github.com/repos/thib8956/strongbox", "Date": "2017-12-31T14:15:23Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.loveboyuan.smarttrader.Item item = ((com.loveboyuan.smarttrader.Item) (getIntent().getSerializableExtra(\"ownerItem\"))); ownerItemTextView.setText(item.getName()); } catch (java.lang.RuntimeException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1148/buggy-version/SmartTrader.app.src.main.java.com.loveboyuan.smarttrader.TradeActivity.java", "BodyUseAPI": ["getIntent().getSerializableExtra(java.lang.String)", "android.widget.TextView.setText(item.getName())", "com.loveboyuan.smarttrader.TradeActivity.getIntent()", "com.loveboyuan.smarttrader.Item.getName()"], "Fixed commit": "6e7c51c4c09e58cf13dd323aa0cd3a34b9959118", "Url": "https://api.github.com/repos/CMPUT301F15T16/Team16Project", "Date": "2015-11-29T09:09:19Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.loveboyuan.smarttrader.Trade trade = ((com.loveboyuan.smarttrader.Trade) (getIntent().getSerializableExtra(\"MyTrade\"))); if ((trade.getOItem().getOwnerID()) == (com.loveboyuan.smarttrader.TradeActivity.usr.getMy_id())) { }else { } } catch (java.lang.RuntimeException e3) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1148/buggy-version/SmartTrader.app.src.main.java.com.loveboyuan.smarttrader.TradeActivity.java", "BodyUseAPI": ["trade.getOItem().getOwnerID()", "getIntent().getSerializableExtra(java.lang.String)", "com.loveboyuan.smarttrader.User.getMy_id()", "com.loveboyuan.smarttrader.TradeActivity.getIntent()", "com.loveboyuan.smarttrader.Trade.getOItem()"], "Fixed commit": "6e7c51c4c09e58cf13dd323aa0cd3a34b9959118", "Url": "https://api.github.com/repos/CMPUT301F15T16/Team16Project", "Date": "2015-11-29T09:09:19Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { findReservationInformation1.changeReservationList(mainView.getReservationList(new model.Customer(nameTextField.getText(), numberTextField.getText()))); } catch (exceptions.CustomerException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3028/buggy-version/src.view.FindReservationView.java", "BodyUseAPI": ["view.FindReservationInformation.changeReservationList(mainView.getReservationList(new model.Customer(nameTextField.getText(), numberTextField.getText())))", "view.MainView.getReservationList(model.Customer)", "javax.swing.JTextField.getText()", "javax.swing.JTextField.getText()"], "Fixed commit": "67ff0fc06854de5b6e04b479741a99dc3495b6f7", "Url": "https://api.github.com/repos/Mikkelol/GRPROBiografProjekt2", "Date": "2015-12-14T17:09:35Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { userInput = sc.nextLine().charAt(0); } catch (java.lang.StringIndexOutOfBoundsException e) { userInput = '0'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5708/buggy-version/src.group5.viope2014.Main.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.util.Scanner.nextLine()"], "Fixed commit": "e97095fd7bd17da22eed6d223ad1f2f5daccf65f", "Url": "https://api.github.com/repos/ilteoood/Viope2014", "Date": "2014-05-15T14:40:55Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(500); } catch (java.lang.InterruptedException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3348/buggy-version/src.main.java.org.arl.fjage.shell.ConsoleShell.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "56c332e4952ea922ffb4c374db545055b0f36e75", "Url": "https://api.github.com/repos/org-arl/fjage", "Date": "2013-07-23T06:07:10Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { isHidden = ((net.ess3.api.IEssentials) (org.bukkit.Bukkit.getPluginManager().getPlugin(\"Essentials\"))).getUser(name).isHidden(); } catch (java.lang.NullPointerException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/9060/buggy-version/src.net.voidteam.socketchat.events.MessageEvents.java", "BodyUseAPI": ["org.bukkit.Bukkit.getPluginManager().getPlugin(java.lang.String)", "((net.ess3.api.IEssentials) (org.bukkit.Bukkit.getPluginManager().getPlugin(\"Essentials\"))).getUser(java.lang.String)", "org.bukkit.Bukkit.getPluginManager()", "((net.ess3.api.IEssentials) (org.bukkit.Bukkit.getPluginManager().getPlugin(\"Essentials\"))).getUser(name).isHidden()"], "Fixed commit": "a4fae30dcc6243d99e44ada20fc8dc4e20ebcd91", "Url": "https://api.github.com/repos/VoidTeam/SocketChat", "Date": "2014-06-21T06:04:42Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { t.join(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/3364/buggy-version/app.src.main.java.com.psu.capstonew17.backend.sharing.SharingServer.java", "BodyUseAPI": ["java.lang.Thread.join()"], "Fixed commit": "1e344610bbf1260470f63adb210378de93337d95", "Url": "https://api.github.com/repos/ASL-Capstone/PSU-ASL-Capstone-Project", "Date": "2017-06-08T00:52:15Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((((event.getBlock().getType().equals(Material.STEP)) | (event.getBlock().getType().equals(Material.WOOD_STEP))) | (event.getBlock().getType().equals(Material.STONE_SLAB2))) | (event.getBlock().getType().equals(Material.PURPUR_SLAB))) { if ((event.getItemInHand().getItemMeta().getDisplayName().hashCode()) == (\"Upside down slab\".hashCode())) { if ((event.getBlockReplacedState().getType()) != (event.getBlockPlaced().getType())) { event.getBlock().getState().getBlock().setData(((byte) ((event.getItemInHand().getData().getData()) + 8))); } } } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4975/buggy-version/src.main.java.chibill.slabs.slabs.SlabEventHandler.java", "BodyUseAPI": ["event.getItemInHand().getData().getData()", "event.getBlock().getType()", "event.getItemInHand().getItemMeta().getDisplayName().hashCode()", "event.getItemInHand().getItemMeta()", "org.bukkit.event.block.BlockPlaceEvent.getBlock()", "event.getBlockPlaced().getType()", "org.bukkit.event.block.BlockPlaceEvent.getBlock()", "org.bukkit.event.block.BlockPlaceEvent.getBlockPlaced()", "org.bukkit.event.block.BlockPlaceEvent.getBlock()", "event.getBlock().getType().equals(Material.STONE_SLAB2)", "event.getBlockReplacedState().getType()", "event.getBlock().getState().getBlock()", "event.getItemInHand().getData()", "org.bukkit.event.block.BlockPlaceEvent.getItemInHand()", "event.getBlock().getType()", "org.bukkit.event.block.BlockPlaceEvent.getBlockReplacedState()", "event.getBlock().getType()", "event.getBlock().getType().equals(Material.WOOD_STEP)", "event.getBlock().getType()", "event.getItemInHand().getItemMeta().getDisplayName()", "org.bukkit.event.block.BlockPlaceEvent.getBlock()", "org.bukkit.event.block.BlockPlaceEvent.getItemInHand()", "event.getBlock().getState().getBlock().setData(((byte) ((event.getItemInHand().getData().getData()) + 8)))", "event.getBlock().getType().equals(Material.PURPUR_SLAB)", "java.lang.String.hashCode()", "event.getBlock().getState()", "org.bukkit.event.block.BlockPlaceEvent.getBlock()", "event.getBlock().getType().equals(Material.STEP)"], "Fixed commit": "0c8365a9e894aa8e87375216343e7184ee395ec7", "Url": "https://api.github.com/repos/wgaylord/Slabs", "Date": "2017-02-12T23:40:13Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { user.setPassword(encrypt.decrypt(user.getPassword())); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4983/buggy-version/src.main.java.security.orderpick.controller.UsersController.java", "BodyUseAPI": ["security.orderpick.datamodel.User.getPassword()", "security.orderpick.datamodel.User.setPassword(encrypt.decrypt(user.getPassword()))", "security.orderpick.util.Encrypt.decrypt(user.getPassword())"], "Fixed commit": "d0c78aa8b5b6e7930c6c9bdedcbb2af5359bceb5", "Url": "https://api.github.com/repos/ponyManolito/orderpick", "Date": "2015-05-22T15:02:21Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mmr.setDataSource(songPath, new java.util.HashMap<java.lang.String, java.lang.String>()); } catch (java.lang.Exception e) { android.widget.Toast.makeText(getActivity(), \"Failed to load artwork\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/431/buggy-version/app.src.main.java.com.symbol.uisample.HomeFragment.java", "BodyUseAPI": ["android.media.MediaMetadataRetriever.setDataSource(java.lang.String,java.util.HashMap<java.lang.String, java.lang.String>)"], "Fixed commit": "b66b5dce57dad42f69d0b2a868521f101ba781a5", "Url": "https://api.github.com/repos/DaveDe/AutoBeats", "Date": "2016-01-10T16:51:53Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pax.getDoor().getWaitingPassengers().add(pax); delay = (((pax.getDoor().getWaitingPassengers().size()) - 1) * 60.0) / clocking; } catch (java.lang.NullPointerException e) { net.bhl.cdt.paxelerate.util.toOpenCDT.Log.add(this, \"The cabin has no doors so far, please assign one manually!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6091/buggy-version/net.bhl.cdt.paxelerate.ui.src.net.bhl.cdt.paxelerate.ui.commands.GeneratePassengersCommand.java", "BodyUseAPI": ["net.bhl.cdt.paxelerate.model.Passenger.getDoor()", "pax.getDoor().getWaitingPassengers().size()", "net.bhl.cdt.paxelerate.model.Passenger.getDoor()", "pax.getDoor().getWaitingPassengers()", "pax.getDoor().getWaitingPassengers()", "pax.getDoor().getWaitingPassengers().add(net.bhl.cdt.paxelerate.model.Passenger)"], "Fixed commit": "26ada4aee16afdad599cd9d9488ffcc48dd65e51", "Url": "https://api.github.com/repos/BauhausLuftfahrt/PAXelerate", "Date": "2016-03-31T08:25:11Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Properties p = new java.util.Properties(); p.load(de.prob.Main.class.getResourceAsStream(de.prob.Main.PROB2_BUILD_PROPERTIES_FILE)); return p.getProperty(\"version\"); } catch (java.io.IOException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2339/buggy-version/de.prob2.kernel.src.main.java.de.prob.Main.java", "BodyUseAPI": ["java.util.Properties.getProperty(java.lang.String)", "java.util.Properties.load(java.io.InputStream)", "java.lang.Class.getResourceAsStream(java.lang.String)"], "Fixed commit": "ecfba01bc73530e3f875f5117b0a1cd05a0fb6c0", "Url": "https://api.github.com/repos/bendisposto/prob2", "Date": "2017-10-13T08:42:41Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { m_inputReader.close(); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5489/buggy-version/bedrock-runtime.src.main.java.com.oracle.bedrock.runtime.console.FileWriterApplicationConsole.java", "BodyUseAPI": ["java.io.Reader.close()"], "Fixed commit": "c0b28a3d425ee622fcf58ed32e07a301f044c6d2", "Url": "https://api.github.com/repos/tmiddlet2666/oracle-bedrock", "Date": "2017-01-06T20:11:27Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { m_inputReader.close(); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5489/buggy-version/bedrock-runtime.src.main.java.com.oracle.bedrock.runtime.console.SystemApplicationConsole.java", "BodyUseAPI": ["java.io.Reader.close()"], "Fixed commit": "c0b28a3d425ee622fcf58ed32e07a301f044c6d2", "Url": "https://api.github.com/repos/tmiddlet2666/oracle-bedrock", "Date": "2017-01-06T20:11:27Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return observe(scanStrategy); } catch (java.lang.SecurityException e) { return io.reactivex.Observable.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/7657/buggy-version/library.src.main.java.com.github.pwittchen.reactivebeacons.library.rx2.ReactiveBeacons.java", "BodyUseAPI": ["com.github.pwittchen.reactivebeacons.library.rx2.ReactiveBeacons.observe(com.github.pwittchen.reactivebeacons.library.rx2.scan.strategy.ScanStrategy)"], "Fixed commit": "c8887ba401284c08dd33825787c13ce49fbcd071", "Url": "https://api.github.com/repos/pwittchen/ReactiveBeacons", "Date": "2017-03-29T18:12:25Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { path = java.net.URLDecoder.decode(path, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { com.appdynamics.extensions.logmonitor.apache.processors.FilePointerProcessor.LOGGER.warn(java.lang.String.format(\"Unable to decode file path [%s] using UTF-8\", path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/4086/buggy-version/src.main.java.com.appdynamics.extensions.logmonitor.apache.processors.FilePointerProcessor.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "2fd605a0a67c821af3dedd27ee2b411d7abca8b2", "Url": "https://api.github.com/repos/Appdynamics/apache-log-monitoring-extension", "Date": "2015-05-07T10:28:48Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.FileOutputStream fos = new java.io.FileOutputStream(\"/tmp/mac-allergens.ttl\"); payload.write(fos, \"Turtle\"); fos.close(); } catch (java.io.IOException e) { java.lang.System.out.println((\"Error \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6567/buggy-version/src.main.java.com.epimorphics.registry.webapi.RequestProcessor.java", "BodyUseAPI": ["java.io.FileOutputStream.close()", "org.apache.jena.rdf.model.Model.write(java.io.FileOutputStream,java.lang.String)"], "Fixed commit": "5e75f88ec5c5ee14c0f71c88ce7eb0aeec9445c1", "Url": "https://api.github.com/repos/UKGovLD/registry-core", "Date": "2017-09-04T16:56:48Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String text = \"OK\"; int port = java.lang.Integer.parseInt(java.lang.System.getenv(\"VCAP_APP_PORT\")); java.net.ServerSocket ss = new java.net.ServerSocket(port); while (true) { java.net.Socket s = ss.accept(); s.getOutputStream().write((\"HTTP/1.1 200 OK\\nContent-Type: text/html; charset=utf-8\\nContent-Length: 2\\n\\n\" + text).getBytes()); } } catch (java.io.IOException e) { java.lang.System.out.println(e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1518/buggy-version/src.main.java.com.ibm.developer.App.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.io.OutputStream.write(byte[])", "java.lang.String.getBytes()", "java.net.ServerSocket.accept()", "java.net.Socket.getOutputStream()", "java.lang.System.getenv(java.lang.String)"], "Fixed commit": "75146327278e583356fee6a56df04577a2ef9f70", "Url": "https://api.github.com/repos/fadub/ClusterDemo", "Date": "2015-08-13T07:03:23Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { oilTypeNameAry = oilTypeList.get(i).getOilName().getBytes(\"utf-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6443/buggy-version/eps-client.src.main.java.com.bhz.eps.processor.GetOilInfoProcessor.java", "BodyUseAPI": ["java.util.List<com.bhz.eps.entity.OilInfo>.get(int)", "oilTypeList.get(i).getOilName().getBytes(java.lang.String)", "oilTypeList.get(i).getOilName()"], "Fixed commit": "207e8684a3b6adc8b0ee9d54591767e25540138d", "Url": "https://api.github.com/repos/hdepsdev/eps", "Date": "2016-07-07T00:30:31Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { oilCategoryNameAry = oilCategoryList.get(i).getOilName().getBytes(\"utf-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6443/buggy-version/eps-client.src.main.java.com.bhz.eps.processor.GetOilInfoProcessor.java", "BodyUseAPI": ["oilCategoryList.get(i).getOilName().getBytes(java.lang.String)", "java.util.List<com.bhz.eps.entity.OilInfo>.get(int)", "oilCategoryList.get(i).getOilName()"], "Fixed commit": "207e8684a3b6adc8b0ee9d54591767e25540138d", "Url": "https://api.github.com/repos/hdepsdev/eps", "Date": "2016-07-07T00:30:31Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ShiftNameAry = shiftInfolist.get(i).getShiftName().getBytes(\"utf-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6443/buggy-version/eps-client.src.main.java.com.bhz.eps.processor.GetShiftInfoProcessor.java", "BodyUseAPI": ["shiftInfolist.get(i).getShiftName()", "shiftInfolist.get(i).getShiftName().getBytes(java.lang.String)", "java.util.List<com.bhz.eps.entity.ShiftInfo>.get(int)"], "Fixed commit": "207e8684a3b6adc8b0ee9d54591767e25540138d", "Url": "https://api.github.com/repos/hdepsdev/eps", "Date": "2016-07-07T00:30:31Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String query = ((((((((((\"MATCH (n:\" + (domainClass.getSimpleName())) + \" {id:'\") + domainId) + \"'}), (n2:\") + (rangeClass.getSimpleName())) + \"{id:'\") + rangeId) + \"'}) CREATE UNIQUE \") + \"(n)-[r:\") + (edge.toString())) + \"]->(n2) return n,r,n2\"; issueNeo4JRequestStrings(query); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2197/buggy-version/competence-database.src.main.scala.uzuzjmd.competence.persistence.neo4j.CompetenceNeo4jQueryManagerImpl.java", "BodyUseAPI": ["java.lang.Class<? extends uzuzjmd.competence.persistence.abstractlayer.Dao>.getSimpleName()", "uzuzjmd.competence.persistence.ontology.Edge.toString()", "java.lang.Class<? extends uzuzjmd.competence.persistence.abstractlayer.Dao>.getSimpleName()", "uzuzjmd.competence.persistence.neo4j.CompetenceNeo4jQueryManagerImpl.issueNeo4JRequestStrings(java.lang.String)"], "Fixed commit": "d36e7588b20ce7578442c2e874a8a8c2d4bc6131", "Url": "https://api.github.com/repos/juliandehne/competence-database", "Date": "2017-07-18T12:40:41Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { m_es.shutdown(); m_es.awaitTermination(365, java.util.concurrent.TimeUnit.DAYS); } catch (java.lang.Exception ex) { org.voltdb.importer.ImportProcessor.m_logger.error(\"Failed to stop import processor executor.\", ex); ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/1297/buggy-version/src.frontend.org.voltdb.importer.ImportProcessor.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.shutdown()", "java.util.concurrent.ExecutorService.awaitTermination(int,java.util.concurrent.TimeUnit)"], "Fixed commit": "6f9bceef89733983b5be2f157e80d44e884b5466", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2015-07-21T17:41:32Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { isTrue = signature.verify(decryptBASE64(sign)); } catch (java.lang.Exception e) { isTrue = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/5066/buggy-version/src.com.netease.yaru.DSACoder.java", "BodyUseAPI": ["java.security.Signature.verify(decryptBASE64(sign))", "com.netease.yaru.DSACoder.decryptBASE64(java.lang.String)"], "Fixed commit": "ecd48d645132547d77641038d4ddf2d35da179c0", "Url": "https://api.github.com/repos/MrGirl/yaru", "Date": "2015-06-09T03:25:57Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { proto = beanFactory.getBean(p, com.weibo.api.motan.config.ProtocolConfig.class); } catch (org.springframework.beans.factory.NoSuchBeanDefinitionException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6616/buggy-version/motan-springsupport.src.main.java.com.weibo.api.motan.config.springsupport.ServiceConfigBean.java", "BodyUseAPI": ["org.springframework.beans.factory.BeanFactory.getBean(java.lang.String,java.lang.Class)"], "Fixed commit": "f6132302708857929392f3d4ee912dcb45dbc749", "Url": "https://api.github.com/repos/littleyang/motan", "Date": "2016-08-29T06:22:02Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fileWriter.write((s + \"\\n\")); fileWriter.flush(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/976/buggy-version/app.src.main.java.com.pp2.starlords.pp2.FileLogger.java", "BodyUseAPI": ["java.io.FileWriter.flush()", "java.io.FileWriter.write(java.lang.String)"], "Fixed commit": "dffc8498ca79e36c358e8fa09414118e92a24248", "Url": "https://api.github.com/repos/MortenBirk/PP2", "Date": "2014-10-04T11:05:50Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((googleMap) == null) { googleMap = ((com.google.android.gms.maps.MapFragment) (getFragmentManager().findFragmentById(R.id.map))).getMap(); } googleMap.setMapType(GoogleMap.MAP_TYPE_HYBRID); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/976/buggy-version/app.src.main.java.com.pp2.starlords.pp2.NewAPIActivity.java", "BodyUseAPI": ["((com.google.android.gms.maps.MapFragment) (getFragmentManager().findFragmentById(R.id.map))).getMap()", "getFragmentManager().findFragmentById(R.id.map)", "com.google.android.gms.maps.GoogleMap.setMapType(GoogleMap.MAP_TYPE_HYBRID)", "com.pp2.starlords.pp2.NewAPIActivity.getFragmentManager()"], "Fixed commit": "dffc8498ca79e36c358e8fa09414118e92a24248", "Url": "https://api.github.com/repos/MortenBirk/PP2", "Date": "2014-10-04T11:05:50Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { framework.Dao.freeRequestUpdate(requeteSqlDelete, null); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/938/buggy-version/src.dao.User.java", "BodyUseAPI": ["framework.Dao.freeRequestUpdate(java.lang.String,<nulltype>)"], "Fixed commit": "9fa265f254303d035e769d9e53b2614c3a69efaa", "Url": "https://api.github.com/repos/pcrouillere/Jumper", "Date": "2014-06-10T15:38:52Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { transformer = com.rackspace.feeds.filter.TransformerUtils.getInstanceForXsltAsResource(com.rackspace.feeds.filter.TenantedFilter.XSLT_PATH); } catch (java.lang.Exception e) { com.rackspace.feeds.filter.TenantedFilter.LOG.error((\"Error loading Xslt: \" + (com.rackspace.feeds.filter.TenantedFilter.XSLT_PATH))); throw new com.rackspace.feeds.filter.ServletException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6927/buggy-version/filters.tenant-filter.src.main.java.com.rackspace.feeds.filter.TenantedFilter.java", "BodyUseAPI": ["com.rackspace.feeds.filter.TransformerUtils.getInstanceForXsltAsResource(java.lang.String)"], "Fixed commit": "cfd73d49dadcae51b7b496e2ddad4016a1ae3c70", "Url": "https://api.github.com/repos/usnavi/cloudfeeds-atomhopper", "Date": "2014-11-05T15:58:29Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { transformer = com.rackspace.feeds.filter.TransformerUtils.getInstanceForXsltAsResource(xsltPath); } catch (java.lang.Exception e) { com.rackspace.feeds.filter.XsltFilter.LOG.error((\"Error loading Xslt: \" + xsltPath)); throw new com.rackspace.feeds.filter.ServletException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6927/buggy-version/filters.xslt-filter.src.main.java.com.rackspace.feeds.filter.XsltFilter.java", "BodyUseAPI": ["com.rackspace.feeds.filter.TransformerUtils.getInstanceForXsltAsResource(java.lang.String)"], "Fixed commit": "cfd73d49dadcae51b7b496e2ddad4016a1ae3c70", "Url": "https://api.github.com/repos/usnavi/cloudfeeds-atomhopper", "Date": "2014-11-05T15:58:29Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { transformer = com.rackspace.feeds.filter.TransformerUtils.getInstanceForXsltAsResource(com.rackspace.feeds.filter.ExternalHrefFilter.XSLT_PATH); } catch (java.lang.Exception e) { com.rackspace.feeds.filter.ExternalHrefFilter.LOG.error((\"Error loading Xslt: \" + (com.rackspace.feeds.filter.ExternalHrefFilter.XSLT_PATH))); throw new com.rackspace.feeds.filter.ServletException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6927/buggy-version/filters.external-href-filter.src.main.java.com.rackspace.feeds.filter.ExternalHrefFilter.java", "BodyUseAPI": ["com.rackspace.feeds.filter.TransformerUtils.getInstanceForXsltAsResource(java.lang.String)"], "Fixed commit": "cfd73d49dadcae51b7b496e2ddad4016a1ae3c70", "Url": "https://api.github.com/repos/usnavi/cloudfeeds-atomhopper", "Date": "2014-11-05T15:58:29Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { transformer = com.rackspace.feeds.filter.TransformerUtils.getInstanceForXsltAsFile(xsltFilePath, \"main\"); } catch (java.lang.Exception e) { com.rackspace.feeds.filter.Xml2JsonFilter.LOG.error((\"Error loading Xslt: \" + xsltFilePath)); throw new com.rackspace.feeds.filter.ServletException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/6927/buggy-version/filters.json-filter.src.main.java.com.rackspace.feeds.filter.Xml2JsonFilter.java", "BodyUseAPI": ["com.rackspace.feeds.filter.TransformerUtils.getInstanceForXsltAsFile(java.lang.String,java.lang.String)"], "Fixed commit": "cfd73d49dadcae51b7b496e2ddad4016a1ae3c70", "Url": "https://api.github.com/repos/usnavi/cloudfeeds-atomhopper", "Date": "2014-11-05T15:58:29Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { xstream.fromXML(in, temp); } catch (final com.thoughtworks.xstream.XStreamException ex) { if (!(ex.getMessage().equals(\" : input contained no data\"))) { throw ex; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/67/buggy-version/kie-nio2-backport.kie-nio2-model.src.main.java.org.kie.commons.java.nio.base.Properties.java", "BodyUseAPI": ["com.thoughtworks.xstream.XStream.fromXML(java.io.InputStream,org.kie.commons.java.nio.base.Properties)"], "Fixed commit": "ddd56ca6fd54fe9c12b198704513b6d4f7a5bd13", "Url": "https://api.github.com/repos/winklerm/kie-commons", "Date": "2013-01-01T14:40:12Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cmp = type.compare(type.format(min), type.format(max)); } catch (java.lang.Exception e) { throw new java.lang.IllegalArgumentException((((\"Invalid data item \" + min) + \" or \") + max)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/8386/buggy-version/src.main.org.deidentifier.arx.aggregates.HierarchyBuilderIntervalBased.java", "BodyUseAPI": ["org.deidentifier.arx.DataType<U>.format(U)", "org.deidentifier.arx.DataType<U>.compare(type.format(min),type.format(max))", "org.deidentifier.arx.DataType<U>.format(U)"], "Fixed commit": "9b3971b000853e94b4ead54572c0c8c8b28dc867", "Url": "https://api.github.com/repos/johnpatcher/arx", "Date": "2014-04-15T14:46:04Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { bw = new java.io.BufferedWriter(new java.io.FileWriter(file, false)); } catch (java.lang.Exception e) { am_utils.CUtils.warning(\"Failed to create buffered writer!!!\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2659/buggy-version/ArticleManagerClient.app.src.main.java.list_builder.Public.java", "BodyUseAPI": [], "Fixed commit": "bdde126eb311fd4909ed1644d2dcbf154d6a441c", "Url": "https://api.github.com/repos/NThering/UCF-COP4331C-17Fall-0001-T15", "Date": "2017-11-29T03:38:14Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { bw = new java.io.BufferedWriter(new java.io.FileWriter(file, false)); } catch (java.lang.Exception e) { am_utils.CUtils.warning(\"Failed to create buffered writer!!!\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2659/buggy-version/ArticleManagerClient.app.src.main.java.list_builder.Public.java", "BodyUseAPI": [], "Fixed commit": "bdde126eb311fd4909ed1644d2dcbf154d6a441c", "Url": "https://api.github.com/repos/NThering/UCF-COP4331C-17Fall-0001-T15", "Date": "2017-11-29T03:38:14Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (int i = 0; i < (dCat.size()); i++) { if ((mCat[i]) == null) continue; bw.write(mCat[i].printName()); bw.newLine(); for (int j = 0; j < (mCat[i].size()); j++) { if ((mCat[i].children()[j]) == null) continue; bw.write((\"\\t\" + (mCat[i].children()[j].printName()))); bw.newLine(); java.util.ArrayList<am_utils.ArticleInfo> ls = networking.Public.getArticlesFromCategory(i, j, false); for (am_utils.ArticleInfo item : ls) { bw.write((\"\\t\\t\" + (item.printName))); bw.newLine(); } } } } catch (java.lang.Exception e) { am_utils.CUtils.warning(\"Encountered error when writing out file!!!\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V19/2659/buggy-version/ArticleManagerClient.app.src.main.java.list_builder.Public.java", "BodyUseAPI": ["mCat[i].printName()", "mCat[i].children()[j].printName()", "mCat[i].children()", "java.io.BufferedWriter.newLine()", "java.io.BufferedWriter.newLine()", "java.io.BufferedWriter.newLine()", "mCat[i].size()", "java.io.BufferedWriter.write((\"\\t\" + (mCat[i].children()[j].printName())))", "networking.Public.getArticlesFromCategory(int,int,boolean)", "java.io.BufferedWriter.write(mCat[i].printName())", "am_utils.DefaultCategories.size()", "java.io.BufferedWriter.write((\"\\t\\t\" + (item.printName)))", "mCat[i].children()"], "Fixed commit": "bdde126eb311fd4909ed1644d2dcbf154d6a441c", "Url": "https://api.github.com/repos/NThering/UCF-COP4331C-17Fall-0001-T15", "Date": "2017-11-29T03:38:14Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { res = administrador.generarTablaResultados(); } catch (co.edu.poli.ingesoft2.granreto.GranRetoException e) { java.lang.System.err.println(\"\\nERROR\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/474/buggy-version/RetoIngeSoftII2014.src.co.edu.poli.ingesoft2.granreto.FachadaGranReto.java", "BodyUseAPI": ["co.edu.poli.ingesoft2.granreto.AdministradorTorneo.generarTablaResultados()"], "Fixed commit": "5792a4218b52fab941cdeeff9521ced20c48af9f", "Url": "https://api.github.com/repos/juancho0506/universidad", "Date": "2014-05-03T20:45:32Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { key = dir.register(watcher, java.nio.file.StandardWatchEventKinds.ENTRY_CREATE, java.nio.file.StandardWatchEventKinds.ENTRY_MODIFY, java.nio.file.StandardWatchEventKinds.ENTRY_DELETE, java.nio.file.StandardWatchEventKinds.OVERFLOW); } catch (java.io.IOException ex) { if (parent != null) { au.edu.uq.cmm.paul.watcher.FileWatcher.LOG.warn(((((\"Subdirectory \" + local) + \" for facility \") + (facility.getFacilityName())) + \" is not readable: ignoring it\"), ex); return; }else { throw ex; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1404/buggy-version/paul.src.main.java.au.edu.uq.cmm.paul.watcher.FileWatcher.java", "BodyUseAPI": ["java.nio.file.Path.register(java.nio.file.WatchService,java.nio.file.WatchEvent.Kind<java.nio.file.Path>,java.nio.file.WatchEvent.Kind<java.nio.file.Path>,java.nio.file.WatchEvent.Kind<java.nio.file.Path>,java.nio.file.WatchEvent.Kind<java.lang.Object>)"], "Fixed commit": "e55a512717e0d19fd5f5a23ac4d0630b2ab2fb7b", "Url": "https://api.github.com/repos/crawley/CMM-data-grabber", "Date": "2013-07-26T07:32:10Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.List<lv.label.Annotation> e = edges.get(ancestor); } catch (java.lang.IndexOutOfBoundsException e) { ancestor = node; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1779/buggy-version/src.lv.pipe.MateTools.java", "BodyUseAPI": ["java.util.List<java.util.List<lv.label.Annotation>>.get(int)"], "Fixed commit": "9500f9eec6011c67634bc03d828a75119b2d1294", "Url": "https://api.github.com/repos/aznotins/Coref", "Date": "2015-03-19T19:52:37Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { executorService.awaitTermination(5, java.util.concurrent.TimeUnit.SECONDS); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2819/buggy-version/src.com.model.ParallelAlgorithm.java", "BodyUseAPI": ["java.util.concurrent.ScheduledExecutorService.awaitTermination(int,java.util.concurrent.TimeUnit)"], "Fixed commit": "0872e79cda7b661d6332cacaa9df274cbe5db1f1", "Url": "https://api.github.com/repos/Creamery/CSC612M_Parallelized_Levenshtein_Distance", "Date": "2017-12-10T10:00:07Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dia.show(); } catch (java.lang.IllegalArgumentException e) { android.util.Log.w(\"tag\", (\"WARNING: dialog not showing\\n\\n\" + e)); e.printStackTrace(); dialogShow = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/708/buggy-version/Android.Data_Collector.src.edu.uml.cs.isense.collector.shared.QueueUploader.java", "BodyUseAPI": ["android.app.ProgressDialog.show()"], "Fixed commit": "2bd6ed19b9058c8f6a80bef1b8eabaf5420c4045", "Url": "https://api.github.com/repos/isenseDev/iSENSE-Hardware", "Date": "2012-10-15T17:48:37Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (java.util.UUID.fromString(StringUUID).toString().equals(StringUUID)) flag = true; } catch (java.lang.Exception E) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/405/buggy-version/blueprints-usergrid-graph.src.main.java.org.apache.usergrid.drivers.blueprints.UsergridGraph.java", "BodyUseAPI": ["java.util.UUID.toString()", "java.util.UUID.fromString(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "a485571506bcf012273cd66b4a7515d44ea59da7", "Url": "https://api.github.com/repos/ayesha12/blueprints", "Date": "2016-03-02T22:25:13Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sendPicByUri(selectedImage); } catch (java.lang.Exception e) { android.widget.Toast.makeText(getActivity(), \"\u65e0\u6548\u56fe\u7247\", Toast.LENGTH_SHORT).show(); android.util.Log.e(\"\u53d1\u9001\u56fe\u7247\u5f02\u5e38\uff1a\", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2958/buggy-version/hxim_library.src.main.java.com.cb.hxim_library.easeui.ui.EaseChatFragment.java", "BodyUseAPI": ["com.cb.hxim_library.easeui.ui.EaseChatFragment.sendPicByUri(android.net.Uri)"], "Fixed commit": "53e28f0900aa11205464758b6c75bd2262926a17", "Url": "https://api.github.com/repos/chengbiao1314/android_huanxin", "Date": "2016-11-04T08:33:07Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.reflect.Method began = this.getClass().getDeclaredMethod(\"touchesBegan\", new java.lang.Class[]{ org.cocoa4android.ns.NSSet.class, org.cocoa4android.ui.UIEvent.class }); if (began != null) { hasTouchesBegan = YES; } } catch (java.lang.SecurityException e) { e.printStackTrace(); } catch (java.lang.NoSuchMethodException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2639/buggy-version/Cocoa4Android.src.org.cocoa4android.ui.UIView.java", "BodyUseAPI": ["org.cocoa4android.ui.UIView.getClass()", "java.lang.Class<? extends org.cocoa4android.ui.UIView>.getDeclaredMethod(java.lang.String,java.lang.Class[])"], "Fixed commit": "6f8537203a60de3057d52c186069dbb220532845", "Url": "https://api.github.com/repos/youmumzgit/Cocoa4Android", "Date": "2012-12-23T07:11:07Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String getArch = eu.chainfire.libsuperuser.Shell.SH.run((\"cat \" + (ARCH_POWER))).toString(); if (getArch.contains(\"1\")) { PutBooleanPreferences(\"archP_enable\", java.lang.Boolean.TRUE); }else if (getArch.contains(\"0\")) { PutBooleanPreferences(\"archP_enable\", java.lang.Boolean.FALSE); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7811/buggy-version/app.src.main.java.com.ultrakernel.adapter.CheckAdapter.java", "BodyUseAPI": ["eu.chainfire.libsuperuser.Shell.SH.run((\"cat \" + (ARCH_POWER))).toString()", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "com.ultrakernel.adapter.CheckAdapter.PutBooleanPreferences(java.lang.String,java.lang.Boolean)", "com.ultrakernel.adapter.CheckAdapter.PutBooleanPreferences(java.lang.String,java.lang.Boolean)", "eu.chainfire.libsuperuser.Shell.SH.run((\"cat \" + (ARCH_POWER)))"], "Fixed commit": "da205199d68a317c6e5ac606445a4155ce315d45", "Url": "https://api.github.com/repos/Ahmed-Hady/UltraKernel", "Date": "2017-01-18T01:44:45Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { oDb.getRawGraph().getMetadata().getSchema().getClass(orientDBIndexClass).createProperty(\"Neo4jLabelList\", OType.EMBEDDEDLIST, OType.STRING); try { oDb.getRawGraph().getMetadata().getSchema().getClass(orientDBIndexClass).getProperty(\"Neo4jLabelList\").createIndex(OClass.INDEX_TYPE.NOTUNIQUE_HASH_INDEX); } catch (java.lang.Exception e) { logString = ((\"Found an error when trying to create a NOT UNIQUE Index in OrientDB on the 'Neo4jLabelList' Property of the vertex Class '\" + orientDBIndexClass) + \"': \") + (e.getMessage()); ONeo4jImporter.importLogger.log(java.util.logging.Level.SEVERE, logString); } } catch (java.lang.Exception e) { logString = ((\"Found an error when trying to create the 'Neo4jLabelList' Property in OrientDB on the vertex Class '\" + orientDBIndexClass) + \"': \") + (e.getMessage()); ONeo4jImporter.importLogger.log(java.util.logging.Level.SEVERE, logString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5871/buggy-version/src.main.java.com.orientechnologies.orient.neo4jimporter.ONeo4jImporterSchemaMigrator.java", "BodyUseAPI": ["com.tinkerpop.blueprints.impls.orient.OrientGraphNoTx.getRawGraph()", "oDb.getRawGraph().getMetadata().getSchema().getClass(java.lang.String)", "oDb.getRawGraph().getMetadata().getSchema()", "oDb.getRawGraph().getMetadata().getSchema().getClass(java.lang.String)", "oDb.getRawGraph().getMetadata()", "oDb.getRawGraph().getMetadata().getSchema().getClass(orientDBIndexClass).getProperty(\"Neo4jLabelList\").createIndex(OClass.INDEX_TYPE.NOTUNIQUE_HASH_INDEX)", "oDb.getRawGraph().getMetadata().getSchema().getClass(orientDBIndexClass).createProperty(java.lang.String,OType.EMBEDDEDLIST,OType.STRING)", "java.lang.Exception.getMessage()", "oDb.getRawGraph().getMetadata().getSchema().getClass(orientDBIndexClass).getProperty(java.lang.String)", "oDb.getRawGraph().getMetadata().getSchema()", "com.tinkerpop.blueprints.impls.orient.OrientGraphNoTx.getRawGraph()", "ONeo4jImporter.importLogger.log(java.util.logging.Level,java.lang.String)", "oDb.getRawGraph().getMetadata()"], "Fixed commit": "07139fa193e55a26c240ccbff20eb921ead04604", "Url": "https://api.github.com/repos/orientechnologies/orientdb-neo4j-importer", "Date": "2016-12-16T00:55:12Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { spawned.addPassenger(toStack); } catch (java.lang.NoSuchMethodError ex) { spawned.setPassenger(toStack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5511/buggy-version/Genie.src.main.java.com.djrapitops.genie.wishes.mob.SpawnMobRidingOnWish.java", "BodyUseAPI": ["org.bukkit.entity.Entity.addPassenger(org.bukkit.entity.Entity)"], "Fixed commit": "d6d1a30fb0b03d9dd93bff1f81e04c3977f92723", "Url": "https://api.github.com/repos/Rsl1122/Genie", "Date": "2017-08-11T14:23:41Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (reader != null) reader.close(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1335/buggy-version/src.realtalk.util.JSONParser.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "c081cbeca77c850441bbd2ec65b9678af230a3f5", "Url": "https://api.github.com/repos/hazarij/realtalk", "Date": "2013-06-02T00:54:32Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { objTransform.set(cam.view).inv(); } catch (java.lang.RuntimeException e) { Gdx.app.debug(incanshift.player.FovObjectHandler.tag, \"Warning: Camera view matrix not invertible!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/947/buggy-version/core.src.incanshift.player.FovObjectHandler.java", "BodyUseAPI": ["com.badlogic.gdx.math.Matrix4.set(cam.view)", "objTransform.set(cam.view).inv()"], "Fixed commit": "6264e9c8ae6c214ce564752fa6674a6c39c2db3b", "Url": "https://api.github.com/repos/ristoretto/incanshift", "Date": "2015-09-28T17:35:22Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { support = java.nio.charset.Charset.isSupported(encoding); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5749/buggy-version/src.java.org.apache.nutch.util.EncodingDetector.java", "BodyUseAPI": ["java.nio.charset.Charset.isSupported(java.lang.String)"], "Fixed commit": "bf8518133c98e4a8220b684bb0f5fc6c3167589f", "Url": "https://api.github.com/repos/ysc/nutch", "Date": "2013-04-17T13:56:46Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { context.makeCurrent(); } catch (java.lang.NullPointerException e) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6678/buggy-version/src.main.java.org.jtrfp.trcl.core.ThreadManager.java", "BodyUseAPI": ["javax.media.opengl.GLContext.makeCurrent()"], "Fixed commit": "69b50fd31ac43661b709657b72b89d560b1680d1", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-06-01T05:48:08Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tabs.displayAllReleventItems(itemsList); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7427/buggy-version/java.NameWakander.NameWakander.java", "BodyUseAPI": ["net.minecraft.creativetab.CreativeTabs.displayAllReleventItems(java.util.List<net.minecraft.item.ItemStack>)"], "Fixed commit": "233598111c1292194bba7efd2c9a2dc358596960", "Url": "https://api.github.com/repos/aksource/NameWakander", "Date": "2014-08-26T12:25:27Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(removed.isEmpty())) { for (java.lang.String id : removed) { projectMapper.remove(id); } } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3522/buggy-version/src.main.java.com.inspur.da.dsw.service.impl.ProjectManageServiceImpl.java", "BodyUseAPI": ["com.inspur.da.dsw.dao.ProjectMapper.remove(java.lang.String)", "java.util.List<java.lang.String>.isEmpty()"], "Fixed commit": "e75d0e231f8999a0158155a361ab79443fc7ac03", "Url": "https://api.github.com/repos/xuande/idsw", "Date": "2017-12-21T08:55:13Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Double.parseDouble(mDefaultValue); return mDefaultValue; } catch (java.lang.NumberFormatException e) { org.jraf.androidcontentprovidergenerator.Log.w(org.jraf.androidcontentprovidergenerator.model.Field.TAG, ((((\"The default value for field \" + (mEntity.getNameLowerCase())) + \".\") + (getName())) + \" could not be parsed as a floating point type, which is probably a problem\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4827/buggy-version/src.main.java.org.jraf.androidcontentprovidergenerator.model.Field.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "9a566acb6a56e58a7c24631f64b9ba9984fe251d", "Url": "https://api.github.com/repos/BoD/android-contentprovider-generator", "Date": "2015-02-04T09:30:25Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (((browser.getBrowserName().equals(originalBrowser.getBrowserName())) && (browser.getOs().equals(originalBrowser.getOs()))) && ((java.lang.Integer.parseInt(browser.getLongVersion())) > (java.lang.Integer.parseInt(candidateBrowser.getLongVersion())))) { candidateBrowser = browser; } } catch (java.lang.NumberFormatException e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/8368/buggy-version/src.main.java.com.saucelabs.ci.BrowserFactory.java", "BodyUseAPI": ["com.saucelabs.ci.Browser.getOs()", "com.saucelabs.ci.Browser.getLongVersion()", "java.lang.Integer.parseInt(candidateBrowser.getLongVersion())", "java.lang.Integer.parseInt(browser.getLongVersion())", "com.saucelabs.ci.Browser.getBrowserName()", "com.saucelabs.ci.Browser.getOs()", "browser.getOs().equals(originalBrowser.getOs())", "com.saucelabs.ci.Browser.getLongVersion()", "browser.getBrowserName().equals(originalBrowser.getBrowserName())", "com.saucelabs.ci.Browser.getBrowserName()"], "Fixed commit": "75b7715f0ba690c614ae07680de6ab519cc1d28d", "Url": "https://api.github.com/repos/saucelabs/ci-sauce", "Date": "2015-01-15T03:39:47Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { em.appendField(com.cloudcraftgaming.discal.module.announcement.MessageManager.getMessage(\"Embed.Announcement.Info.ID\", settings), a.getAnnouncementId().toString(), true); } catch (java.lang.NullPointerException e) { em.appendField(com.cloudcraftgaming.discal.module.announcement.MessageManager.getMessage(\"Embed.Announcement.Info.ID\", settings), \"ID IS NULL???\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6270/buggy-version/src.main.java.com.cloudcraftgaming.discal.module.announcement.AnnouncementMessageFormatter.java", "BodyUseAPI": ["a.getAnnouncementId().toString()", "sx.blah.discord.util.EmbedBuilder.appendField(com.cloudcraftgaming.discal.module.announcement.MessageManager.getMessage(\"Embed.Announcement.Info.ID\", settings),a.getAnnouncementId().toString(),boolean)", "com.cloudcraftgaming.discal.module.announcement.MessageManager.getMessage(java.lang.String,com.cloudcraftgaming.discal.internal.data.GuildSettings)", "com.cloudcraftgaming.discal.module.announcement.Announcement.getAnnouncementId()"], "Fixed commit": "43285d4a21451568c016a2b286b71999a71f192f", "Url": "https://api.github.com/repos/NovaFox161/DisCal-Discord-Bot", "Date": "2017-06-23T15:33:13Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { info.putDouble(\"audioSessionId\", player.getAudioSessionId()); } catch (java.lang.IllegalStateException e) { android.util.Log.e(com.futurice.rctaudiotoolkit.AudioPlayerModule.LOG_TAG, e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6699/buggy-version/android.lib.src.main.java.com.futurice.rctaudiotoolkit.AudioPlayerModule.java", "BodyUseAPI": ["android.media.MediaPlayer.getAudioSessionId()", "com.facebook.react.bridge.WritableMap.putDouble(java.lang.String,player.getAudioSessionId())"], "Fixed commit": "1e90eec9695022f38cb8cc973fc68f8cde62c1a8", "Url": "https://api.github.com/repos/dead23angel/react-native-audio-toolkit", "Date": "2017-11-20T03:31:51Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { appFilePath = getFilesDir().getAbsolutePath(); } catch (java.lang.NullPointerException ex) { appFilePath = getFilesDir().getPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/617/buggy-version/src.com.fkf.commercial.WelcomeActivity.java", "BodyUseAPI": ["getFilesDir().getAbsolutePath()", "com.fkf.commercial.WelcomeActivity.getFilesDir()"], "Fixed commit": "e1fe442e3541bdd712d1e69c9021ebc3c61e558f", "Url": "https://api.github.com/repos/kavi707/FKF-App", "Date": "2015-11-23T15:52:22Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mContext.startActivity(intent); me.sheimi.sgit.utils.ActivityUtils.forwardTransition(((android.app.Activity) (mContext))); } catch (android.content.ActivityNotFoundException e) { mViewUtils.showToastMessage(R.string.error_no_edit_app); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7340/buggy-version/SGit.src.main.java.me.sheimi.sgit.utils.FsUtils.java", "BodyUseAPI": ["android.content.Context.startActivity(android.content.Intent)", "me.sheimi.sgit.utils.ActivityUtils.forwardTransition(android.content.Context)"], "Fixed commit": "5c7724686fcbc31919c84ba9f921cff95da8f2fa", "Url": "https://api.github.com/repos/sheimi/SGit", "Date": "2013-10-19T23:37:34Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { de.janrufmonitor.macab.MacAddressBookProxy.getInstance().getDataHandler().deleteAttributes(uuid); } catch (java.sql.SQLException e) { this.m_logger.log(java.util.logging.Level.SEVERE, e.getLocalizedMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5554/buggy-version/modules.macaddressbook.src.de.janrufmonitor.repository.mapping.MacAddressBookMappingManager.java", "BodyUseAPI": ["de.janrufmonitor.macab.MacAddressBookProxy.getInstance()", "de.janrufmonitor.macab.MacAddressBookProxy.getInstance().getDataHandler().deleteAttributes(java.lang.String)", "de.janrufmonitor.macab.MacAddressBookProxy.getInstance().getDataHandler()"], "Fixed commit": "29df1e8d0d16d1d05a7b5827c6897ea666b0ba9f", "Url": "https://api.github.com/repos/tbrandt77/janrufmonitor", "Date": "2013-07-15T22:23:04Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { root = fxmlLoader.load(); fxmlLoader.<run.windows.ChatWindow>getController().setNetController(netControll); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7306/buggy-version/src.run.windows.MainWindowController.java", "BodyUseAPI": ["javafx.fxml.FXMLLoader.getController()", "javafx.fxml.FXMLLoader.load()", "fxmlLoader.<run.windows.ChatWindow>getController().setNetController(net.NetworkingController)"], "Fixed commit": "761ac68c15d924677beb9ac8e9e7b604b87424f6", "Url": "https://api.github.com/repos/xy6ept/p2pChat", "Date": "2017-12-26T11:29:46Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sender.sendMessage(((((com.chiorichan.ChatColor.NEGATIVE) + \"\") + (com.chiorichan.ChatColor.DARK_AQUA)) + (var1[((int) ((java.lang.System.nanoTime()) % ((long) (var1.length))))]))); } catch (java.lang.Throwable throwable) { sender.sendMessage(((((com.chiorichan.ChatColor.NEGATIVE) + \"\") + (com.chiorichan.ChatColor.DARK_AQUA)) + \"Witty comment unavailable :(\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/860/buggy-version/src.com.chiorichan.command.defaults.SecretCommand.java", "BodyUseAPI": ["java.lang.System.nanoTime()", "com.chiorichan.command.CommandSender.sendMessage(((((com.chiorichan.ChatColor.NEGATIVE) + \"\") + (com.chiorichan.ChatColor.DARK_AQUA)) + (var1[((int) ((java.lang.System.nanoTime()) % ((long) (var1.length))))])))"], "Fixed commit": "fff3e2d7fd480ff441010884917673954015a1ce", "Url": "https://api.github.com/repos/ChioriGreene/ChioriWebServer", "Date": "2013-12-23T20:33:40Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mNfcAdapter = android.nfc.NfcAdapter.getDefaultAdapter(this); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6209/buggy-version/app.src.main.java.com.imperium.power.nfcmango.NFCScreen.java", "BodyUseAPI": ["android.nfc.NfcAdapter.getDefaultAdapter(com.imperium.power.nfcmango.NFCScreen)"], "Fixed commit": "5fa1f3336fcd3f207b52b4f3b8d37b47e5375d75", "Url": "https://api.github.com/repos/ImperiumProjects/NFCMango", "Date": "2017-07-12T15:30:27Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final nz.co.jsrsolutions.ds3.DataStub.QUOTE[] quotes = eodDataProvider.getQuotes(exchange, symbol.getCode(), requestRange.getLower(), requestRange.getUpper(), nz.co.jsrsolutions.ds3.command.UpdateExchangeQuotesCommand.DEFAULT_FREQUENCY); eodDataSink.updateExchangeSymbolQuotes(exchange, symbol.getCode(), quotes); } catch (java.lang.Exception e) { nz.co.jsrsolutions.ds3.command.UpdateExchangeQuotesCommand.logger.error(\"Unable to update quotes\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/3944/buggy-version/src.main.java.nz.co.jsrsolutions.ds3.command.UpdateExchangeQuotesCommand.java", "BodyUseAPI": ["nz.co.jsrsolutions.util.Range<java.util.Calendar>.getUpper()", "nz.co.jsrsolutions.ds3.EodDataSink.updateExchangeSymbolQuotes(java.lang.String,symbol.getCode(),nz.co.jsrsolutions.ds3.DataStub.QUOTE[])", "nz.co.jsrsolutions.ds3.DataStub.SYMBOL.getCode()", "nz.co.jsrsolutions.util.Range<java.util.Calendar>.getLower()", "nz.co.jsrsolutions.ds3.EodDataProvider.getQuotes(java.lang.String,symbol.getCode(),requestRange.getLower(),requestRange.getUpper(),java.lang.String)", "nz.co.jsrsolutions.ds3.DataStub.SYMBOL.getCode()"], "Fixed commit": "d19ad694eee86764d8ef15535c7c77df1e2159db", "Url": "https://api.github.com/repos/jsr38/ds3", "Date": "2012-02-18T21:31:49Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { g.drawImage((i == ((selected) - 1) ? display.sImgs.get(i) : display.imgs.get(i)), ((p.x) + (i * size)), p.y, size, size, null); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/85/buggy-version/src.com.webs.kevkawmcode.SudokuSolver.Solver.Selector.java", "BodyUseAPI": ["display.sImgs.get(int)", "java.awt.Graphics.drawImage((i == ((selected) - 1) ? display.sImgs.get(i) : display.imgs.get(i)),int,int,int,int,<nulltype>)", "display.imgs.get(int)"], "Fixed commit": "0493ddd3323972952d3d6b9f56548ea9830d480c", "Url": "https://api.github.com/repos/KevKawm/SudokuSolver", "Date": "2014-10-21T02:50:08Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { expression.evaluate(); } catch (org.ietr.preesm.experiment.model.expression.ExpressionEvaluationException e) { imageRenderingDecorator.setX((((pe.getGraphicsAlgorithm().getWidth()) / 2) - 8)); imageRenderingDecorator.setY(1); return imageRenderingDecorator; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4417/buggy-version/plugins.org.ietr.preesm.ui.src.org.ietr.preesm.ui.pimm.decorators.DelayDecorators.java", "BodyUseAPI": ["org.ietr.preesm.experiment.model.pimm.Expression.evaluate()"], "Fixed commit": "e0bf390a9054f32d327dbadf02bd881cd1299130", "Url": "https://api.github.com/repos/preesm/preesm", "Date": "2017-07-05T13:22:35Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { viewer.refresh(); } catch (java.lang.Exception e) { org.eclipse.ls.views.LaunchSchedule.log.info(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7369/buggy-version/src.org.eclipse.ls.views.LaunchSchedule.java", "BodyUseAPI": ["org.eclipse.jface.viewers.TableViewer.refresh()"], "Fixed commit": "1124b1be6f0643982ebe562070b7116efd58507a", "Url": "https://api.github.com/repos/lars159/eclipselaunchsc", "Date": "2013-09-18T21:38:40Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { m_CouponLines = ((uk.chromis.pos.ticket.CouponSet) (dr.getObject(10))); } catch (uk.chromis.basic.BasicException e) { m_CouponLines = new uk.chromis.pos.ticket.CouponSet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2309/buggy-version/src-pos.uk.chromis.pos.ticket.TicketInfo.java", "BodyUseAPI": ["uk.chromis.data.loader.DataRead.getObject(int)"], "Fixed commit": "ac4e18d41d14d15baf7cfcba0a4b855312f5d0d1", "Url": "https://api.github.com/repos/ChromisPos/ChromisPOS", "Date": "2015-12-14T17:32:25Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Long empId = java.lang.Long.valueOf(employeeId); if (empId instanceof java.lang.Long) { employee = employeeService.findOne(empId); } } catch (java.lang.NumberFormatException e) { java.lang.System.out.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4472/buggy-version/FinalExam_JPA.src.main.java.com.packt.webstore.controller.EmployeeController.java", "BodyUseAPI": ["com.packt.webstore.service.EmployeeService.findOne(java.lang.Long)", "java.lang.Long.valueOf(java.lang.String)"], "Fixed commit": "7d7f0186029578d95403ed0c3a84a9a430394516", "Url": "https://api.github.com/repos/ben-tes/WAA-Labs", "Date": "2017-10-20T17:55:12Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { lasttime = ((java.lang.Long) (lastweather.get(event.getWorld().getName()))); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2935/buggy-version/src.de.crannk.xPaw.RandomWeatherWeatherListener.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap.get(event.getWorld().getName())", "event.getWorld().getName()", "org.bukkit.event.weather.WeatherChangeEvent.getWorld()"], "Fixed commit": "17b34404dc24bce14a8b15e131c6673c1a2392dd", "Url": "https://api.github.com/repos/Tux2/RandomWeather", "Date": "2011-05-11T06:42:00Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { parser.beginObject(); if (!(parser.nextName().equals(\"text\"))) { throw new java.net.ProtocolException(); } rawDisplayName = parser.nextString(); } catch (java.lang.Throwable e) { org.opendatakit.logging.WebLogger.getLogger(getAppName()).printStackTrace(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1584/buggy-version/tables_app.src.main.java.org.opendatakit.tables.fragments.TablePreferenceFragment.java", "BodyUseAPI": ["android.util.JsonReader.beginObject()", "parser.nextName().equals(java.lang.String)", "android.util.JsonReader.nextName()", "android.util.JsonReader.nextString()"], "Fixed commit": "519d4923032db67537d81047c05b29fe27dbc688", "Url": "https://api.github.com/repos/opendatakit/tables", "Date": "2017-06-06T21:58:35Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sr = handleCall(((org.universAAL.middleware.service.ServiceCall) (m.getContent()))); } catch (java.lang.Exception e) { sr = new org.universAAL.middleware.service.ServiceResponse(CallStatus.serviceSpecificFailure); java.io.Writer result = new java.io.StringWriter(); java.io.PrintWriter printWriter = new java.io.PrintWriter(result); e.printStackTrace(printWriter); java.lang.String ex = result.toString(); sr.addOutput(new org.universAAL.middleware.service.owls.process.ProcessOutput(ServiceResponse.PROP_SERVICE_SPECIFIC_ERROR, ex)); org.universAAL.middleware.container.utils.LogUtils.logDebug(owner, org.universAAL.middleware.service.ServiceCallee.class, \"handleRequest\", new java.lang.Object[]{ \"An error occurred while executing the service callee.\" }, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5869/buggy-version/middleware.core.mw.bus.service.core.src.main.java.org.universAAL.middleware.service.ServiceCallee.java", "BodyUseAPI": ["org.universAAL.middleware.service.ServiceCallee.handleCall(((org.universAAL.middleware.service.ServiceCall) (m.getContent())))", "org.universAAL.middleware.bus.msg.BusMessage.getContent()"], "Fixed commit": "563b3cd66cfeab6a6889737051cf6344fce3440b", "Url": "https://api.github.com/repos/universAAL/middleware", "Date": "2015-09-06T03:48:23Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { relativeDAPath = ((((((\"/xaaspackager/\" + (java.net.URLEncoder.encode(artifactType.getNamespaceURI(), \"UTF-8\"))) + \"/\") + (artifactType.getLocalPart())) + \"/\") + (this.currentState.getDeploymentArtifactPath().getFileName())) + \"/\") + (this.currentState.getDeploymentArtifactPath().getFileName()); relativeDAPathDoubleEncode = ((((((\"/xaaspackager/\" + (java.net.URLEncoder.encode(java.net.URLEncoder.encode(artifactType.getNamespaceURI(), \"UTF-8\"), \"UTF-8\"))) + \"/\") + (artifactType.getLocalPart())) + \"/\") + (this.currentState.getDeploymentArtifactPath().getFileName())) + \"/\") + (this.currentState.getDeploymentArtifactPath().getFileName()); } catch (java.io.UnsupportedEncodingException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/4768/buggy-version/XaaSPackager.src.main.java.org.opentosca.xaaspackager.packager.PackagerTask.java", "BodyUseAPI": ["this.currentState.getDeploymentArtifactPath().getFileName()", "javax.xml.namespace.QName.getNamespaceURI()", "javax.xml.namespace.QName.getNamespaceURI()", "org.opentosca.xaaspackager.model.PackageTaskState.getDeploymentArtifactPath()", "org.opentosca.xaaspackager.model.PackageTaskState.getDeploymentArtifactPath()", "this.currentState.getDeploymentArtifactPath().getFileName()", "org.opentosca.xaaspackager.model.PackageTaskState.getDeploymentArtifactPath()", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "javax.xml.namespace.QName.getLocalPart()", "javax.xml.namespace.QName.getLocalPart()", "this.currentState.getDeploymentArtifactPath().getFileName()", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "this.currentState.getDeploymentArtifactPath().getFileName()", "org.opentosca.xaaspackager.model.PackageTaskState.getDeploymentArtifactPath()"], "Fixed commit": "525a0847a468c93b0161d69e0fa02585f75fea51", "Url": "https://api.github.com/repos/nyuuyn/XaaSPackager", "Date": "2015-10-12T12:42:09Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { telemetryValue = com.ugcs.telemetrytool.TelemetryValue.create(com.ugcs.common.util.value.AbstractValue.fromBytes(bytes), time); } catch (java.lang.IllegalArgumentException e) { java.lang.System.err.println((\"WARNING: \" + (e.getMessage()))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2586/buggy-version/ucs-telemetry-tool.src.main.java.com.ugcs.telemetrytool.TelemetryReader.java", "BodyUseAPI": ["com.ugcs.telemetrytool.TelemetryValue.create(com.ugcs.common.util.value.AbstractValue.fromBytes(bytes),java.util.Date)", "com.ugcs.common.util.value.AbstractValue.fromBytes(byte[])"], "Fixed commit": "24f03f351cfff35c59634244a8e1ad06ce82d3af", "Url": "https://api.github.com/repos/ugcs/ugcs-java-sdk", "Date": "2017-04-18T09:34:18Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.controleurPrincipal.chargerLiv(\"\"); } catch (java.lang.Exception e) { java.lang.System.out.print(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2866/buggy-version/src.devoo.h4301.views.FenetrePrincipale.java", "BodyUseAPI": ["devoo.h4301.views.ControleurPrincipal.chargerLiv(java.lang.String)"], "Fixed commit": "d3d0cb5512eca270a714567f5f0f0f9f1e53f62e", "Url": "https://api.github.com/repos/kimchouard/DevOO-H4301", "Date": "2013-12-18T12:50:36Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { v = getListView().getChildAt((position - (getListView().getFirstVisiblePosition()))); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1481/buggy-version/Android_code.STEM-METER.app.src.main.java.com.stemmeter.stem_meter.SensorsFragment.java", "BodyUseAPI": ["getListView().getChildAt((position - (getListView().getFirstVisiblePosition())))", "com.stemmeter.stem_meter.SensorsFragment.SensorListAdapter.getListView()", "getListView().getFirstVisiblePosition()", "com.stemmeter.stem_meter.SensorsFragment.SensorListAdapter.getListView()"], "Fixed commit": "6370701811e358b1f7579bc508f6b9771f943612", "Url": "https://api.github.com/repos/jhansen3141/STEM_Meter", "Date": "2017-03-05T18:14:31Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userID = java.lang.Integer.parseInt(request.getParameter(\"userToModify\")); } catch (java.lang.NumberFormatException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/2908/buggy-version/MuseumServer.src.java.servlets.ModifyUser.java", "BodyUseAPI": ["java.lang.Integer.parseInt(request.getParameter(\"userToModify\"))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "08047529f4a135367ffc76b0d9109e7fb12605ce", "Url": "https://api.github.com/repos/esd-soft-eng/server", "Date": "2013-03-07T16:12:08Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { super.value(new java.math.BigDecimal(value.toString())); } catch (java.lang.NumberFormatException e) { super.value(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6576/buggy-version/core.src.main.java.de.odysseus.staxon.json.stream.util.AutoPrimitiveTarget.java", "BodyUseAPI": ["java.lang.Object.toString()", "de.odysseus.staxon.json.stream.util.StreamTargetDelegate.value(java.math.BigDecimal)"], "Fixed commit": "ea8eae15a86f3e3444301cdcae529026b338c406", "Url": "https://api.github.com/repos/beckchr/staxon", "Date": "2015-10-18T09:28:20Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = outputStream.toString(\"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { throw new org.saiku.adhoc.exceptions.SaikuAdhocException(\"unsuported encoding\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/5426/buggy-version/saiku-adhoc-core.src.main.java.org.saiku.adhoc.service.cda.CdaAccessor.java", "BodyUseAPI": ["java.io.ByteArrayOutputStream.toString(java.lang.String)"], "Fixed commit": "c9746bcc16730828caaab3e2a43f9d4a45e55fc2", "Url": "https://api.github.com/repos/Mgiepz/saiku-adhoc", "Date": "2012-03-21T21:15:31Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { entities.User user = ((entities.User) (em.createNamedQuery(\"User.findByEmail\").setParameter(\"email\", email).getSingleResult())); return user; } catch (javax.persistence.NoResultException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/9241/buggy-version/GGProjectv2-ejb.src.java.dal.UserRepository.java", "BodyUseAPI": ["em.createNamedQuery(\"User.findByEmail\").setParameter(java.lang.String,java.lang.String)", "em.createNamedQuery(\"User.findByEmail\").setParameter(\"email\", email).getSingleResult()", "javax.persistence.EntityManager.createNamedQuery(java.lang.String)"], "Fixed commit": "b689211adb1f9c82cded655d9f89012698f49788", "Url": "https://api.github.com/repos/ragutislt/gg_project", "Date": "2016-05-09T15:08:55Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_VIEW); intent.setData(android.net.Uri.parse(webView.getCurrentUrl())); startActivity(intent); finish(); } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, \"Error: could not launch browser.\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6010/buggy-version/src.main.java.org.quantumbadger.redreader.activities.WebViewActivity.java", "BodyUseAPI": ["org.quantumbadger.redreader.fragments.WebViewFragment.getCurrentUrl()", "org.quantumbadger.redreader.activities.WebViewActivity.finish()", "android.net.Uri.parse(webView.getCurrentUrl())", "org.quantumbadger.redreader.activities.WebViewActivity.startActivity(android.content.Intent)", "android.content.Intent.setData(android.net.Uri.parse(webView.getCurrentUrl()))"], "Fixed commit": "41037991cf8d2420a2600432300f55687576e9e9", "Url": "https://api.github.com/repos/Rroia/RedReader", "Date": "2014-04-19T14:22:48Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.theta360.lib.PtpipInitiator.close(); } catch (com.theta360.lib.ThetaException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/6616/buggy-version/dConnectDevicePlugin.dConnectDeviceTheta.app.src.main.java.org.deviceconnect.android.deviceplugin.theta.core.ThetaM15.java", "BodyUseAPI": ["com.theta360.lib.PtpipInitiator.close()"], "Fixed commit": "6dee961106ff7d14719d84ffedfe72d6ee8b1128", "Url": "https://api.github.com/repos/TakayukiHoshi1984/DeviceConnect-Android", "Date": "2015-11-19T04:22:11Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return java.time.LocalDateTime.of(_startDate, ((_startTime) == null ? java.time.LocalTime.MAX : _startTime)); } catch (java.lang.NullPointerException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7258/buggy-version/src.taskie.commands.AddCommand.java", "BodyUseAPI": ["java.time.LocalDateTime.of(java.time.LocalDate,java.time.LocalTime)"], "Fixed commit": "5b697c5bd14096b2367393f011d3a5a6ea47dacd", "Url": "https://api.github.com/repos/cs2103jan2015-t15-2j/main", "Date": "2015-03-09T10:32:32Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return java.time.LocalDateTime.of(_endDate, ((_endTime) == null ? java.time.LocalTime.MAX : _endTime)); } catch (java.lang.NullPointerException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/7258/buggy-version/src.taskie.commands.AddCommand.java", "BodyUseAPI": ["java.time.LocalDateTime.of(java.time.LocalDate,java.time.LocalTime)"], "Fixed commit": "5b697c5bd14096b2367393f011d3a5a6ea47dacd", "Url": "https://api.github.com/repos/cs2103jan2015-t15-2j/main", "Date": "2015-03-09T10:32:32Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { o.hashCode(); } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V20/1051/buggy-version/src.main.java.randoop.contract.HashCodeReturnsNormally.java", "BodyUseAPI": ["java.lang.Object.hashCode()"], "Fixed commit": "2c7c413d40053412d1a4da1d646a91f2b0b270a7", "Url": "https://api.github.com/repos/huangwaylon/randoop", "Date": "2016-06-11T01:50:22Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.coderslab.entity.Users u = jdbcTemplate.queryForObject(sql, new java.lang.Object[]{ userName, password }, new com.coderslab.dao.UsersDao.UsersMapper()); if (u != null) { return u; } } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6687/buggy-version/src.java.com.coderslab.dao.UsersDao.java", "BodyUseAPI": ["org.springframework.jdbc.core.JdbcTemplate.queryForObject(java.lang.String,java.lang.Object[],com.coderslab.dao.UsersDao.UsersMapper)"], "Fixed commit": "3dd24738d7bb8b3c9de5247c06e1b05046c3b5cd", "Url": "https://api.github.com/repos/zubayer-ahamed/spring_inventory_jdbc", "Date": "2017-09-24T13:08:12Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return doFunctionApplication(subexpressions, environment, builder); } catch (java.lang.Exception e) { java.lang.System.out.println((\"Function: \" + expression)); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5171/buggy-version/src.main.java.com.jayantkrish.jklol.lisp.AmbEval.java", "BodyUseAPI": ["com.jayantkrish.jklol.lisp.AmbEval.doFunctionApplication(java.util.List<com.jayantkrish.jklol.lisp.SExpression>,com.jayantkrish.jklol.lisp.Environment,com.jayantkrish.jklol.lisp.ParametricBfgBuilder)"], "Fixed commit": "d48538683dd4dfc2ece9eea637a343218f18a9fa", "Url": "https://api.github.com/repos/matt-gardner/jklol", "Date": "2016-01-30T01:35:58Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { urlDBUnit.updateURLDomainAuthorityData(currentURL.getUrl_address(), da); } catch (java.lang.Exception e) { com.gofetch.controllers.DomainPageAuthorityCrawl.log.severe(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5569/buggy-version/GoFetch.src.com.gofetch.controllers.DomainPageAuthorityCrawl.java", "BodyUseAPI": ["com.gofetch.entities.URL.getUrl_address()", "com.gofetch.entities.URLDBService.updateURLDomainAuthorityData(currentURL.getUrl_address(),java.lang.Integer)"], "Fixed commit": "989b338c92ba0e4fc050d8a779ac390384af6177", "Url": "https://api.github.com/repos/Kastle2/GoFetch", "Date": "2013-09-09T10:42:07Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { gameManager.checkForZombies(); } catch (java.rmi.RemoteException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/114/buggy-version/Server.src.GameWatchdogs.StandardGameWatchdog.java", "BodyUseAPI": ["Server.Interfaces.GameManager.checkForZombies()"], "Fixed commit": "0a03dfcbdad50a21536a6435c1ce8f5583104dda", "Url": "https://api.github.com/repos/VelociousTurtles-Inc/Turtles", "Date": "2014-05-26T10:37:38Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((de.st_ddt.crazygeo.worldedit.WorldEditBridge.plugin) == null) de.st_ddt.crazygeo.worldedit.WorldEditBridge.plugin = ((com.sk89q.worldedit.bukkit.WorldEditPlugin) (org.bukkit.Bukkit.getServer().getPluginManager().getPlugin(\"WorldEdit\"))); return de.st_ddt.crazygeo.worldedit.WorldEditBridge.plugin; } catch (final java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5726/buggy-version/CrazyGeo.src.de.st_ddt.crazygeo.worldedit.WorldEditBridge.java", "BodyUseAPI": ["org.bukkit.Bukkit.getServer().getPluginManager().getPlugin(java.lang.String)", "org.bukkit.Bukkit.getServer()", "org.bukkit.Bukkit.getServer().getPluginManager()"], "Fixed commit": "f71ac9cb0211348f2a196944e308120722526f39", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2012-06-08T10:37:20Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { blockchainNetworkType = getDao().getBlockchainNetworkTypeFromBroadcast(txHash); } catch (com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.exceptions.CantExecuteDatabaseOperationException e) { blockchainNetworkType = com.bitdubai.fermat_api.layer.all_definition.enums.BlockchainNetworkType.DEFAULT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3960/buggy-version/BCH.plugin.crypto_network.fermat-bch-plugin-crypto-network-bitcoin-bitdubai.src.main.java.com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.structure.BitcoinCryptoNetworkManager.java", "BodyUseAPI": ["com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.database.BitcoinCryptoNetworkDatabaseDao.getBlockchainNetworkTypeFromBroadcast(java.lang.String)", "com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.structure.BitcoinCryptoNetworkManager.getDao()"], "Fixed commit": "af145823215de5dc8896dcfe24a0c0bc56e1f99e", "Url": "https://api.github.com/repos/acostarodrigo/fermat", "Date": "2016-01-19T18:36:53Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { securityContext = authenticate(info.getUserName(), info.getPassword(), null); context.setSecurityContext(securityContext); securityContexts.add(securityContext); super.addConnection(context, info); } catch (java.lang.Exception error) { if (securityContext != null) { securityContexts.remove(securityContext); } context.setSecurityContext(null); throw error; } finally { java.lang.Thread.currentThread().setContextClassLoader(original); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7811/buggy-version/activemq-broker.src.main.java.org.apache.activemq.security.JaasAuthenticationBroker.java", "BodyUseAPI": ["org.apache.activemq.command.ConnectionInfo.getUserName()", "org.apache.activemq.broker.ConnectionContext.setSecurityContext(org.apache.activemq.security.SecurityContext)", "org.apache.activemq.security.JaasAuthenticationBroker.add(org.apache.activemq.security.SecurityContext)", "org.apache.activemq.security.JaasAuthenticationBroker.authenticate(info.getUserName(),info.getPassword(),<nulltype>)", "org.apache.activemq.command.ConnectionInfo.getPassword()", "org.apache.activemq.security.AbstractAuthenticationBroker.addConnection(org.apache.activemq.broker.ConnectionContext,org.apache.activemq.command.ConnectionInfo)"], "Fixed commit": "a15626193c8d3c099b0bcf1e605b892b533a4d3e", "Url": "https://api.github.com/repos/bloommi/activemq", "Date": "2017-08-04T12:46:16Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { in.yutou.site.common.auth.domain.User _user = userService.getUserById(googleAuth.getUserId(idToken)); request.setAttribute(\"user\", _user); if (_user.getGroup().getName().equals(\"root\")) { result = proceedingJoinPoint.proceed(); return result; } group = _user.getGroup(); in.yutou.site.common.auth.powercontrol.PowerControlAspect.logger.debug((\"[Auth] check power with \" + _user)); in.yutou.site.common.auth.powercontrol.PowerControlAspect.logger.debug((\"[Auth] requires: \" + requires)); } catch (in.yutou.site.common.exception.BusinessException e) { group = groupService.getGroupByName(\"no-login\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2865/buggy-version/src.main.java.in.yutou.site.common.auth.powercontrol.PowerControlAspect.java", "BodyUseAPI": ["in.yutou.site.common.auth.domain.User.getGroup()", "org.apache.log4j.Logger.debug(java.lang.String)", "org.aspectj.lang.ProceedingJoinPoint.proceed()", "in.yutou.site.common.auth.service.UserService.getUserById(googleAuth.getUserId(idToken))", "in.yutou.site.common.auth.GoogleAuth.getUserId(java.lang.String)", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,in.yutou.site.common.auth.domain.User)", "_user.getGroup().getName()", "_user.getGroup().getName().equals(java.lang.String)", "org.apache.log4j.Logger.debug((\"[Auth] check power with \" + _user))", "in.yutou.site.common.auth.domain.User.getGroup()"], "Fixed commit": "ab959ed1fb24a30a51d4c9202a4d981318af630c", "Url": "https://api.github.com/repos/ytxiuxiu/mysite-2.0-back-end", "Date": "2016-04-01T22:47:07Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { context.startService(streamingServiceIntent); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3184/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.services.RestartLocalServiceReceiver.java", "BodyUseAPI": ["android.content.Context.startService(android.content.Intent)"], "Fixed commit": "f2de9047854af92421fecd8baf4491571c324a99", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-11-18T20:04:56Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { context.startService(streamingServiceIntent); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3184/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.services.RestartServiceReceiver.java", "BodyUseAPI": ["android.content.Context.startService(android.content.Intent)"], "Fixed commit": "f2de9047854af92421fecd8baf4491571c324a99", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-11-18T20:04:56Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { context.startService(streamingServiceIntent); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3184/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.services.RestartLiveNotificationReceiver.java", "BodyUseAPI": ["android.content.Context.startService(android.content.Intent)"], "Fixed commit": "f2de9047854af92421fecd8baf4491571c324a99", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-11-18T20:04:56Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { models.project.Project project = logics.project.Project.createProject(name, customerId, catalogId, qaIds, qpIds); return ok((((((\"Name: \" + name) + \" QAs: \") + qaIds) + \" QPs: \") + qpIds)); } catch (exceptions.EntityNotFoundException e) { return status(400, e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/264/buggy-version/quali-t-app.app.controllers.Project.java", "BodyUseAPI": ["logics.project.Project.createProject(java.lang.String,java.lang.Long,java.lang.Long,java.util.List<java.lang.Long>,java.util.List<java.lang.Long>)", "controllers.Project.ok(java.lang.String)"], "Fixed commit": "a3965cf07ffec2ec42e53faff02cbbda02a1eee8", "Url": "https://api.github.com/repos/team-qualit/quali-t", "Date": "2015-04-27T10:38:12Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { executor = java.util.concurrent.Executors.newFixedThreadPool(2); java.util.concurrent.Future<T> future = executor.submit(callable); return future.get(timeoutMillis, java.util.concurrent.TimeUnit.MILLISECONDS); } finally { if (executor != null) executor.shutdownNow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6301/buggy-version/src.main.util.Util.java", "BodyUseAPI": ["java.util.concurrent.Executors.newFixedThreadPool(int)", "java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable<T>)", "java.util.concurrent.Future<T>.get(long,java.util.concurrent.TimeUnit)"], "Fixed commit": "3e0aae16c27afd3fd5a5ca58a052486a7df95013", "Url": "https://api.github.com/repos/damondoucet/fault-tolerant-screen-sharing-distribution", "Date": "2015-05-08T14:58:09Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { count = java.lang.Integer.parseInt(countString); } catch (java.lang.NumberFormatException e) { count = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8419/buggy-version/src.main.java.org.cy3sabiork.SabioQuery.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "99cd16cd0f29316fe89c830688fa75e0a2f8c706", "Url": "https://api.github.com/repos/matthiaskoenig/cy3sabiork", "Date": "2016-06-28T07:26:34Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { myClient.connect(new java.net.InetSocketAddress(ipAddr, 6666), 2000); } catch (java.net.ConnectException e) { java.lang.System.out.println(\"Failed to connect to server!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/195/buggy-version/src.MainGameClass.java", "BodyUseAPI": ["java.net.Socket.connect(java.net.InetSocketAddress,int)"], "Fixed commit": "32655fa5482bc3647aa194317712207982ee5e30", "Url": "https://api.github.com/repos/teswolf96/ANewAdventure", "Date": "2015-12-19T06:11:21Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.twitter.sdk.android.core.TwitterCore.getInstance().getApiClient().getStatusesService().update(socialPostValue.prepareTwPost(), null, null, null, null, null, null, null, new com.twitter.sdk.android.core.Callback<com.twitter.sdk.android.core.models.Tweet>() { @java.lang.Override public void success(com.twitter.sdk.android.core.Result<com.twitter.sdk.android.core.models.Tweet> result) { android.util.Log.d(\"TW_SUCCESS\", result.data.text); ru.mos.polls.social.controller.SocialUIController.showPostingResult(baseActivity, socialPostValue, null); } @java.lang.Override public void failure(com.twitter.sdk.android.core.TwitterException e) { android.util.Log.e(POSTING_ERROR, e.getMessage()); ru.mos.polls.social.controller.SocialUIController.showPostingResult(baseActivity, socialPostValue, e); } }); } catch (java.lang.IllegalStateException e) { android.util.Log.e(POSTING_ERROR, e.getMessage()); ru.mos.polls.social.controller.SocialUIController.clearAndUnbindSocial(baseActivity, SocialManager.SOCIAL_ID_TW); android.support.v7.app.AlertDialog.Builder builder = new android.support.v7.app.AlertDialog.Builder(baseActivity); builder.setMessage(R.string.error_expired_access_token).setPositiveButton(R.string.ag_ok, null).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5851/buggy-version/app.src.main.java.ru.mos.polls.social.controller.SocialUIController.java", "BodyUseAPI": ["com.twitter.sdk.android.core.TwitterCore.getInstance().getApiClient().getStatusesService().update(socialPostValue.prepareTwPost(),<nulltype>,<nulltype>,<nulltype>,<nulltype>,<nulltype>,<nulltype>,<nulltype>,com.twitter.sdk.android.core.Callback<com.twitter.sdk.android.core.models.Tweet>)", "android.util.Log.e(POSTING_ERROR,e.getMessage())", "com.twitter.sdk.android.core.TwitterException.getMessage()", "com.twitter.sdk.android.core.TwitterCore.getInstance().getApiClient().getStatusesService()", "com.twitter.sdk.android.core.TwitterCore.getInstance().getApiClient()", "ru.mos.polls.social.model.SocialPostValue.prepareTwPost()", "android.util.Log.d(java.lang.String,result.data.text)", "com.twitter.sdk.android.core.TwitterCore.getInstance()", "ru.mos.polls.social.controller.SocialUIController.showPostingResult(ru.mos.elk.BaseActivity,ru.mos.polls.social.model.SocialPostValue,com.twitter.sdk.android.core.TwitterException)", "ru.mos.polls.social.controller.SocialUIController.showPostingResult(ru.mos.elk.BaseActivity,ru.mos.polls.social.model.SocialPostValue,<nulltype>)"], "Fixed commit": "52cdcbcb70cfab4f6c03b010cb5f774b5748425c", "Url": "https://api.github.com/repos/active-citizen/android.java", "Date": "2016-09-09T09:03:53Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { context.unregisterReceiver(mReceiver); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2846/buggy-version/microsoftband.src.main.java.org.md2k.microsoftband.MyBlueTooth.java", "BodyUseAPI": ["android.content.Context.unregisterReceiver(android.content.BroadcastReceiver)"], "Fixed commit": "b6ba21a32ce90167e1dd4028c5950ecf8c9997a9", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-MicrosoftBand", "Date": "2016-06-15T09:05:54Z"},
{"Line": "=>2818", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { collaboration.mainView.engine.updateChart(progressPanel, tasksTable, teamMembers); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(collaboration.mainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2573/buggy-version/src.collaboration.mainView.java", "BodyUseAPI": ["collaboration.mainEngine.updateChart(javax.swing.JPanel,javax.swing.JTable,java.util.ArrayList<java.lang.String>)"], "Fixed commit": "2d00ebccc5607ee8913f0d816d8f520e1d36becd", "Url": "https://api.github.com/repos/EricAshley11/CollaborationJava7", "Date": "2012-12-13T17:05:06Z"},
{"Line": "=>2968", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { collaboration.mainView.engine.updateChart(progressPanel, tasksTable, teamMembers); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(collaboration.mainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2573/buggy-version/src.collaboration.mainView.java", "BodyUseAPI": ["collaboration.mainEngine.updateChart(javax.swing.JPanel,javax.swing.JTable,java.util.ArrayList<java.lang.String>)"], "Fixed commit": "2d00ebccc5607ee8913f0d816d8f520e1d36becd", "Url": "https://api.github.com/repos/EricAshley11/CollaborationJava7", "Date": "2012-12-13T17:05:06Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { proxyFactory = new org.jboss.pressgang.ccms.zanata.ZanataProxyFactory(URI, details.getUsername(), details.getToken(), versionInfo, false, disableSSLCert); } catch (java.lang.RuntimeException e) { if (e.getMessage().startsWith(\"Incorrect username/password\")) { throw new org.jboss.resteasy.spi.UnauthorizedException(e.getMessage()); }else { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8656/buggy-version/src.main.java.org.jboss.pressgang.ccms.zanata.ZanataInterface.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.zanata.ZanataDetails.getUsername()", "org.jboss.pressgang.ccms.zanata.ZanataDetails.getToken()"], "Fixed commit": "c25f0427376459813b6f128ce720d78e2a21e271", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSZanataInterface", "Date": "2014-03-16T23:34:12Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.ohmage.service.KeycloakServices.createUser(((org.ohmage.domain.KeycloakUser) (request.getUser()))); } catch (org.ohmage.exception.ServiceException e) { request.setFailed(ErrorCode.AUTHENTICATION_FAILED, \"A user account with this name already exists.\"); throw new org.ohmage.exception.ServiceException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/676/buggy-version/src.org.ohmage.service.AuthenticationService.java", "BodyUseAPI": ["org.ohmage.request.UserRequest.getUser()", "org.ohmage.service.KeycloakServices.createUser(((org.ohmage.domain.KeycloakUser) (request.getUser())))"], "Fixed commit": "b320029f645da168937cca955f495b1f74719443", "Url": "https://api.github.com/repos/ohmage/server", "Date": "2016-02-13T05:16:46Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return restTemplate.getForObject(((mirrorGateUrl) + (com.bbva.arq.devops.ae.mirrorgate.collectors.jira.api.SprintService.MIRROR_GATE_GET_SPRINT_ISSUES_ENDPOINT)), com.bbva.arq.devops.ae.mirrorgate.core.dto.SprintDTO.class, name); } catch (java.lang.Exception e) { com.bbva.arq.devops.ae.mirrorgate.collectors.jira.api.SprintService.LOGGER.warn(\"Error getting sprint {}\", name, e); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8787/buggy-version/src.main.java.com.bbva.arq.devops.ae.mirrorgate.collectors.jira.api.SprintService.java", "BodyUseAPI": ["org.springframework.web.client.RestTemplate.getForObject(java.lang.String,java.lang.Class,java.lang.String)"], "Fixed commit": "385893bc0cab9aa58dfb87e13e00b1e601b066b3", "Url": "https://api.github.com/repos/BBVA/mirrorgate-jira-stories-collector", "Date": "2017-07-03T11:17:31Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { recycleBin = root.getView().getRecycleBin(); recycleBin.setIncludeDeletedItems(true); fileType = currentView.getServer().typeForName(recycleBin.getTypeNames().FILE); } catch (java.lang.UnsupportedOperationException e) { recycleBin = null; fileType = currentView.getServer().typeForName(currentView.getTypeNames().FILE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4387/buggy-version/syncronizer.src.org.sync.commitstrategy.BasePopulationStrategy.java", "BodyUseAPI": ["root.getView().getRecycleBin()", "com.starbase.starteam.View.getServer()", "com.starbase.starteam.Folder.getView()", "com.starbase.starteam.RecycleBin.setIncludeDeletedItems(boolean)", "com.starbase.starteam.RecycleBin.getTypeNames()", "currentView.getServer().typeForName(recycleBin.getTypeNames().FILE)"], "Fixed commit": "a13dfefe19d0f77e446b3bf8fecdef8ba9ee4185", "Url": "https://api.github.com/repos/planestraveler/git-starteam", "Date": "2016-11-02T10:16:14Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int topScore = java.lang.Integer.parseInt(((android.widget.EditText) (this.findViewById(R.id.topScore))).getText().toString()); int bottomScore = java.lang.Integer.parseInt(((android.widget.EditText) (this.findViewById(R.id.bottomScore))).getText().toString()); if (((((this.decided) && (topScore > 0)) && (topScore <= 10)) && (bottomScore > 0)) && (bottomScore <= 10)) { new net.namibsun.maltourn.android.activities.SimpleVsActivity.AsyncScoreSetter().execute(topScore, bottomScore); this.nextRound(); } } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/2199/buggy-version/mal-tournament-android.src.main.java.net.namibsun.maltourn.android.activities.SimpleVsActivity.java", "BodyUseAPI": ["((android.widget.EditText) (this.findViewById(R.id.bottomScore))).getText()", "java.lang.Integer.parseInt(((android.widget.EditText) (this.findViewById(R.id.bottomScore))).getText().toString())", "((android.widget.EditText) (this.findViewById(R.id.topScore))).getText()", "net.namibsun.maltourn.android.activities.SimpleVsActivity.AsyncScoreSetter.execute(int,int)", "((android.widget.EditText) (this.findViewById(R.id.topScore))).getText().toString()", "net.namibsun.maltourn.android.activities.SimpleVsActivity.nextRound()", "net.namibsun.maltourn.android.activities.SimpleVsActivity.findViewById(R.id.topScore)", "((android.widget.EditText) (this.findViewById(R.id.bottomScore))).getText().toString()", "java.lang.Integer.parseInt(((android.widget.EditText) (this.findViewById(R.id.topScore))).getText().toString())", "net.namibsun.maltourn.android.activities.SimpleVsActivity.findViewById(R.id.bottomScore)"], "Fixed commit": "ed2e0a91d35c89cbd62fc001b158950619ee04d9", "Url": "https://api.github.com/repos/namboy94/anime-list-tournament", "Date": "2016-07-18T23:58:53Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (java.lang.Integer k : event.mUsers.keySet()) { dk.shape.churchdesk.viewmodel.NewEventViewModel.mSelectedOtherUsers.add(k); } } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4909/buggy-version/app.src.main.java.dk.shape.churchdesk.viewmodel.NewEventViewModel.java", "BodyUseAPI": ["event.mUsers.keySet()", "java.util.List<java.lang.Integer>.add(java.lang.Integer)"], "Fixed commit": "b0e6988ef7c70081c87443c347429d65262e19a1", "Url": "https://api.github.com/repos/ChurchDesk/android", "Date": "2016-06-30T08:03:11Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (java.lang.Integer k : event.mResources.keySet()) { dk.shape.churchdesk.viewmodel.NewEventViewModel.mSelectedResources.add(k); } } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/4909/buggy-version/app.src.main.java.dk.shape.churchdesk.viewmodel.NewEventViewModel.java", "BodyUseAPI": ["event.mResources.keySet()", "java.util.List<java.lang.Integer>.add(java.lang.Integer)"], "Fixed commit": "b0e6988ef7c70081c87443c347429d65262e19a1", "Url": "https://api.github.com/repos/ChurchDesk/android", "Date": "2016-06-30T08:03:11Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { teams.addTeam(team); } catch (com.teja.controller.TeamAlreadyExistsException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/170/buggy-version/src.com.teja.controller.MainController.java", "BodyUseAPI": ["com.teja.controller.Teams.addTeam(com.teja.controller.Team)"], "Fixed commit": "e62bca52a7c3cbe2122e2756560cccbcae98a48e", "Url": "https://api.github.com/repos/tejact/soccer-league-organizer", "Date": "2016-09-30T16:56:44Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pr.waitFor(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/6021/buggy-version/src.main.java.com.qixalite.spongestart.tasks.SetupForgeServer.java", "BodyUseAPI": ["java.lang.Process.waitFor()"], "Fixed commit": "cb6d07ef3879a9acfded590fdefced126c36549e", "Url": "https://api.github.com/repos/Qixalite/SpongeStart", "Date": "2016-02-24T13:19:54Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { db.save(new java.io.File(BeardAch.self.getDataFolder(), \"YamlDB.yml\")); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3016/buggy-version/src.main.java.me.tehbeard.BeardAch.dataSource.YamlDataSource.java", "BodyUseAPI": ["org.bukkit.configuration.file.YamlConfiguration.save(java.io.File)", "BeardAch.self.getDataFolder()"], "Fixed commit": "8d2d75a37cd987f320ebec41d513952a27c2e25d", "Url": "https://api.github.com/repos/tehbeard/BeardAch", "Date": "2011-12-22T21:36:31Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((android.widget.TextView) (findViewById(R.id.name))).setText(java.lang.String.format(\"%s %s\", userProfile.userData.get(1).value, userProfile.userData.get(3).value)); ((android.widget.TextView) (findViewById(R.id.nameSubtitle))).setText((\"Indeks: \" + (userProfile.userData.get(0).value))); } catch (java.lang.NullPointerException e) { android.util.Log.w(\"GetUserProfileTask\", \"GetUserProfileTask encountered a NullPointerException when trying to set the text.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/1424/buggy-version/EREFAndroid.app.src.main.java.rs.veselinromic.eref.android.MainActivity.java", "BodyUseAPI": ["rs.veselinromic.eref.android.MainActivity.GetUserProfileTask.findViewById(R.id.name)", "((android.widget.TextView) (findViewById(R.id.nameSubtitle))).setText((\"Indeks: \" + (userProfile.userData.get(0).value)))", "userProfile.userData.get(int)", "((android.widget.TextView) (findViewById(R.id.name))).setText(java.lang.String)", "rs.veselinromic.eref.android.MainActivity.GetUserProfileTask.findViewById(R.id.nameSubtitle)", "java.lang.String.format(java.lang.String,userProfile.userData.get(1).value,userProfile.userData.get(3).value)", "userProfile.userData.get(int)", "userProfile.userData.get(int)"], "Fixed commit": "190c97e4c627f37a764395769686e0fde2a57b96", "Url": "https://api.github.com/repos/omegavesko/EREFAndroid", "Date": "2016-10-03T16:43:59Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { net.minecraftforge.client.model.IModel model = net.minecraftforge.client.model.ModelLoaderRegistry.getModel(location); for (net.minecraft.util.ResourceLocation dep : model.getDependencies()) { getModel(dep); } textures.addAll(model.getTextures()); } finally { loadingModels.remove(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8496/buggy-version/src.main.java.net.minecraftforge.client.model.ModelLoader.java", "BodyUseAPI": ["net.minecraftforge.client.model.IModel.getDependencies()", "net.minecraftforge.client.model.ModelLoaderRegistry.getModel(net.minecraft.util.ResourceLocation)", "java.util.Set<net.minecraft.util.ResourceLocation>.addAll(model.getTextures())", "net.minecraftforge.client.model.IModel.getTextures()", "net.minecraftforge.client.model.ModelLoader.getModel(net.minecraft.util.ResourceLocation)"], "Fixed commit": "99cdefb931dc665bdad723d5860691d367bc6d78", "Url": "https://api.github.com/repos/shadekiller666/MinecraftForge", "Date": "2015-08-19T21:09:01Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { checkoutResponse = checkoutService.performCheckout(cart, payments); } catch (org.broadleafcommerce.core.checkout.service.exception.CheckoutException ex) { checkoutError = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/3674/buggy-version/core.broadleaf-framework-web.src.main.java.org.broadleafcommerce.core.web.controller.checkout.BroadleafCheckoutController.java", "BodyUseAPI": ["org.broadleafcommerce.core.web.controller.checkout.BroadleafCheckoutController.performCheckout(org.broadleafcommerce.core.order.domain.Order,java.util.Map<org.broadleafcommerce.core.payment.domain.PaymentInfo, org.broadleafcommerce.core.payment.domain.Referenced>)"], "Fixed commit": "3fcccc564d435591c344e775757fbc04e6f86e2f", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2014-01-27T02:48:56Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { processIndexUpdate(iDocument, dirtyFields, index); } catch (com.orientechnologies.orient.core.storage.ORecordDuplicatedException ex) { iDocument.undo(); iDocument.setDirty(); database.save(iDocument); throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7531/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.OClassIndexManager.java", "BodyUseAPI": ["com.orientechnologies.orient.core.index.OClassIndexManager.processIndexUpdate(com.orientechnologies.orient.core.record.impl.ODocument,java.util.Set<java.lang.String>,com.orientechnologies.orient.core.index.OIndex<?>)"], "Fixed commit": "f5342a06d22fef67a4b57022c3752e261fc4ba08", "Url": "https://api.github.com/repos/matanshukry/orientdb", "Date": "2016-02-01T12:47:54Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(10); } catch (java.lang.InterruptedException e) { loge(\"Sleep was interrupted after writing a packet\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/5947/buggy-version/dfu.src.main.java.no.nordicsemi.android.dfu.BaseCustomDfuImpl.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "f23409cd57977fea5c0a7d6c851ab5b22dff55f7", "Url": "https://api.github.com/repos/tshevchuk/Android-DFU-Library", "Date": "2016-10-20T13:52:39Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { map.updateOperation(pnfsId, exception); } catch (java.lang.IllegalStateException e) { org.dcache.resilience.handlers.PnfsTaskCompletionHandler.LOGGER.trace(\"{}\", new org.dcache.util.ExceptionMessage(e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/8376/buggy-version/modules.dcache.src.main.java.org.dcache.resilience.handlers.PnfsTaskCompletionHandler.java", "BodyUseAPI": ["org.dcache.resilience.data.PnfsOperationMap.updateOperation(diskCacheV111.util.PnfsId,diskCacheV111.util.CacheException)"], "Fixed commit": "9184aa54008a37ec4e5e6ae5cd877c8f9e6abeaf", "Url": "https://api.github.com/repos/alrossi/dcache-server", "Date": "2016-02-20T17:49:53Z"},
{"Line": "=>596", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getAgentLog().warn(\"Handler for event [] overwritten with []; was []\", event, handler, oldHandler); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/7561/buggy-version/src.tatami.core.agent.AgentComponent.java", "BodyUseAPI": ["tatami.core.agent.AgentComponent.getAgentLog()", "net.xqhs.util.logging.Logger.warn(java.lang.String,tatami.core.agent.AgentEvent.AgentEventType,tatami.core.agent.AgentEvent.AgentEventHandler,tatami.core.agent.AgentEvent.AgentEventHandler)"], "Fixed commit": "94caa37995331ad30f0696bdc5372c3c79ef62d6", "Url": "https://api.github.com/repos/tATAmI-Project/tATAmI-PC", "Date": "2015-02-10T13:15:39Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { game.getBoard().move(mouvement); } catch (fr.iutvalence.info.m2103.project.tp1.abalone.NoMarbleFound e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V21/96/buggy-version/src.fr.iutvalence.info.m2103.project.tp1.abalone.AbaloneLauncher.java", "BodyUseAPI": ["fr.iutvalence.info.m2103.project.tp1.abalone.AbaloneGame.getBoard()", "game.getBoard().move(fr.iutvalence.info.m2103.project.tp1.abalone.Movement)"], "Fixed commit": "2afee955c800e556938d13d014de12a4b7b3d333", "Url": "https://api.github.com/repos/adrianIutValence/abalone", "Date": "2015-05-12T12:56:08Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { channelLatch.await(configuration.getConnectTimeout(), java.util.concurrent.TimeUnit.MILLISECONDS); } catch (java.lang.InterruptedException ex) { throw new org.apache.camel.CamelException(((\"Interrupted while waiting for \" + \"connection to \") + (configuration.getAddress()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/120/buggy-version/components.camel-netty.src.main.java.org.apache.camel.component.netty.NettyProducer.java", "BodyUseAPI": ["java.util.concurrent.CountDownLatch.await(configuration.getConnectTimeout(),java.util.concurrent.TimeUnit)", "org.apache.camel.component.netty.NettyConfiguration.getConnectTimeout()"], "Fixed commit": "868a358adb801498e2e82b7d8f65547fd4e62eba", "Url": "https://api.github.com/repos/dhirajsb/camel", "Date": "2013-06-08T14:33:01Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { _tasks = _storage.readFromFile(); java.util.Collections.sort(_tasks); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8782/buggy-version/src.Logic.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.ArrayList<cs2103_w09_1j.esther.Task>)", "Storage.readFromFile()"], "Fixed commit": "9b0a09a21fb3c89836a9f5a4ef37fc0ac93919c6", "Url": "https://api.github.com/repos/cs2103jan2016-w09-1j/main", "Date": "2016-03-07T15:26:35Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { str_bytes = toEncode.getBytes(\"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4158/buggy-version/app.src.main.java.com.example.gabriele.steganography.steganography.EncodeRS.java", "BodyUseAPI": ["java.lang.String.getBytes(java.lang.String)"], "Fixed commit": "06cd7e78ccdffe6f8a47e2b21a7301ad17c8138c", "Url": "https://api.github.com/repos/gabrielication/Steganography", "Date": "2016-05-05T17:17:37Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(15); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/382/buggy-version/MonopolyBot.src.TopHat.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "74ccc1f97707b607f4f27893777b9bf88fe62269", "Url": "https://api.github.com/repos/Brian1231/TopHat-Bot", "Date": "2017-04-25T23:38:17Z"},
{"Line": "=>3", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { int i = 100 / 0; java.lang.System.out.println(i); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/55/buggy-version/Main.java", "BodyUseAPI": ["java.io.PrintStream.println(int)"], "Fixed commit": "94baff50bb08ff67a8d3c73e3735c35a2346fe69", "Url": "https://api.github.com/repos/schy-hqh/learngit", "Date": "2015-03-21T10:05:04Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { internalRepoStringValue = readParameterValue(internalRepo); } catch (org.apache.stratos.cartridge.agent.exception.ParameterNotFoundException e) { org.apache.stratos.cartridge.agent.config.CartridgeAgentConfiguration.log.info(\" INTERNAL payload parameter is not found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7520/buggy-version/source.components.org.apache.stratos.cartridge.agent.src.main.java.org.apache.stratos.cartridge.agent.config.CartridgeAgentConfiguration.java", "BodyUseAPI": ["org.apache.stratos.cartridge.agent.config.CartridgeAgentConfiguration.readParameterValue(java.lang.String)"], "Fixed commit": "3cc2b685e7bddbc1d40047e0ac76fbfc12a52e16", "Url": "https://api.github.com/repos/wso2/private-paas", "Date": "2014-05-08T17:52:49Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.sql.ResultSet rs = con.queryTable(((\"select id from matiere where nom='\" + className) + \"'\")); while (rs.next()) { classId_matiere = rs.getString(\"id\"); } } catch (java.lang.Exception e2) { e2.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4437/buggy-version/Documents.workspace-sts-3.1.0.RELEASE.Planning.src.admin.AddPlanningCalendar.java", "BodyUseAPI": ["java.sql.ResultSet.next()", "java.sql.ResultSet.getString(java.lang.String)", "global.MysqlConnection.queryTable(java.lang.String)"], "Fixed commit": "d024aaa63439747afda161348b1daa09023de892", "Url": "https://api.github.com/repos/frecapG7/GL_Hyperplanning", "Date": "2013-06-19T15:46:18Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Number number = java.text.NumberFormat.getNumberInstance(locale).parse(strPrice); offer.setPrice(number.doubleValue()); } catch (java.text.ParseException e) { offer.setPrice(java.lang.Double.valueOf(strPrice.replaceAll(\"\\\\,\", \"\\\\.\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3422/buggy-version/app.src.main.java.br.com.battista.myoffers.EditProductActivity.java", "BodyUseAPI": ["java.text.NumberFormat.getNumberInstance(java.util.Locale)", "java.text.NumberFormat.parse(java.lang.String)", "java.lang.Number.doubleValue()", "br.com.battista.myoffers.model.Offer.setPrice(double)"], "Fixed commit": "138302741af3ffd8dbd094457a9be1161145bcd2", "Url": "https://api.github.com/repos/rafaelbscit/myoffers", "Date": "2016-04-13T04:38:11Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ch.unibe.scg.doodle.DoodleDebugWebapp.stopServer(); } catch (java.lang.Exception e) { ch.unibe.scg.doodle.magnolia.DoodleDebugModule.log.error(\"Failed to stop DoodleDebug webapp server\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2572/buggy-version/src.main.java.ch.unibe.scg.doodle.magnolia.DoodleDebugModule.java", "BodyUseAPI": ["ch.unibe.scg.doodle.DoodleDebugWebapp.stopServer()"], "Fixed commit": "33e0eb7a29129ed42b1f1ad421f15561fcf37e9a", "Url": "https://api.github.com/repos/CedricReichenbach/magnolia-module-doodledebug", "Date": "2015-06-12T19:46:34Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { stream = new java.io.FileInputStream(getTranscriptionURL()); } catch (java.io.FileNotFoundException fe) { stream = new java.io.FileInputStream(org.apache.commons.lang3.StringUtils.stripAccents(getTranscriptionURL())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7699/buggy-version/src.main.java.elh.eus.MSM.multimediaElement.java", "BodyUseAPI": ["elh.eus.MSM.multimediaElement.getTranscriptionURL()"], "Fixed commit": "2d05424f8fea0282d110ad38706b60bd86713ca3", "Url": "https://api.github.com/repos/Elhuyar/MSM", "Date": "2017-10-31T17:57:02Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String cardBin = savedCard.getMaskedCard().substring(0, 4); java.lang.String title = (cardType + \"-\") + cardBin; textTitle.setText(title); } catch (java.lang.RuntimeException e) { com.midtrans.sdk.corekit.core.Logger.e(com.midtrans.sdk.uikit.views.creditcard.details.CreditCardDetailsActivity.TAG, (\"cardType:\" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5036/buggy-version/uikit.src.main.java.com.midtrans.sdk.uikit.views.creditcard.details.CreditCardDetailsActivity.java", "BodyUseAPI": ["savedCard.getMaskedCard().substring(int,int)", "com.midtrans.sdk.uikit.widgets.DefaultTextView.setText(java.lang.String)", "com.midtrans.sdk.corekit.models.SaveCardRequest.getMaskedCard()"], "Fixed commit": "4027ff86665ea7d4921e815c2f9a3df1cb466e6d", "Url": "https://api.github.com/repos/veritrans/veritrans-android", "Date": "2017-08-22T04:16:42Z"},
{"Line": "=>934", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String cardNumber = getCardNumberValue(); if ((!(android.text.TextUtils.isEmpty(cardNumber))) && ((cardNumber.length()) > 6)) { java.lang.String cardBin = cardNumber.replace(\" \", \"\").substring(0, 6); return cardBin; } } catch (java.lang.RuntimeException e) { com.midtrans.sdk.corekit.core.Logger.e(com.midtrans.sdk.uikit.views.creditcard.details.CreditCardDetailsActivity.TAG, (\"getCardNumberBin:\" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5036/buggy-version/uikit.src.main.java.com.midtrans.sdk.uikit.views.creditcard.details.CreditCardDetailsActivity.java", "BodyUseAPI": ["android.text.TextUtils.isEmpty(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "com.midtrans.sdk.uikit.views.creditcard.details.CreditCardDetailsActivity.getCardNumberValue()", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "4027ff86665ea7d4921e815c2f9a3df1cb466e6d", "Url": "https://api.github.com/repos/veritrans/veritrans-android", "Date": "2017-08-22T04:16:42Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { parameters[i] = convertFromString(typeAsString, factory); } catch (org.openflexo.model.exceptions.InvalidDataException typeNotFound) { parameters[i] = new org.openflexo.connie.type.WilcardTypeImpl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6434/buggy-version/pamela-core.src.main.java.org.openflexo.model.converter.TypeConverter.java", "BodyUseAPI": ["org.openflexo.model.converter.TypeConverter.convertFromString(java.lang.String,org.openflexo.model.factory.ModelFactory)"], "Fixed commit": "76f7ccd19d3610e80f9a3e26ca94d92da735e55e", "Url": "https://api.github.com/repos/openflexo-team/pamela", "Date": "2017-05-12T07:46:43Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { removedItems(getAdapterPosition()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2212/buggy-version/app.src.main.java.libraryfordev.vqt.recyclerview.OSAdapter.java", "BodyUseAPI": ["libraryfordev.vqt.recyclerview.OSAdapter.ViewHolder.1.getAdapterPosition()", "libraryfordev.vqt.recyclerview.OSAdapter.ViewHolder.1.removedItems(getAdapterPosition())"], "Fixed commit": "708ae2d7f177e031193c1553740a16c4e79a8c25", "Url": "https://api.github.com/repos/thanhvoquang/RecyclerView", "Date": "2017-04-12T11:23:27Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class.forName(org.jboss.netty.util.internal.ByteBufferUtil.class.getName()); } catch (java.lang.ClassNotFoundException cnfe) { if (com.liferay.portal.search.elasticsearch.internal.connection.EmbeddedElasticsearchConnection._log.isWarnEnabled()) { com.liferay.portal.search.elasticsearch.internal.connection.EmbeddedElasticsearchConnection._log.warn((((\"Unable to preload \" + (org.jboss.netty.util.internal.ByteBufferUtil.class)) + \" to prevent netty shutdown concurrent class loading \") + \"interruption issue.\"), cnfe); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8035/buggy-version/portal-search-elasticsearch.src.main.java.com.liferay.portal.search.elasticsearch.internal.connection.EmbeddedElasticsearchConnection.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)", "java.lang.Class.getName()"], "Fixed commit": "70ba4ffde1f98ed83611b82a49feebec20634841", "Url": "https://api.github.com/repos/liferay/com-liferay-portal-search", "Date": "2016-11-04T07:01:15Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.content.pm.PackageManager pm = context.getApplicationContext().getPackageManager(); return pm.hasSystemFeature(PackageManager.FEATURE_CAMERA); } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7124/buggy-version/matisse.src.main.java.com.zhihu.matisse.internal.utils.MediaStoreCompat.java", "BodyUseAPI": ["android.content.pm.PackageManager.hasSystemFeature(PackageManager.FEATURE_CAMERA)", "context.getApplicationContext().getPackageManager()", "android.content.Context.getApplicationContext()"], "Fixed commit": "576167d49400662e32969eb8a23f738a29fcdfcb", "Url": "https://api.github.com/repos/Caij/Matisse", "Date": "2017-12-28T06:36:53Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mMediaPlayer.setDataSource(mContext, contentUri, mHeaders); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7281/buggy-version/XWalkProxy.src.org.example.xwalkembedded.XWalkExoMediaPlayer.java", "BodyUseAPI": ["android.media.MediaPlayer.setDataSource(android.content.Context,android.net.Uri,java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "a07b0f3e0794524fc021e3f85b219cc4a3e6a8c1", "Url": "https://api.github.com/repos/fujunwei/customer_w", "Date": "2016-06-13T08:43:30Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.commons.io.FileUtils.forceMkdir(tempDir); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4272/buggy-version/certificate-generator-core.src.main.java.org.codeclubbrasil.certificategenerator.domain.CertificateTemplate.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.forceMkdir(java.io.File)"], "Fixed commit": "e6d5e157207e06bf0cc4f7892e617d4d8e5665bb", "Url": "https://api.github.com/repos/CodeClubBrasil/ccbr-gerador-certificados", "Date": "2017-10-14T22:51:52Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { minSize = args.getInt(0); } catch (org.json.JSONException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5511/buggy-version/src.android.WebviewSetting.java", "BodyUseAPI": ["org.json.JSONArray.getInt(int)"], "Fixed commit": "27f1d1b18a1ccf1ab26ea740d801f0866056914b", "Url": "https://api.github.com/repos/skostyrko/cordova-plugin-webview-minimumfontsize", "Date": "2017-03-13T14:09:03Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (int i = 0; i < (sensorData.length); i++) { sensorData[i].value = event.values[i]; } dataAdapter.notifyDataSetChanged(); } catch (java.lang.Exception e) { android.util.Log.d(\"###\", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4496/buggy-version/app.src.main.java.ch.ethz.inf.vs.a1.nethz.sensors.SensorActivity.java", "BodyUseAPI": ["android.widget.ArrayAdapter<ch.ethz.inf.vs.a1.nethz.sensors.SensorData>.notifyDataSetChanged()"], "Fixed commit": "828e90199d7c08b5a0df630bd1a24a640d362cad", "Url": "https://api.github.com/repos/ebhardjan/VS_vatrifon_Sensors", "Date": "2015-10-07T11:13:36Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { boxerProfile.setHeight(java.lang.Integer.parseInt(httpServletRequest.getParameter(\"height\"))); } catch (java.lang.Exception ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1803/buggy-version/src.main.java.com.efd.controllers.BoxerProfileController.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.lang.Integer.parseInt(httpServletRequest.getParameter(\"height\"))", "com.efd.model.BoxerProfile.setHeight(int)"], "Fixed commit": "ab2862a90ab095ae515f035ed4358b4b784758e1", "Url": "https://api.github.com/repos/ElliottFightDynamics/TrainingAppServer", "Date": "2017-06-20T20:21:04Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { boxerProfile.setReach(java.lang.Integer.parseInt(httpServletRequest.getParameter(\"reach\"))); } catch (java.lang.Exception ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1803/buggy-version/src.main.java.com.efd.controllers.BoxerProfileController.java", "BodyUseAPI": ["java.lang.Integer.parseInt(httpServletRequest.getParameter(\"reach\"))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "com.efd.model.BoxerProfile.setReach(int)"], "Fixed commit": "ab2862a90ab095ae515f035ed4358b4b784758e1", "Url": "https://api.github.com/repos/ElliottFightDynamics/TrainingAppServer", "Date": "2017-06-20T20:21:04Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { boxerProfile.setWeight(java.lang.Integer.parseInt(httpServletRequest.getParameter(\"weight\"))); } catch (java.lang.Exception ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1803/buggy-version/src.main.java.com.efd.controllers.BoxerProfileController.java", "BodyUseAPI": ["java.lang.Integer.parseInt(httpServletRequest.getParameter(\"weight\"))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "com.efd.model.BoxerProfile.setWeight(int)"], "Fixed commit": "ab2862a90ab095ae515f035ed4358b4b784758e1", "Url": "https://api.github.com/repos/ElliottFightDynamics/TrainingAppServer", "Date": "2017-06-20T20:21:04Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { trans.rollback(); } catch (org.sleuthkit.datamodel.TskCoreException ex2) { org.sleuthkit.autopsy.casemodule.services.FileManager.LOGGER.log(java.util.logging.Level.SEVERE, java.lang.String.format(\"Failed to rollback transaction after exception: %s\", ex.getMessage()), ex2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4960/buggy-version/Core.src.org.sleuthkit.autopsy.casemodule.services.FileManager.java", "BodyUseAPI": ["org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction.rollback()"], "Fixed commit": "f380dbc42911ef71fbca46f644fb2cabd80ff254", "Url": "https://api.github.com/repos/sleuthkit/autopsy", "Date": "2016-09-30T15:22:58Z"},
{"Line": "=>795", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { wallet.importKeys(getKeysForAllAccounts(networkParameters)); } catch (com.bitdubai.fermat_bch_plugin.layer.asset_vault.developer.bitdubai.version_1.exceptions.CantExecuteDatabaseOperationException e) { throw new com.bitdubai.fermat_bch_api.layer.crypto_vault.asset_vault.exceptions.CantCreateBitcoinTransactionException(com.bitdubai.fermat_bch_api.layer.crypto_vault.asset_vault.exceptions.CantCreateBitcoinTransactionException.DEFAULT_MESSAGE, e, \"Error getting the stored accounts to get the keys\", \"database issue\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2313/buggy-version/BCH.plugin.crypto_vault.fermat-bch-plugin-crypto-vault-assets-over-bitcoin-bitdubai.src.main.java.com.bitdubai.fermat_bch_plugin.layer.asset_vault.developer.bitdubai.version_1.structure.AssetCryptoVaultManager.java", "BodyUseAPI": ["org.bitcoinj.core.Wallet.importKeys(java.util.List<org.bitcoinj.core.ECKey>)", "com.bitdubai.fermat_bch_plugin.layer.asset_vault.developer.bitdubai.version_1.structure.AssetCryptoVaultManager.getKeysForAllAccounts(org.bitcoinj.core.NetworkParameters)"], "Fixed commit": "d4c8c8a69f3a320f9972993b6d39b03621343818", "Url": "https://api.github.com/repos/acostarodrigo/fermat", "Date": "2016-01-28T17:24:56Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { data.putString(\"user\", com.example.andy.api_model.JSONConverter.fromUser(user)); } catch (java.lang.Throwable throwable) { throwable.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6521/buggy-version/app.src.main.java.com.example.andy.saints_xctf_android.ProfilePager.java", "BodyUseAPI": ["android.os.Bundle.putString(java.lang.String,com.example.andy.api_model.JSONConverter.fromUser(user))", "com.example.andy.api_model.JSONConverter.fromUser(com.example.andy.api_model.User)"], "Fixed commit": "24b6a3f894e64c733a6ba5333dac35a7023f02e6", "Url": "https://api.github.com/repos/AJarombek/saints-xctf-android", "Date": "2017-08-01T00:06:27Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { copyBackendThread.interrupt(); } catch (java.lang.SecurityException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7710/buggy-version/gpdbwriter.src.main.java.cn.hashdata.datax.plugin.writer.gpdbwriter.CopyWorker.java", "BodyUseAPI": ["java.lang.Thread.interrupt()"], "Fixed commit": "04c1dff3bc8166da2da68d973756acb9f5d77877", "Url": "https://api.github.com/repos/HashDataInc/DataX", "Date": "2017-06-20T02:18:48Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getActionBar().setSubtitle(mailbox.getName()); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4094/buggy-version/src.no.digipost.android.gui.MainContentActivity.java", "BodyUseAPI": ["getActionBar().setSubtitle(mailbox.getName())", "no.digipost.android.gui.MainContentActivity.getActionBar()", "no.digipost.android.model.Mailbox.getName()"], "Fixed commit": "6103c9416e9abc8574e102fbb3abab97dd7d584d", "Url": "https://api.github.com/repos/digipost/android", "Date": "2014-05-12T20:17:14Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final org.exist.storage.DBBroker broker = db.getActiveBroker(); final java.lang.Boolean globalProp = ((java.lang.Boolean) (broker.getConfiguration().getProperty(org.exist.xquery.Profiler.CONFIG_PROPERTY_TRACELOG))); return (logEnabled) || ((globalProp != null) && (globalProp.booleanValue())); } catch (java.lang.Throwable t) { return logEnabled; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4580/buggy-version/src.org.exist.xquery.Profiler.java", "BodyUseAPI": ["java.lang.Boolean.booleanValue()", "org.exist.Database.getActiveBroker()", "org.exist.storage.DBBroker.getConfiguration()", "broker.getConfiguration().getProperty(java.lang.String)"], "Fixed commit": "f1d78220c8bb5205758b35c6052a6a1833f7430d", "Url": "https://api.github.com/repos/eXist-db/exist", "Date": "2013-09-25T07:17:56Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { socket.receive(packet); } catch (java.net.SocketTimeoutException e) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1708/buggy-version/src.main.java.ru.spbau.mit.MeasureClients.UdpClient.java", "BodyUseAPI": ["java.net.DatagramSocket.receive(java.net.DatagramPacket)"], "Fixed commit": "304f659542ab5f54e2af183cca771834a5a7d762", "Url": "https://api.github.com/repos/esengie/server_tester", "Date": "2016-12-14T15:33:32Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { target.importData(bais); } catch (java.io.IOException e) { throw new java.io.IOException((((\"In element \" + i) + \" of \") + (this)), e); } catch (java.lang.RuntimeException e) { throw new java.lang.RuntimeException((((\"In element \" + i) + \" of \") + (this)), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7395/buggy-version/src.main.java.r48.io.r2k.chunks.SparseArrayR2kInterpretable.java", "BodyUseAPI": ["T.importData(java.io.InputStream)"], "Fixed commit": "d181eef9345ea7579b0740604178bb523e4f63de", "Url": "https://api.github.com/repos/20kdc/gabien-app-r48", "Date": "2017-12-19T14:07:24Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fxml = new javafx.fxml.FXMLLoader(getClass().getResource(location)); } catch (java.lang.Exception e) { logger.log(java.util.logging.Level.SEVERE, \"resource not found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/777/buggy-version/src.main.java.view.Dialog.java", "BodyUseAPI": ["java.lang.Class<? extends view.Dialog>.getResource(java.lang.String)", "view.Dialog.getClass()"], "Fixed commit": "3c53ae47ca0b2d4ce18156c958e540992e021ca2", "Url": "https://api.github.com/repos/clanghout/Health-Informatics-3", "Date": "2015-06-04T21:39:18Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { server.remove(ID); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2527/buggy-version/src.main.java.Prozess.ChatServerThread.java", "BodyUseAPI": ["Prozess.ChatServer.remove(int)"], "Fixed commit": "6fbcbdab7d07f0b145cb7e69f90a774883ede780", "Url": "https://api.github.com/repos/ktpn/ChatServer", "Date": "2017-11-03T20:09:44Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { multicastMessage = objectMapper.readValue(buffer, 0, datagramPacket.getLength(), be.cegeka.configurator.serverRegistery.MulticastMessage.class); } catch (org.codehaus.jackson.JsonProcessingException e) { e.printStackTrace(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4601/buggy-version/src.main.java.be.cegeka.configurator.serverRegistery.Multicaster.java", "BodyUseAPI": ["org.codehaus.jackson.map.ObjectMapper.readValue(byte[],int,int,java.lang.Class)", "java.net.DatagramPacket.getLength()"], "Fixed commit": "b0cb353262d1ec1cb88fd34b2c2ad3e7f62c2253", "Url": "https://api.github.com/repos/dwendelen/configurator", "Date": "2015-04-17T22:53:16Z"},
{"Line": "=>533", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { camera.setParameters(parameters); } catch (java.lang.Exception e) { throw new java.lang.IllegalStateException(java.lang.String.format(\"Error while auto-focus, areas: %s\", areas), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8787/buggy-version/library.src.main.java.org.mariotaku.simplecamera.CameraView.java", "BodyUseAPI": ["android.hardware.Camera.setParameters(Camera.Parameters)"], "Fixed commit": "4a5fb7856ab32e345b6a50e36294066c370b732d", "Url": "https://api.github.com/repos/mariotaku/SimpleCameraLibrary", "Date": "2014-09-15T02:47:47Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { userCredentialsStore.delete(user.getUserCredentials()); } catch (java.lang.Exception exception) { exception.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/311/buggy-version/dhis-2.dhis-services.dhis-service-core.src.main.java.org.hisp.dhis.user.DefaultUserService.java", "BodyUseAPI": ["org.hisp.dhis.user.User.getUserCredentials()", "org.hisp.dhis.user.UserCredentialsStore.delete(user.getUserCredentials())"], "Fixed commit": "052205c34a2e5a7096f537a8a566b37d9c4bf79d", "Url": "https://api.github.com/repos/chai-moz-dsd/dhis2", "Date": "2016-09-06T01:37:49Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pluginFile = new java.io.File(java.net.URLDecoder.decode(p.getClass().getProtectionDomain().getCodeSource().getLocation().getPath(), \"UTF-8\")); } catch (java.io.UnsupportedEncodingException e) { debug(e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5560/buggy-version/src.main.java.com.arsenarsen.updater.Updater.java", "BodyUseAPI": ["p.getClass().getProtectionDomain().getCodeSource()", "java.net.URLDecoder.decode(p.getClass().getProtectionDomain().getCodeSource().getLocation().getPath(),java.lang.String)", "p.getClass().getProtectionDomain().getCodeSource().getLocation()", "p.getClass().getProtectionDomain()", "org.bukkit.plugin.Plugin.getClass()", "p.getClass().getProtectionDomain().getCodeSource().getLocation().getPath()"], "Fixed commit": "1da5d27c49457b947f251834d28bea91d5723518", "Url": "https://api.github.com/repos/ArsenArsen/Updater", "Date": "2016-09-22T17:19:00Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { javax.faces.context.FacesContext.getCurrentInstance().getExternalContext().redirect(historySession.getCurrentPage().getUri().toString()); } catch (java.io.IOException e) { de.mpg.imeji.presentation.user.ShareBean.logger.error(\"Error redirecting to previous page\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2153/buggy-version/imeji_presentation.src.main.java.de.mpg.imeji.presentation.user.ShareBean.java", "BodyUseAPI": ["historySession.getCurrentPage().getUri().toString()", "javax.faces.context.FacesContext.getCurrentInstance().getExternalContext().redirect(historySession.getCurrentPage().getUri().toString())", "javax.faces.context.FacesContext.getCurrentInstance()", "de.mpg.imeji.presentation.history.HistorySession.getCurrentPage()", "javax.faces.context.FacesContext.getCurrentInstance().getExternalContext()", "historySession.getCurrentPage().getUri()"], "Fixed commit": "df05ed1ea2928fad09decbd068fc0a3779c0626b", "Url": "https://api.github.com/repos/imeji-community/imeji", "Date": "2013-03-04T17:28:03Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { database.execSQL(\"alter table learning_data add column firstLearnDate VARCHAR\"); database.execSQL(\"update learning_data set firstLearnDate='2010-01-01 00:00:00.000000'\"); } catch (org.liberty.android.fantastischmemo.common.android e) { android.util.Log.e(TAG, \"Upgrading failed, the column firstLearnData might already exists.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3605/buggy-version/app.src.main.java.org.liberty.android.fantastischmemo.common.AnyMemoDBOpenHelper.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)", "android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)"], "Fixed commit": "54c575a1ce00889113a60775cf01c690184521f8", "Url": "https://api.github.com/repos/helloworld1/AnyMemo", "Date": "2017-01-03T14:04:14Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { i18n = new me.azenet.UHPlugin.i18n.I18n(this, getConfig().getString(\"lang\")); } catch (java.lang.IllegalArgumentException e) { i18n = new me.azenet.UHPlugin.i18n.I18n(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/3021/buggy-version/src.main.java.me.azenet.UHPlugin.UHPlugin.java", "BodyUseAPI": ["me.azenet.UHPlugin.UHPlugin.getConfig()", "getConfig().getString(java.lang.String)"], "Fixed commit": "74671bc06c5b9a5375b6566f7582f70dd19b0060", "Url": "https://api.github.com/repos/AmauryCarrade/UHPlugin", "Date": "2014-08-20T21:22:23Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { main.java.Main.factory = new org.hibernate.cfg.Configuration().configure().buildSessionFactory(); java.lang.System.out.println(\"Factory created\"); } catch (java.lang.Throwable e) { java.lang.System.out.println(\"Factory error\"); e.printStackTrace(); throw new java.lang.ExceptionInInitializerError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2419/buggy-version/src.main.java.Main.java", "BodyUseAPI": ["new org.hibernate.cfg.Configuration().configure().buildSessionFactory()", "java.io.PrintStream.println(java.lang.String)", "org.hibernate.cfg.Configuration.configure()"], "Fixed commit": "caae0f2608df7c5f398321d599ab855ca0a2ede6", "Url": "https://api.github.com/repos/backsofangels/TecWeb-Backend", "Date": "2017-12-02T10:38:39Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class.forName(\"com.mysql.jdbc.Driver\"); } catch (java.lang.ClassNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7953/buggy-version/src.Application.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)"], "Fixed commit": "b29b44bd7f912c64383b81f03b3bfa07d049b427", "Url": "https://api.github.com/repos/E1ectroShock/ChatDev", "Date": "2016-12-18T20:22:01Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { p = pred.test(value()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/4378/buggy-version/signalj-rxjava.runtime.signalj.Signal.java", "BodyUseAPI": ["io.reactivex.functions.Predicate<T>.test(T)", "signalj.Signal<T>.value()"], "Fixed commit": "475772f4bbada4056b19dc742e8e130155ba671b", "Url": "https://api.github.com/repos/tkamina/SignalJ", "Date": "2017-12-08T08:00:23Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((licenseService.getLicenseType()) == (org.xdi.oxd.license.client.js.LicenseType.FREE)) { final org.xdi.oxd.common.CommandType commandType = command.getCommandType(); switch (commandType) { case CHECK_ID_TOKEN : case RPT_STATUS : forceWait(500); break; } } } catch (java.lang.Exception e) { org.xdi.oxd.server.Processor.LOG.error(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6596/buggy-version/oxd-server.src.main.java.org.xdi.oxd.server.Processor.java", "BodyUseAPI": ["org.xdi.oxd.server.license.LicenseService.getLicenseType()", "org.xdi.oxd.common.Command.getCommandType()", "org.xdi.oxd.server.Processor.forceWait(int)"], "Fixed commit": "d56367077ee1883aece249e1d6dda7c34ae1ccff", "Url": "https://api.github.com/repos/GluuFederation/oxd", "Date": "2014-10-16T12:22:35Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((id.getServiceType()) != null) { tsn = sg.getServiceNode(id.getServiceType()); } } catch (java.lang.Throwable t) { if (org.overlord.rtgov.service.dependency.ServiceDependencyBuilder.LOG.isLoggable(java.util.logging.Level.FINEST)) { org.overlord.rtgov.service.dependency.ServiceDependencyBuilder.LOG.log(java.util.logging.Level.FINEST, \"Failed to get service type (assume running in FSW6.0)\", t); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/753/buggy-version/modules.activity-analysis.service-dependency.src.main.java.org.overlord.rtgov.service.dependency.ServiceDependencyBuilder.java", "BodyUseAPI": ["org.overlord.rtgov.service.dependency.ServiceGraph.getServiceNode(id.getServiceType())", "org.overlord.rtgov.analytics.service.InvocationDefinition.getServiceType()", "org.overlord.rtgov.analytics.service.InvocationDefinition.getServiceType()"], "Fixed commit": "90459055007945d643fe3c8545e604dae8bd9d99", "Url": "https://api.github.com/repos/ivanthelad/rtgov", "Date": "2014-08-13T13:55:06Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { output = sock.getOutputStream(); input = sock.getInputStream(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/666/buggy-version/Mothership.src.org.mothership.server.Connection.java", "BodyUseAPI": ["java.net.Socket.getInputStream()", "java.net.Socket.getOutputStream()"], "Fixed commit": "58d9cccbf5e015744c2f68a8971155a118cdeef4", "Url": "https://api.github.com/repos/slayerpjo/Mothership", "Date": "2014-10-09T02:12:45Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fuzzer.discover(); } catch (com.gargoylesoftware.htmlunit.FailingHttpStatusCodeException fhsce) { java.lang.System.err.println((\"That URL returned a status code of \" + (fhsce.getStatusCode()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6616/buggy-version/swen-331-fuzzer.src.Program.java", "BodyUseAPI": ["Fuzzer.discover()"], "Fixed commit": "1719b25cfd2f77977d17473833aaae09ff84ddde", "Url": "https://api.github.com/repos/msd7734/swen-331-fuzzer", "Date": "2014-09-23T06:31:12Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { delta.accept(new net.sf.eclipsefp.haskell.core.hlint.DeltaVisitor()); } catch (org.eclipse.core.runtime.CoreException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5879/buggy-version/net.sf.eclipsefp.haskell.core.src.net.sf.eclipsefp.haskell.core.hlint.HLintBuilder.java", "BodyUseAPI": ["org.eclipse.core.resources.IResourceDelta.accept(net.sf.eclipsefp.haskell.core.hlint.DeltaVisitor)"], "Fixed commit": "895680b323697433d4dbd0412bfca375949d297b", "Url": "https://api.github.com/repos/serras/eclipsefp", "Date": "2011-07-18T11:49:00Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getProject().accept(new net.sf.eclipsefp.haskell.core.hlint.FullBuildVisitor()); } catch (org.eclipse.core.runtime.CoreException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/5879/buggy-version/net.sf.eclipsefp.haskell.core.src.net.sf.eclipsefp.haskell.core.hlint.HLintBuilder.java", "BodyUseAPI": ["getProject().accept(net.sf.eclipsefp.haskell.core.hlint.FullBuildVisitor)", "net.sf.eclipsefp.haskell.core.hlint.HLintBuilder.3.getProject()"], "Fixed commit": "895680b323697433d4dbd0412bfca375949d297b", "Url": "https://api.github.com/repos/serras/eclipsefp", "Date": "2011-07-18T11:49:00Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { while ((!(endReached)) && ((pendingRow) != null)) wait(); } catch (java.lang.InterruptedException ie) { } finally { pendingRow = null; endReached = true; notifyAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6972/buggy-version/src.tap.data.VOTableIterator.java", "BodyUseAPI": ["tap.data.VOTableIterator.StreamVOTableSink.wait()"], "Fixed commit": "021054e428566fa0a81c0ebada457b8e50511151", "Url": "https://api.github.com/repos/gmantele/taplib", "Date": "2015-01-23T14:54:23Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { connectToWebsocketInternal(); } catch (java.lang.Exception e) { reportError((\"WebSocketerror: \" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/7856/buggy-version/app.src.main.java.de.lespace.apprtc.WebSocketRTCClient.java", "BodyUseAPI": ["de.lespace.apprtc.WebSocketRTCClient.2.connectToWebsocketInternal()"], "Fixed commit": "51f42ccf1fa42f552a1c66e9b55d5faa9ab97c96", "Url": "https://api.github.com/repos/inspiraluna/AppRTC-Android", "Date": "2016-12-10T15:46:58Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { db.prepare(this); final boolean result = exec(); success = true; return result; } finally { if (!success) { internalClose(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/2404/buggy-version/src.main.java.org.sqlite.jdbc3.JDBC3Statement.java", "BodyUseAPI": ["org.sqlite.jdbc3.JDBC3Statement.exec()", "org.sqlite.jdbc3.JDBC3Statement.prepare(org.sqlite.jdbc3.JDBC3Statement)"], "Fixed commit": "f57a4b2a9d8da1173ff7e194e7ad0c3bbe17a84f", "Url": "https://api.github.com/repos/xerial/sqlite-jdbc", "Date": "2015-11-14T22:08:14Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { controlForm.setRn(java.lang.Integer.parseInt(((java.lang.String) (request.getParameter(\"rn\"))))); } catch (java.lang.Exception e) { addCustomActionErrorMessages(getText(\"resource.common.monitor.error.LastNInteger\")); return INPUT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/1595/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.resource.common.monitor.visibility.MetricsControlActionNG.java", "BodyUseAPI": ["org.hyperic.hq.ui.action.resource.common.monitor.visibility.MetricsControlFormNG.setRn(int)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.lang.Integer.parseInt(((java.lang.String) (request.getParameter(\"rn\"))))"], "Fixed commit": "3d1c1a0db57201c48efd289f884f9b688fe77a37", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-09-08T14:51:52Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { env = new gurobi.GRBEnv(); env.set(GRB.DoubleParam.Heuristics, 1.0); env.set(GRB.DoubleParam.ImproveStartGap, java.lang.Double.POSITIVE_INFINITY); env.set(GRB.DoubleParam.TimeLimit, timeLimit); env.set(GRB.IntParam.MIPFocus, 1); env.set(GRB.IntParam.Threads, numThreads); } catch (gurobi.GRBException e) { promptGRBError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/8924/buggy-version/src.edu.rutgers.MOST.optimization.solvers.GurobiSolver.java", "BodyUseAPI": ["gurobi.GRBEnv.set(GRB.DoubleParam.Heuristics,double)", "gurobi.GRBEnv.set(GRB.IntParam.MIPFocus,int)", "gurobi.GRBEnv.set(GRB.IntParam.Threads,int)", "gurobi.GRBEnv.set(GRB.DoubleParam.ImproveStartGap,double)", "gurobi.GRBEnv.set(GRB.DoubleParam.TimeLimit,double)"], "Fixed commit": "f969eed4051098d3b40f288a6b46157d4fca0314", "Url": "https://api.github.com/repos/CodeGuro/MOST", "Date": "2014-06-01T17:43:21Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { observationValue = ISODateFomat.parse(date); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V22/6694/buggy-version/fhirmapper.src.main.java.org.openmrs.module.fhir.mapper.emr.FHIRFamilyHistoryMapper.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "2576048341c93d386cbebbf68d239c540e22ca8e", "Url": "https://api.github.com/repos/SharedHealth/openmrs-module-bdshrclient", "Date": "2014-08-22T09:37:33Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { annotationSupport.dispatch(session, message); } catch (java.lang.Throwable th) { org.eclipse.moquette.spi.impl.SimpleMessaging.LOG.error(\"Grave error processing the message {} for {}\", message, session, th); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/937/buggy-version/broker.src.main.java.org.eclipse.moquette.spi.impl.SimpleMessaging.java", "BodyUseAPI": ["org.eclipse.moquette.spi.impl.AnnotationSupport.dispatch(org.eclipse.moquette.server.ServerChannel,org.eclipse.moquette.spi.impl.AbstractMessage)"], "Fixed commit": "9562f56a3a6ed0813c3c5c9ba30789aedbdb5b2b", "Url": "https://api.github.com/repos/popeye0807/moquette", "Date": "2015-01-31T11:19:50Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { webBrowser = new chrriis.dj.nativeswing.swtimpl.components.JWebBrowser(); } catch (java.lang.Exception ex) { webBrowser = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5563/buggy-version/src.org.dyndns.fzoli.rccar.controller.view.map.MapDialog.java", "BodyUseAPI": [], "Fixed commit": "25847fc63f327100c3bc723d25151318d1f66450", "Url": "https://api.github.com/repos/fzoli/RemoteControlCar", "Date": "2013-01-10T22:36:39Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ((com.nextgis.maplib.map.MapContentProviderHelper) (com.nextgis.maplib.map.MapBase.getInstance())).getDatabase(false).execSQL(\"VACUUM\"); } catch (android.database.sqlite.SQLiteException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2114/buggy-version/app.src.main.java.com.nextgis.mobile.activity.SettingsActivity.java", "BodyUseAPI": ["((com.nextgis.maplib.map.MapContentProviderHelper) (com.nextgis.maplib.map.MapBase.getInstance())).getDatabase(boolean)", "((com.nextgis.maplib.map.MapContentProviderHelper) (com.nextgis.maplib.map.MapBase.getInstance())).getDatabase(false).execSQL(java.lang.String)", "com.nextgis.maplib.map.MapBase.getInstance()"], "Fixed commit": "f7407af121ff9fb68d58c729150a17fce880a7ba", "Url": "https://api.github.com/repos/nextgis/android_gisapp", "Date": "2016-10-03T09:53:02Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mDPM.lockNow(); } catch (java.lang.Exception e) { android.widget.Toast.makeText(getApplicationContext(), (((getString(R.string.devadmin_error)) + \"\\n\") + (e.toString())), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2041/buggy-version/GlowNotifierApp.src.main.java.com.hybdms.glownotifier.GlowActivity.java", "BodyUseAPI": ["android.app.admin.DevicePolicyManager.lockNow()"], "Fixed commit": "7c5a135c05fd2ba086b50deaba66f62882e48ac6", "Url": "https://api.github.com/repos/sukso96100/GlowNotifier", "Date": "2014-02-07T13:43:29Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { UFSResponseObj = creationClientMethod.invoke(USFCreationClientObj, UFSRequestObj); } catch (java.lang.IllegalArgumentException iae) { com.snaplogic.snaps.uniteller.BaseService.log.error(iae.getMessage(), iae); } catch (java.lang.reflect.InvocationTargetException ite) { com.snaplogic.snaps.uniteller.BaseService.log.error(ite.getMessage(), ite); } catch (java.lang.Exception ex) { com.snaplogic.snaps.uniteller.BaseService.log.error(ex.getMessage(), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4303/buggy-version/uniteller.src.main.java.com.snaplogic.snaps.uniteller.BaseService.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object)"], "Fixed commit": "f9e435761cc49eced60e5b58f6cca0c688ed339b", "Url": "https://api.github.com/repos/vish86/fsm-snaps", "Date": "2014-05-26T14:20:59Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { method.invoke(UFSRequestObj, map.get(method.getName().substring(3))); } catch (java.lang.IllegalArgumentException iae) { com.snaplogic.snaps.uniteller.BaseService.log.error(iae.getMessage(), iae); } catch (java.lang.reflect.InvocationTargetException ite) { com.snaplogic.snaps.uniteller.BaseService.log.error(ite.getMessage(), ite); } catch (java.lang.Exception ex) { com.snaplogic.snaps.uniteller.BaseService.log.error(ex.getMessage(), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4303/buggy-version/uniteller.src.main.java.com.snaplogic.snaps.uniteller.BaseService.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object)", "java.lang.reflect.Method.getName()", "java.lang.String.substring(int)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "f9e435761cc49eced60e5b58f6cca0c688ed339b", "Url": "https://api.github.com/repos/vish86/fsm-snaps", "Date": "2014-05-26T14:20:59Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { commitMessage = getOperation().getCommitHandler().getCommitMessage(commitMessage, itemsArray); if (commitMessage == null) { return org.tmatesoft.svn.core.SVNCommitInfo.NULL; } revisionProperties = getOperation().getCommitHandler().getRevisionProperties(commitMessage, itemsArray, revisionProperties); } catch (org.tmatesoft.svn.core.SVNException e) { org.tmatesoft.svn.core.SVNErrorMessage err = e.getErrorMessage().wrap(\"Commit failed (details follow):\"); org.tmatesoft.svn.core.internal.wc.SVNErrorManager.error(err, SVNLogType.WC); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7040/buggy-version/svnkit.src.main.java.org.tmatesoft.svn.core.internal.wc2.ng.SvnNgCommit.java", "BodyUseAPI": ["getOperation().getCommitHandler()", "org.tmatesoft.svn.core.internal.wc2.ng.SvnNgCommit.getOperation()", "org.tmatesoft.svn.core.internal.wc2.ng.SvnNgCommit.getOperation()", "getOperation().getCommitHandler().getCommitMessage(java.lang.String,org.tmatesoft.svn.core.wc2.SvnCommitItem[])", "getOperation().getCommitHandler().getRevisionProperties(java.lang.String,org.tmatesoft.svn.core.wc2.SvnCommitItem[],org.tmatesoft.svn.core.SVNProperties)", "getOperation().getCommitHandler()"], "Fixed commit": "dfb91a5f4cb0d59f4f4301bbb4cf0972500fb71b", "Url": "https://api.github.com/repos/jenkinsci/svnkit", "Date": "2013-01-04T18:45:46Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((input != null) && (!(input.isEmpty()))) { while ((spanned.charAt(((spanned.length()) - 1))) == '\\n') { spanned = spanned.delete(((spanned.length()) - 1), spanned.length()); } } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8801/buggy-version/app.src.main.java.com.mxt.anitrend.util.MarkDown.java", "BodyUseAPI": ["android.text.SpannableStringBuilder.length()", "java.lang.String.isEmpty()", "android.text.SpannableStringBuilder.length()", "android.text.SpannableStringBuilder.length()", "android.text.SpannableStringBuilder.delete(((spanned.length()) - 1),spanned.length())", "android.text.SpannableStringBuilder.charAt(((spanned.length()) - 1))"], "Fixed commit": "dbc41f7b3497ff619084710e570bd269f377d523", "Url": "https://api.github.com/repos/AniTrend/anitrend-app", "Date": "2017-06-07T12:59:23Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { method.invoke(null); models.TipoEvaluacion tipoEvaluacion = models.TipoEvaluacion.all().first(); tipoEvaluacion.estado = \"iniciada\"; tipoEvaluacion.save(); controllers.ActivarBaremacionController.log.info((\"Acci\u00f3n Editar de p\u00e1gina: \" + (\"gen/ActivarBaremacion/ActivarBaremacion.html\" + \" , intentada con \u00e9xito, Baremaci\u00f3n Iniciada\"))); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4341/buggy-version/fap.app.controllers.ActivarBaremacionController.java", "BodyUseAPI": ["models.TipoEvaluacion.save()", "models.TipoEvaluacion.all()", "java.lang.reflect.Method.invoke(<nulltype>)", "models.TipoEvaluacion.all().first()", "org.apache.log4j.Logger.info(java.lang.String)"], "Fixed commit": "76d5a725d8f178bb27ef309712f41c2414d65155", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2012-10-11T06:50:25Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { clientSocket.getInputStream().read(); } catch (java.io.IOException e) { ru.spbau.mit.MeasureServers.TCP.TcpServer.logger.log(java.util.logging.Level.FINER, \"Client closed the connection\", e); } finally { try { clientSocket.close(); } catch (java.io.IOException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7108/buggy-version/src.main.java.ru.spbau.mit.MeasureServers.TCP.TcpServer.java", "BodyUseAPI": ["java.net.Socket.getInputStream()", "java.io.InputStream.read()"], "Fixed commit": "35e53a7a6ad013654c91f46cea83f4c58c16273e", "Url": "https://api.github.com/repos/esengie/server_tester", "Date": "2016-12-13T01:14:46Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.System.out.println((((((\"CLIENTE:\" + from) + \":EsperaRespuesta:DV:\") + (ady[1])) + \":\") + (ady[2]))); routercc8.Conexion.dv.recibeMinimo(from, ady[1], java.lang.Integer.parseInt(ady[2])); } catch (java.lang.Exception e) { java.lang.System.out.println((((\"ERROR:\" + from) + \":ADY:\") + (ady[1]))); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4249/buggy-version/RouterCC8.src.routercc8.Conexion.java", "BodyUseAPI": ["routercc8.DistanceVector.recibeMinimo(java.lang.String,java.lang.String,int)", "java.lang.Integer.parseInt(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "fa5b33b556c9e9bdbd9fc45b24c6da0b8a41cf2b", "Url": "https://api.github.com/repos/kevingalvez/RouterCCVIII", "Date": "2015-11-18T03:31:18Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { emails.Mails.enviar(\"LogFatal\", pattern); } catch (java.lang.IllegalArgumentException e) { play.Logger.warn(\"No se encontr\u00f3 el ID del mail en la base de datos, por lo que no se pudo enviar por correo el error FATAL\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1066/buggy-version/fap.app.logger.FapLogs.java", "BodyUseAPI": ["emails.Mails.enviar(java.lang.String,java.lang.String)"], "Fixed commit": "1bd1d4a93ebe96d81d2118ad625a6263dde03f2c", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2012-03-29T11:05:25Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class clazz = java.lang.Class.forName(componentName, true, classLoader); service = ((mindroid.app.Service) (clazz.newInstance())); } catch (java.lang.Exception e) { mindroid.util.Log.e(mindroid.app.Process.LOG_TAG, (((\"Cannot find class \\'\" + componentName) + \"\\': \") + (e.getMessage())), e); } catch (java.lang.LinkageError e) { mindroid.util.Log.e(mindroid.app.Process.LOG_TAG, (\"Linkage error: \" + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4096/buggy-version/src.mindroid.app.Process.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String,boolean,java.net.URLClassLoader)", "java.lang.Class.newInstance()"], "Fixed commit": "49495802d9f1000559750cf0842406d95c983afb", "Url": "https://api.github.com/repos/esrlabs/Mindroid.java", "Date": "2014-10-08T12:22:24Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class clazz = java.lang.Class.forName(componentName); service = ((mindroid.app.Service) (clazz.newInstance())); } catch (java.lang.Exception e) { mindroid.util.Log.e(mindroid.app.Process.LOG_TAG, (((\"Cannot find class \\'\" + componentName) + \"\\': \") + (e.getMessage())), e); } catch (java.lang.LinkageError e) { mindroid.util.Log.e(mindroid.app.Process.LOG_TAG, (\"Linkage error: \" + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4096/buggy-version/src.mindroid.app.Process.java", "BodyUseAPI": ["java.lang.Class.newInstance()", "java.lang.Class.forName(java.lang.String)"], "Fixed commit": "49495802d9f1000559750cf0842406d95c983afb", "Url": "https://api.github.com/repos/esrlabs/Mindroid.java", "Date": "2014-10-08T12:22:24Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { error = themeFileResolver.getTemplate(\"500.html\", frontView.getBreakpoint()); } catch (org.mayocat.theme.TemplateNotFoundException notFound) { error = new org.mayocat.views.Template(\"500\", com.google.common.io.Resources.toString(com.google.common.io.Resources.getResource(\"templates/500.html\"), Charsets.UTF_8)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6928/buggy-version/platform.rest.src.main.java.org.mayocat.rest.views.FrontViewMessageBodyWriter.java", "BodyUseAPI": ["org.mayocat.theme.ThemeFileResolver.getTemplate(java.lang.String,frontView.getBreakpoint())", "org.mayocat.rest.views.FrontView.getBreakpoint()"], "Fixed commit": "03eca6b15504bed48e5657c3227f6381d08c29b1", "Url": "https://api.github.com/repos/mayocat/mayocat-shop", "Date": "2013-11-19T16:45:17Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String uriString = ((((((\"geo:\" + loc) + \"?q=\") + loc) + \"(\") + (java.net.URLEncoder.encode(curFP.getTitle(), \"UTF-8\"))) + \")&d=\") + (java.net.URLEncoder.encode(curFP.getNotes(), \"UTF-8\")); android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(uriString)); startActivity(intent); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7364/buggy-version/app.src.main.java.com.gabm.fancyplaces.ui.ShowEditPlace.java", "BodyUseAPI": ["com.gabm.fancyplaces.ui.ShowEditPlace.startActivity(android.content.Intent)", "java.net.URLEncoder.encode(curFP.getTitle(),java.lang.String)", "com.gabm.fancyplaces.data.FancyPlace.getNotes()", "com.gabm.fancyplaces.data.FancyPlace.getTitle()", "android.net.Uri.parse(java.lang.String)", "java.net.URLEncoder.encode(curFP.getNotes(),java.lang.String)"], "Fixed commit": "30dbda87e2402f3c72f0e3a316b5aeb62838b387", "Url": "https://api.github.com/repos/gabm/FancyPlaces", "Date": "2015-06-23T15:42:34Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { validateXpathAndSchema(); } catch (java.io.UnsupportedEncodingException e) { throw new java.lang.IllegalArgumentException((\"Failed to parse XPath mappings. Reason : \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3414/buggy-version/transform-plugins.src.main.java.co.cask.hydrator.plugin.XMLParser.java", "BodyUseAPI": ["co.cask.hydrator.plugin.XMLParser.validateXpathAndSchema()"], "Fixed commit": "646c6ae37ffcaaff2492b682dc6371eb98bb61d3", "Url": "https://api.github.com/repos/shashankmoghe/hydrator-plugins", "Date": "2017-02-23T05:16:12Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (category != null) { service.editCategory(category, form); }else { service.createCategory(form); } } catch (java.lang.Exception e) { model.addAttribute(\"error\", e.getLocalizedMessage()); model.addAttribute(\"form\", form); return view(\"categories/create\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/351/buggy-version/src.main.java.org.fenixedu.academic.ui.spring.controller.teacher.authorization.AuthorizationController.java", "BodyUseAPI": ["org.fenixedu.academic.ui.spring.controller.teacher.authorization.AuthorizationService.createCategory(org.fenixedu.academic.ui.spring.controller.teacher.authorization.CategoryBean)", "org.fenixedu.academic.ui.spring.controller.teacher.authorization.AuthorizationService.editCategory(org.fenixedu.academic.domain.TeacherCategory,org.fenixedu.academic.ui.spring.controller.teacher.authorization.CategoryBean)"], "Fixed commit": "5de84e191fdc173658d13b02fd5dd2af2bbd87e2", "Url": "https://api.github.com/repos/sergiofbsilva/fenix", "Date": "2014-11-20T02:26:06Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((br) != null) { unregisterReceiver(br); } } catch (java.lang.Exception e) { android.util.Log.e(TAG, \"onDestroy: br\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/807/buggy-version/app.src.main.java.com.BlackBox.Wifi_Login.Services.BackgroundService.java", "BodyUseAPI": ["com.BlackBox.Wifi_Login.Services.BackgroundService.unregisterReceiver(com.BlackBox.Wifi_Login.Services.BackgroundService.MyBroadcastReceiver)"], "Fixed commit": "f2601c73eeb6c1356d6a184e528b90577fbbe643", "Url": "https://api.github.com/repos/Raghav-intrigue/Proxy_Login", "Date": "2017-08-14T14:06:45Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { handler = new android.os.Handler(); } catch (java.lang.RuntimeException e) { android.util.Log.w(com.heinrichreimer.inquiry.Inquiry.DEBUG_TAG, \"Caller thread has no default looper, using main looper\"); handler = new android.os.Handler(android.os.Looper.getMainLooper()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1986/buggy-version/library.src.main.java.com.heinrichreimer.inquiry.Inquiry.java", "BodyUseAPI": [], "Fixed commit": "5763b33cc44d4ab67ba8f4c25ba32880d6e3053d", "Url": "https://api.github.com/repos/aitorvs/android-inquiry", "Date": "2016-09-08T09:11:22Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mTextureA.put(dataA).position(0); mTextureB.put(dataB).position(0); } catch (java.nio.BufferOverflowException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3519/buggy-version/src.net.georgewhiteside.android.abstractart.Renderer.java", "BodyUseAPI": ["java.nio.ByteBuffer.position(int)", "java.nio.ByteBuffer.put(byte[])", "java.nio.ByteBuffer.position(int)", "java.nio.ByteBuffer.put(byte[])"], "Fixed commit": "4289995f16c4d78f3b7e7703d01c582f432c7c3d", "Url": "https://api.github.com/repos/gwhiteside/abstract-art", "Date": "2012-05-17T05:24:03Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { handleDataPacket(packet.getLeft(), packet.getRight()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2959/buggy-version/Serial.src.serial.handler.DataInHandler.java", "BodyUseAPI": ["serial.util.Pair<serial.model.DataPacket, java.lang.Long>.getLeft()", "serial.handler.DataInHandler.handleDataPacket(packet.getLeft(),packet.getRight())", "serial.util.Pair<serial.model.DataPacket, java.lang.Long>.getRight()"], "Fixed commit": "a3fd1b0d717d44f1fa33c8641e57356a02d081aa", "Url": "https://api.github.com/repos/Dowers/tsea29", "Date": "2014-11-19T17:47:15Z"},
{"Line": "=>746", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.getCollectionRepository().flush(); } catch (java.lang.Exception e) { org.ednovo.gooru.domain.service.ScollectionServiceImpl.LOGGER.error(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5033/buggy-version/api.src.main.java.org.ednovo.gooru.domain.service.ScollectionServiceImpl.java", "BodyUseAPI": ["org.ednovo.gooru.infrastructure.persistence.hibernate.CollectionRepository.flush()", "org.ednovo.gooru.domain.service.ScollectionServiceImpl.getCollectionRepository()"], "Fixed commit": "f051c5fec7b872cc2cef3edc7d7404ef8cabaf37", "Url": "https://api.github.com/repos/saravanab/Gooru-Core-API-1", "Date": "2014-10-28T09:52:08Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { urlCount = java.lang.Long.valueOf(jedis.get((((com.hehehey.ghost.schedule.RedisConnection.TASK_PREFIX) + id) + (com.hehehey.ghost.schedule.RedisConnection.COUNT_URL_SUFFIX)))); } catch (java.lang.NumberFormatException e) { urlCount = 0L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4246/buggy-version/schedule.src.main.java.com.hehehey.ghost.schedule.RedisConnection.java", "BodyUseAPI": ["redis.clients.jedis.Jedis.get(java.lang.String)", "java.lang.Long.valueOf(jedis.get((((com.hehehey.ghost.schedule.RedisConnection.TASK_PREFIX) + id) + (com.hehehey.ghost.schedule.RedisConnection.COUNT_URL_SUFFIX))))"], "Fixed commit": "adab6aa86b903e3714da09678094153428ff687f", "Url": "https://api.github.com/repos/dickrd/ghost", "Date": "2017-04-12T01:20:40Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { lat = mLocation.getLatitude(); lon = mLocation.getLongitude(); } catch (java.lang.NullPointerException e) { lat = 0.0; lon = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/176/buggy-version/app.src.main.java.parkinglocator.jeva.washington.edu.parkinglocator.ParkActivity.java", "BodyUseAPI": ["android.location.Location.getLatitude()", "android.location.Location.getLongitude()"], "Fixed commit": "dbbaef763b05eee5bb603c20ee3ba35d092749a1", "Url": "https://api.github.com/repos/Ethan-McGregor/ParkingLocator", "Date": "2017-03-07T21:38:52Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { id = telephonyManager.getDeviceId(); } catch (java.lang.SecurityException e) { id = \"Emulator\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/176/buggy-version/app.src.main.java.parkinglocator.jeva.washington.edu.parkinglocator.ParkActivity.java", "BodyUseAPI": ["android.telephony.TelephonyManager.getDeviceId()"], "Fixed commit": "dbbaef763b05eee5bb603c20ee3ba35d092749a1", "Url": "https://api.github.com/repos/Ethan-McGregor/ParkingLocator", "Date": "2017-03-07T21:38:52Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { lat = location.getLatitude(); lon = location.getLongitude(); } catch (java.lang.NullPointerException e) { lat = 0.0; lon = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/176/buggy-version/app.src.main.java.parkinglocator.jeva.washington.edu.parkinglocator.MainActivity.java", "BodyUseAPI": ["android.location.Location.getLongitude()", "android.location.Location.getLatitude()"], "Fixed commit": "dbbaef763b05eee5bb603c20ee3ba35d092749a1", "Url": "https://api.github.com/repos/Ethan-McGregor/ParkingLocator", "Date": "2017-03-07T21:38:52Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(commanutil.utl.StringUtil.isEmpty(et.getText().toString()))) { int number = java.lang.Integer.valueOf(et.getText().toString()); onPositionGot.onPositonGet(number); } } catch (java.lang.Exception e) { commanutil.utl.LogManager.printStackTrace(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6561/buggy-version/app.src.main.java.commanutil.view.DialogInfo.java", "BodyUseAPI": ["android.widget.EditText.getText()", "et.getText().toString()", "commanutil.utl.StringUtil.isEmpty(et.getText().toString())", "commanutil.view.DialogInfo.IOnPositionGot.onPositonGet(int)", "java.lang.Integer.valueOf(et.getText().toString())", "android.widget.EditText.getText()", "et.getText().toString()"], "Fixed commit": "1c55bcaed3220d3d006bc87b79097a02338ea334", "Url": "https://api.github.com/repos/zhenbeiju/AndroidCommonUtil", "Date": "2016-07-29T04:13:22Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { response = getResponse(url); } catch (java.lang.Exception e) { response = new java.util.ArrayList<eic.beike.projectx.network.busdata.ResponseEntry>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2759/buggy-version/App.app.src.main.java.eic.beike.projectx.network.busdata.SimpleBusCollector.java", "BodyUseAPI": ["eic.beike.projectx.network.busdata.SimpleBusCollector.getResponse(java.lang.String)"], "Fixed commit": "fbce5844b06b7e55a3abe29400347475d15e38a9", "Url": "https://api.github.com/repos/BeikeElectricity/ProjectX", "Date": "2015-10-15T08:27:14Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { de.lordvader.spawn.SettingsManager.getInstance().getConfig().save(de.lordvader.spawn.SettingsManager.getInstance().getCfile()); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2887/buggy-version/src.de.lordvader.spawn.de.lordvader.spawn.commands.SetNewPointsCommand.java", "BodyUseAPI": ["de.lordvader.spawn.SettingsManager.getInstance()", "de.lordvader.spawn.SettingsManager.getInstance().getConfig()", "de.lordvader.spawn.SettingsManager.getInstance()", "de.lordvader.spawn.SettingsManager.getInstance().getCfile()", "de.lordvader.spawn.SettingsManager.getInstance().getConfig().save(de.lordvader.spawn.SettingsManager.getInstance().getCfile())"], "Fixed commit": "2c2dd9d580673e3b3d7d1b62fc9418199f698cdf", "Url": "https://api.github.com/repos/lordvaderde/SpawnPlugin", "Date": "2016-02-13T22:20:19Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.view.View fab = getActivity().findViewById(R.id.donate); fab.animate().scaleX((1 - slideOffset)).scaleY((1 - slideOffset)).setDuration(0).start(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5868/buggy-version/app.src.main.java.com.wfcrc.AboutFragment.java", "BodyUseAPI": ["fab.animate().scaleX((1 - slideOffset)).scaleY((1 - slideOffset)).setDuration(int)", "fab.animate().scaleX(float)", "android.view.View.animate()", "getActivity().findViewById(R.id.donate)", "fab.animate().scaleX((1 - slideOffset)).scaleY((1 - slideOffset)).setDuration(0).start()", "fab.animate().scaleX((1 - slideOffset)).scaleY(float)", "com.wfcrc.AboutFragment.2.getActivity()"], "Fixed commit": "261d601cabb6596cc95797614f2a1292aacb39bb", "Url": "https://api.github.com/repos/malonsolopez/wfcrc-android", "Date": "2017-07-07T22:35:05Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { e.getPlayer().teleport(new org.bukkit.Location(e.getPlayer().getWorld(), ((double) (section.getDouble(\"X\"))), ((double) (section.getDouble(\"Y\"))), ((double) (section.getDouble(\"Z\"))), ((float) (section.getDouble(\"Yaw\"))), ((float) (section.getDouble(\"Pitch\"))))); } catch (java.lang.Exception ex) { if (e.getPlayer().isOp()) e.getPlayer().sendMessage(\"\u00a7cAn error occured with your SpawnJoin config!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/8366/buggy-version/SpawnJoin.src.main.java.nl.rammelkast.SpawnJoin.events.EventManager.java", "BodyUseAPI": ["org.bukkit.configuration.ConfigurationSection.getDouble(java.lang.String)", "org.bukkit.event.player.PlayerJoinEvent.getPlayer()", "org.bukkit.event.player.PlayerJoinEvent.getPlayer()", "org.bukkit.configuration.ConfigurationSection.getDouble(java.lang.String)", "e.getPlayer().teleport(org.bukkit.Location)", "e.getPlayer().getWorld()", "org.bukkit.configuration.ConfigurationSection.getDouble(java.lang.String)", "org.bukkit.configuration.ConfigurationSection.getDouble(java.lang.String)", "org.bukkit.configuration.ConfigurationSection.getDouble(java.lang.String)"], "Fixed commit": "424feb21e27541b9c79d86885c551727f107054e", "Url": "https://api.github.com/repos/Rammelkast/SpawnJoin", "Date": "2016-05-25T15:02:42Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return matcher.reset(path).matches(); } catch (java.lang.StringIndexOutOfBoundsException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/4691/buggy-version/src.mobi.hsz.idea.gitignore.util.Utils.java", "BodyUseAPI": ["java.util.regex.Matcher.matches()", "java.util.regex.Matcher.reset(java.lang.String)"], "Fixed commit": "c0b71eb1d3972f487c63c3b58fc9f89b1302a69e", "Url": "https://api.github.com/repos/hsz/idea-gitignore", "Date": "2016-03-21T07:23:08Z"},
{"Line": "=>1134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (mInventory.hasDetails(sku)) { com.vegnab.vegnab.util.inappbilling.SkuDetails skuDetails = mInventory.getSkuDetails(sku); contentValues.put(\"Price\", skuDetails.getPrice()); contentValues.put(\"Description\", skuDetails.getDescription()); contentValues.put(\"Title\", skuDetails.getTitle()); }else { contentValues.putNull(\"Price\"); contentValues.putNull(\"Description\"); contentValues.putNull(\"Title\"); } } catch (java.lang.Exception e) { contentValues.putNull(\"Price\"); contentValues.putNull(\"Description\"); contentValues.putNull(\"Title\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2692/buggy-version/app.src.main.java.com.vegnab.vegnab.MainVNActivity.java", "BodyUseAPI": ["com.vegnab.vegnab.util.inappbilling.SkuDetails.getTitle()", "android.content.ContentValues.putNull(java.lang.String)", "android.content.ContentValues.put(java.lang.String,skuDetails.getTitle())", "android.content.ContentValues.putNull(java.lang.String)", "android.content.ContentValues.put(java.lang.String,skuDetails.getPrice())", "com.vegnab.vegnab.util.inappbilling.SkuDetails.getDescription()", "android.content.ContentValues.put(java.lang.String,skuDetails.getDescription())", "com.vegnab.vegnab.util.inappbilling.Inventory.hasDetails(java.lang.String)", "android.content.ContentValues.putNull(java.lang.String)", "com.vegnab.vegnab.util.inappbilling.Inventory.getSkuDetails(java.lang.String)", "com.vegnab.vegnab.util.inappbilling.SkuDetails.getPrice()"], "Fixed commit": "79983db629d3d2cc5b68998521f9dd90307667af", "Url": "https://api.github.com/repos/rickshory/VegNabAS", "Date": "2015-12-05T23:13:08Z"},
{"Line": "=>609", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((((org.ednovo.gooru.client.mvp.gshelf.ShelfTreeWidget) (widget)).getCollectionDo()) != null) { if ((widget instanceof org.ednovo.gooru.client.mvp.gshelf.ShelfTreeWidget) && (((org.ednovo.gooru.client.mvp.gshelf.ShelfTreeWidget) (widget)).getCollectionDo().getGooruOid().equals(collectionId))) { flag = true; } } } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/7985/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gshelf.ShelfMainView.java", "BodyUseAPI": ["com.google.gwt.user.client.ui.Widget.getCollectionDo()", "((org.ednovo.gooru.client.mvp.gshelf.ShelfTreeWidget) (widget)).getCollectionDo().getGooruOid()", "((org.ednovo.gooru.client.mvp.gshelf.ShelfTreeWidget) (widget)).getCollectionDo().getGooruOid().equals(java.lang.String)", "com.google.gwt.user.client.ui.Widget.getCollectionDo()"], "Fixed commit": "926b4ac2cbd79b5aa5bf266ca2f7b28f6986ae9b", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-07-21T13:33:45Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.reflect.Method startAsyncMethod = req.getClass().getMethod(\"startAsync\"); async = ((javax.servlet.AsyncContext) (startAsyncMethod.invoke(req))); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/1712/buggy-version/core.src.main.java.org.fourthline.cling.transport.impl.AsyncServletStreamServerImpl.java", "BodyUseAPI": ["req.getClass().getMethod(java.lang.String)", "java.lang.reflect.Method.invoke(javax.servlet.http.HttpServletRequest)", "javax.servlet.http.HttpServletRequest.getClass()"], "Fixed commit": "8bdc3669e28c953e0125ce9978ed436139634b7c", "Url": "https://api.github.com/repos/rzwuhan/cling", "Date": "2017-05-08T04:25:44Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { odo = java.lang.Double.parseDouble(value); } catch (java.lang.NumberFormatException e) { setErrorMessage(R.string.nan); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/585/buggy-version/app.src.main.java.com.development.jaba.moneypit.AddOrEditFillupActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "4124b63e9832698fa32547b9d326251c75ab5d68", "Url": "https://api.github.com/repos/jcbaar/MoneyPit", "Date": "2014-12-31T17:03:16Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (java.lang.String song : hashMap[i]) { songScan = new java.util.Scanner(song); java.lang.String fileName = songScan.next(); if (fileName.contains(query)) return song; } } catch (java.lang.Exception e) { java.lang.System.out.println(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/5823/buggy-version/Peer.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.util.Scanner.next()"], "Fixed commit": "c9ab828994c01d4488187fe3b419baaf80acc1cb", "Url": "https://api.github.com/repos/egiese/Net-P2P", "Date": "2017-05-01T01:23:34Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { html = ((android.text.SpannableStringBuilder) (android.text.Html.fromHtml(text, null, new org.wordpress.android.util.WPHtmlTagHandler()))); } catch (java.lang.RuntimeException runtimeException) { html = ((android.text.SpannableStringBuilder) (android.text.Html.fromHtml(text, null, null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3225/buggy-version/src.org.wordpress.android.models.Note.java", "BodyUseAPI": ["android.text.Html.fromHtml(java.lang.String,<nulltype>,org.wordpress.android.util.WPHtmlTagHandler)"], "Fixed commit": "5bca7e6a450527814a398fb21e688a2aa6fed1bc", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2013-12-26T16:55:46Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String paragraph = m.group(\"p\"); java.lang.String rule = m.group(\"rule\"); lastParagraph = paragraph; builder.put(paragraph, rule); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/9088/buggy-version/src.main.java.lu.zhe.mtgslackbot.rule.RuleUtils.java", "BodyUseAPI": ["java.util.regex.Matcher.group(java.lang.String)", "java.util.regex.Matcher.group(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "5003996a5dd8b4bf516efaec25f81beb310968df", "Url": "https://api.github.com/repos/zhelu/mtgslackbot", "Date": "2016-10-29T03:45:13Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.keaton.jsonissavage.Notification.update(); } catch (java.io.IOException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/9070/buggy-version/src.com.keaton.jsonissavage.Main.java", "BodyUseAPI": ["com.keaton.jsonissavage.Notification.update()"], "Fixed commit": "50969ff66585d554f881b35c454547fbe61b1540", "Url": "https://api.github.com/repos/128keaton/JSONPlayerCount", "Date": "2015-11-30T23:15:05Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ((android.widget.TextView) (findViewById(R.id.principal_header_nome))).setText(usuario.getNome()); ((android.widget.TextView) (findViewById(R.id.principal_header_email))).setText(usuario.getEmail()); } catch (java.lang.Exception e) { new android.os.Handler().postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { mostrarUserInfo(usuario); } }, 300); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/2683/buggy-version/app.src.main.java.luis.gestovisualdeobras.principal.PrincipalActivity.java", "BodyUseAPI": ["((android.widget.TextView) (findViewById(R.id.principal_header_email))).setText(usuario.getEmail())", "luis.gestovisualdeobras.model.Usuario.getNome()", "luis.gestovisualdeobras.principal.PrincipalActivity.findViewById(R.id.principal_header_email)", "luis.gestovisualdeobras.principal.PrincipalActivity.findViewById(R.id.principal_header_nome)", "luis.gestovisualdeobras.model.Usuario.getEmail()", "((android.widget.TextView) (findViewById(R.id.principal_header_nome))).setText(usuario.getNome())"], "Fixed commit": "55cd4c2113eaaf4a5a4af3f8dfada4ec2d723f55", "Url": "https://api.github.com/repos/marcusedu/obras", "Date": "2017-08-07T22:03:25Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String rowHour = row.select(\"td[class='MpkHours'\").first().text(); result.append(\"\\n\").append(rowHour); org.jsoup.select.Elements colMinutes = row.select(\"td[class='MpkMinutes'\"); for (org.jsoup.nodes.Element column : colMinutes) { result.append(\"\\t\").append(column.text()); } } catch (java.lang.NullPointerException e) { window_interface.dialogs.AlertBox.display(\"Jeden z wybranych przystank\u00f3w nie istnieje!\", ((\"Link do tego przystanku: \" + (html)) + \"\\nW razie w\\u0105tpliwo\\u015bci napisz do wsparcia technicznego.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/6283/buggy-version/src.businfo.busstop.MPKPoznanInfo.java", "BodyUseAPI": ["org.jsoup.nodes.Element.text()", "java.lang.StringBuilder.append(java.lang.String)", "row.select(\"td[class='MpkHours'\").first().text()", "java.lang.StringBuilder.append(java.lang.String)", "org.jsoup.nodes.Element.select(java.lang.String)", "org.jsoup.nodes.Element.select(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(column.text())", "row.select(\"td[class='MpkHours'\").first()"], "Fixed commit": "712a342341a810117c2d844e253edd1f9048bc97", "Url": "https://api.github.com/repos/MIachaI/MPK_Crawler", "Date": "2017-09-14T14:10:39Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (mal.authenticate(username.getText().toString(), password.getText().toString())) { java.lang.Thread.sleep(500); android.widget.Toast.makeText(this, \"Login Successful!\", Toast.LENGTH_SHORT).show(); }else { java.lang.Thread.sleep(500); android.widget.Toast.makeText(this, \"Login Failed, Try Again!\", Toast.LENGTH_SHORT).show(); } } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V23/3539/buggy-version/app.src.main.java.stem.comicreader.LoginActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(this, \"Login Successful!\", Toast.LENGTH_SHORT).show()", "android.widget.EditText.getText()", "android.widget.Toast.makeText(stem.comicreader.LoginActivity,java.lang.String,Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(this, \"Login Failed, Try Again!\", Toast.LENGTH_SHORT).show()", "password.getText().toString()", "android.widget.Toast.makeText(stem.comicreader.LoginActivity,java.lang.String,Toast.LENGTH_SHORT)", "stem.comicreader.MAL.authenticate(username.getText().toString(),password.getText().toString())", "java.lang.Thread.sleep(int)", "android.widget.EditText.getText()", "java.lang.Thread.sleep(int)", "username.getText().toString()"], "Fixed commit": "f4e9bebb73b32526f29e1f39abc476af0108a100", "Url": "https://api.github.com/repos/TheVolatileV/MangaReader", "Date": "2016-11-16T23:16:56Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { insert(org.basex.fs.fsml.build.PDFParser.MODIFICATIONDATE, info.getModificationDate()); } catch (java.io.IOException e) { java.lang.System.err.println(\"Invalid modificationdate\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8499/buggy-version/src.java.src.main.java.org.basex.fs.fsml.build.PDFParser.java", "BodyUseAPI": ["org.apache.pdfbox.pdmodel.PDDocumentInformation.getModificationDate()", "org.basex.fs.fsml.build.PDFParser.insert(byte[],info.getModificationDate())"], "Fixed commit": "8403ff5b08494141dbae992c48efe281a15db527", "Url": "https://api.github.com/repos/yzzo/basexfs", "Date": "2011-10-06T18:35:43Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { insert(org.basex.fs.fsml.build.PDFParser.CREATIONDATE, info.getCreationDate()); } catch (java.io.IOException e) { java.lang.System.err.println(\"Invalid creationdate\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8499/buggy-version/src.java.src.main.java.org.basex.fs.fsml.build.PDFParser.java", "BodyUseAPI": ["org.basex.fs.fsml.build.PDFParser.insert(byte[],info.getCreationDate())", "org.apache.pdfbox.pdmodel.PDDocumentInformation.getCreationDate()"], "Fixed commit": "8403ff5b08494141dbae992c48efe281a15db527", "Url": "https://api.github.com/repos/yzzo/basexfs", "Date": "2011-10-06T18:35:43Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1146/buggy-version/src.sshaclient.SocketClient.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "2e2c1d9456270bd56b749101c31d6a24cf4d8868", "Url": "https://api.github.com/repos/Maestro1337/ssha", "Date": "2013-05-26T12:14:13Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (Robot.floorGearLoader.isSensorPresent()) { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putNumber(\"Pivot - ActualPosition\", Robot.floorGearLoader.getPulseWidthPosition()); } } catch (java.lang.Exception e) { java.lang.System.out.println((\"Error with floor gear subsystem: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3148/buggy-version/src.com.team1757.commands.GetStatus.java", "BodyUseAPI": ["Robot.floorGearLoader.isSensorPresent()", "Robot.floorGearLoader.getPulseWidthPosition()", "edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putNumber(java.lang.String,Robot.floorGearLoader.getPulseWidthPosition())"], "Fixed commit": "727f6f25d2f241cda44150f55d086818ddee1e20", "Url": "https://api.github.com/repos/1757WestwoodRobotics/2017-Steamworks", "Date": "2017-04-04T22:32:37Z"},
{"Line": "=>580", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pastConditionUsername = pastCondition.getString(\"username\"); } catch (org.json.JSONException e) { pastConditionUsername = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5212/buggy-version/app.src.main.java.com.pbm.PBMApplication.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "5d275e8ed2cdb8d46263a887caf2955893930325", "Url": "https://api.github.com/repos/scottwainstock/pbm-android", "Date": "2016-07-25T04:51:08Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final org.xdi.oxauth.model.uma.RptAuthorizationResponse authorizationResponse = rptAuthorizationService.requestRptPermissionAuthorization((\"Bearer \" + (getUmaTokenService().getAat(params.getOxdId()).getToken())), getRp().opHostWithoutProtocol(), authorizationRequest); if (authorizationResponse != null) { org.xdi.oxd.server.op.RpAuthorizeRptOperation.LOG.trace(\"RPT is authorized. RPT: {} \", params.getRpt()); return okResponse(new org.xdi.oxd.common.response.RpAuthorizeRptResponse(params.getOxdId())); } } catch (org.jboss.resteasy.client.ClientResponseFailure e) { org.xdi.oxd.server.op.RpAuthorizeRptOperation.LOG.trace(\"Forbidden.\", e); } catch (java.lang.Exception e) { org.xdi.oxd.server.op.RpAuthorizeRptOperation.LOG.error(\"Error occured during RPT authorization.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3919/buggy-version/oxd-server.src.main.java.org.xdi.oxd.server.op.RpAuthorizeRptOperation.java", "BodyUseAPI": ["org.xdi.oxd.common.params.RpAuthorizeRptParams.getOxdId()", "org.xdi.oxd.server.op.RpAuthorizeRptOperation.okResponse(org.xdi.oxd.common.response.RpAuthorizeRptResponse)", "getUmaTokenService().getAat(params.getOxdId()).getToken()", "getUmaTokenService().getAat(params.getOxdId())", "org.xdi.oxd.server.op.RpAuthorizeRptOperation.getUmaTokenService()", "getRp().opHostWithoutProtocol()", "org.slf4j.Logger.trace(java.lang.String,params.getRpt())", "org.xdi.oxd.server.op.RpAuthorizeRptOperation.getRp()", "org.xdi.oxauth.client.uma.RptAuthorizationRequestService.requestRptPermissionAuthorization((\"Bearer \" + (getUmaTokenService().getAat(params.getOxdId()).getToken())),getRp().opHostWithoutProtocol(),org.xdi.oxauth.model.uma.RptAuthorizationRequest)", "org.xdi.oxd.common.params.RpAuthorizeRptParams.getOxdId()", "org.xdi.oxd.common.params.RpAuthorizeRptParams.getRpt()"], "Fixed commit": "f2d4ca0761c41e0005a2b9d59b1063b6c48572c2", "Url": "https://api.github.com/repos/GluuFederation/oxd", "Date": "2017-05-31T20:16:01Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { infer(); isCompleted = true; nextFilter.check(ctx); } catch (org.beetl.core.exception.BeetlException bex) { org.beetl.core.engine.ProgramReplaceErrorEvent event = new org.beetl.core.engine.ProgramReplaceErrorEvent(program.id, bex.getMessage(), bex); program.gt.fireEvent(event); isCompleted = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/957/buggy-version/beetl-core.src.main.java.org.beetl.core.engine.TypeBindingProbe.java", "BodyUseAPI": ["org.beetl.core.engine.TypeBindingProbe.infer()", "org.beetl.core.engine.Probe.check(org.beetl.core.Context)"], "Fixed commit": "526162c7c47dde2fd7e21679d1aa4ab93caf3830", "Url": "https://api.github.com/repos/javamonkey/beetl2.0", "Date": "2014-05-22T13:26:37Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { doDetector(); } catch (java.lang.Exception e) { com.github.Kraken3.AFKPGC.AFKPGC.debug(\"Encountered an error during Detector invocation: \", e); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/549/buggy-version/src.com.github.Kraken3.AFKPGC.BotDetector.java", "BodyUseAPI": ["com.github.Kraken3.AFKPGC.BotDetector.doDetector()"], "Fixed commit": "edf68c5e45c79cb3a218913442986f7eb89302b5", "Url": "https://api.github.com/repos/Maxopoly/AFK-Player-GC", "Date": "2015-08-06T02:33:45Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mList.layout(0, 0, mList.getMeasuredWidth(), getHeight()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8722/buggy-version/library.src.se.emilsjolander.stickylistheaders.StickyListHeadersListView.java", "BodyUseAPI": ["se.emilsjolander.stickylistheaders.WrapperViewList.getMeasuredWidth()", "se.emilsjolander.stickylistheaders.StickyListHeadersListView.getHeight()", "se.emilsjolander.stickylistheaders.WrapperViewList.layout(int,int,mList.getMeasuredWidth(),getHeight())"], "Fixed commit": "5928d70867b3156f6f0103e986b668c5d5aff12b", "Url": "https://api.github.com/repos/lsjwzh/StickyListHeaders", "Date": "2014-12-15T01:26:58Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = tInfo.makeResult(o); } catch (org.apache.thrift.TApplicationException e) { return result(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8001/buggy-version/appserver.src.main.java.org.everthrift.appserver.controller.DefaultTProtocolSupport.java", "BodyUseAPI": ["org.everthrift.appserver.controller.ThriftControllerInfo.makeResult(java.lang.Object)"], "Fixed commit": "37c316e2bb9e9bfff32aebbc673f94dbc240473b", "Url": "https://api.github.com/repos/eamosov/everthrift", "Date": "2016-09-05T21:08:35Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = tInfo.makeResult(o); } catch (org.apache.thrift.TApplicationException e) { return result(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8001/buggy-version/appserver.src.main.java.org.everthrift.appserver.controller.ThriftProcessor.java", "BodyUseAPI": ["org.everthrift.appserver.controller.ThriftControllerInfo.makeResult(java.lang.Object)"], "Fixed commit": "37c316e2bb9e9bfff32aebbc673f94dbc240473b", "Url": "https://api.github.com/repos/eamosov/everthrift", "Date": "2016-09-05T21:08:35Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((mc.getEditions().get(0).getMkm_id()) > 0) return getProductById(java.lang.String.valueOf(mc.getEditions().get(0).getMkm_id())); } catch (java.lang.Exception e) { org.magic.api.exports.impl.MKMOnlineWantListExport.logger.error(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5858/buggy-version/src.org.magic.api.exports.impl.MKMOnlineWantListExport.java", "BodyUseAPI": ["org.magic.api.beans.MagicCard.getEditions()", "mc.getEditions().get(0).getMkm_id()", "mc.getEditions().get(0).getMkm_id()", "mc.getEditions().get(int)", "java.lang.String.valueOf(mc.getEditions().get(0).getMkm_id())", "org.magic.api.exports.impl.MKMOnlineWantListExport.getProductById(java.lang.String)", "org.magic.api.beans.MagicCard.getEditions()", "mc.getEditions().get(int)"], "Fixed commit": "a4227d90714dab38a555567f7270c90f07f8ea53", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-04-03T08:55:18Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getLambdaClient().removePermission(new org.lambadaframework.aws.RemovePermissionRequest().withFunctionName(functionArn).withStatementId(policyId)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2394/buggy-version/maven-plugin.src.main.java.org.lambadaframework.aws.LambdaFunction.java", "BodyUseAPI": ["org.lambadaframework.aws.LambdaFunction.getLambdaClient()", "new org.lambadaframework.aws.RemovePermissionRequest().withFunctionName(functionArn).withStatementId(java.lang.String)", "com.amazonaws.services.lambda.AWSLambda.removePermission(new org.lambadaframework.aws.RemovePermissionRequest().withFunctionName(functionArn).withStatementId(policyId))", "org.lambadaframework.aws.RemovePermissionRequest.withFunctionName(java.lang.String)"], "Fixed commit": "27d8583ee8300fe152e968204be73efc0ce7bdaa", "Url": "https://api.github.com/repos/cagataygurturk/lambadaframework", "Date": "2016-04-06T16:39:01Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { levelLoader.load(\"misc/match-drop.xml\", grid); } catch (java.lang.Exception e) { java.lang.System.out.println(e.getMessage()); java.lang.System.out.println(\"error loading level so loading a random one\"); startGridGenerator.generate(grid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5985/buggy-version/src.main.java.net.stickboyproductions.tetrisattack.model.Game.java", "BodyUseAPI": ["net.stickboyproductions.tetrisattack.levelloader.LevelLoaderProcess.load(java.lang.String,net.stickboyproductions.tetrisattack.model.Grid)"], "Fixed commit": "547e23ae6c1623071e966c978fec4ac56e75d548", "Url": "https://api.github.com/repos/stickboy144/tetris-attack", "Date": "2013-01-21T23:03:26Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String[] temp = dev.cameron2134.twitchapp.utils.IO.readMultiple(new java.io.File(\"res/data/settings.cfg\")); pauseOnMin = java.lang.Boolean.parseBoolean(temp[0]); minToTray = java.lang.Boolean.parseBoolean(temp[1]); showNotifications = java.lang.Boolean.parseBoolean(temp[2]); } catch (java.lang.ArrayIndexOutOfBoundsException ex) { minToTray = pauseOnMin = showNotifications = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4331/buggy-version/src.dev.cameron2134.twitchapp.gui.GUI.java", "BodyUseAPI": ["java.lang.Boolean.parseBoolean(java.lang.String)", "java.lang.Boolean.parseBoolean(java.lang.String)", "java.lang.Boolean.parseBoolean(java.lang.String)", "dev.cameron2134.twitchapp.utils.IO.readMultiple(java.io.File)"], "Fixed commit": "3917c652b6db27a3f85ce18d77c3c731b5341ae2", "Url": "https://api.github.com/repos/cameron2134/TwitchDesk", "Date": "2016-09-02T21:03:08Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.TreeSet<java.lang.Byte> neighbours = nw.get(DEVICE); java.lang.Byte[] p = buildPacket(); for (java.lang.Byte nb : neighbours) { send.invoke(nb, toByteArray(p)); } } catch (main.CallbackException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3580/buggy-version/src.routing.LinkStateRouting.java", "BodyUseAPI": ["main.Callback.invoke(java.lang.Byte,byte[])", "routing.LinkStateRouting.toByteArray(java.lang.Byte[])", "routing.LinkStateRouting.buildPacket()", "java.util.TreeMap<java.lang.Byte, java.util.TreeSet<java.lang.Byte>>.get(byte)"], "Fixed commit": "cdc5831d1b06314f496024b6442f9ed5b4116cdc", "Url": "https://api.github.com/repos/Djekkoo/IntegratedProject", "Date": "2014-04-08T14:07:52Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.Set<java.nio.file.attribute.PosixFilePermission> perms = new java.util.HashSet<java.nio.file.attribute.PosixFilePermission>(); perms.add(java.nio.file.attribute.PosixFilePermission.OWNER_READ); perms.add(java.nio.file.attribute.PosixFilePermission.OWNER_WRITE); java.nio.file.Files.setPosixFilePermissions(java.nio.file.Paths.get(filename), perms); } catch (java.lang.UnsupportedOperationException uoe) { com.vmware.bdd.utils.CommonUtil.logger.error((\"we are probably on windows! failed to set PosixFilePermission to: \" + filename), uoe); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3606/buggy-version/common.src.main.java.com.vmware.bdd.utils.CommonUtil.java", "BodyUseAPI": ["java.nio.file.Files.setPosixFilePermissions(java.nio.file.Path,java.util.Set<java.nio.file.attribute.PosixFilePermission>)", "java.util.Set<java.nio.file.attribute.PosixFilePermission>.add(java.nio.file.attribute.PosixFilePermission)", "java.nio.file.Paths.get(java.lang.String)", "java.util.Set<java.nio.file.attribute.PosixFilePermission>.add(java.nio.file.attribute.PosixFilePermission)"], "Fixed commit": "0f1c65fe04e6f357266c4a97919e44b962308d83", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2015-10-16T08:46:21Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { socket.close(); } catch (java.io.IOException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5545/buggy-version/projects.rina.rina.rmt.impl.src.main.java.rina.rmt.impl.tcp.TCPSocketReader.java", "BodyUseAPI": ["java.net.Socket.close()"], "Fixed commit": "93172f0729370376eb4d4ef4e610057ec6dca862", "Url": "https://api.github.com/repos/PouzinSociety/tinos", "Date": "2011-06-27T16:41:07Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.awt.Toolkit xToolkit = java.awt.Toolkit.getDefaultToolkit(); java.lang.reflect.Field awtAppClassNameField = xToolkit.getClass().getDeclaredField(\"awtAppClassName\"); awtAppClassNameField.setAccessible(true); awtAppClassNameField.set(xToolkit, \"Processing\"); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5645/buggy-version/app.src.processing.app.platform.LinuxPlatform.java", "BodyUseAPI": ["java.lang.Class<? extends java.awt.Toolkit>.getDeclaredField(java.lang.String)", "java.awt.Toolkit.getClass()", "java.lang.reflect.Field.setAccessible(boolean)", "java.lang.reflect.Field.set(java.awt.Toolkit,java.lang.String)", "java.awt.Toolkit.getDefaultToolkit()"], "Fixed commit": "3f79ddddb316a9c1abc20f2e8a3514a344611a49", "Url": "https://api.github.com/repos/JakubValtar/processing", "Date": "2014-06-10T08:01:37Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bot.execute(new org.telegram.telegrambots.api.methods.send.SendMessage(factory.getManagerDao().getManagerChatId(), (\"\\u0421\\u043e\\u043e\\u0431\\u0449\\u0435\\u043d\\u0438\\u0435 \\u043e\\u0442 \\u043f\\u043e\\u043b\\u044c\\u0437\\u043e\\u0432\\u0430\\u0442\\u0435\\u043b\\u044f:\\n\" + (text)))); if ((document) != null) { bot.sendDocument(new org.telegram.telegrambots.api.methods.send.SendDocument().setDocument(document).setChatId(factory.getManagerDao().getManagerChatId())); } sendMessageByIdWithKeyboard(bot, 14, 3); } catch (com.bartosso.bot.command.impl.ParentsMenu.PersonalAreaMenu.org.springframework e) { sendMessageByIdWithKeyboard(bot, 14, 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6794/buggy-version/src.main.java.com.bartosso.bot.command.impl.ParentsMenu.PersonalAreaMenu.FeedbackCommand.java", "BodyUseAPI": ["com.bartosso.bot.command.impl.ParentsMenu.PersonalAreaMenu.FeedbackCommand.getManagerDao()", "com.bartosso.bot.command.impl.ParentsMenu.PersonalAreaMenu.FeedbackCommand.getManagerDao()", "factory.getManagerDao().getManagerChatId()", "com.bartosso.bot.command.impl.ParentsMenu.PersonalAreaMenu.FeedbackCommand.sendMessageByIdWithKeyboard(com.bartosso.bot.Bot,int,int)", "factory.getManagerDao().getManagerChatId()", "com.bartosso.bot.Bot.execute(org.telegram.telegrambots.api.methods.send.SendMessage)", "com.bartosso.bot.Bot.sendDocument(new org.telegram.telegrambots.api.methods.send.SendDocument().setDocument(document).setChatId(factory.getManagerDao().getManagerChatId()))", "new org.telegram.telegrambots.api.methods.send.SendDocument().setDocument(document).setChatId(factory.getManagerDao().getManagerChatId())", "org.telegram.telegrambots.api.methods.send.SendDocument.setDocument(java.lang.String)"], "Fixed commit": "eddd363920b58ac7002a0613276163e1ba2fe7fd", "Url": "https://api.github.com/repos/Bartosso/HappyBus", "Date": "2017-08-28T13:45:06Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { context.startActivity(i); } catch (android.content.ActivityNotFoundException e) { android.widget.Toast.makeText(context, R.string.null_intent, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4995/buggy-version/app.src.main.java.news.androidtv.launchonboot.BootReceiver.java", "BodyUseAPI": ["android.content.Context.startActivity(android.content.Intent)"], "Fixed commit": "114ebf17a9e87e3086c0b8b98c6887a63cfb8773", "Url": "https://api.github.com/repos/ITVlab/Launch-On-Boot", "Date": "2017-04-29T23:45:31Z"},
{"Line": "=>1285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { map.removeLayer(layer); } catch (java.lang.Exception e) { pt.lsts.neptus.NeptusLog.pub().error(((((\"Error removing layer '\" + (layer.getName())) + \"' from '\") + (pt.lsts.neptus.console.plugins.planning.MapPanel.class.getSimpleName())) + \"'!\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4096/buggy-version/src.pt.lsts.neptus.console.ConsoleLayout.java", "BodyUseAPI": ["pt.lsts.neptus.console.plugins.planning.MapPanel.removeLayer(pt.lsts.neptus.console.IConsoleLayer)"], "Fixed commit": "3bd824946001a018cd5ded020fec618976a61919", "Url": "https://api.github.com/repos/LSTS/neptus", "Date": "2014-04-28T16:48:14Z"},
{"Line": "=>1295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { layer.clean(); } catch (java.lang.Exception e) { pt.lsts.neptus.NeptusLog.pub().error(((\"Error calling clean from layer '\" + (layer.getName())) + \"'!\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4096/buggy-version/src.pt.lsts.neptus.console.ConsoleLayout.java", "BodyUseAPI": ["pt.lsts.neptus.console.IConsoleLayer.clean()"], "Fixed commit": "3bd824946001a018cd5ded020fec618976a61919", "Url": "https://api.github.com/repos/LSTS/neptus", "Date": "2014-04-28T16:48:14Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { args.checkMatches(ArgumentType.STRING, ArgumentType.STRING); java.util.regex.Matcher m = java.util.regex.Pattern.compile(args.get(2).value).matcher(args.get(1).value); while (m.find()) { output.println(m.group(1)); } } catch (java.util.regex.PatternSyntaxException e) { throw new com.aedan.jterminal.commands.CommandHandler.CommandHandlerException((\"Invalid pattern: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1326/buggy-version/src.com.aedan.jterminal.commands.defaultpackage.utility.commands.Match.java", "BodyUseAPI": ["com.aedan.jterminal.output.CommandOutput.println(java.lang.String)", "com.aedan.jterminal.commands.commandarguments.CommandArgumentList.get(int)", "java.util.regex.Matcher.find()", "java.util.regex.Matcher.group(int)", "com.aedan.jterminal.commands.commandarguments.CommandArgumentList.checkMatches(ArgumentType.STRING,ArgumentType.STRING)", "com.aedan.jterminal.commands.commandarguments.CommandArgumentList.get(int)", "java.util.regex.Pattern.compile(args.get(2).value)", "java.util.regex.Pattern.matcher(args.get(1).value)"], "Fixed commit": "e17b18ab44bf4a7cc6e8d7a3eb3d3781d7b0f7e8", "Url": "https://api.github.com/repos/aedans/JTerminal", "Date": "2016-09-06T00:52:04Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { database.close(); environment.close(); } catch (com.ccreanga.bitbucketapi.example.cache.DatabaseException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1241/buggy-version/src.main.java.com.ccreanga.bitbucketapi.example.cache.BerkeleyDbCache.java", "BodyUseAPI": ["com.ccreanga.bitbucketapi.example.cache.Environment.close()", "com.ccreanga.bitbucketapi.example.cache.Database.close()"], "Fixed commit": "a4149c6b79204b88fad7e5c19b6ce012178ae606", "Url": "https://api.github.com/repos/cornelcreanga/bitbucket-statistics", "Date": "2016-03-06T23:32:23Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { compilerCommand = envManager.getVariable(ArduinoConst.ENV_KEY_recipe_c_o_pattern, confDesc, true).getValue().replace(\" -o \", \" \"); } catch (java.lang.Exception e) { compilerCommand = \"gcc\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6801/buggy-version/it.baeyens.arduino.core.src.it.baeyens.arduino.toolchain.ArduinoLanguageProvider.java", "BodyUseAPI": ["org.eclipse.cdt.core.envvar.IEnvironmentVariableManager.getVariable(ArduinoConst.ENV_KEY_recipe_c_o_pattern,org.eclipse.cdt.core.settings.model.ICConfigurationDescription,boolean)", "envManager.getVariable(ArduinoConst.ENV_KEY_recipe_c_o_pattern, confDesc, true).getValue().replace(java.lang.String,java.lang.String)", "envManager.getVariable(ArduinoConst.ENV_KEY_recipe_c_o_pattern, confDesc, true).getValue()"], "Fixed commit": "cee98b702e043e9dd10d2e41dcfbca9ffc7a30b2", "Url": "https://api.github.com/repos/massimiliano76/arduino-eclipse-plugin", "Date": "2015-04-17T12:39:16Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { saveOrderList(com.google.common.collect.Lists.newArrayList(amazonOrderIdMap.values())); } catch (java.lang.Exception e) { errorContent.append(\"\u8ba2\u5355\u5b57\u6bb5\u6709\u9519\u8bef,\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\u3002\u9519\u8bef\u4fe1\u606f:\").append(e.toString()).append(\"<br/>\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4030/buggy-version/src.main.java.com.order.www.service.OrderService.java", "BodyUseAPI": ["com.order.www.service.OrderService.saveOrderList(com.google.common.collect.Lists.newArrayList(amazonOrderIdMap.values()))", "com.google.common.collect.Lists.newArrayList(amazonOrderIdMap.values())", "java.util.Map<java.lang.String, com.order.www.service.OrderDB>.values()"], "Fixed commit": "a27e8391a72140476784a44a578cc738a56cf8f0", "Url": "https://api.github.com/repos/kongtrio/seller_order", "Date": "2017-09-18T03:13:07Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { arr = proxy.returningFeval(funcname, retNames.length, args.toArray()); } finally { this.cd(rootPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6520/buggy-version/app.src.java.project.app.utility.MatlabConnection.java", "BodyUseAPI": ["matlabcontrol.MatlabProxy.returningFeval(java.lang.String,int,args.toArray())", "project.app.utility.MatlabStruct.toArray()"], "Fixed commit": "45fbc56fead1897735f4237f7b3e41e34155712f", "Url": "https://api.github.com/repos/kiarash96/numerical-project", "Date": "2016-12-11T15:33:26Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { lblStatus.setText(\"Status: Cooling down...\"); java.lang.Thread.sleep(5000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/9227/buggy-version/src.main.java.com.github.mob41.osumer.ui.UpdaterDownloadDialog.java", "BodyUseAPI": ["javax.swing.JLabel.setText(java.lang.String)", "java.lang.Thread.sleep(int)"], "Fixed commit": "4713f8e4ec0735d339c51283450d9b461fdcad78", "Url": "https://api.github.com/repos/mob41/osumer", "Date": "2017-10-01T15:37:33Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { handler.filterStateChanged(filterState); } catch (java.lang.InstantiationException e1) { e1.printStackTrace(); } catch (java.lang.IllegalAccessException e1) { e1.printStackTrace(); } catch (java.lang.ClassNotFoundException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3632/buggy-version/src.org.openstreetmap.josm.plugins.rasterfilters.gui.FilterGuiListener.java", "BodyUseAPI": ["org.openstreetmap.josm.plugins.rasterfilters.gui.StateChangeListener.filterStateChanged(org.openstreetmap.josm.plugins.rasterfilters.gui.FilterModel)"], "Fixed commit": "e308e9665a35f7f5dedb5b9c234c79d7ab4e43f8", "Url": "https://api.github.com/repos/Nipel-Crumple/josm_draft", "Date": "2015-07-06T09:13:19Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dialog.createAndShowGUI(); } catch (java.net.MalformedURLException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3632/buggy-version/src.org.openstreetmap.josm.plugins.rasterfilters.ShowLayerFiltersDialog.java", "BodyUseAPI": ["org.openstreetmap.josm.plugins.rasterfilters.gui.FiltersDialog.createAndShowGUI()"], "Fixed commit": "e308e9665a35f7f5dedb5b9c234c79d7ab4e43f8", "Url": "https://api.github.com/repos/Nipel-Crumple/josm_draft", "Date": "2015-07-06T09:13:19Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cs3500.music.view.ViewInterface view = cs3500.music.view.ViewFactory.getView(\"visual\", model); view.initialize(); } catch (javax.sound.midi.MidiUnavailableException e) { java.lang.System.err.println(\"midi unavailable.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/9158/buggy-version/src.cs3500.music.MusicEditor.java", "BodyUseAPI": ["cs3500.music.view.ViewFactory.getView(java.lang.String,cs3500.music.model.EditorOperations)", "cs3500.music.view.ViewInterface.initialize()"], "Fixed commit": "29bbdba6149bbd4b28b8cab1ee64975974b2c837", "Url": "https://api.github.com/repos/joshpensky/MidiEditor", "Date": "2017-06-15T17:05:28Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return java.time.Instant.from(com.izettle.jackson.module.InstantRFC3339Module.INSTANT_PARSING_FORMATTER.parse(value)); } catch (java.time.format.DateTimeParseException e) { return java.time.Instant.from(com.izettle.jackson.module.InstantRFC3339Module.INSTANT_PARSING_FORMATTER2.parse(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7433/buggy-version/izettle-jackson.src.main.java.com.izettle.jackson.module.InstantRFC3339Module.java", "BodyUseAPI": ["java.time.Instant.from(java.time.temporal.TemporalAccessor)", "java.time.format.DateTimeFormatter.parse(java.lang.String)"], "Fixed commit": "a6428d81e05d2d19e8dbefc8f137ae27f245701c", "Url": "https://api.github.com/repos/iZettle/izettle-toolbox", "Date": "2017-02-16T17:09:25Z"},
{"Line": "=>660", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.System.out.println(fromSQL); java.lang.System.out.println(joinExp); fromSQL += \" ON \" + joinExp; } catch (java.lang.Exception e) { java.lang.String errorMessage = e.getMessage(); java.lang.System.out.println(errorMessage); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4120/buggy-version/odemapster-core.src.main.java.es.upm.fi.dia.oeg.obdi.core.sql.SQLQuery.java", "BodyUseAPI": ["java.io.PrintStream.println(Zql.ZExpression)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "dff74ffa9b6b480a4db6796b292da98dc91eea96", "Url": "https://api.github.com/repos/fpriyatna/odemapster", "Date": "2013-11-13T11:01:02Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { failedEmailDatabase.deleteFailedEmail(failedEmail); } catch (java.sql.SQLException ex) { exceptionLogger.logException(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7373/buggy-version/OKKoPa_core.src.main.java.fi.helsinki.cs.okkopa.main.stage.RetryFailedEmailsStage.java", "BodyUseAPI": ["fi.helsinki.cs.okkopa.database.FailedEmailDAO.deleteFailedEmail(fi.helsinki.cs.okkopa.model.FailedEmailDbModel)"], "Fixed commit": "e1be477529d58b1f66897a237f05f8f8152fc51c", "Url": "https://api.github.com/repos/ohtuprojekti/OKKoPa_all", "Date": "2013-08-29T10:10:17Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { addStatement(event, createOrOverwriteFile((\"/tmp/\" + (com.cloudera.whirr.cm.CmServerHandler.CONFIG_FILE)), com.google.common.base.Splitter.on('\\n').split(com.google.common.io.CharStreams.toString(com.google.common.io.Resources.newReaderSupplier(com.google.common.io.Resources.getResource(com.cloudera.whirr.cm.CmServerHandler.CONFIG_FILE), Charsets.UTF_8))))); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2365/buggy-version/src.main.java.com.cloudera.whirr.cm.CmServerHandler.java", "BodyUseAPI": ["com.google.common.io.CharStreams.toString(com.google.common.io.Resources.newReaderSupplier(com.google.common.io.Resources.getResource(com.cloudera.whirr.cm.CmServerHandler.CONFIG_FILE), Charsets.UTF_8))", "com.google.common.io.Resources.getResource(java.lang.String)", "com.google.common.base.Splitter.on(char)", "com.google.common.io.Resources.newReaderSupplier(com.google.common.io.Resources.getResource(com.cloudera.whirr.cm.CmServerHandler.CONFIG_FILE),Charsets.UTF_8)", "com.cloudera.whirr.cm.CmServerHandler.createOrOverwriteFile(java.lang.String,com.google.common.base.Splitter.on('\\n').split(com.google.common.io.CharStreams.toString(com.google.common.io.Resources.newReaderSupplier(com.google.common.io.Resources.getResource(com.cloudera.whirr.cm.CmServerHandler.CONFIG_FILE), Charsets.UTF_8))))", "com.cloudera.whirr.cm.CmServerHandler.addStatement(org.apache.whirr.service.ClusterActionEvent,createOrOverwriteFile((\"/tmp/\" + (com.cloudera.whirr.cm.CmServerHandler.CONFIG_FILE)), com.google.common.base.Splitter.on('\\n').split(com.google.common.io.CharStreams.toString(com.google.common.io.Resources.newReaderSupplier(com.google.common.io.Resources.getResource(com.cloudera.whirr.cm.CmServerHandler.CONFIG_FILE), Charsets.UTF_8)))))", "com.google.common.base.Splitter.on('\\n').split(com.google.common.io.CharStreams.toString(com.google.common.io.Resources.newReaderSupplier(com.google.common.io.Resources.getResource(com.cloudera.whirr.cm.CmServerHandler.CONFIG_FILE), Charsets.UTF_8)))"], "Fixed commit": "f5c64c0e08aae38aa2fc92eee53a53cddb004198", "Url": "https://api.github.com/repos/cloudera/whirr-cm", "Date": "2012-09-13T21:36:42Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { builder.withDate(dateFormat.parse(reviewDate.getValue())); } catch (java.text.ParseException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6184/buggy-version/src.main.java.org.atlasapi.remotesite.rt.RtFilmProcessor.java", "BodyUseAPI": ["nu.xom.Element.getValue()", "com.google.common.collect.ImmutableList.Builder.withDate(java.util.Date)", "java.text.DateFormat.parse(reviewDate.getValue())"], "Fixed commit": "9e222215af5cafe2b228d194cdc8b0432d33251d", "Url": "https://api.github.com/repos/atlasapi/atlas", "Date": "2017-03-07T17:49:05Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot().getFile(new org.eclipse.core.runtime.Path(path)).getLocationURI(); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6618/buggy-version/src.core.lombok.eclipse.EclipseAST.java", "BodyUseAPI": ["org.eclipse.core.resources.ResourcesPlugin.getWorkspace()", "org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot()", "org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot().getFile(new org.eclipse.core.runtime.Path(path)).getLocationURI()", "org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot().getFile(org.eclipse.core.runtime.Path)"], "Fixed commit": "5e6cdb07ef1a89f8047904fd2e00f574bc7ca1bf", "Url": "https://api.github.com/repos/arielnetworks/lombok", "Date": "2014-08-15T23:33:51Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { final javax.ws.rs.client.Invocation.Builder request = buildRequest(); if ((state.get()) == (org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.State.OPEN)) { eventInput = request.get(javax.ws.rs.sse.SseEventInput.class); } } finally { if ((connectedLatch) != null) { connectedLatch.countDown(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/4214/buggy-version/providers.sse.src.main.java.org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicReference<org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.State>.get()", "Invocation.Builder.get(java.lang.Class)", "org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.EventHandler.buildRequest()"], "Fixed commit": "cc3b1c8a22f5694f5a89391ede0d374127025b8f", "Url": "https://api.github.com/repos/asoldano/Resteasy", "Date": "2017-02-10T22:51:23Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { scriptRunner.dispose(); } finally { scriptFuture.cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2640/buggy-version/junit.src.main.java.org.kaazing.k3po.junit.rules.SpecificationStatement.java", "BodyUseAPI": ["org.kaazing.k3po.junit.rules.ScriptRunner.dispose()"], "Fixed commit": "14d33cc7de1fcd4efb3bc7a7267b35ec18c1c2b9", "Url": "https://api.github.com/repos/cmebarrow/k3po", "Date": "2015-10-23T23:08:48Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (key.isAcceptable()) { listener.onChannelAcceptable(channel); } if (key.isReadable()) { listener.onChannelReadable(channel); } if (key.isWritable()) { listener.onChannelWritable(channel); } } catch (java.nio.channels.CancelledKeyException e) { de.hochschuletrier.gdw.commons.netcode.core.NetManager.logger.error(\"key cancelled\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6439/buggy-version/gdw-commons.src.main.java.de.hochschuletrier.gdw.commons.netcode.core.NetManager.java", "BodyUseAPI": ["de.hochschuletrier.gdw.commons.netcode.core.NetManager.Listener.onChannelAcceptable(java.nio.channels.SelectableChannel)", "java.nio.channels.SelectionKey.isWritable()", "de.hochschuletrier.gdw.commons.netcode.core.NetManager.Listener.onChannelWritable(java.nio.channels.SelectableChannel)", "de.hochschuletrier.gdw.commons.netcode.core.NetManager.Listener.onChannelReadable(java.nio.channels.SelectableChannel)", "java.nio.channels.SelectionKey.isReadable()", "java.nio.channels.SelectionKey.isAcceptable()"], "Fixed commit": "b2b862324c7516b8d8c218b1e1bebe9e24dfa6b3", "Url": "https://api.github.com/repos/GameDevWeek/CodeBase", "Date": "2015-10-02T02:58:51Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { regenerateAll(); } finally { worker.schedule(this, 6, java.util.concurrent.TimeUnit.HOURS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5759/buggy-version/src.main.java.org.kohsuke.confluence.scache.StaticPageGenerator.java", "BodyUseAPI": ["org.kohsuke.confluence.scache.StaticPageGenerator.2.regenerateAll()"], "Fixed commit": "192c26286dc64d8ce3837a0b255411ad04ec49a7", "Url": "https://api.github.com/repos/kohsuke/confluence-static-cache", "Date": "2012-06-27T23:10:09Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { subVersion = java.lang.Integer.parseInt(subs[i]); } catch (java.lang.NumberFormatException ex) { subVersion = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3585/buggy-version/client.src.main.java.com.jaspersoft.android.sdk.client.oxm.server.ServerInfo.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "4cef0d71bf2158a07067d7ce06ca728d3126b415", "Url": "https://api.github.com/repos/zhongfuqiang/js-android-sdk", "Date": "2014-01-16T11:22:04Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { costFromNeighborToDest = rTable.costToGet.get(j).get(indexOfDestInNeighbor); } catch (java.lang.Exception e) { costFromNeighborToDest = 100000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/3260/buggy-version/root.ListenerThread.java", "BodyUseAPI": ["rTable.costToGet.get(j).get(int)", "rTable.costToGet.get(int)"], "Fixed commit": "78cc2127560ea3bbddca3851945686c59cbff124", "Url": "https://api.github.com/repos/iTeddeck/CS305_Distance_Vector_Project", "Date": "2017-05-06T22:23:39Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stage.draw(); } catch (java.lang.IllegalArgumentException e) { return; } catch (java.lang.NullPointerException e) { return; } catch (java.lang.IllegalStateException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1682/buggy-version/catroid.src.org.catrobat.catroid.stage.StageListener.java", "BodyUseAPI": ["com.badlogic.gdx.scenes.scene2d.Stage.draw()"], "Fixed commit": "78485541a25e1146457be214a0c76ece366596df", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-09-19T19:18:59Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { parser.getStudentsFromFile(); } catch (java.lang.Exception ex) { javax.swing.JOptionPane.showMessageDialog(null, ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/8757/buggy-version/StudentPicker.src.studentpicker.HomeController.java", "BodyUseAPI": ["Services.InputParser.getStudentsFromFile()"], "Fixed commit": "a17772208c085aca4a9f3f5c2d074e2b3aa404fd", "Url": "https://api.github.com/repos/JoepKerste/VSA3", "Date": "2015-02-01T20:50:15Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (plugin.hasPermission(event.getPlayer(), \"mcnsaranks.players\")) { com.hamaluik.MCNSARanks.ListOnline list = new com.hamaluik.MCNSARanks.ListOnline(plugin); list.List(event.getPlayer()); } java.lang.String result = plugin.processColours(((plugin.permissions.getUser(event.getPlayer()).getPrefix()) + (event.getPlayer().getName()))); if ((result.length()) > 16) { result = result.substring(0, 16); } event.getPlayer().setPlayerListName(result); } catch (java.lang.Exception e) { plugin.log.info((\"[MCNSARanks] Error: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/2499/buggy-version/src.com.hamaluik.MCNSARanks.PlayerListener.java", "BodyUseAPI": ["event.getPlayer().getName()", "event.getPlayer().setPlayerListName(java.lang.String)", "plugin.permissions.getUser(event.getPlayer())", "com.hamaluik.MCNSARanks.MCNSARanks.hasPermission(event.getPlayer(),java.lang.String)", "org.bukkit.event.player.PlayerJoinEvent.getPlayer()", "org.bukkit.event.player.PlayerJoinEvent.getPlayer()", "org.bukkit.event.player.PlayerJoinEvent.getPlayer()", "com.hamaluik.MCNSARanks.MCNSARanks.processColours(((plugin.permissions.getUser(event.getPlayer()).getPrefix()) + (event.getPlayer().getName())))", "com.hamaluik.MCNSARanks.ListOnline.List(event.getPlayer())", "plugin.permissions.getUser(event.getPlayer()).getPrefix()", "org.bukkit.event.player.PlayerJoinEvent.getPlayer()", "java.lang.String.length()", "org.bukkit.event.player.PlayerJoinEvent.getPlayer()", "java.lang.String.substring(int,int)"], "Fixed commit": "33d2bdc0c8a492073b65867b7ee75248621742ad", "Url": "https://api.github.com/repos/FuzzyWuzzie/MCNSARanks", "Date": "2012-08-14T20:20:08Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cathedra = cathedra.CathedraManager.getInstance().getCathedra(cathedraName); } catch (java.util.NoSuchElementException e) { mvc.View.writeError(\"\u041a\u0430\u0444\u0435\u0434\u0440\u0430 \u0441 \u0442\u0430\u043a\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u0430!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/5944/buggy-version/src.mvc.Commands.AddNewGroupCommand.java", "BodyUseAPI": ["cathedra.CathedraManager.getInstance()", "cathedra.CathedraManager.getInstance().getCathedra(java.lang.String)"], "Fixed commit": "767047bc72b6bb78aac12db915debdb6c085f47d", "Url": "https://api.github.com/repos/NetCrackerO2/ScheduleProject", "Date": "2016-11-16T12:18:53Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { visits = slset.getInt(\"visits\"); } catch (java.sql.SQLException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6587/buggy-version/src.main.java.me.taylorkelly.mywarp.sql.WarpDataSource.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(java.lang.String)"], "Fixed commit": "bf392560cba20fcd6420508cbe4feedbdf1b0365", "Url": "https://api.github.com/repos/TheE/MyWarp", "Date": "2012-09-23T22:52:50Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { groupPermissions = slset.getString(\"groupPermissions\"); } catch (java.sql.SQLException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/6587/buggy-version/src.main.java.me.taylorkelly.mywarp.sql.WarpDataSource.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "bf392560cba20fcd6420508cbe4feedbdf1b0365", "Url": "https://api.github.com/repos/TheE/MyWarp", "Date": "2012-09-23T22:52:50Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { handler.failure(throwable, input); } catch (java.lang.Throwable throwable2) { asyncContext.exception(throwable2); } finally { asyncContext.exception(throwable).release(); pending.decrementAndGet(); org.apache.storm.cassandra.executor.AsyncExecutor.LOG.error(java.lang.String.format(\"Failed to execute statement '%s' \", statement), throwable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/7514/buggy-version/external.storm-cassandra.src.main.java.org.apache.storm.cassandra.executor.AsyncExecutor.java", "BodyUseAPI": ["org.apache.storm.cassandra.executor.AsyncResultSetHandler<T>.failure(java.lang.Throwable,T)"], "Fixed commit": "d90c4ea7cdc146c08ae7cbac387d29ae2e0c8070", "Url": "https://api.github.com/repos/ef-labs/storm", "Date": "2016-11-22T09:39:23Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tareas.get(clave).setBackground(servidor.vista.ServidorVista.colorEstado(estado)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V24/1221/buggy-version/codigo.servidor.vista.ServidorVista.java", "BodyUseAPI": ["javax.swing.JLabel.setBackground(java.awt.Color)", "java.util.HashMap<java.lang.Integer, javax.swing.JLabel>.get(java.lang.Integer)", "servidor.vista.ServidorVista.colorEstado(bloquesYTareas.EstadoTarea)"], "Fixed commit": "eae03f126bdbf14b48719c303ede2af06201bf6b", "Url": "https://api.github.com/repos/lucasmufato/Integrador-Distribuida", "Date": "2017-01-24T23:25:22Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rmi.RMIInvocationHandler p = ((rmi.RMIInvocationHandler) (java.lang.reflect.Proxy.getInvocationHandler(args[0]))); return p.compare(this.intface, this.address); } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8092/buggy-version/rmi.RMIInvocationHandler.java", "BodyUseAPI": ["rmi.RMIInvocationHandler.compare(java.lang.Class,java.net.InetSocketAddress)", "java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)"], "Fixed commit": "50281fcd6d792681e1778f30209f610b3121130a", "Url": "https://api.github.com/repos/tong-1324/RMI", "Date": "2016-04-30T23:23:23Z"},
{"Line": "=>537", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { for (final java.lang.String param2string : param2) { param3.put(java.lang.Math.max(param2string.length(), param2string.getBytes().length)); } } finally { param3.position(param3pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1655/buggy-version/jme3-jogl.src.main.java.com.jme3.renderer.jogl.JoglGL.java", "BodyUseAPI": ["java.nio.IntBuffer.put(int)", "java.lang.String.length()", "java.lang.Math.max(int,int)", "java.lang.String.getBytes()"], "Fixed commit": "ea28e8a4491982d7d0927f00423fdd1bb4fa0bf7", "Url": "https://api.github.com/repos/dokthar/jmonkeyengine", "Date": "2015-10-31T10:00:17Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { newChain.getGroupByPDB(parentN.getResidueNumber()); } catch (org.biojava.nbio.structure.StructureException e) { newChain.addGroup(parentN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1293/buggy-version/biojava-structure.src.main.java.org.biojava.nbio.structure.StructureTools.java", "BodyUseAPI": ["org.biojava.nbio.structure.Chain.getGroupByPDB(parentN.getResidueNumber())", "org.biojava.nbio.structure.Group.getResidueNumber()"], "Fixed commit": "72317d93be621854debde49e6bcb59795fcbe360", "Url": "https://api.github.com/repos/josemduarte/biojava", "Date": "2016-03-10T01:10:02Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result(n.getNodeStatus()); } catch (java.lang.Exception ex) { resultError(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8056/buggy-version/app.controllers.Admin.java", "BodyUseAPI": ["controllers.Admin.result(n.getNodeStatus())", "com.openseedbox.models.Node.getNodeStatus()"], "Fixed commit": "bb35dc80e4141f4f309b6342939451eb3d99403f", "Url": "https://api.github.com/repos/openseedbox/openseedbox", "Date": "2015-03-06T22:59:55Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { clientSocket.close(); } catch (java.io.IOException ex) { ru.ufa.pepolushkin.tcpserver.Connection.logger.log(java.util.logging.Level.SEVERE, \"IOException: {0}\", ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/891/buggy-version/TCPServer.src.ru.ufa.pepolushkin.tcpserver.Connection.java", "BodyUseAPI": ["java.net.Socket.close()"], "Fixed commit": "abf7b175bc3f588dd8e12632b5909f4a493403a4", "Url": "https://api.github.com/repos/paulpolushkin/TestProjects", "Date": "2014-09-12T12:17:43Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.tajo.datum.Datum.initAbortWhenDivideByZero(new org.apache.tajo.conf.TajoConf()); } catch (java.lang.NoClassDefFoundError error) { org.apache.tajo.datum.Datum.abortWhenDivideByZero = java.lang.Boolean.valueOf(java.lang.System.getProperty(SessionVars.ARITHABORT.getConfVars().keyname(), SessionVars.ARITHABORT.getConfVars().defaultVal)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4181/buggy-version/tajo-common.src.main.java.org.apache.tajo.datum.Datum.java", "BodyUseAPI": ["org.apache.tajo.datum.Datum.initAbortWhenDivideByZero(org.apache.tajo.conf.TajoConf)"], "Fixed commit": "f74e5102c8742c3b30f3a810a057fe46855940ef", "Url": "https://api.github.com/repos/jinossy/tajo", "Date": "2015-02-10T10:07:34Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.gh.bmd.jrt.android.v11.core.JRoutine.on(this).withInvocation().withSyncRunner(com.gh.bmd.jrt.android.runner.Runners.sequentialRunner()).withOutputOrder(mOrderType).withOutputMaxSize(java.lang.Integer.MAX_VALUE).withOutputTimeout(TimeDuration.ZERO).withLog(logger.getLog()).withLogLevel(logger.getLogLevel()).set().callSync(mInputs).passTo(consumer); } catch (final com.gh.bmd.jrt.invocation.InvocationInterruptedException e) { throw e; } catch (final java.lang.Throwable t) { consumer.onError(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2211/buggy-version/android.src.main.java.com.gh.bmd.jrt.android.v11.core.RoutineLoader.java", "BodyUseAPI": ["com.gh.bmd.jrt.android.v11.core.JRoutine.on(this).withInvocation().withSyncRunner(com.gh.bmd.jrt.android.runner.Runners.sequentialRunner()).withOutputOrder(mOrderType).withOutputMaxSize(java.lang.Integer.MAX_VALUE).withOutputTimeout(TimeDuration.ZERO).withLog(logger.getLog()).withLogLevel(logger.getLogLevel()).set()", "com.gh.bmd.jrt.android.v11.core.JRoutine.on(this).withInvocation().withSyncRunner(com.gh.bmd.jrt.android.runner.Runners.sequentialRunner()).withOutputOrder(mOrderType).withOutputMaxSize(java.lang.Integer.MAX_VALUE).withOutputTimeout(TimeDuration.ZERO).withLog(logger.getLog()).withLogLevel(logger.getLogLevel())", "com.gh.bmd.jrt.android.v11.core.JRoutine.on(this).withInvocation().withSyncRunner(com.gh.bmd.jrt.android.runner.Runners.sequentialRunner()).withOutputOrder(com.gh.bmd.jrt.builder.InvocationConfiguration.OrderType)", "com.gh.bmd.jrt.android.v11.core.JRoutine.on(this).withInvocation().withSyncRunner(com.gh.bmd.jrt.android.runner.Runners.sequentialRunner()).withOutputOrder(mOrderType).withOutputMaxSize(int)", "com.gh.bmd.jrt.log.Logger.getLogLevel()", "com.gh.bmd.jrt.android.v11.core.JRoutine.on(com.gh.bmd.jrt.android.v11.core.RoutineLoader<INPUT, OUTPUT>)", "com.gh.bmd.jrt.android.v11.core.JRoutine.on(this).withInvocation().withSyncRunner(com.gh.bmd.jrt.android.runner.Runners.sequentialRunner()).withOutputOrder(mOrderType).withOutputMaxSize(java.lang.Integer.MAX_VALUE).withOutputTimeout(TimeDuration.ZERO)", "com.gh.bmd.jrt.android.v11.core.JRoutine.on(this).withInvocation().withSyncRunner(com.gh.bmd.jrt.android.runner.Runners.sequentialRunner()).withOutputOrder(mOrderType).withOutputMaxSize(java.lang.Integer.MAX_VALUE).withOutputTimeout(TimeDuration.ZERO).withLog(logger.getLog()).withLogLevel(logger.getLogLevel()).set().callSync(mInputs).passTo(com.gh.bmd.jrt.android.v11.core.InvocationOutputConsumer<OUTPUT>)", "com.gh.bmd.jrt.android.v11.core.JRoutine.on(this).withInvocation().withSyncRunner(com.gh.bmd.jrt.android.runner.Runners.sequentialRunner()).withOutputOrder(mOrderType).withOutputMaxSize(java.lang.Integer.MAX_VALUE).withOutputTimeout(TimeDuration.ZERO).withLog(logger.getLog()).withLogLevel(logger.getLogLevel()).set().callSync(java.util.List<? extends INPUT>)", "com.gh.bmd.jrt.android.v11.core.JRoutine.on(this).withInvocation()", "com.gh.bmd.jrt.android.v11.core.JRoutine.on(this).withInvocation().withSyncRunner(com.gh.bmd.jrt.android.runner.Runners.sequentialRunner()).withOutputOrder(mOrderType).withOutputMaxSize(java.lang.Integer.MAX_VALUE).withOutputTimeout(TimeDuration.ZERO).withLog(logger.getLog())", "com.gh.bmd.jrt.log.Logger.getLog()", "com.gh.bmd.jrt.android.v11.core.JRoutine.on(this).withInvocation().withSyncRunner(com.gh.bmd.jrt.android.runner.Runners.sequentialRunner())", "com.gh.bmd.jrt.android.runner.Runners.sequentialRunner()"], "Fixed commit": "72ad334a95eafb6b937797157ae2f2ec69324a41", "Url": "https://api.github.com/repos/davide-maestroni/jroutine", "Date": "2015-06-10T13:01:05Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.gh.bmd.jrt.android.v4.core.JRoutine.on(this).withInvocation().withSyncRunner(com.gh.bmd.jrt.android.runner.Runners.sequentialRunner()).withOutputOrder(mOrderType).withOutputMaxSize(java.lang.Integer.MAX_VALUE).withOutputTimeout(TimeDuration.ZERO).withLog(logger.getLog()).withLogLevel(logger.getLogLevel()).set().callSync(mInputs).passTo(consumer); } catch (final com.gh.bmd.jrt.invocation.InvocationInterruptedException e) { throw e; } catch (final java.lang.Throwable t) { consumer.onError(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2211/buggy-version/android.src.main.java.com.gh.bmd.jrt.android.v4.core.RoutineLoader.java", "BodyUseAPI": ["com.gh.bmd.jrt.android.v4.core.JRoutine.on(this).withInvocation().withSyncRunner(com.gh.bmd.jrt.android.runner.Runners.sequentialRunner())", "com.gh.bmd.jrt.android.runner.Runners.sequentialRunner()", "com.gh.bmd.jrt.android.v4.core.JRoutine.on(this).withInvocation().withSyncRunner(com.gh.bmd.jrt.android.runner.Runners.sequentialRunner()).withOutputOrder(mOrderType).withOutputMaxSize(java.lang.Integer.MAX_VALUE).withOutputTimeout(TimeDuration.ZERO).withLog(logger.getLog())", "com.gh.bmd.jrt.android.v4.core.JRoutine.on(this).withInvocation().withSyncRunner(com.gh.bmd.jrt.android.runner.Runners.sequentialRunner()).withOutputOrder(com.gh.bmd.jrt.builder.InvocationConfiguration.OrderType)", "com.gh.bmd.jrt.android.v4.core.JRoutine.on(this).withInvocation().withSyncRunner(com.gh.bmd.jrt.android.runner.Runners.sequentialRunner()).withOutputOrder(mOrderType).withOutputMaxSize(java.lang.Integer.MAX_VALUE).withOutputTimeout(TimeDuration.ZERO).withLog(logger.getLog()).withLogLevel(logger.getLogLevel()).set()", "com.gh.bmd.jrt.android.v4.core.JRoutine.on(this).withInvocation().withSyncRunner(com.gh.bmd.jrt.android.runner.Runners.sequentialRunner()).withOutputOrder(mOrderType).withOutputMaxSize(int)", "com.gh.bmd.jrt.log.Logger.getLog()", "com.gh.bmd.jrt.android.v4.core.JRoutine.on(this).withInvocation().withSyncRunner(com.gh.bmd.jrt.android.runner.Runners.sequentialRunner()).withOutputOrder(mOrderType).withOutputMaxSize(java.lang.Integer.MAX_VALUE).withOutputTimeout(TimeDuration.ZERO).withLog(logger.getLog()).withLogLevel(logger.getLogLevel())", "com.gh.bmd.jrt.android.v4.core.JRoutine.on(this).withInvocation()", "com.gh.bmd.jrt.android.v4.core.JRoutine.on(com.gh.bmd.jrt.android.v4.core.RoutineLoader<INPUT, OUTPUT>)", "com.gh.bmd.jrt.log.Logger.getLogLevel()", "com.gh.bmd.jrt.android.v4.core.JRoutine.on(this).withInvocation().withSyncRunner(com.gh.bmd.jrt.android.runner.Runners.sequentialRunner()).withOutputOrder(mOrderType).withOutputMaxSize(java.lang.Integer.MAX_VALUE).withOutputTimeout(TimeDuration.ZERO).withLog(logger.getLog()).withLogLevel(logger.getLogLevel()).set().callSync(mInputs).passTo(com.gh.bmd.jrt.android.v4.core.InvocationOutputConsumer<OUTPUT>)", "com.gh.bmd.jrt.android.v4.core.JRoutine.on(this).withInvocation().withSyncRunner(com.gh.bmd.jrt.android.runner.Runners.sequentialRunner()).withOutputOrder(mOrderType).withOutputMaxSize(java.lang.Integer.MAX_VALUE).withOutputTimeout(TimeDuration.ZERO).withLog(logger.getLog()).withLogLevel(logger.getLogLevel()).set().callSync(java.util.List<? extends INPUT>)", "com.gh.bmd.jrt.android.v4.core.JRoutine.on(this).withInvocation().withSyncRunner(com.gh.bmd.jrt.android.runner.Runners.sequentialRunner()).withOutputOrder(mOrderType).withOutputMaxSize(java.lang.Integer.MAX_VALUE).withOutputTimeout(TimeDuration.ZERO)"], "Fixed commit": "72ad334a95eafb6b937797157ae2f2ec69324a41", "Url": "https://api.github.com/repos/davide-maestroni/jroutine", "Date": "2015-06-10T13:01:05Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getConnection().setReadTimeout(timeout); } catch (java.lang.Exception e) { com.invertor.modbus.Modbus.log().warning(e.getLocalizedMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7614/buggy-version/src.com.invertor.modbus.ModbusMaster.java", "BodyUseAPI": ["com.invertor.modbus.ModbusMaster.getConnection()", "com.invertor.modbus.net.ModbusConnection.setReadTimeout(int)"], "Fixed commit": "3adae177c74b90565b0e51b2698aacda0cbbd60b", "Url": "https://api.github.com/repos/kochedykov/jlibmodbus", "Date": "2017-01-12T07:03:18Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { success = this.networkGraph.addEdge(src, dst, lnk); } catch (java.lang.IllegalArgumentException e) { pt.ulisboa.tecnico.amorphous.internal.state.LocalStateService.logger.error((((((((((\"Unable to add link (s\" + (lnk.getNodeA())) + \"-eth\") + (lnk.getNodeAPortNumber())) + \":s\") + (lnk.getNodeB())) + \"-eth\") + (lnk.getNodeBPortNumber())) + \") to the topology: \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4448/buggy-version/src.main.java.pt.ulisboa.tecnico.amorphous.internal.state.LocalStateService.java", "BodyUseAPI": ["org.jgrapht.graph.WeightedMultigraph<pt.ulisboa.tecnico.amorphous.types.NetworkNode, pt.ulisboa.tecnico.amorphous.types.NetworkLink>.addEdge(pt.ulisboa.tecnico.amorphous.types.NetworkNode,pt.ulisboa.tecnico.amorphous.types.NetworkNode,pt.ulisboa.tecnico.amorphous.types.NetworkLink)"], "Fixed commit": "52cd6b333187a5ae2ba49475196e3823076b94bb", "Url": "https://api.github.com/repos/fazevedo86/floodlight", "Date": "2015-09-19T00:46:21Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { success = this.networkGraph.addEdge(src, dst, link); } catch (java.lang.IllegalArgumentException e) { pt.ulisboa.tecnico.amorphous.internal.state.LocalStateService.logger.error((((((((((\"Unable to add link (s\" + (link.getNodeA())) + \"-eth\") + (link.getNodeAPortNumber())) + \":s\") + (link.getNodeB())) + \"-eth\") + (link.getNodeBPortNumber())) + \") to the topology: \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/4448/buggy-version/src.main.java.pt.ulisboa.tecnico.amorphous.internal.state.LocalStateService.java", "BodyUseAPI": ["org.jgrapht.graph.WeightedMultigraph<pt.ulisboa.tecnico.amorphous.types.NetworkNode, pt.ulisboa.tecnico.amorphous.types.NetworkLink>.addEdge(pt.ulisboa.tecnico.amorphous.types.NetworkNode,pt.ulisboa.tecnico.amorphous.types.NetworkNode,pt.ulisboa.tecnico.amorphous.types.NetworkLink)"], "Fixed commit": "52cd6b333187a5ae2ba49475196e3823076b94bb", "Url": "https://api.github.com/repos/fazevedo86/floodlight", "Date": "2015-09-19T00:46:21Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { adminStorage.delete(resource.getRkey(), com.webpagebytes.cms.cmsdata.WPBResource.class); adminStorage.addWithKey(resource); } catch (com.webpagebytes.cms.exception.WPBException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6267/buggy-version/src.main.java.com.webpagebytes.cms.controllers.FileController.java", "BodyUseAPI": ["com.webpagebytes.cms.controllers.FileController.addWithKey(com.webpagebytes.cms.cmsdata.WPBResource)", "com.webpagebytes.cms.cmsdata.WPBResource.getRkey()", "com.webpagebytes.cms.controllers.FileController.delete(resource.getRkey(),java.lang.Class)"], "Fixed commit": "6b78076d7d47cd51c09724ead5231c2ae361f35c", "Url": "https://api.github.com/repos/webpagebytes/cms", "Date": "2015-04-15T20:04:45Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { window = mWindow.getContext().get(org.eclipse.ui.IWorkbenchWindow.class); } catch (java.lang.Exception e) { e.printStackTrace(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5922/buggy-version/framework.common.org.gumtree.ui.src.org.gumtree.ui.util.workbench.WorkbenchUtils.java", "BodyUseAPI": ["mWindow.getContext().get(java.lang.Class)", "org.eclipse.e4.ui.model.application.ui.basic.MWindow.getContext()"], "Fixed commit": "da83e5d887acd5aa0296d9f7e20a6a1b6fe35605", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2013-03-14T01:07:32Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { lv.semti.morphology.corpus.Statistics.singleton = new lv.semti.morphology.corpus.Statistics(lv.semti.morphology.corpus.Statistics.DEFAULT_STATISTICS_FILE); } catch (java.lang.Exception e) { e.printStackTrace(); lv.semti.morphology.corpus.Statistics.singleton = new lv.semti.morphology.corpus.Statistics(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7332/buggy-version/src.main.java.lv.semti.morphology.corpus.Statistics.java", "BodyUseAPI": [], "Fixed commit": "5fa7f428b2d231e86f8c986e2f5ac4ebe1d9beeb", "Url": "https://api.github.com/repos/PeterisP/morphology", "Date": "2017-03-30T01:43:58Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { newValueDouble = java.lang.Double.valueOf(newValue); } catch (java.lang.NumberFormatException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5579/buggy-version/app.src.main.java.com.cpen321.circuitsolver.ui.draw.DrawActivity.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)"], "Fixed commit": "1f31ea445e7607d939ad2839be53b248a39bec2d", "Url": "https://api.github.com/repos/Frikster/CircuitSolverApp", "Date": "2016-12-04T09:08:18Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { traptransport = new org.snmp4j.transport.DefaultUdpTransportMapping(((org.snmp4j.smi.UdpAddress) (listenAddress))); } catch (java.lang.Exception e1) { snmp.SnmpLink.LOGGER.debug(\"error: \", e1); traptransport = new org.snmp4j.transport.DefaultUdpTransportMapping(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1850/buggy-version/src.main.java.snmp.SnmpLink.java", "BodyUseAPI": [], "Fixed commit": "8fd7b4759c6e2f6318f96217d9e2be0ca1cbae01", "Url": "https://api.github.com/repos/IOT-DSA/dslink-java-snmp", "Date": "2015-07-06T20:24:19Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { messageQueue.wait(); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/529/buggy-version/shuffler.src.main.java.com.shuffle.p2p.OtrChannel.java", "BodyUseAPI": ["java.util.Queue<com.shuffle.p2p.OtrChannel<Address>.SendClient.Message>.wait()"], "Fixed commit": "f025695dea380f2d79f302800000db919b7a8e33", "Url": "https://api.github.com/repos/Crypt-iQ/Shufflepuff", "Date": "2016-08-17T16:08:46Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { connection.send(sessionID.getUserID(), msg); } catch (java.lang.InterruptedException e) { } catch (java.io.IOException er) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/529/buggy-version/shuffler.src.main.java.com.shuffle.p2p.OtrChannel.java", "BodyUseAPI": ["net.java.otr4j.session.SessionID.getUserID()", "com.shuffle.p2p.OtrChannel<Address>.SendClient.SendConnection.send(sessionID.getUserID(),java.lang.String)"], "Fixed commit": "f025695dea380f2d79f302800000db919b7a8e33", "Url": "https://api.github.com/repos/Crypt-iQ/Shufflepuff", "Date": "2016-08-17T16:08:46Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { process(m); } catch (net.java.otr4j.OtrException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/529/buggy-version/shuffler.src.main.java.com.shuffle.p2p.OtrChannel.java", "BodyUseAPI": ["com.shuffle.p2p.OtrChannel<Address>.SendClient.MessageProcessor.process(com.shuffle.p2p.OtrChannel<Address>.SendClient.Message)"], "Fixed commit": "f025695dea380f2d79f302800000db919b7a8e33", "Url": "https://api.github.com/repos/Crypt-iQ/Shufflepuff", "Date": "2016-08-17T16:08:46Z"},
{"Line": "=>916", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class.forName((\"java.lang.\" + (ref.getSimpleName()))); spoon.reflect.reference.CtPackageReference javaLangPackageReference = this.jdtTreeBuilder.getFactory().Core().createPackageReference(); javaLangPackageReference.setSimpleName(\"java.lang\"); ref.setPackage(javaLangPackageReference); } catch (java.lang.ClassNotFoundException e) { ref.setPackage(jdtTreeBuilder.getContextBuilder().compilationUnitSpoon.getDeclaredPackage().getReference()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/9115/buggy-version/src.main.java.spoon.support.compiler.jdt.ReferenceBuilder.java", "BodyUseAPI": ["java.lang.Class.forName((\"java.lang.\" + (ref.getSimpleName())))", "spoon.reflect.reference.CtTypeReference<?>.getSimpleName()", "spoon.reflect.reference.CtPackageReference.setSimpleName(java.lang.String)", "this.jdtTreeBuilder.getFactory().Core()", "this.jdtTreeBuilder.getFactory().Core().createPackageReference()", "spoon.support.compiler.jdt.JDTTreeBuilder.getFactory()", "spoon.reflect.reference.CtTypeReference<?>.setPackage(spoon.reflect.reference.CtPackageReference)"], "Fixed commit": "cdd2acb779ea5934db6f939cc130394b207ef8e4", "Url": "https://api.github.com/repos/INRIA/spoon", "Date": "2017-05-19T18:17:38Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6628/buggy-version/src.main.java.org.mech.rougue.timer.TickTimer.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "b61730e841eab200af9d8bf19f19543f66a71624", "Url": "https://api.github.com/repos/mkrajc/rogue", "Date": "2016-02-29T13:11:29Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { isFingerPrintLock = manager.hasEnrolledFingerprints(); } catch (java.lang.Exception e) { isFingerPrintLock = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6769/buggy-version/app.src.main.java.ml.puredark.hviewer.ui.activities.LockActivity.java", "BodyUseAPI": ["android.support.v4.hardware.fingerprint.FingerprintManagerCompat.hasEnrolledFingerprints()"], "Fixed commit": "6d3767d6cee7f6609745a2b171262f8353206fcb", "Url": "https://api.github.com/repos/PureDark/H-Viewer", "Date": "2017-03-20T20:11:17Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.nodeclipse.debug.launch.LaunchConfigurationDelegate.nodeProcess.terminate(); } catch (org.eclipse.debug.core.DebugException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1795/buggy-version/org.nodeclipse.debug.src.org.nodeclipse.debug.launch.LaunchConfigurationDelegate.java", "BodyUseAPI": ["org.eclipse.debug.core.model.RuntimeProcess.terminate()"], "Fixed commit": "0ce2ee530f6b2fa73c46371ee9915a1bba8f8234", "Url": "https://api.github.com/repos/tomotaro1065/nodeclipse", "Date": "2013-03-03T06:33:29Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.gmail.charleszq.picorner.offline.OfflineControlFileUtil.save(params); } catch (java.lang.Exception e) { if (com.gmail.charleszq.picorner.BuildConfig.DEBUG) android.util.Log.w(com.gmail.charleszq.picorner.offline.OfflineHandleService.TAG, (\"error to save offline control file: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7123/buggy-version/UniversalPhotoStudio.src.com.gmail.charleszq.picorner.offline.OfflineHandleService.java", "BodyUseAPI": ["com.gmail.charleszq.picorner.offline.OfflineControlFileUtil.save(java.util.List<com.gmail.charleszq.picorner.offline.IOfflineViewParameter>)"], "Fixed commit": "95454b625a7dca095bc557b741dc27abd355c274", "Url": "https://api.github.com/repos/yuyang226/UniversalPhotoStudio", "Date": "2013-01-21T09:45:11Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { files.addAll(entry.getAffectedFiles()); } catch (java.lang.UnsupportedOperationException e) { jenkins.plugins.hipchat.ActiveNotifier.logger.info(e.getMessage()); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/2319/buggy-version/src.main.java.jenkins.plugins.hipchat.ActiveNotifier.java", "BodyUseAPI": ["hudson.scm.ChangeLogSet.Entry.getAffectedFiles()", "java.util.Set<hudson.scm.ChangeLogSet.AffectedFile>.addAll(entry.getAffectedFiles())"], "Fixed commit": "6ef649b7921ac38f803e8deb8a8c059a89e4a591", "Url": "https://api.github.com/repos/toneill818/jenkins-hipchat-plugin", "Date": "2014-06-04T23:34:50Z"},
{"Line": "=>1233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result = entryProcessor.process(entry, arguments); } catch (java.lang.Throwable t) { throw new javax.cache.CacheException(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1711/buggy-version/cache-ri-impl.src.main.java.org.jsr107.ri.RICache.java", "BodyUseAPI": ["org.jsr107.ri.EntryProcessor<K, V, T>.process(org.jsr107.ri.RICache<K, V>.EntryProcessorEntry,java.lang.Object[])"], "Fixed commit": "c98d09f2ef4fa7bba9b90790aa6af7f14a4bfacd", "Url": "https://api.github.com/repos/jfialli/RI", "Date": "2013-04-15T17:39:59Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((!(((javax.swing.JComboBox) (_component)).isPopupVisible())) && ((java.awt.KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner()) != null)) && (javax.swing.SwingUtilities.isDescendingFrom(java.awt.KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner(), _component))) { ((javax.swing.JComboBox) (_component)).showPopup(); } } catch (java.awt.IllegalComponentStateException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3204/buggy-version/src.com.jidesoft.swing.ComboBoxSearchable.java", "BodyUseAPI": ["com.jidesoft.swing.ComboBoxSearchable.isPopupVisible()", "java.awt.KeyboardFocusManager.getFocusOwner()", "java.awt.KeyboardFocusManager.getCurrentKeyboardFocusManager()", "javax.swing.SwingUtilities.isDescendingFrom(java.awt.Component,com.jidesoft.swing.ComboBoxSearchable)", "java.awt.KeyboardFocusManager.getCurrentKeyboardFocusManager()", "java.awt.KeyboardFocusManager.getFocusOwner()", "com.jidesoft.swing.ComboBoxSearchable.showPopup()"], "Fixed commit": "629c43c95b05e36a3bd2582a03c478997dc61930", "Url": "https://api.github.com/repos/jidesoft/jide-oss", "Date": "2012-10-02T17:48:18Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { player = view.QuizGameOrchestratorImpl.quizPlayerOrchestrator.getWinner(quiz1.getId()); java.lang.System.out.println((((((\"The winner is \" + (player.getName())) + \"\\nfrom: \") + (player.getCountry())) + \"\\nage: \") + (player.getAge()))); } catch (java.lang.NullPointerException e) { java.lang.System.out.println(\"No one won the quiz as it was never played :(\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/3814/buggy-version/player_client.src.main.java.view.QuizGameOrchestratorImpl.java", "BodyUseAPI": ["models.Quiz.getId()", "models.Player.getName()", "models.Player.getAge()", "models.Player.getCountry()", "view.QuizPlayerOrchestrator.getWinner(quiz1.getId())", "java.io.PrintStream.println((((((\"The winner is \" + (player.getName())) + \"\\nfrom: \") + (player.getCountry())) + \"\\nage: \") + (player.getAge())))"], "Fixed commit": "64083966d0f77fca2e31c2dfabfdf5681a21326d", "Url": "https://api.github.com/repos/kokamo01/Quiz", "Date": "2014-04-20T14:11:06Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { w = java.lang.Integer.parseInt(tvwidth.getText().toString()); h = java.lang.Integer.parseInt(tvheight.getText().toString()); i = java.lang.Integer.parseInt(tviterations.getText().toString()); callBack.onCallBack(this, w, h, i); } catch (java.lang.NumberFormatException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7661/buggy-version/src.idv.jlchntoz.oekakimobile.BlurDialog.java", "BodyUseAPI": ["android.widget.EditText.getText()", "android.widget.EditText.getText()", "android.widget.EditText.getText()", "idv.jlchntoz.oekakimobile.BlurDialog.BlurDialogCallBack.onCallBack(idv.jlchntoz.oekakimobile.BlurDialog,int,int,int)", "java.lang.Integer.parseInt(tvheight.getText().toString())", "tvwidth.getText().toString()", "java.lang.Integer.parseInt(tvwidth.getText().toString())", "tvheight.getText().toString()", "java.lang.Integer.parseInt(tviterations.getText().toString())", "tviterations.getText().toString()"], "Fixed commit": "db8351f5366068b82a7721b8506f8ab3c64f0caf", "Url": "https://api.github.com/repos/JLChnToZ/oekakimobile", "Date": "2014-03-04T11:53:07Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ps.waitFor(); } catch (java.lang.InterruptedException ex) { java.util.logging.Logger.getLogger(jspeak.ClipReader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/6350/buggy-version/src.jspeak.ClipReader.java", "BodyUseAPI": ["java.lang.Process.waitFor()"], "Fixed commit": "4d6fee78d88d2940f8e5d6d0d08bdb679427b4bb", "Url": "https://api.github.com/repos/BullShark/JSpeak", "Date": "2041-04-28T19:09:21Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { client.start(); } catch (java.lang.Exception e) { e.printStackTrace(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8525/buggy-version/app.src.main.java.com.example.huqicheng.client.NettyClientHandler.java", "BodyUseAPI": ["com.example.huqicheng.client.NettyClientBootstrap.start()"], "Fixed commit": "625a24ad416d7743a74b85b221a2209ada7afa05", "Url": "https://api.github.com/repos/Huqicheng/ProjectManagerAPP", "Date": "2017-11-23T04:48:21Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.example.huqicheng.service.MyService.client = com.example.huqicheng.utils.ClientUtils.getInstance(client_id); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/8525/buggy-version/app.src.main.java.com.example.huqicheng.service.MyService.java", "BodyUseAPI": ["com.example.huqicheng.utils.ClientUtils.getInstance(java.lang.String)"], "Fixed commit": "625a24ad416d7743a74b85b221a2209ada7afa05", "Url": "https://api.github.com/repos/Huqicheng/ProjectManagerAPP", "Date": "2017-11-23T04:48:21Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.util.Log.d(\"The click was at \", java.lang.Integer.toString(requestCode)); newTransactionList.get(requestCode).setLongitude(data.getExtras().getDouble(\"Lng\")); newTransactionList.get(requestCode).setLatitude(data.getExtras().getDouble(\"Lat\")); listTransactionLocated.set(requestCode, true); eListAdapter.notifyDataSetChanged(); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/769/buggy-version/app.src.main.java.uk.ac.ncl.csc2022.t14.bankingapp.activities.CategorizeActivity.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)", "java.util.List<java.lang.Boolean>.set(int,boolean)", "java.util.List<uk.ac.ncl.csc2022.t14.bankingapp.activities.CategorizeActivity.PlaceholderFragment.newTransaction>.get(int)", "data.getExtras().getDouble(java.lang.String)", "data.getExtras().getDouble(java.lang.String)", "android.content.Intent.getExtras()", "uk.ac.ncl.csc2022.t14.bankingapp.activities.CategorizeActivity.PlaceholderFragment.newTransaction.setLatitude(data.getExtras().getDouble(\"Lat\"))", "java.util.List<uk.ac.ncl.csc2022.t14.bankingapp.activities.CategorizeActivity.PlaceholderFragment.newTransaction>.get(int)", "android.content.Intent.getExtras()", "uk.ac.ncl.csc2022.t14.bankingapp.listadapters.ExpandableListAdapter.notifyDataSetChanged()", "java.lang.Integer.toString(int)", "uk.ac.ncl.csc2022.t14.bankingapp.activities.CategorizeActivity.PlaceholderFragment.newTransaction.setLongitude(data.getExtras().getDouble(\"Lng\"))"], "Fixed commit": "6ad44419f5b5d002cea2db2a8f34ea7f6a96c89c", "Url": "https://api.github.com/repos/robb-j/t14-mobile", "Date": "2015-04-10T18:55:33Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return co.smartreceipts.android.model.PriceCurrency.getInstance(java.util.Currency.getInstance(java.util.Locale.getDefault()).getCurrencyCode()); } catch (java.lang.IllegalArgumentException e) { co.smartreceipts.android.utils.log.Logger.warn(co.smartreceipts.android.model.PriceCurrency.class, \"Unable to find a default currency, since the device has an unsupported ISO 3166 locale. Returning USD instead\"); return co.smartreceipts.android.model.PriceCurrency.getInstance(\"USD\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/162/buggy-version/app.src.main.java.co.smartreceipts.android.model.PriceCurrency.java", "BodyUseAPI": ["java.util.Currency.getCurrencyCode()", "java.util.Currency.getInstance(java.util.Locale)", "co.smartreceipts.android.model.PriceCurrency.getInstance(java.lang.String)", "java.util.Locale.getDefault()"], "Fixed commit": "4aff41af9cd579a97c49b0b55767791c0ca67537", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2017-05-01T13:53:34Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { edu.berkeley.cs.amplab.carat.android.protocol.ProtocolClient.resetConnection(); } catch (java.lang.Throwable th) { android.util.Log.e(edu.berkeley.cs.amplab.carat.android.protocol.CommunicationManager.TAG, \"Got exception from thrift while resetting:\", th); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7829/buggy-version/app.android.src.edu.berkeley.cs.amplab.carat.android.protocol.CommunicationManager.java", "BodyUseAPI": ["edu.berkeley.cs.amplab.carat.android.protocol.ProtocolClient.resetConnection()"], "Fixed commit": "e9c6a3d1d716d9426207e1866af5fc3503d5e781", "Url": "https://api.github.com/repos/amplab/carat", "Date": "2012-05-25T06:22:12Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fragtran.add(R.id.request, fragment_party).commit(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/7444/buggy-version/app.src.main.java.com.Senior.Faff.Fragment.Party.Show_party_profile.java", "BodyUseAPI": ["fragtran.add(R.id.request, fragment_party).commit()", "android.support.v4.app.FragmentTransaction.add(R.id.request,com.Senior.Faff.Fragment.Party.party_member_request)"], "Fixed commit": "70d8bf7a744d46969d783502a3d7b267377fea5f", "Url": "https://api.github.com/repos/shaman1412/Senior", "Date": "2017-05-01T19:56:50Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.rotarysource.core.CepEngine cepEngine = ((org.rotarysource.core.CepEngine) (ctx.getBean(cepEngineBeanName))); org.rotarysource.core.sep.task.TaskTemplate.log.debug(\"Sending event to CEP: {}\", event); cepEngine.getCepEngine().getEPRuntime().sendEvent(event); } catch (org.springframework.beans.factory.NoSuchBeanDefinitionException exception) { org.rotarysource.core.sep.task.TaskTemplate.log.warn(\"Event could not be sended to CEP; cause: NOT EXISTING CepEngine ({}); Event: {}\", cepEngineBeanName, event.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/1635/buggy-version/rotary-core.src.main.java.org.rotarysource.core.sep.task.TaskTemplate.java", "BodyUseAPI": ["org.rotarysource.core.CepEngine.getCepEngine()", "cepEngine.getCepEngine().getEPRuntime()", "cepEngine.getCepEngine().getEPRuntime().sendEvent(org.rotarysource.events.BasicEvent)", "org.slf4j.Logger.debug(java.lang.String,org.rotarysource.events.BasicEvent)", "org.springframework.context.ApplicationContext.getBean(java.lang.String)"], "Fixed commit": "767ed66bfc0aee41de42a2fdad85c41287d4e45e", "Url": "https://api.github.com/repos/jlcanales/rotary", "Date": "2013-09-05T10:54:28Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return ((de.mg.stock.server.model.AlertMailStatus) (em.createQuery((\"from \" + (de.mg.stock.server.model.AlertMailStatus.class.getSimpleName()))).getSingleResult())); } catch (javax.persistence.NoResultException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V25/5716/buggy-version/stock-server.src.main.java.de.mg.stock.server.dao.AlertDAO.java", "BodyUseAPI": ["em.createQuery((\"from \" + (de.mg.stock.server.model.AlertMailStatus.class.getSimpleName()))).getSingleResult()", "java.lang.Class.getSimpleName()", "javax.persistence.EntityManager.createQuery(java.lang.String)"], "Fixed commit": "3c533aa307948fb177ae72744d60522d1ad06091", "Url": "https://api.github.com/repos/micgn/stock-charts", "Date": "2016-03-29T19:04:42Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { response = eu.arrowhead.common.Utility.sendRequest(URI, \"PUT\", gsdPoll); } catch (eu.arrowhead.common.exception.UnavailableServerException ex) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2232/buggy-version/arrowhead.gatekeeper.src.main.java.eu.arrowhead.core.gatekeeper.GatekeeperResource.java", "BodyUseAPI": ["eu.arrowhead.common.Utility.sendRequest(java.lang.String,java.lang.String,eu.arrowhead.common.model.messages.GSDPoll)"], "Fixed commit": "b1854d3fd9b67c67cd0996b95ca6de20b2bbf6fb", "Url": "https://api.github.com/repos/hegeduscs/arrowhead", "Date": "2016-08-10T12:09:10Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { semester = edu.hm.cs.fs.common.constant.Semester.valueOf(in.nextString()); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5273/buggy-version/client.src.main.java.edu.hm.cs.fs.restclient.Controllers.java", "BodyUseAPI": ["edu.hm.cs.fs.common.constant.Semester.valueOf(in.nextString())", "com.google.gson.stream.JsonReader.nextString()"], "Fixed commit": "4da79fb71d737ef08883cb666c63a288e2e73731", "Url": "https://api.github.com/repos/Fachschaft07/fs-rest", "Date": "2015-08-12T20:22:52Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { letter = edu.hm.cs.fs.common.constant.Letter.valueOf(in.nextString()); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5273/buggy-version/client.src.main.java.edu.hm.cs.fs.restclient.Controllers.java", "BodyUseAPI": ["com.google.gson.stream.JsonReader.nextString()", "edu.hm.cs.fs.common.constant.Letter.valueOf(in.nextString())"], "Fixed commit": "4da79fb71d737ef08883cb666c63a288e2e73731", "Url": "https://api.github.com/repos/Fachschaft07/fs-rest", "Date": "2015-08-12T20:22:52Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { study = edu.hm.cs.fs.common.constant.Study.valueOf(in.nextString()); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5273/buggy-version/client.src.main.java.edu.hm.cs.fs.restclient.Controllers.java", "BodyUseAPI": ["edu.hm.cs.fs.common.constant.Study.valueOf(in.nextString())", "com.google.gson.stream.JsonReader.nextString()"], "Fixed commit": "4da79fb71d737ef08883cb666c63a288e2e73731", "Url": "https://api.github.com/repos/Fachschaft07/fs-rest", "Date": "2015-08-12T20:22:52Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { jnode.protocol.binkp.BinkpFrame frame = frames.removeFirst(); try { process.getOutputStream().write(frame.getBytes()); process.getOutputStream().flush(); jnode.protocol.binkp.BinkpPipeConnector.logger.l5((\"Frame sent: \" + frame)); } catch (java.io.IOException e) { jnode.protocol.binkp.BinkpPipeConnector.logger.l2((\"IOException: \" + (e.getLocalizedMessage()))); break; } } catch (java.util.NoSuchElementException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7150/buggy-version/jnode-core.src.jnode.protocol.binkp.BinkpPipeConnector.java", "BodyUseAPI": ["jnode.logger.Logger.l5((\"Frame sent: \" + frame))", "java.io.OutputStream.flush()", "java.lang.Process.getOutputStream()", "jnode.protocol.binkp.BinkpPipeConnector.1.removeFirst()", "jnode.protocol.binkp.BinkpFrame.getBytes()", "jnode.logger.Logger.l2(java.lang.String)", "java.io.IOException.getLocalizedMessage()", "java.io.OutputStream.write(frame.getBytes())", "java.lang.Process.getOutputStream()"], "Fixed commit": "0f70ea7cdfa5c454e787107f2035ddba3af0222e", "Url": "https://api.github.com/repos/kreon/jnode", "Date": "2014-01-30T21:57:50Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { objects[i] = java.lang.Long.valueOf(matchStrs[i]).intValue(); } catch (java.lang.NumberFormatException ex2) { throw com.hunantv.fw.exceptions.HttpException.err404(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6102/buggy-version/src.main.java.com.hunantv.fw.route.Route.java", "BodyUseAPI": ["java.lang.Long.intValue()", "java.lang.Long.valueOf(java.lang.String)"], "Fixed commit": "8589c45fc50af919bf43ca2ea92349bf6e509da9", "Url": "https://api.github.com/repos/HunanTV/fw", "Date": "2015-08-08T09:24:39Z"},
{"Line": "=>1715", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.reflect.Field f = c.getDeclaredField(channelName); value = f.getDouble(ecuImplementation); } catch (java.lang.Exception e) { DebugLogManager.INSTANCE.log((\"Failed to get value for \" + channelName), Log.ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8490/buggy-version/MSLogger.src.uk.org.smithfamily.mslogger.ecuDef.Megasquirt.java", "BodyUseAPI": ["java.lang.Class<?>.getDeclaredField(java.lang.String)", "java.lang.reflect.Field.getDouble(uk.org.smithfamily.mslogger.ecuDef.MSECUInterface)"], "Fixed commit": "155c1ee85e29ecd5592c7be40b07e2644bf1e827", "Url": "https://api.github.com/repos/scudderfish/MSLoggerBase", "Date": "2012-12-27T00:55:16Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { io.netty.handler.codec.embedder.DecoderEmbedder.pipeline().inboundByteBuffer().writeBytes(((io.netty.buffer.ChannelBuffer) (input))); } catch (io.netty.channel.NoSuchBufferException e) { io.netty.handler.codec.embedder.DecoderEmbedder.pipeline().inboundMessageBuffer().add(input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5751/buggy-version/codec.src.main.java.io.netty.handler.codec.embedder.DecoderEmbedder.java", "BodyUseAPI": ["io.netty.handler.codec.embedder.DecoderEmbedder.pipeline()", "io.netty.handler.codec.embedder.DecoderEmbedder.pipeline().inboundByteBuffer()", "io.netty.handler.codec.embedder.DecoderEmbedder.pipeline().inboundByteBuffer().writeBytes(java.lang.Object)"], "Fixed commit": "14cf227c46afcd8015abcfc4e2b37617a7028e3d", "Url": "https://api.github.com/repos/netty/netty", "Date": "2012-06-02T06:11:01Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.bluetooth.BluetoothDevice dev = btadapt.getRemoteDevice(this.address); new fr.pasteque.client.printing.LKPXXPrinter.ConnTask().execute(dev); } catch (java.lang.IllegalArgumentException e) { e.printStackTrace(); connected = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1568/buggy-version/app.src.main.java.fr.pasteque.client.printing.LKPXXPrinter.java", "BodyUseAPI": ["fr.pasteque.client.printing.LKPXXPrinter.ConnTask.execute(android.bluetooth.BluetoothDevice)", "android.bluetooth.BluetoothAdapter.getRemoteDevice(this.address)"], "Fixed commit": "ad47add483ec3808f052078c654c731c303f0a85", "Url": "https://api.github.com/repos/ScilCoop/pasteque-android", "Date": "2015-12-23T11:36:21Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.bluetooth.BluetoothDevice dev = btadapt.getRemoteDevice(this.address); this.sock = dev.createRfcommSocketToServiceRecord(fr.pasteque.client.printing.WoosimPrinter.SPP_UUID); new fr.pasteque.client.printing.WoosimPrinter.ConnTask().execute(dev); } catch (java.lang.IllegalArgumentException e) { e.printStackTrace(); connected = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1568/buggy-version/app.src.main.java.fr.pasteque.client.printing.WoosimPrinter.java", "BodyUseAPI": ["android.bluetooth.BluetoothAdapter.getRemoteDevice(this.address)", "fr.pasteque.client.printing.WoosimPrinter.ConnTask.execute(android.bluetooth.BluetoothDevice)", "android.bluetooth.BluetoothDevice.createRfcommSocketToServiceRecord(java.util.UUID)"], "Fixed commit": "ad47add483ec3808f052078c654c731c303f0a85", "Url": "https://api.github.com/repos/ScilCoop/pasteque-android", "Date": "2015-12-23T11:36:21Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int c1 = o1.getMinimumInformationLoss().compareTo(o2.getMinimumInformationLoss()); return c1 != 0 ? c1 : o1.getMaximumInformationLoss().compareTo(o2.getMaximumInformationLoss()); } catch (java.lang.Exception e) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1313/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.explore.ViewTiles.java", "BodyUseAPI": ["o1.getMaximumInformationLoss().compareTo(o2.getMaximumInformationLoss())", "org.deidentifier.arx.ARXLattice.ARXNode.getMaximumInformationLoss()", "org.deidentifier.arx.ARXLattice.ARXNode.getMinimumInformationLoss()", "org.deidentifier.arx.ARXLattice.ARXNode.getMinimumInformationLoss()", "o1.getMinimumInformationLoss().compareTo(o2.getMinimumInformationLoss())", "org.deidentifier.arx.ARXLattice.ARXNode.getMaximumInformationLoss()"], "Fixed commit": "0130a8e53df3b63effad4f5a4ef37ac89b131f7f", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-10-07T12:30:36Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.blazingkin.interpreter.variables.Variable.setValue(\"*pc\", new com.blazingkin.interpreter.variables.Value(com.blazingkin.interpreter.variables.VariableTypes.Integer, num), com.blazingkin.interpreter.executor.Executor.processContext.peek()); } catch (java.lang.Exception e) { com.blazingkin.interpreter.variables.Variable.setGlobalValue(\"*pc\", new com.blazingkin.interpreter.variables.Value(com.blazingkin.interpreter.variables.VariableTypes.Integer, num)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1950/buggy-version/com.blazingkin.interpreter.executor.Executor.java", "BodyUseAPI": ["com.blazingkin.interpreter.variables.Variable.setValue(java.lang.String,com.blazingkin.interpreter.variables.Value,com.blazingkin.interpreter.executor.Executor.processContext.peek())", "java.util.Stack<com.blazingkin.interpreter.variables.Context>.peek()"], "Fixed commit": "1a772111790850250268fc9bcd2741117f83688e", "Url": "https://api.github.com/repos/blazingkin/blz-ospl", "Date": "2017-08-25T03:20:34Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return ((int) (com.blazingkin.interpreter.variables.Variable.getValue(\"*pc\", com.blazingkin.interpreter.executor.Executor.processContext.peek()).value)); } catch (java.lang.Exception e) { return ((int) (com.blazingkin.interpreter.variables.Variable.getGlobalValue(\"*pc\").value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1950/buggy-version/com.blazingkin.interpreter.executor.Executor.java", "BodyUseAPI": ["com.blazingkin.interpreter.variables.Variable.getValue(java.lang.String,com.blazingkin.interpreter.executor.Executor.processContext.peek())", "java.util.Stack<com.blazingkin.interpreter.variables.Context>.peek()"], "Fixed commit": "1a772111790850250268fc9bcd2741117f83688e", "Url": "https://api.github.com/repos/blazingkin/blz-ospl", "Date": "2017-08-25T03:20:34Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { doHandleMoves(movements, added, gameOver); } finally { semaphore.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3065/buggy-version/src.main.java.com.mcintyret.twenty48.ui.GridPanel.java", "BodyUseAPI": ["com.mcintyret.twenty48.ui.GridPanel.doHandleMoves(java.util.List<com.mcintyret.twenty48.core.Movement>,java.util.List<com.mcintyret.twenty48.core.ValuedPoint>,boolean)"], "Fixed commit": "510ef320ef7c3a9e576fbfae114859e10df43737", "Url": "https://api.github.com/repos/mcintyret/2048", "Date": "2016-01-11T23:13:49Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { levelBytes = savedLevel.getBytes(); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6331/buggy-version/app.src.main.java.tk.ubublik.redivansion.gamelogic.units.Settings.java", "BodyUseAPI": ["tk.ubublik.redivansion.gamelogic.units.SavedLevel.getBytes()"], "Fixed commit": "89bcbf55ea2735980dd15cd0523cde9059921c7b", "Url": "https://api.github.com/repos/bublikdrdrdr/Redivansion", "Date": "2017-11-10T15:16:35Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(itemBlacklist.isItemBlacklisted(itemStack))) { return false; } } catch (java.lang.RuntimeException e) { mezz.jei.util.Log.error(\"Could not check blacklist for stack {}\", itemStack, e); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2228/buggy-version/src.main.java.mezz.jei.ItemFilter.java", "BodyUseAPI": ["mezz.jei.api.IItemBlacklist.isItemBlacklisted(net.minecraft.item.ItemStack)"], "Fixed commit": "70b4739ce4119a961ceb3eaabe0b4357c2f6e666", "Url": "https://api.github.com/repos/mezz/JustEnoughItems", "Date": "2016-03-21T20:39:55Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { this.type = ((org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) (org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType(this.type, this.env, false))); } finally { this.env.mayTolerateMissingType = wasToleratingMissingTypeProcessingAnnotations; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8688/buggy-version/org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.lookup.UnresolvedAnnotationBinding.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding.resolveType(this.type,org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment,boolean)"], "Fixed commit": "01507ee98d5beecae71082dd137e782bb5a3bef0", "Url": "https://api.github.com/repos/amelentev/eclipse.jdt-oo", "Date": "2013-01-03T18:01:39Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { app.removeTask(java.lang.Integer.valueOf(args[1])); } catch (java.lang.NumberFormatException e) { java.lang.System.out.println(\"Unable to remove: index is not a number\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6893/buggy-version/src.TodoApp.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)", "TodoApp.removeTask(java.lang.Integer)"], "Fixed commit": "c9e88bed7602910df42cc0de636ba9c140d77e95", "Url": "https://api.github.com/repos/green-fox-academy/kaghee-todo-app", "Date": "2017-09-29T10:48:49Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { out = new java.io.FileInputStream(file); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); } finally { try { out.close(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5309/buggy-version/Memory.app.src.main.java.com.sjtu.bwphoto.memory.Activities.CropperActivity.java", "BodyUseAPI": [], "Fixed commit": "e45792cd095e7d3b54b385925dd4fb00d3fc3575", "Url": "https://api.github.com/repos/EmileTomas/APP_Memory", "Date": "2016-07-20T03:18:25Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bitmapRegionDecoder = android.graphics.BitmapRegionDecoder.newInstance(fileName, false); if (bitmapRegionDecoder == null) java.lang.System.out.println(\"bitmapRegionDecoder null !!!!!\"); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5309/buggy-version/Memory.app.src.main.java.com.sjtu.bwphoto.memory.Activities.CropperActivity.java", "BodyUseAPI": ["android.graphics.BitmapRegionDecoder.newInstance(java.lang.String,boolean)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "e45792cd095e7d3b54b385925dd4fb00d3fc3575", "Url": "https://api.github.com/repos/EmileTomas/APP_Memory", "Date": "2016-07-20T03:18:25Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mytask.get(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } catch (java.util.concurrent.ExecutionException e) { e.printStackTrace(); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/4665/buggy-version/app.src.main.java.com.example.group.tedxtv16.MainActivity.java", "BodyUseAPI": ["com.example.group.tedxtv16.AsyncTaskListView.get()"], "Fixed commit": "8273af145d62732565d68a7b6551b8809df35123", "Url": "https://api.github.com/repos/van-ema/TEDxTV16", "Date": "2016-03-03T18:01:39Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { selectedDate = dateFormat.parse(strDate); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7549/buggy-version/KutumbLink.app.src.main.java.kutumblink.appants.com.kutumblink.HomeActivity.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "79d8032397b71683094ab71b09dc92e308619f58", "Url": "https://api.github.com/repos/RajesMca008/KutCon", "Date": "2017-06-08T13:30:32Z"},
{"Line": "=>702", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pluginStores.migrateAllPluginStores(container, node.nodeDBHandle); } catch (com.db4o.ext.Db4oException e) { java.lang.System.err.println(((\"Failed to migrate plugin stores due to database error: \" + e) + \" - assuming node.db4o[.crypt] is corrupt.\")); freenet.support.Logger.error(this, ((\"Failed to migrate plugin stores due to database error: \" + e) + \" - assuming node.db4o[.crypt] is corrupt.\"), e); killedDatabase = true; } catch (java.lang.Throwable e) { java.lang.System.err.println(((\"Failed to migrate plugin stores due to database error: \" + e) + \" - assuming node.db4o[.crypt] is corrupt.\")); freenet.support.Logger.error(this, ((\"Failed to migrate plugin stores due to database error: \" + e) + \" - assuming node.db4o[.crypt] is corrupt.\"), e); killedDatabase = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7003/buggy-version/src.freenet.node.NodeClientCore.java", "BodyUseAPI": ["freenet.pluginmanager.PluginStores.migrateAllPluginStores(com.db4o.ObjectContainer,node.nodeDBHandle)"], "Fixed commit": "f67ec84ac7822e768cf96ccf51a770ddbc0169cd", "Url": "https://api.github.com/repos/xor-freenet/fred-staging", "Date": "2013-09-21T15:43:33Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.support.v4.app.ActivityCompat.invalidateOptionsMenu(getActivity()); } catch (java.lang.NullPointerException npe) { android.util.Log.e(org.adaptlab.chpir.android.survey.QuestionFragment.TAG, \"Options menu is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2065/buggy-version/src.org.adaptlab.chpir.android.survey.QuestionFragment.java", "BodyUseAPI": ["org.adaptlab.chpir.android.survey.QuestionFragment.getActivity()", "android.support.v4.app.ActivityCompat.invalidateOptionsMenu(getActivity())"], "Fixed commit": "e575714c9c90dd3e5aee2a562fcfff9439a2aefe", "Url": "https://api.github.com/repos/mnipper/AndroidSurvey", "Date": "2014-01-29T16:29:50Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { uuid = uuidFuture.get(); } catch (java.lang.InterruptedException | java.util.concurrent.ExecutionException e) { GlowServer.logger.log(java.util.logging.Level.SEVERE, \"UUID Cache interrupted: \", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6543/buggy-version/src.main.java.net.glowstone.entity.meta.profile.ProfileCache.java", "BodyUseAPI": ["java.util.concurrent.CompletableFuture<java.util.UUID>.get()"], "Fixed commit": "fdc5d4848381eb5f6b650370a459c32488b18b78", "Url": "https://api.github.com/repos/momothereal/Glowstone", "Date": "2016-09-21T09:02:44Z"},
{"Line": "=>752", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { viewer.expandAll(); } finally { viewer.getTree().setRedraw(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7735/buggy-version/com.alibaba.just.src.com.alibaba.just.ui.views.ModuleView.java", "BodyUseAPI": ["org.eclipse.jface.viewers.TreeViewer.expandAll()"], "Fixed commit": "63a9f248ee0f49f7696f862ca71a88908e76ef52", "Url": "https://api.github.com/repos/bruce007lee/just-eclipse", "Date": "2013-12-29T05:28:41Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { block[posx.get(i)][posy.get(i)] = vector.get(((3 * temp) + 1)); } catch (java.lang.IndexOutOfBoundsException exception) { java.lang.System.out.println(\"asd\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2905/buggy-version/src.main.java.com.custom.site.name.decoder.ThirdLevelDecoder.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.get(int)", "java.util.List<java.lang.Integer>.get(int)", "java.util.List<java.lang.Long>.get(int)"], "Fixed commit": "9a1386d2444d8ce93721072a795c6aaec7b5f404", "Url": "https://api.github.com/repos/movileanubeniamin/imageEncoderDecoder", "Date": "2017-05-19T10:26:01Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.google.appengine.api.datastore.Entity entity = datastore.get(key); return entityToCharacter(entity); } catch (com.google.appengine.api.datastore.EntityNotFoundException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6675/buggy-version/service.src.main.java.edu.lmu.cs.diabolical.ws.dao.CharacterDaoDatastoreImpl.java", "BodyUseAPI": ["com.google.appengine.api.datastore.DatastoreService.get(com.google.appengine.api.datastore.Key)", "edu.lmu.cs.diabolical.ws.dao.CharacterDaoDatastoreImpl.entityToCharacter(com.google.appengine.api.datastore.Entity)"], "Fixed commit": "63b72b939fa8199db364f69f0e01acda24cc8347", "Url": "https://api.github.com/repos/SaymV/diabolical", "Date": "2013-10-16T08:07:40Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { instance.load(); } catch (java.lang.Exception e) { com.orientechnologies.common.log.OLogManager.instance().error(this, \"[OMetadata] Error on loading index manager, reset index configuration\", e); instance.create(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6865/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.OMetadata.java", "BodyUseAPI": ["com.orientechnologies.orient.core.index.OIndexManager.load()"], "Fixed commit": "d39f1c7d7ede3fb9784810d4d3dbed148d944af5", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2013-06-25T21:24:57Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { save(OMetadata.CLUSTER_INTERNAL_NAME); } catch (java.lang.Exception e) { if (document.getIdentity().getClusterPosition().isPersistent()) { document.getIdentity().reset(); save(OMetadata.CLUSTER_INTERNAL_NAME); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6865/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.OIndexManagerAbstract.java", "BodyUseAPI": ["com.orientechnologies.orient.core.index.OIndexManagerAbstract.save(OMetadata.CLUSTER_INTERNAL_NAME)"], "Fixed commit": "d39f1c7d7ede3fb9784810d4d3dbed148d944af5", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2013-06-25T21:24:57Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { streamWriter = new java.io.OutputStreamWriter(new java.io.FileOutputStream(f), \"UTF-8\"); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7383/buggy-version/wherehows-common.src.main.java.wherehows.common.writers.FileWriter.java", "BodyUseAPI": [], "Fixed commit": "b6c42e935f6ca5a34f9bc5c767deef86cd12e4bb", "Url": "https://api.github.com/repos/thomas-young-2013/Wherehows-eXtension", "Date": "2017-05-18T12:53:59Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { u = em.find(n7.Utilisateur.class, idUtilisateur); } catch (java.lang.Exception e) { e.printStack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5841/buggy-version/src.n7.Facade.java", "BodyUseAPI": ["javax.persistence.EntityManager.find(java.lang.Class,int)"], "Fixed commit": "55e373d1231d9bd59383feb4e3755b218b467d2e", "Url": "https://api.github.com/repos/ikhamlic/gestionparking", "Date": "2017-11-24T13:54:24Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.semux.gui.model.WalletAccount acc = getSelectedAccount(); if (acc != null) { java.awt.image.BufferedImage bi = org.semux.gui.SwingUtil.generateQR((\"semux://\" + (acc.getKey().toAddressString())), 200); qr.setIcon(new javax.swing.ImageIcon(bi)); } } catch (org.semux.gui.exception.QRCodeException exception) { org.semux.gui.panel.ReceivePanel.logger.error(\"Unable to generate QR code\", exception); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1823/buggy-version/src.main.java.org.semux.gui.panel.ReceivePanel.java", "BodyUseAPI": ["javax.swing.JLabel.setIcon(javax.swing.ImageIcon)", "org.semux.gui.SwingUtil.generateQR((\"semux://\" + (acc.getKey().toAddressString())),int)", "org.semux.gui.panel.ReceivePanel.getSelectedAccount()", "org.semux.gui.model.WalletAccount.getKey()", "acc.getKey().toAddressString()"], "Fixed commit": "116589b5f7a9f10e4d9c5f4e061e2b6c55fd067e", "Url": "https://api.github.com/repos/cryptokat/semux", "Date": "2017-11-29T13:48:04Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { isl.dbms.DBCollection colSchema = new isl.dbms.DBCollection(this.DBURI, dbSchemaFolder, this.DBuser, this.DBpassword); isl.dbms.DBFile dbFSchema = colSchema.createFile(uniqueName, \"XMLDBFile\"); dbFSchema.setXMLAsString(content); dbFSchema.store(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/3129/buggy-version/src.main.java.isl.FIMS.servlet.imports.ImportXML.java", "BodyUseAPI": ["isl.dbms.DBFile.setXMLAsString(java.lang.String)", "isl.dbms.DBCollection.createFile(java.lang.String,java.lang.String)", "isl.dbms.DBFile.store()"], "Fixed commit": "f0645acc2ad2bc23d22af56d8d33f601c9de7284", "Url": "https://api.github.com/repos/isl/FIMS", "Date": "2016-10-07T15:26:39Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { intValue = java.lang.Integer.parseInt(value); } catch (java.lang.NumberFormatException e) { try { intValue = java.lang.Math.round(java.lang.Float.parseFloat(value)); } catch (java.lang.NumberFormatException f) { intValue = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8388/buggy-version/interfaces.android.src.st.alr.homA.view.RangeControlView.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "5a764b92c1542095d734c95bb8d3b2890b8f54dc", "Url": "https://api.github.com/repos/binarybucks/homA", "Date": "2013-06-06T17:24:37Z"},
{"Line": "=>1703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { targetSession.rollback(); } catch (java.lang.Throwable ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8380/buggy-version/hornetq-jms-server.src.main.java.org.hornetq.jms.bridge.impl.JMSBridgeImpl.java", "BodyUseAPI": ["javax.jms.Session.rollback()"], "Fixed commit": "09787cd2553ed5a988d4d0a454b49538c7f92fb7", "Url": "https://api.github.com/repos/clebertsuconic/hornetq", "Date": "2013-08-16T21:46:05Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return future.get(300, java.util.concurrent.TimeUnit.MILLISECONDS); } catch (final java.lang.Exception ex) { de.cismet.cids.custom.sudplan.local.wupp.ImportGeoCPMWizardAction.LOG.warn(\"cannot get result of enable future\", ex); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8857/buggy-version/src.main.java.de.cismet.cids.custom.sudplan.local.wupp.ImportGeoCPMWizardAction.java", "BodyUseAPI": ["java.util.concurrent.Future<java.lang.Boolean>.get(int,java.util.concurrent.TimeUnit)"], "Fixed commit": "0d74f2f6dbdfc25bb146d29544b774553eb51146", "Url": "https://api.github.com/repos/cismet/cids-custom-sudplan", "Date": "2012-09-02T23:49:18Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { app.utils.Utils.initCustomerCombo(customerCombo, true); } catch (java.lang.Exception e) { app.utils.Utils.showExceptionMsg(this, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8100/buggy-version/src.app.screens.WorkLogScr.java", "BodyUseAPI": ["app.utils.Utils.initCustomerCombo(app.screens.JXComboBox,boolean)"], "Fixed commit": "18da7cb4fd194eba3fa643843e4c1099223aba5f", "Url": "https://api.github.com/repos/bsababa2/WorkLog", "Date": "2014-06-04T19:30:03Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pool.awaitTermination(3, java.util.concurrent.TimeUnit.SECONDS); } catch (java.lang.InterruptedException e) { org.kaaproject.kaa.server.operations.service.loadbalance.DefaultLoadBalancingService.LOG.error(\"Failed to terminate service\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/8966/buggy-version/server.operations.src.main.java.org.kaaproject.kaa.server.operations.service.loadbalance.DefaultLoadBalancingService.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.awaitTermination(int,java.util.concurrent.TimeUnit)"], "Fixed commit": "9ac5e369ab5ef8ff2f3e5be07a8771cb608b72d4", "Url": "https://api.github.com/repos/kaaproject/kaa", "Date": "2015-06-09T11:26:09Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { anatlyzer.atl.errors.ProblemStatus result = wf.find(node, data); node.setAnalysisResult(result); } catch (java.lang.Exception e) { node.setAnalysisResult(ProblemStatus.IMPL_INTERNAL_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6853/buggy-version/plugins.anatlyzer.atl.editor.src.anatlyzer.ui.actions.CheckChildStealing.java", "BodyUseAPI": ["anatlyzer.atl.witness.IWitnessFinder.find(anatlyzer.atl.analyser.batch.PossibleStealingNode,anatlyzer.atl.analyser.AnalysisResult)", "anatlyzer.atl.analyser.batch.PossibleStealingNode.setAnalysisResult(anatlyzer.atl.errors.ProblemStatus)"], "Fixed commit": "292b2da90d534d3ec1fa40c8fe3e2251211e0663", "Url": "https://api.github.com/repos/anatlyzer/anatlyzer", "Date": "2017-11-15T22:46:17Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { serviceWrapper = org.opennaas.extensions.router.capabilities.api.helper.OSPFApiHelper.buildOSPFServiceWrapper(ospfService); } catch (java.io.IOException e) { throw new org.opennaas.core.resources.capability.CapabilityException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7400/buggy-version/extensions.bundles.router.capability.ospfv3.src.main.java.org.opennaas.extensions.router.capability.ospfv3.OSPFv3Capability.java", "BodyUseAPI": ["org.opennaas.extensions.router.capabilities.api.helper.OSPFApiHelper.buildOSPFServiceWrapper(org.opennaas.extensions.router.model.OSPFService)"], "Fixed commit": "a6f63159ab88c01d7a7b4be8b806ad79e01d8bac", "Url": "https://api.github.com/repos/dana-i2cat/opennaas", "Date": "2014-02-05T15:13:34Z"},
{"Line": "=>3239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { completionOn = json.getString(com.lgallardo.qbittorrentclient.MainActivity.TAG_COMPLETIONON); } catch (org.json.JSONException je) { completionOn = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5580/buggy-version/app.src.main.java.com.lgallardo.qbittorrentclient.MainActivity.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "2ab747117bd146af0b24c70fe8d76a3369776fe2", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Controller", "Date": "2016-04-13T22:46:24Z"},
{"Line": "=>3233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { addedOn = json.getString(com.lgallardo.qbittorrentclient.MainActivity.TAG_ADDEDON); } catch (org.json.JSONException je) { addedOn = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5580/buggy-version/app.src.main.java.com.lgallardo.qbittorrentclient.MainActivity.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "2ab747117bd146af0b24c70fe8d76a3369776fe2", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Controller", "Date": "2016-04-13T22:46:24Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return new org.bson.types.ObjectId(time, machine, inc.shortValue(), counter); } catch (java.lang.Exception e) { e.printStackTrace(); return org.bson.types.ObjectId.createFromLegacyFormat(time, machine, inc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2933/buggy-version/src.main.java.org.bson.types.ObjectId_CustomFieldSerializer.java", "BodyUseAPI": ["java.lang.Short.shortValue()"], "Fixed commit": "1da72972f437f4ff900d5d93e5a1203e0be5a65f", "Url": "https://api.github.com/repos/ks280first/morphia-gwt", "Date": "2015-09-17T17:41:15Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { absPrefix = dir.getCanonicalPath(); } catch (java.io.IOException e) { absPrefix = dir.getAbsolutePath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/2426/buggy-version/src.com.redhat.ceylon.compiler.java.tools.LanguageCompiler.java", "BodyUseAPI": ["java.io.File.getCanonicalPath()"], "Fixed commit": "6cc490daf7a582f86aacb4649954ad00005a0a52", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2014-02-18T17:55:55Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { writer = new java.io.BufferedWriter(new java.io.FileWriter(file)); writer.write(data); } catch (java.lang.Exception e) { com.castlemock.web.basis.support.FileRepositorySupport.LOGGER.error((\"Unable to save the following file: \" + filename), e); throw new java.lang.IllegalStateException((\"Unable to save the following file: \" + filename)); } finally { try { writer.close(); } catch (java.io.IOException e) { com.castlemock.web.basis.support.FileRepositorySupport.LOGGER.error(\"Unable to close the writer\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/445/buggy-version/code.web.basis.src.main.java.com.castlemock.web.basis.support.FileRepositorySupport.java", "BodyUseAPI": ["java.io.BufferedWriter.write(java.lang.String)"], "Fixed commit": "0e432417a457a5002bf9ad69acf1bc9148448923", "Url": "https://api.github.com/repos/castlemock/castlemock", "Date": "2017-09-27T21:40:19Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { shiftsToEnrol = net.sourceforge.fenixedu.applicationTier.Servico.enrollment.shift.ReadShiftsToEnroll.runReadShiftsToEnroll(registration); } catch (net.sourceforge.fenixedu.applicationTier.Servico.exceptions.FenixServiceException exception) { addActionMessage(request, exception.getMessage()); return mapping.getInputForward(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1476/buggy-version/src.main.java.net.sourceforge.fenixedu.presentationTier.Action.student.enrollment.ShiftStudentEnrollmentManagerDispatchAction.java", "BodyUseAPI": ["net.sourceforge.fenixedu.applicationTier.Servico.enrollment.shift.ReadShiftsToEnroll.runReadShiftsToEnroll(net.sourceforge.fenixedu.domain.student.Registration)"], "Fixed commit": "f34af82abc3e9b86d46fa4204e9510ef954d7aed", "Url": "https://api.github.com/repos/diutsu/fenix", "Date": "2013-09-12T17:09:15Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { current = java.lang.Double.parseDouble(numValue); } catch (java.lang.NumberFormatException e) { log().error(((id + \" does not have a numeric value: \") + numValue)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/6991/buggy-version/opennms-services.src.main.java.org.opennms.netmgt.threshd.CollectionResourceWrapper.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "9be1a56988177099d97fc109e2a29584313e1742", "Url": "https://api.github.com/repos/sameerak/opennms", "Date": "2013-02-05T20:58:45Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { score = ds.getValue(com.example.mjokic.quizapp.model.Score.class); } catch (com.google.firebase.database.DatabaseException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1979/buggy-version/app.src.main.java.com.example.mjokic.quizapp.activities.HighscoreActivity.java", "BodyUseAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Fixed commit": "31adc78b1052c3d047c0188733cc5779891a0cff", "Url": "https://api.github.com/repos/mjokic/QuizAndroidApp", "Date": "2017-10-06T08:17:13Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { score = ds.getValue(com.example.mjokic.quizapp.model.Score.class); } catch (com.google.firebase.database.DatabaseException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1979/buggy-version/app.src.main.java.com.example.mjokic.quizapp.activities.LeaderboardActivity.java", "BodyUseAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Fixed commit": "31adc78b1052c3d047c0188733cc5779891a0cff", "Url": "https://api.github.com/repos/mjokic/QuizAndroidApp", "Date": "2017-10-06T08:17:13Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { float videoDuration = java.lang.Float.parseFloat(seconds); for (com.pierfrancescosoffritti.youtubeplayer.YouTubePlayer.YouTubeListener listener : youTubePlayer.getListeners()) listener.onVideoDuration(videoDuration); } catch (java.lang.NumberFormatException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1707/buggy-version/YouTubePlayer.src.main.java.com.pierfrancescosoffritti.youtubeplayer.YouTubePlayerBridge.java", "BodyUseAPI": ["YouTubePlayer.YouTubeListener.onVideoDuration(float)", "com.pierfrancescosoffritti.youtubeplayer.YouTubePlayer.getListeners()", "java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "6c869b75787682415ba60cc51d4eec9c4792bd6e", "Url": "https://api.github.com/repos/PierfrancescoSoffritti/android-youtube-player", "Date": "2016-11-05T19:51:32Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { double dRate = java.lang.Double.parseDouble(rate); for (com.pierfrancescosoffritti.youtubeplayer.YouTubePlayer.YouTubeListener listener : youTubePlayer.getListeners()) listener.onPlaybackRateChange(dRate); } catch (java.lang.NumberFormatException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/1707/buggy-version/YouTubePlayer.src.main.java.com.pierfrancescosoffritti.youtubeplayer.YouTubePlayerBridge.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "YouTubePlayer.YouTubeListener.onPlaybackRateChange(double)", "com.pierfrancescosoffritti.youtubeplayer.YouTubePlayer.getListeners()"], "Fixed commit": "6c869b75787682415ba60cc51d4eec9c4792bd6e", "Url": "https://api.github.com/repos/PierfrancescoSoffritti/android-youtube-player", "Date": "2016-11-05T19:51:32Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.appdb = android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(morgFile, null); } catch (java.lang.Exception e) { com.matburt.mobileorg.Error.ErrorReporter.displayError(this.appcontext, r.getString(R.string.error_opening_database)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/7444/buggy-version/src.com.matburt.mobileorg.MobileOrgDatabase.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(java.io.File,<nulltype>)"], "Fixed commit": "abffd055832341129eca376c4d385322098227e3", "Url": "https://api.github.com/repos/matburt/mobileorg-android", "Date": "2011-05-03T01:55:25Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { floatRet = java.lang.Float.parseFloat(sharedPreferences.getString(key, default_value)); } catch (java.lang.Exception e) { floatRet = java.lang.Float.parseFloat(default_value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5693/buggy-version/app.src.main.java.com.team2052.frckrawler.util.PreferenceUtil.java", "BodyUseAPI": ["java.lang.Float.parseFloat(sharedPreferences.getString(key, default_value))", "android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Fixed commit": "9a0e53f47871679de95aa53d73566568301a4d4a", "Url": "https://api.github.com/repos/frc2052/FRC-Krawler", "Date": "2016-07-11T03:01:47Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { clickedID = java.lang.Integer.parseInt(selected); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V26/5226/buggy-version/Hitch.app.src.main.java.com.dblappdev.hitch.app.DriverFragment.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "a28b00950c5d42c400667eeb5f1e66367763b848", "Url": "https://api.github.com/repos/Perryvw/DBLAppDevelopment", "Date": "2015-04-02T11:35:01Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = stmt.executeQuery(astronomy.Query.queryStmts[qNum]); } catch (java.lang.Exception e) { java.lang.System.out.println((\"Error: failed to execute query.\\\\n\" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3061/buggy-version/Query.java", "BodyUseAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Fixed commit": "b89e8ec5ddf5ab1a9aae7e3f09e5a2ad72d4b676", "Url": "https://api.github.com/repos/rileycr/AstronomyQuiz", "Date": "2014-04-25T20:15:49Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((this.includeDeviceMotionCheck) && (!(this.motionSensorReportsMovement()))) { this.log.add(\"Device's accelerometer doesn't report movement.\"); return false; } } catch (com.medziku.motoresponder.utils.AccelerometerNotAvailableException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3063/buggy-version/app.src.main.java.com.medziku.motoresponder.logic.UserRide.java", "BodyUseAPI": ["com.medziku.motoresponder.logic.DecisionLog.add(java.lang.String)", "com.medziku.motoresponder.logic.UserRide.motionSensorReportsMovement()"], "Fixed commit": "c4b92f52f3a128f7f4f0817b2c3452c60965afce", "Url": "https://api.github.com/repos/orzechowskikamil/motoresponder", "Date": "2016-04-21T21:04:51Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.content.res.Resources resources = itemView.getResources(); if (selectedSound.isInternalSound()) { mediaPlayer = android.media.MediaPlayer.create(itemView.getContext(), resources.getIdentifier(selectedSound.getIdForSound(), \"raw\", \"rieger.alarmsmsapp\")); }else { mediaPlayer = android.media.MediaPlayer.create(itemView.getContext(), android.net.Uri.parse(selectedSound.getIdForSound())); mediaPlayer.setLooping(false); } mediaPlayer.start(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3958/buggy-version/app.src.main.java.rieger.alarmsmsapp.control.adapter.SoundSelectionAdapter.java", "BodyUseAPI": ["rieger.alarmsmsapp.model.rules.Sound.getIdForSound()", "android.media.MediaPlayer.create(itemView.getContext(),resources.getIdentifier(selectedSound.getIdForSound(), \"raw\", \"rieger.alarmsmsapp\"))", "android.view.View.getContext()", "android.view.View.getResources()", "android.net.Uri.parse(selectedSound.getIdForSound())", "android.media.MediaPlayer.start()", "android.content.res.Resources.getIdentifier(selectedSound.getIdForSound(),java.lang.String,java.lang.String)", "rieger.alarmsmsapp.model.rules.Sound.getIdForSound()", "android.media.MediaPlayer.create(itemView.getContext(),android.net.Uri.parse(selectedSound.getIdForSound()))", "android.media.MediaPlayer.setLooping(boolean)", "android.view.View.getContext()", "rieger.alarmsmsapp.model.rules.Sound.isInternalSound()"], "Fixed commit": "37378c8fff90b475fefdfbc7b702ffa1b6c142d0", "Url": "https://api.github.com/repos/ajdf24/AlarmSMSApp", "Date": "2017-05-03T17:54:54Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { wordgame.WordGame.announce((\"Game starting! Letters: \" + letters)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5368/buggy-version/WordGame.src.wordgame.WordGame.java", "BodyUseAPI": ["wordgame.WordGame.announce(java.lang.String)"], "Fixed commit": "ea268af6af4d3949ace08d9fc54067efe2df8b7f", "Url": "https://api.github.com/repos/kev626/WordGame", "Date": "2016-05-21T21:58:23Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((wordgame.WordGame.players.size()) == 0) { wordgame.WordGame.announce(\"Nobody played this match! Play the next one for a chance to win!\"); }else { wordgame.Player winner = wordgame.WordGame.getWinner(); wordgame.WordGame.announce(((((((\"The winner was @\" + (winner.getUserName())) + \" with a score of \") + (winner.getScore())) + \"! Congratulations! (Game \") + (wordgame.WordGame.gameNumber)) + \")\")); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5368/buggy-version/WordGame.src.wordgame.WordGame.java", "BodyUseAPI": ["wordgame.Player.getScore()", "wordgame.WordGame.announce(java.lang.String)", "wordgame.WordGame.getWinner()", "wordgame.Player.getUserName()", "wordgame.WordGame.announce(((((((\"The winner was @\" + (winner.getUserName())) + \" with a score of \") + (winner.getScore())) + \"! Congratulations! (Game \") + (wordgame.WordGame.gameNumber)) + \")\"))", "java.util.ArrayList<wordgame.Player>.size()"], "Fixed commit": "ea268af6af4d3949ace08d9fc54067efe2df8b7f", "Url": "https://api.github.com/repos/kev626/WordGame", "Date": "2016-05-21T21:58:23Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tro = reformTableDefinition(fileName, nextLine, defaultTableRef); } catch (org.isatools.isacreator.io.importisa.errorhandling.exceptions.MalformedInvestigationException mie) { java.lang.System.err.println(mie.toString()); org.isatools.isacreator.spreadsheet.model.TableReferenceObject generic_tro = org.isatools.isacreator.managers.ConfigurationManager.selectTROForUserSelection(\"*\", \"*\"); if ((generic_tro != null) && (defaultTableRef != generic_tro)) { tro = reformTableDefinition(fileName, nextLine, generic_tro); }else { throw mie; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5983/buggy-version/src.main.java.org.isatools.isacreator.io.importisa.SpreadsheetImport.java", "BodyUseAPI": ["org.isatools.isacreator.io.importisa.SpreadsheetImport.reformTableDefinition(java.lang.String,java.lang.String[],org.isatools.isacreator.spreadsheet.model.TableReferenceObject)"], "Fixed commit": "c6456b5985ace21855b21155a7d53dcf3eb9b3a7", "Url": "https://api.github.com/repos/ISA-tools/ISAcreator", "Date": "2014-01-16T10:40:37Z"},
{"Line": "=>1208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (manualSettingChanged) toggleDragDrop(com.todoroo.astrid.core.SortHelper.isManualSort(sortFlags)); else loadTaskListContent(true); } catch (java.lang.IllegalStateException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7855/buggy-version/astrid.src.com.todoroo.astrid.activity.TaskListFragment.java", "BodyUseAPI": ["com.todoroo.astrid.activity.TaskListFragment.toggleDragDrop(com.todoroo.astrid.core.SortHelper.isManualSort(sortFlags))", "com.todoroo.astrid.activity.TaskListFragment.loadTaskListContent(boolean)", "com.todoroo.astrid.core.SortHelper.isManualSort(int)"], "Fixed commit": "a8913061195633d99e1820b82946159e5e746fe3", "Url": "https://api.github.com/repos/serzhant/astrid", "Date": "2012-02-24T00:59:45Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.text.SimpleDateFormat format = new java.text.SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.SSS\"); value = new java.sql.Timestamp(format.parse(svalue).getTime()); } catch (java.text.ParseException e) { try { value = new java.sql.Timestamp(java.text.DateFormat.getDateTimeInstance().parse(svalue).getTime()); } catch (java.text.ParseException e1) { throw new org.waarp.common.database.exception.WaarpDatabaseSqlException((\"Error in Timestamp: \" + svalue), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1677/buggy-version/src.main.java.org.waarp.common.database.data.DbValue.java", "BodyUseAPI": ["java.util.Date.getTime()", "java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "99ec5856f433a443f4888a564098fbdd1540ef08", "Url": "https://api.github.com/repos/waarp/WaarpCommon", "Date": "2013-10-09T22:36:44Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getUIStringInput(org.exoplatform.ecm.webui.component.admin.templates.clv.UICLVTemplateForm.FIELD_TITLE).setValue(content.getProperty(NodetypeConstant.DC_TITLE).getValues()[0].getString()); } catch (javax.jcr.PathNotFoundException pne) { getUIStringInput(org.exoplatform.ecm.webui.component.admin.templates.clv.UICLVTemplateForm.FIELD_TITLE).setValue(templateNode.getName()); } catch (java.lang.ArrayIndexOutOfBoundsException aoe) { getUIStringInput(org.exoplatform.ecm.webui.component.admin.templates.clv.UICLVTemplateForm.FIELD_TITLE).setValue(templateNode.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1081/buggy-version/core.webui-administration.src.main.java.org.exoplatform.ecm.webui.component.admin.templates.clv.UICLVTemplateForm.java", "BodyUseAPI": ["javax.jcr.Node.getProperty(NodetypeConstant.DC_TITLE)", "org.exoplatform.ecm.webui.component.admin.templates.clv.UICLVTemplateForm.getUIStringInput(java.lang.String)", "content.getProperty(NodetypeConstant.DC_TITLE).getValues()[0].getString()", "content.getProperty(NodetypeConstant.DC_TITLE).getValues()", "getUIStringInput(org.exoplatform.ecm.webui.component.admin.templates.clv.UICLVTemplateForm.FIELD_TITLE).setValue(content.getProperty(NodetypeConstant.DC_TITLE).getValues()[0].getString())"], "Fixed commit": "35a74c96a3d4ae5cfc27ed365214292e03577810", "Url": "https://api.github.com/repos/exodev/ecms", "Date": "2013-03-11T08:21:57Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mPreviewSession.stopRepeating(); mPreviewSession.abortCaptures(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3680/buggy-version/app.src.main.java.socialcops.piyush6348.com.socialcopsproblem.fragments.Camera2VideoFragment.java", "BodyUseAPI": ["android.hardware.camera2.CameraCaptureSession.abortCaptures()", "android.hardware.camera2.CameraCaptureSession.stopRepeating()"], "Fixed commit": "366c280805f8b773ee70271f1e4f2f7d69206bc0", "Url": "https://api.github.com/repos/piyush6348/Socialcops-Problem", "Date": "2017-01-22T14:23:59Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { validationBean.getValidation().setFile(validationBean.getFileName(), validationBean.getFileName(), validationBean.readStream()); } catch (org.fenixedu.academic.domain.exceptions.DomainException e) { pt.ist.fenixWebFramework.renderers.utils.RenderUtils.invalidateViewState(); addActionMessageLiteral(request, e.getLocalizedMessage()); return forwardToInputValidationCode(mapping, actionForm, request, response, physicalAddressBean.getContact()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4263/buggy-version/src.main.java.org.fenixedu.academic.ui.struts.action.person.PartyContactsManagementDispatchAction.java", "BodyUseAPI": ["org.fenixedu.academic.dto.contacts.PhysicalAddressValidationBean.getValidation()", "org.fenixedu.academic.dto.contacts.PhysicalAddressValidationBean.getFileName()", "org.fenixedu.academic.dto.contacts.PhysicalAddressValidationBean.readStream()", "validationBean.getValidation().setFile(validationBean.getFileName(),validationBean.getFileName(),validationBean.readStream())", "org.fenixedu.academic.dto.contacts.PhysicalAddressValidationBean.getFileName()"], "Fixed commit": "2f712298260d8d8dbea0103c787120427f2dc126", "Url": "https://api.github.com/repos/gil-l/fenix", "Date": "2017-08-28T10:25:10Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { projectList = gson.fromJson(reader, fi.helsinki.cs.tmc.core.storage.formats.ProjectsFileFormat.class); } finally { try { reader.close(); } catch (java.io.IOException e) { return projectList.getProjects(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3726/buggy-version/plugin-core.src.main.java.fi.helsinki.cs.tmc.core.storage.ProjectStorage.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.io.Reader,java.lang.Class)"], "Fixed commit": "c5ca45ceb9e2a9ac3463dcb53c5aa5b42f92fa05", "Url": "https://api.github.com/repos/tmc-eclipse/tmc-eclipse", "Date": "2014-06-24T12:25:02Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { questionNum = new java.lang.Integer(((java.lang.String) (request.getParameter(\"questionNum\")))); } catch (java.lang.NumberFormatException e) { session.setAttribute(\"multiQuiz\", null); request.getRequestDispatcher(\"take_multi_page_quiz.jsp\").forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/602/buggy-version/src.servlets.MultiQuizServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "3a2062fb5e665285273fd0b208f43edb35a459a0", "Url": "https://api.github.com/repos/billdriscoll22/108project", "Date": "2013-03-13T22:41:12Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.program.applySettings(); } catch (nappydevelopment.nappy_the_ingenious.exception.ChangeLanguageException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8515/buggy-version/src.main.java.nappydevelopment.nappy_the_ingenious.gui.settingsStage.SettingsStageController.java", "BodyUseAPI": ["nappydevelopment.nappy_the_ingenious.Program.applySettings()"], "Fixed commit": "d59bd18658c4cd8b90ea8508115a5d1682a6e2df", "Url": "https://api.github.com/repos/nappydevelopment/Nappy-the-ingenious", "Date": "2016-05-02T14:00:17Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { addressBook = AddressBookProtos.AddressBook.parseFrom(new java.io.FileInputStream(path.toFile())); } catch (java.io.IOException cause) { output.println(((path.toString()) + \" : path does not exist. Exiting\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/710/buggy-version/Google-Protoc.src.main.java.com.shashi.protoc.ProtoUtil.java", "BodyUseAPI": ["AddressBookProtos.AddressBook.parseFrom(java.io.FileInputStream)", "java.nio.file.Path.toFile()"], "Fixed commit": "a0f83b928e3beb25e22ed20a149bc9561f8506a1", "Url": "https://api.github.com/repos/Shashi-Bhushan/General", "Date": "2015-12-31T12:38:56Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { iconURL = java.net.URLDecoder.decode(iconURL, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4665/buggy-version/src.org.wordpress.android.GCMIntentService.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "c3284a7dc4e28aff54852d8d19dc44220234e6ae", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2013-05-10T20:58:33Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { poet = po.getType().getEffectType(); } catch (java.lang.Exception e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2650/buggy-version/src.tsuttsu305.Main.Event.java", "BodyUseAPI": ["po.getType().getEffectType()", "org.bukkit.potion.Potion.getType()"], "Fixed commit": "cb385500755562c3a9d000153555ec5631eac17a", "Url": "https://api.github.com/repos/tsuttsu305/AntiInvisibilityPotion", "Date": "2012-11-04T13:43:06Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { ensureNotStopped(); state = pl.edu.agh.ki.grieg.io.StreamSampleEnumerator.PlaybackState.PAUSED; } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3206/buggy-version/Grieg.src.pl.edu.agh.ki.grieg.io.StreamSampleEnumerator.java", "BodyUseAPI": ["pl.edu.agh.ki.grieg.io.StreamSampleEnumerator.ensureNotStopped()"], "Fixed commit": "10ae847fe13172446dfaf2110b9fc90932cdd1b6", "Url": "https://api.github.com/repos/marcinlos/GriegCounter", "Date": "2013-08-10T23:02:47Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { midFiles.add(edu.toronto.cs.se.mmint.mid.ui.GMFDiagramUtils.getModelIFile(diagramFile)); } catch (java.lang.Exception e) { edu.toronto.cs.se.mmint.MMINTException.print(Type.WARNING, (\"Can't add model file of MID \" + (diagramFile.getName())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6543/buggy-version/plugins.Core.edu.toronto.cs.se.mmint.diagram.src.edu.toronto.cs.se.mmint.mid.diagram.library.MIDDiagramUtils.java", "BodyUseAPI": ["edu.toronto.cs.se.mmint.mid.ui.GMFDiagramUtils.getModelIFile(org.eclipse.core.resources.IFile)", "java.util.List<org.eclipse.core.resources.IFile>.add(edu.toronto.cs.se.mmint.mid.ui.GMFDiagramUtils.getModelIFile(diagramFile))"], "Fixed commit": "75b32cb81b355991a4e6531200067a9c9ba5d10f", "Url": "https://api.github.com/repos/adisandro/MMINT", "Date": "2014-11-16T20:26:32Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { runCollectorForTopicDir(fs, topicName, new org.apache.hadoop.fs.Path(topic.getPath(), sourceSubdir), destinationPath); } catch (java.lang.Exception e) { java.lang.System.err.println(((\"unable to process \" + topicName) + \" skipping...\")); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/587/buggy-version/camus-sweeper.src.main.java.com.linkedin.camus.sweeper.CamusSweeper.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileStatus.getPath()", "com.linkedin.camus.sweeper.CamusSweeper.runCollectorForTopicDir(org.apache.hadoop.fs.FileSystem,java.lang.String,org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)"], "Fixed commit": "c87b3b4175bd7c5e24a135ac9c33ce2cf128f0cd", "Url": "https://api.github.com/repos/strongh/camus", "Date": "2014-01-17T20:47:33Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { aClass = cc.loadFromJava(((net.openhft.fix.include.v42.FixMessageType.class.getName()) + \"$$Native\"), actual); net.openhft.fix.include.v42.FixMessageType fmt = aClass.asSubclass(net.openhft.fix.include.v42.FixMessageType.class).newInstance(); net.openhft.lang.io.Bytes bytes = new net.openhft.lang.io.ByteBufferBytes(java.nio.ByteBuffer.allocate((1024 * 1024))); ((net.openhft.lang.model.Byteable) (fmt)).bytes(bytes, 0L); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2481/buggy-version/src.main.java.net.openhft.fix.include.util.FixConfig.java", "BodyUseAPI": ["net.openhft.fix.include.v42.FixMessageType.bytes(net.openhft.lang.io.Bytes,long)", "java.lang.Class<? extends net.openhft.fix.include.v42.FixMessageType>.newInstance()", "net.openhft.compiler.CachedCompiler.loadFromJava(java.lang.String,java.lang.String)", "java.nio.ByteBuffer.allocate(int)", "java.lang.Class.getName()", "java.lang.Class<?>.asSubclass(java.lang.Class)"], "Fixed commit": "aed7a757dc11ef14992cf2d25a4dcd45bf6f2cdd", "Url": "https://api.github.com/repos/peter-lawrey/TransFIX", "Date": "2015-10-10T10:54:51Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fileEntity.setName(results.getList().get(0).getFileName()); fileEntity = client.putEntity(fileEntity); } catch (java.lang.Throwable t) { fileEntity.setName(originalFileEntityName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9127/buggy-version/src.main.java.org.sagebionetworks.web.server.servlet.FileHandleServlet.java", "BodyUseAPI": ["org.sagebionetworks.client.Synapse.putEntity(org.sagebionetworks.repo.model.FileEntity)", "results.getList().get(0).getFileName()", "org.sagebionetworks.repo.model.file.FileHandleResults.getList()", "org.sagebionetworks.repo.model.FileEntity.setName(results.getList().get(0).getFileName())", "results.getList().get(int)"], "Fixed commit": "670b6808a2bd365670e5a41e5c6682e0de57ca3a", "Url": "https://api.github.com/repos/dburdick/SynapseWebClient", "Date": "2013-03-05T18:56:09Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { encryptedMatcherResponse = newMatcherResponse(payload); } catch (java.security.NoSuchAlgorithmException e) { throw new org.multibit.hd.brit_server.resources.WebApplicationException(Response.Status.INTERNAL_SERVER_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1026/buggy-version/src.main.java.org.multibit.hd.brit_server.resources.PublicBritResource.java", "BodyUseAPI": ["org.multibit.hd.brit_server.resources.PublicBritResource.newMatcherResponse(byte[])"], "Fixed commit": "69b4df704d5348509585e752b35554553c971a26", "Url": "https://api.github.com/repos/keepkey/brit-service", "Date": "2015-07-02T20:24:00Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(2000); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1330/buggy-version/Stuyablo.1.1-Group.Character.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "528fc86bf9415086a168c0768c607e963b26d821", "Url": "https://api.github.com/repos/stuycs-apcs-z/classwork", "Date": "2013-11-05T12:56:26Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(2000); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1330/buggy-version/Stuyablo.1.1-Group.Character.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "528fc86bf9415086a168c0768c607e963b26d821", "Url": "https://api.github.com/repos/stuycs-apcs-z/classwork", "Date": "2013-11-05T12:56:26Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(2000); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1330/buggy-version/Stuyablo.1.1-Group.Character.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "528fc86bf9415086a168c0768c607e963b26d821", "Url": "https://api.github.com/repos/stuycs-apcs-z/classwork", "Date": "2013-11-05T12:56:26Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Object o = player.getMetadata(\"ucars.smooth\").get(0).value(); if (o instanceof com.useful.ucars.SmoothMeta) { smooth = ((com.useful.ucars.SmoothMeta) (o)); }else { smooth = new com.useful.ucars.SmoothMeta(accMod); player.setMetadata(\"ucars.smooth\", new com.useful.ucarsCommon.StatValue(smooth, ucars.plugin)); } } catch (java.lang.Exception e) { smooth = new com.useful.ucars.SmoothMeta(accMod); player.setMetadata(\"ucars.smooth\", new com.useful.ucarsCommon.StatValue(smooth, ucars.plugin)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8472/buggy-version/src.main.java.com.useful.ucars.ControlInput.java", "BodyUseAPI": ["player.getMetadata(\"ucars.smooth\").get(0).value()", "org.bukkit.entity.Player.getMetadata(java.lang.String)", "player.getMetadata(\"ucars.smooth\").get(int)", "org.bukkit.entity.Player.setMetadata(java.lang.String,com.useful.ucarsCommon.StatValue)"], "Fixed commit": "8c0633d28341cc183b5c37cb87b7b5b584ff1805", "Url": "https://api.github.com/repos/storm345dev/ucars", "Date": "2015-05-05T12:15:13Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return methodInvocation.proceed(); } finally { _shardAdvice.popCompanyService(); com.liferay.portal.kernel.dao.shard.ShardUtil.setTargetSource(currentShardName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8972/buggy-version/portal-impl.src.com.liferay.portal.dao.shard.advice.ShardPersistenceAdvice.java", "BodyUseAPI": ["org.aopalliance.intercept.MethodInvocation.proceed()"], "Fixed commit": "dece5f36c6dc5583652cef37e58ad8e2bc11f4dc", "Url": "https://api.github.com/repos/Liferay-Patchers-Community/liferay-portal", "Date": "2014-02-20T02:45:33Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { onOverflow.call(); } catch (java.lang.Throwable e) { rx.exceptions.Exceptions.throwIfFatal(e); manager.terminateAndDrain(e); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7663/buggy-version/src.main.java.rx.internal.operators.OperatorOnBackpressureBuffer.java", "BodyUseAPI": ["rx.functions.Action0.call()"], "Fixed commit": "97c07db54b2f27eda6f7e01c96a3fc2a92c023d2", "Url": "https://api.github.com/repos/davidmoten/RxJava", "Date": "2016-01-23T10:30:50Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { safeListener.onDoneReceive(AsyncReport.CANCELED); } finally { listenerRef.unregister(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1929/buggy-version/jtrim-async.src.main.java.org.jtrim.concurrent.async.io.AsyncChannelLink.java", "BodyUseAPI": ["org.jtrim.concurrent.async.io.AsyncDataListener<DataType>.onDoneReceive(AsyncReport.CANCELED)"], "Fixed commit": "6d1683e07be1d1f12ab87e3c222d91698b111160", "Url": "https://api.github.com/repos/kelemen/JTrim", "Date": "2012-07-17T21:05:56Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { double porcentajeVidaGoku = proveedorVidaAliados.obtenerPorcentajeDeVidaDelPersonaje(Goku.identificador); double porcentajeVidaPiccolo = proveedorVidaAliados.obtenerPorcentajeDeVidaDelPersonaje(Piccolo.identificador); return ((porcentajeVidaGoku < (porcentajeVidaAliadosMinimoParaTransformar)) && (porcentajeVidaPiccolo < (porcentajeVidaAliadosMinimoParaTransformar))) && ((proveedorDeKi.getKi()) >= (kiParaTransformar)); } catch (java.lang.NullPointerException e) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3271/buggy-version/DragonAlgoBall.src.dab.estados.gohan.GohanSuperSayajinFase1.java", "BodyUseAPI": ["dab.interfaces.IProveedorDeVidaDePersonajes.obtenerPorcentajeDeVidaDelPersonaje(Goku.identificador)", "dab.interfaces.IProveedorDeVidaDePersonajes.obtenerPorcentajeDeVidaDelPersonaje(Piccolo.identificador)", "dab.estados.gohan.GohanSuperSayajinFase1.getKi()"], "Fixed commit": "8283dae70604b6763e5fbf8df29be307c7b1bd62", "Url": "https://api.github.com/repos/ventrick/algo3", "Date": "2017-06-27T00:59:59Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((this.conn) == null) this.conn = this.getDBConnection(null, false); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9244/buggy-version/src.main.java.dk.frv.eavdam.io.derby.DerbyDBInterface.java", "BodyUseAPI": ["dk.frv.eavdam.io.derby.DerbyDBInterface.getDBConnection(<nulltype>,boolean)"], "Fixed commit": "5a742700999b8cd221f41166d7165325eae7cd53", "Url": "https://api.github.com/repos/dma-graveyard/EAVDAM", "Date": "2011-10-13T13:17:41Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mmrnmhrm.core.DeeCorePreferences.putDubBuildOptions(project, dubBuildExtraOptions.getFieldValue()); } catch (org.osgi.service.prefs.BackingStoreException e) { melnorme.lang.ide.ui.utils.UIOperationExceptionHandler.handleException(e, \"Error saving preferences.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8025/buggy-version/plugin_ide.ui.src.mmrnmhrm.ui.preferences.DubProjectOptionsBlock.java", "BodyUseAPI": ["mmrnmhrm.core.DeeCorePreferences.putDubBuildOptions(org.eclipse.core.resources.IProject,dubBuildExtraOptions.getFieldValue())", "melnorme.util.swt.components.fields.TextField.getFieldValue()"], "Fixed commit": "df8f644341e550c72b6f2cffdea2260625b3c10f", "Url": "https://api.github.com/repos/bruno-medeiros/DDT", "Date": "2014-08-01T19:32:53Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { wrap.lock(timeout); } catch (railo.commons.lock.LockException e) { synchronized(locks) { wrap.getLock().dec(); } throw e; } catch (railo.commons.lock.LockInterruptedException e) { synchronized(locks) { wrap.getLock().dec(); } throw e; } catch (java.lang.Throwable t) { synchronized(locks) { wrap.getLock().dec(); } throw new railo.runtime.exp.PageRuntimeException(railo.runtime.op.Caster.toPageException(t)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4566/buggy-version/railo-java.railo-core.src.railo.commons.lock.rw.RWKeyLock.java", "BodyUseAPI": ["railo.commons.lock.rw.RWWrap<K>.lock(long)"], "Fixed commit": "85b71816d218d6648cf76b641a79d847c3f326fb", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-12-23T09:24:45Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return reader.readValue(io.github.lumue.getdown.core.common.util.JsonUtil.JSON_FACTORY.createParser(input)); } catch (java.io.IOException e) { throw new java.lang.RuntimeException((\"error creating json parser for \" + input)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3805/buggy-version/getdown-core.src.main.java.io.github.lumue.getdown.core.common.util.JsonUtil.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.ObjectReader.readValue(io.github.lumue.getdown.core.common.util.JsonUtil.JSON_FACTORY.createParser(input))", "com.fasterxml.jackson.core.JsonFactory.createParser(java.lang.String)"], "Fixed commit": "8907ba68fd41d02d1f8c7768548e7d9288498807", "Url": "https://api.github.com/repos/lumue/getdown", "Date": "2015-03-18T01:13:06Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fr.ybo.transportsrennes.TransportsRennesApplication.getDataBaseHelper().getWritableDatabase().execSQL((\"DROP TABLE Horaire_\" + (ligne.id))); } catch (android.database.sqlite.SQLiteException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8590/buggy-version/TransportsRennes.src.fr.ybo.transportsrennes.keolis.gtfs.UpdateDataBase.java", "BodyUseAPI": ["fr.ybo.transportsrennes.TransportsRennesApplication.getDataBaseHelper()", "fr.ybo.transportsrennes.TransportsRennesApplication.getDataBaseHelper().getWritableDatabase()", "fr.ybo.transportsrennes.TransportsRennesApplication.getDataBaseHelper().getWritableDatabase().execSQL((\"DROP TABLE Horaire_\" + (ligne.id)))"], "Fixed commit": "0d2c829e773bd20fd233bdf8923804beb43d4203", "Url": "https://api.github.com/repos/ybonnel/TransportsRennes", "Date": "2011-06-07T14:13:54Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.onAction(inAction); } catch (java.lang.Exception exGeneral) { this.onError(exGeneral); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2294/buggy-version/fluxjava-rx.src.main.java.io.wzcodes.fluxjava.rx.RxStore.java", "BodyUseAPI": ["io.wzcodes.fluxjava.rx.RxStore.onAction(io.wzcodes.fluxjava.IFluxAction)"], "Fixed commit": "f175dca2432725451de01645eb21d75b83fe7059", "Url": "https://api.github.com/repos/winzillion/FluxJava", "Date": "2017-11-10T14:15:40Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { item.title = dataItem.getJSONObject(\"caption\").getString(\"text\"); } catch (org.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1134/buggy-version/app.src.main.java.com.socialcast.activities.InstagramFeedFragment.java", "BodyUseAPI": ["dataItem.getJSONObject(\"caption\").getString(java.lang.String)", "org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "e9410e630cc89a324b1da46a06310b50227dac20", "Url": "https://api.github.com/repos/sdarisi/SocialCast", "Date": "2015-10-25T11:51:05Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (android.support.v4.app.Fragment frag : fragments) { getActivity().getSupportFragmentManager().beginTransaction().remove(frag).commit(); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8872/buggy-version/src.com.cst.sdcalendar.fragment.BaseCalendarFragment.java", "BodyUseAPI": ["getActivity().getSupportFragmentManager()", "getActivity().getSupportFragmentManager().beginTransaction().remove(android.support.v4.app.Fragment)", "getActivity().getSupportFragmentManager().beginTransaction().remove(frag).commit()", "com.cst.sdcalendar.fragment.BaseCalendarFragment.getActivity()", "getActivity().getSupportFragmentManager().beginTransaction()"], "Fixed commit": "8d14ab202203f1231668ad1c40a97679bb53c808", "Url": "https://api.github.com/repos/MonsterStorm/SDCalendar", "Date": "2014-05-13T16:13:18Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final java.lang.String songUrl = SongForYou.SongForYouSpeechlet.getSongUrl(songName); } catch (java.lang.Exception ex) { com.amazon.speech.ui.PlainTextOutputSpeech outputSpeech = new com.amazon.speech.ui.PlainTextOutputSpeech(); outputSpeech.setText((\"Cannot find the song named \" + songName)); return SongForYou.SpeechletResponse.newTellResponse(outputSpeech); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3137/buggy-version/samples.src.main.java.SongForYou.SongForYouSpeechlet.java", "BodyUseAPI": ["SongForYou.SongForYouSpeechlet.getSongUrl(java.lang.String)"], "Fixed commit": "415ea45c2d355905e278c1dc53f6f24b536d3390", "Url": "https://api.github.com/repos/susanxie123/alexa-skills-kit-java", "Date": "2017-10-06T01:57:56Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8860/buggy-version/rainbow-evaluate.src.main.java.cn.edu.ruc.iir.rainbow.eva.PrestoEvaluator.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "9672a947920a704d53bcd957a27128d258d3a87b", "Url": "https://api.github.com/repos/bianhq/rainbow", "Date": "2017-09-30T17:17:36Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { esql.executeQueryAndPrintResult((\"SELECT destination, COUNT(*) FROM Flight GROUP BY destination ORDER BY COUNT(*) DESC LIMIT \" + numDests)); } catch (java.sql.SQLException e) { java.lang.System.out.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1535/buggy-version/code.java.src.AirBooking.java", "BodyUseAPI": ["AirBooking.executeQueryAndPrintResult(java.lang.String)"], "Fixed commit": "c0e26dd36e738d71b2e34e5bbacd527546d6ea1d", "Url": "https://api.github.com/repos/pgior001/CS166Project", "Date": "2017-12-13T04:27:27Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { gameType = (gameJson.isNull(\"type\")) ? Game.GameType.DEFAULT : Game.GameType.fromKey(java.lang.Integer.parseInt(gameJson.get(\"type\").toString())); } catch (java.lang.NumberFormatException e) { gameType = Game.GameType.DEFAULT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7954/buggy-version/src.main.java.net.dv8tion.jda.handle.EntityBuilder.java", "BodyUseAPI": ["org.json.JSONObject.get(java.lang.String)", "org.json.JSONObject.isNull(java.lang.String)", "gameJson.get(\"type\").toString()", "java.lang.Integer.parseInt(gameJson.get(\"type\").toString())", "Game.GameType.fromKey(int)"], "Fixed commit": "df7ce16edd9eea51d658f657b39595d2df31ed14", "Url": "https://api.github.com/repos/DV8FromTheWorld/JDA", "Date": "2016-10-15T22:40:07Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { buf.writeNBTTagCompoundToBuffer(this.data); } catch (java.lang.Exception ioex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/179/buggy-version/src.main.java.clashsoft.mods.cshud.network.PacketTEData.java", "BodyUseAPI": ["net.minecraft.network.PacketBuffer.writeNBTTagCompoundToBuffer(net.minecraft.nbt.NBTTagCompound)"], "Fixed commit": "94a870de1046ef4b2e56af8610e3f6367bd7b825", "Url": "https://api.github.com/repos/Clashsoft/Clashsoft-HUD", "Date": "2014-06-03T21:20:05Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.data = buf.readNBTTagCompoundFromBuffer(); } catch (java.lang.Exception ioex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/179/buggy-version/src.main.java.clashsoft.mods.cshud.network.PacketTEData.java", "BodyUseAPI": ["net.minecraft.network.PacketBuffer.readNBTTagCompoundFromBuffer()"], "Fixed commit": "94a870de1046ef4b2e56af8610e3f6367bd7b825", "Url": "https://api.github.com/repos/Clashsoft/Clashsoft-HUD", "Date": "2014-06-03T21:20:05Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Class.forName(\"org.sqlite.JDBC\"); con = java.sql.DriverManager.getConnection(DB_AUTHORITY); stat = con.createStatement(); return stat.executeQuery(queryZip_code).next(); } catch (java.lang.ClassNotFoundException e) { e.printStackTrace(); } catch (java.sql.SQLException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4993/buggy-version/src.sql.SqlHelper.java", "BodyUseAPI": ["java.sql.Connection.createStatement()", "java.sql.DriverManager.getConnection(java.lang.String)", "java.lang.Class.forName(java.lang.String)", "java.sql.ResultSet.next()", "java.sql.Statement.executeQuery(java.lang.String)"], "Fixed commit": "e3b51f7eaebac0c3a9f8e8f19cd664eb7020941a", "Url": "https://api.github.com/repos/RyRose/weather-application-project-4", "Date": "2015-04-06T04:25:55Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { node.getNode(\"format\").setValue(com.google.common.reflect.TypeToken.of(org.spongepowered.api.text.TextTemplate.class), template); } catch (ninja.leaping.configurate.objectmapping.ObjectMappingException e) { me.Wundero.ProjectRay.utils.Utils.printError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6124/buggy-version/ProjectRay.src.me.Wundero.ProjectRay.config.Template.java", "BodyUseAPI": ["ninja.leaping.configurate.ConfigurationNode.getNode(java.lang.String)", "node.getNode(\"format\").setValue(com.google.common.reflect.TypeToken.of(org.spongepowered.api.text.TextTemplate.class),org.spongepowered.api.text.TextTemplate)", "com.google.common.reflect.TypeToken.of(java.lang.Class)"], "Fixed commit": "6d4cd3f6a6d652469f405632c866c8fb296af5b9", "Url": "https://api.github.com/repos/Wundero/Ray", "Date": "2016-07-19T16:21:53Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new android.os.AsyncTask<java.lang.Void, java.lang.Void, java.lang.Void>() { @java.lang.Override protected java.lang.Void doInBackground(java.lang.Void... voids) { android.graphics.Bitmap bitmap = imageRetriever.getImage(frameIdsStore.getUid(), frameId, true); synchronized(cachedImages) { cachedImages.put(cachedImageKey, bitmap); } return null; } @java.lang.Override protected void onPostExecute(java.lang.Void aVoid) { notifier.askForNotifyDataSetChanged(); } }.execute(); } catch (java.util.concurrent.RejectedExecutionException e) { new java.lang.Thread(new java.lang.Runnable() { @java.lang.Override public void run() { try { java.lang.Thread.sleep(3000); } catch (java.lang.InterruptedException e) { } ((android.app.Activity) (context)).runOnUiThread(new java.lang.Runnable() { public void run() { notifier.askForNotifyDataSetChanged(); } }); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/9096/buggy-version/src.com.dedaulus.cinematty.activities.adapters.FramePreviewItemAdapter.java", "BodyUseAPI": ["com.dedaulus.cinematty.framework.tools.IdleDataSetChangeNotifier.askForNotifyDataSetChanged()", "com.dedaulus.cinematty.framework.FrameImageRetriever.getImage(frameIdsStore.getUid(),int,boolean)", "android.os.AsyncTask<java.lang.Void, java.lang.Void, java.lang.Void>.execute()", "java.util.Map<android.util.Pair<java.lang.String, java.lang.Integer>, android.graphics.Bitmap>.put(android.util.Pair<java.lang.String, java.lang.Integer>,android.graphics.Bitmap)", "com.dedaulus.cinematty.framework.MovieFrameIdsStore.getUid()"], "Fixed commit": "14968e806e9a89d9270f9ffd0034db094e2a6f26", "Url": "https://api.github.com/repos/Dedaulus/Cinematty", "Date": "2012-04-07T00:44:18Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dataRows.add(edu.gatech.earthquakes.components.Importer.readQuake(data)); } catch (java.lang.ArrayIndexOutOfBoundsException aiobe) { java.lang.System.out.println(line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3552/buggy-version/src.edu.gatech.earthquakes.components.Importer.java", "BodyUseAPI": ["edu.gatech.earthquakes.components.Importer.readQuake(java.lang.String[])", "java.util.Set<edu.gatech.earthquakes.model.DataRow>.add(edu.gatech.earthquakes.model.DataRow)"], "Fixed commit": "b614e452ead5ebfc1cad95497726e66151416c3c", "Url": "https://api.github.com/repos/ejohnson44/QuakesInOurMain", "Date": "2012-11-08T15:28:34Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((allBlocks) != null) { for (cs.vt.analysis.analyzer.nodes.Block block : allBlocks) { allBlock.add(block.getArgs(0).toString()); } } for (java.lang.String blockCommand : blockRelatedCommands) { java.util.ArrayList<cs.vt.analysis.analyzer.nodes.Block> varBlocks = cs.vt.analysis.select.Collector.collect(new cs.vt.analysis.select.Evaluator.BlockCommand(blockCommand), project); for (cs.vt.analysis.analyzer.nodes.Block block : varBlocks) { java.lang.String temp = block.getBlockType().getSpec().toString(); if (allBlock.contains(temp)) { allBlock.remove(temp); } } } } catch (java.lang.Exception e) { throw new cs.vt.analysis.analyzer.analysis.AnalysisException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2224/buggy-version/src.main.java.cs.vt.analysis.analyzer.analysis.UnusedBlockAnalyzer.java", "BodyUseAPI": ["block.getBlockType().getSpec()", "cs.vt.analysis.analyzer.nodes.Block.getArgs(int)", "cs.vt.analysis.select.Collector.collect(cs.vt.analysis.select.Evaluator.BlockCommand,cs.vt.analysis.analyzer.analysis.UnusedBlockAnalyzer)", "java.util.HashSet<java.lang.String>.contains(java.lang.String)", "java.util.HashSet<java.lang.String>.add(block.getArgs(0).toString())", "block.getBlockType().getSpec().toString()", "java.util.HashSet<java.lang.String>.remove(java.lang.String)", "block.getArgs(0).toString()", "cs.vt.analysis.analyzer.nodes.Block.getBlockType()"], "Fixed commit": "944688cec917dcbbdc53b5621f37e2a479ac0371", "Url": "https://api.github.com/repos/peeratham/dataset-analyzer", "Date": "2016-04-24T02:58:43Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { saveStatu(statu); } catch (java.lang.Exception e) { com.cesar.twitter.util.CommonUtil.log(((((file.getAbsolutePath()) + \" id=\") + (statu.getId())) + \" err\")); com.cesar.twitter.util.CommonUtil.log(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8625/buggy-version/src.com.cesar.twitter.service.ParseMainService.java", "BodyUseAPI": ["com.cesar.twitter.service.ParseMainService.saveStatu(com.cesar.twitter.bean.Statu)"], "Fixed commit": "45cd8f66d3fcc437f5fdf2a386cb68f11d43bd63", "Url": "https://api.github.com/repos/Cesar456/TwitterXmlParser", "Date": "2016-04-16T01:29:57Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.content.Intent checkTTS = new android.content.Intent(); checkTTS.setAction(TextToSpeech.Engine.ACTION_CHECK_TTS_DATA); startActivityForResult(checkTTS, MY_DATA_CHECK_CODE); } catch (android.content.ActivityNotFoundException e) { android.widget.Toast.makeText(getApplicationContext(), getResources().getString(R.string.tts_not_setup), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8409/buggy-version/app.src.main.java.app.cap.ajm.MainActivity.java", "BodyUseAPI": ["android.content.Intent.setAction(TextToSpeech.Engine.ACTION_CHECK_TTS_DATA)", "app.cap.ajm.MainActivity.startActivityForResult(android.content.Intent,int)"], "Fixed commit": "02ea5449ce3ca4006d713a45ee9bf79eacd9a316", "Url": "https://api.github.com/repos/SeongJaeMoon/AJM", "Date": "2017-12-26T05:20:53Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { strBuilder.append(org.thymeleaf.util.DOMUtils.escapeXml(displayString, true)); } catch (final java.io.IOException e) { throw new org.thymeleaf.exceptions.TemplateProcessingException(\"Exception while trying to escape Spring error message\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/158/buggy-version/src.main.java.org.thymeleaf.spring3.processor.attr.SpringErrorsAttrProcessor.java", "BodyUseAPI": ["java.lang.StringBuilder.append(org.thymeleaf.util.DOMUtils.escapeXml(displayString, true))", "org.thymeleaf.util.DOMUtils.escapeXml(java.lang.String,boolean)"], "Fixed commit": "bb96c8073ca26a404a1fd753f54032531e96e393", "Url": "https://api.github.com/repos/thymeleaf/thymeleaf-spring3", "Date": "2013-06-08T23:23:36Z"},
{"Line": "=>858", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { net.ftb.data.Settings.getSettings().setLastThirdPartyPack(net.ftb.data.ModPack.getSelectedPack(false).getDir()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7698/buggy-version/src.main.java.net.ftb.gui.LaunchFrame.java", "BodyUseAPI": ["net.ftb.data.Settings.getSettings()", "net.ftb.data.ModPack.getSelectedPack(false).getDir()", "net.ftb.data.Settings.getSettings().setLastThirdPartyPack(net.ftb.data.ModPack.getSelectedPack(false).getDir())", "net.ftb.data.ModPack.getSelectedPack(boolean)"], "Fixed commit": "148044e1f71e29901e0bf0b3bdb9b018b887e079", "Url": "https://api.github.com/repos/Slowpoke101/FTBLaunch", "Date": "2015-01-23T02:50:42Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { parQuantity = java.lang.Integer.parseInt(rs.getString((\"outQuant\" + i))); } catch (java.lang.NumberFormatException e) { parQuantity = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3849/buggy-version/Database.Polycraft.src.databasehandler.DatabaseHandler.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "39e4d16e8576a41769506ad5761a3b8866caacc8", "Url": "https://api.github.com/repos/CPVazquez/3354-MEK-TEK", "Date": "2017-12-01T02:58:20Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { childQuantity.add(java.lang.Integer.parseInt(rs.getString(\"inQuant1\"))); } catch (java.lang.NumberFormatException e1) { childQuantity.add(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3849/buggy-version/Database.Polycraft.src.databasehandler.DatabaseHandler.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.add(int)", "java.lang.Integer.parseInt(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "39e4d16e8576a41769506ad5761a3b8866caacc8", "Url": "https://api.github.com/repos/CPVazquez/3354-MEK-TEK", "Date": "2017-12-01T02:58:20Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName()); } catch (java.lang.ClassNotFoundException | java.lang.InstantiationException | java.lang.IllegalAccessException | javax.swing.UnsupportedLookAndFeelException e2) { e2.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4906/buggy-version/DistributedCAHClient.src.ui.ClientGUI.java", "BodyUseAPI": ["javax.swing.UIManager.setLookAndFeel(java.lang.String)", "javax.swing.UIManager.getSystemLookAndFeelClassName()"], "Fixed commit": "fd3844926e47ab8dfec8776eff6b5376e10e3e97", "Url": "https://api.github.com/repos/SilasBerger/distributed-cards-against-humanity", "Date": "2016-10-16T18:30:34Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.File file = ((me.ccrama.redditslide.Reddit) (getApplicationContext())).getImageLoader().getDiscCache().get(imageUri); i.setImage(me.ccrama.redditslide.Views.ImageSource.uri(file.getAbsoluteFile().getAbsolutePath())); } catch (java.lang.Exception e) { i.setImage(me.ccrama.redditslide.Views.ImageSource.bitmap(loadedImage)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2871/buggy-version/app.src.main.java.me.ccrama.redditslide.Activities.MediaView.java", "BodyUseAPI": ["((me.ccrama.redditslide.Reddit) (getApplicationContext())).getImageLoader()", "me.ccrama.redditslide.Views.ImageSource.uri(java.lang.String)", "me.ccrama.redditslide.Activities.MediaView.7.getApplicationContext()", "me.ccrama.redditslide.Views.SubsamplingScaleImageView.setImage(me.ccrama.redditslide.Views.ImageSource.uri(file.getAbsoluteFile().getAbsolutePath()))", "java.io.File.getAbsoluteFile()", "((me.ccrama.redditslide.Reddit) (getApplicationContext())).getImageLoader().getDiscCache().get(java.lang.String)", "java.io.File.getAbsolutePath()", "((me.ccrama.redditslide.Reddit) (getApplicationContext())).getImageLoader().getDiscCache()"], "Fixed commit": "b991f2db207feface7f9d50d2ba47b9bbabc2ebd", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-03-22T21:09:26Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.example.nejcvesel.pazikjehodis.MainActivity.authToken = at.getToken().toString(); } catch (java.lang.Exception e) { com.example.nejcvesel.pazikjehodis.MainActivity.authToken = null; java.lang.System.out.print(\"NOT LOGGED!!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1184/buggy-version/app.src.main.java.com.example.nejcvesel.pazikjehodis.MainActivity.java", "BodyUseAPI": ["at.getToken().toString()", "com.facebook.AccessToken.getToken()"], "Fixed commit": "f1ed00988365d6ef0a9f4477ff25812b4786fdfd", "Url": "https://api.github.com/repos/Osebek/AndroidTest", "Date": "2017-03-02T21:37:16Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { cache = new net.spy.memcached.MemcachedClient(new java.net.InetSocketAddress(\"127.0.0.1\", 11211)); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1432/buggy-version/src.main.java.MonitorServlet.java", "BodyUseAPI": [], "Fixed commit": "d03722ba49c10bc2b65e090923c12ccbf03a8676", "Url": "https://api.github.com/repos/PATHyank/Price-Monitor-Server", "Date": "2017-06-13T20:58:21Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { _avoidCheckPathSelection = true; addSelectionPath(temp.getParentPath()); } finally { _avoidCheckPathSelection = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4605/buggy-version/src.com.jidesoft.swing.CheckBoxTreeSelectionModel.java", "BodyUseAPI": ["com.jidesoft.swing.CheckBoxTreeSelectionModel.addSelectionPath(javax.swing.tree.TreePath)", "javax.swing.tree.TreePath.getParentPath()"], "Fixed commit": "e261e994e2b11a3b5edf52181d106e4ceb863cf6", "Url": "https://api.github.com/repos/jidesoft/jide-oss", "Date": "2013-06-12T22:32:14Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { entityManager.persist(t); entityManager.getTransaction().commit(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8451/buggy-version/src.main.java.com.ilids.repository.impl.GenericRepositoryImpl.java", "BodyUseAPI": ["entityManager.getTransaction().commit()", "javax.persistence.EntityManager.getTransaction()", "javax.persistence.EntityManager.persist(T)"], "Fixed commit": "fa1cd51d98af5561314c60ce612329ac00b1ee74", "Url": "https://api.github.com/repos/cirakas/ilids", "Date": "2014-12-11T04:36:10Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ts = entityManager.merge(t); entityManager.getTransaction().commit(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8451/buggy-version/src.main.java.com.ilids.repository.impl.GenericRepositoryImpl.java", "BodyUseAPI": ["javax.persistence.EntityManager.getTransaction()", "entityManager.getTransaction().commit()", "javax.persistence.EntityManager.merge(T)"], "Fixed commit": "fa1cd51d98af5561314c60ce612329ac00b1ee74", "Url": "https://api.github.com/repos/cirakas/ilids", "Date": "2014-12-11T04:36:10Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { entityManager.remove(t); entityManager.getTransaction().commit(); } catch (java.lang.Exception e) { entityManager.getTransaction().rollback(); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8451/buggy-version/src.main.java.com.ilids.repository.impl.GenericRepositoryImpl.java", "BodyUseAPI": ["entityManager.getTransaction().commit()", "javax.persistence.EntityManager.remove(T)", "javax.persistence.EntityManager.getTransaction()"], "Fixed commit": "fa1cd51d98af5561314c60ce612329ac00b1ee74", "Url": "https://api.github.com/repos/cirakas/ilids", "Date": "2014-12-11T04:36:10Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { javax.persistence.Query query = entityManager.createNativeQuery(queryString); result = query.executeUpdate(); entityManager.getTransaction().commit(); } catch (java.lang.Exception e) { entityManager.getTransaction().rollback(); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8451/buggy-version/src.main.java.com.ilids.repository.impl.GenericRepositoryImpl.java", "BodyUseAPI": ["entityManager.getTransaction().commit()", "javax.persistence.Query.executeUpdate()", "javax.persistence.EntityManager.getTransaction()", "javax.persistence.EntityManager.createNativeQuery(java.lang.String)"], "Fixed commit": "fa1cd51d98af5561314c60ce612329ac00b1ee74", "Url": "https://api.github.com/repos/cirakas/ilids", "Date": "2014-12-11T04:36:10Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { createCell(1).setCellValue(testCase.getErrorLog()); } catch (java.lang.RuntimeException e) { java.lang.String s = testCase.getErrorLog(); by.epam.kronos.jenkinsApi.parser.ExcelParser.log.info((\"Some Error with STRING in ERROR LOG!!! Find The case error manualy here: \" + (testCase.getTestCaseName()))); createCell(1).setCellValue(testCase.getTestCaseName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5107/buggy-version/src.main.java.by.epam.kronos.jenkinsApi.parser.ExcelParser.java", "BodyUseAPI": ["org.apache.poi.hssf.usermodel.HSSFCell.setCellValue(testCase.getErrorLog())", "by.epam.kronos.jenkinsApi.parser.ExcelParser.createCell(int)", "by.epam.kronos.jenkinsApi.entity.TestCasesFromSuite.getErrorLog()"], "Fixed commit": "9de7d9c714bc14a8997af0db1d8882ef95581de1", "Url": "https://api.github.com/repos/AleksandrBorkun/JenkinsApi", "Date": "2017-05-24T08:31:56Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { document.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1888/buggy-version/pdfconnector.src.main.java.org.openflexo.technologyadapter.pdf.model.PDFFactory.java", "BodyUseAPI": ["org.apache.pdfbox.pdmodel.PDDocument.close()"], "Fixed commit": "df4a4f2efb2eea49a571cf0bf5311f5dd779d1c9", "Url": "https://api.github.com/repos/openflexo-team/openflexo-technology-adapters", "Date": "2016-01-12T21:29:54Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { format = plugin.getEconomy().format(amount); } catch (java.lang.Exception ex) { format = \"$\" + amount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3389/buggy-version/src.main.java.me.elsiff.morefish.listeners.RewardsGUI.java", "BodyUseAPI": ["me.elsiff.morefish.MoreFish.getEconomy()", "plugin.getEconomy().format(double)"], "Fixed commit": "6605f021f36f20133469edbc0e148d042b5e8f28", "Url": "https://api.github.com/repos/elsiff/more-fish", "Date": "2016-08-20T07:28:36Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { trackNo = java.lang.Integer.valueOf(trackNoStr.replaceAll(\"[^\\\\d.]\", \"\")); } catch (java.lang.NumberFormatException e) { com.musicbrainz.mp3.tagger.Tools.Song.log.error(((\"Track # was \" + trackNoStr) + \" , so changed it to 0\")); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5425/buggy-version/src.main.java.com.musicbrainz.mp3.tagger.Tools.Song.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "8b0f0e79b1f67546e71717260982e7173700cd14", "Url": "https://api.github.com/repos/dessalines/musicbrainz-tagger", "Date": "2015-07-30T23:38:14Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.nio.file.Files.createDirectories(dataDirectory); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/138/buggy-version/src.ContactManager.java", "BodyUseAPI": ["java.nio.file.Files.createDirectories(java.nio.file.Path)"], "Fixed commit": "d0dd8b3f97497aa052739d8432cb9aaa6811b8a1", "Url": "https://api.github.com/repos/Nichole-Abby-ContactsMngr/contacts-manager", "Date": "2017-12-06T20:49:21Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.nio.file.Files.createFile(dataFile); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/138/buggy-version/src.ContactManager.java", "BodyUseAPI": ["java.nio.file.Files.createFile(java.nio.file.Path)"], "Fixed commit": "d0dd8b3f97497aa052739d8432cb9aaa6811b8a1", "Url": "https://api.github.com/repos/Nichole-Abby-ContactsMngr/contacts-manager", "Date": "2017-12-06T20:49:21Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { guiFrequency = gui.getFrequency(); } catch (java.lang.NumberFormatException e) { gui.setFrequency(PropertyControl.DEFAULT_FREQUENCY); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3022/buggy-version/src.de.rocketscienceengineering.aws.ct.controller.ViewControl.java", "BodyUseAPI": ["de.rocketscienceengineering.aws.ct.view.AWSGUI.getFrequency()"], "Fixed commit": "8410d551e695383fdfd5cdac6941a1eb2c7d4d62", "Url": "https://api.github.com/repos/KanocX/AWS", "Date": "2014-07-07T20:32:29Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { backingModel.removePerson(target); updateBackingStorage(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2754/buggy-version/src.main.java.address.model.ModelManager.java", "BodyUseAPI": ["address.model.ModelManager.updateBackingStorage()", "address.model.datatypes.AddressBook.removePerson(address.model.datatypes.person.ReadOnlyPerson)"], "Fixed commit": "3f664a723c3a6c463da744333e235345d56f2ec5", "Url": "https://api.github.com/repos/HubTurbo/addressbook", "Date": "2016-08-02T10:28:53Z"},
{"Line": "=>680", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mPreviewSession.stopRepeating(); mPreviewSession.abortCaptures(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6356/buggy-version/Application.src.main.java.com.example.android.camera2video.Camera2VideoFragment.java", "BodyUseAPI": ["android.hardware.camera2.CameraCaptureSession.stopRepeating()", "android.hardware.camera2.CameraCaptureSession.abortCaptures()"], "Fixed commit": "77e7855d11fd8b5b4c1905fd186843671cc622ac", "Url": "https://api.github.com/repos/piyush6348/android-Camera2Video", "Date": "2017-01-27T13:48:52Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { doc = doc.substring(doc.indexOf(\"<?xml\")); } catch (final java.lang.StringIndexOutOfBoundsException e) { de.tuberlin.dima.schubotz.fse.mappers.cleaners.ArxivCleaner.LOG.warn(\"Badly formatted xml title, exiting: \", doc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/736/buggy-version/src.main.java.de.tuberlin.dima.schubotz.fse.mappers.cleaners.ArxivCleaner.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "7dcc7813702dd2f4619fa66c941105fd65c020a0", "Url": "https://api.github.com/repos/TU-Berlin/mathosphere2", "Date": "2014-09-04T00:59:49Z"},
{"Line": "=>1394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { reason = cause.getCause(); } catch (java.lang.Exception e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1133/buggy-version/src.com.amazar.plugin.AcListener.java", "BodyUseAPI": ["org.bukkit.event.entity.EntityDamageEvent.getCause()"], "Fixed commit": "244209ff4a4550b24948e17342986cbc7352bc22", "Url": "https://api.github.com/repos/storm345/ac", "Date": "2013-04-10T08:47:51Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { strategy.show(); java.awt.Toolkit.getDefaultToolkit().sync(); } catch (java.lang.IllegalStateException e) { e.printStackTrace(); _requiresRepaint = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3339/buggy-version/src.de.freiburg.uni.tablet.presenter.editor.rendering.RenderCanvas.java", "BodyUseAPI": ["java.awt.Toolkit.getDefaultToolkit()", "java.awt.Toolkit.sync()", "java.awt.image.BufferStrategy.show()"], "Fixed commit": "bcb329c47fd095951e7b6c2707c7fa973fe26fd0", "Url": "https://api.github.com/repos/voegtlel/jtabletpresenter", "Date": "2015-05-07T11:41:33Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { byte[] bytes = org.apache.commons.io.IOUtils.toByteArray(input); len = bytes.length; entity = new org.apache.http.entity.InputStreamEntity(new java.io.ByteArrayInputStream(bytes), len); } catch (java.io.IOException e) { entity = new org.apache.http.entity.InputStreamEntity(input, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6038/buggy-version/engine.src.main.java.com.msopentech.odatajclient.engine.communication.request.cud.ODataEntityCreateRequest.java", "BodyUseAPI": ["org.apache.commons.io.IOUtils.toByteArray(java.io.InputStream)"], "Fixed commit": "09507d4a55bbdcab664dc280494dae53e1653fb9", "Url": "https://api.github.com/repos/mkostin/ODataJClient", "Date": "2013-12-11T15:43:07Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return java.lang.Enum.valueOf(enumType, value.toString()); } catch (java.lang.IllegalArgumentException e) { if (enumType.getSimpleName().equals(ch.puzzle.itc.mobiliar.business.deploy.entity.DeploymentState.class.getSimpleName())) { ch.puzzle.itc.mobiliar.business.deploy.entity.DeploymentState[] deploymentStates = ((ch.puzzle.itc.mobiliar.business.deploy.entity.DeploymentState[]) (enumType.getEnumConstants())); for (ch.puzzle.itc.mobiliar.business.deploy.entity.DeploymentState deploymentState : deploymentStates) { if (deploymentState.getDisplayName().equals(value.toString())) { return deploymentState; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3655/buggy-version/AMW_business.src.main.java.ch.puzzle.itc.mobiliar.business.deploy.entity.CustomFilter.java", "BodyUseAPI": ["java.lang.Enum.valueOf(java.lang.Class<? extends java.lang.Enum>,java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "d19f6eae28cb8bc80b7fbdb85460ec4cd83905d4", "Url": "https://api.github.com/repos/liimaorg/liima", "Date": "2017-10-31T16:16:19Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((org.nschmidt.ldparteditor.composites.compositetab.CompositeTab) (t)).getTextComposite().setSelection(s); } catch (java.lang.IllegalArgumentException iae) { org.nschmidt.ldparteditor.logger.NLogger.error(org.nschmidt.ldparteditor.helpers.compositetext.AnnotatorTexmap.class, iae); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6218/buggy-version/src.org.nschmidt.ldparteditor.helpers.compositetext.AnnotatorTexmap.java", "BodyUseAPI": ["((org.nschmidt.ldparteditor.composites.compositetab.CompositeTab) (t)).getTextComposite().setSelection(org.eclipse.swt.graphics.Point)", "org.eclipse.swt.custom.CTabItem.getTextComposite()"], "Fixed commit": "e474af0fcf0e38e58e1202c98c92aa7ac2cc9369", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-04-07T10:32:37Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((org.nschmidt.ldparteditor.composites.compositetab.CompositeTab) (t)).getTextComposite().setSelection(s); } catch (java.lang.IllegalArgumentException iae) { org.nschmidt.ldparteditor.logger.NLogger.error(org.nschmidt.ldparteditor.helpers.compositetext.AnnotatorTexmap.class, iae); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6218/buggy-version/src.org.nschmidt.ldparteditor.helpers.compositetext.Annotator.java", "BodyUseAPI": ["((org.nschmidt.ldparteditor.composites.compositetab.CompositeTab) (t)).getTextComposite().setSelection(org.eclipse.swt.graphics.Point)", "org.eclipse.swt.custom.CTabItem.getTextComposite()"], "Fixed commit": "e474af0fcf0e38e58e1202c98c92aa7ac2cc9369", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-04-07T10:32:37Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (proxy != null) { org.filterinterceptor.FilterService.logger.info(\"Invoke Filter <{}>\", filter.getDescription()); java.lang.Object ret = method.invoke(proxy, args); return ret; }else { org.filterinterceptor.FilterService.logger.debug(\"Invoke real service method\"); return method.invoke(service, args); } } catch (java.lang.Throwable t) { if ((t.getCause()) != null) throw t.getCause(); else throw t; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5796/buggy-version/src.main.java.org.filterinterceptor.FilterService.java", "BodyUseAPI": ["org.filterinterceptor.spi.Filter.getDescription()", "java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])", "java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])", "org.slf4j.Logger.debug(java.lang.String)", "org.slf4j.Logger.info(java.lang.String,filter.getDescription())"], "Fixed commit": "3f79ea4e05117be5e7b4b723f201408e43591c44", "Url": "https://api.github.com/repos/antoine-aumjaud/filter-interceptor", "Date": "2012-11-06T05:35:34Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { encodedPath = java.net.URLEncoder.encode(path, \"UTF8\"); } catch (java.io.UnsupportedEncodingException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6721/buggy-version/WikipediaCleaner.src.org.wikipediacleaner.api.rest.BasicRestApiResult.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "27b12a1fb2f03e74f4e03fa6982cf0b503e34ada", "Url": "https://api.github.com/repos/WPCleaner/wpcleaner", "Date": "2017-10-18T12:51:39Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { gps_enabled = location_manager.isProviderEnabled(LocationManager.GPS_PROVIDER); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6445/buggy-version/app.src.main.java.com.llp.lunchkaki.helpers.CurrentLocation.java", "BodyUseAPI": ["android.location.LocationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)"], "Fixed commit": "4213eddd855f5c73f9b462aed4f3f75ea0ee936d", "Url": "https://api.github.com/repos/brianfwz/lkk", "Date": "2016-05-04T07:38:59Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { network_enabled = location_manager.isProviderEnabled(LocationManager.NETWORK_PROVIDER); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6445/buggy-version/app.src.main.java.com.llp.lunchkaki.helpers.CurrentLocation.java", "BodyUseAPI": ["android.location.LocationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER)"], "Fixed commit": "4213eddd855f5c73f9b462aed4f3f75ea0ee936d", "Url": "https://api.github.com/repos/brianfwz/lkk", "Date": "2016-05-04T07:38:59Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.weaverplatform.postgresql.util.FreeMarker.configuration.setSetting(\"api_builtin_enabled\", \"true\"); } catch (freemarker.template.TemplateException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4344/buggy-version/src.main.java.com.weaverplatform.postgresql.util.FreeMarker.java", "BodyUseAPI": ["freemarker.template.Configuration.setSetting(java.lang.String,java.lang.String)"], "Fixed commit": "fc4f7d30e8e95d5403356478f9265ffa24c8711d", "Url": "https://api.github.com/repos/weaverplatform/weaver-database-postgresql", "Date": "2017-12-15T10:47:55Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ntnI.answerDiscovery(ownHash, ownHash); } catch (java.rmi.RemoteException e) { failure(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6582/buggy-version/Client.src.be.uantwerpen.server.Client.java", "BodyUseAPI": ["be.uantwerpen.server.NodeToNodeInterface.answerDiscovery(int,int)"], "Fixed commit": "7da17f03e03203aaa305d77e21af12e8d848b454", "Url": "https://api.github.com/repos/kennardv/DSGroep-3", "Date": "2014-11-12T10:45:14Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.rmi.Naming.unbind(bindLocation); } catch (java.rmi.NotBoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6582/buggy-version/Client.src.be.uantwerpen.server.Client.java", "BodyUseAPI": ["java.rmi.Naming.unbind(java.lang.String)"], "Fixed commit": "7da17f03e03203aaa305d77e21af12e8d848b454", "Url": "https://api.github.com/repos/kennardv/DSGroep-3", "Date": "2014-11-12T10:45:14Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ntnI.answerDiscovery(ownHash, nextHash); } catch (java.rmi.RemoteException e) { failure(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6582/buggy-version/Client.src.be.uantwerpen.server.Client.java", "BodyUseAPI": ["be.uantwerpen.server.NodeToNodeInterface.answerDiscovery(int,int)"], "Fixed commit": "7da17f03e03203aaa305d77e21af12e8d848b454", "Url": "https://api.github.com/repos/kennardv/DSGroep-3", "Date": "2014-11-12T10:45:14Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ntnI.answerDiscovery(ownHash, nextHash); } catch (java.rmi.RemoteException e) { failure(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6582/buggy-version/Client.src.be.uantwerpen.server.Client.java", "BodyUseAPI": ["be.uantwerpen.server.NodeToNodeInterface.answerDiscovery(int,int)"], "Fixed commit": "7da17f03e03203aaa305d77e21af12e8d848b454", "Url": "https://api.github.com/repos/kennardv/DSGroep-3", "Date": "2014-11-12T10:45:14Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ntnI.answerDiscovery(previousHash, ownHash); } catch (java.rmi.RemoteException e) { failure(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6582/buggy-version/Client.src.be.uantwerpen.server.Client.java", "BodyUseAPI": ["be.uantwerpen.server.NodeToNodeInterface.answerDiscovery(int,int)"], "Fixed commit": "7da17f03e03203aaa305d77e21af12e8d848b454", "Url": "https://api.github.com/repos/kennardv/DSGroep-3", "Date": "2014-11-12T10:45:14Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ntnI.answerDiscovery(previousHash, ownHash); } catch (java.rmi.RemoteException e) { failure(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6582/buggy-version/Client.src.be.uantwerpen.server.Client.java", "BodyUseAPI": ["be.uantwerpen.server.NodeToNodeInterface.answerDiscovery(int,int)"], "Fixed commit": "7da17f03e03203aaa305d77e21af12e8d848b454", "Url": "https://api.github.com/repos/kennardv/DSGroep-3", "Date": "2014-11-12T10:45:14Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { t = map.tileAt(mx, my); } catch (java.lang.IndexOutOfBoundsException e) { t = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1761/buggy-version/src.scn.LevelEditor.java", "BodyUseAPI": ["cls.Map.tileAt(int,int)"], "Fixed commit": "a29dff796dca8f9c7c24bc7e4a063a2ce0af61ee", "Url": "https://api.github.com/repos/IMP1/little_boxes", "Date": "2014-02-11T12:28:13Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((java.awt.Graphics2D) (g)).setComposite(java.awt.AlphaComposite.getInstance(java.awt.AlphaComposite.SRC_OVER, ((float) (java.lang.Math.sqrt((1.0F - (((float) ((java.lang.System.currentTimeMillis()) - (birthTime))) / ((float) (LIFETIME))))))))); g.drawImage(Assets.bullet, ((int) (((x) - (handler.getCamera().xOffset())) * (amt.main.gfx.Assets.tileWidth))), ((int) (((y) - (handler.getCamera().yOffset())) * (amt.main.gfx.Assets.tileHeight))), Assets.tileWidth, Assets.tileHeight, null); ((java.awt.Graphics2D) (g)).setComposite(java.awt.AlphaComposite.getInstance(java.awt.AlphaComposite.SRC_OVER, 1.0F)); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8360/buggy-version/src.amt.main.entities.CasterBullet.java", "BodyUseAPI": ["java.awt.Graphics.setComposite(java.awt.AlphaComposite)", "java.lang.Math.sqrt(float)", "handler.getCamera().yOffset()", "java.awt.AlphaComposite.getInstance(int,float)", "java.awt.Graphics.drawImage(Assets.bullet,((int) (((x) - (handler.getCamera().xOffset())) * (amt.main.gfx.Assets.tileWidth))),((int) (((y) - (handler.getCamera().yOffset())) * (amt.main.gfx.Assets.tileHeight))),Assets.tileWidth,Assets.tileHeight,<nulltype>)", "handler.getCamera().xOffset()", "java.awt.AlphaComposite.getInstance(int,double)", "amt.main.entities.CasterBullet.getCamera()", "java.lang.System.currentTimeMillis()", "amt.main.entities.CasterBullet.getCamera()", "java.awt.Graphics.setComposite(java.awt.AlphaComposite)"], "Fixed commit": "fdaa3b0748f5c7872cf206c3de7f7bac6c3593f3", "Url": "https://api.github.com/repos/asilence24/Game", "Date": "2017-06-02T16:40:49Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pounds = java.lang.Double.parseDouble(et.getText().toString()); } catch (java.lang.Throwable e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5911/buggy-version/app.src.main.java.com.mattleibold.bulktracker.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "java.lang.Double.parseDouble(et.getText().toString())", "et.getText().toString()"], "Fixed commit": "a71808ba20567b45b15cb9cf42ff84db703bd410", "Url": "https://api.github.com/repos/leiboldm/BulkTracker", "Date": "2016-04-22T06:29:21Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pounds = java.lang.Double.parseDouble(et.getText().toString()); } catch (java.lang.Throwable e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5911/buggy-version/app.src.main.java.com.mattleibold.bulktracker.WeightEntryActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(et.getText().toString())", "et.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "a71808ba20567b45b15cb9cf42ff84db703bd410", "Url": "https://api.github.com/repos/leiboldm/BulkTracker", "Date": "2016-04-22T06:29:21Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String x = null; x = x.substring(0); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2392/buggy-version/src.com.yiibai.struts2.HelloWorldActionException.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "8d51ddc0a36b6daf5c4dfc9bb771d667ad758052", "Url": "https://api.github.com/repos/n5xm/teststruts", "Date": "2015-01-04T07:22:13Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { buildTenantDb(userLogin.getTenantId()); } catch (java.lang.Exception e) { response.put(\"errorMessage\", e.getMessage()); return response.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5018/buggy-version/TruFleetWebServices.src.main.java.com.trufleet.services.resources.LoginResource.java", "BodyUseAPI": ["com.trufleet.services.core.UserLogin.getTenantId()", "com.trufleet.services.resources.LoginResource.buildTenantDb(userLogin.getTenantId())"], "Fixed commit": "433756647267bf1f15fc7a48ab44044962bb54eb", "Url": "https://api.github.com/repos/kolson256/TrueFleet", "Date": "2014-11-11T01:17:50Z"},
{"Line": "=>626", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (slice != null) { s = au.edu.uq.cmm.paul.queue.QueueManager.Slice.valueOf(slice); } } catch (java.lang.IllegalArgumentException ex) { au.edu.uq.cmm.paul.servlet.WebUIController.LOG.debug(\"unrecognized slice - ignoring\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5835/buggy-version/paul.src.main.java.au.edu.uq.cmm.paul.servlet.WebUIController.java", "BodyUseAPI": ["au.edu.uq.cmm.paul.queue.QueueManager.Slice.valueOf(java.lang.String)"], "Fixed commit": "fd071f6fad376eb84ba52568ac9353249a962320", "Url": "https://api.github.com/repos/UQ-CMM-Mirage/CMM-data-grabber", "Date": "2012-05-29T05:46:44Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return command.execute(newArgs); } catch (com.tmarsteel.jcli.command.NoSuchCommandException ex) { throw new com.tmarsteel.jcli.command.NoSuchCommandException((((args[0]) + \" \") + (ex.getName())), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/662/buggy-version/src.main.java.com.tmarsteel.jcli.command.CommandDispatcher.java", "BodyUseAPI": ["com.tmarsteel.jcli.command.Command<R>.execute(java.lang.String[])"], "Fixed commit": "7e4d50c6a9a7225098c59bb99ad0a9164ade1087", "Url": "https://api.github.com/repos/tmarsteel/jcli", "Date": "2016-10-06T12:37:08Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return matcher.group(1); } catch (java.lang.IllegalStateException e) { return \"0.0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1389/buggy-version/src.fileProcessing.SortedGraph.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)"], "Fixed commit": "367e94baa7661af3c119c928868af002074f8a08", "Url": "https://api.github.com/repos/erictapen/weird-tree-plot", "Date": "2015-08-11T11:21:06Z"},
{"Line": "=>607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { hitEntity = event.getHitEntity(); } catch (java.lang.Exception e) { me.fromgate.reactions.util.message.M.logOnce(\"event.getHitEntity()\", \"Failed to execute method getHitEntity in ProjectileHitEvent.class. Older server?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1434/buggy-version/core.src.main.java.me.fromgate.reactions.event.EventManager.java", "BodyUseAPI": ["org.bukkit.event.entity.ProjectileHitEvent.getHitEntity()"], "Fixed commit": "0589bbc08b066803b95445eaf8968c205eb66b62", "Url": "https://api.github.com/repos/Redolith/ReActions", "Date": "2017-10-30T05:56:17Z"},
{"Line": "=>684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.apache.hadoop.fs.viewfs.InodeTree.ResolveResult<org.apache.hadoop.fs.FileSystem> res = fsState.resolve(getUriPath(f), true); return res.targetFileSystem.getServerDefaults(res.remainingPath); } catch (java.io.FileNotFoundException e) { throw new org.apache.hadoop.fs.viewfs.NotInMountpointException(f, \"getServerDefaults\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5884/buggy-version/hadoop-common-project.hadoop-common.src.main.java.org.apache.hadoop.fs.viewfs.ViewFileSystem.java", "BodyUseAPI": ["org.apache.hadoop.fs.viewfs.ViewFileSystem.getUriPath(org.apache.hadoop.fs.Path)", "org.apache.hadoop.fs.viewfs.InodeTree<org.apache.hadoop.fs.FileSystem>.resolve(java.lang.String,boolean)", "res.targetFileSystem.getServerDefaults(res.remainingPath)"], "Fixed commit": "8848a8a76c7eadebb15b347171057f906f6fc69b", "Url": "https://api.github.com/repos/apache/hadoop", "Date": "2016-11-11T04:44:10Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { block.setData(java.lang.Byte.valueOf(lines[0])); } catch (java.lang.NumberFormatException e) { me.taylorkelly.bigbrother.BBLogging.severe(\"Encountered invalid SignDestroyed block. Note that this sign may be unrecoverable. The bug that produces these blocks has been fixed.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7116/buggy-version/src.main.java.me.taylorkelly.bigbrother.datablock.SignDestroyed.java", "BodyUseAPI": ["java.lang.Byte.valueOf(java.lang.String)", "org.bukkit.block.Block.setData(java.lang.Byte)"], "Fixed commit": "028ab521e799d49cd1e91824c4526cb0fb358ce6", "Url": "https://api.github.com/repos/N3X15/BigBrother", "Date": "2011-04-27T17:18:56Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String email = order.getEmail(); if (email != null) { mailUtil.sendMessage(senderEmail, email, subject, getTextByOrder(order)); } } catch (java.lang.Exception ignore) { ignore.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8413/buggy-version/src.main.java.shop.service.impl.OrderServiceImpl.java", "BodyUseAPI": ["shop.util.MailUtil.sendMessage(java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "shop.service.impl.OrderServiceImpl.getTextByOrder(shop.model.Order)", "shop.model.Order.getEmail()"], "Fixed commit": "e5608cbcbcaa62c308b5564a8bcbd59ba920aa4d", "Url": "https://api.github.com/repos/Oleg-Shirokiy/Online-Shop-1.0", "Date": "2016-03-21T09:10:22Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return client.get(((url) + \"stop\")); } catch (java.io.IOException ex) { if ((((org.apache.http.client.HttpResponseException) (ex)).getStatusCode()) == 405) { stopPost(); return \"\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2602/buggy-version/src.main.java.com.offbytwo.jenkins.model.Build.java", "BodyUseAPI": ["com.offbytwo.jenkins.model.Build.get(java.lang.String)"], "Fixed commit": "283989c67fae41ecf386fc1eacf96753a9c8db8f", "Url": "https://api.github.com/repos/borzamircea/jenkins-client", "Date": "2015-09-22T06:20:55Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mAnimator.stop(); } catch (final java.lang.Throwable e) { java.lang.System.err.println(e.getLocalizedMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/12/buggy-version/src.main.java.cleargl.ClearGLWindow.java", "BodyUseAPI": ["com.jogamp.opengl.util.FPSAnimator.stop()"], "Fixed commit": "f4e93ad6b14cf9de479ba875d148970626f8f4f2", "Url": "https://api.github.com/repos/ClearVolume/cleargl", "Date": "2017-04-14T15:03:46Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mGlWindow.destroy(); } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/12/buggy-version/src.main.java.cleargl.ClearGLWindow.java", "BodyUseAPI": ["com.jogamp.newt.opengl.GLWindow.destroy()"], "Fixed commit": "f4e93ad6b14cf9de479ba875d148970626f8f4f2", "Url": "https://api.github.com/repos/ClearVolume/cleargl", "Date": "2017-04-14T15:03:46Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { graph.addEdge(((java.lang.String.valueOf(i)) + (java.lang.String.valueOf(j))), java.lang.String.valueOf(i), java.lang.String.valueOf(j)); } catch (org.graphstream.graph.IdAlreadyInUseException e) { java.lang.System.out.println(((\"Failed to create Edge with ID: \" + (java.lang.String.valueOf(i))) + (java.lang.String.valueOf(j)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8767/buggy-version/src.hausarbeit.graph.GraphFactory.java", "BodyUseAPI": ["java.lang.String.valueOf(int)", "java.lang.String.valueOf(int)", "java.lang.String.valueOf(int)", "org.graphstream.graph.Graph.addEdge(java.lang.String,java.lang.String,java.lang.String)", "java.lang.String.valueOf(int)"], "Fixed commit": "dc794b409f7a4a1ac9ea4968b79401e1356f1a9c", "Url": "https://api.github.com/repos/KneeNinetySeven/EmpirischeAlgorithmenanalyse", "Date": "2017-09-01T11:47:50Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { rounds = java.lang.Integer.parseInt(etRounds.getText().toString()); } catch (java.lang.NumberFormatException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4889/buggy-version/app.src.main.java.de.appphil.categories.activities.game.TGameConfigActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(etRounds.getText().toString())", "android.widget.EditText.getText()", "etRounds.getText().toString()"], "Fixed commit": "b3ddf73bbdb839276ca47fd63bfadd9eef5a30c1", "Url": "https://api.github.com/repos/PhilippDE/Categories", "Date": "2017-03-26T16:46:00Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new de.bsd.zwitscher.account.CreateAccountTask(this, user, password, service, true).execute().get(); android.util.Log.i(\"Login.xauth\", \"Account created\"); proceed(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } catch (java.util.concurrent.ExecutionException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6344/buggy-version/src.de.bsd.zwitscher.account.LoginActivity.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,java.lang.String)", "de.bsd.zwitscher.account.LoginActivity.proceed()", "de.bsd.zwitscher.account.CreateAccountTask.execute()", "new de.bsd.zwitscher.account.CreateAccountTask(this, user, password, service, true).execute().get()"], "Fixed commit": "a13c48cc829f70f1aab0c63be32c89871b63cccf", "Url": "https://api.github.com/repos/pilhuhn/ZwitscherA", "Date": "2011-08-05T19:38:36Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(getRepositoryService().createFolderAsRoot(dir))) { getLogger().warning((\"Failed to create directory \" + dir)); return false; } } catch (javax.jcr.RepositoryException e) { getLogger().log(java.util.logging.Level.WARNING, (\"Failed to create directory: \" + dir), e); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7990/buggy-version/src.java.com.idega.manager.business.ContentMigrator.java", "BodyUseAPI": ["getRepositoryService().createFolderAsRoot(java.lang.String)", "getLogger().warning(java.lang.String)", "com.idega.manager.business.ContentMigrator.getRepositoryService()", "com.idega.manager.business.ContentMigrator.getLogger()"], "Fixed commit": "752f9a63535242949ea0e33afeb8416389cde345", "Url": "https://api.github.com/repos/idega/com.idega.manager", "Date": "2013-04-26T11:29:37Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { io.nshusa.rsam.binary.Archive archive = io.nshusa.rsam.binary.Archive.create(); int encodingType = 0; java.io.ByteArrayOutputStream ibos = new java.io.ByteArrayOutputStream(); int idxOffset = 0; try (java.io.DataOutputStream idxOut = new java.io.DataOutputStream(ibos)) { for (java.io.File imageArchiveDir : selectedDirectory.listFiles()) { if (!(imageArchiveDir.isDirectory())) { continue; } java.io.ByteArrayOutputStream dbos = new java.io.ByteArrayOutputStream(); try (java.io.DataOutputStream datOut = new java.io.DataOutputStream(dbos)) { int largestWidth = 0; int largestHeight = 0; final java.util.List<java.awt.image.BufferedImage> images = new java.util.ArrayList<>(); final java.util.List<java.lang.Integer> colorSet = new java.util.ArrayList<>(); colorSet.add(0); for (int imageIndex = 0; imageIndex < (imageArchiveDir.listFiles().length); imageIndex++) { final java.io.File imageFile = new java.io.File(imageArchiveDir, (imageIndex + \".png\")); if (imageFile.isDirectory()) { continue; } try { java.awt.image.BufferedImage bimage = io.nshusa.rsam.util.ColorQuantizer.quantize(javax.imageio.ImageIO.read(imageFile)); if (largestWidth < (bimage.getWidth())) { largestWidth = bimage.getWidth(); } if (largestHeight < (bimage.getHeight())) { largestHeight = bimage.getHeight(); } for (int x = 0; x < (bimage.getWidth()); x++) { for (int y = 0; y < (bimage.getHeight()); y++) { final int argb = bimage.getRGB(x, y); final int rgb = argb & 16777215; if (colorSet.contains(rgb)) { continue; } colorSet.add(rgb); } } images.add(bimage); } catch (java.io.IOException ex) { ex.printStackTrace(); } } idxOut.writeShort(largestWidth); idxOut.writeShort(largestHeight); idxOut.writeByte(colorSet.size()); for (int i = 1; i < (colorSet.size()); i++) { io.nshusa.rsam.util.ByteBufferUtils.writeU24Int(colorSet.get(i), idxOut); } for (java.awt.image.BufferedImage bimage : images) { idxOut.writeByte(0); idxOut.writeByte(0); idxOut.writeShort(bimage.getWidth()); idxOut.writeShort(bimage.getHeight()); idxOut.writeByte(encodingType); } datOut.writeShort(idxOffset); idxOffset = idxOut.size(); for (java.awt.image.BufferedImage bimage : images) { if (encodingType == 0) { for (int y = 0; y < (bimage.getHeight()); y++) { for (int x = 0; x < (bimage.getWidth()); x++) { final int argb = bimage.getRGB(x, y); final int rgb = argb & 16777215; final int paletteIndex = colorSet.indexOf(rgb); assert paletteIndex != (-1); datOut.writeByte(paletteIndex); } } }else { for (int x = 0; x < (bimage.getWidth()); x++) { for (int y = 0; y < (bimage.getHeight()); y++) { final int argb = bimage.getRGB(x, y); final int rgb = argb & 16777215; final int paletteIndex = colorSet.indexOf(rgb); assert paletteIndex != (-1); datOut.writeByte(paletteIndex); } } } } } final byte[] uncompresedData = dbos.toByteArray(); try { int hash = java.lang.Integer.parseInt(imageArchiveDir.getName()); } catch (java.lang.Exception ex) { } java.lang.String fileName = imageArchiveDir.getName(); if ((fileName.lastIndexOf(\".\")) != (-1)) { fileName = fileName.substring(0, fileName.lastIndexOf(\".\")); } int hash = -1; try { hash = java.lang.Integer.parseInt(imageArchiveDir.getName()); } catch (java.lang.NumberFormatException ex) { } if (hash == (-1)) { hash = io.nshusa.rsam.util.HashUtils.nameToHash((fileName + \".dat\")); } final byte[] compressedData = io.nshusa.rsam.util.CompressionUtil.bzip2(uncompresedData); archive.getEntries().add(new io.nshusa.rsam.binary.Archive.ArchiveEntry(hash, uncompresedData.length, compressedData.length, compressedData)); } final byte[] uncompressed = ibos.toByteArray(); final byte[] compressed = io.nshusa.rsam.util.CompressionUtil.bzip2(uncompressed); archive.getEntries().add(new io.nshusa.rsam.binary.Archive.ArchiveEntry(io.nshusa.rsam.util.HashUtils.nameToHash(\"index.dat\"), uncompressed.length, compressed.length, compressed)); final byte[] encoded = archive.encode(); try (java.io.FileOutputStream fos = new java.io.FileOutputStream(new java.io.File(selectedDirectory.getParentFile(), \"sprites.jag\"))) { fos.write(encoded); } } catch (java.io.IOException e) { e.printStackTrace(); } } catch (java.lang.Exception ex) { ex.printStackTrace(); javafx.application.Platform.runLater(() -> { io.nshusa.bsp.util.Dialogue.showWarning(java.lang.String.format(\"Failed to pack directory=%s\", selectedDirectory.getName())).showAndWait(); }); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9055/buggy-version/src.io.nshusa.bsp.Controller.java", "BodyUseAPI": ["java.io.DataOutputStream.writeByte(int)", "java.lang.Integer.parseInt(java.lang.String)", "java.awt.image.BufferedImage.getRGB(int,int)", "java.io.DataOutputStream.writeByte(int)", "java.util.List<java.lang.Integer>.indexOf(int)", "java.lang.String.lastIndexOf(java.lang.String)", "java.awt.image.BufferedImage.getHeight()", "java.io.File.listFiles()", "java.lang.String.lastIndexOf(java.lang.String)", "java.io.File.isDirectory()", "java.io.DataOutputStream.writeByte(int)", "io.nshusa.rsam.util.HashUtils.nameToHash(java.lang.String)", "java.io.File.isDirectory()", "java.io.DataOutputStream.writeShort(int)", "java.io.DataOutputStream.writeShort(int)", "java.util.List<java.awt.image.BufferedImage>.add(java.awt.image.BufferedImage)", "java.awt.image.BufferedImage.getHeight()", "java.io.IOException.printStackTrace()", "java.io.ByteArrayOutputStream.toByteArray()", "java.awt.image.BufferedImage.getRGB(int,int)", "java.awt.image.BufferedImage.getHeight()", "io.nshusa.rsam.util.HashUtils.nameToHash(java.lang.String)", "java.awt.image.BufferedImage.getHeight()", "java.io.ByteArrayOutputStream.toByteArray()", "java.io.File.getParentFile()", "java.io.IOException.printStackTrace()", "java.awt.image.BufferedImage.getWidth()", "java.io.DataOutputStream.writeShort(int)", "java.util.List<java.lang.Integer>.add(int)", "java.io.File.listFiles()", "java.io.DataOutputStream.size()", "java.lang.String.substring(int,int)", "java.io.File.getName()", "java.io.DataOutputStream.writeShort(int)", "archive.getEntries().add(io.nshusa.rsam.binary.Archive.ArchiveEntry)", "io.nshusa.rsam.binary.Archive.encode()", "java.io.DataOutputStream.writeByte(int)", "java.io.DataOutputStream.writeByte(int)", "java.awt.image.BufferedImage.getHeight()", "java.util.List<java.lang.Integer>.contains(int)", "java.io.File.getName()", "java.util.List<java.lang.Integer>.get(int)", "java.util.List<java.lang.Integer>.size()", "io.nshusa.rsam.binary.Archive.getEntries()", "java.awt.image.BufferedImage.getWidth()", "java.awt.image.BufferedImage.getWidth()", "java.awt.image.BufferedImage.getWidth()", "archive.getEntries().add(io.nshusa.rsam.binary.Archive.ArchiveEntry)", "java.io.FileOutputStream.write(byte[])", "java.util.List<java.lang.Integer>.indexOf(int)", "java.util.List<java.lang.Integer>.add(int)", "java.lang.Integer.parseInt(java.lang.String)", "io.nshusa.rsam.util.ColorQuantizer.quantize(java.awt.image.BufferedImage)", "java.awt.image.BufferedImage.getRGB(int,int)", "java.awt.image.BufferedImage.getHeight()", "java.awt.image.BufferedImage.getWidth()", "java.io.File.getName()", "io.nshusa.rsam.util.ByteBufferUtils.writeU24Int(java.lang.Integer,java.io.DataOutputStream)", "java.io.DataOutputStream.writeByte(int)", "io.nshusa.rsam.binary.Archive.getEntries()", "io.nshusa.rsam.util.CompressionUtil.bzip2(byte[])", "java.io.DataOutputStream.writeShort(int)", "io.nshusa.rsam.util.CompressionUtil.bzip2(byte[])", "java.util.List<java.lang.Integer>.size()", "java.awt.image.BufferedImage.getWidth()", "javax.imageio.ImageIO.read(java.io.File)", "io.nshusa.rsam.binary.Archive.create()"], "Fixed commit": "1ec252718b9d678372b7b2857d0f096ed7f1a289", "Url": "https://api.github.com/repos/nshusa/native-sprite-packer", "Date": "2017-09-08T10:31:31Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { constructorElement = clsElement.getClsName().getConstructor(new java.lang.Class[]{ java.io.File.class, boolean.class, java.io.File.class, dalvik.system.DexFile.class }); } catch (java.lang.Exception e) { flag = 1; try { constructorElement = clsElement.getClsName().getConstructor(new java.lang.Class[]{ java.io.File.class, java.util.zip.ZipFile.class, dalvik.system.DexFile.class }); } catch (java.lang.Exception eo) { eo.printStackTrace(); flag = -1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8895/buggy-version/ioc.src.com.smartions.ioc.logic.BaseBeanContext.java", "BodyUseAPI": ["com.smartions.ioc.bean.ClassInfo.getClsName()", "clsElement.getClsName().getConstructor(java.lang.Class[])"], "Fixed commit": "8b8bc32da5dea87c8d39cc9a4f104b683bf43bf8", "Url": "https://api.github.com/repos/gmfenglin/android-ioc-aop", "Date": "2015-08-28T03:07:43Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bm = mIn.readMjpegFrame(); } catch (java.lang.NullPointerException e) { android.util.Log.d(\"MjpegView\", \"mIn was null!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3761/buggy-version/app.src.main.java.org.astrobotics.ds2016.io.MjpegView.java", "BodyUseAPI": ["org.astrobotics.ds2016.io.MjpegInputStream.readMjpegFrame()"], "Fixed commit": "11de8b346320620801d0fba86aba179fc0e8201e", "Url": "https://api.github.com/repos/VTAstrobotics/DriverStation-2016", "Date": "2016-04-19T21:12:27Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.nio.file.Files.createDirectories(path); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8922/buggy-version/src.main.java.com.gmail.trentech.permanenteffects.Main.java", "BodyUseAPI": ["java.nio.file.Files.createDirectories(java.nio.file.Path)"], "Fixed commit": "7521b5ee494ed0aabc9c50b718e27726b0b69d01", "Url": "https://api.github.com/repos/trentech/PermanentEffects", "Date": "2017-05-08T16:38:19Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.sonar.plugins.checkstyle.CheckstyleRulesDefinition.extractRulesData(repository, \"/org/sonar/plugins/checkstyle/rules.xml\", \"/org/sonar/l10n/checkstyle/rules/checkstyle\"); } catch (java.io.IOException e) { throw new java.lang.IllegalStateException(\"Exception during extractRulesData\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5560/buggy-version/checkstyle-sonar-plugin.src.main.java.org.sonar.plugins.checkstyle.CheckstyleRulesDefinition.java", "BodyUseAPI": ["org.sonar.plugins.checkstyle.CheckstyleRulesDefinition.extractRulesData(org.sonar.plugins.checkstyle.NewRepository,java.lang.String,java.lang.String)"], "Fixed commit": "a678bbacde4031ee906b0b88b5541194d5cb6504", "Url": "https://api.github.com/repos/checkstyle/sonar-checkstyle", "Date": "2016-12-24T23:07:29Z"},
{"Line": "=>723", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((getLocale()) != null) { final org.jboss.pressgang.ccms.wrapper.TranslatedContentSpecWrapper translatedContentSpec = org.jboss.pressgang.ccms.contentspec.utils.EntityUtilities.getClosestTranslatedContentSpecById(getProviderFactory(), id, getRevision()); if (translatedContentSpec != null) { contentSpecEntity = translatedContentSpec.getContentSpec(); }else { contentSpecEntity = org.jboss.pressgang.ccms.contentspec.client.utils.ClientUtilities.getContentSpecEntity(contentSpecProvider, id, getRevision()); } }else { contentSpecEntity = org.jboss.pressgang.ccms.contentspec.client.utils.ClientUtilities.getContentSpecEntity(contentSpecProvider, id, getRevision()); } } catch (org.jboss.pressgang.ccms.provider.exception.NotFoundException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6739/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.client.commands.BuildCommand.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.contentspec.client.commands.BuildCommand.getRevision()", "org.jboss.pressgang.ccms.contentspec.client.utils.ClientUtilities.getContentSpecEntity(org.jboss.pressgang.ccms.provider.ContentSpecProvider,java.lang.Integer,java.lang.Integer)", "org.jboss.pressgang.ccms.contentspec.client.commands.BuildCommand.getLocale()", "org.jboss.pressgang.ccms.contentspec.client.commands.BuildCommand.getProviderFactory()", "org.jboss.pressgang.ccms.contentspec.client.commands.BuildCommand.getRevision()", "org.jboss.pressgang.ccms.contentspec.client.commands.BuildCommand.getRevision()", "org.jboss.pressgang.ccms.contentspec.client.utils.ClientUtilities.getContentSpecEntity(org.jboss.pressgang.ccms.provider.ContentSpecProvider,java.lang.Integer,java.lang.Integer)", "org.jboss.pressgang.ccms.contentspec.utils.EntityUtilities.getClosestTranslatedContentSpecById(getProviderFactory(),java.lang.Integer,java.lang.Integer)", "org.jboss.pressgang.ccms.wrapper.TranslatedContentSpecWrapper.getContentSpec()"], "Fixed commit": "9528733565bef01da1467404a166cfcefcb19e13", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSCSPClient", "Date": "2013-09-03T07:53:43Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { wallet.saveToFile(walletFilename); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1421/buggy-version/BCH.plugin.crypto_network.fermat-bch-plugin-crypto-network-bitcoin-bitdubai.src.main.java.com.bitdubai.fermat_bch_plugin.layer.crypto_network.bitcoin.developer.bitdubai.version_1.structure.BitcoinNetworkEvents.java", "BodyUseAPI": ["org.bitcoinj.core.Wallet.saveToFile(java.io.File)"], "Fixed commit": "3d06beb29327c77671762fdad0baed0868aef877", "Url": "https://api.github.com/repos/acostarodrigo/fermat", "Date": "2016-02-25T18:07:57Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { zos.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6940/buggy-version/editor.exporter.src.main.java.es.eucm.ead.editor.utils.ZipUtils.java", "BodyUseAPI": ["java.util.zip.ZipOutputStream.close()"], "Fixed commit": "3633a613b25dd97e5b66466cb8ff2d4d2a9f86a4", "Url": "https://api.github.com/repos/jtorrente/ead", "Date": "2014-11-19T13:46:34Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return com.therandomlabs.curseapi.CurseForge.fromCurseProjectNoRedirect(com.therandomlabs.utils.network.NetworkUtils.getRedirectedURL(com.therandomlabs.curseapi.Curse.fromProjectID(projectID))); } catch (java.io.IOException ex) { throw new com.therandomlabs.curseapi.CurseException(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6276/buggy-version/src.main.java.com.therandomlabs.curseapi.CurseForge.java", "BodyUseAPI": ["com.therandomlabs.utils.network.NetworkUtils.getRedirectedURL(com.therandomlabs.curseapi.Curse.fromProjectID(projectID))", "com.therandomlabs.curseapi.Curse.fromProjectID(int)", "com.therandomlabs.curseapi.CurseForge.fromCurseProjectNoRedirect(com.therandomlabs.utils.network.NetworkUtils.getRedirectedURL(com.therandomlabs.curseapi.Curse.fromProjectID(projectID)))"], "Fixed commit": "0bbcb3d6ff86e9847fe7e47435a51fe9638e60e4", "Url": "https://api.github.com/repos/TheRandomLabs/CurseAPI", "Date": "2017-03-22T09:04:16Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mCamera.release(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9281/buggy-version/com.runninghusky.spacetracker.src.com.runninghusky.spacetracker.CameraLoggerActivity.java", "BodyUseAPI": ["android.hardware.Camera.release()"], "Fixed commit": "274ca7b2a6c764e68d7b482a2b92ca32e91ddf97", "Url": "https://api.github.com/repos/craigisakson/SpaceTracker", "Date": "2011-11-22T16:13:46Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { object = create(); } catch (java.lang.Exception ex) { throw new java.lang.RuntimeException(\"Creating lazy instance failed.\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/636/buggy-version/src.main.java.ilarkesto.core.base.Lazy.java", "BodyUseAPI": ["ilarkesto.core.base.Lazy<O>.create()"], "Fixed commit": "4c490b1a87f8487853a622981c81661d8f3cd74e", "Url": "https://api.github.com/repos/Kunagi/ilarkesto", "Date": "2013-08-12T12:42:53Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { newOrphan.setMessageBody(message.getMessageBody()); } catch (java.lang.NullPointerException e) { newOrphan.setMessageBody(\"<cannot read message body>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1031/buggy-version/src.com.michalmazur.orphanedtexts.RawSmsReader.java", "BodyUseAPI": ["com.michalmazur.orphanedtexts.Orphan.setMessageBody(message.getMessageBody())", "android.telephony.SmsMessage.getMessageBody()"], "Fixed commit": "f08f5b2cc73ef06ecac8eaad2c74665db34cd4dc", "Url": "https://api.github.com/repos/michalmazur/orphaned-texts", "Date": "2013-08-23T14:53:51Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.openengsb.core.ekb.common.AdvancedModelWrapper result = performMerge(model, loadReferencedModel(model, field)); if (result != null) { updates.add(result); } } catch (org.openengsb.core.edb.api.EDBException e) { org.openengsb.core.ekb.persistence.persist.edb.internal.EngineeringObjectEnhancer.LOGGER.debug(\"Skipped referenced model for field {}, since it does not exist.\", field, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8620/buggy-version/components.ekb.persistence-persist-edb.src.main.java.org.openengsb.core.ekb.persistence.persist.edb.internal.EngineeringObjectEnhancer.java", "BodyUseAPI": ["org.openengsb.core.ekb.persistence.persist.edb.internal.EngineeringObjectEnhancer.loadReferencedModel(org.openengsb.core.ekb.common.EngineeringObjectModelWrapper,java.lang.reflect.Field)", "java.util.List<org.openengsb.core.ekb.common.AdvancedModelWrapper>.add(org.openengsb.core.ekb.common.AdvancedModelWrapper)", "org.openengsb.core.ekb.persistence.persist.edb.internal.EngineeringObjectEnhancer.performMerge(org.openengsb.core.ekb.common.EngineeringObjectModelWrapper,org.openengsb.core.ekb.common.AdvancedModelWrapper)"], "Fixed commit": "d78d965ecf9d1830719d7113bf86299fe9dc3b05", "Url": "https://api.github.com/repos/stfnsche/openengsb-framework", "Date": "2013-08-14T11:39:47Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sync = producer.process(exchange, new org.apache.camel.AsyncCallback() { @java.lang.Override public void done(boolean doneSync) { try { target.setPattern(existingPattern); long timeTaken = watch.stop(); org.apache.camel.util.EventHelper.notifyExchangeSent(target.getContext(), target, destination, timeTaken); } finally { callback.done(doneSync); } } }); } catch (java.lang.Throwable throwable) { if (exchange != null) { exchange.setException(throwable); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8016/buggy-version/camel-core.src.main.java.org.apache.camel.processor.SendProcessor.java", "BodyUseAPI": ["org.apache.camel.util.StopWatch.stop()", "org.apache.camel.AsyncCallback.done(boolean)", "org.apache.camel.Exchange.setPattern(org.apache.camel.ExchangePattern)", "org.apache.camel.Exchange.getContext()", "org.apache.camel.AsyncProcessor.process(org.apache.camel.Exchange,org.apache.camel.AsyncCallback)", "org.apache.camel.util.EventHelper.notifyExchangeSent(target.getContext(),org.apache.camel.Exchange,org.apache.camel.Endpoint,long)"], "Fixed commit": "5761250c74e02f02b51ad4c0a9a21a9d0ac4f511", "Url": "https://api.github.com/repos/apache/camel", "Date": "2013-11-04T22:25:28Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { Sum += ((double) (object.getList(\"rates\").get(i))); } catch (java.lang.Exception E) { Sum += ((int) (object.getList(\"rates\").get(i))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4302/buggy-version/app.src.main.java.kr.hs.zion.zionbob.MainActivity.java", "BodyUseAPI": ["object.getList(\"rates\").get(int)", "com.parse.ParseObject.getList(java.lang.String)"], "Fixed commit": "890107b3b69d39a7b035e1e4ea0713e80faefc10", "Url": "https://api.github.com/repos/sukso96100/zionbob", "Date": "2015-11-26T01:20:24Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { Sum += ((double) (Rates.get(i))); } catch (java.lang.Exception E) { Sum += ((int) (Rates.get(i))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4302/buggy-version/app.src.main.java.kr.hs.zion.zionbob.fragments.ReviewsFragment.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.get(int)"], "Fixed commit": "890107b3b69d39a7b035e1e4ea0713e80faefc10", "Url": "https://api.github.com/repos/sukso96100/zionbob", "Date": "2015-11-26T01:20:24Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { double d = ((double) (Rates.get(MyReviewPos))); MyRB.setRating(((float) (d))); } catch (java.lang.Exception e) { int d = ((int) (Rates.get(MyReviewPos))); MyRB.setRating(((float) (d))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4302/buggy-version/app.src.main.java.kr.hs.zion.zionbob.fragments.ReviewsFragment.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.get(int)", "android.widget.RatingBar.setRating(double)"], "Fixed commit": "890107b3b69d39a7b035e1e4ea0713e80faefc10", "Url": "https://api.github.com/repos/sukso96100/zionbob", "Date": "2015-11-26T01:20:24Z"},
{"Line": "=>652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pd = pservice.getDirectPaletteData(scheme); } catch (final java.lang.IllegalArgumentException e) { final java.lang.String defaultScheme = pservice.getColorSchemes().iterator().next(); pd = pservice.getDirectPaletteData(defaultScheme); store.setValue(BasePlottingConstants.COLOUR_SCHEME, defaultScheme); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3137/buggy-version/org.dawnsci.plotting.services.src.org.dawnsci.plotting.services.ImageService.java", "BodyUseAPI": ["org.eclipse.dawnsci.plotting.api.histogram.IPaletteService.getDirectPaletteData(java.lang.String)"], "Fixed commit": "4b70e63d009bfbe63b7e0503f0e3d66f6a033846", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2016-04-14T07:29:36Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { requests.addAll(com.cmput301f16t11.a2b.RequestController.getNearbyRequests()); } catch (java.lang.NullPointerException e) { android.util.Log.i(\"No requests found\", \"requestlistactivity\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6852/buggy-version/app.src.main.java.com.cmput301f16t11.a2b.RequestListActivity.java", "BodyUseAPI": ["com.cmput301f16t11.a2b.RequestController.getNearbyRequests()", "java.util.ArrayList<com.cmput301f16t11.a2b.UserRequest>.addAll(com.cmput301f16t11.a2b.RequestController.getNearbyRequests())"], "Fixed commit": "01b0cf7c6991aa6afba10f3e55e5858671eb35de", "Url": "https://api.github.com/repos/CMPUT301F16T11/a2b", "Date": "2016-11-12T20:11:28Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { handleContextEvent(((org.universAAL.middleware.context.ContextEvent) (m.getContent()))); } catch (java.lang.Exception e) { org.universAAL.middleware.container.utils.LogUtils.logInfo(owner, org.universAAL.middleware.context.ContextSubscriber.class, \"handleEvent\", new java.lang.Object[]{ busResourceURI, \" has thrown an exception while handling the received context event.\" }, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5907/buggy-version/middleware.core.mw.bus.context.core.src.main.java.org.universAAL.middleware.context.ContextSubscriber.java", "BodyUseAPI": ["org.universAAL.middleware.bus.msg.BusMessage.getContent()", "org.universAAL.middleware.context.ContextSubscriber.handleContextEvent(((org.universAAL.middleware.context.ContextEvent) (m.getContent())))"], "Fixed commit": "90f7c4e780908e044f3f1f18a1e782ef1b252f68", "Url": "https://api.github.com/repos/universAAL/middleware", "Date": "2015-09-06T13:58:02Z"},
{"Line": "=>1219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { deletePhysicalMachineFromDatabase(physicalMachine.getId(), userSession); } catch (com.abiquo.abiserver.exception.InfrastructureCommandException ice) { factory.rollbackConnection(); errorManager.reportError(com.abiquo.abiserver.commands.impl.InfrastructureCommandImpl.resourceManager, basicResult, \"deletePhysicalMachine\", ice, ice.getMessage()); basicResult.setMessage(ice.getMessage()); traceLog(SeverityType.CRITICAL, ComponentType.MACHINE, EventType.MACHINE_DELETE, userSession, physicalMachine.getDataCenter(), null, ice.getMessage(), null, ((com.abiquo.abiserver.pojo.infrastructure.Rack) (physicalMachine.getAssignedTo())), physicalMachine, null, null); return basicResult; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2451/buggy-version/server.src.main.java.com.abiquo.abiserver.commands.impl.InfrastructureCommandImpl.java", "BodyUseAPI": ["com.abiquo.abiserver.pojo.infrastructure.PhysicalMachine.getId()", "com.abiquo.abiserver.commands.impl.InfrastructureCommandImpl.deletePhysicalMachineFromDatabase(physicalMachine.getId(),com.abiquo.abiserver.pojo.authentication.UserSession)"], "Fixed commit": "16b33e3e7fbf7d78a5e98c06e4bffdda3505dfff", "Url": "https://api.github.com/repos/abiquo/abiquo", "Date": "2011-06-29T09:44:09Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pneumaticCraft.common.AchievementHandler.giveAchievement(player, acquiredStack.getItem().getUnlocalizedName().substring(5)); } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4056/buggy-version/src.pneumaticCraft.common.AchievementHandler.java", "BodyUseAPI": ["pneumaticCraft.common.AchievementHandler.giveAchievement(net.minecraft.entity.player.EntityPlayer,acquiredStack.getItem().getUnlocalizedName().substring(5))", "acquiredStack.getItem().getUnlocalizedName().substring(int)", "net.minecraft.item.ItemStack.getItem()", "acquiredStack.getItem().getUnlocalizedName()"], "Fixed commit": "6bea0a65a774c35c00119e9d11ef22e8346f5b3c", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-09-26T16:15:00Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { player.prepare(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2404/buggy-version/YoutubeConverter.app.src.main.java.vladi.youtubeconverter.Services.MusicService.java", "BodyUseAPI": ["android.media.MediaPlayer.prepare()"], "Fixed commit": "450214369efc77e2a80dbe60760d70fadd2323f8", "Url": "https://api.github.com/repos/vladi99/AndroidProject", "Date": "2017-08-23T17:00:00Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { s.draw(g); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6487/buggy-version/Hexagonal_Scrabble.src.hexagonal_scrabble.Board.java", "BodyUseAPI": ["hexagonal_scrabble.Space.draw(java.awt.Graphics)"], "Fixed commit": "9d68adbf1b4c1f71e6e73f1c1cc9e65de4740902", "Url": "https://api.github.com/repos/MrGSHS/apcs-final-project-hexagonal-scrabble", "Date": "2016-05-11T03:23:11Z"},
{"Line": "=>549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pos = getListView().getPositionForView(v); } catch (java.lang.NullPointerException ex) { android.util.Log.v(\"CursorListFragment\", (\"NullPointerException in getPositionForView(); \" + \"must have been scrolled out of position\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4787/buggy-version/app.src.main.java.org.fasola.fasolaminutes.CursorListFragment.java", "BodyUseAPI": ["getListView().getPositionForView(android.view.View)", "org.fasola.fasolaminutes.CursorListFragment.getListView()"], "Fixed commit": "00e0b09899d14af8a90877c8c8ff88d1504f2c97", "Url": "https://api.github.com/repos/mrichards42/fasola_android", "Date": "2016-01-21T19:21:47Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { meterTextView.setText(((java.lang.Double.toString(cs.calculateDistance()).substring(0, 4)) + \" km\")); } catch (java.lang.Exception e) { meterTextView.setText(\"0.0 km\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5991/buggy-version/Studienarbeit_Android_SS16.app.src.main.java.de.hof_university.studienarbeitss16.studienarbeit_android_ss16.Activity.TrackDetailActivity.java", "BodyUseAPI": ["java.lang.Double.toString(cs.calculateDistance())", "de.hof_university.studienarbeitss16.studienarbeit_android_ss16.Controller.ShareController.calculateDistance()", "java.lang.String.substring(int,int)", "android.widget.TextView.setText(((java.lang.Double.toString(cs.calculateDistance()).substring(0, 4)) + \" km\"))"], "Fixed commit": "21647544d897e8e47296d825e4af0041456f2d8e", "Url": "https://api.github.com/repos/bmairhoermann/Android_6Semester_Studienarbeit", "Date": "2016-07-05T12:28:30Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { highSpeedTextView.setText(((java.lang.Double.toString(cs.highSpeed()).substring(0, 4)) + \" km/h\")); } catch (java.lang.Exception e) { highSpeedTextView.setText(\"0.0 km/h\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5991/buggy-version/Studienarbeit_Android_SS16.app.src.main.java.de.hof_university.studienarbeitss16.studienarbeit_android_ss16.Activity.TrackDetailActivity.java", "BodyUseAPI": ["java.lang.Double.toString(cs.highSpeed())", "de.hof_university.studienarbeitss16.studienarbeit_android_ss16.Controller.ShareController.highSpeed()", "java.lang.String.substring(int,int)", "android.widget.TextView.setText(((java.lang.Double.toString(cs.highSpeed()).substring(0, 4)) + \" km/h\"))"], "Fixed commit": "21647544d897e8e47296d825e4af0041456f2d8e", "Url": "https://api.github.com/repos/bmairhoermann/Android_6Semester_Studienarbeit", "Date": "2016-07-05T12:28:30Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { averageTextView.setText(((java.lang.Double.toString(cs.calculateSpeed()).substring(0, 4)) + \" km/h\")); } catch (java.lang.Exception e) { averageTextView.setText(\"0.0 km/h\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5991/buggy-version/Studienarbeit_Android_SS16.app.src.main.java.de.hof_university.studienarbeitss16.studienarbeit_android_ss16.Activity.TrackDetailActivity.java", "BodyUseAPI": ["java.lang.Double.toString(cs.calculateSpeed())", "android.widget.TextView.setText(((java.lang.Double.toString(cs.calculateSpeed()).substring(0, 4)) + \" km/h\"))", "java.lang.String.substring(int,int)", "de.hof_university.studienarbeitss16.studienarbeit_android_ss16.Controller.ShareController.calculateSpeed()"], "Fixed commit": "21647544d897e8e47296d825e4af0041456f2d8e", "Url": "https://api.github.com/repos/bmairhoermann/Android_6Semester_Studienarbeit", "Date": "2016-07-05T12:28:30Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { intent.putExtra(\"KEY_ID\", convertToStringArray(KEY_ID)); } catch (java.lang.StringIndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3549/buggy-version/app.src.main.java.moe.minori.pgpclipper.activities.PGPClipperResultShowActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,java.lang.String[])", "moe.minori.pgpclipper.activities.PGPClipperResultShowActivity.convertToStringArray(java.util.ArrayList<java.lang.String>)"], "Fixed commit": "9cca9b114e9002f4e9ac79cc8d43afe611e30e2a", "Url": "https://api.github.com/repos/Mnkai/PGPClipper", "Date": "2015-11-12T14:15:09Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (com.nucleus.component.Component c : components) { c.create(renderer, this); handler.createSystem(c); handler.registerComponent(c); } } catch (java.lang.InstantiationException | java.lang.IllegalAccessException e) { throw new com.nucleus.component.ComponentException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8262/buggy-version/graphics-by-opengl-j2se.src.main.java.com.nucleus.component.ComponentNode.java", "BodyUseAPI": ["com.nucleus.component.Component.create(com.nucleus.renderer.NucleusRenderer,com.nucleus.component.ComponentNode)", "com.nucleus.system.ComponentHandler.registerComponent(com.nucleus.component.Component)", "com.nucleus.system.ComponentHandler.createSystem(com.nucleus.component.Component)"], "Fixed commit": "f9451ec74d7f7234602e4d734b15fb0776f0c809", "Url": "https://api.github.com/repos/rsahlin/graphics-by-opengl", "Date": "2017-10-03T21:15:01Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.apache.stratos.rest.endpoint.api.StratosApiV41Utils.removeCartridge(cartridgeType); return javax.ws.rs.core.Response.ok().entity(new org.apache.stratos.common.beans.ResponseMessageBean(org.apache.stratos.common.beans.ResponseMessageBean.SUCCESS, java.lang.String.format(\"Cartridge deleted successfully: [cartridge-type] %s\", cartridgeType))).build(); } catch (java.lang.Exception e) { return javax.ws.rs.core.Response.status(Response.Status.BAD_REQUEST).entity(new org.apache.stratos.common.beans.ResponseMessageBean(org.apache.stratos.common.beans.ResponseMessageBean.ERROR, e.getMessage())).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3218/buggy-version/components.org.apache.stratos.rest.endpoint.src.main.java.org.apache.stratos.rest.endpoint.api.StratosApiV41.java", "BodyUseAPI": ["javax.ws.rs.core.Response.ok().entity(org.apache.stratos.common.beans.ResponseMessageBean)", "org.apache.stratos.rest.endpoint.api.StratosApiV41Utils.removeCartridge(java.lang.String)", "javax.ws.rs.core.Response.ok()", "javax.ws.rs.core.Response.ok().entity(new org.apache.stratos.common.beans.ResponseMessageBean(org.apache.stratos.common.beans.ResponseMessageBean.SUCCESS, java.lang.String.format(\"Cartridge deleted successfully: [cartridge-type] %s\", cartridgeType))).build()", "java.lang.String.format(java.lang.String,java.lang.String)"], "Fixed commit": "04bf4cbb7ed750c5f252b1bc75ef93c23d158ede", "Url": "https://api.github.com/repos/apache/stratos", "Date": "2015-05-20T13:54:53Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.method.setURI(new java.net.URL(url).toURI()); } catch (java.net.URISyntaxException e) { java.net.MalformedURLException mex = new java.net.MalformedURLException(((\"Invalid url '\" + url) + \"'\")); mex.initCause(e); throw mex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4254/buggy-version/src.main.java.org.jsoftware.restclient.impl.DefaultRestClient.java", "BodyUseAPI": ["java.net.URL.toURI()", "M.setURI(java.net.URI)"], "Fixed commit": "9ae3a6bf9fa73995fd3c0966a6ec949f9a296a96", "Url": "https://api.github.com/repos/m-szalik/rest-client", "Date": "2015-12-17T23:35:27Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { entries.addAll(getAllEntries(entry, entry)); } catch (java.io.FileNotFoundException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8993/buggy-version/src.com.xmlcalabash.extensions.fileutils.Delete.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)", "com.xmlcalabash.extensions.fileutils.Delete.1.getAllEntries(java.lang.String,java.lang.String)"], "Fixed commit": "a9e1855157fd8f9f5a6334c403a694ea39094e98", "Url": "https://api.github.com/repos/ndw/xmlcalabash1", "Date": "2014-09-13T07:31:37Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((((java.lang.Double) (value)).doubleValue()) > 0) comp = new javax.swing.JLabel(value.toString(), up, javax.swing.JLabel.CENTER); if ((((java.lang.Double) (value)).doubleValue()) < 0) comp = new javax.swing.JLabel(value.toString(), down, javax.swing.JLabel.CENTER); if ((((java.lang.Double) (value)).doubleValue()) == 0) comp = new javax.swing.JLabel(value.toString(), javax.swing.JLabel.CENTER); comp.setOpaque(false); return comp; } catch (java.lang.Exception e) { return new javax.swing.JLabel(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8889/buggy-version/src.org.magic.gui.renderer.CardShakeRenderer.java", "BodyUseAPI": ["java.lang.Object.doubleValue()", "java.lang.Object.toString()", "java.lang.Object.doubleValue()", "java.lang.Object.doubleValue()", "java.lang.Object.toString()", "javax.swing.JLabel.setOpaque(boolean)", "java.lang.Object.toString()"], "Fixed commit": "a1bac2cdba20b99585f97fc229174c90efad31cf", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-09-27T16:21:16Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (new java.io.File(this.historyPath).createNewFile()) { markmann.dennis.fileExtractor.logic.HistoryHandler.LOGGER.info(\"History file created successfully.\"); } } catch (java.io.IOException e1) { markmann.dennis.fileExtractor.logic.NotificationHelper.showErrorNotification(((\"Error while trying to create '\" + (this.historyPath)) + \"'.\"), true, e1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8232/buggy-version/FolderExtractor.src.markmann.dennis.fileExtractor.logic.HistoryHandler.java", "BodyUseAPI": ["java.io.File.createNewFile()", "org.apache.log4j.Logger.info(java.lang.String)"], "Fixed commit": "82e92d4ec9a9031a3cbdbcd813e48b81dd6ab9ab", "Url": "https://api.github.com/repos/DennisMarkmann/FileExtractor", "Date": "2017-06-15T04:23:15Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.team.omni.weather.api.services.AuthService.transport = com.google.api.client.googleapis.javanet.GoogleNetHttpTransport.newTrustedTransport(); } catch (java.lang.Exception e) { org.team.omni.weather.api.services.AuthService.LOGGER.log(java.util.logging.Level.SEVERE, \"Exception while creating transport object\", e); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1778/buggy-version/OrchestrationEngineService.src.main.java.org.team.omni.weather.api.services.AuthService.java", "BodyUseAPI": ["com.google.api.client.googleapis.javanet.GoogleNetHttpTransport.newTrustedTransport()"], "Fixed commit": "63cd2366a0d358ab9ea423b3bd3d0a80e35d4809", "Url": "https://api.github.com/repos/airavata-courses/TeamOmni", "Date": "2016-10-20T00:47:21Z"},
{"Line": "=>1218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { compositeText[0].setSelection(compositeText[0].getSelection().x, ((compositeText[0].getSelection().y) - (org.nschmidt.ldparteditor.text.StringHelper.getLineDelimiter().length()))); } catch (java.lang.IllegalArgumentException consumed) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7725/buggy-version/src.org.nschmidt.ldparteditor.composites.compositetab.CompositeTab.java", "BodyUseAPI": ["compositeText[0].setSelection(compositeText[0].getSelection().x,((compositeText[0].getSelection().y) - (org.nschmidt.ldparteditor.text.StringHelper.getLineDelimiter().length())))", "compositeText[0].getSelection()", "org.nschmidt.ldparteditor.text.StringHelper.getLineDelimiter().length()", "compositeText[0].getSelection()", "org.nschmidt.ldparteditor.text.StringHelper.getLineDelimiter()"], "Fixed commit": "feda6345c14be6924eacce3ef737e718953dd376", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-06-26T20:12:17Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return com.order.www.controller.MyFileUtil.downloadFile(com.order.www.controller.ZipFileUtil.contents2zip(tmpTimeFileDir), ((com.order.www.controller.DateUtil.formatDate(new java.util.Date(), \"yyyy-MM-dd_\u8bbe\u8ba1\u56fe\")) + \".zip\"), request); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7289/buggy-version/src.main.java.com.order.www.controller.DownLoadImageControl.java", "BodyUseAPI": ["com.order.www.controller.DateUtil.formatDate(java.util.Date,java.lang.String)", "com.order.www.controller.ZipFileUtil.contents2zip(java.io.File)", "com.order.www.controller.MyFileUtil.downloadFile(com.order.www.controller.ZipFileUtil.contents2zip(tmpTimeFileDir),((com.order.www.controller.DateUtil.formatDate(new java.util.Date(), \"yyyy-MM-dd_\u8bbe\u8ba1\u56fe\")) + \".zip\"),com.order.www.controller.DownLoadImageControl)"], "Fixed commit": "01fed7b6419391fad42d8eaed7d884fb0fa4c3ab", "Url": "https://api.github.com/repos/kongtrio/seller_order", "Date": "2017-09-15T00:39:34Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.order.www.controller.BarcodeUtil.mergeImage(backImageFile, orderDB.getPostalCode(), backDir, numStr); } catch (java.lang.Exception e) { com.order.www.controller.DownLoadImageControl.LOGGER.error(\"asin {} error.\", asin, e); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7289/buggy-version/src.main.java.com.order.www.controller.DownLoadImageControl.java", "BodyUseAPI": ["com.order.www.controller.BarcodeUtil.mergeImage(java.io.File,orderDB.getPostalCode(),java.io.File,java.lang.String)", "com.order.www.controller.OrderDB.getPostalCode()"], "Fixed commit": "01fed7b6419391fad42d8eaed7d884fb0fa4c3ab", "Url": "https://api.github.com/repos/kongtrio/seller_order", "Date": "2017-09-15T00:39:34Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.order.www.controller.BarcodeUtil.mergeImage(frontFile, orderDB.getPostalCode(), frontDir, numStr); } catch (java.lang.Exception e) { com.order.www.controller.DownLoadImageControl.LOGGER.error(\"asin {} error.\", asin, e); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7289/buggy-version/src.main.java.com.order.www.controller.DownLoadImageControl.java", "BodyUseAPI": ["com.order.www.controller.BarcodeUtil.mergeImage(java.io.File,orderDB.getPostalCode(),java.io.File,java.lang.String)", "com.order.www.controller.OrderDB.getPostalCode()"], "Fixed commit": "01fed7b6419391fad42d8eaed7d884fb0fa4c3ab", "Url": "https://api.github.com/repos/kongtrio/seller_order", "Date": "2017-09-15T00:39:34Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = net.uchoice.exf.core.util.SpringApplicationContextHolder.getSpringBean(variable.getValue().replace(net.uchoice.exf.core.runtime.resolver.advisor.SpringVariableAdvisor.PARTTEN, \"\"), variable.getVariableSpec().getType()); } catch (org.springframework.beans.BeansException e) { net.uchoice.exf.core.runtime.resolver.advisor.SpringVariableAdvisor.LOG.error(java.lang.String.format(\"spring bean name[%s] not found\", variable.getValue().replace(net.uchoice.exf.core.runtime.resolver.advisor.SpringVariableAdvisor.PARTTEN, \"\")), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3/buggy-version/exf-core.src.main.java.net.uchoice.exf.core.runtime.resolver.advisor.SpringVariableAdvisor.java", "BodyUseAPI": ["net.uchoice.exf.model.variable.Variable.getVariableSpec()", "variable.getValue().replace(java.lang.String,java.lang.String)", "net.uchoice.exf.model.variable.Variable.getValue()", "variable.getVariableSpec().getType()", "net.uchoice.exf.core.util.SpringApplicationContextHolder.getSpringBean(variable.getValue().replace(net.uchoice.exf.core.runtime.resolver.advisor.SpringVariableAdvisor.PARTTEN, \"\"),variable.getVariableSpec().getType())"], "Fixed commit": "7a3d2fac2d0b47742b6a85385fb82e0e3f18647f", "Url": "https://api.github.com/repos/uchoice/exf", "Date": "2017-08-24T16:15:37Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.compManager.removeComputer(computer); } catch (java.rmi.RemoteException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7097/buggy-version/space.SpaceImpl.java", "BodyUseAPI": ["api.CompManager.removeComputer(system.Computer)"], "Fixed commit": "2382b9fb897f482e2defd5a7e75e8d9e3c03f459", "Url": "https://api.github.com/repos/mingruilyu/faulttolereance", "Date": "2015-06-10T06:29:45Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { weather = wc.getGlobalWeather(cityName, countryName); } catch (javax.xml.ws.WebServiceException wse) { weather = \"No Internet Connection\"; progressBar.setValue(0); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4718/buggy-version/src.weather.client.view.WeatherUI.java", "BodyUseAPI": ["weather.client.controller.WeatherController.getGlobalWeather(java.lang.String,java.lang.String)"], "Fixed commit": "856bb156485f1be460c1a478de8b5425f48c20bb", "Url": "https://api.github.com/repos/aunsuwijak/GlobalWeatherSoap", "Date": "2014-11-04T09:05:37Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sensorValue += new org.json.JSONObject(intent.getStringExtra(DataPoint.VALUE)).toString(); } catch (org.json.JSONException e) { sensorValue += new org.json.JSONArray(intent.getStringExtra(DataPoint.VALUE)).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/530/buggy-version/src.nl.sense_os.service.MsgHandler.java", "BodyUseAPI": ["android.content.Intent.getStringExtra(DataPoint.VALUE)", "org.json.JSONObject.toString()"], "Fixed commit": "4671945add6371cfe2ae4aa4b1a5828c6914a01e", "Url": "https://api.github.com/repos/senseobservationsystems/sense-android-library", "Date": "2013-03-14T13:29:16Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (lastFile.exists()) { chooser.setSelectedFile(lastFile); } } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/895/buggy-version/MdmiMapEditor.src.org.openhealthtools.mdht.mdmi.editor.map.tools.ModelIOUtilities.java", "BodyUseAPI": ["java.io.File.exists()", "javax.swing.JFileChooser.setSelectedFile(java.io.File)"], "Fixed commit": "448e6ac5c6989747d573712e0ee24b58b60ff998", "Url": "https://api.github.com/repos/MDMI/MDMI", "Date": "2015-07-21T22:27:43Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { msg = ((\"Unexpected error class: \" + (fe.getCause().getClass().getName())) + \"\\n Message recorded is: \") + (fe.getCause().getLocalizedMessage()); } catch (java.lang.Throwable ee) { msg = fe.getLocalizedMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7501/buggy-version/domino.xsp.src.org.openntf.domino.xsp.XspOpenLogPhaseListener.java", "BodyUseAPI": ["com.ibm.xsp.FacesExceptionEx.getCause()", "fe.getCause().getClass()", "fe.getCause().getLocalizedMessage()", "fe.getCause().getClass().getName()", "com.ibm.xsp.FacesExceptionEx.getCause()"], "Fixed commit": "ddc8f24b19c724574a0ca92fbaa2dc962d243c48", "Url": "https://api.github.com/repos/OpenNTF/org.openntf.domino", "Date": "2015-01-21T11:19:22Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (org.apache.commons.io.FileUtils.deleteQuietly(tmpDir)) { jqmlogger.trace(\"temp directory was removed\"); }else { jqmlogger.warn(((\"Could not remove temp directory \" + (tmpDir.getAbsolutePath())) + \"for this job instance. There may be open handlers remaining open.\")); } } catch (java.lang.Exception e) { jqmlogger.warn(\"Could not remove temp directory for unusual reasons\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7540/buggy-version/jqm-all.jqm-engine.src.main.java.com.enioka.jqm.tools.Loader.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)", "org.apache.log4j.Logger.warn(java.lang.String)", "org.apache.log4j.Logger.trace(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "0013415b4449ae9aa71f2ef3474c53900063a499", "Url": "https://api.github.com/repos/enioka/jqm", "Date": "2015-01-31T11:44:26Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { messageArrayList.clear(); } catch (java.lang.NullPointerException e) { messageArrayList = new java.util.ArrayList<>(); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5641/buggy-version/app.src.main.java.ru.itmasterskaya.csarm.MessagesActivity.java", "BodyUseAPI": ["java.util.ArrayList<ru.itmasterskaya.csarm.MessagesActivity.Message>.clear()"], "Fixed commit": "b23272ea4ff8637c559f7673a31f306e8a5e689a", "Url": "https://api.github.com/repos/Benefic/GemboEmployee", "Date": "2017-01-03T15:24:20Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.view.View headerView = com.adrielcafe.recifebomdebola.ui.tab.MatchTabFragment.activity.getLayoutInflater().inflate(R.layout.list_header_match, null); android.widget.TextView groupView = ((android.widget.TextView) (headerView.findViewById(R.id.group))); groupView.setText((((com.adrielcafe.recifebomdebola.ui.tab.MatchTabFragment.activity.getString(R.string.group)) + \" \") + group)); listView.addHeaderView(headerView, null, false); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7254/buggy-version/app.src.main.java.com.adrielcafe.recifebomdebola.ui.tab.MatchTabFragment.java", "BodyUseAPI": ["android.widget.TextView.setText((((com.adrielcafe.recifebomdebola.ui.tab.MatchTabFragment.activity.getString(R.string.group)) + \" \") + group))", "android.widget.ListView.addHeaderView(android.view.View,<nulltype>,boolean)", "com.adrielcafe.recifebomdebola.ui.MainActivity.getString(R.string.group)", "android.view.View.findViewById(R.id.group)", "com.adrielcafe.recifebomdebola.ui.tab.MatchTabFragment.activity.getLayoutInflater().inflate(R.layout.list_header_match,<nulltype>)", "com.adrielcafe.recifebomdebola.ui.MainActivity.getLayoutInflater()"], "Fixed commit": "bc37c4c58c832c982ded010fd42eae4b60630cbb", "Url": "https://api.github.com/repos/adrielcafe/RecifeBomDeBola", "Date": "2015-11-10T18:39:37Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.sql.PreparedStatement ps = ((java.sql.PreparedStatement) (bdManager.DBConnectionManager.getConnectionManager().prepareStatement(\"SELECT version FROM appVersion;\"))); java.sql.ResultSet rs = ((java.sql.ResultSet) (bdManager.DBConnectionManager.getConnectionManager().execute(ps, true))); if (rs.first()) { installedVersion = rs.getString(\"version\"); } if (!(codeVersion.equalsIgnoreCase(installedVersion))) { is_valid = false; install_type = \"upgrade\"; } } catch (java.sql.SQLException e) { is_valid = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8593/buggy-version/src.java.servlets.Install_servlets.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "bdManager.DBConnectionManager.getConnectionManager().prepareStatement(java.lang.String)", "bdManager.DBConnectionManager.getConnectionManager()", "java.sql.ResultSet.getString(java.lang.String)", "bdManager.DBConnectionManager.getConnectionManager().execute(java.sql.PreparedStatement,boolean)", "java.sql.ResultSet.first()", "bdManager.DBConnectionManager.getConnectionManager()"], "Fixed commit": "99957eaa3f7fc17d91d101b1c03585d18e3e2869", "Url": "https://api.github.com/repos/fikipollo/stategraems", "Date": "2017-03-21T12:07:57Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { value = java.lang.Integer.valueOf(inputText); } catch (java.lang.NumberFormatException e) { value = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5336/buggy-version/Android.app.src.main.java.com.example.reativos.oscar.AddParam.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "6f3add039c38d955e9a8bac495fe875617fb3209", "Url": "https://api.github.com/repos/michellevalente/Oscar", "Date": "2016-06-21T21:51:57Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (eu.delving.x3ml.engine.Link link : domain.createLinkContexts(this, domainForeignKey, rangePrimaryKey)) { link.range.link(); } } catch (eu.delving.x3ml.X3MLEngine ex) { eu.delving.x3ml.X3MLEngine.exceptionMessagesList += ex.toString(); java.lang.System.out.println((\"ERROR FOUND: \" + (ex.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7257/buggy-version/src.main.java.eu.delving.x3ml.engine.X3ML.java", "BodyUseAPI": ["eu.delving.x3ml.engine.Domain.createLinkContexts(eu.delving.x3ml.engine.X3ML.LinkElement,java.lang.String,java.lang.String)", "link.range.link()"], "Fixed commit": "f153363b85c96ccaf506927d6fa4eef357c0ab3c", "Url": "https://api.github.com/repos/isl/x3ml", "Date": "2015-12-07T14:14:22Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return findResource(path); } catch (com.github.onsdigital.zebedee.exceptions.BadRequestException e) { if (path.startsWith(\"/visualisations/\")) { return findResource((path + \"/index.html\")); } throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8679/buggy-version/zebedee-reader.src.main.java.com.github.onsdigital.zebedee.reader.CollectionReader.java", "BodyUseAPI": ["com.github.onsdigital.zebedee.reader.CollectionReader.findResource(java.lang.String)"], "Fixed commit": "e9104f3973e537ddc4c9e1e000cd90885df69fcb", "Url": "https://api.github.com/repos/ONSdigital/zebedee", "Date": "2017-05-24T12:27:01Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return publishedContentReader.getResource(path); } catch (com.github.onsdigital.zebedee.exceptions.BadRequestException e) { if (path.startsWith(\"/visualisations/\")) { return publishedContentReader.getResource((path + \"/index.html\")); } throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8679/buggy-version/zebedee-reader.src.main.java.com.github.onsdigital.zebedee.reader.ZebedeeReader.java", "BodyUseAPI": ["com.github.onsdigital.zebedee.reader.ContentReader.getResource(java.lang.String)"], "Fixed commit": "e9104f3973e537ddc4c9e1e000cd90885df69fcb", "Url": "https://api.github.com/repos/ONSdigital/zebedee", "Date": "2017-05-24T12:27:01Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(5000); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/64/buggy-version/app.src.main.java.com.sperchenko.likedislikedemo.storage.DBUtils.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "a0d92d550fab758c35976e72400015dddb3a6e5a", "Url": "https://api.github.com/repos/stas-perchenko/like-dislike-demo", "Date": "2015-11-29T22:41:22Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { image = imj3.tools.IMJTools.read(path); } catch (final java.lang.Exception exception) { exception.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3502/buggy-version/src.imj3.tools.Image2DComponent.java", "BodyUseAPI": ["imj3.tools.IMJTools.read(java.lang.String)"], "Fixed commit": "e4f8794eeb65dcd7d9df7d201627acb5f2b2b407", "Url": "https://api.github.com/repos/codistmonk/IMJ", "Date": "2016-06-15T20:13:16Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pattern = source.getBytes(\"utf-8\"); } catch (java.io.UnsupportedEncodingException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1816/buggy-version/plugins.org.brainwy.liclipsetext.editor.tm4e_src.org.eclipse.tm4e.core.internal.oniguruma.OnigRegExp.java", "BodyUseAPI": ["java.lang.String.getBytes(java.lang.String)"], "Fixed commit": "1c5e1c90487682585bbeabbd03fa214a35c60275", "Url": "https://api.github.com/repos/fabioz/LiClipseText", "Date": "2017-09-15T20:32:03Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { runBrowser(((java.lang.String) (resourcesTable.getValueAt(resourcesTable.getSelectedRow(), 0)))); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(net.sf.memoranda.ui.ResourcesPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8211/buggy-version/src.net.sf.memoranda.ui.ResourcesPanel.java", "BodyUseAPI": ["net.sf.memoranda.ui.ResourcesTable.getValueAt(resourcesTable.getSelectedRow(),int)", "net.sf.memoranda.ui.ResourcesTable.getSelectedRow()", "net.sf.memoranda.ui.ResourcesPanel.PopupListener.runBrowser(((java.lang.String) (resourcesTable.getValueAt(resourcesTable.getSelectedRow(), 0))))"], "Fixed commit": "037a1103785c76646404f8a61cb72944e6a5daa8", "Url": "https://api.github.com/repos/cst316/spring16project-Cobol", "Date": "2016-03-04T18:18:11Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { runBrowser(((java.lang.String) (resourcesTable.getValueAt(resourcesTable.getSelectedRow(), 0)))); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(net.sf.memoranda.ui.ResourcesPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8211/buggy-version/src.net.sf.memoranda.ui.ResourcesPanel.java", "BodyUseAPI": ["net.sf.memoranda.ui.ResourcesTable.getValueAt(resourcesTable.getSelectedRow(),int)", "net.sf.memoranda.ui.ResourcesTable.getSelectedRow()", "net.sf.memoranda.ui.ResourcesPanel.runBrowser(((java.lang.String) (resourcesTable.getValueAt(resourcesTable.getSelectedRow(), 0))))"], "Fixed commit": "037a1103785c76646404f8a61cb72944e6a5daa8", "Url": "https://api.github.com/repos/cst316/spring16project-Cobol", "Date": "2016-03-04T18:18:11Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { reportB_actionPerformed(e); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(net.sf.memoranda.ui.ExceptionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8211/buggy-version/src.net.sf.memoranda.ui.ExceptionDialog.java", "BodyUseAPI": ["net.sf.memoranda.ui.ExceptionDialog.1.reportB_actionPerformed(java.awt.event.ActionEvent)"], "Fixed commit": "037a1103785c76646404f8a61cb72944e6a5daa8", "Url": "https://api.github.com/repos/cst316/spring16project-Cobol", "Date": "2016-03-04T18:18:11Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { jMenuHelpBug_actionPerformed(e); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(net.sf.memoranda.ui.AppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8211/buggy-version/src.net.sf.memoranda.ui.AppFrame.java", "BodyUseAPI": ["net.sf.memoranda.ui.AppFrame.11.jMenuHelpBug_actionPerformed(java.awt.event.ActionEvent)"], "Fixed commit": "037a1103785c76646404f8a61cb72944e6a5daa8", "Url": "https://api.github.com/repos/cst316/spring16project-Cobol", "Date": "2016-03-04T18:18:11Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { jMenuHelpGuide_actionPerformed(e); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(net.sf.memoranda.ui.AppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8211/buggy-version/src.net.sf.memoranda.ui.AppFrame.java", "BodyUseAPI": ["net.sf.memoranda.ui.AppFrame.9.jMenuHelpGuide_actionPerformed(java.awt.event.ActionEvent)"], "Fixed commit": "037a1103785c76646404f8a61cb72944e6a5daa8", "Url": "https://api.github.com/repos/cst316/spring16project-Cobol", "Date": "2016-03-04T18:18:11Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { jMenuHelpWeb_actionPerformed(e); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(net.sf.memoranda.ui.AppFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8211/buggy-version/src.net.sf.memoranda.ui.AppFrame.java", "BodyUseAPI": ["net.sf.memoranda.ui.AppFrame.10.jMenuHelpWeb_actionPerformed(java.awt.event.ActionEvent)"], "Fixed commit": "037a1103785c76646404f8a61cb72944e6a5daa8", "Url": "https://api.github.com/repos/cst316/spring16project-Cobol", "Date": "2016-03-04T18:18:11Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.getActivity().unregisterReceiver(this.receiver); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1708/buggy-version/vanguard2.src.main.java.com.example.vanguard.pages.fragments.BluetoothDataTransferFragment.java", "BodyUseAPI": ["this.getActivity().unregisterReceiver(com.example.vanguard.bluetooth.server.ServerBroadcastReceiver)", "com.example.vanguard.pages.fragments.BluetoothDataTransferFragment.getActivity()"], "Fixed commit": "fd676aafee76d20c94e73bccc35f1d8890f84580", "Url": "https://api.github.com/repos/alexnlederman/scoutingapp", "Date": "2017-10-02T01:14:43Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mScannerView.toggleFlash(); } catch (java.lang.RuntimeException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3460/buggy-version/app.src.main.java.io.github.hopedia.fragments.BarcodeFragment.java", "BodyUseAPI": ["me.dm7.barcodescanner.zxing.ZXingScannerView.toggleFlash()"], "Fixed commit": "6ea1014dcc932e749681a8d5c0a76354623858cf", "Url": "https://api.github.com/repos/HopEdia/android-client", "Date": "2016-08-17T14:58:48Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int ret = exec.execute(); neoe.util.Log.log((\"addToUserPath ret=\" + ret)); } catch (java.lang.Exception ex) { neoe.util.Log.log(\"setx failed, you may add PATH manually\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8141/buggy-version/src.neoe.pkg.Main.java", "BodyUseAPI": ["neoe.util.Exec.execute()", "neoe.util.Log.log(java.lang.String)"], "Fixed commit": "ee01259eda18af02f370961c220ebb60d03b884a", "Url": "https://api.github.com/repos/neoedmund/neoepkg", "Date": "2016-01-27T05:04:22Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setHomeAsUpIndicator = com.actionbarsherlock.app.ActionBar.class.getDeclaredMethod(\"setHomeAsUpIndicator\", android.graphics.drawable.Drawable.class); setHomeActionContentDescription = com.actionbarsherlock.app.ActionBar.class.getDeclaredMethod(\"setHomeActionContentDescription\", java.lang.Integer.TYPE); return; } catch (java.lang.NoSuchMethodException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5558/buggy-version/lib.src.com.actionbarsherlock.app.ActionBarDrawerToggleSherlock.java", "BodyUseAPI": ["java.lang.Class.getDeclaredMethod(java.lang.String,java.lang.Class)", "java.lang.Class.getDeclaredMethod(java.lang.String,java.lang.Class<java.lang.Integer>)"], "Fixed commit": "78e8a7c3105716ff2fe59635092b51fdb11b61a7", "Url": "https://api.github.com/repos/rzsombor/ActionBarSherlockDrawerToggle", "Date": "2013-07-18T09:54:18Z"},
{"Line": "=>585", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bluetoothAdapter.stopLeScan(this); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5505/buggy-version/app.src.main.java.pl.nerosoft.nerohealthdock.activity.MainActivity.java", "BodyUseAPI": ["android.bluetooth.BluetoothAdapter.stopLeScan(pl.nerosoft.nerohealthdock.activity.MainActivity)"], "Fixed commit": "28e168690156343899a7c1f0c66fbdfcedfb74f8", "Url": "https://api.github.com/repos/piomin/NeroHealthDock", "Date": "2016-01-29T14:30:06Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stockTaskService.onRunTask(new com.google.android.gms.gcm.TaskParams(intent.getStringExtra(\"tag\"), args)); } catch (java.lang.NumberFormatException e) { new android.os.Handler(android.os.Looper.getMainLooper()).post(new java.lang.Runnable() { @java.lang.Override public void run() { android.widget.Toast.makeText(getApplicationContext(), R.string.invalid_symbol, Toast.LENGTH_SHORT).show(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4831/buggy-version/app.src.main.java.com.sam_chordas.android.stockhawk.service.StockIntentService.java", "BodyUseAPI": ["android.content.Intent.getStringExtra(java.lang.String)", "com.sam_chordas.android.stockhawk.service.StockTaskService.onRunTask(com.google.android.gms.gcm.TaskParams)"], "Fixed commit": "cd2a2042b47d542c6ca6d45b92a9b403e7f7f446", "Url": "https://api.github.com/repos/PrateeshGoswami/StockHawk", "Date": "2016-04-24T03:43:00Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { schedule.setSorRateValue(schedule.getRateOn(estimateTemplateActivity.getEstimateDate()).getRate().getValue()); } catch (final org.egov.infra.exception.ApplicationRuntimeException e) { schedule.setSorRateValue(0.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2672/buggy-version/egov.egov-worksweb.src.main.java.org.egov.works.web.adaptor.EstimateTemplateJsonAdaptor.java", "BodyUseAPI": ["org.egov.works.models.masters.ScheduleOfRate.getRateOn(estimateTemplateActivity.getEstimateDate())", "org.egov.works.models.masters.ScheduleOfRate.setSorRateValue(schedule.getRateOn(estimateTemplateActivity.getEstimateDate()).getRate().getValue())", "org.egov.works.models.masters.EstimateTemplateActivity.getEstimateDate()", "schedule.getRateOn(estimateTemplateActivity.getEstimateDate()).getRate()", "schedule.getRateOn(estimateTemplateActivity.getEstimateDate()).getRate().getValue()"], "Fixed commit": "be893e207fb5596643d677e99a2bfb6ead36a3ef", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-12-02T07:29:06Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.sinceTime = java.net.URLDecoder.decode(strSince, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { throw new org.apache.camel.RuntimeCamelException(java.lang.String.format(\"Error decoding %s.since with value %s due to: %s\", org.apache.camel.component.facebook.FacebookConstants.READING_PREFIX, strSince, e.getMessage()), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2920/buggy-version/components.camel-facebook.src.main.java.org.apache.camel.component.facebook.FacebookConsumer.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "7f402d160f60eeec97c80cfbce6723e333145069", "Url": "https://api.github.com/repos/FergusNelson/camel", "Date": "2013-10-10T07:14:56Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!((this.base.toString().equals(other.getBase().toString())) && (this.base.getType().toString().equals(other.getType().toString())))) { return false; } } catch (java.lang.NullPointerException npe) { npe.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4086/buggy-version/soot-infoflow.src.com.monster.taint.state.TaintValue.java", "BodyUseAPI": ["this.base.toString().equals(other.getBase().toString())", "soot.Value.toString()", "soot.Value.toString()", "this.base.getType().toString()", "this.base.getType().toString().equals(other.getType().toString())", "com.monster.taint.state.TaintValue.getType()", "soot.Value.getType()", "com.monster.taint.state.TaintValueType.toString()", "com.monster.taint.state.TaintValue.getBase()"], "Fixed commit": "a0f57c1fdf11f8df6985f765a2ef6af30c07eead", "Url": "https://api.github.com/repos/0-14N/Monster", "Date": "2014-03-02T08:41:35Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { itemId = attrHandler.getWikidataItemIdForId(dbfReader.readField(i)); } catch (java.lang.Exception e) { i++; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/886/buggy-version/wikibrain-spatial.src.main.java.org.wikibrain.spatial.loader.SpatialDataLoader.java", "BodyUseAPI": ["org.wikibrain.spatial.loader.IDAttributeHandler.getWikidataItemIdForId(dbfReader.readField(i))", "org.geotools.data.shapefile.dbf.DbaseFileReader.readField(int)"], "Fixed commit": "8d413ca882742f8f5d55a3f37bb8dc68340c19e1", "Url": "https://api.github.com/repos/leusonmario/wikibrain", "Date": "2014-05-24T19:29:37Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cell.setCellValue(java.lang.Double.valueOf(valueArray[i])); } catch (java.lang.NumberFormatException nfe) { cell.setCellValue(java.lang.String.valueOf(valueArray[i])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9016/buggy-version/src.org.citydb.plugins.spreadsheet_gen.controller.SpreadsheetExporter.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Cell.setCellValue(java.lang.Double)", "java.lang.Double.valueOf(java.lang.String)"], "Fixed commit": "19e2e9bb8be5884a0b9fa465b7293b0a35bf4b6e", "Url": "https://api.github.com/repos/3dcitydb/plugin-spreadsheet-generator", "Date": "2015-03-10T14:25:52Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { channelArray.getArray(offset, count, stride); } catch (java.lang.Exception e) { message((\"exception \" + (e.getMessage())), MessageType.error); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/634/buggy-version/src.org.epics.swtshell.ScalarArrayFactory.java", "BodyUseAPI": ["org.epics.pvaccess.client.ChannelArray.getArray(int,int,int)"], "Fixed commit": "d3eed012dc4a6b4111a829af828758d28b4d79e9", "Url": "https://api.github.com/repos/epics-rip/swtshellJava", "Date": "2014-06-05T14:26:43Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { openCamera(); } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, \"Camera is not supported.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6159/buggy-version/app.src.main.java.com.example.evitected.speechcamera.MainActivity.java", "BodyUseAPI": ["com.example.evitected.speechcamera.MainActivity.openCamera()"], "Fixed commit": "464ba6e3ee30a492876cdd8b219d325a28cf28f6", "Url": "https://api.github.com/repos/piyawat37/Week13", "Date": "2016-11-10T04:44:58Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { openAlarm(); } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, \"Alarm is not supported.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6159/buggy-version/app.src.main.java.com.example.evitected.speechcamera.MainActivity.java", "BodyUseAPI": ["com.example.evitected.speechcamera.MainActivity.openAlarm()"], "Fixed commit": "464ba6e3ee30a492876cdd8b219d325a28cf28f6", "Url": "https://api.github.com/repos/piyawat37/Week13", "Date": "2016-11-10T04:44:58Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { structure.Issue issue = model.getIssue(issueName, repoName); if (issue != null) { view.updateView(issue); }else { view.updateView(controller.SelectIssue.MSG_NOSUCHISSUE); new controller.SelectRepo(repoName).execute(); } } catch (java.lang.Exception e) { view.updateView(e.getMessage()); new controller.SelectRepo(repoName).execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/970/buggy-version/src.controller.SelectIssue.java", "BodyUseAPI": ["controller.SelectIssue.updateView(structure.Issue)", "controller.SelectIssue.getIssue(java.lang.String,java.lang.String)", "controller.SelectIssue.updateView(java.lang.String)", "controller.SelectRepo.execute()"], "Fixed commit": "0b04d24075315381627863ed22d4db98d90e69f2", "Url": "https://api.github.com/repos/ZiXian92/MyGitHubIssueTracker", "Date": "2014-12-29T16:16:32Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String personPhoto = acct.getPhotoUrl().toString(); com.bumptech.glide.Glide.with(getApplicationContext()).load(personPhoto).thumbnail(1.0F).crossFade().diskCacheStrategy(DiskCacheStrategy.ALL).into(imgProfilePic); } catch (java.lang.Exception e) { com.bumptech.glide.Glide.with(getApplicationContext()).load(tempProfilePic).thumbnail(1.0F).crossFade().diskCacheStrategy(DiskCacheStrategy.ALL).into(imgProfilePic); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6596/buggy-version/app.src.main.java.me.jeremy.fithub.Login.java", "BodyUseAPI": ["me.jeremy.fithub.Login.getApplicationContext()", "com.bumptech.glide.Glide.with(getApplicationContext()).load(personPhoto).thumbnail(1.0F).crossFade().diskCacheStrategy(DiskCacheStrategy.ALL).into(android.widget.ImageView)", "com.bumptech.glide.Glide.with(getApplicationContext()).load(personPhoto).thumbnail(1.0F).crossFade().diskCacheStrategy(DiskCacheStrategy.ALL)", "acct.getPhotoUrl().toString()", "com.google.android.gms.auth.api.signin.GoogleSignInAccount.getPhotoUrl()", "com.bumptech.glide.Glide.with(getApplicationContext()).load(personPhoto).thumbnail(float)", "com.bumptech.glide.Glide.with(getApplicationContext())", "com.bumptech.glide.Glide.with(getApplicationContext()).load(java.lang.String)", "com.bumptech.glide.Glide.with(getApplicationContext()).load(personPhoto).thumbnail(1.0F).crossFade()"], "Fixed commit": "f9d280a489364d9c921b8c9162c05a7530ed9bc1", "Url": "https://api.github.com/repos/jeremymwagner/FitHub", "Date": "2017-01-24T15:30:56Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.media.ExifInterface exif = new android.media.ExifInterface(getRealPathFromURI(data.getData())); android.util.Log.d(\"=====\", (\"exif attr: \" + (exif.getAttribute(ExifInterface.TAG_ORIENTATION)))); exif.setAttribute(ExifInterface.TAG_ORIENTATION, ((android.media.ExifInterface.ORIENTATION_NORMAL) + \"\")); } catch (java.io.IOException e) { android.util.Log.d(\"=====\", (\"exif error: \" + (e.toString()))); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5030/buggy-version/android.src.com.matji.sandwich.util.PhotoUtil.java", "BodyUseAPI": ["android.content.Intent.getData()", "com.matji.sandwich.util.PhotoUtil.getRealPathFromURI(data.getData())", "android.media.ExifInterface.getAttribute(ExifInterface.TAG_ORIENTATION)", "android.util.Log.d(java.lang.String,(\"exif attr: \" + (exif.getAttribute(ExifInterface.TAG_ORIENTATION))))", "android.media.ExifInterface.setAttribute(ExifInterface.TAG_ORIENTATION,((android.media.ExifInterface.ORIENTATION_NORMAL) + \"\"))"], "Fixed commit": "01bd87f5dc6f6edb81c314494cef2f75adcf0781", "Url": "https://api.github.com/repos/bi2one/Matji_Sandwich", "Date": "2011-09-29T13:21:42Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.zju.car_monitor.util.EventProcessor.process(bts); } catch (java.lang.Exception e) { org.zju.car_monitor.codec.DataDecoder.logger.error(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6989/buggy-version/CarMonitorCore.src.main.java.org.zju.car_monitor.codec.DataDecoder.java", "BodyUseAPI": ["org.zju.car_monitor.util.EventProcessor.process(byte[])"], "Fixed commit": "1ec0f4a2d9773f15249b9160fbae185332f5a972", "Url": "https://api.github.com/repos/yijiezhen/CarMonitor", "Date": "2013-08-01T10:45:36Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(mEnable)) return super.onTouchEvent(event); mHelper.processTouchEvent(event); return true; } catch (java.lang.IllegalArgumentException ignored) { ignored.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/785/buggy-version/fragmentation_swipeback.src.main.java.me.yokeyword.fragmentation.SwipeBackLayout.java", "BodyUseAPI": ["android.support.v4.widget.ViewDragHelper.processTouchEvent(android.view.MotionEvent)", "android.widget.FrameLayout.onTouchEvent(android.view.MotionEvent)"], "Fixed commit": "8277faf46bc512a13b2cade2672acbd45799e52d", "Url": "https://api.github.com/repos/LonelyMushroom/Fragmentation", "Date": "2017-10-09T11:58:32Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ss1.join(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2418/buggy-version/Beacon.src.ReceiverBeacon.java", "BodyUseAPI": ["SenderBeacon.join()"], "Fixed commit": "9d7e615c43650226893e7cd0c02c92e7d45d662d", "Url": "https://api.github.com/repos/Tutorgaming/JortNaiDee", "Date": "2015-11-08T12:56:37Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { s1.join(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2418/buggy-version/Beacon.src.ReceiverBeacon.java", "BodyUseAPI": ["SenderBeacon.join()"], "Fixed commit": "9d7e615c43650226893e7cd0c02c92e7d45d662d", "Url": "https://api.github.com/repos/Tutorgaming/JortNaiDee", "Date": "2015-11-08T12:56:37Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.gbif.occurrence.processor.interpreting.VerbatimOccurrenceInterpreter.interpretIndividualCount(verbatim, occ); } catch (java.lang.Exception e) { org.gbif.occurrence.processor.interpreting.VerbatimOccurrenceInterpreter.LOG.warn(\"Caught a runtime exception during individualCount interpretation\", e); occ.addIssue(OccurrenceIssue.INTERPRETATION_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3511/buggy-version/occurrence-processor.src.main.java.org.gbif.occurrence.processor.interpreting.VerbatimOccurrenceInterpreter.java", "BodyUseAPI": ["org.gbif.occurrence.processor.interpreting.VerbatimOccurrenceInterpreter.interpretIndividualCount(org.gbif.api.model.occurrence.VerbatimOccurrence,org.gbif.api.model.occurrence.Occurrence)"], "Fixed commit": "a24e096e173fe64de9f6a160e2b3485a49260f7b", "Url": "https://api.github.com/repos/gbif/occurrence", "Date": "2016-02-15T10:38:58Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(itemBlacklist.isItemBlacklisted(itemStack))) { return false; } } catch (java.lang.RuntimeException e) { mezz.jei.util.Log.error(\"Could not check blacklist for stack {}\", itemStack, e); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7947/buggy-version/src.main.java.mezz.jei.ItemFilter.java", "BodyUseAPI": ["mezz.jei.api.IItemBlacklist.isItemBlacklisted(net.minecraft.item.ItemStack)"], "Fixed commit": "b4e75f38fd3961ca4182464a199cfe5207f4328c", "Url": "https://api.github.com/repos/mezz/JustEnoughItems", "Date": "2016-03-21T20:39:55Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.parse.ParseCloud.callFunction(\"stitch\", params); android.widget.Toast.makeText(this, R.string.projectSaved, Toast.LENGTH_SHORT).show(); } catch (com.parse.ParseException e) { e.printStackTrace(); android.widget.Toast.makeText(this, R.string.couldntUpload, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2939/buggy-version/app.src.main.java.com.comp.iitb.vialogue.activity.UploadVideoActivity.java", "BodyUseAPI": ["com.parse.ParseCloud.callFunction(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)", "android.widget.Toast.makeText(com.comp.iitb.vialogue.activity.UploadVideoActivity,R.string.projectSaved,Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(this, R.string.projectSaved, Toast.LENGTH_SHORT).show()"], "Fixed commit": "5d74deb17a4b948dd390ce9ebcebe9bcff6dd313", "Url": "https://api.github.com/repos/lokavidya-iitb/Vialogue", "Date": "2017-03-30T08:12:40Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.baasbox.db.DbHelper.requestTransaction(); com.orientechnologies.orient.core.record.impl.ORecordBytes fileBlob = file.field(\"file\"); com.baasbox.db.DbHelper.getConnection().delete(fileBlob); java.util.Map resizedImages = ((java.util.Map) (file.field(\"resized\"))); if (resizedImages != null) { resizedImages.values().forEach(( x) -> { com.baasbox.db.DbHelper.getConnection().delete(((com.orientechnologies.orient.core.record.impl.ORecordBytes) (x))); }); } com.orientechnologies.orient.core.record.impl.ODocument fileMetadata = ((com.orientechnologies.orient.core.record.impl.ODocument) (file.field(\"metadata\"))); if (fileMetadata != null) com.baasbox.db.DbHelper.getConnection().delete(fileMetadata); com.orientechnologies.orient.core.record.impl.ODocument fileTextContent = ((com.orientechnologies.orient.core.record.impl.ODocument) (file.field(\"text_content\"))); if (fileTextContent != null) com.baasbox.db.DbHelper.getConnection().delete(fileTextContent); dao.delete(file.getIdentity()); com.baasbox.db.DbHelper.commitTransaction(); } catch (java.lang.Exception e) { com.baasbox.service.logging.BaasBoxLogger.error(org.apache.commons.lang.exception.ExceptionUtils.getFullStackTrace(e)); com.baasbox.db.DbHelper.rollbackTransaction(); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2570/buggy-version/app.com.baasbox.service.storage.FileService.java", "BodyUseAPI": ["com.baasbox.db.DbHelper.getConnection()", "com.orientechnologies.orient.core.record.impl.ODocument.getIdentity()", "com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String)", "com.baasbox.db.DbHelper.getConnection().delete(com.orientechnologies.orient.core.record.impl.ORecordBytes)", "com.baasbox.db.DbHelper.getConnection().delete(com.orientechnologies.orient.core.record.impl.ODocument)", "com.baasbox.db.DbHelper.getConnection()", "com.baasbox.db.DbHelper.requestTransaction()", "java.util.Collection.forEach(java.util.function.Consumer)", "com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String)", "com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String)", "com.baasbox.dao.FileDao.delete(file.getIdentity())", "com.baasbox.db.DbHelper.getConnection().delete(com.orientechnologies.orient.core.record.impl.ODocument)", "java.util.Map.values()", "com.baasbox.db.DbHelper.getConnection()", "com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String)", "com.baasbox.db.DbHelper.getConnection().delete(java.lang.Object)", "com.baasbox.db.DbHelper.getConnection()", "com.baasbox.db.DbHelper.commitTransaction()"], "Fixed commit": "6d501a5de0c3fa9f789e81e2bda95c2bd7fa91c9", "Url": "https://api.github.com/repos/baasbox/baasbox", "Date": "2015-12-29T14:13:57Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { findRows(session, dataContainer, dataReceiver); } catch (org.jkiss.dbeaver.ui.search.data.DBCException e) { org.jkiss.dbeaver.ui.search.data.SearchDataQuery.log.error(((\"Fulltext search failed in '\" + (dataContainer.getName())) + \"'\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3514/buggy-version/plugins.org.jkiss.dbeaver.core.src.org.jkiss.dbeaver.ui.search.data.SearchDataQuery.java", "BodyUseAPI": ["org.jkiss.dbeaver.ui.search.data.SearchDataQuery.findRows(org.jkiss.dbeaver.ui.search.data.DBCSession,org.jkiss.dbeaver.model.struct.DBSDataContainer,org.jkiss.dbeaver.ui.search.data.SearchDataQuery.TestDataReceiver)"], "Fixed commit": "1f5578f1f20fb483667a1be57b1fa3be200254cc", "Url": "https://api.github.com/repos/dbeaver/dbeaver", "Date": "2017-08-06T19:38:54Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { snowThread.hitsSnowflake(event.getX(), event.getY()); } catch (java.util.ConcurrentModificationException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2022/buggy-version/app.src.main.java.de.weidemeier.alexander.downfall.SnowDisplay.java", "BodyUseAPI": ["de.weidemeier.alexander.downfall.SnowThread.hitsSnowflake(event.getX(),event.getY())", "android.view.MotionEvent.getY()", "android.view.MotionEvent.getX()"], "Fixed commit": "ccdbe35d7bcc5e91f0424578b66054977884f03c", "Url": "https://api.github.com/repos/AlexofTheBigE/Downfall", "Date": "2017-01-23T13:51:43Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { expr[i] = tc.check(expr[i], ctx, scp); } catch (final org.basex.query.expr.QueryException ex) { expr[i] = org.basex.query.expr.FNInfo.error(ex, tp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2713/buggy-version/basex-core.src.main.java.org.basex.query.expr.If.java", "BodyUseAPI": ["org.basex.query.expr.TypeCheck.check(expr[i],org.basex.query.expr.QueryContext,org.basex.query.expr.VarScope)"], "Fixed commit": "1eb865c160c3d41a5eb51825dcc69d7f228bb578", "Url": "https://api.github.com/repos/LukasK/basex", "Date": "2014-01-27T13:13:41Z"},
{"Line": "=>726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.zstack.core.db.DatabaseFacadeImpl.logger.info(java.lang.String.format(\"clean EO[%s], to be cleaning data: %s\", info.eoClass.getSimpleName(), ids.toString())); info.hardDelete(ids); } catch (java.lang.Throwable throwable) { org.zstack.core.db.DatabaseFacadeImpl.logger.info(java.lang.String.format(\"clean EO[%s], an error has occurred, please ignore\", info.eoClass.getSimpleName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4006/buggy-version/core.src.main.java.org.zstack.core.db.DatabaseFacadeImpl.java", "BodyUseAPI": ["org.zstack.core.db.DatabaseFacadeImpl.EntityInfo.hardDelete(java.util.List)", "org.zstack.utils.logging.CLogger.info(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String,java.lang.String)", "java.lang.Class.getSimpleName()", "java.util.List.toString()"], "Fixed commit": "4cd6ea5bdb0f3d54d5ede55e3f0cad1cc7f674e9", "Url": "https://api.github.com/repos/liningone/zstack", "Date": "2017-05-05T16:48:32Z"},
{"Line": "=>850", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { super.onRestoreInstanceState(state); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1115/buggy-version/pulltorefresh.src.main.java.com.handmark.pulltorefresh.library.PullToRefreshBase.java", "BodyUseAPI": ["android.widget.LinearLayout.onRestoreInstanceState(android.os.Parcelable)"], "Fixed commit": "a41249d7a790f2a4489ec320abf0cf70bc20f392", "Url": "https://api.github.com/repos/kuwork/Android-PullToRefresh", "Date": "2017-12-30T22:06:12Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { referenceInfo = securePaymentInfoService.findSecurePaymentInfo(paymentInfo.getReferenceNumber(), PaymentInfoType.CREDIT_CARD); } catch (org.broadleafcommerce.core.workflow.WorkflowException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/24/buggy-version/core.broadleaf-framework.src.main.java.org.broadleafcommerce.core.payment.service.BroadleafPaymentInfoTypeServiceImpl.java", "BodyUseAPI": ["org.broadleafcommerce.core.payment.service.SecurePaymentInfoService.findSecurePaymentInfo(paymentInfo.getReferenceNumber(),PaymentInfoType.CREDIT_CARD)", "org.broadleafcommerce.core.payment.service.PaymentInfo.getReferenceNumber()"], "Fixed commit": "aec26d9e0af2b9d4bf0dc99986de0f6150a9b78b", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-01-22T00:01:32Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { entityNew.setLocationAndAngles(event.entity.posX, event.entity.posY, event.entity.posZ, event.entity.rotationYaw, event.entity.rotationPitch); entityNew.getDataWatcher().addObject(30, ((byte) (1))); event.world.spawnEntityInWorld(entityNew); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Error.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5835/buggy-version/assets.fyresmodjam.EntityStatHelper.java", "BodyUseAPI": ["entityNew.getDataWatcher().addObject(int,int)", "net.minecraft.entity.Entity.getDataWatcher()", "net.minecraft.entity.Entity.setLocationAndAngles(event.entity.posX,event.entity.posY,event.entity.posZ,event.entity.rotationYaw,event.entity.rotationPitch)", "event.world.spawnEntityInWorld(net.minecraft.entity.Entity)"], "Fixed commit": "01db1079e2b41b2b6f0bec4cae90203a09f59eda", "Url": "https://api.github.com/repos/xFyreStorm/Fyres-Modjam-Entry", "Date": "2013-08-05T18:47:13Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class ed = com.ardublock.ArduBlockTool.editor.getClass(); java.lang.Class[] cArg = new java.lang.Class[1]; cArg[0] = java.lang.String.class; method = ed.getMethod(\"setText\", cArg); method.invoke(com.ardublock.ArduBlockTool.editor, source); } catch (java.lang.NoSuchMethodException e) { com.ardublock.ArduBlockTool.editor.getCurrentTab().setText(source); } catch (java.lang.IllegalAccessException e) { com.ardublock.ArduBlockTool.editor.getCurrentTab().setText(source); } catch (java.lang.SecurityException e) { com.ardublock.ArduBlockTool.editor.getCurrentTab().setText(source); } catch (java.lang.reflect.InvocationTargetException e) { com.ardublock.ArduBlockTool.editor.getCurrentTab().setText(source); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1884/buggy-version/ardublock-master.src.main.java.com.ardublock.ArduBlockTool.java", "BodyUseAPI": ["processing.app.Editor.getClass()", "java.lang.Class.getMethod(java.lang.String,java.lang.Class[])", "java.lang.reflect.Method.invoke(processing.app.Editor,java.lang.String)"], "Fixed commit": "257bea38e4233ed36577470b432535e0e6134222", "Url": "https://api.github.com/repos/BirdBrainTechnologies/HummingbirdArdublock", "Date": "2016-10-24T15:37:06Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class ed = com.ardublock.ArduBlockTool.editor.getClass(); java.lang.Class[] cArg = new java.lang.Class[1]; cArg[0] = java.lang.String.class; method = ed.getMethod(\"setText\", cArg); method.invoke(com.ardublock.ArduBlockTool.editor, source); } catch (java.lang.NoSuchMethodException e) { com.ardublock.ArduBlockTool.editor.getCurrentTab().setText(source); } catch (java.lang.IllegalAccessException e) { com.ardublock.ArduBlockTool.editor.getCurrentTab().setText(source); } catch (java.lang.SecurityException e) { com.ardublock.ArduBlockTool.editor.getCurrentTab().setText(source); } catch (java.lang.reflect.InvocationTargetException e) { com.ardublock.ArduBlockTool.editor.getCurrentTab().setText(source); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1884/buggy-version/ardublock-all.src.main.java.com.ardublock.ArduBlockTool.java", "BodyUseAPI": ["processing.app.Editor.getClass()", "java.lang.Class.getMethod(java.lang.String,java.lang.Class[])", "java.lang.reflect.Method.invoke(processing.app.Editor,java.lang.String)"], "Fixed commit": "257bea38e4233ed36577470b432535e0e6134222", "Url": "https://api.github.com/repos/BirdBrainTechnologies/HummingbirdArdublock", "Date": "2016-10-24T15:37:06Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { processFrame(fr); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8600/buggy-version/src.org.dyndns.fzoli.rccar.socket.AbstractVideoProcess.java", "BodyUseAPI": ["org.dyndns.fzoli.rccar.socket.AbstractVideoProcess.processFrame(net.sf.jipcam.axis.MjpegFrame)"], "Fixed commit": "94e3acbfd1c5e93a497e8234698d998f401deae7", "Url": "https://api.github.com/repos/fzoli/RemoteControlCar", "Date": "2013-01-07T10:55:40Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.sinceTime = java.net.URLDecoder.decode(strSince, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { throw new org.apache.camel.RuntimeCamelException(java.lang.String.format(\"Error decoding %s.since with value %s due to: %s\", org.apache.camel.component.facebook.FacebookConstants.READING_PREFIX, strSince, e.getMessage()), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6816/buggy-version/components.camel-facebook.src.main.java.org.apache.camel.component.facebook.FacebookConsumer.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "76cdbd87eba442a7e33509c7dcd3d2b63d85aee1", "Url": "https://api.github.com/repos/dhirajsb/camel", "Date": "2013-10-10T07:14:56Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { buffer = getBuffer(); } catch (java.lang.NullPointerException e) { buffer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2691/buggy-version/HTMLEditor.src.htmleditor.HTMLEditor.java", "BodyUseAPI": ["htmleditor.HTMLEditor.getBuffer()"], "Fixed commit": "fe3718e012264c3c6468e83fe7b8cd76edf8b144", "Url": "https://api.github.com/repos/Hydral1k/HTMLEditor", "Date": "2015-03-01T21:29:30Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { wasFragmentPopped = mFragmentManager.popBackStackImmediate(backstackTag, 0); } catch (final java.lang.IllegalStateException e) { wasFragmentPopped = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/434/buggy-version/SmartReceiptsLibrary.src.main.java.co.smartreceipts.android.activities.NavigationHandler.java", "BodyUseAPI": ["android.support.v4.app.FragmentManager.popBackStackImmediate(java.lang.String,int)"], "Fixed commit": "2d14602bc4efdd4dca73ab0e4571e3798580a37e", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2015-09-30T13:52:34Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { collaboratorNames = new java.util.HashSet(repo.getCollaboratorNames()); } catch (java.io.FileNotFoundException e) { listener.getLogger().println(\"Not permitted to query list of collaborators, assuming none\"); collaboratorNames = java.util.Collections.emptySet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8747/buggy-version/src.main.java.org.jenkinsci.plugins.github_branch_source.GitHubSCMSource.java", "BodyUseAPI": ["org.kohsuke.github.GHRepository.getCollaboratorNames()"], "Fixed commit": "036bea5e24532840c3531c5ea752faffed85eef1", "Url": "https://api.github.com/repos/jenkinsci/github-branch-source-plugin", "Date": "2016-12-06T17:38:36Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { md = java.security.MessageDigest.getInstance(\"MD5\"); } catch (java.security.NoSuchAlgorithmException rx) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/694/buggy-version/TBook.src.ch.bbw.textbook.helper.MD5.java", "BodyUseAPI": ["java.security.MessageDigest.getInstance(java.lang.String)"], "Fixed commit": "3a777938d54c1f0d1737afaa03d61477385e26ba", "Url": "https://api.github.com/repos/patrickgue/TextBook", "Date": "2015-06-09T13:19:09Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { inputStream = new java.net.URL(mUri.toString()).openStream(); return android.graphics.drawable.Drawable.createFromStream(inputStream, mUri.toString()); } catch (java.net.MalformedURLException e) { cancel(true); e.printStackTrace(); } finally { if (inputStream != null) { inputStream.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2174/buggy-version/app.src.main.java.com.bananaplan.workflowandroid.data.loading.LoadingDrawableAsyncTask.java", "BodyUseAPI": ["android.graphics.drawable.Drawable.createFromStream(java.io.InputStream,mUri.toString())", "java.net.URL.openStream()", "android.net.Uri.toString()", "android.net.Uri.toString()"], "Fixed commit": "acd28926f7648c293fc9d02431496e3d2b676416", "Url": "https://api.github.com/repos/bananaplanTW/WorkFlowAndroid", "Date": "2015-10-16T13:40:24Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.ArrayList<org.bukkit.entity.Player> temp_set = new java.util.ArrayList(com.uddernetworks.tf2.guns.PlayerGuns.curr_gun.keySet()); for (org.bukkit.entity.Player player : temp_set) { com.uddernetworks.tf2.guns.PlayerGuns.curr_gun.remove(player); } com.uddernetworks.tf2.guns.PlayerGuns.player_guns.clear(); } catch (java.lang.Throwable throwable) { new com.uddernetworks.tf2.exception.ExceptionReporter(throwable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1795/buggy-version/src.main.java.com.uddernetworks.tf2.guns.PlayerGuns.java", "BodyUseAPI": ["java.util.ArrayList<com.uddernetworks.tf2.guns.GunPersonalized>.clear()", "java.util.HashMap<org.bukkit.entity.Player, com.uddernetworks.tf2.guns.GunObject>.remove(org.bukkit.entity.Player)", "java.util.HashMap<org.bukkit.entity.Player, com.uddernetworks.tf2.guns.GunObject>.keySet()"], "Fixed commit": "59e69a98079fd5e0c597e23ced80b05b1519f741", "Url": "https://api.github.com/repos/RubbaBoy/MineFortress2", "Date": "2016-12-11T14:01:33Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.ArrayList<org.bukkit.entity.Player> temp_set = new java.util.ArrayList(com.uddernetworks.tf2.guns.PlayerMetal.playerMetal.keySet()); for (org.bukkit.entity.Player player : temp_set) { com.uddernetworks.tf2.guns.PlayerMetal.playerMetal.remove(player); } } catch (java.lang.Throwable throwable) { new com.uddernetworks.tf2.exception.ExceptionReporter(throwable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1795/buggy-version/src.main.java.com.uddernetworks.tf2.guns.PlayerMetal.java", "BodyUseAPI": ["java.util.HashMap<org.bukkit.entity.Player, java.lang.Integer>.remove(org.bukkit.entity.Player)", "java.util.HashMap<org.bukkit.entity.Player, java.lang.Integer>.keySet()"], "Fixed commit": "59e69a98079fd5e0c597e23ced80b05b1519f741", "Url": "https://api.github.com/repos/RubbaBoy/MineFortress2", "Date": "2016-12-11T14:01:33Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (org.bukkit.entity.Player player : com.uddernetworks.tf2.guns.PlayerHealth.health.keySet()) { com.uddernetworks.tf2.guns.PlayerHealth.health.remove(player); } } catch (java.lang.Throwable throwable) { new com.uddernetworks.tf2.exception.ExceptionReporter(throwable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1795/buggy-version/src.main.java.com.uddernetworks.tf2.guns.PlayerHealth.java", "BodyUseAPI": ["com.uddernetworks.tf2.utils.HashMap3<org.bukkit.entity.Player, java.lang.Double, java.lang.Integer>.remove(org.bukkit.entity.Player)", "com.uddernetworks.tf2.utils.HashMap3<org.bukkit.entity.Player, java.lang.Double, java.lang.Integer>.keySet()"], "Fixed commit": "59e69a98079fd5e0c597e23ced80b05b1519f741", "Url": "https://api.github.com/repos/RubbaBoy/MineFortress2", "Date": "2016-12-11T14:01:33Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ref.child(java.lang.String.valueOf((-(i + 1)))).child(\"Added_By\").setValue(dataSnapshot.child(java.lang.String.valueOf((-(i + 2)))).child(\"Added_By\").getValue().toString()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/280/buggy-version/app.src.main.java.com.venkibellu.myapplication.News_Adding.java", "BodyUseAPI": ["dataSnapshot.child(java.lang.String.valueOf((-(i + 2)))).child(\"Added_By\").getValue()", "dataSnapshot.child(java.lang.String.valueOf((-(i + 2)))).child(java.lang.String)", "dataSnapshot.child(java.lang.String.valueOf((-(i + 2)))).child(\"Added_By\").getValue().toString()", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "ref.child(java.lang.String.valueOf((-(i + 1)))).child(\"Added_By\").setValue(dataSnapshot.child(java.lang.String.valueOf((-(i + 2)))).child(\"Added_By\").getValue().toString())", "ref.child(java.lang.String.valueOf((-(i + 1)))).child(java.lang.String)", "java.lang.String.valueOf(int)", "com.google.firebase.database.DatabaseReference.child(java.lang.String)", "java.lang.String.valueOf(int)"], "Fixed commit": "30ec819826d41c4c3d4b9ccb1d3c8df5cec43bd1", "Url": "https://api.github.com/repos/venki-bellu/UVCEConnectRetake", "Date": "2017-09-07T10:21:13Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { artists.add(((org.discogs.ws.search.ArtistSearchResult) (sr)).getArtist()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6630/buggy-version/src.com.tulskiy.musique.plugins.discogs.DiscogsCaller.java", "BodyUseAPI": ["org.discogs.ws.search.SearchResult.getArtist()", "java.util.List<org.discogs.model.Artist>.add(((org.discogs.ws.search.ArtistSearchResult) (sr)).getArtist())"], "Fixed commit": "5f4b81f6f97f99e559124cd623e8e86187bfadb0", "Url": "https://api.github.com/repos/tulskiy/musique", "Date": "2011-06-23T19:51:46Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (o.toString().startsWith(\"{\")) { list.set(i, org.giiwa.core.json.JSON.fromObject(o)); } } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3385/buggy-version/src.main.java.org.giiwa.core.json.JSON.java", "BodyUseAPI": ["org.giiwa.core.json.JSON.fromObject(java.lang.Object)", "java.lang.Object.toString()", "java.lang.String.startsWith(java.lang.String)", "java.util.List.set(int,org.giiwa.core.json.JSON)"], "Fixed commit": "d4d4bf6459ccb9d6100d371bf4c4d6cf0453dab5", "Url": "https://api.github.com/repos/giiwa/giiwa", "Date": "2016-11-14T08:36:48Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { l.add(ScaffoldGenerated(job)); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5798/buggy-version/compiler.src.casper.CasperScheduler.java", "BodyUseAPI": ["java.util.List<polyglot.frontend.goals.Goal>.add(polyglot.frontend.goals.Goal)", "casper.CasperScheduler.1.ScaffoldGenerated(polyglot.frontend.Job)"], "Fixed commit": "5ba448247fdd298e3dc93ecbbca2b6d052539a0b", "Url": "https://api.github.com/repos/uwplse/Casper", "Date": "2016-10-29T15:34:59Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4720/buggy-version/org.kevoree.extra.fota.org.kevoree.fota.api.src.main.java.org.kevoree.fota.Fota.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "5a93c5101f4c6e9ee95d5abe7244bdbc0b0c9761", "Url": "https://api.github.com/repos/dukeboard/kevoree-extra", "Date": "2012-11-19T08:12:38Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.rmi.registry.Registry registry = java.rmi.registry.LocateRegistry.createRegistry(2020); com.bonkers.ServerIntf stub = ((com.bonkers.ServerIntf) (java.rmi.server.UnicastRemoteObject.exportObject(this, 0))); registry.bind(\"ServerIntf\", stub); } catch (java.rmi.AlreadyBoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/469/buggy-version/src.com.bonkers.Server.java", "BodyUseAPI": ["java.rmi.registry.Registry.bind(java.lang.String,com.bonkers.ServerIntf)", "java.rmi.server.UnicastRemoteObject.exportObject(com.bonkers.Server,int)", "java.rmi.registry.LocateRegistry.createRegistry(int)"], "Fixed commit": "01160ab42564f5388b42f8b874efe8bbfaa951e7", "Url": "https://api.github.com/repos/Vesyrak/SystemY", "Date": "2016-11-20T11:55:16Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.rmi.registry.Registry registry = java.rmi.registry.LocateRegistry.createRegistry(2021); com.bonkers.ServerIntf stub = ((com.bonkers.ServerIntf) (java.rmi.server.UnicastRemoteObject.exportObject(this, 0))); registry.bind(\"ClientIntf\", stub); registry.bind(\"NodeIntf\", stub); } catch (java.rmi.AlreadyBoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/469/buggy-version/src.com.bonkers.Client.java", "BodyUseAPI": ["java.rmi.registry.LocateRegistry.createRegistry(int)", "java.rmi.registry.Registry.bind(java.lang.String,com.bonkers.ServerIntf)", "java.rmi.registry.Registry.bind(java.lang.String,com.bonkers.ServerIntf)", "java.rmi.server.UnicastRemoteObject.exportObject(com.bonkers.Client,int)"], "Fixed commit": "01160ab42564f5388b42f8b874efe8bbfaa951e7", "Url": "https://api.github.com/repos/Vesyrak/SystemY", "Date": "2016-11-20T11:55:16Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { m = object.getClass().getMethod(setter, java.lang.String.class); } catch (java.lang.NoSuchMethodException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/396/buggy-version/tika-server.src.main.java.org.apache.tika.server.resource.TikaResource.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getMethod(java.lang.String,java.lang.Class)", "java.lang.Object.getClass()"], "Fixed commit": "67cd6c35007aab2053bd0ee0e83108594f4e09bb", "Url": "https://api.github.com/repos/dameikle/tika", "Date": "2017-03-08T02:32:31Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ((edu.umich.verdict.dbms.DbmsJDBC) (vc.getDbms())).closeStatement(); } catch (edu.umich.verdict.exceptions.VerdictException e) { new java.sql.SQLException(edu.umich.verdict.util.StackTraceReader.stackTrace2String(e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8145/buggy-version/jdbc.src.main.java.edu.umich.verdict.jdbc.VerdictStatement.java", "BodyUseAPI": ["edu.umich.verdict.VerdictJDBCContext.getDbms()", "((edu.umich.verdict.dbms.DbmsJDBC) (vc.getDbms())).closeStatement()"], "Fixed commit": "36c7aa81526d9e3b9d31c263432c332fec774473", "Url": "https://api.github.com/repos/IdrisHanafi/verdict", "Date": "2017-12-01T03:10:19Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.interval = java.lang.Long.parseLong(pollingInterval); } catch (java.lang.NumberFormatException e) { throw new org.wso2.carbon.messaging.exceptions.ServerConnectorException(((\"Could not parse parameter: \" + (Constants.POLLING_INTERVAL)) + \" to numeric type: Long\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8156/buggy-version/connector-framework.src.main.java.org.wso2.carbon.connector.framework.server.polling.PollingServerConnector.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "531f7e6018c11e40ff41bd3f0a18ad04c51c2fa5", "Url": "https://api.github.com/repos/wso2/carbon-transports", "Date": "2017-04-07T05:15:05Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { serverConnectorController.bindInterface(this); } catch (java.lang.Exception e) { throw new org.wso2.carbon.messaging.exceptions.ServerConnectorException((((\"Cannot bind to \" + (this)) + \" : \") + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8156/buggy-version/http.org.wso2.carbon.transport.http.netty.src.main.java.org.wso2.carbon.transport.http.netty.listener.HTTPServerConnector.java", "BodyUseAPI": ["org.wso2.carbon.transport.http.netty.listener.ServerConnectorController.bindInterface(org.wso2.carbon.transport.http.netty.listener.HTTPServerConnector)"], "Fixed commit": "531f7e6018c11e40ff41bd3f0a18ad04c51c2fa5", "Url": "https://api.github.com/repos/wso2/carbon-transports", "Date": "2017-04-07T05:15:05Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { compareResult = execute(cmd); } catch (com.deluan.jenkins.plugins.rtc.hudson e) { output.println(\" RTC SCM - Jazz Client: Compare command detected AbortException\"); compareResult = new java.util.HashMap(); compareResult.put(\"AbortException\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3241/buggy-version/src.main.java.com.deluan.jenkins.plugins.rtc.JazzClient.java", "BodyUseAPI": ["com.deluan.jenkins.plugins.rtc.JazzClient.execute(com.deluan.jenkins.plugins.rtc.CompareCommand)"], "Fixed commit": "7f4f420cc896ec5bd95e04e3e2c2242fac20e663", "Url": "https://api.github.com/repos/richgonzalez321/rtc-plugin", "Date": "2013-02-19T13:16:36Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { modEdition.fireTableDataChanged(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8486/buggy-version/src.org.magic.gui.dashlet.EditionsDashlet.java", "BodyUseAPI": ["org.magic.gui.models.EditionsShakerTableModel.fireTableDataChanged()"], "Fixed commit": "9201f4da5518b7ac175cce5a9fb9eb9b9cc1ed70", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-08-30T14:10:18Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((_messageCount) % logFrequency) == 0) { long delta = ((java.lang.System.currentTimeMillis()) - (_messageStart)) / 1000; long rate = 0; if (delta != 0) { rate = (_messageCount) / delta; } org.transitime.custom.aws.AvlSqsClientModule.logger.info((((((((((((\"received \" + (_messageCount)) + \" message in \") + delta) + \" seconds (\") + rate) + \"/s) receive size=\") + (_deserializeQueue.size())) + \", archive size=\") + (_archiveQueue.size())) + \", ack size=\") + (_acknowledgeQueue.size()))); _messageStart = java.lang.System.currentTimeMillis(); _messageCount = 0; } } catch (java.lang.Exception e) { org.transitime.custom.aws.AvlSqsClientModule.logger.error(\"status message exception: \", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1499/buggy-version/transitime.src.main.java.org.transitime.custom.aws.AvlSqsClientModule.java", "BodyUseAPI": ["java.lang.System.currentTimeMillis()", "java.util.concurrent.ArrayBlockingQueue<com.amazonaws.services.sqs.model.Message>.size()", "java.lang.System.currentTimeMillis()", "java.util.concurrent.ArrayBlockingQueue<com.amazonaws.services.sqs.model.Message>.size()", "java.util.concurrent.ArrayBlockingQueue<com.amazonaws.services.sqs.model.Message>.size()", "org.slf4j.Logger.info((((((((((((\"received \" + (_messageCount)) + \" message in \") + delta) + \" seconds (\") + rate) + \"/s) receive size=\") + (_deserializeQueue.size())) + \", archive size=\") + (_archiveQueue.size())) + \", ack size=\") + (_acknowledgeQueue.size())))"], "Fixed commit": "ce110f82e84e4cd85bed9a07b18e472efc54762e", "Url": "https://api.github.com/repos/sheldonabrown/core", "Date": "2015-09-30T19:04:07Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { setContent(id, text); } catch (com.google.gwt.core.client.JavaScriptException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1970/buggy-version/src.main.java.org.ednovo.gooru.client.ui.TinyMCE.java", "BodyUseAPI": ["org.ednovo.gooru.client.ui.TinyMCE.setContent(java.lang.String,java.lang.String)"], "Fixed commit": "ede8efa138c2f704909d01ccf82b34112eb2783e", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-08-10T12:58:02Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return com.opengamma.strata.basics.index.FloatingRateName.of(name); } catch (java.lang.Exception e) { log.error((\"can not find name :\" + name)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2045/buggy-version/src.main.java.com.acuo.collateral.transform.trace.socs.FloatingRateNameSoc.java", "BodyUseAPI": ["com.opengamma.strata.basics.index.FloatingRateName.of(java.lang.String)"], "Fixed commit": "fb0a7b5f7e9fe8022aaa2fb7a6e4fbbdeed9e89c", "Url": "https://api.github.com/repos/anaxo-io/acuo-trace", "Date": "2017-05-25T03:11:37Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { privacyLog.logCommsFw(stanza.getFrom(), stanza.getTo(), payload); } catch (org.springframework.osgi.service.ServiceUnavailableException e) { log.warn(\"Privacy Logger unavailable. Resuming without Privacy Logger...\", e); privacyLogEnabled = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4230/buggy-version/platform-infrastructure.comms-frwk.XCCommunicationMgr.src.main.java.org.societies.comm.xmpp.xc.impl.XCCommunicationMgr.java", "BodyUseAPI": ["org.societies.api.comm.xmpp.datatypes.Stanza.getFrom()", "org.societies.api.comm.xmpp.datatypes.Stanza.getTo()", "org.societies.api.internal.privacytrust.privacyprotection.model.privacyassessment.IPrivacyLogAppender.logCommsFw(stanza.getFrom(),stanza.getTo(),java.lang.Object)"], "Fixed commit": "d2da06c638553520f6a754d5fe89f8e77c52257b", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2013-06-19T13:09:08Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { onSuccess(statusCode, headers, response.getJSONArray(\"items\")); } catch (org.json.JSONException e) { onFailure(statusCode, headers, e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/202/buggy-version/app.src.main.java.com.yastart.papaya.Model.Book.java", "BodyUseAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)", "com.yastart.papaya.Model.Book.1.onSuccess(int,org.apache.http.Header[],response.getJSONArray(\"items\"))"], "Fixed commit": "0a2d24729bd127f009b8e5b2a68281ec234b6606", "Url": "https://api.github.com/repos/rozag/papaya", "Date": "2015-04-04T18:20:05Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { io.getmQueueConsumer().abort(); if ((io.getCurrentSynchCallback()) != null) { io.getCurrentSynchCallback().onFail(333, \"Connection lost\"); } io.onFail(333, \"Connection lost\"); connectionCallback.onFail((-1), \"disconnected\"); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5518/buggy-version/platforms.android.src.de.max.miband.bluetooth.BTConnectionManager.java", "BodyUseAPI": ["de.max.miband.bluetooth.BTCommandManager.getCurrentSynchCallback()", "io.getCurrentSynchCallback().onFail(int,java.lang.String)", "de.max.miband.bluetooth.BTCommandManager.getCurrentSynchCallback()", "de.max.miband.bluetooth.BTCommandManager.getmQueueConsumer()", "io.getmQueueConsumer().abort()", "de.max.miband.ActionCallback.onFail(int,java.lang.String)", "de.max.miband.bluetooth.BTCommandManager.onFail(int,java.lang.String)"], "Fixed commit": "0064f4de5f116dfb0cb56a499e183eec40b81d8a", "Url": "https://api.github.com/repos/m-altmeyer/BandSynchronization", "Date": "2016-10-06T11:22:27Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { whitespaceRule = new org.eclipse.jface.text.rules.WhitespaceRule(new org.python.pydev.editor.PyCodeScanner.GreatWhite(), defaultToken); } catch (java.lang.Throwable e) { whitespaceRule = new org.eclipse.jface.text.rules.WhitespaceRule(new org.python.pydev.editor.PyCodeScanner.GreatWhite()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5935/buggy-version/plugins.org.python.pydev.src.org.python.pydev.editor.PyCodeScanner.java", "BodyUseAPI": [], "Fixed commit": "8f54a1419ebbeaa705fa75d4f2194dfd7e9b7cc5", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2012-07-25T16:59:36Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (userTo.isNew()) { super.create(ru.javawebinar.topjava.util.UserUtil.createNewFromTo(userTo)); }else { super.update(userTo, userTo.getId()); } } catch (org.springframework.dao.DataIntegrityViolationException e) { throw new org.springframework.dao.DataIntegrityViolationException(messageSource.getMessage(\"validation.email\", null, org.springframework.context.i18n.LocaleContextHolder.getLocale())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3323/buggy-version/src.main.java.ru.javawebinar.topjava.web.user.AdminAjaxController.java", "BodyUseAPI": ["ru.javawebinar.topjava.web.user.AbstractUserController.create(ru.javawebinar.topjava.util.UserUtil.createNewFromTo(userTo))", "ru.javawebinar.topjava.to.UserTo.getId()", "ru.javawebinar.topjava.util.UserUtil.createNewFromTo(ru.javawebinar.topjava.to.UserTo)", "ru.javawebinar.topjava.to.UserTo.isNew()", "ru.javawebinar.topjava.web.user.AbstractUserController.update(ru.javawebinar.topjava.to.UserTo,userTo.getId())"], "Fixed commit": "21a1613e6b964ed3cc9f918ae612b6ddbb0cd30a", "Url": "https://api.github.com/repos/TopJavaDev/CaloriesManagement", "Date": "2017-09-10T16:48:07Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { percent = (java.lang.Double.parseDouble(percentString)) / 100; } catch (java.lang.NumberFormatException nfe) { com.wolvencraft.prison.mines.util.Message.sendFormattedError(\"Invalid percent value provided\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/9076/buggy-version/src.com.wolvencraft.prison.mines.cmd.TriggerCommand.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "04346a61a630b13dff2bce339bb1e046ae03e0dd", "Url": "https://api.github.com/repos/bitWolfy/PrisonMine", "Date": "2013-02-08T04:09:14Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { x2 = Kinput.nextInt(); if (x2 == 1) { java.lang.String SHG = \"You fired a Heavy Grenade! \"; for (int S = 0; S < (SHG.length()); S++) { java.lang.System.out.print(SHG.charAt(S)); java.lang.Thread.sleep(x); } }else { java.lang.System.out.print(\"Something went wrong.\"); } } catch (java.util.InputMismatchException err2) { java.lang.System.out.println(\"Still fucked.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8437/buggy-version/ASCII-TANK.src.ascii.tank.ASCIITANK.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.Thread.sleep(int)", "java.util.Scanner.nextInt()", "java.io.PrintStream.print(char)", "java.lang.String.charAt(int)", "java.io.PrintStream.print(java.lang.String)"], "Fixed commit": "04deb87a35dfc721d97a6c29a05dfbd4392a0101", "Url": "https://api.github.com/repos/NaiPox/JavaProjects", "Date": "2016-11-18T14:06:16Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (x > (getMedian())) { minHeap.add(x); }else { maxHeap.add(x); } } catch (java.util.NoSuchElementException e) { maxHeap.add(x); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5805/buggy-version/14Median.RunningMedian.java", "BodyUseAPI": ["RunningMedian.getMedian()", "MyHeap.add(java.lang.Integer)", "MyHeap<java.lang.Integer>.add(java.lang.Integer)"], "Fixed commit": "5b5d937ebc7d035ae3eab48bbd4eac9abb501cf4", "Url": "https://api.github.com/repos/Glitchmanbeta/MKS22X-HW", "Date": "2016-05-11T02:59:16Z"},
{"Line": "=>3045", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { databaseManager.fileRecord().insertFile(atttachFileFinal, syncFinal, fileFinal); if (callback != null) { execute(callback); } } catch (java.lang.Exception e) { reportError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8642/buggy-version/faims-android-app.src.au.org.intersect.faims.android.beanshell.BeanShellLinker.java", "BodyUseAPI": ["databaseManager.fileRecord().insertFile(java.lang.String,boolean,java.io.File)", "au.org.intersect.faims.android.beanshell.BeanShellLinker.28.execute(java.lang.String)", "au.org.intersect.faims.android.database.DatabaseManager.fileRecord()"], "Fixed commit": "e0c7245b95b33fecfb57ce7486f7ece243f7ffb5", "Url": "https://api.github.com/repos/IntersectAustralia/faims-android", "Date": "2014-11-03T02:45:45Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (str.isEmpty()) return false; if ((new java.lang.Integer(str)) == 0) return true; if ((new java.lang.Integer(str)) == 1) return true; if ((str.length()) != 3) return false; if ((str.substring(0, 1).equals(\"0\")) | (str.substring(0, 1).equals(\"1\"))) if ((str.substring(1, 2).equals(\"0\")) | (str.substring(1, 2).equals(\"1\"))) if ((str.substring(2, 3).equals(\"0\")) | (str.substring(2, 3).equals(\"1\"))) return true; } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1357/buggy-version/src.main.java.EventMenu.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.equals(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.isEmpty()", "java.lang.String.equals(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "ef5ec23d126b2bc7bcd3c5df7052c6f383c0926c", "Url": "https://api.github.com/repos/ArtiomCX75/BugsnagSimple", "Date": "2016-01-14T15:06:59Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { localeListFile = new java.io.File(gui.MainFrame.class.getResource(\"../po/languages\").toURI()); } catch (java.net.URISyntaxException use) { out(use.toString(), main.Util.VERBOSITY_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3818/buggy-version/src.main.Util.java", "BodyUseAPI": ["java.lang.Class.getResource(java.lang.String)", "java.net.URL.toURI()"], "Fixed commit": "773e3802a66c820983ecade463f8a38c23e539b5", "Url": "https://api.github.com/repos/pryds/spotmachine", "Date": "2013-09-01T15:26:05Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { inputFile = fileSystem.inputFile(fileSystem.predicates().and(fileSystem.predicates().hasAbsolutePath(file.getAbsolutePath()), fileSystem.predicates().hasType(InputFile.Type.MAIN))); } catch (java.lang.Exception ex) { org.sonar.plugins.resharper.ReSharperSensor.logSkippedIssue(issue, ((\"Failed to get input file: \\\"\" + (ex.getMessage())) + \"\\\"\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/273/buggy-version/src.main.java.org.sonar.plugins.resharper.ReSharperSensor.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "org.sonar.api.batch.fs.FileSystem.inputFile(fileSystem.predicates().and(fileSystem.predicates().hasAbsolutePath(file.getAbsolutePath()), fileSystem.predicates().hasType(InputFile.Type.MAIN)))", "org.sonar.api.batch.fs.FileSystem.predicates()", "org.sonar.api.batch.fs.FileSystem.predicates()", "fileSystem.predicates().hasType(InputFile.Type.MAIN)", "org.sonar.api.batch.fs.FileSystem.predicates()", "fileSystem.predicates().and(fileSystem.predicates().hasAbsolutePath(file.getAbsolutePath()),fileSystem.predicates().hasType(InputFile.Type.MAIN))", "fileSystem.predicates().hasAbsolutePath(java.lang.String)"], "Fixed commit": "4f805e1375be658fac573b2fd0cd33c1a4f241ab", "Url": "https://api.github.com/repos/GregBartlett/sonar-resharper", "Date": "2017-02-14T04:13:38Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String ownerUsername = ((java.lang.String) (nodeService.getProperty(expiredDoc, ContentModel.PROP_OWNER))); org.alfresco.service.cmr.repository.NodeRef owner = personService.getPerson(ownerUsername); ownerEmail = ((java.lang.String) (nodeService.getProperty(expiredDoc, ContentModel.PROP_EMAIL))); } catch (org.alfresco.service.cmr.repository.InvalidNodeRefException ex) { me.anonis.alf.expirable.actions.NotifyExpiredContent.LOG.warn((\"Cannot get email of owner of \" + nodeRefStr)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6875/buggy-version/expirable-content-repo.src.main.java.me.anonis.alf.expirable.actions.NotifyExpiredContent.java", "BodyUseAPI": ["org.alfresco.service.cmr.repository.NodeService.getProperty(org.alfresco.service.cmr.repository.NodeRef,ContentModel.PROP_OWNER)", "org.alfresco.service.cmr.repository.NodeService.getProperty(org.alfresco.service.cmr.repository.NodeRef,ContentModel.PROP_EMAIL)", "org.alfresco.service.cmr.security.PersonService.getPerson(java.lang.String)"], "Fixed commit": "071028265e3845ebf45a4879956d93098bd82035", "Url": "https://api.github.com/repos/xaionaro/alfresco-expirable-content", "Date": "2017-08-09T17:43:08Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { movieList = new com.lionsinvests.watchdb.app.movie.MovieList(movieListAsString); } catch (org.json.JSONException e) { android.util.Log.e(getClass().getSimpleName(), \"failed to read list\", e); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6078/buggy-version/app.src.main.java.com.lionsinvests.watchdb.app.ui.MovieListPagerAdapter.java", "BodyUseAPI": [], "Fixed commit": "9bc16701172346176a875344b44f4bb82e2baf4a", "Url": "https://api.github.com/repos/monsharen/watchdb-android", "Date": "2016-01-30T23:32:22Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tcr.setNumber(java.lang.Integer.parseInt(testNumber)); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6879/buggy-version/src.main.java.org.owasp.benchmark.score.parsers.JuliaReader.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "org.owasp.benchmark.score.parsers.TestCaseResult.setNumber(int)"], "Fixed commit": "ef956228d686196c7464eabdcdccc1834217ae76", "Url": "https://api.github.com/repos/OWASP/Benchmark", "Date": "2016-10-28T02:26:58Z"},
{"Line": "=>8441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { chan.add(player, mud.MUDServer.OOC_CHANNEL); } catch (java.lang.Exception e) { java.lang.System.out.println(\"No ooc channel exists!!!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3275/buggy-version/MUDServer.src.mud.MUDServer.java", "BodyUseAPI": ["mud.ChatChanneler.add(mud.Player,java.lang.String)"], "Fixed commit": "74d956ffed22bdd19b168b6c2586136518d2228a", "Url": "https://api.github.com/repos/jnharton/mud-server", "Date": "2013-02-20T15:05:56Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { initDataBaseDirectory(); } catch (java.lang.Exception e) { printException(\"database path doesn't defined\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6081/buggy-version/src.ru.fizteh.fivt.students.akhtyamovpavel.multifilemap.DataBaseShell.java", "BodyUseAPI": ["ru.fizteh.fivt.students.akhtyamovpavel.multifilemap.DataBaseShell.initDataBaseDirectory()"], "Fixed commit": "6c2e87d8799d9ce4a0be827e0b7ea6d26e4a60ec", "Url": "https://api.github.com/repos/akhtyamovpavel/fizteh-java-2014", "Date": "2014-11-17T19:34:29Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tmpItems = org.dfotos.rssfilter.Data.readFromYamlFile(\"all-items.yml\"); } catch (java.io.FileNotFoundException f) { org.dfotos.rssfilter.Data.log.log(java.util.logging.Level.SEVERE, \"all-items.yml not found - starting from scratch...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8303/buggy-version/src.main.java.org.dfotos.rssfilter.Data.java", "BodyUseAPI": ["org.dfotos.rssfilter.Data.readFromYamlFile(java.lang.String)"], "Fixed commit": "99a79169ebec862883a8b964a8269f5371a1ac07", "Url": "https://api.github.com/repos/stargazer33/rss-filter", "Date": "2015-02-21T15:27:32Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { do { java.lang.Thread.sleep(100); } while ((mSocket.connected()) == false ); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4390/buggy-version/app.src.main.java.com.example.taek.commutingchecker.utils.SocketIO.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)", "io.socket.client.Socket.connected()"], "Fixed commit": "8ce885fdfd02a52bed0af7d1ec16ce36fcc7374b", "Url": "https://api.github.com/repos/awesometic/CommutingChecker", "Date": "2016-08-22T04:38:35Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { logFile = new com.sun.jndi.toolkit.url.Uri((output + \"/progress.log\")).getPath(); } catch (java.net.MalformedURLException e) { logFile = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7578/buggy-version/src.main.java.hu.sztaki.ilab.cumulonimbus.als.ALS.java", "BodyUseAPI": ["com.sun.jndi.toolkit.url.Uri.getPath()"], "Fixed commit": "a3d04ba21f09d7457f4c563e89b0a0c8ef4eb59a", "Url": "https://api.github.com/repos/illes/sztaki-als", "Date": "2013-10-24T11:11:43Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { knownerrorfinder.ReportMenuOptions.deleteReports(this); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(knownerrorfinder.MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/9221/buggy-version/src.knownerrorfinder.MainFrame.java", "BodyUseAPI": ["knownerrorfinder.ReportMenuOptions.deleteReports(knownerrorfinder.MainFrame)"], "Fixed commit": "5579d1f4f728c814d08c6b5371461174d157c9d2", "Url": "https://api.github.com/repos/incogniito/KnownErrorFinder", "Date": "2017-03-22T13:26:01Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.time.format.DateTimeFormatter formatter = java.time.format.DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"); dateJava = java.time.LocalDate.parse(date, formatter); for (java.util.Iterator<com.model.Payment> itt = payments.iterator(); itt.hasNext();) { com.model.Payment p = itt.next(); if (!(p.getDate().equals(dateJava))) { itt.remove(); } } } catch (java.lang.Exception e) { Utils.logger.error(\"date field empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8239/buggy-version/src.main.java.com.controller.HistoryController.java", "BodyUseAPI": ["com.model.Payment.getDate()", "java.util.Iterator<com.model.Payment>.remove()", "java.util.Iterator<com.model.Payment>.next()", "java.util.List<com.model.Payment>.iterator()", "java.time.format.DateTimeFormatter.ofPattern(java.lang.String)", "java.time.LocalDate.parse(java.lang.String,java.time.format.DateTimeFormatter)", "java.util.Iterator<com.model.Payment>.hasNext()", "p.getDate().equals(java.time.LocalDate)"], "Fixed commit": "b9e140e5ee2f44dc04945c46ae4ef3427967ff91", "Url": "https://api.github.com/repos/LachezarM/cashguide", "Date": "2016-04-11T06:14:19Z"},
{"Line": "=>707", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7722/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "69df4399086b5fa8e92bb2eddaeb05ee65cd5d4b", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-09-09T22:03:38Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.util.DisplayMetrics metrics = context.getResources().getDisplayMetrics(); float widthDp = (metrics.widthPixels) / (metrics.density); float heightDp = (metrics.heightPixels) / (metrics.density); float smallestWidthDp = (widthDp < heightDp) ? widthDp : heightDp; if (id == (R.bool.abs__action_bar_embed_tabs)) { if (widthDp >= 480) { return true; } return false; } if (id == (R.bool.abs__split_action_bar_is_narrow)) { if (widthDp >= 480) { return false; } return true; } if (id == (R.bool.abs__action_bar_expanded_action_views_exclusive)) { if (smallestWidthDp >= 600) { return false; } return true; } if (id == (R.bool.abs__config_allowActionMenuItemTextWithIcon)) { if (widthDp >= 480) { return true; } return false; } } catch (java.lang.ArrayIndexOutOfBoundsException ex) { return context.getResources().getBoolean(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8725/buggy-version/library.src.com.actionbarsherlock.internal.ResourcesCompat.java", "BodyUseAPI": ["android.content.Context.getResources()", "context.getResources().getDisplayMetrics()"], "Fixed commit": "43d37227845ec56e24344a3af36ab48f26f54775", "Url": "https://api.github.com/repos/atermenji/ActionBarSherlock", "Date": "2012-08-06T15:20:04Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((imagegBytes.length) == 0) imageViewAvatar.setImageDrawable(context.getResources().getDrawable(context.getResources().getIdentifier(\"@drawable/kaseb_pic\", null, context.getPackageName()))); else { imageViewAvatar.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(imagegBytes, 0, imagegBytes.length)); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1366/buggy-version/app.src.main.java.mjkarbasian.moshtarimadar.adapters.CustomerAdapter.java", "BodyUseAPI": ["android.widget.ImageView.setImageDrawable(context.getResources().getDrawable(context.getResources().getIdentifier(\"@drawable/kaseb_pic\", null, context.getPackageName())))", "context.getResources().getIdentifier(java.lang.String,<nulltype>,context.getPackageName())", "android.content.Context.getResources()", "android.widget.ImageView.setImageBitmap(android.graphics.BitmapFactory.decodeByteArray(imagegBytes, 0, imagegBytes.length))", "android.content.Context.getResources()", "android.content.Context.getPackageName()", "android.graphics.BitmapFactory.decodeByteArray(byte[],int,int)", "context.getResources().getDrawable(context.getResources().getIdentifier(\"@drawable/kaseb_pic\", null, context.getPackageName()))"], "Fixed commit": "6201a99e776c47ef9e07497619ecbd80d6827b53", "Url": "https://api.github.com/repos/Kaseb/Kaseb", "Date": "2017-01-01T05:11:35Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.System.exit(0); } catch (java.lang.SecurityException e) { logger.error(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4496/buggy-version/holmes-core.src.main.java.net.holmes.core.SystrayService.java", "BodyUseAPI": ["java.lang.System.exit(int)"], "Fixed commit": "be48df655f77bfdbb4b45fa5244f7f5f6df4562d", "Url": "https://api.github.com/repos/ccheneau/Holmes", "Date": "2013-04-24T16:16:59Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.google.android.gms.maps.model.MarkerOptions marker = new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(pet.getLatitude(), pet.getLongitude())).draggable(false).title(java.net.URLDecoder.decode(pet.getText(), \"UTF-8\")).visible(true); if ((pet.getType()) == 0) { marker.icon(com.google.android.gms.maps.model.BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_RED)); }else { marker.icon(com.google.android.gms.maps.model.BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_GREEN)); } map.addMarker(marker); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1233/buggy-version/app.src.main.java.yesteam.adoptame.LostFoundActivity.java", "BodyUseAPI": ["com.google.android.gms.maps.model.BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_GREEN)", "com.google.android.gms.maps.model.MarkerOptions.icon(com.google.android.gms.maps.model.BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_RED))", "yesteam.adoptame.GeoPet.getLongitude()", "com.google.android.gms.maps.model.MarkerOptions.position(com.google.android.gms.maps.model.LatLng)", "com.google.android.gms.maps.GoogleMap.addMarker(com.google.android.gms.maps.model.MarkerOptions)", "yesteam.adoptame.GeoPet.getLatitude()", "com.google.android.gms.maps.model.BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_RED)", "yesteam.adoptame.GeoPet.getType()", "new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(pet.getLatitude(), pet.getLongitude())).draggable(false).title(java.net.URLDecoder.decode(pet.getText(), \"UTF-8\")).visible(boolean)", "com.google.android.gms.maps.model.MarkerOptions.icon(com.google.android.gms.maps.model.BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_GREEN))", "new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(pet.getLatitude(), pet.getLongitude())).draggable(false).title(java.lang.String)", "new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(pet.getLatitude(), pet.getLongitude())).draggable(boolean)", "java.net.URLDecoder.decode(pet.getText(),java.lang.String)", "yesteam.adoptame.GeoPet.getText()"], "Fixed commit": "14e3aa17ff167c0d903d5882afa80f235290d426", "Url": "https://api.github.com/repos/lucrperez/hackathon-yesteam", "Date": "2015-03-22T10:11:50Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((cameraList.size()) != 0) { for (io.evercam.network.discovery.DiscoveredCamera camera : cameraList) { client.addEvent(Constants.KEEN_COLLECTION_DISCOVERED_CAMERAS, toCameraHashMap(camera)); } } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2049/buggy-version/evercamPlay.src.main.java.io.evercam.androidapp.feedback.ScanFeedbackItem.java", "BodyUseAPI": ["java.util.ArrayList<io.evercam.network.discovery.DiscoveredCamera>.size()", "io.keen.client.java.KeenClient.addEvent(Constants.KEEN_COLLECTION_DISCOVERED_CAMERAS,java.util.HashMap<java.lang.String, java.lang.Object>)", "io.evercam.androidapp.feedback.ScanFeedbackItem.1.toCameraHashMap(io.evercam.network.discovery.DiscoveredCamera)"], "Fixed commit": "13dd01ca111642481040f92dd63815e008d74757", "Url": "https://api.github.com/repos/evercam/evercam-android", "Date": "2015-07-07T08:53:14Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(currentStore.exists())) { currentStore.createNewFile(); } if (!(completedStore.exists())) { completedStore.createNewFile(); } } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5658/buggy-version/src.main.java.com.volumetricpixels.questy.storage.impl.SimpleProgressStore.java", "BodyUseAPI": ["java.io.File.exists()", "java.io.File.createNewFile()", "java.io.File.createNewFile()", "java.io.File.exists()"], "Fixed commit": "291082aa30ef65e9cd624792890a7f6223809181", "Url": "https://api.github.com/repos/VolumetricPixels/Questy", "Date": "2014-10-04T14:15:05Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final rinde.sim.pdptw.central.GlobalStateObject gso = solverHandle.get().convert(args).state; rinde.sim.pdptw.central.SolverValidator.checkRoute(gso.vehicles.get(0), 0); } catch (final java.lang.IllegalArgumentException e) { args.noCurrentRoutes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1141/buggy-version/src.main.java.rinde.logistics.pdptw.mas.route.SolverRoutePlanner.java", "BodyUseAPI": ["solverHandle.get().convert(rinde.sim.pdptw.central.Solvers.SolveArgs)", "rinde.sim.pdptw.central.SolverValidator.checkRoute(gso.vehicles.get(0),int)", "gso.vehicles.get(int)", "com.google.common.base.Optional<rinde.sim.pdptw.central.Solvers.SimulationSolver>.get()"], "Fixed commit": "3de2cf0016641dadee6b5d939fa33a8d0ac7b428", "Url": "https://api.github.com/repos/rinde/RinLog", "Date": "2013-10-28T14:27:32Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return new java.io.File(com.thoughtworks.gocd.Boot.class.getProtectionDomain().getCodeSource().getLocation().toURI().getPath()); } catch (java.net.URISyntaxException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7784/buggy-version/jar-class-loader.src.com.thoughtworks.gocd.Boot.java", "BodyUseAPI": ["java.net.URL.toURI()", "java.security.CodeSource.getLocation()", "java.lang.Class.getProtectionDomain()", "java.net.URI.getPath()", "java.security.ProtectionDomain.getCodeSource()"], "Fixed commit": "a609a741f1925009f97e0dc14532d3ac55fdae3f", "Url": "https://api.github.com/repos/ketan/gocd", "Date": "2017-08-28T11:28:44Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.openqa.selenium.WebElement foundWebElement = new org.openqa.selenium.support.ui.WebDriverWait(driver, secondsToWait).until(org.openqa.selenium.support.ui.ExpectedConditions.visibilityOf(webElement)); if (foundWebElement != null) { return true; }else { return false; } } catch (java.lang.RuntimeException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8973/buggy-version/src.main.java.org.andidev.webdriverextension.internal.BotUtils.java", "BodyUseAPI": ["org.openqa.selenium.support.ui.WebDriverWait.until(org.openqa.selenium.support.ui.ExpectedConditions.visibilityOf(webElement))", "org.openqa.selenium.support.ui.ExpectedConditions.visibilityOf(org.openqa.selenium.WebElement)"], "Fixed commit": "2e264a9eef628c5e10b72490465db3180d9b76d5", "Url": "https://api.github.com/repos/andidev/webdriver-extension", "Date": "2013-06-15T14:34:24Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { highScoreTable = new HighScore(); } catch (java.lang.Exception e) { java.lang.System.out.println(\"High score broke, moving on\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2790/buggy-version/World.java", "BodyUseAPI": [], "Fixed commit": "e8889c3908b7d38848553fded12f882c04647e00", "Url": "https://api.github.com/repos/zcotter/Tetris", "Date": "2013-08-29T03:21:38Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { newAlpaca.setHeartRate(((java.lang.Long) (qualities.get(\"heartRate\"))).floatValue()); } catch (java.lang.ClassCastException e) { newAlpaca.setHeartRate(((java.lang.Double) (qualities.get(\"heartRate\"))).floatValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3520/buggy-version/src.alpaca.PacaCollection.java", "BodyUseAPI": ["java.util.HashMap.get(java.lang.String)", "alpaca.Alpaca.setHeartRate(float)", "java.lang.Object.floatValue()"], "Fixed commit": "af648b7ba096fa491e2fb6f607ee746ad624a34c", "Url": "https://api.github.com/repos/jakemmarsh/alpaca-tracker", "Date": "2014-04-21T23:30:49Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { path = java.net.URLDecoder.decode(path, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { com.appdynamics.extensions.logmonitor.LogMonitor.LOGGER.warn(java.lang.String.format(\"Unable to decode file path [%s] using UTF-8\", path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/611/buggy-version/src.main.java.com.appdynamics.extensions.logmonitor.LogMonitor.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "bdc02fb3b711ea41d5c9da7d67f361a623c18459", "Url": "https://api.github.com/repos/Appdynamics/log-monitoring-extension", "Date": "2015-04-23T11:29:58Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { base.TreeNode node = util.constructTree(preorderList, inorderList); tree.StaticTree tree = new tree.StaticTree(node); tree.printLevels(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4931/buggy-version/src.tree.TraversalTree2015.java", "BodyUseAPI": ["tree.TraversalTree2015.constructTree(int[],int[])", "tree.StaticTree.printLevels()"], "Fixed commit": "568b12e6b60f8788c30095a34afe270fc2f49a79", "Url": "https://api.github.com/repos/gany-c/DataStructures", "Date": "2016-01-01T04:02:13Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { base.TreeNode node = util.constructTree(preorderList, inorderList); tree.StaticTree tree = new tree.StaticTree(node); tree.printLevels(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4931/buggy-version/src.tree.TraversalTree2015.java", "BodyUseAPI": ["tree.TraversalTree2015.constructTree(int[],int[])", "tree.StaticTree.printLevels()"], "Fixed commit": "568b12e6b60f8788c30095a34afe270fc2f49a79", "Url": "https://api.github.com/repos/gany-c/DataStructures", "Date": "2016-01-01T04:02:13Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { base.TreeNode node = util.constructTree(preorderList, inorderList); tree.StaticTree tree = new tree.StaticTree(node); tree.printLevels(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4931/buggy-version/src.tree.TraversalTree2015.java", "BodyUseAPI": ["tree.TraversalTree2015.constructTree(int[],int[])", "tree.StaticTree.printLevels()"], "Fixed commit": "568b12e6b60f8788c30095a34afe270fc2f49a79", "Url": "https://api.github.com/repos/gany-c/DataStructures", "Date": "2016-01-01T04:02:13Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { retCode = zkfc.run(parser.getRemainingArgs()); } catch (java.lang.Throwable t) { org.apache.hadoop.hdfs.tools.DFSZKFailoverController.LOG.fatal(\"Got a fatal error, exiting now\", t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6481/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.tools.DFSZKFailoverController.java", "BodyUseAPI": ["org.apache.hadoop.util.GenericOptionsParser.getRemainingArgs()", "org.apache.hadoop.hdfs.tools.DFSZKFailoverController.run(parser.getRemainingArgs())"], "Fixed commit": "7105ebaa9f370db04962a1e19a67073dc080433b", "Url": "https://api.github.com/repos/apache/hadoop", "Date": "2015-02-24T23:31:13Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { net.minecraftforge.client.model.IModel model = net.minecraftforge.client.model.ModelLoaderRegistry.getModel(location); for (net.minecraft.util.ResourceLocation dep : model.getDependencies()) { getModel(dep); } textures.addAll(model.getTextures()); } finally { loadingModels.remove(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4141/buggy-version/src.main.java.net.minecraftforge.client.model.ModelLoader.java", "BodyUseAPI": ["java.util.Set<net.minecraft.util.ResourceLocation>.addAll(model.getTextures())", "net.minecraftforge.client.model.IModel.getTextures()", "net.minecraftforge.client.model.IModel.getDependencies()", "net.minecraftforge.client.model.ModelLoader.getModel(net.minecraft.util.ResourceLocation)", "net.minecraftforge.client.model.ModelLoaderRegistry.getModel(net.minecraft.util.ResourceLocation)"], "Fixed commit": "24d1bf6c0d9e7f7c87f4710da6561ab89c7685c0", "Url": "https://api.github.com/repos/shadekiller666/MinecraftForge", "Date": "2015-08-19T21:09:01Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new se.mah.kd330a.project.framework.SplashActivity.GetDataTask().execute(); } catch (java.lang.Exception e) { android.util.Log.i(\"GetDataTask().execute();\", \"Not working\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2734/buggy-version/src.se.mah.kd330a.project.framework.SplashActivity.java", "BodyUseAPI": ["se.mah.kd330a.project.framework.SplashActivity.GetDataTask.execute()"], "Fixed commit": "56b1933670c2bdf8554800498b92223de50ce634", "Url": "https://api.github.com/repos/sandbergnilsvictor/MahAppStudent", "Date": "2013-10-31T10:50:27Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new se.mah.kd330a.project.framework.SplashActivity.FetchCourseName().execute(courses_array); } catch (java.lang.Exception e) { android.util.Log.i(\"FetchCourseName()\", \"Not working\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2734/buggy-version/src.se.mah.kd330a.project.framework.SplashActivity.java", "BodyUseAPI": ["se.mah.kd330a.project.framework.SplashActivity.FetchCourseName.execute(se.mah.kd330a.project.schedule.data.KronoxCourse[])"], "Fixed commit": "56b1933670c2bdf8554800498b92223de50ce634", "Url": "https://api.github.com/repos/sandbergnilsvictor/MahAppStudent", "Date": "2013-10-31T10:50:27Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.os.StatFs stat = new android.os.StatFs(path); long blocks = stat.getAvailableBlocks(); long blocksize = stat.getBlockSize(); return blocks * blocksize; } catch (java.lang.IllegalArgumentException e) { android.util.Log.e(AnkiDroidApp.TAG, (\"Free space could not be retrieved: \" + e)); return ((StudyOptions.MIN_FREE_SPACE) * 1024) * 1024; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3561/buggy-version/src.com.ichi2.anki.BackupManager.java", "BodyUseAPI": ["android.os.StatFs.getBlockSize()", "android.os.StatFs.getAvailableBlocks()"], "Fixed commit": "7fe578267e9b4829f8923bdc04c0a6d1a963dbf7", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-10-10T20:22:30Z"},
{"Line": "=>3097", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (isWrapperFor(iface)) { return ((T) (this)); } throw org.h2.message.DbException.getInvalidValueException(\"iface\", iface); } catch (java.lang.Exception e) { throw logAndConvert(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/694/buggy-version/h2.src.main.org.h2.jdbc.JdbcDatabaseMetaData.java", "BodyUseAPI": ["org.h2.message.DbException.getInvalidValueException(java.lang.String,java.lang.Class<T>)", "org.h2.jdbc.JdbcDatabaseMetaData.isWrapperFor(java.lang.Class<T>)"], "Fixed commit": "3f73a7a635f2596d4d03573d53940defa42cf14b", "Url": "https://api.github.com/repos/marschall/h2database", "Date": "2016-11-12T06:26:35Z"},
{"Line": "=>3686", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (isWrapperFor(iface)) { return ((T) (this)); } throw org.h2.message.DbException.getInvalidValueException(\"iface\", iface); } catch (java.lang.Exception e) { throw logAndConvert(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/694/buggy-version/h2.src.main.org.h2.jdbc.JdbcResultSet.java", "BodyUseAPI": ["org.h2.jdbc.JdbcResultSet.isWrapperFor(java.lang.Class<T>)", "org.h2.message.DbException.getInvalidValueException(java.lang.String,java.lang.Class<T>)"], "Fixed commit": "3f73a7a635f2596d4d03573d53940defa42cf14b", "Url": "https://api.github.com/repos/marschall/h2database", "Date": "2016-11-12T06:26:35Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (isWrapperFor(iface)) { return ((T) (this)); } throw org.h2.message.DbException.getInvalidValueException(\"iface\", iface); } catch (java.lang.Exception e) { throw logAndConvert(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/694/buggy-version/h2.src.main.org.h2.jdbc.JdbcParameterMetaData.java", "BodyUseAPI": ["org.h2.jdbc.JdbcParameterMetaData.isWrapperFor(java.lang.Class<T>)", "org.h2.message.DbException.getInvalidValueException(java.lang.String,java.lang.Class<T>)"], "Fixed commit": "3f73a7a635f2596d4d03573d53940defa42cf14b", "Url": "https://api.github.com/repos/marschall/h2database", "Date": "2016-11-12T06:26:35Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { outputStream = new java.io.FileOutputStream(lisong_mechlab.view.LsmlPreferences.propertiesFile); lisong_mechlab.view.LsmlPreferences.properties.storeToXML(outputStream, \"Written by LSML\"); } catch (java.io.FileNotFoundException e) { javax.swing.JOptionPane.showMessageDialog(null, (\"Program settings file not found! :\" + e)); } catch (java.io.IOException e) { javax.swing.JOptionPane.showMessageDialog(null, (\"Unspecified IO error while writing program settings file! :\" + e)); } finally { if (outputStream != null) { try { outputStream.close(); } catch (java.io.IOException e) { javax.swing.JOptionPane.showMessageDialog(null, (\"Error closing program settings file! :\" + e)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2272/buggy-version/src.lisong_mechlab.view.LsmlPreferences.java", "BodyUseAPI": ["java.util.Properties.storeToXML(java.io.FileOutputStream,java.lang.String)"], "Fixed commit": "08ecefd3928d3f12cfb568a78b463769508b860d", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2013-09-07T15:25:16Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { socket.close(); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4866/buggy-version/src.main.java.at.valli.savage.master.server.network.TCPMessageHandler.java", "BodyUseAPI": ["java.net.Socket.close()"], "Fixed commit": "ec023940ab3e7954113438c959b2240bcb74842a", "Url": "https://api.github.com/repos/valliman/savage-xr-master-server", "Date": "2014-07-14T07:08:55Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { final javax.ws.rs.client.Invocation.Builder request = buildRequest(); if ((state.get()) == (org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.State.OPEN)) { eventInput = request.get(javax.ws.rs.sse.SseEventInput.class); } } finally { if ((connectedLatch) != null) { connectedLatch.countDown(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7944/buggy-version/providers.sse.src.main.java.org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.java", "BodyUseAPI": ["Invocation.Builder.get(java.lang.Class)", "java.util.concurrent.atomic.AtomicReference<org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.State>.get()", "org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.EventHandler.buildRequest()"], "Fixed commit": "c8ecb24456988fb033571c960f46d4af6e246a15", "Url": "https://api.github.com/repos/asoldano/Resteasy", "Date": "2017-02-10T22:51:23Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.json.JSONObject user = new org.json.JSONObject(call(com.lordmat.githubstream.api.Path.user(userName))); return new com.lordmat.githubstream.api.GitHubUser(user.getString(\"login\"), user.getString(\"html_url\"), user.getString(\"avatar_url\")); } catch (java.lang.Exception ex) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5839/buggy-version/src.main.java.com.lordmat.githubstream.api.GitHubCaller.java", "BodyUseAPI": ["com.lordmat.githubstream.api.Path.user(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "com.lordmat.githubstream.api.GitHubCaller.call(com.lordmat.githubstream.api.Path.user(userName))"], "Fixed commit": "e7289811769ad75cf7af9c231f3e3112f6880cd9", "Url": "https://api.github.com/repos/lordmat0/githubstream", "Date": "2014-09-11T20:32:27Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { net.classicgarage.truerandommusicplayer.activity.MainActivity.sSeekBar.setMax(duration); net.classicgarage.truerandommusicplayer.activity.MainActivity.sSeekBar.setProgress(position); net.classicgarage.truerandommusicplayer.activity.MainActivity.mSongLeftTimeTv.setText(((net.classicgarage.truerandommusicplayer.model.SongItem.formateTime(position)) + \"\")); } catch (java.lang.NullPointerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7729/buggy-version/app.src.main.java.net.classicgarage.truerandommusicplayer.activity.MainActivity.java", "BodyUseAPI": ["android.widget.SeekBar.setProgress(int)", "android.widget.SeekBar.setMax(int)", "android.widget.TextView.setText(((net.classicgarage.truerandommusicplayer.model.SongItem.formateTime(position)) + \"\"))", "net.classicgarage.truerandommusicplayer.model.SongItem.formateTime(int)"], "Fixed commit": "77e49d40a48a05dfadf52976a6d6c8ab405ebeb2", "Url": "https://api.github.com/repos/Leighton070103/TrueRandomMusicPlayer", "Date": "2017-06-21T03:38:53Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { journalActivity.item = mJournalItems.get(position); } catch (java.lang.Exception e) { android.util.Log.d(\"Journee\", \"error in item\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6613/buggy-version/Journee.app.src.main.java.com.journee.utils.JournalRecycleViewAdapter.java", "BodyUseAPI": ["java.util.List<com.journee.model.Journal_item>.get(int)"], "Fixed commit": "a094b81fc65a3f59595ea5da09c0082949d5bd03", "Url": "https://api.github.com/repos/alon-itzhaki/tau_workshop_repo", "Date": "2016-07-20T18:49:39Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tag = java.lang.Integer.parseInt(((java.lang.String) (v.getTag()))); } catch (java.lang.Exception e) { tag = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6160/buggy-version/src.com.ziggeo.androidsdk.VideoRecorder.java", "BodyUseAPI": ["com.ziggeo.androidsdk.View.getTag()", "java.lang.Integer.parseInt(((java.lang.String) (v.getTag())))"], "Fixed commit": "fb61fac6e595bffd765770a7b85317b1dba92954", "Url": "https://api.github.com/repos/Ziggeo/ZiggeoAndroidSDK", "Date": "2014-10-08T12:18:51Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((javax.swing.SwingUtilities.isRightMouseButton(e)) && ((app.getDirectionalConditions()[grid.getMoveDirection(oldSpace, space).ordinal()]) | (app.getRoomCheckCondition()))) { space.isOpen = true; app.playerLook(grid.getMoveDirection(oldSpace, space)); grid.revealLookedSpace(space, grid.getMoveDirection(oldSpace, space)); grid.hasUpdated = false; } } catch (java.lang.NullPointerException doNothing) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7330/buggy-version/src.edu.cpp.cs.cs141.final_project.User_Interface.GUI.Utilities.MouseHandler.java", "BodyUseAPI": ["edu.cpp.cs.cs141.final_project.Application.getDirectionalConditions()", "grid.getMoveDirection(oldSpace, space).ordinal()", "edu.cpp.cs.cs141.final_project.User_Interface.GUI.Models.UIGrid.getMoveDirection(edu.cpp.cs.cs141.final_project.User_Interface.GUI.Models.UIGridSpace,edu.cpp.cs.cs141.final_project.User_Interface.GUI.Models.UIGridSpace)", "edu.cpp.cs.cs141.final_project.User_Interface.GUI.Models.UIGrid.getMoveDirection(edu.cpp.cs.cs141.final_project.User_Interface.GUI.Models.UIGridSpace,edu.cpp.cs.cs141.final_project.User_Interface.GUI.Models.UIGridSpace)", "javax.swing.SwingUtilities.isRightMouseButton(java.awt.event.MouseEvent)", "edu.cpp.cs.cs141.final_project.Application.playerLook(grid.getMoveDirection(oldSpace, space))", "edu.cpp.cs.cs141.final_project.User_Interface.GUI.Models.UIGrid.getMoveDirection(edu.cpp.cs.cs141.final_project.User_Interface.GUI.Models.UIGridSpace,edu.cpp.cs.cs141.final_project.User_Interface.GUI.Models.UIGridSpace)", "edu.cpp.cs.cs141.final_project.Application.getRoomCheckCondition()", "edu.cpp.cs.cs141.final_project.User_Interface.GUI.Models.UIGrid.revealLookedSpace(edu.cpp.cs.cs141.final_project.User_Interface.GUI.Models.UIGridSpace,grid.getMoveDirection(oldSpace, space))"], "Fixed commit": "dbf76f66542f1a5963812af364836a4a6cf1f9dd", "Url": "https://api.github.com/repos/fanfare00/CS141_FinalProject", "Date": "2016-12-03T03:40:49Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { reader.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3295/buggy-version/Aritzh-core.src.main.java.io.github.aritzhack.aritzh.Configuration.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "7b2a561e49e67246acab3ee8c9e012944c33bd43", "Url": "https://api.github.com/repos/aritzhack/aritzh", "Date": "2014-04-19T10:25:58Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ephorteRequest = new no.difi.meldingsutveksling.noarkexchange.ephorte.PutMessageRequestMapper().mapFrom(request); } catch (javax.xml.bind.JAXBException e) { throw new java.lang.RuntimeException(\"Failed to map request from internal PutMessageRequest to ephorte\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3826/buggy-version/noarkexchange-ephorte.src.main.java.no.difi.meldingsutveksling.noarkexchange.EphorteClient.java", "BodyUseAPI": ["no.difi.meldingsutveksling.noarkexchange.ephorte.PutMessageRequestMapper.mapFrom(no.difi.meldingsutveksling.noarkexchange.schema.PutMessageRequestType)"], "Fixed commit": "a2b7b5ac3ace6d309b27ad1b1c9547508e1d8436", "Url": "https://api.github.com/repos/difi/move-integrasjonspunkt", "Date": "2016-05-10T15:44:39Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { epnumS = java.lang.String.valueOf(((java.lang.Integer.parseInt(epnumS)) + (add))); } catch (java.lang.NumberFormatException e) { return \"#failed@@\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3860/buggy-version/src.renamer.Logic.java", "BodyUseAPI": ["java.lang.String.valueOf(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "13fb2f92f844c9267ffb1b1f54f415c650253cbe", "Url": "https://api.github.com/repos/lcukerd/Auto-Batch-File-Renamer", "Date": "2017-10-21T18:08:49Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((cplexILPModel.getValue(hiddenvars.get(m)[l])) == 1) { zUpdate[m] = l; } } catch (ilog.cplex.IloCplex e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8279/buggy-version/latentssvm_relext.mosek.dd.java.src.javaHelpers.InferLatentVarHelperAll.java", "BodyUseAPI": ["java.util.ArrayList<ilog.concert.IloNumVar[]>.get(int)", "ilog.cplex.IloCplex.getValue(hiddenvars.get(m)[l])"], "Fixed commit": "d138d5f15e0049195af9ecfb7eb1b4881815b47e", "Url": "https://api.github.com/repos/ajaynagesh/lsvm_relationextraction", "Date": "2014-11-22T08:14:38Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.mOwner = java.util.UUID.fromString(aNBT.getString(\"mOnwer\")); } catch (java.lang.IllegalArgumentException i) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5165/buggy-version/src.Java.gtPlusPlus.xmod.gregtech.common.tileentities.automation.GT_MetaTileEntity_TesseractGenerator.java", "BodyUseAPI": ["java.util.UUID.fromString(aNBT.getString(\"mOnwer\"))", "net.minecraft.nbt.NBTTagCompound.getString(java.lang.String)"], "Fixed commit": "c0f49b852a44c97062f0e179df9aa6638f639b8a", "Url": "https://api.github.com/repos/GTNewHorizons/GTplusplus", "Date": "2017-09-27T11:25:05Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { user = userEJB.findUser(source.getUser()); } catch (com.github.count_numbers.themis.server.web.rs.NoSuchEntityException e) { user = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4522/buggy-version/src.main.java.com.github.count_numbers.themis.server.source.DocumentEJB.java", "BodyUseAPI": ["com.github.count_numbers.themis.server.auth.UserEJB.findUser(source.getUser())", "com.github.count_numbers.themis.server.source.DocumentSource<T>.getUser()"], "Fixed commit": "fb3a42422a15879bbb73979283190d41be86d637", "Url": "https://api.github.com/repos/count-numbers/themis-server", "Date": "2015-09-26T19:26:40Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { inPout.write(e.getKeyChar()); } catch (java.io.IOException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2399/buggy-version/arm.src.net.katsuster.ememu.ui.VirtualTerminal.java", "BodyUseAPI": ["java.io.PipedOutputStream.write(char)", "java.awt.event.KeyEvent.getKeyChar()"], "Fixed commit": "cb1e932ddd28f5ac6eeb7f2baf7fc46b8d0e2c59", "Url": "https://api.github.com/repos/katsuster/ememu", "Date": "2014-10-08T16:05:10Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(uri))); } catch (android.content.ActivityNotFoundException e) { android.widget.Toast.makeText(this, \"Installez Google Maps pour afficher le plan !\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6384/buggy-version/src.fr.neamar.cinetime.TheatersActivity.java", "BodyUseAPI": ["fr.neamar.cinetime.TheatersActivity.startActivity(android.content.Intent)", "android.net.Uri.parse(java.lang.String)"], "Fixed commit": "f31fc89289086e7a552abcc75b5010852b9b8737", "Url": "https://api.github.com/repos/Neamar/CineTime", "Date": "2013-03-19T14:56:21Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Class.forName(de.jClipCorn.database.DerbyDatabase.DRIVER).newInstance(); } catch (java.lang.InstantiationException | java.lang.IllegalAccessException | java.lang.ClassNotFoundException e) { de.jClipCorn.gui.log.CCLog.addUndefinied(java.lang.Thread.currentThread(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/804/buggy-version/src.de.jClipCorn.database.DerbyDatabase.java", "BodyUseAPI": ["java.lang.Class<?>.newInstance()", "java.lang.Class.forName(java.lang.String)"], "Fixed commit": "821a8f30f2ab9a6597d84d4f01bd2f8c054c4497", "Url": "https://api.github.com/repos/Mikescher/jClipCorn", "Date": "2016-07-06T19:06:08Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { holder.timeTv.setText(com.PATHomei.yanyu.util.DateUtils.formateDate(((java.lang.Long.valueOf(bean.getCreatedate())) * 1000))); } catch (java.lang.Exception e) { holder.timeTv.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5656/buggy-version/src.com.PATHomei.yanyu.levelone.BeautifulRingFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(com.PATHomei.yanyu.util.DateUtils.formateDate(((java.lang.Long.valueOf(bean.getCreatedate())) * 1000)))", "java.lang.Long.valueOf(bean.getCreatedate())", "com.PATHomei.yanyu.bean.BeautifulRing.getCreatedate()", "com.PATHomei.yanyu.util.DateUtils.formateDate(((java.lang.Long.valueOf(bean.getCreatedate())) * 1000))"], "Fixed commit": "5a855f06d7de9b3a80c5ef94b27051a93acb6954", "Url": "https://api.github.com/repos/seedzi/PATHomei_eclipse", "Date": "2015-07-04T05:58:28Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { value = words.substring(0, ((words.length()) - 4)); etherVal = java.lang.Double.parseDouble(value); } catch (java.lang.NumberFormatException e) { value = \"0.00\"; etherVal = java.lang.Double.parseDouble(value); android.widget.Toast.makeText(context, \"Parsing error\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8314/buggy-version/app.src.main.java.com.example.roy.navapp.CryptoFragment.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "0a1ec88eaa8d16d9360b297a9383a1b46e369a41", "Url": "https://api.github.com/repos/rroyGit/Bing_Tools", "Date": "2017-11-29T15:45:50Z"},
{"Line": "=>1624", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { seqbegin = java.lang.Integer.parseInt(sref.getPdbx_auth_seq_align_beg()); seqend = java.lang.Integer.parseInt(sref.getPdbx_auth_seq_align_end()); } catch (java.lang.NumberFormatException e) { org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.logger.warn(\"Couldn't parse sequence alignment positions: {}\", e.getMessage()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1333/buggy-version/biojava-structure.src.main.java.org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.java", "BodyUseAPI": ["org.biojava.nbio.structure.io.mmcif.model.StructRefSeq.getPdbx_auth_seq_align_end()", "org.biojava.nbio.structure.io.mmcif.model.StructRefSeq.getPdbx_auth_seq_align_beg()", "java.lang.Integer.parseInt(sref.getPdbx_auth_seq_align_beg())", "java.lang.Integer.parseInt(sref.getPdbx_auth_seq_align_end())"], "Fixed commit": "56b9d07c9c24c6cdb807fff12a48a0eb7b8c20b3", "Url": "https://api.github.com/repos/biojava/biojava", "Date": "2017-11-16T17:00:27Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { thread.join(); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4660/buggy-version/deeplearning4j-core.src.main.java.org.deeplearning4j.parallelism.AsyncIterator.java", "BodyUseAPI": ["org.deeplearning4j.parallelism.AsyncIterator<T>.ReaderThread<T>.join()"], "Fixed commit": "b4d3fa617ca50a5fe1ddaea295f03a637995baf1", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2016-12-05T07:32:27Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { existingUser = getUserByNickname(userData.getNickname()); } catch (org.springframework.security.core.userdetails.UsernameNotFoundException unfe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8474/buggy-version/src.main.java.ubublik.network.models.security.dao.UserDao.java", "BodyUseAPI": ["ubublik.network.models.security.dao.UserDao.getUserByNickname(userData.getNickname())", "ubublik.network.models.security.User.getNickname()"], "Fixed commit": "3e838dc19aa5e8fa3ad0759210bd87d8267b0dfc", "Url": "https://api.github.com/repos/bublikdrdrdr/uBublik.Network", "Date": "2017-06-13T22:21:20Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { codes = denominator.ultradns.util.RRSetUtil.getDirectionalGroupDetails(api.getDirectionalDNSRecordsForHost(zone, hostName, rrType).rrSets(), groupName); } catch (denominator.ultradns.exception.UltraDNSRestException e) { if ((e.code()) != (denominator.ultradns.exception.UltraDNSRestException.DATA_NOT_FOUND)) { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6737/buggy-version/ultradns-rest.src.main.java.denominator.ultradns.iterator.GroupGeoRecordByNameTypeCustomIterator.java", "BodyUseAPI": ["denominator.ultradns.util.RRSetUtil.getDirectionalGroupDetails(api.getDirectionalDNSRecordsForHost(zone, hostName, rrType).rrSets(),java.lang.String)", "denominator.ultradns.service.integration.UltraDNSRest.getDirectionalDNSRecordsForHost(java.lang.String,java.lang.String,int)", "api.getDirectionalDNSRecordsForHost(zone, hostName, rrType).rrSets()"], "Fixed commit": "452c725210ece6ca6f568a54dbae50a2cfc4bb0d", "Url": "https://api.github.com/repos/ultradns/denominator", "Date": "2017-05-05T08:44:25Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stringCellValue = cell.getStringCellValue(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1650/buggy-version/lottery-common.src.main.java.org.worldbuilders.lottery.util.excel.OptimizedExcelReader.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Cell.getStringCellValue()"], "Fixed commit": "f0f0d5316ca833dbe7c44b85c827a5aec29e1b64", "Url": "https://api.github.com/repos/worldbuildersinc/Lottery", "Date": "2017-07-28T16:48:58Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { plugin.processEvent(event); } catch (java.lang.Exception e) { log.error(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3238/buggy-version/fullstop-processing.src.main.java.org.zalando.stups.fullstop.PluginEventsProcessor.java", "BodyUseAPI": ["org.zalando.stups.fullstop.plugin.FullstopPlugin.processEvent(com.amazonaws.services.cloudtrail.processinglibrary.model.CloudTrailEvent)"], "Fixed commit": "1ae98534e48b007deefda7fc8eeff5e9cb07d665", "Url": "https://api.github.com/repos/zalando-stups/fullstop", "Date": "2015-04-17T10:14:32Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.unbelievable.library.android.volleyplus.VolleyPlus.getRequestQueue().cancelAll(getVolleyTag()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/9149/buggy-version/Library.src.main.java.com.unbelievable.library.android.app.BaseActivity.java", "BodyUseAPI": ["com.unbelievable.library.android.volleyplus.VolleyPlus.getRequestQueue()", "com.unbelievable.library.android.volleyplus.VolleyPlus.getRequestQueue().cancelAll(java.lang.String)", "com.unbelievable.library.android.app.BaseActivity.getVolleyTag()"], "Fixed commit": "6e77c140bdebaa3b438d60a92cfdb766849334d8", "Url": "https://api.github.com/repos/FreeLeo/nothero", "Date": "2017-08-08T09:48:02Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final android.telephony.TelephonyManager tm = ((android.telephony.TelephonyManager) (ctx.getSystemService(Context.TELEPHONY_SERVICE))); uniqueId = tm.getDeviceId(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/9149/buggy-version/Library.src.main.java.com.unbelievable.library.android.utils.DeviceUtil.java", "BodyUseAPI": ["android.content.Context.getSystemService(Context.TELEPHONY_SERVICE)", "android.telephony.TelephonyManager.getDeviceId()"], "Fixed commit": "6e77c140bdebaa3b438d60a92cfdb766849334d8", "Url": "https://api.github.com/repos/FreeLeo/nothero", "Date": "2017-08-08T09:48:02Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { siftedText.setText(sifter.sift()); } catch (java.lang.Exception e) { siftedText.setText(\"ERROR: Exception occurred while sifting text.\"); android.util.Log.e(\"Sift\", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8342/buggy-version/src.main.java.com.pebbleSifter.asyncTasks.SetSifter.java", "BodyUseAPI": ["com.pebbleSifter.sifters.PebbleSifter.sift()", "android.widget.TextView.setText(sifter.sift())"], "Fixed commit": "ea1fa40cfa45868243bfded1c28702bef6becee8", "Url": "https://api.github.com/repos/thompsnm/PebbleSifter", "Date": "2013-11-19T14:23:36Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { net.dankito.sync.Device persistedDevice = entityManager.getEntityById(net.dankito.sync.Device.class, device.getId()); if (persistedDevice != null) { device = persistedDevice; } } catch (java.lang.Exception e) { entityManager.persistEntity(device); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5870/buggy-version/SyncCommonLogic.src.main.java.net.dankito.sync.devices.DevicesManager.java", "BodyUseAPI": ["net.dankito.sync.Device.getId()", "net.dankito.sync.persistence.IEntityManager.getEntityById(java.lang.Class,device.getId())"], "Fixed commit": "4aff20d770cc78b0137cea281da975ca517eb693", "Url": "https://api.github.com/repos/dankito/Sync", "Date": "2017-01-09T11:25:59Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { p.streamParse(is, dout); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/576/buggy-version/src.main.java.water.fvec.ParseDataset2.java", "BodyUseAPI": ["water.fvec.CustomParser.streamParse(java.io.InputStream,water.fvec.ParseDataset2.FVecDataOut)"], "Fixed commit": "84687d0e37781c3c6d5a052db9a3d3ee3d002af8", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2014-08-16T05:34:15Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { instance.release(); } finally { nextListener.proceed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7959/buggy-version/servlet.src.main.java.io.undertow.servlet.spec.AsyncContextImpl.java", "BodyUseAPI": ["io.undertow.servlet.api.InstanceHandle<T>.release()"], "Fixed commit": "7820f0c4fe4228e4383e0a0db5a2a0fd08c66555", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2014-04-26T16:50:34Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return entityManager.createQuery(\"SELECT d FROM Department d WHERE d.shortName = :name\", cz.muni.fi.pa165.yellowlibrary.backend.entity.Department.class).setParameter(\"name\", shortName).getSingleResult(); } catch (javax.persistence.NoResultException ex) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3472/buggy-version/backend.src.main.java.cz.muni.fi.pa165.yellowlibrary.backend.dao.DepartmentDaoImpl.java", "BodyUseAPI": ["entityManager.createQuery(\"SELECT d FROM Department d WHERE d.shortName = :name\", cz.muni.fi.pa165.yellowlibrary.backend.entity.Department.class).setParameter(java.lang.String,java.lang.String)", "entityManager.createQuery(\"SELECT d FROM Department d WHERE d.shortName = :name\", cz.muni.fi.pa165.yellowlibrary.backend.entity.Department.class).setParameter(\"name\", shortName).getSingleResult()", "javax.persistence.EntityManager.createQuery(java.lang.String,java.lang.Class)"], "Fixed commit": "ae3af6ad7bceb7730d15ecec108bb8c0a5d0d00e", "Url": "https://api.github.com/repos/jksdf/yellow-library", "Date": "2016-11-25T21:12:14Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { solrCore = org.sleuthkit.autopsy.keywordsearch.KeywordSearch.getServer().getCore(); } catch (java.lang.RuntimeException e) { org.sleuthkit.autopsy.keywordsearch.ExtractedContentViewer.logger.log(java.util.logging.Level.INFO, \"Could not get Solr Core\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4856/buggy-version/KeywordSearch.src.org.sleuthkit.autopsy.keywordsearch.ExtractedContentViewer.java", "BodyUseAPI": ["org.sleuthkit.autopsy.keywordsearch.KeywordSearch.getServer().getCore()", "org.sleuthkit.autopsy.keywordsearch.KeywordSearch.getServer()"], "Fixed commit": "0c6865cf927f602d6fa557838b70647c90e91797", "Url": "https://api.github.com/repos/sleuthkit/autopsy", "Date": "2012-03-16T20:24:04Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { listener.onLiveResult(next); } catch (java.lang.Exception e) { com.orientechnologies.common.log.OLogManager.instance().warn(this, \"Error executing live query subscriber.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1684/buggy-version/core.src.main.java.com.orientechnologies.orient.core.query.live.OLiveQueryQueueThread.java", "BodyUseAPI": ["com.orientechnologies.orient.core.query.live.OLiveQueryListener.onLiveResult(com.orientechnologies.orient.core.db.record.ORecordOperation)"], "Fixed commit": "a0f1a24c8076c9d2cf0010f22c4209ccc20588e8", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-06-15T15:11:08Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.FileReader reader = new java.io.FileReader(passwdScript); engine.put(\"path\", login_site); engine.put(\"usr\", caneID); engine.put(\"pw\", password); engine.eval(reader); java.lang.Object result = engine.get(\"isAccepted\"); reader.close(); if (((java.lang.Integer) (result)) == (-1)) { return progAdmin.LoginDialog.ERROR_BAD_PASSWORD; } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2660/buggy-version/Project.src.progAdmin.LoginDialog.java", "BodyUseAPI": ["javax.script.ScriptEngine.put(java.lang.String,java.lang.String)", "java.io.FileReader.close()", "javax.script.ScriptEngine.eval(java.io.FileReader)", "javax.script.ScriptEngine.put(java.lang.String,java.lang.String)", "javax.script.ScriptEngine.get(java.lang.String)", "javax.script.ScriptEngine.put(java.lang.String,java.lang.String)"], "Fixed commit": "7a2511d045b73be45f54d8b56b403cc8aacc3e40", "Url": "https://api.github.com/repos/hcix/CSC531", "Date": "2012-04-17T13:33:32Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.BufferedReader reader = getReader(employeeFileName); java.lang.String line = null; while ((line = reader.readLine()) != null) { if (line.contains(Cnumber)) { splitName = line.split(\"\\t\", 3); name = splitName[0].concat(\" \"); name = name.concat(splitName[1]); return name; } } } catch (java.io.IOException e) { java.lang.System.out.println(\"Employee list does not exist\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2660/buggy-version/Project.src.utilities.RosterParser.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String,int)", "java.lang.String.contains(java.lang.String)", "utilities.RosterParser.getReader(java.lang.String)", "java.lang.String.concat(java.lang.String)", "java.io.BufferedReader.readLine()", "java.lang.String.concat(java.lang.String)"], "Fixed commit": "7a2511d045b73be45f54d8b56b403cc8aacc3e40", "Url": "https://api.github.com/repos/hcix/CSC531", "Date": "2012-04-17T13:33:32Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.BufferedReader reader = getReader(filePath); java.lang.String line = null; while ((line = reader.readLine()) != null) { if ((line.startsWith(shiftTimeAsString)) && (line.contains(day))) { return true; } } } catch (java.io.IOException e) { java.lang.System.out.println(\"No regular schedule file, line 100 Roster Parser\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2660/buggy-version/Project.src.utilities.RosterParser.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.io.BufferedReader.readLine()", "utilities.RosterParser.getReader(java.lang.String)"], "Fixed commit": "7a2511d045b73be45f54d8b56b403cc8aacc3e40", "Url": "https://api.github.com/repos/hcix/CSC531", "Date": "2012-04-17T13:33:32Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((value == null) || (!(value.isAllocated()))) { value = disableObjectCollection(((org.eclipse.jdt.debug.core.IJavaObject) (target.newValue(s)))); stringVals.put(s, value); } } catch (org.eclipse.debug.core.DebugException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2934/buggy-version/codehint-plugin.src.codehint.exprgen.ValueCache.java", "BodyUseAPI": ["codehint.exprgen.ValueCache.disableObjectCollection(((org.eclipse.jdt.debug.core.IJavaObject) (target.newValue(s))))", "org.eclipse.jdt.debug.core.IJavaValue.isAllocated()", "org.eclipse.jdt.debug.core.IJavaDebugTarget.newValue(java.lang.String)", "java.util.Map<java.lang.String, org.eclipse.jdt.debug.core.IJavaValue>.put(java.lang.String,org.eclipse.jdt.debug.core.IJavaValue)"], "Fixed commit": "cc9f65d501d82fd820c2faf4f6cbe7126003f1f3", "Url": "https://api.github.com/repos/jgalenson/codehint", "Date": "2013-02-27T23:33:15Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return com.comphenix.protocol.ProtocolLibrary.getConfig().isDebug(); } catch (java.lang.Throwable ex) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/974/buggy-version/modules.API.src.main.java.com.comphenix.protocol.ProtocolLogger.java", "BodyUseAPI": ["com.comphenix.protocol.ProtocolLibrary.getConfig().isDebug()", "com.comphenix.protocol.ProtocolLibrary.getConfig()"], "Fixed commit": "e5bc602af3eea98b8672b1e8778fd64f6d065ec2", "Url": "https://api.github.com/repos/dmulloy2/ProtocolLib", "Date": "2016-05-19T01:03:14Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { items = com.dig.www.util.Statics.listFilesInJar(folderLoc); } catch (java.io.IOException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7866/buggy-version/DigIt3.src.com.dig.www.util.Statics.java", "BodyUseAPI": ["com.dig.www.util.Statics.listFilesInJar(java.lang.String)"], "Fixed commit": "77db12c04dd67953feea1067fdb2f60ef28a0e4d", "Url": "https://api.github.com/repos/Bisharp/AppliedJava", "Date": "2016-05-20T02:35:36Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { instance.load(); } catch (java.lang.Exception e) { com.orientechnologies.common.log.OLogManager.instance().error(this, \"[OMetadata] Error on loading index manager, reset index configuration\", e); instance.create(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2075/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.OMetadata.java", "BodyUseAPI": ["com.orientechnologies.orient.core.index.OIndexManager.load()"], "Fixed commit": "6bff6060db78b9d0617fa4a43facf2c7d2aa0eb8", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2013-06-25T21:24:57Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { save(OMetadata.CLUSTER_INTERNAL_NAME); } catch (java.lang.Exception e) { if (document.getIdentity().getClusterPosition().isPersistent()) { document.getIdentity().reset(); save(OMetadata.CLUSTER_INTERNAL_NAME); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2075/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.OIndexManagerAbstract.java", "BodyUseAPI": ["com.orientechnologies.orient.core.index.OIndexManagerAbstract.save(OMetadata.CLUSTER_INTERNAL_NAME)"], "Fixed commit": "6bff6060db78b9d0617fa4a43facf2c7d2aa0eb8", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2013-06-25T21:24:57Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { java.lang.String line; while ((proc.isAlive()) && ((line = r.readLine()) != null)) { logger.println(line); if ((line.toLowerCase(java.util.Locale.ENGLISH).startsWith(\"license id: \")) || (line.toLowerCase(java.util.Locale.ENGLISH).startsWith(\"license android-sdk\"))) { proc.getStdin().write(\"y\\r\\n\".getBytes()); proc.getStdin().flush(); } } } finally { r.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/759/buggy-version/src.main.java.hudson.plugins.android_emulator.SdkInstaller.java", "BodyUseAPI": ["proc.getStdin().flush()", "proc.getStdin().write(byte[])", "hudson.Proc.isAlive()", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.toLowerCase(java.util.Locale)", "java.io.PrintStream.println(java.lang.String)", "hudson.Proc.getStdin()", "java.io.BufferedReader.readLine()", "java.lang.String.getBytes()", "java.lang.String.toLowerCase(java.util.Locale)", "hudson.Proc.getStdin()", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "a0379ce84fcb6e0f35fda2785e793f125c2f7521", "Url": "https://api.github.com/repos/redeamer/android-emulator-plugin", "Date": "2017-11-28T10:11:18Z"},
{"Line": "=>1443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { xmppAnonymousConnection.loginAnonymously(); final com.thinkparity.ophelia.model.io.xmpp.XMPPMethod createResource = new com.thinkparity.ophelia.model.io.xmpp.XMPPMethod(\"system:createresource\"); credentials.setResource(execute(createResource, xmppAnonymousConnection, java.lang.Boolean.TRUE).readResultString(\"resource\")); } finally { xmppAnonymousConnection.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8444/buggy-version/local.model.src.main.java.com.thinkparity.ophelia.model.util.xmpp.XMPPSessionImpl.java", "BodyUseAPI": ["com.thinkparity.ophelia.model.io.xmpp.XMPPMethodResponse.readResultString(java.lang.String)", "com.thinkparity.codebase.model.session.Credentials.setResource(execute(createResource, xmppAnonymousConnection, java.lang.Boolean.TRUE).readResultString(\"resource\"))", "org.jivesoftware.smack.XMPPConnection.loginAnonymously()", "com.thinkparity.ophelia.model.util.xmpp.XMPPSessionImpl.execute(com.thinkparity.ophelia.model.io.xmpp.XMPPMethod,org.jivesoftware.smack.XMPPConnection,java.lang.Boolean)"], "Fixed commit": "e8c175ffe417b18e60b2b21bd4ada8e988b17fd3", "Url": "https://api.github.com/repos/raykroeker/thinkparity", "Date": "2007-05-22T17:13:04Z"},
{"Line": "=>1443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { xmppAnonymousConnection.loginAnonymously(); final com.thinkparity.ophelia.model.io.xmpp.XMPPMethod createResource = new com.thinkparity.ophelia.model.io.xmpp.XMPPMethod(\"system:createresource\"); credentials.setResource(execute(createResource, xmppAnonymousConnection, java.lang.Boolean.TRUE).readResultString(\"resource\")); } finally { xmppAnonymousConnection.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8444/buggy-version/client-model.src.main.java.com.thinkparity.ophelia.model.util.xmpp.XMPPSessionImpl.java", "BodyUseAPI": ["com.thinkparity.ophelia.model.util.xmpp.XMPPSessionImpl.execute(com.thinkparity.ophelia.model.io.xmpp.XMPPMethod,org.jivesoftware.smack.XMPPConnection,java.lang.Boolean)", "org.jivesoftware.smack.XMPPConnection.loginAnonymously()", "com.thinkparity.codebase.model.session.Credentials.setResource(execute(createResource, xmppAnonymousConnection, java.lang.Boolean.TRUE).readResultString(\"resource\"))", "com.thinkparity.ophelia.model.io.xmpp.XMPPMethodResponse.readResultString(java.lang.String)"], "Fixed commit": "e8c175ffe417b18e60b2b21bd4ada8e988b17fd3", "Url": "https://api.github.com/repos/raykroeker/thinkparity", "Date": "2007-05-22T17:13:04Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { response = javax.ws.rs.core.Response.created(new java.net.URI((((baseUri.toString()) + \"rest/book/\") + (newBook.isbn)))).entity(getBook(newBook.isbn)).build(); } catch (java.net.URISyntaxException ex) { throw new rest.VerboseException(\"Error while book creation.\", com.sun.jersey.api.client.ClientResponse.Status.BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8302/buggy-version/Bookcase-war.src.java.rest.BookResource.java", "BodyUseAPI": ["javax.ws.rs.core.Response.created(new java.net.URI((((baseUri.toString()) + \"rest/book/\") + (newBook.isbn)))).entity(rest.Book)", "java.net.URI.toString()", "javax.ws.rs.core.Response.created(new java.net.URI((((baseUri.toString()) + \"rest/book/\") + (newBook.isbn)))).entity(getBook(newBook.isbn)).build()", "javax.ws.rs.core.Response.created(java.net.URI)", "rest.BookResource.getBook(newBook.isbn)"], "Fixed commit": "ac003c0f45eb708898a7467caf83f6487c820a2b", "Url": "https://api.github.com/repos/cerevka/Bookcase", "Date": "2011-11-16T21:42:12Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { applicationController.processRequest(request, response); } catch (java.lang.Exception e) { response.sendError(500); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7703/buggy-version/src.main.java.com.itechart.app.controller.FrontController.java", "BodyUseAPI": ["com.itechart.app.controller.ApplicationController.processRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"], "Fixed commit": "6ded1bd986ca8d952626db2aca9e6ff75c9c2438", "Url": "https://api.github.com/repos/maxventu/ContactBook", "Date": "2015-12-30T08:31:20Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { addSegment(java.nio.ByteBuffer.wrap(msg.getBytes(\"UTF-8\"))); } catch (java.lang.Exception e) { addSegment(java.nio.ByteBuffer.wrap(msg.getBytes())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6215/buggy-version/src.main.java.net.solarcode.livemapserviceclient.LiveMapServiceCollection.java", "BodyUseAPI": ["java.nio.ByteBuffer.wrap(byte[])", "net.solarcode.livemapserviceclient.LiveMapServiceCollection.UTF8MessageSend.addSegment(java.nio.ByteBuffer)", "java.lang.String.getBytes(java.lang.String)"], "Fixed commit": "be99d9ab55f8442035ea2837cc818ee59de14d9c", "Url": "https://api.github.com/repos/interruping/android_livemap_client_api", "Date": "2017-10-24T12:12:20Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { double taxRate = percentFormat.parse(taxRatePercent).doubleValue(); setPreference(actionRequest, \"taxRate\", java.lang.String.valueOf(taxRate)); } catch (java.text.ParseException pe) { com.liferay.portal.kernel.servlet.SessionErrors.add(actionRequest, \"taxRate\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4010/buggy-version/portal-impl.src.com.liferay.portlet.shopping.action.ConfigurationActionImpl.java", "BodyUseAPI": ["java.lang.Number.doubleValue()", "com.liferay.portlet.shopping.action.ConfigurationActionImpl.setPreference(javax.portlet.ActionRequest,java.lang.String,java.lang.String)", "java.text.NumberFormat.parse(java.lang.String)", "java.lang.String.valueOf(double)"], "Fixed commit": "0440eeb848ce80eac4416fb78147de1c0f5f72a3", "Url": "https://api.github.com/repos/lionah/liferay-portal", "Date": "2014-03-05T14:36:17Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { player.setShip(this.spawnShip(new geospace.entity.Ship(player.getAgent(), 0, 0, 0, player.getPlayerColor()))); } catch (geospace.entity.GeoSpaceException ex) { java.util.logging.Logger.getLogger(geospace.states.PlayingState.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); throw new org.newdawn.slick.SlickException((\"Unable to instantiate Ship with agent \" + (player.getAgent().getAgentName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/9147/buggy-version/src.geospace.states.PlayingState.java", "BodyUseAPI": ["geospace.states.Player.setShip(geospace.entity.Ship)", "geospace.states.Player.getAgent()", "geospace.states.PlayingState.spawnShip(geospace.entity.Ship)", "geospace.states.Player.getPlayerColor()"], "Fixed commit": "2ae86ebcaed2bd57a6a9ea86873d43bf5f1253ec", "Url": "https://api.github.com/repos/GeoJosh/geospace", "Date": "2011-10-11T16:16:45Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return ((org.apache.tinkerpop.gremlin.process.traversal.P) (org.apache.tinkerpop.gremlin.process.traversal.P.class.getMethod(predicate, java.lang.Object.class).invoke(null, value))); } catch (final java.lang.NoSuchMethodException e) { return ((org.apache.tinkerpop.gremlin.process.traversal.P) (org.apache.tinkerpop.gremlin.process.traversal.P.class.getMethod(predicate, java.lang.Object[].class).invoke(null, ((java.lang.Object) (new java.lang.Object[]{ value }))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5141/buggy-version/gremlin-core.src.main.java.org.apache.tinkerpop.gremlin.structure.io.graphson.GraphSONTraversalSerializersV2d0.java", "BodyUseAPI": ["java.lang.Class.getMethod(java.lang.String,java.lang.Class)", "java.lang.reflect.Method.invoke(<nulltype>,java.lang.Object)"], "Fixed commit": "9e82b4d33c275ef846e294bf145ff690ec816c0a", "Url": "https://api.github.com/repos/apache/tinkerpop", "Date": "2016-11-28T20:41:45Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(com.minuxe.notifyuser.NotifyUser.DATA_FOLDER.exists())) { com.minuxe.notifyuser.NotifyUser.DATA_FOLDER.mkdir(); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8996/buggy-version/src.main.java.com.minuxe.notifyuser.NotifyUser.java", "BodyUseAPI": ["java.io.File.exists()", "java.io.File.mkdir()"], "Fixed commit": "f6eb0f6f601c50f17a06fa9371ee533161f4e450", "Url": "https://api.github.com/repos/Andorem/NotifyUser", "Date": "2017-08-18T17:53:43Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { inventoryGenerator = ivorius.reccomplex.worldgen.inventory.InventoryGenerationHandler.createInventoryGeneratorFromJSON(json); } catch (ivorius.reccomplex.worldgen.inventory.InventoryLoadException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7107/buggy-version/src.main.java.ivorius.reccomplex.network.PacketEditInventoryGenerator.java", "BodyUseAPI": ["ivorius.reccomplex.worldgen.inventory.InventoryGenerationHandler.createInventoryGeneratorFromJSON(java.lang.String)"], "Fixed commit": "0afe3143dc675dd9f2efe722770c8327cb91f532", "Url": "https://api.github.com/repos/Ivorforce/RecurrentComplex", "Date": "2014-09-29T17:23:32Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { registerEvents(); } catch (java.lang.NoSuchFieldError e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6613/buggy-version/src.main.java.com.griefcraft.lwc.LWCPlugin.java", "BodyUseAPI": ["com.griefcraft.lwc.LWCPlugin.registerEvents()"], "Fixed commit": "fe4db13072a578e9253543d7663c650c67016888", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2011-09-07T01:44:47Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { populateViews(recipeStep); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5464/buggy-version/app.src.main.java.cg.stevendende.deliciousrecipes.ui.StepDetailsFragment.java", "BodyUseAPI": ["cg.stevendende.deliciousrecipes.ui.StepDetailsFragment.1.populateViews(cg.stevendende.deliciousrecipes.ui.model.RecipeStep)"], "Fixed commit": "8220cdccb7538ab6c3582d9d9de50334f3ca5ba0", "Url": "https://api.github.com/repos/steve111MV/DeliciousRecipes", "Date": "2017-09-24T17:18:57Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { releasePlayer(); cg.stevendende.deliciousrecipes.ui.StepDetailsFragment.mMediaSession.setActive(false); } catch (java.lang.NullPointerException exception) { exception.printStackTrace(); } catch (java.lang.Exception ex) { android.util.Log.e(\"BALog\", (\"exolayer unlnown bug --- \" + (ex.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/5464/buggy-version/app.src.main.java.cg.stevendende.deliciousrecipes.ui.StepDetailsFragment.java", "BodyUseAPI": ["cg.stevendende.deliciousrecipes.ui.StepDetailsFragment.releasePlayer()", "android.support.v4.media.session.MediaSessionCompat.setActive(boolean)"], "Fixed commit": "8220cdccb7538ab6c3582d9d9de50334f3ca5ba0", "Url": "https://api.github.com/repos/steve111MV/DeliciousRecipes", "Date": "2017-09-24T17:18:57Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stopAndRemoveNode(member); } catch (java.lang.Exception e) { brooklyn.util.exceptions.Exceptions.propagateIfFatal(e); throw new java.lang.IllegalStateException((\"replaceMember failed to stop and remove old member \" + (member.getId())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2737/buggy-version/core.src.main.java.brooklyn.entity.group.DynamicClusterImpl.java", "BodyUseAPI": ["brooklyn.entity.group.DynamicClusterImpl.stopAndRemoveNode(brooklyn.entity.Entity)"], "Fixed commit": "fddb4859b21b931194cf2111572c8d64351fc08a", "Url": "https://api.github.com/repos/apache/incubator-brooklyn", "Date": "2014-05-01T09:58:54Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { return new edu.phonebook.persistence.MySQLController(dbUrl, user, pass); } catch (java.sql.SQLException e) { throw new java.io.IOException(\"Connection to the database could not be established\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/1136/buggy-version/src.edu.phonebook.persistence.DatabaseService.java", "BodyUseAPI": [], "Fixed commit": "d0ba62f531def4e1199e33f3ee2c7a2c5feb70a8", "Url": "https://api.github.com/repos/vvormll/PhoneBook", "Date": "2016-09-17T11:37:18Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.ldbc.driver.temporal.Time first = peekingAsyncNonDependencyOperationStream.peek().scheduledStartTime(); peekingAsyncNonDependencyOperationStreamAheadOfMinBy = first.durationGreaterThan(minScheduledStartTime); } catch (java.util.NoSuchElementException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2629/buggy-version/src.main.java.com.ldbc.driver.WorkloadStreams.java", "BodyUseAPI": ["peekingAsyncNonDependencyOperationStream.peek().scheduledStartTime()", "com.google.common.collect.PeekingIterator<com.ldbc.driver.Operation<?>>.peek()", "com.ldbc.driver.temporal.Time.durationGreaterThan(com.ldbc.driver.temporal.Time)"], "Fixed commit": "b0ffee46d203e14f4eced7bada0b50ae07b4c891", "Url": "https://api.github.com/repos/ldbc/ldbc_driver", "Date": "2014-10-13T12:14:37Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.ldbc.driver.temporal.Time first = peekingAsyncNonDependencyOperationStream.peek().scheduledStartTime(); if ((null == minScheduledStartTime) || (first.lt(minScheduledStartTime))) minScheduledStartTime = first; } catch (java.util.NoSuchElementException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2629/buggy-version/src.main.java.com.ldbc.driver.WorkloadStreams.java", "BodyUseAPI": ["com.google.common.collect.PeekingIterator<com.ldbc.driver.Operation<?>>.peek()", "peekingAsyncNonDependencyOperationStream.peek().scheduledStartTime()", "com.ldbc.driver.temporal.Time.lt(com.ldbc.driver.temporal.Time)"], "Fixed commit": "b0ffee46d203e14f4eced7bada0b50ae07b4c891", "Url": "https://api.github.com/repos/ldbc/ldbc_driver", "Date": "2014-10-13T12:14:37Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.ldbc.driver.temporal.Time first = peekingAsyncDependencyOperationStream.peek().scheduledStartTime(); peekingAsyncDependencyOperationStreamAheadOfMinBy = first.durationGreaterThan(minScheduledStartTime); } catch (java.util.NoSuchElementException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2629/buggy-version/src.main.java.com.ldbc.driver.WorkloadStreams.java", "BodyUseAPI": ["com.ldbc.driver.temporal.Time.durationGreaterThan(com.ldbc.driver.temporal.Time)", "com.google.common.collect.PeekingIterator<com.ldbc.driver.Operation<?>>.peek()", "peekingAsyncDependencyOperationStream.peek().scheduledStartTime()"], "Fixed commit": "b0ffee46d203e14f4eced7bada0b50ae07b4c891", "Url": "https://api.github.com/repos/ldbc/ldbc_driver", "Date": "2014-10-13T12:14:37Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.ldbc.driver.temporal.Time first = peekingAsyncDependencyOperationStream.peek().scheduledStartTime(); if ((null == minScheduledStartTime) || (first.lt(minScheduledStartTime))) minScheduledStartTime = first; } catch (java.util.NoSuchElementException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/2629/buggy-version/src.main.java.com.ldbc.driver.WorkloadStreams.java", "BodyUseAPI": ["com.ldbc.driver.temporal.Time.lt(com.ldbc.driver.temporal.Time)", "peekingAsyncDependencyOperationStream.peek().scheduledStartTime()", "com.google.common.collect.PeekingIterator<com.ldbc.driver.Operation<?>>.peek()"], "Fixed commit": "b0ffee46d203e14f4eced7bada0b50ae07b4c891", "Url": "https://api.github.com/repos/ldbc/ldbc_driver", "Date": "2014-10-13T12:14:37Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.springframework.web.client.RestTemplate restTemplate = new org.springframework.web.client.RestTemplate(); org.springframework.http.ResponseEntity<com.yaz.vip.model.Proband> responseEntity = restTemplate.postForEntity(((com.yaz.vip.util.Constants.getInstance().getLanPath()) + \"/volunteerapi/updateVolunteer\"), volunteerDetails, com.yaz.vip.model.Proband.class); proband = responseEntity.getBody(); } catch (java.lang.Exception e) { e.printStackTrace(); java.lang.System.out.println((\"DataExchangeImpl,getVolunteerDetailsByPticket\" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8359/buggy-version/VIPCheck.src.com.yaz.vip.service.DataExchangeImpl.java", "BodyUseAPI": ["org.springframework.web.client.RestTemplate.postForEntity(((com.yaz.vip.util.Constants.getInstance().getLanPath()) + \"/volunteerapi/updateVolunteer\"),java.lang.String,java.lang.Class)", "org.springframework.http.ResponseEntity<com.yaz.vip.model.Proband>.getBody()", "com.yaz.vip.util.Constants.getInstance()", "com.yaz.vip.util.Constants.getInstance().getLanPath()"], "Fixed commit": "e1367628f33232d1b84447785bc5ae3f4018523f", "Url": "https://api.github.com/repos/lalkishor/VIP", "Date": "2016-08-01T09:24:43Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { androidx.pluginmgr.reflect.Reflect.on(activity).set(\"mResources\", pluginContext.getResources()); } catch (java.lang.Throwable ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/3823/buggy-version/android-pluginmgr.src.main.java.androidx.pluginmgr.environment.PluginInstrumentation.java", "BodyUseAPI": ["androidx.pluginmgr.reflect.Reflect.on(android.app.Activity)", "androidx.pluginmgr.reflect.Reflect.on(activity).set(java.lang.String,pluginContext.getResources())", "androidx.pluginmgr.environment.PluginContext.getResources()"], "Fixed commit": "4f7e7b6927e7cef1071ac2736b6ef9b0c2da4425", "Url": "https://api.github.com/repos/houkx/android-pluginmgr", "Date": "2015-11-17T12:16:09Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException ex) { java.lang.Thread.currentThread().interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4562/buggy-version/src.GameSystem.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "65be0f01971570b80774e25dfac584fc56421bfd", "Url": "https://api.github.com/repos/RogerTsang/comp2911Connect4", "Date": "2015-05-27T04:45:45Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { enchPower = block.getEnchantPowerBonus(event.entityPlayer.worldObj, BlockPos.ORIGIN); } catch (java.lang.IllegalArgumentException exception) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/9013/buggy-version/src.main.java.net.darkhax.wawla.addons.generic.AddonGenericTooltips.java", "BodyUseAPI": ["net.minecraft.block.Block.getEnchantPowerBonus(event.entityPlayer.worldObj,BlockPos.ORIGIN)"], "Fixed commit": "3de2ae1cacd7fbb0713d9ea94c9d02807d8a788e", "Url": "https://api.github.com/repos/Darkhax-Minecraft/WAWLA", "Date": "2016-03-18T04:19:53Z"},
{"Line": "=>637", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Double parsedDouble = java.lang.Double.parseDouble(group); return java.lang.Double.valueOf(java.lang.String.format(((\"%.\" + (decimalPlaces)) + \"f\"), parsedDouble)); } catch (java.lang.NumberFormatException ne) { return java.lang.Double.NaN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4993/buggy-version/org.dawnsci.common.widgets.src.org.dawnsci.common.richbeans.components.scalebox.NumberBox.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.Double)", "java.lang.Double.valueOf(java.lang.String)"], "Fixed commit": "afa90fc20d05b396b0e951213556c48091a88f5f", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2015-03-30T08:58:13Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (temp.isEmpty()) newAssignment.setGrade((-1)); else newAssignment.setGrade(java.lang.Double.parseDouble(temp)); } catch (java.lang.NumberFormatException e) { newAssignment.setGrade((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6648/buggy-version/app.src.main.java.app.sunstreak.yourpisd.net.Parser.java", "BodyUseAPI": ["app.sunstreak.yourpisd.net.Assignment.setGrade(int)", "java.lang.Double.parseDouble(java.lang.String)", "app.sunstreak.yourpisd.net.Assignment.setGrade(double)", "java.lang.String.isEmpty()"], "Fixed commit": "111f5cf78f6606e0e6559f93b5aee66da4127c8f", "Url": "https://api.github.com/repos/yourPISD/yourpisd", "Date": "2016-10-09T03:10:15Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { grade = java.lang.Integer.parseInt(gradeString.substring(0, ((gradeString.length()) - 1))); } catch (java.lang.NumberFormatException e) { grade = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6648/buggy-version/app.src.main.java.app.sunstreak.yourpisd.net.Parser.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "111f5cf78f6606e0e6559f93b5aee66da4127c8f", "Url": "https://api.github.com/repos/yourPISD/yourpisd", "Date": "2016-10-09T03:10:15Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { newAssignment.setMaxGrade(java.lang.Double.parseDouble(assignment.getElementsByClass(\"max\").get(0).html())); } catch (java.lang.NumberFormatException e) { newAssignment.setMaxGrade(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/6648/buggy-version/app.src.main.java.app.sunstreak.yourpisd.net.Parser.java", "BodyUseAPI": ["app.sunstreak.yourpisd.net.Assignment.setMaxGrade(double)", "assignment.getElementsByClass(\"max\").get(0).html()", "org.jsoup.nodes.Element.getElementsByClass(java.lang.String)", "java.lang.Double.parseDouble(assignment.getElementsByClass(\"max\").get(0).html())", "assignment.getElementsByClass(\"max\").get(int)"], "Fixed commit": "111f5cf78f6606e0e6559f93b5aee66da4127c8f", "Url": "https://api.github.com/repos/yourPISD/yourpisd", "Date": "2016-10-09T03:10:15Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { str = (((java.lang.Integer.parseInt(news_time.substring(4, 6))) + \"\u6708\") + (java.lang.Integer.parseInt(news_time.substring(6, 8)))) + \"\u65e5\"; } catch (java.lang.Exception e) { str = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/7160/buggy-version/app.src.main.java.com.newsclient.data.DSingleNews.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "7925f42db20b49094bbccfd788a9c0bccf56776e", "Url": "https://api.github.com/repos/LegaDyan/NewsClient", "Date": "2017-09-13T07:02:37Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return com.datdo.mobilib.util.MblUtils.isNetworkConnected() ? com.datdo.mobilib.base.MblNetworkStatusChangedReceiver.MblNetworkStatus.ON : com.datdo.mobilib.base.MblNetworkStatusChangedReceiver.MblNetworkStatus.OFF; } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8376/buggy-version/Mobilib.src.com.datdo.mobilib.base.MblNetworkStatusChangedReceiver.java", "BodyUseAPI": ["com.datdo.mobilib.util.MblUtils.isNetworkConnected()"], "Fixed commit": "29996115df1a02c2374dd2c2ce1fa07ca6d5c127", "Url": "https://api.github.com/repos/datdojp/mobilib", "Date": "2015-09-28T07:58:53Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return com.datdo.mobilib.util.MblUtils.isBluetoothOn() ? com.datdo.mobilib.base.MblBluetoothStatusChangedReceiver.MblBluetoothStatus.ON : com.datdo.mobilib.base.MblBluetoothStatusChangedReceiver.MblBluetoothStatus.OFF; } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/8376/buggy-version/Mobilib.src.com.datdo.mobilib.base.MblBluetoothStatusChangedReceiver.java", "BodyUseAPI": ["com.datdo.mobilib.util.MblUtils.isBluetoothOn()"], "Fixed commit": "29996115df1a02c2374dd2c2ce1fa07ca6d5c127", "Url": "https://api.github.com/repos/datdojp/mobilib", "Date": "2015-09-28T07:58:53Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.Collection<org.cybercat.automation.events.EventListener<?>> listeners = holder.createListeners(configuration); for (org.cybercat.automation.events.EventListener<?> listener : listeners) { addListener(listener); } } catch (java.lang.Exception e) { org.cybercat.automation.core.EventManagerImpl.log.error(((holder.getClass().getSimpleName()) + \" initialisation failed.\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V33/4049/buggy-version/CyberCat.src.main.java.org.cybercat.automation.core.EventManagerImpl.java", "BodyUseAPI": ["org.cybercat.automation.core.AddonContainer.createListeners(org.cybercat.automation.Configuration)", "org.cybercat.automation.core.EventManagerImpl.addListener(org.cybercat.automation.events.EventListener<?>)"], "Fixed commit": "fa45934e95e61aaa6c68f7cc90a02bb930bcb5ce", "Url": "https://api.github.com/repos/ubegun/Cybercat", "Date": "2015-10-26T04:00:56Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { clnt = de.zib.gndms.taskflows.filetransfer.server.network.NetworkAuxiliariesProvider.getGridFTPClientFactory().createClient(suri, getCredentialProvider()); } catch (java.lang.IllegalStateException e) { throw new de.zib.gndms.logic.model.gorfx.taskflow.UnsatisfiableOrderException(\"Could be a syntax error in an order property: \", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8015/buggy-version/taskflows.fileTransfer.server.src.de.zib.gndms.taskflows.filetransfer.server.logic.AbstractTransferQuoteCalculator.java", "BodyUseAPI": ["de.zib.gndms.taskflows.filetransfer.server.network.NetworkAuxiliariesProvider.getGridFTPClientFactory()", "de.zib.gndms.taskflows.filetransfer.server.network.NetworkAuxiliariesProvider.getGridFTPClientFactory().createClient(java.net.URI,de.zib.gndms.kit.security.CredentialProvider)", "de.zib.gndms.taskflows.filetransfer.server.logic.AbstractTransferQuoteCalculator<M>.getCredentialProvider()"], "Fixed commit": "bdf8348d1c7125e5950122e3866b1653d5b010a0", "Url": "https://api.github.com/repos/zibhub/GNDMS", "Date": "2012-08-21T11:13:16Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { super.processRightClickBlock(packetIn); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7192/buggy-version/src.main.java.ValkyrienWarfareBase.Interaction.CustomNetHandlerPlayServer.java", "BodyUseAPI": ["net.minecraft.network.NetHandlerPlayServer.processRightClickBlock(net.minecraft.network.play.client.CPacketPlayerTryUseItemOnBlock)"], "Fixed commit": "c998840bf5108ea84bc2f09739f2cf17ca475c5f", "Url": "https://api.github.com/repos/ValkyrienWarfare/Valkyrien-Warfare-Revamped", "Date": "2017-03-16T07:05:04Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return processing.app.Base.getLibFile(filename); } catch (java.lang.Exception e) { e.printStackTrace(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2267/buggy-version/app.src.processing.app.ui.Welcome.java", "BodyUseAPI": ["processing.app.Base.getLibFile(java.lang.String)"], "Fixed commit": "f9c248f0e06a53ffd35b5f5f9484cc7072cd2526", "Url": "https://api.github.com/repos/Luxapodular/processing", "Date": "2015-07-17T13:47:23Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { do { v1 = (2 * (nextDouble.getAsDouble())) - 1; v2 = (2 * (nextDouble.getAsDouble())) - 1; s = (v1 * v1) + (v2 * v2); } while ((s >= 1) || (s == 0) ); } finally { unlockForNextGaussian(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2448/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.BaseRandom.java", "BodyUseAPI": ["java.util.function.DoubleSupplier.getAsDouble()", "java.util.function.DoubleSupplier.getAsDouble()"], "Fixed commit": "c3a0dc06ad42a0e130973d0921e0b0f440fa800f", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-11-28T07:34:13Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { processInformation = restClient.syncContentSpecTranslations(contentSpecEntity.getId(), \"\", \"\", getLocales(), username, apikey); com.beust.jcommander.JCommander.getConsole().println(org.jboss.pressgang.ccms.contentspec.client.utils.ClientUtilities.getMessage(\"STARTING_TO_SYNC_TRANSLATIONS_MSG\")); com.beust.jcommander.JCommander.getConsole().println(org.jboss.pressgang.ccms.contentspec.client.utils.ClientUtilities.getMessage(\"PROCESS_UUID_MSG\", processInformation.getId())); } catch (org.jboss.pressgang.ccms.provider.exception.BadRequestException e) { printErrorAndShutdown(Constants.EXIT_FAILURE, e.getMessage(), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3652/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.client.commands.SyncTranslationCommand.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.rest.v1.elements.RESTProcessInformationV1.getId()", "org.jboss.pressgang.ccms.contentspec.client.commands.SyncTranslationCommand.getLocales()", "com.beust.jcommander.JCommander.getConsole().println(org.jboss.pressgang.ccms.contentspec.client.utils.ClientUtilities.getMessage(\"STARTING_TO_SYNC_TRANSLATIONS_MSG\"))", "org.jboss.pressgang.ccms.rest.v1.jaxrsinterfaces.RESTInterfaceV1.syncContentSpecTranslations(contentSpecEntity.getId(),java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "com.beust.jcommander.JCommander.getConsole().println(org.jboss.pressgang.ccms.contentspec.client.utils.ClientUtilities.getMessage(\"PROCESS_UUID_MSG\", processInformation.getId()))", "org.jboss.pressgang.ccms.wrapper.ContentSpecWrapper.getId()", "com.beust.jcommander.JCommander.getConsole()", "com.beust.jcommander.JCommander.getConsole()", "org.jboss.pressgang.ccms.contentspec.client.utils.ClientUtilities.getMessage(java.lang.String,processInformation.getId())", "org.jboss.pressgang.ccms.contentspec.client.utils.ClientUtilities.getMessage(java.lang.String)"], "Fixed commit": "66644be2a4dd946460e7c51dec72f53efa3abaca", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSCSPClient", "Date": "2014-09-29T06:57:28Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { processInformation = restClient.pushContentSpecForTranslation(contentSpecEntity.getId(), \"\", \"\", contentSpecOnly, disableCopyTrans, allowUnfrozenPush, username, apikey); com.beust.jcommander.JCommander.getConsole().println(org.jboss.pressgang.ccms.contentspec.client.utils.ClientUtilities.getMessage(\"STARTING_TO_PUSH_TO_ZANATA_MSG\")); com.beust.jcommander.JCommander.getConsole().println(org.jboss.pressgang.ccms.contentspec.client.utils.ClientUtilities.getMessage(\"PROCESS_UUID_MSG\", processInformation.getId())); } catch (org.jboss.pressgang.ccms.provider.exception.BadRequestException e) { printErrorAndShutdown(Constants.EXIT_FAILURE, e.getMessage(), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3652/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.rest.v1.jaxrsinterfaces.RESTInterfaceV1.pushContentSpecForTranslation(contentSpecEntity.getId(),java.lang.String,java.lang.String,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.String)", "com.beust.jcommander.JCommander.getConsole()", "com.beust.jcommander.JCommander.getConsole().println(org.jboss.pressgang.ccms.contentspec.client.utils.ClientUtilities.getMessage(\"PROCESS_UUID_MSG\", processInformation.getId()))", "com.beust.jcommander.JCommander.getConsole().println(org.jboss.pressgang.ccms.contentspec.client.utils.ClientUtilities.getMessage(\"STARTING_TO_PUSH_TO_ZANATA_MSG\"))", "org.jboss.pressgang.ccms.wrapper.ContentSpecWrapper.getId()", "com.beust.jcommander.JCommander.getConsole()", "org.jboss.pressgang.ccms.contentspec.client.utils.ClientUtilities.getMessage(java.lang.String)", "org.jboss.pressgang.ccms.contentspec.client.utils.ClientUtilities.getMessage(java.lang.String,processInformation.getId())", "org.jboss.pressgang.ccms.rest.v1.elements.RESTProcessInformationV1.getId()"], "Fixed commit": "66644be2a4dd946460e7c51dec72f53efa3abaca", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSCSPClient", "Date": "2014-09-29T06:57:28Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { account.setUsername(jsonObject.getString(\"email \")); } catch (org.json.JSONException e) { android.util.Log.e(\"LoginAct\", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2907/buggy-version/app.src.main.java.org.fossasia.phimpme.accounts.AccountActivity.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "org.fossasia.phimpme.data.local.AccountDatabase.setUsername(jsonObject.getString(\"email   \"))"], "Fixed commit": "f65b17a35dddff7c25d1613551caae958751fd6d", "Url": "https://api.github.com/repos/pa1pal/phimpme-android", "Date": "2017-07-07T13:55:14Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return (java.lang.Integer.parseInt(answer)) == (correct); } catch (java.lang.NumberFormatException nfe) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8257/buggy-version/ObjectOrientatie.src.Exercise05.MCQuestion.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "cdf85b040886149a5046a33a39ebadc5932ddfc2", "Url": "https://api.github.com/repos/TijmenvanderKemp/oo-2016", "Date": "2016-03-06T12:28:46Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { scheduledExecutor.execute(new java.lang.Runnable() { @java.lang.Override public void run() { try { gaugePointRepository.store(gaugePoints); } catch (java.lang.Throwable t) { logger.error(t.getMessage(), t); } } }); } catch (java.util.concurrent.RejectedExecutionException e) { if (scheduledExecutor.isShutdown()) { logger.debug(e.getMessage(), e); return; } throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8547/buggy-version/core.src.main.java.org.glowroot.collector.GaugeCollector.java", "BodyUseAPI": ["java.util.concurrent.ScheduledExecutorService.execute(java.lang.Runnable)", "java.lang.Object()", "org.slf4j.Logger.error(java.lang.String,java.lang.Throwable)", "org.glowroot.collector.GaugePointRepository.store(java.util.List<org.glowroot.collector.GaugePoint>)", "java.lang.Throwable.getMessage()"], "Fixed commit": "223e3554dd76a4183b6e12c6dcb89a161c70ea31", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2015-06-06T04:09:57Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { hash = java.security.MessageDigest.getInstance(\"MD5\").digest(new byte[]{ 1, 2, 3, 4, 5, 7 }); } catch (java.security.NoSuchAlgorithmException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2949/buggy-version/GLET.app.src.main.java.com.sapp.glet.filesystem.Filer.java", "BodyUseAPI": ["java.security.MessageDigest.digest(byte[])", "java.security.MessageDigest.getInstance(java.lang.String)"], "Fixed commit": "de746fa3c17efb5360df4c25a82d44f6bdbebc11", "Url": "https://api.github.com/repos/SimonBlasen/MrFriederich", "Date": "2017-03-19T18:41:22Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { event.getResource().deleteMarkers(org.switchyard.tools.ui.validation.SwitchYardProjectValidator.SWITCHYARD_MARKER_ID, true, IResource.DEPTH_ZERO); } catch (org.eclipse.core.runtime.CoreException e) { org.switchyard.tools.ui.Activator.getDefault().getLog().log(e.getStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7079/buggy-version/eclipse.plugins.org.switchyard.tools.ui.src.org.switchyard.tools.ui.validation.SwitchYardProjectValidator.java", "BodyUseAPI": ["org.eclipse.wst.validation.ValidationEvent.getResource()", "event.getResource().deleteMarkers(java.lang.String,boolean,IResource.DEPTH_ZERO)"], "Fixed commit": "82ade50428479d83a7c8859f080be7f7a6e22e5a", "Url": "https://api.github.com/repos/jboss-switchyard/tools", "Date": "2013-10-17T01:21:16Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { entries = gr.uoa.di.monitoring.android.persist.FileStore.getEntries(fis, gr.uoa.di.monitoring.model.Battery.BatteryFields.class); } finally { try { fis.close(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6170/buggy-version/src.gr.uoa.di.monitoring.model.Battery.java", "BodyUseAPI": ["gr.uoa.di.monitoring.android.persist.FileStore.getEntries(java.io.FileInputStream,java.lang.Class)"], "Fixed commit": "2e639a3a17e697df4167a88888593e010edf6602", "Url": "https://api.github.com/repos/Utumno/MonitoringModel", "Date": "2013-11-11T23:20:53Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { entries = gr.uoa.di.monitoring.android.persist.FileStore.getEntries(fis, gr.uoa.di.monitoring.model.Position.LocationFields.class); } finally { try { fis.close(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6170/buggy-version/src.gr.uoa.di.monitoring.model.Position.java", "BodyUseAPI": ["gr.uoa.di.monitoring.android.persist.FileStore.getEntries(java.io.FileInputStream,java.lang.Class)"], "Fixed commit": "2e639a3a17e697df4167a88888593e010edf6602", "Url": "https://api.github.com/repos/Utumno/MonitoringModel", "Date": "2013-11-11T23:20:53Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { entries = gr.uoa.di.monitoring.android.persist.FileStore.getEntries(fis, gr.uoa.di.monitoring.model.Wifi.WifiFields.class); } finally { try { fis.close(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6170/buggy-version/src.gr.uoa.di.monitoring.model.Wifi.java", "BodyUseAPI": ["gr.uoa.di.monitoring.android.persist.FileStore.getEntries(java.io.FileInputStream,java.lang.Class)"], "Fixed commit": "2e639a3a17e697df4167a88888593e010edf6602", "Url": "https://api.github.com/repos/Utumno/MonitoringModel", "Date": "2013-11-11T23:20:53Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { o = field.get(obj); } catch (java.lang.IllegalAccessException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2446/buggy-version/yaroslav.src.main.java.JsonConverter.Converter.java", "BodyUseAPI": ["java.lang.reflect.Field.get(java.lang.Object)"], "Fixed commit": "2d6a5d4119d2e6a4469494f24dd19bee96d06242", "Url": "https://api.github.com/repos/Eugene1992/java-professional-05", "Date": "2017-07-23T11:41:29Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { response.process(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5833/buggy-version/tomcat.src.main.java.ex02.StaticResourceProcessor.java", "BodyUseAPI": ["ex02.StaticResourceProcessor.process()"], "Fixed commit": "05981d3f72341401317061ab98340ad8c8c096fa", "Url": "https://api.github.com/repos/YangZhuoNJ/mtmct", "Date": "2017-06-11T01:43:03Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((null != bitmap) && (pref != null)) { android.graphics.drawable.Drawable drawable = new android.graphics.drawable.BitmapDrawable(getResources(), bitmap); pref.setIcon(drawable); } } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5940/buggy-version/app.src.main.java.com.ncatz.babyguard.preferences.KidsSettings_Fragment.java", "BodyUseAPI": ["android.preference.PreferenceScreen.setIcon(android.graphics.drawable.Drawable)", "com.ncatz.babyguard.preferences.KidsSettings_Fragment.6.getResources()"], "Fixed commit": "74b3e58ac74a99b603b24542dd11905fa6064cbc", "Url": "https://api.github.com/repos/yeray697/BabyGuard", "Date": "2017-06-18T19:52:45Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((null != bitmap) && ((imgPref) != null)) { android.graphics.drawable.Drawable drawable = new android.graphics.drawable.BitmapDrawable(getResources(), bitmap); imgPref.setIcon(drawable); } } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5940/buggy-version/app.src.main.java.com.ncatz.babyguard.preferences.Settings_Fragment.java", "BodyUseAPI": ["android.preference.PreferenceScreen.setIcon(android.graphics.drawable.Drawable)", "com.ncatz.babyguard.preferences.Settings_Fragment.3.getResources()"], "Fixed commit": "74b3e58ac74a99b603b24542dd11905fa6064cbc", "Url": "https://api.github.com/repos/yeray697/BabyGuard", "Date": "2017-06-18T19:52:45Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { marshaller.setProperty(org.joval.xml.SchemaRegistry.PREFIXMAPPER_PROP, this); } catch (javax.xml.bind.PropertyException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7635/buggy-version/src.org.joval.xml.SchemaRegistry.java", "BodyUseAPI": ["javax.xml.bind.Marshaller.setProperty(java.lang.String,org.joval.xml.SchemaRegistry.SchemaImpl)"], "Fixed commit": "f2f020478cd1b21e4ac707973caaa633ace48f86", "Url": "https://api.github.com/repos/joval/jOVAL", "Date": "2013-12-05T18:09:18Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.apache.http.util.EntityUtils.consume(entity); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5358/buggy-version/src.main.java.com.soulgalore.crawler.core.impl.HttpClientResponseFetcher.java", "BodyUseAPI": ["org.apache.http.util.EntityUtils.consume(org.apache.http.HttpEntity)"], "Fixed commit": "72d68acd424a12e2b17ccb5e0ca1c0096333fb7d", "Url": "https://api.github.com/repos/soulgalore/crawler", "Date": "2012-09-17T20:51:57Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.reflect.Field field = com.liferay.portal.kernel.util.ReflectionUtil.getDeclaredField(com.liferay.portal.kernel.util.ServerDetector.class, \"_serverType\"); field.set(null, serverType); } catch (java.lang.Exception e) { com.liferay.portal.kernel.util.ReflectionUtil.throwException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4535/buggy-version/portal-kernel.src.com.liferay.portal.kernel.util.ServerDetector.java", "BodyUseAPI": ["java.lang.reflect.Field.set(<nulltype>,com.liferay.portal.kernel.util.ServerDetector.ServerType)", "com.liferay.portal.kernel.util.ReflectionUtil.getDeclaredField(java.lang.Class,java.lang.String)"], "Fixed commit": "f5bc18b3af5edad5293850e986858d5f15a9238b", "Url": "https://api.github.com/repos/jeffreyyang/liferay-portal", "Date": "2016-09-16T23:43:37Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.openqa.selenium.WebDriver driver = factory.getDriver(); driver.manage().window().maximize(); return driver; } catch (org.openqa.selenium.remote.UnreachableBrowserException e) { org.openqa.selenium.WebDriver driver = factory.getDriver(); driver.manage().window().maximize(); return driver; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1593/buggy-version/src.main.java.portfolio.common.DriverModule.java", "BodyUseAPI": ["driver.manage().window().maximize()", "driver.manage().window()", "portfolio.common.driverfactory.DriverFactory.getDriver()", "org.openqa.selenium.WebDriver.manage()"], "Fixed commit": "1d6c3be7e9b5f8223f6dc5b76e89600644843de2", "Url": "https://api.github.com/repos/dturchenko91/skiutahregression", "Date": "2017-07-01T01:16:45Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { p.load(fis); } finally { fis.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/969/buggy-version/molgenis-compute-core.src.main.java.org.molgenis.compute5.ComputeProperties.java", "BodyUseAPI": ["java.util.Properties.load(java.io.FileInputStream)"], "Fixed commit": "212fc528b08c31b75c5d81ead16f5420b4422d99", "Url": "https://api.github.com/repos/erwinwinder/molgenis", "Date": "2013-07-04T08:22:42Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { p.store(fos, \"This file contains your molgenis-compute properties\"); } finally { fos.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/969/buggy-version/molgenis-compute-core.src.main.java.org.molgenis.compute5.ComputeProperties.java", "BodyUseAPI": ["java.util.Properties.store(java.io.FileOutputStream,java.lang.String)"], "Fixed commit": "212fc528b08c31b75c5d81ead16f5420b4422d99", "Url": "https://api.github.com/repos/erwinwinder/molgenis", "Date": "2013-07-04T08:22:42Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (collide()) { return; } } catch (java.lang.ClassCastException err) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8153/buggy-version/core.src.com.emergentorganization.cellrpg.components.entity.CACollisionComponent.java", "BodyUseAPI": ["com.emergentorganization.cellrpg.components.entity.CACollisionComponent.collide()"], "Fixed commit": "8917c76f8ef53ffe0646f9b41c3a0e4956fef9dc", "Url": "https://api.github.com/repos/EmergentOrganization/cell-rpg", "Date": "2015-09-03T15:27:57Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { seedIt(); } catch (java.lang.RuntimeException err) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8153/buggy-version/core.src.com.emergentorganization.cellrpg.components.entity.GridSeedComponent.java", "BodyUseAPI": ["com.emergentorganization.cellrpg.components.entity.GridSeedComponent.seedIt()"], "Fixed commit": "8917c76f8ef53ffe0646f9b41c3a0e4956fef9dc", "Url": "https://api.github.com/repos/EmergentOrganization/cell-rpg", "Date": "2015-09-03T15:27:57Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.thunlp.thulac.Thulac.run(modelDir, separator, useT2S, segOnly, useFilter, userDict, in, out); } finally { in.close(); out.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2898/buggy-version/src.main.java.org.thunlp.thulac.Thulac.java", "BodyUseAPI": ["org.thunlp.thulac.Thulac.run(java.lang.String,char,boolean,boolean,boolean,java.lang.String,java.util.Scanner,java.io.PrintStream)"], "Fixed commit": "98fffb2ca0f9abfe0c9327189b049e2e0db4ecb7", "Url": "https://api.github.com/repos/std4453/THULAC-Java", "Date": "2017-02-23T13:18:59Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.laytonsmith.core.functions.Scoreboards.addBoard(com.laytonsmith.core.functions.Scoreboards.MAIN, com.laytonsmith.core.Static.getServer().getMainScoreboard(), Target.UNKNOWN); } catch (com.laytonsmith.core.NotInitializedYetException e) { e.printStackTrace(java.lang.System.err); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8288/buggy-version/src.main.java.com.laytonsmith.core.functions.Scoreboards.java", "BodyUseAPI": ["com.laytonsmith.core.Static.getServer().getMainScoreboard()", "com.laytonsmith.core.Static.getServer()", "com.laytonsmith.core.functions.Scoreboards.addBoard(java.lang.String,com.laytonsmith.core.Static.getServer().getMainScoreboard(),Target.UNKNOWN)"], "Fixed commit": "c7185637baa45667c03c33d3b7e5dec178c04d98", "Url": "https://api.github.com/repos/EntityReborn/commandhelper", "Date": "2013-04-29T17:22:33Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { logbookMainView = inflater.inflate(R.layout.logbook_main_view, container, false); } catch (android.view.InflateException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6225/buggy-version/SeapalAndroidApp.src.de.htwg.seapal.aview.gui.fragment.LogbookFragment.java", "BodyUseAPI": ["android.view.LayoutInflater.inflate(R.layout.logbook_main_view,android.view.ViewGroup,boolean)"], "Fixed commit": "dd634b91616b8defd987e1ebfa6e0adda0116bb5", "Url": "https://api.github.com/repos/jack10/de.htwg.seapal.android", "Date": "2013-12-16T13:45:08Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result = com.balonbal.slybot.util.sites.mal.MyAnimeList.searchAnime(org.apache.commons.lang3.StringUtils.join(parameters, \" \", start, parameters.length), Settings.accounts.get(\"mal\").get(\"username\"), Settings.accounts.get(\"mal\").get(\"password\")); } catch (java.lang.Exception e) { event.getBot().reply(event, \"Error, unable to get results for your query.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8454/buggy-version/src.main.java.com.balonbal.slybot.commands.CommandMAL.java", "BodyUseAPI": ["Settings.accounts.get(\"mal\").get(java.lang.String)", "com.balonbal.slybot.util.sites.mal.MyAnimeList.searchAnime(org.apache.commons.lang3.StringUtils.join(parameters, \" \", start, parameters.length),Settings.accounts.get(\"mal\").get(\"username\"),Settings.accounts.get(\"mal\").get(\"password\"))", "Settings.accounts.get(\"mal\").get(java.lang.String)", "Settings.accounts.get(java.lang.String)", "org.apache.commons.lang3.StringUtils.join(java.lang.String[],java.lang.String,int,int)", "Settings.accounts.get(java.lang.String)"], "Fixed commit": "7ec1869cab740ea5ef53b3a7c94d4e4be64fed84", "Url": "https://api.github.com/repos/Balonbal/slybot", "Date": "2015-03-07T22:48:02Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return property.getNode(); } catch (javax.jcr.ItemNotFoundException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3847/buggy-version/core.src.main.java.org.chromattic.core.jcr.ReferenceManager.java", "BodyUseAPI": ["javax.jcr.Property.getNode()"], "Fixed commit": "774bd55acc13d74c106b90d758f4abd1833bbbcc", "Url": "https://api.github.com/repos/exoplatform/chromattic", "Date": "2009-08-03T11:59:18Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { requestUrl = java.net.URLDecoder.decode(requestUrl, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { org.ihtsdo.buildcloud.controller.helper.HypermediaGenerator.LOGGER.error(\"request Url can't be decoded\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3808/buggy-version/api.src.main.java.org.ihtsdo.buildcloud.controller.helper.HypermediaGenerator.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "9c2aea8c1f693e71436b5c8b31f05adc4306f8bc", "Url": "https://api.github.com/repos/IHTSDO/snomed-release-service", "Date": "2016-12-07T15:17:11Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { delimiters = copy_args[(i + 1)]; } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/515/buggy-version/WordCounter.src.wordCounter.WC.java", "BodyUseAPI": [], "Fixed commit": "7bb161d1fc430a2993cbfd232f0e69366219a2a4", "Url": "https://api.github.com/repos/KevinJones/CS6300WordCounter", "Date": "2012-09-11T03:13:07Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { elems = java.lang.System.getProperty(listParams).split(\",\"); } catch (java.lang.Exception e) { logger.error(\"-> Error while parsing params. {} is not defined.\", listParams); throw new java.lang.Exception((\"-> Error while parsing params. {} is not defined.\" + listParams)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7007/buggy-version/src.main.java.com.stratio.qa.aspects.LoopTagAspect.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.System.getProperty(java.lang.String)"], "Fixed commit": "1cb60584d9340ad83b07d9aa17c6ab65ec220875", "Url": "https://api.github.com/repos/mrodrigo-stratio/bdt", "Date": "2017-03-09T11:59:50Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { currentThread.setContextClassLoader(pluginClassLoader); pluginLoader = edu.umd.cs.findbugs.PluginLoader.getPluginLoader(plugin, pluginClassLoader, false, true); } finally { currentThread.setContextClassLoader(cl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5262/buggy-version/src.src.impl.org.twodividedbyzero.idea.findbugs.common.util.FindBugsCustomPluginUtil.java", "BodyUseAPI": ["java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)", "edu.umd.cs.findbugs.PluginLoader.getPluginLoader(java.net.URL,java.lang.ClassLoader,boolean,boolean)"], "Fixed commit": "f1becbd099f74da970852cd1c5ae2f92e8bcb793", "Url": "https://api.github.com/repos/andrepdo/findbugs-idea", "Date": "2016-10-16T14:18:04Z"},
{"Line": "=>3052", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if (target instanceof org.cqframework.cql.cql2elm.LibraryRef) { return resolveFunction(((org.cqframework.cql.cql2elm.LibraryRef) (target)).getLibraryName(), ctx); } if (target instanceof org.cqframework.cql.cql2elm.Expression) { throw new java.lang.IllegalArgumentException(\"Method rewrite not yet supported.\"); } throw new java.lang.IllegalArgumentException(java.lang.String.format(\"Invalid invocation target: %s\", target.getClass().getName())); } finally { targets.push(target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7676/buggy-version/Src.java.cql-to-elm.src.main.java.org.cqframework.cql.cql2elm.Cql2ElmVisitor.java", "BodyUseAPI": ["target.getClass().getName()", "java.lang.String.format(java.lang.String,target.getClass().getName())", "org.cqframework.cql.cql2elm.Expression.getClass()", "org.cqframework.cql.cql2elm.Expression.getLibraryName()", "org.cqframework.cql.cql2elm.Cql2ElmVisitor.resolveFunction(((org.cqframework.cql.cql2elm.LibraryRef) (target)).getLibraryName(),cqlParser.FunctionContext)"], "Fixed commit": "fa485698f845d016919de59ba757f3385d843b0d", "Url": "https://api.github.com/repos/cqframework/clinical_quality_language", "Date": "2016-03-27T20:22:22Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { client.deleteExtraFile(errorPageName); } catch (java.lang.Exception ignoredException) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2130/buggy-version/adapter.zxtm-service.src.main.java.org.openstack.atlas.adapter.stm.StmAdapterImpl.java", "BodyUseAPI": ["org.rackspace.stingray.client.StingrayRestClient.deleteExtraFile(java.lang.String)"], "Fixed commit": "51f2bc60b1264ac32296c07bbfe1dfbe47faa661", "Url": "https://api.github.com/repos/lbrackspace/atlas-lb", "Date": "2014-03-01T23:18:13Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Object value = moyeComputeEngine.execute(expression, userDatas); updatedDatas.put(dataDefinition.getKey(), value); } catch (java.lang.Exception e) { com.happy_query.writer.Writer.LOG.error(\"compute new dd value failed,expression:{}, userDatas:{}\", expression, com.alibaba.fastjson.JSON.toJSONString(userDatas), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4089/buggy-version/src.main.java.com.happy_query.writer.Writer.java", "BodyUseAPI": ["com.jkys.moye.MoyeComputeEngine.execute(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)", "java.util.Map<java.lang.String, java.lang.Object>.put(dataDefinition.getKey(),java.lang.Object)", "com.happy_query.parser.domain.DataDefinition.getKey()"], "Fixed commit": "8eab936c3f2cf16df2cca4c30363c376aeed7af3", "Url": "https://api.github.com/repos/fantasycool/happy_query", "Date": "2016-10-27T05:07:57Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { saveReading(java.lang.Float.valueOf(text)); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2789/buggy-version/Code.GCI16Mobile.app.src.main.java.gci16.mobile.controllers.ReadingsController.java", "BodyUseAPI": ["java.lang.Float.valueOf(java.lang.String)", "gci16.mobile.controllers.ReadingsController.10.saveReading(java.lang.Float)"], "Fixed commit": "033c1a8343b32934debba35eef06f1532b2f4ceb", "Url": "https://api.github.com/repos/CarloDeVita/INGSW", "Date": "2017-09-26T14:15:54Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tempZipFilePath = sdkGenerationManager.generateSdkForApi(apiId, language, username); } catch (org.wso2.carbon.apimgt.core.exception.ApiStoreSdkGenerationException e) { java.lang.String errorMessage = \"Error while generating SDK for requested language\"; org.wso2.carbon.apimgt.rest.api.store.impl.ApisApiServiceImpl.log.error(errorMessage, e); return javax.ws.rs.core.Response.status(Response.Status.INTERNAL_SERVER_ERROR).build(); } catch (org.wso2.carbon.apimgt.core.exception.APIManagementException e) { java.lang.String errorMessage = \"Error while retrieving documentation for given apiId \" + apiId; java.util.HashMap<java.lang.String, java.lang.String> paramList = new java.util.HashMap<java.lang.String, java.lang.String>(); paramList.put(APIMgtConstants.ExceptionsConstants.API_ID, apiId); org.wso2.carbon.apimgt.rest.api.common.dto.ErrorDTO errorDTO = org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.getErrorDTO(e.getErrorHandler(), paramList); org.wso2.carbon.apimgt.rest.api.store.impl.ApisApiServiceImpl.log.error(errorMessage, e); return javax.ws.rs.core.Response.status(e.getErrorHandler().getHttpStatusCode()).entity(errorDTO).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6261/buggy-version/components.apimgt.org.wso2.carbon.apimgt.rest.api.store.src.main.java.org.wso2.carbon.apimgt.rest.api.store.impl.ApisApiServiceImpl.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.core.impl.ApiStoreSdkGenerationManager.generateSdkForApi(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "02d058defacf5fe3990fdf49c05612ccc83b277f", "Url": "https://api.github.com/repos/vlgunarathne/carbon-apimgt", "Date": "2017-09-06T05:13:53Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { entity = com.hsjawanda.gaeobjectify.data.IndexProperty.ofy().load().type(this.cls).id(this.property.getId()).now(); } catch (java.lang.Exception e) { com.hsjawanda.gaeobjectify.data.IndexProperty.log.log(java.util.logging.Level.WARNING, (((((\"Failed to retrieve \" + (this.cls.getSimpleName())) + \" by key '\") + (this.property.getId())) + \"'. Reason: \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2295/buggy-version/src.main.java.com.hsjawanda.gaeobjectify.data.IndexProperty.java", "BodyUseAPI": ["com.hsjawanda.gaeobjectify.data.IndexProperty.ofy().load().type(this.cls).id(this.property.getId())", "T.getId()", "com.hsjawanda.gaeobjectify.data.IndexProperty.ofy().load().type(this.cls).id(this.property.getId()).now()", "com.hsjawanda.gaeobjectify.data.IndexProperty.ofy().load().type(java.lang.Class<T>)", "com.hsjawanda.gaeobjectify.data.IndexProperty.ofy()", "com.hsjawanda.gaeobjectify.data.IndexProperty.ofy().load()"], "Fixed commit": "29b80a60962b656554605608359e0aa261db7744", "Url": "https://api.github.com/repos/hsjawanda/gae-objectify-utils", "Date": "2016-04-21T00:00:23Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.gwtplatform.mvp.client.DelayedBindRegistry.bind(ginjector); ginjector.getPlaceManager().revealCurrentPlace(); } catch (java.lang.Exception e) { com.allen_sauer.gwt.log.client.Log.debug(e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/8965/buggy-version/src.com.fountainhead.client.GWTPot.java", "BodyUseAPI": ["com.fountainhead.client.gin.ClientGinjector.getPlaceManager()", "com.gwtplatform.mvp.client.DelayedBindRegistry.bind(com.fountainhead.client.gin.ClientGinjector)", "ginjector.getPlaceManager().revealCurrentPlace()"], "Fixed commit": "5e17deace7f87eca7efc8c920eb687c70d0f9c2b", "Url": "https://api.github.com/repos/othmanelmoulat/GWTPOT", "Date": "2011-10-24T22:07:08Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getScreenshotAsURIr.wait(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/1701/buggy-version/src.android.Screenshot.java", "BodyUseAPI": ["java.lang.Runnable.wait()"], "Fixed commit": "fed716fa99355329a5b847c9ce53d744796f0835", "Url": "https://api.github.com/repos/aik9508/cordova-screenshot", "Date": "2017-08-03T11:43:15Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final java.lang.reflect.Method main = runClass.getDeclaredMethod(\"main\", java.lang.String[].class); main.setAccessible(true); final java.lang.Object sfa = args; main.invoke(null, sfa); } catch (java.lang.NoSuchMethodException ex) { throw new java.lang.NoSuchMethodException(((runClass.getName()) + \"(Void)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/4655/buggy-version/api.src.main.java.ceylon.modules.api.runtime.SecurityActions.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(<nulltype>,java.lang.Object)", "java.lang.reflect.Method.setAccessible(boolean)", "java.lang.Class<?>.getDeclaredMethod(java.lang.String,java.lang.Class)"], "Fixed commit": "d6cbbf8eeaf224ac6b76711c0607f070758604fb", "Url": "https://api.github.com/repos/ceylon/ceylon-runtime", "Date": "2012-04-12T10:38:05Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { signDate = new java.text.SimpleDateFormat(\"dd.MM.yyyy\").parse(signLine); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/3130/buggy-version/src.Christmas.Listeners.ChristmasListener.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "cb651b764418583d41c9018e2ada4eebbeca6163", "Url": "https://api.github.com/repos/xapfeltortexp/Christmas", "Date": "2012-12-01T11:33:32Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ctx.camera.turnTo(pathCastle.next()); } catch (java.lang.NullPointerException e) { e.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/7726/buggy-version/src.SirFancyGamer.scripts.OSGuardSlayer.java", "BodyUseAPI": ["ctx.camera.turnTo(pathCastle.next())", "SirFancyGamer.scripts.TilePath.next()"], "Fixed commit": "0d6d0551354cdeca5a96912f1a246d56d2e57fba", "Url": "https://api.github.com/repos/achung205/powerbot", "Date": "2016-01-19T04:45:01Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { rq = dfrq.copy(); } catch (io.netty.util.IllegalReferenceCountException e) { rq = dfrq; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/6337/buggy-version/netty-http-client.src.main.java.com.mastfrog.netty.http.client.HttpClient.java", "BodyUseAPI": ["io.netty.handler.codec.http.DefaultFullHttpRequest.copy()"], "Fixed commit": "3ec2c155a0d752ae19e40dda73857e778ae2414c", "Url": "https://api.github.com/repos/timboudreau/netty-http-client", "Date": "2014-09-22T06:53:56Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (int i = 0; i < (gameCount); i++) { android.widget.EditText et = ((android.widget.EditText) (findViewById(etArray[i]))); scoreArray[i] = java.lang.Integer.parseInt(et.getText().toString()); } } catch (java.lang.NumberFormatException nfe) { android.widget.Toast t = android.widget.Toast.makeText(this, \"Values must be a number\", Toast.LENGTH_SHORT); t.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/2035/buggy-version/src.com.dewald.goodBowler.LeagueNightActivity.java", "BodyUseAPI": ["et.getText().toString()", "java.lang.Integer.parseInt(et.getText().toString())", "android.widget.EditText.getText()", "com.dewald.goodBowler.LeagueNightActivity.findViewById(int)"], "Fixed commit": "7f07bbfb72170609fd947b623619aa430a2d57cb", "Url": "https://api.github.com/repos/Apokio/GoodBowlerStatsV2", "Date": "2013-05-12T16:36:00Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { id = java.lang.Integer.parseInt(identifier); } catch (java.lang.NumberFormatException nfe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V34/5435/buggy-version/src.main.java.eu.openminted.content.connector.core.util.ElasticsearchConverter.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "c3d636db61a8e5cb2d52489a8a6680d5ae1dcc64", "Url": "https://api.github.com/repos/openminted/content-connector-core", "Date": "2017-07-21T12:23:28Z"},
{"Line": "=>670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.yawlfoundation.yawl.elements.state.YIdentifier id = task.t_fire(pmgr).get(0); task.t_start(pmgr, id); identifiers.put(id, task); _busyTasks.add(task); } catch (org.yawlfoundation.yawl.exceptions.YStateException yse) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4945/buggy-version/src.org.yawlfoundation.yawl.engine.YNetRunner.java", "BodyUseAPI": ["org.yawlfoundation.yawl.engine.YAtomicTask.t_fire(org.yawlfoundation.yawl.engine.YPersistenceManager)", "java.util.Map<org.yawlfoundation.yawl.elements.state.YIdentifier, org.yawlfoundation.yawl.engine.YAtomicTask>.put(org.yawlfoundation.yawl.elements.state.YIdentifier,org.yawlfoundation.yawl.engine.YAtomicTask)", "java.util.Set<org.yawlfoundation.yawl.engine.YTask>.add(org.yawlfoundation.yawl.engine.YAtomicTask)", "org.yawlfoundation.yawl.engine.YAtomicTask.t_start(org.yawlfoundation.yawl.engine.YPersistenceManager,org.yawlfoundation.yawl.elements.state.YIdentifier)", "task.t_fire(pmgr).get(int)"], "Fixed commit": "4566d984ab4527835c4e51da0dab9aced87b7672", "Url": "https://api.github.com/repos/yawlfoundation/yawl", "Date": "2015-09-21T03:07:51Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new frames.UsuarioFRM().setVisible(true); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7919/buggy-version/src.frames.MenuFRM.java", "BodyUseAPI": ["frames.UsuarioFRM.setVisible(boolean)"], "Fixed commit": "cd7f1f7da7b383803dce23e0bf981a89e6ec579e", "Url": "https://api.github.com/repos/mamoreira/turnotransporte", "Date": "2016-11-27T06:45:39Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (int i = 0; i < (files.length); i++) { if (this.isL) { files[i] = (((job.Ls.lSwitch(((directory + (java.io.File.separator)) + (files[i])))) + \"\\t\") + (files[i])) + \"\\n\"; }else { files[i] += \"\\n\"; } pushData(files[i].toCharArray(), 0, files[i].length()); } } catch (java.io.IOException e) { pushError(\"Write error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4016/buggy-version/SimulaceOS.src.job.Ls.java", "BodyUseAPI": ["java.lang.String.toCharArray()", "job.Ls.pushData(char[],int,int)", "java.lang.String.length()", "job.Ls.lSwitch(java.lang.String)"], "Fixed commit": "3ffc4f65af1ee46b77aac2e548c0a7f0e8627bf8", "Url": "https://api.github.com/repos/HainLukas/kiv.os", "Date": "2013-11-29T10:25:48Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { player.disconnect(); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1910/buggy-version/DistributedCAHClient.src.ui.ClientGUI.java", "BodyUseAPI": ["player.Player.disconnect()"], "Fixed commit": "fa3ea9b42edcf08dad3a188f1d80d3c99d9e40d5", "Url": "https://api.github.com/repos/SilasBerger/distributed-cards-against-humanity", "Date": "2015-06-10T21:25:58Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { found = new org.python.pydev.core.docutils.ImportHandle.ImportHandleInfo(impStr, line, endLine, startedInMiddle); this.importInfo.add(found); } catch (org.python.pydev.core.docutils.ImportNotRecognizedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/462/buggy-version/plugins.org.python.pydev.core.src.org.python.pydev.core.docutils.ImportHandle.java", "BodyUseAPI": ["java.util.List<org.python.pydev.core.docutils.ImportHandle.ImportHandleInfo>.add(org.python.pydev.core.docutils.ImportHandle.ImportHandleInfo)"], "Fixed commit": "0628aac82a4ba6b119585ad4b6c0b0e9e00277e5", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2012-05-04T16:15:54Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.importInfo.add(new org.python.pydev.core.docutils.ImportHandle.ImportHandleInfo(impStr, line, (line + (org.python.pydev.core.docutils.StringUtils.countLineBreaks(impStr))), startedInMiddle)); } catch (org.python.pydev.core.docutils.ImportNotRecognizedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/462/buggy-version/plugins.org.python.pydev.core.src.org.python.pydev.core.docutils.ImportHandle.java", "BodyUseAPI": ["org.python.pydev.core.docutils.StringUtils.countLineBreaks(java.lang.String)", "java.util.List<org.python.pydev.core.docutils.ImportHandle.ImportHandleInfo>.add(org.python.pydev.core.docutils.ImportHandle.ImportHandleInfo)"], "Fixed commit": "0628aac82a4ba6b119585ad4b6c0b0e9e00277e5", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2012-05-04T16:15:54Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { state = waiter.await(); } catch (org.wso2.andes.AMQException e) { network.close(); throw new org.wso2.andes.AMQException(\"Error occurred while establishing a connection \", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5733/buggy-version/modules.andes-core.client.src.main.java.org.wso2.andes.client.AMQConnectionDelegate_8_0.java", "BodyUseAPI": ["org.wso2.andes.client.state.StateWaiter.await()"], "Fixed commit": "8839f1127f56a03cfe333ec89a7fd0ccedb6b70c", "Url": "https://api.github.com/repos/wso2/andes", "Date": "2016-04-11T08:39:42Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(10000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/516/buggy-version/bootstrap.src.main.java.io.bitsquare.app.bootstrap.BootstrapNode.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "c4d56d43f42319efa505bbccd5a08cb27156f1d1", "Url": "https://api.github.com/repos/bisq-network/bisq-desktop", "Date": "2015-03-16T23:13:10Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { newUrl = new java.net.URL(url); java.net.URI uri = new java.net.URI(newUrl.getProtocol(), newUrl.getUserInfo(), java.net.IDN.toASCII(newUrl.getHost()), newUrl.getPort(), newUrl.getPath(), newUrl.getQuery(), newUrl.getRef()); newUrl = uri.toURL(); } catch (java.net.MalformedURLException e) { android.util.Log.e(\"ServiceHandler\", (\"malformed URL: \" + url)); e.printStackTrace(); } catch (java.net.URISyntaxException e) { android.util.Log.e(\"ServiceHandler\", (\"wrong URL Syntax : \" + newUrl)); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3214/buggy-version/app.src.main.java.org.volkszaehler.volkszaehlerapp.ServiceHandler.java", "BodyUseAPI": ["java.net.URL.getUserInfo()", "java.net.IDN.toASCII(java.lang.String)", "java.net.URL.getHost()", "java.net.URL.getProtocol()", "java.net.URL.getPath()", "java.net.URL.getQuery()", "java.net.URL.getRef()", "java.net.URI.toURL()", "java.net.URL.getPort()"], "Fixed commit": "7af9850de3e61fb63fd1afd5ee7b06ccbddc28bd", "Url": "https://api.github.com/repos/volkszaehler/app-android", "Date": "2015-12-15T10:49:12Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cpw.mods.fml.common.ObfuscationReflectionHelper.setPrivateValue(net.minecraft.entity.player.EntityPlayer.class, ((net.minecraft.entity.player.EntityPlayer) (player)), 0, \"flyToggleTimer\", \"field_71101_bC\"); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8604/buggy-version/src.main.java.crazypants.enderio.teleport.TravelController.java", "BodyUseAPI": ["cpw.mods.fml.common.ObfuscationReflectionHelper.setPrivateValue(java.lang.Class,net.minecraft.client.entity.EntityClientPlayerMP,int,java.lang.String,java.lang.String)"], "Fixed commit": "b57fb1e418a7d5c85562242663799dcd3dd254c8", "Url": "https://api.github.com/repos/CrazyPants/EnderIO", "Date": "2014-10-15T04:16:33Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { org.dyndns.fzoli.ui.SwtDisplayProvider.display = new org.eclipse.swt.widgets.Display(); } catch (java.lang.Throwable t) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1247/buggy-version/src.org.dyndns.fzoli.ui.SwtDisplayProvider.java", "BodyUseAPI": [], "Fixed commit": "41d1a197aa4081f1bcc50cdf52c014ffcce5158e", "Url": "https://api.github.com/repos/fzoli/RemoteControlCar", "Date": "2013-01-12T01:09:37Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.media.AudioManager manager = ((android.media.AudioManager) (context.getSystemService(Context.AUDIO_SERVICE))); if (!(manager.isMusicActive())) removeView(layout); else updatePlayPauseButton(true); } catch (java.lang.UnsupportedOperationException e) { com.tomer.alwayson.helpers.Utils.logInfo(com.tomer.alwayson.views.MusicPlayer.class.getSimpleName(), \"Can't connect to music service\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5144/buggy-version/app.src.main.java.com.tomer.alwayson.views.MusicPlayer.java", "BodyUseAPI": ["android.media.AudioManager.isMusicActive()", "com.tomer.alwayson.views.MusicPlayer.removeView(android.view.View)", "com.tomer.alwayson.views.MusicPlayer.updatePlayPauseButton(boolean)", "android.content.Context.getSystemService(Context.AUDIO_SERVICE)"], "Fixed commit": "cb60f03e5ae9052cf78b6cbf5b25f299382bfc5c", "Url": "https://api.github.com/repos/rosenpin/AlwaysOnDisplayAmoled", "Date": "2016-10-01T01:30:03Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { final javax.ws.rs.client.Invocation.Builder request = buildRequest(); if ((state.get()) == (org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.State.OPEN)) { eventInput = request.get(javax.ws.rs.sse.SseEventInput.class); } } finally { if ((connectedLatch) != null) { connectedLatch.countDown(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/909/buggy-version/providers.sse.src.main.java.org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.java", "BodyUseAPI": ["org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.EventHandler.buildRequest()", "java.util.concurrent.atomic.AtomicReference<org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.State>.get()", "Invocation.Builder.get(java.lang.Class)"], "Fixed commit": "dcf12f7cfb11f1b99900daba0331b58f3a56db3a", "Url": "https://api.github.com/repos/asoldano/Resteasy", "Date": "2017-02-10T22:51:23Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { encouragementList = intent.getStringArrayListExtra(\"encouragementList\"); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2402/buggy-version/app.src.main.java.com.wordpress.zackleaman.materialtablayout.AlertReceiver.java", "BodyUseAPI": ["android.content.Intent.getStringArrayListExtra(java.lang.String)"], "Fixed commit": "1b5a5cd22952e3ac126b13799bc61296db24b3fc", "Url": "https://api.github.com/repos/ZackLeaman/Encouragement_Android_App", "Date": "2016-09-24T03:36:34Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ee.ut.math.tvt.salessystem.ui.tabs.ConfirmationTab.popUpWindow(sum).setVisible(true); } catch (java.text.ParseException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8243/buggy-version/POS.src.ee.ut.math.tvt.salessystem.domain.controller.impl.SalesDomainControllerImpl.java", "BodyUseAPI": ["ee.ut.math.tvt.salessystem.ui.tabs.ConfirmationTab.popUpWindow(double)", "ee.ut.math.tvt.salessystem.ui.tabs.ConfirmationTab.popUpWindow(sum).setVisible(boolean)"], "Fixed commit": "b5051a2dc57ab7e21671b05a3f751815b8ae9009", "Url": "https://api.github.com/repos/IHallik/-include--name-", "Date": "2013-10-28T01:05:05Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { trai.setLeftMotorSpeed(java.lang.Integer.parseInt(speeds[0])); trai.setTurnMotorSpeed(java.lang.Integer.parseInt(speeds[1])); trai.setRightMotorSpeed(java.lang.Integer.parseInt(speeds[2])); } catch (java.lang.Exception e) { trai.setLeftMotorSpeed(0); trai.setTurnMotorSpeed(0); trai.setRightMotorSpeed(0); java.lang.System.out.printf(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7371/buggy-version/src.carsserveur.reseau.Reception.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "carsserveur.reseau.RunTraitement.setRightMotorSpeed(int)", "carsserveur.reseau.RunTraitement.setLeftMotorSpeed(int)", "carsserveur.reseau.RunTraitement.setTurnMotorSpeed(int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "7907a0114ddab43985c0cf6caa0cea03c8539c32", "Url": "https://api.github.com/repos/Embraser01/IUT-CARS-Serveur", "Date": "2015-09-12T09:10:28Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { shares.add(new com.neoba.syncpad.ByteMessenger.Share(docid, db.getFollowerid(((java.lang.String) (sp.getSelectedItem()))), ((java.lang.String) (sp.getSelectedItem())), ((byte) (1)))); slist.setAdapter(sa); } catch (java.lang.Exception e) { android.util.Log.d(\"Bug\", \"FIC\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1270/buggy-version/android.SyncPadfb.src.com.neoba.syncpad.ShareListActivity.java", "BodyUseAPI": ["java.util.ArrayList<com.neoba.syncpad.ByteMessenger.Share>.add(com.neoba.syncpad.ByteMessenger.Share)", "android.widget.Spinner.getSelectedItem()", "android.widget.Spinner.getSelectedItem()", "com.neoba.syncpad.DBManager.getFollowerid(((java.lang.String) (sp.getSelectedItem())))", "android.widget.ListView.setAdapter(com.neoba.syncpad.ShareListActivity.ShareAdapter)"], "Fixed commit": "b50487e1f959d9be32652b86a63535b77b113954", "Url": "https://api.github.com/repos/Neoba/Prototype", "Date": "2014-12-14T08:00:44Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.bukkit.plugin.RegisteredServiceProvider<net.milkbowl.vault.permission.Permission> rsp = getServer().getServicesManager().getRegistration(net.milkbowl.vault.permission.Permission.class); com.massivecraft.factions.P.perms = rsp.getProvider(); } catch (java.lang.NoClassDefFoundError ex) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5032/buggy-version/src.main.java.com.massivecraft.factions.P.java", "BodyUseAPI": ["getServer().getServicesManager().getRegistration(java.lang.Class)", "getServer().getServicesManager()", "org.bukkit.plugin.RegisteredServiceProvider<net.milkbowl.vault.permission.Permission>.getProvider()", "com.massivecraft.factions.P.getServer()"], "Fixed commit": "e10239f6864e9633db0cc63425bc3749ad36b848", "Url": "https://api.github.com/repos/spublic/Factions", "Date": "2015-03-01T16:44:10Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { updatingFromEditor = true; getTreeViewer().setSelection(newSelection, true); } finally { updatingFromEditor = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4765/buggy-version/plugin_ide.ui.src-lang.melnorme.lang.ide.ui.editor.structure.LangOutlinePage.java", "BodyUseAPI": ["getTreeViewer().setSelection(org.eclipse.jface.viewers.StructuredSelection,boolean)", "melnorme.lang.ide.ui.editor.structure.LangOutlinePage.getTreeViewer()"], "Fixed commit": "69be52503bb16f3bb8b783e15ee4f423af22a411", "Url": "https://api.github.com/repos/GoClipse/goclipse", "Date": "2015-05-28T12:10:35Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { setProtocol(java.lang.Integer.parseInt(protocol)); } catch (java.lang.Exception ex) { logError(\"Error reading protocol from repository. Setting protocol to 0.\"); this.protocol = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2724/buggy-version/src.org.openbi.kettle.plugins.refreshtableauextract.RefreshTableauExtract.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "org.openbi.kettle.plugins.refreshtableauextract.RefreshTableauExtract.setProtocol(int)"], "Fixed commit": "1c6ac587e3730c23ac7ec353568547da67395858", "Url": "https://api.github.com/repos/cdeptula/refreshtableauextract", "Date": "2014-10-17T00:12:34Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pluginId = java.lang.Integer.parseInt(requestUri[1].replaceAll(\"?\", \"\")); if (pluginId < 0) { throw new java.lang.NumberFormatException(); } } catch (java.lang.NumberFormatException ex) { sendResponse(new webserver.main.StatusResponse(0, \"INVALID ARGUMENTS\", null), exchange, 400); java.lang.System.out.println(((\"[\" + (getTime())) + \"] Invalid Args\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3095/buggy-version/src.webserver.main.HTMLServer.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "d2433a25e2ecb02bd9ee8f5ad479090209a9cf86", "Url": "https://api.github.com/repos/essemX/Spidate-Webserver", "Date": "2017-08-11T18:24:09Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { scheduleProvider.initScheduler(); } catch (java.lang.Exception ex) { throw new org.jboss.seam.cron.scheduling.impl.exception.SchedulerInitialisationException(\"Error initialising provder scheduler\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/9171/buggy-version/spi.scheduling.spi.src.main.java.org.jboss.seam.cron.scheduling.spi.CronSchedulingExtension.java", "BodyUseAPI": ["org.jboss.seam.cron.scheduling.spi.CronScheduleProvider.initScheduler()"], "Fixed commit": "c30617220deff8022b0738e66faea609c11e8382", "Url": "https://api.github.com/repos/seam/cron", "Date": "2011-05-21T14:30:55Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startLatch.await(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/9094/buggy-version/src.main.java.org.saliya.javathreads.array.ProgramSimpleThreads.java", "BodyUseAPI": ["java.util.concurrent.CountDownLatch.await()"], "Fixed commit": "08ce1a1f3d00e96bf5cc937cf92637228324902d", "Url": "https://api.github.com/repos/esaliya/JavaThreads", "Date": "2016-03-30T14:12:07Z"},
{"Line": "=>1593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mMediaRecorder.start(); mIsRecording = true; } catch (java.lang.Exception e) { android.util.Log.e(im.vector.activity.VectorMediasPickerActivity.LOG_TAG, (\"## startVideoRecord() : cannot start the media recorder \" + (e.getMessage()))); android.widget.Toast.makeText(this, getString(R.string.media_picker_cannot_record_video), Toast.LENGTH_SHORT).show(); stopVideoRecord(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4179/buggy-version/vector.src.main.java.im.vector.activity.VectorMediasPickerActivity.java", "BodyUseAPI": ["android.media.MediaRecorder.start()"], "Fixed commit": "f67493ffc3eb7dae77b0e939eaceea7fffed04a9", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2016-12-05T09:31:18Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (profileClaim.contains(\"Practitioner\")) { return profileClaim.substring(0, ((profileClaim.indexOf(\"Practitioner\")) - 1)); }else if (profileClaim.contains(\"Patient\")) { return profileClaim.substring(0, ((profileClaim.indexOf(\"Patient\")) - 1)); } } catch (java.lang.IndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/904/buggy-version/src.main.java.org.hspconsortium.client.session.FluentSessionContextWrapper.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "a5a7c404e7073f668ffc5fce5401267ec2f1ee28", "Url": "https://api.github.com/repos/smart-on-fhir-reference-implementation/java-client", "Date": "2016-06-02T21:29:24Z"},
{"Line": "=>700", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { currentThread.setContextClassLoader(com.liferay.portal.kernel.util.PortalClassLoaderUtil.getClassLoader()); template = com.liferay.portal.velocity.VelocityUtil.evaluate(template, variables); } finally { currentThread.setContextClassLoader(classLoader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6272/buggy-version/portal-impl.src.com.liferay.portal.dao.db.BaseDB.java", "BodyUseAPI": ["java.lang.Thread.setContextClassLoader(com.liferay.portal.kernel.util.PortalClassLoaderUtil.getClassLoader())", "com.liferay.portal.kernel.util.PortalClassLoaderUtil.getClassLoader()", "com.liferay.portal.velocity.VelocityUtil.evaluate(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "6dd1961e0a8c4d53932ee3a2e26c0720e095d421", "Url": "https://api.github.com/repos/jrhoun/liferay-portal", "Date": "2011-10-24T21:21:11Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { serverSocket.close(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/6092/buggy-version/Server.java", "BodyUseAPI": ["java.net.ServerSocket.close()"], "Fixed commit": "69d2eec5e2b261d9087e63a07bca926b38a74629", "Url": "https://api.github.com/repos/zkmake520/Distributed_Lock_Lamport_TimeStamp", "Date": "2016-02-07T01:21:26Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (org.wso2.carbon.analytics.datasink.internal.AnalyticsDatasinkComponent.log.isDebugEnabled()) { org.wso2.carbon.analytics.datasink.internal.AnalyticsDatasinkComponent.log.debug(\"Started the Data bridge Analytics Data Sink component\"); } componentContext.getBundleContext().registerService(org.wso2.carbon.utils.Axis2ConfigurationContextObserver.class.getName(), new org.wso2.carbon.analytics.datasink.internal.AnalyticsDatasinkConfigurationContextObserver(), null); org.wso2.carbon.analytics.datasink.internal.util.ServiceHolder.setAnalyticsDSConnector(new org.wso2.carbon.analytics.datasink.AnalyticsDSConnector()); org.wso2.carbon.analytics.datasink.internal.util.ServiceHolder.getAnalyticsEventStreamListener().loadEventStreams(MultitenantConstants.SUPER_TENANT_ID); } catch (java.lang.Throwable e) { org.wso2.carbon.analytics.datasink.internal.AnalyticsDatasinkComponent.log.error(e.getCause(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7660/buggy-version/components.analytics.analytics-io.org.wso2.carbon.analytics.datasink.src.main.java.org.wso2.carbon.analytics.datasink.internal.AnalyticsDatasinkComponent.java", "BodyUseAPI": ["org.wso2.carbon.analytics.datasink.internal.util.ServiceHolder.getAnalyticsEventStreamListener()", "org.wso2.carbon.analytics.datasink.internal.util.ServiceHolder.getAnalyticsEventStreamListener().loadEventStreams(MultitenantConstants.SUPER_TENANT_ID)", "componentContext.getBundleContext().registerService(java.lang.String,org.wso2.carbon.analytics.datasink.internal.AnalyticsDatasinkConfigurationContextObserver,<nulltype>)", "org.osgi.service.component.ComponentContext.getBundleContext()", "org.apache.commons.logging.Log.isDebugEnabled()", "org.apache.commons.logging.Log.debug(java.lang.String)", "java.lang.Class.getName()", "org.wso2.carbon.analytics.datasink.internal.util.ServiceHolder.setAnalyticsDSConnector(org.wso2.carbon.analytics.datasink.AnalyticsDSConnector)"], "Fixed commit": "d4b4e86456efb91fab6b91fd866e24b3301c1ca1", "Url": "https://api.github.com/repos/nirandaperera/carbon-analytics", "Date": "2015-02-13T03:36:57Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fs.delete(new org.apache.hadoop.fs.Path(((conf.get(\"ldbc.snb.datagen.serializer.hadoopDir\")) + \"/aux\")), true); } catch (java.io.IOException e) { java.lang.System.err.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5118/buggy-version/src.main.java.ldbc.snb.datagen.hadoop.HadoopPersonSerializer.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.delete(org.apache.hadoop.fs.Path,boolean)", "org.apache.hadoop.conf.Configuration.get(java.lang.String)"], "Fixed commit": "a0365832513cafdbeb6b449bb1fd88357e744031", "Url": "https://api.github.com/repos/ldbc/ldbc_snb_datagen", "Date": "2015-08-25T11:59:58Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return urace(sender, args, player); } catch (java.lang.Exception e) { sender.sendMessage(((main.colors.getError()) + \"An error occured: Make sure you entered the command correctly.\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2222/buggy-version/uCarsRace.src.net.stormdev.ucars.race.URaceCommandExecutor.java", "BodyUseAPI": ["net.stormdev.ucars.race.URaceCommandExecutor.urace(org.bukkit.command.CommandSender,java.lang.String[],org.bukkit.entity.Player)"], "Fixed commit": "3ac3588524a2c51599fd446f3d3f4d7ea1902a85", "Url": "https://api.github.com/repos/storm345dev/uCarsRace", "Date": "2013-10-28T09:41:46Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.openqa.selenium.WebElement activeTab = pages.LandingPage.selectTab(tab); if ((activeTab != null) && (activeTab.isDisplayed())) activeTab.click(); org.openqa.selenium.WebElement assertionTextElem = driver.findElement(org.openqa.selenium.By.xpath(((\"//title[contains(text(),'\" + (pages.LandingPage.tabValidationText)) + \"')]\"))); if (assertionTextElem.isEnabled()) java.lang.System.out.println(((\"New tab validation text '\" + (pages.LandingPage.tabValidationText)) + \"' found.\")); org.testng.Assert.assertTrue(assertionTextElem.isEnabled(), \"Assertion Failed: Tab title text not found.\"); } catch (java.lang.Exception e) { java.lang.System.out.println(\"Error: Failed to open specified tab.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1827/buggy-version/src.main.java.pages.LandingPage.java", "BodyUseAPI": ["pages.LandingPage.selectTab(pages.LandingPage.Tabs)", "org.openqa.selenium.WebElement.isDisplayed()", "org.openqa.selenium.By.xpath(java.lang.String)", "org.openqa.selenium.WebElement.click()", "org.testng.Assert.assertTrue(assertionTextElem.isEnabled(),java.lang.String)", "org.openqa.selenium.WebElement.isEnabled()", "java.io.PrintStream.println(java.lang.String)", "pages.LandingPage.findElement(org.openqa.selenium.By.xpath(((\"//title[contains(text(),'\" + (pages.LandingPage.tabValidationText)) + \"')]\")))", "org.openqa.selenium.WebElement.isEnabled()"], "Fixed commit": "39514707e1636533c200ba861aa7d8a186e97cb7", "Url": "https://api.github.com/repos/urbanaut/CodeChallenges", "Date": "2016-06-29T19:09:34Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.HashMap<java.lang.String, java.lang.String[]> tmp = mapper.readValue(br, new org.codehaus.jackson.type.TypeReference<java.util.HashMap<java.lang.String, java.lang.String[]>>() {}); for (java.util.Map.Entry<java.lang.String, java.lang.String[]> entry : tmp.entrySet()) { properties.put(entry.getKey(), fr.vuzi.webframework.Utils.appendToArray(properties.get(entry.getKey()), entry.getValue())); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3860/buggy-version/src.fr.vuzi.webframework.context.Context.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String[]>.entrySet()", "fr.vuzi.webframework.Utils.appendToArray(java.lang.String[],java.lang.String[])", "java.util.Map<java.lang.String, java.lang.String[]>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String[]>.put(java.lang.String,fr.vuzi.webframework.Utils.appendToArray(properties.get(entry.getKey()), entry.getValue()))", "org.codehaus.jackson.map.ObjectMapper.readValue(java.lang.String,org.codehaus.jackson.type.TypeReference<java.util.HashMap<java.lang.String, java.lang.String[]>>)", "java.util.Map.Entry<java.lang.String, java.lang.String[]>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.String[]>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.String[]>.getKey()"], "Fixed commit": "ae1a04e9195ed06857d55f23ed667b6017cc4c18", "Url": "https://api.github.com/repos/Vuzi/jwf", "Date": "2015-04-25T17:48:04Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { victim.doLayout(); for (epusp.pcs.os.monitor.client.presenter.DetailsPresenter agentDetails : agentsDetailsList) { agentDetails.doLayout(); } } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/83/buggy-version/PCSOS.src.epusp.pcs.os.monitor.client.presenter.CallInfoPresenter.java", "BodyUseAPI": ["epusp.pcs.os.monitor.client.presenter.DetailsPresenter.doLayout()", "epusp.pcs.os.monitor.client.presenter.DetailsPresenter.doLayout()"], "Fixed commit": "e2163fb506c9b692154d8699d6572b7b5f8bb113", "Url": "https://api.github.com/repos/augustoerico/pcsos", "Date": "2014-12-16T21:27:42Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { session.getUser().setCurrentProgram(userProgram); session.setUser(session.getUser()); android.content.Intent intenet = new android.content.Intent().setClass(getBaseContext(), mx.selery.selery.ProgramStartActivity.class); startActivity(intenet); } catch (java.lang.Exception ex) { handleException(ex, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8828/buggy-version/app.src.main.java.mx.selery.selery.ProgramSelectActivity.java", "BodyUseAPI": ["android.content.Intent.setClass(getBaseContext(),java.lang.Class)", "mx.selery.selery.ProgramSelectActivity.4.getBaseContext()", "session.getUser().setCurrentProgram(mx.selery.entity.UserProgram)", "mx.selery.selery.ProgramSelectActivity.4.setUser(session.getUser())", "mx.selery.selery.ProgramSelectActivity.4.getUser()", "mx.selery.selery.ProgramSelectActivity.4.getUser()", "mx.selery.selery.ProgramSelectActivity.4.startActivity(android.content.Intent)"], "Fixed commit": "1e0a502a24cd5c992c8af4a4f8ae02bb9b5d6c2f", "Url": "https://api.github.com/repos/selery/Selery", "Date": "2016-02-29T07:11:58Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { setProgram(session.getUser().getUserID(), program); dialog.dismiss(); } catch (java.lang.Exception ex) { handleException(ex, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8828/buggy-version/app.src.main.java.mx.selery.selery.ProgramSelectActivity.java", "BodyUseAPI": ["mx.selery.selery.ProgramSelectActivity.2.setProgram(session.getUser().getUserID(),mx.selery.entity.Program)", "session.getUser().getUserID()", "android.content.DialogInterface.dismiss()", "mx.selery.selery.ProgramSelectActivity.2.getUser()"], "Fixed commit": "1e0a502a24cd5c992c8af4a4f8ae02bb9b5d6c2f", "Url": "https://api.github.com/repos/selery/Selery", "Date": "2016-02-29T07:11:58Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rootLayout = loader.load(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/9084/buggy-version/Java.src.presentacio.LoginBoxController.java", "BodyUseAPI": ["javafx.fxml.FXMLLoader.load()"], "Fixed commit": "88376202d6c592cc4ac0f7ae4c5e973aae74b5a3", "Url": "https://api.github.com/repos/jmigual/FIB-PROP", "Date": "2015-12-15T18:18:35Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final android.os.Message msg2 = android.os.Message.obtain(null, MonitorBatteryStateService.MSG_REQUEST_REMAINING_TIME); msg2.replyTo = this.monitorServiceMessanger; this.monitorService.send(msg2); } catch (android.os.RemoteException e) { android.util.Log.e(com.halcyonwaves.apps.energize.fragments.OverviewFragment.TAG, \"Failed to query the current time estimation.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/317/buggy-version/app.src.com.halcyonwaves.apps.energize.fragments.OverviewFragment.java", "BodyUseAPI": ["android.os.Message.obtain(<nulltype>,MonitorBatteryStateService.MSG_REQUEST_REMAINING_TIME)", "android.os.Messenger.send(android.os.Message)"], "Fixed commit": "59fb2557c87bcf4e442f6d2c7320d54630211c47", "Url": "https://api.github.com/repos/thuetz/Energize", "Date": "2013-05-20T08:18:10Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.InputStreamReader(is, \"UTF-8\")); java.lang.StringBuffer sb = new java.lang.StringBuffer(); java.lang.String line = null; while ((line = reader.readLine()) != null) { sb.append((line + \"\\n\")); } reader.close(); gettedString = sb.toString(); return gettedString; } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/3279/buggy-version/Homework.Downloading.app.src.main.java.com.example.iori.downloading.DownloadTextTask.java", "BodyUseAPI": ["java.lang.StringBuffer.toString()", "java.io.BufferedReader.close()", "java.io.BufferedReader.readLine()", "java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "03c91b8d0afb79a596f6bd7e7a3056473f2ce9c9", "Url": "https://api.github.com/repos/MAMAMASIYUAN/android-learning", "Date": "2017-09-29T15:10:31Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mytown.core.utils.Assert.Perm(sender, getPermissionNode(), canConsoleUseCommand(), canRConUseCommand(), canCommandBlockUseCommand()); } catch (net.minecraft.command.CommandException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/2909/buggy-version/src.main.java.mytown.core.utils.command.CommandModel.java", "BodyUseAPI": ["mytown.core.utils.command.CommandModel.canRConUseCommand()", "mytown.core.utils.command.CommandModel.canCommandBlockUseCommand()", "mytown.core.utils.Assert.Perm(net.minecraft.command.ICommandSender,java.lang.String,boolean,boolean,boolean)", "mytown.core.utils.command.CommandModel.canConsoleUseCommand()", "mytown.core.utils.command.CommandModel.getPermissionNode()"], "Fixed commit": "e9e0947461a35d71f23e04cae9aaf43a3234a82e", "Url": "https://api.github.com/repos/MyEssentials/MyEssentials-Core", "Date": "2014-12-23T02:16:38Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mCamera = android.hardware.Camera.open(); } catch (java.lang.Exception e) { android.util.Log.w(TAG, \"Exception raised when trying to open the camera\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/5784/buggy-version/src.com.smfandroid.smsbeacon.FlashLightHandler.java", "BodyUseAPI": ["android.hardware.Camera.open()"], "Fixed commit": "43f3249bdeb569cefb0153f61eb5f093186576ec", "Url": "https://api.github.com/repos/Blizarre/SMSBeacon", "Date": "2014-11-11T18:43:43Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Long bytes = java.lang.Long.valueOf(size_in_bytes); kilobytes = bytes / 1024; } catch (java.lang.NumberFormatException nfe) { nfe.printStackTrace(); android.util.Log.e(au.com.infiniterecursion.vidiom.activity.LibraryActivity.TAG, (\"Caught number format exception with \" + size_in_bytes)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/9026/buggy-version/src.au.com.infiniterecursion.vidiom.activity.LibraryActivity.java", "BodyUseAPI": ["java.lang.Long.valueOf(java.lang.String)"], "Fixed commit": "a69e5e79b6ede58c456513f3b8ab203cd449001b", "Url": "https://api.github.com/repos/andynicholson/Vidiom", "Date": "2012-03-27T10:23:21Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mil.nga.dice.report.Report report = mil.nga.dice.report.ReportManager.getInstance().getReports().get(position); if ((!(report.isEnabled())) || (((report.getId()) != null) && (report.getId().equals(ReportManager.USER_GUIDE_REPORT_ID)))) { return android.support.v7.widget.helper.ItemTouchHelper.ACTION_STATE_IDLE; } } catch (java.lang.ArrayIndexOutOfBoundsException e) { return android.support.v7.widget.helper.ItemTouchHelper.ACTION_STATE_IDLE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/4271/buggy-version/app.src.main.java.mil.nga.dice.cardview.CardViewFragment.java", "BodyUseAPI": ["mil.nga.dice.report.ReportManager.getInstance().getReports().get(int)", "mil.nga.dice.report.ReportManager.getInstance()", "mil.nga.dice.report.Report.getId()", "mil.nga.dice.report.Report.isEnabled()", "report.getId().equals(ReportManager.USER_GUIDE_REPORT_ID)", "mil.nga.dice.report.Report.getId()", "mil.nga.dice.report.ReportManager.getInstance().getReports()"], "Fixed commit": "a2adf1cfcbb3cff99f94685ab5e4b810039c60dd", "Url": "https://api.github.com/repos/ngageoint/disconnected-content-explorer-android", "Date": "2016-06-20T23:17:41Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { version = java.lang.Double.valueOf(SimpleShop.version); } catch (java.lang.NumberFormatException e) { version = 1.4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/8483/buggy-version/com.nijiko.simpleshop.Wrapper.java", "BodyUseAPI": ["java.lang.Double.valueOf(SimpleShop.version)"], "Fixed commit": "af9a1de2f0bb343a4782c22e647ce572d0b76b23", "Url": "https://api.github.com/repos/iConomy/SimpleShop", "Date": "2011-03-07T21:09:42Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (result != 0) { dropoutTable.removeAllViews(); FillDroupoutTable(mVar, inflator); progressBar.setVisibility(View.GONE); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/7738/buggy-version/appV2.src.main.java.mobile.tiis.staging.fragments.DropoutReportFragment.java", "BodyUseAPI": ["android.widget.ProgressBar.setVisibility(View.GONE)", "mobile.tiis.staging.fragments.DropoutReportFragment.getDropOutTable.FillDroupoutTable(java.util.ArrayList<mobile.tiis.staging.fragments.DropoutReportFragment.ViewRows>,android.view.LayoutInflater)", "android.widget.TableLayout.removeAllViews()"], "Fixed commit": "74480969d94bc573dc73d5a004a11179c298f51d", "Url": "https://api.github.com/repos/BIDMOH/TIIS2-Android-Mobile-Client-Application", "Date": "2016-10-15T08:00:00Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { DBLayer.DBConnection.con.close(); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/1857/buggy-version/src.DBLayer.DBConnection.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "e72bb4f0f821541f8a34f1bba40f75ca6d870038", "Url": "https://api.github.com/repos/Eskelund/1.aars_projekt", "Date": "2015-06-11T09:15:36Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { user = userDAO.getUserByName(userName); } catch (javax.persistence.NoResultException nre) { org.kolokolov.simpleproject.service.CustomUserDetailsService.logger.debug((\"Exception in userDAO: \" + (nre.getMessage()))); org.kolokolov.simpleproject.service.CustomUserDetailsService.logger.debug(\"No user found exception has been thown\"); java.lang.String exceptionMessage; if ((userName == null) || (userName.equals(\"\"))) { exceptionMessage = \"Empty user name\"; }else { exceptionMessage = java.lang.String.format(\"No user with name %s has been found\", userName); } throw new javax.persistence.NoResultException(exceptionMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V35/946/buggy-version/src.main.java.org.kolokolov.simpleproject.service.CustomUserDetailsService.java", "BodyUseAPI": ["org.kolokolov.simpleproject.dao.UserDAO.getUserByName(java.lang.String)"], "Fixed commit": "312d975666e1094785b7b64d50ca0da7eb1e7b87", "Url": "https://api.github.com/repos/AlexKolokolov/SimpleProject", "Date": "2017-02-22T12:23:12Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((mDBHelper) != null) mDBHelper.close(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/957/buggy-version/app.src.main.java.com.nethergrim.combogymdiary.DB.java", "BodyUseAPI": ["com.nethergrim.combogymdiary.DB.DBHelper.close()"], "Fixed commit": "c1d3e262f03447c64bde433252998b2dd501baa5", "Url": "https://api.github.com/repos/nethergrim/Training-Log", "Date": "2014-08-15T14:57:27Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int textSizePref = java.lang.Integer.parseInt(sharedPref.getString(\"font_size\", \"\")); cursorAdapter.setTextSize(textSizePref); } catch (java.lang.NumberFormatException numberFormatEx) { android.util.Log.e(\"updateDisplayWithPreferences\", (((\"font_size preference is not set or set incorrectly to '\" + (sharedPref.getString(\"font_size\", \"\"))) + \"' and threw a NumberFormatException: \") + (numberFormatEx.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6124/buggy-version/Later.src.main.java.com.bryankrosenbaum.later.activity.MainActivity.java", "BodyUseAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)", "com.bryankrosenbaum.later.adapter.LaterListCursorAdapter.setTextSize(int)", "java.lang.Integer.parseInt(sharedPref.getString(\"font_size\", \"\"))"], "Fixed commit": "b21b2d9880fbc7b95c33941e3e385a217f2ead94", "Url": "https://api.github.com/repos/bryanro/later-android", "Date": "2013-11-29T12:29:08Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((values[11].equals(\"null\")) || (values[11].equals(\"\"))) { values[11] = null; } } catch (java.lang.Exception e) { values[11] = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2410/buggy-version/impactPathways.src.main.java.org.cgiar.ccafs.ap.data.dao.mysql.MySQLIPIndicatorDAO.java", "BodyUseAPI": ["java.lang.Object.equals(java.lang.String)", "java.lang.Object.equals(java.lang.String)"], "Fixed commit": "b8da9c2dbb22418a5e77194015f83a45f53606df", "Url": "https://api.github.com/repos/CCAFS/ccafs-ap", "Date": "2016-03-03T13:37:46Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String lastDict = mWRM.getLastUsedDictionaryName(); for (com.waverunner.wordrunner.Dictionary d : da) { if (d.getName().equals(lastDict)) return \"\"; } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1727/buggy-version/app.src.main.java.com.waverunner.wordrunner.DictionariesManagerFragment.java", "BodyUseAPI": ["com.waverunner.wordrunner.Dictionary.getName()", "d.getName().equals(java.lang.String)", "com.waverunner.wordrunner.WordRunnerManager.getLastUsedDictionaryName()"], "Fixed commit": "bb99594a5cc48773905751b4d6b3cd7a3cb271b0", "Url": "https://api.github.com/repos/MichaelKazarian/WordRunner", "Date": "2017-08-30T13:12:23Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { prepStmt = con.prepareStatement(((((\"CREATE TABLE IF NOT EXISTS \" + (DATABASE)) + \".`\") + (TABLE_PREFIX)) + \"status` (`player_id` INT(8) NOT NULL, `message` varchar(100) NOT NULL);\")); prepStmt.executeUpdate(); } catch (java.sql.SQLException e) { e.printStackTrace(); } finally { close(prepStmt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4673/buggy-version/src.main.java.de.simonsator.partyandfriends.status.StatusConnection.java", "BodyUseAPI": ["java.sql.PreparedStatement.executeUpdate()", "java.sql.Connection.prepareStatement(((((\"CREATE TABLE IF NOT EXISTS \" + (DATABASE)) + \".`\") + (TABLE_PREFIX)) + \"status` (`player_id` INT(8) NOT NULL, `message` varchar(100) NOT NULL);\"))"], "Fixed commit": "a33d9d42be397a44b076565018e1f394fa2c402e", "Url": "https://api.github.com/repos/Simonsator/Status-for-PAF", "Date": "2017-01-09T20:42:38Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { yearOfBirth = java.lang.Integer.parseInt(et.getText().toString()); } catch (java.lang.NumberFormatException ex) { tv.setText(\"Please enter a year of birth\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3845/buggy-version/app.src.main.java.com.example.agecalc.MainActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(et.getText().toString())", "android.widget.EditText.getText()", "et.getText().toString()"], "Fixed commit": "bc9101a74a4af04ded921349587fd7a5d953f6d1", "Url": "https://api.github.com/repos/cnewman867/appDev", "Date": "2017-10-10T12:00:45Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String result = future.get(); } catch (java.lang.InterruptedException e) { java.lang.Thread.currentThread().interrupt(); } catch (java.util.concurrent.ExecutionException e) { throw new org.wso2.andes.kernel.distruptor.inbound.AndesException((\"Error occurred while closing the subscriber \" + (localSubscription.getSubscriptionID())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3704/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.kernel.distruptor.inbound.DisruptorBasedInboundEventManager.java", "BodyUseAPI": ["com.google.common.util.concurrent.SettableFuture<java.lang.String>.get()"], "Fixed commit": "a13595303d158b3359166e3782b5ff1183702d2d", "Url": "https://api.github.com/repos/Asitha/andes", "Date": "2015-01-28T06:34:36Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cls = getOntologyDAO().getOWLClassByURI(uri); } catch (java.lang.Exception e) { getLog().debug(((\"IRI \" + uri) + \" is not a valid IRI\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2052/buggy-version/goci-ontology.goci-urilabelchecker.src.main.java.uk.ac.ebi.fgpt.goci.checker.Checker.java", "BodyUseAPI": ["uk.ac.ebi.fgpt.goci.dao.OntologyDAO.getOWLClassByURI(java.lang.String)", "uk.ac.ebi.fgpt.goci.checker.Checker.getOntologyDAO()"], "Fixed commit": "cc3bd8cfa847e0b794d1089ddc0f065f076cc99f", "Url": "https://api.github.com/repos/tburdett/goci", "Date": "2014-10-31T11:39:49Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.parse.Parse.enableLocalDatastore(this); com.parse.ParseCrashReporting.enable(this); app.initializedParse = true; } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8322/buggy-version/app.src.main.java.de.weightlifting.app.SplashActivity.java", "BodyUseAPI": ["com.parse.Parse.enableLocalDatastore(de.weightlifting.app.SplashActivity)", "com.parse.ParseCrashReporting.enable(de.weightlifting.app.SplashActivity)"], "Fixed commit": "41fbe298e5b2984e929b22faec8922151474c985", "Url": "https://api.github.com/repos/WGierke/weightlifting_germany", "Date": "2016-01-01T14:14:47Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.parse.Parse.initialize(this, Keys.CONFIG_APP_ID, Keys.CONFIG_CLIENT_KEY); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8322/buggy-version/app.src.main.java.de.weightlifting.app.WeightliftingApp.java", "BodyUseAPI": ["com.parse.Parse.initialize(de.weightlifting.app.WeightliftingApp,Keys.CONFIG_APP_ID,Keys.CONFIG_CLIENT_KEY)"], "Fixed commit": "41fbe298e5b2984e929b22faec8922151474c985", "Url": "https://api.github.com/repos/WGierke/weightlifting_germany", "Date": "2016-01-01T14:14:47Z"},
{"Line": "=>682", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { currentRoom.display(); } catch (java.lang.Exception E) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7811/buggy-version/src.Model.ObjectHolder.java", "BodyUseAPI": ["Model.Room.display()"], "Fixed commit": "dcdde5d2aa34b6c8f3045a903ec2a1e97fd4cdea", "Url": "https://api.github.com/repos/gutsuv/Escape-the-Tower", "Date": "2017-11-29T04:21:53Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bot.getUserChannelDao().getUser(\"batman\").send().message((\"[Reddit] \" + (e.toString()))); } catch (java.lang.Exception ex) { bot.getUserChannelDao().getUser(\"BruceWayne\").send().message((\"[Reddit] \" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4235/buggy-version/src.main.java.com.harry2258.Alfred.Misc.Reddit.java", "BodyUseAPI": ["java.lang.Exception.toString()", "bot.getUserChannelDao().getUser(java.lang.String)", "bot.getUserChannelDao().getUser(\"batman\").send().message(java.lang.String)", "org.pircbotx.PircBotX.getUserChannelDao()", "bot.getUserChannelDao().getUser(\"batman\").send()"], "Fixed commit": "2af8ec0b8ebed7cd5175cf3afc88976365b695c4", "Url": "https://api.github.com/repos/harry2258/AlfredV2-FTB-IRC-", "Date": "2014-12-29T22:57:02Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { transaction.setLastUpdateTime(org.apache.commons.lang3.time.DateUtils.parseDate(new java.lang.String(map.get(\"LAST_UPDATE_TIME\".getBytes())), \"yyyy-MM-dd HH:mm:ss\")); } catch (java.text.ParseException e) { throw new org.mengyun.tcctransaction.SystemException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2090/buggy-version/tcc-transaction-core.src.main.java.org.mengyun.tcctransaction.repository.helper.ExpandTransactionSerializer.java", "BodyUseAPI": ["org.mengyun.tcctransaction.Transaction.setLastUpdateTime(org.apache.commons.lang3.time.DateUtils.parseDate(new java.lang.String(map.get(\"LAST_UPDATE_TIME\".getBytes())), \"yyyy-MM-dd HH:mm:ss\"))", "org.apache.commons.lang3.time.DateUtils.parseDate(java.lang.String,java.lang.String)", "java.util.Map<byte[], byte[]>.get(byte[])", "java.lang.String.getBytes()"], "Fixed commit": "e88629df11e2494222b8de98048938e44a6a33e1", "Url": "https://api.github.com/repos/changmingxie/tcc-transaction", "Date": "2017-09-21T09:22:08Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { outState.putString(it.wm.perdue.forms.UserFormFragment.TAG_MAIL, mailEditText.getText().toString()); outState.putString(it.wm.perdue.forms.UserFormFragment.TAG_NAME, nameEditText.getText().toString()); outState.putString(it.wm.perdue.forms.UserFormFragment.TAG_SURNAME, surnameEditText.getText().toString()); outState.putString(it.wm.perdue.forms.UserFormFragment.TAG_TEL, telEditText.getText().toString()); } catch (java.lang.NullPointerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/3635/buggy-version/src.it.wm.perdue.forms.UserFormFragment.java", "BodyUseAPI": ["android.widget.EditText.getText()", "android.os.Bundle.putString(java.lang.String,telEditText.getText().toString())", "telEditText.getText().toString()", "android.os.Bundle.putString(java.lang.String,surnameEditText.getText().toString())", "mailEditText.getText().toString()", "android.os.Bundle.putString(java.lang.String,mailEditText.getText().toString())", "android.widget.EditText.getText()", "surnameEditText.getText().toString()", "android.widget.EditText.getText()", "android.widget.EditText.getText()", "android.os.Bundle.putString(java.lang.String,nameEditText.getText().toString())", "nameEditText.getText().toString()"], "Fixed commit": "9d668cb58a0af995d4c553cfb997d80b7bf5ee2a", "Url": "https://api.github.com/repos/eltazar/x2Android", "Date": "2013-03-18T16:18:43Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.glassfish.jersey.client.ClientResponse response = client.target(((ge.edu.freeuni.sdp.xo.rooms.service.RoomsService.LOGIN_SERVICE) + token)).request(MediaType.APPLICATION_JSON_TYPE).get(org.glassfish.jersey.client.ClientResponse.class); if ((response.getStatus()) != (Status.OK.getStatusCode())) return null; ge.edu.freeuni.sdp.xo.rooms.service.UserName username = response.readEntity(ge.edu.freeuni.sdp.xo.rooms.service.UserName.class); return username.username; } catch (ge.edu.freeuni.sdp.xo.rooms.service.WebApplicationException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8960/buggy-version/src.main.java.ge.edu.freeuni.sdp.xo.rooms.service.RoomsService.java", "BodyUseAPI": ["Status.OK.getStatusCode()", "client.target(((ge.edu.freeuni.sdp.xo.rooms.service.RoomsService.LOGIN_SERVICE) + token)).request(MediaType.APPLICATION_JSON_TYPE)", "org.glassfish.jersey.client.ClientResponse.getStatus()", "client.target(((ge.edu.freeuni.sdp.xo.rooms.service.RoomsService.LOGIN_SERVICE) + token)).request(MediaType.APPLICATION_JSON_TYPE).get(java.lang.Class)", "javax.ws.rs.client.Client.target(java.lang.String)", "org.glassfish.jersey.client.ClientResponse.readEntity(java.lang.Class)"], "Fixed commit": "a59dfabea7d74f3c4e67c6c4f0fbd50ed7ce1d6d", "Url": "https://api.github.com/repos/freeuni-sdp/xo-rooms", "Date": "2015-06-28T20:35:53Z"},
{"Line": "=>1138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.datdo.mobilib.util.MblUtils.sProgressDialog.dismiss(); } catch (java.lang.Throwable e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7752/buggy-version/Mobilib.src.com.datdo.mobilib.util.MblUtils.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "a885cc4c2dc0b11eff47cada76568a43338dc506", "Url": "https://api.github.com/repos/datdojp/mobilib", "Date": "2015-05-16T11:03:21Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.KITKAT)) { loadUrl(java.lang.String.format(\"javascript:convertToHtml('%s')\", im.vector.util.VectorMarkdownParser.escapeText(markdownText))); }else { evaluateJavascript(java.lang.String.format(\"convertToHtml('%s')\", im.vector.util.VectorMarkdownParser.escapeText(markdownText)), null); } } catch (java.lang.Exception e) { org.matrix.androidsdk.util.Log.e(im.vector.util.VectorMarkdownParser.LOG_TAG, (\"## markdownToHtml() : failed \" + (e.getMessage()))); listener.onMarkdownParsed(markdownText, text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8821/buggy-version/vector.src.main.java.im.vector.util.VectorMarkdownParser.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)", "im.vector.util.VectorMarkdownParser.escapeText(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String)", "im.vector.util.VectorMarkdownParser.loadUrl(java.lang.String)", "im.vector.util.VectorMarkdownParser.escapeText(java.lang.String)", "im.vector.util.VectorMarkdownParser.evaluateJavascript(java.lang.String,<nulltype>)"], "Fixed commit": "da73185773b51090e8768e402912e9448bb45792", "Url": "https://api.github.com/repos/jgkamat/riot-android", "Date": "2017-03-20T08:47:07Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (org.gephi.graph.api.Element element : iterable) { function.transform(element, graph); } } catch (java.lang.Exception e) { iterable.doBreak(); if (e instanceof java.lang.RuntimeException) { throw ((java.lang.RuntimeException) (e)); }else { throw new java.lang.RuntimeException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4461/buggy-version/modules.AppearanceAPI.src.main.java.org.gephi.appearance.AppearanceControllerImpl.java", "BodyUseAPI": ["org.gephi.appearance.api.Function.transform(org.gephi.graph.api.Element,org.gephi.graph.api.Graph)"], "Fixed commit": "92b6b2ce7068df19f79f38874c19a82ce0df238a", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2016-01-31T21:24:09Z"},
{"Line": "=>1054", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.mondego.indexbased.SearchManager.socketWriter.closeSocket(); } catch (java.lang.Exception e) { com.mondego.indexbased.SearchManager.logger.error(\"error in closing the socket\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4868/buggy-version/clone-detector.src.com.mondego.indexbased.SearchManager.java", "BodyUseAPI": ["com.mondego.utility.SocketWriter.closeSocket()"], "Fixed commit": "7fb734c988aca97089611b4985a68a7fc0d0c006", "Url": "https://api.github.com/repos/Mondego/SourcererCC", "Date": "2017-08-21T02:42:02Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { g = java.lang.Double.parseDouble(gaesteanzahleintragen.getText()); } catch (java.lang.NumberFormatException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/374/buggy-version/src.Guidesign.Startseite.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "00f33e6535f7299ea6c42174b8dd3d59244a77f7", "Url": "https://api.github.com/repos/StudProg/Partyplaner", "Date": "2016-12-15T09:43:56Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { due = dFormat.parse(Pgm2.tbScanner.nextLine()); } catch (java.text.ParseException e) { java.lang.System.out.println(\"Datumet du angav var i ogiltigt format!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8009/buggy-version/weraFinal.Pgm2.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)", "java.util.Scanner.nextLine()"], "Fixed commit": "bc261ed1d1f75f2352e7e755545187e20639130b", "Url": "https://api.github.com/repos/nyson/db-assignment1", "Date": "2013-02-26T10:57:10Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { amount = java.lang.Double.parseDouble(Pgm2.tbScanner.nextLine()); } catch (java.lang.NumberFormatException e) { java.lang.System.out.println(\"Det d\u00e4r \u00e4r inte ett giltigt tal.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8009/buggy-version/weraFinal.Pgm2.java", "BodyUseAPI": ["java.util.Scanner.nextLine()", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "bc261ed1d1f75f2352e7e755545187e20639130b", "Url": "https://api.github.com/repos/nyson/db-assignment1", "Date": "2013-02-26T10:57:10Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.System.out.print(\"Skriv i avs\u00e4ndarens kontonummer: \"); source = Pgm2.m.findAccount(Pgm2.tbScanner.nextLine()); java.lang.System.out.print(\"Skriv i mottagarens kontonummer: \"); destination = Pgm2.m.findAccount(Pgm2.tbScanner.nextLine()); } catch (java.lang.NoSuchFieldException e) { java.lang.System.out.println(\"Det finns inget konto med det numret!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8009/buggy-version/weraFinal.Pgm2.java", "BodyUseAPI": ["java.io.PrintStream.print(java.lang.String)", "java.util.Scanner.nextLine()", "Metoder.findAccount(java.lang.String)", "java.io.PrintStream.print(java.lang.String)", "Metoder.findAccount(java.lang.String)", "java.util.Scanner.nextLine()"], "Fixed commit": "bc261ed1d1f75f2352e7e755545187e20639130b", "Url": "https://api.github.com/repos/nyson/db-assignment1", "Date": "2013-02-26T10:57:10Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cmAPI.closeChannel(); } catch (javax.smartcardio.CardException ex) { java.util.logging.Logger.getLogger(gui.InitialScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2171/buggy-version/SSINDesktopAPP.src.gui.InitialScreen.java", "BodyUseAPI": ["encriptionLogic.CardMediator.closeChannel()"], "Fixed commit": "62a6dccd483868be3b1a85f76f24c43b8b8a79e1", "Url": "https://api.github.com/repos/fmg/SSIN", "Date": "2013-04-07T22:10:50Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if (computedNumbers.isEmpty()) { this.computedNumbers.add(0L); this.computedNumbers.add(1L); } } finally { writeLock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/6655/buggy-version/src.main.java.com.emc.fibonacci.FibonacciSequenceGenerator.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.add(long)", "java.util.List<java.lang.Long>.add(long)", "java.util.List<java.lang.Long>.isEmpty()"], "Fixed commit": "36f834b93fc2b2ee9f33775d17bfeb06de570ad3", "Url": "https://api.github.com/repos/zagorulkinde/fibonacci-rest", "Date": "2016-05-16T20:52:17Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { oldObjects = ((java.util.List<java.lang.Object>) (data)); } catch (java.lang.Exception e) { org.jvalue.ods.logger.Logging.error(this.getClass(), \"Cannot cast data to list, aborting RenameSourceFilter\"); return data; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8927/buggy-version/src.main.java.org.jvalue.ods.qa.improvement.RenameSourceFilter.java", "BodyUseAPI": [], "Fixed commit": "20fa4d9b262b07d62fb2be036df699d9fc5a23c0", "Url": "https://api.github.com/repos/jvalue/open-data-service", "Date": "2014-08-05T01:06:19Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { oldObjects = ((java.util.List<java.lang.Object>) (data)); } catch (java.lang.Exception e) { org.jvalue.ods.logger.Logging.error(this.getClass(), \"Cannot cast data to list, aborting CombineSourceFilter\"); return data; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8927/buggy-version/src.main.java.org.jvalue.ods.qa.improvement.CombineSourceFilter.java", "BodyUseAPI": [], "Fixed commit": "20fa4d9b262b07d62fb2be036df699d9fc5a23c0", "Url": "https://api.github.com/repos/jvalue/open-data-service", "Date": "2014-08-05T01:06:19Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.math.BigDecimal notaxamt = new java.math.BigDecimal(bill.getTt_xprcmstro_notaxamt()); java.math.BigDecimal totalamt = bill.getTt_xprcmstro_totalamt(); java.math.BigDecimal disamt = new java.math.BigDecimal(bill.getTt_xpyhddeto_disamt()); java.math.BigDecimal claimamt = bill.getTt_xprcmstro_claimamt(); if ((totalamt.subtract(disamt).subtract(claimamt).compareTo(notaxamt)) != 0) { throw new com.yfkey.exception.BillConfirmNotValidException(getText(\"bill.notaxamt_not_equal_error\")); } } catch (java.lang.NumberFormatException e) { throw new com.yfkey.exception.BillConfirmNotValidException(getText(\"bill.qty_format_error\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1996/buggy-version/src.main.java.com.yfkey.webapp.action.BillAction.java", "BodyUseAPI": ["java.math.BigDecimal.subtract(java.math.BigDecimal)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "com.yfkey.model.Bill.getTt_xprcmstro_notaxamt()", "com.yfkey.model.Bill.getTt_xprcmstro_totalamt()", "com.yfkey.model.Bill.getTt_xprcmstro_claimamt()", "com.yfkey.model.Bill.getTt_xpyhddeto_disamt()", "java.math.BigDecimal.subtract(java.math.BigDecimal)", "com.yfkey.webapp.action.BillAction.getText(java.lang.String)"], "Fixed commit": "fecbbc0d4c9829fba01d44fcb5760e60d510b0ee", "Url": "https://api.github.com/repos/Novthirteen/esupply-yfkey", "Date": "2017-08-31T05:45:51Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sprites[current].draw(g, me.x, me.y); } catch (java.lang.NullPointerException e) { g.fillRect(me.x, me.y, me.width, me.height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1711/buggy-version/src.main.java.com.cosmosengine.CosmosEntity.java", "BodyUseAPI": ["sprites[current].draw(java.awt.Graphics,int,int)"], "Fixed commit": "03c1d7971e588a48be8884d140b8aaff9d8f30b3", "Url": "https://api.github.com/repos/diverges/Instability", "Date": "2017-12-23T23:43:59Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { title = net.alexandroid.network.portwatcher.helpers.ShPref.getString(((R.string.key_widget_title) + appWidgetId), \"\"); host = net.alexandroid.network.portwatcher.helpers.ShPref.getString(((R.string.key_widget_host) + appWidgetId), \"\"); ports = net.alexandroid.network.portwatcher.helpers.ShPref.getString(((R.string.key_widget_ports) + appWidgetId), \"\"); } catch (android.content.res.Resources e) { com.crashlytics.android.Crashlytics.logException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/8426/buggy-version/app.src.main.java.net.alexandroid.network.portwatcher.widget.WIdgetProvider.java", "BodyUseAPI": ["net.alexandroid.network.portwatcher.helpers.ShPref.getString(((R.string.key_widget_ports) + appWidgetId),java.lang.String)", "net.alexandroid.network.portwatcher.helpers.ShPref.getString(((R.string.key_widget_host) + appWidgetId),java.lang.String)", "net.alexandroid.network.portwatcher.helpers.ShPref.getString(((R.string.key_widget_title) + appWidgetId),java.lang.String)"], "Fixed commit": "d4beebb4c11280863d759f5ddca69fc14708313e", "Url": "https://api.github.com/repos/Pulimet/Capstone-Project", "Date": "2016-10-24T16:17:26Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (org.springframework.transaction.support.AbstractPlatformTransactionManager transactionManager : transactionManagers) { statusList.add(transactionManager.getTransaction(transactionDefinition)); } } catch (java.lang.Throwable e) { logger.error((\"\u5b58\u5728\u6570\u636e\u5e93\u5f00\u542f\u4e8b\u52a1\u5931\u8d25,\u53ef\u80fd\u662f\u6570\u636e\u5e93\u95ea\u65ad\u6216\u8005\u65e0\u6cd5\u8fde\u63a5,\u5f3a\u5236\u56de\u6eda\u6240\u6709\u4e8b\u52a1:\" + (e.getMessage())), e); for (int i = 0; i < (statusList.size()); i++) { org.springframework.transaction.support.AbstractPlatformTransactionManager transactionManager = transactionManagers.get(i); com.alibaba.cobarclient.transaction.TransactionStatus status = statusList.get(i); try { transactionManager.rollback(status); } catch (com.alibaba.cobarclient.transaction.TransactionException ex) { } } if (e instanceof com.alibaba.cobarclient.transaction.TransactionException) { throw ((com.alibaba.cobarclient.transaction.TransactionException) (e)); }else { throw new com.alibaba.cobarclient.transaction.TransactionSystemException((\"\u5b58\u5728\u6570\u636e\u5e93\u5f00\u542f\u4e8b\u52a1\u5931\u8d25,\u5f3a\u5236\u56de\u6eda\" + (e.getMessage())), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5654/buggy-version/src.main.java.com.alibaba.cobarclient.transaction.BestEffortMultiDataSourceTransactionManager.java", "BodyUseAPI": ["org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(com.alibaba.cobarclient.transaction.TransactionDefinition)", "java.util.List<com.alibaba.cobarclient.transaction.TransactionStatus>.add(transactionManager.getTransaction(transactionDefinition))"], "Fixed commit": "486b0c441f782a2a02131c95c53603a85758be6f", "Url": "https://api.github.com/repos/aqqwiyth/cobarclient", "Date": "2017-11-13T02:39:16Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { resetFineMgr.setMember(userIDField.getText()); userName.setText((\"User Name : \" + (resetFineMgr.getUserName()))); userFine.setText((\"User Fine : \" + (resetFineMgr.getUserFine()))); userinfoPane.setVisible(true); this.handleOnShowAnimation(userinfoPane); } catch (exception.UserNotFoundException ex) { this.displayWarning(\"Error\", (\"User not found \" + (ex.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2241/buggy-version/LMS.src.resetfine.ResetFineFXController.java", "BodyUseAPI": ["resetfine.ResetFineMgr.getUserFine()", "javafx.scene.control.Label.setText((\"User Name : \" + (resetFineMgr.getUserName())))", "resetfine.ResetFineFXController.handleOnShowAnimation(javafx.scene.layout.Pane)", "javafx.scene.control.TextField.getText()", "javafx.scene.control.Label.setText((\"User Fine    : \" + (resetFineMgr.getUserFine())))", "resetfine.ResetFineMgr.setMember(userIDField.getText())", "javafx.scene.layout.Pane.setVisible(boolean)", "resetfine.ResetFineMgr.getUserName()"], "Fixed commit": "417f9d120c700f76e520300d5fc07fd7b9d66113", "Url": "https://api.github.com/repos/adarsh1/RabiduxSixFX", "Date": "2013-04-18T09:23:39Z"},
{"Line": "=>638", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (java.io.File d : com.nineworldsdeep.gauntlet.core.Configuration.getHiveFolder().listFiles(((java.io.FileFilter) (DirectoryFileFilter.DIRECTORY)))) { lst.add(d); } } catch (java.lang.NullPointerException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2706/buggy-version/app.src.main.java.com.nineworldsdeep.gauntlet.core.Configuration.java", "BodyUseAPI": ["java.util.ArrayList<java.io.File>.add(java.io.File)", "java.io.File.listFiles(((java.io.FileFilter) (DirectoryFileFilter.DIRECTORY)))", "com.nineworldsdeep.gauntlet.core.Configuration.getHiveFolder()"], "Fixed commit": "e271384e5cb674947f914603da14ed0851c3fb7b", "Url": "https://api.github.com/repos/BBuchholz/Gauntlet", "Date": "2017-10-07T13:50:27Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { count = associatedDirectory.listFiles().length; } catch (java.lang.NullPointerException ex) { count = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/2706/buggy-version/app.src.main.java.com.nineworldsdeep.gauntlet.hive.HiveLobesActivity.java", "BodyUseAPI": ["java.io.File.listFiles()"], "Fixed commit": "e271384e5cb674947f914603da14ed0851c3fb7b", "Url": "https://api.github.com/repos/BBuchholz/Gauntlet", "Date": "2017-10-07T13:50:27Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { output.close(); input.close(); } catch (java.io.IOException e) { com.shuffle.scplayer.core.AudioPlayer.log.error(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/4268/buggy-version/src.main.java.com.shuffle.scplayer.core.AudioPlayer.java", "BodyUseAPI": ["java.io.PipedInputStream.close()", "java.io.PipedOutputStream.close()"], "Fixed commit": "1a8b3f3b342aeb6ce76f829c82989728358ca9d8", "Url": "https://api.github.com/repos/LeanderK/scplayer", "Date": "2015-11-08T21:52:35Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { originalBmp.setPixel(x, y, originalBmp.getPixel(px, py)); } catch (java.lang.IllegalArgumentException iae) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7430/buggy-version/src.org.witness.sscphase1.PixelizeObscure.java", "BodyUseAPI": ["android.graphics.Bitmap.getPixel(int,int)", "android.graphics.Bitmap.setPixel(int,int,originalBmp.getPixel(px, py))"], "Fixed commit": "fee3e76f90c13a19bdf38ffeeb3a9b508ae2bbf8", "Url": "https://api.github.com/repos/guardianproject/ObscuraCam", "Date": "2011-06-11T04:51:24Z"},
{"Line": "=>533", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String resNodeId = ((java.lang.String) ((previousNode) ? e.getSrc().get(\"node\") : e.getTgt().get(\"node\"))); oppositeNodes.add(owningFlow.getNode(resNodeId, owningFlow.getId())); } catch (java.lang.NullPointerException e1) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/7139/buggy-version/src.main.java.fr.irisa.diverse.Flow.Node.java", "BodyUseAPI": ["e.getTgt().get(java.lang.String)", "java.util.ArrayList<fr.irisa.diverse.Flow.Node>.add(owningFlow.getNode(resNodeId, owningFlow.getId()))", "fr.irisa.diverse.Flow.Edge.getTgt()", "fr.irisa.diverse.Flow.Flow.getId()", "e.getSrc().get(java.lang.String)", "fr.irisa.diverse.Flow.Edge.getSrc()", "fr.irisa.diverse.Flow.Flow.getNode(java.lang.String,owningFlow.getId())"], "Fixed commit": "a4dc722b4b65aae5915414b7470dfade469b8bb4", "Url": "https://api.github.com/repos/AntoineCheron/padins-backend", "Date": "2017-07-17T09:30:34Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { this.mindMapPanel.dispose(); } finally { this.getDocument().removeDocumentListener(this.documentListener); com.intellij.ide.DataManager.removeDataProvider(this.mainScrollPane); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/5681/buggy-version/mind-map.idea-mindmap.src.com.igormaznitsa.ideamindmap.editor.MindMapDocumentEditor.java", "BodyUseAPI": ["com.igormaznitsa.mindmap.swing.panel.MindMapPanel.dispose()"], "Fixed commit": "560a22281a476bd6e251a7cf7a1daa545ac59dbb", "Url": "https://api.github.com/repos/raydac/netbeans-mmd-plugin", "Date": "2017-01-20T07:44:06Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getPrixTTC(etPrixHt.getText().toString(), spinnerTva.getSelectedItem().toString()); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V36/1425/buggy-version/app.src.main.java.com.example.isak.stock_vitavinum.AddBottle.java", "BodyUseAPI": ["android.widget.EditText.getText()", "android.widget.Spinner.getSelectedItem()", "com.example.isak.stock_vitavinum.AddBottle.getPrixTTC(etPrixHt.getText().toString(),spinnerTva.getSelectedItem().toString())", "spinnerTva.getSelectedItem().toString()", "etPrixHt.getText().toString()"], "Fixed commit": "957b52ce3fcadb79906979c35b08e0d4cd0faf2f", "Url": "https://api.github.com/repos/StockManagers/StockumGestionum", "Date": "2015-06-25T07:58:16Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { nl.siegmann.epublib.domain.Book epub = book.toEpub(this); nl.siegmann.epublib.domain.Spine spine = epub.getSpine(); java.util.List<nl.siegmann.epublib.domain.SpineReference> srs = spine.getSpineReferences(); pageSize = srs.size(); for (int i = 0; i < (pageSize); i++) { if (link.startsWith(srs.get(i).getResource().getHref())) { curPage = i; break; } } ((android.webkit.WebView) (findViewById(R.id.wv_content))).loadUrl(((book.toBaseUrl(this)) + link)); } catch (java.io.IOException e) { android.util.Log.d(\"\u8bfb\u53d6\", \"EPUB\", e); new com.odong.buddhismhomework.utils.WidgetHelper(this).toast(getString(R.string.lbl_error_book_format), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1009/buggy-version/app.src.main.java.com.odong.buddhismhomework.pages.reading.EpubActivity.java", "BodyUseAPI": ["nl.siegmann.epublib.domain.Spine.getSpineReferences()", "java.lang.String.startsWith(srs.get(i).getResource().getHref())", "java.util.List<nl.siegmann.epublib.domain.SpineReference>.get(int)", "srs.get(i).getResource()", "((android.webkit.WebView) (findViewById(R.id.wv_content))).loadUrl(((book.toBaseUrl(this)) + link))", "java.util.List<nl.siegmann.epublib.domain.SpineReference>.size()", "com.odong.buddhismhomework.pages.reading.EpubActivity.findViewById(R.id.wv_content)", "com.odong.buddhismhomework.models.Book.getSpine()", "com.odong.buddhismhomework.models.Book.toEpub(com.odong.buddhismhomework.pages.reading.EpubActivity)", "com.odong.buddhismhomework.models.Book.toBaseUrl(com.odong.buddhismhomework.pages.reading.EpubActivity)", "srs.get(i).getResource().getHref()"], "Fixed commit": "1dc4128e496527df12da5e367636eb78e85dd112", "Url": "https://api.github.com/repos/chonglou/BuddhismHomework", "Date": "2015-03-06T21:11:25Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.lwjgl.opengl.Display.create(); } catch (org.lwjgl.LWJGLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1185/buggy-version/src.com.lambda.GameContainer.java", "BodyUseAPI": ["org.lwjgl.opengl.Display.create()"], "Fixed commit": "2da2d40ae86aad792e6c68c3fe01510bd5ea3801", "Url": "https://api.github.com/repos/SchroedingersCat/lambda", "Date": "2013-01-15T23:01:05Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { historySeries.get(i).addLast(null, samples[i]); } catch (java.lang.ArrayIndexOutOfBoundsException e) { org.md2k.utilities.Report.Log.d(\"Plotter\", (\"Index out of bounds\" + (e.getStackTrace().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5310/buggy-version/plotter.src.main.java.org.md2k.plotter.ActivityPlot.java", "BodyUseAPI": ["java.util.ArrayList<com.androidplot.xy.SimpleXYSeries>.get(int)", "historySeries.get(i).addLast(<nulltype>,float)"], "Fixed commit": "8c09ce908cd3753fc742cc13c814c7c450997300", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-Plotter", "Date": "2016-03-14T21:09:34Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { shortcut = new android.content.pm.ShortcutInfo.Builder(this, (itemTwo == null ? item : itemTwo)).setShortLabel(item).setLongLabel(((item + \" - \") + itemTwo)).setIcon(android.graphics.drawable.Icon.createWithResource(this, R.drawable.ic_fav_station)).setIntent(i.setAction(\"\")).build(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7114/buggy-version/BeTrains.src.main.java.tof.cv.mpp.WelcomeActivity.java", "BodyUseAPI": ["new android.content.pm.ShortcutInfo.Builder(this, (itemTwo == null ? item : itemTwo)).setShortLabel(item).setLongLabel(((item + \" - \") + itemTwo)).setIcon(android.graphics.drawable.Icon.createWithResource(this, R.drawable.ic_fav_station)).setIntent(i.setAction(\"\")).build()", "new android.content.pm.ShortcutInfo.Builder(this, (itemTwo == null ? item : itemTwo)).setShortLabel(item).setLongLabel(((item + \" - \") + itemTwo)).setIcon(android.graphics.drawable.Icon.createWithResource(this, R.drawable.ic_fav_station)).setIntent(i.setAction(\"\"))", "android.content.pm.ShortcutInfo.Builder.setShortLabel(java.lang.String)", "new android.content.pm.ShortcutInfo.Builder(this, (itemTwo == null ? item : itemTwo)).setShortLabel(item).setLongLabel(((item + \" - \") + itemTwo)).setIcon(android.graphics.drawable.Icon.createWithResource(this, R.drawable.ic_fav_station))", "android.graphics.drawable.Icon.createWithResource(tof.cv.mpp.WelcomeActivity,R.drawable.ic_fav_station)", "android.content.Intent.setAction(java.lang.String)", "new android.content.pm.ShortcutInfo.Builder(this, (itemTwo == null ? item : itemTwo)).setShortLabel(item).setLongLabel(java.lang.String)"], "Fixed commit": "3d4a1ad2b94368cca3edaee1141d768aa84992c4", "Url": "https://api.github.com/repos/iRail/BeTrains-for-Android", "Date": "2016-11-28T08:23:31Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { roundTotalViewStub = ((android.view.ViewStub) (findViewById(R.id.round_totals))); int versionInt = com.nolanlawson.keepscore.util.VersionHelper.getVersionSdkIntCompat(); if ((versionInt > (com.nolanlawson.keepscore.util.VersionHelper.VERSION_DONUT)) && (versionInt < (com.nolanlawson.keepscore.util.VersionHelper.VERSION_FROYO))) { roundTotalTextView = ((android.widget.TextView) (roundTotalViewStub.inflate())); } } catch (java.lang.ClassCastException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5416/buggy-version/src.com.nolanlawson.keepscore.GameActivity.java", "BodyUseAPI": ["android.view.ViewStub.inflate()", "com.nolanlawson.keepscore.GameActivity.findViewById(R.id.round_totals)", "com.nolanlawson.keepscore.util.VersionHelper.getVersionSdkIntCompat()"], "Fixed commit": "faa2304dfeacc95c6c95b52cc4322220d6cd21d1", "Url": "https://api.github.com/repos/nolanlawson/KeepScore", "Date": "2012-03-24T16:21:42Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(conn.get_conn().isClosed())) conn.get_conn().close(); } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4982/buggy-version/src.org.nutz.cp.NutDataSource.java", "BodyUseAPI": ["org.nutz.cp.NutJdbcConnection.get_conn()", "conn.get_conn().close()", "conn.get_conn().isClosed()", "org.nutz.cp.NutJdbcConnection.get_conn()"], "Fixed commit": "bed1934fa8ae8f98d449c1e968d42a2ab5c31bf9", "Url": "https://api.github.com/repos/nutzam/nutzcp", "Date": "2011-09-18T05:45:27Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { app.Citation c = new app.Citation(new app.Token(cit)); if (c == null) { return new app.Cli.Result(false, \"Invalid session\"); } c.delete(); tx.success(); return null; } catch (java.lang.IllegalArgumentException e) { return new app.Cli.Result(false, \"Bad Citation ID\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/9079/buggy-version/src.app.Cli.java", "BodyUseAPI": ["app.Transaction.success()", "app.Citation.delete()"], "Fixed commit": "46e3d6c9194b450a471dad4ee470f33ad0bd3039", "Url": "https://api.github.com/repos/jamesmiller5/app", "Date": "2013-09-20T22:56:36Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { socketMultiChannel = com.sun.nio.sctp.SctpMultiChannel.open(); socketMultiChannel.configureBlocking(false); socketMultiChannel.bind(new java.net.InetSocketAddress(this.hostAddressInfo.getPrimaryHostAddress(), this.hostAddressInfo.getHostPort())); if (((this.hostAddressInfo.getSecondaryHostAddress()) != null) && (!(this.hostAddressInfo.getSecondaryHostAddress().isEmpty()))) { socketMultiChannel.bindAddress(java.net.InetAddress.getByName(this.hostAddressInfo.getSecondaryHostAddress())); } } catch (java.io.IOException ex) { org.mobicents.protocols.sctp.multiclient.OneToManyAssocMultiplexer.logger.warn((\"Error while init multi channel: \" + (ex.getMessage()))); if (socketMultiChannel.isOpen()) { try { socketMultiChannel.close(); } catch (java.io.IOException closeEx) { } } throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4615/buggy-version/sctp-impl.src.main.java.org.mobicents.protocols.sctp.multiclient.OneToManyAssocMultiplexer.java", "BodyUseAPI": ["org.mobicents.protocols.sctp.multiclient.ManageableAssociation.HostAddressInfo.getPrimaryHostAddress()", "org.mobicents.protocols.sctp.multiclient.ManageableAssociation.HostAddressInfo.getSecondaryHostAddress()", "org.mobicents.protocols.sctp.multiclient.ManageableAssociation.HostAddressInfo.getSecondaryHostAddress()", "com.sun.nio.sctp.SctpMultiChannel.open()", "org.mobicents.protocols.sctp.multiclient.ManageableAssociation.HostAddressInfo.getSecondaryHostAddress()", "this.hostAddressInfo.getSecondaryHostAddress().isEmpty()", "java.net.InetAddress.getByName(this.hostAddressInfo.getSecondaryHostAddress())", "org.mobicents.protocols.sctp.multiclient.ManageableAssociation.HostAddressInfo.getHostPort()", "com.sun.nio.sctp.SctpMultiChannel.bindAddress(java.net.InetAddress)", "com.sun.nio.sctp.SctpMultiChannel.bind(java.net.InetSocketAddress)", "com.sun.nio.sctp.SctpMultiChannel.configureBlocking(boolean)"], "Fixed commit": "b39ac850f5930286e7d9795f5d0a8563c4161c04", "Url": "https://api.github.com/repos/AlerantAppNGIN/sctp", "Date": "2015-05-26T16:46:44Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.avro.io.Decoder decoder = org.apache.avro.io.DecoderFactory.get().jsonDecoder(((org.apache.avro.Schema) (clazz.getDeclaredMethod(\"getSchema\").invoke(null))), is); org.apache.avro.specific.SpecificDatumReader<T> reader = new org.apache.avro.specific.SpecificDatumReader<T>(); reader.read(obj, decoder); } catch (java.lang.IllegalAccessException e) { e.printStackTrace(); } catch (java.lang.reflect.InvocationTargetException e) { e.printStackTrace(); } catch (java.lang.NoSuchMethodException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2575/buggy-version/library.src.main.java.com.westudio.android.sdk.uitls.Serializer.java", "BodyUseAPI": ["java.lang.Class<T>.getDeclaredMethod(java.lang.String)", "java.lang.reflect.Method.invoke(<nulltype>)", "org.apache.avro.io.DecoderFactory.get().jsonDecoder(java.lang.Object,java.io.InputStream)", "org.apache.avro.io.DecoderFactory.get()", "org.apache.avro.specific.SpecificDatumReader<T>.read(T,org.apache.avro.io.Decoder)"], "Fixed commit": "15063966baad489fb33c6ed564168a262f6c764d", "Url": "https://api.github.com/repos/AdoHe/Pipe", "Date": "2014-08-08T06:09:43Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { item.put(\"Enchantments\", it.getEnchantments()); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2504/buggy-version/src.main.java.xyz.jaoafa.mymaid.Command.InvSave.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getEnchantments()", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,it.getEnchantments())"], "Fixed commit": "617e1174cd5debf5c8995585cb007891580436de", "Url": "https://api.github.com/repos/book000/MyMaid", "Date": "2017-10-30T13:59:17Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { completedCourses = FacultyAdvisement.CourseRepository.readCompletedCourses(ds, student.getId()); } catch (java.sql.SQLException ex) { java.util.logging.Logger.getLogger(FacultyAdvisement.UserBean.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7302/buggy-version/FacultyAdvisementSite.src.java.FacultyAdvisement.SignupBean.java", "BodyUseAPI": ["FacultyAdvisement.Student.getId()", "FacultyAdvisement.CourseRepository.readCompletedCourses(javax.sql.DataSource,student.getId())"], "Fixed commit": "90d8d8d0b425dcdd76464db718b5ed4d6589d1af", "Url": "https://api.github.com/repos/Haseeba09/Faculty-Advisment-Site", "Date": "2017-04-13T19:47:59Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { td = ((com.jme3.material.plugins.TechniqueDef) (technique.clone())); } catch (java.lang.CloneNotSupportedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8589/buggy-version/jme3-core.src.plugins.java.com.jme3.material.plugins.J3MLoader.java", "BodyUseAPI": ["com.jme3.material.plugins.TechniqueDef.clone()"], "Fixed commit": "b0ed053472916801e301c32afd7faa1793511000", "Url": "https://api.github.com/repos/jMonkeyEngine/jmonkeyengine", "Date": "2017-01-15T19:32:42Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { state.put(fieldName, com.psddev.cms.db.RichTextDatabase.PUBLISHABLES.getUnchecked(((java.lang.String) (value)))); } catch (java.lang.IllegalStateException error) { java.util.List<java.lang.Object> publishables = new com.psddev.dari.db.ReferentialText(((java.lang.String) (value)), true).toPublishables(true, new com.psddev.cms.db.RichTextCleaner()); state.put(fieldName, (publishables.isEmpty() ? \"\" : ((java.lang.String) (publishables.get(0))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/230/buggy-version/db.src.main.java.com.psddev.cms.db.RichTextDatabase.java", "BodyUseAPI": ["com.google.common.cache.LoadingCache<java.lang.String, java.lang.String>.getUnchecked(java.lang.Object)", "com.psddev.dari.db.State.put(java.lang.String,com.psddev.cms.db.RichTextDatabase.PUBLISHABLES.getUnchecked(((java.lang.String) (value))))"], "Fixed commit": "c2cf85274755c904a9b2c35a2e64d50ae518e3b4", "Url": "https://api.github.com/repos/perfectsense/brightspot-cms", "Date": "2014-12-04T16:47:02Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { conn = java.sql.DriverManager.getConnection(dsn, user, pass); } catch (java.sql.SQLException e) { if ((dsn.indexOf('?')) != (-1)) { java.lang.String connStr = (((dsn + \"&user=\") + user) + \"&password=\") + pass; conn = java.sql.DriverManager.getConnection(connStr); }else throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4173/buggy-version/railo-java.railo-core.src.railo.runtime.db.DatasourceConnectionPool.java", "BodyUseAPI": ["java.sql.DriverManager.getConnection(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "b180be9529e37529de562d1a6af149583408c75b", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-09-21T12:59:49Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ordList.isEmpty(); return new model.VariableOrdering(ordList); } catch (java.lang.NullPointerException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7183/buggy-version/controller.VarOrdController.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.Integer>.isEmpty()"], "Fixed commit": "ab1d153b86ddffe61d1e472ec92e847f702beaf0", "Url": "https://api.github.com/repos/timnp/VisualBDD", "Date": "2014-03-10T18:31:45Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { managedBugsDao.save(mb); } catch (java.lang.Exception ex) { java.lang.System.out.println(\"*****************************************************\"); return util.ConstantUtil.addFailure; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8726/buggy-version/src.service.impl.BuginfoServiceImpl.java", "BodyUseAPI": ["dao.IManagedbugsDAO.save(bean.Managedbugs)"], "Fixed commit": "183d490debfa33b5da8c377f71347a6c0871ccd3", "Url": "https://api.github.com/repos/yinshunming/BugTrackingSystem", "Date": "2014-02-11T09:40:01Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.openmrs.module.beecardia.api.enity.BeeStudy study = org.openmrs.api.context.Context.getService(org.openmrs.module.beecardia.api.service.BeeStudyService.class).getById(id); int patientId = study.getBeePatient().getOpenmrsPatientId(); org.openmrs.Patient patient = org.openmrs.api.context.Context.getPatientService().getPatient(patientId); model.addAttribute(\"study\", study); model.addAttribute(\"openmrsPatient\", patient); } catch (java.lang.Exception e) { return \"redirect:/patientDashboard.form?patientId=\" + id; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3386/buggy-version/omod.src.main.java.org.openmrs.module.beecardia.web.controller.PatientController.java", "BodyUseAPI": ["org.springframework.ui.ModelMap.addAttribute(java.lang.String,org.openmrs.Patient)", "study.getBeePatient().getOpenmrsPatientId()", "org.springframework.ui.ModelMap.addAttribute(java.lang.String,org.openmrs.module.beecardia.api.enity.BeeStudy)", "org.openmrs.module.beecardia.api.enity.BeeStudy.getBeePatient()", "org.openmrs.api.context.Context.getService(org.openmrs.module.beecardia.api.service.BeeStudyService.class).getById(int)", "org.openmrs.api.context.Context.getService(java.lang.Class)", "org.openmrs.api.context.Context.getPatientService().getPatient(int)", "org.openmrs.api.context.Context.getPatientService()"], "Fixed commit": "7fcf0acae09b1763e5072d592947ce61631d5138", "Url": "https://api.github.com/repos/Starkov/beecardia", "Date": "2014-05-29T14:07:11Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return ((soot.jimple.toolkits.typing.fast.FieldRef) (expr)).getField().getType(); } catch (soot.jimple.toolkits.typing.fast.ResolutionFailedException e) { return ((soot.jimple.toolkits.typing.fast.FieldRef) (expr)).getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6128/buggy-version/compiler.src.main.java.soot.jimple.toolkits.typing.fast.AugEvalFunction.java", "BodyUseAPI": ["((soot.jimple.toolkits.typing.fast.FieldRef) (expr)).getField().getType()", "soot.jimple.toolkits.typing.fast.Value.getField()"], "Fixed commit": "8f187149903878fb665b2c8119f7a5cf9609cb68", "Url": "https://api.github.com/repos/robovm/robovm", "Date": "2014-02-18T09:46:24Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { Alltr = Table.get(0).getElementsByTag(\"tr\"); } catch (java.lang.Exception e) { java.lang.System.out.println(\"There is no jobs in this Sort...Ignore\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5916/buggy-version/eHR-Lucene.src.main.java.com.ehais.hrlucene.service.impl.FjrcServiceImpl.java", "BodyUseAPI": ["org.jsoup.select.Elements.get(int)", "Table.get(0).getElementsByTag(java.lang.String)"], "Fixed commit": "0bf8992407af2e6b39a277de50af24e645dda127", "Url": "https://api.github.com/repos/eh-project/eh-project", "Date": "2016-12-04T13:50:52Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fulltime = lisContainDetail.get(0).getElementsByTag(\"p\").get(1).text(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5916/buggy-version/eHR-Lucene.src.main.java.com.ehais.hrlucene.service.impl.FjrcServiceImpl.java", "BodyUseAPI": ["org.jsoup.select.Elements.get(int)", "lisContainDetail.get(0).getElementsByTag(\"p\").get(int)", "lisContainDetail.get(0).getElementsByTag(\"p\").get(1).text()", "lisContainDetail.get(0).getElementsByTag(java.lang.String)"], "Fixed commit": "0bf8992407af2e6b39a277de50af24e645dda127", "Url": "https://api.github.com/repos/eh-project/eh-project", "Date": "2016-12-04T13:50:52Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.File torrentFile = new java.io.File(song.getString(\"torrent_path\")); java.util.zip.ZipEntry e = new java.util.zip.ZipEntry(torrentFile.getName()); zout.putNextEntry(e); byte[] torrentBytes = java.nio.file.Files.readAllBytes(java.nio.file.Paths.get(torrentFile.getAbsolutePath())); zout.write(torrentBytes, 0, torrentBytes.length); zout.closeEntry(); } catch (java.nio.file.NoSuchFileException e) { com.torrenttunes.server.db.Actions.log.error((\"Couldn't find torrent file, skipping: \" + (song.getString(\"torrent_path\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5481/buggy-version/src.main.java.com.torrenttunes.server.db.Actions.java", "BodyUseAPI": ["java.util.zip.ZipOutputStream.putNextEntry(java.util.zip.ZipEntry)", "java.util.zip.ZipOutputStream.write(byte[],int,int)", "java.util.zip.ZipOutputStream.closeEntry()", "java.io.File.getName()", "org.javalite.activejdbc.Model.getString(java.lang.String)", "java.nio.file.Files.readAllBytes(java.nio.file.Path)", "java.nio.file.Paths.get(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "656a88bfcda1eb459451b2cc68d098477820e58f", "Url": "https://api.github.com/repos/dessalines/torrenttunes-server", "Date": "2015-11-29T15:59:58Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (privacyLogEnabled) { privacyLog.logCommsFw(stanza.getFrom(), stanza.getTo(), payload); } } catch (org.springframework.osgi.service.ServiceUnavailableException e) { log.info(\"Harmless ServiceUnavailableException for PrivacyLog...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/877/buggy-version/platform-infrastructure.comms-frwk.XCCommunicationMgr.src.main.java.org.societies.comm.xmpp.xc.impl.XCCommunicationMgr.java", "BodyUseAPI": ["org.societies.api.comm.xmpp.datatypes.Stanza.getFrom()", "org.societies.api.internal.privacytrust.privacyprotection.model.privacyassessment.IPrivacyLogAppender.logCommsFw(stanza.getFrom(),stanza.getTo(),java.lang.Object)", "org.societies.api.comm.xmpp.datatypes.Stanza.getTo()"], "Fixed commit": "43abc5f7824f7023b7772caa9fe128a58184153a", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2012-11-10T19:53:08Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { writer = new java.io.PrintWriter((\"./frequency/\" + fileName)); } catch (java.io.FileNotFoundException e) { new java.io.File(\"./frequency\").mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5456/buggy-version/src.Index.java", "BodyUseAPI": [], "Fixed commit": "ef2647272dd92dc7be12a8b6c7b7cafdc8d2d64a", "Url": "https://api.github.com/repos/eric123791/121_Assn3", "Date": "2015-05-11T23:45:41Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (org.apache.mahout.common.Pair<org.apache.mahout.math.VarIntWritable, org.apache.mahout.math.VarLongWritable> record : new org.apache.mahout.common.iterator.sequencefile.SequenceFileDirIterable<org.apache.mahout.math.VarIntWritable, org.apache.mahout.math.VarLongWritable>(userIndexPath, org.apache.mahout.common.iterator.sequencefile.PathType.LIST, org.apache.mahout.common.iterator.sequencefile.PathFilters.partFilter(), null, false, conf)) { if (userIndex == (record.getFirst().get())) { userIndexLongID = record.getSecond().get(); if (((rcmFilterSet) != null) && (!(rcmFilterSet.contains(userIndexLongID)))) { return; } } count++; } } catch (java.lang.RuntimeException e) { java.lang.System.out.println((\"usesLongIDs userIndex: \" + userIndex)); java.lang.System.out.println((\"count: \" + count)); e.printStackTrace(); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8878/buggy-version/core.src.main.java.org.apache.mahout.cf.taste.hadoop.als.PredictionMapper.java", "BodyUseAPI": ["org.apache.mahout.common.Pair<org.apache.mahout.math.VarIntWritable, org.apache.mahout.math.VarLongWritable>.getSecond()", "org.apache.mahout.common.Pair<org.apache.mahout.math.VarIntWritable, org.apache.mahout.math.VarLongWritable>.getFirst()", "record.getSecond().get()", "org.apache.mahout.common.iterator.sequencefile.PathFilters.partFilter()", "record.getFirst().get()", "java.util.HashSet<java.lang.Long>.contains(long)"], "Fixed commit": "a249415b8ec9ff53451678becbaeaff40f2317f4", "Url": "https://api.github.com/repos/canojim/mahout", "Date": "2014-05-19T03:09:19Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { versionName = context.getPackageManager().getPackageInfo(context.getPackageName(), 0).versionName; } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/310/buggy-version/atlas-demo.AtlasDemo.app.src.main.java.com.taobao.update.Updater.java", "BodyUseAPI": ["context.getPackageManager().getPackageInfo(context.getPackageName(),int)", "android.content.Context.getPackageName()", "android.content.Context.getPackageManager()"], "Fixed commit": "c71472d0ef97aa59c5e4ecd69839a70ac88e328f", "Url": "https://api.github.com/repos/alibaba/atlas", "Date": "2017-05-11T08:31:27Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { saveHeader = header.getReadGroups().get(0).getLibrary(); } catch (java.lang.Exception ignored) { saveHeader = \"LibraryNameUnavailable\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6205/buggy-version/src.java.picard.analysis.CollectGcBiasMetrics.java", "BodyUseAPI": ["header.getReadGroups().get(0).getLibrary()", "htsjdk.samtools.SAMFileHeader.getReadGroups()", "header.getReadGroups().get(int)"], "Fixed commit": "66c23d588005e95de94c2d76018369658cc0abc9", "Url": "https://api.github.com/repos/broadinstitute/picard", "Date": "2015-05-22T03:46:02Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { handleRequest(request); } catch (java.io.IOException e) { e.printStackTrace(); } finally { clientSocket.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6329/buggy-version/src.server.ServerThread.java", "BodyUseAPI": ["server.ServerThread.handleRequest(server.basics.HttpRequest)"], "Fixed commit": "6fc699014eb30c1a788def36927a32be040deb23", "Url": "https://api.github.com/repos/igorravasi/Memo", "Date": "2015-05-29T21:01:52Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { errorHandler.handleError(error); } catch (java.lang.Throwable ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/8454/buggy-version/src.main.java.net.engio.mbassy.bus.AbstractPubSubSupport.java", "BodyUseAPI": ["net.engio.mbassy.bus.error.IPublicationErrorHandler.handleError(net.engio.mbassy.bus.error.PublicationError)"], "Fixed commit": "b1801811758c2d59a33a51df689e7cd3cc7f738b", "Url": "https://api.github.com/repos/yaronyam/mbassador", "Date": "2015-10-27T21:21:42Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { removePost(position); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7897/buggy-version/app.src.main.java.aschantz.restaurantapp.PostsAdapter.java", "BodyUseAPI": ["aschantz.restaurantapp.PostsAdapter.1.removePost(int)"], "Fixed commit": "5fd4e359e90d913b419ae8eee80734b444a6438d", "Url": "https://api.github.com/repos/abbyschantz/RestaurantApp", "Date": "2016-12-11T21:49:54Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { number = java.lang.Integer.parseInt(text); } catch (java.lang.NumberFormatException nfe) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7218/buggy-version/application.app.src.main.java.isdp.guess_a_song.utils.Validation.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "d03d08e694c88a1933a8ca25d6896eb781f4e399", "Url": "https://api.github.com/repos/grambas/guess-a-song", "Date": "2017-10-09T18:25:16Z"},
{"Line": "=>899", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { client.updateKeypair(sslVsName, keypair); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3852/buggy-version/adapter.zxtm-service.src.main.java.org.openstack.atlas.adapter.stm.StmAdapterImpl.java", "BodyUseAPI": ["org.rackspace.stingray.client.StingrayRestClient.updateKeypair(java.lang.String,org.rackspace.stingray.client.ssl.keypair.Keypair)"], "Fixed commit": "e699d0a27c9a7fa69f1feb874aecca7da004b937", "Url": "https://api.github.com/repos/lbrackspace/atlas-lb", "Date": "2013-07-16T14:31:05Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { _inputStream.setReadahead(0L); } catch (java.lang.UnsupportedOperationException e) { pack.block.blockstore.hdfs.file.BlockFile.LOGGER.debug(\"Can not set readahead for path {}\", path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6862/buggy-version/pack-block.src.main.java.pack.block.blockstore.hdfs.file.BlockFile.java", "BodyUseAPI": ["org.apache.hadoop.fs.FSDataInputStream.setReadahead(long)"], "Fixed commit": "9230eb1f959d9ed17ea8918e4f119f212b112132", "Url": "https://api.github.com/repos/amccurry/pack", "Date": "2017-08-29T13:51:06Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { softwareMgr = softwareMgrs.getSoftwareManagerByClusterName(clusterName); } catch (com.vmware.bdd.exception.SoftwareManagerCollectorException e) { if ((ManagementOperation.PRE_DESTROY.equals(managementOperation)) || (ManagementOperation.DESTROY.equals(managementOperation))) { return org.springframework.batch.repeat.RepeatStatus.FINISHED; } throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3807/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.service.job.software.SoftwareManagementStep.java", "BodyUseAPI": ["com.vmware.bdd.manager.SoftwareManagerCollector.getSoftwareManagerByClusterName(java.lang.String)"], "Fixed commit": "333fc78c38b6d5f37ec77fc65359bc62ced5fd8b", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-09-22T07:31:10Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { lblshcje.setText(cjerec.getMyOwnChengJiaoEr().toString()); } catch (java.lang.NullPointerException e) { lblshcje.setText(\"\ufffd\ufffd\ufffd\ufffd\u00fb\ufffd\u0433\u027d\ufffd\ufffd\ufffd\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6430/buggy-version/src.com.exchangeinfomanager.bankuaifengxi.BanKuaiFengXi.java", "BodyUseAPI": ["javax.swing.JLabel.setText(cjerec.getMyOwnChengJiaoEr().toString())", "com.exchangeinfomanager.bankuaifengxi.ChenJiaoZhanBiInGivenPeriod.getMyOwnChengJiaoEr()", "cjerec.getMyOwnChengJiaoEr().toString()"], "Fixed commit": "b6600995ff13a329264531dd68ddb0ec816d8318", "Url": "https://api.github.com/repos/zimakaimenba/exchange", "Date": "2017-12-17T06:58:15Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((messageHandler.getCount()) == 0) { messageHandler.sendMessage(); messageHandler.getMessage(); queueStatus = \"ok\"; }else { queueStatus = \"error\"; } } catch (java.io.IOException | java.util.concurrent.TimeoutException e) { e.printStackTrace(); queueStatus = \"error\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6590/buggy-version/src.main.java.com.mawsitsit.Service.StatusChecker.java", "BodyUseAPI": ["com.mawsitsit.Service.MessageHandler.getMessage()", "com.mawsitsit.Service.MessageHandler.getCount()", "com.mawsitsit.Service.MessageHandler.sendMessage()"], "Fixed commit": "561c992a7433e2ccd5a1f9a45a1e15dbf9ad55eb", "Url": "https://api.github.com/repos/green-fox-academy/hotel-booking-resource-service", "Date": "2017-07-02T17:10:24Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { doc.delete(); } catch (com.orientechnologies.orient.core.exception.ORecordNotFoundException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4686/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientVertex.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.delete()"], "Fixed commit": "4bc22010fe0dcc5b52edafc8a14270a878df3622", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-01-19T12:55:42Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { de.cketti.library.changelog.ChangeLog cl = new de.cketti.library.changelog.ChangeLog(this); if (cl.isFirstRun()) { cl.getLogDialog().show(); } } catch (java.lang.Exception e) { timber.log.Timber.e(e, \"Unable to process changelog\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1421/buggy-version/k9mail.src.main.java.com.fsck.k9.activity.MessageList.java", "BodyUseAPI": ["de.cketti.library.changelog.ChangeLog.getLogDialog()", "de.cketti.library.changelog.ChangeLog.isFirstRun()", "cl.getLogDialog().show()"], "Fixed commit": "f80010ac83e3e29e4f14a5808282f7d49394f624", "Url": "https://api.github.com/repos/philipwhiuk/k2", "Date": "2017-03-26T15:40:02Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { de.cketti.library.changelog.ChangeLog cl = new de.cketti.library.changelog.ChangeLog(this); if (cl.isFirstRun()) { cl.getLogDialog().show(); } } catch (java.lang.Exception e) { timber.log.Timber.e(e, \"Unable to process changelog\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1421/buggy-version/k9mail.src.main.java.com.fsck.k9.activity.Accounts.java", "BodyUseAPI": ["de.cketti.library.changelog.ChangeLog.isFirstRun()", "cl.getLogDialog().show()", "de.cketti.library.changelog.ChangeLog.getLogDialog()"], "Fixed commit": "f80010ac83e3e29e4f14a5808282f7d49394f624", "Url": "https://api.github.com/repos/philipwhiuk/k2", "Date": "2017-03-26T15:40:02Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.knime.core.node.util.CheckUtils.checkDestinationDirectory(m_directory.getStringValue()); } catch (org.knime.core.node.InvalidSettingsException e) { if ((!(e.getMessage().endsWith(\"does not exist\"))) || (!(m_forceMkdir.getBooleanValue()))) { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3474/buggy-version/org.knime.knip.io.src.org.knime.knip.io.nodes.imgwriter2.ImgWriter2NodeModel.java", "BodyUseAPI": ["org.knime.core.node.defaultnodesettings.SettingsModelString.getStringValue()", "org.knime.core.node.util.CheckUtils.checkDestinationDirectory(m_directory.getStringValue())"], "Fixed commit": "78808cc16f08317f72785c368ce02d1546914d6e", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2015-05-25T13:33:22Z"},
{"Line": "=>1809", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { request.setCharacterEncoding(\"utf-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/698/buggy-version/randomMsgServer.src.main.java.com.tessoft.nearhere.taxi.TaxiController.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setCharacterEncoding(java.lang.String)"], "Fixed commit": "a8e5f3449a79343ff044a9f283fa52c3ade59f82", "Url": "https://api.github.com/repos/kim2509/publicChatServer", "Date": "2015-05-18T12:46:41Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { me.NoChance.PvPManager.Utils.CombatUtils.useFactions = (factions != null) && ((java.lang.Integer.valueOf(factions.getDescription().getVersion().replace(\".\", \"\"))) > 182); } catch (java.lang.NumberFormatException e) { plugin.getLogger().warning(\"Couldn't read Factions version, maybe it's a fork?\"); me.NoChance.PvPManager.Utils.CombatUtils.useFactions = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/56/buggy-version/src.main.java.me.NoChance.PvPManager.Utils.CombatUtils.java", "BodyUseAPI": ["java.lang.Integer.valueOf(factions.getDescription().getVersion().replace(\".\", \"\"))", "factions.getDescription().getVersion().replace(java.lang.String,java.lang.String)", "factions.getDescription().getVersion()", "org.bukkit.plugin.Plugin.getDescription()"], "Fixed commit": "4b2ff67c2f96d1bc64944f55c546abc41ac4fde0", "Url": "https://api.github.com/repos/NoChanceSD/PvPManager", "Date": "2014-11-03T21:34:45Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { temp = polya.Polylist.PolylistFromString(abstractMel); } catch (java.lang.NullPointerException nullExp) { throw new imp.trading.tradingResponseModes.MemorizeMotifsTRM.EmptySoloException(nullExp.getMessage(), nullExp.getCause()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7307/buggy-version/src.imp.trading.tradingResponseModes.MemorizeMotifsTRM.java", "BodyUseAPI": ["polya.Polylist.PolylistFromString(java.lang.String)"], "Fixed commit": "c6a5fc11ac173a4e75c00b99aa1ad34bbf5b10bf", "Url": "https://api.github.com/repos/Impro-Visor/Impro-Visor", "Date": "2017-07-24T17:53:28Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { d = imp.trading.tradingResponseModes.MemorizeMotifsTRM.getDataPointForUser(parts[i], ((parts[0].getEndTime()) + (((windowSize) * (measure)) * i))); imp.cluster.motif.MotifClusterManager.addMotif(d); } catch (imp.trading.tradingResponseModes.MemorizeMotifsTRM.EmptySoloException ex) { java.lang.System.out.println(\"Empty solo played\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7307/buggy-version/src.imp.trading.tradingResponseModes.MemorizeMotifsTRM.java", "BodyUseAPI": ["imp.cluster.motif.MotifClusterManager.addMotif(imp.generalCluster.DataPoint)", "parts[0].getEndTime()", "imp.trading.tradingResponseModes.MemorizeMotifsTRM.getDataPointForUser(parts[i],((parts[0].getEndTime()) + (((windowSize) * (measure)) * i)))"], "Fixed commit": "c6a5fc11ac173a4e75c00b99aa1ad34bbf5b10bf", "Url": "https://api.github.com/repos/Impro-Visor/Impro-Visor", "Date": "2017-07-24T17:53:28Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { outputQueue.put(message); } catch (java.lang.InterruptedException iex) { iex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3836/buggy-version/structr-ui.src.main.java.org.structr.cloud.Sender.java", "BodyUseAPI": ["java.util.concurrent.BlockingQueue<org.structr.cloud.message.Message>.put(org.structr.cloud.message.Message)"], "Fixed commit": "27651c29d8f197c20436d652cf52158067ee4c02", "Url": "https://api.github.com/repos/structr/structr", "Date": "2015-01-18T13:38:38Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(org.greenrobot.eventbus.EventBus.getDefault().isRegistered(subscriber))) { org.greenrobot.eventbus.EventBus.getDefault().register(subscriber); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4788/buggy-version/androidutils.src.main.java.com.mauriciotogneri.androidutils.Bus.java", "BodyUseAPI": ["org.greenrobot.eventbus.EventBus.getDefault()", "org.greenrobot.eventbus.EventBus.getDefault().isRegistered(java.lang.Object)", "org.greenrobot.eventbus.EventBus.getDefault().register(java.lang.Object)", "org.greenrobot.eventbus.EventBus.getDefault()"], "Fixed commit": "a3461bab02daa8f6564d997a1f6e8a030bbed24d", "Url": "https://api.github.com/repos/mauriciotogneri/android-utils", "Date": "2017-05-19T18:42:25Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (org.greenrobot.eventbus.EventBus.getDefault().isRegistered(subscriber)) { org.greenrobot.eventbus.EventBus.getDefault().unregister(subscriber); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/4788/buggy-version/androidutils.src.main.java.com.mauriciotogneri.androidutils.Bus.java", "BodyUseAPI": ["org.greenrobot.eventbus.EventBus.getDefault().unregister(java.lang.Object)", "org.greenrobot.eventbus.EventBus.getDefault()", "org.greenrobot.eventbus.EventBus.getDefault().isRegistered(java.lang.Object)", "org.greenrobot.eventbus.EventBus.getDefault()"], "Fixed commit": "a3461bab02daa8f6564d997a1f6e8a030bbed24d", "Url": "https://api.github.com/repos/mauriciotogneri/android-utils", "Date": "2017-05-19T18:42:25Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(de.tohemi.justparty.database.controller.DBUserController.getInstance().userIsRegistered(email))) { de.tohemi.justparty.database.controller.DBUserController.getInstance().addUser(de.tohemi.justparty.datamodel.user.UserFactory.create(email), UserRoles.NONUSER, \"\"); } } catch (de.tohemi.justparty.businesslogic.UserNotFoundException e) { de.tohemi.justparty.util.SystemProperties.getLogger().logException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1518/buggy-version/src.main.java.de.tohemi.justparty.businesslogic.user.UserHandler.java", "BodyUseAPI": ["de.tohemi.justparty.database.controller.DBUserController.getInstance().userIsRegistered(java.lang.String)", "de.tohemi.justparty.datamodel.user.UserFactory.create(java.lang.String)", "de.tohemi.justparty.database.controller.DBUserController.getInstance().addUser(de.tohemi.justparty.datamodel.user.UserFactory.create(email),UserRoles.NONUSER,java.lang.String)", "de.tohemi.justparty.database.controller.DBUserController.getInstance()", "de.tohemi.justparty.database.controller.DBUserController.getInstance()"], "Fixed commit": "356ee59385d6fd9d7b444de5410efdedf2bf965d", "Url": "https://api.github.com/repos/tohemidevelopment/justparty", "Date": "2016-06-14T14:21:57Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { onRegister(view); } catch (java.lang.Exception e) { android.widget.Toast.makeText(getActivity(), \"Empty!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3982/buggy-version/app.src.main.java.sugoi.android.amazfun.ui.fragments.RegisterFragment.java", "BodyUseAPI": ["sugoi.android.amazfun.ui.fragments.RegisterFragment.onRegister(android.view.View)"], "Fixed commit": "834b022d59031298373793f11b7243bf8c107ccb", "Url": "https://api.github.com/repos/Sugooi/AmazFun", "Date": "2017-09-22T17:01:39Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { logout(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/3982/buggy-version/app.src.main.java.sugoi.android.amazfun.ui.activities.UserListingActivity.java", "BodyUseAPI": ["sugoi.android.amazfun.ui.activities.UserListingActivity.logout()"], "Fixed commit": "834b022d59031298373793f11b7243bf8c107ccb", "Url": "https://api.github.com/repos/Sugooi/AmazFun", "Date": "2017-09-22T17:01:39Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { departTime = new java.sql.Timestamp(sdf.parse(departureTime).getTime()); } catch (java.text.ParseException e) { e.printStackTrace(); java.util.Date date = new java.util.Date(); departTime = new java.sql.Timestamp(date.getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2426/buggy-version/src.main.java.com.thumbsup.coolname.RideController.java", "BodyUseAPI": ["java.util.Date.getTime()", "java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "1a42d52d0ef03e455145c0b37f91f7b648995f7b", "Url": "https://api.github.com/repos/destroyerdust/SWEN-343-Group6-CoolName", "Date": "2014-11-10T05:36:47Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { buttonDefault.setEnabled((((_default) != null) && (!(getValue().equals(_default))))); } catch (java.lang.Exception e) { buttonDefault.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/7263/buggy-version/src.main.de.linearbits.preferences.Editor.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Button.setEnabled(boolean)", "T.equals(T)", "de.linearbits.preferences.Editor<T>.getValue()"], "Fixed commit": "b118b6e99aa4a099a4889346a534efe230c99dca", "Url": "https://api.github.com/repos/prasser/swtpreferences", "Date": "2015-02-05T11:26:58Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return backup.resolve(name).get(); } catch (java.lang.InterruptedException | java.util.concurrent.ExecutionException ex) { return backup.uuid(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5496/buggy-version/src.main.java.com.github.acquized.retile.cache.impl.Offline.java", "BodyUseAPI": ["com.github.acquized.retile.cache.impl.McAPICanada.resolve(java.lang.String)", "backup.resolve(name).get()"], "Fixed commit": "417b71d82956548babcd19cd77be341a0516761b", "Url": "https://api.github.com/repos/Acquized/ProjectRetile", "Date": "2016-11-19T21:24:31Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return backup.resolve(uuid).get(); } catch (java.lang.InterruptedException | java.util.concurrent.ExecutionException ex) { return backup.username(uuid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5496/buggy-version/src.main.java.com.github.acquized.retile.cache.impl.Offline.java", "BodyUseAPI": ["backup.resolve(uuid).get()", "com.github.acquized.retile.cache.impl.McAPICanada.resolve(java.util.UUID)"], "Fixed commit": "417b71d82956548babcd19cd77be341a0516761b", "Url": "https://api.github.com/repos/Acquized/ProjectRetile", "Date": "2016-11-19T21:24:31Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(10000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5278/buggy-version/src.main.java.com.liuyun.doubao.io.file.FilePathWatcher.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "db1482253d4d69db44e122bb0f2b13a51c7439e3", "Url": "https://api.github.com/repos/coraldane/doubao", "Date": "2016-08-02T15:51:38Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { panel.icon(Icons.FILE); } catch (java.lang.NoSuchMethodError ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/2822/buggy-version/src.mobi.hsz.idea.gitignore.daemon.MissingGitignoreNotificationProvider.java", "BodyUseAPI": ["com.intellij.ui.EditorNotificationPanel.icon(Icons.FILE)"], "Fixed commit": "93ea6b74af41ab3fa415c719f658997ecc18befd", "Url": "https://api.github.com/repos/hsz/idea-gitignore", "Date": "2014-07-08T14:53:34Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String queryString = et_searchById.getEditableText().toString(); if ((queryString != null) && (!(queryString.equals(\"\")))) { outState.putString(((com.mifos.mifosxdroid.online.ClientSearchFragment.TAG) + (et_searchById.getId())), queryString); } } catch (java.lang.NullPointerException npe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/1362/buggy-version/mifosng-android.src.main.java.com.mifos.mifosxdroid.online.ClientSearchFragment.java", "BodyUseAPI": ["et_searchById.getEditableText().toString()", "android.os.Bundle.putString(((com.mifos.mifosxdroid.online.ClientSearchFragment.TAG) + (et_searchById.getId())),java.lang.String)", "java.lang.String.equals(java.lang.String)", "android.widget.EditText.getEditableText()", "android.widget.EditText.getId()"], "Fixed commit": "94712f014b413abe7878ca4893c97d245ab4ac8a", "Url": "https://api.github.com/repos/dikshabhatia/android-client", "Date": "2014-11-19T21:23:03Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sw.close(); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/6949/buggy-version/src.main.java.org.jenkinsci.plugins.vsphere.builders.Clone.java", "BodyUseAPI": ["java.io.StringWriter.close()"], "Fixed commit": "d1d9c130be4d012e190fe36bf419cd33303658a5", "Url": "https://api.github.com/repos/phucyall/vsphere-cloud-plugin", "Date": "2017-03-28T20:46:14Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { bufferedImage = javax.imageio.ImageIO.read(new java.io.File(edu.asu.voctec.scenario_1.ExitScreen.BACKGROUND)); texture = org.newdawn.slick.util.BufferedImageUtil.getTexture(\"\", bufferedImage); image = new org.newdawn.slick.Image(texture.getImageWidth(), texture.getImageHeight()); image.setTexture(texture); this.backgroundImage = image; } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5453/buggy-version/src.main.java.edu.asu.voctec.scenario_1.ExitScreen.java", "BodyUseAPI": ["org.newdawn.slick.util.BufferedImageUtil.getTexture(java.lang.String,java.awt.image.BufferedImage)", "org.newdawn.slick.Image.setTexture(org.newdawn.slick.opengl.Texture)", "org.newdawn.slick.opengl.Texture.getImageHeight()", "javax.imageio.ImageIO.read(java.io.File)", "org.newdawn.slick.opengl.Texture.getImageWidth()"], "Fixed commit": "3a568a515b42a98b7c17b4aa2726a8a1656d15a4", "Url": "https://api.github.com/repos/VoctecTroubleshooting/Game", "Date": "2014-05-19T09:38:34Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { bufferedImage = javax.imageio.ImageIO.read(new java.io.File(edu.asu.voctec.scenario_1.IntroScreen.BACKGROUND)); texture = org.newdawn.slick.util.BufferedImageUtil.getTexture(\"\", bufferedImage); image = new org.newdawn.slick.Image(texture.getImageWidth(), texture.getImageHeight()); image.setTexture(texture); this.backgroundImage = image; } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V37/5453/buggy-version/src.main.java.edu.asu.voctec.scenario_1.IntroScreen.java", "BodyUseAPI": ["org.newdawn.slick.util.BufferedImageUtil.getTexture(java.lang.String,java.awt.image.BufferedImage)", "org.newdawn.slick.opengl.Texture.getImageHeight()", "org.newdawn.slick.opengl.Texture.getImageWidth()", "javax.imageio.ImageIO.read(java.io.File)", "org.newdawn.slick.Image.setTexture(org.newdawn.slick.opengl.Texture)"], "Fixed commit": "3a568a515b42a98b7c17b4aa2726a8a1656d15a4", "Url": "https://api.github.com/repos/VoctecTroubleshooting/Game", "Date": "2014-05-19T09:38:34Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bRatio = rom.readByte(); rom.internalOffset += 3; pPokemonData = rom.getPointer(); aWildPokemon = new us.plxhack.MEH.MapElements.WildPokemon[us.plxhack.MEH.MapElements.WildPokemonData.numPokemon[type.ordinal()]]; rom.Seek(((int) (pPokemonData))); for (int i = 0; i < (us.plxhack.MEH.MapElements.WildPokemonData.numPokemon[type.ordinal()]); i++) { aWildPokemon[i] = new us.plxhack.MEH.MapElements.WildPokemon(rom); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/9240/buggy-version/src.us.plxhack.MEH.MapElements.WildPokemonData.java", "BodyUseAPI": ["org.zzl.minegaming.GBAUtils.GBARom.getPointer()", "org.zzl.minegaming.GBAUtils.GBARom.Seek(long)", "us.plxhack.MEH.MapElements.WildDataType.ordinal()", "org.zzl.minegaming.GBAUtils.GBARom.readByte()", "us.plxhack.MEH.MapElements.WildDataType.ordinal()"], "Fixed commit": "e563b398dc08e057fe13dce371c912f38622bcab", "Url": "https://api.github.com/repos/shinyquagsire23/MEH", "Date": "2014-02-06T22:22:03Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { img_ID = ((java.lang.Integer) (imgbtn_currentDrink.getTag())); } catch (java.lang.NullPointerException e) { img_ID = 0; android.util.Log.wtf(\"OnDestroy\", (e + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6079/buggy-version/RememBeer.src.com.isnb.remembeer.Evening.java", "BodyUseAPI": ["android.widget.ImageButton.getTag()"], "Fixed commit": "167e58f6792184099b3807a38d382be6e96b15b4", "Url": "https://api.github.com/repos/INS8B/RememBeer", "Date": "2014-06-04T13:21:43Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { encodeDate = java.net.URLEncoder.encode(date, \"utf-8\"); url = ((((com.kcb.common.server.UrlUtil.url_tch_checkin_getresult) + \"?tchid=\") + tchId) + \"&date=\") + encodeDate; } catch (java.io.UnsupportedEncodingException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6083/buggy-version/kcb.src.com.kcb.common.server.UrlUtil.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "dabf9c61c7c03e38a36c620530029a32574d3b5b", "Url": "https://api.github.com/repos/kcbTeam/kcb", "Date": "2015-08-06T02:26:13Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { size = org.apache.commons.io.FileUtils.sizeOfDirectory(directory); } catch (java.lang.Exception e) { com.stratelia.silverpeas.silvertrace.SilverTrace.error(\"silverstatistics\", \"DirectorySizeComputer.call\", \"root.EX_CANT_READ_FILE\", (\"Directory : \" + (directory.getAbsolutePath())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8834/buggy-version/ejb-core.silverstatistics.src.main.java.org.silverpeas.silverstatistics.volume.DirectorySizeComputer.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)"], "Fixed commit": "d8338eb816fd52b754637af3790b0bb2886dfd9d", "Url": "https://api.github.com/repos/CecileBONIN/Silverpeas-Core", "Date": "2014-04-23T13:06:33Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int index = (java.lang.Integer.parseInt(name.substring(0, name.indexOf('.')))) - 1; images.set(index, new edu.cmu.mat.scores.Image(javax.imageio.ImageIO.read(image))); } catch (java.lang.Exception e) { java.lang.System.err.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8555/buggy-version/score.src.main.java.edu.cmu.mat.scores.Score.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int,int)", "java.util.List<edu.cmu.mat.scores.Image>.set(int,edu.cmu.mat.scores.Image)", "javax.imageio.ImageIO.read(java.io.File)", "java.lang.String.indexOf(char)"], "Fixed commit": "d6886bc4b32e171568c72a9af5608c0bf50e062f", "Url": "https://api.github.com/repos/DeadHeadRussell/livescoredisplay", "Date": "2015-01-16T19:40:51Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((android.view.ViewGroup) (mRootView.getParent())).removeView(mRootView); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7412/buggy-version/src.com.PATHomei.yanyu.levelone.BeautifulRingFragment.java", "BodyUseAPI": ["android.view.ViewGroup.getParent()", "((android.view.ViewGroup) (mRootView.getParent())).removeView(android.view.ViewGroup)"], "Fixed commit": "15ccfd9989e20b9c2ffd55aff4460ec29e07ea6c", "Url": "https://api.github.com/repos/seedzi/PATHomei_eclipse", "Date": "2015-07-04T11:23:05Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((android.view.ViewGroup) (mRootView.getParent())).removeView(mRootView); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7412/buggy-version/src.com.PATHomei.yanyu.levelone.MallFragment.java", "BodyUseAPI": ["android.view.ViewGroup.getParent()", "((android.view.ViewGroup) (mRootView.getParent())).removeView(android.view.ViewGroup)"], "Fixed commit": "15ccfd9989e20b9c2ffd55aff4460ec29e07ea6c", "Url": "https://api.github.com/repos/seedzi/PATHomei_eclipse", "Date": "2015-07-04T11:23:05Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((android.view.ViewGroup) (mRootView.getParent())).removeView(mRootView); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7412/buggy-version/src.com.PATHomei.yanyu.levelone.HomeFragment.java", "BodyUseAPI": ["android.view.ViewGroup.getParent()", "((android.view.ViewGroup) (mRootView.getParent())).removeView(android.view.ViewGroup)"], "Fixed commit": "15ccfd9989e20b9c2ffd55aff4460ec29e07ea6c", "Url": "https://api.github.com/repos/seedzi/PATHomei_eclipse", "Date": "2015-07-04T11:23:05Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((android.view.ViewGroup) (mRootView.getParent())).removeView(mRootView); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7412/buggy-version/src.com.PATHomei.yanyu.levelone.MechanismFragment.java", "BodyUseAPI": ["((android.view.ViewGroup) (mRootView.getParent())).removeView(android.view.ViewGroup)", "android.view.ViewGroup.getParent()"], "Fixed commit": "15ccfd9989e20b9c2ffd55aff4460ec29e07ea6c", "Url": "https://api.github.com/repos/seedzi/PATHomei_eclipse", "Date": "2015-07-04T11:23:05Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.os.Bundle meta = manager.getApplicationInfo(activity.getPackageName(), PackageManager.GET_META_DATA).metaData; if (meta != null) { leadBoltPackage = meta.getString(\"LEADBOLT_PACKAGE\"); } } catch (java.lang.Exception e) { android.util.Log.d(\"EXCEPTION\", (\"\" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5056/buggy-version/android.LeadBoltPlugin.java", "BodyUseAPI": ["android.content.pm.PackageManager.getApplicationInfo(activity.getPackageName(),PackageManager.GET_META_DATA)", "android.os.Bundle.getString(java.lang.String)", "android.app.Activity.getPackageName()"], "Fixed commit": "ae6ca599bcccef1d891798b25939386f46d07a67", "Url": "https://api.github.com/repos/gameclosure/leadbolt", "Date": "2013-07-11T19:08:25Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { nz.co.lolnet.james137137.FactionChat.FactionChat.factionsAPI = ((nz.co.lolnet.james137137.FactionChat.FactionsAPI.FactionsAPI) (java.lang.Class.forName(\"nz.co.lolnet.james137137.FactionChat.FactionsAPI.FactionsAPI_2_10_0\").getConstructor().newInstance())); } catch (java.lang.Exception ex) { java.util.logging.Logger.getLogger(nz.co.lolnet.james137137.FactionChat.FactionChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2387/buggy-version/src.main.java.nz.co.lolnet.james137137.FactionChat.FactionChat.java", "BodyUseAPI": ["java.lang.Class<?>.getConstructor()", "java.lang.reflect.Constructor<?>.newInstance()", "java.lang.Class.forName(java.lang.String)"], "Fixed commit": "ec205e3c93aa6968c95f30928ff87b751cdeac17", "Url": "https://api.github.com/repos/James137137/FactionChat", "Date": "2017-03-21T06:08:28Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { nz.co.lolnet.james137137.FactionChat.FactionChat.factionsAPI = ((nz.co.lolnet.james137137.FactionChat.FactionsAPI.FactionsAPI) (java.lang.Class.forName(\"nz.co.lolnet.james137137.FactionChat.FactionsAPI.FactionsAPI_2_9_0\").getConstructor().newInstance())); } catch (java.lang.Exception ex) { java.util.logging.Logger.getLogger(nz.co.lolnet.james137137.FactionChat.FactionChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2387/buggy-version/src.main.java.nz.co.lolnet.james137137.FactionChat.FactionChat.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)", "java.lang.Class<?>.getConstructor()", "java.lang.reflect.Constructor<?>.newInstance()"], "Fixed commit": "ec205e3c93aa6968c95f30928ff87b751cdeac17", "Url": "https://api.github.com/repos/James137137/FactionChat", "Date": "2017-03-21T06:08:28Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.connect(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4356/buggy-version/demos.eve_gol_demo.src.main.java.com.almende.eve.goldemo.Cell.java", "BodyUseAPI": ["com.almende.eve.goldemo.Cell.connect()"], "Fixed commit": "2d059c6a5a6a2b21850ea0ccf08f2098ad905212", "Url": "https://api.github.com/repos/almende/eve", "Date": "2014-07-02T09:33:32Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { init(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1879/buggy-version/AWSHandler.java", "BodyUseAPI": ["dsp1_v1.AWSHandler.init()"], "Fixed commit": "ec96993d4122ba3d1733c336cb93f695faee449e", "Url": "https://api.github.com/repos/goovsgoo/dsp1", "Date": "2016-04-17T11:51:37Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { project_id = beeCount.project_id; } catch (java.lang.NullPointerException e) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1602/buggy-version/beecount.src.main.java.com.knirirr.beecount.CountingActivity.java", "BodyUseAPI": [], "Fixed commit": "705600df90502f7ec00b079f2694e655962cc987", "Url": "https://api.github.com/repos/knirirr/BeeCount", "Date": "2014-06-13T07:17:27Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { latch.await(); } catch (java.lang.InterruptedException ex) { java.util.logging.Logger.getLogger(jsat.linear.distancemetrics.WeightedEuclideanDistance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4122/buggy-version/JSAT.src.jsat.linear.distancemetrics.WeightedEuclideanDistance.java", "BodyUseAPI": ["java.util.concurrent.CountDownLatch.await()"], "Fixed commit": "e514325cf638d9e2848ea7be43c1eb18f3cf81dd", "Url": "https://api.github.com/repos/TKlerx/JSAT", "Date": "2015-05-20T03:45:15Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.FileOutputStream file = openFileOutput(\"Recent\", thelawsofphysics.physicsapp.MODE_APPEND); file.close(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2210/buggy-version/app.src.main.java.thelawsofphysics.physicsapp.Equation.java", "BodyUseAPI": ["java.io.FileOutputStream.close()", "thelawsofphysics.physicsapp.Equation.openFileOutput(java.lang.String,thelawsofphysics.physicsapp.MODE_APPEND)"], "Fixed commit": "ca3c0840fa1e9629ad7ea42f1f22f3ea74b0ae29", "Url": "https://api.github.com/repos/Angelyr/PhysicsApp", "Date": "2017-11-27T19:20:08Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.zavteam.plugins.configs.MainConfig.config = plugin.getConfig(); } catch (java.lang.Exception e) { e.printStackTrace(); plugin.log.severe(\"There was an error in the config and this plugin is shutting down to prevent damages.\"); plugin.log.severe(\"Please check the console error and your config for errors.\"); plugin.disableZavAutoMessager(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8588/buggy-version/src.com.zavteam.plugins.Configs.MainConfig.java", "BodyUseAPI": ["com.zavteam.plugins.Main.getConfig()"], "Fixed commit": "c748e8dd6019e23226247deb0e91bb86f8dd69e8", "Url": "https://api.github.com/repos/ZavCoding/ZavAutoMessager", "Date": "2012-05-28T05:44:56Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return ba.divide(bb); } catch (java.lang.ArithmeticException ignored) { final int precision = (java.lang.Math.max(ba.precision(), bb.precision())) + 10; java.math.BigDecimal result = ba.divide(bb, new java.math.MathContext(precision)); final int scale = java.lang.Math.max(java.lang.Math.max(ba.scale(), bb.scale()), 10); if ((result.scale()) > scale) result = result.setScale(scale, java.math.BigDecimal.ROUND_HALF_UP); return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8293/buggy-version/gremlin-core.src.main.java.org.apache.tinkerpop.gremlin.process.traversal.NumberHelper.java", "BodyUseAPI": ["java.math.BigDecimal.divide(java.math.BigDecimal)"], "Fixed commit": "a612f5f1f642555615494168c392c7c135bd67bc", "Url": "https://api.github.com/repos/apache/tinkerpop", "Date": "2017-07-25T18:01:21Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.apache.commons.math3.distribution.NormalDistribution d = new org.apache.commons.math3.distribution.NormalDistribution(getFeature_map().get(bssid).get(room).mean.doubleValue(), getFeature_map().get(bssid).get(room).variance.doubleValue()); return new java.lang.Float(d.cumulativeProbability(java.lang.Integer.parseInt(level))); } catch (org.apache.commons.math3.exception.NotStrictlyPositiveException e) { return 0.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2087/buggy-version/app.src.main.java.at.schuschu.android.rssilogger.FeatureMapGauss.java", "BodyUseAPI": ["getFeature_map().get(bssid).get(java.lang.String)", "getFeature_map().get(bssid).get(java.lang.String)", "at.schuschu.android.rssilogger.FeatureMapGauss.getFeature_map()", "at.schuschu.android.rssilogger.FeatureMapGauss.getFeature_map()", "com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.internal.LinkedTreeMap<java.lang.String, at.schuschu.android.rssilogger.FeatureMapGauss.Gaussian>>.get(java.lang.String)", "com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.internal.LinkedTreeMap<java.lang.String, at.schuschu.android.rssilogger.FeatureMapGauss.Gaussian>>.get(java.lang.String)", "org.apache.commons.math3.distribution.NormalDistribution.cumulativeProbability(int)", "getFeature_map().get(bssid).get(room).mean.doubleValue()", "getFeature_map().get(bssid).get(room).variance.doubleValue()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "361074f3c4e29c6b55aa6f44b409f450e6f1edbc", "Url": "https://api.github.com/repos/schuschu/SPS2014-RSSI", "Date": "2014-07-30T23:58:45Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String parms = \"status=\" + (java.net.URLEncoder.encode(s, \"UTF-8\")); if (((MouseApp.curtootidx) >= 0) && ((MouseApp.main.toots.get(MouseApp.curtootidx).id) >= 0)) { java.lang.System.out.println((\"replying to toot \" + (java.lang.Integer.toString(MouseApp.main.toots.get(MouseApp.curtootidx).id)))); parms += \"&in_reply_to_id=\" + (java.lang.Integer.toString(MouseApp.main.toots.get(MouseApp.curtootidx).id)); } final java.lang.String js = ((((((((((((\"var xhr = new XMLHttpRequest(); \" + \"xhr.open('POST', '\") + surl) + \"', true); \") + \"xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded'); \") + \"xhr.setRequestHeader('Authorization', 'Bearer \") + (MouseApp.access_token)) + \"'); \") + \"xhr.onload = function () { window.INTERFACE.processContent('DETOK '+this.responseText); }; \") + \"function deterror(evt) { window.INTERFACE.processContent('DETKO'); }; \") + \"xhr.addEventListener('error', deterror); \") + \"xhr.send('\") + parms) + \"'); \"; java.lang.System.out.println((\"SENDJS \" + js)); fr.xtof54.mousetodon.MouseApp.javascriptCmd((\"javascript:\" + js), next); } catch (java.lang.Exception e) { e.printStackTrace(); MouseApp.main.message(\"ERROR encoding\"); next.run(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4194/buggy-version/src.fr.xtof54.mousetodon.Connect.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "MouseApp.main.toots.get(MouseApp.curtootidx)", "java.lang.Integer.toString(MouseApp.main.toots.get(MouseApp.curtootidx).id)", "java.io.PrintStream.println((\"replying to toot \" + (java.lang.Integer.toString(MouseApp.main.toots.get(MouseApp.curtootidx).id))))", "java.lang.Integer.toString(MouseApp.main.toots.get(MouseApp.curtootidx).id)", "MouseApp.main.toots.get(MouseApp.curtootidx)", "MouseApp.main.toots.get(MouseApp.curtootidx)", "fr.xtof54.mousetodon.MouseApp.javascriptCmd(java.lang.String,fr.xtof54.mousetodon.NextAction)"], "Fixed commit": "0704de0f6b34f2be41b993d1037cb0966c8242d2", "Url": "https://api.github.com/repos/cerisara/mousetodon", "Date": "2017-05-01T16:22:03Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { inputStream = org.ngrinder.infra.AgentConfig.class.getResourceAsStream(name); if (inputStream != null) { return org.apache.commons.io.IOUtils.toString(inputStream); }else { return \"\"; } } finally { org.apache.commons.io.IOUtils.closeQuietly(inputStream); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1586/buggy-version/ngrinder-core.src.main.java.org.ngrinder.infra.AgentConfig.java", "BodyUseAPI": ["java.lang.Class.getResourceAsStream(java.lang.String)", "org.apache.commons.io.IOUtils.toString(java.io.InputStream)"], "Fixed commit": "0ad29cb6846a9d7213b39518b355febcbdcf65f5", "Url": "https://api.github.com/repos/nhnopensource/ngrinder", "Date": "2013-12-17T09:34:08Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.json.JSONArray arr = new org.json.JSONArray(payload); int arrSize = arr.length(); for (int i = 0; i < arrSize; ++i) { org.secmem.remoteroid.lib.data.Device device = org.secmem.remoteroid.lib.data.Device.fromJson(arr.getJSONObject(i)); list.add(device); } } catch (org.json.JSONException e) { org.secmem.remoteroid.lib.data.Device device = org.secmem.remoteroid.lib.data.Device.fromJson(new org.json.JSONObject(payload)); list.add(device); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6204/buggy-version/RemoteroidServerUniversal_lib.src.org.secmem.remoteroid.lib.request.Response.java", "BodyUseAPI": ["org.secmem.remoteroid.lib.data.Device.fromJson(arr.getJSONObject(i))", "org.json.JSONArray.getJSONObject(int)", "java.util.ArrayList<org.secmem.remoteroid.lib.data.Device>.add(org.secmem.remoteroid.lib.data.Device)", "org.json.JSONArray.length()"], "Fixed commit": "67d1272ead5504721808b9f8f34aa8275e8a8f59", "Url": "https://api.github.com/repos/kunny/RemoteroidServerUniversal", "Date": "2012-08-29T14:07:52Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ownerAccount = org.secmem.remoteroid.lib.data.Account.fromJson(json.getJSONObject(\"ownerAccount\")); } catch (org.json.JSONException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6204/buggy-version/RemoteroidServerUniversal_lib.src.org.secmem.remoteroid.lib.data.Device.java", "BodyUseAPI": ["org.secmem.remoteroid.lib.data.Account.fromJson(json.getJSONObject(\"ownerAccount\"))", "org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "67d1272ead5504721808b9f8f34aa8275e8a8f59", "Url": "https://api.github.com/repos/kunny/RemoteroidServerUniversal", "Date": "2012-08-29T14:07:52Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ownerAccount = org.secmem.remoteroid.lib.data.Account.fromJson(json.getJSONObject(\"ownerAccount\")); } catch (org.json.JSONException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6204/buggy-version/RemoteroidServerUniversal_lib.src.org.secmem.remoteroid.lib.data.Device.java", "BodyUseAPI": ["org.secmem.remoteroid.lib.data.Account.fromJson(json.getJSONObject(\"ownerAccount\"))", "org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "67d1272ead5504721808b9f8f34aa8275e8a8f59", "Url": "https://api.github.com/repos/kunny/RemoteroidServerUniversal", "Date": "2012-08-29T14:07:52Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.Enumeration<java.net.NetworkInterface> b = java.net.NetworkInterface.getNetworkInterfaces(); while (b.hasMoreElements()) { for (java.net.InterfaceAddress f : b.nextElement().getInterfaceAddresses()) if (f.getAddress().isSiteLocalAddress()) myIp = f.getAddress().getHostAddress(); } } catch (java.net.SocketException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7875/buggy-version/gossiping.src.main.java.com.google.code.gossip.GossipService.java", "BodyUseAPI": ["java.net.NetworkInterface.getInterfaceAddresses()", "java.net.NetworkInterface.getNetworkInterfaces()", "java.util.Enumeration<java.net.NetworkInterface>.hasMoreElements()", "java.net.InetAddress.getHostAddress()", "java.util.Enumeration<java.net.NetworkInterface>.nextElement()", "java.net.InetAddress.isSiteLocalAddress()", "java.net.InterfaceAddress.getAddress()", "java.net.InterfaceAddress.getAddress()"], "Fixed commit": "408365181b08f25fc97e9e4c12e17f43aca0ea1c", "Url": "https://api.github.com/repos/lucarin91/Distributed-Enabling-Platforms", "Date": "2015-11-26T15:02:47Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.google.gson.JsonArray rootArray = ccm.pay2spawn.JSON_PARSER.parse(new java.io.FileReader(file)).getAsJsonArray(); for (com.google.gson.JsonElement element : rootArray) { ccm.pay2spawn.util.Reward reward = new ccm.pay2spawn.util.Reward(element.getAsJsonObject()); map.put(reward.getAmount(), reward); } } catch (java.lang.Exception e) { ccm.pay2spawn.Pay2Spawn.getLogger().severe(\"ERROR TYPE 2: There is an error in your config file.\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5196/buggy-version/src.main.java.ccm.pay2spawn.RewardsDB.java", "BodyUseAPI": ["ccm.pay2spawn.JSON_PARSER.parse(java.io.FileReader)", "com.google.gson.JsonElement.getAsJsonObject()", "ccm.pay2spawn.JSON_PARSER.parse(new java.io.FileReader(file)).getAsJsonArray()", "ccm.pay2spawn.util.Reward.getAmount()", "com.google.common.collect.HashMultimap<java.lang.Double, ccm.pay2spawn.util.Reward>.put(reward.getAmount(),ccm.pay2spawn.util.Reward)"], "Fixed commit": "0726be541f2632f9269297fc6766abe1359ba4c9", "Url": "https://api.github.com/repos/CCM-Modding/Pay2Spawn", "Date": "2014-01-11T23:44:15Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ibanValid = nl.garvelink.iban.Modulo97.verifyCheckDigits(etIBAN.getText().toString()); } catch (java.lang.IllegalArgumentException e) { ibanValid = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5373/buggy-version/app.src.main.java.fi.uta.student.h.tuuli.kahkonen.iban_notebook.AddNewIBANActivity.java", "BodyUseAPI": ["etIBAN.getText().toString()", "android.widget.EditText.getText()", "nl.garvelink.iban.Modulo97.verifyCheckDigits(etIBAN.getText().toString())"], "Fixed commit": "33bccb59f0a07bfe19574c9f833a9597d616c601", "Url": "https://api.github.com/repos/tuulik/IBAN-notebook", "Date": "2016-01-31T18:33:21Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.Collections.sort(mutation_list, hrmd.validation.GenomicPositionValidator.MutationByChromComparator); } catch (java.lang.IllegalArgumentException e) { java.lang.String err = java.lang.String.format(\"Error in [GenomicPositionValidator.java]: Problems sorting the mutations.\\n\\n%s\\n\", e.getMessage()); hrmd.gui.GuiUtil.showTextResults(\"Error\", err); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1466/buggy-version/hrmdgui.src.hrmd.validation.GenomicPositionValidator.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.List<hrmd.mutation.Mutation>,java.util.Comparator<hrmd.mutation.Mutation>)"], "Fixed commit": "32be3072335739011baef1aa6cf36698d9efccd7", "Url": "https://api.github.com/repos/RobinsonGroup/HRMD", "Date": "2015-01-24T22:21:49Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { srcCh = new java.io.FileInputStream(temp).getChannel(); dstCh = new java.io.FileOutputStream(f).getChannel(); dstCh.transferFrom(srcCh, 0, srcCh.size()); } finally { srcCh.close(); dstCh.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7883/buggy-version/src.main.java.org.jtrfp.trcl.core.TRConfiguration.java", "BodyUseAPI": ["java.io.FileOutputStream.getChannel()", "java.io.FileInputStream.getChannel()", "java.nio.channels.FileChannel.size()", "java.nio.channels.FileChannel.transferFrom(java.nio.channels.FileChannel,int,long)"], "Fixed commit": "6911c2cf4f9a51ed9912ffc25613553d55672ff9", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-12-23T08:32:18Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pubSubManager.createNode(GeoLocation.NAMESPACE); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2724/buggy-version/smack-extensions.src.main.java.org.jivesoftware.smackx.geoloc.GeoLocationManager.java", "BodyUseAPI": ["org.jivesoftware.smackx.pubsub.PubSubManager.createNode(GeoLocation.NAMESPACE)"], "Fixed commit": "2e0d925b04abc8640329eef72e3e84da1315dc67", "Url": "https://api.github.com/repos/esl/Smack", "Date": "2017-02-02T19:45:13Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (org.java_websocket.WebSocket webSocket : webSockets) { webSocket.send(com.alibaba.fastjson.JSON.toJSONString(userMessage)); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2314/buggy-version/src.main.java.onefengma.demo.rx.UserMessageServer.java", "BodyUseAPI": ["com.alibaba.fastjson.JSON.toJSONString(onefengma.demo.rx.UserMessageServer.UserMessage)", "org.java_websocket.WebSocket.send(com.alibaba.fastjson.JSON.toJSONString(userMessage))"], "Fixed commit": "d25eac32b575ded141c79f96b928c2ce181d1a0a", "Url": "https://api.github.com/repos/chufengma/b2b", "Date": "2016-11-25T15:54:13Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Object pAttr = pgraph.getEdgeAttr(patternNodes[si], pneigh); java.lang.Object tAttr = tgraph.getEdgeAttr(tnode, matchedNodes[pneigh]); if (tgraph.isEdge(tnode, matchedNodes[pneigh])) { if (!(tgraph.compatibleEdge(pAttr, tAttr))) return false; }else return false; } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7850/buggy-version/src.netmatch.algorithm.RIMatch.java", "BodyUseAPI": ["netmatch.algorithm.Graph.isEdge(int,int)", "netmatch.algorithm.Graph.getEdgeAttr(int,int)", "netmatch.algorithm.Graph.getEdgeAttr(int,int)", "netmatch.algorithm.Graph.compatibleEdge(java.lang.Object,java.lang.Object)"], "Fixed commit": "1e23f259fb8b7b0fb510a46b58bea3936f5246c1", "Url": "https://api.github.com/repos/fabiorinnone/NetMatchStar", "Date": "2016-06-21T09:07:20Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setupConnections(m_oSettings.isRemote()); } catch (org.zeromq.ZMQException e) { m_oActivity.onZmqFailed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/851/buggy-version/src.org.dobots.communication.zmq.ZmqConnectionHelper.java", "BodyUseAPI": ["org.dobots.communication.zmq.ZmqSettings.isRemote()", "org.dobots.communication.zmq.ZmqConnectionHelper.setupConnections(m_oSettings.isRemote())"], "Fixed commit": "ca2d414edf20bd58587ba5a0f52c3ca5dfa3505b", "Url": "https://api.github.com/repos/eggerdo/Robot-Lib", "Date": "2013-09-25T11:56:26Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { amount = java.lang.Integer.parseInt(param, 10); } catch (java.lang.NumberFormatException nfe) { out.println((\"Illegal value of amount: \" + amount)); log(nfe.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7841/buggy-version/src.java.Player.Player.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String,int)"], "Fixed commit": "0b050b2a08c8fa80eb0ce0785b1d0de34bb67f4a", "Url": "https://api.github.com/repos/edgar-ch/Player", "Date": "2015-04-07T08:41:41Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { begin = java.lang.Integer.parseInt(param, 10); } catch (java.lang.NumberFormatException nfe) { out.println((\"Illegal value of begin: \" + begin)); log(nfe.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7841/buggy-version/src.java.Player.Player.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String,int)"], "Fixed commit": "0b050b2a08c8fa80eb0ce0785b1d0de34bb67f4a", "Url": "https://api.github.com/repos/edgar-ch/Player", "Date": "2015-04-07T08:41:41Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { uri = new java.net.URI(target); } catch (java.net.URISyntaxException x) { throw new org.apache.http.HttpException(((\"malformed URL '\" + target) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1566/buggy-version/lib.src.main.java.ste.web.http.handlers.FileHandler.java", "BodyUseAPI": [], "Fixed commit": "49899607a522ee4b416d8112cfb9259ecdea80e9", "Url": "https://api.github.com/repos/stefanofornari/webtoolkit", "Date": "2014-10-11T13:06:07Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.usac.brayan.mensajeriaarquitectura.principal.publications_list.clear(); com.usac.brayan.mensajeriaarquitectura.principal.adapter.notifyDataSetChanged(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/62/buggy-version/app.src.main.java.com.usac.brayan.mensajeriaarquitectura.principal.java", "BodyUseAPI": ["java.util.List.clear()", "RecyclerView.Adapter.notifyDataSetChanged()"], "Fixed commit": "c31a98c8e18e9ddb74ada57af0290e6cbe2590e3", "Url": "https://api.github.com/repos/bragonya1992/MIA", "Date": "2017-06-06T17:34:53Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(15000L); } catch (java.lang.InterruptedException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1028/buggy-version/src.main.java.org.dasein.cloud.gogrid.compute.server.GoGridServerSupport.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "f754ccfdad3a74e22c423e283bebe39f81654dc1", "Url": "https://api.github.com/repos/greese/dasein-cloud-gogrid", "Date": "2012-10-17T19:14:38Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { LocationServices.FusedLocationApi.requestLocationUpdates(mGoogleApiClient, mLocationRequest, this); } catch (java.lang.Exception ex) { android.util.Log.d(\"error\", ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5607/buggy-version/app.src.main.java.ch.ffhs.esa.mymeteo.MainActivity.java", "BodyUseAPI": ["LocationServices.FusedLocationApi.requestLocationUpdates(com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.location.LocationRequest,ch.ffhs.esa.mymeteo.MainActivity)"], "Fixed commit": "83ab38d6ed2299e69cd0dcca6b36b9b993a23f6c", "Url": "https://api.github.com/repos/lxmultimedia/MyMeteo", "Date": "2017-05-24T20:48:22Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { regex = cli.getString(\"$1\"); } catch (java.lang.NullPointerException e1) { regex = cli.getString(((\".*\" + (java.util.regex.Pattern.quote(cli.getString(\"lit\")))) + \".*\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1990/buggy-version/java.src.Search.java", "BodyUseAPI": ["nohorjo.cli.CLIArgs.getString(java.lang.String)"], "Fixed commit": "1bc725676bf000674c843cc20c121d84cfb261e9", "Url": "https://api.github.com/repos/nohorjo/Tools", "Date": "2017-03-23T13:13:13Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { entries = JSON_MAPPER.readValue(new java.io.File(js.getPath()), java.util.HashMap.class); } catch (java.lang.Exception ex) { mpstyle.mwat.controller.MWAT.LOGGER.info((\"Invalid json: \" + (js.getPath()))); throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3637/buggy-version/src.main.java.mpstyle.mwat.controller.MWAT.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readValue(java.io.File,java.lang.Class)", "mpstyle.mwat.model.jsonfile.JSONFile.getPath()"], "Fixed commit": "97347f3def735f5d1123f1263a1dea32b4336d65", "Url": "https://api.github.com/repos/MpStyle/mwat", "Date": "2016-03-07T07:42:34Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { unitCircleView.getElement().getFirstChildElement().setAttribute(\"style\", \"background-image: url(../images/checkMark.png);\"); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1724/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.classpages.unitSetup.AssignmentsContainerWidget.java", "BodyUseAPI": ["unitCircleView.getElement().getFirstChildElement()", "unitCircleView.getElement().getFirstChildElement().setAttribute(java.lang.String,java.lang.String)", "org.ednovo.gooru.client.mvp.classpages.unitdetails.UnitCricleView.getElement()"], "Fixed commit": "0112b6679544b677563d86889950ca5159c47ba9", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2014-10-08T12:25:43Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { conversationContext.activate(cid); } catch (javax.enterprise.context.NonexistentConversationException e) { net.ftlines.wicket.cdi.CdiContainer.log.info((((\"Unable to restore conversation with id \" + cid) + \": \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4801/buggy-version/wicket-cdi.src.main.java.net.ftlines.wicket.cdi.CdiContainer.java", "BodyUseAPI": ["org.jboss.seam.conversation.spi.SeamConversationContext<javax.servlet.http.HttpServletRequest>.activate(java.lang.String)"], "Fixed commit": "3be4d63dce1f9450ea7600c91713a4b51a988e41", "Url": "https://api.github.com/repos/papegaaij/wicket-cdi", "Date": "2011-11-15T12:28:59Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { actions.add(switchService.getSwitch(path.get((i + 1)).getNodeId()).getOFFactory().actions().output(path.get((i + 1)).getPortId(), java.lang.Integer.MAX_VALUE)); } catch (java.lang.NullPointerException e) { net.floodlightcontroller.loadbalancer.LoadBalancer.log.error(\"Fail to install loadbalancer flow rules to offline switches {}.\", path.get((i + 1)).getNodeId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7818/buggy-version/src.main.java.net.floodlightcontroller.loadbalancer.LoadBalancer.java", "BodyUseAPI": ["java.util.List<net.floodlightcontroller.topology.NodePortTuple>.get(int)", "switchService.getSwitch(path.get((i + 1)).getNodeId()).getOFFactory().actions().output(path.get((i + 1)).getPortId(),int)", "java.util.List<net.floodlightcontroller.topology.NodePortTuple>.get(int)", "path.get((i + 1)).getNodeId()", "switchService.getSwitch(path.get((i + 1)).getNodeId()).getOFFactory().actions()", "net.floodlightcontroller.core.internal.IOFSwitchService.getSwitch(path.get((i + 1)).getNodeId())", "java.util.ArrayList<org.projectfloodlight.openflow.protocol.action.OFAction>.add(switchService.getSwitch(path.get((i + 1)).getNodeId()).getOFFactory().actions().output(path.get((i + 1)).getPortId(), java.lang.Integer.MAX_VALUE))", "switchService.getSwitch(path.get((i + 1)).getNodeId()).getOFFactory()", "path.get((i + 1)).getPortId()"], "Fixed commit": "98994e34af0b3dac710e65b32587df33cfbe7e2e", "Url": "https://api.github.com/repos/rizard/floodlight", "Date": "2015-12-02T01:01:41Z"},
{"Line": "=>548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { actions.add(switchService.getSwitch(path.get((i + 1)).getNodeId()).getOFFactory().actions().output(path.get((i + 1)).getPortId(), java.lang.Integer.MAX_VALUE)); } catch (java.lang.NullPointerException e) { net.floodlightcontroller.loadbalancer.LoadBalancer.log.error(\"Fail to install loadbalancer flow rules to offline switch {}.\", path.get((i + 1)).getNodeId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7818/buggy-version/src.main.java.net.floodlightcontroller.loadbalancer.LoadBalancer.java", "BodyUseAPI": ["java.util.List<net.floodlightcontroller.topology.NodePortTuple>.get(int)", "net.floodlightcontroller.core.internal.IOFSwitchService.getSwitch(path.get((i + 1)).getNodeId())", "java.util.List<net.floodlightcontroller.topology.NodePortTuple>.get(int)", "path.get((i + 1)).getNodeId()", "switchService.getSwitch(path.get((i + 1)).getNodeId()).getOFFactory().actions().output(path.get((i + 1)).getPortId(),int)", "path.get((i + 1)).getPortId()", "switchService.getSwitch(path.get((i + 1)).getNodeId()).getOFFactory()", "switchService.getSwitch(path.get((i + 1)).getNodeId()).getOFFactory().actions()", "java.util.ArrayList<org.projectfloodlight.openflow.protocol.action.OFAction>.add(switchService.getSwitch(path.get((i + 1)).getNodeId()).getOFFactory().actions().output(path.get((i + 1)).getPortId(), java.lang.Integer.MAX_VALUE))"], "Fixed commit": "98994e34af0b3dac710e65b32587df33cfbe7e2e", "Url": "https://api.github.com/repos/rizard/floodlight", "Date": "2015-12-02T01:01:41Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { imgList = gce.images().list(imageProject.projectName).execute(); if ((imgList != null) && ((imgList.getItems()) != null)) { for (com.google.api.services.compute.model.Image img : imgList.getItems()) { org.dasein.cloud.google.compute.server.MachineImage image = toMachineImage(img); if (image != null) images.add(image); } } } catch (java.io.IOException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7815/buggy-version/src.main.java.org.dasein.cloud.google.compute.server.ImageSupport.java", "BodyUseAPI": ["gce.images().list(java.lang.String)", "com.google.api.services.compute.Compute.images()", "com.google.api.services.compute.model.ImageList.getItems()", "com.google.api.services.compute.model.ImageList.getItems()", "java.util.ArrayList<org.dasein.cloud.google.compute.server.MachineImage>.add(org.dasein.cloud.google.compute.server.MachineImage)", "gce.images().list(imageProject.projectName).execute()", "org.dasein.cloud.google.compute.server.ImageSupport.toMachineImage(com.google.api.services.compute.model.Image)"], "Fixed commit": "5551dc39fed1da5e897ed1b86853bafbd7aff16c", "Url": "https://api.github.com/repos/greese/dasein-cloud-google", "Date": "2014-06-16T07:55:06Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { channel.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8336/buggy-version/rxf-couch.src.main.java.rxf.couch.CouchConnectionFactory.java", "BodyUseAPI": ["java.nio.channels.SocketChannel.close()"], "Fixed commit": "a59ea4f08cf54a4a2e414650774cebf22445e8b8", "Url": "https://api.github.com/repos/jnorthrup/RelaxFactory", "Date": "2014-06-09T05:14:45Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { state.setCondition(org.magic.api.beans.EnumCondition.valueOf(rs.getString(\"conditions\"))); } catch (java.lang.Exception e) { state.setCondition(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7178/buggy-version/src.org.magic.api.dao.impl.MysqlDAO.java", "BodyUseAPI": ["org.magic.api.beans.MagicCardStock.setCondition(org.magic.api.beans.EnumCondition.valueOf(rs.getString(\"conditions\")))", "org.magic.api.beans.EnumCondition.valueOf(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "fcbfe70122836bbf25e2197e888a5efa4bec88e5", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-07-20T14:18:19Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int cut = episode_name.indexOf(\" \", 5); episode_name = ((episode_name.substring(0, cut)) + \"\\n\") + (episode_name.substring((cut + 1))); } catch (java.lang.Exception e) { episode_name = (episode_name.substring(0, 10)) + \"...\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5494/buggy-version/app.src.main.java.com.w2w.whattowatch.activities.ListEpisodes.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String,int)", "java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "9bb4b57257e8620481531d291f2664202c2dbc79", "Url": "https://api.github.com/repos/Santi-7/What_to_Watch", "Date": "2016-05-18T11:46:58Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { @java.lang.SuppressWarnings(\"unchecked\") java.util.Collection<java.util.Map<?, ?>> co = ((java.util.Collection<java.util.Map<?, ?>>) (obj)); com.twosigma.beaker.jvm.object.TableDisplay t = new com.twosigma.beaker.jvm.object.TableDisplay(co, parent); jgen.writeObject(t); return true; } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1970/buggy-version/plugin.jvm.src.main.java.com.twosigma.beaker.jvm.serialization.BasicObjectSerializer.java", "BodyUseAPI": ["org.codehaus.jackson.JsonGenerator.writeObject(com.twosigma.beaker.jvm.object.TableDisplay)"], "Fixed commit": "1f1f81d70d0f693b43f0c9bfc3acff1a9a189624", "Url": "https://api.github.com/repos/twosigma/beakerx", "Date": "2015-10-07T20:26:43Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((mListView) == null) { java.util.ArrayList<lux01.inhalertracker.Inhaler> savedInhalers = lux01.inhalertracker.InhalerManager.load(this); lux01.inhalertracker.InhalerAdapter inhalerAdapter = new lux01.inhalertracker.InhalerAdapter(this, savedInhalers); mListView = ((android.widget.ListView) (findViewById(R.id.main_inhaler_list))); mListView.setAdapter(inhalerAdapter); } } catch (java.lang.Exception e) { android.util.Log.wtf(\"MainActivity\", \"Wat\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6202/buggy-version/app.src.main.java.lux01.inhalertracker.MainActivity.java", "BodyUseAPI": ["lux01.inhalertracker.InhalerManager.load(lux01.inhalertracker.MainActivity)", "android.widget.ListView.setAdapter(lux01.inhalertracker.InhalerAdapter)", "lux01.inhalertracker.MainActivity.findViewById(R.id.main_inhaler_list)"], "Fixed commit": "8debf31303319b9f057e1800ac23995b0f159a6f", "Url": "https://api.github.com/repos/lux01/InhalerTracker", "Date": "2017-06-26T11:11:04Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mysqldResource.shutdown(); } catch (java.lang.NullPointerException npe) { logger.warn(\"Failed to shutdown mysql properly \", npe); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3011/buggy-version/embeddeddb.src.main.java.com.ning.billing.commons.embeddeddb.mysql.MySQLEmbeddedDB.java", "BodyUseAPI": ["com.mysql.management.MysqldResource.shutdown()"], "Fixed commit": "5808638a1bfc89f5be6318c5945dafffce8b21c0", "Url": "https://api.github.com/repos/killbill/killbill-commons", "Date": "2013-07-04T03:24:30Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dateObj = curFormater.parse(matcher_date.group(4)); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/497/buggy-version/src.net.bmaron.openfixmap.ErrorParsers.OpenStreetBugsGPX.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "76dc8bb242929e4a24d8482a441a6945d52fd97f", "Url": "https://api.github.com/repos/eMerzh/OpenFixMap", "Date": "2012-06-22T11:49:06Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { class FontResourceLoader extends org.xhtmlrenderer.pdf.ITextUserAgent { public FontResourceLoader(org.xhtmlrenderer.pdf.ITextOutputDevice outputDevice) { super(outputDevice); } @java.lang.Override public byte[] getBinaryResource(java.lang.String uri) { try { return super.getBinaryResource(uri); } catch (java.lang.Exception e) { } return new byte[0]; } } org.xhtmlrenderer.pdf.ITextRenderer pdfRenderer = new org.xhtmlrenderer.pdf.ITextRenderer(); FontResourceLoader fontHandler = new FontResourceLoader(pdfRenderer.getOutputDevice()); fontHandler.setSharedContext(pdfRenderer.getSharedContext()); pdfRenderer.getSharedContext().setUserAgentCallback(fontHandler); return pdfRenderer; } catch (java.lang.Exception e) { com.idega.block.pdf.business.PDFGeneratorBean.LOGGER.log(java.util.logging.Level.SEVERE, \"Error creating PDF generator!\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5939/buggy-version/src.java.com.idega.block.pdf.business.PDFGeneratorBean.java", "BodyUseAPI": ["pdfRenderer.getSharedContext().setUserAgentCallback(FontResourceLoader)", "org.xhtmlrenderer.pdf.ITextRenderer.getSharedContext()", "org.xhtmlrenderer.pdf.ITextRenderer.getOutputDevice()", "java.lang.Object(org.xhtmlrenderer.pdf.ITextOutputDevice)", "org.xhtmlrenderer.pdf.ITextUserAgent.getBinaryResource(java.lang.String)", "FontResourceLoader.setSharedContext(pdfRenderer.getSharedContext())", "org.xhtmlrenderer.pdf.ITextRenderer.getSharedContext()"], "Fixed commit": "8c8b5be7b8661b1d757c45065d69936cf5801265", "Url": "https://api.github.com/repos/idega/com.idega.block.pdf", "Date": "2015-03-30T12:21:32Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { set = me.Joeyy.Armor.ArmorType.valueOf(args[0].toUpperCase()); } catch (java.lang.IllegalArgumentException e) { set = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4783/buggy-version/src.main.java.me.Joeyy.Armor.EquipArmorCommand.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "me.Joeyy.Armor.ArmorType.valueOf(java.lang.String)"], "Fixed commit": "5a76cb21036019693e605bca5d7aa6d2211da604", "Url": "https://api.github.com/repos/Joeyy/Armor", "Date": "2011-04-09T16:45:31Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fix = org.hdiv.util.URLEncoder.encode(value, Constants.ENCODING_ISO_8859_1); fix = java.net.URLDecoder.decode(fix, Constants.ENCODING_UTF_8); } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7428/buggy-version/hdiv-core.src.main.java.org.hdiv.util.HDIVUtil.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,Constants.ENCODING_UTF_8)", "org.hdiv.util.URLEncoder.encode(java.lang.String,Constants.ENCODING_ISO_8859_1)"], "Fixed commit": "c4533d7ca51b744e538da84e9466fa9ec0a2b1fd", "Url": "https://api.github.com/repos/hdiv/hdiv", "Date": "2017-11-13T16:37:59Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.javax.sip.header.ContentTypeHeader contentTypeHeader = ((android.javax.sip.header.ContentTypeHeader) (request.getHeader(\"Content-Type\"))); if (null != contentTypeHeader) { try { logger.info(\"CONTENT: {}\", new java.lang.String(request.getRawContent())); if (null != (request.getRawContent())) { bus.post(new org.github.sipuada.events.MessageReceived(callId, (null != serverTransaction ? serverTransaction.getDialog() : null), new java.lang.String(request.getRawContent()), contentTypeHeader)); } } catch (java.lang.Exception e) { e.printStackTrace(); } }else { logger.info(\"CONTENT: {}\", new java.lang.String(request.getRawContent())); java.util.Iterator it = request.getHeaderNames(); while (it.hasNext()) { logger.info(\"HEADER: {}\", it.next()); } logger.error(\"Unable to parse Content-Type header\"); } } catch (java.lang.Exception e) { e.printStackTrace(); logger.error(\"Unable to parse Content-Type header\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5897/buggy-version/src.org.github.sipuada.UserAgentServer.java", "BodyUseAPI": ["android.javax.sip.message.Request.getHeader(java.lang.String)", "java.util.Iterator.hasNext()", "android.javax.sip.message.Request.getRawContent()", "java.util.Iterator.next()", "org.slf4j.Logger.info(java.lang.String,java.lang.String)", "org.slf4j.Logger.error(java.lang.String)", "android.javax.sip.message.Request.getRawContent()", "org.slf4j.Logger.info(java.lang.String,java.lang.Object)", "java.lang.Exception.printStackTrace()", "android.javax.sip.message.Request.getHeaderNames()", "android.javax.sip.message.Request.getRawContent()", "com.google.common.eventbus.EventBus.post(org.github.sipuada.events.MessageReceived)", "android.javax.sip.ServerTransaction.getDialog()", "org.slf4j.Logger.info(java.lang.String,java.lang.String)", "android.javax.sip.message.Request.getRawContent()"], "Fixed commit": "233af8e2d3d69333058d0add7bcb0a537b4fc22b", "Url": "https://api.github.com/repos/Sipuada/sipuada", "Date": "2016-03-01T21:12:21Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.wso2.emm.agent.utils.CommonUtils.clearAppData(context); } catch (org.wso2.emm.agent.AndroidAgentException e) { java.lang.String msg = \"Device already dis-enrolled.\"; android.util.Log.e(org.wso2.emm.agent.AlreadyRegisteredActivity.TAG, msg, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4619/buggy-version/modules.mobile-agents.android.client.client.src.main.java.org.wso2.emm.agent.AlreadyRegisteredActivity.java", "BodyUseAPI": ["org.wso2.emm.agent.utils.CommonUtils.clearAppData(android.content.Context)"], "Fixed commit": "f5bb8799bc29c3c949bf66bb53347566f9f61444", "Url": "https://api.github.com/repos/Kamidu/product-mdm", "Date": "2015-12-15T09:47:42Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sumOfOSentInRound2K = messagesSentInPreviousRounds.get((round - 1)); } catch (java.lang.NullPointerException e) { sumOfOSentInRound2K = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/3789/buggy-version/src.main.java.NodeDCNET.java", "BodyUseAPI": ["java.util.Dictionary<java.lang.Integer, java.lang.Integer>.get(int)"], "Fixed commit": "00a69f27deb32cdc4d1ce4052b762b48ab47bdc8", "Url": "https://api.github.com/repos/clcert/dcnet-participant", "Date": "2016-03-07T14:58:38Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { T remoteFile = org.syncany.plugins.transfer.files.RemoteFile.createRemoteFile(child.getBareName(), remoteFileClass); remoteFiles.put(child.getBareName(), remoteFile); } catch (java.lang.Exception e) { org.syncany.plugins.swift.SwiftTransferManager.logger.log(java.util.logging.Level.INFO, ((((\"Cannot create instance of \" + (remoteFileClass.getSimpleName())) + \" for object \") + (child.getBareName())) + \"; maybe invalid file name pattern. Ignoring file.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1999/buggy-version/src.main.java.org.syncany.plugins.swift.SwiftTransferManager.java", "BodyUseAPI": ["org.javaswift.joss.model.StoredObject.getBareName()", "org.syncany.plugins.transfer.files.RemoteFile.createRemoteFile(child.getBareName(),java.lang.Class<T>)", "java.util.Map<java.lang.String, T>.put(child.getBareName(),T)", "org.javaswift.joss.model.StoredObject.getBareName()"], "Fixed commit": "75a10ff32ace9a884bce782aeb496868727c0a54", "Url": "https://api.github.com/repos/syncany/syncany-plugin-swift", "Date": "2015-12-03T15:29:01Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { CatchTimer.schedule(new java.util.TimerTask() { @java.lang.Override public void run() { stopEatable(); } }, de.berufsschule_freising.pacasus.model.game.Engine.EATABLE_DELAY); } catch (java.lang.IllegalStateException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/8715/buggy-version/app.src.main.java.de.berufsschule_freising.pacasus.model.game.Engine.java", "BodyUseAPI": ["java.util.Timer.schedule(java.util.TimerTask,int)", "java.util.TimerTask()", "1.stopEatable()"], "Fixed commit": "487f1facc5700b1c6320f55306ae4debeebb2c7f", "Url": "https://api.github.com/repos/GabschCorp/pacasus", "Date": "2016-03-02T07:26:26Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { product = productService.findBySku(sku, currentUser.getStoreId()); } catch (java.lang.Exception ex) { com.veanchondo.puntoVenta.api.controllers.ProductController.logger.debug(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/7503/buggy-version/src.main.java.com.veanchondo.puntoVenta.api.controllers.ProductController.java", "BodyUseAPI": ["com.veanchondo.puntoVenta.api.services.ProductService.findBySku(java.lang.String,currentUser.getStoreId())", "com.veanchondo.puntoVenta.api.models.CurrentUser.getStoreId()"], "Fixed commit": "6cfb193abceaed53907311fea2d02aa22a1c8a9e", "Url": "https://api.github.com/repos/vedannt/vventas-api", "Date": "2017-12-18T05:31:37Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { replicationClient.ping(); } catch (java.lang.Exception e) { mde519.server.services.MasterService.logger.error(e, e); return javax.ws.rs.core.Response.status(400).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/4002/buggy-version/src.main.java.mde519.server.services.MasterService.java", "BodyUseAPI": ["mde519.server.replication.ReplicationClient.ping()"], "Fixed commit": "73011f881bad3533e7435aedb43cd15cfcd228e5", "Url": "https://api.github.com/repos/ikavvour/main-server-mema", "Date": "2014-09-30T12:40:51Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ip = chain.connection().getSocket().getRemoteSocketAddress().toString(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/2113/buggy-version/library.src.main.java.com.qiniu.android.http.Client.java", "BodyUseAPI": ["chain.connection().getSocket().getRemoteSocketAddress()", "chain.connection().getSocket()", "chain.connection().getSocket().getRemoteSocketAddress().toString()", "com.qiniu.android.http.Chain.connection()"], "Fixed commit": "98ea8ad32014135373fb4872f53bc6607e6005f5", "Url": "https://api.github.com/repos/qiniu/android-sdk", "Date": "2016-01-29T05:29:02Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { in = new java.util.Scanner(new java.io.File(name)); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5117/buggy-version/src.LevelMap.java", "BodyUseAPI": [], "Fixed commit": "4769e97a272b8cd7828f8d156bcb9dd3a7e6f988", "Url": "https://api.github.com/repos/allenli873/PhysicsDash", "Date": "2017-05-02T03:22:08Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(context.getString(1).equals(\"\"))) { namespace = context.getString(1); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/6406/buggy-version/mechanisms.src.main.java.com.sk89q.craftbook.bukkit.commands.AreaCommands.java", "BodyUseAPI": ["context.getString(1).equals(java.lang.String)", "com.sk89q.minecraft.util.commands.CommandContext.getString(int)", "com.sk89q.minecraft.util.commands.CommandContext.getString(int)"], "Fixed commit": "49ef288def04dacafe89b1a7aab568394e22d7d4", "Url": "https://api.github.com/repos/Silthus/craftbook", "Date": "2012-08-05T12:12:13Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { queue.put(URL); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/5214/buggy-version/src.main.java.queue.LocalQueue.java", "BodyUseAPI": ["java.util.concurrent.ArrayBlockingQueue<java.lang.String>.put(java.lang.String)"], "Fixed commit": "3be8e450bf33ffeb14db6d4bae7948beaae8f465", "Url": "https://api.github.com/repos/nimboys/gagoole", "Date": "2017-09-04T15:47:03Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mKtClass.getBody().addAfter(mFactory.createProperty(java.lang.String.valueOf(builder)), mKtClass.getBody().getFirstChild()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V38/1676/buggy-version/src.com.djk.yyy.kotterknife.InjectWriter.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.StringBuilder)", "mKtClass.getBody().getFirstChild()", "org.jetbrains.kotlin.psi.KtClass.getBody()", "org.jetbrains.kotlin.psi.KtClass.getBody()", "org.jetbrains.kotlin.psi.KtPsiFactory.createProperty(java.lang.String)", "mKtClass.getBody().addAfter(mFactory.createProperty(java.lang.String.valueOf(builder)),mKtClass.getBody().getFirstChild())"], "Fixed commit": "320a270efc13b86f3dba460c702643cf2d75f3e6", "Url": "https://api.github.com/repos/dongjunkun/KotterKnife-Plugin", "Date": "2017-08-12T08:08:18Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mNsdManager.unregisterService(mRegistrationListener); } catch (java.lang.Exception e) { android.util.Log.e(com.monopoly.domke.sebastian.monopoly.helper.NsdHelper.TAG, \"No service registered \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6263/buggy-version/app.src.main.java.com.monopoly.domke.sebastian.monopoly.helper.NsdHelper.java", "BodyUseAPI": ["android.net.nsd.NsdManager.unregisterService(NsdManager.RegistrationListener)"], "Fixed commit": "72aa3a13c2ab35dee0037ae2629322d040e10b80", "Url": "https://api.github.com/repos/sdomke/Monopoly", "Date": "2016-12-21T17:03:12Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((ca.ualberta.app.network.InternetConnectionChecker.isNetworkAvailable(activity.getActivity().getApplicationContext())) == false) { timer.cancel(); timer.purge(); java.lang.Runnable action = new java.lang.Runnable() { @java.lang.Override public void run() { activity.updateList(); } }; activity.getActivity().runOnUiThread(action); } } catch (java.lang.NullPointerException e) { timer.cancel(); timer.purge(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2468/buggy-version/App.src.ca.ualberta.app.network.NetworkObserver.java", "BodyUseAPI": ["java.lang.Object()", "ca.ualberta.app.activity.FragmentMain.getActivity()", "activity.getActivity().runOnUiThread(java.lang.Runnable)", "activity.getActivity().getApplicationContext()", "ca.ualberta.app.network.InternetConnectionChecker.isNetworkAvailable(activity.getActivity().getApplicationContext())", "ca.ualberta.app.activity.FragmentMain.getActivity()", "ca.ualberta.app.activity.FragmentMain.updateList()", "java.util.Timer.purge()", "java.util.Timer.cancel()"], "Fixed commit": "82a4ceccd59f6fa587534a25d925a6a8d4948056", "Url": "https://api.github.com/repos/CMPUT301F14T06/Team06MapleSyrup", "Date": "2014-11-27T23:26:41Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ret = new java.math.BigInteger(val, 16).longValue(); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7577/buggy-version/src.ch.luethi.skylinestracker.SkyLinesPrefs.java", "BodyUseAPI": ["java.math.BigInteger.longValue()"], "Fixed commit": "5109fcc088c0bb5a87c0a90a20309c5801fc2cfa", "Url": "https://api.github.com/repos/ubx/SkyLinesTracker", "Date": "2014-01-01T16:43:04Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.customers = asgn2Restaurant.LogHandler.populateCustomerDataset(filename); this.pizzas = asgn2Restaurant.LogHandler.populatePizzaDataset(filename); return true; } catch (java.lang.Exception e) { this.customers = new java.util.ArrayList(); this.pizzas = new java.util.ArrayList(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5961/buggy-version/src.asgn2Restaurant.PizzaRestaurant.java", "BodyUseAPI": ["asgn2Restaurant.LogHandler.populatePizzaDataset(java.lang.String)", "asgn2Restaurant.LogHandler.populateCustomerDataset(java.lang.String)"], "Fixed commit": "9a1aea091514b41a10c15674b13c86d8448e4334", "Url": "https://api.github.com/repos/Fortyonehertz/spiritual_brick", "Date": "2017-05-26T03:51:02Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return createValue(defaultChoice); } catch (java.lang.IllegalArgumentException e) { jp.ikedam.jenkins.plugins.extensible_choice_parameter.ExtensibleChoiceParameterDefinition.LOGGER.log(java.util.logging.Level.WARNING, \"Illegal choice for the default value. Ignore and use the value in the top of the list instead.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4849/buggy-version/src.main.java.jp.ikedam.jenkins.plugins.extensible_choice_parameter.ExtensibleChoiceParameterDefinition.java", "BodyUseAPI": ["jp.ikedam.jenkins.plugins.extensible_choice_parameter.ExtensibleChoiceParameterDefinition.createValue(java.lang.String)"], "Fixed commit": "535d9d79337948fbbbefabb9189aad2d67cdd53d", "Url": "https://api.github.com/repos/jenkinsci/extensible-choice-parameter-plugin", "Date": "2017-01-15T03:53:47Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { DBconnection.close(); } catch (java.sql.SQLException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7790/buggy-version/src.controllers.DatabaseManager.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "a5bb06cee9434df9c20b98b3a52e4cb73b3007c2", "Url": "https://api.github.com/repos/JihoChoi/CS307-Team-19-Sentinel-Data-Vault", "Date": "2015-11-13T18:35:39Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { info = manager.getPackageInfo(getPackageName(), 0); } catch (java.lang.Exception e) { android.widget.Toast.makeText(getBaseContext(), \"Android version cannot be determined\", Toast.LENGTH_LONG).show(); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1789/buggy-version/src.com.austindiviness.drunkfriend.FavoritesActivity.java", "BodyUseAPI": ["com.austindiviness.drunkfriend.FavoritesActivity.getPackageName()", "android.content.pm.PackageManager.getPackageInfo(getPackageName(),int)"], "Fixed commit": "3ede72942a3dfef63e314d2ce25e3b986d325a1c", "Url": "https://api.github.com/repos/TheCrownedFox/DrunkFriend", "Date": "2013-04-13T01:52:53Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(5000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2509/buggy-version/pubsub-stomp.src.main.java.org.codice.pubsub.server.SubscriptionServer.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "757c3d3adb2035beecbf02ba9447dc247826eaf2", "Url": "https://api.github.com/repos/codice/ddf-stomp", "Date": "2014-04-10T23:08:06Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { field1 = token.getField().getBoard().getPlayfield()[posRow][posColumn1]; } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8301/buggy-version/Dame.src.backend.Rules.java", "BodyUseAPI": ["token.getField().getBoard().getPlayfield()", "token.getField().getBoard()", "backend.Token.getField()"], "Fixed commit": "bc5b1d996101c8ec5dab02d3faa5f13565c94d90", "Url": "https://api.github.com/repos/Brujah4/Spielesammlung", "Date": "2017-09-13T12:48:55Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { trf = org.lareferencia.backend.metadata.XsltMDFormatTransformer.buildXSLTTransformer(stylesheetFile); trf.setOutputProperty(javax.xml.transform.OutputKeys.OMIT_XML_DECLARATION, \"yes\"); trf.setOutputProperty(javax.xml.transform.OutputKeys.INDENT, \"yes\"); trf.setOutputProperty(javax.xml.transform.OutputKeys.ENCODING, \"UTF-8\"); } catch (javax.xml.transform.TransformerConfigurationException e) { java.lang.System.err.println((((((\"Error en la creacion de transformador de formato de metadatatos. \" + sourceMDFormat) + \" -> \") + targetMDFormat) + \" :: \") + stylesheetFileName)); java.lang.System.err.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7929/buggy-version/backend.src.main.java.org.lareferencia.backend.metadata.XsltMDFormatTransformer.java", "BodyUseAPI": ["javax.xml.transform.Transformer.setOutputProperty(java.lang.String,java.lang.String)", "javax.xml.transform.Transformer.setOutputProperty(java.lang.String,java.lang.String)", "javax.xml.transform.Transformer.setOutputProperty(java.lang.String,java.lang.String)", "org.lareferencia.backend.metadata.XsltMDFormatTransformer.buildXSLTTransformer(java.io.File)"], "Fixed commit": "f910d8128067867b5a6b2c0b5feaa1dffae186ed", "Url": "https://api.github.com/repos/lareferencia/main", "Date": "2016-12-05T20:59:30Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { oldDealsJO.put(ParseClassesNames.BUSINESS_HISTORY_TOTAL_LIKES, com.dna.radius.businessmode.BusinessData.dealsHistory.getNumOfLikes()); oldDealsJO.put(ParseClassesNames.BUSINESS_HISTORY_TOTAL_DISLIKES, com.dna.radius.businessmode.BusinessData.dealsHistory.getNumOfDislikes()); oldDealsJO.put(ParseClassesNames.BUSINESS_HISTORY_TOTAL_NUM_OF_DEALS, com.dna.radius.businessmode.BusinessData.dealsHistory.getTotalNumOfDeals()); oldDealsJO.put(ParseClassesNames.BUSINESS_HISTORY_DEALS, oldDealsJO.getJSONArray(ParseClassesNames.BUSINESS_HISTORY_DEALS).put(newDealJO)); } catch (org.json.JSONException e) { android.util.Log.e(\"Business - new deal create\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5299/buggy-version/MapSample.src.com.dna.radius.businessmode.BusinessData.java", "BodyUseAPI": ["org.json.JSONObject.put(ParseClassesNames.BUSINESS_HISTORY_TOTAL_LIKES,com.dna.radius.businessmode.BusinessData.dealsHistory.getNumOfLikes())", "com.dna.radius.datastructures.DealHistoryManager.getTotalNumOfDeals()", "org.json.JSONObject.put(ParseClassesNames.BUSINESS_HISTORY_DEALS,oldDealsJO.getJSONArray(ParseClassesNames.BUSINESS_HISTORY_DEALS).put(newDealJO))", "org.json.JSONObject.put(ParseClassesNames.BUSINESS_HISTORY_TOTAL_DISLIKES,com.dna.radius.businessmode.BusinessData.dealsHistory.getNumOfDislikes())", "com.dna.radius.datastructures.DealHistoryManager.getNumOfLikes()", "oldDealsJO.getJSONArray(ParseClassesNames.BUSINESS_HISTORY_DEALS).put(org.json.JSONObject)", "com.dna.radius.datastructures.DealHistoryManager.getNumOfDislikes()", "org.json.JSONObject.put(ParseClassesNames.BUSINESS_HISTORY_TOTAL_NUM_OF_DEALS,com.dna.radius.businessmode.BusinessData.dealsHistory.getTotalNumOfDeals())", "org.json.JSONObject.getJSONArray(ParseClassesNames.BUSINESS_HISTORY_DEALS)"], "Fixed commit": "cade1eac2eaf088166b6ad0cca8ba71bc5619a84", "Url": "https://api.github.com/repos/drorcohe/finalPostPCProject", "Date": "2014-09-05T17:23:55Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getSupportActionBar().setDisplayHomeAsUpEnabled(true); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3976/buggy-version/app.src.main.java.com.vesti.fonis.fonisvesti.MSDNAASumbitSuccessActivity.java", "BodyUseAPI": ["getSupportActionBar().setDisplayHomeAsUpEnabled(boolean)", "com.vesti.fonis.fonisvesti.MSDNAASumbitSuccessActivity.getSupportActionBar()"], "Fixed commit": "c86e783346ca41a3e05b7cd3082aa3da77e11c92", "Url": "https://api.github.com/repos/FonisVesti/FonisVesti", "Date": "2016-05-08T14:06:18Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getSupportActionBar().setDisplayHomeAsUpEnabled(true); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3976/buggy-version/app.src.main.java.com.vesti.fonis.fonisvesti.AboutActivity.java", "BodyUseAPI": ["getSupportActionBar().setDisplayHomeAsUpEnabled(boolean)", "com.vesti.fonis.fonisvesti.AboutActivity.getSupportActionBar()"], "Fixed commit": "c86e783346ca41a3e05b7cd3082aa3da77e11c92", "Url": "https://api.github.com/repos/FonisVesti/FonisVesti", "Date": "2016-05-08T14:06:18Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getSupportActionBar().setDisplayHomeAsUpEnabled(true); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3976/buggy-version/app.src.main.java.com.vesti.fonis.fonisvesti.NewsActivity.java", "BodyUseAPI": ["com.vesti.fonis.fonisvesti.NewsActivity.getSupportActionBar()", "getSupportActionBar().setDisplayHomeAsUpEnabled(boolean)"], "Fixed commit": "c86e783346ca41a3e05b7cd3082aa3da77e11c92", "Url": "https://api.github.com/repos/FonisVesti/FonisVesti", "Date": "2016-05-08T14:06:18Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { engine.eval(\"var _JavaScriptValidatorTest = Java.type('cc.redpen.validator.JavaScriptValidatorTest');\"); } catch (java.lang.RuntimeException e) { if ((e.getCause()) instanceof java.lang.ClassNotFoundException) { }else { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1657/buggy-version/redpen-core.src.main.java.cc.redpen.validator.JavaScriptValidator.java", "BodyUseAPI": ["javax.script.ScriptEngine.eval(java.lang.String)"], "Fixed commit": "0b2bbf29add19ae48d7184ef8bafbb8a08273411", "Url": "https://api.github.com/repos/redpen-cc/redpen", "Date": "2015-12-09T08:31:14Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.command = w094j.ctrl8.statement.HelpStatement.commandParser.parse(this.getStatementArgumentsOnly()); } catch (w094j.ctrl8.exception.ParseException e) { this.command = CommandType.HELP; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/673/buggy-version/src.main.java.w094j.ctrl8.statement.HelpStatement.java", "BodyUseAPI": ["w094j.ctrl8.parse.CommandParser.parse(this.getStatementArgumentsOnly())", "w094j.ctrl8.statement.HelpStatement.getStatementArgumentsOnly()"], "Fixed commit": "baff4113df07791d676093a02f63dc9efbbb0490", "Url": "https://api.github.com/repos/cs2103jan2015-w09-4j/main", "Date": "2015-03-23T07:46:48Z"},
{"Line": "=>859", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { _compdef = langdef.getComponentDefinition(name); } catch (org.zkoss.zk.ui.metainfo.DefinitionNotFoundException e) { if (\"native\".equals(name)) { _compdef = langdef.getNativeDefinition(); }else { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2091/buggy-version/zk.src.org.zkoss.zk.ui.metainfo.ComponentInfo.java", "BodyUseAPI": ["org.zkoss.zk.ui.metainfo.LanguageDefinition.getComponentDefinition(java.lang.String)"], "Fixed commit": "31384f80cd5e82353a5a05c7344b3c7b55b19c21", "Url": "https://api.github.com/repos/VincentJian/zk", "Date": "2013-09-05T03:56:41Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sql.writeDataBase(null, intMap, null, null, timeMap, \"malsetning\", false); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8381/buggy-version/source.src.application.addToDatabase.java", "BodyUseAPI": ["application.MySQLAccess.writeDataBase(<nulltype>,java.util.HashMap<java.lang.Integer, java.lang.Integer>,<nulltype>,<nulltype>,java.util.HashMap<java.lang.Integer, java.sql.Time>,java.lang.String,boolean)"], "Fixed commit": "590a2c080a327073b8bcb6d76caf3fe8777ed9d4", "Url": "https://api.github.com/repos/geromath/treningsdagbok", "Date": "2017-03-14T08:13:12Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { foreginKey = sql.getPrimaryKey(\"ovelse\"); } catch (java.lang.Exception e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8381/buggy-version/source.src.application.addToDatabase.java", "BodyUseAPI": ["application.MySQLAccess.getPrimaryKey(java.lang.String)"], "Fixed commit": "590a2c080a327073b8bcb6d76caf3fe8777ed9d4", "Url": "https://api.github.com/repos/geromath/treningsdagbok", "Date": "2017-03-14T08:13:12Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return mapper.readValue(file, typeRef); } catch (com.fasterxml.jackson.core.JsonProcessingException e) { throw new com.fasterxml.jackson.databind.JsonMappingException((((\"file: \" + file) + \". \") + (e.getMessage())), e.getLocation(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/3691/buggy-version/core.src.main.java.io.fabric8.maven.core.util.KubernetesResourceUtil.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readValue(java.io.File,com.fasterxml.jackson.core.type.TypeReference<java.util.HashMap<java.lang.String, java.lang.Object>>)"], "Fixed commit": "448e8307e834da6ed6035256a862afaa42e73031", "Url": "https://api.github.com/repos/chirino/fabric8-maven-plugin", "Date": "2016-09-01T09:48:29Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { feedUrl = new java.net.URL(\"http://www.starwarsnorge.com/index.php?action=.xml;type=rss2;sa=news;board=29;limit=20\"); } catch (java.net.MalformedURLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5618/buggy-version/src.main.java.no.kvikshaug.gh.modules.RssNews.java", "BodyUseAPI": [], "Fixed commit": "1a3eb97eb7d5e98b0f82f5ba24d9c272287460c6", "Url": "https://api.github.com/repos/kenborge/grouphugs", "Date": "2011-09-18T02:18:43Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(500); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7816/buggy-version/src.reversi.logic.AIPlayer.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "dfa101636e9a340532121da794089ab845ad10fa", "Url": "https://api.github.com/repos/huzecong/ReversiDuel", "Date": "2016-08-02T09:26:33Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { session.close(); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(\"session cannot be closed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4044/buggy-version/src.main.java.com.teamtreehouse.giflib.dao.CategoryDaoImpl.java", "BodyUseAPI": ["org.hibernate.Session.close()"], "Fixed commit": "7eba47f6da2d2c9b8e0443f5d7e8d8bf1dd02df1", "Url": "https://api.github.com/repos/condor05/giflib-hibernate", "Date": "2016-12-02T17:58:29Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { session.close(); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(\"session cannot be closed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4044/buggy-version/src.main.java.com.teamtreehouse.giflib.dao.CategoryDaoImpl.java", "BodyUseAPI": ["org.hibernate.Session.close()"], "Fixed commit": "7eba47f6da2d2c9b8e0443f5d7e8d8bf1dd02df1", "Url": "https://api.github.com/repos/condor05/giflib-hibernate", "Date": "2016-12-02T17:58:29Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { session.close(); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(\"session cannot be closed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4044/buggy-version/src.main.java.com.teamtreehouse.giflib.dao.CategoryDaoImpl.java", "BodyUseAPI": ["org.hibernate.Session.close()"], "Fixed commit": "7eba47f6da2d2c9b8e0443f5d7e8d8bf1dd02df1", "Url": "https://api.github.com/repos/condor05/giflib-hibernate", "Date": "2016-12-02T17:58:29Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { session.close(); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(\"session cannot be closed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4044/buggy-version/src.main.java.com.teamtreehouse.giflib.dao.CategoryDaoImpl.java", "BodyUseAPI": ["org.hibernate.Session.close()"], "Fixed commit": "7eba47f6da2d2c9b8e0443f5d7e8d8bf1dd02df1", "Url": "https://api.github.com/repos/condor05/giflib-hibernate", "Date": "2016-12-02T17:58:29Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.codehaus.jackson.JsonNode jsonNode = jsonMapper.readTree(value.toString()); keyW.set(getSortKey(jsonNode)); context.write(keyW, value); } catch (org.codehaus.jackson.JsonParseException e) { throw new java.lang.RuntimeException((((context.getInputSplit()) + \" +++ \") + (value.toString())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/328/buggy-version/connectors.jumbodb-hadoop-connector.src.main.java.org.jumbodb.connector.hadoop.index.map.GenericJsonStringSortMapper.java", "BodyUseAPI": ["org.apache.hadoop.io.Text.set(java.lang.String)", "org.jumbodb.connector.hadoop.index.map.GenericJsonStringSortMapper.getSortKey(org.codehaus.jackson.JsonNode)", "org.jumbodb.connector.hadoop.index.map.Context.write(org.apache.hadoop.io.Text,org.apache.hadoop.io.Text)", "org.apache.hadoop.io.Text.toString()", "org.codehaus.jackson.map.ObjectMapper.readTree(value.toString())"], "Fixed commit": "665f402c2abb5cd346d6093348af298f28cc7396", "Url": "https://api.github.com/repos/comsysto/jumbodb", "Date": "2014-02-17T13:22:06Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { selector = buildSelector(); addComponents(selector, button); } catch (com.constellio.app.modules.rm.reports.model.search.UnsupportedReportException e) { setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6999/buggy-version/app.src.com.constellio.app.ui.framework.components.ReportSelector.java", "BodyUseAPI": ["com.constellio.app.ui.framework.components.ReportSelector.addComponents(com.vaadin.ui.AbstractSelect,com.vaadin.ui.Button)", "com.constellio.app.ui.framework.components.ReportSelector.buildSelector()"], "Fixed commit": "07c2eecd3eae95eb559febccab2da19782963c24", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-08-02T19:32:18Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.eclipse.core.resources.IMarker[] markers = ast.findFirstToken().getPhysicalFile().getIFile().findMarkers(IMarker.PROBLEM, true, IResource.DEPTH_INFINITE); for (org.eclipse.core.resources.IMarker marker : markers) { java.lang.Integer attribute = marker.getAttribute(PhotranLint.PHOTRAN_LINT_ATTRIBUTE, (-1)); if (attribute == (PhotranLint.UNSAFE_CALL_VALUE)) { marker.delete(); } } } catch (org.eclipse.core.runtime.CoreException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6532/buggy-version/org.eclipse.photran.ui.vpg.src.org.eclipse.photran.internal.ui.editor_vpg.lint.TypesafeCallChecker.java", "BodyUseAPI": ["ast.findFirstToken().getPhysicalFile().getIFile()", "org.eclipse.photran.internal.core.parser.ASTExecutableProgramNode.findFirstToken()", "org.eclipse.core.resources.IMarker.delete()", "ast.findFirstToken().getPhysicalFile().getIFile().findMarkers(IMarker.PROBLEM,boolean,IResource.DEPTH_INFINITE)", "org.eclipse.core.resources.IMarker.getAttribute(PhotranLint.PHOTRAN_LINT_ATTRIBUTE,int)", "ast.findFirstToken().getPhysicalFile()"], "Fixed commit": "023dee9b25b9ac34ddcced6cfeba11009a23613f", "Url": "https://api.github.com/repos/SeanHurley/photran", "Date": "2012-12-12T19:19:39Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mSectionsPagerAdapter = new com.developer.sparsh.baseapplication.Adapters.NavigationPagerAdapter(getSupportFragmentManager()); mViewPager = ((android.support.v4.view.ViewPager) (findViewById(R.id.container))); mViewPager.setAdapter(mSectionsPagerAdapter); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5136/buggy-version/app.src.main.java.com.developer.sparsh.baseapplication.MainActivity.java", "BodyUseAPI": ["android.support.v4.view.ViewPager.setAdapter(com.developer.sparsh.baseapplication.Adapters.NavigationPagerAdapter)", "com.developer.sparsh.baseapplication.MainActivity.findViewById(R.id.container)", "com.developer.sparsh.baseapplication.MainActivity.getSupportFragmentManager()"], "Fixed commit": "24574d87119daece85d4358236ec5f863484fdfa", "Url": "https://api.github.com/repos/utkarshnath/Android-App-Generator-Android", "Date": "2016-12-28T04:50:00Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((iconId) != (ca.fwe.weather.core.ForecastItem.ICON_NONE)) && ((icon) == null)) icon = forecast.getContext().getResources().getDrawable(this.getIconId()); } catch (android.content.res.Resources e) { android.util.Log.e(\"ForecastItem\", (\"Tried to access illegal resource with ID \" + (iconId))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2181/buggy-version/androidWeather.src.main.java.ca.fwe.weather.core.ForecastItem.java", "BodyUseAPI": ["ca.fwe.weather.core.ForecastItem.getIconId()", "forecast.getContext().getResources().getDrawable(int)", "forecast.getContext().getResources()", "ca.fwe.weather.core.Forecast.getContext()"], "Fixed commit": "4ed4d38128b5ae36e8e85237dee8188b9a6eba24", "Url": "https://api.github.com/repos/paleolimbot/CanadaWeather", "Date": "2017-03-09T18:38:34Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { firstCredit = credits.get(0)[0]; } catch (java.lang.ArrayIndexOutOfBoundsException e) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/432/buggy-version/src.OutputWriter.java", "BodyUseAPI": ["java.util.List<java.lang.String[]>.get(int)"], "Fixed commit": "b0147e52670f6c28d9e73fbed7f70f8815de6ce8", "Url": "https://api.github.com/repos/katkielbasa/pdfreader", "Date": "2017-02-12T22:59:30Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { firstDebit = debits.get(0)[0]; } catch (java.lang.ArrayIndexOutOfBoundsException e) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/432/buggy-version/src.OutputWriter.java", "BodyUseAPI": ["java.util.List<java.lang.String[]>.get(int)"], "Fixed commit": "b0147e52670f6c28d9e73fbed7f70f8815de6ce8", "Url": "https://api.github.com/repos/katkielbasa/pdfreader", "Date": "2017-02-12T22:59:30Z"},
{"Line": "=>2093", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { serializer.fromStream(content, this, null); } finally { _status = ORecordElement.STATUS.LOADED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1680/buggy-version/core.src.main.java.com.orientechnologies.orient.core.record.impl.ODocument.java", "BodyUseAPI": ["com.orientechnologies.orient.core.serialization.serializer.record.ORecordSerializer.fromStream(byte[],com.orientechnologies.orient.core.record.impl.ODocument,<nulltype>)"], "Fixed commit": "821392f5ccfed7f0509518b0a6f894c2dcb085e8", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-06-27T18:58:45Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { a = o1.getPublishedDate(); } catch (java.lang.Exception e) { a = new java.util.Date(java.lang.Long.MIN_VALUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5992/buggy-version/src.RSSReader.java", "BodyUseAPI": ["com.sun.syndication.feed.synd.SyndEntryImpl.getPublishedDate()"], "Fixed commit": "59f1a4c066dfd7f46e6817b69497cd11fd396d0d", "Url": "https://api.github.com/repos/abacon/rssReader", "Date": "2013-04-17T20:24:02Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { b = o2.getPublishedDate(); } catch (java.lang.Exception e) { b = new java.util.Date(java.lang.Long.MIN_VALUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5992/buggy-version/src.RSSReader.java", "BodyUseAPI": ["com.sun.syndication.feed.synd.SyndEntryImpl.getPublishedDate()"], "Fixed commit": "59f1a4c066dfd7f46e6817b69497cd11fd396d0d", "Url": "https://api.github.com/repos/abacon/rssReader", "Date": "2013-04-17T20:24:02Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dataBase.createNewData(data); } catch (java.lang.Exception e) { java.lang.System.err.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5133/buggy-version/src.GUI.MainFrame.java", "BodyUseAPI": ["Persistence.DataDB.createNewData(Logic.compData)"], "Fixed commit": "924359aaa66d15c49630d07b24c676183b860338", "Url": "https://api.github.com/repos/margaridagarciapereira/Lift---Drag-Workflow", "Date": "2014-03-12T14:30:55Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mLocationManager.requestLocationUpdates(\"gps\", 0, 0, this); } catch (java.lang.SecurityException e) { stopSelf(); return START_NOT_STICKY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/9213/buggy-version/app.src.main.java.org.destil.gpsaveraging.measure.PeriodicService.java", "BodyUseAPI": ["android.location.LocationManager.requestLocationUpdates(java.lang.String,int,int,org.destil.gpsaveraging.measure.PeriodicService)"], "Fixed commit": "55f6a7c020494757c18ce560c40687611a22c55e", "Url": "https://api.github.com/repos/davidvavra/GPS-Averaging", "Date": "2015-09-20T16:28:43Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (this.getSystemService(Activity.INPUT_METHOD_SERVICE))); imm.hideSoftInputFromWindow(this.getCurrentFocus().getWindowToken(), 0); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1886/buggy-version/app.src.main.java.in.reweyou.reweyouforums.ForumMainActivity.java", "BodyUseAPI": ["this.getCurrentFocus().getWindowToken()", "in.reweyou.reweyouforums.ForumMainActivity.getSystemService(Activity.INPUT_METHOD_SERVICE)", "android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(this.getCurrentFocus().getWindowToken(),int)", "in.reweyou.reweyouforums.ForumMainActivity.getCurrentFocus()"], "Fixed commit": "ce898174ed641ed780bfda1876552be09adfc999", "Url": "https://api.github.com/repos/apgapg/ReweyouForums", "Date": "2017-05-24T17:13:51Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { choreographer = android.view.Choreographer.getInstance(); } catch (java.lang.NullPointerException ex) { android.util.Log.e(com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper.VSyncSampler.TAG, (\"Choreographer instance created failed \" + (ex.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/5565/buggy-version/library.core.src.main.java.com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper.java", "BodyUseAPI": ["android.view.Choreographer.getInstance()"], "Fixed commit": "15d7de3c5e15d2e22cc14cc2f78d53ef1ccc261b", "Url": "https://api.github.com/repos/michalliu/Google_ExoPlayer", "Date": "2017-07-12T11:11:30Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { productService.checkIfProductInStock(updateProduct, newQuantity); } catch (com.acme.ecommerce.web.exceptions.QuantityExceedsStockException e) { redirectAttributes.addFlashAttribute(\"flash\", new com.acme.ecommerce.web.FlashMessage(\"Insufficient product in stock\", FAILURE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/779/buggy-version/src.main.java.com.acme.ecommerce.web.controller.CartController.java", "BodyUseAPI": ["com.acme.ecommerce.service.ProductService.checkIfProductInStock(com.acme.ecommerce.domain.Product,int)"], "Fixed commit": "89abb57e43f68a525315c94c74b254848a4cd2f8", "Url": "https://api.github.com/repos/dbriesz/e-commerce-shopping-cart", "Date": "2017-03-09T17:32:00Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { productService.checkIfProductInStock(addProduct, quantity); } catch (com.acme.ecommerce.web.exceptions.QuantityExceedsStockException e) { redirectAttributes.addFlashAttribute(\"flash\", new com.acme.ecommerce.web.FlashMessage(\"Insufficient product in stock\", FAILURE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/779/buggy-version/src.main.java.com.acme.ecommerce.web.controller.CartController.java", "BodyUseAPI": ["com.acme.ecommerce.service.ProductService.checkIfProductInStock(com.acme.ecommerce.domain.Product,int)"], "Fixed commit": "89abb57e43f68a525315c94c74b254848a4cd2f8", "Url": "https://api.github.com/repos/dbriesz/e-commerce-shopping-cart", "Date": "2017-03-09T17:32:00Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.thoughtworks.go.plugin.access.common.settings.Image icon = registry.getIcon(descriptor.id()); pluginInfos.add(new com.thoughtworks.go.server.ui.plugins.PluginInfo(descriptor, com.thoughtworks.go.plugin.access.elastic.Constants.EXTENSION_NAME, null, null, icon)); } catch (java.lang.Exception e) { com.thoughtworks.go.server.service.plugins.builder.ElasticAgentViewViewModelBuilder.LOGGER.error(\"Failed to load plugin info for {}\", descriptor.id(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1438/buggy-version/server.src.com.thoughtworks.go.server.service.plugins.builder.ElasticAgentViewViewModelBuilder.java", "BodyUseAPI": ["com.thoughtworks.go.plugin.api.info.PluginDescriptor.id()", "java.util.List<com.thoughtworks.go.server.ui.plugins.PluginInfo>.add(com.thoughtworks.go.server.ui.plugins.PluginInfo)", "com.thoughtworks.go.plugin.access.elastic.ElasticAgentPluginRegistry.getIcon(descriptor.id())"], "Fixed commit": "f38b214732958aa5222e864f8cb96bd5c72d9973", "Url": "https://api.github.com/repos/bdpiparva/gocd", "Date": "2016-11-23T05:30:52Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { redisStringTemplate.delete(key); } catch (java.lang.Exception e) { org.ednovo.gooru.domain.service.redis.RedisServiceImpl.logger.error((\"Get Values from redis failed!\" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4584/buggy-version/api.src.main.java.org.ednovo.gooru.domain.service.redis.RedisServiceImpl.java", "BodyUseAPI": ["org.springframework.data.redis.core.RedisTemplate<java.lang.String, java.lang.String>.delete(java.lang.String)"], "Fixed commit": "369b4de8939bcef4e846ad32fbd82cf0a3a81b3a", "Url": "https://api.github.com/repos/mohankumarc/Gooru-Core-API", "Date": "2015-02-12T07:54:07Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.bukkit.block.CreatureSpawner s = ((org.bukkit.block.CreatureSpawner) (spawnerBlock.getState())); s.setSpawnedType(event.getSpawnedType()); } catch (java.lang.Exception ex) { com.timvisee.dungeonmaze.Core.getLogger().error((\"Failed to set spawner type to \" + (event.getSpawnedType().name()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7547/buggy-version/src.main.java.com.timvisee.dungeonmaze.populator.maze.spawner.BossRoomEasyPopulator.java", "BodyUseAPI": ["org.bukkit.block.Block.getState()", "com.timvisee.dungeonmaze.event.generation.GenerationSpawnerEvent.getSpawnedType()", "org.bukkit.block.CreatureSpawner.setSpawnedType(event.getSpawnedType())"], "Fixed commit": "87ec1836583441f21f0ac4d712f837d63c4ab620", "Url": "https://api.github.com/repos/timvisee/dungeon-maze", "Date": "2016-03-13T14:29:36Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.bukkit.block.CreatureSpawner s = ((org.bukkit.block.CreatureSpawner) (spawnerBlock.getState())); s.setSpawnedType(event.getSpawnedType()); } catch (java.lang.Exception ex) { com.timvisee.dungeonmaze.Core.getLogger().error((\"Failed to set spawner type to \" + (event.getSpawnedType().name()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7547/buggy-version/src.main.java.com.timvisee.dungeonmaze.populator.maze.spawner.BossRoomEasyPopulator.java", "BodyUseAPI": ["org.bukkit.block.Block.getState()", "com.timvisee.dungeonmaze.event.generation.GenerationSpawnerEvent.getSpawnedType()", "org.bukkit.block.CreatureSpawner.setSpawnedType(event.getSpawnedType())"], "Fixed commit": "87ec1836583441f21f0ac4d712f837d63c4ab620", "Url": "https://api.github.com/repos/timvisee/dungeon-maze", "Date": "2016-03-13T14:29:36Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { newGame = ((acpc.Game) (game.clone())); } catch (java.lang.CloneNotSupportedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6326/buggy-version/src.acpc.Game.java", "BodyUseAPI": ["acpc.Game.clone()"], "Fixed commit": "f977cd1d44efcba0eb2e2aed17aaf618f2a28681", "Url": "https://api.github.com/repos/JaysenStark/MyCFR", "Date": "2017-06-11T05:22:36Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((st) != null) { st.close(); } if ((con) != null) { con.close(); } } catch (java.sql.SQLException ex) { java.util.logging.Logger lgr = java.util.logging.Logger.getLogger(com.vukstankovic.professionalorientation.Personalities.class.getName()); lgr.log(java.util.logging.Level.WARNING, ex.getMessage(), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/341/buggy-version/src.main.java.com.vukstankovic.recommender.Recommender.java", "BodyUseAPI": ["com.mysql.jdbc.Statement.close()", "com.mysql.jdbc.Connection.close()"], "Fixed commit": "0ca310b081620292a4d54350649a588266b6f350", "Url": "https://api.github.com/repos/vuk/ProfessionalOrientationMVN", "Date": "2014-09-13T09:55:42Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sessionValue = session.getAttribute(principalSessionName); } catch (java.lang.Exception ex) { if (com.alibaba.druid.support.http.AbstractWebStatImpl.LOG.isErrorEnabled()) { com.alibaba.druid.support.http.AbstractWebStatImpl.LOG.error(\"session.getAttribute error\", ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1643/buggy-version/src.main.java.com.alibaba.druid.support.http.AbstractWebStatImpl.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Fixed commit": "ae1d3701593cafdec238c35b45612eea8bd51504", "Url": "https://api.github.com/repos/qxo/druid", "Date": "2017-05-14T01:45:55Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final javax.xml.validation.Schema schema = javax.xml.validation.SchemaFactory.newInstance(javax.xml.XMLConstants.W3C_XML_SCHEMA_NS_URI).newSchema(); return schema.newValidator(); } catch (final org.xml.sax.SAXException ex) { throw new java.lang.IllegalStateException(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/7825/buggy-version/src.main.java.com.jcabi.xml.StrictXML.java", "BodyUseAPI": ["javax.xml.validation.Schema.newValidator()", "javax.xml.validation.SchemaFactory.newSchema()", "javax.xml.validation.SchemaFactory.newInstance(java.lang.String)"], "Fixed commit": "9c9bc821af013baa6f0e68f98d13e342ce842fb5", "Url": "https://api.github.com/repos/jcabi/jcabi-xml", "Date": "2015-01-14T22:06:52Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { shell.evaluate(initScript); } catch (java.lang.RuntimeException x) { hudson.init.impl.GroovyInitScript.LOGGER.log(java.util.logging.Level.WARNING, (\"Failed to run script \" + (initScript.getName())), x); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8800/buggy-version/core.src.main.java.hudson.init.impl.GroovyInitScript.java", "BodyUseAPI": ["groovy.lang.GroovyShell.evaluate(groovy.lang.GroovyCodeSource)"], "Fixed commit": "688420177afa64deb4adc9b4b92eede221cad884", "Url": "https://api.github.com/repos/petere/jenkins", "Date": "2013-05-13T14:42:20Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String[] names1 = names.split(\",\"); java.lang.String[] numbers1 = numbers.split(\",\"); entries = new java.util.ArrayList<>(); for (int i = 0; i < (names1.length); i++) { java.lang.String formattedName = android.text.Html.fromHtml(names1[i]).toString(); java.lang.String formattedNumber = android.text.Html.fromHtml(numbers1[i]).toString(); java.lang.String result = (formattedName + \"\\n\") + formattedNumber; entries.add(result); } return entries; } catch (java.lang.IndexOutOfBoundsException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4840/buggy-version/app.src.main.java.com.byteshatf.callrecorder.contactpicker.ContactsPicker.java", "BodyUseAPI": ["android.text.Html.fromHtml(java.lang.String)", "android.text.Html.fromHtml(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "android.text.Html.fromHtml(numbers1[i]).toString()", "android.text.Html.fromHtml(names1[i]).toString()"], "Fixed commit": "a338b9c7de35dd65975ab87d077a8a756901e74d", "Url": "https://api.github.com/repos/byteShaft/CallRecorder", "Date": "2015-09-22T07:57:35Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.example.chentian.chatrobot.tuling.TulingClient.Tuling tuling = restAdapter.create(com.example.chentian.chatrobot.tuling.TulingClient.Tuling.class); return tuling.fetch(com.example.chentian.chatrobot.tuling.TulingClient.API_KEY, params[0]); } catch (java.lang.Throwable e) { return new com.example.chentian.chatrobot.tuling.TulingApiResult(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/4189/buggy-version/app.src.main.java.com.example.chentian.chatrobot.tuling.TulingClient.java", "BodyUseAPI": ["retrofit.RestAdapter.create(java.lang.Class)", "com.example.chentian.chatrobot.tuling.TulingClient.Tuling.fetch(java.lang.String,java.lang.String)"], "Fixed commit": "50a6c8ade7c964d1ea4091142ac6594866b3eb59", "Url": "https://api.github.com/repos/lct8712/ChatRobot", "Date": "2014-11-01T02:33:27Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pageExists = page.hasExpectedPageTitle(); } catch (com.paypal.selion.testcomponents.PageYamlException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/2512/buggy-version/client.src.main.java.com.paypal.selion.platform.html.AbstractElement.java", "BodyUseAPI": ["com.paypal.selion.testcomponents.BasicPageImpl.hasExpectedPageTitle()"], "Fixed commit": "6869392a80fbcdebbeeec89e9315e6e56f33622a", "Url": "https://api.github.com/repos/renelux/SeLion", "Date": "2014-12-19T09:01:01Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { appName.setText((\"Aikuma \" + (this.getPackageManager().getPackageInfo(this.getPackageName(), 0).versionName))); } catch (au.edu.unimelb.aikuma.android e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/1859/buggy-version/BOLDApp.src.au.edu.unimelb.boldapp.InitialUserSelectionActivity.java", "BodyUseAPI": ["au.edu.unimelb.aikuma.InitialUserSelectionActivity.getPackageManager()", "android.widget.TextView.setText((\"Aikuma \" + (this.getPackageManager().getPackageInfo(this.getPackageName(), 0).versionName)))", "this.getPackageManager().getPackageInfo(this.getPackageName(),int)", "au.edu.unimelb.aikuma.InitialUserSelectionActivity.getPackageName()"], "Fixed commit": "e3b304ef15460fc2e1647e6fc538598ca34af08f", "Url": "https://api.github.com/repos/langtech/aikuma", "Date": "2013-03-22T00:09:09Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { return this.id; } catch (java.lang.Exception e) { return ((long) (0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/20/buggy-version/marlo-web.src.main.java.org.cgiar.ccafs.marlo.data.model.PlaAgreement.java", "BodyUseAPI": [], "Fixed commit": "7e2c879f59c0bb18b82a29fac774fcf06c2ac0da", "Url": "https://api.github.com/repos/CCAFS/MARLO", "Date": "2017-10-23T16:56:11Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.Set<io.github.benas.easybatch.core.impl.ValidationError> validationsErrors = recordValidator.validateRecord(typedRecord); if (!(validationsErrors.isEmpty())) { java.lang.StringBuilder stringBuilder = new java.lang.StringBuilder(); for (io.github.benas.easybatch.core.impl.ValidationError validationError : validationsErrors) { stringBuilder.append(validationError.getMessage()).append(\" | \"); } io.github.benas.easybatch.core.impl.EasyBatchEngine.LOGGER.log(java.util.logging.Level.SEVERE, (((((\"Record #\" + currentRecordNumber) + \" [\") + currentRecord) + \"] is not valid : \") + (stringBuilder.toString()))); easyBatchReport.addRejectedRecord(currentRecordNumber); easyBatchReport.addProcessingTime(currentRecordNumber, ((java.lang.System.currentTimeMillis()) - currentRecordProcessingStartTime)); continue; } } catch (java.lang.Exception e) { io.github.benas.easybatch.core.impl.EasyBatchEngine.LOGGER.log(java.util.logging.Level.SEVERE, ((((\"An exception occurred while validating record #\" + currentRecordNumber) + \" [\") + currentRecord) + \"]\"), e); easyBatchReport.addRejectedRecord(currentRecordNumber); easyBatchReport.addProcessingTime(currentRecordNumber, ((java.lang.System.currentTimeMillis()) - currentRecordProcessingStartTime)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/8902/buggy-version/easybatch-core.src.main.java.io.github.benas.easybatch.core.impl.EasyBatchEngine.java", "BodyUseAPI": ["io.github.benas.easybatch.core.impl.RecordValidator.validateRecord(java.lang.Object)", "java.lang.StringBuilder.append(java.lang.String)", "io.github.benas.easybatch.core.impl.EasyBatchReport.addProcessingTime(long,long)", "java.util.logging.Logger.log(java.util.logging.Level,(((((\"Record #\" + currentRecordNumber) + \" [\") + currentRecord) + \"] is not valid : \") + (stringBuilder.toString())))", "java.lang.StringBuilder.toString()", "java.lang.System.currentTimeMillis()", "java.util.Set<io.github.benas.easybatch.core.impl.ValidationError>.isEmpty()", "io.github.benas.easybatch.core.impl.EasyBatchReport.addRejectedRecord(long)", "java.lang.StringBuilder.append(validationError.getMessage())", "io.github.benas.easybatch.core.impl.ValidationError.getMessage()"], "Fixed commit": "0250fa98d35ad83eaad4528651d3b24df9caf3d1", "Url": "https://api.github.com/repos/benas/easy-batch", "Date": "2014-01-27T22:12:48Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(2000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/6694/buggy-version/src.com.kamontat.main.Main.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "2ca6c0f9b412202469a38fadca5ba65ee449d82e", "Url": "https://api.github.com/repos/kamontat/CheckIDNumber", "Date": "2016-11-05T18:56:01Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { vmc = adminCatClient.listVolumeMounts(new us.kbase.catalog.VolumeMountFilter().withModuleName(modMeth.getModule()).withClientGroup(clientGroup).withFunctionName(modMeth.getMethod())); } catch (java.lang.Exception ex) { log.logNextLine((\"Error requesing volume mounts from Catalog: \" + (ex.getMessage())), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V39/191/buggy-version/src.us.kbase.narrativejobservice.sdkjobs.SDKLocalMethodRunner.java", "BodyUseAPI": ["us.kbase.catalog.VolumeMountFilter.withModuleName(modMeth.getModule())", "us.kbase.common.executionengine.ModuleMethod.getModule()", "new us.kbase.catalog.VolumeMountFilter().withModuleName(modMeth.getModule()).withClientGroup(clientGroup).withFunctionName(modMeth.getMethod())", "us.kbase.catalog.CatalogClient.listVolumeMounts(new us.kbase.catalog.VolumeMountFilter().withModuleName(modMeth.getModule()).withClientGroup(clientGroup).withFunctionName(modMeth.getMethod()))", "new us.kbase.catalog.VolumeMountFilter().withModuleName(modMeth.getModule()).withClientGroup(java.lang.String)", "us.kbase.common.executionengine.ModuleMethod.getMethod()"], "Fixed commit": "d0b00dc933c88766abb04f5d08751a2a4d5b3bf8", "Url": "https://api.github.com/repos/MrCreosote/njs_wrapper", "Date": "2016-06-10T23:43:25Z"},
{"Line": "=>1141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.pipeline = pipelineFacade.getPipeline(java.lang.Long.parseLong(id)); } catch (org.springframework.security.access.AccessDeniedException e) { cz.cuni.mff.xrg.odcs.frontend.gui.views.Notification.show(\"Error opening pipeline detail.\", \"You don't have permission to view this pipeline\", Type.ERROR_MESSAGE); closeView(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8968/buggy-version/frontend.src.main.java.cz.cuni.mff.xrg.odcs.frontend.gui.views.PipelineEdit.java", "BodyUseAPI": ["cz.cuni.mff.xrg.odcs.commons.app.facade.PipelineFacade.getPipeline(long)", "java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "f7d74a4121f2c992cbba5007462aa65617dbc3fa", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2014-08-12T11:12:15Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { buffer.delete(0, (2000 - (buffer.length()))); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3988/buggy-version/plugins.org.python.pydev.customizations.src.org.python.pydev.customizations.common.ProcessWindow.java", "BodyUseAPI": ["org.python.pydev.core.structure.FastStringBuffer.length()", "org.python.pydev.core.structure.FastStringBuffer.delete(int,(2000 - (buffer.length())))"], "Fixed commit": "69683cdb211cb92917a460d038607b718cbcee42", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2011-08-15T00:20:51Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.eclipse.kura.core.data.transport.mqtt.MqttDataTransport.s_logger.warn(\"xxxxx Connect failed. Forcing disconnect. xxxxx {}\", e.getMessage()); if ((e.getCause()) != null) { org.eclipse.kura.core.data.transport.mqtt.MqttDataTransport.s_logger.warn(\"xxxxxxxxxx Connect failed. Forcing disconnect. Exception caused by: {}\", e.getCause().getMessage()); } } catch (java.lang.Exception e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5279/buggy-version/kura.org.eclipse.kura.core.src.main.java.org.eclipse.kura.core.data.transport.mqtt.MqttDataTransport.java", "BodyUseAPI": ["org.eclipse.paho.client.mqttv3.MqttException.getCause()", "org.slf4j.Logger.warn(java.lang.String,e.getCause().getMessage())", "org.eclipse.paho.client.mqttv3.MqttException.getCause()", "org.slf4j.Logger.warn(java.lang.String,e.getMessage())", "org.eclipse.paho.client.mqttv3.MqttException.getMessage()", "e.getCause().getMessage()"], "Fixed commit": "80c16bc7a8021a23a36bb22a8621290d04f0e752", "Url": "https://api.github.com/repos/eclipse/kura", "Date": "2015-02-25T01:29:05Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return arrays.get(arrayIndex)[innerIndex]; } catch (java.lang.Exception e) { java.lang.System.err.println(\"A\"); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2051/buggy-version/src.bm.clustering.MyCustomBigArray.java", "BodyUseAPI": ["java.util.List<float[]>.get(int)"], "Fixed commit": "6e6666c9227b2c165723889f2c9d01485833960b", "Url": "https://api.github.com/repos/GiacomoManzoli/YASS", "Date": "2016-12-20T16:21:54Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { this.remark = new javafx.beans.property.SimpleObjectProperty(new seedu.address.model.person.Remark(\"--No Remarks--\")); } catch (seedu.address.commons.exceptions.IllegalValueException ive) { throw new java.lang.AssertionError(\"sample data cannot be invalid\", ive); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1412/buggy-version/src.main.java.seedu.address.model.person.Person.java", "BodyUseAPI": [], "Fixed commit": "6ed707f1bb17c2352e6d0e8ded673f922ea4e6b1", "Url": "https://api.github.com/repos/CS2103AUG2017-F09-B3/main", "Date": "2017-10-04T19:11:53Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.StringBuilder buffer = new java.lang.StringBuilder(); java.io.BufferedReader formReader = request.getReader(); java.lang.String line; while ((line = formReader.readLine()) != null) { buffer.append(line); } data = buffer.toString(); } catch (java.io.IOException e) { data = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/3219/buggy-version/geowebcache.rest.src.main.java.org.geowebcache.rest.controller.ReloadController.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "javax.servlet.http.HttpServletRequest.getReader()", "java.lang.StringBuilder.append(java.lang.String)", "java.io.BufferedReader.readLine()"], "Fixed commit": "093df24c7648f75194834ddf4a9e238c6f5e98a7", "Url": "https://api.github.com/repos/mwengren/geowebcache", "Date": "2017-09-12T17:20:51Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { epc = object.getString(\"EPC\"); } catch (org.json.JSONException e) { callbackContext.error(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6787/buggy-version/src.android.BT77RfidReader.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "57c6ae24b1025cc958d0e150dfa0715780c2f2b6", "Url": "https://api.github.com/repos/ByteDoc/cordova-rfid-bt77", "Date": "2016-11-08T13:11:32Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ServerMainLoop.tcp.stop(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8179/buggy-version/Chat.src.ServerMainLoop.java", "BodyUseAPI": ["TCP.stop()"], "Fixed commit": "7f9d0af87b32867f02910518808a5eda017a0432", "Url": "https://api.github.com/repos/ragnarok089/CS544", "Date": "2013-06-08T03:25:36Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startActivity(intent); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7429/buggy-version/app.src.main.java.com.pacmac.devinfo.GpsInfoLocation.java", "BodyUseAPI": ["com.pacmac.devinfo.GpsInfoLocation.3.startActivity(android.content.Intent)"], "Fixed commit": "8fb3d4fb10027787d9de580ed4dffbbd5d4dc911", "Url": "https://api.github.com/repos/Pavel87/DeviceDiag", "Date": "2017-06-16T15:28:55Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { curLatex = node.getFirstChild().getNodeValue(); } catch (java.lang.NullPointerException e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8390/buggy-version/src.main.java.de.tuberlin.dima.schubotz.fse.SectionLatexMapper.java", "BodyUseAPI": ["org.w3c.dom.Node.getFirstChild()", "org.w3c.dom.Node.getNodeValue()"], "Fixed commit": "4ba4ce203db1da4a2a87bea60f51923aac7db3ce", "Url": "https://api.github.com/repos/physikerwelt/mathosphere2", "Date": "2014-06-27T17:31:00Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return com.vmware.aurora.global.Configuration.config.getBoolean(key, defaultValue); } catch (org.apache.commons.configuration.ConversionException ce) { com.vmware.aurora.global.Configuration.logger.error((key + \" in serengeti.properties is not a boolean!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4460/buggy-version/server.common.src.main.java.com.vmware.aurora.global.Configuration.java", "BodyUseAPI": ["org.apache.commons.configuration.PropertiesConfiguration.getBoolean(java.lang.String,java.lang.Boolean)"], "Fixed commit": "e7e7f3f98743d389ccbdbf66d9fb1ee5e5c024cf", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-12-26T03:00:58Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return com.vmware.aurora.global.Configuration.config.getInt(key, defaultValue); } catch (org.apache.commons.configuration.ConversionException ce) { com.vmware.aurora.global.Configuration.logger.error((key + \" in serengeti.properties is not an integer!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4460/buggy-version/server.common.src.main.java.com.vmware.aurora.global.Configuration.java", "BodyUseAPI": ["org.apache.commons.configuration.PropertiesConfiguration.getInt(java.lang.String,int)"], "Fixed commit": "e7e7f3f98743d389ccbdbf66d9fb1ee5e5c024cf", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-12-26T03:00:58Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return com.vmware.aurora.global.Configuration.config.getDouble(key, defaultValue); } catch (org.apache.commons.configuration.ConversionException ce) { com.vmware.aurora.global.Configuration.logger.error((key + \" in serengeti.properties is not a double!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4460/buggy-version/server.common.src.main.java.com.vmware.aurora.global.Configuration.java", "BodyUseAPI": ["org.apache.commons.configuration.PropertiesConfiguration.getDouble(java.lang.String,java.lang.Double)"], "Fixed commit": "e7e7f3f98743d389ccbdbf66d9fb1ee5e5c024cf", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-12-26T03:00:58Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return com.vmware.aurora.global.Configuration.config.getLong(key, defaultValue); } catch (org.apache.commons.configuration.ConversionException ce) { com.vmware.aurora.global.Configuration.logger.error((key + \" in serengeti.properties is not a long!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4460/buggy-version/server.common.src.main.java.com.vmware.aurora.global.Configuration.java", "BodyUseAPI": ["org.apache.commons.configuration.PropertiesConfiguration.getLong(java.lang.String,long)"], "Fixed commit": "e7e7f3f98743d389ccbdbf66d9fb1ee5e5c024cf", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-12-26T03:00:58Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dest.writeByte(((byte) (used.booleanValue() ? 1 : 0))); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7427/buggy-version/app.src.main.java.com.android.udl.locationoffers.domain.Message.java", "BodyUseAPI": ["java.lang.Boolean.booleanValue()", "android.os.Parcel.writeByte(int)"], "Fixed commit": "0b5c3c2a6c31b83c310e0dd458dfa38e7c38faab", "Url": "https://api.github.com/repos/gerard87/LocationOffers", "Date": "2017-04-19T16:15:00Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.example.myweathernow.MeteoInfo meteo = new com.example.myweathernow.background_check.APIManager(this.getApplicationContext()).getMeteoInfo(currentLocation); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1174/buggy-version/myweathernow.src.com.example.myweathernow.background_check.SynchService.java", "BodyUseAPI": ["com.example.myweathernow.background_check.SynchService.getApplicationContext()", "com.example.myweathernow.background_check.APIManager.getMeteoInfo(android.location.Location)"], "Fixed commit": "db7bad49394fd5de96ce2f69d35046ee41c2684a", "Url": "https://api.github.com/repos/luca-mastrostefano/MyWeatherNow", "Date": "2015-01-04T23:38:19Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Runtime.getRuntime().exec(((((\"dot -Tpng -o\" + filename) + \".png \") + filename) + \".dot\")).waitFor(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/621/buggy-version/src.org.yoooo.se1.ShowDirectedGraph.java", "BodyUseAPI": ["java.lang.Runtime.exec(java.lang.String)", "java.lang.Process.waitFor()", "java.lang.Runtime.getRuntime()"], "Fixed commit": "880dfce84df9b5bdcf627706af792069ac3ba99a", "Url": "https://api.github.com/repos/SE-Lab2017/Lab1", "Date": "2017-09-12T13:40:49Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.github.kubatatami.judonetworking.observers.ObservableCache.dataObserverMethodsCache.put(clazz, com.github.kubatatami.judonetworking.observers.ObservableCache.getMethods(clazz)); } catch (java.lang.NoClassDefFoundError ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/6321/buggy-version/observers.src.com.github.kubatatami.judonetworking.observers.ObservableCache.java", "BodyUseAPI": ["android.support.v4.util.LruCache<java.lang.Class<?>, java.util.List<com.github.kubatatami.judonetworking.observers.ObservableCache.DataObserverMethod>>.put(java.lang.Class<?>,java.util.List<com.github.kubatatami.judonetworking.observers.ObservableCache.DataObserverMethod>)", "com.github.kubatatami.judonetworking.observers.ObservableCache.getMethods(java.lang.Class<?>)"], "Fixed commit": "a51f30f442bdc203b6d9a5dcfbab28ebe2c48bab", "Url": "https://api.github.com/repos/kubatatami/JudoNetworking", "Date": "2014-04-07T11:44:05Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { processIndexUpdate(iDocument, dirtyFields, index); } catch (com.orientechnologies.orient.core.storage.ORecordDuplicatedException ex) { iDocument.undo(); iDocument.setDirty(); database.save(iDocument); throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1886/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.OClassIndexManager.java", "BodyUseAPI": ["com.orientechnologies.orient.core.index.OClassIndexManager.processIndexUpdate(com.orientechnologies.orient.core.record.impl.ODocument,java.util.Set<java.lang.String>,com.orientechnologies.orient.core.index.OIndex<?>)"], "Fixed commit": "036fe0e3d17ba3373fb4cb0460e7880042f67a24", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-02-01T12:47:54Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { filter.setReaded(false); java.util.List<eu.trentorise.smartcampus.storage.BatchModel> list = new java.util.ArrayList<eu.trentorise.smartcampus.storage.BatchModel>(); for (eu.trentorise.smartcampus.communicator.model.Notification n : eu.trentorise.smartcampus.communicator.custom.data.CommunicatorHelper.getRawNotifications(filter, 0, (-1), 0)) { n.setReaded(true); list.add(new eu.trentorise.smartcampus.storage.sync.SyncUpdateModel.UpdateModel(n, false, true)); } eu.trentorise.smartcampus.communicator.custom.data.CommunicatorHelper.getInstance().storage.batch(list); } finally { filter.setReaded(readed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7993/buggy-version/src.eu.trentorise.smartcampus.communicator.custom.data.CommunicatorHelper.java", "BodyUseAPI": ["eu.trentorise.smartcampus.communicator.custom.data.CommunicatorHelper.getInstance()", "eu.trentorise.smartcampus.communicator.model.NotificationFilter.setReaded(boolean)", "eu.trentorise.smartcampus.communicator.custom.data.CommSyncStorage.batch(java.util.List<eu.trentorise.smartcampus.storage.BatchModel>)", "java.util.List<eu.trentorise.smartcampus.storage.BatchModel>.add(eu.trentorise.smartcampus.storage.sync.SyncUpdateModel.UpdateModel)", "eu.trentorise.smartcampus.communicator.custom.data.CommunicatorHelper.getRawNotifications(eu.trentorise.smartcampus.communicator.model.NotificationFilter,int,int,int)", "eu.trentorise.smartcampus.communicator.model.Notification.setReaded(boolean)"], "Fixed commit": "3e243d1de4b300a1d683838ef48cccfa2520e359", "Url": "https://api.github.com/repos/smartcampuslab/smartcampus.vas.communicator.android", "Date": "2013-11-07T16:50:01Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4970/buggy-version/src.main.java.events.regularevents.RegularEventDispatcher.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "2281237c3de7f6135afdbfd037cff6306817d171", "Url": "https://api.github.com/repos/Enifs/EventHandling", "Date": "2015-08-14T15:38:33Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class.forName(\"com.asterdata.ncluster.Driver\"); } catch (java.lang.ClassNotFoundException e) { logger.error((\"Class not found: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2007/buggy-version/src.main.java.org.embulk.input.aster.AsterInputPlugin.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)"], "Fixed commit": "f411986c51fa2351240d9a25c46352c181157976", "Url": "https://api.github.com/repos/ebyhr/embulk-input-aster", "Date": "2017-08-16T13:43:01Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { timer.wait(); } catch (java.lang.InterruptedException e) { } catch (java.lang.IllegalMonitorStateException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/9184/buggy-version/Keuzepoort.src.SystemController.java", "BodyUseAPI": ["java.util.Timer.wait()"], "Fixed commit": "dd07d29a4e5585a0d17cbacf25507014f3834511", "Url": "https://api.github.com/repos/WiertOmta/KeuzepoortV3", "Date": "2015-02-25T11:42:54Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { timer.notify(); } catch (java.lang.IllegalMonitorStateException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/9184/buggy-version/Keuzepoort.src.SystemController.java", "BodyUseAPI": ["java.util.Timer.notify()"], "Fixed commit": "dd07d29a4e5585a0d17cbacf25507014f3834511", "Url": "https://api.github.com/repos/WiertOmta/KeuzepoortV3", "Date": "2015-02-25T11:42:54Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { resultStr = (((((((((((((((((((((((((((((((((((((OBFConverterRus.text.RU_EN_ANALYZING_REPORT_START) + (fullSource.getCells()[(firstRowIndex - 1)][result[0]])) + \"|\") + (fullSource.getCells()[(firstRowIndex - 1)][result[1]])) + \"|\") + (fullSource.getCells()[(firstRowIndex - 1)][result[2]])) + \"|\") + (fullSource.getCells()[(firstRowIndex - 1)][result[3]])) + \"|\") + (fullSource.getCells()[(firstRowIndex - 1)][result[4]])) + \"|\") + (fullSource.getCells()[(firstRowIndex - 1)][result[5]])) + \"|\\n\") + (OBFConverterRus.text.RU_EN_ANALYZING_REPORT_1_ROW)) + (fullSource.getCells()[firstRowIndex][result[0]])) + \"|\") + (fullSource.getCells()[firstRowIndex][result[1]])) + \"|\") + (fullSource.getCells()[firstRowIndex][result[2]])) + \"|\") + (fullSource.getCells()[firstRowIndex][result[3]])) + \"|\") + (fullSource.getCells()[firstRowIndex][result[4]])) + \"|\") + (fullSource.getCells()[firstRowIndex][result[5]])) + (OBFConverterRus.text.RU_EN_ANALYZING_REPORT_2_ROW)) + (fullSource.getCells()[(firstRowIndex + 1)][result[0]])) + \"|\") + (fullSource.getCells()[(firstRowIndex + 1)][result[1]])) + \"|\") + (fullSource.getCells()[(firstRowIndex + 1)][result[2]])) + \"|\") + (fullSource.getCells()[(firstRowIndex + 1)][result[3]])) + \"|\") + (fullSource.getCells()[(firstRowIndex + 1)][result[4]])) + \"|\") + (fullSource.getCells()[(firstRowIndex + 1)][result[5]])) + (OBFConverterRus.text.RU_EN_ANALYZING_REPORT_END); } catch (java.lang.ArrayIndexOutOfBoundsException e) { OBFConverter.log.postError(\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b \u0442\u0430\u0431\u043b\u0438\u0446\u044b.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8467/buggy-version/java.1.0.1-Russia.src.org.openbudget.russia.converter.ConverterUtilsRus.java", "BodyUseAPI": ["org.openbudget.model.SourceTable.getCells()", "org.openbudget.model.SourceTable.getCells()", "org.openbudget.model.SourceTable.getCells()", "org.openbudget.model.SourceTable.getCells()", "org.openbudget.model.SourceTable.getCells()", "org.openbudget.model.SourceTable.getCells()", "org.openbudget.model.SourceTable.getCells()", "org.openbudget.model.SourceTable.getCells()", "org.openbudget.model.SourceTable.getCells()", "org.openbudget.model.SourceTable.getCells()", "org.openbudget.model.SourceTable.getCells()", "org.openbudget.model.SourceTable.getCells()", "org.openbudget.model.SourceTable.getCells()", "org.openbudget.model.SourceTable.getCells()", "org.openbudget.model.SourceTable.getCells()", "org.openbudget.model.SourceTable.getCells()", "org.openbudget.model.SourceTable.getCells()", "org.openbudget.model.SourceTable.getCells()"], "Fixed commit": "3bead9e3da5ea7d127be9790b7445f5dcdbf731d", "Url": "https://api.github.com/repos/OpenCityRu/openfinances", "Date": "2015-08-01T23:49:49Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.upns.alex.nerfsocmarshalapp.Game game = new com.upns.alex.nerfsocmarshalapp.Game(); game.title = games.getJSONObject(i).getString(\"title\"); game.description = games.getJSONObject(i).getString(\"description\"); game.label = (\"\" + (games.getJSONObject(i).getInt(\"roundLength\"))) + \" mins\"; game.rules = games.getJSONObject(i).getString(\"rules\"); game.roundLength = games.getJSONObject(i).getInt(\"roundLength\"); game.teamsRounds = games.getJSONObject(i).getString(\"teamsRounds\"); game.teams = games.getJSONObject(i).getInt(\"teams\"); game.rounds = games.getJSONObject(i).getInt(\"rounds\"); game.typesJson = games.getJSONObject(i).getJSONArray(\"type\"); if ((games.getJSONObject(i).getJSONObject(\"players\").length()) != 0) { game.playersJson = games.getJSONObject(i).getJSONObject(\"players\"); } for (int j = 0; j < (game.typesJson.length()); j++) { game.types.add(game.typesJson.getString(j)); } if ((game.playersJson) != null) { java.util.Iterator<java.lang.String> iterator = game.playersJson.keys(); while (iterator.hasNext()) { java.lang.String name = iterator.next(); java.lang.Double value = game.playersJson.getDouble(name); com.upns.alex.nerfsocmarshalapp.PlayerType playerType = new com.upns.alex.nerfsocmarshalapp.PlayerType(name, value); game.playerTypes.add(playerType); } } gameList.add(game); } catch (org.json.JSONException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2699/buggy-version/app.src.main.java.com.upns.alex.nerfsocmarshalapp.Game.java", "BodyUseAPI": ["org.json.JSONObject.getDouble(java.lang.String)", "org.json.JSONArray.getJSONObject(int)", "java.util.Iterator<java.lang.String>.next()", "org.json.JSONArray.getJSONObject(int)", "java.util.ArrayList<java.lang.String>.add(game.typesJson.getString(j))", "org.json.JSONArray.getString(int)", "games.getJSONObject(i).getInt(java.lang.String)", "org.json.JSONArray.getJSONObject(int)", "games.getJSONObject(i).getString(java.lang.String)", "java.util.Iterator<java.lang.String>.hasNext()", "java.util.ArrayList<com.upns.alex.nerfsocmarshalapp.PlayerType>.add(com.upns.alex.nerfsocmarshalapp.PlayerType)", "org.json.JSONArray.getJSONObject(int)", "org.json.JSONArray.getJSONObject(int)", "games.getJSONObject(i).getJSONArray(java.lang.String)", "java.util.ArrayList<com.upns.alex.nerfsocmarshalapp.Game>.add(com.upns.alex.nerfsocmarshalapp.Game)", "games.getJSONObject(i).getJSONObject(\"players\").length()", "games.getJSONObject(i).getString(java.lang.String)", "games.getJSONObject(i).getJSONObject(java.lang.String)", "games.getJSONObject(i).getInt(java.lang.String)", "games.getJSONObject(i).getInt(java.lang.String)", "games.getJSONObject(i).getString(java.lang.String)", "org.json.JSONArray.getJSONObject(int)", "org.json.JSONArray.getJSONObject(int)", "games.getJSONObject(i).getString(java.lang.String)", "games.getJSONObject(i).getJSONObject(java.lang.String)", "games.getJSONObject(i).getInt(java.lang.String)", "org.json.JSONArray.getJSONObject(int)", "org.json.JSONArray.getJSONObject(int)", "org.json.JSONArray.getJSONObject(int)", "org.json.JSONArray.getJSONObject(int)", "org.json.JSONObject.keys()", "org.json.JSONArray.length()"], "Fixed commit": "d86d9958966f9bdfedc55211de5565d3c7718e3e", "Url": "https://api.github.com/repos/amurphy4/NerfSoc-Marshals-App", "Date": "2017-07-18T21:09:06Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { games = jsonObject.getJSONArray(\"games\"); } catch (org.json.JSONException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/2699/buggy-version/app.src.main.java.com.upns.alex.nerfsocmarshalapp.Game.java", "BodyUseAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "d86d9958966f9bdfedc55211de5565d3c7718e3e", "Url": "https://api.github.com/repos/amurphy4/NerfSoc-Marshals-App", "Date": "2017-07-18T21:09:06Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { output.close(); input.close(); socket.close(); } catch (java.io.IOException ioe) { ioe.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4774/buggy-version/src.ServerConnection.java", "BodyUseAPI": ["java.io.ObjectOutputStream.close()", "java.net.Socket.close()", "java.io.ObjectInputStream.close()"], "Fixed commit": "a976601057d7e40005e7d882ed0f42916eadbd93", "Url": "https://api.github.com/repos/gfillipow95/Inf-122-Final-Project", "Date": "2017-03-20T07:01:15Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mission.two.FileManager.writeInFile(outputFile, \"\"); } catch (java.io.IOException e) { java.lang.System.err.println((\"Une erreur est survenue \u00e0 l'\u00e9criture dans le fichier \" + outputFile)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8068/buggy-version/Missions.src.mission.two.Derivation.java", "BodyUseAPI": ["mission.two.FileManager.writeInFile(java.lang.String,java.lang.String)"], "Fixed commit": "44aa412a666c64a7f1289f03d7e5016cddcc00e4", "Url": "https://api.github.com/repos/dsarkozi/Algo-Groupe-11", "Date": "2013-10-15T11:18:58Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { lines = mission.two.FileManager.readFile(inputFile); } catch (java.io.IOException e) { java.lang.System.err.println((\"Une erreur est survenue \u00e0 la lecture du fichier \" + inputFile)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/8068/buggy-version/Missions.src.mission.two.Derivation.java", "BodyUseAPI": ["mission.two.FileManager.readFile(java.lang.String)"], "Fixed commit": "44aa412a666c64a7f1289f03d7e5016cddcc00e4", "Url": "https://api.github.com/repos/dsarkozi/Algo-Groupe-11", "Date": "2013-10-15T11:18:58Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { array.add(result.getString(1)); } catch (java.lang.Exception es) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7352/buggy-version/src.net.estinet.gFeatures.Feature.gRanks.SQLConnect.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.sql.ResultSet.getString(int)"], "Fixed commit": "2fbc8a7c596d4edeb1b7c46e70b2a9027b42f457", "Url": "https://api.github.com/repos/EstiNet/gFeatures", "Date": "2015-10-11T15:31:03Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String x = null; x = x.substring(0); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4700/buggy-version/src.com.yiibai.struts2.HelloWorldActionException.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "fd1bbbf402f189e3fb1aca946d00bb9c04cc49d2", "Url": "https://api.github.com/repos/n5xm/teststruts", "Date": "2015-01-04T07:16:40Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return super.resolveProperty(type, expr); } catch (java.lang.IllegalArgumentException e) { return resolveCustomProperty(expr, propertyType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5026/buggy-version/core.src.main.java.ma.glasnost.orika.metadata.ClassMapBuilderForMaps.java", "BodyUseAPI": ["ma.glasnost.orika.metadata.ClassMapBuilder<A, B>.resolveProperty(ma.glasnost.orika.metadata.Type<?>,java.lang.String)"], "Fixed commit": "2ba44a3ca0d246462515793561d80f6a9379b2da", "Url": "https://api.github.com/repos/orika-mapper/orika", "Date": "2013-05-30T03:32:29Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.concurrent.TimeUnit.MILLISECONDS.sleep(500); me.neelmehta.hackthenorth.pluggable.Pluggable.reRender(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); me.neelmehta.hackthenorth.pluggable.Pluggable.reRender(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/182/buggy-version/android.app.src.main.java.me.neelmehta.hackthenorth.pluggable.Pluggable.java", "BodyUseAPI": ["java.util.concurrent.TimeUnit.sleep(int)", "me.neelmehta.hackthenorth.pluggable.Pluggable.reRender()"], "Fixed commit": "208f719dcc5d614c74ccb589d965eff272a13177", "Url": "https://api.github.com/repos/neelmehta247/HackTheNorth", "Date": "2017-09-17T07:26:10Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { definition = reader.readWSDL(url); } catch (javax.wsdl.WSDLException e) { jolie.Interpreter interpreter = jolie.Interpreter.getInstance(); try { java.io.InputStream inputStream = interpreter.getClassLoader().getResourceAsStream(url); java.io.Reader fileReader = new java.io.InputStreamReader(inputStream); org.xml.sax.InputSource is = new org.xml.sax.InputSource(fileReader); definition = reader.readWSDL(interpreter.getClassLoader().getResource(url).toURI().toString(), is); } catch (java.lang.Exception e2) { e2.printStackTrace(); throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4631/buggy-version/extensions.soap.src.jolie.net.soap.WSDLCache.java", "BodyUseAPI": ["javax.wsdl.xml.WSDLReader.readWSDL(java.lang.String)"], "Fixed commit": "b5e8c624661160c8cbde01c9a114b2054296f5f0", "Url": "https://api.github.com/repos/klag/jolie", "Date": "2017-06-09T14:27:42Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { folder = org.opencps.util.DLFolderUtil.getFolder(serviceContext.getScopeGroupId(), parentFolderId, java.lang.String.valueOf(count)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/1390/buggy-version/portlets.opencps-portlet.docroot.WEB-INF.src.org.opencps.dossiermgt.service.impl.DossierLocalServiceImpl.java", "BodyUseAPI": ["java.lang.String.valueOf(int)", "com.liferay.portal.service.ServiceContext.getScopeGroupId()", "org.opencps.util.DLFolderUtil.getFolder(serviceContext.getScopeGroupId(),long,java.lang.String)"], "Fixed commit": "3c39d7a00a5988aa786eb19683a261177e88a40f", "Url": "https://api.github.com/repos/trungnt-ksnb/opencps", "Date": "2016-06-27T11:01:26Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final com.microsoftopentechnologies.tooling.msservices.serviceexplorer.Node node = e.getAction().getNode(); node.setLoading(true); com.microsoftopentechnologies.tooling.msservices.helpers.azure.sdk.AzureSDKManagerImpl.getManager().deleteStorageAccount(storageAccount); com.microsoftopentechnologies.tooling.msservices.components.DefaultLoader.getIdeHelper().invokeLater(new java.lang.Runnable() { @java.lang.Override public void run() { getParent().removeDirectChildNode(node); } }); } catch (com.microsoftopentechnologies.tooling.msservices.helpers.azure.AzureCmdException ex) { com.microsoftopentechnologies.tooling.msservices.components.DefaultLoader.getUIHelper().showException(\"Error deleting storage account\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4425/buggy-version/src.common.src.com.microsoftopentechnologies.tooling.msservices.serviceexplorer.azure.storage.StorageNode.java", "BodyUseAPI": ["com.microsoftopentechnologies.tooling.msservices.helpers.azure.sdk.AzureSDKManagerImpl.getManager().deleteStorageAccount(com.microsoftopentechnologies.tooling.msservices.model.storage.StorageAccount)", "java.lang.Object()", "com.microsoftopentechnologies.tooling.msservices.helpers.azure.sdk.AzureSDKManagerImpl.getManager()", "com.microsoftopentechnologies.tooling.msservices.serviceexplorer.NodeActionEvent.getAction()", "com.microsoftopentechnologies.tooling.msservices.serviceexplorer.Node.setLoading(boolean)", "com.microsoftopentechnologies.tooling.msservices.serviceexplorer.azure.storage.StorageNode.DeleteStorageAccountAction.2.getParent()", "e.getAction().getNode()", "getParent().removeDirectChildNode(com.microsoftopentechnologies.tooling.msservices.serviceexplorer.Node)", "com.microsoftopentechnologies.tooling.msservices.components.DefaultLoader.getIdeHelper().invokeLater(java.lang.Runnable)", "com.microsoftopentechnologies.tooling.msservices.components.DefaultLoader.getIdeHelper()"], "Fixed commit": "acea74c52bb2dbeda02be073b01a10d092b6fe0e", "Url": "https://api.github.com/repos/akrakovsky/msopentech-tools-for-intellij", "Date": "2015-06-12T15:07:41Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { if (ret == (-1)) { throw new com.example.michael.kassenautomat_dhbw.exceptions.DbException(((\"Couldn\u00b4t insert into \" + (com.example.michael.kassenautomat_dhbw.database.tables.TableQuittung.DB_TABLE_NAME)) + \".\")); } } catch (com.example.michael.kassenautomat_dhbw.exceptions.DbException e) { writeDatabase.endTransaction(); throw e; } finally { writeDatabase.setTransactionSuccessful(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/5734/buggy-version/Kassenautomat-1-master.Kassenautomat_DHBW_AS.app.src.main.java.com.example.michael.kassenautomat_dhbw.database.DatabaseConnection.java", "BodyUseAPI": [], "Fixed commit": "16a7cc6706338b76b78a4d708598862ecfca79a7", "Url": "https://api.github.com/repos/Poescho/Advanced-SWE", "Date": "2016-12-14T15:34:37Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { matcher.appendReplacement(result, net.nightwhistler.htmlspanner.TextUtil.getReplacement(matcher, replacements)); } catch (java.lang.ArrayIndexOutOfBoundsException i) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/4896/buggy-version/src.main.java.net.nightwhistler.htmlspanner.TextUtil.java", "BodyUseAPI": ["net.nightwhistler.htmlspanner.TextUtil.getReplacement(java.util.regex.Matcher,java.util.Map<java.lang.String, java.lang.String>)", "java.util.regex.Matcher.appendReplacement(java.lang.StringBuffer,java.lang.String)"], "Fixed commit": "437add4ae6544d34be16ac7e72d01883a45de019", "Url": "https://api.github.com/repos/NightWhistler/HtmlSpanner", "Date": "2013-07-31T06:02:55Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { properties.load(is); } finally { is.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V40/7679/buggy-version/src.main.java.net.kozelka.gitsite.mojo.AbstractMultiModuleMojo.java", "BodyUseAPI": ["java.util.Properties.load(java.io.FileInputStream)"], "Fixed commit": "574d3408ff22d978b7e32b7f465e17ebcf0d68d8", "Url": "https://api.github.com/repos/pkozelka/gitsite-maven-plugin", "Date": "2016-04-17T17:32:55Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { updatingFromEditor = true; getTreeViewer().setSelection(newSelection, true); } finally { updatingFromEditor = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1440/buggy-version/plugin_ide.ui.src-lang.melnorme.lang.ide.ui.editor.structure.LangOutlinePage.java", "BodyUseAPI": ["getTreeViewer().setSelection(org.eclipse.jface.viewers.StructuredSelection,boolean)", "melnorme.lang.ide.ui.editor.structure.LangOutlinePage.getTreeViewer()"], "Fixed commit": "f806d36bdc7066623b21121dd2316c2352d06a1a", "Url": "https://api.github.com/repos/RustDT/RustDT", "Date": "2015-05-28T12:10:35Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { hashDataIS = reqHdi.getHashDataInput(); } catch (java.io.IOException e) { at.gv.egiz.stal.service.types.GetHashDataInputFaultType faultInfo = new at.gv.egiz.stal.service.types.GetHashDataInputFaultType(); faultInfo.setErrorCode(1); faultInfo.setErrorMessage(e.getMessage()); throw new at.gv.egiz.stal.service.GetHashDataInputFault(e.getMessage(), faultInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2541/buggy-version/BKUOnline.src.main.java.at.gv.egiz.stal.service.impl.STALServiceImpl.java", "BodyUseAPI": ["at.gv.egiz.stal.HashDataInput.getHashDataInput()"], "Fixed commit": "42940c983e8452a859f950fa175645fb4a7715ee", "Url": "https://api.github.com/repos/primesign/mocca", "Date": "2015-10-29T21:59:15Z"},
{"Line": "=>803", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { double latestVersion = java.lang.Double.parseDouble(appInfo.get(\"version\").toString()); double installedVersion = java.lang.Double.parseDouble(application.getPackageVersion()); if (installedVersion < latestVersion) { if (\"Y\".equals(appInfo.get(\"forceUpdate\"))) showOKDialog(\"\uc54c\ub9bc\", \"\\uc774\\uadfc\\ucc98 \\ud569\\uc2b9\\uc774 \\uc5c5\\ub370\\uc774\\ud2b8 \\ub418\\uc5c8\\uc2b5\\ub2c8\\ub2e4.\\r\\n\\ud655\\uc778\\uc744 \\ub204\\ub974\\uc2dc\\uba74 \\uc5c5\\ub370\\uc774\\ud2b8 \\ud654\\uba74\\uc73c\\ub85c \\uc774\\ub3d9\\ud569\\ub2c8\\ub2e4.\", com.tessoft.nearhere.MainActivity.UPDATE_NOTICE); else showYesNoDialog(\"\uc54c\ub9bc\", \"\\uc774\\uadfc\\ucc98 \\ud569\\uc2b9\\uc774 \\uc5c5\\ub370\\uc774\\ud2b8 \\ub418\\uc5c8\\uc2b5\\ub2c8\\ub2e4.\\r\\n\\uc9c0\\uae08 \\uc5c5\\ub370\\uc774\\ud2b8 \\ud558\\uc2dc\\uaca0\\uc2b5\\ub2c8\\uae4c?\", com.tessoft.nearhere.MainActivity.UPDATE_NOTICE); return; } } catch (java.lang.Exception ex) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3367/buggy-version/FavorForMe.src.com.tessoft.nearhere.MainActivity.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.HashMap.get(java.lang.String)", "com.tessoft.nearhere.MainActivity.getPackageVersion()", "com.tessoft.nearhere.MainActivity.showOKDialog(java.lang.String,java.lang.String,java.lang.String)", "java.lang.Double.parseDouble(application.getPackageVersion())", "java.lang.Double.parseDouble(java.lang.String)", "java.util.HashMap.get(java.lang.String)", "com.tessoft.nearhere.MainActivity.showYesNoDialog(java.lang.String,java.lang.String,java.lang.String)", "java.lang.String.equals(java.lang.Object)"], "Fixed commit": "ed38f7bde111dc72881648ff6c1f0166af388124", "Url": "https://api.github.com/repos/kim2509/NearhereTaxi", "Date": "2015-09-14T13:06:19Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ret = org.apache.clerezza.utils.UriUtil.encodePath(ret); } catch (org.apache.clerezza.utils.UriException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2550/buggy-version/odfdom.src.main.java.org.odftoolkit.odfdom.pkg.rdfa.Util.java", "BodyUseAPI": ["org.apache.clerezza.utils.UriUtil.encodePath(java.lang.String)"], "Fixed commit": "1caf2114379732013b678cd0156d0e6635ddba9b", "Url": "https://api.github.com/repos/svanteschubert/odftoolkit", "Date": "2012-08-18T11:25:32Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { super.removeViewAt(parent, getRealIndex(parent, index)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7293/buggy-version/android.src.main.java.com.mapbox.reactnativemapboxgl.ReactNativeMapboxGLManager.java", "BodyUseAPI": ["com.facebook.react.uimanager.ViewGroupManager<com.mapbox.reactnativemapboxgl.ReactNativeMapboxGLView>.removeViewAt(com.mapbox.reactnativemapboxgl.ReactNativeMapboxGLView,int)", "com.mapbox.reactnativemapboxgl.ReactNativeMapboxGLManager.getRealIndex(com.mapbox.reactnativemapboxgl.ReactNativeMapboxGLView,int)"], "Fixed commit": "a7f63b9f50e96ad743527842bccf74a35a6817b2", "Url": "https://api.github.com/repos/parkdcom/react-native-mapbox-gl", "Date": "2017-04-26T09:11:27Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return mRecordReader.getProgress(); } catch (java.io.IOException e) { return 0.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4737/buggy-version/src.dist.edu.umd.cloud9.collection.line.TextDocumentInputFormat.java", "BodyUseAPI": ["org.apache.hadoop.mapred.LineRecordReader.getProgress()"], "Fixed commit": "d15a081e52655bef146684847ec691d6dd5f264d", "Url": "https://api.github.com/repos/ferhanture/Cloud9", "Date": "2012-12-31T02:34:39Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getActivity().invalidateOptionsMenu(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1337/buggy-version/app.src.main.java.com.Epsilon.deliveryservice.app.DMProjectDeliveriesListFragment.java", "BodyUseAPI": ["getActivity().invalidateOptionsMenu()", "1.getActivity()"], "Fixed commit": "43e3d8d370e8fb9b6ae1121a311281328943001e", "Url": "https://api.github.com/repos/dmoklyakov/DeliveryService", "Date": "2015-11-21T07:37:00Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sets = java.lang.Integer.parseInt(edit.getText().toString()); } catch (java.lang.NumberFormatException e) { android.widget.Toast.makeText(mContext, \"Needs the number of sets.\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8792/buggy-version/FitGooseDemo.app.src.main.java.com.fitgoose.fitgoosedemo.plan_tab.SpinnerDialog.java", "BodyUseAPI": ["java.lang.Integer.parseInt(edit.getText().toString())", "edit.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "b0adb935fc8d7fae7f4cdd3981b4c6216fc4ab78", "Url": "https://api.github.com/repos/j469/CS446", "Date": "2015-06-14T17:53:12Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { size = org.apache.commons.io.FileUtils.sizeOfDirectory(directory); } catch (java.lang.Exception e) { com.stratelia.silverpeas.silvertrace.SilverTrace.error(\"silverstatistics\", \"DirectorySizeComputer.call\", \"root.EX_CANT_READ_FILE\", (\"Directory : \" + (directory.getAbsolutePath())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2860/buggy-version/ejb-core.silverstatistics.src.main.java.org.silverpeas.silverstatistics.volume.DirectorySizeComputer.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.sizeOfDirectory(java.io.File)"], "Fixed commit": "6110eace4c26977021d0960ed25d5bda94a2d4d2", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Core", "Date": "2014-04-23T13:06:33Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { emails.Mails.enviar(\"LogFatal\", pattern); } catch (java.lang.IllegalArgumentException e) { play.Logger.warn(\"No se encontr\u00f3 el ID del mail en la base de datos, por lo que no se pudo enviar por correo el error FATAL\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7200/buggy-version/fap.app.logger.FapLogs.java", "BodyUseAPI": ["emails.Mails.enviar(java.lang.String,java.lang.String)"], "Fixed commit": "9ab70c4c44714f1db4abcbfa012516587ee93cca", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2012-03-29T11:05:25Z"},
{"Line": "=>1412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { collection.add(((T) (convert.convert(elementType, iter.next())))); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3880/buggy-version/hutool-core.src.main.java.com.PATHoleilu.hutool.collection.CollUtil.java", "BodyUseAPI": ["java.util.Collection<T>.add(((T) (convert.convert(elementType, iter.next()))))", "com.PATHoleilu.hutool.convert.ConverterRegistry.convert(java.lang.reflect.Type,java.lang.Object)", "java.util.Iterator.next()"], "Fixed commit": "75b141030642b83d100cd8eb0ab762841c282e0d", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2017-12-27T10:11:39Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.kohsuke.github.GHIssue issue = github.getRepository(repoName).getIssue(issueNum); if (issue == null) { return null; }else { return issue.getTitle(); } } catch (java.io.FileNotFoundException fnfe) { fnfe.printStackTrace(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7039/buggy-version/src.main.java.org.eclipse.jetty.toolchain.version.issues.GitHubIssueResolver.java", "BodyUseAPI": ["org.kohsuke.github.GitHub.getRepository(java.lang.String)", "org.kohsuke.github.GHIssue.getTitle()", "github.getRepository(repoName).getIssue(int)"], "Fixed commit": "9f98d365481d397ad8078d2632cb9cdf5af23fde", "Url": "https://api.github.com/repos/jetty-project/jetty-version-maven-plugin", "Date": "2016-06-21T00:00:14Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.m.permission.playerAddTransient(p, (\"kb.owns.\" + (a.ruleset))); this.m.permission.playerAddTransient(p, (\"kb.owns.group.\" + (a.gruppe))); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8885/buggy-version/KrimBuyV2.src.de.bdh.kb2.KBHelper.java", "BodyUseAPI": ["this.m.permission.playerAddTransient(java.lang.String,(\"kb.owns.group.\" + (a.gruppe)))", "this.m.permission.playerAddTransient(java.lang.String,(\"kb.owns.\" + (a.ruleset)))"], "Fixed commit": "259f76c65ad66d8b5b6bbeefcdd647ed06090c55", "Url": "https://api.github.com/repos/wmchris/KrimBuy", "Date": "2013-04-23T18:47:38Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.m.permission.playerAddTransient(rs.getString(\"buyer\"), (\"kb.owns.\" + (rs.getString(\"ruleset\")))); this.m.permission.playerAddTransient(rs.getString(\"buyer\"), (\"kb.owns.group.\" + (a.gruppe))); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8885/buggy-version/KrimBuyV2.src.de.bdh.kb2.KBHelper.java", "BodyUseAPI": ["this.m.permission.playerAddTransient(java.lang.String,java.lang.String)", "this.m.permission.playerAddTransient(java.lang.String,(\"kb.owns.group.\" + (a.gruppe)))", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "259f76c65ad66d8b5b6bbeefcdd647ed06090c55", "Url": "https://api.github.com/repos/wmchris/KrimBuy", "Date": "2013-04-23T18:47:38Z"},
{"Line": "=>606", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.m.permission.playerRemoveTransient(a.owner, (\"kb.owns.\" + (a.ruleset))); this.m.permission.playerRemoveTransient(a.owner, (\"kb.owns.group.\" + (a.gruppe))); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8885/buggy-version/KrimBuyV2.src.de.bdh.kb2.KBHelper.java", "BodyUseAPI": ["this.m.permission.playerRemoveTransient(a.owner,(\"kb.owns.group.\" + (a.gruppe)))", "this.m.permission.playerRemoveTransient(a.owner,(\"kb.owns.\" + (a.ruleset)))"], "Fixed commit": "259f76c65ad66d8b5b6bbeefcdd647ed06090c55", "Url": "https://api.github.com/repos/wmchris/KrimBuy", "Date": "2013-04-23T18:47:38Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { label.setForeground(((org.magic.game.network.actions.SpeakAction) (value)).getColor()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/935/buggy-version/src.org.magic.gui.components.GamingRoomPanel.java", "BodyUseAPI": ["java.lang.Object.getColor()", "javax.swing.JLabel.setForeground(((org.magic.game.network.actions.SpeakAction) (value)).getColor())"], "Fixed commit": "b192c81238da3fa2490bf9e2af141e1ff3a391bc", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-05-10T18:28:16Z"},
{"Line": "=>982", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { principalBo = getDataObjectService().findMatching(org.kuali.rice.kim.impl.identity.principal.PrincipalBo.class, criteria.build()).getResults().get(0); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException((\"Could not load system user from KRIM_PRNCPL_T: \" + (org.kuali.rice.krad.util.KRADConstants.SYSTEM_USER))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/38/buggy-version/rice-middleware.kim.kim-impl.src.main.java.org.kuali.rice.kim.impl.identity.PersonServiceImpl.java", "BodyUseAPI": ["org.kuali.rice.kim.impl.identity.PersonServiceImpl.getDataObjectService()", "org.kuali.rice.krad.data.DataObjectService.findMatching(java.lang.Class,criteria.build())", "getDataObjectService().findMatching(org.kuali.rice.kim.impl.identity.principal.PrincipalBo.class, criteria.build()).getResults()", "getDataObjectService().findMatching(org.kuali.rice.kim.impl.identity.principal.PrincipalBo.class, criteria.build()).getResults().get(int)", "QueryByCriteria.Builder.build()"], "Fixed commit": "ba63990d6251abc67b2c322804d25443115299c6", "Url": "https://api.github.com/repos/ua-eas/ksd-kc5.2.1-rice", "Date": "2017-05-27T03:11:14Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.viewer.refresh(); } catch (java.lang.Throwable ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3386/buggy-version/org.dawb.workbench.plotting.src.org.dawb.workbench.plotting.tools.InfoPixelTool.java", "BodyUseAPI": ["org.eclipse.jface.viewers.TableViewer.refresh()"], "Fixed commit": "0357fcb28a1074b61a58de019e53d9cbbff903c5", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2012-06-06T10:12:09Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int v = java.lang.Integer.decode(name.split(\"android-\")[1]); if (v > maxApi) maxApi = v; } catch (java.lang.NumberFormatException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5916/buggy-version/src.soot.Scene.java", "BodyUseAPI": ["java.lang.Integer.decode(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "52380b6f48229c04b65b6ef2a54af6d23f3eb60b", "Url": "https://api.github.com/repos/Sable/soot", "Date": "2014-03-18T10:19:02Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.step(1); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7558/buggy-version/src.javasources.KTool.src.org.kframework.debugger.backend.java.JavaBackendDebugger.java", "BodyUseAPI": ["org.kframework.debugger.backend.java.JavaBackendDebugger.step(int)"], "Fixed commit": "4857941602fff90a41e6ec6a3381c9a9e06e5de2", "Url": "https://api.github.com/repos/msaxena2/k", "Date": "2014-09-09T02:38:29Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { strQuery += java.lang.String.format(\"'%s', %s, '%s', '%s', NULL, '%s', '%s');\", txtDateTimeExpense.getText().toString(), txtAmountExpense.getText().toString(), txtDescription.getText().toString().replace(\"'\", \"''\"), mCurrentPhotoPath, spinnerExpenseType.getSelectedItem().toString(), spinnerTrip.getSelectedItem().toString()); ((com.bekoal.xpense.MainActivity) (getActivity())).getDatabase().execSQL(strQuery); } catch (java.lang.Exception e) { android.widget.Toast toast = android.widget.Toast.makeText(getActivity().getApplicationContext(), \"Please add a trip before adding an expense.\", Toast.LENGTH_LONG); toast.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6168/buggy-version/app.src.main.java.com.bekoal.xpense.AddFragment.java", "BodyUseAPI": ["((com.bekoal.xpense.MainActivity) (getActivity())).getDatabase()", "android.widget.Spinner.getSelectedItem()", "txtDescription.getText().toString()", "txtDateTimeExpense.getText().toString()", "android.widget.EditText.getText()", "java.lang.String.format(java.lang.String,txtDateTimeExpense.getText().toString(),txtAmountExpense.getText().toString(),txtDescription.getText().toString().replace(\"'\", \"''\"),java.lang.String,spinnerExpenseType.getSelectedItem().toString(),spinnerTrip.getSelectedItem().toString())", "txtAmountExpense.getText().toString()", "android.widget.EditText.getText()", "((com.bekoal.xpense.MainActivity) (getActivity())).getDatabase().execSQL(java.lang.String)", "txtDescription.getText().toString().replace(java.lang.String,java.lang.String)", "com.bekoal.xpense.AddFragment.5.getActivity()", "spinnerExpenseType.getSelectedItem().toString()", "android.widget.EditText.getText()", "spinnerTrip.getSelectedItem().toString()", "android.widget.Spinner.getSelectedItem()"], "Fixed commit": "151f5d11537636b841e598317a5a0c9d267302be", "Url": "https://api.github.com/repos/mikebegonis/XPense", "Date": "2015-04-23T05:20:50Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(500); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8242/buggy-version/FrozenWarsJava.src.Server.SmartFoxServer.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "bb19ff222abf96df3f198814828f296d9c343c0e", "Url": "https://api.github.com/repos/fga150/FrozenWarsIS", "Date": "2013-04-04T18:59:34Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return consumers.get(getNextConsumerIndex()).onMessage(message); } catch (java.lang.IndexOutOfBoundsException ignored) { return Ack.HALT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1689/buggy-version/src.main.java.com.orctom.rmq.Queue.java", "BodyUseAPI": ["consumers.get(getNextConsumerIndex()).onMessage(com.orctom.rmq.Message)", "com.orctom.rmq.Queue.getNextConsumerIndex()", "java.util.List<com.orctom.rmq.RMQConsumer>.get(int)"], "Fixed commit": "2cfb07017451e275377571be0b546606bacfde3d", "Url": "https://api.github.com/repos/orctom/rmq", "Date": "2017-01-05T11:58:22Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getColumn(); getRow(); return true; } catch (nl.dke.boardgame.exceptions.MoveNotCompletedException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/4423/buggy-version/src.main.java.nl.dke.boardgame.game.PieMove.java", "BodyUseAPI": ["nl.dke.boardgame.game.PieMove.getRow()", "nl.dke.boardgame.game.PieMove.getColumn()"], "Fixed commit": "59cd78b26efc1cc08960b65fef34336bfd574e2e", "Url": "https://api.github.com/repos/nikvaessen/dke-boardgame", "Date": "2016-10-13T05:56:39Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { out.write(data, 0, data.length); out.flush(); } catch (java.io.IOException e1) { java.lang.System.out.println(Client.diskFull); if (verbose) { java.lang.System.out.println(\"Error code 3, sending to server\"); } byte[] errorData = createErrorMsg(((byte) (3)), Client.diskFull.getBytes()); sndPkt = new java.net.DatagramPacket(errorData, errorData.length, target, port); send(); quit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1932/buggy-version/Client.java", "BodyUseAPI": ["java.io.BufferedOutputStream.flush()", "java.io.BufferedOutputStream.write(byte[],int,int)"], "Fixed commit": "6e7ba20b0367fbb91157e2b9e902cf498c4df327", "Url": "https://api.github.com/repos/ShadowTaze/RTCSProject", "Date": "2017-05-28T03:03:24Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { convertedBytes = Program.Encrypter.fromString(toDecrypt); } catch (java.lang.Exception e) { return new java.lang.String(((\"*****\\nWARNING: COULD NOT DECRYPT \" + toDecrypt) + \"\\nIT IS POSSIBLE SOMEONE IS LISTENING IN.\\n*****\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6850/buggy-version/src.Program.Encrypter.java", "BodyUseAPI": ["Program.Encrypter.fromString(java.lang.String)"], "Fixed commit": "54626a3530ca5b43c494b5cdb143f8760105bd67", "Url": "https://api.github.com/repos/dginovker/Private-Chat", "Date": "2017-12-20T18:32:00Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.ByteArrayOutputStream stream = new java.io.ByteArrayOutputStream(); imageBmp.compress(Bitmap.CompressFormat.PNG, 100, stream); if ((stream.toByteArray().length) > 65536) { android.widget.Toast newToast = android.widget.Toast.makeText(getApplicationContext(), \"Image too large. Try another image.\", Toast.LENGTH_SHORT); newToast.show(); }else { image.setImageBitmap(imageBmp); } } catch (java.lang.Exception e) { android.widget.Toast newToast = android.widget.Toast.makeText(getApplicationContext(), \"Please check connection\", Toast.LENGTH_SHORT); newToast.show(); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6299/buggy-version/NuMe.app.src.main.java.com.example.cmput301f17t27.nume.habitEvent.EditEventActivity.java", "BodyUseAPI": ["android.graphics.Bitmap.compress(Bitmap.CompressFormat.PNG,int,java.io.ByteArrayOutputStream)", "java.io.ByteArrayOutputStream.toByteArray()", "com.example.cmput301f17t27.nume.habitEvent.EditEventActivity.getApplicationContext()", "android.widget.Toast.show()", "android.widget.Toast.makeText(getApplicationContext(),java.lang.String,Toast.LENGTH_SHORT)", "android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "7f0c5b909cf85b037176c6a0d17218f4e6c13da3", "Url": "https://api.github.com/repos/CMPUT301F17T27/NuMe", "Date": "2017-12-05T03:03:21Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { xif.setProperty(com.sun.xml.ws.api.streaming.XMLStreamReaderFactory.Woodstox.P_RETURN_NULL_FOR_DEFAULT_NAMESPACE, java.lang.Boolean.TRUE); if (com.sun.xml.ws.api.streaming.XMLStreamReaderFactory.LOGGER.isLoggable(java.util.logging.Level.FINE)) { com.sun.xml.ws.api.streaming.XMLStreamReaderFactory.LOGGER.log(java.util.logging.Level.FINE, ((com.sun.xml.ws.api.streaming.XMLStreamReaderFactory.Woodstox.P_RETURN_NULL_FOR_DEFAULT_NAMESPACE) + \" is {0}\"), xif.getProperty(com.sun.xml.ws.api.streaming.XMLStreamReaderFactory.Woodstox.P_RETURN_NULL_FOR_DEFAULT_NAMESPACE)); } } catch (java.lang.Throwable t) { com.sun.xml.ws.api.streaming.XMLStreamReaderFactory.LOGGER.log(java.util.logging.Level.WARNING, \"Expected property not found in Woodstox input factory: '{0}'\", com.sun.xml.ws.api.streaming.XMLStreamReaderFactory.Woodstox.P_RETURN_NULL_FOR_DEFAULT_NAMESPACE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/7373/buggy-version/jaxws-ri.rt.src.main.java.com.sun.xml.ws.api.streaming.XMLStreamReaderFactory.java", "BodyUseAPI": ["javax.xml.stream.XMLInputFactory.getProperty(java.lang.String)", "java.util.logging.Logger.isLoggable(java.util.logging.Level)", "java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,java.lang.Object)", "javax.xml.stream.XMLInputFactory.setProperty(java.lang.String,java.lang.Boolean)"], "Fixed commit": "ccacc203a21edcb0a65c5acff28ed783d4b49698", "Url": "https://api.github.com/repos/gaoyan-gao/jaxb-v2", "Date": "2014-07-30T15:46:23Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Double value = java.lang.Double.valueOf(table.get(i).get(j)); sb.append(\" style='text-align: right;'>\").append(df.format(value)).append(\"</TD>\"); } catch (java.lang.Exception e) { sb.append(\" style='text-align: right;'>&nbsp;</TD>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3687/buggy-version/wds-core.src.main.java.org.fao.fenix.wds.core.utils.Wrapper.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)", "java.util.List<java.util.List<java.lang.String>>.get(int)", "java.text.DecimalFormat.format(java.lang.Double)", "java.util.List<java.lang.String>.get(int)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "8fca43c1d3bf340866f9cc8c74c3f649dfe12fa4", "Url": "https://api.github.com/repos/FENIX-Platform/WDS", "Date": "2014-04-30T10:00:23Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { d1.DatabaseBestelling(bestellingen.get(0).getOrderNr(), bestellingen.get(0).getDatum(), bestellingen.get(0).getKlant().getVoornaam(), bestellingen.get(0).getKlant().getAchternaam(), bestellingen.get(0).getArtikelnrs().size()); } catch (java.lang.Exception exc) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1306/buggy-version/Scherm.java", "BodyUseAPI": ["java.util.ArrayList<ASRS.Bestelling>.get(int)", "bestellingen.get(0).getOrderNr()", "bestellingen.get(0).getKlant()", "bestellingen.get(0).getArtikelnrs().size()", "bestellingen.get(0).getDatum()", "java.util.ArrayList<ASRS.Bestelling>.get(int)", "bestellingen.get(0).getArtikelnrs()", "bestellingen.get(0).getKlant().getVoornaam()", "java.util.ArrayList<ASRS.Bestelling>.get(int)", "java.util.ArrayList<ASRS.Bestelling>.get(int)", "bestellingen.get(0).getKlant().getAchternaam()", "ASRS.Database.DatabaseBestelling(bestellingen.get(0).getOrderNr(),bestellingen.get(0).getDatum(),bestellingen.get(0).getKlant().getVoornaam(),bestellingen.get(0).getKlant().getAchternaam(),bestellingen.get(0).getArtikelnrs().size())", "java.util.ArrayList<ASRS.Bestelling>.get(int)", "bestellingen.get(0).getKlant()"], "Fixed commit": "6f16f15006a8c57a1c8d04af5b7406c82ebbc322", "Url": "https://api.github.com/repos/frank52/ASRS", "Date": "2015-04-30T12:36:09Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { model4.removeRow(iii); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1306/buggy-version/Scherm.java", "BodyUseAPI": ["javax.swing.table.DefaultTableModel.removeRow(int)"], "Fixed commit": "6f16f15006a8c57a1c8d04af5b7406c82ebbc322", "Url": "https://api.github.com/repos/frank52/ASRS", "Date": "2015-04-30T12:36:09Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { jsonArray = json.getJSONArray(\"photos\"); } catch (org.json.JSONException e) { jsonArray = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5601/buggy-version/IndoorMappingApp.app.src.main.java.students.aalto.org.indoormappingapp.model.Location.java", "BodyUseAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "7b0d5a2fdbd571c8aa129a5b06e5f3cb73fa5dd3", "Url": "https://api.github.com/repos/osaario/T-110.5130-Indoor-Mapping-Project", "Date": "2016-04-19T12:22:34Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { switch (move.getType()) { case RECLAIM_MILESTONE : gameManager.reclaimMilestone(playerType, move.getMilestoneIndex()); break; case PLAY_CARD : assert (move.getCardInHandIndex()) != (ClientMove.NOT_USED); gameManager.playerPlays(playerType, move.getCardInHandIndex(), move.getMilestoneIndex()); gameManager.swapPlayingPlayer(); break; } } catch (org.rvlander.schotten.server.NotYourTurnException e) { } catch (org.rvlander.schotten.server.MilestoneSideMaxReachedException e) { playNextTurn(ClientErrorCode.INVALID_PLAY, row, null); } catch (org.rvlander.schotten.server.EmptyDeckException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3516/buggy-version/src.main.java.org.rvlander.schotten.server.ClientManager.java", "BodyUseAPI": ["org.rvlander.schotten.server.ClientMove.getCardInHandIndex()", "org.rvlander.schotten.server.ClientMove.getCardInHandIndex()", "org.rvlander.schotten.server.ClientMove.getMilestoneIndex()", "org.rvlander.schotten.server.ClientMove.getType()", "org.rvlander.schotten.server.ClientMove.getMilestoneIndex()", "com.boardgames.bastien.schotten_totten.controllers.SimpleGameManager.playerPlays(com.boardgames.bastien.schotten_totten.model.PlayerType,move.getCardInHandIndex(),move.getMilestoneIndex())", "com.boardgames.bastien.schotten_totten.controllers.SimpleGameManager.reclaimMilestone(com.boardgames.bastien.schotten_totten.model.PlayerType,move.getMilestoneIndex())", "com.boardgames.bastien.schotten_totten.controllers.SimpleGameManager.swapPlayingPlayer()"], "Fixed commit": "3a89893ccdba152da2949840523eeff828461f5e", "Url": "https://api.github.com/repos/schotten-totten-company/schotten-server", "Date": "2017-11-09T12:46:36Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { subscribedMovies = this.getMovieImg(servlets.DatabaseHandler.getListofSubscriptions(user.getEmail())); } catch (java.text.ParseException | java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5949/buggy-version/src.servlets.SubscriptionServlet.java", "BodyUseAPI": ["com.google.appengine.api.users.User.getEmail()", "servlets.SubscriptionServlet.getMovieImg(servlets.DatabaseHandler.getListofSubscriptions(user.getEmail()))", "servlets.DatabaseHandler.getListofSubscriptions(user.getEmail())"], "Fixed commit": "522a6ceae3c424aa3226aac40ca6a0363bdb9437", "Url": "https://api.github.com/repos/lighthouse380/Lighthouse", "Date": "2016-04-14T21:19:24Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { distAboveSurface = java.lang.Integer.parseInt(s[5]); } catch (java.lang.NumberFormatException e) { distAboveSurface = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2868/buggy-version/parsedata.ParseData.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "fc25f8a14d22415c92bbd6b91fbfbe11e9e68289", "Url": "https://api.github.com/repos/LasseBlaauwbroek/AlgorithmsForGeographicalData", "Date": "2016-02-24T20:07:33Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { coordinateUncertainity = java.lang.Integer.parseInt(s[6]); } catch (java.lang.NumberFormatException e) { coordinateUncertainity = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/2868/buggy-version/parsedata.ParseData.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "fc25f8a14d22415c92bbd6b91fbfbe11e9e68289", "Url": "https://api.github.com/repos/LasseBlaauwbroek/AlgorithmsForGeographicalData", "Date": "2016-02-24T20:07:33Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.usbInterface = usbDevice.getInterface(0); android.util.Log.i(com.mantz_it.hackrf_android.Hackrf.logTag, (((\"constructor: [interface 0] interface protocol: \" + (usbInterface.getInterfaceProtocol())) + \" subclass: \") + (usbInterface.getInterfaceSubclass()))); android.util.Log.i(com.mantz_it.hackrf_android.Hackrf.logTag, (\"constructor: [interface 0] interface class: \" + (usbInterface.getInterfaceClass()))); android.util.Log.i(com.mantz_it.hackrf_android.Hackrf.logTag, (\"constructor: [interface 0] endpoint count: \" + (usbInterface.getEndpointCount()))); this.usbEndpointIN = usbInterface.getEndpoint(0); this.usbEndpointOUT = usbInterface.getEndpoint(1); android.util.Log.i(com.mantz_it.hackrf_android.Hackrf.logTag, (((((((\"constructor: [endpoint 0 (IN)] address: \" + (usbEndpointIN.getAddress())) + \" attributes: \") + (usbEndpointIN.getAttributes())) + \" direction: \") + (usbEndpointIN.getDirection())) + \" max_packet_size: \") + (usbEndpointIN.getMaxPacketSize()))); android.util.Log.i(com.mantz_it.hackrf_android.Hackrf.logTag, (((((((\"constructor: [endpoint 1 (OUT)] address: \" + (usbEndpointOUT.getAddress())) + \" attributes: \") + (usbEndpointOUT.getAttributes())) + \" direction: \") + (usbEndpointOUT.getDirection())) + \" max_packet_size: \") + (usbEndpointOUT.getMaxPacketSize()))); this.usbConnection = usbManager.openDevice(usbDevice); } catch (java.lang.Exception e) { android.util.Log.e(com.mantz_it.hackrf_android.Hackrf.logTag, (\"constructor: Couldn't open HackRF USB Device: \" + (e.getMessage()))); throw new com.mantz_it.hackrf_android.HackrfUsbException(\"Couldn't open HackRF USB Device!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1737/buggy-version/src.com.mantz_it.hackrf_android.Hackrf.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,(\"constructor: [interface 0] endpoint count: \" + (usbInterface.getEndpointCount())))", "android.hardware.usb.UsbInterface.getInterfaceClass()", "android.hardware.usb.UsbInterface.getInterfaceSubclass()", "android.hardware.usb.UsbInterface.getEndpointCount()", "android.hardware.usb.UsbEndpoint.getAddress()", "android.hardware.usb.UsbEndpoint.getDirection()", "android.hardware.usb.UsbInterface.getEndpoint(int)", "android.hardware.usb.UsbInterface.getEndpoint(int)", "android.hardware.usb.UsbInterface.getInterfaceProtocol()", "android.hardware.usb.UsbEndpoint.getAddress()", "android.hardware.usb.UsbDevice.getInterface(int)", "android.util.Log.i(java.lang.String,(((\"constructor: [interface 0] interface protocol: \" + (usbInterface.getInterfaceProtocol())) + \" subclass: \") + (usbInterface.getInterfaceSubclass())))", "android.util.Log.i(java.lang.String,(\"constructor: [interface 0] interface class: \" + (usbInterface.getInterfaceClass())))", "android.hardware.usb.UsbEndpoint.getMaxPacketSize()", "android.hardware.usb.UsbEndpoint.getAttributes()", "android.hardware.usb.UsbEndpoint.getMaxPacketSize()", "android.util.Log.i(java.lang.String,(((((((\"constructor:     [endpoint 0 (IN)] address: \" + (usbEndpointIN.getAddress())) + \" attributes: \") + (usbEndpointIN.getAttributes())) + \" direction: \") + (usbEndpointIN.getDirection())) + \" max_packet_size: \") + (usbEndpointIN.getMaxPacketSize())))", "android.hardware.usb.UsbEndpoint.getAttributes()", "android.hardware.usb.UsbManager.openDevice(android.hardware.usb.UsbDevice)", "android.util.Log.i(java.lang.String,(((((((\"constructor:     [endpoint 1 (OUT)] address: \" + (usbEndpointOUT.getAddress())) + \" attributes: \") + (usbEndpointOUT.getAttributes())) + \" direction: \") + (usbEndpointOUT.getDirection())) + \" max_packet_size: \") + (usbEndpointOUT.getMaxPacketSize())))", "android.hardware.usb.UsbEndpoint.getDirection()"], "Fixed commit": "516d5c3de216a1c0c4a73474394f3423ed711a45", "Url": "https://api.github.com/repos/demantz/hackrf_android", "Date": "2014-10-20T04:56:39Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { configurator = ((com.api.config.jaxb.AppServerConfig.ApiConfigurators.com.api.config.ApiConfigurator) (util.createBean(apiConfig.getClassName()))); } catch (com.SystemException e) { this.msg = (\"Error initializing application, \" + (apiConfig.getClassName())) + \", during server start up\"; com.api.config.SystemConfigurator.logger.error(this.msg, e); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8279/buggy-version/fw_parent.fw_core.src.main.java.com.api.config.SystemConfigurator.java", "BodyUseAPI": ["com.util.RMT2BeanUtility.createBean(apiConfig.getClassName())", "com.api.config.jaxb.AppServerConfig.ApiConfigurators.ApiConfigurator.getClassName()"], "Fixed commit": "f4e51ba09af4c577013f89898eeef8be1c03770f", "Url": "https://api.github.com/repos/rmt2bsc/application_framework_suite", "Date": "2017-04-14T21:20:57Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { de.robv.android.xposed.XposedHelpers.findAndHookConstructor(\"com.nianticproject.ingress.glyph.Glyph\", loadPackageParam.classLoader, java.lang.String.class, new de.robv.android.xposed.XC_MethodHook() { @java.lang.Override protected void beforeHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam param) throws java.lang.Throwable { java.lang.String oldglyph = param.args[0].toString(); java.lang.String tmptlyph = IngressGlyph.glyphSequence.get(0).toString(); if (tmptlyph.equals(\"khkjkgj\")) { tmptlyph = \"kgjkhj\"; } if (tmptlyph.equals(\"jgkjkhk\")) { tmptlyph = \"jhkjgk\"; } param.args[0] = tmptlyph; de.robv.android.xposed.XposedBridge.log((((\"mylog: set the glyph :>>\" + oldglyph) + \"== to new glyph==\") + tmptlyph)); } @java.lang.Override protected void afterHookedMethod(de.robv.android.xposed.XC_MethodHook.MethodHookParam param) throws java.lang.Throwable { IngressGlyph.glyphSequence.remove(0); de.robv.android.xposed.XposedBridge.log(\"mylog: delete the used glyph.\"); } }); } catch (java.lang.NoSuchMethodError error) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1196/buggy-version/Xglyph.app.src.main.java.com.xingress.xglyph.Xglyph.java", "BodyUseAPI": ["IngressGlyph.glyphSequence.remove(int)", "param.args[0].toString()", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "IngressGlyph.glyphSequence.get(0).toString()", "de.robv.android.xposed.XposedHelpers.findAndHookConstructor(java.lang.String,loadPackageParam.classLoader,java.lang.Class,de.robv.android.xposed.XC_MethodHook)", "IngressGlyph.glyphSequence.get(int)", "de.robv.android.xposed.XposedBridge.log(java.lang.String)", "de.robv.android.xposed.XposedBridge.log(java.lang.String)"], "Fixed commit": "3f66079a5c6f4327746af025bac0aa5c76dfa41f", "Url": "https://api.github.com/repos/xfunforx/IngressXglyph", "Date": "2015-09-29T07:41:55Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { images.remove(position); notifyDataSetChanged(); } catch (java.lang.IndexOutOfBoundsException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3454/buggy-version/app.src.main.java.tsekhmeistruk.funnycats.widgets.adapters.PhotoAdapter.java", "BodyUseAPI": ["tsekhmeistruk.funnycats.widgets.adapters.PhotoAdapter.1.notifyDataSetChanged()", "java.util.List<tsekhmeistruk.funnycats.models.entities.Image>.remove(int)"], "Fixed commit": "c3acf960d0b9ba45f5a57ab6f48d77d7a2e51b28", "Url": "https://api.github.com/repos/TsekhmeistrukRoman/FunnyCats-Android-Project", "Date": "2017-08-08T08:58:04Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mat = org.bukkit.Material.valueOf(lockableBlockName); } catch (java.lang.IllegalArgumentException e) { try { int i = java.lang.Integer.parseInt(lockableBlockName.trim()); mat = org.bukkit.Material.getMaterial(i); } catch (java.lang.NumberFormatException nfe) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3510/buggy-version/src.com.webkonsept.bukkit.simplechestlock.SCL.java", "BodyUseAPI": ["org.bukkit.Material.valueOf(java.lang.String)"], "Fixed commit": "fa7478fef0ccf4f702ef3014b0d8a115ca3fe22d", "Url": "https://api.github.com/repos/albatrossen/SimpleChestLock", "Date": "2012-06-06T19:54:24Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { con = com.google.gwt.sample.elearning.server.JDBC.JDBCUtil.getNewConnection(); java.sql.PreparedStatement pstmt = con.prepareStatement(\"delete from studenti_inscrisi where ref_curs = ? and ref_student = ?\"); pstmt.setLong(1, lectureId); pstmt.setLong(2, userId); pstmt.executeUpdate(); } catch (java.sql.SQLException e) { throw new com.google.gwt.sample.elearning.server.repository.RepositoryException(e.getMessage(), e); } finally { if (con != null) com.google.gwt.sample.elearning.server.JDBC.JDBCUtil.closeConnection(con); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5186/buggy-version/src.com.google.gwt.sample.elearning.server.repository.JDBC.JdbcUserDAO.java", "BodyUseAPI": ["com.google.gwt.sample.elearning.server.JDBC.JDBCUtil.getNewConnection()", "java.sql.Connection.prepareStatement(java.lang.String)", "java.sql.PreparedStatement.executeUpdate()", "java.sql.PreparedStatement.setLong(int,long)", "java.sql.PreparedStatement.setLong(int,long)"], "Fixed commit": "ad9f2cb6a958ef6e64b5e34a6eaf6971ed88ee96", "Url": "https://api.github.com/repos/razvanolar/eLearning", "Date": "2016-01-16T15:18:01Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.parse.Parse.initialize(this, \"SBky4g5A1hxY50onQHo2pqkyJN6EGMcXClwRKi98\", \"TgNEGGF8VnwAUt9qA6OI5XFTJQHKGvfL9EMYPRVS\"); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8749/buggy-version/app.src.main.java.com.example.daniel.reportcrime.HomeScreen.java", "BodyUseAPI": ["com.parse.Parse.initialize(com.example.daniel.reportcrime.HomeScreen,java.lang.String,java.lang.String)"], "Fixed commit": "be13e6b917e0d992a10c3247da7a838f2c861eeb", "Url": "https://api.github.com/repos/danieldufek03/ReportCrime", "Date": "2015-10-25T15:15:41Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { out.flush(); } catch (final java.lang.Exception e) { throw new java.lang.AssertionError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/5029/buggy-version/ion.src.com.koushikdutta.ion.gson.GsonSerializer.java", "BodyUseAPI": ["java.io.OutputStreamWriter.flush()"], "Fixed commit": "b4398b4ef369cfc196947b61c64138890a729c43", "Url": "https://api.github.com/repos/joein3d/ion", "Date": "2013-11-20T17:20:43Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { map = new java.util.HashMap<java.lang.Enum, java.lang.Object>(studentData.get(key)); } catch (java.lang.NullPointerException NP) { map = new java.util.HashMap<java.lang.Enum, java.lang.Object>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/3568/buggy-version/ANNdroid.src.StudentData.java", "BodyUseAPI": ["java.util.Map<ANNdroid.src.Student, java.util.Map<? extends java.lang.Enum, java.lang.Object>>.get(ANNdroid.src.Student)"], "Fixed commit": "14131923afb195272c2db66ca0a93dbf58b06812", "Url": "https://api.github.com/repos/CjayBillones/MP180", "Date": "2014-12-10T12:14:36Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { code = cmb.MerchantCode.genMerchantCode(key, strDate, strBranchID, strCono, strBillNo, strAmount, strMerchantPara, strMerchantUrl, strPayerID, strPayeeID, strClientIP, strGoodsType, strReserved); } catch (java.lang.Exception e) { java.lang.System.err.println((\"\u4f20\u5165\u7684\u53c2\u6570\u4e0d\u6b63\u786e\uff0c\u751f\u6210\u6821\u9a8c\u7801\u5931\u8d25,\u8bf7\u6838\u5bf9\u53c2\u6570\u503c\u3002 --> \" + (java.lang.System.currentTimeMillis()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8346/buggy-version/src.main.java.com.dd885.tools.MerchantOpt.java", "BodyUseAPI": ["cmb.MerchantCode.genMerchantCode(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "6d0d17e0c661467264510a6402bb8f0a9c384c71", "Url": "https://api.github.com/repos/wowtous/zjycmb", "Date": "2015-03-11T05:45:46Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.System.out.println(java.lang.Class.forName(\"org.syncany.plugins.s3.S3Plugin\")); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/6648/buggy-version/syncany-lib.src.main.java.org.syncany.plugins.Plugins.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.Class<?>)", "java.lang.Class.forName(java.lang.String)"], "Fixed commit": "4ecbe67bcea3b8e55d1620b91988f79270c002e9", "Url": "https://api.github.com/repos/syncany/syncany", "Date": "2014-07-26T15:35:40Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setResult(result); } catch (java.lang.IllegalStateException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/812/buggy-version/src.main.java.org.threadly.load.AbstractScriptBuilder.java", "BodyUseAPI": ["org.threadly.load.AbstractScriptBuilder.TestStepRunner.setResult(org.threadly.load.TestResult)"], "Fixed commit": "098859d844b114df2d4a7c12956e2b688bcb2af2", "Url": "https://api.github.com/repos/jentfoo/ambush", "Date": "2015-05-08T01:02:11Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return (mapRepresentation[pixelToGridX(x)][pixelToGridY(y)]) != 0; } catch (java.lang.ArrayIndexOutOfBoundsException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/1595/buggy-version/TisButAScratch.src.main.java.model.Room.java", "BodyUseAPI": ["model.Room.pixelToGridY(int)", "model.Room.pixelToGridX(int)"], "Fixed commit": "1b4962841b9781117f41347bd91c5fe7fb3cdf38", "Url": "https://api.github.com/repos/Tejpbit/TDA367", "Date": "2014-03-30T21:45:20Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { object = getRepository().create(getCallContext(), properties, folderId, contentStream, versioningState, this); return object.getId(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8870/buggy-version/cmis.src.main.java.ru.doccloud.cmis.server.FileBridgeCmisService.java", "BodyUseAPI": ["ru.doccloud.cmis.server.FileBridgeCmisService.getRepository()", "ru.doccloud.cmis.server.FileBridgeRepository.create(org.apache.chemistry.opencmis.commons.server.CallContext,org.apache.chemistry.opencmis.commons.data.Properties,java.lang.String,org.apache.chemistry.opencmis.commons.data.ContentStream,org.apache.chemistry.opencmis.commons.enums.VersioningState,ru.doccloud.cmis.server.FileBridgeCmisService)", "org.apache.chemistry.opencmis.commons.data.ObjectData.getId()", "ru.doccloud.cmis.server.FileBridgeCmisService.getCallContext()"], "Fixed commit": "aab155535663dbc481d64c2fd9f0ca7eafb3fb91", "Url": "https://api.github.com/repos/kadnikov/jooq-doc", "Date": "2017-03-18T20:36:57Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return getRepository().createDocument(getCallContext(), properties, folderId, contentStream, versioningState); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8870/buggy-version/cmis.src.main.java.ru.doccloud.cmis.server.FileBridgeCmisService.java", "BodyUseAPI": ["ru.doccloud.cmis.server.FileBridgeRepository.createDocument(org.apache.chemistry.opencmis.commons.server.CallContext,org.apache.chemistry.opencmis.commons.data.Properties,java.lang.String,org.apache.chemistry.opencmis.commons.data.ContentStream,org.apache.chemistry.opencmis.commons.enums.VersioningState)", "ru.doccloud.cmis.server.FileBridgeCmisService.getRepository()", "ru.doccloud.cmis.server.FileBridgeCmisService.getCallContext()"], "Fixed commit": "aab155535663dbc481d64c2fd9f0ca7eafb3fb91", "Url": "https://api.github.com/repos/kadnikov/jooq-doc", "Date": "2017-03-18T20:36:57Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return getRepository().getContentStream(getCallContext(), objectId, offset, length); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V41/8870/buggy-version/cmis.src.main.java.ru.doccloud.cmis.server.FileBridgeCmisService.java", "BodyUseAPI": ["ru.doccloud.cmis.server.FileBridgeRepository.getContentStream(org.apache.chemistry.opencmis.commons.server.CallContext,java.lang.String,java.math.BigInteger,java.math.BigInteger)", "ru.doccloud.cmis.server.FileBridgeCmisService.getCallContext()", "ru.doccloud.cmis.server.FileBridgeCmisService.getRepository()"], "Fixed commit": "aab155535663dbc481d64c2fd9f0ca7eafb3fb91", "Url": "https://api.github.com/repos/kadnikov/jooq-doc", "Date": "2017-03-18T20:36:57Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final java.util.Map<java.lang.String, java.lang.Object> parameters = request.getMonitorParameters(); final org.opennms.netmgt.poller.PollStatus pollStatus = monitor.poll(request, parameters); return new org.opennms.netmgt.poller.client.rpc.PollerResponseDTO(pollStatus); } catch (java.lang.RuntimeException e) { return new org.opennms.netmgt.poller.client.rpc.PollerResponseDTO(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3683/buggy-version/features.poller.client-rpc.src.main.java.org.opennms.netmgt.poller.client.rpc.PollerClientRpcModule.java", "BodyUseAPI": ["org.opennms.netmgt.poller.ServiceMonitor.poll(org.opennms.netmgt.poller.client.rpc.PollerRequestDTO,java.util.Map<java.lang.String, java.lang.Object>)", "org.opennms.netmgt.poller.client.rpc.PollerRequestDTO.getMonitorParameters()"], "Fixed commit": "60cff50c7072d78917fadc2b418a343f18476e66", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2016-09-16T18:19:37Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { updateNewsCache(json); renderNews(json); } catch (java.lang.Exception e) { android.util.Log.i(\"render news\", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8676/buggy-version/app.src.main.java.org.main.smartmirror.smartmirror.NewsFragment.java", "BodyUseAPI": ["2.updateNewsCache(org.json.JSONObject)", "2.renderNews(org.json.JSONObject)"], "Fixed commit": "fdb2316b57065cf316a3442af982820ae2c6c33b", "Url": "https://api.github.com/repos/omgshirt/smartmirror", "Date": "2016-03-01T03:50:50Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { renderScriptContext.destroy(); } catch (android.support.v8.renderscript.RSInvalidStateException ignoredException) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2497/buggy-version/blurify.src.main.java.com.chteuchteu.blurify.Foofy.java", "BodyUseAPI": ["android.support.v8.renderscript.RenderScript.destroy()"], "Fixed commit": "70e31efc22bb07e9f64c0ef915b87a294e10fc3f", "Url": "https://api.github.com/repos/chteuchteu/Blurify", "Date": "2015-03-03T10:10:48Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { test = server.util.DBManager.getConnection().getCatalog(); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2644/buggy-version/src.main.java.server.endpoints.RootEndpoint.java", "BodyUseAPI": ["server.util.DBManager.getConnection()", "server.util.DBManager.getConnection().getCatalog()"], "Fixed commit": "e3552af47a0932f561233c668d131bd353999b77", "Url": "https://api.github.com/repos/Distribuerede-Systemer-2017/NexusROFL", "Date": "2017-10-16T07:25:05Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { initDecoder(); } catch (java.lang.Throwable t) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5459/buggy-version/src.infinity.resource.graphics.BamResource2.java", "BodyUseAPI": ["infinity.resource.graphics.BamResource2.initDecoder()"], "Fixed commit": "7d4bc7ac9bc10aefd5fcf910bff45109b769b68f", "Url": "https://api.github.com/repos/NearInfinityBrowser/NearInfinity", "Date": "2013-11-19T22:43:06Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return basedApplicationTemplateHome.getNode(portletName); } catch (javax.jcr.PathNotFoundException pne) { javax.jcr.Node templateHome = basedApplicationTemplateHome.addNode(portletName); basedApplicationTemplateHome.save(); return templateHome; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5543/buggy-version/core.services.src.main.java.org.exoplatform.services.cms.views.impl.ApplicationTemplateManagerServiceImpl.java", "BodyUseAPI": ["javax.jcr.Node.getNode(java.lang.String)"], "Fixed commit": "1f52670d4a23f60d7e14648569f57637e3c3d94e", "Url": "https://api.github.com/repos/exoplatform/ecms", "Date": "2013-07-16T04:33:54Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (int i = 0; i < width; i++) { for (int j = 0; j < width; j++) { com.southamptoncodedojo.minesweeper.Coordinate coord = new com.southamptoncodedojo.minesweeper.Coordinate(i, j); if (mapState.isOpen(coord)) { scores[i][j] = 1000; }else { scores[i][j] = getScore(coord, mapState); } } } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4799/buggy-version/src.com.southamptoncodedojo.minesweeper.players.TeamOnePlayer.java", "BodyUseAPI": ["com.southamptoncodedojo.minesweeper.MapState.isOpen(com.southamptoncodedojo.minesweeper.Coordinate)", "com.southamptoncodedojo.minesweeper.players.TeamOnePlayer.getScore(com.southamptoncodedojo.minesweeper.Coordinate,com.southamptoncodedojo.minesweeper.MapState)"], "Fixed commit": "10ba15aac4f802eef405b98c8d0acd281671e25a", "Url": "https://api.github.com/repos/aprilush/minesweeper", "Date": "2014-10-09T19:40:48Z"},
{"Line": "=>1398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result = ((int) (java.lang.Double.parseDouble(val))); } catch (java.lang.Exception e2) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1444/buggy-version/de.bund.bfr.knime.openkrise.db.src.de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.TraceImporter.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "6333c7bdbd674b5ec057e3617e3dadbc9658526c", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2017-06-12T12:36:55Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.File gold = new java.io.File(((datasetPath) + \"/train/train.combined.stem.final\")); java.util.Map<java.lang.String, java.lang.String[]> buffer = new java.util.HashMap<>(); try (java.util.stream.Stream<java.lang.String> lines = java.nio.file.Files.lines(gold.toPath(), java.nio.charset.StandardCharsets.UTF_8)) { for (java.lang.String line : ((java.lang.Iterable<java.lang.String>) (lines::iterator))) { java.util.List<java.lang.String> documentKPs = new java.util.ArrayList<>(); java.lang.String kpLine = line.substring(((line.indexOf(':')) + 2)); for (java.lang.String kp : kpLine.split(\",\")) { documentKPs.add(kp); } buffer.put(line.substring(0, ((line.indexOf(':')) - 1)), documentKPs.toArray(new java.lang.String[documentKPs.size()])); } } keyphrases = buffer; } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(it.uniud.ailab.dcore.eval.datasets.SemEval2010.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); throw new java.lang.RuntimeException(\"Unable to load gold standard\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7279/buggy-version/src.main.java.it.uniud.ailab.dcore.eval.datasets.SemEval2010.java", "BodyUseAPI": ["java.nio.file.Files.lines(java.nio.file.Path,java.nio.charset.Charset)", "java.lang.String.substring(int)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(char)", "java.lang.String.split(java.lang.String)", "java.util.List<java.lang.String>.size()", "java.lang.String.indexOf(char)", "java.util.Map<java.lang.String, java.lang.String[]>.put(java.lang.String,java.lang.String[])", "java.util.List<java.lang.String>.toArray(java.lang.String[])", "java.io.File.toPath()", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "9b54ac2fb343e3bf91d74da7710c2343dbc40457", "Url": "https://api.github.com/repos/ailab-uniud/distiller-CORE", "Date": "2015-11-17T09:53:51Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.File[] dir = new java.io.File(((datasetPath) + \"/train\")).listFiles(); java.util.Arrays.sort(dir); for (java.io.File f : dir) { if (!(f.getName().startsWith(\"train\"))) { java.lang.String document = java.lang.String.join(\" \", java.nio.file.Files.readAllLines(f.toPath(), java.nio.charset.StandardCharsets.UTF_8)); java.lang.String docName = f.getName().substring(0, f.getName().indexOf(\".\")); documents.put(docName, document); } } } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(it.uniud.ailab.dcore.eval.datasets.SemEval2010.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7279/buggy-version/src.main.java.it.uniud.ailab.dcore.eval.datasets.SemEval2010.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.Arrays.sort(java.io.File[])", "java.lang.String.join(java.lang.String,java.util.List<java.lang.String>)", "java.io.File.getName()", "java.lang.String.indexOf(java.lang.String)", "java.io.File.listFiles()", "java.lang.String.substring(int,int)", "java.io.File.getName()", "java.nio.file.Files.readAllLines(java.nio.file.Path,java.nio.charset.Charset)", "java.io.File.getName()", "java.io.File.toPath()"], "Fixed commit": "9b54ac2fb343e3bf91d74da7710c2343dbc40457", "Url": "https://api.github.com/repos/ailab-uniud/distiller-CORE", "Date": "2015-11-17T09:53:51Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { de.ifgi.igiapp.igi_app.MongoDB.Story[] storiesArray = new de.ifgi.igiapp.igi_app.MongoDB.Story[stories.size()]; for (int i = 0; i < (stories.size()); i++) { storiesArray[i] = stories.get(i); return storiesArray; } } catch (java.lang.NullPointerException npe) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4176/buggy-version/app.src.main.java.de.ifgi.igiapp.igi_app.MongoDB.DatabaseHandler.java", "BodyUseAPI": ["java.util.ArrayList<de.ifgi.igiapp.igi_app.MongoDB.Story>.size()", "java.util.ArrayList<de.ifgi.igiapp.igi_app.MongoDB.Story>.get(int)", "java.util.ArrayList<de.ifgi.igiapp.igi_app.MongoDB.Story>.size()"], "Fixed commit": "80dadee9163d170766da96bab21804c0a022f108", "Url": "https://api.github.com/repos/froehr/IGI-app", "Date": "2015-01-29T18:27:09Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { while (java.nio.file.Files.exists(path)) { pathName = ((dir) + \"resFile\") + i; i++; path = java.nio.file.Paths.get(pathName); path.toFile().createNewFile(); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5420/buggy-version/Res.java", "BodyUseAPI": ["java.io.File.createNewFile()", "java.nio.file.Files.exists(java.nio.file.Path)", "java.nio.file.Paths.get(java.lang.String)", "java.nio.file.Path.toFile()"], "Fixed commit": "afa4c28480d5d281d39414fca15a5903bd51a5d1", "Url": "https://api.github.com/repos/CS-196-Space-Colonization/Game", "Date": "2014-11-05T10:35:11Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.dotmarketing.db.HibernateUtil.commitTransaction(); } catch (java.lang.Exception e) { session.setAttribute(\"duplicatedErrorMessage\", \"Content already exists in the same container on the page\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2273/buggy-version/src.com.dotmarketing.portlets.director.action.DirectorAction.java", "BodyUseAPI": ["com.dotmarketing.db.HibernateUtil.commitTransaction()"], "Fixed commit": "307b1fdd2ed4094f0708cdfa8feabc11ba0a44cc", "Url": "https://api.github.com/repos/dotCMS/dotCMS", "Date": "2013-12-28T10:00:01Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.UUID.fromString(br.net.fabiozumbi12.RedProtect.RPUtil.PlayerToUUID(pname)); play = RedProtect.serv.getPlayer(java.util.UUID.fromString(br.net.fabiozumbi12.RedProtect.RPUtil.PlayerToUUID(pname))); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1236/buggy-version/src.main.java.br.net.fabiozumbi12.RedProtect.Region.java", "BodyUseAPI": ["br.net.fabiozumbi12.RedProtect.RPUtil.PlayerToUUID(java.lang.String)", "RedProtect.serv.getPlayer(java.util.UUID)", "java.util.UUID.fromString(br.net.fabiozumbi12.RedProtect.RPUtil.PlayerToUUID(pname))", "java.util.UUID.fromString(br.net.fabiozumbi12.RedProtect.RPUtil.PlayerToUUID(pname))", "br.net.fabiozumbi12.RedProtect.RPUtil.PlayerToUUID(java.lang.String)"], "Fixed commit": "746dd71c0d56a782c86b25e69072aba6ac7400b1", "Url": "https://api.github.com/repos/FabioZumbi12/RedProtect", "Date": "2016-05-10T17:43:30Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((result.response().errorBody()) != null) { errorMessage = result.response().errorBody().string(); } } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1232/buggy-version/urbanthings-android-rx.src.main.java.io.urbanthings.api.rx.BaseRxApi.java", "BodyUseAPI": ["result.response().errorBody()", "retrofit2.adapter.rxjava.Result<io.urbanthings.api.transit.model.ApiResponse<T>>.response()", "result.response().errorBody().string()", "result.response().errorBody()", "retrofit2.adapter.rxjava.Result<io.urbanthings.api.transit.model.ApiResponse<T>>.response()"], "Fixed commit": "30543833f2a1468eb9eafe663834c7faf1a418f4", "Url": "https://api.github.com/repos/UrbanThingsCo/urbanthings-sdk-android", "Date": "2017-03-17T16:45:59Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { net.tgxn.bukkit.backup.threading.FileUtils.deleteDirectory(new java.io.File(path)); } catch (java.io.IOException ioe) { net.tgxn.bukkit.backup.threading.DebugUtils.debugLog(ioe.getStackTrace(), \"Failed to delete folder: IO Exception.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/5209/buggy-version/src.main.java.net.tgxn.bukkit.backup.threading.BackupTask.java", "BodyUseAPI": ["net.tgxn.bukkit.backup.threading.FileUtils.deleteDirectory(java.io.File)"], "Fixed commit": "0d9fe57a7b3df75cc961d3ea80fc3e28ede20e45", "Url": "https://api.github.com/repos/tgxn/Backup", "Date": "2011-12-06T02:41:19Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { answer = in.nextInt(); } catch (java.util.InputMismatchException ex) { java.lang.System.err.println(\"Invalid Input! \\nPlease use an interger between 1 and 4.\"); in.nextLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1040/buggy-version/BlackJack.java", "BodyUseAPI": ["java.util.Scanner.nextInt()"], "Fixed commit": "a79c2246169e0aafad7c823c96511fe2ac403c75", "Url": "https://api.github.com/repos/GennyWithaG/COP3502-Project1", "Date": "2017-09-21T20:13:06Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return optPre((((((has(Flag.CTX)) || (has(Flag.NDT))) || (has(Flag.HOF))) || (has(Flag.UPD))) || (!(allAreValues())) ? opt(qc, scp) : sig.ret.zeroOrOne() ? item(qc, info) : value(qc)), qc); } catch (final org.basex.query.func.QueryException ex) { return org.basex.query.func.FnError.get(ex, seqType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2972/buggy-version/basex-core.src.main.java.org.basex.query.func.StandardFunc.java", "BodyUseAPI": ["org.basex.query.func.StandardFunc.has(Flag.NDT)", "org.basex.query.func.StandardFunc.has(Flag.HOF)", "org.basex.query.func.StandardFunc.allAreValues()", "sig.ret.zeroOrOne()", "org.basex.query.func.StandardFunc.has(Flag.UPD)", "org.basex.query.func.StandardFunc.optPre((((((has(Flag.CTX)) || (has(Flag.NDT))) || (has(Flag.HOF))) || (has(Flag.UPD))) || (!(allAreValues())) ? opt(qc, scp) : sig.ret.zeroOrOne() ? item(qc, info) : value(qc)),org.basex.query.func.QueryContext)", "org.basex.query.func.StandardFunc.has(Flag.CTX)", "org.basex.query.func.StandardFunc.value(org.basex.query.func.QueryContext)", "org.basex.query.func.StandardFunc.opt(org.basex.query.func.QueryContext,org.basex.query.func.VarScope)", "org.basex.query.func.StandardFunc.item(org.basex.query.func.QueryContext,org.basex.query.func.StandardFunc)"], "Fixed commit": "dcfce20587e6a8efbc4bc20ffd972c919369b902", "Url": "https://api.github.com/repos/BaseXdb/basex", "Date": "2015-01-28T11:29:23Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { connection = java.sql.DriverManager.getConnection(url); } catch (org.h2.jdbc.JdbcSQLException e) { if (url.contains(\"RUNSCRIPT\")) { org.zapodot.junit.db.EmbeddedDatabaseRule.LOGGER.error(\"Failed to initialize the H2 database. Please check your init script for errors\", e); } throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8390/buggy-version/embedded-db-junit.src.main.java.org.zapodot.junit.db.EmbeddedDatabaseRule.java", "BodyUseAPI": ["java.sql.DriverManager.getConnection(java.lang.String)"], "Fixed commit": "29165d4359c22688907aeec421eff1508a20a7ed", "Url": "https://api.github.com/repos/zapodot/embedded-db-junit", "Date": "2017-03-15T15:12:27Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.synchronize(); } catch (org.osgi.service.prefs.BackingStoreException x) { sk.stuba.fiit.perconik.eclipse.core.runtime.PluginConsoles.create(sk.stuba.fiit.perconik.core.preferences.plugin.Activator.getDefault()).error(e, \"Unable to synchronize registrations under key %s\", key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6357/buggy-version/sk.stuba.fiit.perconik.core.preferences.src.sk.stuba.fiit.perconik.core.preferences.AbstractRegistrationPreferences.java", "BodyUseAPI": ["sk.stuba.fiit.perconik.core.preferences.AbstractRegistrationPreferences<R>.synchronize()"], "Fixed commit": "9de384c061fdde5c71b76f218d7d72d62f9ce056", "Url": "https://api.github.com/repos/perconik/perconik", "Date": "2014-07-10T12:09:20Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (add && ((chess.King.distance(new java.awt.Point((originalX + curi), (originalY + curj)), other)) >= 2)) { threateningLocations.add(new java.awt.Point((originalX + curi), (originalY + curj))); java.lang.System.out.println(proposedLocation.toString()); java.lang.System.out.println(\"INININININ\"); } } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2310/buggy-version/src.chess.King.java", "BodyUseAPI": ["java.awt.Point.toString()", "chess.King.add(java.awt.Point)", "chess.King.distance(java.awt.Point,java.awt.Point)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "a3e7256f76535b08684a24195ee9e95462d37639", "Url": "https://api.github.com/repos/Advait-M/Chess", "Date": "2017-04-29T00:30:11Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.support.design.widget.Snackbar.make(v, R.string.vote_cast, Snackbar.LENGTH_SHORT).show(); } catch (java.lang.NullPointerException e) { android.util.Log.w(\"Vote\", (\"Cannot show 'vote cast!' snackbar\" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/9181/buggy-version/app.src.main.java.me.ccrama.redditslide.Vote.java", "BodyUseAPI": ["android.support.design.widget.Snackbar.make(v, R.string.vote_cast, Snackbar.LENGTH_SHORT).show()", "android.support.design.widget.Snackbar.make(android.view.View,R.string.vote_cast,Snackbar.LENGTH_SHORT)"], "Fixed commit": "3de00636be64eb61d6a893b9f4662fbfea2d5b9d", "Url": "https://api.github.com/repos/ccrama/Slide", "Date": "2015-10-28T17:41:09Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rest.setLatitude(geoResp.getResults().get(0).getGeometry().getLocation().getLat()); rest.setLongitude(geoResp.getResults().get(0).getGeometry().getLocation().getLng()); } catch (java.lang.Exception e) { javax.servlet.RequestDispatcher rd = request.getRequestDispatcher(\"/general_error_page.jsp\"); rd.forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7453/buggy-version/WebProject2016.src.java.servlets.NewRestaurant.java", "BodyUseAPI": ["beans.RestaurantBean.setLongitude(geoResp.getResults().get(0).getGeometry().getLocation().getLng())", "geoResp.getResults().get(0).getGeometry().getLocation()", "geoResp.getResults().get(0).getGeometry()", "geoResp.getResults().get(int)", "utils.GeocodeResponse.getResults()", "utils.GeocodeResponse.getResults()", "geoResp.getResults().get(int)", "geoResp.getResults().get(0).getGeometry()", "geoResp.getResults().get(0).getGeometry().getLocation().getLat()", "geoResp.getResults().get(0).getGeometry().getLocation().getLng()", "beans.RestaurantBean.setLatitude(geoResp.getResults().get(0).getGeometry().getLocation().getLat())", "geoResp.getResults().get(0).getGeometry().getLocation()"], "Fixed commit": "75bc911ff78d9a29fe19b030813402a0f08752da", "Url": "https://api.github.com/repos/NicolaGilberti/WebProject", "Date": "2017-02-02T20:37:01Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getCrossPlatformLookAndFeelClassName()); } catch (java.lang.Exception e) { java.lang.System.out.println(e.getStackTrace()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4985/buggy-version/docs.src.main.java.org.geotools.tutorial.feature.Csv2Shape.java", "BodyUseAPI": ["javax.swing.UIManager.setLookAndFeel(java.lang.String)", "javax.swing.UIManager.getCrossPlatformLookAndFeelClassName()"], "Fixed commit": "c51e6eb2c15a3984f46d80a176a4ea846cd6c8a9", "Url": "https://api.github.com/repos/travislbrundage/geotools", "Date": "2014-12-09T00:35:44Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { file.createNewFile(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3563/buggy-version/psy.ActivityHistory.PlayerLogFile.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "6e8e2f039e5b6ad260db5668645fb6b0af0bd6ff", "Url": "https://api.github.com/repos/psychic94/ActivityHistory", "Date": "2013-04-05T19:18:03Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { bg.znestorov.sofbus24.entity.VehicleTypeEnum vehicleType = cursorToVehicleType(cursor); vehicleTypes.add(vehicleType); cursor.moveToNext(); } catch (java.lang.Exception e) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/717/buggy-version/HoloDesign-ver.3.Sofbus24.src.bg.znestorov.sofbus24.databases.DroidTransDataSource.java", "BodyUseAPI": ["bg.znestorov.sofbus24.databases.DroidTransDataSource.cursorToVehicleType(android.database.Cursor)", "java.util.ArrayList<bg.znestorov.sofbus24.entity.VehicleTypeEnum>.add(bg.znestorov.sofbus24.entity.VehicleTypeEnum)", "android.database.Cursor.moveToNext()"], "Fixed commit": "0dfe43f895975d4a775ca08642ae8a902a281351", "Url": "https://api.github.com/repos/zdravko-nestorov/Sofbus-24", "Date": "2015-07-05T18:04:23Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { queryValue = new org.intermine.objectstore.query.QueryValue(java.lang.Integer.parseInt(value)); } catch (java.lang.NumberFormatException nfe) { queryValue = new org.intermine.objectstore.query.QueryValue(java.lang.Double.parseDouble(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/1608/buggy-version/intermine.web.main.src.org.intermine.web.logic.widget.WidgetLdr.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "bdd9c3659ae4c4767930b179a2cfdc9b39e13fb7", "Url": "https://api.github.com/repos/intermine/intermine", "Date": "2016-09-28T14:41:53Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { r = ((com.orientechnologies.orient.core.db.record.OIdentifiable) (o)).getRecord(); } catch (com.orientechnologies.orient.core.exception.ORecordNotFoundException notFound) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7264/buggy-version/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java", "BodyUseAPI": ["java.lang.Object.getRecord()"], "Fixed commit": "50843e673a2a8438c14c734346076634460e95ba", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-11-21T16:38:21Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return channels.get(position); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6876/buggy-version/app.src.main.java.kr.co.fci.tv.channelList.ChannelListAdapter.java", "BodyUseAPI": ["java.util.List<kr.co.fci.tv.channelList.Channel>.get(int)"], "Fixed commit": "9cf4528c2b471bef8145c8680c8bace857e60e03", "Url": "https://api.github.com/repos/rockcarry/Isdbt", "Date": "2017-12-26T07:48:07Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { loginAlertDialog.show(); } catch (android.view.WindowManager e) { de.hof.university.app.Util.Log.e(de.hof.university.app.experimental.LoginController.TAG, \"loginAlertDialog.show: BadTokenException einmal abgefangen. Nochmal versuchen\", e); try { loginAlertDialog.show(); } catch (android.view.WindowManager e2) { de.hof.university.app.Util.Log.e(de.hof.university.app.experimental.LoginController.TAG, \"loginAlertDialog.show: BadTokenException zweimal abgefangen. Aufh\u00f6ren\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6157/buggy-version/app.src.main.java.de.hof.university.app.experimental.LoginController.java", "BodyUseAPI": ["android.support.v7.app.AlertDialog.show()"], "Fixed commit": "889c62ca94756e3595deba469759c7c432dae5a1", "Url": "https://api.github.com/repos/HochschuleHofStundenplanapp/AndroidStundenplanHof", "Date": "2017-11-19T16:22:09Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.lang.Integer.parseInt(args[(i + 1)]); } catch (java.lang.NumberFormatException e) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8241/buggy-version/src.gibstick.bukkit.discosheep.DiscoSheepCommandExecutor.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "f92247c170d08927d89b7af8982e05a3e949f96e", "Url": "https://api.github.com/repos/Gibstick/DiscoSheep", "Date": "2013-07-19T15:28:41Z"},
{"Line": "=>808", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { connectToDroneClient(); } catch (java.lang.Throwable e) { android.widget.Toast.makeText(getApplicationContext(), \"Could not connect to Paparazzi Services\", Toast.LENGTH_SHORT).show(); android.util.Log.e(com.gcs.MainActivity.TAG, \"Service not available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/8504/buggy-version/app.src.main.java.com.gcs.MainActivity.java", "BodyUseAPI": ["com.gcs.MainActivity.connectToDroneClient()"], "Fixed commit": "c612345871b8531eaf03581ff885cbc5a86a9765", "Url": "https://api.github.com/repos/tudelft/PPRZGroundstation", "Date": "2015-10-28T16:06:01Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { crawler.setErrorLimit(java.lang.Integer.parseInt(props.getProperty(\"error-limit\"))); } catch (java.lang.NumberFormatException e) { qubase.engine.Controller.logger.warning(\"Failed to set error limit.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3905/buggy-version/src.qubase.engine.Controller.java", "BodyUseAPI": ["qubase.engine.Crawler.setErrorLimit(int)", "java.lang.Integer.parseInt(java.lang.String)", "java.util.Properties.getProperty(java.lang.String)"], "Fixed commit": "dc01cc0a8810102d42de6b7539687c6d05d8c5bd", "Url": "https://api.github.com/repos/qubase/lectura-crawler-tools", "Date": "2014-03-18T15:02:56Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mLogsQueue.add(mode); } catch (java.lang.IllegalStateException e) { mLogsQueue.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3528/buggy-version/ALog.src.main.java.com.aiven.log.action.LogRecodeUtils.java", "BodyUseAPI": ["java.util.concurrent.ArrayBlockingQueue<com.aiven.log.model.LogMode>.add(com.aiven.log.model.LogMode)"], "Fixed commit": "860def399d4b6a2c78d647410d8d8adc5a00911d", "Url": "https://api.github.com/repos/aiven163/ALog", "Date": "2015-08-10T06:33:33Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { readers[i].close(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/776/buggy-version/CsvMerger.CombineCSV.java", "BodyUseAPI": ["readers[i].close()"], "Fixed commit": "5d779715905f6f6d3622a3673e1e1ab74c590ee2", "Url": "https://api.github.com/repos/riyadparvez/csv-merger", "Date": "2015-10-30T17:21:21Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Double.parseDouble(childValue); } catch (java.lang.NumberFormatException e) { if (verbose) gr.seab.r2rml.beans.Generator.log.info(\"child value is not a number\"); childValue = (\"'\" + childValue) + \"'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7851/buggy-version/src.main.java.gr.seab.r2rml.beans.Generator.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "3c4cbf589c113dc5471c53bee6a298e74a4f60f1", "Url": "https://api.github.com/repos/nkons/r2rml-parser", "Date": "2015-11-19T18:57:28Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tups = storm.kafka.KafkaUtils.generateTuples(_spoutConfig, toEmit.msg); } catch (java.lang.Exception ex) { storm.kafka.PartitionManager.LOG.warn((((\"Error generating tuples for partitionId: \" + (_partition.getId())) + \" offset: \") + (toEmit.offset))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/2909/buggy-version/src.jvm.storm.kafka.PartitionManager.java", "BodyUseAPI": ["storm.kafka.KafkaUtils.generateTuples(storm.kafka.SpoutConfig,toEmit.msg)"], "Fixed commit": "aed8e3c0a9a0fe73b4e85df4231f3e3d5fb346e3", "Url": "https://api.github.com/repos/relateiq/storm-kafka-0.8-plus", "Date": "2014-08-21T17:11:12Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (targetType.equals(Activity.FLOATING_TASK_TYPE)) { lastShownList = model.getFilteredFloatingTaskList(); activityToComplete = lastShownList.get(targetIndex); }else if (targetType.equals(Activity.TASK_TYPE)) { lastShownList = model.getFilteredTaskList(); activityToComplete = lastShownList.get(targetIndex); }else { lastShownList = model.getFilteredEventList(); activityToComplete = lastShownList.get(targetIndex); } } catch (java.lang.IndexOutOfBoundsException e) { return new seedu.menion.logic.commands.CommandResult(seedu.menion.commons.core.Messages.MESSAGE_INVALID_ACTIVITY_DISPLAYED_INDEX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/3646/buggy-version/src.main.java.seedu.menion.logic.commands.CompleteCommand.java", "BodyUseAPI": ["seedu.menion.commons.core.UnmodifiableObservableList<seedu.menion.model.activity.ReadOnlyActivity>.get(int)", "seedu.menion.commons.core.UnmodifiableObservableList<seedu.menion.model.activity.ReadOnlyActivity>.get(int)", "seedu.menion.logic.commands.CompleteCommand.getFilteredFloatingTaskList()", "seedu.menion.logic.commands.CompleteCommand.getFilteredTaskList()", "seedu.menion.commons.core.UnmodifiableObservableList<seedu.menion.model.activity.ReadOnlyActivity>.get(int)", "seedu.menion.logic.commands.CompleteCommand.getFilteredEventList()", "java.lang.String.equals(Activity.FLOATING_TASK_TYPE)", "java.lang.String.equals(Activity.TASK_TYPE)"], "Fixed commit": "65f3c6dad5d4db0a52fe0071e3c6bb7b997b560a", "Url": "https://api.github.com/repos/CS2103AUG2016-W14-C2/main", "Date": "2016-10-25T14:24:59Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fromPoint.setExpectedType(toPoint.getExpectedType()); } catch (java.lang.ClassCastException e) { if (!(toPoint.getExpectedType().canBeAssignedFrom(fromPoint.getExpectedType()))) { int result = javax.swing.JOptionPane.showConfirmDialog(panel, ((((\"The source type is \" + (fromPoint.getExpectedType())) + \", the destination type is \") + (toPoint.getExpectedType())) + \". Do you want to proceed and create the connection anyway?\"), \"Type Mismatch\", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.WARNING_MESSAGE); if (result == (javax.swing.JOptionPane.NO_OPTION)) { return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/6988/buggy-version/src.actions.global.globalactions.ConstructDataLineSegmentGlobalAction.java", "BodyUseAPI": ["paintcomponents.data.DataToPoint.getExpectedType()", "paintcomponents.data.DataFromPoint.setExpectedType(toPoint.getExpectedType())"], "Fixed commit": "8aa81aab08a2b0aa5ae6cc69a72730905635863b", "Url": "https://api.github.com/repos/UCSDOalads/JavaSketchPad", "Date": "2017-05-20T20:35:23Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.apache.catalina.Container webapp = getManager().getContainer(); objectInputStream = new org.apache.catalina.util.CustomObjectInputStream(inputStream, webapp.getLoader().getClassLoader()); readObject = objectInputStream.readObject(); } finally { try { objectInputStream.close(); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/9057/buggy-version/src.main.java.com.amazonaws.services.dynamodb.sessionmanager.DynamoDBSessionStore.java", "BodyUseAPI": ["org.apache.catalina.Container.getLoader()", "org.apache.catalina.util.CustomObjectInputStream.readObject()", "webapp.getLoader().getClassLoader()", "getManager().getContainer()", "com.amazonaws.services.dynamodb.sessionmanager.DynamoDBSessionStore.getManager()"], "Fixed commit": "5d387804080612b4775341cd5f2edb065fd0b234", "Url": "https://api.github.com/repos/aws/aws-dynamodb-session-tomcat", "Date": "2013-11-21T00:42:13Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { user = accountSvc.doAuthentication(token); } catch (java.lang.Exception e) { return new org.springframework.http.ResponseEntity<java.lang.String>(\"Unauthorized\", org.springframework.http.HttpStatus.UNAUTHORIZED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7514/buggy-version/src.main.java.edu.papolicy.controllers.FileController.java", "BodyUseAPI": ["edu.papolicy.services.Account.doAuthentication(java.lang.String)"], "Fixed commit": "04343f3ea71da65c4fde33ad9de76a89bbeedc03", "Url": "https://api.github.com/repos/lemonpole/ppdpapp-api", "Date": "2014-12-06T00:41:35Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { decodedRequestURI = java.net.URLDecoder.decode(messageComponents[1], \"UTF-8\"); parsedRequestComponents.put(\"requestURI\", decodedRequestURI); } catch (java.io.UnsupportedEncodingException e) { parsedRequestComponents.put(\"requestURI\", messageComponents[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/7768/buggy-version/src.com.lisahamm.RequestParser.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "94bcfc1dacefec757c9f0630dd6d04d05f348666", "Url": "https://api.github.com/repos/lisahamm/HTTPServer", "Date": "2015-05-15T15:38:03Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dir = file.getCanonicalFile().getParentFile(); } catch (java.io.IOException ex) { throw new com.puppycrawl.tools.checkstyle.api.CheckstyleException((\"Exception while getting canonical path to file \" + (file.getPath())), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/4019/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck.java", "BodyUseAPI": ["java.io.File.getCanonicalFile()", "java.io.File.getParentFile()"], "Fixed commit": "5d376284ef0c7b6cb292f206e52f948f3ada331d", "Url": "https://api.github.com/repos/checkstyle/checkstyle", "Date": "2017-10-30T10:14:24Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return com.google.common.base.Optional.of(net.minecraft.util.EnumParticleTypes.valueOf(name)); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V42/172/buggy-version/src.main.java.org.spongepowered.mod.effect.SpongeParticle.java", "BodyUseAPI": ["net.minecraft.util.EnumParticleTypes.valueOf(java.lang.String)", "com.google.common.base.Optional.of(net.minecraft.util.EnumParticleTypes.valueOf(name))"], "Fixed commit": "7e366b4c568b3103f458c3c03268beb9a6e4082c", "Url": "https://api.github.com/repos/bensku/Sponge", "Date": "2014-12-04T15:54:09Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { insertStudent(connection, studentToInsert); } catch (java.sql.SQLException e) { if ((e.getErrorCode()) != 1062) { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/726/buggy-version/Java.src.main.java.DBManager.java", "BodyUseAPI": ["DBManager.insertStudent(java.sql.Connection,Student)"], "Fixed commit": "6ae94a73bc0baa3bf073095c56a54c01afc545fe", "Url": "https://api.github.com/repos/rptoma/Catalog", "Date": "2017-05-21T15:09:25Z"},
{"Line": "=>533", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { googleMap.addPolyline(lineOptions); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2097/buggy-version/Route.app.src.main.java.com.example.admin.route.FollowRouteActivity.java", "BodyUseAPI": ["com.google.android.gms.maps.GoogleMap.addPolyline(com.google.android.gms.maps.model.PolylineOptions)"], "Fixed commit": "3284cfe0a991f287ca39493aba537973a0b136b9", "Url": "https://api.github.com/repos/kerine/blahblehbloh", "Date": "2015-11-08T15:17:49Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { googleMap.addPolyline(lineOptions); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2097/buggy-version/Route.app.src.main.java.com.example.admin.route.ShowRouteActivity.java", "BodyUseAPI": ["com.google.android.gms.maps.GoogleMap.addPolyline(com.google.android.gms.maps.model.PolylineOptions)"], "Fixed commit": "3284cfe0a991f287ca39493aba537973a0b136b9", "Url": "https://api.github.com/repos/kerine/blahblehbloh", "Date": "2015-11-08T15:17:49Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (eff.filter(scorer.getSorts())) { collector.collect(scorerDoc, scorer.getSorts()); } } catch (java.lang.ArrayIndexOutOfBoundsException e) { e.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2368/buggy-version/src.java.org.apache.lucene.search.IndexSearcher.java", "BodyUseAPI": ["org.apache.lucene.search.Scorer.getSorts()", "org.apache.lucene.search.EmbeddedFieldFilter.filter(scorer.getSorts())", "org.apache.lucene.search.Collector.collect(int,scorer.getSorts())", "org.apache.lucene.search.Scorer.getSorts()"], "Fixed commit": "b0b1c4998dd5156193f44f50e0442f95b4c7086f", "Url": "https://api.github.com/repos/Photobucket/Solbase-Lucene", "Date": "2012-09-18T19:39:37Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mSendServer.start(); } catch (java.lang.IllegalStateException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4654/buggy-version/src.main.java.ch.luklanis.esscan.codesend.ESRSender.java", "BodyUseAPI": ["ch.luklanis.esscan.codesend.ESSendServer.start()"], "Fixed commit": "2cb4603fa3235324a9102337fa0ed00c5fdfc98c", "Url": "https://api.github.com/repos/luklanis/esr-scanner", "Date": "2013-09-03T09:44:37Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { db = this.getWritableDatabase(); this.db = this.getWritableDatabase(); this.insertMatiere = this.db.compileStatement(com.example.emerich.mamoyenne.BddPack.MyBddClass.INSERTM); this.insertNote = this.db.compileStatement(com.example.emerich.mamoyenne.BddPack.MyBddClass.INSERTN); } catch (android.database.sqlite.SQLiteException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6646/buggy-version/MyApplication.app.src.main.java.com.example.emerich.mamoyenne.BddPack.MyBddClass.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.compileStatement(java.lang.String)", "android.database.sqlite.SQLiteDatabase.compileStatement(java.lang.String)", "com.example.emerich.mamoyenne.BddPack.MyBddClass.getWritableDatabase()", "com.example.emerich.mamoyenne.BddPack.MyBddClass.getWritableDatabase()"], "Fixed commit": "6db6bbb6d16353e1f3b00d7024d05449e723e454", "Url": "https://api.github.com/repos/CATCorporation/AndroidProject", "Date": "2015-01-27T19:18:39Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { final javax.ws.rs.client.Invocation.Builder request = buildRequest(); if ((state.get()) == (org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.State.OPEN)) { eventInput = request.get(javax.ws.rs.sse.SseEventInput.class); } } finally { if ((connectedLatch) != null) { connectedLatch.countDown(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5781/buggy-version/providers.sse.src.main.java.org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicReference<org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.State>.get()", "org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.EventHandler.buildRequest()", "Invocation.Builder.get(java.lang.Class)"], "Fixed commit": "93f331bdcac4dd1143e04dfe4687300492d9bfa6", "Url": "https://api.github.com/repos/asoldano/Resteasy", "Date": "2017-02-10T22:51:23Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return locationClient.getLastLocation(); } catch (java.lang.IllegalStateException e) { e.printStackTrace(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8635/buggy-version/src.com.mac.SafeWalk.HomeScreenActivity.java", "BodyUseAPI": ["com.google.android.gms.location.LocationClient.getLastLocation()"], "Fixed commit": "40990098e2c4fc1fed6db7fd2aada22a0b7a6908", "Url": "https://api.github.com/repos/SafeWalk/SafeWalk", "Date": "2014-05-02T22:06:26Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { notifyObservers(new com.engagepoint.university.admincentre.synchronization.CRUDPayload(com.engagepoint.university.admincentre.synchronization.CRUDOperation.CREATE, newInstance)); } catch (java.lang.Exception e) { com.engagepoint.university.admincentre.dao.AbstractDAO.LOGGER.warn(\"exception when create was occured, sychroniztion might not work \", newInstance.getId(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5039/buggy-version/admincentre-core.src.main.java.com.engagepoint.university.admincentre.dao.AbstractDAO.java", "BodyUseAPI": ["com.engagepoint.university.admincentre.dao.AbstractDAO<T>.notifyObservers(com.engagepoint.university.admincentre.synchronization.CRUDPayload)"], "Fixed commit": "266edc57abbc9bbd1f53dae0905bd22bb695e569", "Url": "https://api.github.com/repos/engagepoint/labs-admin-center", "Date": "2014-03-19T14:44:34Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { persistenceManagerFactory.close(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8409/buggy-version/src.org.romaframework.aspect.persistence.datanucleus.DataNucleusPersistenceModule.java", "BodyUseAPI": ["javax.jdo.PersistenceManagerFactory.close()"], "Fixed commit": "d8504c5c6b4dea3a44309ed3b241e5d2cbfde099", "Url": "https://api.github.com/repos/romaframework/persistence-datanucleus", "Date": "2012-11-08T17:14:50Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { types[i] = contextClassLoader.loadClass(className); } catch (java.lang.ClassNotFoundException e) { types[i] = java.lang.Class.forName(className); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1658/buggy-version/portal-service.src.com.liferay.portal.kernel.util.MethodParameter.java", "BodyUseAPI": ["java.lang.ClassLoader.loadClass(java.lang.String)"], "Fixed commit": "354182591da406d8b3de21358d4d8f094510b9cc", "Url": "https://api.github.com/repos/brunobasto/liferay-portal", "Date": "2013-10-14T22:42:32Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { port = java.lang.Integer.parseInt(portString); } catch (java.lang.Exception e) { throw new org.aksw.gerbil.exceptions.GerbilException(((\"Couldn\\'t parse the integer of the property \\\"\" + (org.aksw.gerbil.annotators.AgdistisAnnotatorConfig.AGDISTIS_PORT_PROPERTY_NAME)) + \"\\\".\"), e, org.aksw.gerbil.datatypes.ErrorTypes.ANNOTATOR_LOADING_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7722/buggy-version/src.main.java.org.aksw.gerbil.annotators.AgdistisAnnotatorConfig.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "7b2976bc4b58a6532a769e1d17e71ec76a962017", "Url": "https://api.github.com/repos/AKSW/gerbil", "Date": "2014-11-04T16:19:33Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { startsWith = path.startsWith(this.pattern); } catch (java.nio.file.InvalidPathException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3726/buggy-version/src.main.java.com.spotify.docker.client.CompressedDirectory.java", "BodyUseAPI": ["java.nio.file.Path.startsWith(java.lang.String)"], "Fixed commit": "f4dc36efd7853fc85ae9ea384f438e20582f9559", "Url": "https://api.github.com/repos/lucastheisen/docker-client", "Date": "2017-06-04T17:41:41Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String[] parts = title.split(\"-\"); titleDisp = parts[2].substring(1, ((parts[2].length()) - 1)); } catch (java.lang.Exception e) { titleDisp = title; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5516/buggy-version/src.se.mah.kd330a.project.itsl.FragmentITSL.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "a8b72c92dec25c1f10cc044d6d3b07a3f965e6c4", "Url": "https://api.github.com/repos/sandbergnilsvictor/MahAppStudent", "Date": "2013-11-08T16:42:41Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.concurrent.TimeUnit.MILLISECONDS.sleep(20); } catch (java.lang.InterruptedException e) { java.lang.System.err.format(((\"[ SERVER %d ] Error: MitterServer, \" + (e.getMessage())) + \"\\n\"), uni.mitter.MitterServer.serverId); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/918/buggy-version/MitterServer.java", "BodyUseAPI": ["java.util.concurrent.TimeUnit.sleep(int)"], "Fixed commit": "938930c37266d106382223436e22b6d61fd7ae44", "Url": "https://api.github.com/repos/chairus/DS-assignment", "Date": "2017-09-19T12:49:19Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((org.kie.server.services.jbpm.jpa.PersistenceUnitInfoImpl) (info)).setPersistenceUnitRootUrl(new java.net.URL(jarLocation)); } catch (java.lang.Exception e) { ((org.kie.server.services.jbpm.jpa.PersistenceUnitInfoImpl) (info)).setPersistenceUnitRootUrl(root); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2456/buggy-version/kie-server-parent.kie-server-services.kie-server-services-jbpm.src.main.java.org.kie.server.services.jbpm.JbpmKieServerExtension.java", "BodyUseAPI": ["javax.persistence.spi.PersistenceUnitInfo.setPersistenceUnitRootUrl(java.net.URL)"], "Fixed commit": "390c30017a701f017db9f3102ffca26b6c7cf79b", "Url": "https://api.github.com/repos/sutaakar/droolsjbpm-integration", "Date": "2015-08-24T10:59:44Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (end = (inputArray[i].length()) - 1; !(java.lang.Character.isLetterOrDigit(inputArray[i].charAt(end))); end--); } catch (java.lang.StringIndexOutOfBoundsException e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8616/buggy-version/src.AI.NaturalLanguage.java", "BodyUseAPI": ["java.lang.Character.isLetterOrDigit(char)", "java.lang.String.length()", "java.lang.String.charAt(int)"], "Fixed commit": "ac3bd2e77c1c3fcf40b666cdd9cfdcc6d13a21b5", "Url": "https://api.github.com/repos/doogyb/32pac", "Date": "2015-04-25T19:28:32Z"},
{"Line": "=>2946", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { code = executor.execute(org.apache.commons.exec.CommandLine.parse(startCmd)); } catch (org.apache.commons.exec.ExecuteException e) { throw new java.lang.Exception((((\"Failed to start Solr using command: \" + startCmd) + \" Exception : \") + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1024/buggy-version/solr.core.src.java.org.apache.solr.util.SolrCLI.java", "BodyUseAPI": ["org.apache.commons.exec.CommandLine.parse(java.lang.String)", "org.apache.commons.exec.Executor.execute(org.apache.commons.exec.CommandLine.parse(startCmd))"], "Fixed commit": "65b4530fb39842418eae8d2acb7c463182039083", "Url": "https://api.github.com/repos/bloomberg/lucene-solr", "Date": "2017-04-03T20:45:54Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cost += (weights[(denseFeatureIndex++)]) * (-(java.lang.Float.parseFloat(token))); } catch (java.lang.ArrayIndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5454/buggy-version/src.joshua.decoder.ff.tm.BilingualRule.java", "BodyUseAPI": ["java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "ef6bcff2d065c76e748657d09b34e34c0748ebb3", "Url": "https://api.github.com/repos/joshua-decoder/joshua", "Date": "2014-12-19T21:03:49Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return contains(aLetter.toString(), weight); } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1715/buggy-version/mtScrabble.src.essentials.objects.BrickList.java", "BodyUseAPI": ["essentials.enums.LetterEnum.toString()", "essentials.objects.BrickList.contains(aLetter.toString(),int)"], "Fixed commit": "a4bee0b0246f5ad0ce6f80982ca3195630c0d2f4", "Url": "https://api.github.com/repos/hanneseilers/mtScrabble", "Date": "2013-06-21T06:45:50Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { numOfResultToShow = getIntent().getIntExtra(\"numOfResult\", (-1)); b = new com.caren.eatnow.models.YelpBusinesses().getResults().get(numOfResultToShow); } catch (java.lang.Exception e) { android.content.Intent i = new android.content.Intent(this, com.caren.eatnow.activities.SearchActivity.class); startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/174/buggy-version/app.src.main.java.com.caren.eatnow.activities.BrowseActivity.java", "BodyUseAPI": ["com.caren.eatnow.activities.BrowseActivity.getIntent()", "new com.caren.eatnow.models.YelpBusinesses().getResults().get(int)", "com.caren.eatnow.models.YelpBusinesses.getResults()", "getIntent().getIntExtra(java.lang.String,int)"], "Fixed commit": "db662ac275b9e873651ab5c548799a7c743d7a8e", "Url": "https://api.github.com/repos/calren/EatNow", "Date": "2014-09-26T01:14:19Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getPersistenceManager().persist(org.gumtree.gumnix.sics.batch.ui.buffer.BatchBufferQueue.class.getName(), new java.util.ArrayList<org.gumtree.gumnix.sics.batch.ui.buffer.IBatchBuffer>(this)); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/2767/buggy-version/framework.sics.org.gumtree.gumnix.sics.batch.ui.src.org.gumtree.gumnix.sics.batch.ui.buffer.BatchBufferQueue.java", "BodyUseAPI": ["org.gumtree.service.persistence.ILocalPersistenceManager.persist(java.lang.String,java.util.ArrayList<org.gumtree.gumnix.sics.batch.ui.buffer.IBatchBuffer>)", "java.lang.Class.getName()", "org.gumtree.gumnix.sics.batch.ui.buffer.BatchBufferQueue.getPersistenceManager()"], "Fixed commit": "1d0c7db7090a26f1c95c70851b5e2476eaf2797c", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2014-04-28T06:53:24Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { confirm = qora.crypto.Base58.decode(this.seedTxt.getText()); } catch (java.lang.Exception e) { confirm = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1324/buggy-version/Qora.src.gui.create.ConfirmSeedFrame.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "qora.crypto.Base58.decode(java.lang.String)"], "Fixed commit": "6a95513fd131989782102c0917097a39c9feb593", "Url": "https://api.github.com/repos/Qoracoin/Qora", "Date": "2016-01-24T03:40:16Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { seed = qora.crypto.Base58.decode(this.seedTxt.getText()); } catch (java.lang.Exception e) { seed = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1324/buggy-version/Qora.src.gui.create.RecoverWalletFrame.java", "BodyUseAPI": ["qora.crypto.Base58.decode(java.lang.String)", "javax.swing.JTextField.getText()"], "Fixed commit": "6a95513fd131989782102c0917097a39c9feb593", "Url": "https://api.github.com/repos/Qoracoin/Qora", "Date": "2016-01-24T03:40:16Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.creationDate = com.stratelia.webactiv.util.DateUtil.getOutputDate(reply.getCreationDate(), lang); this.language = lang; } catch (java.text.ParseException ex) { this.creationDate = reply.getCreationDate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3331/buggy-version/question-reply.question-reply-war.src.main.java.com.silverpeas.questionReply.web.ReplyEntity.java", "BodyUseAPI": ["com.stratelia.webactiv.util.DateUtil.getOutputDate(reply.getCreationDate(),java.lang.String)", "com.silverpeas.questionReply.model.Reply.getCreationDate()"], "Fixed commit": "9b9d74ad1c69cc616be62d19f5015f5a6ed68d22", "Url": "https://api.github.com/repos/auroreallibe/Silverpeas-Components", "Date": "2011-07-16T08:38:59Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.net.Socket socket = new java.net.Socket(addr, java.lang.Integer.parseInt(port)); connections[id] = new com.telegram.app.NodeThread(this, socket, id); connections[id].open(); connections[id].start(); } catch (java.net.UnknownHostException uhe) { this.listener.messageReceived(new com.telegram.app.Message(null, (\"Unable to connect to: \" + (uhe.getMessage())), \"err\")); } catch (java.io.IOException ioe) { this.listener.messageReceived(new com.telegram.app.Message(null, (\"Error: \" + (ioe.getMessage())), \"err\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3794/buggy-version/src.main.java.com.telegram.app.Node.java", "BodyUseAPI": ["connections[id].open()", "connections[id].start()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "a180a230f861646f8b4980c09641986665092566", "Url": "https://api.github.com/repos/jakereps/telegram", "Date": "2017-02-22T02:23:11Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { urlString = (\"http://www.omdbapi.com/?s=\" + (java.net.URLEncoder.encode(movie, \"UTF-8\"))) + \"&type=movie\"; } catch (java.io.UnsupportedEncodingException uee) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/231/buggy-version/lab.src.main.java.movies.MovieDownloader.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "fa27f5291ca3c7538df1a3c33f69af1772f39540", "Url": "https://api.github.com/repos/info498d-w16/01-14-lists-data", "Date": "2016-01-14T17:48:54Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.silverpeas.util.FileUtil.validateFilename(downloadPath.getPath(), getRootPath()); } catch (java.io.IOException e) { com.stratelia.silverpeas.silvertrace.SilverTrace.error(\"silverCrawler\", \"SilverCrawlerRequestRouter.zipFolder()\", \"root.MSG_GEN_PARAM_VALUE\", (\"downloadPath error = \" + (downloadPath.getPath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7291/buggy-version/silvercrawler.silvercrawler-war.src.main.java.com.silverpeas.silvercrawler.control.SilverCrawlerSessionController.java", "BodyUseAPI": ["java.io.File.getPath()", "com.silverpeas.silvercrawler.control.SilverCrawlerSessionController.getRootPath()", "com.silverpeas.util.FileUtil.validateFilename(java.lang.String,java.lang.String)"], "Fixed commit": "4290adff91de8535a83d89c1aa238ef2964f0772", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Components", "Date": "2015-08-04T12:44:58Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return ((com.steelbridgelabs.oss.neo4j.structure.Neo4JElementIdProvider<?>) (type.newInstance())); } catch (java.lang.InstantiationException iex) { java.lang.reflect.Constructor<?> constructor = type.getConstructor(new java.lang.Class[]{ org.neo4j.driver.v1.Driver.class }); return ((com.steelbridgelabs.oss.neo4j.structure.Neo4JElementIdProvider<?>) (constructor.newInstance(driver))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3135/buggy-version/src.main.java.com.steelbridgelabs.oss.neo4j.structure.Neo4JGraphFactory.java", "BodyUseAPI": ["java.lang.Class<?>.newInstance()"], "Fixed commit": "78ca6c4c77e4828c7c0afb9d48beebb3d1a0a004", "Url": "https://api.github.com/repos/lhztop/neo4j-gremlin-bolt", "Date": "2017-06-28T07:16:23Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { jPlugin.setEnabled(true); } catch (java.lang.Throwable ex) { server.getLogger().log(java.util.logging.Level.SEVERE, (((\"Error occurred while enabling \" + (plugin.getDescription().getFullName())) + \" (Is it up to date?): \") + (ex.getMessage())), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/79/buggy-version/src.main.java.org.bukkit.plugin.java.JavaPluginLoader.java", "BodyUseAPI": ["org.bukkit.plugin.java.JavaPlugin.setEnabled(boolean)"], "Fixed commit": "4e0d676b2c4f8e6b29e266452a1aa0f4098f2d95", "Url": "https://api.github.com/repos/Bukkit/Bukkit", "Date": "2011-05-14T01:17:28Z"},
{"Line": "=>698", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { jPlugin.setEnabled(false); } catch (java.lang.Throwable ex) { server.getLogger().log(java.util.logging.Level.SEVERE, (((\"Error occurred while disabling \" + (plugin.getDescription().getFullName())) + \" (Is it up to date?): \") + (ex.getMessage())), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/79/buggy-version/src.main.java.org.bukkit.plugin.java.JavaPluginLoader.java", "BodyUseAPI": ["org.bukkit.plugin.java.JavaPlugin.setEnabled(boolean)"], "Fixed commit": "4e0d676b2c4f8e6b29e266452a1aa0f4098f2d95", "Url": "https://api.github.com/repos/Bukkit/Bukkit", "Date": "2011-05-14T01:17:28Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { realPath = com.mobile.otrcapital.Helpers.RealPathUtil.getRealPathFromURI_API19(this, data.getData()); } catch (java.lang.Exception ex) { ex.printStackTrace(); realPath = com.mobile.otrcapital.Helpers.RealPathUtil.getRealPathFromURI_API11to18(this, data.getData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/1754/buggy-version/app.src.main.java.com.mobile.otrcapital.Activities.LoadDetails.java", "BodyUseAPI": ["com.mobile.otrcapital.Helpers.RealPathUtil.getRealPathFromURI_API19(com.mobile.otrcapital.Activities.LoadDetails,data.getData())", "android.content.Intent.getData()"], "Fixed commit": "501bfe832ebcf322676ec21c02dcd42d7fe197a4", "Url": "https://api.github.com/repos/otrcapital/otrandroid", "Date": "2016-03-01T08:05:42Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { while (true) { this.setLine(i, \"\"); i++; } } catch (java.lang.IndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6528/buggy-version/SignInfo.src.denniss17.infosigns.signs.PlayersInfoSign.java", "BodyUseAPI": ["denniss17.infosigns.signs.PlayersInfoSign.setLine(int,java.lang.String)"], "Fixed commit": "52bbbec383c04df3a55dbcc3fab1bc017f66ccfd", "Url": "https://api.github.com/repos/denniss17/InfoSigns", "Date": "2013-12-13T00:17:31Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { response = restOperations.exchange(uri, method, content, java.lang.String.class); } catch (org.springframework.web.client.ResourceAccessException e) { if ((e.getCause()) instanceof java.net.HttpRetryException) { net.nuagenetworks.bambou.service.RestClientService.logger.info(\"Got HttpRetryException\"); java.net.HttpRetryException retryException = ((java.net.HttpRetryException) (e.getCause())); throw new net.nuagenetworks.bambou.RestStatusCodeException(org.springframework.http.HttpStatus.valueOf(retryException.responseCode()), retryException.getReason(), retryException.getReason()); } throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/6121/buggy-version/src.main.java.net.nuagenetworks.bambou.service.RestClientService.java", "BodyUseAPI": ["org.springframework.web.client.RestOperations.exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity<U>,java.lang.Class)"], "Fixed commit": "34211f723d9c5f27de1a50d2b80ae6530c3baaad", "Url": "https://api.github.com/repos/nuagenetworks/java-bambou", "Date": "2017-06-20T13:00:37Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(conn.isClosed())) { conn.close(); } } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/8246/buggy-version/src.main.java.site.DAO.HitCountDAO.java", "BodyUseAPI": ["java.sql.Connection.close()", "java.sql.Connection.isClosed()"], "Fixed commit": "b7011288fd744914a53adac63f1d867295f61d3b", "Url": "https://api.github.com/repos/JonSchram/targSite", "Date": "2014-09-23T06:36:04Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (out.getText(0, out.getLength()).contains(\"working...\")) out.remove(out.getText(0, out.getLength()).lastIndexOf(\"working...\"), 10); } catch (javax.swing.text.BadLocationException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/4487/buggy-version/src.OutputAdd.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.contains(java.lang.String)", "javax.swing.text.StyledDocument.getLength()", "javax.swing.text.StyledDocument.getText(int,int)", "javax.swing.text.StyledDocument.remove(int,int)", "javax.swing.text.StyledDocument.getLength()", "javax.swing.text.StyledDocument.getText(int,int)"], "Fixed commit": "a852b654a161873caf78e50bbd8ab61ae26a29eb", "Url": "https://api.github.com/repos/bencarlisle15/GabGuy", "Date": "2017-05-19T13:57:23Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.springframework.jdbc.core.JdbcOperations jdbcOperations = new org.springframework.jdbc.core.JdbcTemplate(dataSource); java.lang.String query = (((((\"SELECT *\" + \" FROM \") + (TABLE_USERS)) + \" WHERE \") + (COL_UID)) + \"=\") + (quote(uid)); logger.config(((\"Executing SQL query:[\" + query) + \"]\")); result = jdbcOperations.queryForObject(query, new com.mediacallz.server.database.UserDboRowMapper()); } catch (org.springframework.dao.EmptyResultDataAccessException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/5715/buggy-version/src.main.java.com.mediacallz.server.database.MySqlDao.java", "BodyUseAPI": ["com.mediacallz.server.database.MySqlDao.quote(java.lang.String)", "org.springframework.jdbc.core.JdbcOperations.queryForObject(java.lang.String,com.mediacallz.server.database.UserDboRowMapper)", "java.util.logging.Logger.config(java.lang.String)"], "Fixed commit": "1c2ad48b960c7964fd22c742f55191086e0f5e9c", "Url": "https://api.github.com/repos/Nom1fan/mediacallz_server", "Date": "2016-10-17T07:02:06Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (org.microg.networklocation.data.LocationSpec<T> locationSpec : locationSource.retrieveLocation(todo)) { locationDatabase.put(locationSpec); todo.remove(locationSpec.getSource()); } if (todo.isEmpty()) { break; } } catch (java.lang.Throwable t) { android.util.Log.d(org.microg.networklocation.data.LocationRetriever.TAG, (locationSource + \" caused problem!\"), t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/3045/buggy-version/NetworkLocation.src.org.microg.networklocation.data.LocationRetriever.java", "BodyUseAPI": ["org.microg.networklocation.data.LocationSpec<T>.getSource()", "org.microg.networklocation.source.LocationSource<T>.retrieveLocation(java.util.Collection<T>)", "org.microg.networklocation.database.LocationDatabase.put(org.microg.networklocation.data.LocationSpec<T>)", "java.util.Collection<T>.isEmpty()", "java.util.Collection<T>.remove(locationSpec.getSource())"], "Fixed commit": "7152774b2879a726316ba123b3e265cfe756e7e0", "Url": "https://api.github.com/repos/microg/NetworkLocation", "Date": "2013-12-02T01:59:46Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return net.minecraft.client.Minecraft.getMinecraft().mcDataDir.getCanonicalPath(); } catch (java.io.IOException e) { e.printStackTrace(); java.lang.String mcDataLocation = net.minecraft.client.Minecraft.getMinecraft().mcDataDir.getAbsolutePath(); return mcDataLocation.substring(0, ((mcDataLocation.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V43/7167/buggy-version/src.igwmod.ClientProxy.java", "BodyUseAPI": ["net.minecraft.client.Minecraft.getMinecraft().mcDataDir.getCanonicalPath()", "net.minecraft.client.Minecraft.getMinecraft()"], "Fixed commit": "f52907e2dca2a9889cbb387fd9ae31e63e627ecf", "Url": "https://api.github.com/repos/MineMaarten/IGW-mod", "Date": "2017-11-12T12:06:38Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.InputStream fis = p.getInputStream(); java.io.InputStreamReader isr = new java.io.InputStreamReader(fis); java.io.BufferedReader br = new java.io.BufferedReader(isr); java.lang.String line = null; while ((line = br.readLine()) != null) { java.lang.System.out.println(line); } } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6003/buggy-version/code.src.ngramModel.getTrainSet.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.lang.Process.getInputStream()", "java.io.BufferedReader.readLine()"], "Fixed commit": "effe377de3fd7760bc07cc1197867656e7ee0ee5", "Url": "https://api.github.com/repos/justinwm/Lexer", "Date": "2017-06-22T14:54:05Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return ((com.laboki.eclipse.plugin.jcolon.inserter.EditorContext.hasSelection(editor)) || (com.laboki.eclipse.plugin.jcolon.inserter.EditorContext.hasBlockSelection(editor))) || (com.laboki.eclipse.plugin.jcolon.inserter.EditorContext.isInLinkMode(editor)); } catch (final java.lang.Exception e) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3482/buggy-version/com.laboki.eclipse.plugin.jcolon.src.com.laboki.eclipse.plugin.jcolon.inserter.EditorContext.java", "BodyUseAPI": ["com.laboki.eclipse.plugin.jcolon.inserter.EditorContext.hasBlockSelection(org.eclipse.ui.IEditorPart)", "com.laboki.eclipse.plugin.jcolon.inserter.EditorContext.isInLinkMode(org.eclipse.ui.IEditorPart)", "com.laboki.eclipse.plugin.jcolon.inserter.EditorContext.hasSelection(org.eclipse.ui.IEditorPart)"], "Fixed commit": "31f0e0dc2032126b45ebde891b6b4918162b0130", "Url": "https://api.github.com/repos/mystilleef/eclipse4-jcolon", "Date": "2013-04-17T10:35:14Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.data.add(position, item); } catch (java.lang.IndexOutOfBoundsException e) { position = 0; this.data.add(position, item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8667/buggy-version/LastFMLollipop.src.com.ducva.lollipopdemo.adapter.DemoAdapter.java", "BodyUseAPI": ["java.util.List<com.ducva.lollipopdemo.model.BaseModel>.add(int,com.ducva.lollipopdemo.model.BaseModel)"], "Fixed commit": "2f6af7b2c8fbf59155d58fe749401f58b3607301", "Url": "https://api.github.com/repos/sirty/FirstLollipopDemo", "Date": "2014-11-20T02:52:11Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { f = result.getClass().getDeclaredField(next); } catch (java.lang.NoSuchFieldException e) { android.util.Log.e(\"TOPBREWERY\", e.toString()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1735/buggy-version/app.src.main.java.group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery.java", "BodyUseAPI": ["java.lang.Class<? extends group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery>.getDeclaredField(java.lang.String)", "group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery.getClass()"], "Fixed commit": "fcf0af54d0642f08991be8dd3e502d8808194e4d", "Url": "https://api.github.com/repos/grwyler/beerButler", "Date": "2017-05-06T02:12:30Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { f = this.getClass().getDeclaredField(next); } catch (java.lang.NoSuchFieldException e) { android.util.Log.e(\"TOPBREWERY\", e.toString()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1735/buggy-version/app.src.main.java.group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery.java", "BodyUseAPI": ["group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery.country.getClass()", "java.lang.Class<? extends group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery.country>.getDeclaredField(java.lang.String)"], "Fixed commit": "fcf0af54d0642f08991be8dd3e502d8808194e4d", "Url": "https://api.github.com/repos/grwyler/beerButler", "Date": "2017-05-06T02:12:30Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { f = this.getClass().getDeclaredField(next); } catch (java.lang.NoSuchFieldException e) { android.util.Log.e(\"TOPBREWERY\", e.toString()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1735/buggy-version/app.src.main.java.group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery.java", "BodyUseAPI": ["java.lang.Class<? extends group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery.brewery>.getDeclaredField(java.lang.String)", "group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery.brewery.getClass()"], "Fixed commit": "fcf0af54d0642f08991be8dd3e502d8808194e4d", "Url": "https://api.github.com/repos/grwyler/beerButler", "Date": "2017-05-06T02:12:30Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { f.set(result, brewery.get(next)); } catch (java.lang.IllegalArgumentException e) { android.util.Log.e(\"TOPBREWERY\", e.getMessage().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1735/buggy-version/app.src.main.java.group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery.java", "BodyUseAPI": ["java.lang.reflect.Field.set(group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery,brewery.get(next))", "org.json.JSONObject.get(java.lang.String)"], "Fixed commit": "fcf0af54d0642f08991be8dd3e502d8808194e4d", "Url": "https://api.github.com/repos/grwyler/beerButler", "Date": "2017-05-06T02:12:30Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { f = this.getClass().getDeclaredField(next); } catch (java.lang.NoSuchFieldException e) { android.util.Log.e(\"TOPBREWERY\", e.toString()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1735/buggy-version/app.src.main.java.group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery.java", "BodyUseAPI": ["group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery.images.getClass()", "java.lang.Class<? extends group10.tcss450.uw.edu.challengeapp.BrewTour.TopBrewery.images>.getDeclaredField(java.lang.String)"], "Fixed commit": "fcf0af54d0642f08991be8dd3e502d8808194e4d", "Url": "https://api.github.com/repos/grwyler/beerButler", "Date": "2017-05-06T02:12:30Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { sheet.getWorkbook().write(fileOut); } finally { fileOut.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7855/buggy-version/src.main.java.net.github.rtc.app.export.table.XLSNXTable.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Sheet.getWorkbook()", "sheet.getWorkbook().write(java.io.FileOutputStream)"], "Fixed commit": "bbdc810e124adc4abec7cfc5bc456f7df95f358d", "Url": "https://api.github.com/repos/ReturnOnIntellingenceTraineeCommunity/rtc-app", "Date": "2015-01-29T00:03:11Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { _currentRentalApi.returnRental(activeRental.getUUID()); } catch (java.rmi.RemoteException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8035/buggy-version/at.owlsoft.owlet.src.at.owlsoft.owlet.viewmodel.ShowRentalViewModel.java", "BodyUseAPI": ["at.owlsoft.owl.model.accounting.IRental.getUUID()", "at.owlsoft.owl.communication.rmi.IRentalApi.returnRental(activeRental.getUUID())"], "Fixed commit": "0804816b21151be60880fd4c16079e041ea34151", "Url": "https://api.github.com/repos/OwlSoft/Owl", "Date": "2011-11-23T09:24:22Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { _currentRentalApi.createNewExtension(activeRental.getUUID()); } catch (java.rmi.RemoteException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8035/buggy-version/at.owlsoft.owlet.src.at.owlsoft.owlet.viewmodel.ShowRentalViewModel.java", "BodyUseAPI": ["at.owlsoft.owl.communication.rmi.IRentalApi.createNewExtension(activeRental.getUUID())", "at.owlsoft.owl.model.accounting.IRental.getUUID()"], "Fixed commit": "0804816b21151be60880fd4c16079e041ea34151", "Url": "https://api.github.com/repos/OwlSoft/Owl", "Date": "2011-11-23T09:24:22Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { eng = java.net.URLEncoder.encode(eng, \"utf-8\"); } catch (java.io.UnsupportedEncodingException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2865/buggy-version/src.NetDictionary.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "43b5b683f34627bb1fc8c2f4d81ce1882ed92cff", "Url": "https://api.github.com/repos/HONGJICAI/NetDictionary", "Date": "2016-12-17T13:25:51Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1000); mArenaView.setMode(ArenaView.RUNNING); } catch (java.lang.Exception e) { mArenaView.setMode(ArenaView.RUNNING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/8599/buggy-version/src.princeTron.UserInterface.Arena.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)", "princeTron.UserInterface.ArenaView.setMode(ArenaView.RUNNING)"], "Fixed commit": "eec6b766a0618573b8d22fb8101de468be0b608f", "Url": "https://api.github.com/repos/44maagnum/princetron_android", "Date": "2012-04-12T01:02:24Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(10); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2784/buggy-version/src.main.java.ru.xc0re.games.snake.Game.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "c221d695e15e9c60b0ee8a0f7eb81531b724ce6b", "Url": "https://api.github.com/repos/xc0r3/Snake", "Date": "2016-07-12T20:17:15Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { net.minecraftforge.client.model.IModel model = net.minecraftforge.client.model.ModelLoaderRegistry.getModel(location); for (net.minecraft.util.ResourceLocation dep : model.getDependencies()) { getModel(dep); } textures.addAll(model.getTextures()); } finally { loadingModels.remove(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3167/buggy-version/src.main.java.net.minecraftforge.client.model.ModelLoader.java", "BodyUseAPI": ["net.minecraftforge.client.model.IModel.getTextures()", "net.minecraftforge.client.model.ModelLoaderRegistry.getModel(net.minecraft.util.ResourceLocation)", "net.minecraftforge.client.model.IModel.getDependencies()", "java.util.Set<net.minecraft.util.ResourceLocation>.addAll(model.getTextures())", "net.minecraftforge.client.model.ModelLoader.getModel(net.minecraft.util.ResourceLocation)"], "Fixed commit": "33e2e0b0284fbdf464957555abe629e93d53fd84", "Url": "https://api.github.com/repos/luacs1998/MinecraftForge", "Date": "2015-08-19T21:09:01Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (org.eclipse.core.resources.IProject curProject : this.ChangedProjects) { io.sloeber.core.tools.Libraries.checkLibraries(curProject); } this.ChangedProjects.clear(); } catch (java.lang.Exception e) { io.sloeber.core.common.Common.log(new org.eclipse.core.runtime.Status(org.eclipse.core.runtime.IStatus.WARNING, io.sloeber.core.Activator.getId(), io.sloeber.core.managers.Messages.Failed_To_Add_Libraries, e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1541/buggy-version/io.sloeber.core.src.io.sloeber.core.listeners.IndexerListener.java", "BodyUseAPI": ["io.sloeber.core.tools.Libraries.checkLibraries(org.eclipse.core.resources.IProject)", "java.util.Set<org.eclipse.core.resources.IProject>.clear()"], "Fixed commit": "428439c8ef34700103fd12f82be86e3804a118be", "Url": "https://api.github.com/repos/Sloeber/arduino-eclipse-plugin", "Date": "2017-05-04T00:15:55Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return net.masterthought.freebase.FreebaseUtil.freebase.mqlread(query).get(\"result\"); } catch (net.masterthought.freebase.com.freebase fe) { java.lang.System.out.println(query); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/247/buggy-version/src.main.java.net.masterthought.freebase.FreebaseUtil.java", "BodyUseAPI": ["net.masterthought.freebase.FreebaseUtil.freebase.mqlread(query).get(java.lang.String)", "com.freebase.api.Freebase.mqlread(com.freebase.json.JSON)"], "Fixed commit": "7505404d29fa1411f38882a329a8fb93e8b5f5f5", "Url": "https://api.github.com/repos/mamalisk/moviebase", "Date": "2012-08-31T11:18:24Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { distance = (java.lang.Float.parseFloat(mDistance.getText().toString())) * 1000; } catch (java.lang.Exception e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1555/buggy-version/mobile.src.main.java.com.tbocek.sunclock.TideStationSelectorView.java", "BodyUseAPI": ["java.lang.Float.parseFloat(mDistance.getText().toString())", "android.widget.EditText.getText()", "mDistance.getText().toString()"], "Fixed commit": "d14fa86ee97a25f2c47e0bd6facff3a668fd8ba4", "Url": "https://api.github.com/repos/timbocek/Corona", "Date": "2014-12-11T00:33:53Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.google.cloud.translate.Translate translate = com.google.cloud.translate.TranslateOptions.newBuilder().build().getService(); java.lang.String detectedLanguages = \"\"; java.util.List<com.google.cloud.translate.Detection> detections = translate.detect(com.google.common.collect.ImmutableList.of(speechResult.get(0))); for (com.google.cloud.translate.Detection detection : detections) { detectedLanguages += (detection.getLanguage()) + \" - \"; } this.languageResult.setText(detectedLanguages); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4242/buggy-version/app.src.main.java.com.example.speechrecognizer.MainActivity.java", "BodyUseAPI": ["com.google.cloud.translate.TranslateOptions.newBuilder()", "com.google.cloud.translate.TranslateOptions.newBuilder().build().getService()", "com.google.cloud.translate.Detection.getLanguage()", "com.google.common.collect.ImmutableList.of(java.lang.String)", "com.google.cloud.translate.Translate.detect(com.google.common.collect.ImmutableList.of(speechResult.get(0)))", "java.util.List<java.lang.String>.get(int)", "android.widget.TextView.setText(java.lang.String)", "com.google.cloud.translate.TranslateOptions.newBuilder().build()"], "Fixed commit": "844e87dde707502049e7399c24544b95d39eb4c5", "Url": "https://api.github.com/repos/smdaziz/android-speech-recognizer", "Date": "2017-04-12T04:36:10Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { updatingFromEditor = true; getTreeViewer().setSelection(newSelection, true); } finally { updatingFromEditor = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7683/buggy-version/plugin_ide.ui.src-lang.melnorme.lang.ide.ui.editor.structure.LangOutlinePage.java", "BodyUseAPI": ["melnorme.lang.ide.ui.editor.structure.LangOutlinePage.getTreeViewer()", "getTreeViewer().setSelection(org.eclipse.jface.viewers.StructuredSelection,boolean)"], "Fixed commit": "782926347dfb30fdb4ed4d735464c6a8f309777d", "Url": "https://api.github.com/repos/DDT-IDE/DDT", "Date": "2015-05-28T12:10:35Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final java.lang.reflect.Method m = device.getClass().getMethod(\"createInsecureRfcommSocketToServiceRecord\", java.util.UUID.class); return ((android.bluetooth.BluetoothSocket) (m.invoke(device, com.mcuhq.simplebluetooth.MainActivity.BTMODULEUUID))); } catch (java.lang.Exception e) { android.util.Log.e(TAG, \"Could not create Insecure RFComm Connection\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/453/buggy-version/app.src.main.java.com.mcuhq.simplebluetooth.MainActivity.java", "BodyUseAPI": ["android.bluetooth.BluetoothDevice.getClass()", "java.lang.reflect.Method.invoke(android.bluetooth.BluetoothDevice,java.util.UUID)", "device.getClass().getMethod(java.lang.String,java.lang.Class)"], "Fixed commit": "d353abb7014a02ca5c538672171b1ece5c3db145", "Url": "https://api.github.com/repos/bauerjj/Android-Simple-Bluetooth-Example", "Date": "2017-08-12T15:29:56Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { rc.move(moveDir); } catch (battlecode.common.GameActionException e) { java.lang.System.out.println((\"Could not move: \" + moveDir)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3364/buggy-version/AbstractBot.java", "BodyUseAPI": ["battlecode.common.RobotController.move(battlecode.common.Direction)"], "Fixed commit": "9baf70ffb30643716446b2ece13e5665445ea7c7", "Url": "https://api.github.com/repos/traubms/trashboys", "Date": "2016-01-14T07:30:18Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { numQuestions = java.lang.Integer.parseInt(((android.widget.EditText) (findViewById(R.id.num_questions_text))).getText().toString()); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5928/buggy-version/app.src.main.java.com.memorychallenger.projects.memorychallenger.activities.PreGameActivity.java", "BodyUseAPI": ["com.memorychallenger.projects.memorychallenger.activities.PreGameActivity.findViewById(R.id.num_questions_text)", "((android.widget.EditText) (findViewById(R.id.num_questions_text))).getText().toString()", "((android.widget.EditText) (findViewById(R.id.num_questions_text))).getText()", "java.lang.Integer.parseInt(((android.widget.EditText) (findViewById(R.id.num_questions_text))).getText().toString())"], "Fixed commit": "fa2f633d5d7de924d7a1c733019f15e347369320", "Url": "https://api.github.com/repos/kevinmpm/memory-challenger", "Date": "2017-05-06T16:21:19Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6769/buggy-version/JavaNESBrain.src.com.starflask.JavaNESBrain.SuperBrain.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "bf75144044c35375f0a27e4e6d60ab2f95dc2b3d", "Url": "https://api.github.com/repos/admazzola/JavaNESBrain", "Date": "2015-12-23T21:58:31Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Class.forName(org.jboss.netty.util.internal.ByteBufferUtil.class.getName()); } catch (java.lang.ClassNotFoundException cnfe) { if (com.liferay.portal.search.elasticsearch.internal.connection.EmbeddedElasticsearchConnection._log.isWarnEnabled()) { com.liferay.portal.search.elasticsearch.internal.connection.EmbeddedElasticsearchConnection._log.warn((((\"Unable to preload \" + (org.jboss.netty.util.internal.ByteBufferUtil.class)) + \" to prevent netty shutdown concurrent class loading \") + \"interruption issue.\"), cnfe); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2029/buggy-version/portal-search-elasticsearch.src.main.java.com.liferay.portal.search.elasticsearch.internal.connection.EmbeddedElasticsearchConnection.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)", "java.lang.Class.getName()"], "Fixed commit": "98ea2f9574801fc3ab2268ad4746f7c8a921cec3", "Url": "https://api.github.com/repos/liferay/com-liferay-portal-search", "Date": "2016-11-04T07:01:15Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { resource.close(); } catch (java.io.IOException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2272/buggy-version/rt.rs.sse.src.main.java.org.apache.cxf.jaxrs.sse.atmosphere.SseAtmosphereEventSinkImpl.java", "BodyUseAPI": ["org.atmosphere.cpr.AtmosphereResource.close()"], "Fixed commit": "f2fe6260e87fc71e43075730bee99cf564d2711a", "Url": "https://api.github.com/repos/stevencrockett/cxf", "Date": "2017-03-06T15:31:36Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { response.flushBuffer(); } catch (java.io.IOException ex) { org.apache.cxf.jaxrs.sse.atmosphere.SseAtmosphereEventSinkImpl.LOG.warning(\"Failed to flush AtmosphereResponse buffer\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2272/buggy-version/rt.rs.sse.src.main.java.org.apache.cxf.jaxrs.sse.atmosphere.SseAtmosphereEventSinkImpl.java", "BodyUseAPI": ["org.atmosphere.cpr.AtmosphereResponse.flushBuffer()"], "Fixed commit": "f2fe6260e87fc71e43075730bee99cf564d2711a", "Url": "https://api.github.com/repos/stevencrockett/cxf", "Date": "2017-03-06T15:31:36Z"},
{"Line": "=>763", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { grid.setCell(x, y, c, username, false, false); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4670/buggy-version/src.crossword.PuzzleGUI.java", "BodyUseAPI": ["crossword.CrosswordGrid.setCell(int,int,char,java.lang.String,boolean,boolean)"], "Fixed commit": "7db2034cef64fc56d8637ed1980093f3bf78534b", "Url": "https://api.github.com/repos/hencoappel/CrosswordPuzzle", "Date": "2013-02-11T16:07:37Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return pcl().loadApplicationClass(name); } catch (java.lang.SecurityException se) { return null; } catch (org.rythmengine.exception.RythmException re) { if ((re.getCause()) instanceof java.lang.SecurityException) { return null; } throw re; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5166/buggy-version/src.org.rythmengine.play.RythmPlugin.java", "BodyUseAPI": ["play.classloading.ApplicationClassloader.loadApplicationClass(java.lang.String)", "org.rythmengine.play.RythmPlugin.1.pcl()"], "Fixed commit": "9a8991067ed405bf02f33704dc31ab0bfaa204f2", "Url": "https://api.github.com/repos/greenlaw110/play-rythm", "Date": "2013-05-19T12:12:36Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return java.lang.Class.forName(((\"[L\" + (componentType.getName())) + \";\")); } catch (java.lang.ClassNotFoundException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7778/buggy-version/structr-core.src.main.java.org.structr.core.property.ArrayProperty.java", "BodyUseAPI": ["java.lang.Class<T>.getName()", "java.lang.Class.forName(java.lang.String)"], "Fixed commit": "e0d4ac9d0f9bbc35760a63fb8518abfb1f89258c", "Url": "https://api.github.com/repos/structr/structr", "Date": "2017-09-05T21:02:37Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((localSourceUrl != null) && (io.dropwizard.servlets.assets.ResourceURL.isDirectory(localSourceUrl))) { path = (path + \"/\") + (indexFile); localSourceUrl = this.getClass().getResource(((resourcePath) + path)); } } catch (java.net.URISyntaxException e) { throw new javax.servlet.ServletException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1659/buggy-version/src.main.java.org.rnorth.dropwizard.markdown.internal.MarkdownAssetsServlet.java", "BodyUseAPI": ["java.lang.Class<? extends org.rnorth.dropwizard.markdown.internal.MarkdownAssetsServlet>.getResource(java.lang.String)", "org.rnorth.dropwizard.markdown.internal.MarkdownAssetsServlet.getClass()", "io.dropwizard.servlets.assets.ResourceURL.isDirectory(java.net.URL)"], "Fixed commit": "fd2e6acafb2e359b9bab2ba077fe9d85865107d7", "Url": "https://api.github.com/repos/rnorth/dropwizard-markdown-assets-bundle", "Date": "2016-10-01T19:37:13Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return runnableScript.run(context); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException((\"function call failed: \" + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/5433/buggy-version/runtime.src.main.java.io.dshell.runtime.Runtime.java", "BodyUseAPI": ["io.dshell.runtime.api.RunnableScript.run(io.dshell.runtime.api.Context)"], "Fixed commit": "c8cabe6620d7a28ee4b92457f3dc14c7c96050ac", "Url": "https://api.github.com/repos/dshell-io/dshell", "Date": "2017-05-06T12:02:56Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.leftList = new java.util.ArrayList<blackboard.servlet.data.MultiSelectBean>(); this.rightList = new java.util.ArrayList<blackboard.servlet.data.MultiSelectBean>(); this.modified = xmlFactory.getContent(SavedContent.Content.MODIFIED); this.cmlist = CourseMembershipDbLoader.Default.getInstance().loadByCourseIdAndRole(courseID, CourseMembership.Role.STUDENT, null, true); } catch (group.three.KeyNotFoundException e) { } catch (group.three.PersistenceException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/6947/buggy-version/utils.src.main.java.group.three.Leaderboard_Config.java", "BodyUseAPI": ["CourseMembershipDbLoader.Default.getInstance()", "group.three.XMLFactory.getContent(SavedContent.Content.MODIFIED)", "CourseMembershipDbLoader.Default.getInstance().loadByCourseIdAndRole(group.three.Id,CourseMembership.Role.STUDENT,<nulltype>,boolean)"], "Fixed commit": "c060f2bfee4f12f8c45bec85f8f1a97ce86791a6", "Url": "https://api.github.com/repos/eparham7861/Leaderboard-Project-Spring-2015", "Date": "2015-02-23T22:32:21Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { query = java.net.URLEncoder.encode(query, \"utf-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3463/buggy-version/app.src.main.java.pl.malleor.hellomobilestackoverflow.StackRequest.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "8ebaf903930c82dac57c6844b1e98b079269f5ab", "Url": "https://api.github.com/repos/malleor/HelloMobileStackOverflow", "Date": "2015-03-07T12:29:50Z"},
{"Line": "=>1250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int index = java.lang.Integer.parseInt(indexText); return new com.alibaba.fastjson.JSONPath.ArrayAccessSegement(index); } catch (java.lang.NumberFormatException ex) { return new com.alibaba.fastjson.JSONPath.PropertySegement(indexText, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/3905/buggy-version/src.main.java.com.alibaba.fastjson.JSONPath.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "fb2ca4f987e5133edfbf9c403594f32a8e77a115", "Url": "https://api.github.com/repos/lihengming/fastjson", "Date": "2017-05-22T12:54:11Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.System.out.println((\"tableMetadata.getColumn(ident).getType()=\" + (tableMetadata.getColumn(ident).getType()))); } catch (java.lang.NullPointerException npe) { java.lang.System.err.println((\"ident=\" + ident)); java.lang.System.err.println((\"terms.get(i)=\" + (terms.get(i).toString().toString()))); java.lang.System.err.println((\"tableMetadata.getColumn(ident)=\" + (tableMetadata.getColumn(ident)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7103/buggy-version/meta-core.src.main.java.com.stratio.meta.core.structures.Relation.java", "BodyUseAPI": ["tableMetadata.getColumn(ident).getType()", "com.datastax.driver.core.TableMetadata.getColumn(java.lang.String)", "java.io.PrintStream.println((\"tableMetadata.getColumn(ident).getType()=\" + (tableMetadata.getColumn(ident).getType())))"], "Fixed commit": "f8447d88e608c7a0d7a19a48838a37d0b49b6698", "Url": "https://api.github.com/repos/Stratio/stratio-meta", "Date": "2014-05-09T07:19:32Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.apache.axiom.om.OMElement response = serviceClient.sendReceive(request); response.build(); return new org.intalio.tempo.security.ws.OMParser(response); } finally { serviceClient.cleanupTransport(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/4292/buggy-version/ws-client.src.main.java.org.intalio.tempo.security.ws.TokenClient.java", "BodyUseAPI": ["org.apache.axis2.client.ServiceClient.sendReceive(org.apache.axiom.om.OMElement)", "org.apache.axiom.om.OMElement.build()"], "Fixed commit": "d9a17ae0dccbefa954ae93f4e45ffde40a2417d5", "Url": "https://api.github.com/repos/Everteam-Software/security", "Date": "2011-07-28T14:57:53Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String wql = org.joval.scap.oval.adapter.windows.FileAdapter.OWNER_WQL.replaceAll(\"(?i)\\\\$path\", java.util.regex.Matcher.quoteReplacement(file.getPath())); org.joval.intf.windows.wmi.ISWbemObjectSet objSet = wmi.execQuery(org.joval.scap.oval.adapter.windows.FileAdapter.CIMV2, wql); if ((objSet.getSize()) == 1) { org.joval.intf.windows.wmi.ISWbemObject ownerObj = objSet.iterator().next(); org.joval.intf.windows.wmi.ISWbemPropertySet ownerPropSet = ownerObj.getProperties(); org.joval.intf.windows.wmi.ISWbemProperty usernameProp = ownerPropSet.getItem(\"AccountName\"); java.lang.String username = usernameProp.getValueAsString(); org.joval.intf.windows.wmi.ISWbemProperty domainProp = ownerPropSet.getItem(\"ReferencedDomainName\"); java.lang.String domain = domainProp.getValueAsString(); java.lang.String ownerAccount = new java.lang.StringBuffer(domain).append(\"\\\\\").append(username).toString(); ownerType.setValue(ownerAccount); }else { oval.schemas.common.MessageType msg = Factories.common.createMessageType(); msg.setLevel(MessageLevelEnumeration.INFO); msg.setValue(org.joval.util.JOVALMsg.getMessage(JOVALMsg.ERROR_WINFILE_OWNER, objSet.getSize())); fItem.getMessage().add(msg); ownerType.setStatus(StatusEnumeration.ERROR); } } catch (java.lang.Exception e) { oval.schemas.common.MessageType msg = Factories.common.createMessageType(); msg.setLevel(MessageLevelEnumeration.INFO); msg.setValue(e.getMessage()); fItem.getMessage().add(msg); ownerType.setStatus(StatusEnumeration.ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7859/buggy-version/src.org.joval.scap.oval.adapter.windows.FileAdapter.java", "BodyUseAPI": ["org.joval.intf.io.IFile.getPath()", "oval.schemas.common.MessageType.setLevel(MessageLevelEnumeration.INFO)", "fItem.getMessage().add(oval.schemas.common.MessageType)", "org.joval.util.JOVALMsg.getMessage(JOVALMsg.ERROR_WINFILE_OWNER,objSet.getSize())", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "org.joval.intf.windows.wmi.ISWbemObjectSet.getSize()", "java.lang.StringBuffer.append(java.lang.String)", "oval.schemas.systemcharacteristics.windows.FileItem.getMessage()", "org.joval.intf.windows.wmi.ISWbemPropertySet.getItem(java.lang.String)", "oval.schemas.systemcharacteristics.core.EntityItemStringType.setValue(java.lang.String)", "java.lang.StringBuffer.append(java.lang.String)", "org.joval.intf.windows.wmi.ISWbemObjectSet.iterator()", "org.joval.intf.windows.wmi.ISWbemPropertySet.getItem(java.lang.String)", "java.util.regex.Matcher.quoteReplacement(file.getPath())", "Factories.common.createMessageType()", "oval.schemas.common.MessageType.setValue(org.joval.util.JOVALMsg.getMessage(JOVALMsg.ERROR_WINFILE_OWNER, objSet.getSize()))", "java.lang.StringBuffer.toString()", "objSet.iterator().next()", "org.joval.intf.windows.wmi.ISWbemProperty.getValueAsString()", "oval.schemas.systemcharacteristics.core.EntityItemStringType.setStatus(StatusEnumeration.ERROR)", "org.joval.intf.windows.wmi.IWmiProvider.execQuery(java.lang.String,java.lang.String)", "org.joval.intf.windows.wmi.ISWbemObject.getProperties()", "org.joval.intf.windows.wmi.ISWbemProperty.getValueAsString()", "org.joval.intf.windows.wmi.ISWbemObjectSet.getSize()"], "Fixed commit": "59927b1612173a9a6ee146161566080ac3f9bc3e", "Url": "https://api.github.com/repos/joval/jOVAL", "Date": "2012-11-04T12:41:29Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { saveTransaction(transactionHolder); } catch (java.lang.Exception e) { if (e.getMessage().equals(\"items.incorrect\")) { org.springframework.web.servlet.ModelAndView mav1 = new org.springframework.web.servlet.ModelAndView(\"lazyRowLoad\"); mav1.addObject(\"transactionSaveErrorMessage\", \"Items information is not correct!!\"); return mav1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/1876/buggy-version/src.main.java.com.roshanonjava.spring.TransactionController.java", "BodyUseAPI": ["com.roshanonjava.spring.TransactionController.saveTransaction(com.roshanonjava.spring.model.TransactionHolder)"], "Fixed commit": "1a6b5c9862efbb136282631fd01e30d81f1bc802", "Url": "https://api.github.com/repos/Roshanmutha/SpringMVCPurchess", "Date": "2015-11-24T12:21:09Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { intValue = java.lang.Integer.parseInt(value); minigameIntent.putExtra(key, intValue); } catch (java.lang.NumberFormatException e) { minigameIntent.putExtra(key, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/287/buggy-version/app.src.main.java.com.example.francesco.tunnel.activity.StoryTellerActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "android.content.Intent.putExtra(java.lang.String,int)"], "Fixed commit": "f69e5f5bc5ca7908a05adf25247d13ac35798f4f", "Url": "https://api.github.com/repos/eriol1977/Tunnel", "Date": "2014-12-18T14:41:33Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { date = jObject.get(\"date\").toString(); } catch (java.lang.NullPointerException e) { date = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7126/buggy-version/TSVSApplication.app.src.main.java.vn7.tsvsapplication.CalendarFragment.java", "BodyUseAPI": ["jObject.get(\"date\").toString()", "vn7.tsvsapplication.JSONObject.get(java.lang.String)"], "Fixed commit": "b84c29ac82c2ac46113a0f5c4a2482c2b838e5ff", "Url": "https://api.github.com/repos/vn7n24fzkq/TSVS_Application", "Date": "2017-10-31T12:44:08Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { schedule = jObject.get(\"schedule\").toString(); } catch (java.lang.NullPointerException e) { schedule = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7126/buggy-version/TSVSApplication.app.src.main.java.vn7.tsvsapplication.CalendarFragment.java", "BodyUseAPI": ["vn7.tsvsapplication.JSONObject.get(java.lang.String)", "jObject.get(\"schedule\").toString()"], "Fixed commit": "b84c29ac82c2ac46113a0f5c4a2482c2b838e5ff", "Url": "https://api.github.com/repos/vn7n24fzkq/TSVS_Application", "Date": "2017-10-31T12:44:08Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { department = jObject.get(\"department\").toString(); } catch (java.lang.NullPointerException e) { department = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/7126/buggy-version/TSVSApplication.app.src.main.java.vn7.tsvsapplication.CalendarFragment.java", "BodyUseAPI": ["vn7.tsvsapplication.JSONObject.get(java.lang.String)", "jObject.get(\"department\").toString()"], "Fixed commit": "b84c29ac82c2ac46113a0f5c4a2482c2b838e5ff", "Url": "https://api.github.com/repos/vn7n24fzkq/TSVS_Application", "Date": "2017-10-31T12:44:08Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(3000); this.sendFile(f.getFile()); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V44/2659/buggy-version/src.net.ddns.akd.wincleaner.send.SendThread.java", "BodyUseAPI": ["net.ddns.akd.wincleaner.model.Datei.getFile()", "java.lang.Thread.sleep(int)", "net.ddns.akd.wincleaner.send.SendThread.sendFile(f.getFile())"], "Fixed commit": "e92039c203bddfdbe0cf3cb22ed5d81ffabd076e", "Url": "https://api.github.com/repos/schmitzdominic/WinCleaner", "Date": "2016-12-10T23:51:12Z"},
{"Line": "=>543", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { offer = new com.barterbayucsb.barterbay.Offer(id, user_id, content, picture_url, updated_at, created_at, offer_pic, value); } catch (java.lang.Exception e) { e.printStackTrace(); java.lang.System.out.println(\"Error writing offer. Trying to write with blank description.\"); try { offer = new com.barterbayucsb.barterbay.Offer(id, user_id, \"\", picture_url, updated_at, created_at, offer_pic, value); } catch (java.lang.Exception e2) { e2.printStackTrace(); java.lang.System.out.println(\"Different error writing offer.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6383/buggy-version/app.src.main.java.com.barterbayucsb.barterbay.ServerGate.java", "BodyUseAPI": [], "Fixed commit": "02cdf64b60b26b87cbb511de2cdafea4f9e804cb", "Url": "https://api.github.com/repos/davidtsu/BarterBayUCSB", "Date": "2017-03-16T21:41:26Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { image = offer.getImage(); } catch (java.lang.Exception e) { java.lang.System.out.println(\"No image selected. Using default image...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6383/buggy-version/app.src.main.java.com.barterbayucsb.barterbay.ServerGate.java", "BodyUseAPI": ["com.barterbayucsb.barterbay.Offer.getImage()"], "Fixed commit": "02cdf64b60b26b87cbb511de2cdafea4f9e804cb", "Url": "https://api.github.com/repos/davidtsu/BarterBayUCSB", "Date": "2017-03-16T21:41:26Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { picture.loadImage(inFile); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3477/buggy-version/src.ImageActions.java", "BodyUseAPI": ["Picture.loadImage(java.lang.String)"], "Fixed commit": "629b3402a1e0f38b71a710b2c78d11065dbebf26", "Url": "https://api.github.com/repos/keukenkastjeXYZ/JPhoto", "Date": "2017-03-07T13:59:17Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String docUrl = validate(doc.getUrl()); } catch (java.lang.NullPointerException e) { java.lang.System.err.println(((((((\"\\t\\t\\t\" + (doc.getTitle())) + \"\\n\\t\\t\\t\") + (doc.getDate())) + \"\\n\\t\\t\\t\") + (doc.getText())) + \"\\n\")); e.printStackTrace(); throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8642/buggy-version/OntoStar.src.databases.KeywordMySQLInterface.java", "BodyUseAPI": ["databases.KeywordMySQLInterface.validate(doc.getUrl())", "documentParsing.Document.getUrl()"], "Fixed commit": "f04c9e727e7194346a45676d71745f88f60b1ed4", "Url": "https://api.github.com/repos/GiulioGx/DistributedSystemsProject", "Date": "2013-07-26T17:14:54Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.File f; if ((result != null) && ((f = new java.io.File(result)).exists())) result = f.toURI().toString(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/9096/buggy-version/plugins.org.eclipse.bpel.ui.src.org.eclipse.bpel.ui.util.WSDLImportHelper.java", "BodyUseAPI": ["java.io.File.toURI()", "java.io.File.exists()", "java.net.URI.toString()"], "Fixed commit": "4c43d3d180d26cff56369a2fdac02e1e1d4f06b7", "Url": "https://api.github.com/repos/mickaelistria/org.eclipse.bpel", "Date": "2011-09-15T15:40:26Z"},
{"Line": "=>662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { synchronized(rows) { flushResultSet(query, false); } } finally { flushing.set(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8289/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.msgbus.LogQueryPlugin.java", "BodyUseAPI": ["org.araqne.logdb.msgbus.LogQueryPlugin.MsgbusQueryResultCallback.flushResultSet(org.araqne.logdb.Query,boolean)"], "Fixed commit": "f675345a4df1775112188f7531fcb45208914b25", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-11-26T07:05:55Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { conecLog = new Interfaces.Login(); } catch (java.net.MalformedURLException ex) { java.util.logging.Logger.getLogger(Interfaces.Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5205/buggy-version/SIGNOTEST.src.Interfaces.Main.java", "BodyUseAPI": [], "Fixed commit": "dada5a7d069c67f4ff8db6edb65fa622784b3d86", "Url": "https://api.github.com/repos/williampuerta97/SIGNO", "Date": "2017-11-28T07:17:28Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (essentials.objects.Brick b : bricks) { rString = rString.concat(((((\"[\" + (b.getLetter().toString())) + \"_\") + (b.getWeight())) + \"]\")); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3957/buggy-version/mtScrabble.src.essentials.objects.Brickpool.java", "BodyUseAPI": ["java.lang.String.concat(((((\"[\" + (b.getLetter().toString())) + \"_\") + (b.getWeight())) + \"]\"))", "essentials.objects.Brick.getLetter()", "b.getLetter().toString()", "essentials.objects.Brick.getWeight()"], "Fixed commit": "eb85dbaadf43002b8995f26bf0c2285338104e82", "Url": "https://api.github.com/repos/hanneseilers/mtScrabble", "Date": "2013-06-10T11:18:06Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (essentials.objects.Brick b : bricks) { if (b != null) word = word.concat(b.getLetter().toString()); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3957/buggy-version/mtScrabble.src.essentials.objects.BrickList.java", "BodyUseAPI": ["b.getLetter().toString()", "java.lang.String.concat(b.getLetter().toString())", "essentials.objects.Brick.getLetter()"], "Fixed commit": "eb85dbaadf43002b8995f26bf0c2285338104e82", "Url": "https://api.github.com/repos/hanneseilers/mtScrabble", "Date": "2013-06-10T11:18:06Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.List<org.wso2.carbon.issue.tracker.bean.Project> projects = org.wso2.carbon.issue.tracker.delegate.DAODelegate.getProjectInstance().getProjectsByOrganizationId(1); javax.ws.rs.core.GenericEntity<java.util.List<org.wso2.carbon.issue.tracker.bean.Project>> entity = new javax.ws.rs.core.GenericEntity<java.util.List<org.wso2.carbon.issue.tracker.bean.Project>>(projects) {}; response = javax.ws.rs.core.Response.ok().entity(entity).build(); } catch (java.sql.SQLException e) { throw new javax.ws.rs.WebApplicationException(e, javax.ws.rs.core.Response.Status.INTERNAL_SERVER_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3566/buggy-version/org.wso2.carbon.issue.tracker.src.main.java.org.wso2.carbon.issue.tracker.server.impl.ProjectServiceImpl.java", "BodyUseAPI": ["javax.ws.rs.core.Response.ok().entity(entity).build()", "javax.ws.rs.core.Response.ok()", "org.wso2.carbon.issue.tracker.delegate.DAODelegate.getProjectInstance().getProjectsByOrganizationId(int)", "javax.ws.rs.core.Response.ok().entity(javax.ws.rs.core.GenericEntity<java.util.List<org.wso2.carbon.issue.tracker.bean.Project>>)", "org.wso2.carbon.issue.tracker.delegate.DAODelegate.getProjectInstance()"], "Fixed commit": "7a66afeaf781c5c42a382d4e8b2fac8f8ebeda79", "Url": "https://api.github.com/repos/wso2/issue-tracker", "Date": "2013-08-16T09:07:19Z"},
{"Line": "=>776", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { textArea.print(new java.text.MessageFormat(this.getTitle()), new java.text.MessageFormat(\"{0}\"), true, null, null, true); } catch (java.awt.print.PrinterException e) { javax.swing.JOptionPane.showMessageDialog(this, \"Couldn't print the document\", \"Printing error\", javax.swing.JOptionPane.ERROR_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7080/buggy-version/src.editor.FreeEditorFrame.java", "BodyUseAPI": ["javax.swing.JTextArea.print(java.text.MessageFormat,java.text.MessageFormat,boolean,<nulltype>,<nulltype>,boolean)", "editor.FreeEditorFrame.getTitle()"], "Fixed commit": "48cdc12257bf6fe312bae02f9569f4c86f425684", "Url": "https://api.github.com/repos/frank184/FreeEditor", "Date": "2015-08-23T02:11:20Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((this.gds) == null) { this.g = dna.io.GraphReader.read(this.dir, this.filename); this.gds = g.getGraphDatastructures(); }else { this.g = dna.io.GraphReader.read(this.dir, this.filename, this.gds); } } catch (java.lang.ClassNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7149/buggy-version/src.dna.graph.generators.util.ReadableFileGraph.java", "BodyUseAPI": ["dna.io.GraphReader.read(java.lang.String,java.lang.String)", "dna.io.GraphReader.read(java.lang.String,java.lang.String,this.gds)", "dna.graph.Graph.getGraphDatastructures()"], "Fixed commit": "227318e191793057ca2689eaa4bdddf27908cf6c", "Url": "https://api.github.com/repos/NicoHaase/DNA", "Date": "2014-03-01T13:25:19Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { content = as.newInstance().marshall(f.get(null)); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8235/buggy-version/src.main.java.cz.neumimto.configuration.ConfigMapper.java", "BodyUseAPI": ["java.lang.reflect.Field.get(<nulltype>)", "? extends cz.neumimto.configuration.IMarshaller.marshall(java.lang.Object)", "java.lang.Class<? extends cz.neumimto.configuration.IMarshaller>.newInstance()"], "Fixed commit": "4620634c46a2e9919005d8cdf151b40d0bf47fed", "Url": "https://api.github.com/repos/NeumimTo/HoconConfigMapper", "Date": "2017-07-31T13:26:46Z"},
{"Line": "=>1338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { parts = getClient(sessionid).getPartitionsByFilter(storageTableName, org.apache.lens.server.metastore.StorageConstants.getLatestPartFilter(partitionColumn)); } catch (org.apache.hadoop.hive.ql.metadata.HiveException e) { org.apache.lens.server.metastore.CubeMetastoreServiceImpl.LOG.info(((\"Storage Table \" + storageTableName) + \" skipped while finding latestDate due to exception: \"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6460/buggy-version/lens-server.src.main.java.org.apache.lens.server.metastore.CubeMetastoreServiceImpl.java", "BodyUseAPI": ["org.apache.lens.server.metastore.CubeMetastoreClient.getPartitionsByFilter(java.lang.String,org.apache.lens.server.metastore.StorageConstants.getLatestPartFilter(partitionColumn))", "org.apache.lens.server.metastore.CubeMetastoreServiceImpl.getClient(org.apache.lens.api.LensSessionHandle)", "org.apache.lens.server.metastore.StorageConstants.getLatestPartFilter(java.lang.String)"], "Fixed commit": "dbdf6944df040b1f0b3c15eb6b1b8dac54747a7f", "Url": "https://api.github.com/repos/InMobi/grill", "Date": "2015-01-15T09:48:02Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { for (java.util.Map.Entry<java.lang.String, java.lang.Object> entry : record.intoMap().entrySet()) { jsonGenerator.writeObjectField(entry.getKey(), entry.getValue()); } } finally { jsonGenerator.writeEndObject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7466/buggy-version/src.main.java.org.wololo.jdbc.resources.RowsResource.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "com.fasterxml.jackson.core.JsonGenerator.writeObjectField(java.lang.String,java.lang.Object)", "org.jooq.Record.intoMap()", "record.intoMap().entrySet()"], "Fixed commit": "34d70bbeab2e99d6a34569a7cd4a75f3c8158926", "Url": "https://api.github.com/repos/dimitriyremerov/jdbc-http-server", "Date": "2016-09-08T16:08:45Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { hudson.tasks.junit.TestResultAction testResultAction = hudson.tasks.junit.JUnitResultArchiver.parseAndAttach(step, pipelineTestDetails, run, workspace, launcher, listener); if (testResultAction != null) { if ((testResultAction.getResult().getFailCount()) > 0) { run.setResult(Result.UNSTABLE); } return new hudson.tasks.junit.TestResultSummary(testResultAction.getResult().getResultByNode(nodeId)); } } catch (java.lang.Exception e) { listener.getLogger().println(e.getMessage()); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8316/buggy-version/src.main.java.hudson.tasks.junit.pipeline.JUnitResultsStepExecution.java", "BodyUseAPI": ["testResultAction.getResult().getResultByNode(java.lang.String)", "hudson.model.Run<?, ?>.setResult(Result.UNSTABLE)", "hudson.tasks.junit.TestResultAction.getResult()", "hudson.tasks.junit.TestResultAction.getResult()", "testResultAction.getResult().getFailCount()", "hudson.tasks.junit.JUnitResultArchiver.parseAndAttach(hudson.tasks.junit.pipeline.JUnitResultsStep,hudson.tasks.test.PipelineTestDetails,hudson.model.Run<?, ?>,hudson.FilePath,hudson.Launcher,hudson.model.TaskListener)"], "Fixed commit": "2234f40d3919e4087122eb5195cc679f3f154309", "Url": "https://api.github.com/repos/jenkinsci/junit-plugin", "Date": "2017-11-28T22:39:20Z"},
{"Line": "=>800", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { obj = xmlMapper.readValue(payload, clazz); } catch (java.lang.IllegalStateException exception) { obj = clazz.newInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4285/buggy-version/src.main.java.com.ning.billing.recurly.RecurlyClient.java", "BodyUseAPI": ["com.fasterxml.jackson.dataformat.xml.XmlMapper.readValue(java.lang.String,java.lang.Class<T>)"], "Fixed commit": "a007226d8c25604d91446937544d6684c516a0eb", "Url": "https://api.github.com/repos/Smartling/recurly-java-library", "Date": "2013-10-08T10:04:52Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { data = java.lang.Double.valueOf(stringdata); } catch (java.lang.NumberFormatException ex) { data = ((double) (0)); d.getFrameController().showPortSetter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3679/buggy-version/src.PengaturListrik.src.controller.Controller.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)"], "Fixed commit": "03e7ffcf4d73b270994fd9a873c0b6c93172f623", "Url": "https://api.github.com/repos/rivasyafri/IF3111-ElectricityController", "Date": "2015-05-03T11:06:25Z"},
{"Line": "=>533", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { status = new org.apache.hadoop.fs.dl.DLFileSystem.FsPathResponseRunner<org.apache.hadoop.hdfs.protocol.HdfsFileStatus>(op, f) { @java.lang.Override org.apache.hadoop.hdfs.protocol.HdfsFileStatus decodeResponse(java.util.Map<?, ?> json) { return org.apache.hadoop.fs.dl.JsonUtil.toFileStatus(json, true); } }.run(); } catch (java.io.IOException e) { throw new java.io.FileNotFoundException((\"File does not exist: \" + f)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5851/buggy-version/src.main.java.org.apache.hadoop.fs.dl.DLFileSystem.java", "BodyUseAPI": ["org.apache.hadoop.fs.dl.JsonUtil.toFileStatus(java.util.Map<?, ?>,boolean)", "org.apache.hadoop.fs.dl.DLFileSystem.FsPathResponseRunner<org.apache.hadoop.hdfs.protocol.HdfsFileStatus>.run()"], "Fixed commit": "1d53333341fe720b153832f6c36015918ecd7d9a", "Url": "https://api.github.com/repos/bigstepinc/datalake-client-libraries", "Date": "2016-07-25T10:31:06Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fileName = new java.io.File(\"BACKING_STORE\"); disk = new java.io.RandomAccessFile(fileName, \"r\"); disk.seek((pageNum * 256)); disk.read(value); disk.close(); } catch (java.io.IOException e) { java.lang.System.err.println(\"Unable to start the disk\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6706/buggy-version/pg6.src.BackStore.java", "BodyUseAPI": ["java.io.RandomAccessFile.close()", "java.io.RandomAccessFile.read(byte[])", "java.io.RandomAccessFile.seek(int)"], "Fixed commit": "a1e46d98713bd2cb1c85e9580966512e4d090dc5", "Url": "https://api.github.com/repos/yegle/os-program-projects", "Date": "2012-11-10T06:59:05Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { reentrantLock.lock(); outputPublisher.send(complexEventChunk.getFirst()); } finally { reentrantLock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7885/buggy-version/modules.siddhi-core.src.main.java.org.wso2.siddhi.core.table.WindowEventTable.java", "BodyUseAPI": ["java.util.concurrent.locks.ReentrantLock.lock()", "org.wso2.siddhi.core.event.ComplexEventChunk.getFirst()", "StreamJunction.Publisher.send(complexEventChunk.getFirst())"], "Fixed commit": "e78e2c8c95206c3d29772b677531450a67e774bf", "Url": "https://api.github.com/repos/nirmal070125/siddhi", "Date": "2016-07-14T08:32:31Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dUnits = ((java.lang.Double) (uk.chromis.pos.inventory.DOUBLE.parseValue(m_junits.getText()))); } catch (uk.chromis.basic.BasicException ex) { throw new uk.chromis.basic.BasicException(uk.chromis.pos.forms.AppLocal.getIntString(\"message.valuetoolarge\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2464/buggy-version/src-pos.uk.chromis.pos.inventory.StockDiaryEditor.java", "BodyUseAPI": ["uk.chromis.pos.inventory.DOUBLE.parseValue(java.lang.String)", "javax.swing.JTextField.getText()"], "Fixed commit": "d9043035314decca5d41c52c80f3a0bbaf735a30", "Url": "https://api.github.com/repos/ChromisPos/ChromisPOS", "Date": "2017-08-07T18:52:54Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(5000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2965/buggy-version/HistoryQuizzes.src.grade10.FeedbackServer.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "3c604d9bf4c0aa062973c22bdc5fe83d45f6d5c8", "Url": "https://api.github.com/repos/jjam912/quizlet-simulator", "Date": "2017-04-30T23:19:31Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { out.write(transformed); } finally { out.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4641/buggy-version/src.core.lombok.bytecode.PostCompilerApp.java", "BodyUseAPI": ["java.io.FileOutputStream.write(byte[])"], "Fixed commit": "e97e0cc23eca1b34d657f382d123ce2298ceb5a8", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2015-01-13T15:26:41Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { while (true) { int read = fileInputStream.read(buffer); if (read == (-1)) break; bytes.write(buffer, 0, read); } } finally { fileInputStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4641/buggy-version/src.core.lombok.bytecode.PostCompilerApp.java", "BodyUseAPI": ["java.io.FileInputStream.read(byte[])", "java.io.ByteArrayOutputStream.write(byte[],int,int)"], "Fixed commit": "e97e0cc23eca1b34d657f382d123ce2298ceb5a8", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2015-01-13T15:26:41Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mAdapter.setChildrenCursor(loader.getId(), null); } catch (java.lang.NullPointerException e) { com.brwsoftware.brwicd9x10.AppLog.w(com.brwsoftware.brwicd9x10.ICDFragment.TAG, (\"setChildrenCursor - NullPointerException: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/235/buggy-version/BRWICD9X10.src.com.brwsoftware.brwicd9x10.ICDFragment.java", "BodyUseAPI": ["android.support.v4.content.Loader<android.database.Cursor>.getId()", "com.brwsoftware.brwicd9x10.ICDFragment.ICDAdapter.setChildrenCursor(loader.getId(),<nulltype>)"], "Fixed commit": "799acdb7ef9c2a772111b653bffca672c9031a48", "Url": "https://api.github.com/repos/brwsoftware/BRWICD9X10_REPO", "Date": "2015-02-06T20:31:46Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.content.Intent discoverableIntent = new android.content.Intent(android.bluetooth.BluetoothAdapter.ACTION_REQUEST_DISCOVERABLE); startActivity(discoverableIntent); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1550/buggy-version/app.src.main.java.com.jacky.launcher.activitys.Bluetooth.java", "BodyUseAPI": ["com.jacky.launcher.activitys.Bluetooth.startActivity(android.content.Intent)"], "Fixed commit": "d72a186f4984cf2c3961206b6511e5b232e07f87", "Url": "https://api.github.com/repos/JackyAndroid/AndroidTVLauncher", "Date": "2016-04-07T10:32:18Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { intent = new android.content.Intent(android.bluetooth.BluetoothAdapter.ACTION_REQUEST_ENABLE); startActivity(intent); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1550/buggy-version/app.src.main.java.com.jacky.launcher.activitys.Bluetooth.java", "BodyUseAPI": ["com.jacky.launcher.activitys.Bluetooth.startActivity(android.content.Intent)"], "Fixed commit": "d72a186f4984cf2c3961206b6511e5b232e07f87", "Url": "https://api.github.com/repos/JackyAndroid/AndroidTVLauncher", "Date": "2016-04-07T10:32:18Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { JumpIntent = new android.content.Intent(android.provider.Settings.ACTION_SETTINGS); startActivity(JumpIntent); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1550/buggy-version/app.src.main.java.com.jacky.launcher.activitys.setting.SettingFragment.java", "BodyUseAPI": ["com.jacky.launcher.activitys.setting.SettingFragment.startActivity(android.content.Intent)"], "Fixed commit": "d72a186f4984cf2c3961206b6511e5b232e07f87", "Url": "https://api.github.com/repos/JackyAndroid/AndroidTVLauncher", "Date": "2016-04-07T10:32:18Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.atlauncher.serversetup.Bootstrap.isHeadless = java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment().isHeadlessInstance(); } catch (java.lang.Exception e) { e.printStackTrace(); com.atlauncher.serversetup.Bootstrap.isHeadless = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5831/buggy-version/src.main.java.com.atlauncher.serversetup.Bootstrap.java", "BodyUseAPI": ["java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment()", "java.awt.GraphicsEnvironment.isHeadlessInstance()"], "Fixed commit": "9c4fb9f684152126a560fd4c49d6f7a03bc7df68", "Url": "https://api.github.com/repos/ATLauncher/Server-Setup", "Date": "2015-01-02T05:34:33Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((lnk.getLinkBandwidth()) != 0L) this.networkGraph.setEdgeWeight(lnk, ((java.lang.Double) (1 / (lnk.getLinkBandwidth().doubleValue())))); else this.networkGraph.setEdgeWeight(lnk, java.lang.Double.MAX_VALUE); } catch (java.lang.NullPointerException e) { this.networkGraph.setEdgeWeight(lnk, java.lang.Double.MAX_VALUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1645/buggy-version/src.main.java.pt.ulisboa.tecnico.amorphous.internal.state.LocalStateService.java", "BodyUseAPI": ["org.jgrapht.graph.WeightedMultigraph<pt.ulisboa.tecnico.amorphous.types.NetworkNode, pt.ulisboa.tecnico.amorphous.types.NetworkLink>.setEdgeWeight(pt.ulisboa.tecnico.amorphous.types.NetworkLink,((java.lang.Double) (1 / (lnk.getLinkBandwidth().doubleValue()))))", "pt.ulisboa.tecnico.amorphous.types.NetworkLink.getLinkBandwidth()", "lnk.getLinkBandwidth().doubleValue()", "pt.ulisboa.tecnico.amorphous.types.NetworkLink.getLinkBandwidth()", "org.jgrapht.graph.WeightedMultigraph<pt.ulisboa.tecnico.amorphous.types.NetworkNode, pt.ulisboa.tecnico.amorphous.types.NetworkLink>.setEdgeWeight(pt.ulisboa.tecnico.amorphous.types.NetworkLink,double)"], "Fixed commit": "0897622b48bb36152d8cee6ecc16706a1ad6c839", "Url": "https://api.github.com/repos/fazevedo86/floodlight", "Date": "2015-09-21T23:05:52Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { results = spotify.searchArtists(params[0]); } catch (retrofit.RetrofitError e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/821/buggy-version/app.src.main.java.com.rushlimit.spotifystreamerstage1.MainActivity.java", "BodyUseAPI": ["kaaes.spotify.webapi.android.SpotifyService.searchArtists(java.lang.String)"], "Fixed commit": "c1ae767baabf7c1c24f2815fe79508f2ad97c39c", "Url": "https://api.github.com/repos/Arta0613/Spotify-Streamer-Stage-1", "Date": "2015-06-29T03:20:17Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { isValid = hairdressingTimeService.isServiceTimeValid(serviceTime, service_type); jData.setData(isValid); jData.setSuccess(true); jData.setCode(200); } catch (java.lang.Exception e) { e.printStackTrace(); logger.error(\"Error in isServiceTimeValid! reason:{}, Paramter:account_id:{}.\", e.getMessage(), serviceTime, e); jData.setCode(500); jData.setData(null); jData.setSuccess(false); jData.setDetail(\"\u64cd\u4f5c\u5931\u8d25\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1356/buggy-version/src.main.java.com.liuliume.portal.controller.hairdressing.HairdressingTimeController.java", "BodyUseAPI": ["com.liuliume.portal.common.JData.setCode(int)", "com.liuliume.portal.common.JData.setData(boolean)", "com.liuliume.portal.common.JData.setSuccess(boolean)", "com.liuliume.portal.service.HairdressingTimeService.isServiceTimeValid(java.lang.String,int)"], "Fixed commit": "5f5be9d7178b4530c7ae229fc21faf009db0fa8e", "Url": "https://api.github.com/repos/liuliume/zues", "Date": "2015-11-17T14:24:29Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { com.unduplicator.logic.DirectoryHandler.runningTasks.forEach(com.unduplicator.logic.DirectoryHandler::join); } finally { com.unduplicator.logic.DirectoryHandler.runningTasks = java.util.Collections.newSetFromMap(new java.util.concurrent.ConcurrentHashMap<>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/9192/buggy-version/src.com.unduplicator.logic.DirectoryHandler.java", "BodyUseAPI": ["java.util.Set<com.unduplicator.logic.DirectoryHandler>.forEach(java.util.function.Consumer<? super com.unduplicator.logic.DirectoryHandler>)"], "Fixed commit": "f50bc066e415c905e0dcd06fad4623a61a4dd24c", "Url": "https://api.github.com/repos/MontolioV/Uniqueoid", "Date": "2017-10-26T13:49:37Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { this.registerStates[pin] = pinState; } catch (java.lang.ArrayIndexOutOfBoundsException e) { callete.api.services.impl.gpio.raspi.PiShiftRegister74hc595.LOG.error(((\"State for pin \" + pin) + \" can not be changed, invalid index.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6649/buggy-version/callete-api-impl.src.main.java.callete.api.services.impl.gpio.raspi.PiShiftRegister74hc595.java", "BodyUseAPI": [], "Fixed commit": "138b0049232d893655d0d203fee9724f5e8276c9", "Url": "https://api.github.com/repos/syd711/callete", "Date": "2015-01-16T14:16:15Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { service.persist(retailCustomer); return \"redirect:/custodian/retailcustomers\"; } catch (java.lang.Exception e) { return \"retailcustomers/form\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5298/buggy-version/src.main.java.org.energyos.espi.datacustodian.web.custodian.RetailCustomerController.java", "BodyUseAPI": ["org.energyos.espi.common.service.RetailCustomerService.persist(org.energyos.espi.common.domain.RetailCustomer)"], "Fixed commit": "7173586d8ac818acbf6d8af270d01202a78908bf", "Url": "https://api.github.com/repos/jateeter/OpenESPI-DataCustodian-java", "Date": "2014-03-03T13:02:16Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { itemName = net.milkbowl.vault.item.Items.itemByStack(itemStack).getName(); } catch (java.lang.NullPointerException ex) { itemName = itemStack.getType().name(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3983/buggy-version/src.net.invisioncraft.plugins.salesmania.util.ItemManager.java", "BodyUseAPI": ["net.milkbowl.vault.item.Items.itemByStack(itemStack).getName()", "net.milkbowl.vault.item.Items.itemByStack(org.bukkit.inventory.ItemStack)"], "Fixed commit": "d07092f9b58112a3b6142839f093a3e94644b5ca", "Url": "https://api.github.com/repos/B2OJustin/Salesmania", "Date": "2012-06-09T09:25:06Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { executorService.awaitTermination(1, java.util.concurrent.TimeUnit.DAYS); } catch (java.lang.InterruptedException e) { groovejames.service.DownloadService.log.warn(\"interrupted\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5971/buggy-version/src.main.java.groovejames.service.DownloadService.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.awaitTermination(int,java.util.concurrent.TimeUnit)"], "Fixed commit": "293cd0bc0773699ea0eb93ca3ca148130940707b", "Url": "https://api.github.com/repos/groovejames/groovejames", "Date": "2017-04-04T14:30:55Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { executorServiceForPlay.awaitTermination(1, java.util.concurrent.TimeUnit.DAYS); } catch (java.lang.InterruptedException e) { groovejames.service.DownloadService.log.warn(\"interrupted\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5971/buggy-version/src.main.java.groovejames.service.DownloadService.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.awaitTermination(int,java.util.concurrent.TimeUnit)"], "Fixed commit": "293cd0bc0773699ea0eb93ca3ca148130940707b", "Url": "https://api.github.com/repos/groovejames/groovejames", "Date": "2017-04-04T14:30:55Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { code = translator.generateProgramCode(sources, org.jetbrains.k2js.facade.MainCallParameters.noCall()); } catch (org.jetbrains.k2js.facade.exceptions.TranslationException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3182/buggy-version/libraries.tools.kotlin-maven-plugin.src.main.java.org.jetbrains.kotlin.maven.K2JSCompilerPlugin.java", "BodyUseAPI": ["org.jetbrains.k2js.facade.MainCallParameters.noCall()", "org.jetbrains.k2js.facade.K2JSTranslator.generateProgramCode(java.util.List<org.jetbrains.jet.lang.psi.JetFile>,org.jetbrains.k2js.facade.MainCallParameters.noCall())"], "Fixed commit": "b2a5dbbb8bdff6c628c1cbf481a9b393ba01cae9", "Url": "https://api.github.com/repos/detouched/kotlin", "Date": "2012-05-05T23:19:50Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { saveStreamAsFile(revision.getStorage(null).getContents(), actual); compareAstAndSaveToDb(selectedProjectName, revisionDateMin, revisionDateMax, revision); swapActualAndPreviousFile(); } catch (org.eclipse.core.runtime.CoreException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7085/buggy-version/ic-depress-metric-astcompare.src.org.impressivecode.depress.mr.astcompare.ast.AstController.java", "BodyUseAPI": ["org.impressivecode.depress.mr.astcompare.ast.AstController.saveStreamAsFile(revision.getStorage(null).getContents(),java.io.File)", "org.impressivecode.depress.mr.astcompare.ast.AstController.swapActualAndPreviousFile()", "org.eclipse.team.core.history.IFileRevision.getStorage(<nulltype>)", "org.impressivecode.depress.mr.astcompare.ast.AstController.compareAstAndSaveToDb(java.lang.String,long,long,org.eclipse.team.core.history.IFileRevision)", "revision.getStorage(null).getContents()"], "Fixed commit": "959c7541f84d2b02afbb99db395ed0ca74bf0110", "Url": "https://api.github.com/repos/mkutyba/ic-depress", "Date": "2014-12-30T11:36:49Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { antivirusService.scanFile(actionedUponNodeRef); } catch (org.alfresco.service.cmr.repository.InvalidNodeRefException inre) { logger.warn(((((this.getClass().getName()) + \": NodeRef: \") + (actionedUponNodeRef.getId())) + \" not found. This node has changed in transaction.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7020/buggy-version/alfviral.src.main.java.com.fegor.alfresco.action.VirusScanAction.java", "BodyUseAPI": ["com.fegor.alfresco.services.AntivirusService.scanFile(org.alfresco.service.cmr.repository.NodeRef)"], "Fixed commit": "429e705c808cdaef1bf0531cebb2ef8b98a816fe", "Url": "https://api.github.com/repos/fegorama/alfviral", "Date": "2015-06-14T11:24:38Z"},
{"Line": "=>639", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { oldpoll = ((org.vige.rubia.model.Poll) (query.getSingleResult())); } catch (javax.persistence.NoResultException ex) { oldpoll = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/1731/buggy-version/src.main.java.org.vige.rubia.ForumsModuleImpl.java", "BodyUseAPI": ["javax.persistence.Query.getSingleResult()"], "Fixed commit": "5f1be74f43d6f1235c52f3e4610b7263decd7ef1", "Url": "https://api.github.com/repos/flashboss/rubia-forums", "Date": "2014-05-09T18:54:28Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if (!(ctx instanceof org.nuxeo.ecm.core.event.impl.DocumentEventContext)) { documentManager = org.athento.ecm.athento.afm.listeners.GeneralListener.getCoreSession(\"default\"); sessionMustBeClosed = true; }else { documentManager = ctx.getCoreSession(); } if (event.getName().equals(org.athento.ecm.athento.afm.listeners.GeneralListener.GENERAL_LISTENER)) { afmRecursive(documentManager); } } finally { if (sessionMustBeClosed) { if (documentManager != null) { org.nuxeo.ecm.core.api.CoreInstance server = org.nuxeo.ecm.core.api.CoreInstance.getInstance(); server.close(documentManager); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/2427/buggy-version/src.main.java.org.athento.ecm.athento.afm.listeners.GeneralListener.java", "BodyUseAPI": ["org.nuxeo.ecm.core.event.EventContext.getCoreSession()", "org.athento.ecm.athento.afm.listeners.GeneralListener.afmRecursive(org.nuxeo.ecm.core.api.CoreSession)", "org.athento.ecm.athento.afm.listeners.GeneralListener.getCoreSession(java.lang.String)", "event.getName().equals(java.lang.String)", "org.nuxeo.ecm.core.event.Event.getName()"], "Fixed commit": "0793a965dc72ff818ece142a59cef67f302c7fab", "Url": "https://api.github.com/repos/athento/athento-nx-afm", "Date": "2016-02-25T15:25:29Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cs576P2.GlobalAlignment.globalAlign.seq2 = (cs576P2.GlobalAlignment.globalAlign.seq2) + (s2.charAt(c.row)); } catch (java.lang.Exception e) { cs576P2.GlobalAlignment.globalAlign.seq2 = (cs576P2.GlobalAlignment.globalAlign.seq2) + \"-\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5617/buggy-version/src.cs576P2.GlobalAlignment.globalAlign.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "caea2999cd8a438ae8a0602d5cb3d421ae8bfb17", "Url": "https://api.github.com/repos/gbam/UPGMA-", "Date": "2013-10-23T04:44:05Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (java.util.Map.Entry<org.magic.api.beans.MagicCard, java.lang.Integer> cci : deck.getMap().entrySet()) { org.magic.api.beans.MagicCard mc = cci.getKey(); for (int i = 0; i < (cci.getValue()); i++) cards.add(mc); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5762/buggy-version/src.org.magic.gui.components.charts.ManaRepartitionPanel.java", "BodyUseAPI": ["java.util.Map.Entry<org.magic.api.beans.MagicCard, java.lang.Integer>.getKey()", "org.magic.api.beans.MagicDeck.getMap()", "deck.getMap().entrySet()", "java.util.List<org.magic.api.beans.MagicCard>.add(org.magic.api.beans.MagicCard)", "java.util.Map.Entry<org.magic.api.beans.MagicCard, java.lang.Integer>.getValue()"], "Fixed commit": "fbe6fa0485975b21f4df96dea045a64c6124684f", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-05-22T11:25:33Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { lock.lock(); java.lang.String memberId = this.getMemberIdFromTaskName(taskName, true); this.setServerLocationOfTask(taskName, memberId); this.scheduleTask(memberId, taskName); } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/7758/buggy-version/components.ntask.org.wso2.carbon.ntask.core.src.main.java.org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.java", "BodyUseAPI": ["java.util.concurrent.locks.Lock.lock()", "org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.setServerLocationOfTask(java.lang.String,java.lang.String)", "org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.scheduleTask(java.lang.String,java.lang.String)", "org.wso2.carbon.ntask.core.impl.clustered.ClusteredTaskManager.getMemberIdFromTaskName(java.lang.String,boolean)"], "Fixed commit": "9ee9074d9dac8793f03ccf3f94d496a36da4624b", "Url": "https://api.github.com/repos/wso2/carbon-commons", "Date": "2015-08-05T04:30:20Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { target = repository.getObject(clazz, oid, null, result); } catch (com.evolveum.midpoint.util.exception.SchemaException e) { throw new com.evolveum.midpoint.util.exception.SchemaException((((e.getMessage()) + \" in \") + sourceDescription), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6052/buggy-version/model.model-impl.src.main.java.com.evolveum.midpoint.model.impl.lens.AssignmentEvaluator.java", "BodyUseAPI": ["com.evolveum.midpoint.repo.api.RepositoryService.getObject(java.lang.Class<? extends com.evolveum.midpoint.xml.ns._public.common.common_3.ObjectType>,java.lang.String,<nulltype>,com.evolveum.midpoint.schema.result.OperationResult)"], "Fixed commit": "f28f92e4ca52f17efb043037d2bf22ffda65f736", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2016-03-16T19:32:02Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { checkoutAmount = java.lang.Integer.parseInt(text); } catch (java.lang.NumberFormatException e) { com.uttam.couponmanager.util.ViewUtil.showToast(this, \"Please enter a valid value for checkout.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8952/buggy-version/src.com.uttam.couponmanager.activities.MainActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "3f956a053a730a339fdfe29ca96b9fbed5a28ed9", "Url": "https://api.github.com/repos/muttam86/CouponManager", "Date": "2014-09-08T07:42:49Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { p = new java.lang.ProcessBuilder(\"su\").start(); java.io.BufferedWriter stdin = new java.io.BufferedWriter(new java.io.OutputStreamWriter(p.getOutputStream())); java.io.BufferedReader stdout = new java.io.BufferedReader(new java.io.InputStreamReader(p.getInputStream())); stdin.write(\"whoami\"); stdin.newLine(); stdin.write(\"exit\"); stdin.newLine(); stdin.close(); try { p.waitFor(); if (!(stdout.ready())) return false; java.lang.String user = stdout.readLine(); stdout.close(); if (user == \"root\") { return true; }else { return false; } } catch (java.lang.InterruptedException e) { e.printStackTrace(); return false; } } catch (java.io.IOException e) { e.printStackTrace(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/8459/buggy-version/src.com.adamcarruthers.foundry.Utils.java", "BodyUseAPI": ["java.io.BufferedWriter.write(java.lang.String)", "java.io.BufferedReader.ready()", "java.io.BufferedWriter.write(java.lang.String)", "java.io.BufferedWriter.close()", "java.lang.ProcessBuilder.start()", "java.lang.InterruptedException.printStackTrace()", "java.lang.Process.getInputStream()", "java.io.BufferedReader.close()", "java.io.BufferedWriter.newLine()", "java.io.BufferedWriter.newLine()", "java.lang.Process.waitFor()", "java.io.BufferedReader.readLine()", "java.lang.Process.getOutputStream()"], "Fixed commit": "1c1622decd1696d437268c1ddd6d973b17f6da61", "Url": "https://api.github.com/repos/e-nomem/Foundry", "Date": "2011-09-27T15:50:40Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return (repository.findByNumber(java.lang.Integer.valueOf(value))) == null; } catch (java.lang.NumberFormatException e) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/3549/buggy-version/Dev_Java_Spring_Boot_Restaurant.src.main.java.ua.validation.validator.PlaceUniqueValidator.java", "BodyUseAPI": ["ua.repository.PlaceRepository.findByNumber(java.lang.Integer)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "bd7b566fcbd50e696959cbc1387031d8498f6a31", "Url": "https://api.github.com/repos/Vadym-Teslytskyy/DevJavaLogosAdv", "Date": "2017-09-22T18:48:46Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bank_names.addAll(src_econ.getBanks()); } catch (java.lang.UnsupportedOperationException ex) { sender.sendMessage(getClassTranslation(\"bank_list_failed\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/5176/buggy-version/src.main.java.com.github.omwah.SDFEconomy.commands.ConvertCommand.java", "BodyUseAPI": ["net.milkbowl.vault.economy.Economy.getBanks()", "java.util.List<java.lang.String>.addAll(src_econ.getBanks())"], "Fixed commit": "0e8ec37185049ecaf53a59fb23e7f46bb14a2104", "Url": "https://api.github.com/repos/omwah/SDFEconomy", "Date": "2014-01-07T05:21:57Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getItem(posSelected).competitor.saveToDB(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/6317/buggy-version/app.src.main.java.org.vimteam.marshalone.activity.RaceRegistrationFragment.java", "BodyUseAPI": ["org.vimteam.marshalone.activity.RaceRegistrationFragment.RegistrationAdapter.4.getItem(int)", "getItem(posSelected).competitor.saveToDB()"], "Fixed commit": "e2a8bcfbf4afbbc93edcbdc1b59262baca413a32", "Url": "https://api.github.com/repos/MikhailD007/MarshalOne", "Date": "2016-09-28T17:43:59Z"},
{"Line": "=>1899", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return net.fypm.InstallerOpt.MultiprocessPreferences.getDefaultSharedPreferences(context).getString(pref, null); } catch (java.lang.Throwable t) { net.fypm.InstallerOpt.Main.xlog_start(\"getPrefString Error\"); net.fypm.InstallerOpt.Main.xlog(\"\", t); net.fypm.InstallerOpt.Main.xlog_end(\"getPrefString Error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4604/buggy-version/main.java.net.fypm.InstallerOpt.Main.java", "BodyUseAPI": ["net.fypm.InstallerOpt.MultiprocessPreferences.getDefaultSharedPreferences(android.content.Context)", "net.fypm.InstallerOpt.MultiprocessPreferences.getDefaultSharedPreferences(context).getString(java.lang.String,<nulltype>)"], "Fixed commit": "e90a25c9c706aa308b9eb980ed2126477a9b94a5", "Url": "https://api.github.com/repos/afxefx/InstallerOpt", "Date": "2016-09-20T18:04:47Z"},
{"Line": "=>1910", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return net.fypm.InstallerOpt.MultiprocessPreferences.getDefaultSharedPreferences(context).getLong(pref, 0); } catch (java.lang.Throwable t) { net.fypm.InstallerOpt.Main.xlog_start(\"getPrefLong Error\"); net.fypm.InstallerOpt.Main.xlog(\"\", t); net.fypm.InstallerOpt.Main.xlog_end(\"getPrefLong Error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4604/buggy-version/main.java.net.fypm.InstallerOpt.Main.java", "BodyUseAPI": ["net.fypm.InstallerOpt.MultiprocessPreferences.getDefaultSharedPreferences(android.content.Context)", "net.fypm.InstallerOpt.MultiprocessPreferences.getDefaultSharedPreferences(context).getLong(java.lang.String,int)"], "Fixed commit": "e90a25c9c706aa308b9eb980ed2126477a9b94a5", "Url": "https://api.github.com/repos/afxefx/InstallerOpt", "Date": "2016-09-20T18:04:47Z"},
{"Line": "=>1888", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return net.fypm.InstallerOpt.MultiprocessPreferences.getDefaultSharedPreferences(context).getBoolean(pref, false); } catch (java.lang.Throwable t) { net.fypm.InstallerOpt.Main.xlog_start(\"getPref Error\"); net.fypm.InstallerOpt.Main.xlog(\"\", t); net.fypm.InstallerOpt.Main.xlog_end(\"getPref Error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V45/4604/buggy-version/main.java.net.fypm.InstallerOpt.Main.java", "BodyUseAPI": ["net.fypm.InstallerOpt.MultiprocessPreferences.getDefaultSharedPreferences(context).getBoolean(java.lang.String,boolean)", "net.fypm.InstallerOpt.MultiprocessPreferences.getDefaultSharedPreferences(android.content.Context)"], "Fixed commit": "e90a25c9c706aa308b9eb980ed2126477a9b94a5", "Url": "https://api.github.com/repos/afxefx/InstallerOpt", "Date": "2016-09-20T18:04:47Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((keyspace != null) && ((keyspace.trim().length()) > 0)) { this.session = this.cluster.connect(keyspace); }else { this.session = this.cluster.connect(); } this.nativeBatchRequestsSupported = (this.session.getCluster().getConfiguration().getProtocolOptions().getProtocolVersion()) > 1; } catch (com.datastax.driver.core.exceptions.NoHostAvailableException e) { throw new org.wso2.carbon.dataservices.core.DataServiceFault(e, DBConstants.FaultCodes.CONNECTION_UNAVAILABLE_ERROR, e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6640/buggy-version/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.description.config.CassandraConfig.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.trim()", "com.datastax.driver.core.Cluster.connect()", "com.datastax.driver.core.Cluster.connect(java.lang.String)", "com.datastax.driver.core.Session.getCluster()", "this.session.getCluster().getConfiguration().getProtocolOptions().getProtocolVersion()", "this.session.getCluster().getConfiguration().getProtocolOptions()", "this.session.getCluster().getConfiguration()"], "Fixed commit": "a10d4bb65bc6b1924555e86dd8c7c2391dae1e2a", "Url": "https://api.github.com/repos/wso2/carbon-data", "Date": "2015-08-18T12:01:07Z"},
{"Line": "=>808", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { connectToDroneClient(); } catch (java.lang.Throwable e) { android.widget.Toast.makeText(getApplicationContext(), \"Could not connect to Paparazzi Services\", Toast.LENGTH_SHORT).show(); android.util.Log.e(com.gcs.MainActivity.TAG, \"Service not available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4158/buggy-version/app.src.main.java.com.gcs.MainActivity.java", "BodyUseAPI": ["com.gcs.MainActivity.connectToDroneClient()"], "Fixed commit": "53f9d508aadc2a455cba983149401697a64dd3b2", "Url": "https://api.github.com/repos/tudelft/PPRZGroundstation", "Date": "2015-10-28T16:06:01Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tm.addTeam(color, args[2].toLowerCase()); } catch (java.lang.IllegalArgumentException e) { sender.sendMessage(((ce) + \"This team already exists.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6676/buggy-version/src.me.azenet.UHPlugin.UHPluginCommand.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "me.azenet.UHPlugin.UHTeamManager.addTeam(org.bukkit.ChatColor,java.lang.String)"], "Fixed commit": "33a7ec7151d2210e9c8a5e2d00e36569dfd70b51", "Url": "https://api.github.com/repos/AmauryCarrade/KTP", "Date": "2014-07-08T14:10:54Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tm.addTeam(color, args[3].toLowerCase()); } catch (java.lang.IllegalArgumentException e) { sender.sendMessage(((ce) + \"This team already exists.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6676/buggy-version/src.me.azenet.UHPlugin.UHPluginCommand.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "me.azenet.UHPlugin.UHTeamManager.addTeam(org.bukkit.ChatColor,java.lang.String)"], "Fixed commit": "33a7ec7151d2210e9c8a5e2d00e36569dfd70b51", "Url": "https://api.github.com/repos/AmauryCarrade/KTP", "Date": "2014-07-08T14:10:54Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.content.Intent browserIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(tw.com.daPATH.virtualsoftkeys.ui.MainActivity.MY_GIT_HUB_URL)); startActivity(browserIntent); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8823/buggy-version/app.src.main.java.tw.com.daPATH.virtualsoftkeys.ui.MainActivity.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)", "tw.com.daPATH.virtualsoftkeys.ui.MainActivity.startActivity(android.content.Intent)"], "Fixed commit": "d20520314cd4850ed92d3f015e86e7d910c5f20f", "Url": "https://api.github.com/repos/DaPATHK/VirtualSoftKeys", "Date": "2017-02-06T05:45:44Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.System.out.println(executer.getExitCode()); } catch (java.lang.InterruptedException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8374/buggy-version/src.Console.ConsoleServer.java", "BodyUseAPI": ["Console.ConsoleExecuter.getExitCode()", "java.io.PrintStream.println(executer.getExitCode())"], "Fixed commit": "3cf4cf18125e75b8ad8ce7be90e22c72be575b70", "Url": "https://api.github.com/repos/desairavi1101/RemoteConsole", "Date": "2015-12-05T09:01:03Z"},
{"Line": "=>1222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { queryString = translator.translateQuery(getTheJenaModel(), q); } catch (java.lang.UnsupportedOperationException e) { com.ge.research.sadl.reasoner.IReasoner defaultReasoner = getConfigMgr(null).getOtherReasoner(ConfigurationManager.DEFAULT_REASONER); com.ge.research.sadl.reasoner.ITranslator alttranslator = getConfigMgr(null).getTranslatorForReasoner(defaultReasoner); queryString = alttranslator.translateQuery(getTheJenaModel(), q); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2224/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlInferenceProcessor.java", "BodyUseAPI": ["com.ge.research.sadl.jena.JenaBasedSadlInferenceProcessor.getTheJenaModel()", "com.ge.research.sadl.reasoner.ITranslator.translateQuery(com.hp.hpl.jena.ontology.OntModel,com.ge.research.sadl.model.gp.Query)"], "Fixed commit": "57dd404140aeabd53815fc09c48dbd27011e6328", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2017-08-23T20:20:35Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { values[j] = nodevalues[j].getValues()[i]; } catch (java.lang.IndexOutOfBoundsException | java.lang.NullPointerException e) { values[j] = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6980/buggy-version/src.dna.series.Aggregation.java", "BodyUseAPI": ["nodevalues[j].getValues()"], "Fixed commit": "e4a60bf841a4802259ad12e87d7c7bb523698e7b", "Url": "https://api.github.com/repos/BenjaminSchiller/DNA", "Date": "2014-04-04T13:36:13Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bean.Buginfo bugInfo = buginfoDao.findById(ownerBug.getBugInfoId()); if (bugInfo != null) { bean.WarppedBuginfo wb = new bean.WarppedBuginfo(bugInfo, ownerBug.getStatus(), ownerBug.getId()); oldBugList.add(wb); } } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7398/buggy-version/src.timer.CheckOwnerTimer.java", "BodyUseAPI": ["bean.Ownerbugs.getBugInfoId()", "bean.Ownerbugs.getId()", "java.util.List<bean.WarppedBuginfo>.add(bean.WarppedBuginfo)", "dao.IBuginfoDAO.findById(ownerBug.getBugInfoId())", "bean.Ownerbugs.getStatus()"], "Fixed commit": "5b96666a9627806c20d1fc16ca60c81fe61d4302", "Url": "https://api.github.com/repos/yinshunming/BugTrackingSystem", "Date": "2014-03-19T06:11:52Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { byte[] pass = org.eestecmb.oldteam.settings.HexDump.hexStringToByteArray(password); return new java.lang.String(new org.eestecmb.oldteam.settings.RC4(EncryptionKey.KEY).rc4(pass)); } catch (java.lang.Exception e) { if ((org.eestecmb.oldteam.settings.SettingsHelper.mContext) != null) android.widget.Toast.makeText(org.eestecmb.oldteam.settings.SettingsHelper.mContext, \"Napaka pri branju gesla!\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7695/buggy-version/src.org.eestecmb.oldteam.settings.SettingsHelper.java", "BodyUseAPI": ["org.eestecmb.oldteam.settings.RC4.rc4(byte[])", "org.eestecmb.oldteam.settings.HexDump.hexStringToByteArray(java.lang.String)"], "Fixed commit": "90e50c87220af0bee37249fbc7194b1e3bc52905", "Url": "https://api.github.com/repos/zokipirlo/Poraba", "Date": "2012-05-03T12:35:19Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { state = java.net.URLEncoder.encode(java.net.URLEncoder.encode(state, \"UTF-8\"), \"UTF-8\"); } catch (space.pxls.auth.UnsupportedEncodingException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6773/buggy-version/src.main.java.space.pxls.auth.VKAuthService.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "01edde7a26959814302fb9f5460b6d47601642b1", "Url": "https://api.github.com/repos/xSke/Pxls", "Date": "2017-11-23T18:30:22Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (java.lang.Integer id : soundNodes.keySet()) { soundNodes.get(id).setVolume(0.0F); } java.lang.System.out.println(\"mute engine\"); if ((prevHigh) != null) { prevHigh.setVolume(0); } if ((prevLow) != null) { prevLow.setVolume(0); } } catch (java.lang.Exception e) { java.lang.System.err.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1966/buggy-version/src.audio.EngineAudioRender.java", "BodyUseAPI": ["audio.EngineAudioRender.keySet()", "com.jme3.audio.AudioNode.setVolume(int)", "soundNodes.get(id).setVolume(float)", "java.io.PrintStream.println(java.lang.String)", "com.jme3.audio.AudioNode.setVolume(int)", "audio.EngineAudioRender.get(java.lang.Integer)"], "Fixed commit": "b6ccbc334917ff03cbd0c0fdb8e3461ceda1500c", "Url": "https://api.github.com/repos/geenux/StartRacing", "Date": "2012-05-29T15:18:11Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { imageUri = new java.net.URI(\"\"); } catch (java.net.URISyntaxException e) { assert false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7756/buggy-version/Core.src.main.java.net.hybridhacker.visualslice.visualizer.decorators.ImageBackgroundDecorator.java", "BodyUseAPI": [], "Fixed commit": "f16d68b14984ae26cfcb20b53ec75afeecdbda68", "Url": "https://api.github.com/repos/Flaflo/VisualSlice", "Date": "2017-02-08T02:11:49Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { circle.setCenter(new com.baidu.mapapi.model.LatLng(latitude, longitude)); } catch (java.lang.Exception e) { android.util.Log.e(\"drawError\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2414/buggy-version/app.src.main.java.com.iyuelbs.ui.main.MapFragment.java", "BodyUseAPI": ["com.baidu.mapapi.map.Circle.setCenter(com.baidu.mapapi.model.LatLng)"], "Fixed commit": "915111c3f54d264a307c89e60d4a20c37d132096", "Url": "https://api.github.com/repos/shuiqingliu/iYueLBS", "Date": "2017-12-25T13:43:17Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return jdbcTemplate.queryForObject(findCollectionInfoBySlugSql, java.util.Collections.singletonMap(\"slug\", slug), RowMappers::forCollectionInfoDto); } catch (org.springframework.dao.EmptyResultDataAccessException ignored) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3601/buggy-version/src.main.java.ru.mystamps.web.dao.impl.JdbcCollectionDao.java", "BodyUseAPI": ["java.util.Collections.singletonMap(java.lang.String,java.lang.String)", "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForObject(java.lang.String,java.util.Map<java.lang.String, java.lang.String>,RowMappers::forCollectionInfoDto)"], "Fixed commit": "84304545ec3f515d559a92795bc5214d35120e49", "Url": "https://api.github.com/repos/bodom91/mystamps", "Date": "2016-08-23T15:10:56Z"},
{"Line": "=>878", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { localTopologyManager.setCacheAvailability(getName(), availability); } catch (java.lang.Exception e) { throw new org.infinispan.commons.CacheException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5603/buggy-version/core.src.main.java.org.infinispan.cache.impl.CacheImpl.java", "BodyUseAPI": ["org.infinispan.topology.LocalTopologyManager.setCacheAvailability(java.lang.String,org.infinispan.partionhandling.AvailabilityMode)", "org.infinispan.cache.impl.CacheImpl<K, V>.getName()"], "Fixed commit": "f20a5f908946677a0c404be637b6732bf37c00df", "Url": "https://api.github.com/repos/danberindei/infinispan", "Date": "2014-10-20T14:43:22Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.List<diergo.csv.Row> rows = parseLine(line, determiner.apply(line)); if (rows.isEmpty()) { formerLine.compareAndSet(null, (line + '\\n')); } return rows; } catch (java.lang.RuntimeException error) { return errorHandler.apply(error, line); } finally { lineNo.incrementAndGet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2604/buggy-version/src.main.java.diergo.csv.RowParser.java", "BodyUseAPI": ["java.util.function.Function<java.lang.String, java.lang.Character>.apply(java.lang.String)", "java.util.concurrent.atomic.AtomicReference<java.lang.String>.compareAndSet(<nulltype>,java.lang.String)", "diergo.csv.RowParser.parseLine(java.lang.String,java.lang.Character)", "java.util.List<diergo.csv.Row>.isEmpty()"], "Fixed commit": "e865f951cb8bb4f006330f5cd228b051463ea2de", "Url": "https://api.github.com/repos/aburmeis/decs", "Date": "2015-10-01T12:51:25Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { valueObject.Description = field.getDescription(); } catch (java.lang.IllegalArgumentException e) { valueObject.Description = ((java.lang.String) (field.get_Value(\"Description\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2216/buggy-version/base.src.org.adempiere.model.MBrowseField.java", "BodyUseAPI": ["org.adempiere.model.MBrowseField.getDescription()"], "Fixed commit": "d419573ea89596621cc578dd9b06fce75f21f8b2", "Url": "https://api.github.com/repos/adempiere/adempiere", "Date": "2016-09-20T16:38:42Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { valueObject.Header = field.getName(); } catch (java.lang.IllegalArgumentException e) { valueObject.Header = ((java.lang.String) (field.get_Value(\"Name\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2216/buggy-version/base.src.org.adempiere.model.MBrowseField.java", "BodyUseAPI": ["org.adempiere.model.MBrowseField.getName()"], "Fixed commit": "d419573ea89596621cc578dd9b06fce75f21f8b2", "Url": "https://api.github.com/repos/adempiere/adempiere", "Date": "2016-09-20T16:38:42Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { networkLayer.tables.FTableEntry fe = networkLayer.tables.ForwardingTableService.getEntry(destIP); networkLayer.NetworkController.sendUnicastJson(fe.nextHopAddress, json); } catch (networkLayer.tables.NoEntryException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/635/buggy-version/ChatProject.src.networkLayer.NetworkController.java", "BodyUseAPI": ["networkLayer.NetworkController.sendUnicastJson(fe.nextHopAddress,org.json.simple.JSONObject)", "networkLayer.tables.ForwardingTableService.getEntry(java.net.InetAddress)"], "Fixed commit": "46aa93abef69da0608071c29dd360dbf57ff1122", "Url": "https://api.github.com/repos/FHast/NetworkSystemsProject", "Date": "2017-04-19T14:06:29Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { y = java.lang.Double.parseDouble(bits[0]); } catch (java.lang.NumberFormatException e) { y = 0.5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9130/buggy-version/src.main.java.com.sk89q.craftbook.mechanics.BounceBlocks.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "3db76312e9e94f4b394bb93f717431530bfe5025", "Url": "https://api.github.com/repos/Minebench/CraftBook", "Date": "2017-02-22T23:40:10Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return network.Crypto.encrypt(this, key); } catch (java.io.IOException | javax.crypto.IllegalBlockSizeException e) { e.printStackTrace(); java.lang.System.out.println((\"Encryption failed! Message: \" + (this))); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1744/buggy-version/GDCN_proj.Client.src.main.java.network.NetworkMessage.java", "BodyUseAPI": ["network.Crypto.encrypt(network.NetworkMessage,javax.crypto.SecretKey)"], "Fixed commit": "8ab3201691e8af9de45a16138ef2f3a3931c2ee2", "Url": "https://api.github.com/repos/weeeeeew/GDCN", "Date": "2014-05-01T16:08:47Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.joda.time.DateTime endDateTime = adullact.publicrowdfunding.model.local.utilities.Utility.stringToDateTime(endDate); org.joda.time.DateTime now = org.joda.time.DateTime.now(); if (endDateTime.isBefore(now)) { throw new java.lang.Exception(); } } catch (java.lang.Exception e) { android.widget.Toast.makeText(context, \"Date de fin invalide\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5596/buggy-version/PublicrowdFunding.src.adullact.publicrowdfunding.controller.project.add.addProjectFragment.java", "BodyUseAPI": ["adullact.publicrowdfunding.model.local.utilities.Utility.stringToDateTime(java.lang.String)", "org.joda.time.DateTime.now()", "org.joda.time.DateTime.isBefore(org.joda.time.DateTime)"], "Fixed commit": "d142d04cc92b18d52868e4905575ae8f6ff47c76", "Url": "https://api.github.com/repos/Crikka/appli-libre", "Date": "2014-09-11T19:10:04Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (event.hasBlock()) { if ((((event.getClickedBlock().getType()) == (org.bukkit.Material.SIGN)) || ((event.getClickedBlock().getType()) == (org.bukkit.Material.WALL_SIGN))) && (!(event.getPlayer().isSneaking()))) { org.bukkit.block.Sign s = ((org.bukkit.block.Sign) (event.getClickedBlock().getState())); if (org.bukkit.ChatColor.stripColor(s.getLine(0)).equalsIgnoreCase(\"[MobNinja]\")) { java.lang.String map = s.getLine(2); event.getPlayer().performCommand((\"mobninja join \" + map)); } } } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8573/buggy-version/src.main.java.com.chaseoes.mobninja.listeners.PlayerInteractListener.java", "BodyUseAPI": ["event.getPlayer().isSneaking()", "event.getClickedBlock().getType()", "org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()", "event.getClickedBlock().getType()", "org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()", "event.getClickedBlock().getState()", "event.getPlayer().performCommand(java.lang.String)", "org.bukkit.block.Sign.getLine(int)", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "org.bukkit.ChatColor.stripColor(s.getLine(0)).equalsIgnoreCase(java.lang.String)", "org.bukkit.event.player.PlayerInteractEvent.hasBlock()", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()", "org.bukkit.block.Sign.getLine(int)", "org.bukkit.ChatColor.stripColor(s.getLine(0))"], "Fixed commit": "10ada316035c3188c48ce071fe96c0f3a875775e", "Url": "https://api.github.com/repos/tenjavacontest/chaseoes", "Date": "2013-12-07T21:50:46Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (status.equals(\"Not Complete\")) { af.setSerieStatus(SerieStatus.E); }else if (status.equals(\"Aged Out\")) { af.setSerieStatus(SerieStatus.G); }else if (status.equalsIgnoreCase(\"o\")) { af.setSerieStatus(SerieStatus.O); }else if (status.equalsIgnoreCase(\"d\")) { af.setSerieStatus(SerieStatus.D); }else { af.setSerieStatus(gov.nist.healthcare.cds.enumeration.SerieStatus.valueOf(status)); } } catch (java.lang.Exception e) { java.lang.System.out.println(\"Unexpected dose status\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3824/buggy-version/src.main.java.gov.nist.fhir.client.ir.TranslationUtils.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "gov.nist.healthcare.cds.domain.wrapper.ActualForecast.setSerieStatus(SerieStatus.G)", "gov.nist.healthcare.cds.domain.wrapper.ActualForecast.setSerieStatus(gov.nist.healthcare.cds.enumeration.SerieStatus.valueOf(status))", "gov.nist.healthcare.cds.domain.wrapper.ActualForecast.setSerieStatus(SerieStatus.O)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equals(java.lang.String)", "gov.nist.healthcare.cds.domain.wrapper.ActualForecast.setSerieStatus(SerieStatus.D)", "gov.nist.healthcare.cds.enumeration.SerieStatus.valueOf(java.lang.String)", "gov.nist.healthcare.cds.domain.wrapper.ActualForecast.setSerieStatus(SerieStatus.E)"], "Fixed commit": "e98ff64a7a03d904c5d617d86e9a7f41f6597957", "Url": "https://api.github.com/repos/usnistgov/fhirClientImmunizationRecommendation", "Date": "2017-04-12T15:23:52Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { parser.parse(source, this); } catch (java.lang.InternalError e) { throw new java.lang.Exception(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6366/buggy-version/reader-core.src.main.java.com.sismics.reader.core.dao.file.rss.RssReader.java", "BodyUseAPI": ["javax.xml.parsers.SAXParser.parse(org.xml.sax.InputSource,com.sismics.reader.core.dao.file.rss.RssReader)"], "Fixed commit": "f36407021881293f23c34299d79de8bb1350d608", "Url": "https://api.github.com/repos/sismics/reader", "Date": "2013-06-13T20:38:17Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if (!(isScriptParamsEmpty())) { setVariablesValues(trans); transMeta.setInternalKettleVariables(trans); } trans.execute(null); trans.waitUntilFinished(); onError(trans.getErrors(), trans.getLogChannelId()); } finally { trans.cleanup(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6451/buggy-version/src.main.java.org.homedns.mkh.dis.TransExecutor.java", "BodyUseAPI": ["org.pentaho.di.trans.Trans.getLogChannelId()", "org.homedns.mkh.dis.TransExecutor.isScriptParamsEmpty()", "org.pentaho.di.trans.Trans.waitUntilFinished()", "org.pentaho.di.trans.TransMeta.setInternalKettleVariables(org.pentaho.di.trans.Trans)", "org.homedns.mkh.dis.TransExecutor.setVariablesValues(org.pentaho.di.trans.Trans)", "org.pentaho.di.trans.Trans.execute(<nulltype>)", "org.homedns.mkh.dis.TransExecutor.onError(trans.getErrors(),trans.getLogChannelId())", "org.pentaho.di.trans.Trans.getErrors()"], "Fixed commit": "41d84773f75fe08d01adb7dfae7d9c2da81e2e12", "Url": "https://api.github.com/repos/khomisha/dis", "Date": "2017-10-27T19:06:50Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { app = new java.net.URI(url).getHost().split(\"\\\\.\")[0]; } catch (java.net.URISyntaxException e) { throw new javax.servlet.ServletException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8196/buggy-version/src.main.java.com.salesforce.saml.SAMLServlet.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.net.URI.getHost()"], "Fixed commit": "3352cb67e5a5c4e6a2880e850867b3a971b660d6", "Url": "https://api.github.com/repos/salesforceidentity/heroku-identity-java", "Date": "2014-09-26T03:51:29Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { listViewPanel.setBackgroundResource(res); } catch (java.lang.OutOfMemoryError e) { android.util.Log.e(AnkiDroidApp.TAG, (\"setStyledDialogBackgrounds - OutOfMemoryError occured: \" + e)); listViewPanel.setBackgroundResource(R.color.white); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2337/buggy-version/src.com.ichi2.themes.Themes.java", "BodyUseAPI": ["android.view.View.setBackgroundResource(int)"], "Fixed commit": "fcc760aad4adc8b9cda2e4b3f0f246210129bc00", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-10-22T11:05:37Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { customPanel.setBackgroundResource(res); } catch (java.lang.OutOfMemoryError e) { android.util.Log.e(AnkiDroidApp.TAG, (\"setStyledDialogBackgrounds - OutOfMemoryError occured: \" + e)); customPanel.setBackgroundResource((brightCustomPanelBackground ? R.color.white : R.color.black)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2337/buggy-version/src.com.ichi2.themes.Themes.java", "BodyUseAPI": ["android.view.View.setBackgroundResource(int)"], "Fixed commit": "fcc760aad4adc8b9cda2e4b3f0f246210129bc00", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-10-22T11:05:37Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result.show(); } catch (java.lang.OutOfMemoryError e) { android.util.Log.e(AnkiDroidApp.TAG, (\"showThemedToast - OutOfMemoryError occured: \" + e)); result.getView().setBackgroundResource(R.color.black); result.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2337/buggy-version/src.com.ichi2.themes.Themes.java", "BodyUseAPI": ["android.widget.Toast.show()"], "Fixed commit": "fcc760aad4adc8b9cda2e4b3f0f246210129bc00", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-10-22T11:05:37Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { topPanel.setBackgroundResource(com.ichi2.themes.Themes.mPopupTopDark); } catch (java.lang.OutOfMemoryError e) { android.util.Log.e(AnkiDroidApp.TAG, (\"setStyledDialogBackgrounds - OutOfMemoryError occured: \" + e)); topPanel.setBackgroundResource(R.color.black); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2337/buggy-version/src.com.ichi2.themes.Themes.java", "BodyUseAPI": ["android.view.View.setBackgroundResource(int)"], "Fixed commit": "fcc760aad4adc8b9cda2e4b3f0f246210129bc00", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-10-22T11:05:37Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { contentPanel.setBackgroundResource(res); } catch (java.lang.OutOfMemoryError e) { android.util.Log.e(AnkiDroidApp.TAG, (\"setStyledDialogBackgrounds - OutOfMemoryError occured: \" + e)); contentPanel.setBackgroundResource(R.color.black); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2337/buggy-version/src.com.ichi2.themes.Themes.java", "BodyUseAPI": ["android.view.View.setBackgroundResource(int)"], "Fixed commit": "fcc760aad4adc8b9cda2e4b3f0f246210129bc00", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-10-22T11:05:37Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { buttonPanel.setBackgroundResource(com.ichi2.themes.Themes.mPopupBottomMedium); } catch (java.lang.OutOfMemoryError e) { android.util.Log.e(AnkiDroidApp.TAG, (\"setStyledDialogBackgrounds - OutOfMemoryError occured: \" + e)); buttonPanel.setBackgroundResource(R.color.white); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2337/buggy-version/src.com.ichi2.themes.Themes.java", "BodyUseAPI": ["android.widget.LinearLayout.setBackgroundResource(int)"], "Fixed commit": "fcc760aad4adc8b9cda2e4b3f0f246210129bc00", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-10-22T11:05:37Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return setResult(doCommandImpl(testCase, runner)); } catch (java.lang.RuntimeException e) { setResult(new java.lang.Error(e)); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3331/buggy-version/src.main.java.jp.vmi.selenium.selenese.command.Command.java", "BodyUseAPI": ["jp.vmi.selenium.selenese.command.Command.doCommandImpl(jp.vmi.selenium.selenese.TestCase,jp.vmi.selenium.selenese.Runner)", "jp.vmi.selenium.selenese.command.Command.setResult(jp.vmi.selenium.selenese.result.Result)"], "Fixed commit": "1a674a7563cab4b5de0faeb8280b6b225d9d6c39", "Url": "https://api.github.com/repos/vmi/selenese-runner-java", "Date": "2013-09-04T22:13:47Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { resultObj.setTz(java.lang.Integer.parseInt(JsonNProperties.getString(\"tz\"))); } catch (java.lang.NumberFormatException e) { resultObj.setTz(0); } catch (java.lang.NullPointerException e) { resultObj.setTz(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1929/buggy-version/GeoCoral.app.src.main.java.com.gcu.zoltantompa.geocoral.pcHttpJSONAsync.java", "BodyUseAPI": ["java.lang.Integer.parseInt(JsonNProperties.getString(\"tz\"))", "org.json.JSONObject.getString(java.lang.String)", "com.gcu.zoltantompa.geocoral.EarthQ.setTz(int)"], "Fixed commit": "4255263488587ef58851bdbdd7c54b3b958710a2", "Url": "https://api.github.com/repos/TomZoy/Project_Coral-GCU-Y5-MUC", "Date": "2017-07-21T20:02:53Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (reader != null) reader.close(); } catch (java.io.IOException exception) { cascading.flow.hadoop.util.HadoopUtil.LOG.warn(\"error closing state path reader\", exception); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1361/buggy-version/cascading-hadoop.src.main.java.cascading.flow.hadoop.util.HadoopUtil.java", "BodyUseAPI": ["cascading.tuple.TupleEntryIterator.close()"], "Fixed commit": "1990d934945586c74a01e284e82cc9f71066a665", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2013-06-27T15:57:08Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { process = java.lang.Runtime.getRuntime().exec(command); process.waitFor(); java.io.InputStream in = process.getInputStream(); java.io.BufferedReader read = new java.io.BufferedReader(new java.io.InputStreamReader(in)); java.lang.String line = null; while ((line = read.readLine()) != null) { org.lxp.converter.impl.SWFToolsSWFConverter.LOG.info(line); } } catch (java.io.IOException e) { org.lxp.converter.impl.SWFToolsSWFConverter.LOG.error(e.getMessage(), e); } finally { if (process != null) { java.io.InputStream in = process.getErrorStream(); java.io.BufferedReader read = new java.io.BufferedReader(new java.io.InputStreamReader(in)); java.lang.String line = null; while ((line = read.readLine()) != null) { org.lxp.converter.impl.SWFToolsSWFConverter.LOG.info(line); } process.destroy(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1300/buggy-version/src.main.java.org.lxp.converter.impl.SWFToolsSWFConverter.java", "BodyUseAPI": ["java.lang.Runtime.exec(java.lang.String)", "java.lang.Process.waitFor()", "java.lang.Process.getInputStream()", "java.io.BufferedReader.readLine()", "java.lang.Runtime.getRuntime()", "org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "f242d55173b4351f357963935cbe3f0a42ba5ef0", "Url": "https://api.github.com/repos/hivsuper/document-converter", "Date": "2016-08-06T16:35:52Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if (!(granted.isEmpty())) { permissionsGranted(granted); } if (!(denied.isEmpty())) { permissionsDeclined(denied); } } finally { currentRequest = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1525/buggy-version/rtpermissions.src.main.java.com.airg.android.permission.PermissionsHandler.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.isEmpty()", "com.airg.android.permission.PermissionsHandler.permissionsGranted(java.util.Set<java.lang.String>)", "java.util.Set<java.lang.String>.isEmpty()", "com.airg.android.permission.PermissionsHandler.permissionsDeclined(java.util.Set<java.lang.String>)"], "Fixed commit": "2a2b75e49edcdd86273f485a332541415ebf282b", "Url": "https://api.github.com/repos/airG/android-rtpermissions", "Date": "2016-12-02T01:36:49Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getPurchasesFromAccounts(customerAccounts); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/5839/buggy-version/app.src.main.java.com.example.felicialin.budgethelper.HomePage.java", "BodyUseAPI": ["com.example.felicialin.budgethelper.HomePage.1.getPurchasesFromAccounts(java.util.List<com.reimaginebanking.api.nessieandroidsdk.models.Account>)"], "Fixed commit": "665f8e38c3cad4d1a09d2fb94fbaa8e762973bbe", "Url": "https://api.github.com/repos/feliciajlin/BudgetApp", "Date": "2017-10-08T01:42:49Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { worms.util.Position newPosition = worm.jumpStep(t); double[] position = new double[]{ newPosition.getX(), newPosition.getY() }; return position; } catch (java.lang.IllegalArgumentException exc) { throw new worms.model.ModelException(exc.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8065/buggy-version/Project_Worm.src.worms.model.Facade.java", "BodyUseAPI": ["worms.util.Position.getY()", "worms.model.Worm.jumpStep(double)", "worms.util.Position.getX()"], "Fixed commit": "0e9cde208a1b328216587853e09c5337e9f554d9", "Url": "https://api.github.com/repos/FearTheDust/Worm", "Date": "2014-03-14T12:40:46Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { worm.jump(); } catch (java.lang.IllegalArgumentException ex) { throw new worms.model.ModelException(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8065/buggy-version/Project_Worm.src.worms.model.Facade.java", "BodyUseAPI": ["worms.model.Worm.jump()"], "Fixed commit": "0e9cde208a1b328216587853e09c5337e9f554d9", "Url": "https://api.github.com/repos/FearTheDust/Worm", "Date": "2014-03-14T12:40:46Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { icon = new javax.swing.ImageIcon(com.variamos.gui.perspeditor.PerspEditorFunctions.class.getResource(paletteElement.getIcon())); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2376/buggy-version/com.variamos.gui.src.com.variamos.gui.perspeditor.PerspEditorFunctions.java", "BodyUseAPI": ["java.lang.Class.getResource(paletteElement.getIcon())", "com.variamos.gui.perspeditor.PaletteElement.getIcon()"], "Fixed commit": "b6e2fbc030addb7932e287a506eb76769b8c7ee4", "Url": "https://api.github.com/repos/jcmunozf/VARIAMOS", "Date": "2017-10-30T22:58:56Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { deliverer.deliver(receipt); log.debug(\"Receipt successfully delivered!\"); } catch (final org.holodeckb2b.interfaces.delivery.MessageDeliveryException ex) { throw ex; } catch (final java.lang.Throwable t) { log.warn(((((deliverer.getClass().getSimpleName()) + \" threw \") + (t.getClass().getSimpleName())) + \" instead of MessageDeliveryException!\")); throw new org.holodeckb2b.interfaces.delivery.MessageDeliveryException(\"Unhandled exception during message delivery\", t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/913/buggy-version/modules.holodeckb2b-core.src.main.java.org.holodeckb2b.ebms3.handlers.inflow.DeliverReceipts.java", "BodyUseAPI": ["org.holodeckb2b.ebms3.handlers.inflow.DeliverReceipts.debug(java.lang.String)", "org.holodeckb2b.interfaces.delivery.IMessageDeliverer.deliver(org.holodeckb2b.ebms3.persistency.entities.Receipt)"], "Fixed commit": "3f9a128aed5e8940c421dd508228bc7c45aab2f0", "Url": "https://api.github.com/repos/MockerTim/Holodeck-B2B", "Date": "2016-09-09T15:46:31Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { deliverer.deliver(errorSignal); log.debug(\"Error successfully delivered!\"); } catch (final org.holodeckb2b.interfaces.delivery.MessageDeliveryException ex) { throw ex; } catch (final java.lang.Throwable t) { log.warn(((((deliverer.getClass().getSimpleName()) + \" threw \") + (t.getClass().getSimpleName())) + \" instead of MessageDeliveryException!\")); throw new org.holodeckb2b.interfaces.delivery.MessageDeliveryException(\"Unhandled exception during message delivery\", t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/913/buggy-version/modules.holodeckb2b-core.src.main.java.org.holodeckb2b.ebms3.handlers.inflow.DeliverErrors.java", "BodyUseAPI": ["org.holodeckb2b.ebms3.handlers.inflow.DeliverErrors.debug(java.lang.String)", "org.holodeckb2b.interfaces.delivery.IMessageDeliverer.deliver(org.holodeckb2b.ebms3.persistency.entities.ErrorMessage)"], "Fixed commit": "3f9a128aed5e8940c421dd508228bc7c45aab2f0", "Url": "https://api.github.com/repos/MockerTim/Holodeck-B2B", "Date": "2016-09-09T15:46:31Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { log.debug((\"Delivering the message using delivery specification: \" + (deliveryMethod.getId()))); deliverer.deliver(um); } catch (final org.holodeckb2b.interfaces.delivery.MessageDeliveryException ex) { throw ex; } catch (final java.lang.Throwable t) { log.warn(((((deliverer.getClass().getSimpleName()) + \" threw \") + (t.getClass().getSimpleName())) + \" instead of MessageDeliveryException!\")); throw new org.holodeckb2b.interfaces.delivery.MessageDeliveryException(\"Unhandled exception during message delivery\", t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/913/buggy-version/modules.holodeckb2b-core.src.main.java.org.holodeckb2b.ebms3.handlers.inflow.DeliverUserMessage.java", "BodyUseAPI": ["org.holodeckb2b.ebms3.handlers.inflow.DeliverUserMessage.debug((\"Delivering the message using delivery specification: \" + (deliveryMethod.getId())))", "org.holodeckb2b.interfaces.delivery.IDeliverySpecification.getId()", "org.holodeckb2b.interfaces.delivery.IMessageDeliverer.deliver(org.holodeckb2b.ebms3.persistency.entities.UserMessage)"], "Fixed commit": "3f9a128aed5e8940c421dd508228bc7c45aab2f0", "Url": "https://api.github.com/repos/MockerTim/Holodeck-B2B", "Date": "2016-09-09T15:46:31Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getCurrentFeedbackSession().addFeedbackUnit(feedbackUnit); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/7282/buggy-version/src.com.feedback.beans.Item.java", "BodyUseAPI": ["com.feedback.beans.Item.getCurrentFeedbackSession()", "com.feedback.beans.FeedbackSession.addFeedbackUnit(com.feedback.beans.FeedbackUnit)"], "Fixed commit": "674cdd7c9c9edfb2047ad05fd3c7c77187051bf9", "Url": "https://api.github.com/repos/touzbi/feedback", "Date": "2014-07-14T20:04:24Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return ((T) (no.wtw.android.dynamicspinner.widget.DynamicSpinner.getAdapter().getItem(no.wtw.android.dynamicspinner.widget.DynamicSpinner.getSelectedItemPosition()))); } catch (java.lang.IndexOutOfBoundsException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2222/buggy-version/src.no.wtw.android.dynamicspinner.widget.DynamicSpinner.java", "BodyUseAPI": ["no.wtw.android.dynamicspinner.widget.DynamicSpinner.getAdapter().getItem(no.wtw.android.dynamicspinner.widget.DynamicSpinner.getSelectedItemPosition())", "no.wtw.android.dynamicspinner.widget.DynamicSpinner.getSelectedItemPosition()", "no.wtw.android.dynamicspinner.widget.DynamicSpinner.getAdapter()"], "Fixed commit": "06d46b709166fbc250667f4d05d752d1aee1f7aa", "Url": "https://api.github.com/repos/wtw-software/AndroidDynamicSpinner", "Date": "2014-08-11T07:17:39Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fighterList = query.find(); } catch (com.parse.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9222/buggy-version/UFCFighterApp.src.yftvn.ufc.data.FighterData.java", "BodyUseAPI": ["com.parse.ParseQuery<com.parse.ParseObject>.find()"], "Fixed commit": "6af6c4e3bcab73221977d8600fecfcc2c0b72254", "Url": "https://api.github.com/repos/nvutri/CS371m-ufc", "Date": "2013-12-06T06:25:58Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return com.bagri.common.util.XMLUtils.xiFactory.createXMLStreamReader(reader); } catch (javax.xml.stream.XMLStreamException ex) { reader.close(); throw new java.io.IOException(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3220/buggy-version/bagri-common.src.main.java.com.bagri.common.util.XMLUtils.java", "BodyUseAPI": ["javax.xml.stream.XMLInputFactory.createXMLStreamReader(java.io.Reader)"], "Fixed commit": "5f104a9065d30aa179236e3ae44ac8657634336f", "Url": "https://api.github.com/repos/dsukhoroslov/bagri", "Date": "2015-09-09T05:20:25Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return org.apache.commons.io.IOUtils.toByteArray(new java.io.FileInputStream(file)); } catch (java.io.FileNotFoundException f) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4973/buggy-version/src.main.java.it.uniroma3.galleria.controller.ImgController.java", "BodyUseAPI": ["org.apache.commons.io.IOUtils.toByteArray(java.io.FileInputStream)"], "Fixed commit": "13f90362c95e95a1708ed50a1f799b3ea37cd2a2", "Url": "https://api.github.com/repos/DkXfS/SIWgalleria", "Date": "2017-06-20T20:18:22Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { ctx.handle(); } finally { com.dianping.cat.abtest.ABTestManager.onRequestEnd(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4609/buggy-version/cat-client.src.main.java.com.dianping.cat.servlet.CatFilter.java", "BodyUseAPI": ["com.dianping.cat.servlet.CatFilter.Context.handle()"], "Fixed commit": "4b07d8e529cdfebe36840665962120ac99eeb998", "Url": "https://api.github.com/repos/unidal/cat", "Date": "2013-07-09T10:14:40Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (api.addFavorite(this.museumId, this.context)) { android.widget.Toast.makeText(this, getResources().getString(R.string.added_favorite), Toast.LENGTH_SHORT).show(); item.setIcon(R.drawable.star); inDB = true; }else { android.widget.Toast.makeText(this, \"Error fetching data from server.\", Toast.LENGTH_SHORT).show(); } } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, \"Error adding to favorites.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4899/buggy-version/Virgil.app.src.main.java.wisc.virgil.virgil.GalleryActivity.java", "BodyUseAPI": ["getResources().getString(R.string.added_favorite)", "android.widget.Toast.makeText(wisc.virgil.virgil.GalleryActivity,getResources().getString(R.string.added_favorite),Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(this, getResources().getString(R.string.added_favorite), Toast.LENGTH_SHORT).show()", "android.widget.Toast.makeText(this, \"Error fetching data from server.\", Toast.LENGTH_SHORT).show()", "wisc.virgil.virgil.VirgilAPI.addFavorite(int,android.content.Context)", "android.widget.Toast.makeText(wisc.virgil.virgil.GalleryActivity,java.lang.String,Toast.LENGTH_SHORT)", "wisc.virgil.virgil.GalleryActivity.getResources()", "android.view.MenuItem.setIcon(R.drawable.star)"], "Fixed commit": "bafb91485c5c23ba943fbb42051980fbb0e7f6ec", "Url": "https://api.github.com/repos/VictorFerrero/Virgil_Android", "Date": "2016-04-19T04:29:25Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.yidian.push.push_request.PushRequestManager.getInstance().markAsLogging(pushRequest); } catch (java.io.IOException e) { log.error(\"mark as logging failed...\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/297/buggy-version/logging.src.main.java.com.yidian.push.logging.producer.LogProducer.java", "BodyUseAPI": ["com.yidian.push.push_request.PushRequestManager.getInstance()", "com.yidian.push.push_request.PushRequestManager.getInstance().markAsLogging(com.yidian.push.push_request.PushRequest)"], "Fixed commit": "a2efc791fc2f772e6143a92eaa0a601da97c17f7", "Url": "https://api.github.com/repos/siyu618/push_notification", "Date": "2015-08-27T01:21:41Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { result.setText(makeResult()); } catch (java.lang.NumberFormatException ex) { result.setText(R.string.error_message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/8291/buggy-version/FirstHomework.app.src.main.java.com.rbezliudko.firsthomework.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "com.rbezliudko.firsthomework.MainActivity.1.makeResult()"], "Fixed commit": "da825707d91c3e9ec6a75447bd03835c4710c576", "Url": "https://api.github.com/repos/Armandos95/AndroidHomework", "Date": "2015-10-10T13:19:00Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { type = org.deidentifier.arx.DataType.createOrderedString(array); if (!(isValidDataType(type, getValuesAsList()))) { type = org.deidentifier.arx.DataType.STRING; } } catch (java.lang.Exception e) { controller.actionShowInfoDialog(\"Error\", (\"Cannot create data type: \" + (e.getMessage()))); type = org.deidentifier.arx.DataType.STRING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1177/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.define.ViewAttributeDefinition.java", "BodyUseAPI": ["org.deidentifier.arx.gui.view.impl.define.ViewAttributeDefinition.2.isValidDataType(org.deidentifier.arx.DataType<?>,java.util.Collection<java.lang.String>)", "org.deidentifier.arx.DataType.createOrderedString(java.lang.String[])", "org.deidentifier.arx.gui.view.impl.define.ViewAttributeDefinition.2.getValuesAsList()"], "Fixed commit": "e699fc4ff84768fe843d3dc58dc2bca1b34e395a", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-04-11T14:35:50Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tiId = tiId.substring(0, tiId.indexOf(\"/\")); } catch (java.lang.StringIndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3703/buggy-version/openinfra_core.src.main.java.de.btu.openinfra.backend.db.rbac.OpenInfraRbac.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "c4d9a49d8448e149e9814b87f9a646fd257e1a21", "Url": "https://api.github.com/repos/OpenInfRA/core", "Date": "2015-10-08T07:43:29Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return indexShard.docStats().getCount(); } catch (org.elasticsearch.index.shard.IllegalIndexShardStateException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/2469/buggy-version/sql.src.main.java.io.crate.operation.reference.sys.shard.ShardNumDocsExpression.java", "BodyUseAPI": ["org.elasticsearch.index.shard.service.IndexShard.docStats()", "indexShard.docStats().getCount()"], "Fixed commit": "fc103fdb4688c17d2175b79e26663ab709275b14", "Url": "https://api.github.com/repos/crate/crate", "Date": "2014-03-11T10:08:23Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mStatsReaderAdapter.onDisconnect(); } catch (java.lang.Exception e) { android.util.Log.e(com.github.martoreto.aauto.vex.vag.ExlapCarStatsService.TAG, \"Error handling car disconnection\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6895/buggy-version/app.src.main.java.com.github.martoreto.aauto.vex.vag.ExlapCarStatsService.java", "BodyUseAPI": ["com.github.martoreto.aauto.vex.vag.ExlapCarStatsService.ExlapReaderAdapter.onDisconnect()"], "Fixed commit": "2294d2cb09e467b4dcdfd0e3064bc201e4784f9a", "Url": "https://api.github.com/repos/martoreto/aauto-vex-vag", "Date": "2017-12-05T21:19:42Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mStatsReaderAdapter.startNewSession(); } catch (java.lang.Exception e) { android.util.Log.e(com.github.martoreto.aauto.vex.vag.ExlapCarStatsService.TAG, \"Error handling car connection\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6895/buggy-version/app.src.main.java.com.github.martoreto.aauto.vex.vag.ExlapCarStatsService.java", "BodyUseAPI": ["com.github.martoreto.aauto.vex.vag.ExlapCarStatsService.ExlapReaderAdapter.startNewSession()"], "Fixed commit": "2294d2cb09e467b4dcdfd0e3064bc201e4784f9a", "Url": "https://api.github.com/repos/martoreto/aauto-vex-vag", "Date": "2017-12-05T21:19:42Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { server.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/6996/buggy-version/client.ClientModel.java", "BodyUseAPI": ["java.net.Socket.close()"], "Fixed commit": "8d622967b7cb90f5ebb7a1c253cec44931d26877", "Url": "https://api.github.com/repos/miltoneiji/JavaChat", "Date": "2016-12-01T13:18:09Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (com.liferay.portal.kernel.notifications.UserNotificationManagerUtil.isDeliver(user.getUserId(), portletId, _notificationClassNameId, _notificationType, UserNotificationDeliveryConstants.TYPE_EMAIL)) { javax.mail.internet.InternetAddress to = new javax.mail.internet.InternetAddress(user.getEmailAddress(), user.getFullName()); sendEmail(to, user.getLocale()); } } catch (java.lang.Exception e) { com.liferay.portal.util.SubscriptionSender._log.error(e, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/4118/buggy-version/portal-service.src.com.liferay.portal.util.SubscriptionSender.java", "BodyUseAPI": ["com.liferay.portal.model.User.getLocale()", "com.liferay.portal.model.User.getFullName()", "com.liferay.portal.util.SubscriptionSender.sendEmail(javax.mail.internet.InternetAddress,user.getLocale())", "com.liferay.portal.kernel.notifications.UserNotificationManagerUtil.isDeliver(user.getUserId(),java.lang.String,long,int,UserNotificationDeliveryConstants.TYPE_EMAIL)", "com.liferay.portal.model.User.getEmailAddress()", "com.liferay.portal.model.User.getUserId()"], "Fixed commit": "bab7df096e5560fe9e7eb4bde132a3970c5d3d96", "Url": "https://api.github.com/repos/vsingleton/liferay-portal", "Date": "2014-02-18T09:23:39Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return info.xudshen.droiddata.dao.converter.EnumPropertyConverter.valueOfIgnoreCase(clazz, value); } catch (java.lang.Exception e) { android.util.Log.e(this.getClass().getName(), java.lang.String.format(\"can not convert (value=%s) to (type=%s)\", value, clazz.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/3495/buggy-version/DroidData.src.main.java.info.xudshen.droiddata.dao.converter.EnumPropertyConverter.java", "BodyUseAPI": ["info.xudshen.droiddata.dao.converter.EnumPropertyConverter.valueOfIgnoreCase(java.lang.Class<T>,java.lang.String)"], "Fixed commit": "eef9e9711bc05b745540c7130169aa570b4d49e8", "Url": "https://api.github.com/repos/xudshen/jandan", "Date": "2016-02-26T08:54:58Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { doc = spinfo.Crawling.Parser.parse(url); } catch (java.io.IOException e) { java.lang.System.out.println((\"Crawl error: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/9162/buggy-version/src.spinfo.Crawling.java", "BodyUseAPI": ["spinfo.Crawling.Parser.parse(java.lang.String)"], "Fixed commit": "05e7f7d367d0210d4c019adfe5e480eca67502f9", "Url": "https://api.github.com/repos/spinfo/java", "Date": "2011-07-28T16:39:07Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { num = java.lang.Integer.parseInt(number); } catch (java.lang.NumberFormatException e) { java.lang.System.out.println(\"Invalid number entry\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1216/buggy-version/Terminal.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "e6a78730c2c366cd0e1c31be257d83adfe69026a", "Url": "https://api.github.com/repos/santiagoswinnen/AVL-Blockchain", "Date": "2017-10-13T03:15:23Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bc.modify(num, data.toString()); } catch (java.lang.IndexOutOfBoundsException e) { java.lang.System.out.println(\"Invalid index for current block chain, try again please\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V46/1216/buggy-version/Terminal.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "BlockChain.modify(int,java.lang.String)"], "Fixed commit": "e6a78730c2c366cd0e1c31be257d83adfe69026a", "Url": "https://api.github.com/repos/santiagoswinnen/AVL-Blockchain", "Date": "2017-10-13T03:15:23Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mNotificationColor = com.markzhai.lyrichere.utils.ResourceHelper.getThemeColor(mService, android.R.attr.colorPrimary, Color.DKGRAY); } catch (java.lang.Exception e) { mNotificationColor = android.graphics.Color.DKGRAY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2082/buggy-version/app.src.main.java.com.markzhai.lyrichere.MediaNotificationManager.java", "BodyUseAPI": ["com.markzhai.lyrichere.utils.ResourceHelper.getThemeColor(com.markzhai.lyrichere.MusicService,android.R.attr.colorPrimary,Color.DKGRAY)"], "Fixed commit": "8030d9fe39233cf20b0e2496fb8447b88705884c", "Url": "https://api.github.com/repos/markzhai/LyricHere", "Date": "2015-09-10T12:47:02Z"},
{"Line": "=>758", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(500); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6570/buggy-version/src.gui.VolumeTab.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "2f33a570a9397d20bc2c1872c719bfddc1b800c6", "Url": "https://api.github.com/repos/DominikRidder/ImageExtractor", "Date": "2015-10-20T11:20:16Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.door43.translationstudio.App.getLibrary().tearDown(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/584/buggy-version/app.src.main.java.com.door43.translationstudio.App.java", "BodyUseAPI": ["org.unfoldingword.door43client.Door43Client.tearDown()", "com.door43.translationstudio.App.getLibrary()"], "Fixed commit": "d9ffdcf5c9e5d53a25e548b074ab7058943dee28", "Url": "https://api.github.com/repos/neutrinog/ts-android", "Date": "2016-10-03T19:33:25Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.orcid.persistence.jpa.entities.ProfileEntity profile = profileEntityCacheManager.retrieve(orcidId); return url.replace(orcidId, profile.getHashedOrcid()); } catch (java.lang.IllegalArgumentException e) { org.orcid.core.analytics.AnalyticsProcess.LOG.warn(\"Invalid ORCID iD supplied in API call, original URL will be posted to GA\"); return url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8001/buggy-version/orcid-core.src.main.java.org.orcid.core.analytics.AnalyticsProcess.java", "BodyUseAPI": ["org.orcid.persistence.jpa.entities.ProfileEntity.getHashedOrcid()", "org.orcid.core.manager.ProfileEntityCacheManager.retrieve(java.lang.String)", "java.lang.String.replace(java.lang.String,profile.getHashedOrcid())"], "Fixed commit": "4818cef9a4d6f30d20bd2afcdd3d715ea6834a3b", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2017-05-08T13:06:01Z"},
{"Line": "=>1041", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { nm.cancelAll(); } catch (java.lang.Exception e) { org.matrix.androidsdk.util.Log.e(im.vector.services.EventStreamService.LOG_TAG, (\"## clearNotification() failed \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2781/buggy-version/vector.src.main.java.im.vector.services.EventStreamService.java", "BodyUseAPI": ["android.app.NotificationManager.cancelAll()"], "Fixed commit": "01cb2c6a416cdae2262ad6a9bd084bd28838d88e", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-02-09T16:53:27Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { RunOpMode(); } finally { com.google.appinventor.components.runtime.FtcRobotController.deactivateOpMode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7681/buggy-version/appinventor.components.src.com.google.appinventor.components.runtime.FtcLinearOpMode.java", "BodyUseAPI": ["com.google.appinventor.components.runtime.FtcLinearOpMode.1.RunOpMode()"], "Fixed commit": "92225e21f5bfa3bb572f66ccfade2fecffaaf15a", "Url": "https://api.github.com/repos/lizlooney/appinventor-sources", "Date": "2015-08-18T22:01:53Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { notifyStopped(); } finally { executor.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1677/buggy-version/twill-zookeeper.src.main.java.org.apache.twill.internal.zookeeper.LeaderElection.java", "BodyUseAPI": ["org.apache.twill.internal.zookeeper.LeaderElection.2.notifyStopped()"], "Fixed commit": "0dd41d0ca36b66d58d6c547a55bd1088c070063f", "Url": "https://api.github.com/repos/chtyim/incubator-twill", "Date": "2015-06-15T19:43:44Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { notifyFailed(t); } finally { executor.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1677/buggy-version/twill-zookeeper.src.main.java.org.apache.twill.internal.zookeeper.LeaderElection.java", "BodyUseAPI": ["org.apache.twill.internal.zookeeper.LeaderElection.2.notifyFailed(java.lang.Throwable)"], "Fixed commit": "0dd41d0ca36b66d58d6c547a55bd1088c070063f", "Url": "https://api.github.com/repos/chtyim/incubator-twill", "Date": "2015-06-15T19:43:44Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bank.add(doc.substring(((doc.length()) - 1)), \"\", 0, 0); } catch (java.lang.IndexOutOfBoundsException i) { java.lang.System.out.println(\"There is no text.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4877/buggy-version/Menu.java", "BodyUseAPI": ["java.lang.String.length()", "Textbank.add(java.lang.String,java.lang.String,int,int)", "java.lang.String.substring(int)"], "Fixed commit": "6945534bee30c51798a9257048d39bdc70f33887", "Url": "https://api.github.com/repos/ChanYvonne/Term2CSFInalProject", "Date": "2016-05-23T23:19:06Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fq.router2.utils.ShellUtils.sudo(\"ndc\", \"resolver\", \"flushdefaultif\"); } catch (java.lang.Exception e) { fq.router2.utils.LogUtils.e(\"failed to flush dns cache via ndc\", e); fq.router2.utils.ShellUtils.sudo(\"settings\", \"put\", \"global\", \"airplane_mode_on\", \"1\"); fq.router2.utils.ShellUtils.sudo(\"am\", \"broadcast\", \"-a\", \"android.intent.action.AIRPLANE_MODE\", \"--ez state\", \"true\"); fq.router2.utils.ShellUtils.sudo(\"settings\", \"put\", \"global\", \"airplane_mode_on\", \"0\"); fq.router2.utils.ShellUtils.sudo(\"am\", \"broadcast\", \"-a\", \"android.intent.action.AIRPLANE_MODE\", \"--ez state\", \"false\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6353/buggy-version/android.src.fq.router2.utils.AirplaneModeUtils.java", "BodyUseAPI": ["fq.router2.utils.ShellUtils.sudo(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "5e0e25b78b1ab9af89abe634333c3ad073f9bfa3", "Url": "https://api.github.com/repos/fqrouter/fqrouter", "Date": "2013-11-20T14:09:14Z"},
{"Line": "=>1688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { targetSession.rollback(); } catch (java.lang.Throwable ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7485/buggy-version/hornetq-jms-server.src.main.java.org.hornetq.jms.bridge.impl.JMSBridgeImpl.java", "BodyUseAPI": ["javax.jms.Session.rollback()"], "Fixed commit": "8fff1684424e9393eea6705735bcab07864c154c", "Url": "https://api.github.com/repos/clebertsuconic/hornetq", "Date": "2013-08-16T21:46:05Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return response.body().byteStream(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/192/buggy-version/connectors.okhttp.src.main.java.org.openstack4j.connectors.okhttp.HttpResponseImpl.java", "BodyUseAPI": ["com.squareup.okhttp.Response.body()", "response.body().byteStream()"], "Fixed commit": "7b934edf6e14f6c84b5da4d5f27f9418551da898", "Url": "https://api.github.com/repos/gondor/openstack4j", "Date": "2015-03-18T23:36:53Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int tempo = java.lang.Integer.parseInt(tempoStr); return (tempo > 0) && (tempo <= 1000); } catch (java.lang.Exception e) { e.printStackTrace(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4173/buggy-version/app.src.main.java.com.serp1983.nokiacomposer.DetailsActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "b9763a447e7886cdfa1e9869c04fd3f188a1177b", "Url": "https://api.github.com/repos/gSerP1983/NokiaComposer", "Date": "2017-03-11T19:57:13Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { target = repository.getObject(clazz, oid, null, result); } catch (com.evolveum.midpoint.util.exception.SchemaException e) { throw new com.evolveum.midpoint.util.exception.SchemaException((((e.getMessage()) + \" in \") + sourceDescription), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5887/buggy-version/model.model-impl.src.main.java.com.evolveum.midpoint.model.impl.lens.AssignmentEvaluator.java", "BodyUseAPI": ["com.evolveum.midpoint.repo.api.RepositoryService.getObject(java.lang.Class<? extends com.evolveum.midpoint.xml.ns._public.common.common_3.ObjectType>,java.lang.String,<nulltype>,com.evolveum.midpoint.schema.result.OperationResult)"], "Fixed commit": "2d89e0fb5041096cb070eb6a88adad9789af32c7", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2016-03-16T19:32:02Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mainClassFromManifest = jarUtility.getMainClassFromManifest(resolvedJarUrl, classLoader); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2515/buggy-version/impl.shim.mapreduce.src.main.java.org.pentaho.big.data.impl.shim.mapreduce.MapReduceServiceImpl.java", "BodyUseAPI": ["org.pentaho.di.job.entries.hadoopjobexecutor.JarUtility.getMainClassFromManifest(java.net.URL,java.lang.ClassLoader)"], "Fixed commit": "a7448e875073c15b66a9e3e6c11958db55ff8798", "Url": "https://api.github.com/repos/smaring/big-data-plugin", "Date": "2015-12-14T18:03:00Z"},
{"Line": "=>536", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.springframework.data.solr.core.query.Query query = new org.springframework.data.solr.core.query.SimpleQuery((((org.lareferencia.backend.domain.RecordValidationResult.SNAPSHOT_ID_FIELD) + \":\") + (snapshotID.toString()))); validationSolrTemplate.delete(query); } catch (java.lang.Exception e) { java.lang.System.err.println((\"Error en el borrado de registros de validaci\u00f3n: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6502/buggy-version/backend.src.main.java.org.lareferencia.backend.rest.BackEndController.java", "BodyUseAPI": ["java.lang.Long.toString()", "org.springframework.data.solr.core.SolrTemplate.delete(org.springframework.data.solr.core.query.Query)"], "Fixed commit": "418e09a6d7bc163dba05010d1e009300542201bf", "Url": "https://api.github.com/repos/lareferencia/main", "Date": "2016-09-30T13:39:08Z"},
{"Line": "=>3122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String[] cmdArray = new java.lang.String[5]; cmdArray[0] = \"cmd\"; cmdArray[1] = \"/c\"; cmdArray[2] = \"cmd\"; cmdArray[3] = \"/k\"; cmdArray[4] = (((((((((((\"set PGPASSWORD=\" + (dbInfo[6])) + \"& \") + \"psql -U \") + (dbInfo[5])) + \" -h \") + host) + \" -d \") + name) + \" -a -f \") + sqlPath) + \" & \") + \"exit\"; pr = java.lang.Runtime.getRuntime().exec(cmdArray, null); java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.InputStreamReader(pr.getInputStream())); java.lang.String str; while ((str = reader.readLine()) != null) { java.lang.System.out.println(str); } pr.waitFor(5, java.util.concurrent.TimeUnit.MINUTES); } catch (java.lang.Exception e) { e.printStackTrace(); message += (e.toString()) + \",\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5608/buggy-version/TNAtoolAPI-Webapp.src.main.java.com.webapp.modifiers.DbUpdate.java", "BodyUseAPI": ["java.lang.Process.getInputStream()", "java.lang.Process.waitFor(int,java.util.concurrent.TimeUnit)", "java.lang.Runtime.exec(java.lang.String[],<nulltype>)", "java.io.BufferedReader.readLine()", "java.lang.Runtime.getRuntime()", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "f20548b5b8318690d74f6c38546418d570474626", "Url": "https://api.github.com/repos/ODOT-PTS/TNExT", "Date": "2017-05-30T18:01:59Z"},
{"Line": "=>3144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String[] cmdArray = new java.lang.String[5]; cmdArray[0] = \"cmd\"; cmdArray[1] = \"/c\"; cmdArray[2] = \"cmd\"; cmdArray[3] = \"/k\"; cmdArray[4] = (((((((((((\"set PGPASSWORD=\" + (dbInfo[6])) + \"& \") + \"psql -U \") + (dbInfo[5])) + \" -h \") + host) + \" -d \") + name) + \" -a -f \") + sqlPath) + \" & \") + \"exit\"; pr = java.lang.Runtime.getRuntime().exec(cmdArray, null); java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.InputStreamReader(pr.getInputStream())); java.lang.String str; while ((str = reader.readLine()) != null) { java.lang.System.out.println(str); } pr.waitFor(5, java.util.concurrent.TimeUnit.MINUTES); } catch (java.lang.Exception e) { e.printStackTrace(); message += (e.toString()) + \",\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5608/buggy-version/TNAtoolAPI-Webapp.src.main.java.com.webapp.modifiers.DbUpdate.java", "BodyUseAPI": ["java.lang.Runtime.getRuntime()", "java.lang.Process.waitFor(int,java.util.concurrent.TimeUnit)", "java.lang.Process.getInputStream()", "java.lang.Runtime.exec(java.lang.String[],<nulltype>)", "java.io.BufferedReader.readLine()", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "f20548b5b8318690d74f6c38546418d570474626", "Url": "https://api.github.com/repos/ODOT-PTS/TNExT", "Date": "2017-05-30T18:01:59Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { orphans = reader.getOrphans(); setContentView(R.layout.main); output = new com.michalmazur.orphanedtexts.CsvConverter().convert(orphans); displayOrphanList(); } catch (android.database.sqlite.SQLiteException e) { isMenuEnabled = false; if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB)) { invalidateOptionsMenu(); } displayAlertDialog(((\"Error: \" + (e.getMessage())) + \"\\n\\nPlease restart the app and file an issue on GitHub if the problem persists.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5700/buggy-version/src.com.michalmazur.orphanedtexts.OrphanedTextsActivity.java", "BodyUseAPI": ["com.michalmazur.orphanedtexts.RawSmsReader.getOrphans()", "com.michalmazur.orphanedtexts.OrphanedTextsActivity.setContentView(R.layout.main)", "com.michalmazur.orphanedtexts.CsvConverter.convert(java.util.ArrayList<com.michalmazur.orphanedtexts.Orphan>)", "com.michalmazur.orphanedtexts.OrphanedTextsActivity.displayOrphanList()"], "Fixed commit": "0e63f4133ae486e77b9dcda237fabe8515788540", "Url": "https://api.github.com/repos/michalmazur/orphaned-texts", "Date": "2013-11-27T12:31:00Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { input = in.nextInt(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/4683/buggy-version/JDBC.src.MyJDBCConnector.java", "BodyUseAPI": ["java.util.Scanner.nextInt()"], "Fixed commit": "949e0e6343b4a97fdeb8f564ecce5c395d635376", "Url": "https://api.github.com/repos/Mushka/WebDevProj", "Date": "2016-04-02T21:41:05Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { row = uk.bl.api.Utils.buildWebRequestByUrl(Const.GITHUB, Const.LAST_COMMIT); play.Logger.info((\"row: \" + row)); if ((row != null) && ((row.length()) > 0)) { int start = (row.indexOf(Const.LAST_COMMIT)) + (Const.LAST_COMMIT.length()); row = row.substring(start, (start + 40)); } } catch (java.lang.Exception e) { play.Logger.debug((\"Error occured by last commit hash calculation: \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3756/buggy-version/app.controllers.About.java", "BodyUseAPI": ["uk.bl.api.Utils.buildWebRequestByUrl(Const.GITHUB,Const.LAST_COMMIT)", "java.lang.String.indexOf(Const.LAST_COMMIT)", "Const.LAST_COMMIT.length()", "java.lang.String.substring(int,int)", "play.Logger.info(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "a9505c96abdb4c8e9f2cb3ffaa4fab88b7bef5c9", "Url": "https://api.github.com/repos/ukwa/w3act", "Date": "2014-03-17T14:44:19Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { socket = device.createInsecureRfcommSocketToServiceRecord(myUUID); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5314/buggy-version/app.src.main.java.com.example.jan10.pulsometer.ConnectingActivity.java", "BodyUseAPI": ["android.bluetooth.BluetoothDevice.createInsecureRfcommSocketToServiceRecord(java.util.UUID)"], "Fixed commit": "bcc3de5bc303d87d37745c3a1e6973d82e1feb69", "Url": "https://api.github.com/repos/johnny1024/Pulsometer", "Date": "2017-05-01T14:34:45Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { socket.connect(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5314/buggy-version/app.src.main.java.com.example.jan10.pulsometer.ConnectingActivity.java", "BodyUseAPI": ["android.bluetooth.BluetoothSocket.connect()"], "Fixed commit": "bcc3de5bc303d87d37745c3a1e6973d82e1feb69", "Url": "https://api.github.com/repos/johnny1024/Pulsometer", "Date": "2017-05-01T14:34:45Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { prescriptionList = com.along.android.healthmanagement.entities.Prescription.listAll(com.along.android.healthmanagement.entities.Prescription.class); } catch (android.database.sqlite.SQLiteException e) { prescriptionList = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1276/buggy-version/app.src.main.java.com.along.android.healthmanagement.fragments.CurrentMedicationTabFragment.java", "BodyUseAPI": ["com.along.android.healthmanagement.entities.Prescription.listAll(java.lang.Class)"], "Fixed commit": "4638571303948cd37a0307f488f203cc20f6bbdc", "Url": "https://api.github.com/repos/cqlzx/health-management", "Date": "2017-03-01T19:39:01Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { index = java.lang.Integer.valueOf(index_matcher.group()); } catch (java.lang.IllegalStateException e) { return new seedu.todolist.logic.parser.IncorrectCommand(java.lang.String.format(seedu.todolist.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/739/buggy-version/src.main.java.seedu.todolist.logic.parser.Parser.java", "BodyUseAPI": ["java.util.regex.Matcher.group()", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "b29c199be292fcfd77d3363100ac0d78f6ae95e0", "Url": "https://api.github.com/repos/CS2103AUG2016-T15-C3/main", "Date": "2016-10-27T04:31:34Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.StringBuffer response = request.sendGet(); org.json.simple.parser.JSONParser parser = new org.json.simple.parser.JSONParser(); org.json.simple.JSONObject responseObject = ((org.json.simple.JSONObject) (parser.parse(response.toString()))); org.json.simple.JSONArray submissions = ((org.json.simple.JSONArray) (responseObject.get(\"result\"))); for (java.lang.Object o : submissions) { org.json.simple.JSONObject submission = ((org.json.simple.JSONObject) (o)); java.lang.String verdict = ((java.lang.String) (submission.get(\"verdict\"))); if ((verdict.compareToIgnoreCase(\"ok\")) == 0) { org.json.simple.JSONObject prob = ((org.json.simple.JSONObject) (submission.get(\"problem\"))); java.lang.Long contestId = ((java.lang.Long) (prob.get(\"contestId\"))); java.lang.String problemId = ((contestId.toString()) + \"-\") + ((java.lang.String) (prob.get(\"index\"))); com.koldbyte.codebackup.core.entities.Problem problem = new com.koldbyte.codebackup.plugins.codeforces.core.entities.CodeforcesProblem(problemId, \"\"); java.lang.Long sId = ((java.lang.Long) (submission.get(\"id\"))); java.lang.String submissionId = sId.toString(); java.lang.String submissionUrl; if ((contestId.toString().length()) > 3) { submissionUrl = GYMSUBMISSIONURL.replace(\":c\", contestId.toString()).replace(\":s\", submissionId); }else { submissionUrl = SUBMISSIONURL.replace(\":c\", contestId.toString()).replace(\":s\", submissionId); } java.lang.String time = ((java.lang.Long) (submission.get(\"creationTimeSeconds\"))).toString(); java.lang.String lang = ((java.lang.String) (submission.get(\"programmingLanguage\"))); com.koldbyte.codebackup.core.entities.Submission theSubmission = new com.koldbyte.codebackup.plugins.codeforces.core.entities.CodeforcesSubmission(submissionId, submissionUrl, problem, user); theSubmission.setTimestamp(time); theSubmission.setLanguage(com.koldbyte.codebackup.core.entities.LanguagesEnum.findExtension(lang)); list.add(theSubmission); } } } catch (java.lang.Exception e) { java.lang.System.err.println(((\"codeforces: Error fetching list. \" + \" -> \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/9254/buggy-version/src.com.koldbyte.codebackup.plugins.codeforces.CodeforcesPluginImpl.java", "BodyUseAPI": ["java.lang.StringBuffer.toString()", "java.lang.Long.toString()", "java.lang.String.replace(java.lang.String,java.lang.String)", "org.json.simple.JSONObject.get(java.lang.String)", "org.json.simple.JSONObject.get(java.lang.String)", "org.json.simple.parser.JSONParser.parse(java.lang.String)", "org.json.simple.JSONObject.get(java.lang.String)", "java.lang.String.compareToIgnoreCase(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "org.json.simple.JSONObject.get(java.lang.String)", "java.lang.Long.toString()", "com.koldbyte.codebackup.core.entities.Submission.setTimestamp(java.lang.String)", "org.json.simple.JSONObject.get(java.lang.String)", "com.koldbyte.codebackup.core.entities.LanguagesEnum.findExtension(java.lang.String)", "com.koldbyte.codebackup.core.entities.Submission.setLanguage(com.koldbyte.codebackup.core.entities.LanguagesEnum.findExtension(lang))", "java.lang.Long.toString()", "org.json.simple.JSONObject.get(java.lang.String)", "org.json.simple.JSONObject.get(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.length()", "((java.lang.Long) (submission.get(\"creationTimeSeconds\"))).toString()", "java.lang.String.replace(java.lang.String,java.lang.String)", "org.json.simple.JSONObject.get(java.lang.String)", "java.util.List<com.koldbyte.codebackup.core.entities.Submission>.add(com.koldbyte.codebackup.core.entities.Submission)", "java.lang.Long.toString()", "com.koldbyte.codebackup.utils.HTTPRequest.sendGet()", "java.lang.Long.toString()"], "Fixed commit": "ccd4b2a6c13a9e7db19fccd7d9d077479e099bb7", "Url": "https://api.github.com/repos/koldbyte/CodeBackup", "Date": "2015-05-27T08:16:52Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { thread.join(); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5564/buggy-version/src.i8080.View.MainView.java", "BodyUseAPI": ["java.lang.Thread.join()"], "Fixed commit": "2158a27144a4b0780460e5a9b7bb977dc810ed88", "Url": "https://api.github.com/repos/mozgolom/i8080", "Date": "2017-02-27T06:08:05Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { carId = java.util.UUID.fromString(id); } catch (java.lang.Exception e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6808/buggy-version/src.main.java.net.stormdev.ucars.trade.UTradeListener.java", "BodyUseAPI": ["java.util.UUID.fromString(java.lang.String)"], "Fixed commit": "e9638c973512392e714b1d218a7b209408a6b999", "Url": "https://api.github.com/repos/storm345dev/uCarsTrade", "Date": "2014-05-10T16:32:11Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { zkCoordinateData = org.cloudname.zk.ZkCoordinateData.loadCoordinateData(statusPath, getZooKeeper(), null); } catch (org.cloudname.zk.CloudnameException e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6370/buggy-version/cn.src.main.java.org.cloudname.zk.ZkResolver.java", "BodyUseAPI": ["org.cloudname.zk.ZkResolver.getZooKeeper()", "org.cloudname.zk.ZkCoordinateData.loadCoordinateData(java.lang.String,org.apache.zookeeper.ZooKeeper,<nulltype>)"], "Fixed commit": "36e3ea8f8ec1ecd9074c3740f934ef9f9630ca85", "Url": "https://api.github.com/repos/Cloudname/cloudname", "Date": "2012-05-04T07:08:44Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((java.lang.Integer.parseInt(newValue)) > 65535) hostPort.setText(\"65535\"); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2033/buggy-version/src.main.java.zombienado_beta.launcher.SetupController.java", "BodyUseAPI": ["javafx.scene.control.TextField.setText(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "a71a0a6f4a161890ccfedad39381e1a6e6ac6f11", "Url": "https://api.github.com/repos/gussvens/OO-Project", "Date": "2016-05-29T20:17:46Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((java.lang.Integer.parseInt(newValue)) > 65535) joinPort.setText(\"65535\"); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2033/buggy-version/src.main.java.zombienado_beta.launcher.SetupController.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "javafx.scene.control.TextField.setText(java.lang.String)"], "Fixed commit": "a71a0a6f4a161890ccfedad39381e1a6e6ac6f11", "Url": "https://api.github.com/repos/gussvens/OO-Project", "Date": "2016-05-29T20:17:46Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { d1 = simpleDateFormat.parse(simpleDateFormat.format(cal.getTime())); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1620/buggy-version/app.src.main.java.com.example.anubhav.vacmet.services.VacmetOverlayService.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(java.util.Date)", "java.util.Calendar.getTime()", "java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "11bbc67ee994d1e871236b40855a18929c6aa955", "Url": "https://api.github.com/repos/jay1493/vacmetOrderStatus", "Date": "2017-09-11T17:47:44Z"},
{"Line": "=>654", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { latch.await(); } catch (java.lang.Exception anException) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8354/buggy-version/matrix-sdk.src.main.java.org.matrix.androidsdk.sync.EventsThread.java", "BodyUseAPI": ["java.util.concurrent.CountDownLatch.await()"], "Fixed commit": "0bf63f3aa7c0207dc4e1be198ccf727f51cfa1f7", "Url": "https://api.github.com/repos/matrix-org/matrix-android-sdk", "Date": "2016-01-22T08:31:53Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mUnbinder.unbind(); } catch (java.lang.IllegalStateException e) { timber.log.Timber.tag(com.jess.arms.base.delegate.TAG).w((\"onDestroyView: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2382/buggy-version/arms.src.main.java.com.jess.arms.base.delegate.FragmentDelegateImpl.java", "BodyUseAPI": ["butterknife.Unbinder.unbind()"], "Fixed commit": "374d30f9547cfc4d8f7e74f090ea16db4f2d450e", "Url": "https://api.github.com/repos/PATHobailong24/MVPArms", "Date": "2017-05-03T09:39:17Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { experiments.Fairness.side_a.single_op_and_partner(); } catch (java.lang.Exception _ex) { _ex.printStackTrace(); assert false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/8076/buggy-version/src.experiments.pronghorn.src.Fairness.java", "BodyUseAPI": ["single_host.JavaPronghornInstance.PronghornInstance.single_op_and_partner()"], "Fixed commit": "da759b913a821346047ae552a4a00cb88e62e744", "Url": "https://api.github.com/repos/bmistree/pronghorn", "Date": "2014-01-25T21:37:09Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (codeOrCode.contains(\"_\")) { schema = getSchemaWithCompleteCode(codeOrCode); }else { schema = getSchemaWithLocalCode(codeOrCode); } } catch (com.constellio.model.entities.schemas.MetadataSchemasRuntimeException.NoSuchSchema e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1889/buggy-version/model.src.com.constellio.model.entities.schemas.MetadataSchemaType.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "com.constellio.model.entities.schemas.MetadataSchemaType.getSchemaWithLocalCode(java.lang.String)", "com.constellio.model.entities.schemas.MetadataSchemaType.getSchemaWithCompleteCode(java.lang.String)"], "Fixed commit": "d9a9fb1a60beb9bfcfa40a052f79cd808f7d9564", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2016-11-22T22:41:18Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { doDetector(); } catch (java.lang.Exception e) { com.github.Kraken3.AFKPGC.AFKPGC.debug(\"Encountered an error during Detector invocation: \", e); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/1139/buggy-version/src.com.github.Kraken3.AFKPGC.BotDetector.java", "BodyUseAPI": ["com.github.Kraken3.AFKPGC.BotDetector.doDetector()"], "Fixed commit": "550cc9641e31ffe4bc3503b6a680b684c17c57b5", "Url": "https://api.github.com/repos/Maxopoly/AFK-Player-GC", "Date": "2015-08-06T02:33:45Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { c4.playPiece(kb.nextInt()); } catch (java.lang.Exception e) { java.lang.System.out.println(\"It appears you have not entered a integer.\"); kb.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/252/buggy-version/Connect4.src.MyGame.java", "BodyUseAPI": ["java.util.Scanner.nextInt()", "C4.playPiece(int)"], "Fixed commit": "d007532692ab369411aadec1250650edcf8d2430", "Url": "https://api.github.com/repos/thomaspcole/Program2", "Date": "2016-02-18T18:02:04Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { imageView.setImageBitmap(bitmaps.get(position)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/6651/buggy-version/app.src.br.edu.ufcg.les142.LazyAdapter.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(bitmaps.get(position))", "java.util.List<android.graphics.Bitmap>.get(int)"], "Fixed commit": "8d494f286d9b5c97a578fc6e910ea86236e1df83", "Url": "https://api.github.com/repos/joopeed/arrumae", "Date": "2015-02-11T01:12:59Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { State.x.setCurrentEditor(((com.cssquids.trimtext.Editor) (State.x.tabs.getCurrentTab().getContent()))); } catch (java.lang.ClassCastException e) { State.x.setCurrentEditor(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2752/buggy-version/src.com.cssquids.trimtext.Main.java", "BodyUseAPI": ["State.x.tabs.getCurrentTab()", "State.x.setCurrentEditor(((com.cssquids.trimtext.Editor) (State.x.tabs.getCurrentTab().getContent())))", "State.x.tabs.getCurrentTab().getContent()"], "Fixed commit": "c369a6441426b01bc9db8807922e06f5f328f5d2", "Url": "https://api.github.com/repos/bluegoo192/trimtext", "Date": "2017-03-17T00:53:23Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { place = service.getPlaceDetails(placeId, lang); } catch (java.lang.Exception e) { LOGGER.error(\"placeId: {} has problem!!! }\", placeId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2493/buggy-version/src.main.java.develop.odata.etl.services.googleplaces.jobs.DailyJob.java", "BodyUseAPI": ["develop.odata.etl.services.googleplaces.PlaceService.getPlaceDetails(java.lang.String,java.lang.String)"], "Fixed commit": "a1a243d3774edacb5c15121ba63d56d2d35f20dd", "Url": "https://api.github.com/repos/robert0714/GooglePlaceMongo", "Date": "2017-11-27T05:43:59Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { if ((alloc.direction) == (ADirection.IN)) return new java.awt.Color(((255 * (alloc.bandwidth)) / (portCap)), 0, 0); else if ((alloc.direction) == (ADirection.OUT)) return new java.awt.Color(0, 0, ((255 * (alloc.bandwidth)) / (portCap))); else return new java.awt.Color(0, ((255 * (alloc.bandwidth)) / (portCap)), 0); } catch (java.lang.Exception e) { e.printStackTrace(); return java.awt.Color.blue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/345/buggy-version/src.main.java.net.floodlightcontroller.datacentermarketing.Scheduling.Queue.java", "BodyUseAPI": [], "Fixed commit": "75d569cafa470c0a5ead18c31870cd58dcafd77d", "Url": "https://api.github.com/repos/Aliced3645/DataCenterMarketing", "Date": "2013-04-29T20:01:51Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { is.close(); } catch (java.io.IOException e1) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/2517/buggy-version/de.bund.bfr.knime.openkrise.db.src.de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.BackTraceImporter.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "dfaa5e37cd41ebd25516bcba6e81e7c42d440895", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2015-05-05T10:58:07Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { render = android.graphics.Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_8888); } catch (java.lang.IllegalArgumentException e) { e.printStackTrace(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/5888/buggy-version/android-pdf-viewer.src.main.java.com.github.barteksc.pdfviewer.RenderingAsyncTask.java", "BodyUseAPI": ["android.graphics.Bitmap.createBitmap(int,int,Bitmap.Config.ARGB_8888)"], "Fixed commit": "45e7783c145fea643b0517324030480902332598", "Url": "https://api.github.com/repos/isanwenyu/AndroidPdfViewer", "Date": "2016-10-26T03:57:25Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { rescued.set(f.apply(throwable)); } catch (java.lang.Exception e) { rescued.setException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/3733/buggy-version/src.main.java.org.github.codefarmer.spring.promises.Promise.java", "BodyUseAPI": ["org.github.codefarmer.spring.promises.Promise<A>.set(A)", "java.util.function.Function<java.lang.Throwable, A>.apply(java.lang.Throwable)"], "Fixed commit": "50eb469beee01f238879a268d8117ef054014959", "Url": "https://api.github.com/repos/CodeFarmer/spring-promises", "Date": "2015-11-26T15:04:13Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.connectionCatalogEntryLock.remove(client.getSessionId()); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V47/7856/buggy-version/socketio.src.main.java.com.rc.transporter.socketio.SocketIoTransportSession.java", "BodyUseAPI": ["com.corundumstudio.socketio.SocketIOClient.getSessionId()", "java.util.concurrent.ConcurrentHashMap<java.util.UUID, com.sun.corba.se.impl.orbutil.concurrent.Mutex>.remove(client.getSessionId())"], "Fixed commit": "6c0545ffeb0e8600715e0bba3d364257e91013ca", "Url": "https://api.github.com/repos/RainingClouds/transporter", "Date": "2014-01-15T16:32:50Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dlg.getListView().setFastScrollEnabled(true); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8373/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivityLayers.java", "BodyUseAPI": ["android.app.AlertDialog.getListView()", "dlg.getListView().setFastScrollEnabled(boolean)"], "Fixed commit": "30555054697f1de14e078b1fed421558485a02c8", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2012-09-09T21:50:24Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { simulation.run(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4359/buggy-version/Gallhp.Gallhp.GallhpView.java", "BodyUseAPI": ["lib.ISimulation.run()"], "Fixed commit": "523eacd9527bfb2e975ae0ecf8836067830d7697", "Url": "https://api.github.com/repos/gooftroop/CS6130P1", "Date": "2014-09-19T02:52:35Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cpw.mods.fml.common.registry.GameRegistry.addRecipe(new net.minecraft.item.ItemStack(com.turkey.turkeyUtil.Items.food.UtilFood.lime, 1), \"AAA\", \"AAA\", \"AAA\", 'A', new net.minecraft.item.ItemStack(com.cricketcraft.chisel.init.ChiselBlocks.limestone, 1)); } catch (java.lang.NoClassDefFoundError e) { TurkeyUtil.logger.log(Level.WARN, \"Unable to load Chisel 2 mod hook!!!! You may have the wrong chisel mod or something has just gone wrong!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7390/buggy-version/src.main.java.com.turkey.turkeyUtil.Hookins.ChiselModHook.java", "BodyUseAPI": ["cpw.mods.fml.common.registry.GameRegistry.addRecipe(net.minecraft.item.ItemStack,java.lang.String,java.lang.String,java.lang.String,char,net.minecraft.item.ItemStack)"], "Fixed commit": "ca4cd10fb50265082c1cd8a68c7ba3c64ae9bb90", "Url": "https://api.github.com/repos/Turkey2349/TurkeyUtil", "Date": "2015-05-04T23:25:59Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { buf = net.minecraft.block.Block.class.getDeclaredMethod(\"func_149644_j\", int.class); buf.setAccessible(true); } catch (java.lang.Exception e1) { try { buf = net.minecraft.block.Block.class.getDeclaredMethod(\"func_71880_c_\", int.class); buf.setAccessible(true); } catch (java.lang.Exception e2) { try { buf = net.minecraft.block.Block.class.getDeclaredMethod(\"createStackedBlock\", int.class); buf.setAccessible(true); } catch (java.lang.Exception e3) { e1.printStackTrace(); e2.printStackTrace(); e3.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8480/buggy-version/src.main.java.com.yogpc.qp.TileBasic.java", "BodyUseAPI": ["java.lang.reflect.Method.setAccessible(boolean)", "java.lang.Class.getDeclaredMethod(java.lang.String,java.lang.Class)"], "Fixed commit": "1bb04ba6104789f050319d910552d1e82661dc09", "Url": "https://api.github.com/repos/yogpstop/QuarryPlus", "Date": "2014-07-09T13:50:47Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new hftl.dwi.se.fridgeapp.util.ApiConnector().execute(new hftl.dwi.se.fridgeapp.util.User(\"abc\", \"abc\")); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7906/buggy-version/client.app.src.main.java.hftl.dwi.se.fridgeapp.Activities.MainActivity.java", "BodyUseAPI": ["hftl.dwi.se.fridgeapp.util.ApiConnector.execute(hftl.dwi.se.fridgeapp.util.User)"], "Fixed commit": "8b03319fe38d4f8b838c340476811d445e99ffe7", "Url": "https://api.github.com/repos/Explie/FridgeApp", "Date": "2015-11-10T19:23:14Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cn.abcdsxg.app.appJump.Data.Utils.SuUtils.startApp(mApplication, appInfo.getPkgName(), appInfo.getClsName(), appInfo.getExtra()); } catch (java.lang.Exception e) { showToast(getString(R.string.DoesnotExitError)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2460/buggy-version/app.src.main.java.cn.abcdsxg.app.appJump.Fragment.GridViewFragment.java", "BodyUseAPI": ["cn.abcdsxg.app.appJump.Data.greenDao.AppInfo.getPkgName()", "cn.abcdsxg.app.appJump.Data.greenDao.AppInfo.getExtra()", "cn.abcdsxg.app.appJump.Data.Utils.SuUtils.startApp(cn.abcdsxg.app.appJump.Fragment.GridViewFragment,appInfo.getPkgName(),appInfo.getClsName(),appInfo.getExtra())", "cn.abcdsxg.app.appJump.Data.greenDao.AppInfo.getClsName()"], "Fixed commit": "eceaeb9372eac6175f3c34701e8245856fd1f63f", "Url": "https://api.github.com/repos/abcdsxg/appJump", "Date": "2016-09-25T05:32:15Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cn.abcdsxg.app.appJump.Data.Utils.SuUtils.startApp(this, appInfo.getPkgName(), appInfo.getClsName(), appInfo.getExtra()); } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, getString(R.string.DoesnotExitError), Toast.LENGTH_SHORT).show(); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2460/buggy-version/app.src.main.java.cn.abcdsxg.app.appJump.Activity.ShortCutActivity.java", "BodyUseAPI": ["cn.abcdsxg.app.appJump.Data.greenDao.AppInfo.getExtra()", "cn.abcdsxg.app.appJump.Data.greenDao.AppInfo.getClsName()", "cn.abcdsxg.app.appJump.Data.greenDao.AppInfo.getPkgName()", "cn.abcdsxg.app.appJump.Data.Utils.SuUtils.startApp(cn.abcdsxg.app.appJump.Activity.ShortCutActivity,appInfo.getPkgName(),appInfo.getClsName(),appInfo.getExtra())"], "Fixed commit": "eceaeb9372eac6175f3c34701e8245856fd1f63f", "Url": "https://api.github.com/repos/abcdsxg/appJump", "Date": "2016-09-25T05:32:15Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.StringTokenizer tokens = new java.util.StringTokenizer(date.getText().toString(), \"/\"); int day = java.lang.Integer.valueOf(tokens.nextToken()); int month = (java.lang.Integer.valueOf(tokens.nextToken())) - 1; int year = java.lang.Integer.valueOf(tokens.nextToken()); new android.app.DatePickerDialog(this, dateDiag, year, month, day).show(); } catch (java.lang.NumberFormatException e) { new android.app.DatePickerDialog(this, dateDiag, myCalendar.get(java.util.Calendar.YEAR), myCalendar.get(java.util.Calendar.MONTH), myCalendar.get(java.util.Calendar.DAY_OF_MONTH)).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5746/buggy-version/homeBank4Android.src.main.java.com.fowlcorp.homebank4android.DetailedCardActivity.java", "BodyUseAPI": ["java.util.StringTokenizer.nextToken()", "java.lang.Integer.valueOf(java.lang.String)", "java.util.StringTokenizer.nextToken()", "java.lang.Integer.valueOf(java.lang.String)", "java.util.StringTokenizer.nextToken()", "android.app.DatePickerDialog.show()", "android.widget.EditText.getText()", "date.getText().toString()", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "d1bcf0c2239c17b1cdb2be5c3048991302a95877", "Url": "https://api.github.com/repos/FowlCorporation/HomeBank4Android", "Date": "2015-01-21T18:48:30Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.StringTokenizer tokens = new java.util.StringTokenizer(date.getText().toString(), \"/\"); int day = java.lang.Integer.valueOf(tokens.nextToken()); int month = (java.lang.Integer.valueOf(tokens.nextToken())) - 1; int year = java.lang.Integer.valueOf(tokens.nextToken()); new android.app.DatePickerDialog(this, dateDiag, year, month, day).show(); } catch (java.lang.NumberFormatException e) { new android.app.DatePickerDialog(this, dateDiag, myCalendar.get(java.util.Calendar.YEAR), myCalendar.get(java.util.Calendar.MONTH), myCalendar.get(java.util.Calendar.DAY_OF_MONTH)).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5746/buggy-version/homeBank4Android.src.main.java.com.fowlcorp.homebank4android.DetailedCardActivity.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)", "java.util.StringTokenizer.nextToken()", "android.widget.EditText.getText()", "date.getText().toString()", "java.util.StringTokenizer.nextToken()", "java.util.StringTokenizer.nextToken()", "android.app.DatePickerDialog.show()"], "Fixed commit": "d1bcf0c2239c17b1cdb2be5c3048991302a95877", "Url": "https://api.github.com/repos/FowlCorporation/HomeBank4Android", "Date": "2015-01-21T18:48:30Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((this.m_dh) != null) try { this.m_dh.disconnect(); } catch (java.sql.SQLException ex) { } this.m_dh.connect(); java.lang.String value = this.m_dh.getI18nEntry(namespace, parameter, identifier, language); if ((value != null) && ((value.length()) == 0)) { value = this.m_dh.getI18nEntry(namespace, parameter, identifier, this.m_configuration.getProperty(this.CONFIG_LANG)); } return value == null ? parameter : value; } catch (java.sql.SQLException ex) { this.m_logger.log(java.util.logging.Level.SEVERE, ex.getMessage(), ex); } catch (java.lang.ClassNotFoundException ex) { this.m_logger.log(java.util.logging.Level.SEVERE, ex.getMessage(), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5401/buggy-version/kernel.core.src.core.de.janrufmonitor.framework.i18n.DatabaseI18nManager.java", "BodyUseAPI": ["de.janrufmonitor.framework.i18n.DatabaseI18nManager.I18nDatabaseHandler.connect()", "de.janrufmonitor.framework.i18n.DatabaseI18nManager.I18nDatabaseHandler.getI18nEntry(java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "java.lang.String.length()", "de.janrufmonitor.framework.i18n.DatabaseI18nManager.I18nDatabaseHandler.getI18nEntry(java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "java.util.Properties.getProperty(java.lang.String)", "de.janrufmonitor.framework.i18n.DatabaseI18nManager.I18nDatabaseHandler.disconnect()"], "Fixed commit": "5100d3c4b67bc2de0f9049141a63608960d7e74e", "Url": "https://api.github.com/repos/tbrandt77/janrufmonitor", "Date": "2013-05-29T16:12:47Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { java.sql.Statement st = m_con.createStatement(); st.execute(\"SHUTDOWN\"); } finally { super.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5401/buggy-version/kernel.core.src.core.de.janrufmonitor.framework.i18n.DatabaseI18nManager.java", "BodyUseAPI": ["java.sql.Statement.execute(java.lang.String)", "de.janrufmonitor.framework.i18n.DatabaseI18nManager.I18nDatabaseHandler.createStatement()"], "Fixed commit": "5100d3c4b67bc2de0f9049141a63608960d7e74e", "Url": "https://api.github.com/repos/tbrandt77/janrufmonitor", "Date": "2013-05-29T16:12:47Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { callerFlowNodeInstance = flowNodeInstanceService.getFlowNodeInstance(processInstance.getCallerId()); } catch (org.bonitasoft.engine.core.process.instance.api.exceptions.SFlowNodeNotFoundException e) { throw new org.bonitasoft.engine.commons.exceptions.SObjectNotFoundException(e); } catch (org.bonitasoft.engine.core.process.instance.api.exceptions.SFlowNodeReadException e) { throw new org.bonitasoft.engine.commons.exceptions.SObjectReadException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2704/buggy-version/bpm.bonita-core.bonita-process-engine.src.main.java.org.bonitasoft.engine.data.ParentContainerResolverImpl.java", "BodyUseAPI": ["org.bonitasoft.engine.core.process.instance.model.SProcessInstance.getCallerId()", "org.bonitasoft.engine.core.process.instance.api.FlowNodeInstanceService.getFlowNodeInstance(processInstance.getCallerId())"], "Fixed commit": "c7c63c8a19c573c02f4725ded5be5c12339919c6", "Url": "https://api.github.com/repos/bonitasoft/bonita-engine", "Date": "2014-12-29T14:19:42Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { c = new java.awt.Color(r, g, b, a); } catch (java.lang.IllegalArgumentException iae) { java.lang.System.out.println(java.lang.String.format(\"%d %d %d\", r, g, b, a)); frame.getInputField().setText(\"ERROR\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4084/buggy-version/src.alotoc.logic.PrefMouseListener.java", "BodyUseAPI": [], "Fixed commit": "83a629cd32ea7acfe75e8dabe69fe765421b8a1f", "Url": "https://api.github.com/repos/Kazeheki/Alotoc", "Date": "2016-07-27T20:11:55Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { header = this.getHeader(node); } catch (java.lang.Exception e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1658/buggy-version/src.main.java.edu.mayo.cts2.framework.plugin.service.bioportal.transform.ResolvedValueSetTransform.java", "BodyUseAPI": ["edu.mayo.cts2.framework.plugin.service.bioportal.transform.ResolvedValueSetTransform.getHeader(org.w3c.dom.Node)"], "Fixed commit": "c9100be18fa82fe5aa08eb949cd8cc6aa11be10f", "Url": "https://api.github.com/repos/cts2/bioportal-service", "Date": "2012-07-16T18:23:42Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startActivity(intent); } catch (java.lang.Exception e) { e.printStackTrace(); me.wcy.music.utils.ToastUtils.show(R.string.device_not_support); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/33/buggy-version/app.src.main.java.me.wcy.music.activity.SettingActivity.java", "BodyUseAPI": ["me.wcy.music.activity.SettingActivity.SettingFragment.startActivity(android.content.Intent)"], "Fixed commit": "c62d7dc75f7bea7dc9f12cac1f967e3754a38075", "Url": "https://api.github.com/repos/wangchenyan/PonyMusic", "Date": "2016-01-17T07:08:39Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { connection = connectionFactory.newConnection(); } catch (java.lang.Exception e) { io.druid.segment.realtime.firehose.RabbitMQFirehoseFactory.log.error(\"Unable to find a RabbitMQ broker. Are you sure you have one running?\"); throw com.google.api.client.repackaged.com.google.common.base.Throwables.propagate(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6585/buggy-version/realtime.src.main.java.io.druid.segment.realtime.firehose.RabbitMQFirehoseFactory.java", "BodyUseAPI": ["com.rabbitmq.client.ConnectionFactory.newConnection()"], "Fixed commit": "bf157ea8ef507a67e7ce6e3636f50c28f075791c", "Url": "https://api.github.com/repos/AsherBond/druid", "Date": "2013-10-03T17:54:25Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { nfcAdapter.enableForegroundDispatch(getActivity(), getPendingIntent(), getIntentFilters(), getTechLists()); if ((p2pMessage) != null) { nfcAdapter.setNdefPushMessage(p2pMessage, getActivity()); } } catch (java.lang.IllegalStateException e) { android.util.Log.w(com.chariotsolutions.nfc.plugin.NfcPlugin.TAG, \"Illegal State Exception starting NFC. Assuming application is terminating.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2442/buggy-version/platforms.android.src.com.chariotsolutions.nfc.plugin.NfcPlugin.java", "BodyUseAPI": ["com.chariotsolutions.nfc.plugin.NfcAdapter.enableForegroundDispatch(android.app.Activity,android.app.PendingIntent,android.content.IntentFilter[],java.lang.String[][])", "com.chariotsolutions.nfc.plugin.NfcPlugin.2.getActivity()", "com.chariotsolutions.nfc.plugin.NfcPlugin.2.getIntentFilters()", "com.chariotsolutions.nfc.plugin.NfcPlugin.2.getActivity()", "com.chariotsolutions.nfc.plugin.NfcPlugin.2.getTechLists()", "com.chariotsolutions.nfc.plugin.NfcAdapter.setNdefPushMessage(com.chariotsolutions.nfc.plugin.NdefMessage,android.app.Activity)", "com.chariotsolutions.nfc.plugin.NfcPlugin.2.getPendingIntent()"], "Fixed commit": "705c1233161233029134d6088afc5f84608c31e9", "Url": "https://api.github.com/repos/mclear/NFC_Ring_Control", "Date": "2014-01-21T17:30:52Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { nfcAdapter.enableForegroundDispatch(getActivity(), getPendingIntent(), getIntentFilters(), getTechLists()); if ((p2pMessage) != null) { nfcAdapter.setNdefPushMessage(p2pMessage, getActivity()); } } catch (java.lang.IllegalStateException e) { android.util.Log.w(com.chariotsolutions.nfc.plugin.NfcPlugin.TAG, \"Illegal State Exception starting NFC. Assuming application is terminating.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2442/buggy-version/plugins.com.chariotsolutions.nfc.plugin.src.android.src.com.chariotsolutions.nfc.plugin.NfcPlugin.java", "BodyUseAPI": ["com.chariotsolutions.nfc.plugin.NfcPlugin.2.getIntentFilters()", "com.chariotsolutions.nfc.plugin.NfcAdapter.enableForegroundDispatch(android.app.Activity,android.app.PendingIntent,android.content.IntentFilter[],java.lang.String[][])", "com.chariotsolutions.nfc.plugin.NfcPlugin.2.getActivity()", "com.chariotsolutions.nfc.plugin.NfcPlugin.2.getActivity()", "com.chariotsolutions.nfc.plugin.NfcPlugin.2.getPendingIntent()", "com.chariotsolutions.nfc.plugin.NfcPlugin.2.getTechLists()", "com.chariotsolutions.nfc.plugin.NfcAdapter.setNdefPushMessage(com.chariotsolutions.nfc.plugin.NdefMessage,android.app.Activity)"], "Fixed commit": "705c1233161233029134d6088afc5f84608c31e9", "Url": "https://api.github.com/repos/mclear/NFC_Ring_Control", "Date": "2014-01-21T17:30:52Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { organizationCategoryRepo.remove(organizationCategory); simpMessagingTemplate.convertAndSend(\"/channel/settings/organization-category\", new edu.tamu.framework.model.ApiResponse(edu.tamu.framework.enums.ApiResponseType.SUCCESS, getAll())); } catch (org.springframework.dao.DataIntegrityViolationException e) { modelBindingResult.addError(new org.springframework.validation.ObjectError(\"organizationCategory\", ((\"Could not remove organization category \" + (organizationCategory.getName())) + \", it's being used!\"))); response = validationService.buildResponse(modelBindingResult); logger.error((((\"Couldn't remove organization category \" + (organizationCategory.getName())) + \" because: \") + (e.getLocalizedMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2286/buggy-version/src.main.java.org.tdl.vireo.controller.OrganizationCategoryController.java", "BodyUseAPI": ["org.tdl.vireo.controller.OrganizationCategoryController.getAll()", "org.springframework.messaging.simp.SimpMessagingTemplate.convertAndSend(java.lang.String,edu.tamu.framework.model.ApiResponse)", "org.tdl.vireo.model.repo.OrganizationCategoryRepo.remove(org.tdl.vireo.model.OrganizationCategory)"], "Fixed commit": "2f8107e268b217003d6b210bffc9752b3fc9643d", "Url": "https://api.github.com/repos/TexasDigitalLibrary/Vireo", "Date": "2016-05-10T21:17:53Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return ((com.ai.paas.ipaas.rds.dao.mapper.bo.RdsIncBase) (super.clone())); } catch (java.lang.CloneNotSupportedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5396/buggy-version/iPaaS-RDS-X.src.main.java.com.ai.paas.ipaas.rds.dao.mapper.bo.RdsIncBase.java", "BodyUseAPI": ["java.lang.Object.clone()"], "Fixed commit": "2416817e19bbcc22a704e876e6c344d181101e09", "Url": "https://api.github.com/repos/AIPaaS/service-mgmt-backend", "Date": "2016-08-03T10:37:24Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { wallet.cleanup(); } catch (java.lang.IllegalStateException x) { if (x.getMessage().contains(\"Inconsistent spent tx:\")) { java.io.File blockChainFile = new java.io.File(getDir(\"blockstore\", Context.MODE_PRIVATE), Constants.Files.BLOCKCHAIN_FILENAME); blockChainFile.delete(); }else throw x; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4917/buggy-version/wallet.src.de.schildbach.wallet.WalletApplication.java", "BodyUseAPI": ["org.bitcoinj.wallet.Wallet.cleanup()"], "Fixed commit": "c73b5e82fd3a4e23ec0a5ce80c18b44187c76080", "Url": "https://api.github.com/repos/HashEngineering/dash-wallet", "Date": "2017-08-09T04:18:35Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { javax.imageio.ImageIO.read(getClass().getResource(((\"/\" + (icy.resource.ResourceUtil.IMAGE_PATH)) + \"logo.png\"))); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5867/buggy-version/icy.main.Icy.java", "BodyUseAPI": ["icy.main.Icy.1.getClass()", "java.lang.Class<? extends icy.main.Icy.1>.getResource(((\"/\" + (icy.resource.ResourceUtil.IMAGE_PATH)) + \"logo.png\"))", "javax.imageio.ImageIO.read(java.net.URL)"], "Fixed commit": "e6bee52298214e38de8147b751141ccc129fbd0e", "Url": "https://api.github.com/repos/Icy-imaging/Icy-Kernel", "Date": "2016-04-14T17:23:58Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.ichi2.themes.Themes.setStyledDialogBackgrounds(layout, numberOfButtons, brightViewBackground); } catch (java.lang.OutOfMemoryError e) { android.util.Log.e(AnkiDroidApp.TAG, (\"StyledDialog - Dialog could not be created: \" + e)); com.ichi2.themes.Themes.showThemedToast(context, context.getResources().getString(R.string.error_insufficient_memory), false); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2230/buggy-version/src.com.ichi2.themes.StyledDialog.java", "BodyUseAPI": ["com.ichi2.themes.Themes.setStyledDialogBackgrounds(android.view.View,int,boolean)"], "Fixed commit": "4cc80fbe72a43f234fb4e231c8b2bca4bb57c254", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2011-10-14T16:59:36Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((getClassName()) == null) { final javax.lang.model.element.TypeElement element = resolver.getTypeElement(mMirror); if (element == null) { setupType(\"\", mMirror.toString()); }else { final java.lang.String className = com.github.wrdlbrnft.codebuilder.util.Utils.getClassName(element); final java.lang.String packageName = com.github.wrdlbrnft.codebuilder.util.Utils.getPackageName(element); setupType(packageName, className); } } super.resolve(resolver, generator); } catch (java.lang.Exception e) { e.printStackTrace(); setupType(\"\", \"FAILED_TO_RESOLVE\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4580/buggy-version/CodeBuilder.src.main.java.com.github.wrdlbrnft.codebuilder.types.TypeMirrorImpl.java", "BodyUseAPI": ["com.github.wrdlbrnft.codebuilder.types.AbsTypeImpl.resolve(com.github.wrdlbrnft.codebuilder.code.Resolver,com.github.wrdlbrnft.codebuilder.code.NameGenerator)", "com.github.wrdlbrnft.codebuilder.types.TypeMirrorImpl.setupType(java.lang.String,java.lang.String)", "com.github.wrdlbrnft.codebuilder.util.Utils.getPackageName(javax.lang.model.element.TypeElement)", "javax.lang.model.type.TypeMirror.toString()", "com.github.wrdlbrnft.codebuilder.util.Utils.getClassName(javax.lang.model.element.TypeElement)", "com.github.wrdlbrnft.codebuilder.types.TypeMirrorImpl.getClassName()", "com.github.wrdlbrnft.codebuilder.types.TypeMirrorImpl.setupType(java.lang.String,java.lang.String)", "com.github.wrdlbrnft.codebuilder.code.Resolver.getTypeElement(javax.lang.model.type.TypeMirror)"], "Fixed commit": "637ab8945e94cfc618808e0706d3805bb7041397", "Url": "https://api.github.com/repos/Wrdlbrnft/CodeBuilder", "Date": "2017-02-09T22:58:47Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { r.execute(); } catch (java.lang.Exception e) { org.parabot.core.ui.Logger.addMessage(((\"Random failed: '\" + (r.getName())) + \"'\"), false); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/37/buggy-version/src.main.java.org.parabot.environment.randoms.RandomHandler.java", "BodyUseAPI": ["org.parabot.environment.randoms.Random.execute()"], "Fixed commit": "53667fa1f950ea16e1ea3bed6d4388665feec448", "Url": "https://api.github.com/repos/Parabot/Parabot", "Date": "2017-02-02T23:08:33Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return (java.lang.Integer.parseInt(o1.number)) - (java.lang.Integer.parseInt(o2.number)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4830/buggy-version/app.src.main.java.com.twm.pt.softball.softballlist.Manager.PlayerDataManager.java", "BodyUseAPI": ["java.lang.Integer.parseInt(o2.number)", "java.lang.Integer.parseInt(o1.number)"], "Fixed commit": "fd0932e968190be737f415b0328b5e8d4a3f5366", "Url": "https://api.github.com/repos/Tangwen/SoftBallList", "Date": "2015-05-26T04:29:19Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(((org.bukkit.craftbukkit.CraftServer) (getServer())).getReader().getTerminal().isAnsiSupported())) { if (this.use_color_codes) { fr.areku.tlmd.Main.log(java.util.logging.Level.WARNING, \"Color codes may not be supported by your system\"); } } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4457/buggy-version/src.fr.areku.tlmd.Main.java", "BodyUseAPI": ["((org.bukkit.craftbukkit.CraftServer) (getServer())).getReader()", "fr.areku.tlmd.Main.log(java.util.logging.Level,java.lang.String)", "((org.bukkit.craftbukkit.CraftServer) (getServer())).getReader().getTerminal()", "fr.areku.tlmd.Main.getServer()", "((org.bukkit.craftbukkit.CraftServer) (getServer())).getReader().getTerminal().isAnsiSupported()"], "Fixed commit": "bf3c68218ad54682eac84c50ff6050629c6d1692", "Url": "https://api.github.com/repos/ThisIsAreku/ThisLogMustDie", "Date": "2012-08-31T22:12:57Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return new com.jcabi.xml.XMLDocument(org.apache.commons.io.FileUtils.readFileToString(new java.io.File(this.name), Charsets.UTF_8)); } finally { this.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6366/buggy-version/src.main.java.com.jcabi.github.mock.MkStorage.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.readFileToString(java.io.File,Charsets.UTF_8)"], "Fixed commit": "3c5d8ec4daf38f08d74174286c82b7000e941f50", "Url": "https://api.github.com/repos/leusonmario/jcabi-github", "Date": "2014-05-01T14:18:17Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rs = stmt.executeQuery(sql); while (rs.next()) { } } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1145/buggy-version/src.Ubook.User.java", "BodyUseAPI": ["java.sql.Statement.executeQuery(java.lang.String)", "java.sql.ResultSet.next()"], "Fixed commit": "09df4c5824f613a930a199de7bb751a3a0c0397b", "Url": "https://api.github.com/repos/RyanJST/Ubook", "Date": "2017-03-24T03:28:50Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { muc.sendMessage(msg); } catch (java.lang.Exception e) { log.warning(\"Error sending MUC message\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2769/buggy-version/src.com.pleaseignore.BukkitXMPP.BukkitXMPP.java", "BodyUseAPI": ["org.jivesoftware.smackx.muc.MultiUserChat.sendMessage(java.lang.String)"], "Fixed commit": "61069546dcaf15b2cfddd1d3bf9052e7b5665d30", "Url": "https://api.github.com/repos/nikdoof/bukkitxmpp", "Date": "2011-05-06T10:45:47Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { condition = (mChatService.getState()) != (BluetoothChatService.STATE_CONNECTED); } catch (java.lang.NullPointerException e) { android.widget.Toast.makeText(getContext(), \"Error: please try again\", Toast.LENGTH_SHORT).show(); setupChat(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/225/buggy-version/app.src.main.java.com.ded.smacktalker.BluetoothChatFragment.java", "BodyUseAPI": ["com.ded.smacktalker.BluetoothChatService.getState()"], "Fixed commit": "55810a2797e9336e90580ed11a8c82aec1b75735", "Url": "https://api.github.com/repos/DrakeMorin/SmackTalker", "Date": "2016-06-14T12:21:24Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { urlEncoded = java.net.URLEncoder.encode(request.getUrl(), \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1002/buggy-version/chubot-spider.src.main.java.cmri.etl.downloader.HttpClientDownloader.java", "BodyUseAPI": ["cmri.etl.common.Request.getUrl()", "java.net.URLEncoder.encode(request.getUrl(),java.lang.String)"], "Fixed commit": "4ad67cc06448865639877423d04ea8a805c6051f", "Url": "https://api.github.com/repos/chookin/chubot", "Date": "2016-05-09T04:08:17Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tap.prepare(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/9232/buggy-version/PasstheBomb.app.src.main.java.ch.ethz.inf.vs.gruntzp.passthebomb.gamelogic.AudioService.java", "BodyUseAPI": ["android.media.MediaPlayer.prepare()"], "Fixed commit": "fe123924013224b1b0fc71f78c9beeeb06e3d2a7", "Url": "https://api.github.com/repos/pege/Pass-the-Bomb", "Date": "2016-12-17T17:31:01Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { oldData = get(hash); } finally { lock.readLock().unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3714/buggy-version/DND.src.edu.teco.dnd.util.HashStorage.java", "BodyUseAPI": ["edu.teco.dnd.util.HashStorage<T>.get(edu.teco.dnd.util.Hash)"], "Fixed commit": "cc1b239a684f575bbff892436b8e9be9ccf64475", "Url": "https://api.github.com/repos/DesignAndDeploy/dnd", "Date": "2014-01-20T19:31:54Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return productDAO.countLongByColumnNameWithIntValue(); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5581/buggy-version/src.com.spring.mvc.service.ProductService.java", "BodyUseAPI": ["com.spring.mvc.dao.ProductDAO.countLongByColumnNameWithIntValue()"], "Fixed commit": "414498b520239c1d2c8108902f05fa1746959ad2", "Url": "https://api.github.com/repos/iCONEXT/BookStore", "Date": "2016-03-04T06:44:53Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return handleQuerySqlResult(ps.getResultSet()); } catch (java.sql.SQLException e) { throw new com.greenbean.poplar.sqlla.SqllarException(((((logPrefix()) + \"handle query sql [\") + psSql) + \"]'s result failed\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6021/buggy-version/src.main.java.com.greenbean.poplar.sqlla.ApiMethod.java", "BodyUseAPI": ["com.greenbean.poplar.sqlla.ApiMethod.handleQuerySqlResult(java.sql.ResultSet)", "java.sql.PreparedStatement.getResultSet()"], "Fixed commit": "420b990eaf8232cd7cdc9c0926d7ec670409cf27", "Url": "https://api.github.com/repos/PathogenABC/sqlla", "Date": "2017-10-24T08:14:28Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return handleUpdatableSqlResult(updateCount); } catch (java.lang.Exception e) { throw new com.greenbean.poplar.sqlla.SqllarException(((((logPrefix()) + \"handle update sql [\") + psSql) + \"]'s result failed\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6021/buggy-version/src.main.java.com.greenbean.poplar.sqlla.ApiMethod.java", "BodyUseAPI": ["com.greenbean.poplar.sqlla.ApiMethod.handleUpdatableSqlResult(int)"], "Fixed commit": "420b990eaf8232cd7cdc9c0926d7ec670409cf27", "Url": "https://api.github.com/repos/PathogenABC/sqlla", "Date": "2017-10-24T08:14:28Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.preference.PreferenceManager.setDefaultValues(this, R.xml.preferences_settings, false); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8701/buggy-version/app.src.main.java.com.eajy.materialdesigndemo.activity.MainActivity.java", "BodyUseAPI": ["android.preference.PreferenceManager.setDefaultValues(com.eajy.materialdesigndemo.activity.MainActivity,R.xml.preferences_settings,boolean)"], "Fixed commit": "63851f98464ec06897822a2db33c8777187ab617", "Url": "https://api.github.com/repos/Eajy/MaterialDesignDemo", "Date": "2017-03-14T02:59:29Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startActivity(intent); } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, \"Not found email app\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8701/buggy-version/app.src.main.java.com.eajy.materialdesigndemo.activity.MainActivity.java", "BodyUseAPI": ["com.eajy.materialdesigndemo.activity.MainActivity.startActivity(android.content.Intent)"], "Fixed commit": "63851f98464ec06897822a2db33c8777187ab617", "Url": "https://api.github.com/repos/Eajy/MaterialDesignDemo", "Date": "2017-03-14T02:59:29Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startActivity(intent); } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, \"Not found email app\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8701/buggy-version/app.src.main.java.com.eajy.materialdesigndemo.activity.AboutActivity.java", "BodyUseAPI": ["com.eajy.materialdesigndemo.activity.AboutActivity.startActivity(android.content.Intent)"], "Fixed commit": "63851f98464ec06897822a2db33c8777187ab617", "Url": "https://api.github.com/repos/Eajy/MaterialDesignDemo", "Date": "2017-03-14T02:59:29Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { timer.cancel(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4157/buggy-version/demo.src.main.java.com.daimajia.numberprogressbar.example.MainActivity.java", "BodyUseAPI": ["java.util.Timer.cancel()"], "Fixed commit": "c9f33e43bf7d35ed1aa29f591946a764c676a215", "Url": "https://api.github.com/repos/acethepace/NumberProgressBar", "Date": "2016-06-21T11:17:26Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { myWeapons.get(myWeaponIndex).fire(((vooga.rts.gamedesign.sprite.InteractiveEntity) (a))); } catch (java.lang.CloneNotSupportedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4562/buggy-version/src.vooga.rts.gamedesign.strategy.attackstrategy.CanAttack.java", "BodyUseAPI": ["myWeapons.get(myWeaponIndex).fire(vooga.rts.gamedesign.sprite.rtsprite.IAttackable)", "java.util.List<vooga.rts.gamedesign.Weapon>.get(int)"], "Fixed commit": "4b16dd8f11a26cab13bf3805352cfc47c433a113", "Url": "https://api.github.com/repos/Tadimsky/vooga", "Date": "2013-04-10T06:29:44Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { date = new java.util.Date(((java.lang.Long.valueOf(text)) * 1000L)); } catch (java.lang.NumberFormatException e) { try { date = TransactionDatabase.dateTimeFormat.parse(text); } catch (java.text.ParseException e1) { date = new java.util.Date(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3753/buggy-version/src.org.totschnig.myexpenses.util.Utils.java", "BodyUseAPI": ["java.lang.Long.valueOf(java.lang.String)"], "Fixed commit": "3900a55350bafc6f0a459a4a1a7205bbdb03b468", "Url": "https://api.github.com/repos/mtotschnig/MyExpenses", "Date": "2014-02-26T23:03:11Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { storage = thread.get(); locationOfMaxCircles.addAll(storage.getValue0()); circles.addAll(storage.getValue1()); } catch (java.lang.InterruptedException | java.util.concurrent.ExecutionException e) { java.lang.System.err.println(\"thread broke\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3358/buggy-version/src.Main.java", "BodyUseAPI": ["org.javatuples.Pair<java.util.ArrayList<double[]>, java.util.ArrayList<double[]>>.getValue1()", "java.util.ArrayList<double[]>.addAll(storage.getValue1())", "java.util.concurrent.Future<org.javatuples.Pair<java.util.ArrayList<double[]>, java.util.ArrayList<double[]>>>.get()", "java.util.ArrayList<double[]>.addAll(storage.getValue0())", "org.javatuples.Pair<java.util.ArrayList<double[]>, java.util.ArrayList<double[]>>.getValue0()"], "Fixed commit": "e80d622de216da8de3e3455c03435e50b8cf0ac1", "Url": "https://api.github.com/repos/metal-crow/Sentry-Gun-Computer-Vision", "Date": "2014-09-11T04:10:27Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fMap = net.minecraft.src.NBTTagCompound.class.getDeclaredField(\"tagMap\"); } catch (java.lang.Exception e) { fMap = net.minecraft.src.NBTTagCompound.class.getDeclaredField(\"a\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6244/buggy-version/common.logisticspipes.utils.ItemIdentifier.java", "BodyUseAPI": ["java.lang.Class.getDeclaredField(java.lang.String)"], "Fixed commit": "ea9c993d4cfe1fc6f4cf0ece745492a3752dabe2", "Url": "https://api.github.com/repos/RS485/LogisticsPipes", "Date": "2012-10-17T23:40:30Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fList = net.minecraft.src.NBTTagList.class.getDeclaredField(\"tagList\"); } catch (java.lang.Exception e) { fList = net.minecraft.src.NBTTagList.class.getDeclaredField(\"a\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6244/buggy-version/common.logisticspipes.utils.ItemIdentifier.java", "BodyUseAPI": ["java.lang.Class.getDeclaredField(java.lang.String)"], "Fixed commit": "ea9c993d4cfe1fc6f4cf0ece745492a3752dabe2", "Url": "https://api.github.com/repos/RS485/LogisticsPipes", "Date": "2012-10-17T23:40:30Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fMap = net.minecraft.src.NBTTagCompound.class.getDeclaredField(\"tagMap\"); } catch (java.lang.Exception e) { fMap = net.minecraft.src.NBTTagCompound.class.getDeclaredField(\"a\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6244/buggy-version/common.logisticspipes.nei.DebugHelper.java", "BodyUseAPI": ["java.lang.Class.getDeclaredField(java.lang.String)"], "Fixed commit": "ea9c993d4cfe1fc6f4cf0ece745492a3752dabe2", "Url": "https://api.github.com/repos/RS485/LogisticsPipes", "Date": "2012-10-17T23:40:30Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { fList = net.minecraft.src.NBTTagList.class.getDeclaredField(\"tagList\"); } catch (java.lang.Exception e) { fList = net.minecraft.src.NBTTagList.class.getDeclaredField(\"a\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6244/buggy-version/common.logisticspipes.nei.DebugHelper.java", "BodyUseAPI": ["java.lang.Class.getDeclaredField(java.lang.String)"], "Fixed commit": "ea9c993d4cfe1fc6f4cf0ece745492a3752dabe2", "Url": "https://api.github.com/repos/RS485/LogisticsPipes", "Date": "2012-10-17T23:40:30Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Object response = _extractor.extractEntity(clientRequestContext); if (response != null) { restResponse.setParameters(new java.lang.Object[]{ response }); } } catch (org.jboss.resteasy.client.ClientResponseFailure crf) { java.lang.String uri = \"\"; try { uri = request.getUri(); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); } throw new java.lang.RuntimeException(((uri + \" \") + (crf.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1558/buggy-version/resteasy.src.main.java.org.switchyard.component.resteasy.util.ClientInvoker.java", "BodyUseAPI": ["org.switchyard.component.resteasy.composer.RESTEasyBindingData.setParameters(java.lang.Object[])", "org.jboss.resteasy.client.core.extractors.EntityExtractor.extractEntity(org.jboss.resteasy.client.core.extractors.ClientRequestContext)"], "Fixed commit": "7d296dda15f3ef103d5c0954c041343535eb5bc2", "Url": "https://api.github.com/repos/mageshbk/components", "Date": "2014-09-13T14:25:04Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sb.append(\" \").append(aClass.getSimpleName()); } catch (java.lang.Exception e) { try { sb.append(\" \").append(aClass.getName()); } catch (java.lang.Exception e1) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8438/buggy-version/compiler.src.main.java.com.github.mustachejava.reflect.GuardedBinding.java", "BodyUseAPI": ["java.lang.Class.getSimpleName()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "e8039c55b3425e9e34ca251cce54baaaa22a3614", "Url": "https://api.github.com/repos/spullara/mustache.java", "Date": "2012-08-08T16:50:47Z"},
{"Line": "=>1083", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { isAccountChooserIsShown = true; this.startActivityForResult(mGoogleCredential.newChooseAccountIntent(), ConstantValues.REQUEST_ACCOUNT_PICKER); } catch (java.lang.Exception e) { andicar.n.utils.Utils.showNotReportableErrorDialog(getActivity(), e.getMessage(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6577/buggy-version/AndiCar.src.main.java.andicar.n.activity.preference.PreferenceActivity.java", "BodyUseAPI": ["andicar.n.activity.preference.PreferenceActivity.BackupRestorePreferenceFragment.startActivityForResult(mGoogleCredential.newChooseAccountIntent(),ConstantValues.REQUEST_ACCOUNT_PICKER)", "com.google.api.client.googleapis.extensions.android.gms.auth.GoogleAccountCredential.newChooseAccountIntent()"], "Fixed commit": "960e2a69ec6a699cfdd2a456e53750eb843544a8", "Url": "https://api.github.com/repos/mkeresztes/AndiCar", "Date": "2017-12-04T09:57:55Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { Solution.InputTokenType lastOpeningToken = tokenTypeStack.pop(); if (tokenType != lastOpeningToken) { return false; } } catch (java.util.EmptyStackException exception) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1948/buggy-version/java-stack.src.Solution.java", "BodyUseAPI": ["java.util.Stack<Solution.InputTokenType>.pop()"], "Fixed commit": "daa56aae0da90bc471d408fd46a47301a8b01828", "Url": "https://api.github.com/repos/ecarlste/hacker-rank-java", "Date": "2017-03-07T16:53:59Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { me.tobi.acmain.ArdaCraft.getCraftLogger().chatJSON(messages); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5873/buggy-version/src.me.tobi.acmain.events.EvtHandler.java", "BodyUseAPI": ["me.tobi.acmain.ArdaCraft.getCraftLogger().chatJSON(me.tobi.acmain.message.Message[])", "me.tobi.acmain.ArdaCraft.getCraftLogger()"], "Fixed commit": "cb852dea4436581d711941fad7768bdc049d9b55", "Url": "https://api.github.com/repos/tobiasnagel/ArdaCraftMain", "Date": "2015-03-23T19:29:35Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { totalDeductionValue = java.lang.Float.parseFloat(totalDeductionET.getText().toString()); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2451/buggy-version/app.src.main.java.com.mobile.otrcapitalllc.Activities.FactorAdvanceLoad.java", "BodyUseAPI": ["totalDeductionET.getText().toString()", "java.lang.Float.parseFloat(totalDeductionET.getText().toString())", "android.widget.EditText.getText()"], "Fixed commit": "65c2da555aa9f2170690eb73eb7a0d58a2034465", "Url": "https://api.github.com/repos/otrcapital/otrandroid", "Date": "2017-11-03T15:16:36Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { totalPayValue = java.lang.Float.parseFloat(totalPayET.getText().toString()); } catch (java.lang.NumberFormatException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2451/buggy-version/app.src.main.java.com.mobile.otrcapitalllc.Activities.FactorAdvanceLoad.java", "BodyUseAPI": ["android.widget.EditText.getText()", "totalPayET.getText().toString()", "java.lang.Float.parseFloat(totalPayET.getText().toString())"], "Fixed commit": "65c2da555aa9f2170690eb73eb7a0d58a2034465", "Url": "https://api.github.com/repos/otrcapital/otrandroid", "Date": "2017-11-03T15:16:36Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { totalPayValue = java.lang.Float.parseFloat(totalPayET.getText().toString()); } catch (java.lang.NumberFormatException e) { isError = true; if (activityType.equals(ActivityTags.TAG_FACTOR_ADVANCE)) { sb.append(\"\\n\\tTotal Load Amount\"); }else { sb.append(\"\\n\\tTotal Pay\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2451/buggy-version/app.src.main.java.com.mobile.otrcapitalllc.Activities.FactorAdvanceLoad.java", "BodyUseAPI": ["java.lang.Float.parseFloat(totalPayET.getText().toString())", "totalPayET.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "65c2da555aa9f2170690eb73eb7a0d58a2034465", "Url": "https://api.github.com/repos/otrcapital/otrandroid", "Date": "2017-11-03T15:16:36Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { totalDeductionValue = java.lang.Float.parseFloat(totalDeductionET.getText().toString()); } catch (java.lang.NumberFormatException e) { if (activityType.equals(ActivityTags.TAG_FACTOR_ADVANCE)) { isError = true; sb.append(\"\\n\\tAdvance Request Amount\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2451/buggy-version/app.src.main.java.com.mobile.otrcapitalllc.Activities.FactorAdvanceLoad.java", "BodyUseAPI": ["totalDeductionET.getText().toString()", "java.lang.Float.parseFloat(totalDeductionET.getText().toString())", "android.widget.EditText.getText()"], "Fixed commit": "65c2da555aa9f2170690eb73eb7a0d58a2034465", "Url": "https://api.github.com/repos/otrcapital/otrandroid", "Date": "2017-11-03T15:16:36Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { PayloadService.instance.addHisotry(message, null, limit, true); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3201/buggy-version/Gateway.src.main.java.com.whosbean.qpush.gateway.dispatch.BrocastThread.java", "BodyUseAPI": ["PayloadService.instance.addHisotry(com.whosbean.qpush.core.entity.Payload,<nulltype>,int,boolean)"], "Fixed commit": "92b961e7912b0dffd7d6fc33fd39b7bb364d0775", "Url": "https://api.github.com/repos/yamingd/QPush", "Date": "2014-08-12T08:40:47Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { PayloadService.instance.addHisotry(message, null, message.getClients().size(), ok); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3201/buggy-version/Gateway.src.main.java.com.whosbean.qpush.gateway.dispatch.OneSendThread.java", "BodyUseAPI": ["PayloadService.instance.addHisotry(com.whosbean.qpush.core.entity.Payload,<nulltype>,message.getClients().size(),boolean)", "com.whosbean.qpush.core.entity.Payload.getClients()", "message.getClients().size()"], "Fixed commit": "92b961e7912b0dffd7d6fc33fd39b7bb364d0775", "Url": "https://api.github.com/repos/yamingd/QPush", "Date": "2014-08-12T08:40:47Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ClientService.instance.add(client); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3201/buggy-version/Gateway.src.main.java.com.whosbean.qpush.gateway.handler.OnNewlyAddThread.java", "BodyUseAPI": ["ClientService.instance.add(com.whosbean.qpush.core.entity.Client)"], "Fixed commit": "92b961e7912b0dffd7d6fc33fd39b7bb364d0775", "Url": "https://api.github.com/repos/yamingd/QPush", "Date": "2014-08-12T08:40:47Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ClientService.instance.updateOnlineTs(client.getId()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3201/buggy-version/Gateway.src.main.java.com.whosbean.qpush.gateway.handler.OnNewlyAddThread.java", "BodyUseAPI": ["com.whosbean.qpush.core.entity.Client.getId()", "ClientService.instance.updateOnlineTs(client.getId())"], "Fixed commit": "92b961e7912b0dffd7d6fc33fd39b7bb364d0775", "Url": "https://api.github.com/repos/yamingd/QPush", "Date": "2014-08-12T08:40:47Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { PayloadService.instance.addHisotry(message, null, message.getClients().size(), ok); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3201/buggy-version/Gateway.src.main.java.com.whosbean.qpush.gateway.dispatch.OfflineSendThread.java", "BodyUseAPI": ["message.getClients().size()", "PayloadService.instance.addHisotry(com.whosbean.qpush.core.entity.Payload,<nulltype>,message.getClients().size(),boolean)", "com.whosbean.qpush.core.entity.Payload.getClients()"], "Fixed commit": "92b961e7912b0dffd7d6fc33fd39b7bb364d0775", "Url": "https://api.github.com/repos/yamingd/QPush", "Date": "2014-08-12T08:40:47Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { ch.njol.skript.ScriptLoader.setCurrentEvent((\"\" + (parsedEvent.getFirst().getName().toLowerCase(java.util.Locale.ENGLISH))), parsedEvent.getFirst().events); events.add(new ch.njol.skript.ScriptLoader.ParsedEventData(parsedEvent, event, node, ch.njol.skript.ScriptLoader.loadItems(node))); } finally { ch.njol.skript.ScriptLoader.deleteCurrentEvent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/346/buggy-version/src.main.java.ch.njol.skript.ScriptLoader.java", "BodyUseAPI": ["ch.njol.skript.ScriptLoader.setCurrentEvent((\"\" + (parsedEvent.getFirst().getName().toLowerCase(java.util.Locale.ENGLISH))),parsedEvent.getFirst().events)", "java.util.List<ch.njol.skript.ScriptLoader.ParsedEventData>.add(ch.njol.skript.ScriptLoader.ParsedEventData)", "ch.njol.util.NonNullPair<ch.njol.skript.lang.SkriptEventInfo<?>, ch.njol.skript.lang.SkriptEvent>.getFirst()", "ch.njol.util.NonNullPair<ch.njol.skript.lang.SkriptEventInfo<?>, ch.njol.skript.lang.SkriptEvent>.getFirst()", "parsedEvent.getFirst().getName()", "parsedEvent.getFirst().getName().toLowerCase(java.util.Locale)", "ch.njol.skript.ScriptLoader.loadItems(ch.njol.skript.config.SectionNode)"], "Fixed commit": "6d650453ad0452f7dcd1b6056880ab13ec495e48", "Url": "https://api.github.com/repos/Snow-Pyon/Skript", "Date": "2017-08-05T14:35:36Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.radargun.btt.BTTStressor.cache.endTransaction(false); } catch (java.lang.Exception e2) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1870/buggy-version/framework.src.main.java.org.radargun.btt.BTTStressor.java", "BodyUseAPI": ["org.radargun.CacheWrapper.endTransaction(boolean)"], "Fixed commit": "47bd090e216e28f356afb7b6a84cc2497d23af27", "Url": "https://api.github.com/repos/nmldiegues/radargun", "Date": "2013-07-31T13:41:55Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(10000); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1870/buggy-version/framework.src.main.java.org.radargun.btt.BTTPopulationStressor.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "47bd090e216e28f356afb7b6a84cc2497d23af27", "Url": "https://api.github.com/repos/nmldiegues/radargun", "Date": "2013-07-31T13:41:55Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { rests = apiInterface.getRestaurants(40.11, (-88.227)); } catch (org.json.JSONException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7284/buggy-version/app.src.main.java.com.example.kchal_000.eatright_uiuc.RestaurantChoices.java", "BodyUseAPI": ["com.example.kchal_000.eatright_uiuc.RestaurantChoices.getRestaurants(double,double)"], "Fixed commit": "7d56591e556ad48a0c2f60893c1ec8b054529e09", "Url": "https://api.github.com/repos/kchalas/EatRight_UIUC", "Date": "2015-03-08T22:01:07Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.liutf.tools.logHandle.OnLineLogFilesStatistics.readLog(strUrl, statisticsMap); } catch (java.io.FileNotFoundException fe) { java.lang.System.out.println(((\"\u6587\u4ef6\uff1a\" + strUrl) + \"\u4e0d\u5b58\u5728\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4766/buggy-version/src.main.java.com.liutf.tools.logHandle.OnLineLogFilesStatistics.java", "BodyUseAPI": ["com.liutf.tools.logHandle.OnLineLogFilesStatistics.readLog(java.lang.String,java.util.Map<java.lang.String, java.lang.Integer>)"], "Fixed commit": "004d447b0105dab6e1e5a1dc0b43caa8f7190483", "Url": "https://api.github.com/repos/logertower/logHandle", "Date": "2017-01-06T09:06:28Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { session.execute(((((((((((((((((((((((((((((((((((((\"CREATE TABLE \" + tableName) + \"(\\n\") + \" \") + (org.apache.polygene.entitystore.cassandra.CassandraCluster.IDENTITY_COLUMN)) + \" text,\\n\") + \" \") + (org.apache.polygene.entitystore.cassandra.CassandraCluster.VERSION_COLUMN)) + \" text,\\n\") + \" \") + (org.apache.polygene.entitystore.cassandra.CassandraCluster.APP_VERSION_COLUMN)) + \" text,\\n\") + \" \") + (org.apache.polygene.entitystore.cassandra.CassandraCluster.STORE_VERSION_COLUMN)) + \" text,\\n\") + \" \") + (org.apache.polygene.entitystore.cassandra.CassandraCluster.LASTMODIFIED_COLUMN)) + \" timestamp,\\n\") + \" \") + (org.apache.polygene.entitystore.cassandra.CassandraCluster.USECASE_COLUMN)) + \" text,\\n\") + \" \") + (org.apache.polygene.entitystore.cassandra.CassandraCluster.PROPERTIES_COLUMN)) + \" map<text,text>,\\n\") + \" \") + (org.apache.polygene.entitystore.cassandra.CassandraCluster.ASSOCIATIONS_COLUMN)) + \" map<text,text>,\\n\") + \" \") + (org.apache.polygene.entitystore.cassandra.CassandraCluster.MANYASSOCIATIONS_COLUMN)) + \" map<text,text>,\\n\") + \" \") + (org.apache.polygene.entitystore.cassandra.CassandraCluster.NAMEDASSOCIATIONS_COLUMN)) + \" map<text,text>,\\n\") + \" PRIMARY KEY (\") + (org.apache.polygene.entitystore.cassandra.CassandraCluster.IDENTITY_COLUMN)) + \")\\n\") + \" )\")); } catch (com.datastax.driver.core.exceptions.AlreadyExistsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4356/buggy-version/extensions.entitystore-cassandra.src.main.java.org.apache.polygene.entitystore.cassandra.CassandraCluster.java", "BodyUseAPI": ["com.datastax.driver.core.Session.execute(java.lang.String)"], "Fixed commit": "3384c1bd6c361a6c0e1e2100d4604b2eb658b0e4", "Url": "https://api.github.com/repos/apache/polygene-java", "Date": "2017-02-19T08:18:22Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { model = objectMapper.readValue(is, net.narcissu5.loadmonitor.util.LoadModel.class); } catch (java.io.IOException e) { if (net.narcissu5.loadmonitor.service.SaveLoadService.logger.isDebugEnabled()) { net.narcissu5.loadmonitor.service.SaveLoadService.logger.debug((\"Unexpected error when get load from \" + (instanceInfo.getHostName())), e); } continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3294/buggy-version/sba-load-monitor-server.src.main.java.net.narcissu5.loadmonitor.service.SaveLoadService.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readValue(java.io.InputStream,java.lang.Class)"], "Fixed commit": "41283658f323ee45677c7d30db3ae685787f5d60", "Url": "https://api.github.com/repos/Narcissu5/sba-load-monitor", "Date": "2017-11-20T10:08:34Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { next = getNextChar(selector, position); if (isStartStep(next)) { return parseStep(selector, position); }else { return getCheckResultWithError(\"Wrong symbol after '*' \", position, \"Add '/' and next child description or '[' and predicate after '*'\"); } } catch (com.unknown.seleniumplugin.checkers.selectorscheckers.exceptions.EndOfSelector endOfSelector) { return getSuccessCheckResult(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7028/buggy-version/src.com.unknown.seleniumplugin.checkers.selectorscheckers.impl.xpath.XpathSelectorChecker.java", "BodyUseAPI": ["com.unknown.seleniumplugin.checkers.selectorscheckers.impl.xpath.XpathSelectorChecker.parseStep(java.lang.String,com.unknown.seleniumplugin.checkers.selectorscheckers.impl.Position)", "com.unknown.seleniumplugin.checkers.selectorscheckers.impl.xpath.XpathSelectorChecker.getNextChar(java.lang.String,com.unknown.seleniumplugin.checkers.selectorscheckers.impl.Position)", "com.unknown.seleniumplugin.checkers.selectorscheckers.impl.xpath.XpathSelectorChecker.isStartStep(char)", "com.unknown.seleniumplugin.checkers.selectorscheckers.impl.xpath.XpathSelectorChecker.getCheckResultWithError(java.lang.String,com.unknown.seleniumplugin.checkers.selectorscheckers.impl.Position,java.lang.String)"], "Fixed commit": "244c4f16d7a97414b30f8b3c158a9853baade5c2", "Url": "https://api.github.com/repos/perfect-test/selenium_idea_plugin", "Date": "2015-03-16T11:32:57Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { is_mac = org.cytoscape.util.swing.LookAndFeelUtil.isMac(); } catch (final java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8571/buggy-version/core-task-impl.src.main.java.org.cytoscape.task.internal.CyActivator.java", "BodyUseAPI": ["org.cytoscape.util.swing.LookAndFeelUtil.isMac()"], "Fixed commit": "86cf0fc2250a548d26514da031823b375d1398d1", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2016-03-10T23:18:11Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { parsedValue = java.lang.Long.parseLong(value); } catch (java.lang.NumberFormatException e) { throw new java.lang.IllegalArgumentException(java.lang.String.format(\"Error parsing the duration string %s. Cannot parse %s as a long\", durationStr, value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7565/buggy-version/hydrator-common.src.main.java.co.cask.hydrator.common.TimeParser.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "6c580b553d82f03712391770d99f70ab4f6c8c02", "Url": "https://api.github.com/repos/caskdata/hydrator-plugins", "Date": "2017-05-19T19:04:14Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { performFireAction(initiateAreaOnFire); } catch (org.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/387/buggy-version/discWorld_Build1_Team15.src.com.app.rules.RandomEventCard.java", "BodyUseAPI": ["com.app.rules.RandomEventCard.performFireAction(com.app.Area)"], "Fixed commit": "108f76f99c8945e46cef9f86dfecf1257fb6d51b", "Url": "https://api.github.com/repos/pratik12/Team15_discWorld", "Date": "2015-03-11T15:34:41Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (!(userStoreManager.isExistingUser(userName))) { return; } } catch (org.wso2.carbon.user.core.UserStoreException e) { org.wso2.carbon.identity.recovery.handler.UserSelfRegistrationHandler.log.error(((\"Error while checking user : \" + userName) + \" in userStore.\"), e); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5797/buggy-version/components.org.wso2.carbon.identity.recovery.src.main.java.org.wso2.carbon.identity.recovery.handler.UserSelfRegistrationHandler.java", "BodyUseAPI": ["org.wso2.carbon.user.core.UserStoreManager.isExistingUser(java.lang.String)"], "Fixed commit": "b2b19be9c477e27a71957688e4ae1671d1bd67b6", "Url": "https://api.github.com/repos/ayshsandu/identity-governance", "Date": "2016-11-18T05:56:56Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if (!(webSocketChannel.isCloseFrameReceived())) { if (closeReason == null) { webSocketChannel.sendClose(); }else { io.undertow.websockets.core.WebSockets.sendClose(new io.undertow.websockets.core.CloseMessage(closeReason.getCloseCode().getCode(), closeReason.getReasonPhrase()).toByteBuffer(), webSocketChannel, null); } } } finally { try { if (closeReason == null) { endpoint.getInstance().onClose(this, new javax.websocket.CloseReason(CloseReason.CloseCodes.NO_STATUS_CODE, null)); }else { endpoint.getInstance().onClose(this, closeReason); } } catch (java.lang.Exception e) { endpoint.getInstance().onError(this, e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/713/buggy-version/websockets-jsr.src.main.java.io.undertow.websockets.jsr.UndertowSession.java", "BodyUseAPI": ["io.undertow.websockets.core.CloseMessage.toByteBuffer()", "io.undertow.websockets.core.WebSocketChannel.isCloseFrameReceived()", "io.undertow.websockets.core.WebSocketChannel.sendClose()", "javax.websocket.CloseReason.getReasonPhrase()", "javax.websocket.CloseReason.getCloseCode()", "closeReason.getCloseCode().getCode()", "io.undertow.websockets.core.WebSockets.sendClose(new io.undertow.websockets.core.CloseMessage(closeReason.getCloseCode().getCode(), closeReason.getReasonPhrase()).toByteBuffer(),io.undertow.websockets.core.WebSocketChannel,<nulltype>)"], "Fixed commit": "78aec77778d25b84f56aa86f4b67a3f07cc7d7af", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2014-09-29T05:24:19Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { process(pf, v, op, np); } catch (java.lang.Throwable e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/43/buggy-version/src.main.java.org.animotron.statement.animo.update.CHANGE.java", "BodyUseAPI": ["org.animotron.statement.animo.update.CHANGE.Calc.1.process(org.animotron.manipulator.PFlow,org.animotron.manipulator.QCAVector,org.neo4j.graphdb.Relationship,org.neo4j.graphdb.Relationship)"], "Fixed commit": "d73876f5351f915e9f74c792af81ed86c4fe91ef", "Url": "https://api.github.com/repos/animotron/core", "Date": "2012-11-14T16:56:23Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.shell.close(); } catch (java.lang.Exception e) { java.util.logging.Logger.getLogger(getClass().getName()).log(java.util.logging.Level.FINE, \"Error while closing Shell\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4925/buggy-version/shell.api.src.main.java.org.jboss.forge.addon.shell.ShellHandle.java", "BodyUseAPI": ["org.jboss.forge.addon.shell.Shell.close()"], "Fixed commit": "7d25aab317da850cc254b5730230bad37178d087", "Url": "https://api.github.com/repos/forge/core", "Date": "2013-12-13T22:00:15Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.store(); } catch (java.io.IOException ex) { throw new java.lang.RuntimeException((\"Failed to store new arena with ID \" + id), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2323/buggy-version/src.main.java.net.caseif.flint.common.arena.CommonArena.java", "BodyUseAPI": ["net.caseif.flint.common.arena.CommonArena.store()"], "Fixed commit": "49ea205c2e76493d8533dc844e03b78c64de8892", "Url": "https://api.github.com/repos/caseif/FlintCommon", "Date": "2016-11-05T19:46:52Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.cxf.transport.zmq.ZMQUtils.sendMessage(zmqSocket, request); } catch (org.zeromq.ZMQException e) { if ((e.getErrorCode()) == (org.apache.cxf.transport.zmq.uri.ZMQURIConstants.ERR_EFSM)) { org.apache.cxf.transport.zmq.ZMQConduit.LOG.log(java.util.logging.Level.WARNING, \"The operation can not be executed because the socket is not in correct state. Creating new socket and retrying operation...\"); zmqSocket.close(); zmqSocket = org.apache.cxf.transport.zmq.ZMQResourceFactory.createSocket(endpointConfig, zmqContext); org.apache.cxf.transport.zmq.ZMQUtils.sendMessage(zmqSocket, request); }else { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3949/buggy-version/src.main.java.org.apache.cxf.transport.zmq.ZMQConduit.java", "BodyUseAPI": ["org.apache.cxf.transport.zmq.ZMQUtils.sendMessage(ZMQ.Socket,byte[])"], "Fixed commit": "672a84a040ba7ba1c2f00871c20a73ce05398ef4", "Url": "https://api.github.com/repos/claudemamo/cxf-rt-transports-zeromq", "Date": "2013-02-10T16:13:51Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { updatingFromEditor = true; getTreeViewer().setSelection(newSelection, true); } finally { updatingFromEditor = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8168/buggy-version/plugin_ide.ui.src-lang.melnorme.lang.ide.ui.editor.structure.LangOutlinePage.java", "BodyUseAPI": ["melnorme.lang.ide.ui.editor.structure.LangOutlinePage.getTreeViewer()", "getTreeViewer().setSelection(org.eclipse.jface.viewers.StructuredSelection,boolean)"], "Fixed commit": "204b3686cf46da0eb518bf625e38e6883bdf26ca", "Url": "https://api.github.com/repos/bruno-medeiros/MelnormeEclipse", "Date": "2015-05-28T12:10:35Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { respuesta = consultarCedulaRegistroCivil.busquedaPorCedula(cedula, configuracionBSG.getUsuario(), configuracionBSG.getContrasenia()); } catch (java.lang.Exception e) { return javax.ws.rs.core.Response.status(HttpStatus.NOT_FOUND_404).entity(Constantes.CEDULA_NO_ENCONTRADA).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5509/buggy-version/src.main.java.ec.gob.senescyt.bsg.services.ServicioCedula.java", "BodyUseAPI": ["ec.gob.senescyt.bsg.configurations.ConfiguracionBSG.getUsuario()", "ec.gob.registrocivil.consultacedula.WSRegistroCivilConsultaCedula.busquedaPorCedula(java.lang.String,configuracionBSG.getUsuario(),configuracionBSG.getContrasenia())", "ec.gob.senescyt.bsg.configurations.ConfiguracionBSG.getContrasenia()"], "Fixed commit": "0de76fbec46d6aa5778f47b66047a216dd9f86e1", "Url": "https://api.github.com/repos/Senescyt/servicio-bsg", "Date": "2015-04-06T19:43:02Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sizeAndLastModified = org.apache.kylin.engine.mr.DFSFileTable.getSizeAndLastModified(path); } catch (java.io.FileNotFoundException ex) { sizeAndLastModified = org.apache.kylin.common.util.Pair.newPair((-1L), 0L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6179/buggy-version/engine-mr.src.main.java.org.apache.kylin.engine.mr.DFSFileTable.java", "BodyUseAPI": ["org.apache.kylin.engine.mr.DFSFileTable.getSizeAndLastModified(java.lang.String)"], "Fixed commit": "d9c8d9ec26b910f2a27f7a98dd44ef49e61fe416", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2016-11-24T23:16:45Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { r = ((com.orientechnologies.orient.core.db.record.OIdentifiable) (o)).getRecord(); } catch (com.orientechnologies.orient.core.exception.ORecordNotFoundException notFound) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2778/buggy-version/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java", "BodyUseAPI": ["java.lang.Object.getRecord()"], "Fixed commit": "2b3921001bb678f6a552275f3232e7c5db1f72c4", "Url": "https://api.github.com/repos/mcculls/orientdb", "Date": "2016-11-21T16:38:21Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return methodInvocation.proceed(); } finally { _shardAdvice.popCompanyService(); com.liferay.portal.kernel.dao.shard.ShardUtil.setTargetSource(currentShardName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7598/buggy-version/portal-impl.src.com.liferay.portal.dao.shard.advice.ShardPersistenceAdvice.java", "BodyUseAPI": ["org.aopalliance.intercept.MethodInvocation.proceed()"], "Fixed commit": "1b14045d4ab0bb82d7050a9c58d866ea9513f0b0", "Url": "https://api.github.com/repos/hhuijser/liferay-portal", "Date": "2014-02-20T02:45:33Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { final int value = ((int) (java.lang.Long.parseLong(aMask, 2))); return java.lang.Integer.toHexString(java.lang.Integer.reverse(value)); } catch (java.lang.NumberFormatException exception) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6225/buggy-version/device.logicsniffer.src.main.java.org.sump.device.logicsniffer.LogicSnifferConfigDialog.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String,int)", "java.lang.Integer.toHexString(int)", "java.lang.Integer.reverse(int)"], "Fixed commit": "8691fcef63dfeb057963b2c1bc41757e3e4154db", "Url": "https://api.github.com/repos/jawi/ols", "Date": "2011-10-25T20:28:21Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { c.setAutoCommit(true); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7016/buggy-version/src.lms.persistence.ConnectionPool.java", "BodyUseAPI": ["java.sql.Connection.setAutoCommit(boolean)"], "Fixed commit": "7dc22ddfc154eded422778db8c9ff4084ea70f7f", "Url": "https://api.github.com/repos/ESpearman/COMP3350-Group-Project", "Date": "2014-07-14T19:09:53Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(net.alliknow.podcatcher.BaseActivity.PODCATCHER_WEBSITE))); } catch (android.content.ActivityNotFoundException e) { showToast(getString(R.string.no_browser)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7522/buggy-version/src.net.alliknow.podcatcher.BaseActivity.java", "BodyUseAPI": ["net.alliknow.podcatcher.BaseActivity.startActivity(android.content.Intent)", "android.net.Uri.parse(java.lang.String)"], "Fixed commit": "e15a7ce491a1be59ec88c026aac56e118035bae7", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2013-07-25T12:45:56Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(net.alliknow.podcatcher.BaseActivity.PODCATCHER_HELPSITE))); } catch (android.content.ActivityNotFoundException e) { showToast(getString(R.string.no_browser)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7522/buggy-version/src.net.alliknow.podcatcher.BaseActivity.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)", "net.alliknow.podcatcher.BaseActivity.startActivity(android.content.Intent)"], "Fixed commit": "e15a7ce491a1be59ec88c026aac56e118035bae7", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2013-07-25T12:45:56Z"},
{"Line": "=>1290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { year = years.iterator().next(); } catch (java.lang.Exception e) { android.util.Log.w(\"GetInfoYear\", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2242/buggy-version/app.src.main.java.github.popeen.dsub.fragments.SelectDirectoryFragment.java", "BodyUseAPI": ["java.util.Set<java.lang.Integer>.iterator()", "java.util.Iterator<java.lang.Integer>.next()"], "Fixed commit": "39a916800088b860a386387191069d1269985f53", "Url": "https://api.github.com/repos/popeen/Popeens-DSub", "Date": "2016-02-09T19:10:43Z"},
{"Line": "=>1289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { title = titleView.getText().toString(); } catch (java.lang.Exception e) { android.util.Log.w(\"GetInfoTitle\", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2242/buggy-version/app.src.main.java.github.popeen.dsub.fragments.SelectDirectoryFragment.java", "BodyUseAPI": ["titleView.getText().toString()", "android.widget.TextView.getText()"], "Fixed commit": "39a916800088b860a386387191069d1269985f53", "Url": "https://api.github.com/repos/popeen/Popeens-DSub", "Date": "2016-02-09T19:10:43Z"},
{"Line": "=>1288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { artist = artists.iterator().next(); } catch (java.lang.Exception e) { android.util.Log.w(\"GetInfoArtist\", e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2242/buggy-version/app.src.main.java.github.popeen.dsub.fragments.SelectDirectoryFragment.java", "BodyUseAPI": ["java.util.Iterator<java.lang.String>.next()", "java.util.Set<java.lang.String>.iterator()"], "Fixed commit": "39a916800088b860a386387191069d1269985f53", "Url": "https://api.github.com/repos/popeen/Popeens-DSub", "Date": "2016-02-09T19:10:43Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { fin = localFile.getContent().getInputStream(); fout = remoteFile.getContent().getOutputStream(); org.apache.commons.io.IOUtils.copy(fin, fout); } finally { if (fout != null) { fout.close(); } if (fin != null) { fin.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5464/buggy-version/fileconnector.fileconnector-1.0.0.org.wso2.carbon.connector.src.main.java.org.wso2.carbon.connector.FileCopy.java", "BodyUseAPI": ["remoteFile.getContent().getOutputStream()", "org.apache.commons.io.IOUtils.copy(java.io.InputStream,java.io.OutputStream)", "org.apache.commons.vfs2.FileObject.getContent()", "localFile.getContent().getInputStream()", "org.apache.commons.vfs2.FileObject.getContent()"], "Fixed commit": "a92a95ef467ad22b287bed4905b5e7a670a40238", "Url": "https://api.github.com/repos/wso2-attic/esb-connectors", "Date": "2015-07-27T20:10:58Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { fin = localFile.getContent().getInputStream(); fout = remoteFile.getContent().getOutputStream(); org.apache.commons.io.IOUtils.copyLarge(fin, fout); } finally { if (fout != null) { fout.close(); } if (fin != null) { fin.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5464/buggy-version/fileconnector.fileconnector-1.0.0.org.wso2.carbon.connector.src.main.java.org.wso2.carbon.connector.FileCopyInStream.java", "BodyUseAPI": ["localFile.getContent().getInputStream()", "org.apache.commons.io.IOUtils.copyLarge(java.io.InputStream,java.io.OutputStream)", "org.apache.commons.vfs2.FileObject.getContent()", "remoteFile.getContent().getOutputStream()", "org.apache.commons.vfs2.FileObject.getContent()"], "Fixed commit": "a92a95ef467ad22b287bed4905b5e7a670a40238", "Url": "https://api.github.com/repos/wso2-attic/esb-connectors", "Date": "2015-07-27T20:10:58Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { issuable.addIssue(issue); } catch (java.lang.Exception e) { org.sonar.plugins.swift.issues.swiftlint.SwiftLintReportParser.LOGGER.warn(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5297/buggy-version/src.main.java.org.sonar.plugins.swift.issues.swiftlint.SwiftLintReportParser.java", "BodyUseAPI": ["org.sonar.api.issue.Issuable.addIssue(org.sonar.api.issue.Issue)"], "Fixed commit": "d4ffa3b96e5ac5336e542ec24e1e78ea13411f64", "Url": "https://api.github.com/repos/viteinfinite/sonar-swift", "Date": "2016-08-05T12:55:32Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return bitmap.getPixel(0, 0); } catch (java.lang.IllegalArgumentException iae) { return android.graphics.Color.BLACK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4757/buggy-version/app.src.main.java.projekt.substratum.InformationActivity.java", "BodyUseAPI": ["android.graphics.Bitmap.getPixel(int,int)"], "Fixed commit": "0686932007de7b49836211fdb5d7e805d98e3588", "Url": "https://api.github.com/repos/substratum/substratum", "Date": "2016-10-20T22:10:29Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { channel.rm((libPath + \"/*\")); channel.rm((binPath + \"/*\")); channel.rmdir(binPath); channel.rmdir(libPath); channel.rm((\"/kovan/archives/\" + fileName)); } catch (com.jcraft.jsch.SftpException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7687/buggy-version/src.linkjvm.uploader.Uploader.java", "BodyUseAPI": ["com.jcraft.jsch.ChannelSftp.rmdir(java.lang.String)", "com.jcraft.jsch.ChannelSftp.rmdir(java.lang.String)", "com.jcraft.jsch.ChannelSftp.rm(java.lang.String)", "com.jcraft.jsch.ChannelSftp.rm(java.lang.String)", "com.jcraft.jsch.ChannelSftp.rm(java.lang.String)"], "Fixed commit": "bff894c5f68b5dc84a572fbdfed2a0d6f05092fa", "Url": "https://api.github.com/repos/LinkJVM/LinkJVM-Uploader", "Date": "2014-01-29T08:54:29Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getStage().draw(); } catch (java.lang.StringIndexOutOfBoundsException e) { e.getStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4004/buggy-version/desktop.src.main.java.edu.chalmers.sankoss.desktop.mvc.game.GameRenderer.java", "BodyUseAPI": ["getStage().draw()", "edu.chalmers.sankoss.desktop.mvc.game.GameRenderer.getStage()"], "Fixed commit": "118c89faa595b0ce4082061693b1c5aa9edf6a75", "Url": "https://api.github.com/repos/Bipshark/TDA367", "Date": "2014-05-25T12:51:59Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { target = player.getTargetBlock(null, range).getLocation(); } catch (java.lang.Throwable ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3442/buggy-version/src.main.java.com.censoredsoftware.demigods.engine.ability.Ability.java", "BodyUseAPI": ["player.getTargetBlock(null, range).getLocation()", "org.bukkit.entity.Player.getTargetBlock(<nulltype>,int)"], "Fixed commit": "a2de2c375cb7c5205ab56951d810cf47f8c93176", "Url": "https://api.github.com/repos/CensoredSoftware/Minecraft-Demigods", "Date": "2013-11-29T20:19:40Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { final com.github.mustachejava.Mustache mustache = mc.compile(s); cache.put(s, mustache); mustache.init(); return mustache; } finally { cache.remove(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5224/buggy-version/compiler.src.main.java.com.github.mustachejava.DefaultMustacheFactory.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.github.mustachejava.Mustache>.put(java.lang.String,com.github.mustachejava.Mustache)", "com.github.mustachejava.MustacheParser.compile(java.lang.String)", "com.github.mustachejava.Mustache.init()"], "Fixed commit": "a46eb132ad25db5978b12b0197a9f37a038c7e6a", "Url": "https://api.github.com/repos/landism/mustache.java", "Date": "2015-03-03T22:39:24Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.Conn.close(); } catch (java.sql.SQLException e) { java.lang.System.out.println((\"closeConnection: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5405/buggy-version/src.org.mugsandcoffee.ParseXML.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "981f1c2428332c6209d92700bc63daa3fdb62863", "Url": "https://api.github.com/repos/iankionisala/matsim_cdo", "Date": "2013-05-21T15:35:17Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5918/buggy-version/Client.src.Verbindung.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "091038313f7d07344de689bc7089753e4681008f", "Url": "https://api.github.com/repos/SebastianMichaelis1997/UniSolitaire", "Date": "2017-11-17T09:32:55Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { doc = org.sbml.jsbml.SBMLReader.read(file); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1139/buggy-version/de.bund.bfr.knime.sbml.src.de.bund.bfr.knime.sbml.reader.SbmlReaderNodeModel.java", "BodyUseAPI": ["org.sbml.jsbml.SBMLReader.read(java.io.File)"], "Fixed commit": "0d29dcee6cf4707010738644e091f4c8e9d5c708", "Url": "https://api.github.com/repos/thoens/BfROpenLab", "Date": "2014-03-19T09:58:41Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (((mGoogleApiClient) != null) && (mGoogleApiClient.isConnected())) { LocationServices.FusedLocationApi.removeLocationUpdates(mGoogleApiClient, this); } } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3463/buggy-version/phonesensor.src.main.java.org.md2k.phonesensor.phone.sensors.LocationFused.java", "BodyUseAPI": ["com.google.android.gms.common.api.GoogleApiClient.isConnected()", "LocationServices.FusedLocationApi.removeLocationUpdates(com.google.android.gms.common.api.GoogleApiClient,org.md2k.phonesensor.phone.sensors.LocationFused)"], "Fixed commit": "14fbeceb6aa7e5d85e9a9ee55f3f02f017656ee5", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-PhoneSensor", "Date": "2016-06-21T05:40:07Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.content.Intent accessibleIntent = new android.content.Intent(android.provider.Settings.ACTION_ACCESSIBILITY_SETTINGS); startActivity(accessibleIntent); } catch (java.lang.Exception e) { android.widget.Toast.makeText(this, \"\u9047\u5230\u4e00\u4e9b\u95ee\u9898,\u8bf7\u624b\u52a8\u6253\u5f00\u7cfb\u7edf\u8bbe\u7f6e>\u8f85\u52a9\u670d\u52a1>\u5fae\u4fe1\u7ea2\u5305(\u0e05\u00b4\u03c9`\u0e05)\", Toast.LENGTH_LONG).show(); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4188/buggy-version/app.src.main.java.xyz.monkeytong.hongbao.activities.MainActivity.java", "BodyUseAPI": ["xyz.monkeytong.hongbao.activities.MainActivity.startActivity(android.content.Intent)"], "Fixed commit": "f226c9edb44816c8c4a1bdc9704461cc1f9fef80", "Url": "https://api.github.com/repos/jinge1936/WeChatLuckyMoney", "Date": "2016-02-07T10:51:01Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mSocket.send(packet); sendingLine = \"\"; } catch (java.net.SocketException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2427/buggy-version/src.sk.madzik.android.logcatudp.LogcatThread.java", "BodyUseAPI": ["java.net.DatagramSocket.send(java.net.DatagramPacket)"], "Fixed commit": "c4f9acb414eaaa8f54025eaa1b567238b57f1336", "Url": "https://api.github.com/repos/Chemik/logcatudp", "Date": "2011-10-04T12:53:03Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { for (android.content.ContentValues value : values) { if (value == null) continue; if ((insertInTransaction(uri, value)) != null) dirty = true; if ((++opCount) >= (no.nordicsemi.android.log.localprovider.LocalLogContentProvider.BULK_INSERTS_PER_YIELD_POINT)) { opCount = 0; try { yield(transaction); } catch (java.lang.RuntimeException re) { transaction.markYieldFailed(); throw re; } } } if (dirty) { transaction.markDirty(); } transaction.markSuccessful(true); } finally { endTransaction(uri, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8102/buggy-version/log.src.main.java.no.nordicsemi.android.log.localprovider.LocalLogContentProvider.java", "BodyUseAPI": ["no.nordicsemi.android.log.localprovider.LocalLogContentProvider.yield(no.nordicsemi.android.log.localprovider.LogTransaction)", "no.nordicsemi.android.log.localprovider.LogTransaction.markYieldFailed()", "no.nordicsemi.android.log.localprovider.LogTransaction.markDirty()", "no.nordicsemi.android.log.localprovider.LocalLogContentProvider.insertInTransaction(android.net.Uri,android.content.ContentValues)", "no.nordicsemi.android.log.localprovider.LogTransaction.markSuccessful(boolean)"], "Fixed commit": "17929e60e4772abe024584b349bf6f4ad589805e", "Url": "https://api.github.com/repos/NordicSemiconductor/nRF-Logger-API", "Date": "2017-01-13T15:08:21Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((cursor) != null) { cursor.close(); cursor = null; } } catch (java.lang.Exception ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8921/buggy-version/droid-orm.src.main.java.info.breezes.orm.QueryAble.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "df4c227c46285f5e57a235174b569724a7cb3c6f", "Url": "https://api.github.com/repos/muyuballs/Orm", "Date": "2015-07-02T02:23:01Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { style = c.getAnnotation(com.linfaxin.multistyletextview.MultiStyleTextView.Style.class); } catch (java.lang.IncompatibleClassChangeError ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7448/buggy-version/library.src.main.java.com.linfaxin.multistyletextview.MultiStyleTextView.java", "BodyUseAPI": ["java.lang.Class<? extends com.linfaxin.multistyletextview.MultiStyleTextView.StyleText>.getAnnotation(java.lang.Class)"], "Fixed commit": "b92553a946bd0000c03e389b08b6055ffaf958ba", "Url": "https://api.github.com/repos/linfaxin/MultiStyleTextView", "Date": "2015-08-21T10:29:07Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return jdbcTemplate.queryForObject(sql, this, params.toArray(new java.lang.Object[params.size()])); } catch (org.springframework.dao.EmptyResultDataAccessException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3162/buggy-version/commons-jdbc.src.main.java.com.baidu.oped.apm.BaseRepository.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.toArray(java.lang.Object[])", "java.util.List<java.lang.Object>.size()", "org.springframework.jdbc.core.JdbcTemplate.queryForObject(java.lang.String,com.baidu.oped.apm.BaseRepository<T>,java.lang.Object[])"], "Fixed commit": "50293b465f0a6b588ebe403b8c802e72731bcc4b", "Url": "https://api.github.com/repos/masonmei/apm", "Date": "2015-08-20T07:54:03Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { newTemp.createNewFile(); } catch (java.io.IOException e) { main.jarvas.Storage.logger.log(java.util.logging.Level.INFO, ((main.jarvas.Storage.filename) + \" not exist\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4692/buggy-version/src.main.jarvas.Storage.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "1f5ab978a6f1a48adccea64e9cdae5228d91e2f4", "Url": "https://api.github.com/repos/cs2103aug2015-f09-1j/main", "Date": "2015-11-05T14:05:53Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Integer integer = java.lang.Integer.valueOf(text); rootObject.put(node.getNodeName(), integer); } catch (java.lang.NumberFormatException e) { rootObject.put(node.getNodeName(), text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8449/buggy-version/src.main.java.com.admicro.vertx.utils.XmlConverter.java", "BodyUseAPI": ["io.vertx.core.json.JsonObject.put(java.lang.String,java.lang.Integer)", "java.lang.Integer.valueOf(java.lang.String)", "org.w3c.dom.Node.getNodeName()"], "Fixed commit": "fd8e3a28a86c7b2db44b5ad061a5f3bc91e482e6", "Url": "https://api.github.com/repos/tjeubaoit/vertxlet", "Date": "2015-09-01T03:33:41Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getAndCreateChannel(address, nettyClientConfig.getParallelism()); } catch (java.lang.InterruptedException e) { com.alibaba.rocketmq.remoting.netty.NettyRemotingClient.log.info(\"Error while creating connection\", e); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4229/buggy-version/rocketmq-remoting.src.main.java.com.alibaba.rocketmq.remoting.netty.NettyRemotingClient.java", "BodyUseAPI": ["com.alibaba.rocketmq.remoting.netty.NettyRemotingClient.getAndCreateChannel(java.lang.String,nettyClientConfig.getParallelism())", "com.alibaba.rocketmq.remoting.netty.NettyClientConfig.getParallelism()"], "Fixed commit": "74e313b3211800859aaeaa10c369c55e0c145915", "Url": "https://api.github.com/repos/masterasia/Alibaba_RocketMQ", "Date": "2015-08-25T10:35:03Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.lang.Long.parseLong(this._request.getParameter(name)); } catch (java.lang.NumberFormatException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/9205/buggy-version/src.main.java.com.wannabeblocket.core.BeanBase.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.lang.Long.parseLong(this._request.getParameter(name))"], "Fixed commit": "52b2e50c5d9af6e92e960176b852e2ac92c9402b", "Url": "https://api.github.com/repos/chip2n/dat076-wannabe-blocket", "Date": "2013-10-20T11:31:35Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return java.lang.Long.parseLong(this._request.getParameter(name)); } catch (java.lang.NumberFormatException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/9205/buggy-version/src.main.java.com.wannabeblocket.core.ServletBase.java", "BodyUseAPI": ["java.lang.Long.parseLong(this._request.getParameter(name))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "52b2e50c5d9af6e92e960176b852e2ac92c9402b", "Url": "https://api.github.com/repos/chip2n/dat076-wannabe-blocket", "Date": "2013-10-20T11:31:35Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { res.setM_cost(java.lang.Float.parseFloat(rs.getString(\"cost\"))); } catch (java.lang.Exception e) { res.setM_cost(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1804/buggy-version/cs5530.Stay.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)", "java.lang.Float.parseFloat(java.lang.String)", "cs5530.Reservation.setM_cost(float)"], "Fixed commit": "487cbc610bbf5966262b0ce2e98cb51f27e6c37a", "Url": "https://api.github.com/repos/bensnoozled/CS5530", "Date": "2017-03-22T20:35:41Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { eu.sqooss.core.AlitheiaCore core = eu.sqooss.core.AlitheiaCore.getInstance(); if (core != null) { core.registerService(gr.tracer.platform.TracerPlatformService.class, gr.tracer.platform.TracerPlatformServiceImpl.class); } } catch (java.lang.Exception e) { java.lang.System.err.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5745/buggy-version/tracer.platform.src.main.java.gr.tracer.platform.Activator.java", "BodyUseAPI": ["eu.sqooss.core.AlitheiaCore.registerService(java.lang.Class,java.lang.Class)", "eu.sqooss.core.AlitheiaCore.getInstance()"], "Fixed commit": "089a7403b5bbe70d59c1e162e73cb02d60ddce36", "Url": "https://api.github.com/repos/modernist/Alitheia-Core", "Date": "2013-02-04T18:46:51Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { _curator = com.netflix.curator.framework.CuratorFrameworkFactory.newClient(zkStr, backtype.storm.utils.Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_SESSION_TIMEOUT)), 15000, new com.netflix.curator.retry.RetryNTimes(backtype.storm.utils.Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_RETRY_TIMES)), backtype.storm.utils.Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_RETRY_INTERVAL)))); _curator.start(); } catch (java.io.IOException ex) { storm.kafka.DynamicBrokersReader.LOG.error(\"can't connect to zookeeper\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1781/buggy-version/src.jvm.storm.kafka.DynamicBrokersReader.java", "BodyUseAPI": ["backtype.storm.utils.Utils.getInt(java.lang.Object)", "java.util.Map.get(Config.STORM_ZOOKEEPER_RETRY_TIMES)", "java.util.Map.get(Config.STORM_ZOOKEEPER_RETRY_INTERVAL)", "java.util.Map.get(Config.STORM_ZOOKEEPER_SESSION_TIMEOUT)", "backtype.storm.utils.Utils.getInt(java.lang.Object)", "com.netflix.curator.framework.CuratorFrameworkFactory.newClient(java.lang.String,backtype.storm.utils.Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_SESSION_TIMEOUT)),int,com.netflix.curator.retry.RetryNTimes)", "com.netflix.curator.framework.CuratorFramework.start()", "backtype.storm.utils.Utils.getInt(java.lang.Object)"], "Fixed commit": "a9429d3bc7f8be18aff64e564fda9fd621b39561", "Url": "https://api.github.com/repos/Evan-Sparks/storm-kafka-0.8-plus", "Date": "2014-05-21T21:36:45Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { tocc = java.util.Currency.getInstance(l).getCurrencyCode(); } catch (java.lang.Exception e) { logger.log(java.util.logging.Level.SEVERE, e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1913/buggy-version/gmsworldlayers.src.main.java.net.gmsworld.server.layers.HotelsBookingUtils.java", "BodyUseAPI": ["java.util.Currency.getCurrencyCode()", "java.util.Currency.getInstance(java.util.Locale)"], "Fixed commit": "ede299bfed5b1b7ef1738c96d310b99fd17f957c", "Url": "https://api.github.com/repos/jstakun/gms-world-server", "Date": "2016-12-18T12:35:10Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return sb.toString().getBytes(\"utf-8\"); } catch (java.io.UnsupportedEncodingException e) { return sb.toString().getBytes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1738/buggy-version/base.main.src.org.foilage.http.server.ServerEndPoint.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.lang.String.getBytes(java.lang.String)"], "Fixed commit": "4183ccfde42f88498a216b60c4ad80fc7c986f44", "Url": "https://api.github.com/repos/drbizzaro/foliage", "Date": "2016-10-13T21:35:59Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.eclipse.jetty.servlet.ServletHandler handler = servletHandler.getServletHandler(); java.util.List<org.eclipse.jetty.servlet.ServletHolder> servlets = new java.util.ArrayList<org.eclipse.jetty.servlet.ServletHolder>(); java.lang.String nameToRemove = null; for (org.eclipse.jetty.servlet.ServletHolder holder : handler.getServlets()) { if ((holder.getServlet()) != servlet) servlets.add(holder); else nameToRemove = holder.getName(); } if (nameToRemove == null) return; java.util.List<org.eclipse.jetty.servlet.ServletMapping> mappings = new java.util.ArrayList<org.eclipse.jetty.servlet.ServletMapping>(); for (org.eclipse.jetty.servlet.ServletMapping mapping : handler.getServletMappings()) { if (!(nameToRemove.contains(mapping.getServletName()))) mappings.add(mapping); } handler.setServletMappings(mappings.toArray(new org.eclipse.jetty.servlet.ServletMapping[0])); handler.setServlets(servlets.toArray(new org.eclipse.jetty.servlet.ServletHolder[0])); } catch (javax.servlet.ServletException e) { org.sensorhub.impl.service.HttpServer.log.error(\"Error while undeploying servlet\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8907/buggy-version/sensorhub-core.src.main.java.org.sensorhub.impl.service.HttpServer.java", "BodyUseAPI": ["java.util.List<org.eclipse.jetty.servlet.ServletMapping>.toArray(org.eclipse.jetty.servlet.ServletMapping[])", "java.util.List<org.eclipse.jetty.servlet.ServletHolder>.toArray(org.eclipse.jetty.servlet.ServletHolder[])", "org.eclipse.jetty.servlet.ServletHandler.getServlets()", "org.eclipse.jetty.servlet.ServletContextHandler.getServletHandler()", "java.util.List<org.eclipse.jetty.servlet.ServletHolder>.add(org.eclipse.jetty.servlet.ServletHolder)", "org.eclipse.jetty.servlet.ServletHolder.getName()", "java.util.List<org.eclipse.jetty.servlet.ServletMapping>.add(org.eclipse.jetty.servlet.ServletMapping)", "org.eclipse.jetty.servlet.ServletHandler.setServletMappings(mappings.toArray(new org.eclipse.jetty.servlet.ServletMapping[0]))", "org.eclipse.jetty.servlet.ServletHandler.getServletMappings()", "org.eclipse.jetty.servlet.ServletMapping.getServletName()", "org.eclipse.jetty.servlet.ServletHolder.getServlet()", "java.lang.String.contains(mapping.getServletName())", "org.eclipse.jetty.servlet.ServletHandler.setServlets(servlets.toArray(new org.eclipse.jetty.servlet.ServletHolder[0]))"], "Fixed commit": "b8350b754936f1159382d13f0b9003037de468a5", "Url": "https://api.github.com/repos/sensiasoft/sensorhub", "Date": "2015-07-04T11:46:07Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cat = new org.sper.logtracker.erroranalysis.data.ErrorCategory(data); catalog.add(cat); } catch (org.sper.logtracker.erroranalysis.data.NoContextException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7533/buggy-version/logtracker.src.main.java.org.sper.logtracker.erroranalysis.data.LogLineCatalog.java", "BodyUseAPI": ["java.util.List<org.sper.logtracker.erroranalysis.data.ErrorCategory>.add(org.sper.logtracker.erroranalysis.data.ErrorCategory)"], "Fixed commit": "206932490089babc26b0da8885ff9fa050b1efad", "Url": "https://api.github.com/repos/silvanperego/LogTracker", "Date": "2016-05-24T11:44:48Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((com.github.vimcmd.javaFundamentals.p02_classesAndLibrariesUsage.ch10_collections.sub07_chapterTasks.BracketsChecker.brackets.containsValue(ch)) && (ch != (stack.pop()))) { return false; } } catch (java.util.EmptyStackException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5036/buggy-version/src.main.java.com.github.vimcmd.javaFundamentals.p02_classesAndLibrariesUsage.ch10_collections.sub07_chapterTasks.BracketsChecker.java", "BodyUseAPI": ["java.util.Stack<java.lang.Character>.pop()", "java.util.Map<java.lang.Character, java.lang.Character>.containsValue(char)"], "Fixed commit": "f274599d73c7c29ea1954826d227a4ca6d4a7ff5", "Url": "https://api.github.com/repos/vimcmd/JavaFundamentals", "Date": "2016-07-14T10:07:33Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { runTime = java.lang.Integer.parseInt(response); } catch (java.lang.NumberFormatException e) { java.lang.System.out.println(\"Contining to the next transition.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5127/buggy-version/src.simulator.Simulator.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "13740566fddd577ffee5163861dfa1af7729b2d8", "Url": "https://api.github.com/repos/tjflexmaster/UAV_ROLE_MODEL", "Date": "2013-06-26T20:22:06Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { s.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6094/buggy-version/AcmeProject.src.Model.java", "BodyUseAPI": ["java.io.OutputStream.close()"], "Fixed commit": "1e458dfbce4dd532244d3a9440117567a2a39fba", "Url": "https://api.github.com/repos/anuragkanungo/acmeModel", "Date": "2016-07-01T18:16:42Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { model.setBalance(this.da.getAccountBalance(0)); } catch (java.lang.IllegalArgumentException e) { model.setBalance(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7552/buggy-version/Android_Budget_App.src.it.chalmers.mufasa.android_budget_app.controller.MainController.java", "BodyUseAPI": ["it.chalmers.mufasa.android_budget_app.controller.database.DataAccessor.getAccountBalance(int)", "it.chalmers.mufasa.android_budget_app.model.MainModel.setBalance(this.da.getAccountBalance(0))"], "Fixed commit": "a72f4ce9a95701e01ac28b09fba88665f0dceaf8", "Url": "https://api.github.com/repos/daubigne/Android-Budget-Project", "Date": "2012-09-23T16:18:19Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { server.stop(); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8688/buggy-version/Application.src.main.java.io.github.antijava.marjio.scene.RoomScene.java", "BodyUseAPI": ["io.github.antijava.marjio.scene.IServer.stop()"], "Fixed commit": "566cbde3b1384ab14caad2a1d727bc48b30cae3b", "Url": "https://api.github.com/repos/NCU-Anti-Java/Marjio", "Date": "2015-12-28T14:58:44Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { client.stop(); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8688/buggy-version/Application.src.main.java.io.github.antijava.marjio.scene.RoomScene.java", "BodyUseAPI": ["io.github.antijava.marjio.scene.IClient.stop()"], "Fixed commit": "566cbde3b1384ab14caad2a1d727bc48b30cae3b", "Url": "https://api.github.com/repos/NCU-Anti-Java/Marjio", "Date": "2015-12-28T14:58:44Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { uriDoc = notificacionPort.obtenerURIDocumentoNotificacion(\"\", uriNotificacion, DocumentoNotificacionEnumType.PUESTA_A_DISPOSICION); services.notificacion.NotificacionServiceImpl.log.info(java.lang.String.format(\"Documento de puesta a disposici\u00f3n (%s) para la notificaci\u00f3n (%s)\", uriDoc, uriNotificacion)); } catch (java.lang.Exception e) { services.notificacion.NotificacionServiceImpl.log.error((\"Fallo al intentar recuperar la URI del Documento Notificacion. Error: \" + (e.getMessage()))); services.notificacion.NotificacionServiceImpl.log.error(((\"Ojo, la URI del documento puesta a disposicion de la notificacion \" + uriNotificacion) + \" se setear\u00e1 a NULL en la BBDD local de la aplicaci\u00f3n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8399/buggy-version/fap.app.services.notificacion.NotificacionServiceImpl.java", "BodyUseAPI": ["org.apache.log4j.Logger.info(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String,java.lang.String)", "es.gobcan.platino.servicios.enotificacion.notificacion.NotificacionPortType.obtenerURIDocumentoNotificacion(java.lang.String,java.lang.String,DocumentoNotificacionEnumType.PUESTA_A_DISPOSICION)"], "Fixed commit": "8f240549224d396ddc435f9166f6eb39b3bcd0d8", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2012-07-15T11:02:17Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { editor.setSelection(((editor.getSelectionStart()) - 1)); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6192/buggy-version/src.edu.sru.andgate.bitbot.ide.IDE.java", "BodyUseAPI": ["android.widget.EditText.getSelectionStart()", "android.widget.EditText.setSelection(((editor.getSelectionStart()) - 1))"], "Fixed commit": "c86011d0fc67130757361f19c34bfe8e6771a470", "Url": "https://api.github.com/repos/Ciph3rzer0/BitBot", "Date": "2011-03-31T18:20:20Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { editor.setSelection(((editor.getSelectionStart()) + 1)); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6192/buggy-version/src.edu.sru.andgate.bitbot.ide.IDE.java", "BodyUseAPI": ["android.widget.EditText.setSelection(((editor.getSelectionStart()) + 1))", "android.widget.EditText.getSelectionStart()"], "Fixed commit": "c86011d0fc67130757361f19c34bfe8e6771a470", "Url": "https://api.github.com/repos/Ciph3rzer0/BitBot", "Date": "2011-03-31T18:20:20Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { html += (\"<td>\" + (invertTableRow.getValue(0))) + \"</td>\"; } catch (java.lang.Exception ex) { html += (\"<td>\" + (MCRecipe.Lang.ERRORS.VAL_MISSING_REPORT)) + \"</td>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7102/buggy-version/src.forall.HTMLPrint.java", "BodyUseAPI": ["Reporting.InvertTableRow.getValue(int)"], "Fixed commit": "38238ee05021921439aefff291fdf3f0edbb8083", "Url": "https://api.github.com/repos/kocmoc1985/DBEraser", "Date": "2017-12-05T10:53:17Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { factory.setAttribute(FeatureKeys.XSLT_VERSION, \"2.0\"); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5772/buggy-version/mod.schematron.src.main.com.thaiopensource.validate.schematron.NewSaxonSchemaReaderFactory.java", "BodyUseAPI": ["javax.xml.transform.TransformerFactory.setAttribute(FeatureKeys.XSLT_VERSION,java.lang.String)"], "Fixed commit": "891ede18b0ceebb6a258ea34f80e333850da5285", "Url": "https://api.github.com/repos/relaxng/jing-trang", "Date": "2012-07-25T06:39:50Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Class.forName(\"android.webkit.WebView\").getMethod(\"onPause\", ((java.lang.Class[]) (null))).invoke(webView, ((java.lang.Object[]) (null))); } catch (java.lang.Exception E) { android.util.Log.i(\"closeWebView\", E.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8514/buggy-version/app.src.main.java.basketball.com.sports.VideoActivity.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(android.webkit.WebView,<nulltype>)", "java.lang.Class<?>.getMethod(java.lang.String,<nulltype>)", "java.lang.Class.forName(java.lang.String)"], "Fixed commit": "46e606df939bfbf70232d3773ed95ce275740422", "Url": "https://api.github.com/repos/panxp/android", "Date": "2016-08-21T08:42:29Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { $ = gson.fromJson(codeine.utils.TextFileUtils.getContents(file), clazz); } catch (com.google.gson.JsonSyntaxException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5864/buggy-version/src.common.codeine.utils.JsonFileUtils.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(codeine.utils.TextFileUtils.getContents(file),java.lang.reflect.Type)", "codeine.utils.TextFileUtils.getContents(java.lang.String)"], "Fixed commit": "64b9d8fa76da229d9138f2e6891efc60640f1af4", "Url": "https://api.github.com/repos/codeine-cd/codeine", "Date": "2015-02-05T11:13:14Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return m.isAnnotationPresent(getLoadedClassFor(com.technophobia.substeps.model.SubSteps.Step.class)); } catch (final java.lang.ArrayStoreException ex) { com.technophobia.substeps.FeatureEditorPlugin.instance().error((\"ArrayStoreException trying to analyse class \" + (m.getDeclaringClass().getName()))); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3143/buggy-version/com.technophobia.substeps.editor.src.main.java.com.technophobia.substeps.classloader.ClassLoadedClassAnalyser.java", "BodyUseAPI": ["com.technophobia.substeps.classloader.ClassLoadedClassAnalyser.getLoadedClassFor(java.lang.Class)", "java.lang.reflect.Method.isAnnotationPresent(java.lang.Class<T>)"], "Fixed commit": "d00fe71b413751f122d9c6d459cd5f6e552171fc", "Url": "https://api.github.com/repos/technophobia/substeps-eclipse-plugin", "Date": "2013-05-20T08:49:08Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return loadedClass.isAnnotationPresent(getLoadedClassFor(com.technophobia.substeps.model.SubSteps.AdditionalStepImplementations.class)); } catch (final java.lang.ArrayStoreException ex) { com.technophobia.substeps.FeatureEditorPlugin.instance().error((\"ArrayStoreException trying to analyse class \" + (loadedClass.getName()))); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3143/buggy-version/com.technophobia.substeps.editor.src.main.java.com.technophobia.substeps.classloader.ClassLoadedClassAnalyser.java", "BodyUseAPI": ["com.technophobia.substeps.classloader.ClassLoadedClassAnalyser.getLoadedClassFor(java.lang.Class)", "java.lang.Class<?>.isAnnotationPresent(java.lang.Class<T>)"], "Fixed commit": "d00fe71b413751f122d9c6d459cd5f6e552171fc", "Url": "https://api.github.com/repos/technophobia/substeps-eclipse-plugin", "Date": "2013-05-20T08:49:08Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.elmakers.mine.bukkit.utility.NMSUtils.class_EntityArmorStand_disabledSlotsField = com.elmakers.mine.bukkit.utility.NMSUtils.class_EntityArmorStand.getDeclaredField(\"bA\"); } catch (java.lang.Throwable ignore2) { try { com.elmakers.mine.bukkit.utility.NMSUtils.class_EntityArmorStand_disabledSlotsField = com.elmakers.mine.bukkit.utility.NMSUtils.class_EntityArmorStand.getDeclaredField(\"bz\"); } catch (java.lang.Exception ex) { com.elmakers.mine.bukkit.utility.NMSUtils.class_EntityArmorStand_disabledSlotsField = com.elmakers.mine.bukkit.utility.NMSUtils.class_EntityArmorStand.getDeclaredField(\"bi\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7841/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.utility.NMSUtils.java", "BodyUseAPI": ["java.lang.Class<?>.getDeclaredField(java.lang.String)"], "Fixed commit": "cc9fcb28c7f5195cb84027fea6079f934225ea52", "Url": "https://api.github.com/repos/S-Toad/MagicPlugin", "Date": "2016-08-23T15:59:19Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { songjong.com.seongnamgiftcard.TabFragment.GoogleMapFragment.layout = inflater.inflate(R.layout.map_fragment, container, false); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7961/buggy-version/SeongnamGiftCard.app.src.main.java.songjong.com.seongnamgiftcard.TabFragment.GoogleMapFragment.java", "BodyUseAPI": ["android.view.LayoutInflater.inflate(R.layout.map_fragment,android.view.ViewGroup,boolean)"], "Fixed commit": "64f70d3fa5719393202c792ab58c7d49c5702f37", "Url": "https://api.github.com/repos/Hyung-Kim/seongnam", "Date": "2017-08-20T11:23:38Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { currentContactUserCode = java.lang.Long.valueOf(currentUserCodeEditText.getText().toString()); } catch (java.lang.NumberFormatException e) { android.widget.Toast.makeText(getContext(), \"The user code has to be a number\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3617/buggy-version/Contact.ContactFragment.java", "BodyUseAPI": ["java.lang.Long.valueOf(currentUserCodeEditText.getText().toString())", "android.widget.EditText.getText()", "currentUserCodeEditText.getText().toString()"], "Fixed commit": "7825f75b03263c08040ac73212c1ab4b871098b1", "Url": "https://api.github.com/repos/Numb-rs/IoE_App", "Date": "2017-02-10T08:19:52Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { listOfFiles = getFiles(); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/916/buggy-version/src.main.java.TreeEditDistanceArray.java", "BodyUseAPI": ["TreeEditDistanceArray.getFiles()"], "Fixed commit": "d8d635a6330978a98ea9fc2814512f923d408888", "Url": "https://api.github.com/repos/rohanrrc/AST-edit-distance", "Date": "2016-04-01T02:36:37Z"},
{"Line": "=>1780", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (currentFunctionData.identifierMemory.get(ctx.Identifier().getText()).get(1).toString().contains(\"array\")) { return ((T) (currentFunctionData.identifierMemory.get(ctx.Identifier().getText()).get(0).toString())); } } catch (java.lang.NullPointerException npe) { VisitorErrorReporter.CreateErrorMessage(((\"The identifier : \" + (ctx.Identifier().getText())) + \" does not exist.\"), ctx.getStart()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/276/buggy-version/src.compile.compilersource.EvalVisitor.java", "BodyUseAPI": ["ctx.Identifier().getText()", "java.util.Map<java.lang.String, java.util.ArrayList<T>>.get(ctx.Identifier().getText())", "myGrammarParser.ArrayLengthExpressionContext.Identifier()", "java.util.ArrayList<T>.get(int)", "java.util.Map<java.lang.String, java.util.ArrayList<T>>.get(ctx.Identifier().getText())", "myGrammarParser.ArrayLengthExpressionContext.Identifier()", "currentFunctionData.identifierMemory.get(ctx.Identifier().getText()).get(1).toString()", "java.util.ArrayList<T>.get(int)", "currentFunctionData.identifierMemory.get(ctx.Identifier().getText()).get(0).toString()", "currentFunctionData.identifierMemory.get(ctx.Identifier().getText()).get(1).toString().contains(java.lang.String)", "ctx.Identifier().getText()"], "Fixed commit": "25420d48361ddcaa9583fdf0165306c3bd5bae9e", "Url": "https://api.github.com/repos/cmpiler/Compiler", "Date": "2017-11-28T13:00:31Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { expression = java.net.URLEncoder.encode(expression, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4998/buggy-version/rhogen-wizard.src.rhogenwizard.debugger.DebugProtocol.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "412759c9c8e85b724d3e4689c53d8c71c01af930", "Url": "https://api.github.com/repos/rhomobile/rhostudio", "Date": "2011-05-06T10:18:38Z"},
{"Line": "=>1507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { queue.put(dt.getPayload().timestamp, dt); } catch (java.lang.RuntimeException e) { uk.ac.imperial.lsds.seep.processingunit.Dispatcher.logger.error((((\"Cannot put timestamp=\" + (dt.getPayload().timestamp)) + \", map=\") + (queue))); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3993/buggy-version/seep-system.src.main.java.uk.ac.imperial.lsds.seep.processingunit.Dispatcher.java", "BodyUseAPI": ["java.util.SortedMap<java.lang.Long, uk.ac.imperial.lsds.seep.comm.serialization.DataTuple>.put(dt.getPayload().timestamp,uk.ac.imperial.lsds.seep.comm.serialization.DataTuple)", "uk.ac.imperial.lsds.seep.comm.serialization.DataTuple.getPayload()"], "Fixed commit": "5d91fad5ff7a1a5fd292dda5c558421cfbb9e050", "Url": "https://api.github.com/repos/lsds/SEEP", "Date": "2017-03-01T11:08:47Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (item.getClass().getName().contains(\"mekanism.common.item\")) return true; } catch (java.lang.Exception oops) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9150/buggy-version/src.main.java.com.darkona.adventurebackpack.inventory.SlotTool.java", "BodyUseAPI": ["com.darkona.adventurebackpack.inventory.Item.getClass()", "item.getClass().getName()", "item.getClass().getName().contains(java.lang.String)"], "Fixed commit": "f5b67c36fdc10b2ad5368c3c0c3e5a705ee1331c", "Url": "https://api.github.com/repos/runescapejon/AdventureBackpack2", "Date": "2016-09-07T16:55:05Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.System.out.println((\"Result: \" + (p.evaluate(input)))); } catch (java.lang.RuntimeException e) { java.lang.System.out.println(\"You can't divide by 0!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2339/buggy-version/src.Main.java", "BodyUseAPI": ["java.io.PrintStream.println((\"Result: \" + (p.evaluate(input))))", "Postfix.evaluate(java.lang.String)"], "Fixed commit": "2ca7e74fe16536f0f4e655c0f7c2961b4db9454a", "Url": "https://api.github.com/repos/EliGould/PostfixConverter", "Date": "2016-05-30T12:26:11Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { world.addEntityToWorld(child1); } catch (java.lang.IllegalArgumentException illegalArgumentException) { child1.Terminate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8265/buggy-version/OGP1617-Asteroids.src.asteroids.model.Planetoid.java", "BodyUseAPI": ["asteroids.model.World.addEntityToWorld(asteroids.model.Asteroid)"], "Fixed commit": "186b0e14d27c26d0a0881e6290e2e02fbecac8cd", "Url": "https://api.github.com/repos/zevereir/ZevereirsProject", "Date": "2017-04-21T12:33:43Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { world.addEntityToWorld(child2); } catch (java.lang.IllegalArgumentException illegalArgumentException) { child2.Terminate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8265/buggy-version/OGP1617-Asteroids.src.asteroids.model.Planetoid.java", "BodyUseAPI": ["asteroids.model.World.addEntityToWorld(asteroids.model.Asteroid)"], "Fixed commit": "186b0e14d27c26d0a0881e6290e2e02fbecac8cd", "Url": "https://api.github.com/repos/zevereir/ZevereirsProject", "Date": "2017-04-21T12:33:43Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { write(userInterface); } catch (javax.xml.transform.TransformerException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4417/buggy-version/src.by.andrewblinets.transport.ui.write.WriteXmlFile.java", "BodyUseAPI": ["by.andrewblinets.transport.ui.write.WriteXmlFile.write(by.andrewblinets.transport.ui.UserInterface)"], "Fixed commit": "8d4e80b4e77314271d78dc2f8201b509c963a08c", "Url": "https://api.github.com/repos/AndrewBlinets/Task1", "Date": "2017-03-27T07:46:58Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getCommand(\"cmdbook\").setExecutor(CommandListener); getCommand(\"cb\").setExecutor(CommandListener); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3839/buggy-version/src.VdW.Maxim.cmdBook.cmdBook.java", "BodyUseAPI": ["getCommand(\"cmdbook\").setExecutor(VdW.Maxim.cmdBook.CommandClass)", "VdW.Maxim.cmdBook.cmdBook.getCommand(java.lang.String)", "VdW.Maxim.cmdBook.cmdBook.getCommand(java.lang.String)", "getCommand(\"cb\").setExecutor(VdW.Maxim.cmdBook.CommandClass)"], "Fixed commit": "a398f7beb4416497775eaa98403142636b18a2ee", "Url": "https://api.github.com/repos/Maximvdw/cmdBook", "Date": "2012-09-28T21:04:35Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { client.createSubscription(channel, subConfig); java.lang.Thread.sleep(2000); } catch (java.lang.Exception e) { getLogger().error(e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5239/buggy-version/nifi-satori-bundle-processors.src.main.java.com.laurencedaluz.nifi.satori.ConsumeSatoriRtm.java", "BodyUseAPI": ["com.laurencedaluz.nifi.satori.RtmClient.createSubscription(java.lang.String,com.laurencedaluz.nifi.satori.SubscriptionConfig)", "java.lang.Thread.sleep(int)"], "Fixed commit": "772f4d03c372ab03f9aab9ed3f8adff9ee2cce1b", "Url": "https://api.github.com/repos/laurencedaluz/nifi-satori-bundle", "Date": "2017-10-26T15:26:00Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cs = new beamscheduling.ChannelSelection(network); dijkstraThpt = cs.selectChannels(dpath); } catch (java.lang.ArrayIndexOutOfBoundsException e) { java.lang.System.out.println((((\"S: \" + source) + \" D: \") + destination)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1245/buggy-version/src.main.java.beamscheduling.Rcs.java", "BodyUseAPI": ["beamscheduling.ChannelSelection.selectChannels(java.util.List<beamscheduling.Edge>)"], "Fixed commit": "c6fac9d237c3489cee675ff9e975600ec68161cf", "Url": "https://api.github.com/repos/irjudson/beam-scheduling", "Date": "2011-07-14T19:00:40Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { raffleTime = ((messageArgs.length) > 1) ? java.lang.Integer.parseInt(messageArgs[1]) : 60; } catch (java.lang.NumberFormatException ignored) { raffleTime = 60; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8637/buggy-version/src.main.java.com.dankeroni.dankbot.modules.Raffle.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "d293ac417ebb56a41c91aa393fe1d20e5ea2130e", "Url": "https://api.github.com/repos/dankeroni/dankbot", "Date": "2016-05-10T13:51:57Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { resultList.add(_items.get(i).copy()); } catch (com.epictodo.logic.InvalidDateException e) { } catch (com.epictodo.logic.InvalidTimeException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4391/buggy-version/src.main.java.com.epictodo.logic.CRUDLogic.java", "BodyUseAPI": ["_items.get(i).copy()", "java.util.ArrayList<com.epictodo.logic.Task>.get(int)", "java.util.ArrayList<com.epictodo.logic.Task>.add(_items.get(i).copy())"], "Fixed commit": "21dd906bf6e10c9417e69d626bf7256baa32e19e", "Url": "https://api.github.com/repos/cs2103aug2014-f10-2j/main", "Date": "2014-11-09T12:29:40Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { retList.add(_items.get(i).copy()); } catch (com.epictodo.logic.InvalidDateException e) { } catch (com.epictodo.logic.InvalidTimeException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4391/buggy-version/src.main.java.com.epictodo.logic.CRUDLogic.java", "BodyUseAPI": ["java.util.ArrayList<com.epictodo.logic.Task>.add(_items.get(i).copy())", "java.util.ArrayList<com.epictodo.logic.Task>.get(int)", "_items.get(i).copy()"], "Fixed commit": "21dd906bf6e10c9417e69d626bf7256baa32e19e", "Url": "https://api.github.com/repos/cs2103aug2014-f10-2j/main", "Date": "2014-11-09T12:29:40Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { resultList.add(_items.get(i).copy()); } catch (com.epictodo.logic.InvalidDateException e) { } catch (com.epictodo.logic.InvalidTimeException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4391/buggy-version/src.main.java.com.epictodo.logic.CRUDLogic.java", "BodyUseAPI": ["java.util.ArrayList<com.epictodo.logic.Task>.get(int)", "java.util.ArrayList<com.epictodo.logic.Task>.add(_items.get(i).copy())", "_items.get(i).copy()"], "Fixed commit": "21dd906bf6e10c9417e69d626bf7256baa32e19e", "Url": "https://api.github.com/repos/cs2103aug2014-f10-2j/main", "Date": "2014-11-09T12:29:40Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { android.graphics.Bitmap bitmap = android.graphics.BitmapFactory.decodeByteArray(bitmapdata, 0, bitmapdata.length); setImageBitmap(bitmap); } catch (java.lang.OutOfMemoryError error) { android.util.Log.d(\"DeclareHome\", (\"Out of memory error while loading user image \" + (mFile.getUrl()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3952/buggy-version/app.src.main.java.com.wisecityllc.cookedapp.views.ClickableUserPortrait.java", "BodyUseAPI": ["android.graphics.BitmapFactory.decodeByteArray(byte[],int,int)", "com.wisecityllc.cookedapp.views.ClickableUserPortrait.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "dd014304c825e582f1af247aff742b6c5c3997cb", "Url": "https://api.github.com/repos/thewisecity/declarehome-android", "Date": "2015-11-23T21:40:14Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { configurationProperties.load(inStream); } catch (java.io.IOException e) { throw new es.eurohelp.opendata.aldapa.api.configuration.ConfigurationFileIOException(e.getMessage(), e.getCause()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4783/buggy-version/src.main.java.es.eurohelp.opendata.aldapa.api.configuration.ConfigurationManager.java", "BodyUseAPI": ["es.eurohelp.opendata.aldapa.api.configuration.ConfigurationProperties.load(java.io.InputStream)"], "Fixed commit": "67c0cdf716500d73aac46424a39f9a1abfa33160", "Url": "https://api.github.com/repos/mikel-egana-aranguren/ALDAPA", "Date": "2016-09-28T13:27:52Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { len = astWriter.getLength(); } catch (java.io.IOException e1) { if (boa.datagen.scm.AbstractCommit.debug) java.lang.System.err.println(\"Error getting length of sequence file writer!!!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5476/buggy-version/src.java.boa.datagen.scm.AbstractCommit.java", "BodyUseAPI": ["java.io.Writer.getLength()"], "Fixed commit": "90720f48688ff9417f2e59deca5bfafed451a80c", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2017-07-06T22:48:21Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { session.getRemote().sendBytes(BrowserPageAction.RELOAD.getActionByteBuffer()); } catch (java.lang.Exception e) { com.wffwebdemo.wffwebdemoproject.server.ws.JettyWSServerForIndexPage.LOGGER.severe(e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3117/buggy-version/src.main.java.com.wffwebdemo.wffwebdemoproject.server.ws.JettyWSServerForIndexPage.java", "BodyUseAPI": ["BrowserPageAction.RELOAD.getActionByteBuffer()", "session.getRemote().sendBytes(BrowserPageAction.RELOAD.getActionByteBuffer())", "org.eclipse.jetty.websocket.api.Session.getRemote()"], "Fixed commit": "e9b1d3bdbe24e2108493e0eed5c989b6d9567035", "Url": "https://api.github.com/repos/webfirmframework/wffweb-demo-deployment", "Date": "2016-09-30T16:29:28Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { gmailReader.analyse(); } catch (javax.mail messagingEx) { java.lang.System.out.println((\"Couldn't connect: \" + (messagingEx.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3727/buggy-version/src.main.java.BOTcenter.java", "BodyUseAPI": ["GmailReader.analyse()"], "Fixed commit": "f8f22c3da4a574d89248913ecd8460a4c330692a", "Url": "https://api.github.com/repos/YuriyVilnitskiy/BOT1", "Date": "2017-09-13T11:10:02Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.net.URLConnection connection = new java.net.URL(map.get(tok.getEditions().get(0).getId())).openConnection(); connection.setRequestProperty(\"User-Agent\", \"Mozilla/5.0 (Windows; U; WindowsNT 5.1; en-US; rv1.8.1.6) Gecko/20070725 Firefox/2.0.0.6\"); return javax.imageio.ImageIO.read(connection.getInputStream()); } catch (java.lang.Exception e) { org.magic.services.MTGCardMakerPicturesProvider prov2 = new org.magic.services.MTGCardMakerPicturesProvider(); return prov2.generatePictureForCard(tok, org.magic.services.MagicFactory.getInstance().getEnabledPicturesProvider().extractPicture(tok)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3304/buggy-version/src.org.magic.services.CockatriceTokenProvider.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(tok.getEditions().get(0).getId())", "tok.getEditions().get(int)", "java.net.URLConnection.setRequestProperty(java.lang.String,java.lang.String)", "org.magic.api.beans.MagicCard.getEditions()", "java.net.URL.openConnection()", "javax.imageio.ImageIO.read(java.io.InputStream)", "tok.getEditions().get(0).getId()", "java.net.URLConnection.getInputStream()"], "Fixed commit": "970a26d415b3f11cb7d030f1c0be72b80724306b", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2016-09-27T17:49:12Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.stratos.rest.endpoint.api.StratosApiV41Utils.removeCartridge(cartridgeType); return javax.ws.rs.core.Response.ok().entity(new org.apache.stratos.common.beans.ResponseMessageBean(org.apache.stratos.common.beans.ResponseMessageBean.SUCCESS, java.lang.String.format(\"Cartridge deleted successfully: [cartridge-type] %s\", cartridgeType))).build(); } catch (java.lang.Exception e) { return javax.ws.rs.core.Response.status(Response.Status.BAD_REQUEST).entity(new org.apache.stratos.common.beans.ResponseMessageBean(org.apache.stratos.common.beans.ResponseMessageBean.ERROR, e.getMessage())).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9174/buggy-version/components.org.apache.stratos.rest.endpoint.src.main.java.org.apache.stratos.rest.endpoint.api.StratosApiV41.java", "BodyUseAPI": ["org.apache.stratos.rest.endpoint.api.StratosApiV41Utils.removeCartridge(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String)", "javax.ws.rs.core.Response.ok().entity(new org.apache.stratos.common.beans.ResponseMessageBean(org.apache.stratos.common.beans.ResponseMessageBean.SUCCESS, java.lang.String.format(\"Cartridge deleted successfully: [cartridge-type] %s\", cartridgeType))).build()", "javax.ws.rs.core.Response.ok()", "javax.ws.rs.core.Response.ok().entity(org.apache.stratos.common.beans.ResponseMessageBean)"], "Fixed commit": "54106d5382f198be5d08757e3839d8a24cd6beb5", "Url": "https://api.github.com/repos/apache/stratos", "Date": "2015-05-20T13:54:53Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { identifierExists = User.checkIdentifier(numericIdentifier); } catch (java.lang.Exception e) { e.printStackTrace(writer); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7110/buggy-version/src.User.java", "BodyUseAPI": ["User.checkIdentifier(int)"], "Fixed commit": "cdd0edb3a0fd80c75c8dd702f45f9430916f4046", "Url": "https://api.github.com/repos/xabinapal/testbq", "Date": "2015-10-28T00:36:19Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.example.habitup.Controller.HabitUpController.executeOldCommands(oldQueue, getApplicationContext()); } catch (java.lang.Exception e) { android.widget.Toast.makeText(getBaseContext(), e.getMessage(), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2820/buggy-version/app.src.main.java.com.example.habitup.View.LoginActivity.java", "BodyUseAPI": ["com.example.habitup.Controller.HabitUpController.executeOldCommands(java.util.LinkedList<com.example.habitup.Model.HabitEventCommand>,getApplicationContext())", "com.example.habitup.View.LoginActivity.1.getApplicationContext()"], "Fixed commit": "46a6a1abd5ef622f8f55fc1de1a0467739bf6f5a", "Url": "https://api.github.com/repos/CMPUT301F17T29/HabitUp", "Date": "2017-12-04T02:43:32Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { startActivity(intent); } catch (android.content.ActivityNotFoundException e) { android.content.Intent browserIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse((\"http://www.youtube.com/watch?v=\" + (itemString[0])))); startActivity(browserIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6513/buggy-version/app.src.main.java.com.net.ddns.suyashbakshi.popularmovies.DetailFragment.java", "BodyUseAPI": ["com.net.ddns.suyashbakshi.popularmovies.DetailFragment.3.startActivity(android.content.Intent)"], "Fixed commit": "1030edd3f5bf121c620157ec678fcac6bfb6531b", "Url": "https://api.github.com/repos/suyashbakshi/Popular_Movies", "Date": "2016-04-03T07:10:13Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.la4j.linear.LinearSystem system = factory.createLinearSystem(matrix, b); org.la4j.vector.Vector x = system.solve(Matrices.GAUSSIAN_SOLVER); result.setColumn(i, x); } catch (java.lang.IllegalArgumentException ex) { throw new java.lang.IllegalArgumentException(\"This matrix is not invertible\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/697/buggy-version/src.main.java.org.la4j.inversion.GaussianInvertor.java", "BodyUseAPI": ["org.la4j.matrix.Matrix.setColumn(int,org.la4j.vector.Vector)", "org.la4j.linear.LinearSystem.solve(Matrices.GAUSSIAN_SOLVER)", "org.la4j.factory.Factory.createLinearSystem(org.la4j.matrix.Matrix,org.la4j.vector.Vector)"], "Fixed commit": "dade1b1af92130f9d75a62eaa82767c39e88d055", "Url": "https://api.github.com/repos/SamoylovMD/la4j", "Date": "2013-09-09T14:24:33Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { holder.mImage.setImageBitmap(mFilterValues.get(position).getImage()); } catch (cmput301f17t26.smores.all_exceptions.ImageNotSetException e) { holder.mImage.setImageResource(R.mipmap.app_icon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3970/buggy-version/app.src.main.java.cmput301f17t26.smores.all_adapters.HabitHistoryAdapter.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(mFilterValues.get(position).getImage())", "java.util.List<cmput301f17t26.smores.all_models.HabitEvent>.get(int)", "mFilterValues.get(position).getImage()"], "Fixed commit": "bf967590f89d5386006f1b4d34e051990828f897", "Url": "https://api.github.com/repos/CMPUT301F17T26/Smores", "Date": "2017-11-30T00:10:55Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { holder.mComment.setText(mFilterValues.get(position).getComment()); } catch (cmput301f17t26.smores.all_exceptions.CommentNotSetException e) { holder.mComment.setText(\"No comment\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3970/buggy-version/app.src.main.java.cmput301f17t26.smores.all_adapters.HabitHistoryAdapter.java", "BodyUseAPI": ["mFilterValues.get(position).getComment()", "java.util.List<cmput301f17t26.smores.all_models.HabitEvent>.get(int)", "android.widget.TextView.setText(mFilterValues.get(position).getComment())"], "Fixed commit": "bf967590f89d5386006f1b4d34e051990828f897", "Url": "https://api.github.com/repos/CMPUT301F17T26/Smores", "Date": "2017-11-30T00:10:55Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { request.setAttribute(\"mediums\", manager.findMovie(request.getParameter(\"movie_name\"))); request.getRequestDispatcher(cz.muni.fi.pb138.odskart.frontend.Search.SEARCH_RESULTS_JSP).forward(request, response); } catch (java.lang.IllegalArgumentException ex) { request.setAttribute(\"error\", ex.getMessage()); request.getRequestDispatcher(cz.muni.fi.pb138.odskart.frontend.Search.SEARCH_JSP).forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3200/buggy-version/ODSKartWeb.src.main.java.cz.muni.fi.pb138.odskart.frontend.Search.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,manager.findMovie(request.getParameter(\"movie_name\")))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "request.getRequestDispatcher(cz.muni.fi.pb138.odskart.frontend.Search.SEARCH_RESULTS_JSP).forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "cz.muni.fi.pb138.odskart.frontend.Search.findMovie(request.getParameter(\"movie_name\"))"], "Fixed commit": "b3d5f8bfa44d1772fc62f8a840c09af329fe354a", "Url": "https://api.github.com/repos/Sachji/ODSKartW", "Date": "2015-05-04T22:43:02Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { Out.append(\"1\"); } catch (java.io.IOException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7582/buggy-version/ObjectOrientatie.src.Exercise07.GreyNode.java", "BodyUseAPI": ["java.io.Writer.append(java.lang.String)"], "Fixed commit": "e2032684de73798a2a11df9d22439f203a7c77ec", "Url": "https://api.github.com/repos/TijmenvanderKemp/oo-2016", "Date": "2016-03-20T13:20:30Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dz = db.getFood(t.getFoodId()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4360/buggy-version/src.com.pj3.pos_manager.router.OrderRouter.java", "BodyUseAPI": ["com.pj3.pos_manager.router.FoodTemprary.getFoodId()", "com.pj3.pos_manager.router.DatabaseSource.getFood(t.getFoodId())"], "Fixed commit": "a06b43aac8c8b96b7e6940346f5c4831bf9d197b", "Url": "https://api.github.com/repos/tuanict/POS_Manager", "Date": "2014-12-12T03:36:48Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Double.parseDouble(mDefaultValue); return mDefaultValue; } catch (java.lang.NumberFormatException e) { org.jraf.androidcontentprovidergenerator.Log.w(org.jraf.androidcontentprovidergenerator.model.Field.TAG, ((((\"The default value for field \" + (mEntity.getNameLowerCase())) + \".\") + (getName())) + \" could not be parsed as a floating point type, which is probably a problem\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5545/buggy-version/src.main.java.org.jraf.androidcontentprovidergenerator.model.Field.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "161195d32985c96088dab35fb71a7870ecd4a5b3", "Url": "https://api.github.com/repos/robUx4/android-contentprovider-generator", "Date": "2015-02-04T09:31:01Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { byui.cit260.sevenyearsofplenty.control.CropsControl.feedPeople(reqNutrition, bushels, byui.cit260.sevenyearsofplenty.view.CropsView.theGame.getCrops()); } catch (byui.cit260.sevenyearsofplenty.exceptions.CropsControlException e) { java.lang.System.out.println(\"I am sorry master, I cannot do this.\"); java.lang.System.out.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7960/buggy-version/src.byui.cit260.sevenyearsofplenty.view.CropsView.java", "BodyUseAPI": ["byui.cit260.sevenyearsofplenty.model.Game.getCrops()", "byui.cit260.sevenyearsofplenty.control.CropsControl.feedPeople(int,int,byui.cit260.sevenyearsofplenty.view.CropsView.theGame.getCrops())"], "Fixed commit": "073398bad85865a4e1e7144f6e7f537f3568f662", "Url": "https://api.github.com/repos/ajlane17/SevenYearsOfPlenty", "Date": "2017-12-01T05:57:08Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { byui.cit260.sevenyearsofplenty.control.CropsControl.buyLand(price, toBuy, byui.cit260.sevenyearsofplenty.view.CropsView.theGame.getCrops()); } catch (byui.cit260.sevenyearsofplenty.exceptions.CropsControlException e) { java.lang.System.out.println(\"I am sorry master, I cannot do this.\"); java.lang.System.out.println(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7960/buggy-version/src.byui.cit260.sevenyearsofplenty.view.CropsView.java", "BodyUseAPI": ["byui.cit260.sevenyearsofplenty.model.Game.getCrops()", "byui.cit260.sevenyearsofplenty.control.CropsControl.buyLand(int,int,byui.cit260.sevenyearsofplenty.view.CropsView.theGame.getCrops())"], "Fixed commit": "073398bad85865a4e1e7144f6e7f537f3568f662", "Url": "https://api.github.com/repos/ajlane17/SevenYearsOfPlenty", "Date": "2017-12-01T05:57:08Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final java.lang.String jndi = dbProperties.getProperty(no.neksa.persistence.DATABASE_JNDI); dataSource = ((javax.sql.DataSource) (new javax.naming.InitialContext().lookup(jndi))); } catch (javax.naming.NamingException ne) { ne.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2260/buggy-version/src.main.java.no.neksa.persistence.DatabaseImpl.java", "BodyUseAPI": ["java.util.Properties.getProperty(no.neksa.persistence.DATABASE_JNDI)", "javax.naming.InitialContext.lookup(java.lang.String)"], "Fixed commit": "c6ee332f78c0f118e774ad144da27177ad8a50dc", "Url": "https://api.github.com/repos/knutesten/sp_javaee", "Date": "2013-11-26T16:08:08Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { files = file.listFiles(); } catch (java.lang.Exception e) { android.util.Log.e(\"FM\", (\"Can not read folder \" + (file.getAbsolutePath()))); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/335/buggy-version/app.src.main.java.com.roman.zapriy.severefilemanager.content_for_list.DirectoryModel.java", "BodyUseAPI": ["com.roman.zapriy.severefilemanager.content_for_list.DirectoryModel.listFiles()"], "Fixed commit": "14831985bb324b48077e85c35c676a8bd2e82806", "Url": "https://api.github.com/repos/alexeyzapriy/SevereFileManager", "Date": "2016-05-26T21:33:11Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { for (i = 0; i < (nbRows); i++) { cumulative = cumulative + (transitions[currentState][i]); if (step < cumulative) { currentState = i; break; } } } catch (java.lang.ArrayIndexOutOfBoundsException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4269/buggy-version/benchmark.rubis.src.main.java.edu.rice.rubis.client.TransitionTable.java", "BodyUseAPI": [], "Fixed commit": "f0ba49d8c204c8632356e81f3a92c8517ff98fc4", "Url": "https://api.github.com/repos/mneri/jessy", "Date": "2016-03-04T15:14:45Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { myLocation = locationManager.getLastKnownLocation(provider); } catch (java.lang.SecurityException e) { myLocation = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5738/buggy-version/app.src.main.java.kmcbinc.gvdirections.Directions_Activity.java", "BodyUseAPI": ["android.location.LocationManager.getLastKnownLocation(java.lang.String)"], "Fixed commit": "645c4d47ff623bc4adb4591e6c294fbfd5df78f1", "Url": "https://api.github.com/repos/trevinoKristian/GVdirections", "Date": "2016-02-18T20:32:26Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.cse4322.mockstock.UserAccount.getUserAccount(userName); } catch (android.database.sqlite.SQLiteException e) { this.userName = userName; save(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8479/buggy-version/app.src.main.java.com.cse4322.mockstock.UserAccount.java", "BodyUseAPI": ["com.cse4322.mockstock.UserAccount.getUserAccount(java.lang.String)"], "Fixed commit": "fe7a52d4aa0d41ad47685d9dd6f8068d20cd1a3d", "Url": "https://api.github.com/repos/jtompkins84/MockStock", "Date": "2016-11-12T16:55:43Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { updateCameraOrientation(); } catch (java.lang.Exception ex) { android.widget.Toast.makeText(getContext(), \"\u6253\u5f00\u76f8\u673a\u5931\u8d25\", Toast.LENGTH_SHORT).show(); android.util.Log.e(com.terrydr.eyeScope.CameraView.TAG, (\"\u6253\u5f00\u76f8\u673a\u5931\u8d25\u3002\" + (ex.getMessage()))); cActivity.finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/744/buggy-version/src.android.com.terrydr.eyeScope.CameraView.java", "BodyUseAPI": ["com.terrydr.eyeScope.CameraView.1.updateCameraOrientation()"], "Fixed commit": "d7803aee1c13742c7598c398947d4530c9fefa2d", "Url": "https://api.github.com/repos/liang19901030/com.junruihealthcare.JREye", "Date": "2016-06-14T07:36:36Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equals(tenantDomain))) { org.wso2.carbon.core.multitenancy.utils.TenantAxisUtils.getTenantConfigurationContext(tenantDomain, org.wso2.carbon.core.services.internal.CarbonServicesServiceComponent.getConfigurationContextService().getServerConfigContext()); } } catch (java.lang.Exception e) { org.wso2.carbon.core.services.util.CarbonAuthenticationUtil.log.error(\"Error trying load tenant after successful login\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/498/buggy-version/core.org.wso2.carbon.core.services.src.main.java.org.wso2.carbon.core.services.util.CarbonAuthenticationUtil.java", "BodyUseAPI": ["org.wso2.carbon.core.services.internal.CarbonServicesServiceComponent.getConfigurationContextService()", "MultitenantConstants.SUPER_TENANT_DOMAIN_NAME.equals(java.lang.String)", "org.wso2.carbon.core.services.internal.CarbonServicesServiceComponent.getConfigurationContextService().getServerConfigContext()", "org.wso2.carbon.core.multitenancy.utils.TenantAxisUtils.getTenantConfigurationContext(java.lang.String,org.wso2.carbon.core.services.internal.CarbonServicesServiceComponent.getConfigurationContextService().getServerConfigContext())"], "Fixed commit": "4f42a64a0581668b1c657257292dcb15549a8d1e", "Url": "https://api.github.com/repos/wso2/carbon-kernel", "Date": "2016-10-25T18:32:59Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { this.affinityValue = ((java.lang.Float) (fields[7])); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4952/buggy-version/manage.WEB-INF.classes.org.bsdbmanage.Interaction.java", "BodyUseAPI": [], "Fixed commit": "ca7496fe48f14dd16ecbba4b3cf16e6eff81328d", "Url": "https://api.github.com/repos/samirelanduk/synpharm", "Date": "2016-04-25T14:34:15Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((vmc) == null) { outputString = traceprinter.JDI2JSON.compileErrorOutput(usercode, \"Internal error: there was an error starting the debuggee VM.\", 0, 0).toString(); }else { vmc.join(); if ((vmc.success) == null) { outputString = traceprinter.JDI2JSON.compileErrorOutput(usercode, \"Success is null?\", 0, 0).toString(); }else if ((vmc.success) == false) { outputString = traceprinter.JDI2JSON.compileErrorOutput(usercode, vmc.errorMessage, 1, 1).toString(); }else { outputString = traceprinter.JDI2JSON.output(usercode, output.build()).toString(); } } } catch (java.lang.Exception e) { e.printStackTrace(java.lang.System.out); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5141/buggy-version/cp.traceprinter.JSONTracingThread.java", "BodyUseAPI": ["traceprinter.JDI2JSON.compileErrorOutput(usercode, \"Internal error: there was an error starting the debuggee VM.\", 0, 0).toString()", "traceprinter.JDI2JSON.compileErrorOutput(java.lang.String,java.lang.String,int,int)", "traceprinter.JDI2JSON.compileErrorOutput(java.lang.String,java.lang.String,int,int)", "traceprinter.JDI2JSON.output(java.lang.String,output.build())", "traceprinter.JDI2JSON.compileErrorOutput(usercode, \"Success is null?\", 0, 0).toString()", "traceprinter.JDI2JSON.output(usercode, output.build()).toString()", "traceprinter.JDI2JSON.compileErrorOutput(usercode, vmc.errorMessage, 1, 1).toString()", "traceprinter.VMCommander.join()", "traceprinter.JDI2JSON.compileErrorOutput(java.lang.String,vmc.errorMessage,int,int)", "traceprinter.JsonArrayBuilder.build()"], "Fixed commit": "92f2883fe9bef36c5d7e42322887d2ad6d760117", "Url": "https://api.github.com/repos/daveagp/java_jail", "Date": "2013-07-02T16:33:09Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return org.molgenis.data.DataConverter.convert(source, java.lang.String.class); } catch (org.springframework.core.convert.ConverterNotFoundException e) { return source.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3479/buggy-version/molgenis-data.src.main.java.org.molgenis.data.DataConverter.java", "BodyUseAPI": ["org.molgenis.data.DataConverter.convert(java.lang.Object,java.lang.Class)"], "Fixed commit": "2532050064887e466b8dcfefb1ada7f9e5e236d0", "Url": "https://api.github.com/repos/erwinwinder/molgenis", "Date": "2015-09-17T12:48:03Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { context.startActivity(launchIntentForPackage); } catch (java.lang.Exception e) { com.rsen.util.T.show(context, \"\u4eb2, \u4f60\u5b89\u88c5\u4e86\u8fd9\u4e2a\u7a0b\u5e8f\u5417?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2292/buggy-version/rsen.src.main.java.com.rsen.util.ClipBoardUtil.java", "BodyUseAPI": ["android.content.Context.startActivity(android.content.Intent)"], "Fixed commit": "a24d1df7f316eb9563913ec87bf65f705efd3999", "Url": "https://api.github.com/repos/angcyo/RJcenter", "Date": "2016-11-22T15:47:42Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.proxyMovimiento = new juego.proxys.ProxyMovimiento(this.estrategiaDeMovimiento); this.proxyMovimiento.moverse(this.propietario, this, coordFinal); this.posicion = coordFinal; } catch (juego.interfaces.excepciones.UbicacionInvalida ui) { this.proxyMovimiento = null; throw ui; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/916/buggy-version/src.juego.razas.unidades.Unidad.java", "BodyUseAPI": ["juego.proxys.ProxyMovimiento.moverse(juego.jugadores.Jugador,juego.razas.unidades.Unidad,juego.mapa.Coordenada)"], "Fixed commit": "86d35657de8a792944a8c85f2983cdb3ba3c928d", "Url": "https://api.github.com/repos/algo3-2015-fiuba/algocraft", "Date": "2015-07-01T15:27:31Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.proxyAtaque = new juego.proxys.ProxyAtaque(this.ataques, this.estrategiaDeMovimiento); this.proxyAtaque.atacarA(this, victima); } catch (juego.interfaces.excepciones.NoTieneVision ntv) { this.proxyAtaque = null; throw ntv; } catch (juego.razas.unidades.excepciones.AtaqueInvalido ai) { this.proxyAtaque = null; throw ai; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/916/buggy-version/src.juego.razas.unidades.UnidadAtaque.java", "BodyUseAPI": ["juego.proxys.ProxyAtaque.atacarA(juego.razas.unidades.UnidadAtaque,juego.interfaces.Controlable)"], "Fixed commit": "86d35657de8a792944a8c85f2983cdb3ba3c928d", "Url": "https://api.github.com/repos/algo3-2015-fiuba/algocraft", "Date": "2015-07-01T15:27:31Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { duration = com.github.marabou.helper.AudioFileHelper.calculateTrackLength(((int) (file.getLengthInSeconds()))); } catch (java.lang.IllegalArgumentException e) { duration = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4026/buggy-version/src.main.java.com.github.marabou.db.HSQLDBController.java", "BodyUseAPI": ["com.mpatric.mp3agic.Mp3File.getLengthInSeconds()", "com.github.marabou.helper.AudioFileHelper.calculateTrackLength(((int) (file.getLengthInSeconds())))"], "Fixed commit": "92dc9df77dbdc9540ad201c45bf295a1b0992bed", "Url": "https://api.github.com/repos/hennr/marabou", "Date": "2013-06-27T19:09:17Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int exitValue = executor.execute(cmdLine); return (exitValue == 0) || (exitValue == 3); } catch (java.lang.Exception e) { java.lang.System.err.println(e.getMessage()); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6859/buggy-version/TransLogPuller.src.main.java.com.amazon.trans.dailywork.logpuller.DefaultLogPuller.java", "BodyUseAPI": ["org.apache.commons.exec.Executor.execute(org.apache.commons.exec.CommandLine)"], "Fixed commit": "9b8089cf59b2e9b21895f8ea16fb3051173a18ae", "Url": "https://api.github.com/repos/huangjingyu/toolkit", "Date": "2012-11-23T23:35:45Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { space = name.indexOf(' '); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4160/buggy-version/XYZDrivers.src.java.com.xyzdrivers.Register.java", "BodyUseAPI": ["java.lang.String.indexOf(char)"], "Fixed commit": "4a85c69d1a687a9689f4e69c66c6822cb7ed26b9", "Url": "https://api.github.com/repos/DavidACook/esd_cw", "Date": "2017-11-13T15:05:36Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.graphics.Bitmap bmp = android.graphics.BitmapFactory.decodeByteArray(byteArray, 0, byteArray.length); stechb.myfirstapp.Meal meal = new stechb.myfirstapp.Meal(name, recipe, bmp); return meal; } catch (java.lang.Exception e) { stechb.myfirstapp.Meal meal = new stechb.myfirstapp.Meal(name, recipe, null); return meal; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8294/buggy-version/app.src.main.java.stechb.myfirstapp.DataBaseHelper.java", "BodyUseAPI": ["android.graphics.BitmapFactory.decodeByteArray(byte[],int,int)"], "Fixed commit": "4ded29f2510d458c06f75aa503cc738444863975", "Url": "https://api.github.com/repos/stufi04/FoodDice2.0", "Date": "2015-02-19T20:37:49Z"},
{"Line": "=>678", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { objectOutput.close(); objectInput.close(); output.close(); input.close(); } catch (java.io.IOException e) { java.lang.System.err.println(\"Error closing InputStream in Proxy\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2868/buggy-version/dslab13.src.main.java.proxy.Proxy.java", "BodyUseAPI": ["java.io.OutputStream.close()", "java.io.ObjectInputStream.close()", "java.io.ObjectOutputStream.close()", "java.io.InputStream.close()"], "Fixed commit": "5078ea3984c8f746545643e83111f2cafe40c462", "Url": "https://api.github.com/repos/Morka/DistrLab2", "Date": "2014-01-06T13:56:51Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String encodedCommand = java.net.URLEncoder.encode(query.getCommand(), \"UTF-8\"); call = this.influxDBService.query(this.username, this.password, query.getDatabase(), encodedCommand); } catch (java.io.UnsupportedEncodingException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1940/buggy-version/src.main.java.org.influxdb.impl.InfluxDBImpl.java", "BodyUseAPI": ["java.net.URLEncoder.encode(query.getCommand(),java.lang.String)", "org.influxdb.dto.Query.getDatabase()", "org.influxdb.dto.Query.getCommand()", "org.influxdb.impl.InfluxDBService.query(java.lang.String,java.lang.String,query.getDatabase(),java.lang.String)"], "Fixed commit": "58baf3f406b7b3bf3c23c5032d1908bcc2381d87", "Url": "https://api.github.com/repos/shanexu/influxdb-java", "Date": "2016-11-09T07:18:07Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mPresentationState.saveAnnotations(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1298/buggy-version/app.src.main.java.be.ac.ulb.lisa.idot.android.dicomviewer.view.AnnotationView.java", "BodyUseAPI": ["be.ac.ulb.lisa.idot.dicom.data.DICOMPresentationState.saveAnnotations()"], "Fixed commit": "4dece64f702c97f5bfbb3d1a57d7fdcedcae4e0c", "Url": "https://api.github.com/repos/LaDivinaCommedia/DICOMViewer", "Date": "2016-11-09T21:54:41Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.apache.commons.beanutils.BeanUtils.copyProperties(actualTradeNumPriceDo1, actualTradeNumPriceDo); } catch (java.lang.Exception ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6601/buggy-version/src.main.java.com.winchance.sandstorm.biz.manager.ActualTradeNumPriceManager.java", "BodyUseAPI": ["org.apache.commons.beanutils.BeanUtils.copyProperties(com.winchance.sandstorm.dal.dataobject.ActualTradeNumPriceDo,com.winchance.sandstorm.dal.dataobject.ActualTradeNumPriceDo)"], "Fixed commit": "2e10b80eed6a2a11efb45673366b1f5720d64b26", "Url": "https://api.github.com/repos/mkingzhu/sandstorm", "Date": "2016-07-14T16:32:47Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String path = ((chisw.com.plans.core.PApplication) (ctx.getApplicationContext())).getDbManager().getAudioPathByID(id); multimedia.alarmNontification(path); } catch (java.lang.Exception e) { android.net.Uri alert = android.media.RingtoneManager.getDefaultUri(RingtoneManager.TYPE_ALARM); android.media.MediaPlayer mp = android.media.MediaPlayer.create(ctx.getApplicationContext(), alert); mp.setVolume(100, 100); mp.start(); mp.setOnCompletionListener(new android.media.MediaPlayer.OnCompletionListener() { @java.lang.Override public void onCompletion(android.media.MediaPlayer mp) { mp.release(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7272/buggy-version/app.src.main.java.chisw.com.plans.core.Receivers.Receiver.java", "BodyUseAPI": ["android.content.Context.getApplicationContext()", "((chisw.com.plans.core.PApplication) (ctx.getApplicationContext())).getDbManager().getAudioPathByID(int)", "chisw.com.plans.others.Multimedia.alarmNontification(java.lang.String)", "((chisw.com.plans.core.PApplication) (ctx.getApplicationContext())).getDbManager()"], "Fixed commit": "9f3691f59358eb52e5c4ad9213c59cc283a99813", "Url": "https://api.github.com/repos/kuzloivan/Plans", "Date": "2015-06-21T19:25:09Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { roleDao.save(role); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/798/buggy-version/src.main.java.controller.RoleController.java", "BodyUseAPI": ["dao.pojo.role.RoleDao.save(dao.pojo.role.Role)"], "Fixed commit": "75646866ab1637b19c1b8b9e7568059da918b88a", "Url": "https://api.github.com/repos/hunniman/simpleWeb", "Date": "2015-08-30T12:43:46Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String[] arguments = sigar.getProcArgs(pids[i]); if ((arguments != null) && (argumentMatches(arguments, query.getArgument()))) { return pids[i]; } } catch (org.hyperic.sigar.SigarException ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2000/buggy-version/jodconverter-core.src.main.java.org.artofsolving.jodconverter.process.SigarProcessManager.java", "BodyUseAPI": ["org.artofsolving.jodconverter.process.ProcessQuery.getArgument()", "org.hyperic.sigar.Sigar.getProcArgs(long)", "org.artofsolving.jodconverter.process.SigarProcessManager.argumentMatches(java.lang.String[],query.getArgument())"], "Fixed commit": "4ab91796512dc866ff7d9f66362820b90a6ea385", "Url": "https://api.github.com/repos/RavnSystems/jodconverter", "Date": "2016-11-03T10:43:29Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ch.amana.android.cputuner.helper.InstallHelper.populateDb(ctx); } catch (android.database.sqlite.SQLiteException e) { ch.amana.android.cputuner.helper.Logger.e(\"Cannot update DB\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5832/buggy-version/src.ch.amana.android.cputuner.application.CpuTunerApplication.java", "BodyUseAPI": ["ch.amana.android.cputuner.helper.InstallHelper.populateDb(android.content.Context)"], "Fixed commit": "73cba645ef5901beda43aca0b3720ea98dc23a8d", "Url": "https://api.github.com/repos/vogtp/android-CPU-tuner", "Date": "2011-06-15T18:55:11Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dataMap.put(labels.get(i), currentData.get(i)); } catch (java.lang.IndexOutOfBoundsException e) { dataMap.put(labels.get(i), \" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1518/buggy-version/src.main.java.org.cloudfoundry.samples.music.tools.HttpCSVUtils.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "2b6cb79e30d5fbeead455fbda53cd34e9c4ceb49", "Url": "https://api.github.com/repos/shijianjian/spring-jdbc", "Date": "2017-03-28T14:20:09Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return getUniverseApiOpen(apiClient).postUniverseNames(t, net.nikr.eve.jeveasset.io.esi.DATASOURCE, net.nikr.eve.jeveasset.io.esi.USER_AGENT, null); } catch (net.troja.eve.esi.ApiException ex) { if (((ex.getCode()) == 404) && (ex.getResponseBody().toLowerCase().contains(\"ensure all ids are valid before resolving\"))) { return null; }else { throw ex; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2529/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.esi.EsiNameGetter.java", "BodyUseAPI": ["getUniverseApiOpen(apiClient).postUniverseNames(java.util.List<java.lang.Integer>,net.nikr.eve.jeveasset.io.esi.DATASOURCE,net.nikr.eve.jeveasset.io.esi.USER_AGENT,<nulltype>)", "net.nikr.eve.jeveasset.io.esi.EsiNameGetter.1.getUniverseApiOpen(net.troja.eve.esi.ApiClient)"], "Fixed commit": "02acf4a0caf22dfc43ca595b655dbfa8ebc82779", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-10-17T09:36:45Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { loaderManager.destroyLoader(0); } catch (java.lang.NullPointerException x) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5363/buggy-version/wallet.src.de.schildbach.wallet.ui.TransactionsListFragment.java", "BodyUseAPI": ["android.support.v4.app.LoaderManager.destroyLoader(int)"], "Fixed commit": "b570bb50482b49e4cb75dd248cb6fb74ac73437f", "Url": "https://api.github.com/repos/HashEngineering/digitalcoin-wallet", "Date": "2014-04-16T05:13:35Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { activity.unregisterReceiver(tickReceiver); } catch (java.lang.IllegalArgumentException x) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5363/buggy-version/wallet.src.de.schildbach.wallet.ui.BlockListFragment.java", "BodyUseAPI": ["de.schildbach.wallet.ui.AbstractWalletActivity.unregisterReceiver(android.content.BroadcastReceiver)"], "Fixed commit": "b570bb50482b49e4cb75dd248cb6fb74ac73437f", "Url": "https://api.github.com/repos/HashEngineering/digitalcoin-wallet", "Date": "2014-04-16T05:13:35Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { project.setDescription(description, new jce.util.ProgressMonitorAdapter(jce.codegen.XtendLibraryHelper.logger)); } catch (org.eclipse.core.runtime.CoreException exception) { jce.codegen.XtendLibraryHelper.logger.fatal(exception); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8827/buggy-version/src.main.java.jce.codegen.XtendLibraryHelper.java", "BodyUseAPI": ["org.eclipse.core.resources.IProject.setDescription(org.eclipse.core.resources.IProjectDescription,jce.util.ProgressMonitorAdapter)"], "Fixed commit": "8b8d5be1827ff163ed55f76e5644fa3628c23c6c", "Url": "https://api.github.com/repos/tsaglam/JavaCodeEcorification", "Date": "2017-08-01T08:56:34Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bpServerConfigCache = com.janrain.backplane.server.dao.DaoFactory.getConfigDAO().get(BackplaneSystemProps.BPSERVER_CONFIG_KEY); } catch (java.lang.Exception e) { bpServerConfigCache = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7896/buggy-version/src.main.java.com.janrain.backplane.server.config.Backplane1Config.java", "BodyUseAPI": ["com.janrain.backplane.server.dao.DaoFactory.getConfigDAO().get(BackplaneSystemProps.BPSERVER_CONFIG_KEY)", "com.janrain.backplane.server.dao.DaoFactory.getConfigDAO()"], "Fixed commit": "6b803066a6a47d6e5d33879dbe9811178be94b74", "Url": "https://api.github.com/repos/janrain/janrain-backplane-2", "Date": "2012-10-18T06:23:48Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { value = java.lang.Double.parseDouble(data); } catch (java.lang.Exception e) { value = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3243/buggy-version/src.reader.ExcelFileReader.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "27bac20d1f01940c60ddef62939c61015d498f06", "Url": "https://api.github.com/repos/UnB-MDS-GPP/EvaluationsXlsParser", "Date": "2014-04-26T23:51:28Z"},
{"Line": "=>958", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { os = adf.getOs(appArtifact); } catch (org.jenkinsci.plugins.awsdevicefarm.AWSDeviceFarmException e) { return hudson.util.FormValidation.error(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8808/buggy-version/src.main.java.org.jenkinsci.plugins.awsdevicefarm.AWSDeviceFarmRecorder.java", "BodyUseAPI": ["org.jenkinsci.plugins.awsdevicefarm.AWSDeviceFarm.getOs(java.lang.String)"], "Fixed commit": "1910369e3f5bd5577143fa3dbe97c75e810ff716", "Url": "https://api.github.com/repos/awslabs/aws-device-farm-jenkins-plugin", "Date": "2015-08-27T18:25:27Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (int i = 0; i < (columnSize); i++) { java.lang.String headerName = columnIndexMap.get(i); oneRow[i] = csvReader.get(headerName); } } catch (java.io.IOException e) { org.talend.cwm.db.connection.datasource.FileSamplingDataSource.log.error(e, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2437/buggy-version/main.plugins.org.talend.cwm.management.src.main.java.org.talend.cwm.db.connection.datasource.FileSamplingDataSource.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.String>.get(int)", "com.talend.csv.CSVReader.get(java.lang.String)"], "Fixed commit": "de71649f37c9e46e1c3e7986c04ee1fbb728c3ce", "Url": "https://api.github.com/repos/Talend/tdq-studio-se", "Date": "2015-11-12T03:59:42Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { loggedIn = ((java.lang.Boolean) (req.getSession(true).getAttribute(\"loggedIn\"))); } catch (java.lang.Exception e) { log.log(\"No loggedin session data for user.\", ErrorLevel.WARNING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1613/buggy-version/src.com.grademaster.servlets.IndexServlet.java", "BodyUseAPI": ["req.getSession(true).getAttribute(java.lang.String)", "javax.servlet.http.HttpServletRequest.getSession(boolean)"], "Fixed commit": "15df6ff38a2ffa563dd6d6fd0e162cfb57289c48", "Url": "https://api.github.com/repos/Rokenbokman1/GradeMaster", "Date": "2012-12-16T23:46:03Z"},
{"Line": "=>637", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Double parsedDouble = java.lang.Double.parseDouble(group); return java.lang.Double.valueOf(java.lang.String.format(((\"%.\" + (decimalPlaces)) + \"f\"), parsedDouble)); } catch (java.lang.NumberFormatException ne) { return java.lang.Double.NaN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9090/buggy-version/org.dawnsci.common.widgets.src.org.dawnsci.common.richbeans.components.scalebox.NumberBox.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.Double)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.valueOf(java.lang.String)"], "Fixed commit": "145dcd362384ecad90429223ca1cb6fa50c6eafb", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2015-03-30T08:58:13Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final com.intellij.plugins.haxe.lang.psi.impl.HaxeIdentifier identifier = getIdentifier(); if (identifier != null) { final java.lang.String name = identifier.getName(); returnValue = (name != null) ? name : identifier.getText(); } } catch (java.lang.Exception e) { com.intellij.plugins.haxe.lang.psi.impl.HaxeNamedElementImpl.LOG.error(e.getMessage()); } finally { return returnValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1138/buggy-version/src.com.intellij.plugins.haxe.lang.psi.impl.HaxeNamedElementImpl.java", "BodyUseAPI": ["com.intellij.plugins.haxe.lang.psi.impl.HaxeIdentifier.getText()", "com.intellij.plugins.haxe.lang.psi.impl.HaxeNamedElementImpl.getIdentifier()", "com.intellij.plugins.haxe.lang.psi.impl.HaxeIdentifier.getName()"], "Fixed commit": "1ea2a13e8e81e0214965bc8803b9ed5bf813d7d4", "Url": "https://api.github.com/repos/TiVo/intellij-haxe", "Date": "2014-10-23T19:57:48Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { c = f.createClass(); } catch (java.lang.Exception e) { try { c = f.createClass(); } catch (java.lang.Exception e1) { throw e; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3324/buggy-version/proxy.src.main.java.org.jboss.forge.proxy.ClassLoaderAdapterCallback.java", "BodyUseAPI": ["javassist.util.proxy.ProxyFactory.createClass()"], "Fixed commit": "5e00f8ed78fb0a03632ff1b01684bfd14ad9456a", "Url": "https://api.github.com/repos/forge/core", "Date": "2013-02-07T19:00:28Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { iterator = projector.apply(iterator); } catch (java.lang.Throwable t) { consumer.accept(null, t); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6857/buggy-version/sql.src.main.java.io.crate.operation.projectors.ProjectingBatchConsumer.java", "BodyUseAPI": ["io.crate.data.Projector.apply(io.crate.data.BatchIterator)"], "Fixed commit": "8b524a584c202cb43908892f7e080f68fc13fe6f", "Url": "https://api.github.com/repos/crate/crate", "Date": "2017-03-21T16:59:22Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { portMappingScheduler.awaitTermination(5, java.util.concurrent.TimeUnit.MINUTES); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7216/buggy-version/src.main.java.plugins.UPnP2.UPnP2.java", "BodyUseAPI": ["java.util.concurrent.ScheduledExecutorService.awaitTermination(int,java.util.concurrent.TimeUnit)"], "Fixed commit": "33e421098f6a47455eab703ff005485fb929576b", "Url": "https://api.github.com/repos/007pig/plugin-UPnP2", "Date": "2015-12-29T07:41:42Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { credential = org.fiteagle.interactors.sfa.util.CredentialFactory.newCredential(userCert, target); } catch (java.lang.RuntimeException e) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7276/buggy-version/interactors.sfa.src.main.java.org.fiteagle.interactors.sfa.getSelfCredential.GetSelfCredentialRequestProcessor.java", "BodyUseAPI": ["org.fiteagle.interactors.sfa.util.CredentialFactory.newCredential(java.security.cert.X509Certificate,org.fiteagle.core.util.URN)"], "Fixed commit": "6a9a200829a695a346fcd14930957d99cf6e763e", "Url": "https://api.github.com/repos/tubav/fiteagle", "Date": "2013-09-05T10:16:14Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getContentResolver().delete(android.net.Uri.parse(uri), null, null); android.util.Log.e(\"delete uri\", (uri + \"\")); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/933/buggy-version/src.com.dunglv.calendar.activity.EditRotaActivity.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,java.lang.String)", "com.dunglv.calendar.activity.EditRotaActivity.getContentResolver()", "getContentResolver().delete(android.net.Uri.parse(uri),<nulltype>,<nulltype>)", "android.net.Uri.parse(java.lang.String)"], "Fixed commit": "572751f6e772b9faef95b85c75a2161768894500", "Url": "https://api.github.com/repos/dunglv299/Caldroid", "Date": "2014-03-11T08:44:23Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { shareImage(mImageUri); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7846/buggy-version/Mume.app.src.main.java.nl.mprog.mume.Activities.SelectedActivity.java", "BodyUseAPI": ["nl.mprog.mume.Activities.SelectedActivity.shareImage(android.net.Uri)"], "Fixed commit": "f509ca124875062a638cb8cf06bbfb3e2881ef1d", "Url": "https://api.github.com/repos/C0rine/Mume", "Date": "2016-01-20T16:25:12Z"},
{"Line": "=>726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.zstack.core.db.DatabaseFacadeImpl.logger.info(java.lang.String.format(\"clean EO[%s], to be cleaning data: %s\", info.eoClass.getSimpleName(), ids.toString())); info.hardDelete(ids); } catch (java.lang.Exception e) { org.zstack.core.db.DatabaseFacadeImpl.logger.info(java.lang.String.format(\"clean EO[%s], an error has occurred, please ignore\", info.eoClass.getSimpleName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5542/buggy-version/core.src.main.java.org.zstack.core.db.DatabaseFacadeImpl.java", "BodyUseAPI": ["java.lang.Class.getSimpleName()", "org.zstack.utils.logging.CLogger.info(java.lang.String)", "org.zstack.core.db.DatabaseFacadeImpl.EntityInfo.hardDelete(java.util.List)", "java.lang.String.format(java.lang.String,java.lang.String,java.lang.String)", "java.util.List.toString()"], "Fixed commit": "e0887b7e1c25e0d741ecac8fc9e538516cb7b8f5", "Url": "https://api.github.com/repos/liningone/zstack", "Date": "2017-05-05T16:48:32Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { amountEditText.setText(format.format(java.lang.Double.parseDouble(amountEditText.getText().toString()))); } catch (java.lang.NumberFormatException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7259/buggy-version/app.src.main.java.com.shael.shah.expensemanager.activity.AddExpenseActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)", "java.text.NumberFormat.format(double)", "android.widget.EditText.getText()", "amountEditText.getText().toString()", "java.lang.Double.parseDouble(amountEditText.getText().toString())"], "Fixed commit": "62c1bdd64feed9f987777ec0cc55936ea624fe8a", "Url": "https://api.github.com/repos/ShaelShah/Expense-Manager", "Date": "2017-09-16T17:22:03Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { f = new javax.swing.JFrame(jid.getWindowTitle()); } catch (java.lang.Exception e) { jacamo.util.Config.main(new java.lang.String[]{ }); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8188/buggy-version/src.main.java.jacamo.util.ConfigGUI.java", "BodyUseAPI": ["jacamo.util.ConfigGUI.getWindowTitle()"], "Fixed commit": "167634857a4d1d6349128fe63b7b4f0612aa1905", "Url": "https://api.github.com/repos/jacamo-lang/jacamo", "Date": "2017-10-31T17:29:03Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { future = _create(entity); } catch (java.lang.Exception e) { callback.onFailure(e); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5460/buggy-version/cassandra.src.main.java.com.orangerhymelabs.orangedb.cassandra.AbstractCassandraRepository.java", "BodyUseAPI": ["com.orangerhymelabs.orangedb.cassandra.AbstractCassandraRepository<T>._create(T)"], "Fixed commit": "37b86ba44f9925f2de753e59220fd5af8ef88573", "Url": "https://api.github.com/repos/OrangeRhymeLabs/HelenusDB", "Date": "2015-06-17T17:59:41Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { future = _update(entity); } catch (java.lang.Exception e) { callback.onFailure(e); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5460/buggy-version/cassandra.src.main.java.com.orangerhymelabs.orangedb.cassandra.AbstractCassandraRepository.java", "BodyUseAPI": ["com.orangerhymelabs.orangedb.cassandra.AbstractCassandraRepository<T>._update(T)"], "Fixed commit": "37b86ba44f9925f2de753e59220fd5af8ef88573", "Url": "https://api.github.com/repos/OrangeRhymeLabs/HelenusDB", "Date": "2015-06-17T17:59:41Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ccli = new java.lang.Long(tokenizeContent(lineToken)); } catch (java.lang.NumberFormatException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1587/buggy-version/xwiki-rendering-macro-lyrics.src.main.java.org.xwiki.rendering.lyrics.Song.java", "BodyUseAPI": ["org.xwiki.rendering.lyrics.Song.tokenizeContent(java.util.StringTokenizer)"], "Fixed commit": "eba986bb4e52eb5ba7f99d3c741fc1972700cfdf", "Url": "https://api.github.com/repos/matthiaw/xwiki-rendering-macro-lyrics", "Date": "2014-02-15T21:43:27Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.content.Intent intent = new android.content.Intent(); intent.setAction(Intent.ACTION_VIEW); intent.setDataAndType(com.theah64.whatsappstatusbrowser.utils.UriCompat.fromFile(getActivity(), status.getFile(), intent), iType); startActivity(intent); } catch (android.content.ActivityNotFoundException e) { e.printStackTrace(); android.widget.Toast.makeText(getActivity(), R.string.No_viewer_found, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8441/buggy-version/android.app.src.main.java.com.theah64.whatsappstatusbrowser.fragments.BaseStatusesFragment.java", "BodyUseAPI": ["com.theah64.whatsappstatusbrowser.fragments.BaseStatusesFragment.startActivity(android.content.Intent)", "android.content.Intent.setDataAndType(com.theah64.whatsappstatusbrowser.utils.UriCompat.fromFile(getActivity(), status.getFile(), intent),java.lang.String)", "android.content.Intent.setAction(Intent.ACTION_VIEW)", "com.theah64.whatsappstatusbrowser.utils.UriCompat.fromFile(getActivity(),status.getFile(),android.content.Intent)", "com.theah64.whatsappstatusbrowser.fragments.BaseStatusesFragment.getActivity()", "com.theah64.whatsappstatusbrowser.models.Status.getFile()"], "Fixed commit": "055787cb41f636a243add651316ec5b3c1e2a73a", "Url": "https://api.github.com/repos/theapache64/WhatsApp-Status-Browser", "Date": "2017-12-27T12:33:43Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { m_destination.setValue(m_cpu.popStack16()); } catch (Hardware.CPU.Intel80386.Exceptions.CPUException ex) { m_cpu.ESP.setValue(oldESP); throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1879/buggy-version/src.Hardware.CPU.Intel80386.Instructions.i386.Datatransfer.POP16.java", "BodyUseAPI": ["Hardware.CPU.Intel80386.Operands.Operand.setValue(m_cpu.popStack16())", "Hardware.CPU.Intel80386.Instructions.i386.Datatransfer.POP16.popStack16()"], "Fixed commit": "4a468c7d4cd2d5e67f0154414adcb2e25ced11f3", "Url": "https://api.github.com/repos/h0MER247/jPC", "Date": "2017-09-01T00:16:33Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { m_destination.setValue(m_cpu.popStack32()); } catch (Hardware.CPU.Intel80386.Exceptions.CPUException ex) { m_cpu.ESP.setValue(oldESP); throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1879/buggy-version/src.Hardware.CPU.Intel80386.Instructions.i386.Datatransfer.POP32.java", "BodyUseAPI": ["Hardware.CPU.Intel80386.Instructions.i386.Datatransfer.POP32.popStack32()", "Hardware.CPU.Intel80386.Operands.Operand.setValue(m_cpu.popStack32())"], "Fixed commit": "4a468c7d4cd2d5e67f0154414adcb2e25ced11f3", "Url": "https://api.github.com/repos/h0MER247/jPC", "Date": "2017-09-01T00:16:33Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return net.citizensnpcs.resources.npclib.creatures.CreatureNPCType.valueOf(mob.toUpperCase().replace(\"CREATURENPC\", \"\")); } catch (java.lang.Exception ex) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8213/buggy-version/src.core.net.citizensnpcs.resources.npclib.creatures.CreatureNPCType.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "net.citizensnpcs.resources.npclib.creatures.CreatureNPCType.valueOf(java.lang.String)", "java.lang.String.toUpperCase()"], "Fixed commit": "2f731518471aa6d8208764f41abe8eb5e52d6ab1", "Url": "https://api.github.com/repos/fullwall/Citizens", "Date": "2011-08-07T15:25:48Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((android.view.ViewGroup) (mRootView.getParent())).removeView(mRootView); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3228/buggy-version/src.com.PATHomei.yanyu.levelone.MallFragment.java", "BodyUseAPI": ["android.view.ViewGroup.getParent()", "((android.view.ViewGroup) (mRootView.getParent())).removeView(android.view.ViewGroup)"], "Fixed commit": "be5eedd675c2a993e56500bf711fe04a02c253d1", "Url": "https://api.github.com/repos/seedzi/PATHomei_eclipse", "Date": "2015-07-04T11:21:02Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((android.view.ViewGroup) (mRootView.getParent())).removeView(mRootView); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3228/buggy-version/src.com.PATHomei.yanyu.levelone.HomeFragment.java", "BodyUseAPI": ["android.view.ViewGroup.getParent()", "((android.view.ViewGroup) (mRootView.getParent())).removeView(android.view.ViewGroup)"], "Fixed commit": "be5eedd675c2a993e56500bf711fe04a02c253d1", "Url": "https://api.github.com/repos/seedzi/PATHomei_eclipse", "Date": "2015-07-04T11:21:02Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ((android.view.ViewGroup) (mRootView.getParent())).removeView(mRootView); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3228/buggy-version/src.com.PATHomei.yanyu.levelone.MechanismFragment.java", "BodyUseAPI": ["((android.view.ViewGroup) (mRootView.getParent())).removeView(android.view.ViewGroup)", "android.view.ViewGroup.getParent()"], "Fixed commit": "be5eedd675c2a993e56500bf711fe04a02c253d1", "Url": "https://api.github.com/repos/seedzi/PATHomei_eclipse", "Date": "2015-07-04T11:21:02Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (java.lang.String group : permissions.getGroups(player.getWorld().getName(), player.getName())) { if (permissions.inSingleGroup(player.getWorld().getName(), player.getName(), group)) { keepGroups.add(toTitleCase(group)); } } } catch (java.lang.NoSuchMethodError e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8508/buggy-version/src.com.ryanmichela.MCStats2.service.GroupService.java", "BodyUseAPI": ["org.bukkit.entity.Player.getWorld()", "player.getWorld().getName()", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "com.nijiko.permissions.PermissionHandler.getGroups(player.getWorld().getName(),player.getName())", "com.ryanmichela.MCStats2.service.GroupService.toTitleCase(java.lang.String)", "player.getWorld().getName()", "org.bukkit.entity.Player.getName()", "com.nijiko.permissions.PermissionHandler.inSingleGroup(player.getWorld().getName(),player.getName(),java.lang.String)", "org.bukkit.entity.Player.getName()", "org.bukkit.entity.Player.getWorld()"], "Fixed commit": "330b3d7c95957dcbafe42ca13532df40cf72b508", "Url": "https://api.github.com/repos/rmichela/MCStats2", "Date": "2011-04-03T02:00:28Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return java.lang.Integer.parseInt(array[0]); } catch (java.lang.NumberFormatException e) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/9002/buggy-version/src.ru.krikun.s2e.Target.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "9dad00a1d29f616888f7311dc9d455b73433740c", "Url": "https://api.github.com/repos/OlegKrikun/S2E", "Date": "2012-06-05T18:31:27Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { originalOrder.beforeFirst(); while (originalOrder.next()) { rowId++; pkValueToRowId.put(originalOrder.getPk(), rowId); cacheProgress.endTask(); } } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1796/buggy-version/bundles.core-jdbc.src.main.java.org.orbisgis.corejdbc.ReadTable.java", "BodyUseAPI": ["org.orbisgis.corejdbc.ReadRowSet.next()", "java.util.Map<java.lang.Long, java.lang.Integer>.put(originalOrder.getPk(),int)", "org.orbisgis.corejdbc.ReadRowSet.beforeFirst()", "org.orbisgis.commons.progress.ProgressMonitor.endTask()", "org.orbisgis.corejdbc.ReadRowSet.getPk()"], "Fixed commit": "a8a9a0a04c8a3b8bafeec92efd07f3fef4d98c2f", "Url": "https://api.github.com/repos/orbisgis/orbisgis", "Date": "2016-03-15T13:14:47Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { originalOrder.beforeFirst(); int i = 0; final int fieldIndex = originalOrder.findColumn(originalColumnName); while (originalOrder.next()) { java.lang.Object obj = originalOrder.getObject(fieldIndex); if ((obj != null) && (!(obj instanceof java.lang.Comparable))) { throw new java.sql.SQLException(org.orbisgis.corejdbc.ReadTable.I18N.tr(\"Could only sort comparable database object type\")); } cache[(i++)] = ((java.lang.Comparable) (obj)); cacheProgress.endTask(); } } finally { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1796/buggy-version/bundles.core-jdbc.src.main.java.org.orbisgis.corejdbc.ReadTable.java", "BodyUseAPI": ["org.orbisgis.corejdbc.ReadRowSet.getObject(int)", "org.orbisgis.corejdbc.ReadRowSet.beforeFirst()", "org.orbisgis.corejdbc.ReadRowSet.next()", "org.xnap.commons.i18n.I18n.tr(java.lang.String)", "org.orbisgis.corejdbc.ReadRowSet.findColumn(java.lang.String)", "org.orbisgis.commons.progress.ProgressMonitor.endTask()"], "Fixed commit": "a8a9a0a04c8a3b8bafeec92efd07f3fef4d98c2f", "Url": "https://api.github.com/repos/orbisgis/orbisgis", "Date": "2016-03-15T13:14:47Z"},
{"Line": "=>607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return dms.getAssociation(de.kiezatlas.angebote.ANGEBOT_ASSIGNMENT, angebot.getId(), geoObject.getId(), \"dm4.core.parent\", \"dm4.core.child\").loadChildTopics(); } catch (java.lang.Exception e) { logger.severe((((((((\"ERROR fetching Association between Angebot: \" + (angebot.getId())) + \", \") + (angebot.getSimpleValue())) + \" and Geo Object: \") + (geoObject.getSimpleValue())) + \": \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8344/buggy-version/src.main.java.de.kiezatlas.angebote.AngebotPlugin.java", "BodyUseAPI": ["de.deepamehta.core.Topic.getId()", "de.kiezatlas.angebote.AngebotPlugin.getAssociation(de.kiezatlas.angebote.ANGEBOT_ASSIGNMENT,angebot.getId(),geoObject.getId(),java.lang.String,java.lang.String)", "de.deepamehta.core.Topic.getId()", "dms.getAssociation(de.kiezatlas.angebote.ANGEBOT_ASSIGNMENT, angebot.getId(), geoObject.getId(), \"dm4.core.parent\", \"dm4.core.child\").loadChildTopics()"], "Fixed commit": "12a66e5bf648cdd8601b80f4f9e7ea1834c2b023", "Url": "https://api.github.com/repos/mukil/dm4-kiezatlas-angebote", "Date": "2016-05-12T06:02:01Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.google.android.gms.wearable.DataMap dataMap = com.google.android.gms.wearable.DataMapItem.fromDataItem(dataItemResult.getDataItem()).getDataMap(); java.util.ArrayList<java.lang.String> returnList = dataMap.getStringArrayList(\"MOSTWANTEDCOMMANDS\"); returnList.addAll(dataMap.getStringArrayList(\"TASKERCOMMANDS\")); context.setupListView(returnList); } catch (java.lang.Exception e) { java.util.ArrayList<java.lang.String> returnList = new java.util.ArrayList<java.lang.String>(); returnList.add(\"First, setup Commandr on your phone...\"); context.setupListView(returnList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5586/buggy-version/wear.src.main.java.com.RSen.Commandr.WearUtil.java", "BodyUseAPI": ["com.google.android.gms.wearable.DataMap.getStringArrayList(java.lang.String)", "java.util.ArrayList<java.lang.String>.addAll(dataMap.getStringArrayList(\"TASKERCOMMANDS\"))", "com.google.android.gms.wearable.DataMapItem.fromDataItem(dataItemResult.getDataItem())", "DataApi.DataItemResult.getDataItem()", "com.RSen.Commandr.WearActivity.setupListView(java.util.ArrayList<java.lang.String>)", "com.google.android.gms.wearable.DataMapItem.fromDataItem(dataItemResult.getDataItem()).getDataMap()", "com.google.android.gms.wearable.DataMap.getStringArrayList(java.lang.String)"], "Fixed commit": "fb75dbf41986b73a9b5dcdaaecef7cab6691b165", "Url": "https://api.github.com/repos/RSenApps/Commandr-Android", "Date": "2014-09-06T05:12:00Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { channelLatch.await(configuration.getConnectTimeout(), java.util.concurrent.TimeUnit.MILLISECONDS); } catch (java.lang.InterruptedException ex) { throw new org.apache.camel.CamelException(((\"Interrupted while waiting for \" + \"connection to \") + (configuration.getAddress()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1547/buggy-version/components.camel-netty.src.main.java.org.apache.camel.component.netty.NettyProducer.java", "BodyUseAPI": ["org.apache.camel.component.netty.NettyConfiguration.getConnectTimeout()", "java.util.concurrent.CountDownLatch.await(configuration.getConnectTimeout(),java.util.concurrent.TimeUnit)"], "Fixed commit": "ea3823a58e4fef59dd0a66c5b5cbe40fd0754fe1", "Url": "https://api.github.com/repos/tivv/camel", "Date": "2013-06-08T14:33:01Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { subject.checkRole(\"\u7ba1\u7406\u5458\"); return \"redirect:/news/newsMgr\"; } catch (org.apache.shiro.authz.AuthorizationException e) { return \"redirect:/index\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8682/buggy-version/src.main.java.com.cidic.design.HomeController.java", "BodyUseAPI": ["org.apache.shiro.subject.Subject.checkRole(java.lang.String)"], "Fixed commit": "e1217383b89561e5bee5ae5134d8406eac13632c", "Url": "https://api.github.com/repos/zyhndesign/DesignCompetition", "Date": "2017-05-17T02:35:55Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { response = getResponse(from, targ, query); java.lang.String result = parseString(response); return result; } catch (java.lang.Exception e) { return response; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5481/buggy-version/src.com.lsj.trans.AbstractOnlineTranslator.java", "BodyUseAPI": ["com.lsj.trans.AbstractOnlineTranslator.parseString(java.lang.String)", "com.lsj.trans.AbstractOnlineTranslator.getResponse(com.lsj.trans.LANG,com.lsj.trans.LANG,java.lang.String)"], "Fixed commit": "ee37111bde0ee320bf8f06f8e8552ed3d799bfbf", "Url": "https://api.github.com/repos/lsj9383/translate-set", "Date": "2017-03-03T15:27:35Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { map.put(val, ehc); this.commit(); } catch (java.lang.Exception ex) { org.refpub.cache.CacheImplementation.logger.debug(ex.getMessage()); org.refpub.cache.CacheImplementation.logger.error((\"Error writing cache. It might be worth flushing the cache on \" + (path))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3770/buggy-version/refpub-web.src.main.java.org.refpub.cache.CacheImplementation.java", "BodyUseAPI": ["org.mapdb.HTreeMap<java.lang.String, java.util.List<java.lang.String>>.put(java.lang.String,java.util.List<java.lang.String>)", "org.refpub.cache.CacheImplementation.commit()"], "Fixed commit": "a900118ed6034242be2c040b054b99a7d2a30f4b", "Url": "https://api.github.com/repos/openfigis/refpub", "Date": "2015-01-06T14:37:07Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(Settings.CRAWLER_WAITING_TIME); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6022/buggy-version/src.data.Crawler.java", "BodyUseAPI": ["java.lang.Thread.sleep(Settings.CRAWLER_WAITING_TIME)"], "Fixed commit": "4b584fe55a1961410eb9c433833546d393bd450e", "Url": "https://api.github.com/repos/AlexandreRio/SuchSeriesCrawling", "Date": "2014-02-05T19:41:32Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { translator.timer.cancel(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8295/buggy-version/src.translator.java", "BodyUseAPI": ["java.util.Timer.cancel()"], "Fixed commit": "a538ee980e1e1fa3300878c9404862962bbf40af", "Url": "https://api.github.com/repos/akopichin/translator", "Date": "2011-08-23T05:56:05Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { em.close(); } finally { entityManager.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8641/buggy-version/extensions.persist.src.com.google.inject.persist.jpa.JpaPersistService.java", "BodyUseAPI": ["javax.persistence.EntityManager.close()"], "Fixed commit": "6806d7988e50f4aad9aa344127edff53422c719f", "Url": "https://api.github.com/repos/sameb/guice", "Date": "2014-06-26T07:38:56Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return ((float) (lm.getLastKnownLocation(LocationManager.GPS_PROVIDER).getLatitude())); } catch (java.lang.Exception e) { try { return ((float) (lm.getLastKnownLocation(LocationManager.NETWORK_PROVIDER).getLatitude())); } catch (java.lang.Exception e2) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2722/buggy-version/App.android.src.com.GGI.uParty.android.AndroidLauncher.java", "BodyUseAPI": ["lm.getLastKnownLocation(LocationManager.GPS_PROVIDER).getLatitude()", "android.location.LocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER)"], "Fixed commit": "79f946c36d39e91dc52bb8a5e51b9dd64ad274f6", "Url": "https://api.github.com/repos/GoodGameIndustries/uParty-the-great-release", "Date": "2016-08-24T22:12:25Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return ((float) (lm.getLastKnownLocation(LocationManager.GPS_PROVIDER).getLongitude())); } catch (java.lang.Exception e) { try { return ((float) (lm.getLastKnownLocation(LocationManager.NETWORK_PROVIDER).getLongitude())); } catch (java.lang.Exception e2) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2722/buggy-version/App.android.src.com.GGI.uParty.android.AndroidLauncher.java", "BodyUseAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER)", "lm.getLastKnownLocation(LocationManager.GPS_PROVIDER).getLongitude()"], "Fixed commit": "79f946c36d39e91dc52bb8a5e51b9dd64ad274f6", "Url": "https://api.github.com/repos/GoodGameIndustries/uParty-the-great-release", "Date": "2016-08-24T22:12:25Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { WeatherForCity.CityInfo cityInfo = lookUpCity(stadt_name); if (cityInfo == null) { out.println(\"city not found!\"); return; } } catch (java.sql.SQLException e) { out.println((\"ERROR: looking up city failed: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2944/buggy-version/code.src.WeatherForCity.java", "BodyUseAPI": ["WeatherForCity.lookUpCity(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "e800ae8f91a0a79b50a4f618de86b8dccd73a5e9", "Url": "https://api.github.com/repos/EsGeh/wetterdaten_dbsp", "Date": "2013-06-18T21:51:04Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final io.purplejs.http.Response result = handleErrorInJs(request, status, cause); if (result != null) { return result; } } catch (final java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/727/buggy-version/modules.purplejs-http.src.main.java.io.purplejs.http.internal.handler.HttpHandlerImpl.java", "BodyUseAPI": ["io.purplejs.http.internal.handler.HttpHandlerImpl.handleErrorInJs(io.purplejs.http.Request,io.purplejs.http.Status,java.lang.Throwable)"], "Fixed commit": "c5f88fb5a278bcfd65be1fa223d9b1bca7cbf648", "Url": "https://api.github.com/repos/purplejs/purplejs", "Date": "2016-10-18T17:53:27Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new ru.spbstu.dis.opc.client.api.http.server.OpcWrapperApplication().run(args); } catch (java.lang.Exception e) { ru.spbstu.dis.opc.client.api.http.server.OpcWrapperApplication.LOGGER.error(\"Unexpected error occurred\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/821/buggy-version/src.OpcClient.OpcClientServer.src.main.java.ru.spbstu.dis.opc.client.api.http.server.OpcWrapperApplication.java", "BodyUseAPI": ["ru.spbstu.dis.opc.client.api.http.server.OpcWrapperApplication.run(java.lang.String[])"], "Fixed commit": "3b4178e785ebec56e2ec69d13b509ac2a91ce7d9", "Url": "https://api.github.com/repos/Sheremetova/emergency-prediction", "Date": "2016-04-16T12:09:27Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.List<com.example.studio08.verysimplepodcast.model.Feed> feedList = call.execute().body(); for (com.example.studio08.verysimplepodcast.model.Feed feed : feedList) { android.util.Log.d(\"feed\", feed.getRss().getChannel().getTitle()); } } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2174/buggy-version/app.src.main.java.com.example.studio08.verysimplepodcast.ChannelSelectorActivity.java", "BodyUseAPI": ["retrofit2.Call<java.util.List<com.example.studio08.verysimplepodcast.model.Feed>>.execute()", "android.util.Log.d(java.lang.String,feed.getRss().getChannel().getTitle())", "com.example.studio08.verysimplepodcast.model.Feed.getRss()", "feed.getRss().getChannel().getTitle()", "feed.getRss().getChannel()", "call.execute().body()"], "Fixed commit": "9a5bf2df96691a85a392c22de571dc09ed80fa18", "Url": "https://api.github.com/repos/ronenlh/VerySimplePodcast", "Date": "2016-04-17T11:46:40Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { connectionSpeedBuffer.putInt(0, java.lang.Integer.valueOf(deviceSpeed)); connection.controlTransfer(33, 32, 0, 0, data, 7, 0); } catch (java.lang.NullPointerException e) { android.util.Log.e(org.broeuschmeul.android.gps.usb.provider.USBGpsManager.LOG_TAG, \"Could not set speed\"); close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/9252/buggy-version/app.src.main.java.org.broeuschmeul.android.gps.usb.provider.USBGpsManager.java", "BodyUseAPI": ["android.hardware.usb.UsbDeviceConnection.controlTransfer(int,int,int,int,byte[],int,int)", "java.lang.Integer.valueOf(java.lang.String)", "java.nio.ByteBuffer.putInt(int,java.lang.Integer)"], "Fixed commit": "0c00f65af349dcf172fc193990df72f6c9329392", "Url": "https://api.github.com/repos/freshollie/UsbGps4Droid", "Date": "2017-05-12T04:47:08Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { connection.bulkTransfer(endpointOut, sirfBin2Nmea, sirfBin2Nmea.length, 0); } catch (java.lang.NullPointerException e) { android.util.Log.e(org.broeuschmeul.android.gps.usb.provider.USBGpsManager.LOG_TAG, \"Connection error\"); close(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/9252/buggy-version/app.src.main.java.org.broeuschmeul.android.gps.usb.provider.USBGpsManager.java", "BodyUseAPI": ["android.hardware.usb.UsbDeviceConnection.bulkTransfer(android.hardware.usb.UsbEndpoint,byte[],int,int)"], "Fixed commit": "0c00f65af349dcf172fc193990df72f6c9329392", "Url": "https://api.github.com/repos/freshollie/UsbGps4Droid", "Date": "2017-05-12T04:47:08Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.getParent().remove(this); } catch (java.lang.NullPointerException ex) { java.lang.System.out.println(\"View was already closed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3046/buggy-version/src.gameplay.GameView.java", "BodyUseAPI": ["java.awt.Container.remove(gameplay.GameView)", "gameplay.GameView.getParent()"], "Fixed commit": "9079f8290d2b3323cb55dd2e7e87dfa9a555a5fe", "Url": "https://api.github.com/repos/dabockster/Prometheus", "Date": "2015-05-05T04:51:14Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((connectionHolder != null) && (!(connectionHolder.getConnection().isClosed()))) { java.sql.Connection conn = connectionHolder.getConnection(); org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(conn, dataSource); } } catch (java.sql.SQLException e) { if (org.grails.orm.hibernate.GrailsHibernateTemplate.LOG.isDebugEnabled()) { org.grails.orm.hibernate.GrailsHibernateTemplate.LOG.debug((\"Could not close opened JDBC connection. Did the application close the connection manually?: \" + (e.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4274/buggy-version/grails-datastore-gorm-hibernate5.src.main.groovy.org.grails.orm.hibernate.GrailsHibernateTemplate.java", "BodyUseAPI": ["connectionHolder.getConnection().isClosed()", "org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(java.sql.Connection,javax.sql.DataSource)", "org.springframework.jdbc.datasource.ConnectionHolder.getConnection()", "org.springframework.jdbc.datasource.ConnectionHolder.getConnection()"], "Fixed commit": "1e90166a3dfc5e1fa4d9d90f7d365d17fa77d68a", "Url": "https://api.github.com/repos/grails/gorm-hibernate5", "Date": "2017-02-06T08:59:54Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6517/buggy-version/src.main.java.fr.wascar.ForgeAuth.event.onPlayerJoin.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "5dd2980d7a2cf4b62b47f88fa7f9ccf020e6fd6b", "Url": "https://api.github.com/repos/wascardev/ForgeAuth", "Date": "2015-07-15T13:31:51Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { elasticsearchSinkFunction.process(element, org.apache.flink.streaming.connectors.elasticsearch2.ElasticsearchSink.getRuntimeContext(), requestIndexer); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/9001/buggy-version/flink-streaming-connectors.flink-connector-elasticsearch2.src.main.java.org.apache.flink.streaming.connectors.elasticsearch2.ElasticsearchSink.java", "BodyUseAPI": ["org.apache.flink.streaming.connectors.elasticsearch2.ElasticsearchSinkFunction<T>.process(T,org.apache.flink.streaming.connectors.elasticsearch2.ElasticsearchSink.getRuntimeContext(),org.apache.flink.streaming.connectors.elasticsearch2.RequestIndexer)", "org.apache.flink.streaming.connectors.elasticsearch2.ElasticsearchSink.getRuntimeContext()"], "Fixed commit": "474febb7fc04fcc76cbf9202c5f4bc064cf1b189", "Url": "https://api.github.com/repos/ddolzan/flink", "Date": "2016-11-21T10:59:45Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.LinkedHashMap<java.lang.Object, java.lang.Object> personIdentifiersLinkedList = ((java.util.LinkedHashMap<java.lang.Object, java.lang.Object>) (linkedPersons.get(\"personIdentifiers\"))); if (personIdentifiersLinkedList != null) { java.lang.String identifier = ((java.lang.String) (personIdentifiersLinkedList.get(\"identifier\"))); com.servinglynk.hmis.warehouse.domain.PersonIdentifier personIdentifier = new com.servinglynk.hmis.warehouse.domain.PersonIdentifier(); personIdentifier.setIdentifier(identifier); person.addPersonIdentifier(personIdentifier); } } catch (java.lang.ClassCastException ex) { java.util.LinkedHashMap<java.lang.Object, java.lang.Object> personIdentifiersList = ((java.util.ArrayList<java.util.LinkedHashMap<java.lang.Object, java.lang.Object>>) (linkedPersons.get(\"personIdentifiers\"))); if (org.apache.commons.collections.CollectionUtils.isNotEmpty(personIdentifiersList)) { java.util.LinkedHashMap<java.lang.Object, java.lang.Object> personIdentifiersLinkedList = personIdentifiersList.get(0); java.lang.String identifier = ((java.lang.String) (personIdentifiersLinkedList.get(\"identifier\"))); com.servinglynk.hmis.warehouse.domain.PersonIdentifier personIdentifier = new com.servinglynk.hmis.warehouse.domain.PersonIdentifier(); personIdentifier.setIdentifier(identifier); person.addPersonIdentifier(personIdentifier); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1284/buggy-version/hmis-client-dedup.src.main.java.com.servinglynk.hmis.warehouse.rest.service.DedupServiceImpl.java", "BodyUseAPI": ["com.servinglynk.hmis.warehouse.domain.Person.addPersonIdentifier(com.servinglynk.hmis.warehouse.domain.PersonIdentifier)", "java.util.LinkedHashMap<java.lang.Object, java.lang.Object>.get(java.lang.String)", "java.util.LinkedHashMap<java.lang.Object, java.lang.Object>.get(java.lang.String)", "com.servinglynk.hmis.warehouse.domain.PersonIdentifier.setIdentifier(java.lang.String)"], "Fixed commit": "971b182c0fa33428ab434e1852499f162d6dd110", "Url": "https://api.github.com/repos/servinglynk/hslynk-open-source", "Date": "2017-12-18T04:29:30Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { col = java.lang.Integer.parseInt(etwidth.getText().toString()); rows = java.lang.Integer.parseInt(etheight.getText().toString()); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5923/buggy-version/app.src.main.java.org.bluechat.blueflood.Settings.java", "BodyUseAPI": ["java.lang.Integer.parseInt(etwidth.getText().toString())", "etheight.getText().toString()", "android.widget.EditText.getText()", "java.lang.Integer.parseInt(etheight.getText().toString())", "etwidth.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "57f69ca9aed299df6c7638f9716d96538cf64198", "Url": "https://api.github.com/repos/somveersaini/BlueFlood", "Date": "2016-06-04T19:43:43Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.bluetooth.BluetoothDevice device = mBluetoothAdapter.getRemoteDevice(address); mChatService.connect(device, secure); } catch (java.lang.IllegalArgumentException e) { com.example.android.common.logger.Log.e(com.example.android.bluetoothchat.BluetoothChatFragment.TAG, \"Impossible to connect, device address is not valid!\"); android.widget.Toast.makeText(this.getContext(), \"Device address is not valid!\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7248/buggy-version/Application.src.main.java.com.example.android.bluetoothchat.BluetoothChatFragment.java", "BodyUseAPI": ["android.bluetooth.BluetoothAdapter.getRemoteDevice(java.lang.String)", "com.example.android.bluetoothchat.BluetoothChatService.connect(android.bluetooth.BluetoothDevice,boolean)"], "Fixed commit": "1b810bd9fc87e2b69e02a25c996149f361d1012b", "Url": "https://api.github.com/repos/Ks89/android-BluetoothChat", "Date": "2016-04-10T20:44:40Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getActivity().startActivity(intent); android.widget.Toast.makeText(getActivity(), \"Press send to help us with your awesome feedback!\", Toast.LENGTH_SHORT).show(); mFeedBackMessage.setText(\"\"); } catch (android.content.ActivityNotFoundException e) { android.widget.Toast.makeText(getActivity(), \"It seems that you do not have an email app installed. Please install one and try again\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2912/buggy-version/app.src.main.java.indexprototype.com.kamal.indexprototype.SendFeedbackFragment.java", "BodyUseAPI": ["indexprototype.com.kamal.indexprototype.SendFeedbackFragment.1.getActivity()", "android.widget.Toast.makeText(getActivity(),java.lang.String,Toast.LENGTH_SHORT)", "getActivity().startActivity(android.content.Intent)", "android.widget.Toast.makeText(getActivity(), \"Press send to help us with your awesome feedback!\", Toast.LENGTH_SHORT).show()", "android.widget.EditText.setText(java.lang.String)", "indexprototype.com.kamal.indexprototype.SendFeedbackFragment.1.getActivity()"], "Fixed commit": "6a4f85f899fcfbe101e88509cfab9f74fb177205", "Url": "https://api.github.com/repos/kamal94/IndexPrototype", "Date": "2014-12-23T17:32:51Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return restApi.getMergeableInfoForCurrentRevision(change_id); } catch (java.lang.Exception e) { return new pl.edu.agh.mobilecodereviewer.dto.NullMergeableInfoDTO(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2491/buggy-version/app.src.main.java.pl.edu.agh.mobilecodereviewer.dao.gerrit.utilities.AsynchronousRestApi.java", "BodyUseAPI": ["pl.edu.agh.mobilecodereviewer.dao.gerrit.utilities.RestApi.getMergeableInfoForCurrentRevision(java.lang.String)"], "Fixed commit": "fd4b473c15bdef46973f2a5fd198e1aaf55bbee3", "Url": "https://api.github.com/repos/mobilecodereviewer/MobileCodeReviewer", "Date": "2014-10-22T08:03:00Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(net.alliknow.podcatcher.BaseActivity.PODCATCHER_HELPSITE))); } catch (android.content.ActivityNotFoundException e) { showToast(getString(R.string.no_browser)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8116/buggy-version/src.net.alliknow.podcatcher.BaseActivity.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)", "net.alliknow.podcatcher.BaseActivity.startActivity(android.content.Intent)"], "Fixed commit": "cc88fb63328f14872e9e8c7e00885e2f2c0ac744", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2013-07-25T12:45:56Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(net.alliknow.podcatcher.BaseActivity.PODCATCHER_WEBSITE))); } catch (android.content.ActivityNotFoundException e) { showToast(getString(R.string.no_browser)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8116/buggy-version/src.net.alliknow.podcatcher.BaseActivity.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)", "net.alliknow.podcatcher.BaseActivity.startActivity(android.content.Intent)"], "Fixed commit": "cc88fb63328f14872e9e8c7e00885e2f2c0ac744", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2013-07-25T12:45:56Z"},
{"Line": "=>772", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.Map<org.neo4j.graphdb.Node, java.util.Map<java.lang.String, java.lang.Object>> removedProperties = new java.util.LinkedHashMap<org.neo4j.graphdb.Node, java.util.Map<java.lang.String, java.lang.Object>>(); org.structr.common.SecurityContext securityContext = org.structr.common.SecurityContext.getSuperUserInstance(); org.structr.core.node.StructrNodeFactory factory = new org.structr.core.node.StructrNodeFactory(securityContext); java.util.Set<org.structr.core.entity.AbstractNode> modifiedNodes = new java.util.LinkedHashSet<org.structr.core.entity.AbstractNode>(); java.util.Set<org.structr.core.entity.AbstractNode> createdNodes = new java.util.LinkedHashSet<org.structr.core.entity.AbstractNode>(); begin(securityContext, transactionKey); for (org.neo4j.graphdb.event.PropertyEntry<org.neo4j.graphdb.Node> entry : data.removedNodeProperties()) { org.neo4j.graphdb.Node node = entry.entity(); java.util.Map<java.lang.String, java.lang.Object> propertyMap = removedProperties.get(node); if (propertyMap == null) { propertyMap = new java.util.LinkedHashMap<java.lang.String, java.lang.Object>(); removedProperties.put(node, propertyMap); } propertyMap.put(entry.key(), entry.previouslyCommitedValue()); } for (org.neo4j.graphdb.Node node : data.createdNodes()) { org.structr.core.entity.AbstractNode entity = factory.createNode(securityContext, node); graphObjectCreated(securityContext, transactionKey, entity); createdNodes.add(entity); } for (org.neo4j.graphdb.Relationship rel : data.createdRelationships()) { graphObjectCreated(securityContext, transactionKey, new org.structr.core.entity.StructrRelationship(securityContext, rel)); } for (org.neo4j.graphdb.Node node : data.deletedNodes()) { graphObjectDeleted(securityContext, transactionKey, node.getId(), removedProperties.get(node)); } for (org.neo4j.graphdb.event.PropertyEntry<org.neo4j.graphdb.Node> entry : data.assignedNodeProperties()) { org.structr.core.entity.AbstractNode entity = factory.createNode(securityContext, entry.entity()); propertyModified(securityContext, transactionKey, entity, entry.key(), entry.previouslyCommitedValue(), entry.value()); modifiedNodes.add(entity); } for (org.structr.core.entity.AbstractNode node : modifiedNodes) { if (!(createdNodes.contains(node))) { graphObjectModified(securityContext, transactionKey, node); } } commit(securityContext, transactionKey); } catch (java.lang.Throwable t) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7829/buggy-version/structr.structr-core.src.main.java.org.structr.core.EntityContext.java", "BodyUseAPI": ["org.neo4j.graphdb.event.TransactionData.deletedNodes()", "org.neo4j.graphdb.event.TransactionData.createdNodes()", "org.neo4j.graphdb.event.TransactionData.removedNodeProperties()", "org.neo4j.graphdb.event.PropertyEntry<org.neo4j.graphdb.Node>.previouslyCommitedValue()", "org.neo4j.graphdb.event.PropertyEntry<org.neo4j.graphdb.Node>.key()", "org.neo4j.graphdb.event.PropertyEntry<org.neo4j.graphdb.Node>.entity()", "org.structr.core.EntityContext.EntityContextModificationListener.commit(org.structr.common.SecurityContext,long)", "java.util.Map<org.neo4j.graphdb.Node, java.util.Map<java.lang.String, java.lang.Object>>.get(org.neo4j.graphdb.Node)", "org.neo4j.graphdb.event.PropertyEntry<org.neo4j.graphdb.Node>.key()", "org.neo4j.graphdb.event.TransactionData.assignedNodeProperties()", "org.neo4j.graphdb.Node.getId()", "org.structr.core.node.StructrNodeFactory.createNode(org.structr.common.SecurityContext,entry.entity())", "org.structr.core.EntityContext.EntityContextModificationListener.graphObjectModified(org.structr.common.SecurityContext,long,org.structr.core.entity.AbstractNode)", "org.structr.common.SecurityContext.getSuperUserInstance()", "org.neo4j.graphdb.event.TransactionData.createdRelationships()", "org.neo4j.graphdb.event.PropertyEntry<org.neo4j.graphdb.Node>.value()", "org.structr.core.EntityContext.EntityContextModificationListener.propertyModified(org.structr.common.SecurityContext,long,org.structr.core.entity.AbstractNode,entry.key(),entry.previouslyCommitedValue(),entry.value())", "org.structr.core.node.StructrNodeFactory.createNode(org.structr.common.SecurityContext,org.neo4j.graphdb.Node)", "org.structr.core.EntityContext.EntityContextModificationListener.graphObjectCreated(org.structr.common.SecurityContext,long,org.structr.core.entity.AbstractNode)", "org.structr.core.EntityContext.EntityContextModificationListener.graphObjectCreated(org.structr.common.SecurityContext,long,org.structr.core.entity.StructrRelationship)", "java.util.Map<org.neo4j.graphdb.Node, java.util.Map<java.lang.String, java.lang.Object>>.get(org.neo4j.graphdb.Node)", "java.util.Map<org.neo4j.graphdb.Node, java.util.Map<java.lang.String, java.lang.Object>>.put(org.neo4j.graphdb.Node,java.util.Map<java.lang.String, java.lang.Object>)", "java.util.Set<org.structr.core.entity.AbstractNode>.contains(org.structr.core.entity.AbstractNode)", "java.util.Set<org.structr.core.entity.AbstractNode>.add(org.structr.core.entity.AbstractNode)", "java.util.Set<org.structr.core.entity.AbstractNode>.add(org.structr.core.entity.AbstractNode)", "java.util.Map<java.lang.String, java.lang.Object>.put(entry.key(),entry.previouslyCommitedValue())", "org.structr.core.EntityContext.EntityContextModificationListener.begin(org.structr.common.SecurityContext,long)", "org.structr.core.EntityContext.EntityContextModificationListener.graphObjectDeleted(org.structr.common.SecurityContext,long,node.getId(),removedProperties.get(node))", "org.neo4j.graphdb.event.PropertyEntry<org.neo4j.graphdb.Node>.entity()", "org.neo4j.graphdb.event.PropertyEntry<org.neo4j.graphdb.Node>.previouslyCommitedValue()"], "Fixed commit": "d2713bad99c3ba3f8649827244f1116d56af5a0b", "Url": "https://api.github.com/repos/structr/structr", "Date": "2011-12-11T15:42:26Z"},
{"Line": "=>833", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((ee.getExpressionContext()) != null) { ee.getExpressionContext().setVariableValue(\"tableCondition\", null); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8404/buggy-version/modules.uipage.src.main.java.org.shaolin.uimaster.page.widgets.HTMLTableType.java", "BodyUseAPI": ["org.shaolin.uimaster.page.javacc.VariableEvaluator.getExpressionContext()", "ee.getExpressionContext().setVariableValue(java.lang.String,<nulltype>)", "org.shaolin.uimaster.page.javacc.VariableEvaluator.getExpressionContext()"], "Fixed commit": "2c1c7ffce4573f33f1d89cd12fb25cf0caf582f2", "Url": "https://api.github.com/repos/shaolinwu/uimaster", "Date": "2017-06-11T15:32:47Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (isAuthV2Enabled()) { authorizeMetaGets(HiveOperationType.GET_CATALOGS, null); setState(OperationState.FINISHED); } } catch (org.apache.hive.service.cli.HiveSQLException e) { setState(OperationState.ERROR); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8838/buggy-version/service.src.java.org.apache.hive.service.cli.operation.GetCatalogsOperation.java", "BodyUseAPI": ["org.apache.hive.service.cli.operation.GetCatalogsOperation.setState(OperationState.FINISHED)", "org.apache.hive.service.cli.operation.GetCatalogsOperation.isAuthV2Enabled()", "org.apache.hive.service.cli.operation.GetCatalogsOperation.authorizeMetaGets(HiveOperationType.GET_CATALOGS,<nulltype>)"], "Fixed commit": "5f327cb6ad240d15b4d5c3a831071ac1a13dd1f2", "Url": "https://api.github.com/repos/thejasmn/hive", "Date": "2015-05-23T00:38:46Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { context.startService(streamingServiceIntent); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8676/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.services.RestartFederatedServiceReceiver.java", "BodyUseAPI": ["android.content.Context.startService(android.content.Intent)"], "Fixed commit": "8290e09dd77d2df14a44798a70afed15f7fb49a7", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-11-18T20:04:13Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { currentOpCode = opcodeMap.get(binaryData.get(currentLocation)); } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6388/buggy-version/VirtualMachine.src.codeSupport.ManualDisassembler.java", "BodyUseAPI": ["codeSupport.Opcodes8080.get(byte)", "java.nio.ByteBuffer.get(int)"], "Fixed commit": "7c2b8d68fe4eb20967f0bf6a92a8f052a53c62dd", "Url": "https://api.github.com/repos/NotThe1/Virtualmachine", "Date": "2016-05-15T22:22:31Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { state = generateState(); } catch (java.lang.Throwable e) { rx.exceptions.Exceptions.throwIfFatal(e); subscriber.onError(e); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3556/buggy-version/src.main.java.rx.observables.SyncOnSubscribe.java", "BodyUseAPI": ["rx.observables.SyncOnSubscribe<S, T>.generateState()"], "Fixed commit": "05d8c63b9771c20279b9ee36357e0e300fe12b90", "Url": "https://api.github.com/repos/ReactiveX/RxJava", "Date": "2016-01-25T21:17:43Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { parent.onUnsubscribe(state); } catch (java.lang.Throwable e) { rx.exceptions.Exceptions.throwIfFatal(e); rx.plugins.RxJavaPlugins.getInstance().getErrorHandler().handleError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3556/buggy-version/src.main.java.rx.observables.SyncOnSubscribe.java", "BodyUseAPI": ["rx.observables.SyncOnSubscribe<S, T>.onUnsubscribe(S)"], "Fixed commit": "05d8c63b9771c20279b9ee36357e0e300fe12b90", "Url": "https://api.github.com/repos/ReactiveX/RxJava", "Date": "2016-01-25T21:17:43Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (responseStreamReader != null) responseStreamReader.close(); if (request != null) request.flush(); } catch (java.io.IOException exception) { responseStreamReader = null; request = null; LOGE(exception); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8696/buggy-version/sitecore-api-android.src.main.java.net.sitecore.android.sdk.api.UploadMediaHelper.java", "BodyUseAPI": ["java.io.BufferedReader.close()", "java.io.DataOutputStream.flush()"], "Fixed commit": "a4b384a4ccd871adf776fb265adbd50bdce41273", "Url": "https://api.github.com/repos/Sitecore/sitecore-android-sdk", "Date": "2014-03-17T13:22:10Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { budget1.setText(((\"$\" + (new java.math.BigDecimal(temp).divide(new java.math.BigDecimal(d.getDays()), 2, java.math.BigDecimal.ROUND_HALF_DOWN))) + \"/day\")); } catch (java.lang.Exception e) { budget1.setText(Constants.user.plusAsMoney()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/114/buggy-version/PolyMeal.src.main.java.com.mustangexchange.polymeal.PlusDollarsActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "java.math.BigDecimal.divide(java.math.BigDecimal,int,int)", "org.joda.time.Days.getDays()"], "Fixed commit": "bc04319c01f7be65cf9f1147b7fd864aae654c04", "Url": "https://api.github.com/repos/bammaster/PolyDiningProject", "Date": "2014-06-11T03:26:33Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { budget2.setText(((\"$\" + (new java.math.BigDecimal(temp).divide(new java.math.BigDecimal(w.getWeeks()), 2, java.math.BigDecimal.ROUND_HALF_DOWN))) + \"/week\")); } catch (java.lang.Exception e) { budget2.setText(Constants.user.plusAsMoney()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/114/buggy-version/PolyMeal.src.main.java.com.mustangexchange.polymeal.PlusDollarsActivity.java", "BodyUseAPI": ["java.math.BigDecimal.divide(java.math.BigDecimal,int,int)", "org.joda.time.Weeks.getWeeks()", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "bc04319c01f7be65cf9f1147b7fd864aae654c04", "Url": "https://api.github.com/repos/bammaster/PolyDiningProject", "Date": "2014-06-11T03:26:33Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { budget1.setText(((\"$\" + (new java.math.BigDecimal(temp).divide(new java.math.BigDecimal(d.getDays()), 2, java.math.BigDecimal.ROUND_HALF_DOWN))) + \"/day\")); } catch (java.lang.Exception e) { budget1.setText(Constants.user.plusAsMoney()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/114/buggy-version/PolyMeal.src.main.java.com.mustangexchange.polymeal.PlusDollarsActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "org.joda.time.Days.getDays()", "java.math.BigDecimal.divide(java.math.BigDecimal,int,int)"], "Fixed commit": "bc04319c01f7be65cf9f1147b7fd864aae654c04", "Url": "https://api.github.com/repos/bammaster/PolyDiningProject", "Date": "2014-06-11T03:26:33Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { budget2.setText(((\"$\" + (new java.math.BigDecimal(temp).divide(new java.math.BigDecimal(w.getWeeks()), 2, java.math.BigDecimal.ROUND_HALF_DOWN))) + \"/week\")); } catch (java.lang.Exception e) { budget2.setText(Constants.user.plusAsMoney()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/114/buggy-version/PolyMeal.src.main.java.com.mustangexchange.polymeal.PlusDollarsActivity.java", "BodyUseAPI": ["java.math.BigDecimal.divide(java.math.BigDecimal,int,int)", "org.joda.time.Weeks.getWeeks()", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "bc04319c01f7be65cf9f1147b7fd864aae654c04", "Url": "https://api.github.com/repos/bammaster/PolyDiningProject", "Date": "2014-06-11T03:26:33Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { failureTimePattern = propertiesArray[4]; failureDegradationPattern = propertiesArray[5]; } catch (java.lang.ArrayIndexOutOfBoundsException ex) { failureTimePattern = \"\"; failureDegradationPattern = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1427/buggy-version/soar.ws.fx.client.src.soar.ws.fx.services.ServiceFactory.java", "BodyUseAPI": [], "Fixed commit": "097412ffbae35a5023e3ae00c8b9be0ce4913d6f", "Url": "https://api.github.com/repos/gerasimou/ENTRUST", "Date": "2015-07-07T16:38:37Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { request.setCharacterEncoding(\"UTF-8\"); } catch (java.io.UnsupportedEncodingException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4656/buggy-version/SurveyTool.src.ilu.surveytool.servlet.surveymanager.CreateSurveyServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setCharacterEncoding(java.lang.String)"], "Fixed commit": "3ec81ee15c70582d22e6c440c5d8d6338d97d891", "Url": "https://api.github.com/repos/iluaepidi/surveytool", "Date": "2016-10-19T12:02:14Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Class clazz = java.lang.Class.forName(getClassName(type)); typeConverters.put(clazz, typeConverter); } catch (java.lang.ClassNotFoundException e) { throw new java.lang.RuntimeException((\"Unable to register custom type converter \" + (typeConverterClass.getName())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2184/buggy-version/easybatch-core.src.main.java.org.easybatch.core.mapper.ObjectMapper.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)", "java.util.Map<java.lang.Class, org.easybatch.core.api.TypeConverter>.put(java.lang.Class,org.easybatch.core.api.TypeConverter)", "org.easybatch.core.mapper.ObjectMapper<T>.getClassName(java.lang.reflect.Type)"], "Fixed commit": "f1f9706fbba204d72cb557d9737baeff77be3a53", "Url": "https://api.github.com/repos/j-easy/easy-batch", "Date": "2015-05-02T14:14:41Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { nbtool.io.FileIO.loadLog(logs[i], location); } catch (java.io.IOException e) { e.printStackTrace(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5368/buggy-version/src.nbtool.src.nbtool.io.FileIO.java", "BodyUseAPI": ["nbtool.io.FileIO.loadLog(logs[i],java.lang.String)"], "Fixed commit": "f40fe1113ed9869ef1461c2b146786007c8c721d", "Url": "https://api.github.com/repos/dnav6987/nbites", "Date": "2015-06-02T15:33:37Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2851/buggy-version/Sprite.Player.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "773bd5cac5cd7be94d9deb04d252677e27550750", "Url": "https://api.github.com/repos/JacobGrace1020/Bubbles", "Date": "2017-02-10T04:00:25Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { graphModel.bridge().copyNodes(nodes); return true; } catch (java.lang.Exception e) { java.lang.String error = org.openide.util.NbBundle.getMessage(org.gephi.visualization.apiimpl.contextmenuitems.CopyOrMoveToWorkspace.class, \"GraphContextMenu_CopyOrMoveToWorkspace_ConfigurationNotCompatible\"); java.lang.String title = org.openide.util.NbBundle.getMessage(org.gephi.visualization.apiimpl.contextmenuitems.CopyOrMoveToWorkspace.class, \"GraphContextMenu_CopyOrMoveToWorkspace_ConfigurationNotCompatible_Title\"); javax.swing.JOptionPane.showMessageDialog(null, error, title, javax.swing.JOptionPane.ERROR_MESSAGE); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6476/buggy-version/modules.VisualizationImpl.src.main.java.org.gephi.visualization.apiimpl.contextmenuitems.CopyOrMoveToWorkspaceSubItem.java", "BodyUseAPI": ["org.gephi.graph.api.GraphModel.bridge()", "graphModel.bridge().copyNodes(org.gephi.visualization.apiimpl.contextmenuitems.CopyOrMoveToWorkspaceSubItem)"], "Fixed commit": "cbb025d6d058e417bfa505c527d1048c2ff1479f", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2015-12-17T21:09:22Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.File f = new java.io.File(\"program.asm\"); java.util.Scanner makeString = new java.util.Scanner(f); while (makeString.hasNextLine()) { s += (makeString.nextLine()) + \"\\n\"; } makeString.close(); } catch (java.lang.Exception e) { s = \"(loop)\\n@first\\nD=M\\n@end\\nD;JLE\\n@second\\nD=M\\n@result\\nM=D+M\\n@first\\nM=M-1\\n@loop\\n0;JMP\\n@end\\n(end)\\n0;JMP\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7097/buggy-version/src.Program.java", "BodyUseAPI": ["java.util.Scanner.nextLine()", "java.util.Scanner.close()", "java.util.Scanner.hasNextLine()"], "Fixed commit": "419eacfb69da38f59413e84a07c54acb6de8c11b", "Url": "https://api.github.com/repos/FigyTuna/Assembler", "Date": "2015-10-05T07:29:37Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getPack(locale); } catch (java.util.MissingResourceException ex) { getLogger().error(ex.getMessage(), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3732/buggy-version/src.org.rapla.components.xmlbundle.impl.I18nBundleImpl.java", "BodyUseAPI": ["org.rapla.components.xmlbundle.impl.I18nBundleImpl.getPack(java.util.Locale)"], "Fixed commit": "c68ae06ee34feb6083f581e2d2c722ae66b48d8b", "Url": "https://api.github.com/repos/rapla/rapla", "Date": "2014-01-16T11:44:36Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { db.execSQL(sql); showMessage(\"Records Saved Successfully.\"); } catch (java.lang.Exception e) { showMessage(\"Record with this name already exist.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/762/buggy-version/app.src.main.java.net.simplifiedcoding.sqlitedbcode.EditServer.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String)", "net.simplifiedcoding.sqlitedbcode.EditServer.showMessage(java.lang.String)"], "Fixed commit": "0d1a13e6da104d8485a0008ec7a78804f5a3080b", "Url": "https://api.github.com/repos/Arduino-and-RaspberryPi/ESPHttpClient", "Date": "2016-09-24T11:41:57Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return new org.pentaho.hadoop.shim.common.fs.FileSystemProxy(org.apache.hadoop.fs.FileSystem.get(org.pentaho.hadoop.shim.common.ShimUtils.asConfiguration(conf))); } finally { java.lang.Thread.currentThread().setContextClassLoader(cl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8083/buggy-version/shims.common.src.org.pentaho.hadoop.shim.common.CommonHadoopShim.java", "BodyUseAPI": ["org.pentaho.hadoop.shim.common.ShimUtils.asConfiguration(org.pentaho.hadoop.shim.api.Configuration)", "org.apache.hadoop.fs.FileSystem.get(org.pentaho.hadoop.shim.common.ShimUtils.asConfiguration(conf))"], "Fixed commit": "f331d73525bc5e848372e0511a3376920ef974c5", "Url": "https://api.github.com/repos/gretchiemoran/big-data-plugin", "Date": "2012-10-31T01:27:14Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stage.draw(); } catch (java.lang.IllegalStateException e) { android.util.Log.d(\"LWP\", (\"IllegalStateException caught while rendering the stage listner \" + (hashCode()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/707/buggy-version/catroid.src.org.catrobat.catroid.stage.StageListener.java", "BodyUseAPI": ["com.badlogic.gdx.scenes.scene2d.Stage.draw()"], "Fixed commit": "90321036530f750410ececd1e824d7d217ca5b4e", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-11-04T10:44:56Z"},
{"Line": "=>1075", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.crashlytics.android.answers.Answers.getInstance().logCustom(new com.crashlytics.android.answers.CustomEvent(\"Share link created\").putCustomAttribute(\"Content Id\", currentEditorialFullInfo.getEditorialGeneralInfo().getEditorialID()).putCustomAttribute(\"Shares\", currentEditorialFullInfo.getEditorialGeneralInfo().getEditorialHeading())); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6410/buggy-version/app.src.main.java.app.articles.vacabulary.editorial.gamefever.editorial.EditorialFeedActivity.java", "BodyUseAPI": ["app.articles.vacabulary.editorial.gamefever.editorial.EditorialFullInfo.getEditorialGeneralInfo()", "com.crashlytics.android.answers.CustomEvent.putCustomAttribute(java.lang.String,currentEditorialFullInfo.getEditorialGeneralInfo().getEditorialID())", "com.crashlytics.android.answers.Answers.getInstance().logCustom(new com.crashlytics.android.answers.CustomEvent(\"Share link created\").putCustomAttribute(\"Content Id\", currentEditorialFullInfo.getEditorialGeneralInfo().getEditorialID()).putCustomAttribute(\"Shares\", currentEditorialFullInfo.getEditorialGeneralInfo().getEditorialHeading()))", "app.articles.vacabulary.editorial.gamefever.editorial.EditorialFullInfo.getEditorialGeneralInfo()", "currentEditorialFullInfo.getEditorialGeneralInfo().getEditorialID()", "com.crashlytics.android.answers.Answers.getInstance()", "currentEditorialFullInfo.getEditorialGeneralInfo().getEditorialHeading()", "new com.crashlytics.android.answers.CustomEvent(\"Share link created\").putCustomAttribute(\"Content Id\", currentEditorialFullInfo.getEditorialGeneralInfo().getEditorialID()).putCustomAttribute(java.lang.String,currentEditorialFullInfo.getEditorialGeneralInfo().getEditorialHeading())"], "Fixed commit": "f0f0300ea403e3d9c03dd8f5106939f402ad8c8c", "Url": "https://api.github.com/repos/GameFever20/Editorial", "Date": "2017-09-20T14:58:17Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { imm.hideSoftInputFromWindow(((android.app.Activity) (mContext)).getWindow().getCurrentFocus().getWindowToken(), 0); } catch (java.lang.NullPointerException e) { android.util.Log.d(com.knatola.kloapp.Game.GameOneFragment.LOG, \"nullpointer\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/920/buggy-version/app.src.main.java.com.knatola.kloapp.Game.GameOneFragment.java", "BodyUseAPI": ["((android.app.Activity) (mContext)).getWindow().getCurrentFocus().getWindowToken()", "android.content.Context.getWindow()", "((android.app.Activity) (mContext)).getWindow().getCurrentFocus()", "android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(((android.app.Activity) (mContext)).getWindow().getCurrentFocus().getWindowToken(),int)"], "Fixed commit": "067ba9bc876f7240f76e0982ac3234534407cec7", "Url": "https://api.github.com/repos/knatola/KLOapp", "Date": "2017-12-31T10:29:38Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.InterruptedException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1896/buggy-version/desktop.src.ru.mitrakov.self.rush.desktop.DesktopLauncher.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "a47aa7b7e3386a848f58f7177576395930d7359e", "Url": "https://api.github.com/repos/mitrakov/winesaps", "Date": "2017-04-07T13:19:30Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { content = unmarshaller.unmarshal(is); } catch (javax.xml.bind.JAXBException ex) { logger.error(\"######################JAXBException : \", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1113/buggy-version/geoplatform-tools.geoplatform-connectors.geoplatform-ogc-connectors.geoplatform-connector-api.src.main.java.org.geosdi.geoplatform.connector.server.request.GPPostConnectorRequest.java", "BodyUseAPI": ["javax.xml.bind.Unmarshaller.unmarshal(java.io.InputStream)"], "Fixed commit": "6c840672f06ccc83b6e94eb98ae820f0e3575016", "Url": "https://api.github.com/repos/glascaleia/geo-platform", "Date": "2015-11-12T09:07:55Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { final javax.ws.rs.client.Invocation.Builder request = buildRequest(); if ((state.get()) == (org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.State.OPEN)) { eventInput = request.get(javax.ws.rs.sse.SseEventInput.class); } } finally { if ((connectedLatch) != null) { connectedLatch.countDown(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8005/buggy-version/providers.sse.src.main.java.org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicReference<org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.State>.get()", "org.jboss.resteasy.plugins.providers.sse.SseEventSourceImpl.EventHandler.buildRequest()", "Invocation.Builder.get(java.lang.Class)"], "Fixed commit": "da7336e58d8005a1015ad2f5088b33cf9b9c38dc", "Url": "https://api.github.com/repos/asoldano/Resteasy", "Date": "2017-02-10T22:51:23Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bind(sender, args.get(0), java.lang.Integer.parseInt(args.get(1))); } catch (java.lang.NumberFormatException ex) { sender.sendMessage(((org.bukkit.ChatColor.RED) + (wrongNumber))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7457/buggy-version/src.com.projectkorra.projectkorra.command.BindCommand.java", "BodyUseAPI": ["com.projectkorra.projectkorra.command.BindCommand.bind(org.bukkit.command.CommandSender,java.lang.String,int)", "java.lang.Integer.parseInt(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "f4e684bb76bced94687429e22a0fcfa932f147ec", "Url": "https://api.github.com/repos/StrangeOne101/ProjectKorra", "Date": "2016-11-05T02:03:31Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { teamService.editTeam(jsonTeam.getTeamName(), jsonTeam.getCoordinatorGroups(), jsonTeam.getDeveloperGroups(), jsonTeam.getTeamCategoryNames()); } catch (com.atlassian.jira.service.ServiceException e) { return javax.ws.rs.core.Response.status(Response.Status.CONFLICT).entity(e.getMessage()).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6719/buggy-version/src.main.java.org.catrobat.jira.timesheet.rest.ConfigResourceRest.java", "BodyUseAPI": ["org.catrobat.jira.timesheet.rest.json.JsonTeam.getTeamName()", "org.catrobat.jira.timesheet.services.TeamService.editTeam(jsonTeam.getTeamName(),jsonTeam.getCoordinatorGroups(),jsonTeam.getDeveloperGroups(),jsonTeam.getTeamCategoryNames())", "org.catrobat.jira.timesheet.rest.json.JsonTeam.getCoordinatorGroups()", "org.catrobat.jira.timesheet.rest.json.JsonTeam.getTeamCategoryNames()", "org.catrobat.jira.timesheet.rest.json.JsonTeam.getDeveloperGroups()"], "Fixed commit": "234a824bd4ef83617231aff8871b0e5b01318216", "Url": "https://api.github.com/repos/Catrobat/Timesheet", "Date": "2017-04-28T09:48:45Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { configuration = new java.lang.String(serializedConfiguration, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException ex) { throw new java.lang.RuntimeException(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7095/buggy-version/commons-app.src.main.java.cz.cuni.mff.xrg.odcs.commons.app.dpu.DPURecord.java", "BodyUseAPI": [], "Fixed commit": "f8b67182350d34a61b7233119365c650ec366111", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2014-08-12T11:21:10Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { val = java.lang.Integer.parseInt(nStr); } catch (java.lang.NumberFormatException e) { eu.transkribus.core.model.builder.FatBuilder.logger.error((\"Could not parse number: \" + nStr), e); val = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8895/buggy-version/src.main.java.eu.transkribus.core.model.builder.FatBuilder.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "46db736d00eb850c0785b62e158e1c2920c33425", "Url": "https://api.github.com/repos/Transkribus/TranskribusCore", "Date": "2016-07-07T13:48:03Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return api.networks().listPage(pageToken, options); } catch (java.lang.Exception e) { return api.subnetworks.listPage(pageToken, options); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3273/buggy-version/providers.google-compute-engine.src.main.java.org.jclouds.googlecomputeengine.features.NetworkApi.java", "BodyUseAPI": ["api.networks().listPage(java.lang.String,org.jclouds.googlecomputeengine.options.ListOptions)", "org.jclouds.googlecomputeengine.GoogleComputeEngineApi.networks()"], "Fixed commit": "b52cd037f1a355755e24b8d63537aaa477321c64", "Url": "https://api.github.com/repos/neil-vonholtum-nirmata/jclouds", "Date": "2016-08-02T01:54:35Z"},
{"Line": "=>1520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionState state = part.state(); if (((!reserve) || (state == (org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionState.EVICTED))) || (state == (org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionState.RENTING))) continue; long updCntr = cntrMap.updateCounter(part.id()); if (updCntr > (part.updateCounter())) part.updateCounter(updCntr); else if ((part.updateCounter()) > 0) { cntrMap.initialUpdateCounter(part.id(), part.initialUpdateCounter()); cntrMap.updateCounter(part.id(), part.updateCounter()); } } finally { if (reserve) part.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6334/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.java", "BodyUseAPI": ["org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLocalPartition.id()", "org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLocalPartition.updateCounter()", "org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLocalPartition.id()", "org.apache.ignite.internal.processors.cache.distributed.dht.preloader.CachePartitionFullCountersMap.initialUpdateCounter(part.id(),part.initialUpdateCounter())", "org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLocalPartition.state()", "org.apache.ignite.internal.processors.cache.distributed.dht.preloader.CachePartitionFullCountersMap.updateCounter(part.id(),part.updateCounter())", "org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLocalPartition.initialUpdateCounter()", "org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLocalPartition.updateCounter(long)", "org.apache.ignite.internal.processors.cache.distributed.dht.preloader.CachePartitionFullCountersMap.updateCounter(part.id())", "org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLocalPartition.id()", "org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLocalPartition.updateCounter()", "org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtLocalPartition.updateCounter()"], "Fixed commit": "b923e264d64cd301b5b64f4f056f60bfc0ab18d4", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2017-12-26T15:27:58Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { timestamp = java.lang.Long.parseLong(skinsrestorer.shared.storage.SkinStorage.cache.getString((name + \".timestamp\"))); } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5607/buggy-version/src.skinsrestorer.shared.storage.SkinStorage.java", "BodyUseAPI": ["java.lang.Long.parseLong(skinsrestorer.shared.storage.SkinStorage.cache.getString((name + \".timestamp\")))", "skinsrestorer.shared.utils.DataFiles.getString(java.lang.String)"], "Fixed commit": "d26c58af2f2f7f22a2715a080b786cd1683c55c2", "Url": "https://api.github.com/repos/Th3Tr0LLeR/SkinsRestorer---Maro", "Date": "2016-04-25T13:44:39Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.dbunit.Assertion.assertEquals(expectedTableWithFilteredColumns, actualTableWithFilteredColumns, diffCollector); } catch (java.lang.Throwable e) { errorCollector.collect(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7776/buggy-version/dbunit.src.main.java.org.jboss.arquillian.persistence.dbunit.DataSetComparator.java", "BodyUseAPI": ["org.dbunit.Assertion.assertEquals(org.jboss.arquillian.persistence.dbunit.ITable,org.jboss.arquillian.persistence.dbunit.ITable,org.dbunit.assertion.DiffCollectingFailureHandler)"], "Fixed commit": "7d51cf9dc4c137b4e082f2b76c5ff77fba7b7dcf", "Url": "https://api.github.com/repos/bartoszmajsak/arquillian-extension-persistence", "Date": "2014-08-11T18:48:07Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pageContent = page.getContent(); } catch (java.lang.NullPointerException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4374/buggy-version/src.main.java.IndexMapper.java", "BodyUseAPI": ["edu.umd.cloud9.collection.wikipedia.WikipediaPage.getContent()"], "Fixed commit": "97461c2ad677d2997fc22b901ad0396014c40cc3", "Url": "https://api.github.com/repos/SandroGolis/Inverted-Index-Builder", "Date": "2016-11-26T04:13:12Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (objectId != null) ref = new org.eclipse.jgit.revwalk.RevWalk(repository).parseTree(objectId); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5423/buggy-version/rdt.org.eclipse.ptp.rdt.sync.git.core.src.org.eclipse.ptp.internal.rdt.sync.git.core.GitRemoteSyncConnection.java", "BodyUseAPI": ["org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.lib.ObjectId)"], "Fixed commit": "a5cd7f606851daa08e5328b0007b3f3433127be5", "Url": "https://api.github.com/repos/rolandschulz/PTP", "Date": "2013-06-05T21:20:18Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { parser = new org.kohsuke.args4j.CmdLineParser(this); parser.parseArgument(args); if (showHelp) { java.lang.System.out.println(\"Help for this command:\"); showHelp(java.lang.System.out, parser); java.lang.System.exit(0); } } catch (org.kohsuke.args4j.CmdLineException e) { java.lang.System.err.println(e.getMessage()); showHelp(java.lang.System.err, parser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5082/buggy-version/src.main.java.cc.twittertools.scripts.Condense.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "org.kohsuke.args4j.CmdLineParser.parseArgument(java.lang.String[])", "java.lang.System.exit(int)", "cc.twittertools.scripts.Condense.showHelp(java.io.PrintStream,org.kohsuke.args4j.CmdLineParser)"], "Fixed commit": "1bb08720fda2e9104721dead7160d3be61b95ec0", "Url": "https://api.github.com/repos/budgefeeney/twitter-tools", "Date": "2013-12-09T11:12:18Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { json = webService.execute(\"GET\", java.lang.String.format(\"http://%s:81/server/rest/id\", host)); } catch (org.syncloud.android.core.common.SyncloudException e) { java.lang.String message = \"Unable to get identification response\"; org.syncloud.android.core.platform.Tools.logger.error(message, e); return com.google.common.base.Optional.absent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4201/buggy-version/syncloud.src.main.java.org.syncloud.android.core.platform.Tools.java", "BodyUseAPI": ["org.syncloud.android.core.common.WebService.execute(java.lang.String,java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String)"], "Fixed commit": "9464116cdde04ea7d3a659f5c63b5924347f93cc", "Url": "https://api.github.com/repos/syncloud/android", "Date": "2016-03-27T21:27:24Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { movieDataImporter.processAndMergeData(text); me.renhai.taurus.tools.MovieDataInitializer.LOG.info((\"finish processing \" + (file.getName()))); } catch (org.springframework.dao.DataIntegrityViolationException e) { me.renhai.taurus.tools.MovieDataInitializer.LOG.error((\"processAndMergeData error, content: \" + text)); me.renhai.taurus.tools.MovieDataInitializer.LOG.error(e.getMessage(), e); } catch (java.lang.Exception e) { throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3719/buggy-version/src.main.java.me.renhai.taurus.tools.MovieDataInitializer.java", "BodyUseAPI": ["me.renhai.taurus.tools.MovieDataImporter.processAndMergeData(java.lang.String)", "org.slf4j.Logger.info(java.lang.String)", "java.io.File.getName()"], "Fixed commit": "9f4f638816403990c29abd12f07d09e1176ec105", "Url": "https://api.github.com/repos/renhai/taurus", "Date": "2016-11-26T20:04:56Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fsDataOutputStream.close(); } catch (java.io.IOException e) { org.apache.hadoop.io.IOUtils.closeStream(fsDataOutputStream); throw new org.springframework.data.hadoop.store.StoreException(\"Error while closing stream\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5538/buggy-version/spring-xd-hadoop.src.main.java.org.springframework.xd.batch.item.hadoop.HdfsTextItemWriter.java", "BodyUseAPI": ["org.apache.hadoop.fs.FSDataOutputStream.close()"], "Fixed commit": "818a90e66d5a299d01598868c1662229ce705c35", "Url": "https://api.github.com/repos/spring-projects/spring-xd", "Date": "2015-03-09T18:37:28Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (hasAccessLevel(\"edit\", newsletterName)) { return plugin.batchImportReceivers(asInactive, importData, newsletterName, context); } } catch (com.xpn.xwiki.XWikiException exp) { com.celements.blog.plugin.BlogPluginApi.LOGGER.error(((\"Failed to check access rights on [\" + newsletterName) + \"]\"), exp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9197/buggy-version/component.src.main.java.com.celements.blog.plugin.BlogPluginApi.java", "BodyUseAPI": ["com.celements.blog.plugin.BlogPluginApi.hasAccessLevel(java.lang.String,java.lang.String)", "com.celements.blog.plugin.BlogPlugin.batchImportReceivers(boolean,java.lang.String,java.lang.String,com.celements.blog.plugin.BlogPluginApi)"], "Fixed commit": "9970aceaa61a560472511efeb1c4207adcad11da", "Url": "https://api.github.com/repos/celements/celements-blog", "Date": "2014-08-21T19:39:19Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sc = ((java.lang.Class<org.agilewiki.jasocket.server.Server>) (classLoader.loadClass(serverClassName))); } catch (java.lang.Exception ex) { org.agilewiki.jaconfig.ClusterManager.logger.error((((\"config error, name=\" + name) + \" args=\") + args), ex); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4156/buggy-version/src.main.java.org.agilewiki.jaconfig.ClusterManager.java", "BodyUseAPI": ["java.lang.ClassLoader.loadClass(java.lang.String)"], "Fixed commit": "e86e601a0be04a96c2b5ff2a67342b324d712f61", "Url": "https://api.github.com/repos/laforge49/JAConfig", "Date": "2013-01-01T14:40:07Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { if ((!(closed)) && ((raf) != null)) { close(); } } finally { super.finalize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3823/buggy-version/src.main.java.ilarkesto.io.zip.ZipFile.java", "BodyUseAPI": ["ilarkesto.io.zip.ZipFile.close()"], "Fixed commit": "420a095963a42382dd8257b8eaca7f253cd9cae2", "Url": "https://api.github.com/repos/ErikVerheul/ilarkesto", "Date": "2016-03-20T21:37:14Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (int i = 0; i < (files.length); i++) { if (files[i].isDirectory()) { directoryPathMap.put(files[i].getName(), files[i].getAbsolutePath()); }else { filesPathMap.put(files[i].getName(), files[i].getAbsolutePath()); } } } catch (java.lang.NullPointerException e) { return completeList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2918/buggy-version/fileex.src.main.java.com.example.fileex.FileEx.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.io.File.getName()", "java.io.File.getName()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.io.File.getAbsolutePath()", "java.io.File.isDirectory()"], "Fixed commit": "ff3e661df28cbc370aa77818b73a7377f296de4d", "Url": "https://api.github.com/repos/1singhmanmeet/FileEx", "Date": "2017-12-13T12:38:32Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.applicationSelectorConfiguration.loadConfiguration(); this.applicationMapping = this.applicationSelectorConfiguration.getApplicationMapping(); } catch (java.lang.Exception e) { log.error(\"Cannot read asimba-selector.xml configuration\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7425/buggy-version/asimba-selector.src.main.java.org.gluu.authentication.remote.saml2.selector.ApplicationSelector.java", "BodyUseAPI": ["org.gluu.authentication.remote.saml2.selector.ApplicationSelectorConfiguration.getApplicationMapping()", "org.gluu.authentication.remote.saml2.selector.ApplicationSelectorConfiguration.loadConfiguration()"], "Fixed commit": "6911e6bad0a39a07100736b0970953977b533d31", "Url": "https://api.github.com/repos/GluuFederation/gluu-Asimba", "Date": "2016-03-01T07:08:41Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.LinkedHashMap<java.lang.Object, java.lang.Object> personIdentifiersLinkedList = ((java.util.LinkedHashMap<java.lang.Object, java.lang.Object>) (linkedPersons.get(\"personIdentifiers\"))); if (personIdentifiersLinkedList != null) { java.lang.String identifier = ((java.lang.String) (personIdentifiersLinkedList.get(\"identifier\"))); com.servinglynk.hmis.warehouse.domain.PersonIdentifier personIdentifier = new com.servinglynk.hmis.warehouse.domain.PersonIdentifier(); personIdentifier.setIdentifier(identifier); person.addPersonIdentifier(personIdentifier); } } catch (java.lang.ClassCastException ex) { java.util.LinkedHashMap<java.lang.Object, java.lang.Object> personIdentifiersList = ((java.util.ArrayList<java.util.LinkedHashMap<java.lang.Object, java.lang.Object>>) (linkedPersons.get(\"personIdentifiers\"))); if (org.apache.commons.collections.CollectionUtils.isNotEmpty(personIdentifiersList)) { java.util.LinkedHashMap<java.lang.Object, java.lang.Object> personIdentifiersLinkedList = personIdentifiersList.get(0); java.lang.String identifier = ((java.lang.String) (personIdentifiersLinkedList.get(\"identifier\"))); com.servinglynk.hmis.warehouse.domain.PersonIdentifier personIdentifier = new com.servinglynk.hmis.warehouse.domain.PersonIdentifier(); personIdentifier.setIdentifier(identifier); person.addPersonIdentifier(personIdentifier); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7013/buggy-version/hmis-client-dedup.src.main.java.com.servinglynk.hmis.warehouse.rest.service.DedupServiceImpl.java", "BodyUseAPI": ["java.util.LinkedHashMap<java.lang.Object, java.lang.Object>.get(java.lang.String)", "com.servinglynk.hmis.warehouse.domain.PersonIdentifier.setIdentifier(java.lang.String)", "java.util.LinkedHashMap<java.lang.Object, java.lang.Object>.get(java.lang.String)", "com.servinglynk.hmis.warehouse.domain.Person.addPersonIdentifier(com.servinglynk.hmis.warehouse.domain.PersonIdentifier)"], "Fixed commit": "77ed008cf13acdd51ae2aa778336e4cd9c79fb29", "Url": "https://api.github.com/repos/servinglynk/hslynk-open-source", "Date": "2017-12-18T04:29:30Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.psddev.dari.util.IoUtils.createDirectories(agentDir); agentFile = new java.io.File(agentDir, (agentName + \".jar\")); } catch (java.io.IOException e) { agentFile = java.io.File.createTempFile((agentName + \"-\"), \".jar\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5272/buggy-version/util.src.main.java.com.psddev.dari.util.CodeUtils.java", "BodyUseAPI": ["com.psddev.dari.util.IoUtils.createDirectories(java.io.File)"], "Fixed commit": "a667cd2d7044b61caa061fb15859d0bdb9460c17", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2015-05-29T19:33:09Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.widget.TextView txtNote = ((android.widget.TextView) (findViewById(R.id.txtNote))); txtNote.setText(receive.getCharSequenceExtra(\"note\")); txt = txtNote.toString(); } catch (java.lang.RuntimeException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7858/buggy-version/H3_Group_14.app.src.main.java.com.example.group14.h3_group_14.MainActivity.java", "BodyUseAPI": ["com.example.group14.h3_group_14.MainActivity.findViewById(R.id.txtNote)", "android.widget.TextView.setText(receive.getCharSequenceExtra(\"note\"))", "android.widget.TextView.toString()", "android.content.Intent.getCharSequenceExtra(java.lang.String)"], "Fixed commit": "e191e8a16b3b2dbd52d069cd7ac9f44cb7c92a08", "Url": "https://api.github.com/repos/SergiCarol/Android", "Date": "2015-09-17T18:55:22Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { uuid = java.util.UUID.fromString(message); } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7555/buggy-version/necessities.src.main.java.com.crossge.necessities.GetUUID.java", "BodyUseAPI": ["java.util.UUID.fromString(java.lang.String)"], "Fixed commit": "f91294eef7b589770150a7a8ab2483448c51ac71", "Url": "https://api.github.com/repos/pupnewfster/Lavasurvival", "Date": "2016-01-11T00:40:07Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ComputedPosition = java.lang.Boolean.parseBoolean(splitReceivedString[0]); DetectedTwoCentroids = java.lang.Boolean.parseBoolean(splitReceivedString[1]); Translation[0] = java.lang.Double.parseDouble(splitReceivedString[2]); Translation[1] = java.lang.Double.parseDouble(splitReceivedString[3]); Translation[2] = java.lang.Double.parseDouble(splitReceivedString[4]); } catch (java.lang.Exception e) { edu.wpi.first.wpilibj.DriverStation.reportError(java.lang.String.format(\"Problem parsing serial received string: %s\"), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8136/buggy-version/workspace.2017.src.org.usfirst.frc.team2930.robot.VisionKangaroo.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.Boolean.parseBoolean(java.lang.String)", "java.lang.Boolean.parseBoolean(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "e77a7a1735926a5d202b38136f799e5c23f4d730", "Url": "https://api.github.com/repos/botaberg/2930Robot-2017", "Date": "2017-03-23T18:48:17Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { net.i2p.android.i2ptunnel.util.TunnelUtil.writeTunnelToPreferences(getActivity(), mGroup, mTunnelId); } catch (java.lang.IllegalArgumentException e) { net.i2p.android.router.util.Util.e(\"Could not load tunnel details\", e); android.widget.Toast.makeText(getActivity().getApplicationContext(), R.string.i2ptunnel_no_tunnel_details, Toast.LENGTH_LONG).show(); getActivity().finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3759/buggy-version/app.src.main.java.net.i2p.android.i2ptunnel.preferences.BaseTunnelPreferenceFragment.java", "BodyUseAPI": ["net.i2p.android.i2ptunnel.util.TunnelUtil.writeTunnelToPreferences(getActivity(),net.i2p.i2ptunnel.TunnelControllerGroup,int)", "net.i2p.android.i2ptunnel.preferences.BaseTunnelPreferenceFragment.getActivity()"], "Fixed commit": "b140158b24f17113ef04f8cce1103b8bf81a4c20", "Url": "https://api.github.com/repos/i2p/i2p.android.base", "Date": "2017-08-18T21:30:53Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(500); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7619/buggy-version/src.omnikryptec.logger.Logger.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "04a5a380ce8b167bf6aafb28c86c317b63b8626e", "Url": "https://api.github.com/repos/OmniKryptec/OmniKryptec-Engine", "Date": "2017-05-23T18:24:21Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String s = searchView.getQuery().toString(); be.howest.nmct.sportinkortrijk.FilterCursorWrapper fcw = new be.howest.nmct.sportinkortrijk.FilterCursorWrapper(CurrentCursor, s, 1); of.mAdapter.changeCursor(fcw); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6689/buggy-version/app.src.main.java.be.howest.nmct.sportinkortrijk.Overzicht.java", "BodyUseAPI": ["android.widget.SearchView.getQuery()", "of.mAdapter.changeCursor(be.howest.nmct.sportinkortrijk.FilterCursorWrapper)", "searchView.getQuery().toString()"], "Fixed commit": "969c8c8aacaa859c004cce2fdc94e560ff1b58f0", "Url": "https://api.github.com/repos/justijndepover/2NMCT_project2015_depover_justijn", "Date": "2015-05-21T17:27:01Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { CurrentCursor = of.mAdapter.getCursor(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6689/buggy-version/app.src.main.java.be.howest.nmct.sportinkortrijk.Overzicht.java", "BodyUseAPI": ["of.mAdapter.getCursor()"], "Fixed commit": "969c8c8aacaa859c004cce2fdc94e560ff1b58f0", "Url": "https://api.github.com/repos/justijndepover/2NMCT_project2015_depover_justijn", "Date": "2015-05-21T17:27:01Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { cachedUri = android.support.v4.content.FileProvider.getUriForFile(context, ((com.mauriciotogneri.fileexplorer.BuildConfig.APPLICATION_ID) + \".provider\"), file); } catch (java.lang.Exception e) { cachedUri = android.net.Uri.fromFile(file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4792/buggy-version/app.src.main.java.com.mauriciotogneri.fileexplorer.models.FileInfo.java", "BodyUseAPI": ["android.support.v4.content.FileProvider.getUriForFile(android.content.Context,((com.mauriciotogneri.fileexplorer.BuildConfig.APPLICATION_ID) + \".provider\"),java.io.File)"], "Fixed commit": "426bf23255ab340a6bc1309cbc45d0478ed154b7", "Url": "https://api.github.com/repos/mauriciotogneri/fileexplorer", "Date": "2017-04-06T21:15:46Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (ldapService.innerAuthenticate(config)) { long endTime = java.lang.System.currentTimeMillis(); return success(((\"LDAP settings are valid. LDAP validation took: \" + (endTime - startTime)) + \"ms.\")); }else { return failure(\"Unable to verify LDAP settings.\"); } } catch (com.denimgroup.threadfix.exception.RestException e) { return failure(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3669/buggy-version/threadfix-main.src.main.java.com.denimgroup.threadfix.webapp.controller.SystemSettingsController.java", "BodyUseAPI": ["java.lang.System.currentTimeMillis()", "com.denimgroup.threadfix.webapp.controller.SystemSettingsController.failure(java.lang.String)", "com.denimgroup.threadfix.webapp.controller.LdapService.innerAuthenticate(com.denimgroup.threadfix.data.entities.DefaultConfiguration)", "com.denimgroup.threadfix.webapp.controller.SystemSettingsController.success(java.lang.String)"], "Fixed commit": "4e810f81acee6d334ac227119671b8d14d6c7d80", "Url": "https://api.github.com/repos/denimgroup/threadfix", "Date": "2015-11-13T19:26:33Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { net.minecraft.world.World.class.getDeclaredField(\"rand\"); isDev = true; } catch (java.lang.Throwable ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2606/buggy-version/api.buildcraft.api.core.BCDebugging.java", "BodyUseAPI": ["java.lang.Class.getDeclaredField(java.lang.String)"], "Fixed commit": "b2939ab9a02a79ea1327e06b23255bc7dc6323a1", "Url": "https://api.github.com/repos/AEnterprise/BuildCraftAPI", "Date": "2017-10-07T13:23:26Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { gmGUI.DicardedDeck.setCard(cardOnDD); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(_3_2Game_DesktopGUI.GUIUpdater.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3649/buggy-version/3-2.src._3_2Game_DesktopGUI.GUIUpdater.java", "BodyUseAPI": ["gmGUI.DicardedDeck.setCard(_3_2Game.Card)"], "Fixed commit": "d8214632414a3808c4899779b847a06eddd63352", "Url": "https://api.github.com/repos/ivantm24/3-2", "Date": "2015-05-10T19:22:00Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Integer.parseInt(mp3Track); } catch (java.lang.NumberFormatException ex) { ok = false; addItem(comp.getFileTO().getId(), comp.getFileTO().getId(), comp.getFileTO().getFile(), comp.getFileAlbumTO().getName(), MP3Tag.TRACKERROR, mp3Track, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7336/buggy-version/apps.MyUtils.src.java.be.home.domain.model.MP3TagUtils.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "765a0198e91f9387cdb3ebf1e0cacbd289379355", "Url": "https://api.github.com/repos/ghyssee/Home", "Date": "2017-01-15T20:37:01Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { applicationPath = java.net.URLDecoder.decode(applicationPath, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException ex) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6663/buggy-version/src.org.ezze.utils.application.ApplicationPath.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "1258e4caf80c3f72138fe06a848246b9bf009440", "Url": "https://api.github.com/repos/Ezze/Ezze-Utilities", "Date": "2012-05-01T09:32:25Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { id = java.lang.Integer.parseInt(idString); } catch (java.lang.NumberFormatException e) { javax.swing.JOptionPane.showMessageDialog(null, \"You must enter a valid ID\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3301/buggy-version/src.cs430.finalProject.frontEnd.SelectRole.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "60da1163302d42d308dd8bd5e615f0e26124471d", "Url": "https://api.github.com/repos/fastaccord1/430FinalProject", "Date": "2015-11-24T01:13:04Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { sc = new java.net.Socket(r.ip, java.lang.Integer.parseInt(r.port)); sc.close(); result.add(r); } catch (java.lang.Exception e) { e.printStackTrace(); recordArray.remove(r); java.lang.System.out.println(((r.to) + \"have shuted down\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/801/buggy-version/lec-3.discovery.prototypes.DisServer.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.ArrayList<DisServer.Record>.add(DisServer.Record)", "java.net.Socket.close()"], "Fixed commit": "014496cbda00c02dca93baadad7e21e6a8e8a42b", "Url": "https://api.github.com/repos/onorzq/dist-sys-exercises", "Date": "2015-10-05T20:25:55Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { de.robv.android.xposed.XposedHelpers.findAndHookMethod(mContainer.getClass(), \"onConfigurationChanged\", android.content.res.Configuration.class, new de.robv.android.xposed.XC_MethodHook() { @java.lang.Override protected void afterHookedMethod(com.ceco.marshmallow.gravitybox.MethodHookParam param) throws java.lang.Throwable { if ((mPercentText) != null) { mPercentText.setTextSize(java.lang.Integer.valueOf(mPrefs.getString(GravityBoxSettings.PREF_KEY_BATTERY_PERCENT_TEXT_SIZE, \"16\"))); } } }); } catch (java.lang.Throwable t) { de.robv.android.xposed.XposedBridge.log(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4173/buggy-version/src.com.ceco.marshmallow.gravitybox.BatteryStyleController.java", "BodyUseAPI": ["java.lang.Integer.valueOf(mPrefs.getString(GravityBoxSettings.PREF_KEY_BATTERY_PERCENT_TEXT_SIZE, \"16\"))", "de.robv.android.xposed.XposedHelpers.findAndHookMethod(mContainer.getClass(),java.lang.String,java.lang.Class,de.robv.android.xposed.XC_MethodHook)", "de.robv.android.xposed.XSharedPreferences.getString(GravityBoxSettings.PREF_KEY_BATTERY_PERCENT_TEXT_SIZE,java.lang.String)", "com.ceco.marshmallow.gravitybox.StatusbarBatteryPercentage.setTextSize(java.lang.Integer)", "android.view.ViewGroup.getClass()"], "Fixed commit": "567905af73bda3264775561d42c6e73b9bb81d39", "Url": "https://api.github.com/repos/GravityBox/GravityBox", "Date": "2016-02-07T14:52:04Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { for (vss.rmi.diningphilos.server.n.remote.interfaces.RemoteSeat seat : master.getAllSeats()) { allSeats.add(seat); allForks.add(master.getAllForks().get((i++))); } } catch (java.rmi.RemoteException ex) { try { master.handleCrash(0); } catch (java.rmi.RemoteException ex1) { java.lang.System.err.println(\"SEVERE: Master crashed.\"); ex1.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/9113/buggy-version/src.vss.rmi.diningphilos.server.n.remote.objects.Tablepart.java", "BodyUseAPI": ["vss.rmi.diningphilos.server.n.remote.interfaces.RemoteMaster.getAllForks()", "vss.rmi.diningphilos.server.n.remote.interfaces.RemoteMaster.getAllSeats()", "java.util.List<vss.rmi.diningphilos.server.n.remote.interfaces.RemoteFork>.add(master.getAllForks().get((i++)))", "master.getAllForks().get(int)", "java.util.List<vss.rmi.diningphilos.server.n.remote.interfaces.RemoteSeat>.add(vss.rmi.diningphilos.server.n.remote.interfaces.RemoteSeat)"], "Fixed commit": "99fe18437710369ec3135c48496056acfeca9869", "Url": "https://api.github.com/repos/lenhuy2106/RMI_DiningPhilos", "Date": "2014-12-11T18:10:54Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String pdelay = cmd.getOptionValue(\"pdelay\"); java.lang.String delay = cmd.getOptionValue(\"delay\"); if (pdelay != null) { club.garimpeiro.keysender.Processor.robot.setAutoDelay(java.lang.Integer.parseInt(pdelay)); } for (java.lang.String arg : cmd.getArgList()) { if (arg.contains(\"-\")) { processCombination(arg); }else { processKey(arg, true, true); } if (delay != null) { club.garimpeiro.keysender.Processor.robot.delay(java.lang.Integer.parseInt(delay)); } } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4738/buggy-version/src.main.java.club.garimpeiro.keysender.Processor.java", "BodyUseAPI": ["club.garimpeiro.keysender.Processor.processCombination(java.lang.String)", "club.garimpeiro.keysender.Processor.processKey(java.lang.String,boolean,boolean)", "java.awt.Robot.delay(int)", "org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)", "org.apache.commons.cli.CommandLine.getArgList()", "java.lang.String.contains(java.lang.String)", "java.awt.Robot.setAutoDelay(int)", "java.lang.Integer.parseInt(java.lang.String)", "org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "013a8fe1aaf613e176f146bcb2b79dba5fb2bd55", "Url": "https://api.github.com/repos/garimpeiro-it/java-key-sender", "Date": "2017-03-11T00:35:57Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { blockNetwork.removeNetworkingBlock(networkNode); } catch (java.lang.IllegalStateException ex) { org.terasology.mechanicalPower.systems.MechanicalPowerBlockNetworkImpl.logger.error(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1772/buggy-version/src.main.java.org.terasology.mechanicalPower.systems.MechanicalPowerBlockNetworkImpl.java", "BodyUseAPI": ["org.terasology.blockNetwork.BlockNetwork.removeNetworkingBlock(org.terasology.blockNetwork.NetworkNode)"], "Fixed commit": "9fda4ee56d22a35f6ee1c58a6f4bc95c91896abd", "Url": "https://api.github.com/repos/Terasology/Machines", "Date": "2014-10-02T15:15:15Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return blockNetwork.getNetworkWithNetworkingBlock(networkNodes.get(position)); } catch (java.lang.IllegalStateException ex) { org.terasology.mechanicalPower.systems.MechanicalPowerBlockNetworkImpl.logger.error(ex.getMessage()); return new org.terasology.blockNetwork.SimpleNetwork(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1772/buggy-version/src.main.java.org.terasology.mechanicalPower.systems.MechanicalPowerBlockNetworkImpl.java", "BodyUseAPI": ["java.util.Map<org.terasology.math.Vector3i, org.terasology.blockNetwork.NetworkNode>.get(org.terasology.math.Vector3i)", "org.terasology.blockNetwork.BlockNetwork.getNetworkWithNetworkingBlock(networkNodes.get(position))"], "Fixed commit": "9fda4ee56d22a35f6ee1c58a6f4bc95c91896abd", "Url": "https://api.github.com/repos/Terasology/Machines", "Date": "2014-10-02T15:15:15Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { blockNetwork.addNetworkingBlock(networkNode); } catch (java.lang.IllegalStateException ex) { org.terasology.mechanicalPower.systems.MechanicalPowerBlockNetworkImpl.logger.error(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1772/buggy-version/src.main.java.org.terasology.mechanicalPower.systems.MechanicalPowerBlockNetworkImpl.java", "BodyUseAPI": ["org.terasology.blockNetwork.BlockNetwork.addNetworkingBlock(org.terasology.blockNetwork.NetworkNode)"], "Fixed commit": "9fda4ee56d22a35f6ee1c58a6f4bc95c91896abd", "Url": "https://api.github.com/repos/Terasology/Machines", "Date": "2014-10-02T15:15:15Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { blockNetwork.updateNetworkingBlock(oldNetworkNode, networkNode); } catch (java.lang.IllegalStateException ex) { org.terasology.mechanicalPower.systems.MechanicalPowerBlockNetworkImpl.logger.error(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1772/buggy-version/src.main.java.org.terasology.mechanicalPower.systems.MechanicalPowerBlockNetworkImpl.java", "BodyUseAPI": ["org.terasology.blockNetwork.BlockNetwork.updateNetworkingBlock(org.terasology.blockNetwork.NetworkNode,org.terasology.blockNetwork.NetworkNode)"], "Fixed commit": "9fda4ee56d22a35f6ee1c58a6f4bc95c91896abd", "Url": "https://api.github.com/repos/Terasology/Machines", "Date": "2014-10-02T15:15:15Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { table.addObjects(this.dbInterface.getPoisByConvDate(request.getParameter(\"dateTerm\"))); } catch (java.lang.Exception e) { session.setAttribute(\"message\", \"Please enter a valid date format.\"); table.addObjects(dbInterface.getAllPoi()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8753/buggy-version/IntroDBProject.src.ch.ethz.inf.dbproject.PoisServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "ch.ethz.inf.dbproject.util.html.BeanTableHelper<ch.ethz.inf.dbproject.model.PersonOfInterest>.addObjects(this.dbInterface.getPoisByConvDate(request.getParameter(\"dateTerm\")))", "ch.ethz.inf.dbproject.model.DatastoreInterface.getPoisByConvDate(request.getParameter(\"dateTerm\"))"], "Fixed commit": "d7d8b2fec0fa27d5761d1f042fc166dd6051a50f", "Url": "https://api.github.com/repos/dmdbgroup/law-enforcement-database", "Date": "2014-04-14T14:54:50Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { ((com.example.abdel.backingapp.IngredientActivity) (context)).stepIngredientActivityCommunicator = this; } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3776/buggy-version/app.src.main.java.com.example.abdel.backingapp.Fragments.StepFragment.java", "BodyUseAPI": [], "Fixed commit": "f9671b7a0b46f85076ef83e567821a022704160d", "Url": "https://api.github.com/repos/AMosa3d/BackingApp", "Date": "2017-12-07T08:47:02Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ss = lines[0].toLowerCase().substring(1, ((lines[0].length()) - 1)); } catch (java.lang.StringIndexOutOfBoundsException ex) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3769/buggy-version/src.main.java.net.bitjump.launchme.listeners.PlayerListener.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "8cbe723855299e0885bd5be37695a987f23656d8", "Url": "https://api.github.com/repos/Spudstabber/LaunchMe", "Date": "2012-11-26T15:20:44Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ss = lines[0].toLowerCase().substring(1, ((lines[0].length()) - 1)); } catch (java.lang.StringIndexOutOfBoundsException ex) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3769/buggy-version/src.main.java.net.bitjump.launchme.listeners.SignListener.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "8cbe723855299e0885bd5be37695a987f23656d8", "Url": "https://api.github.com/repos/Spudstabber/LaunchMe", "Date": "2012-11-26T15:20:44Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return org.strategoxt.imp.runtime.editor.SelectionUtil.getSelectionAst(selection.getOffset(), selection.getLength(), ignoreEmptySelection, getParseController()); } catch (java.lang.IndexOutOfBoundsException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4616/buggy-version/org.strategoxt.imp.runtime.src.org.strategoxt.imp.runtime.EditorState.java", "BodyUseAPI": ["org.eclipse.jface.text.ITextSelection.getOffset()", "org.strategoxt.imp.runtime.EditorState.getParseController()", "org.strategoxt.imp.runtime.editor.SelectionUtil.getSelectionAst(selection.getOffset(),selection.getLength(),boolean,org.strategoxt.imp.runtime.parser.SGLRParseController)", "org.eclipse.jface.text.ITextSelection.getLength()"], "Fixed commit": "80097f880eda3eccde0685c3c8f2d701be0c0bc0", "Url": "https://api.github.com/repos/metaborg/spoofax", "Date": "2014-04-02T18:08:31Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { value = bundle.getString(key); } catch (java.util.MissingResourceException | java.lang.NullPointerException e) { return key; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/719/buggy-version/src.osip-core.src.main.java.edu.kit.pse.osip.core.utils.language.Translator.java", "BodyUseAPI": ["java.util.ResourceBundle.getString(java.lang.String)"], "Fixed commit": "c8b31a29b82372f6f9b4f55d483633b66f26a9ce", "Url": "https://api.github.com/repos/ByteHamster/PSE", "Date": "2017-02-12T13:23:04Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.broadleafcommerce.openadmin.dto.Property propertyItem = new org.broadleafcommerce.openadmin.dto.Property(); propertyItem.setName(AdminMainEntity.MAIN_ENTITY_NAME_PROPERTY); propertyItem.setValue(((org.broadleafcommerce.common.admin.domain.AdminMainEntity) (entity)).getMainEntityName()); props.add(propertyItem); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4457/buggy-version/admin.broadleaf-open-admin-platform.src.main.java.org.broadleafcommerce.openadmin.server.service.persistence.module.BasicPersistenceModule.java", "BodyUseAPI": ["java.io.Serializable.getMainEntityName()", "java.util.List<org.broadleafcommerce.openadmin.dto.Property>.add(org.broadleafcommerce.openadmin.dto.Property)", "org.broadleafcommerce.openadmin.dto.Property.setValue(((org.broadleafcommerce.common.admin.domain.AdminMainEntity) (entity)).getMainEntityName())", "org.broadleafcommerce.openadmin.dto.Property.setName(AdminMainEntity.MAIN_ENTITY_NAME_PROPERTY)"], "Fixed commit": "6038ee36618e649a2eef328968bf294929171e1f", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-06-10T01:47:01Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { filePath = (org.dawb.common.util.eclipse.BundleUtils.getBundleLocation(bundle)) + (entry.getFile()); } catch (java.io.IOException e1) { org.dawnsci.algorithm.ui.views.runner.AlgorithmView.logger.error(\"Cannot get algorithm file!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1381/buggy-version/org.dawnsci.algorithm.ui.src.org.dawnsci.algorithm.ui.views.runner.AlgorithmView.java", "BodyUseAPI": ["java.net.URL.getFile()", "org.dawb.common.util.eclipse.BundleUtils.getBundleLocation(org.osgi.framework.Bundle)"], "Fixed commit": "e209c6c44c89a7096705c2b4c0f8d1caeb6e1675", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2013-12-11T15:57:30Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { net.minecraftforge.client.model.IModel model = net.minecraftforge.client.model.ModelLoaderRegistry.getModel(location); for (net.minecraft.util.ResourceLocation dep : model.getDependencies()) { getModel(dep); } textures.addAll(model.getTextures()); } finally { loadingModels.remove(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1001/buggy-version/src.main.java.net.minecraftforge.client.model.ModelLoader.java", "BodyUseAPI": ["java.util.Set<net.minecraft.util.ResourceLocation>.addAll(model.getTextures())", "net.minecraftforge.client.model.IModel.getDependencies()", "net.minecraftforge.client.model.ModelLoader.getModel(net.minecraft.util.ResourceLocation)", "net.minecraftforge.client.model.IModel.getTextures()", "net.minecraftforge.client.model.ModelLoaderRegistry.getModel(net.minecraft.util.ResourceLocation)"], "Fixed commit": "07285fa5ca4a2b7291bf8ca9ad34275d5351bbb4", "Url": "https://api.github.com/repos/shadekiller666/MinecraftForge", "Date": "2015-08-19T21:09:01Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { session = sessionFactory.getCurrentSession(); } catch (org.hibernate.HibernateException he) { try { session = sessionFactory.openSession(); } catch (org.hibernate.HibernateException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/5928/buggy-version/src.main.java.com.plugwine.dao.Hibernate4DaoSupport.java", "BodyUseAPI": ["org.hibernate.SessionFactory.getCurrentSession()"], "Fixed commit": "1d1cc862ad18752418a52b53bfb634a434149d6d", "Url": "https://api.github.com/repos/moroccan-dude/plugwinetokens", "Date": "2014-09-19T19:02:05Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ch.ethz.inf.dbproject.model.simpleDatabase.operators.Operator op = ch.ethz.inf.dbproject.model.simpleDatabase.operators.StaticOperators.select(new ch.ethz.inf.dbproject.model.simpleDatabase.operators.Scan(fileName, schema), condition); return !(op.moveNext()); } catch (java.lang.RuntimeException e) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2817/buggy-version/IntroDB2.src.ch.ethz.inf.dbproject.model.simpleDatabase.operators.StaticOperators.java", "BodyUseAPI": ["ch.ethz.inf.dbproject.model.simpleDatabase.operators.Operator.moveNext()", "ch.ethz.inf.dbproject.model.simpleDatabase.operators.StaticOperators.select(ch.ethz.inf.dbproject.model.simpleDatabase.operators.Scan,ch.ethz.inf.dbproject.model.simpleDatabase.conditional.Condition)"], "Fixed commit": "be1c5a4e09ee909fb4e69f0325410b428ce92cca", "Url": "https://api.github.com/repos/wlorin/crime", "Date": "2014-05-23T11:24:35Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { pendingIntent.send(); } catch (android.app.PendingIntent.CanceledException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8078/buggy-version/src.net.fred.feedex.widget.WidgetConfigActivity.java", "BodyUseAPI": ["android.app.PendingIntent.send()"], "Fixed commit": "c25af884ddae49d35b1eaf510b7417869ca2647c", "Url": "https://api.github.com/repos/HoloAddict/FeedEx", "Date": "2013-05-31T20:50:48Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { allTranslatedTopics = getTranslatedTopics(zanataIds, locales); } catch (java.lang.Exception e) { org.jboss.pressgang.ccms.services.zanatasync.TopicSync.log.debug(\"Failed to download all the existing translated topics\", e); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/4063/buggy-version/zanata-sync-service.src.main.java.org.jboss.pressgang.ccms.services.zanatasync.TopicSync.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.services.zanatasync.TopicSync.getTranslatedTopics(java.util.Set<java.lang.String>,java.util.List<org.zanata.common.LocaleId>)"], "Fixed commit": "fb144e19be9812b25a918ad3156ff5e28ae01e59", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSServices", "Date": "2014-01-31T02:31:27Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { versionname = getPackageManager().getPackageInfo(getPackageName(), 0).versionName; } catch (android.content.pm.PackageManager e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1615/buggy-version/src.main.java.com.imdp.instaclimb.CameraActivity.java", "BodyUseAPI": ["getPackageManager().getPackageInfo(getPackageName(),int)", "com.imdp.instaclimb.CameraActivity.getPackageName()", "com.imdp.instaclimb.CameraActivity.getPackageManager()"], "Fixed commit": "15eddfcfacf1e528cab52b8b0527539084e8cd59", "Url": "https://api.github.com/repos/gambineri/InstaClimb", "Date": "2014-12-02T22:07:23Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.String user = io.jsonwebtoken.Jwts.parser().setSigningKey(com.socialnetwork.config.security.SecurityConstants.SECRET.getBytes()).parseClaimsJws(token.replace(com.socialnetwork.config.security.SecurityConstants.TOKEN_PREFIX, \"\")).getBody().getSubject(); return user != null ? new org.springframework.security.authentication.UsernamePasswordAuthenticationToken(user, null, new java.util.ArrayList()) : null; } catch (java.lang.Exception e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/9163/buggy-version/src.main.java.com.socialnetwork.config.security.JWTAuthorizationFilter.java", "BodyUseAPI": ["io.jsonwebtoken.Jwts.parser().setSigningKey(com.socialnetwork.config.security.SecurityConstants.SECRET.getBytes()).parseClaimsJws(java.lang.String)", "io.jsonwebtoken.Jwts.parser().setSigningKey(com.socialnetwork.config.security.SecurityConstants.SECRET.getBytes()).parseClaimsJws(token.replace(com.socialnetwork.config.security.SecurityConstants.TOKEN_PREFIX, \"\")).getBody()", "io.jsonwebtoken.Jwts.parser().setSigningKey(com.socialnetwork.config.security.SecurityConstants.SECRET.getBytes())", "io.jsonwebtoken.Jwts.parser()", "java.lang.String.replace(com.socialnetwork.config.security.SecurityConstants.TOKEN_PREFIX,java.lang.String)", "com.socialnetwork.config.security.SecurityConstants.SECRET.getBytes()", "io.jsonwebtoken.Jwts.parser().setSigningKey(com.socialnetwork.config.security.SecurityConstants.SECRET.getBytes()).parseClaimsJws(token.replace(com.socialnetwork.config.security.SecurityConstants.TOKEN_PREFIX, \"\")).getBody().getSubject()"], "Fixed commit": "93c7fb7e0784899d46db736166cba030c1c021d8", "Url": "https://api.github.com/repos/sergiobanegas/spring-skeleton", "Date": "2017-11-09T19:41:19Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { edgeClass = java.lang.Class.forName(label); } catch (java.lang.ClassNotFoundException e) { throw new java.lang.IllegalStateException((\"Couldn't find an edge with name \" + label)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/7405/buggy-version/src.main.java.com.syncleus.ferma.framefactories.annotation.IncidenceMethodHandler.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)"], "Fixed commit": "ce6fed8ef9829189d6fe6f114ec8b0904fd4e0e9", "Url": "https://api.github.com/repos/Syncleus/Ferma", "Date": "2015-06-13T22:56:18Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { description = getParsedString(itemData.getString(\"Description\")); } catch (java.sql.SQLException sqlException) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2427/buggy-version/project3.project3-searcher.src.edu.ucla.cs.cs144.AuctionSearch.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)", "edu.ucla.cs.cs144.AuctionSearch.getParsedString(java.lang.String)"], "Fixed commit": "7db17527a307c0862ad5f05a82a59f71e5d4faa3", "Url": "https://api.github.com/repos/AmberYu/winter15-cs144", "Date": "2015-02-10T08:48:33Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { player.reset(); } catch (java.lang.Throwable ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/3277/buggy-version/src-traditional.br.com.carlosrafaelgn.fplay.playback.context.MediaPlayerWrapper.java", "BodyUseAPI": ["android.media.MediaPlayer.reset()"], "Fixed commit": "b29574ea66645ffbde038b67366f15daa1e5e4b1", "Url": "https://api.github.com/repos/carlosrafaelgn/FPlayAndroid", "Date": "2017-05-21T13:52:38Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { scheduler.schedule(new org.cloudname.zk.DynamicExpression.NodeScanner(path), delayMs, java.util.concurrent.TimeUnit.MILLISECONDS); } catch (java.util.concurrent.RejectedExecutionException e) { if (scheduler.isShutdown()) { return; } org.cloudname.zk.DynamicExpression.log.log(java.util.logging.Level.SEVERE, \"Got exception while scheduling new refresh\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/1384/buggy-version/cn.src.main.java.org.cloudname.zk.DynamicExpression.java", "BodyUseAPI": ["java.util.concurrent.ScheduledExecutorService.schedule(org.cloudname.zk.DynamicExpression.NodeScanner,long,java.util.concurrent.TimeUnit)"], "Fixed commit": "02cf0e50778ad361be63ea578f76da9d07cd5162", "Url": "https://api.github.com/repos/bushwakko/cloudname", "Date": "2012-12-20T12:16:23Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { paramsJson.put(key, bundle.getString(key)); } catch (java.lang.Exception e) { com.freshplanet.nativeExtensions.Extension.log((\"skipping parameter: \" + key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/6244/buggy-version/android.src.com.freshplanet.nativeExtensions.Extension.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)", "org.json.JSONObject.put(java.lang.String,bundle.getString(key))"], "Fixed commit": "b11b983ab73a6a112a839339493407c387a16a6d", "Url": "https://api.github.com/repos/playedonline/ANE-Push-Notification", "Date": "2016-02-02T12:55:08Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { commands.get(command).doCommand(userString.substring(((userString.indexOf(\" \")) + 1), userString.length()).split(\" \")); } catch (java.lang.Exception e) { printOutput(\"ERROR: \"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/753/buggy-version/src.view.CLI.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "commands.get(command).doCommand(java.lang.String[])", "java.util.HashMap<java.lang.String, view.Command>.get(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.length()", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "4f32cf0c05ce88406e74f4c8c7fa05ea3e7abd5a", "Url": "https://api.github.com/repos/lihisolomon/MVC", "Date": "2016-09-15T14:16:53Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { qblPrimaryPublicKey.attachEncPublicKey(qekp.getQblEncPublicKey()); } catch (java.security.InvalidKeyException e) { new java.lang.RuntimeException(\"Newly created subkey has invalid signature.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2581/buggy-version/src.main.java.de.qabel.core.crypto.QblPrimaryKeyPair.java", "BodyUseAPI": ["de.qabel.core.crypto.QblEncKeyPair.getQblEncPublicKey()", "de.qabel.core.crypto.QblPrimaryPublicKey.attachEncPublicKey(qekp.getQblEncPublicKey())"], "Fixed commit": "1c9ea8cd9d7038d704299cb25d0a5d69fd5b831d", "Url": "https://api.github.com/repos/aBothe/qabel-core", "Date": "2015-01-23T14:01:55Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { qblPrimaryPublicKey.attachSignPublicKey(qskp.getQblSignPublicKey()); } catch (java.security.InvalidKeyException e) { new java.lang.RuntimeException(\"Newly created subkey has invalid signature.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2581/buggy-version/src.main.java.de.qabel.core.crypto.QblPrimaryKeyPair.java", "BodyUseAPI": ["de.qabel.core.crypto.QblPrimaryPublicKey.attachSignPublicKey(qskp.getQblSignPublicKey())", "de.qabel.core.crypto.QblSignKeyPair.getQblSignPublicKey()"], "Fixed commit": "1c9ea8cd9d7038d704299cb25d0a5d69fd5b831d", "Url": "https://api.github.com/repos/aBothe/qabel-core", "Date": "2015-01-23T14:01:55Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { svList = handle.getAllSerivce(); } catch (java.lang.Exception e) { android.util.Log.e(\"svList Except\", e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/2523/buggy-version/app.src.main.java.com.darker.motorservice.fragment.MotorcycleFragment.java", "BodyUseAPI": ["com.darker.motorservice.database.ServiceHandle.getAllSerivce()"], "Fixed commit": "baa893feaefcb545ad20684950808942477b7109", "Url": "https://api.github.com/repos/iambas/msut", "Date": "2017-08-31T07:11:07Z"},
{"Line": "=>639", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (ucars.carBoosts.containsKey(player.getName())) { multiplier = ucars.carBoosts.get(player.getName()); } } catch (java.lang.Exception e1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V54/8262/buggy-version/uCars.src.com.useful.ucars.uCarsListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.getName()", "ucars.carBoosts.containsKey(player.getName())", "ucars.carBoosts.get(player.getName())", "org.bukkit.entity.Player.getName()"], "Fixed commit": "b2e2d0445d4052c6ede2f7c68a3bddac78d2bb8b", "Url": "https://api.github.com/repos/storm345dev/ucars", "Date": "2013-10-05T19:58:11Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (com.ning.http.client.websocket.WebSocketCloseCodeReasonListener.class.isAssignableFrom(l.getClass())) { com.ning.http.client.websocket.WebSocketCloseCodeReasonListener.class.cast(l).onClose(this, code, reason); } l.onClose(this); } catch (java.lang.Throwable t) { l.onError(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1105/buggy-version/src.main.java.com.ning.http.client.providers.netty.NettyWebSocket.java", "BodyUseAPI": ["com.ning.http.client.websocket.WebSocketCloseCodeReasonListener.onClose(com.ning.http.client.providers.netty.NettyWebSocket,int,java.lang.String)", "com.ning.http.client.websocket.WebSocketListener.onClose(com.ning.http.client.providers.netty.NettyWebSocket)", "java.lang.Class.isAssignableFrom(l.getClass())", "java.lang.Class.cast(com.ning.http.client.websocket.WebSocketListener)", "com.ning.http.client.websocket.WebSocketListener.getClass()"], "Fixed commit": "3679a321aee98d4beef6f0f59579ee9057c51a5e", "Url": "https://api.github.com/repos/gerdriesselmann/async-http-client", "Date": "2012-04-23T20:22:41Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { resource = params[1].substring(0, params[1].indexOf(\"?\")); getParams = params[1].substring(((params[1].indexOf(\"?\")) + 1)); } catch (java.lang.StringIndexOutOfBoundsException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5956/buggy-version/net.geohhot.betterhttpserver.betterServer.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "87d258e9570b07c14af1dfd6e7f9753d79d8c820", "Url": "https://api.github.com/repos/geohhot/betterHttpServer", "Date": "2013-05-10T09:47:55Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { new smartorder.presentation.ManagementFrame(em).setVisible(true); } catch (java.lang.Exception e) { em.getTransaction().rollback(); javax.swing.JOptionPane.showMessageDialog(null, (\"Error!\\n\" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2057/buggy-version/src.smartorder.control.RunManagementSystem.java", "BodyUseAPI": ["smartorder.presentation.ManagementFrame.setVisible(boolean)"], "Fixed commit": "a6ff379bd9a15f689454989b0d49451e5fdeb87b", "Url": "https://api.github.com/repos/vdung7/SmartOrder", "Date": "2013-11-10T02:07:37Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (com instanceof smartorder.presentation.SaleStatisticPanel) salePanel.updateProductList(); else if (com instanceof smartorder.presentation.UserStatisticPanel) userPanel.updateCustomerModel(); } catch (java.lang.Exception ex) { em.getTransaction().rollback(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2057/buggy-version/src.smartorder.presentation.ManagementFrame.java", "BodyUseAPI": ["smartorder.presentation.UserStatisticPanel.updateCustomerModel()", "smartorder.presentation.SaleStatisticPanel.updateProductList()"], "Fixed commit": "a6ff379bd9a15f689454989b0d49451e5fdeb87b", "Url": "https://api.github.com/repos/vdung7/SmartOrder", "Date": "2013-11-10T02:07:37Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mViewPager.onTouchEvent(event); } catch (java.lang.IllegalArgumentException e) { org.sufficientlysecure.keychain.util.Log.d(Constants.TAG, \"Workaround: Catched IllegalArgumentException\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7040/buggy-version/OpenKeychain.src.main.java.org.sufficientlysecure.keychain.ui.ImportKeysActivity.java", "BodyUseAPI": ["android.support.v4.view.ViewPager.onTouchEvent(android.view.MotionEvent)"], "Fixed commit": "717d66961b0665d6a2fd5f81a43ff0f19ebc8343", "Url": "https://api.github.com/repos/timbray/open-keychain", "Date": "2014-06-20T13:39:27Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { hdfsCopyer.copyFromLocal(localDir, hdfsDir); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5746/buggy-version/src.duke.hbase.cm.tdg.pdgf.HdfsCopyer.java", "BodyUseAPI": ["HdfsCopyer.copyFromLocal(java.lang.String,java.lang.String)"], "Fixed commit": "237a8f76c954588ace29d0a12272639e14b72e1c", "Url": "https://api.github.com/repos/abhishek1015/schema_design", "Date": "2014-02-16T22:28:54Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { location = LocationServices.FusedLocationApi.getLastLocation(googleApiClientHost.getGoogleApiClient()); } catch (java.lang.SecurityException e) { android.util.Log.e(\"GoogleLocationProvider\", (\"Can not obtain last location: \" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5205/buggy-version/app.src.main.java.com.kirussell.tastytrucks.location.GoogleLocationProvider.java", "BodyUseAPI": ["com.kirussell.tastytrucks.location.GoogleApiClientHost.getGoogleApiClient()", "LocationServices.FusedLocationApi.getLastLocation(googleApiClientHost.getGoogleApiClient())"], "Fixed commit": "2c150315754f89e52420b12d9425138677abb246", "Url": "https://api.github.com/repos/kirussell/TastyTrucks", "Date": "2016-04-08T23:15:40Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { this.collection.dropIndex(new com.mongodb.BasicDBObject(org.hbr.session.store.MongoStore.lastModifiedProperty, 1)); this.collection.dropIndex(new com.mongodb.BasicDBObject(org.hbr.session.store.MongoStore.appContextProperty, 1)); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3501/buggy-version/mongo-session-store.src.main.java.org.hbr.session.store.MongoStore.java", "BodyUseAPI": ["com.mongodb.DBCollection.dropIndex(com.mongodb.BasicDBObject)", "com.mongodb.DBCollection.dropIndex(com.mongodb.BasicDBObject)"], "Fixed commit": "5d71067cd0b2e5b9d6b343fcc22c34b2ef8e0bc6", "Url": "https://api.github.com/repos/HBRGTech/mongo-session-manager", "Date": "2014-10-01T22:30:24Z"},
{"Line": "=>748", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { importService.importCustomerFile(uploadItem, store, language); } catch (com.salesmanager.core.business.generic.exception.ServiceException se) { model.addAttribute(\"error\", \"error\"); if (((se.getMessageCodes()) != null) && ((se.getMessageCodes().size()) > 0)) { for (int i = 0; i < (se.getMessageCodes().size()); i++) { result.addError(new org.springframework.validation.ObjectError(\"fileData\", se.getMessageCodes().get(i))); } }else result.addError(new org.springframework.validation.ObjectError(\"fileData\", messages.getMessage(se.getMessageCode(), locale))); return \"admin-customers\"; } catch (java.lang.Exception e) { result.addError(new org.springframework.validation.ObjectError(\"fileData\", \"An Error Occured will uploading file\")); return \"admin-customers\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6114/buggy-version/sm-shop.src.main.java.com.salesmanager.web.admin.controller.customers.CustomerController.java", "BodyUseAPI": ["com.salesmanager.core.business.catalog.product.service.ImportService.importCustomerFile(com.salesmanager.core.business.catalog.product.service.FileBean,com.salesmanager.core.business.merchant.model.MerchantStore,com.salesmanager.core.business.reference.language.model.Language)"], "Fixed commit": "bf2d82dd291cc4a3076715fb47dd466a797cbe54", "Url": "https://api.github.com/repos/asaad1982/laVetrina", "Date": "2016-04-19T22:18:48Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { javax.swing.UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.gtk.GTKLookAndFeel\"); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7214/buggy-version/src.org.gextractor.Main.java", "BodyUseAPI": ["javax.swing.UIManager.setLookAndFeel(java.lang.String)"], "Fixed commit": "a7b09618a8c06bfc29c8e123949a23a98a8fb744", "Url": "https://api.github.com/repos/david4122/gextractor", "Date": "2016-10-19T19:30:49Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { resultsPerTrial = dse.getModel(derivName).getPriceArray(mainTrialsPerDiot, underTrialsPerDiot); } catch (java.lang.Exception e) { com.billybyte.commonstaticmethods.Utils.prtObErrMess(this.getClass(), (derivName + \" : error during getPriceArray\")); resultsPerTrial = dse.getModel(derivName).getPriceArray(mainTrialsPerDiot, underTrialsPerDiot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7281/buggy-version/src.main.java.com.billybyte.dse.var.McVar.java", "BodyUseAPI": ["com.billybyte.dse.DerivativeSetEngine.getModel(java.lang.String)", "dse.getModel(derivName).getPriceArray(java.util.Map<com.billybyte.dse.inputs.diotypes.DioType<?>, double[]>,java.util.Map<com.billybyte.dse.inputs.diotypes.DioType<?>, double[][]>)"], "Fixed commit": "b2f3bf3a5f7e7f1e82d90d115501095905443954", "Url": "https://api.github.com/repos/bgithub1/common-libs", "Date": "2015-08-24T00:10:41Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { gameStatePlaying(); } catch (java.util.ConcurrentModificationException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8615/buggy-version/UniQuest.src.main.Game.java", "BodyUseAPI": ["main.Game.gameStatePlaying()"], "Fixed commit": "94f421b6bb81703e850f11feb28b9bfd291031ec", "Url": "https://api.github.com/repos/ayrtonmassey/OOP-Project", "Date": "2013-03-15T21:15:14Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { final T result = nexusTask.call(); context.setResult(result); } finally { context.getJobDetail().getJobDataMap().putAll(nexusTask.getConfiguration().getMap()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6891/buggy-version/plugins.basic.nexus-quartz-plugin.src.main.java.org.sonatype.nexus.quartz.internal.nexus.NexusTaskJobSupport.java", "BodyUseAPI": ["org.sonatype.nexus.scheduling.Task<T>.call()", "org.sonatype.nexus.quartz.internal.nexus.NexusTaskJobSupport.setResult(T)"], "Fixed commit": "1262b1e6e87b47ace8cb42a1d96a190cf782aad4", "Url": "https://api.github.com/repos/sonatype/nexus-oss", "Date": "2014-12-03T12:46:53Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.openlca.app.editors.graphical.layout.NodeLayoutStore.loadLayout(editor.getModel()); if ((editor.getOutline()) != null) editor.getOutline().refresh(); editor.setDirty(true); } catch (java.lang.Exception e) { log.error(\"Failed to apply layout to graph\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7190/buggy-version/olca-app.src.org.openlca.app.editors.graphical.action.BuildSupplyChainAction.java", "BodyUseAPI": ["org.openlca.app.editors.graphical.ProductSystemGraphEditor.getModel()", "org.openlca.app.editors.graphical.ProductSystemGraphEditor.getOutline()", "org.openlca.app.editors.graphical.ProductSystemGraphEditor.setDirty(boolean)", "editor.getOutline().refresh()", "org.openlca.app.editors.graphical.layout.NodeLayoutStore.loadLayout(editor.getModel())", "org.openlca.app.editors.graphical.ProductSystemGraphEditor.getOutline()"], "Fixed commit": "1e8810eba3fa82f279ba5b06f308e5b996055112", "Url": "https://api.github.com/repos/GreenDelta/olca-app", "Date": "2017-02-15T11:08:52Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { list = taskService.getTasksAssignedAsPotentialOwner(actorId, \"en-UK\"); ut.commit(); } catch (javax.transaction.RollbackException e) { e.printStackTrace(); throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7741/buggy-version/rewards-basic.src.main.java.com.sample.ejb.TaskBean.java", "BodyUseAPI": ["javax.transaction.UserTransaction.commit()", "org.kie.api.task.TaskService.getTasksAssignedAsPotentialOwner(java.lang.String,java.lang.String)"], "Fixed commit": "518857cd2b08459a0ebfef613b6e39835ea74b58", "Url": "https://api.github.com/repos/jsvitak/jbpm-6-examples", "Date": "2013-06-06T15:34:10Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mHeight = styledAttrs.getDimensionPixelSize(1, ViewGroup.LayoutParams.MATCH_PARENT); } catch (java.lang.UnsupportedOperationException e) { mHeight = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7116/buggy-version/code.src.android.view.WebCachedImageView.java", "BodyUseAPI": ["android.content.res.TypedArray.getDimensionPixelSize(int,ViewGroup.LayoutParams.MATCH_PARENT)"], "Fixed commit": "b09960d320218940fbff6561932b98ee7a0beb39", "Url": "https://api.github.com/repos/leocadiotine/WebCachedImageView", "Date": "2013-05-10T00:15:48Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mWidth = styledAttrs.getDimensionPixelSize(0, ViewGroup.LayoutParams.MATCH_PARENT); } catch (java.lang.UnsupportedOperationException e) { mWidth = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7116/buggy-version/code.src.android.view.WebCachedImageView.java", "BodyUseAPI": ["android.content.res.TypedArray.getDimensionPixelSize(int,ViewGroup.LayoutParams.MATCH_PARENT)"], "Fixed commit": "b09960d320218940fbff6561932b98ee7a0beb39", "Url": "https://api.github.com/repos/leocadiotine/WebCachedImageView", "Date": "2013-05-10T00:15:48Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.System.out.println((\"exeFile = \" + (ru.spbau.bioinf.mgra.JettyServer.exeFile.getCanonicalPath()))); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8320/buggy-version/mgra.src.ru.spbau.bioinf.mgra.JettyServer.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.File.getCanonicalPath()"], "Fixed commit": "2761c830f76d7e31cc3321bc3e0581eec547e287", "Url": "https://api.github.com/repos/YakovSirotkin/MGRA", "Date": "2011-09-16T04:29:33Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { splash.setContentDescription(current_server.getString(Open311.NAME)); } catch (gov.in.bloomington.georeporter.util.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3594/buggy-version/open311-android.src.gov.in.bloomington.georeporter.activities.MainActivity.java", "BodyUseAPI": ["gov.in.bloomington.georeporter.util.json.JSONObject.getString(Open311.NAME)", "android.widget.ImageView.setContentDescription(current_server.getString(Open311.NAME))"], "Fixed commit": "57cab791810afb283286c1110b258f564cfd1b04", "Url": "https://api.github.com/repos/Jaakko/open311-android", "Date": "2012-12-14T15:33:51Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { result = exporter.outputJSON(ranker.rank(re.retrieve(query), re.queryToWordIDs(query))); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/1184/buggy-version/back.src.search.SearchEngine.java", "BodyUseAPI": ["export.Exporter.outputJSON(ranker.rank(re.retrieve(query), re.queryToWordIDs(query)))", "search.Ranker.rank(re.retrieve(query),re.queryToWordIDs(query))", "search.Retriever.retrieve(java.lang.String)", "search.Retriever.queryToWordIDs(java.lang.String)"], "Fixed commit": "ae4231c2de8cb5a5dc1e65a9710b36b761c870af", "Url": "https://api.github.com/repos/nayeon7lee/search-engine-project", "Date": "2016-05-05T05:45:32Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { return getId().equals(((org.ietr.preesm.experiment.model.pimm.Fifo) (obj)).getId()); } catch (java.lang.RuntimeException e) { return super.equals(obj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4239/buggy-version/plugins.org.ietr.preesm.experiment.model.src.org.ietr.preesm.experiment.model.pimm.impl.FifoImpl.java", "BodyUseAPI": ["java.lang.String.equals(((org.ietr.preesm.experiment.model.pimm.Fifo) (obj)).getId())", "org.ietr.preesm.experiment.model.pimm.impl.FifoImpl.getId()", "java.lang.Object.getId()"], "Fixed commit": "4bceaaa3bea5f598148c0167509cbe868509f138", "Url": "https://api.github.com/repos/preesm/preesm", "Date": "2015-08-19T09:38:17Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (theUser.isPasswordLocked()) { showUnlockAction = true; } } catch (com.novell.ldapchai.exception.ChaiException e) { password.pwm.http.servlet.forgottenpw.ForgottenPasswordUtil.LOGGER.debug(pwmRequest, (\"unexpected error checking if user's password is locked: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5596/buggy-version/server.src.main.java.password.pwm.http.servlet.forgottenpw.ForgottenPasswordUtil.java", "BodyUseAPI": ["com.novell.ldapchai.ChaiUser.isPasswordLocked()"], "Fixed commit": "5e430ab156e7c8d96abd3497948c9e90a5cd238c", "Url": "https://api.github.com/repos/pwm-project/pwm", "Date": "2017-11-30T16:20:06Z"},
{"Line": "=>606", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((vals.length) < 3) { return java.awt.Color.decode(s); }else { int R = java.lang.Integer.parseInt(vals[0].trim()); int G = java.lang.Integer.parseInt(vals[1].trim()); int B = java.lang.Integer.parseInt(vals[2].trim()); return new java.awt.Color(R, G, B); } } catch (java.lang.NumberFormatException err) { throw new com.github.erihoss.img2a.ArgumentParserException(java.lang.String.format(\"Unparsable color value: \\\"%s\\\", see --help\", s), argumentParser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/554/buggy-version/src.main.java.com.github.erihoss.img2a.App.java", "BodyUseAPI": ["java.awt.Color.decode(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.trim()", "java.lang.String.trim()", "java.lang.String.trim()"], "Fixed commit": "8d2e3486a0b8d88fd8174adbfddb1c8e640a20bc", "Url": "https://api.github.com/repos/EriHoss/img2a", "Date": "2017-08-23T23:14:25Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Process p = java.lang.Runtime.getRuntime().exec(\"cmd /c start /D C:\\\\glassfish4\\\\bin asadmin.bat start-domain\"); } catch (java.io.IOException ex) { java.lang.System.out.println(\"Brak Pliku serwera\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7839/buggy-version/JanekStepInterpreter.src.main.java.org.stepinterpreter.janek.Menu.java", "BodyUseAPI": ["java.lang.Runtime.exec(java.lang.String)", "java.lang.Runtime.getRuntime()"], "Fixed commit": "b126e4c96fb81f32b856572cf670c7c643c5a805", "Url": "https://api.github.com/repos/sajmonidesos/JanekStepInterpreter", "Date": "2016-12-23T15:30:10Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.lang.Process p = java.lang.Runtime.getRuntime().exec(\"cmd /c start /D C:\\\\glassfish4\\\\bin asadmin.bat stop-domain\"); } catch (java.io.IOException ex) { java.lang.System.out.println(\"Brak Pliku bat\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7839/buggy-version/JanekStepInterpreter.src.main.java.org.stepinterpreter.janek.Menu.java", "BodyUseAPI": ["java.lang.Runtime.exec(java.lang.String)", "java.lang.Runtime.getRuntime()"], "Fixed commit": "b126e4c96fb81f32b856572cf670c7c643c5a805", "Url": "https://api.github.com/repos/sajmonidesos/JanekStepInterpreter", "Date": "2016-12-23T15:30:10Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dataHeader = dataHeaderParser.parse(sinStream).mapTo(org.sinfile.parsers.v3.DataHeader.class); } catch (java.lang.Exception e) { dataHeader = new org.sinfile.parsers.v3.DataHeader(); dataHeader.mmcfMagic = new java.lang.String(\"NULL\").getBytes(); dataHeader.gptpLen = 0; dataHeader.mmcfLen = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/9031/buggy-version/src.org.sinfile.parsers.v3.SinParser.java", "BodyUseAPI": ["dataHeaderParser.parse(sinStream).mapTo(java.lang.Class)", "com.igormaznitsa.jbbp.JBBPParser.parse(com.igormaznitsa.jbbp.io.JBBPBitInputStream)"], "Fixed commit": "59d485118e7a0b908a48fc932ed23cdb8317373a", "Url": "https://api.github.com/repos/Androxyde/Flashtool", "Date": "2016-12-02T18:31:47Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.apache.commons.io.FileUtils.deleteDirectory(f); org.apache.commons.io.FileUtils.forceMkdir(f); } catch (java.io.IOException e) { com.javautilities.logging.LogUtil.logError(logger, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8200/buggy-version/Src.com.orc.projectcollector.service.DownloadProjectCommand.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)", "org.apache.commons.io.FileUtils.forceMkdir(java.io.File)"], "Fixed commit": "532476d3b4aa36b0383eea65822f57ab004502f2", "Url": "https://api.github.com/repos/haches/orc", "Date": "2012-12-26T12:41:24Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { getWritableDatabase().execSQL(((((\"UPDATE \" + (de.j4velin.pedometer.Database.DB_NAME)) + \" SET date = date - '\") + offsetDifference) + \"' WHERE date > 0\")); } catch (java.lang.Exception e) { onUpgrade(getWritableDatabase(), 1, 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/6097/buggy-version/src.main.java.de.j4velin.pedometer.Database.java", "BodyUseAPI": ["de.j4velin.pedometer.Database.getWritableDatabase()", "getWritableDatabase().execSQL(java.lang.String)"], "Fixed commit": "fe517d88b4d4cc22540da7105bf7d153b19f82ec", "Url": "https://api.github.com/repos/j4velin/Pedometer", "Date": "2014-09-19T19:39:25Z"},
{"Line": "=>684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (aFileList.substring(((aFileList.length()) - 4)).equalsIgnoreCase(\".png\")) { sheetFiles.add(aFileList); } } catch (java.lang.StringIndexOutOfBoundsException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5397/buggy-version/src.com.hflrobotics.scouting.Scouting.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.length()", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "0d176313b3edec3c64d05fc1048136a9a8db15d2", "Url": "https://api.github.com/repos/cougarTech2228/NOCR", "Date": "2016-02-29T18:30:18Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.io.File curImg = new java.io.File(uri.getPath()); curImg.delete(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8393/buggy-version/app.src.main.java.nazacheres.com.pixelperfect.Presenter.ProjectPresenter.java", "BodyUseAPI": ["java.io.File.delete()", "android.net.Uri.getPath()"], "Fixed commit": "79aa4bcbed63a036c1520212cb254a80dddd0708", "Url": "https://api.github.com/repos/Nazacheres/pp4dev", "Date": "2017-01-28T15:09:34Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.tns.Require.init(rootDir, appDir); } catch (java.io.IOException ex) { throw new java.lang.RuntimeException(\"Fail to initialize Require class\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2308/buggy-version/src.src.com.tns.Platform.java", "BodyUseAPI": ["com.tns.Require.init(java.io.File,java.io.File)"], "Fixed commit": "e9257abce44ef793c30c3d168bafcc879fd846b2", "Url": "https://api.github.com/repos/NathanaelA/android-runtime", "Date": "2015-09-04T14:04:18Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { u = new business.Usuario(nome, endereco, CPF, telefone, username, senha); } catch (exceptions.BusinessException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8638/buggy-version/src.persistence.UsuarioDAO.java", "BodyUseAPI": [], "Fixed commit": "0a7c7bc59c53a83af8ad4f8bed2041c3235793b5", "Url": "https://api.github.com/repos/kayibal/leilao", "Date": "2015-06-16T22:26:41Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { result = new business.Anuncio(modelo, ano, motor, placa, cor, marca, potencia, lanceMin); } catch (exceptions.BusinessException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8638/buggy-version/src.persistence.AnuncioDAO.java", "BodyUseAPI": [], "Fixed commit": "0a7c7bc59c53a83af8ad4f8bed2041c3235793b5", "Url": "https://api.github.com/repos/kayibal/leilao", "Date": "2015-06-16T22:26:41Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { com.ccg.common.data.ArticleContent content = getArticleContent(articleId); java.lang.String filename = content.getUrl(); java.lang.System.out.println((\"========== file name====\" + filename)); java.util.List<java.lang.String> pageContents = this.getPdfPageContentAsList(filename); int pageNumber = 0; for (java.lang.String pageContent : pageContents) { indexer.indexingPage((\"\" + articleId), info.getTitle(), (\"\" + (++pageNumber)), pageContent, writer); } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4247/buggy-version/coreservices.src.main.java.com.ccg.services.data.CCGDBSerivceImpl.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "com.ccg.services.index.Indexer.indexingPage(java.lang.String,info.getTitle(),java.lang.String,java.lang.String,org.apache.lucene.index.IndexWriter)", "com.ccg.common.data.ArticleBasicInfo.getTitle()", "com.ccg.services.data.CCGDBSerivceImpl.getArticleContent(java.lang.Integer)", "com.ccg.common.data.ArticleContent.getUrl()", "com.ccg.services.data.CCGDBSerivceImpl.getPdfPageContentAsList(java.lang.String)"], "Fixed commit": "52ed6196bcffa634eec40c95e2f9f40838c1a964", "Url": "https://api.github.com/repos/quarkguo/quark", "Date": "2016-08-30T04:39:43Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.nio.file.Files.delete(toDelete.getPath().toAbsolutePath()); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7932/buggy-version/src.src.main.java.org.nextbox.service.FilesystemAPI.java", "BodyUseAPI": ["org.nextbox.model.Filepath.getPath()", "java.nio.file.Files.delete(toDelete.getPath().toAbsolutePath())", "toDelete.getPath().toAbsolutePath()"], "Fixed commit": "1eaa7382eb6de7358b86c72dc89ef9db9f60a744", "Url": "https://api.github.com/repos/saurabhsood91/box", "Date": "2017-04-30T21:10:09Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { ctrlPoint.start(); } catch (java.lang.NullPointerException e) { throw new com.mikebevz.upnp.UpnpLibraryException(\"Unknown socket error. Try to refresh scanning.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/7847/buggy-version/src.com.mikebevz.upnp.DeviceListAdapter.java", "BodyUseAPI": ["org.cybergarage.upnp.ControlPoint.start()"], "Fixed commit": "3f8acefcd13a15da570cb270793e213df1b95717", "Url": "https://api.github.com/repos/mikebevz/UPnPBrowser", "Date": "2011-09-28T06:58:23Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(toFile, true)); message.writeDelimitedTo(out); } catch (java.io.IOException e) { throw new java.lang.IllegalStateException((\"Unable to append protocol buffer data to file \" + toFile), e); } finally { org.apache.commons.io.IOUtils.closeQuietly(out); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5959/buggy-version/sonar-batch-protocol.src.main.java.org.sonar.batch.protocol.ProtobufUtil.java", "BodyUseAPI": ["com.google.protobuf.Message.writeDelimitedTo(java.io.OutputStream)"], "Fixed commit": "a0b334f10eedb58bb5bbcf1fbf05054e93927988", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-05-13T13:40:24Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { input = new java.io.BufferedInputStream(new java.io.FileInputStream(file)); return parser.parseFrom(input); } catch (java.io.IOException e) { throw new java.lang.IllegalStateException((\"Failed to read file: \" + file), e); } finally { org.apache.commons.io.IOUtils.closeQuietly(input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/5959/buggy-version/sonar-batch-protocol.src.main.java.org.sonar.batch.protocol.ProtobufUtil.java", "BodyUseAPI": ["com.google.protobuf.Parser<T>.parseFrom(java.io.InputStream)"], "Fixed commit": "a0b334f10eedb58bb5bbcf1fbf05054e93927988", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-05-13T13:40:24Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { onDrop.call(t); } catch (java.lang.Throwable e) { rx.exceptions.Exceptions.throwOrReport(e, child, t); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4655/buggy-version/src.main.java.rx.internal.operators.OperatorOnBackpressureDrop.java", "BodyUseAPI": ["rx.functions.Action1<? super T>.call(T)"], "Fixed commit": "96751896fc33348212d8ed84ea6019a08b346eb1", "Url": "https://api.github.com/repos/ReactiveX/RxJava", "Date": "2016-01-23T23:10:29Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { environmentVariables = updateEnvironmentVariablesFromFile(environmentVariables, ((\"/tmp/openbaton/dockerVNFM/\" + (vnfd.getName())) + \"/scripts/default_options\")); } catch (java.lang.Exception ignore) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/4993/buggy-version/src.main.java.org.openbaton.vnfm.DockerVnfm.java", "BodyUseAPI": ["org.openbaton.catalogue.mano.descriptor.VirtualNetworkFunctionDescriptor.getName()", "org.openbaton.vnfm.DockerVnfm.updateEnvironmentVariablesFromFile(java.util.List<java.lang.String>,((\"/tmp/openbaton/dockerVNFM/\" + (vnfd.getName())) + \"/scripts/default_options\"))"], "Fixed commit": "4958f0d48bf9509296d3aa601e80afe317fb011a", "Url": "https://api.github.com/repos/Sakib37/DockerVnfm", "Date": "2017-02-20T02:31:36Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { is = new java.io.ByteArrayInputStream(customTextSource.getBytes(\"UTF8\")); } catch (java.io.UnsupportedEncodingException e) { throw new java.lang.IllegalArgumentException((\"Invalid source name: \" + (customTextSource)), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/122/buggy-version/rdfunit-core.src.main.java.org.aksw.rdfunit.RDFUnitConfiguration.java", "BodyUseAPI": ["java.lang.String.getBytes(java.lang.String)"], "Fixed commit": "5a45ee718e4862076cacd2054a9cbcc7fd526739", "Url": "https://api.github.com/repos/AKSW/RDFUnit", "Date": "2014-07-31T12:14:53Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { mediaPlayer.stop(); } catch (java.lang.Exception e) { android.util.Log.e(DEBUG_TAG, (\"ERROR OCCURED: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/8531/buggy-version/app.src.main.java.metropolia.fi.suondbubbles.views.Bubble.java", "BodyUseAPI": ["android.media.MediaPlayer.stop()"], "Fixed commit": "41a6db45387109fc260e82b2fea13b0bd827dd27", "Url": "https://api.github.com/repos/alvaro893/sound_bubbles", "Date": "2015-11-18T19:37:35Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { installModule(isTestModule, module); } catch (java.lang.Exception e) { throw new java.lang.IllegalStateException(java.lang.String.format(\"Module %s couldn't be installed\", module.getClass().getName()), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2248/buggy-version/toothpick-runtime.src.main.java.toothpick.ScopeImpl.java", "BodyUseAPI": ["toothpick.ScopeImpl.installModule(boolean,java.lang.Module)"], "Fixed commit": "e44d21327993e4840c636138dd2332a1bc0d0794", "Url": "https://api.github.com/repos/stephanenicolas/toothpick", "Date": "2017-10-09T06:18:43Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if (isTestModule || ((getBoundProvider(clazz, bindingName)) == null)) { toothpick.InternalProviderImpl provider = toProvider(binding); if (binding.isCreatingInstancesInScope()) { installScopedProvider(clazz, bindingName, ((toothpick.ScopedProviderImpl) (provider)), isTestModule); }else { installBoundProvider(clazz, bindingName, provider, isTestModule); } } } catch (java.lang.Exception e) { throw new toothpick.configuration.IllegalBindingException(java.lang.String.format(\"Binding %s couldn't be installed\", bindingName), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/2248/buggy-version/toothpick-runtime.src.main.java.toothpick.ScopeImpl.java", "BodyUseAPI": ["toothpick.ScopeImpl.installScopedProvider(java.lang.Class,java.lang.String,toothpick.InternalProviderImpl,boolean)", "toothpick.ScopeImpl.getBoundProvider(java.lang.Class,java.lang.String)", "toothpick.ScopeImpl.installBoundProvider(java.lang.Class,java.lang.String,toothpick.InternalProviderImpl,boolean)", "toothpick.config.Binding.isCreatingInstancesInScope()", "toothpick.ScopeImpl.toProvider(toothpick.config.Binding)"], "Fixed commit": "e44d21327993e4840c636138dd2332a1bc0d0794", "Url": "https://api.github.com/repos/stephanenicolas/toothpick", "Date": "2017-10-09T06:18:43Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { us.noop.trb.ModelBuilder.face2int(p); } catch (java.lang.Exception e) { org.bukkit.Bukkit.getServer().broadcastMessage(\"Invalid location.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V55/3037/buggy-version/src.us.noop.trb.ModelBuilder.java", "BodyUseAPI": ["us.noop.trb.ModelBuilder.face2int(org.bukkit.block.BlockFace)"], "Fixed commit": "c3315f7d057e55e77275a215c69f8768c5b17d19", "Url": "https://api.github.com/repos/ulyfm/trebuchetplugin", "Date": "2015-06-21T06:44:24Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Class.forName(org.jboss.netty.util.internal.ByteBufferUtil.class.getName()); } catch (java.lang.ClassNotFoundException cnfe) { if (com.liferay.portal.search.elasticsearch.internal.connection.EmbeddedElasticsearchConnection._log.isWarnEnabled()) { com.liferay.portal.search.elasticsearch.internal.connection.EmbeddedElasticsearchConnection._log.warn((((\"Unable to preload \" + (org.jboss.netty.util.internal.ByteBufferUtil.class)) + \" to prevent netty shutdown concurrent class loading \") + \"interruption issue.\"), cnfe); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/74/buggy-version/modules.apps.foundation.portal-search.portal-search-elasticsearch.src.main.java.com.liferay.portal.search.elasticsearch.internal.connection.EmbeddedElasticsearchConnection.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)", "java.lang.Class.getName()"], "Fixed commit": "67ed366cb3422ebf3814335e5ab357f064c2569b", "Url": "https://api.github.com/repos/ctampoya/liferay-portal", "Date": "2016-11-04T07:01:15Z"},
{"Line": "=>550", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fix = java.net.URLEncoder.encode(value, Constants.ENCODING_ISO_8859_1); fix = java.net.URLDecoder.decode(fix, Constants.ENCODING_UTF_8); } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5675/buggy-version/hdiv-core.src.main.java.org.hdiv.util.HDIVUtil.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,Constants.ENCODING_UTF_8)", "java.net.URLEncoder.encode(java.lang.String,Constants.ENCODING_ISO_8859_1)"], "Fixed commit": "0f1ae2d1422cf8be9c722f5f8d811e1a92eee60c", "Url": "https://api.github.com/repos/hdiv/hdiv", "Date": "2017-11-13T16:37:59Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { ref.save(); } catch (java.lang.Exception e) { android.widget.Toast.makeText(c, e.getMessage(), Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2964/buggy-version/src.we.should.communication.ApproveReferral.java", "BodyUseAPI": ["we.should.list.ReferralItem.save()"], "Fixed commit": "bf87a22970edc48d83ae4177e39018aa7e177186", "Url": "https://api.github.com/repos/ccemeraldeyes/AndroidLunch", "Date": "2012-05-23T19:36:24Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { intent.setClassName(\"org.md2k.datakit\", \"org.md2k.datakit.ActivitySettings\"); startActivity(intent); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7245/buggy-version/study.src.main.java.org.md2k.study.model_view.clear_data.ActivityClearData.java", "BodyUseAPI": ["org.md2k.study.model_view.clear_data.ActivityClearData.startActivity(android.content.Intent)", "android.content.Intent.setClassName(java.lang.String,java.lang.String)"], "Fixed commit": "0da6e7026188099bb5574d8ae79d05689361e726", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-Study", "Date": "2017-02-06T02:58:22Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { intent.setClassName(\"org.md2k.streamprocessor\", \"org.md2k.streamprocessor.ActivitySettings\"); startActivity(intent); } catch (java.lang.Exception ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7245/buggy-version/study.src.main.java.org.md2k.study.model_view.clear_data.ActivityClearData.java", "BodyUseAPI": ["android.content.Intent.setClassName(java.lang.String,java.lang.String)", "org.md2k.study.model_view.clear_data.ActivityClearData.startActivity(android.content.Intent)"], "Fixed commit": "0da6e7026188099bb5574d8ae79d05689361e726", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-Study", "Date": "2017-02-06T02:58:22Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(3000); } catch (java.lang.InterruptedException e) { java.lang.System.out.println(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1029/buggy-version/src.Preload.PortCheck.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "24009b47f3534fff6d71f6cc4765301b3c4a8e47", "Url": "https://api.github.com/repos/NgnCorp/NgnCorp", "Date": "2016-09-19T14:10:00Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sortDefault(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4727/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.menu.HierarchyWizardPageOrder.java", "BodyUseAPI": ["org.deidentifier.arx.gui.view.impl.menu.HierarchyWizardPageOrder.sortDefault()"], "Fixed commit": "d92c4cfb1a9ac04fc4213a7d0a56addf0693af6c", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2013-09-17T21:12:46Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { typeMappingsHelper.addTypeMappings(indexName, trainingTypeMappings); } catch (java.lang.IllegalArgumentException illegalArgumentException) { com.liferay.training.indexsettings.TrainingIndexSettingsContributor._log.error(illegalArgumentException); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5417/buggy-version/liferay-workspace.modules.blade.indexerpostprocessor.src.main.java.com.liferay.training.indexsettings.TrainingIndexSettingsContributor.java", "BodyUseAPI": ["com.liferay.portal.search.elasticsearch.settings.TypeMappingsHelper.addTypeMappings(java.lang.String,java.lang.String)"], "Fixed commit": "4fdc6b1cb1d9342f95f8015385e69ce9382186db", "Url": "https://api.github.com/repos/lipusz/liferay-blade-samples", "Date": "2016-10-13T16:05:18Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { throw new java.lang.Exception(\"User Model Undefined\"); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7407/buggy-version/TACAdXAgent.src.brown.tac.adx.predictions.DailyPrediction.java", "BodyUseAPI": [], "Fixed commit": "9da2c8d28c82c7b41ad0e116bfbad13861500e46", "Url": "https://api.github.com/repos/BrownGLAMOR/TACAdXAgent", "Date": "2013-05-31T20:56:32Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.eclubprague.cardashboard.core.data.ModuleSupplier.getPersonalInstance().save(this); } catch (java.io.IOException e) { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/492/buggy-version/app.src.main.java.com.eclubprague.cardashboard.tablet.activities.SimplePagerActivity.java", "BodyUseAPI": ["com.eclubprague.cardashboard.core.data.ModuleSupplier.getPersonalInstance()", "com.eclubprague.cardashboard.core.data.ModuleSupplier.getPersonalInstance().save(com.eclubprague.cardashboard.tablet.activities.SimplePagerActivity)"], "Fixed commit": "6d673b45f9d681a4ec59ba35cff19e4ad9b4c357", "Url": "https://api.github.com/repos/eclubprague/CarDashboardTablet", "Date": "2015-08-20T13:31:52Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { causeOfDeath = org.simiancage.DeathTpPlus.helpers.DeathMessagesDTP.DeathEventType.valueOf(org.simiancage.DeathTpPlus.helpers.UtilsDTP.getEntityType(damager).toString()); } catch (java.lang.IllegalArgumentException iae) { org.simiancage.DeathTpPlus.models.DeathDetailDTP.log.severe(\"Please notify the developer of the following Error:\"); org.simiancage.DeathTpPlus.models.DeathDetailDTP.log.severe((\"The following damager is not correctly implemented: \" + (org.simiancage.DeathTpPlus.helpers.UtilsDTP.getEntityType(damager)))); causeOfDeath = org.simiancage.DeathTpPlus.helpers.DeathMessagesDTP.DeathEventType.UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7540/buggy-version/src.main.java.org.simiancage.DeathTpPlus.models.DeathDetailDTP.java", "BodyUseAPI": ["org.simiancage.DeathTpPlus.helpers.DeathMessagesDTP.DeathEventType.valueOf(org.simiancage.DeathTpPlus.helpers.UtilsDTP.getEntityType(damager).toString())", "org.simiancage.DeathTpPlus.helpers.UtilsDTP.getEntityType(org.simiancage.DeathTpPlus.models.Entity)", "org.simiancage.DeathTpPlus.helpers.UtilsDTP.getEntityType(damager).toString()"], "Fixed commit": "acae7a2da21e504f6199f17d00f9917c6daf8fc7", "Url": "https://api.github.com/repos/dredhorse/DeathTpPlus", "Date": "2012-04-16T15:30:08Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { socket.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4796/buggy-version/SendFileV2.src.Receiver.java", "BodyUseAPI": ["java.net.ServerSocket.close()"], "Fixed commit": "af09fc8f96f30ad9b65685a18d2f02bafad33c4f", "Url": "https://api.github.com/repos/freedrikp/SendFileV2", "Date": "2015-03-07T08:55:30Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { current = getTwitterUpdateLink(i); } catch (java.lang.Exception e) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/494/buggy-version/xlash.bot.khux.src.main.java.xlash.bot.khux.TwitterHandler.java", "BodyUseAPI": ["xlash.bot.khux.TwitterHandler.getTwitterUpdateLink(int)"], "Fixed commit": "c535d363a7299a5d8124acf5106c002ea9f5179f", "Url": "https://api.github.com/repos/xlash123/KHUx-Discord-Bot", "Date": "2017-05-07T02:43:12Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String[] namesplit = split[1].split(\";\"); neu.setNachname(namesplit[0]); neu.setVorname(namesplit[1]); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/967/buggy-version/src.IOController.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "Person.setVorname(java.lang.String)", "Person.setNachname(java.lang.String)"], "Fixed commit": "8a3d3069fc17a9ccd15e77397fbd8d56a7092adc", "Url": "https://api.github.com/repos/Fynloh/Adressbuch", "Date": "2017-01-09T17:05:04Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { copy = source.getClass().newInstance(); } catch (java.lang.InstantiationException e) { copy = new java.util.ArrayList<T>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8235/buggy-version/src.main.src.main.java.org.geoserver.catalog.impl.ModificationProxyCloner.java", "BodyUseAPI": ["java.lang.Class<? extends java.util.Collection>.newInstance()", "java.util.Collection<T>.getClass()"], "Fixed commit": "685f385792c720d779e00e483e8ab6d4f9dba439", "Url": "https://api.github.com/repos/georchestra/geoserver", "Date": "2016-01-29T16:31:00Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { eu.lod2.rsine.queryhandling.BooleanQuery booleanQuery = managedStoreCon.prepareBooleanQuery(QueryLanguage.SPARQL, condition.getAskQuery()); for (java.lang.String bindingName : bs.getBindingNames()) { booleanQuery.setBinding(bindingName, bs.getBinding(bindingName).getValue()); } return (booleanQuery.evaluate()) == (condition.getExpectedResult()); } catch (java.lang.Exception e) { logger.error(((\"Error evaluating condition. Query: '\" + (condition.getAskQuery())) + \"'\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2156/buggy-version/src.main.java.eu.lod2.rsine.queryhandling.QueryEvaluator.java", "BodyUseAPI": ["eu.lod2.rsine.queryhandling.BindingSet.getBinding(java.lang.String)", "eu.lod2.rsine.registrationservice.Condition.getExpectedResult()", "eu.lod2.rsine.registrationservice.Condition.getAskQuery()", "eu.lod2.rsine.queryhandling.BindingSet.getBindingNames()", "eu.lod2.rsine.queryhandling.BooleanQuery.evaluate()", "org.openrdf.repository.RepositoryConnection.prepareBooleanQuery(QueryLanguage.SPARQL,condition.getAskQuery())", "bs.getBinding(bindingName).getValue()", "eu.lod2.rsine.queryhandling.BooleanQuery.setBinding(java.lang.String,bs.getBinding(bindingName).getValue())"], "Fixed commit": "66577de525ac42de56a53537294c921281b3b1cd", "Url": "https://api.github.com/repos/rsine/rsine", "Date": "2014-01-27T13:23:33Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { maxSize = realIS[i].getMaxStackSize(); } catch (java.lang.NullPointerException npe) { maxSize = 64; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3587/buggy-version/src.multitallented.redcastlemedia.bukkit.herostronghold.effect.Effect.java", "BodyUseAPI": ["realIS[i].getMaxStackSize()"], "Fixed commit": "424746feaf7c8b5b6564ec4d7aedb951d4a32bc7", "Url": "https://api.github.com/repos/Multitallented/HeroStronghold", "Date": "2012-06-07T20:25:54Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { maxSize = realIS[i].getMaxStackSize(); } catch (java.lang.NullPointerException npe) { maxSize = 64; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3587/buggy-version/src.multitallented.redcastlemedia.bukkit.herostronghold.effect.Effect.java", "BodyUseAPI": ["realIS[i].getMaxStackSize()"], "Fixed commit": "424746feaf7c8b5b6564ec4d7aedb951d4a32bc7", "Url": "https://api.github.com/repos/Multitallented/HeroStronghold", "Date": "2012-06-07T20:25:54Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { userDao.edit(user); } catch (phr.exceptions.DataAccessException e) { e.printStackTrace(); throw new phr.exceptions.UserServiceException(\"Error\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9236/buggy-version/src.phr.service.impl.UserServiceImpl.java", "BodyUseAPI": ["phr.dao.UserDao.edit(phr.models.User)"], "Fixed commit": "34d486d530b187bef0ef2bca3469f61a3595e264", "Url": "https://api.github.com/repos/givmefive5/PHR-WebServer", "Date": "2014-10-27T06:15:33Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.treeTable.m_body.removeChild(tr); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5815/buggy-version/hexa.core.src.main.java.fr.lteconsulting.hexa.client.ui.treetable.Row.java", "BodyUseAPI": ["this.treeTable.m_body.removeChild(com.google.gwt.dom.client.Element)"], "Fixed commit": "f9381b8a388ed5071ff463a67850bcd20d49bea9", "Url": "https://api.github.com/repos/ltearno/hexa.tools", "Date": "2016-10-24T10:30:26Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { runnerID = java.lang.Integer.parseInt(original.substring(0, position)); } catch (java.lang.NumberFormatException e) { if ((original.substring(0, position)) == \"\") { java.lang.System.out.println(\"No ID header\"); }else { java.lang.System.out.println(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9098/buggy-version/src.main.java.net.sf.marineapi.nmea.io.DefaultDataReader.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "8d5b77f29a086d8a7415bb4434127052f25bf648", "Url": "https://api.github.com/repos/thomasverbeke/marine-api", "Date": "2013-04-26T12:41:32Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.terasology.launcher.util.FileUtils.deleteDirectoryContent(tempDirectory); } catch (java.io.IOException e) { org.terasology.launcher.TerasologyLauncher.logger.warn(\"The content of the temp directory can not be deleted! '{}'\", tempDirectory, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2058/buggy-version/src.main.java.org.terasology.launcher.TerasologyLauncher.java", "BodyUseAPI": ["org.terasology.launcher.util.FileUtils.deleteDirectoryContent(java.io.File)"], "Fixed commit": "08dcbae4e6426fffa56e7cc097444f36f74ea319", "Url": "https://api.github.com/repos/mkalb/TerasologyLauncher", "Date": "2014-02-10T21:16:44Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cleanedInt = com.google.common.base.Optional.of(java.lang.Integer.parseInt(cleanedInterpretation)); } catch (java.lang.NumberFormatException e) { cleanedInt = com.google.common.base.Optional.absent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1117/buggy-version/app.src.main.java.com.kamron.pogoiv.scanlogic.PokemonNameCorrector.java", "BodyUseAPI": ["com.google.common.base.Optional.of(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "53e4c78597a9cdf23db67d19b3e1c0b87e406ee0", "Url": "https://api.github.com/repos/thearaks/GoIV", "Date": "2017-09-25T22:36:46Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { boolean initialized = resolver.init(servletContext, classLoader); if (initialized) { resolvers.add(resolver); } } catch (java.lang.ClassFormatError e) { com.ocpsoft.pretty.faces.el.LazyBeanNameFinder.log.warn((((\"Failed to initialize \" + (resolver.getClass().getSimpleName())) + \": \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7609/buggy-version/core.src.main.java.com.ocpsoft.pretty.faces.el.LazyBeanNameFinder.java", "BodyUseAPI": ["java.util.List<com.ocpsoft.pretty.faces.spi.ELBeanNameResolver>.add(com.ocpsoft.pretty.faces.spi.ELBeanNameResolver)", "com.ocpsoft.pretty.faces.spi.ELBeanNameResolver.init(javax.servlet.ServletContext,java.lang.ClassLoader)"], "Fixed commit": "d64d4a1e0e0ec5bef3cc9ea31f79db6d92d05932", "Url": "https://api.github.com/repos/lincolnthree/prettyfaces", "Date": "2011-04-21T04:24:08Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { category = inputs[1]; name = inputs[2]; price = java.lang.Float.parseFloat(inputs[3]); quantity = java.lang.Integer.parseInt(inputs[4]); weight = java.lang.Integer.parseInt(inputs[5]); } catch (java.lang.Exception e) { java.lang.System.out.println(((\"Invalid command (\" + s) + \"). Skipping.\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6882/buggy-version/Assignment3.ShoppingCartDriver.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "f938a3a9fb68b6a7ccbe717a48c813543f6cff3a", "Url": "https://api.github.com/repos/iamryannorton/EE422C-Assignment3", "Date": "2015-01-01T00:17:25Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { select(labels.split(\"\\\\|\"), 1); } catch (org.openqa.selenium.NoSuchElementException e) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4668/buggy-version/app.src.main.java.Main.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "Main.select(java.lang.String[],int)"], "Fixed commit": "f1a354283b3584a0fb21ba4b04edd2e134b2a788", "Url": "https://api.github.com/repos/cameoh/bgking", "Date": "2017-05-28T13:46:55Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((((message == null) || ((player) == null)) || ((plugin) == null)) || (message.isEmpty())) return; if ((((plugin.getLanguageManager()) == null) || ((plugin.getLanguageManager().getPlayersLanguage(player)) == null)) || ((plugin.getLanguageManager().getString(message, plugin.getLanguageManager().getPlayersLanguage(player))) == null)) player.sendMessage(((org.bukkit.ChatColor.GOLD) + message)); player.sendMessage(((org.bukkit.ChatColor.GOLD) + (plugin.getLanguageManager().getString(message, plugin.getLanguageManager().getPlayersLanguage(player))))); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7867/buggy-version/common.src.main.java.com.sk89q.craftbook.bukkit.BukkitPlayer.java", "BodyUseAPI": ["java.lang.String.isEmpty()", "com.sk89q.craftbook.bukkit.BaseBukkitPlugin.getLanguageManager()", "com.sk89q.craftbook.bukkit.BaseBukkitPlugin.getLanguageManager()", "com.sk89q.craftbook.bukkit.BaseBukkitPlugin.getLanguageManager()", "com.sk89q.craftbook.bukkit.BaseBukkitPlugin.getLanguageManager()", "plugin.getLanguageManager().getPlayersLanguage(org.bukkit.entity.Player)", "org.bukkit.entity.Player.sendMessage(((org.bukkit.ChatColor.GOLD) + message))", "com.sk89q.craftbook.bukkit.BaseBukkitPlugin.getLanguageManager()", "com.sk89q.craftbook.bukkit.BaseBukkitPlugin.getLanguageManager()", "org.bukkit.entity.Player.sendMessage(((org.bukkit.ChatColor.GOLD) + (plugin.getLanguageManager().getString(message, plugin.getLanguageManager().getPlayersLanguage(player)))))", "plugin.getLanguageManager().getString(java.lang.String,plugin.getLanguageManager().getPlayersLanguage(player))", "plugin.getLanguageManager().getString(java.lang.String,plugin.getLanguageManager().getPlayersLanguage(player))", "plugin.getLanguageManager().getPlayersLanguage(org.bukkit.entity.Player)", "plugin.getLanguageManager().getPlayersLanguage(org.bukkit.entity.Player)"], "Fixed commit": "49c5822586286c926081c01b292b2ed4340af8d9", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2012-12-24T00:19:16Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getContentResolver().insert(FeaturedGamesListProvider.CONTENT_URI, values); } catch (android.database.SQLException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8891/buggy-version/src.com.injoee.ui.MainActivity.java", "BodyUseAPI": ["getContentResolver().insert(FeaturedGamesListProvider.CONTENT_URI,android.content.ContentValues)", "com.injoee.ui.MainActivity.getContentResolver()"], "Fixed commit": "77456206cffd67ba91563a01078a8cb732b07067", "Url": "https://api.github.com/repos/Joebrave/InjoeeAndroid", "Date": "2014-05-11T06:24:24Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.mDownloadsCursor.unregisterContentObserver(observer); } catch (java.lang.IllegalStateException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8891/buggy-version/src.com.injoee.ui.LoaderAdapter.java", "BodyUseAPI": ["android.database.Cursor.unregisterContentObserver(android.database.ContentObserver)"], "Fixed commit": "77456206cffd67ba91563a01078a8cb732b07067", "Url": "https://api.github.com/repos/Joebrave/InjoeeAndroid", "Date": "2014-05-11T06:24:24Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { getContentResolver().insert(GameDetailProvider.CONTENT_URI, values); } catch (android.database.SQLException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8891/buggy-version/src.com.injoee.ui.GameDetail.java", "BodyUseAPI": ["com.injoee.ui.GameDetail.getContentResolver()", "getContentResolver().insert(GameDetailProvider.CONTENT_URI,android.content.ContentValues)"], "Fixed commit": "77456206cffd67ba91563a01078a8cb732b07067", "Url": "https://api.github.com/repos/Joebrave/InjoeeAndroid", "Date": "2014-05-11T06:24:24Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { morphium.getARHelper().getIdField(o).set(o, new de.caluga.morphium.driver.bson.MorphiumId()); } catch (java.lang.IllegalAccessException e) { throw new java.lang.RuntimeException(\"Could not sett id-string\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/931/buggy-version/src.de.caluga.morphium.writer.MorphiumWriterImpl.java", "BodyUseAPI": ["morphium.getARHelper().getIdField(o).set(java.lang.Object,de.caluga.morphium.driver.bson.MorphiumId)", "de.caluga.morphium.writer.Morphium.getARHelper()", "morphium.getARHelper().getIdField(java.lang.Object)"], "Fixed commit": "48179be488fe26a332e894a48154c51ff178f49c", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2017-04-13T14:39:09Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { newval = n.eval(c); } catch (com.mtao.challengenfactorial.BadIntegerDivisionError E) { resetCard(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8484/buggy-version/src.com.mtao.challengenfactorial.SimpleView.java", "BodyUseAPI": ["com.mtao.challengenfactorial.Node.eval(com.mtao.challengenfactorial.Card)"], "Fixed commit": "855f04689990a6887f27aabff8c5cd8a2349c4c3", "Url": "https://api.github.com/repos/mtao/ChallengeNFactorial", "Date": "2013-03-13T22:13:46Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { currentTaskId = getExternalTaskId(in); currentTask = getExternalTask(currentTaskId); } catch (final org.camunda.bpm.camel.component.externaltasks.NoSuchExternalTaskException e) { currentTask = null; currentTaskId = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9251/buggy-version/camunda-bpm-camel-common.src.main.java.org.camunda.bpm.camel.component.externaltasks.TaskProcessor.java", "BodyUseAPI": ["org.camunda.bpm.camel.component.externaltasks.TaskProcessor.getExternalTaskId(org.apache.camel.Message)", "org.camunda.bpm.camel.component.externaltasks.TaskProcessor.getExternalTask(java.lang.String)"], "Fixed commit": "f5b4481022432d187e63cada47ca8e50e4d9c814", "Url": "https://api.github.com/repos/camunda/camunda-bpm-camel", "Date": "2017-11-27T13:48:35Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { socket.connect(new java.net.InetSocketAddress(address, port), 1000); socket.setSoTimeout(1000); } catch (java.io.IOException e) { interactionEnded(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7068/buggy-version/app.src.main.java.com.android.gscaparrotti.bendermobile.ServerInteractor.java", "BodyUseAPI": ["java.net.Socket.setSoTimeout(int)", "java.net.Socket.connect(java.net.InetSocketAddress,int)"], "Fixed commit": "3d799161777c00bc2f42c578f846aaeb640ff327", "Url": "https://api.github.com/repos/gscaparrotti/BenderMobile", "Date": "2016-05-14T16:57:35Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { source = com.diylisp.Repl.readExpression(); com.diylisp.Repl.print(com.diylisp.Interpreter.interpret(source, env).toString()); } catch (com.diylisp.exception.ParseException p) { com.diylisp.Repl.print((\"ParseException: \" + (p.getMessage()))); } catch (com.diylisp.exception.LispException l) { com.diylisp.Repl.print((\"LispException: \" + (l.getMessage()))); } catch (java.lang.Exception e) { com.diylisp.Repl.print(\"Java is showing through..\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7396/buggy-version/src.com.diylisp.Repl.java", "BodyUseAPI": ["com.diylisp.Repl.print(com.diylisp.Interpreter.interpret(source, env).toString())", "com.diylisp.Interpreter.interpret(java.lang.String,com.diylisp.model.Environment)", "com.diylisp.Repl.readExpression()", "com.diylisp.Interpreter.interpret(source, env).toString()"], "Fixed commit": "f971985024ec73ef886ef6823ca5a990323157a3", "Url": "https://api.github.com/repos/bendiksolheim/diy-lisp-java", "Date": "2015-08-23T11:11:12Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return consumers.get(getNextConsumerIndex()).onMessage(message); } catch (java.lang.IndexOutOfBoundsException ignored) { return Ack.HALT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/331/buggy-version/src.main.java.com.orctom.rmq.Queue.java", "BodyUseAPI": ["com.orctom.rmq.Queue.getNextConsumerIndex()", "consumers.get(getNextConsumerIndex()).onMessage(com.orctom.rmq.Message)", "java.util.List<com.orctom.rmq.RMQConsumer>.get(int)"], "Fixed commit": "c9136e8767d1b3b6747eca5f83ad8bbebef6c039", "Url": "https://api.github.com/repos/orctom/rmq", "Date": "2017-01-05T11:58:22Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.content.pm.ApplicationInfo runtimeInfo = context.getPackageManager().getApplicationInfo(\"Mono.Android.DebugRuntime\", 0); mono.mono.MonoPackageManager.LoadApplication(context, runtimeInfo, (apiInfo != null ? new java.lang.String[]{ runtimeInfo.sourceDir, apiInfo.sourceDir, context.getApplicationInfo().sourceDir } : new java.lang.String[]{ runtimeInfo.sourceDir, context.getApplicationInfo().sourceDir })); } catch (mono.android e) { throw new java.lang.RuntimeException(\"Unable to find application Mono.Android.DebugRuntime!\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3752/buggy-version/LanguageKing.LanguageKing.Android.obj.Debug.android.src.mono.MonoRuntimeProvider.java", "BodyUseAPI": ["android.content.Context.getApplicationInfo()", "android.content.Context.getPackageManager()", "android.content.Context.getApplicationInfo()", "context.getPackageManager().getApplicationInfo(java.lang.String,int)", "mono.mono.MonoPackageManager.LoadApplication(android.content.Context,android.content.pm.ApplicationInfo,(apiInfo != null ? new java.lang.String[]{ runtimeInfo.sourceDir, apiInfo.sourceDir, context.getApplicationInfo().sourceDir } : new java.lang.String[]{ runtimeInfo.sourceDir, context.getApplicationInfo().sourceDir }))"], "Fixed commit": "e785d4c352c800ee42fd800394a32f09ac6ad379", "Url": "https://api.github.com/repos/cserje/LanguageApp", "Date": "2017-05-06T15:29:04Z"},
{"Line": "=>1074", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { cacheRepositoryService.deleteObject(objectTypeClass, oid, result); } catch (com.evolveum.midpoint.model.impl.lens.ObjectNotFoundException e) { com.evolveum.midpoint.model.impl.lens.ChangeExecutor.LOGGER.trace(\"Attempt to delete object {} ({}) that is already gone\", oid, objectTypeClass); result.muteLastSubresultError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/7769/buggy-version/model.model-impl.src.main.java.com.evolveum.midpoint.model.impl.lens.ChangeExecutor.java", "BodyUseAPI": ["com.evolveum.midpoint.repo.api.RepositoryService.deleteObject(java.lang.Class<T>,java.lang.String,com.evolveum.midpoint.schema.result.OperationResult)"], "Fixed commit": "a58fdf6e589086b54e169694527520ac2d043d65", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2015-11-23T18:52:07Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { attributes.add(getRuntime().getCallerFactory().createAttribute(IJAMConst.ATTRIBUTE_NAME_LASTNAME, de.janrufmonitor.util.string.StringEscapeUtils.unescapeHtml(pe.getName()))); } catch (java.lang.Exception ex) { m_logger.log(java.util.logging.Level.WARNING, ex.getMessage(), ex); attributes.add(getRuntime().getCallerFactory().createAttribute(IJAMConst.ATTRIBUTE_NAME_LASTNAME, pe.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/647/buggy-version/modules.fritzbox.src.de.janrufmonitor.repository.FritzBoxPhonebookManager.java", "BodyUseAPI": ["de.janrufmonitor.fritzbox.firmware.AbstractFritzBoxFirmware.PhonebookEntry.getName()", "de.janrufmonitor.runtime.IRuntime.getCallerFactory()", "de.janrufmonitor.util.string.StringEscapeUtils.unescapeHtml(pe.getName())", "getRuntime().getCallerFactory().createAttribute(IJAMConst.ATTRIBUTE_NAME_LASTNAME,de.janrufmonitor.util.string.StringEscapeUtils.unescapeHtml(pe.getName()))", "de.janrufmonitor.framework.IAttributeMap.add(getRuntime().getCallerFactory().createAttribute(IJAMConst.ATTRIBUTE_NAME_LASTNAME, de.janrufmonitor.util.string.StringEscapeUtils.unescapeHtml(pe.getName())))", "de.janrufmonitor.repository.FritzBoxPhonebookManager.1.getRuntime()"], "Fixed commit": "0ce9500440fc5e7d05bd341b5a62cfbf3fc03878", "Url": "https://api.github.com/repos/e-tobi/janrufmonitor", "Date": "2011-08-10T19:58:43Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mNsdManager.unregisterService(mRegistrationListener); } catch (java.lang.IllegalArgumentException e) { android.util.Log.d(ru.mit.au.spb.olga.catendar.NsdHelper.TAG, \"Trying to unregister unregistered registration listener.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5842/buggy-version/app.src.main.java.ru.mit.au.spb.olga.catendar.NsdHelper.java", "BodyUseAPI": ["android.net.nsd.NsdManager.unregisterService(NsdManager.RegistrationListener)"], "Fixed commit": "0d496ea5c1946108c56dfd85cf6dae8179e2e378", "Url": "https://api.github.com/repos/olga24912/Catendar", "Date": "2015-12-16T16:55:18Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.terasology.logic.inventory.InventoryUtils.moveItem(request.getInstigator(), request.getFromInventory(), request.getFromSlot(), request.getToInventory(), request.getToSlot()); } finally { entity.send(new org.terasology.logic.inventory.events.InventoryChangeAcknowledgedRequest(request.getChangeId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/4165/buggy-version/engine.src.main.java.org.terasology.logic.inventory.InventoryAuthoritySystem.java", "BodyUseAPI": ["org.terasology.logic.inventory.InventoryUtils.moveItem(request.getInstigator(),request.getFromInventory(),request.getFromSlot(),request.getToInventory(),request.getToSlot())", "org.terasology.logic.inventory.events.MoveItemRequest.getFromInventory()", "org.terasology.logic.inventory.events.MoveItemRequest.getToSlot()", "org.terasology.logic.inventory.events.MoveItemRequest.getInstigator()", "org.terasology.logic.inventory.events.MoveItemRequest.getFromSlot()", "org.terasology.logic.inventory.events.MoveItemRequest.getToInventory()"], "Fixed commit": "02d0c741c7c77e86016ec912989097880fe63c37", "Url": "https://api.github.com/repos/MarcinSc/Terasology", "Date": "2014-04-22T23:44:48Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.net.URLDecoder.decode(job.getString(\"querystring\"), \"utf-8\"); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/305/buggy-version/src.main.java.nl.knmi.adaguc.services.joblist.JobListRequestMapper.java", "BodyUseAPI": ["java.net.URLDecoder.decode(job.getString(\"querystring\"),java.lang.String)", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "890ec3017d6bfc01e1836c892f3fc2e2d21eb1c6", "Url": "https://api.github.com/repos/ernstdevreedeKNMI/adaguc-services", "Date": "2017-06-22T14:03:22Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { hasPermission = authorizationServices.hasPermissionTechUser(info.getIdentifier(), remoteAuthenticationPermissionName, applicationName); } catch (java.lang.NullPointerException e) { hasPermission = false; org.openur.remoting.resource.secure_api.AuthenticationFilter.LOG.error(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6068/buggy-version/open_ur-remoting.open_ur-remoting-services-rest.src.main.java.org.openur.remoting.resource.secure_api.AuthenticationFilter.java", "BodyUseAPI": ["org.openur.module.integration.security.shiro.UsernamePwAuthenticationInfo.getIdentifier()", "org.openur.module.service.security.IAuthorizationServices.hasPermissionTechUser(info.getIdentifier(),java.lang.String,java.lang.String)"], "Fixed commit": "f288a0b3b9da4f41b15b9b02608a86b9dfeddff8", "Url": "https://api.github.com/repos/Uwe-Fuchs/open-ur", "Date": "2016-06-25T09:27:40Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { firstOperand = java.lang.Double.parseDouble(tokens[0]); if ((tokens.length) > 2) { secondOperand = java.lang.Double.parseDouble(tokens[2]); }else { return firstOperand; } final com.riotgames.sample.Operator operator = com.riotgames.sample.Operator.findOperator(tokens[1]); return operator.evaluate(firstOperand, secondOperand); } catch (java.lang.NumberFormatException e) { java.lang.System.out.println(\"Wrong input : Fist one must be digit\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5918/buggy-version/src.main.java.com.riotgames.sample.CalcApp.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "com.riotgames.sample.Operator.evaluate(double,double)", "java.lang.Double.parseDouble(java.lang.String)", "com.riotgames.sample.Operator.findOperator(java.lang.String)"], "Fixed commit": "cccae69d8fdabb45a86220cae1d4c42b2c55bded", "Url": "https://api.github.com/repos/Park-JunHyung/let-us-start", "Date": "2017-04-04T05:46:10Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.reflect.Field preferenceLayoutsField = android.support.v7.preference.PreferenceGroupAdapter.class.getDeclaredField(\"mPreferenceLayouts\"); preferenceLayoutsField.setAccessible(true); mPreferenceLayouts = ((java.util.List) (preferenceLayoutsField.get(this))); getReflectionFields(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/6947/buggy-version/preference-v7.src.main.java.com.takisoft.fix.support.v7.preference.PreferenceGroupAdapter.java", "BodyUseAPI": ["java.lang.reflect.Field.setAccessible(boolean)", "java.lang.Class.getDeclaredField(java.lang.String)", "com.takisoft.fix.support.v7.preference.PreferenceGroupAdapter.getReflectionFields()", "java.lang.reflect.Field.get(com.takisoft.fix.support.v7.preference.PreferenceGroupAdapter)"], "Fixed commit": "a68bc0606cd35e872c50a5b2eb2644078e5eb483", "Url": "https://api.github.com/repos/Gericop/Android-Support-Preference-V7-Fix", "Date": "2016-07-20T21:07:16Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.apache.axis2.engine.AxisEngine.send(mainOutMsgContext); } finally { mainOutMsgContext.getAxisService().getSchema().removeAll(tenantOutMsgContext.getAxisService().getSchema()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1639/buggy-version/core.org.wso2.carbon.core.src.main.java.org.wso2.carbon.core.multitenancy.MultitenantMessageReceiver.java", "BodyUseAPI": ["org.apache.axis2.engine.AxisEngine.send(org.apache.axis2.context.MessageContext)"], "Fixed commit": "efef1380ea16c2fff321a59e48087ceb65ea2c1e", "Url": "https://api.github.com/repos/madhawa-gunasekara/carbon4-kernel", "Date": "2015-08-06T01:37:28Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { setDefaultModule(metaData.getDefaultModuleName()); } catch (edu.mines.acmX.exhibit.module_management.ModuleLoadException e) { edu.mines.acmX.exhibit.module_management.ModuleManager.logger.fatal(\"Could not load the default module\"); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/216/buggy-version/src.main.java.edu.mines.acmX.exhibit.module_management.ModuleManager.java", "BodyUseAPI": ["edu.mines.acmX.exhibit.module_management.ModuleManagerMetaData.getDefaultModuleName()", "edu.mines.acmX.exhibit.module_management.ModuleManager.setDefaultModule(metaData.getDefaultModuleName())"], "Fixed commit": "c5ae16e5da8b6cfe92f2b1509884a3446ee971ee", "Url": "https://api.github.com/repos/ColoradoSchoolOfMines/interface_sdk", "Date": "2013-06-03T19:19:38Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { com.intellij.openapi.util.io.FileUtil.copy(inputStream, outputStream); return file; } finally { inputStream.close(); outputStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/5260/buggy-version/src.org.elixir_lang.exunit.ElixirModules.java", "BodyUseAPI": ["com.intellij.openapi.util.io.FileUtil.copy(java.io.BufferedInputStream,java.io.BufferedOutputStream)"], "Fixed commit": "61d0ff3f57abbcf98cef1decf0bab9e2ef8e5917", "Url": "https://api.github.com/repos/JakeBecker/intellij-elixir", "Date": "2016-10-28T01:09:28Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { de.enough.glaze.style.Url url = new de.enough.glaze.style.Url(descriptor.getUrl()); java.io.InputStream stream = url.openStream(); data = de.enough.glaze.content.helper.StreamHelper.toBytes(stream); } catch (java.lang.Exception e) { throw new java.io.IOException((\"unable to load \" + (descriptor.getUrl()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/8473/buggy-version/src.core.de.enough.glaze.content.source.impl.HttpContentSource.java", "BodyUseAPI": ["de.enough.glaze.style.Url.openStream()", "de.enough.glaze.content.helper.StreamHelper.toBytes(java.io.InputStream)", "de.enough.glaze.content.ContentDescriptor.getUrl()"], "Fixed commit": "9b52472c51073d7a20050c636d5b6b93d3b47214", "Url": "https://api.github.com/repos/Enough-Software/glaze", "Date": "2011-12-09T09:34:16Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { items.add(null); io.dflabs.lib.adapters.RecyclerListAdapter.notifyDataSetChanged(); } catch (java.lang.Exception ignored) { items.remove(((items.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/9084/buggy-version/dflabslib.src.main.java.io.dflabs.lib.adapters.RecyclerListAdapter.java", "BodyUseAPI": ["io.dflabs.lib.adapters.RecyclerListAdapter.notifyDataSetChanged()", "java.util.List<T>.add(<nulltype>)"], "Fixed commit": "3a743c4123dda11e6055eaefcf1a49abb626fc59", "Url": "https://api.github.com/repos/danigarciaalva/Dragonfly-Labs-Library", "Date": "2016-02-27T05:12:48Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { configuration = new java.lang.String(serializedConfiguration, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException ex) { throw new java.lang.RuntimeException(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/200/buggy-version/commons-app.src.main.java.cz.cuni.mff.xrg.odcs.commons.app.dpu.DPURecord.java", "BodyUseAPI": [], "Fixed commit": "1d8ce797ffffd1392e6d204d1f9a84a48b6791f1", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2014-08-12T13:15:57Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { f = new com.hackbulgaria.corejava.AboutDialog(new javax.swing.JFrame()); } catch (java.awt.HeadlessException e1) { e1.printStackTrace(); } catch (java.io.IOException e1) { e1.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/2187/buggy-version/src.com.hackbulgaria.corejava.GUI.java", "BodyUseAPI": [], "Fixed commit": "91e391f02d066ebef0fc991b0f7db541bfb20488", "Url": "https://api.github.com/repos/mirena92/2048", "Date": "2014-07-16T14:17:07Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { organizeTitleLbl.getLabelField().getElement().setAttribute(\"style\", \"width: 336px !important;\"); } catch (java.lang.Exception ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/1701/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.shelf.collection.folders.FolderItemTabView.java", "BodyUseAPI": ["organizeTitleLbl.getLabelField().getElement()", "organizeTitleLbl.getLabelField().getElement().setAttribute(java.lang.String,java.lang.String)", "org.ednovo.gooru.client.uc.EditableLabelUc.getLabelField()"], "Fixed commit": "bae1204f9732b377898f0f094a4414d7af603aa7", "Url": "https://api.github.com/repos/suryanarayanakb/Gooru-Web", "Date": "2015-03-29T04:26:19Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { puf.m2.hms.model.Patient patient = new puf.m2.hms.model.Patient(java.lang.Integer.parseInt(cboPatientID.getSelectedItem().toString())); for (puf.m2.hms.model.MedicalRecord medicalRecord : puf.m2.hms.model.MedicalRecord.loadMedicalRecord(patient)) { if ((medicalRecord.getPatient().getId()) == (java.lang.Integer.parseInt(cboPatientID.getSelectedItem().toString()))) cboMedicalRecordID.addItem(medicalRecord.getId()); } } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V56/3381/buggy-version/src.main.java.puf.m2.hms.view.UpdateDiagnosis.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "puf.m2.hms.model.MedicalRecord.getPatient()", "javax.swing.JComboBox.addItem(medicalRecord.getId())", "javax.swing.JComboBox.getSelectedItem()", "puf.m2.hms.model.MedicalRecord.loadMedicalRecord(puf.m2.hms.model.Patient)", "java.lang.Object.toString()", "java.lang.Integer.parseInt(java.lang.String)", "medicalRecord.getPatient().getId()", "javax.swing.JComboBox.getSelectedItem()", "java.lang.Object.toString()", "puf.m2.hms.model.MedicalRecord.getId()"], "Fixed commit": "eefdbfdd32e03a1d5d3d2d5fed86994cee25ebad", "Url": "https://api.github.com/repos/pufm2/hms", "Date": "2012-05-06T03:23:27Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((t.size()) > 0) state.enqueue(t.getStringByField(messageFieldName)); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3261/buggy-version/src.main.java.com.github.quintona.KafkaStateUpdater.java", "BodyUseAPI": ["com.github.quintona.KafkaState.enqueue(t.getStringByField(messageFieldName))", "storm.trident.tuple.TridentTuple.getStringByField(java.lang.String)", "storm.trident.tuple.TridentTuple.size()"], "Fixed commit": "39033eb905203177be6c1f9c25206d2961ae1588", "Url": "https://api.github.com/repos/quintona/trident-kafka-push", "Date": "2013-05-11T03:02:25Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { deltaRange = new ucar.ma2.Range(0, delta); } catch (ucar.ma2.InvalidRangeException e) { throw new gov.usgs.cida.gdp.utilities.exception.GeoTiffUtilException(gov.usgs.cida.gdp.utilities.exception.GeoTiffUtilExceptionID.GENERAL_EXCEPTION, \"GeoTiffUtils\", \"generateGeoTiffZipFromGrid\", ((((((\"Unable to generate Subset time range \" + \"for dataset [\") + (gridDataset.getLocationURI())) + \"] and variable [\") + gridVariable) + \"]. Exception: \") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4660/buggy-version/gdp-common-utilities.src.main.java.gov.usgs.cida.gdp.utilities.GeoTiffUtils.java", "BodyUseAPI": [], "Fixed commit": "adbcf06cf659ecbafb078aa54b94ed28f6abeaef", "Url": "https://api.github.com/repos/USGS-CIDA/geo-data-portal", "Date": "2015-09-14T14:54:33Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { parentSensor.sendReadCommand(org.sensorhub.impl.sensor.bno055.Bno055Output.READ_QUAT_CMD); } catch (java.io.IOException e) { dataIn.readByte(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2238/buggy-version/sensorhub-driver-bno055.src.main.java.org.sensorhub.impl.sensor.bno055.Bno055Output.java", "BodyUseAPI": ["org.sensorhub.impl.sensor.bno055.Bno055Output.sendReadCommand(byte[])"], "Fixed commit": "8c4b1d13bd149fdbd32450e6084e65307cdb1115", "Url": "https://api.github.com/repos/opensensorhub/osh-sensors", "Date": "2016-04-25T00:07:49Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { number = java.lang.Long.parseLong(str.replace(\",\", \"\").replace(\" \", \"\")); } catch (java.lang.NumberFormatException e) { e.printStackTrace(); number = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3367/buggy-version/app.src.main.java.com.by.alex.depositcalcupd.Formatter.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "96a9e7264175f964909e842e4867a6cd1ab0a2db", "Url": "https://api.github.com/repos/Alexandrfromminsk/DepositCalcUpd", "Date": "2015-06-03T10:29:12Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.setBookPubsnumber(java.lang.Integer.parseInt(fieldValue)); } catch (final java.lang.NumberFormatException ex) { this.setBookPubsnumber(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8183/buggy-version/src.main.java.com.redhat.ecs.services.docbookcompiling.DocbookBuildingOptions.java", "BodyUseAPI": ["com.redhat.ecs.services.docbookcompiling.DocbookBuildingOptions.setBookPubsnumber(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "c35165cc3eb5a298e57ed087af1661aeec445db6", "Url": "https://api.github.com/repos/mcasperson/Common-utilities", "Date": "2012-06-21T01:55:58Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { s = java.net.URLDecoder.decode(html).replace(\"<br>\", \"\\n\").replace(\"<br />\", \"\\n\"); } catch (java.lang.Exception e) { s = html.replace(\"<br>\", \"\\n\").replace(\"<br />\", \"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/839/buggy-version/src.fr.xtof54.jsgo.Reviews.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.net.URLDecoder.decode(java.lang.String)"], "Fixed commit": "9eed4f45d0b49665a9912eea9ba189b2c23d9600", "Url": "https://api.github.com/repos/cerisara/DragonGoApp", "Date": "2014-04-20T07:23:28Z"},
{"Line": "=>1163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((java.lang.Long.parseLong(edu.uml.cs.isense.amusement.AmusementPark.sampleRate.getText().toString())) < 200) { edu.uml.cs.isense.amusement.AmusementPark.sampleRate.setError(\"Interval Must be >= 200\"); pass = false; } } catch (java.lang.NumberFormatException e) { pass = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4405/buggy-version/Android.Canobie_Physics.src.edu.uml.cs.isense.amusement.AmusementPark.java", "BodyUseAPI": ["edu.uml.cs.isense.amusement.AmusementPark.sampleRate.getText().toString()", "java.lang.Long.parseLong(edu.uml.cs.isense.amusement.AmusementPark.sampleRate.getText().toString())", "android.widget.EditText.setError(java.lang.String)", "android.widget.EditText.getText()"], "Fixed commit": "91ed0c88b7a4c56083305f5f22b5039e39eb98b2", "Url": "https://api.github.com/repos/isenseDev/iSENSE-Hardware", "Date": "2012-07-31T13:10:57Z"},
{"Line": "=>1027", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { block = new com.mondego.models.Block(line); } catch (java.lang.NumberFormatException e) { com.mondego.indexbased.SearchManager.logger.warn((\"parse error in line: \" + line)); com.mondego.indexbased.SearchManager.logger.warn(\"ignoring this line, moving to the next one\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5885/buggy-version/clone-detector.src.com.mondego.indexbased.SearchManager.java", "BodyUseAPI": [], "Fixed commit": "6af0af0e88c84a72e545ce735939fdf1cd261f90", "Url": "https://api.github.com/repos/Mondego/SourcererCC", "Date": "2017-12-07T21:27:14Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { familySize = input.nextDouble(); } catch (java.util.InputMismatchException e) { java.lang.System.out.println(\"You entered invalid input. Please try again.\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2164/buggy-version/IBRCalc.java", "BodyUseAPI": ["java.util.Scanner.nextDouble()"], "Fixed commit": "2361c67d5b7535459fbb3124809a910a4f1c2f6b", "Url": "https://api.github.com/repos/mgunt/IBRCalc", "Date": "2016-11-22T09:49:26Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { AGI = input.nextDouble(); } catch (java.util.InputMismatchException e) { java.lang.System.out.println(\"You entered invalid input. Please try again.\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2164/buggy-version/IBRCalc.java", "BodyUseAPI": ["java.util.Scanner.nextDouble()"], "Fixed commit": "2361c67d5b7535459fbb3124809a910a4f1c2f6b", "Url": "https://api.github.com/repos/mgunt/IBRCalc", "Date": "2016-11-22T09:49:26Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { familySize = input.nextDouble(); } catch (java.util.InputMismatchException e) { java.lang.System.out.println(\"You entered invalid input. Please try again.\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2164/buggy-version/IBRCalc.java", "BodyUseAPI": ["java.util.Scanner.nextDouble()"], "Fixed commit": "2361c67d5b7535459fbb3124809a910a4f1c2f6b", "Url": "https://api.github.com/repos/mgunt/IBRCalc", "Date": "2016-11-22T09:49:26Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { AGI = input.nextDouble(); } catch (java.util.InputMismatchException e) { java.lang.System.out.println(\"You entered invalid input. Please try again.\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2164/buggy-version/IBRCalc.java", "BodyUseAPI": ["java.util.Scanner.nextDouble()"], "Fixed commit": "2361c67d5b7535459fbb3124809a910a4f1c2f6b", "Url": "https://api.github.com/repos/mgunt/IBRCalc", "Date": "2016-11-22T09:49:26Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { if (pearl instanceof com.untamedears.humbug.CustomNMSEntityEnderPearl) gravity = ((com.untamedears.humbug.CustomNMSEntityEnderPearl) (pearl)).y_adjust_; } catch (java.lang.NoClassDefFoundError e) { isaac.bastion.Bastion.getPlugin().getLogger().info(\"Humbug not found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7962/buggy-version/Bastion.src.isaac.bastion.manager.EnderPearlManager.java", "BodyUseAPI": [], "Fixed commit": "d377049b31b06796efeda763c3d37e8c0f5adb3f", "Url": "https://api.github.com/repos/spaceFountain/Bastion", "Date": "2014-01-01T02:59:30Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { success = installSnapshot(peer); } finally { lock.lock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/28/buggy-version/raft-java-core.src.main.java.com.github.wenweihu86.raft.RaftNode.java", "BodyUseAPI": ["com.github.wenweihu86.raft.RaftNode.installSnapshot(com.github.wenweihu86.raft.Peer)"], "Fixed commit": "132e237b8288a9ed0bb7f8901bdd31f5dfd38c41", "Url": "https://api.github.com/repos/wenweihu86/raft-java", "Date": "2017-05-27T14:35:32Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { xreference = xrefGenerator.generateXref(filename, paths.isShortFilePaths()); } catch (java.lang.Exception ex) { xreference = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2972/buggy-version/patch-diff-report-tool.src.main.java.com.github.checkstyle.site.SiteGenerator.java", "BodyUseAPI": ["com.github.checkstyle.site.XrefGenerator.generateXref(java.lang.String,paths.isShortFilePaths())", "com.github.checkstyle.data.CliPaths.isShortFilePaths()"], "Fixed commit": "3c71d95cddf52c24d911ffe87026a3a9860cdddf", "Url": "https://api.github.com/repos/rnveach/contribution", "Date": "2017-05-10T01:34:29Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { name = javax.swing.JOptionPane.showInputDialog(AnimeIndex.wishlistDialog, \"Nome Anime :\", (\"Aggiungi alla \" + listName), javax.swing.JOptionPane.QUESTION_MESSAGE).trim(); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6753/buggy-version/src.util.window.WishlistDialog.java", "BodyUseAPI": ["javax.swing.JOptionPane.showInputDialog(AnimeIndex.wishlistDialog,java.lang.String,java.lang.String,int)", "java.lang.String.trim()"], "Fixed commit": "32e23f7e5db14ff08af648624f62d1ef95db8fa9", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2016-07-14T17:18:48Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { applicationParameters = getParameters().getNamed(); } catch (java.lang.Exception e) { applicationParameters = new java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5960/buggy-version/src.main.java.seedu.address.MainApp.java", "BodyUseAPI": ["seedu.address.MainApp.getParameters()", "getParameters().getNamed()"], "Fixed commit": "51d82dea5841985b015b84f3d0dcb3c2d34f67d8", "Url": "https://api.github.com/repos/CS2103JAN2017-T16-B2/main", "Date": "2017-03-23T10:00:18Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { generalTaskBox.read(reader, this); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5582/buggy-version/V0.0.src.org.eclipse.wb.swt.GUI.java", "BodyUseAPI": ["javax.swing.JTextArea.read(java.io.BufferedReader,org.eclipse.wb.swt.GUI)"], "Fixed commit": "c3608a6f951ac667b267b1bbc85a0b49708bd38f", "Url": "https://api.github.com/repos/cs2103Taug2014-t09-2j/main", "Date": "2014-10-01T16:19:44Z"},
{"Line": "=>712", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { missingBox.read(reader, this); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5582/buggy-version/V0.0.src.org.eclipse.wb.swt.GUI.java", "BodyUseAPI": ["javax.swing.JTextArea.read(java.io.BufferedReader,org.eclipse.wb.swt.GUI)"], "Fixed commit": "c3608a6f951ac667b267b1bbc85a0b49708bd38f", "Url": "https://api.github.com/repos/cs2103Taug2014-t09-2j/main", "Date": "2014-10-01T16:19:44Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pr_pane = new AMBILIGHT_OPTIONS.Prev_Panel(calc.calculateColours()); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/343/buggy-version/src.AMBILIGHT_OPTIONS.Ambi_Option_Panel.java", "BodyUseAPI": ["AMBILIGHT_OPTIONS.Color_Calculator.calculateColours()"], "Fixed commit": "b67cf8b259e4b61c02232ddde08bc86b7d806405", "Url": "https://api.github.com/repos/uplukaszp/Ambilight", "Date": "2017-02-11T12:16:57Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pr_pane.updateColours(calc.calculateColours()); repaint(); MAINCLASSES.SerialController.sendColors(pr_pane.colours); } catch (java.lang.Exception e) { e.printStackTrace(); t.cancel(); t = new java.util.Timer(); t.schedule(new AMBILIGHT_OPTIONS.Ambi_Option_Panel.Trigger(), 0, ((int) (1000 / (opt_pane.getSpeed())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/343/buggy-version/src.AMBILIGHT_OPTIONS.Ambi_Option_Panel.java", "BodyUseAPI": ["AMBILIGHT_OPTIONS.Prev_Panel.updateColours(calc.calculateColours())", "AMBILIGHT_OPTIONS.Color_Calculator.calculateColours()", "AMBILIGHT_OPTIONS.Ambi_Option_Panel.Trigger.repaint()", "MAINCLASSES.SerialController.sendColors(pr_pane.colours)"], "Fixed commit": "b67cf8b259e4b61c02232ddde08bc86b7d806405", "Url": "https://api.github.com/repos/uplukaszp/Ambilight", "Date": "2017-02-11T12:16:57Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return super.onTouchEvent(ev); } catch (java.lang.IndexOutOfBoundsException ingored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6671/buggy-version/hipda.src.main.java.net.jejer.hipda.ui.XListView.java", "BodyUseAPI": ["android.widget.ListView.onTouchEvent(android.view.MotionEvent)"], "Fixed commit": "77d9c01c9b4dec9db77fcfc7e071b47aa3fc6aa1", "Url": "https://api.github.com/repos/GreenSkinMonster/hipda", "Date": "2015-11-23T02:53:55Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.openmrs.api.context.Context.getFormService().saveFormResource(resource); } catch (java.lang.Exception ex) { session.setAttribute(WebConstants.OPENMRS_ERROR_ATTR, \"Error while submitting form, no or invalid file format. Please try again (make sure you select a text file).\"); return ((((\"redirect:addFormResource.form?formId=\" + (resource.getForm().getId())) + \"&datatype=\") + (resource.getDatatypeClassname())) + \"&handler=\") + (resource.getPreferredHandlerClassname()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5341/buggy-version/web.src.main.java.org.openmrs.web.controller.form.FormResourceController.java", "BodyUseAPI": ["org.openmrs.api.context.Context.getFormService().saveFormResource(org.openmrs.FormResource)", "org.openmrs.api.context.Context.getFormService()"], "Fixed commit": "82179e39125c17e5d70eb2492640b9ff3d2c00bf", "Url": "https://api.github.com/repos/ivange94/openmrs-core", "Date": "2015-08-08T14:53:47Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { expression.evaluate(); } catch (org.ietr.preesm.experiment.model.expression.ExpressionEvaluationException e) { final org.eclipse.graphiti.tb.ImageDecorator imageRenderingDecorator = new org.eclipse.graphiti.tb.ImageDecorator(org.eclipse.graphiti.platform.IPlatformImageConstants.IMG_ECLIPSE_ERROR_TSK); imageRenderingDecorator.setMessage(\"Problems in parameter resolution\"); imageRenderingDecorator.setX((((pe.getGraphicsAlgorithm().getWidth()) / 2) - 8)); imageRenderingDecorator.setY(8); return imageRenderingDecorator; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4527/buggy-version/plugins.org.ietr.preesm.ui.src.org.ietr.preesm.ui.pimm.decorators.ParameterDecorators.java", "BodyUseAPI": ["org.ietr.preesm.experiment.model.pimm.Expression.evaluate()"], "Fixed commit": "21737c8160698f48165f1edb0fd9307a87300371", "Url": "https://api.github.com/repos/preesm/preesm", "Date": "2017-07-05T12:56:14Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { expression.evaluate(); } catch (org.ietr.preesm.experiment.model.expression.ExpressionEvaluationException e) { imageRenderingDecorator.setX((((pe.getGraphicsAlgorithm().getWidth()) / 2) - 8)); imageRenderingDecorator.setY(1); return imageRenderingDecorator; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4527/buggy-version/plugins.org.ietr.preesm.ui.src.org.ietr.preesm.ui.pimm.decorators.DelayDecorators.java", "BodyUseAPI": ["org.ietr.preesm.experiment.model.pimm.Expression.evaluate()"], "Fixed commit": "21737c8160698f48165f1edb0fd9307a87300371", "Url": "https://api.github.com/repos/preesm/preesm", "Date": "2017-07-05T12:56:14Z"},
{"Line": "=>2041", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (cleanWorkspace()) { return new org.kohsuke.stapler.HttpRedirect(\".\"); }else { return new org.kohsuke.stapler.ForwardToView(this, \"wipeOutWorkspaceBlocked.jelly\"); } } catch (java.io.IOException e) { org.kohsuke.stapler.ForwardToView resp = new org.kohsuke.stapler.ForwardToView(this, \"error.jelly\"); resp.with(\"message\", hudson.model.Messages._AbstractProject_UnableWipeOut()); resp.with(\"pre\", false); resp.with(\"exception\", e); return resp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2270/buggy-version/hudson-core.src.main.java.hudson.model.AbstractProject.java", "BodyUseAPI": ["hudson.model.AbstractProject<P, R>.cleanWorkspace()"], "Fixed commit": "ac4c87bb38268fa25efba374f0acf524f11b1d17", "Url": "https://api.github.com/repos/antkozak/hudson", "Date": "2011-12-29T14:56:22Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { modelST.setAttribute(\"content\", parser.const_list()); } catch (org.antlr.runtime.RecognitionException e) { throw new fr.lip6.move.coloane.interfaces.exceptions.ExtensionException(\"Fail to parse Declarative part\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2847/buggy-version/extensions.exportToGML.src.fr.lip6.move.coloane.extensions.exporttogml.CosmosExport.java", "BodyUseAPI": ["org.antlr.stringtemplate.StringTemplate.setAttribute(java.lang.String,parser.const_list())", "main.antlr3.fr.lip6.move.coloane.extension.DeclarativeParserCosmosParser.const_list()"], "Fixed commit": "018473184951e0af2baec6bb6934904b22540eef", "Url": "https://api.github.com/repos/lip6/Coloane", "Date": "2011-10-25T07:52:51Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.w4.parser.processor.W4Processor.parse(this, promise); } catch (java.lang.Throwable e) { W4Parser.LOG.error(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7450/buggy-version/src.main.java.com.w4.parser.client.W4Response.java", "BodyUseAPI": ["com.w4.parser.processor.W4Processor.parse(com.w4.parser.client.W4Response,com.w4.parser.client.promise.W4ParsePromise<java.util.List<T>>)"], "Fixed commit": "b9029176278ec66b53a719db52f88d3e4b46f2a9", "Url": "https://api.github.com/repos/w4p/w4parser", "Date": "2017-07-28T09:02:18Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { final com.podcatcher.deluxe.model.sync.SyncController controller = com.podcatcher.deluxe.model.sync.ControllerImpl.create(podcatcher, com.podcatcher.deluxe.model.sync.ControllerImpl.valueOf(id)); activeControllers.add(controller); controller.setListener(this); controller.setMode(SyncMode.SEND_ONLY); } catch (java.lang.Throwable th) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2432/buggy-version/app.src.main.java.com.podcatcher.deluxe.model.SyncManager.java", "BodyUseAPI": ["java.util.Set<com.podcatcher.deluxe.model.sync.SyncController>.add(com.podcatcher.deluxe.model.sync.SyncController)", "com.podcatcher.deluxe.model.sync.SyncController.setListener(com.podcatcher.deluxe.model.SyncManager)", "com.podcatcher.deluxe.model.sync.ControllerImpl.valueOf(java.lang.String)", "com.podcatcher.deluxe.model.sync.ControllerImpl.create(com.podcatcher.deluxe.Podcatcher,com.podcatcher.deluxe.model.sync.ControllerImpl.valueOf(id))", "com.podcatcher.deluxe.model.sync.SyncController.setMode(SyncMode.SEND_ONLY)"], "Fixed commit": "e928fd59f6ff68eee4e8caee9dfa4abb67979af1", "Url": "https://api.github.com/repos/salema/Podcatcher-Deluxe-Android-Studio", "Date": "2016-05-01T18:57:07Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.jnativehook.GlobalScreen.unregisterNativeHook(); org.jnativehook.GlobalScreen.isNativeHookRegistered(); } catch (org.jnativehook.NativeHookException ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/829/buggy-version/java.src.main.java.br.com.tlabs.util.kbhook.Main.java", "BodyUseAPI": ["org.jnativehook.GlobalScreen.unregisterNativeHook()", "org.jnativehook.GlobalScreen.isNativeHookRegistered()"], "Fixed commit": "07a9a292d5a286eaa076be50742276508b75e507", "Url": "https://api.github.com/repos/tuliocastro/node-keyboard-hook", "Date": "2017-09-12T21:30:31Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((mainService) != null) unbindService(mainServiceConn); } catch (java.lang.IllegalArgumentException e) { com.crashlytics.android.Crashlytics.log(Log.ERROR, com.jakehilborn.speedr.MainActivity.class.getSimpleName(), \"Unexpected MainService unbind error\"); com.crashlytics.android.Crashlytics.logException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7997/buggy-version/app.src.main.java.com.jakehilborn.speedr.MainActivity.java", "BodyUseAPI": ["com.jakehilborn.speedr.MainActivity.unbindService(android.content.ServiceConnection)"], "Fixed commit": "ead3fdcc0c6ecbad1d2095c5b255bd9208bbc162", "Url": "https://api.github.com/repos/jakehilborn/speedr", "Date": "2017-02-25T18:10:26Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bf.close(); } catch (java.io.IOException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4197/buggy-version/src.net.daboross.bukkitdev.playerdata.FileHandler.java", "BodyUseAPI": ["java.io.BufferedWriter.close()"], "Fixed commit": "a49c82ca7523c05a430fb17bccb34da5454902a1", "Url": "https://api.github.com/repos/daboross/PlayerData", "Date": "2013-01-27T06:18:45Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fw.close(); } catch (java.io.IOException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4197/buggy-version/src.net.daboross.bukkitdev.playerdata.FileHandler.java", "BodyUseAPI": ["java.io.FileWriter.close()"], "Fixed commit": "a49c82ca7523c05a430fb17bccb34da5454902a1", "Url": "https://api.github.com/repos/daboross/PlayerData", "Date": "2013-01-27T06:18:45Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { client.refreshSnapshotFromCG(clusterName, cgName, snapshotObj.getReplicationGroupInstance(), true); } catch (com.emc.storageos.xtremio.restapi.errorhandling.XtremIOApiException ex) { client.refreshSnapshotFromCG(clusterName, cgName, snapshotObj.getReplicationGroupInstance(), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8908/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.xtremio.XtremIOSnapshotOperations.java", "BodyUseAPI": ["com.emc.storageos.db.client.model.BlockSnapshot.getReplicationGroupInstance()", "com.emc.storageos.xtremio.restapi.XtremIOClient.refreshSnapshotFromCG(java.lang.String,java.lang.String,snapshotObj.getReplicationGroupInstance(),boolean)"], "Fixed commit": "4de64021591c8360fcd09145bac9ad9e8f60c711", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-03-23T01:09:34Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mManager.placeOrder(order); } catch (uk.co.complex.lvs.cm.traders.IllegalTradeException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/597/buggy-version/src.uk.co.complex.lvs.cm.traders.RandomIntervalProductTrader.java", "BodyUseAPI": ["uk.co.complex.lvs.cm.traders.MarketManager.placeOrder(uk.co.complex.lvs.cm.traders.Order)"], "Fixed commit": "cbbbb031367fea746010ea298bde21efa34331d6", "Url": "https://api.github.com/repos/lexvanderstoep/CompLexMarkets", "Date": "2017-12-07T11:39:55Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { output.close(); input.close(); } catch (java.io.IOException e) { com.shuffle.scplayer.core.AudioPlayer.log.error(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7564/buggy-version/src.main.java.com.shuffle.scplayer.core.AudioPlayer.java", "BodyUseAPI": ["java.io.PipedInputStream.close()", "java.io.PipedOutputStream.close()"], "Fixed commit": "b6957e725d858f09b883d7f1be4b6e10d989e3bc", "Url": "https://api.github.com/repos/LeanderK/scplayer", "Date": "2015-11-08T21:52:35Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { loggedInUser = request.getProperty(org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.LOGGED_IN_USER).toString(); } catch (java.lang.NullPointerException e) { java.lang.String message = \"Error while getting loggedInUser from request\"; org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.log.error(message, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/4165/buggy-version/components.apimgt.org.wso2.carbon.apimgt.rest.api.commons.src.main.java.org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.java", "BodyUseAPI": ["request.getProperty(org.wso2.carbon.apimgt.rest.api.common.util.RestApiUtil.LOGGED_IN_USER).toString()", "org.wso2.msf4j.Request.getProperty(java.lang.String)"], "Fixed commit": "0e54a3290b7042a515c8efa2d164db4e3aa07ece", "Url": "https://api.github.com/repos/harsha89/carbon-apimgt", "Date": "2017-08-19T07:44:45Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { new database.Teacher().addSubject(code, eva, description, layout.User.getInstance().getUsername()); teach.snack(2, ((\"The subject: \" + (code)) + \" is added to the database\")); teach.cancel(); } catch (java.lang.Exception e) { errorLabel.setText(\"Someone else is alerady teaching this subject\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6634/buggy-version/src.controllers.add.addTeachingSubjectController.java", "BodyUseAPI": ["layout.User.getInstance().getUsername()", "layout.User.getInstance()", "database.Teacher.addSubject(java.lang.String,java.lang.String,java.lang.String,layout.User.getInstance().getUsername())", "controllers.TeacherCalendarController.cancel()", "controllers.TeacherCalendarController.snack(int,java.lang.String)"], "Fixed commit": "a642af6f16de91c491069fe0973cef89bd011d71", "Url": "https://api.github.com/repos/adrianjs/Programvareutvikling-Gruppe-35", "Date": "2017-04-18T13:46:17Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return org.dromelvan.modell.SpelareSasongStatistik.placeringMap.get(getId()); } catch (java.lang.NullPointerException e) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/1930/buggy-version/src.main.java.org.dromelvan.modell.SpelareSasongStatistik.java", "BodyUseAPI": ["org.dromelvan.modell.SpelareSasongStatistik.getId()", "java.util.Map<java.lang.Integer, java.lang.Integer>.get(getId())"], "Fixed commit": "9bdb2fda596d3a36ea3b2d87c911a0077ed92ef1", "Url": "https://api.github.com/repos/dromelvan/dromelvan-core", "Date": "2014-09-17T20:11:33Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mainmenuform.wait(); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/75/buggy-version/src.edu.manatriya.banking.ATMMachine.java", "BodyUseAPI": ["edu.manatriya.banking.plugintransaksi.mainMenuForm.wait()"], "Fixed commit": "020461309765513c00cbb0d9806f7d4f7cc7036d", "Url": "https://api.github.com/repos/natanelia/BankingMachine-Manatriya", "Date": "2015-04-27T13:05:02Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6698/buggy-version/MULE.src.Renderer.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "962cb74a3e281b72cc22345b34e786eafd6f1cbc", "Url": "https://api.github.com/repos/alexstelea/Fighting-Mongooses", "Date": "2013-11-09T23:52:22Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6698/buggy-version/MULE.src.Renderer.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "962cb74a3e281b72cc22345b34e786eafd6f1cbc", "Url": "https://api.github.com/repos/alexstelea/Fighting-Mongooses", "Date": "2013-11-09T23:52:22Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(100); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6698/buggy-version/MULE.src.Renderer.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "962cb74a3e281b72cc22345b34e786eafd6f1cbc", "Url": "https://api.github.com/repos/alexstelea/Fighting-Mongooses", "Date": "2013-11-09T23:52:22Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.github.florent37.materialviewpager.sample.utils.Resources.mProgressDialog.dismiss(); } catch (java.lang.Exception E) { E.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6806/buggy-version/sample.src.main.java.com.github.florent37.materialviewpager.sample.utils.Resources.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "5bb0bd7604804ade1f2b647b3847fa3ecad9f0ca", "Url": "https://api.github.com/repos/rosenpin/OTA-Updater", "Date": "2015-12-10T18:08:45Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.github.florent37.materialviewpager.sample.utils.Resources.mProgressDialog.show(); } catch (java.lang.Exception E) { E.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6806/buggy-version/sample.src.main.java.com.github.florent37.materialviewpager.sample.utils.Resources.java", "BodyUseAPI": ["android.app.ProgressDialog.show()"], "Fixed commit": "5bb0bd7604804ade1f2b647b3847fa3ecad9f0ca", "Url": "https://api.github.com/repos/rosenpin/OTA-Updater", "Date": "2015-12-10T18:08:45Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.github.florent37.materialviewpager.sample.utils.Resources.mProgressDialog.setIndeterminate(false); com.github.florent37.materialviewpager.sample.utils.Resources.mProgressDialog.setMax(100); com.github.florent37.materialviewpager.sample.utils.Resources.mProgressDialog.setProgress(progress[0]); } catch (java.lang.Exception E) { E.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6806/buggy-version/sample.src.main.java.com.github.florent37.materialviewpager.sample.utils.Resources.java", "BodyUseAPI": ["android.app.ProgressDialog.setIndeterminate(boolean)", "android.app.ProgressDialog.setProgress(java.lang.Integer)", "android.app.ProgressDialog.setMax(int)"], "Fixed commit": "5bb0bd7604804ade1f2b647b3847fa3ecad9f0ca", "Url": "https://api.github.com/repos/rosenpin/OTA-Updater", "Date": "2015-12-10T18:08:45Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { notables.set((((net.aufdemrand.denizen.objects.notable.NotableManager.getClassId(net.aufdemrand.denizen.objects.notable.NotableManager.getClass(notable.getValue()))) + \".\") + (net.aufdemrand.denizencore.utilities.CoreUtilities.toLowerCase(notable.getKey()).replace(\".\", \"DOT\"))), notable.getValue().getSaveObject()); } catch (java.lang.Exception e) { dB.echoError(((\"Notable '\" + (notable.getKey())) + \"' failed to save!\")); dB.echoError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9216/buggy-version/src.main.java.net.aufdemrand.denizen.objects.notable.NotableManager.java", "BodyUseAPI": ["net.aufdemrand.denizencore.utilities.CoreUtilities.toLowerCase(notable.getKey()).replace(java.lang.String,java.lang.String)", "java.util.Map.Entry<java.lang.String, net.aufdemrand.denizencore.objects.notable.Notable>.getKey()", "net.aufdemrand.denizen.objects.notable.NotableManager.getClassId(java.lang.Class)", "net.aufdemrand.denizencore.utilities.CoreUtilities.toLowerCase(notable.getKey())", "org.bukkit.configuration.file.FileConfiguration.set((((net.aufdemrand.denizen.objects.notable.NotableManager.getClassId(net.aufdemrand.denizen.objects.notable.NotableManager.getClass(notable.getValue()))) + \".\") + (net.aufdemrand.denizencore.utilities.CoreUtilities.toLowerCase(notable.getKey()).replace(\".\", \"DOT\"))),notable.getValue().getSaveObject())", "java.util.Map.Entry<java.lang.String, net.aufdemrand.denizencore.objects.notable.Notable>.getValue()", "notable.getValue().getSaveObject()", "net.aufdemrand.denizen.objects.notable.NotableManager.getClass(notable.getValue())", "java.util.Map.Entry<java.lang.String, net.aufdemrand.denizencore.objects.notable.Notable>.getValue()"], "Fixed commit": "cd5416d947d1247585a7b9475d3dde4e56e68bee", "Url": "https://api.github.com/repos/mcmonkey4eva/Denizen", "Date": "2016-05-27T22:18:45Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { amount = java.lang.Integer.parseInt(getSign().getLine(2)); } catch (java.lang.Exception e) { amount = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/2681/buggy-version/circuits.src.main.java.com.sk89q.craftbook.gates.world.items.ContainerDispenser.java", "BodyUseAPI": ["getSign().getLine(int)", "com.sk89q.craftbook.gates.world.items.ContainerDispenser.getSign()", "java.lang.Integer.parseInt(getSign().getLine(2))"], "Fixed commit": "7f22f70fd6754b7445100209a2423c0763bb9526", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2012-12-22T04:39:46Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { pathh = thisFile.getCanonicalPath(); pathh = java.net.URLDecoder.decode(pathh, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { pathh = java.lang.System.getProperty(\"java.class.path\"); App.settings.logStackTrace(e); } catch (java.io.IOException e) { pathh = java.lang.System.getProperty(\"java.class.path\"); App.settings.logStackTrace(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/3952/buggy-version/src.com.atlauncher.mclauncher.LegacyMCLauncher.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)", "java.io.File.getCanonicalPath()"], "Fixed commit": "93750adb735ca08221cf6487baa0a7ce42b5b67c", "Url": "https://api.github.com/repos/RyanTheAllmighty/ATLauncher", "Date": "2013-11-26T04:54:47Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { profilePlugin.close(new org.eclipse.core.runtime.NullProgressMonitor()); } catch (org.eclipse.core.runtime.CoreException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6084/buggy-version/plugins.org.obeonetwork.dsl.uml2.profile.design.src.org.obeonetwork.dsl.uml2.profile.design.exportprofile.ExportProfileService.java", "BodyUseAPI": ["org.eclipse.core.resources.IProject.close(org.eclipse.core.runtime.NullProgressMonitor)"], "Fixed commit": "33dfcb7fd7718cf3d9d8d915b0f0ccaa7f32dd59", "Url": "https://api.github.com/repos/ObeoNetwork/UML-Modeling", "Date": "2014-03-25T13:27:59Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { Ed aux = createDoc(); java.net.URI base = new java.net.URI(((impl.getDoc().getLocation()) + (java.io.File.separator))); java.net.URI path = base.resolve(br.uff.midiacom.ana.reuse.NCLImport.getDocumentURI().parse()); aux.loadXML(new java.io.File(path.getPath())); br.uff.midiacom.ana.reuse.NCLImport.setImportedDoc(aux); } catch (java.lang.Exception e) { throw new br.uff.midiacom.ana.datatype.ncl.NCLParsingException((\"Could not find document in location: \" + (br.uff.midiacom.ana.reuse.NCLImport.getDocumentURI().parse()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5153/buggy-version/src.br.uff.midiacom.ana.reuse.NCLImport.java", "BodyUseAPI": ["br.uff.midiacom.ana.reuse.NCLImport.getDocumentURI().parse()", "br.uff.midiacom.ana.reuse.NCLImport.getDocumentURI()", "java.net.URI.getPath()", "br.uff.midiacom.ana.reuse.NCLImport.getDoc()", "java.net.URI.resolve(br.uff.midiacom.ana.reuse.NCLImport.getDocumentURI().parse())", "impl.getDoc().getLocation()", "br.uff.midiacom.ana.reuse.NCLImport.setImportedDoc(Ed)", "br.uff.midiacom.ana.reuse.NCLImport<T, P, I, Er, Ed>.createDoc()", "Ed.loadXML(java.io.File)"], "Fixed commit": "4e4c55c67b3682faed94c673a6099ed95e1acbb3", "Url": "https://api.github.com/repos/joeldossantos/aNa", "Date": "2012-03-14T15:43:57Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(2); } catch (java.lang.InterruptedException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/6385/buggy-version/src.tail.TailServer.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "dd41d992c553fe410b6f2f78b36bc21bcaad140f", "Url": "https://api.github.com/repos/tobiasschulz/tailserver", "Date": "2013-06-26T23:39:10Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { mStatelyMediaPlayer.start(); android.util.Log.d(com.ai.tools.audiohog.AudioHogService.TAG, \"audio should be playing now\"); updateNotification(com.ai.tools.audiohog.AudioHogService.NOTIFICATION_PLAY); bSuccess = true; } catch (java.lang.IllegalStateException e) { android.util.Log.e(com.ai.tools.audiohog.AudioHogService.TAG, \"audio hog -- in playInterferingAudio; illstate ex thrown by start()\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5665/buggy-version/AudioHog.app.src.main.java.com.ai.tools.audiohog.AudioHogService.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)", "com.ai.tools.audiohog.StatelyMediaPlayer.start()", "com.ai.tools.audiohog.AudioHogService.updateNotification(int)"], "Fixed commit": "ced056aa20cfd1c01d36605877abbda076072d5d", "Url": "https://api.github.com/repos/crescojeff/AudioHog", "Date": "2016-01-05T01:32:32Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { item.getItemMeta().setUnbreakable(false); } catch (java.lang.NoSuchMethodError ex) { item.getItemMeta().spigot().setUnbreakable(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5124/buggy-version/Genie.src.main.java.com.djrapitops.genie.listeners.ItemInteractionListener.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getItemMeta()", "item.getItemMeta().setUnbreakable(boolean)"], "Fixed commit": "c8d7845624878a365cd478106066c0de14a75c59", "Url": "https://api.github.com/repos/Sharpjaws/Genie", "Date": "2017-08-13T14:20:22Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { mtkManager0 = new com.mediatek.telephony.TelephonyManagerEx(this); } catch (java.lang.Exception e) { mtkManager0 = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/5119/buggy-version/app.src.main.java.ua.moskovkin.autorecorder.CallRecorderService.java", "BodyUseAPI": [], "Fixed commit": "e1bc47634174e9e43966ac59df7a91c8091de33b", "Url": "https://api.github.com/repos/wraith007/AutoRecorder", "Date": "2016-02-14T17:50:20Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { base.evaluate(); } finally { com.github.tomakehurst.wiremock.client.WireMock.reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/560/buggy-version/src.main.java.com.github.tomakehurst.wiremock.junit.WireMockStaticRule.java", "BodyUseAPI": ["org.junit.runners.model.Statement.evaluate()"], "Fixed commit": "5097d54297bd575062121d0749cbc42bc87e18d6", "Url": "https://api.github.com/repos/neilg/wiremock", "Date": "2012-05-26T17:12:33Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { base.evaluate(); } finally { wireMockServer.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/560/buggy-version/src.main.java.com.github.tomakehurst.wiremock.junit.WireMockRule.java", "BodyUseAPI": ["org.junit.runners.model.Statement.evaluate()"], "Fixed commit": "5097d54297bd575062121d0749cbc42bc87e18d6", "Url": "https://api.github.com/repos/neilg/wiremock", "Date": "2012-05-26T17:12:33Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { statement = this.databaseConnection.createStatement(); statement.execute(((((\"UPDATE griefprevention_playerdata SET name = '\" + (changes.get(name).toString())) + \"' WHERE name = '\") + name) + \"';\")); } catch (java.sql.SQLException e) { me.ryanhamshire.GriefPrevention.GriefPrevention.AddLogEntry(((\"Unable to convert player data for \" + name) + \". Skipping.\")); me.ryanhamshire.GriefPrevention.GriefPrevention.AddLogEntry(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/8952/buggy-version/src.me.ryanhamshire.GriefPrevention.DatabaseDataStore.java", "BodyUseAPI": ["java.sql.Connection.createStatement()", "java.sql.Statement.execute(java.lang.String)", "java.util.UUID.toString()", "java.util.HashMap<java.lang.String, java.util.UUID>.get(java.lang.String)"], "Fixed commit": "e7e16e88fdedc3010cebf012ef1ada0bc2e0f266", "Url": "https://api.github.com/repos/BigScary/GriefPrevention", "Date": "2015-02-05T00:21:26Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { org.wso2.carbon.context.PrivilegedCarbonContext.startTenantFlow(); org.wso2.carbon.context.PrivilegedCarbonContext.getThreadLocalCarbonContext().setTenantDomain(MultitenantConstants.SUPER_TENANT_DOMAIN_NAME); org.wso2.carbon.context.PrivilegedCarbonContext.getThreadLocalCarbonContext().setTenantId(MultitenantConstants.SUPER_TENANT_ID); if (((containerResponseContext.getStatusInfo().getFamily()) == (Response.Status.Family.CLIENT_ERROR)) && ((httpRequest.getSession().getAttribute(\"enabled-security-mechanism\")) != null)) { org.wso2.carbon.identity.captcha.util.EnabledSecurityMechanism enabledSecurityMechanism = ((org.wso2.carbon.identity.captcha.util.EnabledSecurityMechanism) (httpRequest.getSession().getAttribute(\"enabled-security-mechanism\"))); containerResponseContext.getHeaders().add(enabledSecurityMechanism.getMechanism(), \"true\"); if (!(enabledSecurityMechanism.getProperties().isEmpty())) { for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : enabledSecurityMechanism.getProperties().entrySet()) { containerResponseContext.getHeaders().add(entry.getKey(), entry.getValue()); } } } } finally { org.wso2.carbon.context.PrivilegedCarbonContext.endTenantFlow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7629/buggy-version/components.org.wso2.carbon.identity.recovery.endpoint.src.main.java.org.wso2.carbon.identity.recovery.endpoint.filter.ResponseValidationFilter.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "org.wso2.carbon.context.PrivilegedCarbonContext.getThreadLocalCarbonContext()", "javax.ws.rs.container.ContainerResponseContext.getStatusInfo()", "org.wso2.carbon.identity.captcha.util.EnabledSecurityMechanism.getMechanism()", "org.wso2.carbon.identity.captcha.util.EnabledSecurityMechanism.getProperties()", "org.wso2.carbon.context.PrivilegedCarbonContext.startTenantFlow()", "httpRequest.getSession().getAttribute(java.lang.String)", "enabledSecurityMechanism.getProperties().isEmpty()", "containerResponseContext.getStatusInfo().getFamily()", "containerResponseContext.getHeaders().add(java.lang.String,java.lang.String)", "containerResponseContext.getHeaders().add(enabledSecurityMechanism.getMechanism(),java.lang.String)", "javax.servlet.http.HttpServletRequest.getSession()", "javax.servlet.http.HttpServletRequest.getSession()", "org.wso2.carbon.context.PrivilegedCarbonContext.getThreadLocalCarbonContext()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "enabledSecurityMechanism.getProperties().entrySet()", "org.wso2.carbon.context.PrivilegedCarbonContext.getThreadLocalCarbonContext().setTenantDomain(MultitenantConstants.SUPER_TENANT_DOMAIN_NAME)", "javax.ws.rs.container.ContainerResponseContext.getHeaders()", "javax.ws.rs.container.ContainerResponseContext.getHeaders()", "httpRequest.getSession().getAttribute(java.lang.String)", "org.wso2.carbon.context.PrivilegedCarbonContext.getThreadLocalCarbonContext().setTenantId(MultitenantConstants.SUPER_TENANT_ID)", "org.wso2.carbon.identity.captcha.util.EnabledSecurityMechanism.getProperties()"], "Fixed commit": "137dfea6b7a52f12bde04dc6bf5e35407893b0ed", "Url": "https://api.github.com/repos/IsuraD/identity-governance", "Date": "2016-12-22T07:47:46Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { loadTableView(new controller.UserInput(10000, 10, 90, controller.Engine.NONE, controller.Transmission.NONE, null)); } catch (java.lang.Exception e) { main.Alert alert = new main.Alert(Alert.AlertType.ERROR); alert.setTitle(\"Error Dialog\"); alert.setHeaderText(\"Brak pliku cars.xml!\"); alert.setContentText(\"Brak pliku cars.xml!\"); alert.showAndWait(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/9018/buggy-version/src.main.java.main.main.java", "BodyUseAPI": ["main.main.loadTableView(controller.UserInput)"], "Fixed commit": "7971fcd9101c0c520b3de0cb2c35c98b369d5bd6", "Url": "https://api.github.com/repos/StanKarp0/FuzzyDB", "Date": "2017-06-08T23:44:14Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.bluetooth.BluetoothDevice device = mBluetoothAdapter.getRemoteDevice(address); mChatService.connect(device, secure); } catch (java.lang.IllegalArgumentException e) { com.example.android.common.logger.Log.e(com.example.android.bluetoothchat.BluetoothChatFragment.TAG, \"Impossible to connect, device address is not valid!\"); android.widget.Toast.makeText(this.getContext(), \"Device address is not valid!\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V57/7871/buggy-version/Application.src.main.java.com.example.android.bluetoothchat.BluetoothChatFragment.java", "BodyUseAPI": ["com.example.android.bluetoothchat.BluetoothChatService.connect(android.bluetooth.BluetoothDevice,boolean)", "android.bluetooth.BluetoothAdapter.getRemoteDevice(java.lang.String)"], "Fixed commit": "85949427c3497911d6c7b1ce3b565f4ee653929c", "Url": "https://api.github.com/repos/Ks89/android-BluetoothChat", "Date": "2016-04-10T20:20:47Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Double.parseDouble(preference.getPreferenceString(com.akitektuo.smartlist.fragment.KEY_OFFSET)); } catch (java.lang.Exception e) { preference.setPreference(com.akitektuo.smartlist.fragment.KEY_OFFSET, \"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2111/buggy-version/app.src.main.java.com.akitektuo.smartlist.fragment.ListFragment.java", "BodyUseAPI": ["com.akitektuo.smartlist.util.Preference.getPreferenceString(com.akitektuo.smartlist.fragment.KEY_OFFSET)", "java.lang.Double.parseDouble(preference.getPreferenceString(com.akitektuo.smartlist.fragment.KEY_OFFSET))"], "Fixed commit": "7ef3d78c159a901089873e9b8c8ff0d97e0a7580", "Url": "https://api.github.com/repos/Akitektuo/SmartList", "Date": "2017-12-30T19:11:59Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Double.parseDouble(preference.getPreferenceString(com.akitektuo.smartlist.fragment.KEY_TOTAL_COUNT)); } catch (java.lang.Exception e) { preference.setPreference(com.akitektuo.smartlist.fragment.KEY_TOTAL_COUNT, \"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2111/buggy-version/app.src.main.java.com.akitektuo.smartlist.fragment.ListFragment.java", "BodyUseAPI": ["com.akitektuo.smartlist.util.Preference.getPreferenceString(com.akitektuo.smartlist.fragment.KEY_TOTAL_COUNT)", "java.lang.Double.parseDouble(preference.getPreferenceString(com.akitektuo.smartlist.fragment.KEY_TOTAL_COUNT))"], "Fixed commit": "7ef3d78c159a901089873e9b8c8ff0d97e0a7580", "Url": "https://api.github.com/repos/Akitektuo/SmartList", "Date": "2017-12-30T19:11:59Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.count += java.lang.Long.parseLong(metadata); } catch (java.lang.NumberFormatException e) { this.count += ((long) (java.lang.Double.parseDouble(metadata))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1733/buggy-version/src.java.boa.aggregators.MeanAggregator.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "5b6fe9f1159ecf49e74b2d2a8622c1ae77c5b230", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2017-05-29T17:33:57Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (int i = 0; i < (options.length); i++) { if (i == (activeOptionIndex)) { g.setColor(java.awt.Color.red); }else { g.setColor(java.awt.Color.black); } stringWidth[i] = g.getFontMetrics().stringWidth(options[i]); stringHeight = g.getFontMetrics().getHeight(); g.drawString(options[i], (((width) / 2) - ((stringWidth[i]) / 2)), (((((i * ((stringHeight) + (padding))) + (logoY)) + (logoHeight)) + (stringHeight)) + (padding))); } } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3535/buggy-version/FBG2.0.src.view.viewport.MainMenuViewPort.java", "BodyUseAPI": ["java.awt.Graphics.drawString(java.lang.String,int,int)", "java.awt.FontMetrics.getHeight()", "java.awt.Graphics.setColor(java.awt.Color)", "java.awt.Graphics.setColor(java.awt.Color)", "java.awt.FontMetrics.stringWidth(java.lang.String)", "java.awt.Graphics.getFontMetrics()", "java.awt.Graphics.getFontMetrics()"], "Fixed commit": "7596e5c128777dfd822eb3fb3a3246ac681cc735", "Url": "https://api.github.com/repos/TeamFinalBoss/GameIteration2", "Date": "2015-03-23T14:31:18Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { claims = io.jsonwebtoken.Jwts.parser().setSigningKey(com.dezso.varga.backgammon.authentication.AuthUtils.SECRET_KEY).parseClaimsJws(confirmToken).getBody(); } catch (io.jsonwebtoken.ExpiredJwtException ex) { throw new com.dezso.varga.backgammon.exeptions.ConfirmTokenExpiredException(\"Confirmation token expired\", HttpStatus.PRECONDITION_FAILED.value()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/52/buggy-version/src.main.java.com.dezso.varga.backgammon.authentication.AuthUtils.java", "BodyUseAPI": ["io.jsonwebtoken.Jwts.parser().setSigningKey(com.dezso.varga.backgammon.authentication.AuthUtils.SECRET_KEY).parseClaimsJws(java.lang.String)", "io.jsonwebtoken.Jwts.parser()", "io.jsonwebtoken.Jwts.parser().setSigningKey(com.dezso.varga.backgammon.authentication.AuthUtils.SECRET_KEY).parseClaimsJws(confirmToken).getBody()", "io.jsonwebtoken.Jwts.parser().setSigningKey(java.lang.String)"], "Fixed commit": "44f60f61660db48242d4d46a672028f1e6383929", "Url": "https://api.github.com/repos/dezsovarga/backgammon_api", "Date": "2017-12-02T17:55:22Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { main.Run.executeBoardQueue(map, player, board, console); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1044/buggy-version/src.main.Run.java", "BodyUseAPI": ["main.Run.executeBoardQueue(map.Map,player.Player,javax.swing.JTextArea,javax.swing.JTextArea)"], "Fixed commit": "27690be04a0f39c2862f6cfcb1bd7d9bd22bf6d0", "Url": "https://api.github.com/repos/abalint/NODLEHS", "Date": "2016-09-15T22:44:16Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { javax.xml.bind.JAXBContext jaxbContext = javax.xml.bind.JAXBContext.newInstance(o); java.lang.System.out.println(\"A\"); javax.xml.bind.Marshaller jaxbMarshaller = jaxbContext.createMarshaller(); java.lang.System.out.println(\"B\"); jaxbMarshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true); java.lang.System.out.println(\"C\"); jaxbMarshaller.marshal(order, ((javax.xml.transform.Result) (java.lang.System.in))); java.lang.System.out.println(\"B\"); jaxbMarshaller.marshal(order, new java.io.File(\"C:/Users/adminusrlocal/Desktop/file.xml\")); } catch (javax.xml.bind.JAXBException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/734/buggy-version/java.mt.client.ui.MicroTraderClientUI.java", "BodyUseAPI": ["javax.xml.bind.JAXBContext.createMarshaller()", "javax.xml.bind.JAXBContext.newInstance(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "javax.xml.bind.Marshaller.marshal(mt.Order,java.io.File)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "javax.xml.bind.Marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT,boolean)", "javax.xml.bind.Marshaller.marshal(mt.Order,java.io.InputStream)"], "Fixed commit": "786e78dc6a1553d668ab5cbc148dd6faa5ad6243", "Url": "https://api.github.com/repos/mdmgc-iscteiulpt/ES2-2017-IC1-52MiniTrader", "Date": "2017-03-06T17:21:31Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((model.getCurrentPurchaseTableModel().getItemById(stockItem.getId()).getQuantity()) >= (stockItem.getQuantity())) { throw new ee.ut.math.tvt.salessystem.domain.exception.OutOfStockException(); } } catch (java.util.NoSuchElementException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4424/buggy-version/POS.src.ee.ut.math.tvt.salessystem.ui.panels.PurchaseItemPanel.java", "BodyUseAPI": ["model.getCurrentPurchaseTableModel().getItemById(stockItem.getId()).getQuantity()", "ee.ut.math.tvt.salessystem.domain.data.StockItem.getId()", "ee.ut.math.tvt.salessystem.domain.data.StockItem.getQuantity()", "ee.ut.math.tvt.salessystem.ui.model.SalesSystemModel.getCurrentPurchaseTableModel()", "model.getCurrentPurchaseTableModel().getItemById(stockItem.getId())"], "Fixed commit": "50bfc050d44e099b8a27674f9430c01c45f5d6b1", "Url": "https://api.github.com/repos/SETeam42014/test", "Date": "2014-10-22T19:38:25Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { event.getChannel().getMessageById(messageID).complete().editMessage(message.replace(\"%count%\", (\"\" + (i)))).submit(); } catch (java.lang.IllegalStateException e) { end = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5474/buggy-version/FFBEBot.src.util.Counter.java", "BodyUseAPI": ["event.getChannel().getMessageById(java.lang.String)", "net.dv8tion.jda.core.events.message.MessageReceivedEvent.getChannel()", "java.lang.String.replace(java.lang.String,java.lang.String)", "event.getChannel().getMessageById(messageID).complete().editMessage(message.replace(\"%count%\", (\"\" + (i)))).submit()", "event.getChannel().getMessageById(messageID).complete()", "event.getChannel().getMessageById(messageID).complete().editMessage(java.lang.String)"], "Fixed commit": "1c039737bdb3cfb488e6ebbff575a5dc626360cc", "Url": "https://api.github.com/repos/Hiddendoom45/FFBEBot", "Date": "2017-06-13T15:23:31Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.System.out.println((((((((\"burn_baby_burn: rule to be applied: \" + (net.minecraft.block.Block.blocksList[id].getUnlocalizedName())) + \" \") + id) + \", \") + (def.prop.encouragment)) + \", \") + (def.prop.flammability))); net.minecraft.block.Block.setBurnProperties(id, def.prop.encouragment, def.prop.flammability); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2008/buggy-version/BurnBabyBurn.java", "BodyUseAPI": ["net.minecraft.block.Block.blocksList[id].getUnlocalizedName()", "java.io.PrintStream.println((((((((\"burn_baby_burn: rule to be applied: \" + (net.minecraft.block.Block.blocksList[id].getUnlocalizedName())) + \" \") + id) + \", \") + (def.prop.encouragment)) + \", \") + (def.prop.flammability)))", "net.minecraft.block.Block.setBurnProperties(int,int,int)"], "Fixed commit": "6ee6d5a9c08e9c135dc04f1529b7abe03e5030b4", "Url": "https://api.github.com/repos/Pykas0/burn_baby_burn", "Date": "2015-06-30T20:32:13Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { temp = assignment.getElementsByClass(\"category\").get(0).html(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1029/buggy-version/app.src.main.java.app.sunstreak.yourpisd.net.Parser.java", "BodyUseAPI": ["assignment.getElementsByClass(\"category\").get(int)", "org.jsoup.nodes.Element.getElementsByClass(java.lang.String)", "assignment.getElementsByClass(\"category\").get(0).html()"], "Fixed commit": "925cd1c3f43a7fed53e3444dec53ed4cef214cd0", "Url": "https://api.github.com/repos/yourPISD/yourpisd", "Date": "2016-09-14T04:49:12Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { eventCallback.onEvent(com.github.dockerjava.jaxrs.EventsCmdExec.EventNotifier.OBJECT_MAPPER.readValue(jp, com.github.dockerjava.api.model.Event.class)); } catch (java.lang.Exception e) { eventCallback.onException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7097/buggy-version/src.main.java.com.github.dockerjava.jaxrs.EventsCmdExec.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class)", "com.github.dockerjava.api.command.EventCallback.onEvent(com.github.dockerjava.jaxrs.EventsCmdExec.EventNotifier.OBJECT_MAPPER.readValue(jp, com.github.dockerjava.api.model.Event.class))"], "Fixed commit": "5ee09ba4ae06a90761c7027477cef433a4ca45ce", "Url": "https://api.github.com/repos/docker-java/docker-java", "Date": "2015-05-10T16:33:03Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { b = data.getBlobs().get(0); } catch (java.lang.IndexOutOfBoundsException e) { return at.bluephoenix.BlobDetector.CaptureBall.State.Rotate; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7000/buggy-version/src.at.bluephoenix.BlobDetector.CaptureBall.java", "BodyUseAPI": ["at.bluephoenix.BlobDetector.NervHub.getBlobs()", "data.getBlobs().get(int)"], "Fixed commit": "701a1db6bfc5e16b71741aa3d2bea28a15b0d463", "Url": "https://api.github.com/repos/W4RH4WK/BlobDetector", "Date": "2013-05-13T10:47:34Z"},
{"Line": "=>1602", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { addedTags = java.net.URLEncoder.encode(addedTags, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5246/buggy-version/src.main.java.org.ednovo.gooru.server.service.ResourceServiceImpl.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "1c9fc806e5d56b7b7438a47f01a16e422becfee5", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2015-03-28T00:32:17Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.votingsystem.dto.CertExtensionDto certExtensionDto = org.votingsystem.util.crypto.CertUtils.getCertExtensionData(org.votingsystem.dto.CertExtensionDto.class, x509Certificate, ContextVS.DEVICE_OID); if (certExtensionDto != null) { user.setEmail(certExtensionDto.getEmail()); user.setPhone(certExtensionDto.getMobilePhone()); } } catch (java.lang.Exception ex) { ex.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8379/buggy-version/VotingSystemAPI.src.main.java.org.votingsystem.model.User.java", "BodyUseAPI": ["org.votingsystem.dto.CertExtensionDto.getMobilePhone()", "org.votingsystem.util.crypto.CertUtils.getCertExtensionData(java.lang.Class,java.security.cert.X509Certificate,ContextVS.DEVICE_OID)", "org.votingsystem.model.User.setEmail(certExtensionDto.getEmail())", "org.votingsystem.model.User.setPhone(certExtensionDto.getMobilePhone())", "org.votingsystem.dto.CertExtensionDto.getEmail()"], "Fixed commit": "331ed4c4588192737addd9cb21f5a9fd806196d0", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2016-03-17T15:10:51Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { statText.setText(choice.fetchOptionStatistics()); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1077/buggy-version/src.edu.virginia.cs4240.webmetrics.gui.GUIFrame.java", "BodyUseAPI": ["edu.virginia.cs4240.webmetrics.modules.DisplayOption.fetchOptionStatistics()", "javax.swing.JTextArea.setText(choice.fetchOptionStatistics())"], "Fixed commit": "0d8deec30d27e345b5afc9c9512c0d745c09ba89", "Url": "https://api.github.com/repos/samiam14/cs4240", "Date": "2011-12-06T05:10:53Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { decodedMeetingID = java.net.URLDecoder.decode(meetingID, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException e) { org.bigbluebutton.api.ParamsProcessorUtil.log.error(\"Couldn't decode meetingID.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5738/buggy-version/bigbluebutton-web.src.java.org.bigbluebutton.api.ParamsProcessorUtil.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "82c84cbce217be6abec5b57fc9d7f8e10dc0a209", "Url": "https://api.github.com/repos/jfederico/bigbluebutton", "Date": "2013-02-26T15:16:18Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.widget.Toast.makeText(context, message, Toast.LENGTH_LONG).show(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7826/buggy-version/app.src.main.java.com.example.ujguidebook.my_future_v2.utils.Display.java", "BodyUseAPI": ["android.widget.Toast.makeText(context, message, Toast.LENGTH_LONG).show()", "android.widget.Toast.makeText(android.content.Context,java.lang.String,Toast.LENGTH_LONG)"], "Fixed commit": "47ce0a4286f6725dbb8ea443a6a74f07e778356a", "Url": "https://api.github.com/repos/thbmasilo/My_Future_v2", "Date": "2017-02-06T22:03:50Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { newOrDefault = com.lothrazar.samscontent.SpellRegistry.EnumSpellType.valueOf(props.getStringSpell()); } catch (java.lang.Exception e) { com.lothrazar.samscontent.SpellRegistry.setPlayerCurrentSpell(player, com.lothrazar.samscontent.SpellRegistry.EnumSpellType.chest); newOrDefault = com.lothrazar.samscontent.SpellRegistry.EnumSpellType.chest; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5446/buggy-version/src.main.java.com.lothrazar.samscontent.SpellRegistry.java", "BodyUseAPI": ["com.lothrazar.samscontent.SpellRegistry.EnumSpellType.valueOf(props.getStringSpell())", "com.lothrazar.samscontent.common.PlayerPowerups.getStringSpell()"], "Fixed commit": "69a5749f15b7a00e7a793881e824e7fa9a1f8c1f", "Url": "https://api.github.com/repos/PrinceOfAmber/SamsPowerups", "Date": "2015-05-28T21:05:42Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { newhud = com.lothrazar.samscontent.SpellRegistry.EnumHudType.valueOf(hudCurr); } catch (java.lang.Exception e) { newhud = com.lothrazar.samscontent.SpellRegistry.EnumHudType.none; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5446/buggy-version/src.main.java.com.lothrazar.samscontent.event.DebugScreenText.java", "BodyUseAPI": ["com.lothrazar.samscontent.SpellRegistry.EnumHudType.valueOf(java.lang.String)"], "Fixed commit": "69a5749f15b7a00e7a793881e824e7fa9a1f8c1f", "Url": "https://api.github.com/repos/PrinceOfAmber/SamsPowerups", "Date": "2015-05-28T21:05:42Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { appointment.delete(); } catch (java.io.IOException e1) { sceneHandler = new login.SceneHandler(); sceneHandler.popUpMessage(\"/messages/Error.fxml\", 300, 150, \"WTF\", this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6066/buggy-version/src.newAppointment.NewAppointmentController.java", "BodyUseAPI": ["calendar.Appointment.delete()"], "Fixed commit": "98afa7b2d0acc784dc96da76fec4b864d77a8647", "Url": "https://api.github.com/repos/johansme/Fellesprosjektet", "Date": "2015-03-13T10:41:02Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String[] toReturn = new java.lang.String[input.size()]; for (int i = 0; i < (input.size()); i++) { int startIdx = input.get(i).lastIndexOf(\"<\"); int endIdx = input.get(i).lastIndexOf(\">\"); toReturn[i] = input.get(i).substring((startIdx + 1), endIdx); } return toReturn; } catch (java.lang.StringIndexOutOfBoundsException e) { throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1810/buggy-version/app.src.main.java.moe.minori.pgpclipper.activities.PGPClipperResultShowActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.lang.String.substring(int,int)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)", "java.lang.String.lastIndexOf(java.lang.String)", "java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.size()", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "bdc4378d951bf95101a667b1a1afcfc467a877ed", "Url": "https://api.github.com/repos/Mnkai/PGPClipper", "Date": "2015-11-12T14:43:54Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { key = java.lang.Integer.parseInt(cm[1]); } catch (java.lang.NumberFormatException e) { java.lang.System.out.println(\"Key must be a number.\\nSyntax: lookup <key>\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3250/buggy-version/MyKV.src.UserinputHandler.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "ff0e9d95b90fccc8f7bb710d8fbcbc3102de97a8", "Url": "https://api.github.com/repos/christian-com-techniques/MyKV", "Date": "2013-12-04T04:43:18Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { sign = ((org.bukkit.material.Sign) (s.getState().getData())); } catch (java.lang.Exception exception) { net.croxis.plugins.lift.BukkitElevatorManager.plugin.logInfo(\"WARNING: Unable to get sign for redstone pulse.\"); net.croxis.plugins.lift.BukkitElevatorManager.plugin.logInfo((\"Sign coords: \" + (s.getLocation().toString()))); net.croxis.plugins.lift.BukkitElevatorManager.plugin.logInfo((\"Sign material: \" + (s.getType().toString()))); net.croxis.plugins.lift.BukkitElevatorManager.plugin.logInfo((\"Sign ID: \" + (java.lang.Integer.toString(s.getTypeId())))); bukkitElevator.clear(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/322/buggy-version/src.main.java.net.croxis.plugins.lift.BukkitElevatorManager.java", "BodyUseAPI": ["s.getState().getData()", "org.bukkit.block.Block.getState()"], "Fixed commit": "1536fad134b0896b5bfda2279b73db2c0b18684c", "Url": "https://api.github.com/repos/croxis/Lift", "Date": "2014-07-29T19:37:24Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fs = java.nio.file.FileSystems.newFileSystem(java.net.URI.create(\"cache://job.control\"), uk.trainwatch.util.MapBuilder.<java.lang.String, java.lang.Object>builder().add(ClusterJobFileSystemIO.DATA_SOURCE, dataSource).addBiFunction(FileSystemIORepository.WRAPPER, ClusterJobFileSystemIO::new).build()); } catch (java.io.IOException ex) { throw new java.io.UncheckedIOException(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7773/buggy-version/job-cluster.src.main.java.onl.area51.job.cluster.ClusterJobRetriever.java", "BodyUseAPI": ["uk.trainwatch.util.MapBuilder.<java.lang.String, java.lang.Object>builder().add(ClusterJobFileSystemIO.DATA_SOURCE, dataSource).addBiFunction(FileSystemIORepository.WRAPPER,ClusterJobFileSystemIO::new)", "java.nio.file.FileSystems.newFileSystem(java.net.URI,uk.trainwatch.util.MapBuilder.<java.lang.String, java.lang.Object>builder().add(ClusterJobFileSystemIO.DATA_SOURCE, dataSource).addBiFunction(FileSystemIORepository.WRAPPER, ClusterJobFileSystemIO::new).build())", "java.net.URI.create(java.lang.String)", "uk.trainwatch.util.MapBuilder.<java.lang.String, java.lang.Object>builder().add(ClusterJobFileSystemIO.DATA_SOURCE, dataSource).addBiFunction(FileSystemIORepository.WRAPPER, ClusterJobFileSystemIO::new).build()", "uk.trainwatch.util.MapBuilder.<java.lang.String, java.lang.Object>builder().add(ClusterJobFileSystemIO.DATA_SOURCE,javax.sql.DataSource)", "uk.trainwatch.util.MapBuilder.builder()"], "Fixed commit": "a5d7b4c3d7da42c617c527de3d1014388d132535", "Url": "https://api.github.com/repos/peter-mount/Job", "Date": "2016-02-24T18:58:38Z"},
{"Line": "=>1519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { javax.net.ssl.HttpsURLConnection secureConn = ((javax.net.ssl.HttpsURLConnection) (con)); response.cipherSuite = secureConn.getCipherSuite(); response.serverCertificates = secureConn.getServerCertificates(); response.clientCertificates = secureConn.getLocalCertificates(); } catch (java.lang.IllegalStateException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/2411/buggy-version/src.main.java.org.symphonyoss.symphony.jcurl.JCurl.java", "BodyUseAPI": ["javax.net.ssl.HttpsURLConnection.getLocalCertificates()", "javax.net.ssl.HttpsURLConnection.getCipherSuite()", "javax.net.ssl.HttpsURLConnection.getServerCertificates()"], "Fixed commit": "b0dcccd4ab8216e4e79864e2654c6554b8a0c9dd", "Url": "https://api.github.com/repos/bruceskingle/JCurl", "Date": "2017-08-29T03:37:48Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { imageView.setImageBitmap(null); } catch (java.lang.OutOfMemoryError e) { throw new java.io.IOException(\"Unable to load image into memory.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/9275/buggy-version/src.android.Library.src.MultiImageChooserActivity.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(<nulltype>)"], "Fixed commit": "f5fc2543fdd5a3b93706c32254f91133d35601ba", "Url": "https://api.github.com/repos/freiserg/cordova-imagePicker", "Date": "2016-10-14T12:49:01Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { final com.github.mustachejava.Mustache mustache = mc.compile(s); cache.put(s, mustache); mustache.init(); return mustache; } finally { cache.remove(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7050/buggy-version/compiler.src.main.java.com.github.mustachejava.DefaultMustacheFactory.java", "BodyUseAPI": ["com.github.mustachejava.MustacheParser.compile(java.lang.String)", "java.util.Map<java.lang.String, com.github.mustachejava.Mustache>.put(java.lang.String,com.github.mustachejava.Mustache)", "com.github.mustachejava.Mustache.init()"], "Fixed commit": "2dce548e96d53f95ac87c4ea95bb20adedc38c43", "Url": "https://api.github.com/repos/orirawlings/mustache.java", "Date": "2015-03-03T22:39:24Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.io.BufferedReader br = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.DataInputStream(new java.io.FileInputStream(((((baseFilePath + (java.io.File.separator)) + \"Composition\") + (java.io.File.separator)) + \"Composition.txt\"))))); java.lang.String fileLine = br.readLine(); if (fileLine.equals(\"non realizzabile\")) computedComposition = new it.uniroma1.dis.jaco.model.ComputedComposition(false); else computedComposition = new it.uniroma1.dis.jaco.model.ComputedComposition(true); br.close(); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/5411/buggy-version/src.main.java.it.uniroma1.dis.jaco.server.DaemonThread.java", "BodyUseAPI": ["java.io.BufferedReader.close()", "java.io.BufferedReader.readLine()", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "8cb651c441684a577f5d629390642acd9423eb6b", "Url": "https://api.github.com/repos/CianciuStyles/jaco-web-service", "Date": "2013-04-18T16:24:49Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { size = java.lang.Integer.parseInt(Size); if (size > 0) { updateBrush(size); return; } } catch (java.lang.NumberFormatException er) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8178/buggy-version/pc.src.design.PcDesign.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "design.PcDesign.5.updateBrush(int)"], "Fixed commit": "4762546d0309850bfb0983b77d7049db97334017", "Url": "https://api.github.com/repos/NormantasKudzma/PaintAPI", "Date": "2014-10-08T21:13:57Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { ipp = new fntd.workflow.process.ImagePreProcessor(outer.img, outer.options); } catch (java.lang.InterruptedException ex) { java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3525/buggy-version/src.main.java.fntd.workflow.ProcessDialog.java", "BodyUseAPI": [], "Fixed commit": "8cbf33c8d6262eaeb1cecac74dce50e9cb4e276b", "Url": "https://api.github.com/repos/FNTD/Java-library", "Date": "2017-05-29T11:20:19Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { this.iterator = new com.github.qcha.drp.deserializers.DsvIterator(new org.apache.commons.compress.compressors.CompressorStreamFactory().createCompressorInputStream(preference.getCompressType().getAbbreviation(), is), preference); } catch (org.apache.commons.compress.compressors.CompressorException e) { throw new java.lang.RuntimeException(\"Can't create CompressorInputStream.\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3558/buggy-version/src.main.java.com.github.qcha.drp.deserializers.DsvCompressedFileDeserializer.java", "BodyUseAPI": ["preference.getCompressType().getAbbreviation()", "org.apache.commons.compress.compressors.CompressorStreamFactory.createCompressorInputStream(preference.getCompressType().getAbbreviation(),java.io.InputStream)", "com.github.qcha.drp.model.DsvPreference.getCompressType()"], "Fixed commit": "124c4bf628871209c466d9ef34b1498663846057", "Url": "https://api.github.com/repos/qcha/drp", "Date": "2017-05-09T08:02:51Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.eclipse.ui.PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().showView(\"org.cishell.reference.gui.datamanager.DataManagerView\"); } catch (org.eclipse.ui.PartInitException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8691/buggy-version/org.cishell.reference.gui.workflow.src.org.cishell.reference.gui.workflow.views.WorkflowView.java", "BodyUseAPI": ["org.eclipse.ui.PlatformUI.getWorkbench()", "org.eclipse.ui.PlatformUI.getWorkbench().getActiveWorkbenchWindow()", "org.eclipse.ui.PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage()", "org.eclipse.ui.PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().showView(java.lang.String)"], "Fixed commit": "f9afbfe5b9f3a8401e03756d4603ebb54276f607", "Url": "https://api.github.com/repos/pkvenkat/WorkflowTracker", "Date": "2013-04-22T20:42:03Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((adc_.read()) < 542) { led_.indicateLowPower(); lock_.unlock(); } } catch (java.lang.Exception e) { java.lang.System.out.println(\"Failed to read battery sensor\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/994/buggy-version/src.main.java.edu.pitt.BatterySensor.java", "BodyUseAPI": ["edu.pitt.lock.Lock.unlock()", "edu.pitt.LEDManager.indicateLowPower()", "edu.pitt.input.Adc.read()"], "Fixed commit": "b7788ee4c95b1145566813ca17c17ad3bfe4975f", "Url": "https://api.github.com/repos/ernsttm/abracadabra", "Date": "2017-11-26T23:46:38Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { vm = ((it.cnr.isti.smartfed.federation.resources.VmTyped) (ev.getData())); } catch (java.lang.ClassCastException e) { org.cloudbus.cloudsim.Vm generic_vm = ((org.cloudbus.cloudsim.Vm) (ev.getData())); vm = new it.cnr.isti.smartfed.federation.resources.VmTyped(generic_vm, it.cnr.isti.smartfed.federation.resources.VmFactory.VmType.CUSTOM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1811/buggy-version/src.it.cnr.isti.smartfed.federation.resources.FederationDatacenter.java", "BodyUseAPI": ["org.cloudbus.cloudsim.core.SimEvent.getData()"], "Fixed commit": "e50a9393c9fe09efc4c17894bf5a4b6c5f9423da", "Url": "https://api.github.com/repos/ecarlini/smartfed", "Date": "2014-05-23T13:32:13Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { stub = ((main.rmiinterface.Functions) (java.rmi.server.UnicastRemoteObject.exportObject(obj, 0))); } catch (java.lang.Exception e) { stub = ((main.rmiinterface.Functions) (java.rmi.server.UnicastRemoteObject.toStub(obj))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/7904/buggy-version/src.main.java.main.Server.java", "BodyUseAPI": ["java.rmi.server.UnicastRemoteObject.exportObject(main.Server,int)"], "Fixed commit": "98f454581b943a1314047756958a448a676726ea", "Url": "https://api.github.com/repos/KingPin2/VSServer", "Date": "2017-09-26T18:09:27Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (edu.wpi.cs.wpisuitetng.modules.defecttracker.models.DefectEvent event : model.getEvents()) { if (event instanceof edu.wpi.cs.wpisuitetng.modules.defecttracker.models.DefectChangeset) { defectEventPanels.add(new edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectChangesetPanel(((edu.wpi.cs.wpisuitetng.modules.defecttracker.models.DefectChangeset) (event)))); }else if (event instanceof edu.wpi.cs.wpisuitetng.modules.defecttracker.models.Comment) { defectEventPanels.add(new edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.CommentPanel(((edu.wpi.cs.wpisuitetng.modules.defecttracker.models.Comment) (event)))); } } for (edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectEventPanel panel : defectEventPanels) { this.add(panel); } } catch (java.lang.Exception e) { javax.swing.JOptionPane.showMessageDialog(this, \"An error occurred displaying the change history of this defect.\", \"Error Displaying Changes\", javax.swing.JOptionPane.ERROR_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1930/buggy-version/DefectTracker.src.edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectEventView.java", "BodyUseAPI": ["java.util.List<edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectEventPanel>.add(edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectChangesetPanel)", "edu.wpi.cs.wpisuitetng.modules.defecttracker.models.Defect.getEvents()", "java.util.List<edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectEventPanel>.add(edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.CommentPanel)", "edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectEventView.add(edu.wpi.cs.wpisuitetng.modules.defecttracker.defect.DefectEventPanel)"], "Fixed commit": "41ed46be12720a5c2d9ce0e65ac5771b8446c36c", "Url": "https://api.github.com/repos/fracture91/wpi-suite-tng", "Date": "2013-01-23T02:03:08Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return ic.proceed(); } catch (java.lang.Exception ex) { java.util.logging.Logger.getLogger(com.company.rolanddarvas.ee.darvasroland.interceptor.ValidateBeanInterceptor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4048/buggy-version/roland.darvas.EE-1-Homework-Roland.Darvas.EE-1-DarvasRoland.src.main.java.com.company.rolanddarvas.ee.darvasroland.interceptor.ValidateBeanInterceptor.java", "BodyUseAPI": ["javax.interceptor.InvocationContext.proceed()"], "Fixed commit": "4f87dc2284a25314de3ae1ce4fa3f531d2a44dae", "Url": "https://api.github.com/repos/cj19/homeworks", "Date": "2016-07-27T15:30:20Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bot.sendMessage(i, ((uice.name) + \" went online!\")); } catch (java.io.IOException e) { ch.tiim.datapoll.MurmurHandler.LOGGER.info(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1139/buggy-version/src.main.java.ch.tiim.datapoll.MurmurHandler.java", "BodyUseAPI": ["ch.tiim.telegram.TelegramBot.sendMessage(int,((uice.name) + \" went online!\"))"], "Fixed commit": "b506505c70e57f9700c56b69a62c0e4c0036c1bc", "Url": "https://api.github.com/repos/Tiim/telegram_mumble_bot", "Date": "2015-09-11T20:34:59Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bot.sendMessage(i, ((uice.name) + \" went online!\")); } catch (java.io.IOException e) { ch.tiim.datapoll.MurmurHandler.LOGGER.info(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/1139/buggy-version/src.main.java.ch.tiim.datapoll.MurmurHandler.java", "BodyUseAPI": ["ch.tiim.telegram.TelegramBot.sendMessage(int,((uice.name) + \" went online!\"))"], "Fixed commit": "b506505c70e57f9700c56b69a62c0e4c0036c1bc", "Url": "https://api.github.com/repos/Tiim/telegram_mumble_bot", "Date": "2015-09-11T20:34:59Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(10000); client.WhiteboardGUI.main(new java.lang.String[]{ \"Steven\" }); } catch (java.lang.InterruptedException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8036/buggy-version/src.server.WhiteboardServer.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)", "client.WhiteboardGUI.main(java.lang.String[])"], "Fixed commit": "8b10929ac7b1129fb5ab8377c3ac0f1318b2039f", "Url": "https://api.github.com/repos/afreel/whiteboard", "Date": "2013-12-07T23:28:23Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { splitWithWiki = split[1].split(\"/wiki/\"); extractedUrl = splitWithWiki[1].substring(0, ((splitWithWiki[1].length()) - 1)); } catch (java.lang.ArrayIndexOutOfBoundsException e) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/4652/buggy-version/src.main.java.com.wikipediaSemanticAnalyser.tokenizing.TokenizerImpl.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "2490ad4a5ad83e94e05dc2e5ad432472174206a2", "Url": "https://api.github.com/repos/ares2015/WikipediaSemanticAnalyser", "Date": "2017-06-23T16:52:01Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (jTunes.App.player.isPlaying()) { jTunes.App.player.end(); jTunes.App.player.load(response); jTunes.App.player.play(); }else if (jTunes.App.player.isCompleted()) { jTunes.App.player.end(); jTunes.App.player.load(response); }else jTunes.App.player.load(response); } catch (java.lang.Exception e) { jTunes.App.player.load(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/6806/buggy-version/jTunes.src.jTunes.App.java", "BodyUseAPI": ["jTunes.AudioPlayer.end()", "jTunes.AudioPlayer.load(java.lang.String)", "jTunes.AudioPlayer.isPlaying()", "jTunes.AudioPlayer.load(java.lang.String)", "jTunes.AudioPlayer.end()", "jTunes.AudioPlayer.play()", "jTunes.AudioPlayer.load(java.lang.String)", "jTunes.AudioPlayer.isCompleted()"], "Fixed commit": "b6e7ed4b0f826a7474b3155c120a566e51eb4ea1", "Url": "https://api.github.com/repos/ahmed3m/jTunes", "Date": "2016-05-22T21:00:33Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return com.sturdyhelmetgames.roomforchange.assets.Assets.roomTemplates.get(com.badlogic.gdx.math.MathUtils.random(((com.sturdyhelmetgames.roomforchange.assets.Assets.roomTemplates.size) - 1))).clone(); } catch (java.lang.CloneNotSupportedException e) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3485/buggy-version/roomforchange.roomforchange.src.com.sturdyhelmetgames.roomforchange.assets.Assets.java", "BodyUseAPI": ["com.sturdyhelmetgames.roomforchange.assets.Assets.roomTemplates.get(com.badlogic.gdx.math.MathUtils.random(((com.sturdyhelmetgames.roomforchange.assets.Assets.roomTemplates.size) - 1))).clone()", "com.badlogic.gdx.math.MathUtils.random(((com.sturdyhelmetgames.roomforchange.assets.Assets.roomTemplates.size) - 1))", "com.badlogic.gdx.utils.Array<com.sturdyhelmetgames.roomforchange.level.RoomTemplate>.get(com.badlogic.gdx.math.MathUtils.random(((com.sturdyhelmetgames.roomforchange.assets.Assets.roomTemplates.size) - 1)))"], "Fixed commit": "b398959e896f080cc0174ca3f157c8377d1dd338", "Url": "https://api.github.com/repos/antionio/game-off-2013", "Date": "2013-11-30T20:00:35Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { longSeed = java.lang.Long.parseLong(seed, 36); } catch (java.lang.NumberFormatException e) { javax.swing.JOptionPane.showMessageDialog(this, \"Voer eerst een geldige seed in.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/8551/buggy-version/asrs.ExecutionPanel.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String,int)"], "Fixed commit": "096c696feb9499289d9f5cc5360223b7eb7aeed0", "Url": "https://api.github.com/repos/luukholleman/ASRSJava", "Date": "2013-05-23T11:19:45Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { tempChoiceInt = java.lang.Integer.parseInt(choice); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V58/3053/buggy-version/src.com.alwaysstaygold.calculator.Calculator.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "fa1d149f54747b9728a9b8be846ff219562b6f4f", "Url": "https://api.github.com/repos/alwaysstaygold/Calculator_v2", "Date": "2014-06-02T03:40:52Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { UserPackage.Workpass wServer = gson.fromJson(((java.lang.String) (objectIn.readObject())), UserPackage.Workpass.class); db.updateWorkpass(wServer); } catch (com.google.gson.JsonSyntaxException e) { e.printStackTrace(); android.util.Log.v(Tag.LOGTAG, \"N\u00e5got fel p\u00e5 JSON-syntaxen\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6612/buggy-version/app.src.main.java.com.lhadalo.oladahl.autowork.InternetService.java", "BodyUseAPI": ["com.lhadalo.oladahl.autowork.database.SQLiteDB.updateWorkpass(UserPackage.Workpass)", "java.io.ObjectInputStream.readObject()", "com.google.gson.Gson.fromJson(java.lang.Object,java.lang.Class)"], "Fixed commit": "8e07de696530876f4ecbd127c0eabb3f7a70fb43", "Url": "https://api.github.com/repos/tykesson89/auto-work", "Date": "2016-04-30T21:12:13Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { org.omnifaces.util.Messages.setResolver(new org.omnifaces.util.Messages.Resolver() { @java.lang.Override public java.lang.String getMessage(java.lang.String message, java.lang.Object... params) { return ch.codebulb.crudfaces.util.FacesHelper.i18n(message, params); } }); } catch (java.lang.IllegalStateException ex) { ch.codebulb.crudfaces.ApplicationListener.LOGGER.warning(\"The OmniFaces Messages resolver has already been set.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4187/buggy-version/src.main.java.ch.codebulb.crudfaces.ApplicationListener.java", "BodyUseAPI": ["ch.codebulb.crudfaces.util.FacesHelper.i18n(java.lang.String,java.lang.Object[])", "org.omnifaces.util.Messages.setResolver(org.omnifaces.util.Messages.Resolver)"], "Fixed commit": "3e9f423b99fdf3383eaf8c6be05d6da898f85b8a", "Url": "https://api.github.com/repos/codebulb/crudfaces", "Date": "2015-11-23T17:06:12Z"},
{"Line": "=>2376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (org.apache.commons.lang.StringUtils.isNotEmpty(appTypeId)) { technologyGroups = mongoOperation.find(com.photon.phresco.service.rest.api.TECH_GROUP_COLLECTION_NAME, new org.springframework.data.document.mongodb.query.Query(org.springframework.data.document.mongodb.query.Criteria.where(com.photon.phresco.service.rest.api.REST_QUERY_APPTYPEID).is(appTypeId)), com.photon.phresco.commons.model.TechnologyGroup.class); }else { technologyGroups = mongoOperation.getCollection(com.photon.phresco.service.rest.api.TECH_GROUP_COLLECTION_NAME, com.photon.phresco.commons.model.TechnologyGroup.class); } if (org.apache.commons.collections.CollectionUtils.isEmpty(technologyGroups)) { return javax.ws.rs.core.Response.status(Response.Status.NO_CONTENT).build(); } return javax.ws.rs.core.Response.status(Response.Status.OK).entity(technologyGroups).build(); } catch (java.lang.Exception e) { throw new com.photon.phresco.exception.PhrescoWebServiceException(e, EX_PHEX00005, TECH_GROUP_COLLECTION_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5534/buggy-version/phresco-service-web.src.main.java.com.photon.phresco.service.rest.api.ComponentService.java", "BodyUseAPI": ["javax.ws.rs.core.Response.status(Response.Status.OK).entity(java.util.List<com.photon.phresco.commons.model.TechnologyGroup>)", "org.springframework.data.document.mongodb.query.Criteria.where(com.photon.phresco.service.rest.api.REST_QUERY_APPTYPEID).is(java.lang.String)", "javax.ws.rs.core.Response.status(Response.Status.NO_CONTENT).build()", "com.photon.phresco.service.rest.api.ComponentService.getCollection(com.photon.phresco.service.rest.api.TECH_GROUP_COLLECTION_NAME,java.lang.Class)", "javax.ws.rs.core.Response.status(Response.Status.NO_CONTENT)", "com.photon.phresco.service.rest.api.ComponentService.find(com.photon.phresco.service.rest.api.TECH_GROUP_COLLECTION_NAME,org.springframework.data.document.mongodb.query.Query,java.lang.Class)", "org.springframework.data.document.mongodb.query.Criteria.where(com.photon.phresco.service.rest.api.REST_QUERY_APPTYPEID)", "org.apache.commons.lang.StringUtils.isNotEmpty(java.lang.String)", "javax.ws.rs.core.Response.status(Response.Status.OK)", "javax.ws.rs.core.Response.status(Response.Status.OK).entity(technologyGroups).build()", "org.apache.commons.collections.CollectionUtils.isEmpty(java.util.List<com.photon.phresco.commons.model.TechnologyGroup>)"], "Fixed commit": "31e9c599ed00d2d94a05ba2cfd6a1f3f82fb33ce", "Url": "https://api.github.com/repos/photon-infotech/service", "Date": "2013-05-22T11:27:01Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dlg.dismiss(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1351/buggy-version/UniversalPhotoStudio.src.com.gmail.charleszq.picorner.ui.helper.PhotoSetItemAdapter.java", "BodyUseAPI": ["android.app.AlertDialog.dismiss()"], "Fixed commit": "b2364017ce5fe6a0f5eb829edb4c45ff37f58e1f", "Url": "https://api.github.com/repos/yuyang226/UniversalPhotoStudio", "Date": "2013-04-08T03:04:58Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dlg.dismiss(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1351/buggy-version/UniversalPhotoStudio.src.com.gmail.charleszq.picorner.ui.flickr.OrganizeMyFlickrPhotoFragment.java", "BodyUseAPI": ["android.app.AlertDialog.dismiss()"], "Fixed commit": "b2364017ce5fe6a0f5eb829edb4c45ff37f58e1f", "Url": "https://api.github.com/repos/yuyang226/UniversalPhotoStudio", "Date": "2013-04-08T03:04:58Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dialog1.dismiss(); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1351/buggy-version/UniversalPhotoStudio.src.com.gmail.charleszq.picorner.ui.UserPhotoListFragment.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "b2364017ce5fe6a0f5eb829edb4c45ff37f58e1f", "Url": "https://api.github.com/repos/yuyang226/UniversalPhotoStudio", "Date": "2013-04-08T03:04:58Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.nio.file.Paths.get(com.google.cloud.tools.intellij.appengine.sdk.CloudSdkService.getInstance().getSdkHomePath().toString()); configuration.setCloudSdkPath(com.google.cloud.tools.intellij.appengine.sdk.CloudSdkService.getInstance().getSdkHomePath().toString()); } catch (java.nio.file.InvalidPathException ipe) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7136/buggy-version/google-cloud-tools-plugin.src.com.google.cloud.tools.intellij.compiler.StackdriverBuildManagerListener.java", "BodyUseAPI": ["com.google.cloud.tools.intellij.appengine.sdk.CloudSdkService.getInstance().getSdkHomePath()", "java.nio.file.Paths.get(com.google.cloud.tools.intellij.appengine.sdk.CloudSdkService.getInstance().getSdkHomePath().toString())", "com.google.cloud.tools.intellij.appengine.sdk.CloudSdkService.getInstance().getSdkHomePath().toString()", "com.google.cloud.tools.intellij.appengine.sdk.CloudSdkService.getInstance().getSdkHomePath()", "com.google.cloud.tools.intellij.appengine.sdk.CloudSdkService.getInstance()", "com.google.cloud.tools.intellij.jps.model.impl.StackdriverProperties.setCloudSdkPath(com.google.cloud.tools.intellij.appengine.sdk.CloudSdkService.getInstance().getSdkHomePath().toString())", "com.google.cloud.tools.intellij.appengine.sdk.CloudSdkService.getInstance()", "com.google.cloud.tools.intellij.appengine.sdk.CloudSdkService.getInstance().getSdkHomePath().toString()"], "Fixed commit": "f89290396a2f5612094ee3e31f18807e6a718531", "Url": "https://api.github.com/repos/GoogleCloudPlatform/google-cloud-intellij", "Date": "2016-12-13T15:38:57Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.nio.file.Paths.get(sdkPath); } catch (java.nio.file.InvalidPathException ipe) { throw new java.lang.RuntimeException(\"The path contains invalid characters.\", ipe); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7136/buggy-version/google-cloud-tools-plugin.jps-plugin.src.com.google.cloud.tools.intellij.jps.model.impl.StackdriverProperties.java", "BodyUseAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Fixed commit": "f89290396a2f5612094ee3e31f18807e6a718531", "Url": "https://api.github.com/repos/GoogleCloudPlatform/google-cloud-intellij", "Date": "2016-12-13T15:38:57Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.Enumeration<java.net.URL> urls = getClass().getClassLoader().getResources(\"/META-INF/MANIFEST.MF\"); while (urls.hasMoreElements()) { list.addAll(scanInJar(src, regex, new org.nutz.resource.JarEntryInfo(urls.nextElement().toString()).getJarPath())); } } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6333/buggy-version/src.org.nutz.resource.impl.AbstractResourceScan.java", "BodyUseAPI": ["org.nutz.resource.JarEntryInfo.getJarPath()", "java.net.URL.toString()", "org.nutz.resource.impl.AbstractResourceScan.scanInJar(java.lang.String,java.util.regex.Pattern,new org.nutz.resource.JarEntryInfo(urls.nextElement().toString()).getJarPath())", "java.util.List<org.nutz.resource.NutResource>.addAll(java.util.List<org.nutz.resource.NutResource>)", "java.lang.Class<? extends org.nutz.resource.impl.AbstractResourceScan>.getClassLoader()", "org.nutz.resource.impl.AbstractResourceScan.getClass()", "java.util.Enumeration<java.net.URL>.hasMoreElements()", "java.util.Enumeration<java.net.URL>.nextElement()", "java.lang.ClassLoader.getResources(java.lang.String)"], "Fixed commit": "33318dcd0fba09aa48d773964c4f895f312958b1", "Url": "https://api.github.com/repos/cxshun/nutz", "Date": "2012-04-20T08:50:50Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String classpath = java.lang.System.getProperties().getProperty(\"java.class.path\"); if (org.nutz.resource.impl.AbstractResourceScan.log.isInfoEnabled()) org.nutz.resource.impl.AbstractResourceScan.log.info((\"Try to search in classpath : \" + classpath)); java.lang.String[] paths = classpath.split(java.lang.System.getProperties().getProperty(\"path.separator\")); for (java.lang.String pathZ : paths) { if (pathZ.endsWith(\".jar\")) list.addAll(scanInJar(org.nutz.resource.impl.AbstractResourceScan.checkSrc(src), regex, pathZ)); else list.addAll(scanInDir(regex, new java.io.File(((pathZ + \"/\") + src)), true)); } } catch (java.lang.Throwable e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6333/buggy-version/src.org.nutz.resource.impl.AbstractResourceScan.java", "BodyUseAPI": ["org.nutz.resource.impl.AbstractResourceScan.scanInDir(java.util.regex.Pattern,java.io.File,boolean)", "java.lang.String.split(java.lang.String)", "java.util.Properties.getProperty(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.util.List<org.nutz.resource.NutResource>.addAll(java.util.List<org.nutz.resource.NutResource>)", "java.lang.System.getProperties()", "org.nutz.resource.impl.AbstractResourceScan.checkSrc(java.lang.String)", "org.nutz.log.Log.info(java.lang.String)", "org.nutz.log.Log.isInfoEnabled()", "java.lang.System.getProperties()", "java.util.Properties.getProperty(java.lang.String)", "java.util.List<org.nutz.resource.NutResource>.addAll(java.util.List<org.nutz.resource.NutResource>)", "org.nutz.resource.impl.AbstractResourceScan.scanInJar(java.lang.String,java.util.regex.Pattern,java.lang.String)"], "Fixed commit": "33318dcd0fba09aa48d773964c4f895f312958b1", "Url": "https://api.github.com/repos/cxshun/nutz", "Date": "2012-04-20T08:50:50Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { android.os.StatFs stat = new android.os.StatFs(dir.getParentFile().getAbsolutePath()); return stat.getAvailableBytes(); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7681/buggy-version/app.src.main.java.com.seafile.seadroid2.data.StorageManagerLollipop.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "java.io.File.getParentFile()", "android.os.StatFs.getAvailableBytes()"], "Fixed commit": "69ce8f8d0bb497070e5e48f017d07b424ceeb973", "Url": "https://api.github.com/repos/max32002/seadroid", "Date": "2016-12-24T11:47:26Z"},
{"Line": "=>641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { fileInRepo = getLocalRepoFile(repoName, repoID, path); } catch (java.lang.RuntimeException e) { new com.seafile.seadroid2.SeafException(com.seafile.seadroid2.SeafException.OTHER_EXCEPTION, e.getMessage()); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7681/buggy-version/app.src.main.java.com.seafile.seadroid2.data.DataManager.java", "BodyUseAPI": ["com.seafile.seadroid2.data.DataManager.getLocalRepoFile(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "69ce8f8d0bb497070e5e48f017d07b424ceeb973", "Url": "https://api.github.com/repos/max32002/seadroid", "Date": "2016-12-24T11:47:26Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { attrJson = org.cripac.isee.vpe.util.JsonHelper.toJson(attr, org.cripac.isee.pedestrian.attr.Attributes.class); } catch (org.cripac.isee.vpe.util.JsonHelper e) { e.printStackTrace(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1452/buggy-version/src.main.java.org.cripac.isee.pedestrian.reid.ExternPedestrianComparerUsingAttr.java", "BodyUseAPI": ["org.cripac.isee.vpe.util.JsonHelper.toJson(org.cripac.isee.pedestrian.attr.Attributes,java.lang.Class)"], "Fixed commit": "17c710eba764d23a91bc9b4ccf144897371a63f2", "Url": "https://api.github.com/repos/kyu-sz/LaS-VPE-Platform", "Date": "2016-12-22T05:54:02Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { lzma_in = Start.class.getClassLoader().loadClass(\"LZMA.LzmaInputStream\"); if (lzma_in == null) Start.log(\"class not initialized\"); else Start.log(lzma_in.getConstructor(java.io.InputStream.class).toString()); } catch (java.lang.ClassNotFoundException | java.lang.NoSuchMethodException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1249/buggy-version/Start.java", "BodyUseAPI": ["java.lang.Class<?>.getConstructor(java.lang.Class)", "java.lang.Class.getClassLoader()", "Start.log(java.lang.String)", "Start.log(java.lang.String)", "java.lang.ClassLoader.loadClass(java.lang.String)", "java.lang.reflect.Constructor<?>.toString()"], "Fixed commit": "f313c7c500cb74ac82e03cc2025ee4a8ae1c23d2", "Url": "https://api.github.com/repos/valen214/mcl", "Date": "2016-03-19T06:28:16Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { return ((org.apache.ignite.lang.IgniteFuture<java.lang.Void>) (new org.apache.ignite.internal.util.future.IgniteFutureImpl(ctx.service().deployNodeSingleton(prj, name, svc)))); } finally { unguard(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8131/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.IgniteServicesImpl.java", "BodyUseAPI": ["ctx.service().deployNodeSingleton(org.apache.ignite.internal.cluster.ClusterGroupAdapter,java.lang.String,org.apache.ignite.services.Service)", "org.apache.ignite.internal.GridKernalContext.service()"], "Fixed commit": "979fe8c34c34ed295f222c3988281eed08d8f43f", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2017-02-07T09:15:34Z"},
{"Line": "=>675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { int mt_ver = prefs.getInt(\"MT_VER\", 0); int sa_ver_old = prefs.getInt(\"SA_VER_OLD\", (-1)); if ((mt_ver < (com.soomla.store.StoreConfig.METADATA_VERSION)) || (sa_ver_old < (com.soomla.store.data.StoreInfo.mCurrentAssetsVersion))) { resetMeta = true; } } catch (java.lang.Exception e) { com.soomla.SoomlaUtils.LogDebug(com.soomla.store.data.StoreInfo.TAG, \"This is probably an older (obfuscated) sharedPrefs\"); resetMeta = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1389/buggy-version/SoomlaAndroidStore.src.com.soomla.store.data.StoreInfo.java", "BodyUseAPI": ["android.content.SharedPreferences.getInt(java.lang.String,int)", "android.content.SharedPreferences.getInt(java.lang.String,int)"], "Fixed commit": "abe6b6632d2bc358a58acff9054bf37113c0944d", "Url": "https://api.github.com/repos/soomla/android-store", "Date": "2014-09-03T06:48:37Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (((this.progress) != null) && (this.progress.isShowing())) { this.progress.dismiss(); } } catch (final java.lang.IllegalArgumentException e) { android.util.Log.d(\"Dialog error\", e.getMessage()); } catch (final java.lang.Exception e) { android.util.Log.d(\"Dialog error\", e.getMessage()); } finally { this.progress = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6220/buggy-version/app.src.main.java.com.example.matant.gpsportclient.MainScreen.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()", "android.app.ProgressDialog.isShowing()"], "Fixed commit": "45ab5e41364967c74f48192874d0ba987ff83873", "Url": "https://api.github.com/repos/MatanTubul/GPSportClient", "Date": "2015-09-17T13:05:16Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { parsedDate = dt1.parse(date.toString()); play.Logger.debug((\"Parsed Date: \" + parsedDate)); } catch (java.text.ParseException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/349/buggy-version/app.controllers.com.contactmanager.ReportsController.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)", "play.Logger.debug(java.lang.String)", "java.util.Date.toString()"], "Fixed commit": "0912ece268d9c6a7576bf2d0c3881efd5c312680", "Url": "https://api.github.com/repos/pawanmit/contactmanager", "Date": "2013-08-22T20:34:42Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (java.lang.String path : getParentPaths().get(parent)) { parent.handleEvent(e.backPropagate(path), visited.plus(parent)); } } catch (java.lang.NullPointerException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2190/buggy-version/src.main.java.com.objectgraph.core.Node.java", "BodyUseAPI": ["java.util.Map<com.objectgraph.core.EventRecipient, java.util.Set<java.lang.String>>.get(com.objectgraph.core.EventRecipient)", "com.objectgraph.core.Node.getParentPaths()", "org.pcollections.PSet<com.objectgraph.core.EventRecipient>.plus(com.objectgraph.core.EventRecipient)", "com.objectgraph.core.Event.backPropagate(java.lang.String)", "com.objectgraph.core.EventRecipient.handleEvent(e.backPropagate(path),visited.plus(parent))"], "Fixed commit": "4902b62619a0024c8a63f824770c4924f3948bdc", "Url": "https://api.github.com/repos/etamponi/object-graph", "Date": "2013-04-09T23:10:27Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return cm.getActiveNetworkInfo().isAvailable(); } catch (java.lang.Exception e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1563/buggy-version/src.awesome.app.NetworkManager.java", "BodyUseAPI": ["cm.getActiveNetworkInfo().isAvailable()", "android.net.ConnectivityManager.getActiveNetworkInfo()"], "Fixed commit": "cf1f19f2ccebe458c129293b49c3eb78c645b9dd", "Url": "https://api.github.com/repos/HawaiianNinja/RoseHulman-Android-App", "Date": "2012-04-12T03:47:22Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { matcher.extend(tokens[0], (((tokens[1]) + \",\") + (tokens[2]))); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(((((((\"Exception adding '\" + (tokens[0])) + \" with coordinates [\") + (tokens[1])) + \",\") + (tokens[2])) + \"]\"), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3565/buggy-version/Core.src.main.java.dk.statsbiblioteket.summa.common.filter.object.EnrichWithLocationsFilter.java", "BodyUseAPI": ["dk.statsbiblioteket.summa.common.filter.object.EnrichWithLocationsFilter.LocationMatcher.extend(java.lang.String,java.lang.String)"], "Fixed commit": "cce56ebcfb6bbbf57e4885529ffb84a3bb5dcb4b", "Url": "https://api.github.com/repos/statsbiblioteket/summa", "Date": "2016-10-27T09:53:32Z"},
{"Line": "=>1326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { newEnv = env.clone(); } catch (java.lang.CloneNotSupportedException ex) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8851/buggy-version/src.main.java.com.laytonsmith.core.functions.DataHandling.java", "BodyUseAPI": ["com.laytonsmith.core.functions.Env.clone()"], "Fixed commit": "78a4171e135218b8745ac1ce7decff5fa681d951", "Url": "https://api.github.com/repos/sk89q/commandhelper", "Date": "2012-05-09T02:56:59Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if (!(com.lebelw.Tickets.TBusiness.plugin.checkIfPlayerExists(name))) com.lebelw.Tickets.TBusiness.plugin.createPlayerTicketAccount(name); int playerid = com.lebelw.Tickets.TBusiness.plugin.getPlayerId(name); if (playerid > (-1)) { java.lang.String query = (((((((((\"INSERT INTO business(name,owner_id,lottery,lotterychance,lotteryitem) VALUES('\" + name) + \"','\") + playerid) + \"','\") + lottery) + \"',\") + lotterychance) + \",\") + lotteryitem) + \")\"; if (Tickets.dbm.insert(query)) return true; else throw new org.bukkit.command.CommandException(\"A error occured\"); }else { throw new org.bukkit.command.CommandException(\"This user doesn't exist in the database. Should not see this.\"); } } catch (org.bukkit.command.CommandException e) { throw new org.bukkit.command.CommandException(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6213/buggy-version/src.main.java.com.lebelw.Tickets.TBusiness.java", "BodyUseAPI": ["com.lebelw.Tickets.Tickets.checkIfPlayerExists(java.lang.String)", "com.lebelw.Tickets.Tickets.createPlayerTicketAccount(java.lang.String)", "com.lebelw.Tickets.Tickets.getPlayerId(java.lang.String)", "Tickets.dbm.insert(java.lang.String)"], "Fixed commit": "7281aa93b85b57abbb895b55b8cf161c358735f0", "Url": "https://api.github.com/repos/greatman/Tickets", "Date": "2011-07-15T20:03:30Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { appWidgetManager.updateAppWidget(appWidgetId, remoteViews); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1326/buggy-version/src.com.xlythe.minecraftclock.ClockWidget.java", "BodyUseAPI": ["android.appwidget.AppWidgetManager.updateAppWidget(int,android.widget.RemoteViews)"], "Fixed commit": "8b69b2c2b1c4fcb27c8de4b704f7a4dd84cf9afc", "Url": "https://api.github.com/repos/Xlythe/MinecraftClock", "Date": "2013-04-24T00:27:08Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(sleep); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4607/buggy-version/src.com.Team5427.Networking.Server.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "bc7f623f924a638029178d13f69a2c5f69fbc958", "Url": "https://api.github.com/repos/Team5427/2017-Vision-Processing", "Date": "2017-03-04T22:46:37Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(sleep); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4607/buggy-version/src.com.Team5427.Networking.client.Client.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "bc7f623f924a638029178d13f69a2c5f69fbc958", "Url": "https://api.github.com/repos/Team5427/2017-Vision-Processing", "Date": "2017-03-04T22:46:37Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { super.writeToFile(path, contents, append); } finally { releaseMonitor(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4389/buggy-version/blueprint-sdk.src.blueprint.sdk.core.filesystem.ConcurrentFileSystem.java", "BodyUseAPI": ["blueprint.sdk.core.filesystem.GenericFileSystem.writeToFile(java.lang.String,byte[],boolean)"], "Fixed commit": "10afe24b2958d9d63b63da6da67d4157dd6ebb67", "Url": "https://api.github.com/repos/lempel/blueprint-sdk", "Date": "2014-04-23T05:43:30Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { result = super.readFile(path); } finally { releaseMonitor(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4389/buggy-version/blueprint-sdk.src.blueprint.sdk.core.filesystem.ConcurrentFileSystem.java", "BodyUseAPI": ["blueprint.sdk.core.filesystem.GenericFileSystem.readFile(java.lang.String)"], "Fixed commit": "10afe24b2958d9d63b63da6da67d4157dd6ebb67", "Url": "https://api.github.com/repos/lempel/blueprint-sdk", "Date": "2014-04-23T05:43:30Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { result = super.renameFile(orgPath, newPath); } finally { releaseMonitor(orgPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4389/buggy-version/blueprint-sdk.src.blueprint.sdk.core.filesystem.ConcurrentFileSystem.java", "BodyUseAPI": ["blueprint.sdk.core.filesystem.GenericFileSystem.renameFile(java.lang.String,java.lang.String)"], "Fixed commit": "10afe24b2958d9d63b63da6da67d4157dd6ebb67", "Url": "https://api.github.com/repos/lempel/blueprint-sdk", "Date": "2014-04-23T05:43:30Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { return android.graphics.BitmapFactory.decodeByteArray(blob, 0, blob.length); } catch (java.lang.OutOfMemoryError e) { android.graphics.BitmapFactory.Options options = new android.graphics.BitmapFactory.Options(); options.inSampleSize = 8; return android.graphics.BitmapFactory.decodeByteArray(blob, 0, blob.length, options); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7376/buggy-version/app.src.main.java.com.apps.devamit.jago_final.ImageDatabaseHelper.java", "BodyUseAPI": ["android.graphics.BitmapFactory.decodeByteArray(byte[],int,int)"], "Fixed commit": "f837ed66273efd75c06c080c5facc9eb7dc2e253", "Url": "https://api.github.com/repos/singh-95/Jago_final", "Date": "2017-12-22T07:43:02Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { transformerFactory = javax.xml.transform.TransformerFactory.newInstance(\"net.sf.saxon.TransformerFactoryImpl\", null); } catch (javax.xml.transform.TransformerFactoryConfigurationError error) { throw new javax.xml.transform.TransformerException(\"The Saxon (HE) library is required to transform XML to JSON. Please make sure it is included as a project dependency.\", error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4133/buggy-version/src.main.java.com.centropoly.oxo.WebService.java", "BodyUseAPI": ["javax.xml.transform.TransformerFactory.newInstance(java.lang.String,<nulltype>)"], "Fixed commit": "1d66e9b0afa2ff006128d73210117a9240ee499d", "Url": "https://api.github.com/repos/PaulMaas/OXOFramework", "Date": "2015-11-02T06:52:11Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { c = mDbHelper.getCellData(); } catch (java.lang.IllegalStateException ix) { android.util.Log.e(TAG, ix.getMessage(), ix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1253/buggy-version/app.src.main.java.com.SecUpwN.AIMSICD.activities.MapViewerOsmDroid.java", "BodyUseAPI": ["com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.getCellData()"], "Fixed commit": "504e814942a9966f880cc3f415908664a0e8136c", "Url": "https://api.github.com/repos/tobykurien/Android-IMSI-Catcher-Detector", "Date": "2014-12-19T22:35:20Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { shiftsToEnrol = net.sourceforge.fenixedu.applicationTier.Servico.enrollment.shift.ReadShiftsToEnroll.runReadShiftsToEnroll(registration); } catch (net.sourceforge.fenixedu.applicationTier.Servico.exceptions.FenixServiceException exception) { addActionMessage(request, exception.getMessage()); return mapping.getInputForward(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3250/buggy-version/src.main.java.net.sourceforge.fenixedu.presentationTier.Action.student.enrollment.ShiftStudentEnrollmentManagerDispatchAction.java", "BodyUseAPI": ["net.sourceforge.fenixedu.applicationTier.Servico.enrollment.shift.ReadShiftsToEnroll.runReadShiftsToEnroll(net.sourceforge.fenixedu.domain.student.Registration)"], "Fixed commit": "c5d31785bb32d6d4364d247fa228b0fc5d08ca65", "Url": "https://api.github.com/repos/ist-dsi/fenix", "Date": "2013-09-12T17:09:15Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { statsD.connect(); final long epoch = (clock.time()) / 1000; printRegularMetrics(epoch); } catch (java.io.IOException e) { com.readytalk.metrics.StatsDReporter.LOG.info(\"Failed to connect or print metrics to statsd\", e); } finally { try { statsD.close(); } catch (java.io.IOException e) { com.readytalk.metrics.StatsDReporter.LOG.info(\"Failure when closing statsd connection\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4301/buggy-version/metrics2-statsd.src.main.java.com.readytalk.metrics.StatsDReporter.java", "BodyUseAPI": ["com.readytalk.metrics.StatsDReporter.printRegularMetrics(long)", "com.yammer.metrics.core.Clock.time()", "com.readytalk.metrics.StatsD.connect()"], "Fixed commit": "e34ba33622603da2252a4f048f640170f84e37f8", "Url": "https://api.github.com/repos/mkeesey/metrics-statsd", "Date": "2013-11-26T21:05:00Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { workspace = org.eclipse.core.resources.ResourcesPlugin.getWorkspace(); } catch (java.lang.IllegalStateException e) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8704/buggy-version/eclipse.plugins.net.sf.orcc.cal.src.net.sf.orcc.cal.validation.WarningValidator.java", "BodyUseAPI": ["org.eclipse.core.resources.ResourcesPlugin.getWorkspace()"], "Fixed commit": "ae381b307c74d56bba47645fb5be779dbda30892", "Url": "https://api.github.com/repos/orcc/orcc", "Date": "2014-06-30T09:26:04Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { com.google.android.gms.maps.model.LatLngBounds bounds = new com.google.android.gms.maps.model.LatLngBounds(new com.google.android.gms.maps.model.LatLng(minLat, minLng), new com.google.android.gms.maps.model.LatLng(maxLat, maxLng)); mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(bounds, 250)); } catch (java.lang.Exception e) { com.google.firebase.crash.FirebaseCrash.logcat(Log.ERROR, \"MapsActivity\", \"moveCamera with bound 250\"); com.google.firebase.crash.FirebaseCrash.report(e); com.google.android.gms.maps.model.LatLngBounds bounds = new com.google.android.gms.maps.model.LatLngBounds(new com.google.android.gms.maps.model.LatLng(minLat, minLng), new com.google.android.gms.maps.model.LatLng(maxLat, maxLng)); mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(bounds, 100)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8675/buggy-version/app.src.main.java.com.appspace.evytink.activity.MapsActivity.java", "BodyUseAPI": ["com.google.android.gms.maps.GoogleMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(bounds, 250))", "com.google.android.gms.maps.CameraUpdateFactory.newLatLngBounds(com.google.android.gms.maps.model.LatLngBounds,int)"], "Fixed commit": "6018536a4cd652291754d606bb874ef2ca702a2e", "Url": "https://api.github.com/repos/puuga/EvyTink-Android", "Date": "2016-09-24T03:56:08Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch]", "Content": "=>try { java.io.PrintWriter f = new java.io.PrintWriter(\"output.out\"); } catch (java.lang.Exception e) { e.printStackTrace(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2845/buggy-version/mod3.part2.textgen.MarkovTextGeneratorGrader.java", "BodyUseAPI": [], "Fixed commit": "bac1f2693cc9af0f50bf07744809b02080cf0514", "Url": "https://api.github.com/repos/alecbrick/Course2Graders", "Date": "2015-10-15T15:23:55Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { path = new java.net.URI(path).getPath(); } catch (java.net.URISyntaxException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3505/buggy-version/wiki-service.src.main.java.org.exoplatform.wiki.rendering.widget.ChildrenWidgetPlugin.java", "BodyUseAPI": ["java.net.URI.getPath()"], "Fixed commit": "bf028330ad6b8abed75a1e38f4fa5a5a23dedfbe", "Url": "https://api.github.com/repos/exodev/wiki", "Date": "2014-01-17T04:53:27Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { rv = item.getUnlocalizedName().contains(\"tile.blockMagicalLeaves\"); } catch (java.lang.NullPointerException e) { ProgressiveAutomation.logger.warn(\"NullPointerException caught while calling ItemStack.getUnlocalizedName()\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6468/buggy-version/src.main.java.com.vanhal.progressiveautomation.compat.mods.ThaumCraft.java", "BodyUseAPI": ["item.getUnlocalizedName().contains(java.lang.String)", "net.minecraft.item.ItemStack.getUnlocalizedName()"], "Fixed commit": "3975c053b62521cfbb0b707601a290aaacb89b2b", "Url": "https://api.github.com/repos/dshadowwolf/ProgressiveAutomation", "Date": "2016-05-07T22:06:44Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.nio.file.WatchKey key = watcher.take(); java.nio.file.Path dir = keys.get(key); for (java.nio.file.WatchEvent<?> event : key.pollEvents()) { java.nio.file.WatchEvent<java.nio.file.Path> ev = org.watertemplate.i18n.developer.DirectoryWatcher.cast(event); java.nio.file.Path child = dir.resolve(ev.context()); org.watertemplate.i18n.developer.DirectoryWatcher.LOGGER.info(event.kind().name()); r.run(); if ((event.kind()) == (java.nio.file.StandardWatchEventKinds.ENTRY_CREATE)) { if (java.nio.file.Files.isDirectory(child, java.nio.file.LinkOption.NOFOLLOW_LINKS)) { registerAll(child); } } } boolean valid = key.reset(); if (!valid) { keys.remove(key); if (keys.isEmpty()) { break; } } } catch (java.lang.Exception e) { org.watertemplate.i18n.developer.DirectoryWatcher.LOGGER.error(\"Error rebuilding templates\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1871/buggy-version/watertemplate-i18n.src.main.java.org.watertemplate.i18n.developer.DirectoryWatcher.java", "BodyUseAPI": ["org.watertemplate.i18n.developer.DirectoryWatcher.cast(java.nio.file.WatchEvent<?>)", "java.nio.file.WatchEvent<?>.kind()", "java.util.Map<java.nio.file.WatchKey, java.nio.file.Path>.isEmpty()", "java.nio.file.WatchEvent<java.nio.file.Path>.context()", "java.nio.file.Path.resolve(java.nio.file.Path)", "java.nio.file.WatchEvent.Kind<?>.name()", "java.util.Map<java.nio.file.WatchKey, java.nio.file.Path>.get(java.nio.file.WatchKey)", "java.nio.file.WatchEvent<?>.kind()", "java.nio.file.Files.isDirectory(java.nio.file.Path,java.nio.file.LinkOption)", "java.nio.file.WatchKey.reset()", "org.slf4j.Logger.info(java.lang.String)", "org.watertemplate.i18n.developer.DirectoryWatcher.1.registerAll(java.nio.file.Path)", "java.util.Map<java.nio.file.WatchKey, java.nio.file.Path>.remove(java.nio.file.WatchKey)", "java.nio.file.WatchKey.pollEvents()", "java.lang.Runnable.run()", "java.nio.file.WatchService.take()"], "Fixed commit": "d9434635babca10f8f316bc4c60c1820014950cd", "Url": "https://api.github.com/repos/tiagobento/watertemplate-engine", "Date": "2015-04-27T20:48:06Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { if ((board[j][i]) > 0) { if (((((board[j][i]) == (board[j][(i + 1)])) && ((board[j][i]) == (board[j][(i + 2)]))) && ((board[j][i]) == (board[j][(i + 3)]))) && (i < 6)) { return playerNumber; }else { if ((((board[j][i]) == (board[j][(i + 1)])) && ((board[j][i]) == (board[j][(i + 2)]))) && (i < 7)) { return playerNumber + 10; } } } if ((board[i][j]) > 0) { if (((((board[i][j]) == (board[(i + 1)][j])) && ((board[i][j]) == (board[(i + 2)][j]))) && ((board[i][j]) == (board[(i + 3)][j]))) && (i < 6)) { return playerNumber; }else { if ((((board[i][j]) == (board[(i + 1)][j])) && ((board[i][j]) == (board[(i + 2)][j]))) && (i < 7)) { return playerNumber + 10; } } } } catch (java.lang.Exception e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4810/buggy-version/src.tinf11bc.kbs.yavalath.logic.Yavalath.java", "BodyUseAPI": [], "Fixed commit": "88a11ff1683aa9795c5d897ee20973e66cc92a76", "Url": "https://api.github.com/repos/belafarinrod91/KBSYavalath", "Date": "2013-09-10T15:24:07Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { ready = false; stdInWriter.write(command); stdInWriter.newLine(); stdInWriter.flush(); this.commandListener = commandListener; return executor.submit(() -> { synchronized(this) { while (!(ready)) { try { this.wait(); } catch (java.lang.InterruptedException e) { } } this.commandListener = null; } }); } finally { startLock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2810/buggy-version/PSPool.src.main.java.net.viktorc.pspp.core.ProcessManager.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.submit(java.lang.Runnable)", "java.io.BufferedWriter.newLine()", "java.io.BufferedWriter.flush()", "net.viktorc.pspp.core.ProcessManager.wait()", "java.io.BufferedWriter.write(java.lang.String)"], "Fixed commit": "85c5348e9a8a39ea80e329b45c2b0858b6324698", "Url": "https://api.github.com/repos/ViktorC/PP4J", "Date": "2017-03-10T14:57:26Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.Collections.sort(postetracker.PosteUI.productList, new postetracker.ProductCompareByDate()); } catch (java.lang.Exception e) { java.lang.System.out.println(e.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1192/buggy-version/src.postetracker.PosteUI.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.List<postetracker.Product>,postetracker.ProductCompareByDate)"], "Fixed commit": "0d9d63870ce49281ccfb5f0a3ddd121a268b4815", "Url": "https://api.github.com/repos/PicciMario/PosteTracker", "Date": "2014-10-24T10:06:36Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { o = java.lang.Integer.parseInt(name); } catch (java.lang.NumberFormatException e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1284/buggy-version/src.main.java.xyz.jaoafa.mymaid.EventHandler.CityCornerEditer.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "f7ab0701c0caf6cbabe7dee33f6c019ab408c52d", "Url": "https://api.github.com/repos/book000/MyMaid", "Date": "2017-12-21T11:35:10Z"},
{"Line": "=>1262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { properties.loadFromXML(this.getClass().getClassLoader().getResourceAsStream(DEFAULTPROPERTIESDIR)); } catch (java.lang.Exception e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/5711/buggy-version/src.medsavant.pathways.PathwaysPanel.java", "BodyUseAPI": ["java.lang.Class<? extends medsavant.pathways.PathwaysPanel>.getClassLoader()", "java.lang.ClassLoader.getResourceAsStream(java.lang.String)", "java.util.Properties.loadFromXML(java.io.InputStream)", "medsavant.pathways.PathwaysPanel.getClass()"], "Fixed commit": "603afc7d0710a63ae9f662c3fab7721f0d0a1a1c", "Url": "https://api.github.com/repos/compbio-UofT/pathways-app", "Date": "2014-09-15T21:06:33Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (javax.servlet.http.Cookie coockie : request.getCookies()) { if ((coockie.getName().equals(\"userId\")) && ((coockie.getValue()) != null)) { com.ofir.database.IToDoListDAO DAO = com.ofir.database.HibernateToDoListDAO.getInstance(); try { com.ofir.model.User user = DAO.getUser(java.lang.Integer.valueOf(coockie.getValue())); request.getSession().setAttribute(\"user\", user); return \"redirect:/itemsPage\"; } catch (java.lang.NumberFormatException e) { e.printStackTrace(); } catch (com.ofir.exception.ToDoListDaoException e) { e.printStackTrace(); } } } } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6297/buggy-version/src.main.java.com.ofir.controllers.MainController.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getSession()", "java.lang.NumberFormatException.printStackTrace()", "request.getSession().setAttribute(java.lang.String,com.ofir.model.User)", "javax.servlet.http.HttpServletRequest.getCookies()", "com.ofir.database.IToDoListDAO.getUser(java.lang.Integer)", "coockie.getName().equals(java.lang.String)", "com.ofir.database.HibernateToDoListDAO.getInstance()", "java.lang.Integer.valueOf(coockie.getValue())", "javax.servlet.http.Cookie.getName()", "javax.servlet.http.Cookie.getValue()", "com.ofir.exception.ToDoListDaoException.printStackTrace()", "javax.servlet.http.Cookie.getValue()"], "Fixed commit": "4fad3ad7e604f6dbbfddb534ece66910e6220954", "Url": "https://api.github.com/repos/ofirelarat/TodoListProject", "Date": "2017-08-21T17:15:33Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { val = lexer.intValue(); } catch (java.lang.NumberFormatException ex) { throw new com.alibaba.fastjson.JSONException((\"int value overflow, field : \" + fieldName), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8810/buggy-version/src.main.java.com.alibaba.fastjson.serializer.IntegerCodec.java", "BodyUseAPI": ["com.alibaba.fastjson.parser.JSONLexer.intValue()"], "Fixed commit": "f2c485c6e7159ba961f412c89756f1576bb47e56", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-11T17:40:21Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { activities.TentActivity.updateToWeb = true; } finally { TentActivity.lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8754/buggy-version/app.src.main.java.tasks.SendToMongodbTask.java", "BodyUseAPI": [], "Fixed commit": "35d0e23a446b0c274f6d895b7d562d30cac167a9", "Url": "https://api.github.com/repos/AntonPeniaziev/SmartBracelet", "Date": "2017-06-27T21:20:18Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { image = javax.imageio.ImageIO.read(new java.io.File((\"images/\" + (imageName)))); } catch (java.lang.Exception e) { e.printStackTrace(); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7178/buggy-version/src.Scene.java", "BodyUseAPI": ["javax.imageio.ImageIO.read(java.io.File)"], "Fixed commit": "cd53168689435c3b1d8f827c4a5bd485843c29e4", "Url": "https://api.github.com/repos/SavKhandafirst/12U-----HHSS-Adventure-Game", "Date": "2017-12-06T14:26:25Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { authorityValue = projectService.getProjectByAuthorityId(context, metadatum.authority); } catch (java.lang.IllegalArgumentException e) { org.dspace.app.xmlui.objectmanager.RioxxProjectFunderEnricher.log.error(e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/4494/buggy-version/dspace.modules.xmlui.src.main.java.org.dspace.app.xmlui.objectmanager.RioxxProjectFunderEnricher.java", "BodyUseAPI": ["org.dspace.app.xmlui.objectmanager.ProjectService.getProjectByAuthorityId(org.dspace.app.xmlui.objectmanager.Context,metadatum.authority)"], "Fixed commit": "7057215ff2742379e464124fbaf0bb8ae0b35466", "Url": "https://api.github.com/repos/atmire/RIOXX52", "Date": "2017-01-02T14:22:32Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { method = getRegistrationClass(type).getDeclaredMethod(\"getHandlerList\"); } catch (java.lang.NoSuchMethodException e) { e.printStackTrace(); } catch (java.lang.SecurityException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3790/buggy-version/src.main.java.org.bukkit.plugin.SimplePluginManager.java", "BodyUseAPI": ["java.lang.Class<? extends org.bukkit.event.Event>.getDeclaredMethod(java.lang.String)", "org.bukkit.plugin.SimplePluginManager.getRegistrationClass(java.lang.Class<? extends org.bukkit.event.Event>)"], "Fixed commit": "30b50d31fae55386663cb651968239caf28f3df4", "Url": "https://api.github.com/repos/St-Arai/Experiment1-1", "Date": "2013-06-17T05:54:35Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.awt.image.BufferedImage image = javax.imageio.ImageIO.read(url); if (image == null) { java.lang.System.err.println((\"Failed to load image for \" + url)); continue; } java.io.File outputFile = new java.io.File(((\"output/\" + dayOfMonth) + (url.getPath().substring(url.getPath().lastIndexOf(\"/\"))))); javax.imageio.ImageIO.write(image, \"png\", outputFile); } catch (javax.imageio.IIOException e) { java.lang.System.err.println((\"Failed to find an image at \" + url)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3204/buggy-version/src.main.java.com.blundell.github.reaper.Reaper.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.net.URL.getPath()", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int)", "java.net.URL.getPath()", "javax.imageio.ImageIO.read(java.net.URL)", "javax.imageio.ImageIO.write(java.awt.image.BufferedImage,java.lang.String,java.io.File)"], "Fixed commit": "6f0c624b218779ad15a1f39ae52b8d47614b6453", "Url": "https://api.github.com/repos/blundell/GitHubReaper", "Date": "2017-01-19T13:23:06Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { server.announceToClients(message); } catch (java.io.IOException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6180/buggy-version/OnlineBoxGame.src.game.GameServerThread.java", "BodyUseAPI": ["net.server.ServerThread.announceToClients(net.proto.ExchangeProto.Exchange)"], "Fixed commit": "7e575977aaa10cb1cd208bf1e5a5bbef9e8d2f08", "Url": "https://api.github.com/repos/amindell11/UDPServerClientApplication", "Date": "2016-06-21T20:49:00Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { convertedDate = dateFormat.parse(dateString); } catch (java.text.ParseException x) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1156/buggy-version/app.src.main.java.io.moffat.kitchenpal.EditItem.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "b562bbe21ad491216d8ff095b8bcaa0f97559207", "Url": "https://api.github.com/repos/JordanMoffat/KitchenPal", "Date": "2015-08-21T14:47:45Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { convertedDate = dateFormat.parse(dateString); } catch (java.text.ParseException x) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1156/buggy-version/app.src.main.java.io.moffat.kitchenpal.EditItem.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "b562bbe21ad491216d8ff095b8bcaa0f97559207", "Url": "https://api.github.com/repos/JordanMoffat/KitchenPal", "Date": "2015-08-21T14:47:45Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { convertedDate = dateFormat.parse(dateString); } catch (java.text.ParseException x) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1156/buggy-version/app.src.main.java.io.moffat.kitchenpal.EditItem.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "b562bbe21ad491216d8ff095b8bcaa0f97559207", "Url": "https://api.github.com/repos/JordanMoffat/KitchenPal", "Date": "2015-08-21T14:47:45Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.Thread.sleep(2000); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3753/buggy-version/lab6.src.GlobalNavigation.GlobalNavigation.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "04954599ad4a776587ded22fd5e73df68732a3b9", "Url": "https://api.github.com/repos/vkee/rss_team2", "Date": "2015-03-17T01:00:47Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { for (java.lang.reflect.Field field : init.getPersistentClass().getDeclaredFields()) { if (field.isAnnotationPresent(javax.persistence.Id.class)) { idFieldName = field.getName(); break; } } } catch (java.lang.Exception e) { idFieldName = init.getEntityName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1953/buggy-version/hibernate5.src.main.java.com.fasterxml.jackson.datatype.hibernate5.HibernateProxySerializer.java", "BodyUseAPI": ["init.getPersistentClass().getDeclaredFields()", "org.hibernate.proxy.LazyInitializer.getPersistentClass()", "java.lang.reflect.Field.isAnnotationPresent(java.lang.Class)", "java.lang.reflect.Field.getName()"], "Fixed commit": "d95f223ea12b67b8553d825ae1c9b066c33521ae", "Url": "https://api.github.com/repos/mohsenkashi/jackson-datatype-hibernate", "Date": "2016-06-11T06:55:32Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { dialog.show(context.getFragmentManager(), com.rubengees.vocables.core.GoogleServiceConnection.GOOGLE_SERVICE_ERROR_DIALOG); } catch (java.lang.IllegalStateException ignored) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6681/buggy-version/app.src.main.java.com.rubengees.vocables.core.GoogleServiceConnection.java", "BodyUseAPI": ["android.app.Activity.getFragmentManager()", "com.rubengees.vocables.dialog.GoogleServiceErrorDialog.show(context.getFragmentManager(),java.lang.String)"], "Fixed commit": "ce02ffadd26366863c57388b7a549acd1f3ccbd7", "Url": "https://api.github.com/repos/rubengees/Vocabletrainer", "Date": "2015-07-01T21:05:28Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { if ((this.manager) != null) { this.manager.close(); this.manager.toMaintenance().destroy(); this.isInitialized = false; this.manager = null; } } catch (java.lang.Throwable t) { java.lang.System.out.println(\"Encountered exception while destroying cache.\"); t.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3573/buggy-version/runwaysdk-server.src.main.java.com.runwaysdk.dataaccess.cache.globalcache.ehcache.Diskstore.java", "BodyUseAPI": ["org.ehcache.PersistentCacheManager.close()", "this.manager.toMaintenance().destroy()", "org.ehcache.PersistentCacheManager.toMaintenance()"], "Fixed commit": "d4e207a8707af9cc5a69f3dd7271d53d9b719a62", "Url": "https://api.github.com/repos/terraframe/Runway-SDK", "Date": "2016-01-04T16:23:14Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { material = getMaterial(args[1], PlotWorld.BLOCKS); } catch (java.lang.NullPointerException e) { material = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/483/buggy-version/PlotSquared.src.main.java.com.intellectualcrafters.plot.commands.Set.java", "BodyUseAPI": ["com.intellectualcrafters.plot.commands.Set.getMaterial(java.lang.String,PlotWorld.BLOCKS)"], "Fixed commit": "12c476f3c2a5b913e14684509c1ed8081f490aff", "Url": "https://api.github.com/repos/IntellectualCrafters/PlotSquared", "Date": "2014-11-07T10:30:29Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { scimEventType.process(this, entry); } catch (java.lang.Exception e) { edu.internet2.middleware.grouper.scim.ScimChangeLogConsumer.log.warn((((\"ScimChangeLog Consumer '\" + (name)) + \"' exception \") + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/6368/buggy-version/grouper-misc.grouperScim.src.main.java.edu.internet2.middleware.grouper.scim.ScimChangeLogConsumer.java", "BodyUseAPI": ["edu.internet2.middleware.grouper.scim.ScimChangeLogConsumer.ScimEventType.process(edu.internet2.middleware.grouper.scim.ScimChangeLogConsumer,edu.internet2.middleware.grouper.changeLog.ChangeLogEntry)"], "Fixed commit": "2685ece7d6347cb33647f6040ed0a5600d84c275", "Url": "https://api.github.com/repos/Internet2/grouper", "Date": "2014-07-18T14:56:22Z"},
{"Line": "=>712", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { type = field.getGenericType(); android.util.Log.d(\"asClass\", (\"onTRY=\" + type)); } catch (java.lang.Exception e) { type = field.getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/2668/buggy-version/src.istat.android.data.access.sqlite.SQLiteModel.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)", "java.lang.reflect.Field.getGenericType()"], "Fixed commit": "0905e35331adb65bca60b21557c12c4708d172b7", "Url": "https://api.github.com/repos/toukea/android-sqlite-access", "Date": "2017-01-06T14:53:49Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { bean.setMessage(nnn.tickerText.toString()); bean.setAppName(ctx.getPackageManager().getApplicationLabel(ai).toString()); } catch (java.lang.Exception ex) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1486/buggy-version/PopupNotifications.src.com.bun.popupnotificationsfree.NotificationParser.java", "BodyUseAPI": ["ctx.getPackageManager().getApplicationLabel(android.content.pm.ApplicationInfo)", "ctx.getPackageManager().getApplicationLabel(ai).toString()", "nnn.tickerText.toString()", "com.bun.popupnotificationsfree.NotificationBean.setMessage(nnn.tickerText.toString())", "com.bun.popupnotificationsfree.NotificationBean.setAppName(ctx.getPackageManager().getApplicationLabel(ai).toString())", "android.content.Context.getPackageManager()"], "Fixed commit": "c54c3a9d7843506d9276a5caa08e2195c7586ff7", "Url": "https://api.github.com/repos/vikrammiddha/PopupNotifications", "Date": "2013-11-23T18:09:42Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.util.concurrent.TimeUnit.MILLISECONDS.sleep(100); activity.runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { mPOSHandler.openPaymentActivity(activity, com.mrwinston.mypos.myPOS.REQUEST_CODE_MAKE_PAYMENT, data.optString(0), java.util.UUID.randomUUID().toString()); } }); } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8136/buggy-version/src.android.myPOS.java", "BodyUseAPI": ["java.lang.Object()", "android.app.Activity.runOnUiThread(java.lang.Runnable)", "eu.leupau.icardpossdk.POSHandler.openPaymentActivity(android.app.Activity,int,data.optString(0),java.lang.String)", "java.util.UUID.randomUUID()", "java.util.concurrent.TimeUnit.sleep(int)", "java.util.UUID.toString()", "org.json.JSONArray.optString(int)"], "Fixed commit": "9b5d4336e50bbab1a74838c99619b2c533c3d850", "Url": "https://api.github.com/repos/KoenLav/cordova-plugin-hello", "Date": "2017-10-08T10:10:27Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { java.lang.String key = kvpair.split(\"=>\")[0].replaceAll(\"\\\"\", \"\"); java.lang.String value = kvpair.split(\"=>\")[1].replaceAll(\"\\\"\", \"\"); tags.put(key, value); } catch (java.lang.Exception e) { osmgpxtool.mapmatching.util.Util.LOGGER.info((\"Skipped corrupt hstore entry:\" + kvpair)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/7238/buggy-version/src.osmgpxtool.mapmatching.util.Util.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "2bac82efdc27e36de1939d953795b50af2e3d3ab", "Url": "https://api.github.com/repos/GIScience/osmgpxmapmatcher", "Date": "2016-02-15T08:47:54Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { se.chalmers.lidkopingsh.controller.Accessor.getServerConnector().removeNetworkStatusListener(this); } catch (java.lang.IllegalStateException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/3201/buggy-version/src.se.chalmers.lidkopingsh.controller.MainActivity.java", "BodyUseAPI": ["se.chalmers.lidkopingsh.controller.Accessor.getServerConnector()", "se.chalmers.lidkopingsh.controller.Accessor.getServerConnector().removeNetworkStatusListener(se.chalmers.lidkopingsh.controller.MainActivity)"], "Fixed commit": "3f40ced1038f30d7a0ddaea6f58ae3c572d8296d", "Url": "https://api.github.com/repos/Farenheight/Lidkoping-SH", "Date": "2013-10-26T11:14:05Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { resource = registry.get(child); } catch (org.wso2.carbon.registry.core.secure.AuthorizationFailedException afe) { edu.illinois.i3.htrc.registry.api.workset.WorksetsAPIImpl.Log.warn((\"getUserWorksets: Registry authorization failure. This should not happen.\" + \" But latest Registry version's Collection/getChildren returns private resources.\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/8219/buggy-version/ExtensionAPI.src.main.java.edu.illinois.i3.htrc.registry.api.workset.WorksetsAPIImpl.java", "BodyUseAPI": ["org.wso2.carbon.registry.core.session.UserRegistry.get(java.lang.String)"], "Fixed commit": "9d5472714cfe6a1ae575f6320ab80879492f2a67", "Url": "https://api.github.com/repos/htrc/HTRC-RegistryExtension", "Date": "2015-01-27T19:18:16Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { gatewayManager.deployWebsocketAPI(api, client); } catch (org.json.JSONException ex) { org.wso2.carbon.apimgt.impl.APIGatewayManager.log.error((\"Error occurred deploying sequences on \" + environmentName), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/892/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.APIGatewayManager.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.impl.APIGatewayManager.deployWebsocketAPI(org.wso2.carbon.apimgt.api.model.API,org.wso2.carbon.apimgt.impl.utils.APIGatewayAdminClient)"], "Fixed commit": "4b35f5058c1bd6b307699c4644316390a023a24b", "Url": "https://api.github.com/repos/praminda/carbon-apimgt", "Date": "2016-11-04T11:13:59Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>try { if ((gov.uscourts.cad.vbox.PropertiesBean.instance) == null) { gov.uscourts.cad.vbox.PropertiesBean.instance = new gov.uscourts.cad.vbox.PropertiesBean(); } } catch (java.lang.Exception ex) { throw new javax.ejb.EJBException(\"PropertiesBean initialization error\", ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/9168/buggy-version/vbox-service.src.main.java.gov.uscourts.cad.vbox.PropertiesBean.java", "BodyUseAPI": [], "Fixed commit": "2d94b29255710da5c7cc095a8a7c9b0793328b36", "Url": "https://api.github.com/repos/ldadams/vbox-browser", "Date": "2015-01-23T01:23:37Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try, Catch]", "Content": "=>try { n = findInPkgOrType(name, pkgOrTypeName); } catch (polyglot.types.SemanticException e) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V59/1817/buggy-version/src.polyglot.types.ImportTable.java", "BodyUseAPI": ["polyglot.types.ImportTable.findInPkgOrType(java.lang.String,java.lang.String)"], "Fixed commit": "0f570784cddc4a566d72fb4c13782d66dae08c58", "Url": "https://api.github.com/repos/polyglot-compiler/polyglot", "Date": "2015-09-18T21:13:56Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { dateArray = ((java.util.Date[]) (values.toArray())); isDateArray = true; } catch (java.lang.Exception e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1281/buggy-version/scim.src.main.java.org.gluu.oxtrust.model.scim2.Extension.java", "BodyUseAPI": ["java.util.List<?>.toArray()"], "Fixed commit": "ec9335ff3a612591be7c3b3057eabbac9a235070", "Url": "https://api.github.com/repos/GluuFederation/oxTrust", "Date": "2016-02-27T04:14:21Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { analyze.pattern.PatternMatcher p = new analyze.pattern.PatternMatcher(); int i = 0; model.ChunkedSequentialData result = new model.ChunkedSequentialData(); for (model.SequentialData chunkedData : p.match(arguments[1], data)) { result.add((\"Chunk \" + i), chunkedData); i++; } return result; } catch (analyze.pattern.PatternMatcherException ex) { throw new analyze.chunking.ChunkingException(ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/878/buggy-version/src.main.java.analyze.parsing.ChunkingParser.java", "BodyUseAPI": ["model.ChunkedSequentialData.add(java.lang.String,model.SequentialData)", "analyze.pattern.PatternMatcher.match(java.lang.String,model.SequentialData)"], "Fixed commit": "882c0c5cec37aa165d38c3a822bfdb978c6bcaec", "Url": "https://api.github.com/repos/HansSchouten/context_health_informatics", "Date": "2015-06-12T05:44:27Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { hack.disable(); } catch (java.lang.NoClassDefFoundError err) { log(java.util.logging.Level.WARNING, \"Unable to cleanly disable hack {0}, missing dependency: {1}\", hack.getName(), err.getMessage()); } catch (java.lang.Exception e) { log(java.util.logging.Level.WARNING, \"Unable to cleanly disable hack {0}, unrecognized error: {1}\", hack.getName(), e.getMessage()); log(java.util.logging.Level.WARNING, \"Full stack trace: \", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2185/buggy-version/src.main.java.com.programmerdan.minecraft.simpleadminhacks.SimpleAdminHacks.java", "BodyUseAPI": ["com.programmerdan.minecraft.simpleadminhacks.SimpleHack<?>.disable()"], "Fixed commit": "ef6c2ad5ff0ec71e770e922084ca2bad75dec178", "Url": "https://api.github.com/repos/DevotedMC/SimpleAdminHacks", "Date": "2017-08-02T04:57:21Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { hack.enable(); } catch (java.lang.NoClassDefFoundError err) { log(java.util.logging.Level.WARNING, \"Unable to activate hack {0}, missing dependency: {1}\", hack.getName(), err.getMessage()); unregister(hack); } catch (java.lang.Exception e) { log(java.util.logging.Level.WARNING, \"Unable to activate hack {0}, unrecognized error: {1}\", hack.getName(), e.getMessage()); log(java.util.logging.Level.WARNING, \"Full stack trace: \", e); unregister(hack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2185/buggy-version/src.main.java.com.programmerdan.minecraft.simpleadminhacks.SimpleAdminHacks.java", "BodyUseAPI": ["com.programmerdan.minecraft.simpleadminhacks.SimpleHack<?>.enable()"], "Fixed commit": "ef6c2ad5ff0ec71e770e922084ca2bad75dec178", "Url": "https://api.github.com/repos/DevotedMC/SimpleAdminHacks", "Date": "2017-08-02T04:57:21Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { nuevaFicha.setTratamiento(java.lang.Boolean.parseBoolean(request.getParameter(\"cboTratamiento\"))); } catch (java.lang.Exception e) { nuevaFicha.setTratamiento(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1815/buggy-version/PodCli.src.java.controller.CrearFichaServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "model.bd.Ficha.setTratamiento(boolean)", "java.lang.Boolean.parseBoolean(request.getParameter(\"cboTratamiento\"))"], "Fixed commit": "44114020f3e4519efae9be2269b1ae899fdad878", "Url": "https://api.github.com/repos/pperezp/podcli", "Date": "2017-11-02T01:16:08Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { nuevaFicha.setTipoDiabetes(java.lang.Integer.parseInt(request.getParameter(\"cboTipo\"))); } catch (java.lang.Exception e) { nuevaFicha.setTipoDiabetes(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1815/buggy-version/PodCli.src.java.controller.CrearFichaServlet.java", "BodyUseAPI": ["java.lang.Integer.parseInt(request.getParameter(\"cboTipo\"))", "model.bd.Ficha.setTipoDiabetes(int)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "44114020f3e4519efae9be2269b1ae899fdad878", "Url": "https://api.github.com/repos/pperezp/podcli", "Date": "2017-11-02T01:16:08Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { camera.setParameters(parameters); camera.setPreviewDisplay(holder); camera.startPreview(); } catch (java.io.IOException e) { android.util.Log.d(\"cameraPreview\", (\"Error starting camera preview: \" + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7692/buggy-version/app.src.main.java.com.vuw.project1.riverwatch.Report_functionality.Preview.java", "BodyUseAPI": ["android.hardware.Camera.setPreviewDisplay(android.view.SurfaceHolder)", "android.hardware.Camera.startPreview()", "android.hardware.Camera.setParameters(Camera.Parameters)"], "Fixed commit": "e671cb3f72f508033397cd3b486b26b89bb13d18", "Url": "https://api.github.com/repos/WaiNZ/RiverWatch-Android", "Date": "2016-09-26T23:49:05Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { householdID = java.lang.Integer.parseUnsignedInt(op); } catch (java.lang.NumberFormatException e) { error(xchg, ResponseCode.HOUSEHOLD_NOT_FOUND); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7699/buggy-version/src.routes.GeneralRoute.java", "BodyUseAPI": ["java.lang.Integer.parseUnsignedInt(java.lang.String)"], "Fixed commit": "6a86df98033f8b7ef403de01667e9e64ed4c92d9", "Url": "https://api.github.com/repos/bradwarrum/CS307-Server", "Date": "2015-04-26T19:27:34Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { recipeID = java.lang.Integer.parseUnsignedInt(op); } catch (java.lang.NumberFormatException e) { error(xchg, ResponseCode.RECIPE_NOT_FOUND); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7699/buggy-version/src.routes.GeneralRoute.java", "BodyUseAPI": ["java.lang.Integer.parseUnsignedInt(java.lang.String)"], "Fixed commit": "6a86df98033f8b7ef403de01667e9e64ed4c92d9", "Url": "https://api.github.com/repos/bradwarrum/CS307-Server", "Date": "2015-04-26T19:27:34Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { listID = java.lang.Integer.parseUnsignedInt(op); } catch (java.lang.NumberFormatException e) { error(xchg, ResponseCode.LIST_NOT_FOUND); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7699/buggy-version/src.routes.GeneralRoute.java", "BodyUseAPI": ["java.lang.Integer.parseUnsignedInt(java.lang.String)"], "Fixed commit": "6a86df98033f8b7ef403de01667e9e64ed4c92d9", "Url": "https://api.github.com/repos/bradwarrum/CS307-Server", "Date": "2015-04-26T19:27:34Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { org.springframework.context.ApplicationContext ctx = new org.springframework.context.support.ClassPathXmlApplicationContext(\"/stock-application-int-batch.xml\"); com.acme.spring.hibernate.service.StockService stockService = ctx.getBean(com.acme.spring.hibernate.service.StockService.class); com.acme.spring.hibernate.batch.integration.service.StockServiceInt stockServiceInt = ctx.getBean(com.acme.spring.hibernate.batch.integration.service.StockServiceInt.class); com.acme.spring.hibernate.batch.integration.Application.runIntegration(stockService, stockServiceInt); } catch (java.lang.Exception x) { com.acme.spring.hibernate.batch.integration.Application.LOG.error(\"Integration run failed\", x); java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/7892/buggy-version/src.main.java.com.acme.spring.hibernate.batch.integration.Application.java", "BodyUseAPI": ["org.springframework.context.ApplicationContext.getBean(java.lang.Class)", "com.acme.spring.hibernate.batch.integration.Application.runIntegration(com.acme.spring.hibernate.service.StockService,com.acme.spring.hibernate.batch.integration.service.StockServiceInt)", "org.springframework.context.ApplicationContext.getBean(java.lang.Class)"], "Fixed commit": "64c133ead107a99ce651af5735e14daa0cbeae61", "Url": "https://api.github.com/repos/scottysinclair/stock-application-batch", "Date": "2017-03-27T10:07:02Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { database.UserData user = _users.get(session.getName()); return (user.getSalt().compareTo(session.getID())) == 0; } catch (java.lang.NullPointerException e) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/5835/buggy-version/src.database.UserDatabase.java", "BodyUseAPI": ["java.util.Map<java.lang.String, database.UserData>.get(session.getName())", "database.UserData.getSalt()", "communication.Session.getName()", "user.getSalt().compareTo(session.getID())", "communication.Session.getID()"], "Fixed commit": "4c4c53e4b45a23c2c39d9e78752b6bf199dc5eed", "Url": "https://api.github.com/repos/Malthael/Simple-Borrow-System", "Date": "2014-06-16T14:45:52Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { playStore = s.equals(ModulesFragment.PLAY_STORE_PACKAGE); } catch (java.lang.NullPointerException e) { playStore = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/401/buggy-version/app.src.main.java.de.robv.android.xposed.installer.DownloadDetailsActivity.java", "BodyUseAPI": ["java.lang.String.equals(ModulesFragment.PLAY_STORE_PACKAGE)"], "Fixed commit": "bcc7cafde4119d710e66be8670faa70b0da5abc8", "Url": "https://api.github.com/repos/DVDAndroid/XposedInstaller", "Date": "2016-01-05T15:46:35Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { flights = service.findByDepartureDate(java.sql.Date.valueOf(request.getParameter(\"search_field\"))); } catch (java.lang.IllegalArgumentException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/8577/buggy-version/src.main.java.by.bsuir.spp.airport.command.impl.SearchCommand.java", "BodyUseAPI": ["java.sql.Date.valueOf(request.getParameter(\"search_field\"))", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "by.bsuir.spp.airport.service.FlightService.findByDepartureDate(java.sql.Date)"], "Fixed commit": "48903064e64ea1f65da0726e4b964a5cdbaeacf8", "Url": "https://api.github.com/repos/larisabigvava/airport", "Date": "2016-05-22T18:00:34Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { if ((encodings.size()) <= i) { continue; } java.util.Map<java.lang.String, java.lang.Integer> encoding = encodings.get(i); if ((encoding != null) && (!(encoding.isEmpty()))) { java.lang.String code = ((encoding.get(tokens[i])) == null) ? tokens[i] : java.lang.String.valueOf(encoding.get(tokens[i])); tokens[i] = code; } } catch (java.lang.Exception e) { throw new org.wso2.carbon.ml.core.exceptions.MLModelBuilderException((((\"An error occurred while encoding: \" + (tokens[i])) + \" : Cause:\") + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1016/buggy-version/components.ml.org.wso2.carbon.ml.core.src.main.java.org.wso2.carbon.ml.core.spark.transformations.OneHotEncoder.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Integer>.isEmpty()", "java.util.List<java.util.Map<java.lang.String, java.lang.Integer>>.size()", "java.util.List<java.util.Map<java.lang.String, java.lang.Integer>>.get(int)", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.lang.String.valueOf(java.lang.Integer)"], "Fixed commit": "21ee8d5edb1f05725cac43819d5d3157c9209b0a", "Url": "https://api.github.com/repos/wso2/carbon-ml", "Date": "2015-05-28T05:30:42Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { test = grid[row][col].contains(getMousePosition()); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4514/buggy-version/FinalV2.src.GamePanel.java", "BodyUseAPI": ["java.awt.Rectangle.contains(java.awt.Point)", "GamePanel.getMousePosition()"], "Fixed commit": "5ce434e67608f787ef7afb0f43c3be3eb8edc7b2", "Url": "https://api.github.com/repos/rx5842/FinalV2", "Date": "2017-05-21T03:50:13Z"},
{"Line": "=>646", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { test = grid[row][col].contains(getMousePosition()); } catch (java.lang.NullPointerException e) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4514/buggy-version/FinalV2.src.GamePanel.java", "BodyUseAPI": ["java.awt.Rectangle.contains(java.awt.Point)", "GamePanel.getMousePosition()"], "Fixed commit": "5ce434e67608f787ef7afb0f43c3be3eb8edc7b2", "Url": "https://api.github.com/repos/rx5842/FinalV2", "Date": "2017-05-21T03:50:13Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { java.util.TimeZone.setDefault(tz); parsedDate = formatter.parse(date); } catch (final java.text.ParseException e) { throw e; } catch (final java.lang.Exception e) { throw new java.text.ParseException((\"Parsing faile because of: \" + (e.getMessage())), 0); } finally { java.util.TimeZone.setDefault(curTz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1563/buggy-version/src.net.meisen.general.genmisc.types.Dates.java", "BodyUseAPI": ["java.util.TimeZone.setDefault(java.util.TimeZone)", "java.text.DateFormat.parse(java.lang.String)"], "Fixed commit": "59ae82f79a53f810a7a2b58386d4e145942af4e7", "Url": "https://api.github.com/repos/pmeisen/gen-misc", "Date": "2014-02-12T15:49:46Z"},
{"Line": "=>2414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { doc.validate(); } catch (com.orientechnologies.orient.core.db.document.OValidationException e) { doc.undo(); throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2983/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.document.ODatabaseDocumentAbstract.java", "BodyUseAPI": ["com.orientechnologies.orient.core.db.document.ODocument.validate()"], "Fixed commit": "b931cd72ebc375e2728434d6628fae26154c3289", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-02-13T13:00:21Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Try]", "Content": "=>try { instance.release(); } finally { nextListener.proceed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1519/buggy-version/servlet.src.main.java.io.undertow.servlet.spec.AsyncContextImpl.java", "BodyUseAPI": ["io.undertow.servlet.api.InstanceHandle<T>.release()"], "Fixed commit": "614980db9f765530b4b93c4bf83fca050e919b70", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2014-04-26T16:50:34Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { lostDS = Libra.libraService.selectDataSet(((armType) == (com.enums.ArmType.IN) ? com.enums.SearchType.LOSTCARIN : com.enums.SearchType.LOSTCAROUT), params); if ((lostDS != null) && (!(lostDS.isEmpty()))) { lostCarLabel.setText((((com.service.LangService.trans(\"lostcar\")) + \" \") + (lostDS.getStringValue(\"dd\", 0)))); } } catch (java.lang.Exception e) { e.printStackTrace(); com.util.Libra.eMsg(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/4194/buggy-version/Libra.src.main.java.com.bin.LibraPanel.java", "BodyUseAPI": ["Libra.libraService.selectDataSet(((armType) == (com.enums.ArmType.IN) ? com.enums.SearchType.LOSTCARIN : com.enums.SearchType.LOSTCAROUT),java.util.Map<java.lang.String, java.lang.Object>)", "com.model.DataSet.isEmpty()", "com.service.LangService.trans(java.lang.String)", "com.model.DataSet.getStringValue(java.lang.String,int)", "javax.swing.JLabel.setText((((com.service.LangService.trans(\"lostcar\")) + \" \") + (lostDS.getStringValue(\"dd\", 0))))"], "Fixed commit": "57cd76c5ab5457014566529f326488d6172ecd73", "Url": "https://api.github.com/repos/sharlamov/iwork", "Date": "2016-03-22T07:13:34Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { temp = rlfr.readLine(); } catch (java.lang.NullPointerException npe) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/1018/buggy-version/src.main.java.xyz.elidom.control.agent.rest.AgentController.java", "BodyUseAPI": ["org.apache.commons.io.input.ReversedLinesFileReader.readLine()"], "Fixed commit": "6fb0cef6a24436b66625b217dc23c73cb756b96e", "Url": "https://api.github.com/repos/lyonghwan/control-agent", "Date": "2017-03-11T16:40:27Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { effectID = org.bukkit.Effect.valueOf(eff[0]).getId(); } catch (java.lang.Exception ee) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2348/buggy-version/src.main.java.com.sk89q.craftbook.circuits.gates.world.miscellaneous.ParticleEffect.java", "BodyUseAPI": ["org.bukkit.Effect.valueOf(eff[0]).getId()", "org.bukkit.Effect.valueOf(java.lang.String)"], "Fixed commit": "940c29c30db58c7230a657c45851975f989c549e", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-05-12T08:31:29Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>Try", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[Catch, Try]", "Content": "=>try { effectID = org.bukkit.Effect.valueOf(eff[0]).getId(); } catch (java.lang.Exception ee) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V60/2348/buggy-version/src.main.java.com.sk89q.craftbook.circuits.gates.world.miscellaneous.ParticleEffect.java", "BodyUseAPI": ["org.bukkit.Effect.valueOf(eff[0]).getId()", "org.bukkit.Effect.valueOf(java.lang.String)"], "Fixed commit": "940c29c30db58c7230a657c45851975f989c549e", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-05-12T08:31:29Z"}]}
