{"UNKNOWN to If":[{"Line": "=>614", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["filledForm.field(\"dollar_value\").value()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dollar_value.charAt(0)) == '$') { dollar_value = dollar_value.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7714/buggy-version/app.controllers.CRM.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "32d57244dfd7f9fafcc20b2fa0598781018439f6", "Url": "https://api.github.com/repos/schmave/demschooltools", "Date": "2015-07-21T00:30:18Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((items) == null) { loadContent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4781/buggy-version/app.src.main.java.agersant.polaris.features.browse.BrowseActivity.java", "BodyUseAPI": [], "Fixed commit": "557ad6d211ad869f944c9057b320d5ace5c880dc", "Url": "https://api.github.com/repos/agersant/polaris-android", "Date": "2017-06-12T06:49:36Z"},
{"Line": "=>961", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (roadSegmentId != (exitRoadSegmentId)) { exitRoadSegmentId = org.movsim.simulator.vehicles.Vehicle.ROAD_SEGMENT_ID_NOT_SET; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3276/buggy-version/core.src.main.java.org.movsim.simulator.vehicles.Vehicle.java", "BodyUseAPI": [], "Fixed commit": "601aa87f055aaa4968ab80e6caff4cd3aaa72abd", "Url": "https://api.github.com/repos/movsim/movsim", "Date": "2012-03-30T14:03:37Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f1.exists())) { try { f1.createNewFile(); } catch (java.io.IOException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6205/buggy-version/JavaSpace.src.space.Space.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "942e6a9171c63de46a083af6b73b49ac966c325f", "Url": "https://api.github.com/repos/einarmo/javaspacesim", "Date": "2015-01-09T16:33:09Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((workspaceInitializer) == null) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4669/buggy-version/src.main.java.org.iplantc.workflow.integration.json.TitoAnalysisUnmarshaller.java", "BodyUseAPI": [], "Fixed commit": "8cddbe431418488b349a604d7474480f85dc0599", "Url": "https://api.github.com/repos/iPlantCollaborativeOpenSource/metadactyl", "Date": "2013-07-02T02:31:38Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (subscribedDestinations.isEmpty()) { stateMachine.fire(NonBlockingClientTrigger.SUBS_REMADE); }else { remakingInboundLinks = true; for (java.util.Map.Entry<java.lang.String, com.ibm.mqlight.api.impl.NonBlockingClientImpl.SubData> entry : subscribedDestinations.entrySet()) { com.ibm.mqlight.api.impl.NonBlockingClientImpl.SubData data = entry.getValue(); data.state = com.ibm.mqlight.api.impl.NonBlockingClientImpl.SubData.State.ATTACHING; com.ibm.mqlight.api.impl.engine.SubscribeRequest sr = new com.ibm.mqlight.api.impl.engine.SubscribeRequest(currentConnection, entry.getKey(), data.qos, data.credit, data.ttl); engine.tell(sr, this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2071/buggy-version/mqlight.src.main.java.com.ibm.mqlight.api.impl.NonBlockingClientImpl.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, com.ibm.mqlight.api.impl.NonBlockingClientImpl.SubData>.entrySet()"], "Fixed commit": "b3bd1e905cda9a3665a75ab082741e7149923223", "Url": "https://api.github.com/repos/mqlight/java-mqlight", "Date": "2015-01-22T15:58:57Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.terasology.crafting.systems.RecipeStore.getIngredientNames(item.getParentPrefab().getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (otherNames != null) { for (java.lang.String otherName : otherNames) { if (name.equalsIgnoreCase(otherName)) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5725/buggy-version/src.main.java.org.terasology.crafting.systems.BaseCraftingManager.java", "BodyUseAPI": [], "Fixed commit": "636a21ed2a7053fe94884e255902a4d6367f1087", "Url": "https://api.github.com/repos/Terasology/BasicCrafting", "Date": "2017-12-23T13:05:08Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name) != null) { if ((name.contains(\"(\")) && (name.contains(\")\"))) { if ((name.indexOf(\"(\")) < (name.indexOf(\")\"))) { name = name.substring(name.indexOf(\"(\"), name.indexOf(\")\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5501/buggy-version/app.src.main.java.es.kix2902.foodinfo.SelectorActivity.java", "BodyUseAPI": [], "Fixed commit": "6174661437225c5c76f369b5f74c959cafe48ada", "Url": "https://api.github.com/repos/kix2902/FoodInfo", "Date": "2015-09-04T11:47:01Z"},
{"Line": "=>836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.wso2.andes.mqtt.MQTTAuthorizationSubject>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (authSubject == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5183/buggy-version/modules.andes-core.broker.src.main.java.org.dna.mqtt.moquette.messaging.spi.impl.ProtocolProcessor.java", "BodyUseAPI": [], "Fixed commit": "85e4d08a2bf7a270ced41ddfea5b401114f578e6", "Url": "https://api.github.com/repos/wso2/andes", "Date": "2016-08-15T10:18:19Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["message.MessageInputStream.read(byte[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (read < 0) throw new java.io.IOException(\"Client has disconnected.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6179/buggy-version/Term_Project.src.message.MessageInputStream.java", "BodyUseAPI": [], "Fixed commit": "3ff5b17ce5729c05654fe83179387f940391c117", "Url": "https://api.github.com/repos/aetrudel/CPSC559", "Date": "2016-03-31T18:36:02Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["message.MessageInputStream.read(byte[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (read < 0) throw new java.io.IOException(\"Client has disconnected.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6179/buggy-version/Term_Project.src.message.MessageInputStream.java", "BodyUseAPI": [], "Fixed commit": "3ff5b17ce5729c05654fe83179387f940391c117", "Url": "https://api.github.com/repos/aetrudel/CPSC559", "Date": "2016-03-31T18:36:02Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alive) { wait(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1665/buggy-version/src.org.usfirst.frc.team2473.robot.SensorThread.java", "BodyUseAPI": [], "Fixed commit": "dbba797a00467adade0fa7a3b1b2b846d96cdf88", "Url": "https://api.github.com/repos/Tino-FRC-2473/Calgames2016", "Date": "2016-08-16T18:46:58Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((zone) == 495) { java.lang.System.out.println(damageFactor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1603/buggy-version/src.TrimpsSimulation.java", "BodyUseAPI": [], "Fixed commit": "1f7af7f08c824f032baee09c244c424ce383dbbd", "Url": "https://api.github.com/repos/Ansopedi/TrimpsSimulation", "Date": "2016-09-19T20:10:58Z"},
{"Line": "=>774", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((p1End.getX()) == (p2Start.getX())) && ((p1End.getY()) == (p2Start.getY()))) || (((p1End.getX()) == (p2End.getX())) && ((p1End.getY()) == (p2End.getY())))) return p1End;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7824/buggy-version/src.org.sbml.layoutconverter.LayoutUtil.java", "BodyUseAPI": [], "Fixed commit": "5faefbe94a53c165feb0212815859c65ea154494", "Url": "https://api.github.com/repos/funasoul/celldesigner-parser", "Date": "2016-08-21T13:50:04Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.core.context.Context.getProperty(Context.REPOSITORY_CONTEXT_KEY)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (repositoryContext == null) { repositoryContext = new org.talend.core.context.RepositoryContext(); ctx.putProperty(Context.REPOSITORY_CONTEXT_KEY, repositoryContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2849/buggy-version/main.plugins.org.talend.repository.src.main.java.org.talend.repository.ui.login.LoginHelper.java", "BodyUseAPI": [], "Fixed commit": "1530f1d5598fa8044c11405e7499066df12970fc", "Url": "https://api.github.com/repos/47lining/tdi-studio-se", "Date": "2015-12-08T04:25:39Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v.getId()) == (UNDO)) { if ((gameState.getRows().get(0).getTiles().get(0).getType()) != (Tile.PLUS)) undo(); else android.widget.Toast.makeText(this, \"Nothing to undo\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8931/buggy-version/src.com.eomprogramming.algebratiles.AlgebraTilesActivity.java", "BodyUseAPI": [], "Fixed commit": "f91b73accb40c37905db1761fc54bf28d679a07f", "Url": "https://api.github.com/repos/eomprogramming/Algebra-Tiles", "Date": "2012-09-23T22:04:57Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((classLoader.findLoadedClassHack(className)) == null) ignoreClass = classLoader.findClass(className);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6569/buggy-version/pf4j.src.main.java.ro.fortsoft.pf4j.IzouPluginClassLoader.java", "BodyUseAPI": ["ro.fortsoft.pf4j.IzouPluginClassLoader.AccessibleURLClassLoader.findClass(java.lang.String)"], "Fixed commit": "71d4b32dcc6727e695af484cceba4b3f294639dc", "Url": "https://api.github.com/repos/intellimate/izou-pf4j", "Date": "2015-01-23T15:20:55Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCamera) == null) { mCamera = android.hardware.Camera.open(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2999/buggy-version/src.com.ihongqiqu.camera.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "aa2658749f0d1bab2543693652bd0e37d26b6e0e", "Url": "https://api.github.com/repos/HongQiQu/CameraDemo", "Date": "2015-03-08T02:04:27Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(mCamera.getParameters().getFlashMode()))) { mCamera.autoFocus(mPreview); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2999/buggy-version/src.com.ihongqiqu.camera.MainActivity.java", "BodyUseAPI": ["android.hardware.Camera.autoFocus(com.ihongqiqu.camera.CameraPreview)"], "Fixed commit": "aa2658749f0d1bab2543693652bd0e37d26b6e0e", "Url": "https://api.github.com/repos/HongQiQu/CameraDemo", "Date": "2015-03-08T02:04:27Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getProperty(\"os.name\").startsWith(\"Windows\")) == true) { Sound.Play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6850/buggy-version/src.HopeToFly.Main.java", "BodyUseAPI": [], "Fixed commit": "2b1cfbdb452241246799b5be649bab8f914c1c17", "Url": "https://api.github.com/repos/Shirotsune/Hope-to-Fly", "Date": "2015-08-05T14:07:17Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.theironyard.entities.User.getPlantListByUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(plantListThatWasAddedTo.contains(plantJoin))) { plantListThatWasAddedTo.add(plantJoin); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7406/buggy-version/src.main.java.com.theironyard.controllers.H2KnowRestController.java", "BodyUseAPI": ["java.util.List<com.theironyard.entities.PlantUserJoin>.add(com.theironyard.entities.PlantUserJoin)"], "Fixed commit": "a186f0fae7f4cc868c5370e3966d9750fe12c569", "Url": "https://api.github.com/repos/cbodtorf/H2Know", "Date": "2016-07-05T21:24:33Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (response.getClass().isArray()) { if (operand instanceof java.lang.Integer) { response = ((java.lang.Object[]) (response))[((java.lang.Integer) (operand))]; }else { throw new com.flipkart.hydra.expression.exception.ExpressionEvaluationException((\"Invalid operand - \" + operand)); } }else if (response instanceof java.util.Map) { java.lang.Object possibleResponse = ((java.util.Map) (response)).get(operand); response = (possibleResponse != null) ? possibleResponse : ((java.util.Map) (response)).get(java.lang.String.valueOf(operand)); }else if (response instanceof java.lang.String) { if (operand instanceof java.lang.Integer) { response = ((java.lang.String) (response)).charAt(((java.lang.Integer) (operand))); }else { throw new com.flipkart.hydra.expression.exception.ExpressionEvaluationException((\"Invalid operand - \" + operand)); } }else if ((response instanceof java.lang.Integer) || (response instanceof java.lang.Double)) { throw new com.flipkart.hydra.expression.exception.ExpressionEvaluationException((\"Invalid operand - \" + operand)); }else if (!(operand instanceof java.lang.String)) { throw new com.flipkart.hydra.expression.exception.ExpressionEvaluationException((\"Invalid operand - \" + operand)); }else { response = com.flipkart.hydra.expression.utils.ExpressionEvaluator.getFieldValue(((java.lang.String) (operand)), response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2966/buggy-version/hydra-expression.src.main.java.com.flipkart.hydra.expression.utils.ExpressionEvaluator.java", "BodyUseAPI": [], "Fixed commit": "20e55bfa1b13d27d285a6533fba764aedef4e28d", "Url": "https://api.github.com/repos/flipkart-incubator/hydra", "Date": "2015-03-30T10:12:57Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myDate.length()) != (sdf.toPattern().length())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9171/buggy-version/src.logic.TokenValidation.java", "BodyUseAPI": [], "Fixed commit": "7979aebb7ce88069184b14f6ff3929c55898d8ea", "Url": "https://api.github.com/repos/cs2103jan2015-w13-4j/Testing", "Date": "2015-03-11T01:39:00Z"},
{"Line": "=>2209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.sunbird.common.models.util.ProjectUtil.isStringNullOREmpty(appUrl)) { appUrl = propertiesCache.getProperty(\"sunbird_app_url\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5507/buggy-version/actors.src.main.java.org.sunbird.learner.actors.UserManagementActor.java", "BodyUseAPI": [], "Fixed commit": "59e83ee46482fd1bdf16accfa9beece5bb1ffccb", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2017-10-06T11:35:21Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["e.getValue().getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (worker.getNodeId().equals(item.node.getNodeId())) { ret.add(item); monitorQueue.remove(taskid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7598/buggy-version/zsls-jobtracker.src.main.java.org.pbccrc.zsls.tasks.MissedTaskCollector.java", "BodyUseAPI": ["java.util.List<org.pbccrc.zsls.tasks.MissedTaskCollector.TaskAssignInfo>.add(org.pbccrc.zsls.tasks.MissedTaskCollector.TaskAssignInfo)"], "Fixed commit": "eec218b6b16aad389774b34ff865752189fcbe8d", "Url": "https://api.github.com/repos/Mr-Zhangs/zsls", "Date": "2017-05-12T05:43:35Z"},
{"Line": "=>1856", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (field == null) { throw new java.lang.NoSuchFieldException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3371/buggy-version/src.main.java.uk.co.jemos.podam.api.PodamFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "ea3b15df4f1f2a60626d6d0fc58ef2129b956138", "Url": "https://api.github.com/repos/mtedone/podam", "Date": "2011-10-26T16:06:46Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mBuilder.listCallback) != null) { mBuilder.listCallback.onSelection(this, view, position, mBuilder.items[position]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7122/buggy-version/library.src.main.java.com.talk.dialog.TalkDialog.java", "BodyUseAPI": ["com.talk.dialog.TalkDialog.ListCallback.onSelection(com.talk.dialog.TalkDialog,android.view.View,int,java.lang.CharSequence)"], "Fixed commit": "13c1e687e622aa0a01a5e7d13d7814076eb4de66", "Url": "https://api.github.com/repos/jianliaoim/Talk-Dialog", "Date": "2015-09-10T09:10:03Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.Dialog.findViewById(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (divider != null) { divider.setBackgroundColor(getResources().getColor(android.R.color.transparent)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7122/buggy-version/library.src.main.java.com.talk.dialog.TalkDialog.java", "BodyUseAPI": ["android.view.View.setBackgroundColor(getResources().getColor(android.R.color.transparent))"], "Fixed commit": "13c1e687e622aa0a01a5e7d13d7814076eb4de66", "Url": "https://api.github.com/repos/jianliaoim/Talk-Dialog", "Date": "2015-09-10T09:10:03Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.intellij.openapi.util.Disposer.isDisposed(myParent)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2377/buggy-version/python.ipnb.src.org.jetbrains.plugins.ipnb.editor.panels.IpnbFilePanel.java", "BodyUseAPI": [], "Fixed commit": "7529fb8e0cc883fedd71088b7a9372f4be442f36", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2014-11-13T16:20:20Z"},
{"Line": "=>613", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this) == dependency) { org.owasp.dependencycheck.dependency.Dependency.LOGGER.warning((\"Attempted to add a circular reference - please post the log file to issue #172 here \" + \"https://github.com/jeremylong/DependencyCheck/issues/172 \")); org.owasp.dependencycheck.dependency.Dependency.LOGGER.log(java.util.logging.Level.FINE, \"this: {0}\", this.toString()); org.owasp.dependencycheck.dependency.Dependency.LOGGER.log(java.util.logging.Level.FINE, \"dependency: {0}\", dependency.toString()); }else { relatedDependencies.add(dependency); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2351/buggy-version/dependency-check-core.src.main.java.org.owasp.dependencycheck.dependency.Dependency.java", "BodyUseAPI": ["org.owasp.dependencycheck.dependency.Dependency.toString()", "java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,java.lang.String)", "java.util.Set<org.owasp.dependencycheck.dependency.Dependency>.add(org.owasp.dependencycheck.dependency.Dependency)"], "Fixed commit": "bb622fe7dcaf7496f0d5fde5e2ad4552ecc8417d", "Url": "https://api.github.com/repos/jeremylong/DependencyCheck", "Date": "2014-12-09T11:36:04Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (target.exists()) { target.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/790/buggy-version/src.org.olanto.converter.PluginConverterFactory.java", "BodyUseAPI": ["org.olanto.converter.PluginConverterFactory.delete()"], "Fixed commit": "bb53c50585cdb485322319e30f83044feab8fbf1", "Url": "https://api.github.com/repos/myCAT/SimpleConverter", "Date": "2013-04-05T21:39:30Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRegression) { return header.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6072/buggy-version/dkpro-tc-ml-libsvm.src.main.java.org.dkpro.tc.ml.libsvm.LibsvmOutcomeIdReport.java", "BodyUseAPI": [], "Fixed commit": "d786d52779ae31b0acedf1aa7cab34b5214a094b", "Url": "https://api.github.com/repos/dkpro/dkpro-tc", "Date": "2016-07-04T18:30:10Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (base.containsKey(\"teams\")) { java.util.List<java.util.Map<java.lang.String, java.lang.String>> teams = ((java.util.List<java.util.Map<java.lang.String, java.lang.String>>) (base.get(\"teams\"))); java.util.List<java.lang.String> teamString = new java.util.ArrayList<>(); if (teams != null) { for (java.util.Map<java.lang.String, java.lang.String> team : teams) { teamString.add(team.get(\"name\")); } } base.put(\"team\", teamString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5554/buggy-version/src.main.java.de.zalando.zmon.scheduler.ng.entities.CmdbAdapter.java", "BodyUseAPI": ["de.zalando.zmon.scheduler.ng.entities.CmdbAdapter.BaseEntity.put(java.lang.String,java.util.List<java.lang.String>)", "de.zalando.zmon.scheduler.ng.entities.CmdbAdapter.BaseEntity.get(java.lang.String)"], "Fixed commit": "879bba7da6a15ffebb53c2ae791fd7cf71b8759b", "Url": "https://api.github.com/repos/zalando-zmon/zmon-scheduler", "Date": "2015-04-29T13:31:37Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParent()) == null) { setResult(ru.spbau.mit.atum.RESULT_OK, result); }else { getParent().setResult(ru.spbau.mit.atum.RESULT_OK, result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1479/buggy-version/app.src.main.java.ru.spbau.mit.atum.AbstractFiltersHolderEditorActivity.java", "BodyUseAPI": [], "Fixed commit": "d24119b757d2f91e39610ea5367291c04687ecdb", "Url": "https://api.github.com/repos/Ivan-Veselov/atum", "Date": "2017-02-04T20:17:06Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((name != null) && (outerName != null)) { if (org.objectweb.asm.Type.getObjectType(name).getClassName().equals(classModel.getQualifiedName())) { classModel.outerClassName = org.objectweb.asm.Type.getObjectType(outerName).getClassName(); } if (org.objectweb.asm.Type.getObjectType(outerName).getClassName().equals(classModel.getQualifiedName())) { classModel.innerClassNames.add(org.objectweb.asm.Type.getObjectType(name).getClassName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3022/buggy-version/impl.src.main.java.org.jabsaw.impl.ClassParser.java", "BodyUseAPI": ["org.objectweb.asm.Type.getObjectType(outerName).getClassName()", "org.objectweb.asm.Type.getObjectType(java.lang.String)", "classModel.innerClassNames.add(org.objectweb.asm.Type.getObjectType(name).getClassName())", "org.objectweb.asm.Type.getObjectType(java.lang.String)", "org.objectweb.asm.Type.getObjectType(java.lang.String)", "org.objectweb.asm.Type.getObjectType(outerName).getClassName().equals(classModel.getQualifiedName())", "org.objectweb.asm.Type.getObjectType(name).getClassName().equals(classModel.getQualifiedName())", "org.objectweb.asm.Type.getObjectType(java.lang.String)", "org.objectweb.asm.Type.getObjectType(outerName).getClassName()", "org.objectweb.asm.Type.getObjectType(name).getClassName()", "org.objectweb.asm.Type.getObjectType(name).getClassName()"], "Fixed commit": "15c4b7f352774db0a9809c056b53cc0540fe4842", "Url": "https://api.github.com/repos/ruediste1/jabsaw", "Date": "2014-04-27T14:42:09Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["phylonet.coalescent.SpeciesMapper.getSpeciesIdForTaxon(GlobalMaps.taxonIdentifier.taxonId(node.getName()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(node.getName().equals(this.getSpeciesName(spID)))) ((phylonet.tree.model.TMutableNode) (node)).setName(this.getSpeciesName(spID));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/607/buggy-version/main.phylonet.coalescent.SpeciesMapper.java", "BodyUseAPI": ["phylonet.coalescent.SpeciesMapper.getSpeciesName(int)", "phylonet.tree.model.TNode.setName(java.lang.String)"], "Fixed commit": "4a7b50e58d8bfbeb0e34028ddbdfbebbbd009bf2", "Url": "https://api.github.com/repos/smirarab/ASTRAL", "Date": "2016-04-18T16:36:53Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.getValueAt(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (valueAt == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3235/buggy-version/mediastore.src.mediastore.SearchGUI.java", "BodyUseAPI": [], "Fixed commit": "153a0b86b44ac68e433f5b2aa2b6fb804fc3a46a", "Url": "https://api.github.com/repos/o0whiplash0o/mediastore", "Date": "2013-04-19T18:49:08Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clusteringService) != null) { com.vmware.bdd.service.sp.VmEventProcessor processor = clusteringService.getEventProcessor(); processor.tryResume(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6697/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.service.job.SimpleStepExecutionListener.java", "BodyUseAPI": [], "Fixed commit": "297a41c7b754e78f2409a0cd6cf1cab604922e7b", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-12-06T06:08:02Z"},
{"Line": "=>860", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.inventory) != null) { for (int i = 0; i < 4; i++) { net.minecraft.item.ItemStack armorPiece = this.getCurrentArmor(i); if ((armorPiece != null) && ((armorPiece.getItem()) instanceof micdoodle8.mods.galacticraft.planets.asteroids.items.ItemArmorAsteroids)) { titaniumCount++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7050/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.entities.player.GCEntityPlayerMP.java", "BodyUseAPI": [], "Fixed commit": "f303819ea4f2c2fe6db646bca22c26b7c51b6c73", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2014-07-26T22:16:25Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (localPlayer != null) { setControlledByLocalPlayer(((localPlayer.getId()) == (player.getId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5291/buggy-version/src.seventh.client.ClientPlayerEntity.java", "BodyUseAPI": [], "Fixed commit": "2cbab410c76a6a9aaad7f9eaaf3dbeb3f8e9917a", "Url": "https://api.github.com/repos/tonysparks/seventh", "Date": "2016-04-03T20:53:38Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(prop.isAggregation())) { baseScalar.add(prop); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8034/buggy-version/src.main.java.com.avaje.ebeaninternal.server.deploy.meta.DeployBeanPropertyLists.java", "BodyUseAPI": ["java.util.List<com.avaje.ebeaninternal.server.deploy.BeanProperty>.add(com.avaje.ebeaninternal.server.deploy.BeanProperty)"], "Fixed commit": "cbfce0d14dba28e1c3f00dd803d10579d1964d4e", "Url": "https://api.github.com/repos/FOCONIS/ebean", "Date": "2016-11-06T09:18:23Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.parseLong(cursor.getString(5))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (endTime == 0) { dto.setEndTime(null); }else { dto.setEndTime(new java.util.Date(endTime)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6625/buggy-version/app.src.main.java.io.github.kosmologist.andromeda.storage.repository.datastore.localdb.AndromedaSQLiteHelper.java", "BodyUseAPI": ["io.github.kosmologist.andromeda.storage.model.Interval.setEndTime(java.util.Date)"], "Fixed commit": "00fb2636aa8fcc6e79a04fc5ea40775375895897", "Url": "https://api.github.com/repos/kosmologist/andromeda-android", "Date": "2017-06-16T10:19:54Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.novaordis.events.log4j.impl.Log4jParser.flush()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result.isEmpty()) { return java.util.Arrays.asList(currentEvent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2447/buggy-version/main.src.main.java.io.novaordis.events.log4j.impl.Log4jParser.java", "BodyUseAPI": [], "Fixed commit": "1bc89447fcd625a4e32636eb038b58ec4f8fe0e3", "Url": "https://api.github.com/repos/NovaOrdis/events-log4j-parser", "Date": "2017-07-28T23:52:11Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eecs285.proj4.ImageProcessorGUI.getStackCheckBox()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (temp.isSelected()) temp.setSelected(false); else temp.setSelected(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1442/buggy-version/src.eecs285.proj4.server.ImageProcessingSocket.java", "BodyUseAPI": ["javax.swing.JCheckBox.setSelected(boolean)", "javax.swing.JCheckBox.setSelected(boolean)"], "Fixed commit": "bf7aaf739bffb2536c2090899f3222a65f3dca3f", "Url": "https://api.github.com/repos/allenxyz/ditto", "Date": "2014-12-01T04:26:05Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.ovgu.featureide.core.CorePlugin.getFeatureProject(org.eclipse.core.resources.IFile)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (configFeatureProject == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/664/buggy-version/plugins.de.ovgu.featureide.core.featurecpp.src.de.ovgu.featureide.featurecpp.FeatureCppComposer.java", "BodyUseAPI": [], "Fixed commit": "b6ff74afa67aaa7cdda35e80f01d50ee1d072fb9", "Url": "https://api.github.com/repos/skrieter/FeatureIDE", "Date": "2015-05-06T15:08:22Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(connected)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3829/buggy-version/src.Client.Client.java", "BodyUseAPI": [], "Fixed commit": "eda9152eec4b5062a1b83a4abb8d01d59eec17a5", "Url": "https://api.github.com/repos/az242/FallingBalls", "Date": "2016-01-17T05:59:07Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.isEmpty()) || (i == 0)) { searchResult.setVisibility(View.GONE); noFound.setVisibility(View.VISIBLE); }else { searchResult.setVisibility(View.VISIBLE); adapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/190/buggy-version/app.src.main.java.edu.umn.bpoc.bpocandroid.model.AddFriend.java", "BodyUseAPI": [], "Fixed commit": "bc18d25cc89f613d9a2c13eddfc88cf6818281a7", "Url": "https://api.github.com/repos/UMN-4950/BPOCAndroid", "Date": "2017-05-10T01:20:19Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.updatecenter.common.Plugin.getLastRelease()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (lastRelease != null) { return lastRelease.getVersion().getName(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3007/buggy-version/sonar-update-center-mojo.src.main.java.org.sonar.updatecenter.mojo.PluginHeader.java", "BodyUseAPI": ["lastRelease.getVersion().getName()", "org.sonar.updatecenter.common.Release.getVersion()"], "Fixed commit": "057c4035692ace909757e560023b22aa4b763555", "Url": "https://api.github.com/repos/SonarSource/sonar-update-center", "Date": "2015-05-22T08:23:02Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinkerpop.blueprints.impls.ramcloud.RamCloudIndex<T>.getIndexPropertyMap()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (map == null) { com.tinkerpop.blueprints.impls.ramcloud.RamCloudIndex.log.error(\"IndexPropertyMap was null\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/817/buggy-version/src.main.java.com.tinkerpop.blueprints.impls.ramcloud.RamCloudIndex.java", "BodyUseAPI": [], "Fixed commit": "351b6513c0897576d5f960077b6d0079ec44ca6c", "Url": "https://api.github.com/repos/y-higuchi/blueprints-ramcloud-graph", "Date": "2013-12-14T19:33:08Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(aResource.isLoaded())) { try { aResource.load(null); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6900/buggy-version/emfconnector.src.main.java.org.openflexo.technologyadapter.emf.model.io.EMFModelConverter.java", "BodyUseAPI": ["org.eclipse.emf.ecore.resource.Resource.load(<nulltype>)"], "Fixed commit": "d6ebb49727934e1070c47f0298d23d92044676de", "Url": "https://api.github.com/repos/openflexo-team/openflexo-technology-adapters", "Date": "2016-09-26T18:08:36Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == ((nodes.length) - 1)) return nodes[parentIndex];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2355/buggy-version/Project.src.StemLoop.java", "BodyUseAPI": [], "Fixed commit": "abd331397946bd7d2cb49bce6f04fe67a23efa62", "Url": "https://api.github.com/repos/ultrapants/445Project", "Date": "2014-04-08T05:24:12Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((elements.size()) == 1) { element = elements.get(0); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8789/buggy-version/src.com.qa.framework.pagefactory.web.interceptor.ElementHandler.java", "BodyUseAPI": ["java.util.List<org.openqa.selenium.WebElement>.get(int)"], "Fixed commit": "06fe7b2b602168944cf971f515baede90966fadc", "Url": "https://api.github.com/repos/lwfwind/smart-ui-framework", "Date": "2016-09-02T08:41:39Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((view.getSelectedIndex()) > 0) { switchToTab(((view.getSelectedIndex()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5084/buggy-version/DefectTracker.src.edu.wpi.cs.wpisuitetng.modules.defecttracker.tabs.MainTabController.java", "BodyUseAPI": ["edu.wpi.cs.wpisuitetng.modules.defecttracker.tabs.MainTabController.switchToTab(((view.getSelectedIndex()) - 1))", "edu.wpi.cs.wpisuitetng.modules.defecttracker.tabs.MainTabView.getSelectedIndex()"], "Fixed commit": "f1d746992195b0628a53dfc236e1f3adcbbaadd6", "Url": "https://api.github.com/repos/fracture91/wpi-suite-tng", "Date": "2013-01-17T06:06:53Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entryView.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(entry.equals(\"\"))) { entry = entry.replaceAll(\" \", \"+\"); if ((entry.lastIndexOf(\"+\")) == ((entry.length()) - 1)) entry = entry.substring(0, ((entry.length()) - 1)); new de.berlin.special.concertmap.service.DataFetchService(getContext(), rootView, entry, de.berlin.special.concertmap.util.Utility.URL_ARTIST_SEARCH).execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3050/buggy-version/app.src.main.java.de.berlin.special.concertmap.navigate.SearchArtistFragment.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "9223b0dc19ec909dc878239a9ac0605d09dcbefb", "Url": "https://api.github.com/repos/sspecial/ConcertMap", "Date": "2016-02-11T22:57:27Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.hadoop.hbase.mob.MobUtils.isMobRegionInfo(regionInfo)) { link = new org.apache.hadoop.hbase.io.HFileLink(org.apache.hadoop.hbase.mob.MobUtils.getQualifiedMobRootDir(conf), org.apache.hadoop.hbase.util.HFileArchiveUtil.getArchivePath(conf), linkPath); }else { link = new org.apache.hadoop.hbase.io.HFileLink(conf, linkPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/309/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.snapshot.SnapshotReferenceUtil.java", "BodyUseAPI": [], "Fixed commit": "b3af24fb5c0a299ea065e7aea02be6edc1980160", "Url": "https://api.github.com/repos/JingchengDu/hbase", "Date": "2014-08-11T05:45:42Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.getClass().equals(other.getClass()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7333/buggy-version/PA3.Assignment3.Item.java", "BodyUseAPI": [], "Fixed commit": "53f21643e5d9f2c9c9e71088b84f3b11848c8f40", "Url": "https://api.github.com/repos/ronny-macmaster/EE-422C", "Date": "2016-02-23T17:32:12Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (startPosition == 1) { startPosition = (elementField.get(element).toString().indexOf(\"=\\\"\")) + 2; endPosition = elementField.get(element).toString().indexOf(\"\\\"\", ((elementField.get(element).toString().indexOf(\"=\\\"\")) + 3)); if ((startPosition == (-1)) | (endPosition == (-1))) locator = elementField.get(element).toString(); else locator = elementField.get(element).toString().substring(startPosition, endPosition); }else { locator = elementField.get(element).toString().substring(startPosition, elementField.get(element).toString().lastIndexOf(\"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3451/buggy-version/src.main.java.com.orasi.core.interfaces.impl.ElementImpl.java", "BodyUseAPI": ["elementField.get(element).toString().substring(int,elementField.get(element).toString().lastIndexOf(\"]\"))"], "Fixed commit": "d2e0f85aecf37bb6cff62a36bc52cf04bdf59c62", "Url": "https://api.github.com/repos/Orasi/Chameleon", "Date": "2015-12-27T04:24:33Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (startPosition == 2) { startPosition = elementField.get(element).toString().indexOf(\" \"); if (startPosition == (-1)) locator = elementField.get(element).toString(); else locator = elementField.get(element).toString().substring(startPosition, elementField.get(element).toString().indexOf(\"=\")); }else { locator = elementField.get(element).toString().substring(startPosition, elementField.get(element).toString().lastIndexOf(\":\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3451/buggy-version/src.main.java.com.orasi.core.interfaces.impl.ElementImpl.java", "BodyUseAPI": ["elementField.get(element).toString().substring(int,elementField.get(element).toString().lastIndexOf(\":\"))"], "Fixed commit": "d2e0f85aecf37bb6cff62a36bc52cf04bdf59c62", "Url": "https://api.github.com/repos/Orasi/Chameleon", "Date": "2015-12-27T04:24:33Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(parent.isAssignableFrom(child))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9228/buggy-version/services.billing.src.main.java.com.epam.dlab.core.BillingUtils.java", "BodyUseAPI": [], "Fixed commit": "e399f01ad762a0ee341328da646ff64fbdbef89b", "Url": "https://api.github.com/repos/epam/DLab", "Date": "2017-10-19T16:30:32Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (_xmlReader.isEmptyElement()) { _xmlReader.next(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5369/buggy-version/src.main.java.com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.java", "BodyUseAPI": ["org.codehaus.stax2.XMLStreamReader2.next()"], "Fixed commit": "6eda875e8ba7eab24d12c2ad632f34289b02201d", "Url": "https://api.github.com/repos/FasterXML/jackson-dataformat-xml", "Date": "2016-12-22T10:03:16Z"},
{"Line": "=>1836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWellSampleDataSelection(selected)) { return; }else if (selected instanceof omero.gateway.model.DataObject) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((omero.gateway.model.DataObject) (selected))); accept(visitor); foundNode = visitor.getSelectedNode(); if (foundNode != null) { if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else view.setFoundNode(null); }else if (selected instanceof org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) { foundNode = ((org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) (selected)); if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else if (selected instanceof java.util.List) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((java.util.List<omero.gateway.model.DataObject>) (selected))); accept(visitor); java.util.List<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> nodes = visitor.getSelectedNodes(); if ((nodes.size()) == 0) { view.setFoundNode(null); }else if ((nodes.size()) == 1) { model.setSelectedDisplay(nodes.get(0), true); view.setFoundNode(model.getSelectedDisplays()); }else { model.setSelectedDisplay(null, true); java.util.Iterator<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> i = nodes.iterator(); while (i.hasNext()) model.addFoundNode(i.next()); view.setFoundNode(model.getSelectedDisplays()); } }else if (selected instanceof java.lang.String) { model.setSelectedDisplay(null, true); view.setFoundNode(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6387/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.agents.treeviewer.browser.BrowserComponent.java", "BodyUseAPI": [], "Fixed commit": "e0523d208d3e795662307927ffcfc9bae49e3a5d", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2016-05-13T06:44:24Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.forgeessentials.chat.Mailer.getMailBag(com.forgeessentials.api.UserIdent)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mailBag.mails.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8712/buggy-version/src.main.java.com.forgeessentials.chat.Mailer.java", "BodyUseAPI": [], "Fixed commit": "3799e5a2450ee0634713660ec0bbce3ffabaa790", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentials", "Date": "2015-05-31T14:03:26Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dateSelected) != null) { dateSelected.setText(currentMonthName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4498/buggy-version/library.src.main.java.views.DateView.java", "BodyUseAPI": [], "Fixed commit": "b18d50cfc78bfe4e90d056e6a1633926845c796e", "Url": "https://api.github.com/repos/rahul-a/DateWidget", "Date": "2015-12-26T12:04:33Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dateSelected) != null) { dateSelected.setText(selectedDay.getMonthName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4498/buggy-version/library.src.main.java.views.DateView.java", "BodyUseAPI": [], "Fixed commit": "b18d50cfc78bfe4e90d056e6a1633926845c796e", "Url": "https://api.github.com/repos/rahul-a/DateWidget", "Date": "2015-12-26T12:04:33Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dateSelected) != null) { dateSelected.setText(monthName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4498/buggy-version/library.src.main.java.views.DateView.java", "BodyUseAPI": [], "Fixed commit": "b18d50cfc78bfe4e90d056e6a1633926845c796e", "Url": "https://api.github.com/repos/rahul-a/DateWidget", "Date": "2015-12-26T12:04:33Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lab.Crawler.getDomainName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (domain == \"\") { return lab.Crawler.STATUS_ERROR_BAD_URL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2614/buggy-version/Lab2.src.lab.Crawler.java", "BodyUseAPI": [], "Fixed commit": "dc30f24da987914e0453625a0753bc257ac95f06", "Url": "https://api.github.com/repos/ronreiter/webserverlab", "Date": "2013-01-05T23:40:36Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPole) { return 1; }else { int roomCntThis = hem.getWallCntOnCircle((isPolarCircle ? indexH - 1 : indexH)); return eqCnt / roomCntThis; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7891/buggy-version/src.main.java.com.github.sladecek.maze.jmaze.spheric.Egg3dMapper.java", "BodyUseAPI": [], "Fixed commit": "abc19ce046c95191697d95d8239c860e4e1f6899", "Url": "https://api.github.com/repos/sladecek/jmaze", "Date": "2015-08-01T09:25:38Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((errorFlowReply == null) && (this.errorOnTimeout)) { if (object instanceof org.springframework.messaging.Message) { throw new org.springframework.integration.MessageTimeoutException(((org.springframework.messaging.Message<?>) (object)), \"No reply received from error channel within timeout\"); }else { throw new org.springframework.integration.MessageTimeoutException(\"No reply received from error channel within timeout\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6877/buggy-version/spring-integration-core.src.main.java.org.springframework.integration.gateway.MessagingGatewaySupport.java", "BodyUseAPI": [], "Fixed commit": "72eb78dba9473a30005af4254fbfe7e9cd6dfcc6", "Url": "https://api.github.com/repos/garyrussell/spring-integration", "Date": "2015-07-24T20:25:19Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wiztools.commons.StringUtil.isNotEmpty(((java.lang.String) (jcb_url.getSelectedItem())))) { jcb_url.push(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7182/buggy-version/restclient-ui.src.main.java.org.wiztools.restclient.ui.reqgo.ReqUrlGoPanelImpl.java", "BodyUseAPI": ["org.wiztools.restclient.ui.reqgo.UrlComboBox.push()"], "Fixed commit": "010081624b4edc68e08f18a04dd944536ed5e5d3", "Url": "https://api.github.com/repos/wiztools/rest-client", "Date": "2016-05-06T19:22:39Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.length) > 0) { java.lang.System.arraycopy(others, 0, list, 0, others.length); java.lang.System.arraycopy(shares, 0, list, ((others.length) - 1), shares.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5868/buggy-version/src.main.java.org.kore.kolab.notes.imap.ImapNotesRepository.java", "BodyUseAPI": ["java.lang.System.arraycopy(korex.mail.Folder[],int,korex.mail.Folder[],int,others.length)", "java.lang.System.arraycopy(korex.mail.Folder[],int,korex.mail.Folder[],((others.length) - 1),shares.length)"], "Fixed commit": "97e1d5322ce81f4241bfe0f8d0e3768a262a759c", "Url": "https://api.github.com/repos/konradrenner/kolabnotes-java", "Date": "2017-03-15T16:38:51Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((requestPoint.mergeRequest.get(0).type.equalsIgnoreCase(\"FR\")) && ((requestPoint.mergeRequest.get(0).time) <= (this.time))) && ((requestPoint.mergeRequest.get(0).fromFloor) == (requestPoint.fromFloor))) && (requestPoint.mergeRequest.get(0).direction.equalsIgnoreCase(requestPoint.direction))) && (requestPoint.mergeRequest.get(0).type.equals(requestPoint.type))) { oo02.Elevator.print(requestPoint.mergeRequest.get(0)); requestPoint.mergeRequest.remove(0); java.lang.System.out.println(\"Repeat instructions\"); }else if ((((requestPoint.mergeRequest.get(0).type.equalsIgnoreCase(\"ER\")) && ((requestPoint.mergeRequest.get(0).time) <= (this.time))) && ((requestPoint.mergeRequest.get(0).targetFloor) == (requestPoint.targetFloor))) && (requestPoint.mergeRequest.get(0).type.equals(requestPoint.type))) { oo02.Elevator.print(requestPoint.mergeRequest.get(0)); requestPoint.mergeRequest.remove(0); java.lang.System.out.println(\"Repeat instructions\"); }else { this.print(requestPoint.mergeRequest.get(0)); requestPoint.mergeRequest.remove(0); this.print(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3263/buggy-version/src.oo02.Main.java", "BodyUseAPI": ["java.util.Vector<oo02.Request>.get(int)", "java.util.Vector<oo02.Request>.remove(int)", "java.util.Vector<oo02.Request>.get(int)", "oo02.Elevator.print(oo02.Request)", "java.util.Vector<oo02.Request>.remove(int)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.util.Vector<oo02.Request>.get(int)", "java.util.Vector<oo02.Request>.get(int)", "java.util.Vector<oo02.Request>.remove(int)", "oo02.Elevator.print(oo02.Request)", "java.util.Vector<oo02.Request>.get(int)", "java.util.Vector<oo02.Request>.get(int)", "java.util.Vector<oo02.Request>.get(int)", "java.lang.String.equals(java.lang.String)", "oo02.Elevator.print(oo02.Request)"], "Fixed commit": "83a3857ec4686dc2d859a2fa7110d8b27087fdf8", "Url": "https://api.github.com/repos/liminghao1630/elevator", "Date": "2017-03-20T14:41:32Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((requestPoint.mergeRequest.get(0).type.equalsIgnoreCase(\"FR\")) && ((requestPoint.mergeRequest.get(0).time) <= (this.time))) && ((requestPoint.mergeRequest.get(0).fromFloor) == (requestPoint.fromFloor))) && (requestPoint.mergeRequest.get(0).direction.equalsIgnoreCase(requestPoint.direction))) && (requestPoint.mergeRequest.get(0).type.equals(requestPoint.type))) { oo02.Elevator.print(requestPoint.mergeRequest.get(0)); requestPoint.mergeRequest.remove(0); java.lang.System.out.println(\"Repeat instructions\"); }else if ((((requestPoint.mergeRequest.get(0).type.equalsIgnoreCase(\"ER\")) && ((requestPoint.mergeRequest.get(0).time) <= (this.time))) && ((requestPoint.mergeRequest.get(0).targetFloor) == (requestPoint.targetFloor))) && (requestPoint.mergeRequest.get(0).type.equals(requestPoint.type))) { oo02.Elevator.print(requestPoint.mergeRequest.get(0)); requestPoint.mergeRequest.remove(0); java.lang.System.out.println(\"Repeat instructions\"); }else { this.print(requestPoint.mergeRequest.get(0)); requestPoint.mergeRequest.remove(0); this.print(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3263/buggy-version/src.oo02.Main.java", "BodyUseAPI": ["java.util.Vector<oo02.Request>.get(int)", "java.lang.String.equals(java.lang.String)", "java.util.Vector<oo02.Request>.get(int)", "oo02.Elevator.print(oo02.Request)", "java.util.Vector<oo02.Request>.remove(int)", "oo02.Elevator.print(oo02.Request)", "java.util.Vector<oo02.Request>.get(int)", "java.util.Vector<oo02.Request>.get(int)", "java.util.Vector<oo02.Request>.get(int)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.util.Vector<oo02.Request>.remove(int)", "oo02.Elevator.print(oo02.Request)", "java.util.Vector<oo02.Request>.get(int)", "java.util.Vector<oo02.Request>.get(int)", "java.util.Vector<oo02.Request>.remove(int)"], "Fixed commit": "83a3857ec4686dc2d859a2fa7110d8b27087fdf8", "Url": "https://api.github.com/repos/liminghao1630/elevator", "Date": "2017-03-20T14:41:32Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTimeForChallenge()) { new cha.gui.ChallengePanel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7778/buggy-version/TDA367.src.cha.domain.Board.java", "BodyUseAPI": [], "Fixed commit": "3ee8615f4cbe1549953c00df6d22226ab24de52c", "Url": "https://api.github.com/repos/malla/TDA367", "Date": "2012-08-16T21:16:24Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ch.getColors()) >= 0) return ch.getColors();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7864/buggy-version/src.main.java.pl.edu.agh.gcp.GenericGraphColoring.java", "BodyUseAPI": ["pl.edu.agh.gcp.population.Chromosome.getColors()"], "Fixed commit": "dd30f4b45a89411578ee6743c455773a9d069db6", "Url": "https://api.github.com/repos/Siimp11/GeneticGraphColoring", "Date": "2015-04-23T12:33:31Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ch.getBadEdges()) >= 0) return ch.getBadEdges();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7864/buggy-version/src.main.java.pl.edu.agh.gcp.GenericGraphColoring.java", "BodyUseAPI": ["pl.edu.agh.gcp.population.Chromosome.getBadEdges()"], "Fixed commit": "dd30f4b45a89411578ee6743c455773a9d069db6", "Url": "https://api.github.com/repos/Siimp11/GeneticGraphColoring", "Date": "2015-04-23T12:33:31Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["table.select(\"tbody\").select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rows.size()) != 0) { org.jsoup.nodes.Element row = rows.get(i); org.jsoup.select.Elements day = row.select(\"th\"); org.jsoup.select.Elements time = row.select(\"td\"); if (((day.size()) > 0) && ((time.size()) > 0)) { hours.add((((day.get(0).text()) + \" \") + (time.get(0).text()))); }else { hours.add(\"N/A\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6286/buggy-version/app.src.main.java.com.example.user01.planit.YelpHTMLScraper.java", "BodyUseAPI": ["org.jsoup.select.Elements.get(int)"], "Fixed commit": "b99a4ba92310de41df0208b74740baf09c935329", "Url": "https://api.github.com/repos/KevinLee00/Plan_It", "Date": "2016-04-16T08:04:04Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.ListPreference.findIndexOfValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index >= 0) { preference.setSummary(listPreference.getEntries()[index]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8296/buggy-version/app.src.main.java.com.henriquenfaria.popularmovies.ui.SettingsActivity.java", "BodyUseAPI": ["android.preference.Preference.setSummary(listPreference.getEntries()[index])"], "Fixed commit": "dd339e99e3b35af4d538d6721699338b395afb5e", "Url": "https://api.github.com/repos/henriquenfaria/popular-movies-stage-2", "Date": "2016-09-22T22:40:05Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stSet instanceof net.sharkfw.knowledgeBase.inmemory.SpatialSTSet) { return net.sharkfw.knowledgeBase.inmemory.InMemoSharkKB.createInMemoCopy(((net.sharkfw.knowledgeBase.inmemory.SpatialSTSet) (stSet))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8581/buggy-version/src.main.java.net.sharkfw.knowledgeBase.inmemory.InMemoSharkKB.java", "BodyUseAPI": [], "Fixed commit": "d8458d54c8f2e2181f01c766b28f7e7a29cc1819", "Url": "https://api.github.com/repos/SharedKnowledge/SharkFW", "Date": "2016-11-09T13:21:27Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stSet instanceof net.sharkfw.knowledgeBase.inmemory.TimeSTSet) { return net.sharkfw.knowledgeBase.inmemory.InMemoSharkKB.createInMemoCopy(((net.sharkfw.knowledgeBase.inmemory.TimeSTSet) (stSet))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8581/buggy-version/src.main.java.net.sharkfw.knowledgeBase.inmemory.InMemoSharkKB.java", "BodyUseAPI": [], "Fixed commit": "d8458d54c8f2e2181f01c766b28f7e7a29cc1819", "Url": "https://api.github.com/repos/SharedKnowledge/SharkFW", "Date": "2016-11-09T13:21:27Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.sharkfw.knowledgeBase.SharkCSAlgebra.isAny(source)) { this.result = null; }else { this.result = net.sharkfw.knowledgeBase.inmemory.InMemoSharkKB.createInMemoCopy(source); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8581/buggy-version/src.main.java.net.sharkfw.knowledgeBase.CtxHelper.java", "BodyUseAPI": ["net.sharkfw.knowledgeBase.inmemory.InMemoSharkKB.createInMemoCopy(net.sharkfw.knowledgeBase.STSet)"], "Fixed commit": "d8458d54c8f2e2181f01c766b28f7e7a29cc1819", "Url": "https://api.github.com/repos/SharedKnowledge/SharkFW", "Date": "2016-11-09T13:21:27Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.sharkfw.knowledgeBase.SharkCSAlgebra.isAny(context)) { this.result = null; }else { this.result = net.sharkfw.knowledgeBase.inmemory.InMemoSharkKB.createInMemoCopy(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8581/buggy-version/src.main.java.net.sharkfw.knowledgeBase.CtxHelper.java", "BodyUseAPI": ["net.sharkfw.knowledgeBase.inmemory.InMemoSharkKB.createInMemoCopy(net.sharkfw.knowledgeBase.STSet)"], "Fixed commit": "d8458d54c8f2e2181f01c766b28f7e7a29cc1819", "Url": "https://api.github.com/repos/SharedKnowledge/SharkFW", "Date": "2016-11-09T13:21:27Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.emf.ecore.EObject.eResource()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (valueExtent == null) { return new org.eclipse.m2m.atl.engine.vm.nativelib.ASMOclUndefined(); }else { java.util.Iterator models = frame.getModels().values().iterator(); while (models.hasNext()) { java.lang.Object m = models.next(); if ((m instanceof org.eclipse.m2m.atl.drivers.emf4atl.ASMEMFModel) && (!(model.equals(m)))) { if (((org.eclipse.m2m.atl.drivers.emf4atl.ASMEMFModel) (m)).getExtent().equals(valueExtent)) { return ((org.eclipse.m2m.atl.drivers.emf4atl.ASMEMFModel) (m)).getASMModelElement(value); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7682/buggy-version/plugins.org.eclipse.m2m.atl.drivers.emf4atl.src.org.eclipse.m2m.atl.drivers.emf4atl.ASMEMFModelElement.java", "BodyUseAPI": ["((org.eclipse.m2m.atl.drivers.emf4atl.ASMEMFModel) (m)).getExtent().equals(org.eclipse.emf.ecore.resource.Resource)"], "Fixed commit": "945cb65d7cd6dfd7c1383b54afc541fc8be0a939", "Url": "https://api.github.com/repos/eclipse/atl", "Date": "2015-03-27T06:54:26Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["object.eClass().getEStructuralFeature(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sf.isMany()) && ((sf.getEType()) instanceof org.eclipse.emf.ecore.EClass)) { org.eclipse.m2m.atl.engine.vm.nativelib.ASMOclUndefined undef = new org.eclipse.m2m.atl.engine.vm.nativelib.ASMOclUndefined(); while (((org.eclipse.m2m.atl.engine.vm.nativelib.ASMCollection) (ret)).collection().remove(undef)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7682/buggy-version/plugins.org.eclipse.m2m.atl.drivers.emf4atl.src.org.eclipse.m2m.atl.drivers.emf4atl.ASMEMFModelElement.java", "BodyUseAPI": [], "Fixed commit": "945cb65d7cd6dfd7c1383b54afc541fc8be0a939", "Url": "https://api.github.com/repos/eclipse/atl", "Date": "2015-03-27T06:54:26Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Object, java.lang.String>.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (elementCollectionObjectName == null) { for (java.lang.Object obj : elementCollectionObjectMap.keySet()) { if (com.impetus.kundera.utils.DeepEquals.deepEquals(elementCollectionObject, obj)) { elementCollectionObjectName = elementCollectionObjectMap.get(obj); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8354/buggy-version/kundera-core.src.main.java.com.impetus.kundera.cache.ElementCollectionCacheManager.java", "BodyUseAPI": [], "Fixed commit": "f2714ea0f1393aaac1aeb28797a76132914ee6b7", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2012-04-17T09:20:26Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.widgets.Shell.getClientArea()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Math.abs(((rect.width) - (mWidth)))) > 10) mWidth = rect.width;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/469/buggy-version/src.com.google.android.AndroidProjector.java", "BodyUseAPI": [], "Fixed commit": "7d90d9804af8ea00f78d6b220e74376e4f1dee3f", "Url": "https://api.github.com/repos/anthonylai/android-projector", "Date": "2014-06-02T00:45:19Z"},
{"Line": "=>1257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (includePodEnvVar) { environmentVariables.add(new io.fabric8.maven.EnvVarBuilder().withName(kubernetesPodEnvVar).withNewValueFrom().withNewFieldRef().withFieldPath(\"metadata.name\").endFieldRef().endValueFrom().build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2577/buggy-version/fabric8-maven-plugin.src.main.java.io.fabric8.maven.JsonMojo.java", "BodyUseAPI": [], "Fixed commit": "5de08957f1ce48e7527507e281540d67f648022e", "Url": "https://api.github.com/repos/fabric8io/fabric8", "Date": "2015-07-10T16:28:18Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connJDBC) == null) { connJDBC = java.sql.DriverManager.getConnection(url, user, pwd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4658/buggy-version/src.main.java.com.excilys.computerdatabase.persistence.ConnectionJDBC.java", "BodyUseAPI": [], "Fixed commit": "15ccc7a9ff0333ee90fbc95561e882b223f51436", "Url": "https://api.github.com/repos/lcoatanlem/computer-database", "Date": "2016-03-14T14:25:21Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(info.hasEntries())) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4334/buggy-version/src.main.java.io.github.likcoras.agario.WebsiteHandler.java", "BodyUseAPI": [], "Fixed commit": "dabe0e09af4486d7cc39c6c418eb29924d629e96", "Url": "https://api.github.com/repos/likcoras/A-Gario", "Date": "2015-06-24T16:02:14Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((my_cvrs_to_audit) == null) || ((my_cvr_under_audit) == null)) || ((my_cvrs_to_audit.size()) <= (my_cvr_under_audit))) { return null; }else { return my_cvrs_to_audit.get(my_cvr_under_audit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9256/buggy-version/server.eclipse-project.src.main.java.us.freeandfair.corla.model.CountyDashboard.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.get(java.lang.Integer)"], "Fixed commit": "6dd39adcdba9d4934eb17b8026a17ae2b5955ad6", "Url": "https://api.github.com/repos/FreeAndFair/ColoradoRLA", "Date": "2017-08-19T01:05:21Z"},
{"Line": "=>1430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (query.getSortPredicates().isEmpty()) { org.apache.usergrid.persistence.index.query.Query.SortPredicate asc = new org.apache.usergrid.persistence.index.query.Query.SortPredicate(org.apache.usergrid.persistence.Schema.PROPERTY_CREATED, Query.SortDirection.ASCENDING); query.addSort(asc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8796/buggy-version/stack.core.src.main.java.org.apache.usergrid.corepersistence.CpRelationManager.java", "BodyUseAPI": ["org.apache.usergrid.persistence.index.query.Query.addSort(Query.SortPredicate)"], "Fixed commit": "053b027143e8b2587a4d865d6d2c800e5dcaaa26", "Url": "https://api.github.com/repos/amuramoto/incubator-usergrid", "Date": "2014-08-13T15:51:50Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (startResult != null) { query.addGreaterThanEqualFilter(\"created\", startResult.timestamp()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8796/buggy-version/stack.core.src.main.java.org.apache.usergrid.corepersistence.CpRelationManager.java", "BodyUseAPI": ["java.util.UUID.timestamp()", "org.apache.usergrid.persistence.index.query.Query.addGreaterThanEqualFilter(java.lang.String,long)"], "Fixed commit": "053b027143e8b2587a4d865d6d2c800e5dcaaa26", "Url": "https://api.github.com/repos/amuramoto/incubator-usergrid", "Date": "2014-08-13T15:51:50Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((knownHostsLookupCache) == null) initKnownLookupHostCache();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2997/buggy-version/app.uk.bl.monitrix.db.mongodb.knownhosts.KnownHostsCollection.java", "BodyUseAPI": [], "Fixed commit": "a7bb985c11896ad2a19f6c7a8f0c1ab98fc23090", "Url": "https://api.github.com/repos/ukwa/monitrix", "Date": "2012-12-19T16:31:38Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (datas == null) { this.mAllDatas = new java.util.ArrayList<>(); }else { this.mAllDatas = datas; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7381/buggy-version/rsen.src.main.java.com.rsen.base.RBaseAdapter.java", "BodyUseAPI": [], "Fixed commit": "25d59f6797146307bc833e67882e280b70841458", "Url": "https://api.github.com/repos/angcyo/RJcenter", "Date": "2016-11-21T04:09:25Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) { notificationIntent = new android.content.Intent(android.content.Intent.ACTION_INSTALL_PACKAGE); notificationIntent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION); notificationIntent.setDataAndType(android.support.v4.content.FileProvider.getUriForFile(com.lazydroid.autoupdateapk.AutoUpdateApk.context, ((com.nbeghin.smartchandiser.BuildConfig.APPLICATION_ID) + \".fileprovider\"), update_apk), com.lazydroid.autoupdateapk.AutoUpdateApk.ANDROID_PACKAGE); }else { notificationIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW); notificationIntent.setDataAndType(android.net.Uri.parse((\"file://\" + (update_apk.getAbsolutePath()))), com.lazydroid.autoupdateapk.AutoUpdateApk.ANDROID_PACKAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1110/buggy-version/src.com.lazydroid.autoupdateapk.AutoUpdateApk.java", "BodyUseAPI": [], "Fixed commit": "6f8bbfbe5b0e1d714f9437f456814e7372147bec", "Url": "https://api.github.com/repos/lazydroid/auto-update-apk-client", "Date": "2017-03-19T15:28:57Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) { out = com.lazydroid.autoupdateapk.AutoUpdateApk.context.openFileOutput(fname, Context.MODE_PRIVATE); }else { out = com.lazydroid.autoupdateapk.AutoUpdateApk.context.openFileOutput(fname, Context.MODE_WORLD_READABLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1110/buggy-version/src.com.lazydroid.autoupdateapk.AutoUpdateApk.java", "BodyUseAPI": [], "Fixed commit": "6f8bbfbe5b0e1d714f9437f456814e7372147bec", "Url": "https://api.github.com/repos/lazydroid/auto-update-apk-client", "Date": "2017-03-19T15:28:57Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (postedDrmsDocument == null) { throw new gov.ca.cwds.rest.services.ServiceException(\"Unable to Create DRMS Document\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8002/buggy-version/src.main.java.gov.ca.cwds.rest.services.ScreeningToReferralService.java", "BodyUseAPI": [], "Fixed commit": "1f0aa0f3600b9b2474d37134974ae12684ff7d7e", "Url": "https://api.github.com/repos/ca-cwds/API", "Date": "2017-07-06T21:04:46Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["db.DBManager.getProductById(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(\"\".equals(p.getUrlImage()))) { com.itextpdf.text.Image jpg = com.itextpdf.text.Image.getInstance(getServletContext().getRealPath((\"/img/\" + (p.getUrlImage())))); document.add(jpg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4926/buggy-version/src.java.servlets.ProcessOrderServlet.java", "BodyUseAPI": ["com.itextpdf.text.Image.getInstance(getServletContext().getRealPath((\"/img/\" + (p.getUrlImage()))))", "db.Product.getUrlImage()", "getServletContext().getRealPath((\"/img/\" + (p.getUrlImage())))"], "Fixed commit": "aa46c4b3a69287c03fd63d65eac58b32d31f7ef8", "Url": "https://api.github.com/repos/sirbotta/progweb", "Date": "2012-11-29T10:29:17Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((cfgraph.getSuccessors(rootId).length) < 2) { int[] sinks = cfgraph.getSinks(); if ((sinks.length) > 0) cfgraph.putEdge(rootId, sinks[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1515/buggy-version/GFPA.src.gfpa.graph.concrete.ControlDependenceGraph.java", "BodyUseAPI": [], "Fixed commit": "a525acc25cf7e9fdb039f02f3af65374078382cf", "Url": "https://api.github.com/repos/KeitaTakenouchi/GFPA", "Date": "2016-01-22T22:41:43Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (block instanceof unstudio.chinacraft.block.decoration.BlockCCDing) { org.lwjgl.opengl.GL11.glScaled(1.0F, 0.9F, 1.0F); org.lwjgl.opengl.GL11.glTranslatef(0, 0.1F, 0.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4410/buggy-version/src.main.java.unstudio.chinacraft.client.render.tileentity.TileEntityModelBlockRenderer.java", "BodyUseAPI": [], "Fixed commit": "e289febd08ca67418c5cd5e580aeac221a0eb50c", "Url": "https://api.github.com/repos/UnknownStudio/ChinaCraft", "Date": "2017-01-20T03:09:03Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fragment.isAdded())) { fragment.show(manager, ProgressDialogFragment.TAG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/973/buggy-version/src.com.aokyu.dev.sample.auth.google.AuthActivity.java", "BodyUseAPI": ["com.aokyu.dev.sample.auth.google.ProgressDialogFragment.show(android.app.FragmentManager,ProgressDialogFragment.TAG)"], "Fixed commit": "184a5edd427bcafdc62109e3114c2109a2319b26", "Url": "https://api.github.com/repos/aoq/AndroidGoogleAuthSample", "Date": "2013-05-07T07:22:17Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/126/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "d1f14e1cd3e08b4665704b2931e5e95e7fe6da18", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-04T07:09:52Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((intendedPageToLoad.charAt(((intendedPageToLoad.length()) - 1))) == '/') { intendedPageToLoad = intendedPageToLoad.substring(0, ((intendedPageToLoad.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2697/buggy-version/androidcommon_lib.src.main.java.org.opendatakit.views.ODKWebView.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "54ca987274ce726940e0097d868cd1b51adde427", "Url": "https://api.github.com/repos/jbeorse/androidcommon", "Date": "2017-07-09T01:21:35Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((url.charAt(((url.length()) - 1))) == '/') { url = url.substring(0, ((url.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2697/buggy-version/androidcommon_lib.src.main.java.org.opendatakit.views.ODKWebView.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "54ca987274ce726940e0097d868cd1b51adde427", "Url": "https://api.github.com/repos/jbeorse/androidcommon", "Date": "2017-07-09T01:21:35Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(applicationEnum.equals(com.nagarro.gde.persistence.model.enums.ApplicationStatusEnum.IN_PROGRESS_EXPERT))) && (!(applicationEnum.equals(com.nagarro.gde.persistence.model.enums.ApplicationStatusEnum.IN_PROGRESS_PRE_EVALUATER)))) { returnMap.put(applicationEnum.name(), applicationEnum.getStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6645/buggy-version/gde-backend.src.main.java.com.nagarro.gde.persistence.model.enums.ApplicationStatusEnum.java", "BodyUseAPI": ["com.nagarro.gde.persistence.model.enums.ApplicationStatusEnum.getStatus()", "com.nagarro.gde.persistence.model.enums.ApplicationStatusEnum.name()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "66697673b6fedfe645cca6d59248a638af18cb02", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-05-01T10:05:48Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.compress.archivers.ArchiveInputStream.getNextEntry()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(entry.isDirectory())) { try (java.io.BufferedOutputStream bos = new java.io.BufferedOutputStream(new java.io.FileOutputStream(newFile))) { final byte[] buffer = new byte[DEFAULT_BUFFER_SIZE]; int readBytes; while ((!(_interrupt)) && ((readBytes = ais.read(buffer)) != (-1))) { bos.write(buffer, 0, readBytes); } } catch (java.io.IOException ex) { if (!(_interrupt)) { org.gzipper.java.util.Log.e(ex.getLocalizedMessage(), ex); org.gzipper.java.util.Log.e(\"{0}\\n{1}\", new java.lang.Object[]{ org.gzipper.java.i18n.I18N.getString(\"errorWritingFile.text\"), newFile.getPath() }); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4803/buggy-version/src.main.java.org.gzipper.java.application.algorithm.AbstractAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "3316cf79c62088b499984cde00c49da3b7b97a51", "Url": "https://api.github.com/repos/turbolocust/GZipper", "Date": "2017-07-09T18:54:50Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defender.getHP()) >= ((defender.getMaxHP()) / 2)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8505/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.skill.SuddenKill.java", "BodyUseAPI": [], "Fixed commit": "0e1c24700d3f6a32889b063d5868372291bc85f4", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2015-09-27T15:08:47Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((width % 2) == 1) { width--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1480/buggy-version/project.core.src.se.computerscience.kelde.view.MapScreen.java", "BodyUseAPI": [], "Fixed commit": "cbb35a1ddaf5e72be62cac6cf82a7fc843fa010d", "Url": "https://api.github.com/repos/ptibom/Kelde", "Date": "2015-04-06T20:13:38Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((height % 2) == 1) { height--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1480/buggy-version/project.core.src.se.computerscience.kelde.view.MapScreen.java", "BodyUseAPI": [], "Fixed commit": "cbb35a1ddaf5e72be62cac6cf82a7fc843fa010d", "Url": "https://api.github.com/repos/ptibom/Kelde", "Date": "2015-04-06T20:13:38Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((server) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1530/buggy-version/web.src.main.java.com.graphhopper.http.GHServer.java", "BodyUseAPI": [], "Fixed commit": "898595a369cb9fc3732eb0bb8d070f78c42de302", "Url": "https://api.github.com/repos/Rasheed/graphhopper", "Date": "2014-07-18T11:51:48Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((moves.size()) < 2) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7904/buggy-version/src.Model.Rules.EnPessant.java", "BodyUseAPI": [], "Fixed commit": "2e19c78b12f7a40f3db6f11898f387004ca5139b", "Url": "https://api.github.com/repos/ahnh/8Chess", "Date": "2014-10-19T03:17:28Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg != null) { return new com.googlecode.npackdweb.MessagePage(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7174/buggy-version/src.main.java.com.googlecode.npackdweb.pv.DetectPackageVersionAction.java", "BodyUseAPI": [], "Fixed commit": "a7cc4955a6c6998a3118a5c761e425911a66407f", "Url": "https://api.github.com/repos/tim-lebedkov/npackd-gae-web", "Date": "2017-07-03T07:20:19Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (msg != null) { return new com.googlecode.npackdweb.MessagePage(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7174/buggy-version/src.main.java.com.googlecode.npackdweb.pv.DetectPackageVersionAction.java", "BodyUseAPI": [], "Fixed commit": "a7cc4955a6c6998a3118a5c761e425911a66407f", "Url": "https://api.github.com/repos/tim-lebedkov/npackd-gae-web", "Date": "2017-07-03T07:20:19Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((actionIds.size()) > (java.lang.Long.SIZE)) || (((actionIds.size()) == (java.lang.Long.SIZE)) && (!(actionIds.contains(ActionKeys.VIEW))))) { throw new com.liferay.portal.kernel.exception.SystemException((\"There are too many actions for resource \" + name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/56/buggy-version/portal-impl.src.com.liferay.portal.service.impl.ResourceActionLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "bcf83fd72248bf3785b7174d89b34092137ac7b5", "Url": "https://api.github.com/repos/mbowerman/liferay-portal", "Date": "2016-06-21T00:13:21Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((syncviewer) != null) syncviewer.shutdown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8228/buggy-version/src.main.java.org.wwscc.tray.TrayMonitor.java", "BodyUseAPI": [], "Fixed commit": "17822928d7478aa3fddcfa3de66992d9afb27482", "Url": "https://api.github.com/repos/drytoastman/scorekeeperfrontend", "Date": "2017-10-20T22:34:36Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((BuildConfig.DEBUG) && (au.com.newint.newinternationalist.Helpers.getSiteURL().contains(\"3000\"))) { fullsizeImageString = (au.com.newint.newinternationalist.Helpers.getSiteURL()) + fullsizeImageString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4027/buggy-version/app.src.main.java.au.com.newint.newinternationalist.Image.java", "BodyUseAPI": [], "Fixed commit": "b048dde87b6dd077b788f1fdc088dcb705b79740", "Url": "https://api.github.com/repos/sighmon/NewInternationalist", "Date": "2015-07-14T05:29:52Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Files.exists(java.nio.file.Path)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (exists) { timestamp = java.nio.file.Files.getLastModifiedTime(resourcePath).toMillis(); }else { timestamp = java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5271/buggy-version/org.eclipse.flux.watcher.src.main.java.org.eclipse.flux.watcher.fs.JDKProjectWatchService.java", "BodyUseAPI": [], "Fixed commit": "180e9673265b60b2eb323a607d7174c4a3ae6b0a", "Url": "https://api.github.com/repos/fjodorver/flux", "Date": "2016-08-16T21:01:07Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.recordCount) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6068/buggy-version/src.com.oltpbenchmark.benchmarks.sibench.SIWorker.java", "BodyUseAPI": [], "Fixed commit": "69f81f7e848fa261045132af1e504edb7ca5be41", "Url": "https://api.github.com/repos/dvanaken/oltpbench", "Date": "2017-04-05T18:36:54Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.arraySpinner[0]) == \"\") { android.content.Intent i = new android.content.Intent(this, com.example.a11302481.rondleidingappteamkobalt.Controllers.MainActivity.class); startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4746/buggy-version/RondleidingAppTeamKobalt.app.src.main.java.com.example.a11302481.rondleidingappteamkobalt.Controllers.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6220be0e82040dbd2764504a11d8661017efa3cb", "Url": "https://api.github.com/repos/SteffenVandegaer/AppTeamKobalt", "Date": "2017-12-19T09:56:42Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getType().startsWith(\"O\")) || (type.startsWith(\"O\"))) return false; else if (((c.getTime()) == null) || ((time) == null)) return true; else if (c.getTime().overlaps(time)) return true; else if (((additionalTime) != null) && (c.getTime().overlaps(additionalTime))) return true; else if (((c.getAdditionalTime()) != null) && (c.getAdditionalTime().overlaps(time))) return true; else if ((((c.getAdditionalTime()) != null) && ((additionalTime) != null)) && (c.getAdditionalTime().overlaps(additionalTime))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/508/buggy-version/src.edu.vt.ece4564.vtClassRequest.Course.java", "BodyUseAPI": ["edu.vt.ece4564.vtClassRequest.Course.getAdditionalTime()", "edu.vt.ece4564.vtClassRequest.Course.getAdditionalTime()", "edu.vt.ece4564.vtClassRequest.Course.getTime()", "edu.vt.ece4564.vtClassRequest.Course.getAdditionalTime()", "edu.vt.ece4564.vtClassRequest.CourseTime.overlaps(edu.vt.ece4564.vtClassRequest.CourseTime)", "edu.vt.ece4564.vtClassRequest.CourseTime.overlaps(edu.vt.ece4564.vtClassRequest.CourseTime)", "edu.vt.ece4564.vtClassRequest.Course.getTime()", "edu.vt.ece4564.vtClassRequest.CourseTime.overlaps(edu.vt.ece4564.vtClassRequest.CourseTime)", "edu.vt.ece4564.vtClassRequest.CourseTime.overlaps(edu.vt.ece4564.vtClassRequest.CourseTime)", "edu.vt.ece4564.vtClassRequest.Course.getTime()", "edu.vt.ece4564.vtClassRequest.Course.getAdditionalTime()"], "Fixed commit": "22a8f39de504523e9ca92ab91ed0f8116379783a", "Url": "https://api.github.com/repos/brianmay27/VTScheduleServer", "Date": "2013-11-27T20:36:29Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<org.altbeacon.beacon.Beacon>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((beacon.getDistance()) > 5.0) || ((beacon.getDistance()) <= 3.0)) { mDataManager.updateBeaconDistance(regName.getBeaconId(), beacon.getDistance()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3442/buggy-version/app.src.main.java.com.samebits.beacon.locator.BeaconLocatorApp.java", "BodyUseAPI": ["org.altbeacon.beacon.Beacon.getDistance()", "com.samebits.beacon.locator.data.DataManager.updateBeaconDistance(regName.getBeaconId(),beacon.getDistance())"], "Fixed commit": "1664b9993b0401a75384fc2558b8f73677c943a9", "Url": "https://api.github.com/repos/chunlinyao/beaconloc", "Date": "2016-08-04T11:25:54Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((image) != null) return android.graphics.BitmapFactory.decodeByteArray(image, 0, image.length); else return android.graphics.Bitmap.createBitmap(1, 1, Bitmap.Config.ARGB_8888);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2207/buggy-version/app.src.main.java.janis.opennumismat.Coin.java", "BodyUseAPI": [], "Fixed commit": "21a556febd42dac0234fdb095b775b3e8688a24d", "Url": "https://api.github.com/repos/OpenNumismat/open-numismat-android", "Date": "2014-11-19T13:49:09Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.isCancelled()) { event.setCancelled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5051/buggy-version/src.net.charter.orion_pax.OasisExtras.OasisExtrasListener.java", "BodyUseAPI": ["net.charter.orion_pax.OasisExtras.PlayerMoveEvent.setCancelled(boolean)"], "Fixed commit": "b92d92da72c78011146b695c5f0aa1d56e7606bc", "Url": "https://api.github.com/repos/Oasis-SMP/OasisExtras", "Date": "2013-11-06T17:58:02Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CreatorPlugin.plugin.getMarker(org.bukkit.World,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (lPos2 != null) { lPos1 = lPos1.getMinPos(lPos2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5699/buggy-version/src.com.mahn42.anhalter42.creator.PlayerListener.java", "BodyUseAPI": ["com.mahn42.framework.BlockPosition.getMinPos(com.mahn42.framework.BlockPosition)"], "Fixed commit": "cd2f596d1a2a1e33b3f7d6bf931873f480131fca", "Url": "https://api.github.com/repos/anhalter42/Minecraft-Bukkit-Creator", "Date": "2012-08-18T14:42:55Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tdnext.Task.getPriorityIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((task2PriorityIndex % 2) == 0) { return 1; }else if (task2PriorityIndex > task1PriorityIndex) { return 1; }else if (task1PriorityIndex > task2PriorityIndex) { return -1; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2945/buggy-version/src.tdnext.Task.java", "BodyUseAPI": [], "Fixed commit": "ef3c2d3cdc6b48ac711c01f231e0121822641d72", "Url": "https://api.github.com/repos/cs2103aug2015-t16-2j/main", "Date": "2015-10-28T08:05:47Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (runModel()) { if (isGraphable()) showChartDialog(ChartDialogMode.Table); else javax.swing.JOptionPane.showMessageDialog(edu.asu.laits.gui.MainWindow.getInstance(), \"This model does not contain any functions or accumulators. There is nothing to show yet.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6554/buggy-version/src.edu.asu.laits.gui.menus.ModelMenu.java", "BodyUseAPI": [], "Fixed commit": "30c39ac5f500bc3b5cee89aa06e34a901c8f05ad", "Url": "https://api.github.com/repos/rptiwari/LaitsV3", "Date": "2013-10-18T21:37:41Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Main.user.borrowBook(Main.lib, title)) java.lang.System.out.println(((\"You borrowed \" + title) + \".\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1328/buggy-version/src.Main.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "536829964aca48dde11863395e33ad9636cbb03f", "Url": "https://api.github.com/repos/antonrufino/Young-Blood-Exer-3-Library-Information-System", "Date": "2016-04-02T13:26:54Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (idx > 0) { name = fullargs.substring(0, idx); query = fullargs.substring((idx + 1), fullargs.length()); }else { name = null; query = fullargs; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8892/buggy-version/dashbase-zeppelin.src.main.java.io.dashbase.zeppelin.DashbaseInterpreter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "7a2f90a0ab915510e2f0ebce69d6519c75e45565", "Url": "https://api.github.com/repos/dashbase/dashbase-extensions", "Date": "2017-03-16T17:45:53Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.accounts.AccountManager.getAccountsByType(Mirakel.ACCOUNT_TYPE)", "android.accounts.AccountManager.get(android.app.Activity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (am.getUserData(accounts[0], SyncAdapter.BUNDLE_SERVER_TYPE).equals(MirakelSync.TYPE)) { syncType.setSummary(activity.getString(R.string.sync_use_summary_mirakel, accounts[0].name)); }else if (am.getUserData(accounts[0], SyncAdapter.BUNDLE_SERVER_TYPE).equals(CalDavSync.TYPE)) { syncType.setSummary(activity.getString(R.string.sync_use_summary_caldav, accounts[0].name)); }else { sync.setSummary(R.string.sync_use_summary_nothing); am.removeAccount(accounts[0], null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6246/buggy-version/src.de.azapps.mirakel.helper.PreferencesHelper.java", "BodyUseAPI": ["android.accounts.AccountManager.getUserData(accounts[0],SyncAdapter.BUNDLE_SERVER_TYPE)", "android.app.Activity.getString(R.string.sync_use_summary_caldav,accounts[0].name)", "android.accounts.AccountManager.removeAccount(accounts[0],<nulltype>,<nulltype>)", "android.app.Activity.getString(R.string.sync_use_summary_mirakel,accounts[0].name)", "android.preference.Preference.setSummary(activity.getString(R.string.sync_use_summary_mirakel, accounts[0].name))", "android.preference.Preference.setSummary(activity.getString(R.string.sync_use_summary_caldav, accounts[0].name))", "am.getUserData(accounts[0], SyncAdapter.BUNDLE_SERVER_TYPE).equals(CalDavSync.TYPE)"], "Fixed commit": "d5950954d5070185453cf23a21be542ff0c8f5f4", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-10-14T16:01:29Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.azapps.mirakel.helper.PreferencesHelper.findPreference(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (syncType != null) { if ((settings.getBoolean(\"syncUse\", false)) && ((accounts.length) > 0)) { if (am.getUserData(accounts[0], SyncAdapter.BUNDLE_SERVER_TYPE).equals(TaskWarriorSync.TYPE)) { syncType.setSummary(activity.getString(R.string.sync_use_summary_taskwarrior, accounts[0].name)); }else if (am.getUserData(accounts[0], SyncAdapter.BUNDLE_SERVER_TYPE).equals(MirakelSync.TYPE)) { syncType.setSummary(activity.getString(R.string.sync_use_summary_mirakel, accounts[0].name)); }else if (am.getUserData(accounts[0], SyncAdapter.BUNDLE_SERVER_TYPE).equals(CalDavSync.TYPE)) { syncType.setSummary(activity.getString(R.string.sync_use_summary_caldav, accounts[0].name)); }else { sync.setSummary(R.string.sync_use_summary_nothing); am.removeAccount(accounts[0], null, null); } }else { sync.setSummary(R.string.sync_use_summary_nothing); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6246/buggy-version/src.de.azapps.mirakel.helper.PreferencesHelper.java", "BodyUseAPI": ["android.preference.Preference.setSummary(activity.getString(R.string.sync_use_summary_caldav, accounts[0].name))", "android.preference.Preference.setSummary(activity.getString(R.string.sync_use_summary_taskwarrior, accounts[0].name))", "android.preference.Preference.setSummary(activity.getString(R.string.sync_use_summary_mirakel, accounts[0].name))"], "Fixed commit": "d5950954d5070185453cf23a21be542ff0c8f5f4", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-10-14T16:01:29Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null == config) { throw new java.lang.IllegalArgumentException(\"Config cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7352/buggy-version/media-storage-client.src.main.java.eu.europeana.harvester.db.swift.SwiftMediaStorageClientImpl.java", "BodyUseAPI": [], "Fixed commit": "723a8456712465ee94f042e4e2319915fc1a177f", "Url": "https://api.github.com/repos/europeana/ImageHarvester", "Date": "2015-06-04T12:07:08Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (thread.isAlive()) lock.openAll(); else thread.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2743/buggy-version/jestful-commons.src.main.java.org.qfox.jestful.commons.clock.LinkedClock.java", "BodyUseAPI": ["java.lang.Thread.start()"], "Fixed commit": "b7a3c0295282bdaa65b1adc4299b7c39654db594", "Url": "https://api.github.com/repos/core-lib/jestful", "Date": "2017-12-18T16:10:42Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inventory) != null) { net.minecraft.item.ItemStack containerItem = inventory.getItem().getContainerItem(inventory); if (containerItem == null) { (inventory.stackSize)--; if ((inventory.stackSize) == 0) { inventory = null; } }else { inventory = containerItem.copy(); } needsUpdate = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8236/buggy-version/java.k4unl.minecraft.Hydraulicraft.tileEntities.generator.TileHydraulicPump.java", "BodyUseAPI": [], "Fixed commit": "288c4b18242e8fc9ab07f1b29e3cf90fe447c638", "Url": "https://api.github.com/repos/K-4U/Hydraulicraft", "Date": "2014-07-25T19:48:58Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(response.equals(\"\"))) { msg.what = com.demo.kirreal.mobilemessaging.ui.MessageFragment.TRANSMIT_SUCCESS; msg.getData().putString(com.demo.kirreal.mobilemessaging.ui.MessageFragment.RESPONSE_KEY, response); com.demo.kirreal.mobilemessaging.util.BroadcastMessageService.sendBroadcastMessage(getActivity(), msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2718/buggy-version/app.src.main.java.com.demo.kirreal.mobilemessaging.ui.MessageFragment.java", "BodyUseAPI": ["msg.getData().putString(java.lang.String,java.lang.String)"], "Fixed commit": "22b5f4b19258faf992384290dc4a5dbdc583dc6c", "Url": "https://api.github.com/repos/kirreal/MobileMessaging", "Date": "2015-08-04T20:28:31Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x.right) == null) return x.right;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3056/buggy-version/src.main.java.cse.buffalo.edu.algorithms.search.BST.java", "BodyUseAPI": [], "Fixed commit": "5becf2feca8094188814a83936f7450468121238", "Url": "https://api.github.com/repos/boulevard23/algorithm_training", "Date": "2013-10-06T20:11:17Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((pit + i) % (model.Board.NUM_PITS)) == (getOpponent().getKalaha())) { seeds++; }else { putSeed((pit + i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4610/buggy-version/ue5.src.model.Board.java", "BodyUseAPI": ["model.Board.putSeed(int)"], "Fixed commit": "40185170377c097c314d8b9dcb0a8703528ad670", "Url": "https://api.github.com/repos/chrifpa/java", "Date": "2014-05-23T14:22:23Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loadFromCache) { status = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8504/buggy-version/app.src.main.java.com.lincanbin.carbonforum.NotificationsActivity.java", "BodyUseAPI": [], "Fixed commit": "d61ee16480acae7df611b4d4d7544b4524c4482d", "Url": "https://api.github.com/repos/lincanbin/Android-Carbon-Forum", "Date": "2016-04-17T04:28:15Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status == 1) { if ((list != null) && (!(list.isEmpty()))) { android.util.Log.d(\"Action : \", ((keyName) + \" SetData\")); mAdapter.setData(list); mAdapter.notifyDataSetChanged(); }else { android.support.design.widget.Snackbar.make(com.lincanbin.carbonforum.NotificationsActivity.PlaceholderFragment.rootView, R.string.empty_notification, Snackbar.LENGTH_LONG).setAction(\"Action\", null).show(); } }else { android.support.design.widget.Snackbar.make(com.lincanbin.carbonforum.NotificationsActivity.PlaceholderFragment.rootView, R.string.network_error, Snackbar.LENGTH_LONG).setAction(\"Action\", null).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8504/buggy-version/app.src.main.java.com.lincanbin.carbonforum.NotificationsActivity.java", "BodyUseAPI": [], "Fixed commit": "d61ee16480acae7df611b4d4d7544b4524c4482d", "Url": "https://api.github.com/repos/lincanbin/Android-Carbon-Forum", "Date": "2016-04-17T04:28:15Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"chrome\".equals(browserName)) { java.lang.String pathWindows = \"C:\\\\Users\\\\%USERNAME%\\\\AppData\\\\Local\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\"; java.lang.String pathlunix = \"/usr/local/bin/chromedriver\"; org.openqa.selenium.chrome.ChromeDriverService service; if (os.contains(\"windows\")) { automation.utils.PropertyUtil.setSystemProperty(\"webdriver.chrome.driver\", pathWindows); service = new org.openqa.selenium.chrome.ChromeDriverService.Builder().usingDriverExecutable(new java.io.File(pathlunix)).usingAnyFreePort().build(); }else { automation.utils.PropertyUtil.setSystemProperty(\"webdriver.chrome.driver\", pathlunix); service = new org.openqa.selenium.chrome.ChromeDriverService.Builder().usingDriverExecutable(new java.io.File(pathlunix)).usingAnyFreePort().build(); } try { service.start(); } catch (java.io.IOException e) { e.printStackTrace(); } return new org.openqa.selenium.remote.RemoteWebDriver(service.getUrl(), org.openqa.selenium.remote.DesiredCapabilities.chrome()); }else if (\"safari\".equals(browserName)) { org.browser.manage.BrowserFactory.aBrowser = new org.openqa.selenium.safari.SafariDriver(); }else { try { return new org.openqa.selenium.remote.RemoteWebDriver(new java.net.URL(org.browser.utils.RemoteConfig.inhouse_hubUrl), org.browser.manage.CapabilityFactory.getInhouseCapabilities(org.browser.manage.BrowserFactory.internalRemoteDriverConfig)); } catch (java.net.MalformedURLException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4289/buggy-version/src.main.java.org.browser.manage.BrowserFactory.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "77210a58da34abd546af5f6debf28502cec86035", "Url": "https://api.github.com/repos/sarkershantonu/Utilities", "Date": "2016-06-30T23:37:19Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultCode == (android.app.Activity.RESULT_OK)) && (requestCode == (com.stuart.hackatonproject.fragment.DetailReminderFragment.REQUEST_CODE_GET_LIST_FRIEND))) { com.stuart.hackatonproject.model.UserDB userDB = data.getParcelableExtra(ListFriendsFragment.EXTRA_USER_CHOOSEN); friendTextList.setText(userDB.getName()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8463/buggy-version/app.src.main.java.com.stuart.hackatonproject.fragment.DetailReminderFragment.java", "BodyUseAPI": [], "Fixed commit": "9cb7d2fe473c015138465773fbca19b25ebf6bb6", "Url": "https://api.github.com/repos/noiz354/stuart-hackathon", "Date": "2017-10-17T03:19:41Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((puppet) != null) puppet.updateTime(t);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1260/buggy-version/Calendar.src.edu.wpi.cs.wpisuitetng.modules.cal.ui.views.day.collisiondetection.DayItem.java", "BodyUseAPI": [], "Fixed commit": "5954234777debe07fcc78ae7223c1a2b5424af0d", "Url": "https://api.github.com/repos/cs3733-team4/wpi-suite", "Date": "2013-12-18T11:20:43Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (attackerRow > victimRow) { if (isMoveable(attackerRow, attackerCol, (victimRow - 1), (victimCol - 1))) { movePiece(attackerRow, attackerCol, (victimRow - 1), (victimCol - 1)); lastCutPieceRow = victimRow - 1; lastCutPieceCol = victimCol - 1; checkersBoard[victimRow][victimCol] = empty; if (tmpVictim == (typeR)) { typeRList.get(typeRList.indexOf(new Logic.Chip(victimCol, victimRow))).setOnBoard(false); } if (tmpVictim == (typeB)) { typeBList.get(typeBList.indexOf(new Logic.Chip(victimCol, victimRow))).setOnBoard(false); } return true; }else if (isMoveable(attackerRow, attackerCol, (victimRow - 1), (victimCol + 1))) { movePiece(attackerRow, attackerCol, (victimRow - 1), (victimCol + 1)); lastCutPieceRow = victimRow - 1; lastCutPieceCol = victimCol + 1; checkersBoard[victimRow][victimCol] = empty; if (tmpVictim == (typeR)) { typeRList.get(typeRList.indexOf(new Logic.Chip(victimCol, victimRow))).setOnBoard(false); } if (tmpVictim == (typeB)) { typeBList.get(typeBList.indexOf(new Logic.Chip(victimCol, victimRow))).setOnBoard(false); } return true; } }else if (attackerRow < victimRow) { if (isMoveable(attackerRow, attackerCol, (victimRow + 1), (victimCol - 1))) { movePiece(attackerRow, attackerCol, (victimRow + 1), (victimCol - 1)); lastCutPieceRow = victimRow + 1; lastCutPieceCol = victimCol - 1; checkersBoard[victimRow][victimCol] = empty; if (tmpVictim == (typeR)) { typeRList.get(typeRList.indexOf(new Logic.Chip(victimCol, victimRow))).setOnBoard(false); } if (tmpVictim == (typeB)) { typeBList.get(typeBList.indexOf(new Logic.Chip(victimCol, victimRow))).setOnBoard(false); } return true; }else if (isMoveable(attackerRow, attackerCol, (victimRow + 1), (victimCol + 1))) { movePiece(attackerRow, attackerCol, (victimRow + 1), (victimCol + 1)); lastCutPieceRow = victimRow + 1; lastCutPieceCol = victimCol + 1; checkersBoard[victimRow][victimCol] = empty; if (tmpVictim == (typeR)) { typeRList.get(typeRList.indexOf(new Logic.Chip(victimCol, victimRow))).setOnBoard(false); } if (tmpVictim == (typeB)) { typeBList.get(typeBList.indexOf(new Logic.Chip(victimCol, victimRow))).setOnBoard(false); } return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7730/buggy-version/src.Logic.CheckerBoard.java", "BodyUseAPI": ["Logic.CheckerBoard.isMoveable(int,int,int,int)", "java.util.List<Logic.Chip>.get(typeBList.indexOf(new Logic.Chip(victimCol, victimRow)))", "java.util.List<Logic.Chip>.get(typeRList.indexOf(new Logic.Chip(victimCol, victimRow)))", "java.util.List<Logic.Chip>.get(typeBList.indexOf(new Logic.Chip(victimCol, victimRow)))", "java.util.List<Logic.Chip>.indexOf(Logic.Chip)", "java.util.List<Logic.Chip>.get(typeRList.indexOf(new Logic.Chip(victimCol, victimRow)))", "typeBList.get(typeBList.indexOf(new Logic.Chip(victimCol, victimRow))).setOnBoard(boolean)", "java.util.List<Logic.Chip>.indexOf(Logic.Chip)", "Logic.CheckerBoard.isMoveable(int,int,int,int)", "java.util.List<Logic.Chip>.get(typeRList.indexOf(new Logic.Chip(victimCol, victimRow)))", "Logic.CheckerBoard.movePiece(int,int,int,int)", "Logic.CheckerBoard.movePiece(int,int,int,int)", "java.util.List<Logic.Chip>.indexOf(Logic.Chip)", "java.util.List<Logic.Chip>.indexOf(Logic.Chip)", "java.util.List<Logic.Chip>.indexOf(Logic.Chip)", "typeBList.get(typeBList.indexOf(new Logic.Chip(victimCol, victimRow))).setOnBoard(boolean)", "Logic.CheckerBoard.movePiece(int,int,int,int)", "java.util.List<Logic.Chip>.get(typeRList.indexOf(new Logic.Chip(victimCol, victimRow)))", "java.util.List<Logic.Chip>.indexOf(Logic.Chip)", "Logic.CheckerBoard.movePiece(int,int,int,int)", "typeBList.get(typeBList.indexOf(new Logic.Chip(victimCol, victimRow))).setOnBoard(boolean)", "java.util.List<Logic.Chip>.get(typeBList.indexOf(new Logic.Chip(victimCol, victimRow)))", "typeRList.get(typeRList.indexOf(new Logic.Chip(victimCol, victimRow))).setOnBoard(boolean)", "typeRList.get(typeRList.indexOf(new Logic.Chip(victimCol, victimRow))).setOnBoard(boolean)", "typeRList.get(typeRList.indexOf(new Logic.Chip(victimCol, victimRow))).setOnBoard(boolean)", "Logic.CheckerBoard.isMoveable(int,int,int,int)", "typeRList.get(typeRList.indexOf(new Logic.Chip(victimCol, victimRow))).setOnBoard(boolean)", "typeBList.get(typeBList.indexOf(new Logic.Chip(victimCol, victimRow))).setOnBoard(boolean)", "java.util.List<Logic.Chip>.get(typeBList.indexOf(new Logic.Chip(victimCol, victimRow)))", "java.util.List<Logic.Chip>.indexOf(Logic.Chip)", "Logic.CheckerBoard.isMoveable(int,int,int,int)", "java.util.List<Logic.Chip>.indexOf(Logic.Chip)"], "Fixed commit": "a21cb0df8418722f37538ceebf3038afe5ff60d9", "Url": "https://api.github.com/repos/hashinisenaratne/Checkers", "Date": "2013-12-16T14:00:18Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (level.getTile(xt, yt).solid()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2797/buggy-version/Main.src.Game.Entity.Mob.java", "BodyUseAPI": [], "Fixed commit": "1fd6ae7494737304964842fe05b082e8b48032f3", "Url": "https://api.github.com/repos/ksbdude/APCSGame", "Date": "2016-05-25T15:48:47Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (level.getTile(xt, yt).solid()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2797/buggy-version/Main.src.Game.Entity.Mob.java", "BodyUseAPI": [], "Fixed commit": "1fd6ae7494737304964842fe05b082e8b48032f3", "Url": "https://api.github.com/repos/ksbdude/APCSGame", "Date": "2016-05-25T15:48:47Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 24) { try { if ((com.tencent.tinker.loader.TinkerResourcePatcher.publicSourceDirField) != null) { com.tencent.tinker.loader.TinkerResourcePatcher.publicSourceDirField.set(context.getApplicationInfo(), externalResourceFile); } } catch (java.lang.Throwable ignore) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2430/buggy-version/tinker-android.tinker-android-loader.src.main.java.com.tencent.tinker.loader.TinkerResourcePatcher.java", "BodyUseAPI": [], "Fixed commit": "af27a44d86a37dd8695f0d859545fc3fdf1e9973", "Url": "https://api.github.com/repos/Tencent/tinker", "Date": "2017-04-26T04:04:53Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.om.core.impl.util.ClassUtils.isPrimitiveOrAutoboxed(mappedField.getType())) && (org.om.core.impl.util.ClassUtils.isPrimitiveOrAutoboxed(input.getClass()))) return input;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9042/buggy-version/core.impl.src.main.java.org.om.core.impl.persistence.interceptor.handler.PrimitiveHandler.java", "BodyUseAPI": [], "Fixed commit": "5e18f4828334b46f9b1a3eff7ecc15454afeb4b0", "Url": "https://api.github.com/repos/ilikeorangutans/omf", "Date": "2012-07-12T22:03:50Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minY) > 0) { minY = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7664/buggy-version/app.src.main.java.com.example.jianming.views.YImageView.java", "BodyUseAPI": [], "Fixed commit": "b49cef7c34260abcc945611cb9beb31691541934", "Url": "https://api.github.com/repos/knightingal/android_start_demo", "Date": "2015-06-13T14:18:07Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (num.startsWith(\"0\")) { num = str.replaceFirst(\"[0]+\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4277/buggy-version/src.main.java.controller.Main.java", "BodyUseAPI": [], "Fixed commit": "b447cf1bc58ff234ebf1eae56619da6c48588366", "Url": "https://api.github.com/repos/bost367/LogParser", "Date": "2017-03-27T17:26:21Z"},
{"Line": "=>1058", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMap) != null) { zoom = ((int) (mMap.getCameraPosition().zoom)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/482/buggy-version/GMSClientNew.src.com.jstakun.gms.android.ui.GMSClient3MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9d1067a3c269d2c4707b9a51c85bd3735867128d", "Url": "https://api.github.com/repos/jstakun/gms-world-client", "Date": "2016-08-16T08:21:30Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit.RetrofitError.getResponse()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (response != null) { android.util.Log.i(TAG, response.getReason()); android.util.Log.e(TAG, error.getStackTrace().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7054/buggy-version/ETA.src.com.eta.SignupActivity.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,response.getReason())", "retrofit.client.Response.getReason()"], "Fixed commit": "0223c8899ffa5a97b13b101f337699f82d0923e4", "Url": "https://api.github.com/repos/ksweta/ETA", "Date": "2014-12-22T04:17:08Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.topRule.getType()) == (tech.arg.aspic.Rule.RuleType.STRICT)) { s.append(\" -> \"); }else { s.append(\" => \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/113/buggy-version/src.tech.arg.aspic.Argument.java", "BodyUseAPI": [], "Fixed commit": "9c05d3055b9abb00143f20327fad33d8fc5f1826", "Url": "https://api.github.com/repos/marksnaith/ASPIC-", "Date": "2017-02-06T17:06:58Z"},
{"Line": "=>2317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetQuery instanceof org.eclipse.persistence.queries.ObjectBuildingQuery) ((org.eclipse.persistence.queries.ObjectBuildingQuery) (targetQuery)).setRequiresDeferredLocks(sourceQuery.requiresDeferredLocks());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5054/buggy-version/foundation.org.eclipse.persistence.core.src.org.eclipse.persistence.mappings.ForeignReferenceMapping.java", "BodyUseAPI": [], "Fixed commit": "a3e557023dbe0823ea8faa68c7abdd2ec0e547d0", "Url": "https://api.github.com/repos/pmneo/eclipselink.runtime", "Date": "2016-01-21T08:12:57Z"},
{"Line": "=>2204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.indirectionPolicy) instanceof org.eclipse.persistence.internal.indirection.NoIndirectionPolicy) == false) value = batchedValueFromRow(row, ((org.eclipse.persistence.queries.ObjectLevelReadQuery) (sourceQuery)), cacheKey); else value = valueFromRowInternal(row, joinManager, sourceQuery, executionSession, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5054/buggy-version/foundation.org.eclipse.persistence.core.src.org.eclipse.persistence.mappings.ForeignReferenceMapping.java", "BodyUseAPI": [], "Fixed commit": "a3e557023dbe0823ea8faa68c7abdd2ec0e547d0", "Url": "https://api.github.com/repos/pmneo/eclipselink.runtime", "Date": "2016-01-21T08:12:57Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.works.lineestimate.repository.LineEstimateDetailsRepository.findEstimateNumbersForDepartment(searchRequestLetterOfAcceptance.getDepartmentName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (estimateNumbers.isEmpty()) estimateNumbers.add(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1640/buggy-version/egov.egov-works.src.main.java.org.egov.works.letterofacceptance.service.LetterOfAcceptanceService.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "fa08c44a4d74bfba2e49637ab38763ff8b9db591", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-04-26T10:59:06Z"},
{"Line": "=>692", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getTaskModel().getObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (cb != null) { org.eclipse.wst.server.core.IServerWorkingCopy wc2 = cb.getServer(); if (wc2 instanceof org.jboss.ide.eclipse.as.ui.editor.internal.DelayedServerWorkingCopy) { ((org.jboss.ide.eclipse.as.ui.editor.internal.DelayedServerWorkingCopy) (wc2)).saveToOriginalWorkingCopy(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6508/buggy-version/as.plugins.org.jboss.ide.eclipse.as.ui.jbossui.org.jboss.ide.eclipse.as.ui.wizards.ServerProfileWizardFragment.java", "BodyUseAPI": ["org.jboss.ide.eclipse.as.ui.editor.IDeploymentTypeUI.IServerModeUICallback.getServer()"], "Fixed commit": "d3df8ff7c8e436422076b2191e59a2309f643b77", "Url": "https://api.github.com/repos/robstryker/jbosstools-server", "Date": "2014-12-05T11:02:48Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isRegex) try { java.util.regex.Pattern.compile(value); } catch (java.util.regex.PatternSyntaxException ex) { throw new mods.railcraft.common.blocks.signals.RoutingLogic.RoutingLogicException(\"railcraft.gui.routing.logic.regex.invalid\", line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4208/buggy-version/src.main.java.mods.railcraft.common.blocks.signals.RoutingLogic.java", "BodyUseAPI": [], "Fixed commit": "2b29dde6878d5f038950f77e6e10c6a7c61a165c", "Url": "https://api.github.com/repos/Railcraft/Railcraft", "Date": "2015-02-27T22:11:23Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (seedu.task.model.ModelManager.undoStack.isEmpty()) { throw new java.util.EmptyStackException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4593/buggy-version/src.main.java.seedu.task.model.ModelManager.java", "BodyUseAPI": [], "Fixed commit": "e77181140fad93e207e96b3dfd9ddca6137f0cb4", "Url": "https://api.github.com/repos/CS2103JAN2017-W15-B2/main", "Date": "2017-03-11T11:17:30Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (seedu.task.model.ModelManager.redoStack.isEmpty()) { throw new java.util.EmptyStackException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4593/buggy-version/src.main.java.seedu.task.model.ModelManager.java", "BodyUseAPI": [], "Fixed commit": "e77181140fad93e207e96b3dfd9ddca6137f0cb4", "Url": "https://api.github.com/repos/CS2103JAN2017-W15-B2/main", "Date": "2017-03-11T11:17:30Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yc.phonogram.App.getProxy()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != proxy) { proxyUrl = proxy.getProxyUrl(phonogramInfo.getVoice()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1669/buggy-version/app.src.main.java.com.yc.phonogram.ui.fragments.ReadToMeFragment.java", "BodyUseAPI": ["com.danikula.videocache.HttpProxyCacheServer.getProxyUrl(phonogramInfo.getVoice())"], "Fixed commit": "a60011dce4a9da74e457689d9f4d296da76252fc", "Url": "https://api.github.com/repos/feiyouAndroidTeam/Phonogram", "Date": "2017-12-21T08:31:21Z"},
{"Line": "=>3734", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (programVariables.containsKey(name)) { var = programVariables.get(name); }else if (variables.containsKey(name)) { var = variables.get(name); }else { var.setName(name); variables.put(name, var); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4780/buggy-version/catrobatLanguage.src.org.catrobat.parser.CatrobatScriptParser.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.catrobat.catroid.formulaeditor.UserVariable>.put(java.lang.String,org.catrobat.catroid.formulaeditor.UserVariable)", "java.util.Map<java.lang.String, org.catrobat.catroid.formulaeditor.UserVariable>.get(java.lang.String)", "java.util.Map<java.lang.String, org.catrobat.catroid.formulaeditor.UserVariable>.containsKey(java.lang.String)", "org.catrobat.catroid.formulaeditor.UserVariable.setName(java.lang.String)", "java.util.Map<java.lang.String, org.catrobat.catroid.formulaeditor.UserVariable>.get(java.lang.String)"], "Fixed commit": "e9c6a1c1720d2aa6a547f5ff1fbbd1b7d87542c4", "Url": "https://api.github.com/repos/Catrobat/CatrobatLanguage", "Date": "2013-09-08T12:12:08Z"},
{"Line": "=>3822", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (programVariables.containsKey(name)) { var = programVariables.get(name); }else if (variables.containsKey(name)) { var = variables.get(name); }else { var.setName(name); variables.put(name, var); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4780/buggy-version/catrobatLanguage.src.org.catrobat.parser.CatrobatScriptParser.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.catrobat.catroid.formulaeditor.UserVariable>.put(java.lang.String,org.catrobat.catroid.formulaeditor.UserVariable)", "org.catrobat.catroid.formulaeditor.UserVariable.setName(java.lang.String)", "java.util.Map<java.lang.String, org.catrobat.catroid.formulaeditor.UserVariable>.get(java.lang.String)", "java.util.Map<java.lang.String, org.catrobat.catroid.formulaeditor.UserVariable>.get(java.lang.String)", "java.util.Map<java.lang.String, org.catrobat.catroid.formulaeditor.UserVariable>.containsKey(java.lang.String)"], "Fixed commit": "e9c6a1c1720d2aa6a547f5ff1fbbd1b7d87542c4", "Url": "https://api.github.com/repos/Catrobat/CatrobatLanguage", "Date": "2013-09-08T12:12:08Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (messageSent) { android.widget.Toast.makeText(this, \"Mensaje agendado.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5539/buggy-version/TextLater.app.src.main.java.com.gestion.textlater.textlater.EnviarMensajeActivity.java", "BodyUseAPI": [], "Fixed commit": "1e6a4e383d5c78ee4d9b08439fd18a3a42f420ed", "Url": "https://api.github.com/repos/RZzero/TextLater", "Date": "2017-04-15T16:59:28Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sbar.smsnenado.activities.MainActivity.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (activity != null) { activity.requestBanner(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2586/buggy-version/src.com.sbar.smsnenado.receivers.NetworkChangeReceiver.java", "BodyUseAPI": ["com.sbar.smsnenado.activities.MainActivity.requestBanner()"], "Fixed commit": "a9510929a4939a8fd9da97afb25e8498d2f561ca", "Url": "https://api.github.com/repos/sbar/smsnenado", "Date": "2014-03-20T21:29:18Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.db.client.DbClient.queryObject(java.lang.Class,ansiblePrimitive.getResource())", "com.emc.storageos.db.client.DbClient.queryObject(java.lang.Class,java.net.URI)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(com.emc.storageos.db.client.URIUtil.identical(inventoryResource.getParentId(), ansiblePackageId.getId()))) { com.emc.sa.service.vipr.customservices.tasks.CustomServicesLocalAnsibleExecution.logger.error(\"The inventory file and the ansible package that are passed do not match. inventory.parentId {} ansiblePackage.id {}\", inventoryResource.getParentId(), ansiblePackageId.getId()); com.emc.sa.engine.ExecutionUtils.currentContext().logError(\"customServicesOperationExecution.logStatus\", step.getId(), \"The inventory file and the ansible package that are passed do not match\"); throw InternalServerErrorException.internalServerErrors.customServiceExecutionFailed(\"The inventory file and the ansible package that are passed do not match\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7586/buggy-version/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.customservices.tasks.CustomServicesLocalAnsibleExecution.java", "BodyUseAPI": ["com.emc.storageos.db.client.model.uimodels.CustomServicesDBAnsibleInventoryResource.getParentId()", "org.slf4j.Logger.error(java.lang.String,inventoryResource.getParentId(),ansiblePackageId.getId())", "com.emc.storageos.db.client.model.uimodels.CustomServicesDBAnsibleResource.getId()"], "Fixed commit": "39ccb4aff1d1979f13a257973e0395fd16b96d7b", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-06-07T21:51:30Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.model.customservices.CustomServicesWorkflowDocument.Input.getFriendlyName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (friendlyName != null) { friendlyName.replaceAll(CustomServicesConstants.SPACES_REGEX, StringUtils.EMPTY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7586/buggy-version/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.customservices.CustomServicesService.java", "BodyUseAPI": ["java.lang.String.replaceAll(CustomServicesConstants.SPACES_REGEX,StringUtils.EMPTY)"], "Fixed commit": "39ccb4aff1d1979f13a257973e0395fd16b96d7b", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-06-07T21:51:30Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (moveX < 0) { moveX = -max_moving; }else { moveX = max_moving; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1467/buggy-version/Herbivores.java", "BodyUseAPI": [], "Fixed commit": "5542c27c8c18607d874b6e19552a151ed7797555", "Url": "https://api.github.com/repos/maxouille/nature", "Date": "2013-12-23T14:41:00Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nature.Herbivores.getMoving()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((java.lang.Math.abs(moveX)) == max_moving) { moveY = 0; }else if ((java.lang.Math.abs(moveX)) < max_moving) { if (moveY < 0) { moveY = (-max_moving) - moveX; }else { moveY = max_moving - moveX; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1467/buggy-version/Herbivores.java", "BodyUseAPI": ["java.lang.Math.abs(int)"], "Fixed commit": "5542c27c8c18607d874b6e19552a151ed7797555", "Url": "https://api.github.com/repos/maxouille/nature", "Date": "2013-12-23T14:41:00Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (levelStarted) system.changeState(\"play\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7733/buggy-version/src.game.MenuState.java", "BodyUseAPI": [], "Fixed commit": "7369a8b5689e6a2537b5ddae9adfbef7bd7b229e", "Url": "https://api.github.com/repos/Hedog/BreakoutClone", "Date": "2014-07-24T18:46:51Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.dom.client.Element.getTagName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((((tagName.equalsIgnoreCase(\"br\")) || (tagName.equalsIgnoreCase(\"tr\"))) || (tagName.equalsIgnoreCase(\"thead\"))) || (tagName.equalsIgnoreCase(\"tfoot\"))) || (tagName.equalsIgnoreCase(\"script\"))) || (tagName.equalsIgnoreCase(\"style\"))) { child = child.getNextSiblingElement(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2420/buggy-version/src-gwt.com.alkacon.geranium.client.util.PositionBean.java", "BodyUseAPI": [], "Fixed commit": "080eca528549931b8185580d7e88107db2387f17", "Url": "https://api.github.com/repos/alkacon/geranium", "Date": "2013-11-07T18:46:15Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (nearestPoint != null) minDistSq = nearestPoint.distanceSquaredTo(p);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3619/buggy-version/JC.Apps.KdTrees.KdTree.java", "BodyUseAPI": ["edu.princeton.cs.algs4.Point2D.distanceSquaredTo(edu.princeton.cs.algs4.Point2D)"], "Fixed commit": "764f31abf6e9e46eb5d728c228f74af509bd8103", "Url": "https://api.github.com/repos/RedNinja777/Algos", "Date": "2015-11-04T18:14:10Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (nearestPoint != null) minDistSq = nearestPoint.distanceSquaredTo(p);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3619/buggy-version/JC.Apps.KdTrees.KdTree.java", "BodyUseAPI": ["edu.princeton.cs.algs4.Point2D.distanceSquaredTo(edu.princeton.cs.algs4.Point2D)"], "Fixed commit": "764f31abf6e9e46eb5d728c228f74af509bd8103", "Url": "https://api.github.com/repos/RedNinja777/Algos", "Date": "2015-11-04T18:14:10Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (nearestPoint != null) minDistSq = nearestPoint.distanceSquaredTo(p);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3619/buggy-version/JC.Apps.KdTrees.KdTree.java", "BodyUseAPI": ["edu.princeton.cs.algs4.Point2D.distanceSquaredTo(edu.princeton.cs.algs4.Point2D)"], "Fixed commit": "764f31abf6e9e46eb5d728c228f74af509bd8103", "Url": "https://api.github.com/repos/RedNinja777/Algos", "Date": "2015-11-04T18:14:10Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (nearestPoint != null) minDistSq = nearestPoint.distanceSquaredTo(p);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3619/buggy-version/JC.Apps.KdTrees.KdTree.java", "BodyUseAPI": ["edu.princeton.cs.algs4.Point2D.distanceSquaredTo(edu.princeton.cs.algs4.Point2D)"], "Fixed commit": "764f31abf6e9e46eb5d728c228f74af509bd8103", "Url": "https://api.github.com/repos/RedNinja777/Algos", "Date": "2015-11-04T18:14:10Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((dir == null) || (!(dir.exists()))) { browse = new org.apache.pivot.wtk.FileBrowserSheet(FileBrowserSheet.Mode.OPEN); }else { browse = new org.apache.pivot.wtk.FileBrowserSheet(FileBrowserSheet.Mode.OPEN, dir.getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/14/buggy-version/src.main.java.org.agmip.ui.cropmarker.PathConfigDialog.java", "BodyUseAPI": ["java.io.File.getPath()"], "Fixed commit": "90b5f46d740fc5493fef1063b9eabc5c7b6806ba", "Url": "https://api.github.com/repos/MengZhang/crop-marker", "Date": "2014-11-03T22:13:21Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == (com.pvsagar.smartlockscreen.EditEnvironment.REQUEST_LOCATION_SELECT)) { android.os.Bundle bundle = data.getExtras(); android.location.Location location = ((android.location.Location) (bundle.get(AddEnvironment.INTENT_EXTRA_SELECTED_LOCATION))); placeholderFragment.latLocationEditText.setText((\"\" + (location.getLatitude()))); placeholderFragment.lonLocationEditText.setText((\"\" + (location.getLongitude()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1060/buggy-version/app.src.main.java.com.pvsagar.smartlockscreen.EditEnvironment.java", "BodyUseAPI": [], "Fixed commit": "4ca105eba906135506c8ca889660c3583adfc781", "Url": "https://api.github.com/repos/aravindsagar/SmartLockScreen", "Date": "2014-09-14T11:34:28Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cameraLight.isValid()) { renderer.Light light = cameraLight.getLight(); light.setPosition(new org.lwjgl.util.vector.Vector3f(playerCam.getLocation())); light.setDirection(new org.lwjgl.util.vector.Vector3f(playerCam.getDirection())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7780/buggy-version/src.characters.Player.java", "BodyUseAPI": ["renderer.LightHandle.getLight()"], "Fixed commit": "1453a2b4ab471737d451483a0486760e139dbb78", "Url": "https://api.github.com/repos/jtmzheng/3dss", "Date": "2013-12-09T00:20:50Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pixlepix.auracascade.main.event.EnchantEventHandler.getEffectStrength(net.minecraft.item.ItemStack,EnumAura.VIOLET_AURA,EnumAura.YELLOW_AURA)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (looting > 0) { for (net.minecraft.entity.item.EntityItem item : event.drops) { item.getEntityItem().stackSize *= looting + 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3290/buggy-version/src.main.java.pixlepix.auracascade.main.event.EnchantEventHandler.java", "BodyUseAPI": [], "Fixed commit": "a8c42ceb3bb94e6baeee3d7dc593f80ee7dd6a32", "Url": "https://api.github.com/repos/AdlyTempleton/Aura-Cascade", "Date": "2015-02-23T02:15:38Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.Container.getComponent(int)", "MyPanel.getGridX(int,int)", "MyPanel.getGridY(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((myPanel.mouseDownGridX) != gridX) || ((myPanel.mouseDownGridY) != gridY)) { }else { if ((myPanel.flags.getFlagArray()[myPanel.mouseDownGridX][myPanel.mouseDownGridY]) == false) { myPanel.revealSquare(); myPanel.checkIfGameOver(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8438/buggy-version/Minesweeper.src.MyMouseAdapter.java", "BodyUseAPI": ["MyPanel.revealSquare()", "MyPanel.checkIfGameOver()", "myPanel.flags.getFlagArray()"], "Fixed commit": "08d9c480efd3cc260e666b1cb67d6240e1797d18", "Url": "https://api.github.com/repos/bryanjsanchez/Minesweeper", "Date": "2017-07-03T06:04:34Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((error.getCause()) instanceof java.net.SocketTimeoutException) || ((error.getCause()) instanceof java.net.UnknownHostException)) || ((error.getCause()) instanceof java.net.ConnectException)) return; else if (context != null) com.bd.gitlab.tools.DebugDataHelper.sendErrorReport(context, errorMessage);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4922/buggy-version/app.src.main.java.com.bd.gitlab.tools.RetrofitHelper.java", "BodyUseAPI": [], "Fixed commit": "75e2fbe2e3e4503196ac2d2b1fc17b3b38cf2749", "Url": "https://api.github.com/repos/nephila/GitLabAndroid", "Date": "2014-10-16T18:45:01Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.liferay.trash.kernel.util.TrashUtil.isTrashEnabled(group.getGroupId()))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5322/buggy-version/trash-web.src.main.java.com.liferay.trash.web.internal.portlet.TrashControlPanelEntry.java", "BodyUseAPI": [], "Fixed commit": "5f96d1c5167fb141d7b4adb641108afcd44ced08", "Url": "https://api.github.com/repos/liferay/com-liferay-trash", "Date": "2016-08-10T09:22:54Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(locTimeList.contains(s))) { locTimeList.add(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2788/buggy-version/src.com.google.cloud.backend.android.MessageActivity.java", "BodyUseAPI": ["com.google.cloud.backend.android.LocationTimeList.add(java.lang.String)"], "Fixed commit": "9663aefff016d7c9e539ee8e0f78dfb91d739eb7", "Url": "https://api.github.com/repos/rlobo3/ThatsMySpot", "Date": "2013-10-30T03:54:16Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (log.isDebugEnabled()) { log.debug(\"Trade of {}@{} between \\\"{}\\\" and \\\"{}\\\"\", quantity, bookOrder.getPrice(), incomingOrder, bookOrder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5332/buggy-version/exchange.src.main.java.org.gnw.mktsim.exchange.OrderLadder.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,long,bookOrder.getPrice(),org.gnw.mktsim.exchange.Order,org.gnw.mktsim.exchange.Order)"], "Fixed commit": "f65db4abbeabe59153d29dc7098a99ddf19ecfd5", "Url": "https://api.github.com/repos/dashdashdot/MarketSim", "Date": "2014-11-12T09:25:08Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.manager.JobManager.getJobExecutionStatus(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((task.getStatus()) == (com.vmware.bdd.apitypes.TaskRead.Status.COMPLETED)) { task.setProgress(1.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6670/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.manager.JobManager.java", "BodyUseAPI": ["com.vmware.bdd.apitypes.TaskRead.setProgress(double)"], "Fixed commit": "302cf92117741185e033aa7d9914a45955ce2345", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-11-09T18:45:45Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.manager.JobManager.getJobExecutionStatus(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((task.getStatus()) == (TaskRead.Status.COMPLETED)) { task.setProgress(1.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6670/buggy-version/server.serengeti.src.main.java.com.vmware.bdd.rest.RestResource.java", "BodyUseAPI": ["com.vmware.bdd.apitypes.TaskRead.setProgress(double)"], "Fixed commit": "302cf92117741185e033aa7d9914a45955ce2345", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-11-09T18:45:45Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nist.javax.sip.message.SIPRequest.getRequestURI()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((requestURI != null) && (requestURI.isSipURI())) { javax.sip.address.SipURI sipURI = ((javax.sip.address.SipURI) (requestURI)); if ((sipURI.getHost().equals(listeningPointImpl.getIPAddress())) && ((sipURI.getPort()) == (listeningPointImpl.getPort()))) { request.setRequestURI(getRemoteTarget().getURI()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7430/buggy-version/resources.sip11.ra.src.main.java.org.mobicents.slee.resource.sip11.wrappers.DialogWrapper.java", "BodyUseAPI": [], "Fixed commit": "1ebbca7b7caa95ad9f392f3bb0b2d7397b52ffff", "Url": "https://api.github.com/repos/Mobicents/jain-slee.sip", "Date": "2014-07-09T15:15:46Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mobicents.slee.resource.sip11.wrappers.DialogWrapper.getRemoteTag()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (remoteTag != null) { try { ((javax.sip.header.ToHeader) (request.getHeader(ToHeader.NAME))).setTag(remoteTag); } catch (java.text.ParseException e) { throw new javax.sip.SipException(e.getMessage(), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7430/buggy-version/resources.sip11.ra.src.main.java.org.mobicents.slee.resource.sip11.wrappers.DialogWrapper.java", "BodyUseAPI": ["((javax.sip.header.ToHeader) (request.getHeader(ToHeader.NAME))).setTag(java.lang.String)"], "Fixed commit": "1ebbca7b7caa95ad9f392f3bb0b2d7397b52ffff", "Url": "https://api.github.com/repos/Mobicents/jain-slee.sip", "Date": "2014-07-09T15:15:46Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"previous\".equalsIgnoreCase(prefixString)) { if (\"month\".equalsIgnoreCase(unitString)) { taskDate.add(java.util.Calendar.MONTH, (-1)); }else { taskDate.add(java.util.Calendar.WEEK_OF_MONTH, (-1)); } }else if (unitString != null) { if (\"week\".equalsIgnoreCase(unitString)) { }else if (\"month\".equalsIgnoreCase(unitString)) { }else { CommandParser.setWeekday(taskDate, unitString); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6282/buggy-version/src.main.java.CommandParser.java", "BodyUseAPI": [], "Fixed commit": "13928a3b13fbe283cb55520f5877e408aa5ec3ac", "Url": "https://api.github.com/repos/cs2103jan2015-t10-2j/main", "Date": "2015-04-09T02:11:03Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Telktonika.readBytes(java.io.InputStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((newdata.length) == 0) { waitopen = false; clientSocket.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5143/buggy-version/src.Telktonika.java", "BodyUseAPI": [], "Fixed commit": "e6b5a441bba33f9dd5c8a62ede8e2e4aaa0f909a", "Url": "https://api.github.com/repos/efkonst/seatrack", "Date": "2016-04-17T18:58:25Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aClass == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1867/buggy-version/flexodesktop.GUI.flexo.src.main.java.org.openflexo.inspector.ModuleInspectorController.java", "BodyUseAPI": [], "Fixed commit": "f266d82afae68ff117ffc30011377e3a60710b02", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2012-09-11T20:24:26Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Class<?>, org.openflexo.inspector.FIBInspector>.get(java.lang.Class<?>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (returned != null) { return returned; }else { java.lang.Class<?> superclass = aClass.getSuperclass(); if (superclass != null) { returned = inspectors.get(aClass); if (returned != null) { return returned; }else { for (java.lang.Class<?> superInterface : aClass.getInterfaces()) { returned = inspectors.get(superInterface); if (returned != null) { return returned; } } return inspectorForClass(superclass); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1867/buggy-version/flexodesktop.GUI.flexo.src.main.java.org.openflexo.inspector.ModuleInspectorController.java", "BodyUseAPI": [], "Fixed commit": "f266d82afae68ff117ffc30011377e3a60710b02", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2012-09-11T20:24:26Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((matchingClasses.size()) > 0) { return inspectors.get(org.openflexo.antar.binding.TypeUtils.getMostSpecializedClass(matchingClasses)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1867/buggy-version/flexodesktop.GUI.flexo.src.main.java.org.openflexo.inspector.ModuleInspectorController.java", "BodyUseAPI": ["org.openflexo.antar.binding.TypeUtils.getMostSpecializedClass(java.util.List<java.lang.Class>)", "java.util.Map<java.lang.Class<?>, org.openflexo.inspector.FIBInspector>.get(org.openflexo.antar.binding.TypeUtils.getMostSpecializedClass(matchingClasses))"], "Fixed commit": "f266d82afae68ff117ffc30011377e3a60710b02", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2012-09-11T20:24:26Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.markupartist.sthlmtraveling.provider.planner.Planner.IntermediateStop.arrivalTime()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (date == null) { date = stop.departureTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2005/buggy-version/sthlmtraveling.src.main.java.com.markupartist.sthlmtraveling.ViewOnMapActivity.java", "BodyUseAPI": [], "Fixed commit": "dc8ae227c947d657e588e0297a257968f3fd2523", "Url": "https://api.github.com/repos/powder366/sthlmtraveling", "Date": "2015-11-28T15:05:27Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type != (com.rapleaf.jack.store.ValueType.JSON_EMPTY)) { childArray.add(com.rapleaf.jack.store.json.JsonDbHelper.getJsonElement(type, value)); }else if ((childSize.get()) > 0) { childArray.add(new com.google.gson.JsonObject()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2128/buggy-version/jack-store.src.com.rapleaf.jack.store.json.JsonDbHelper.java", "BodyUseAPI": ["com.rapleaf.jack.store.json.JsonDbHelper.getJsonElement(com.rapleaf.jack.store.ValueType,java.lang.String)", "com.google.gson.JsonArray.add(com.google.gson.JsonElement)"], "Fixed commit": "6d911aac5cba6b9dbbf06cbec0eb20687e1864a3", "Url": "https://api.github.com/repos/kvelcich/jack", "Date": "2017-08-03T21:28:23Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((phoneContact.getPhoneNumber()) != null) { java.lang.String phoneNumber = phoneContact.getPhoneNumber().replace(\"(\", \"\").replace(\")\", \"\").replace(\"-\", \"\").replace(\" \", \"\"); phoneNumbersWithNames.put(phoneNumber, phoneContact.getDisplayName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7441/buggy-version/app.src.main.java.com.pma.chat.pmaChat.fragments.ChatContactListFragment.java", "BodyUseAPI": ["phoneContact.getPhoneNumber().replace(\"(\", \"\").replace(\")\", \"\").replace(java.lang.String,java.lang.String)", "com.pma.chat.pmaChat.model.PhoneContact.getDisplayName()", "com.pma.chat.pmaChat.model.PhoneContact.getPhoneNumber()", "phoneContact.getPhoneNumber().replace(java.lang.String,java.lang.String)", "phoneContact.getPhoneNumber().replace(\"(\", \"\").replace(\")\", \"\").replace(\"-\", \"\").replace(java.lang.String,java.lang.String)", "phoneContact.getPhoneNumber().replace(\"(\", \"\").replace(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,phoneContact.getDisplayName())"], "Fixed commit": "f259559e6b494072e8da96c5c3df2594c371171b", "Url": "https://api.github.com/repos/bojan12345/PMA_Chat", "Date": "2017-09-11T03:16:00Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.example.httpnick.geotracker.RegisterUser.isEmailValid(email.getText().toString()))) { message = \"Email is not in correct format.\"; }else if (!(passwordOne.getText().toString().equals(passwordTwo.getText().toString()))) { message = \"Passwords do not match.\"; }else { message = \"Password is not in between 5 and 10 characters.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4699/buggy-version/app.src.main.java.com.example.httpnick.geotracker.RegisterUser.java", "BodyUseAPI": [], "Fixed commit": "b5903344170f27362724105f31c0733b5a7fc991", "Url": "https://api.github.com/repos/httpNick/GeoTrackerApp", "Date": "2015-05-27T04:31:17Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["daos.impl.DAOs.getProjectDao().getRealLaboriousness(models.Project)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (real == null) { real = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6731/buggy-version/app.controllers.ProjectController.java", "BodyUseAPI": [], "Fixed commit": "5daa692394799e50bba63308ead7deac332a2b02", "Url": "https://api.github.com/repos/4IT442-Kompetencni-Centrum/SQATool", "Date": "2015-05-07T06:54:15Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (instancesMetaData.isEmpty()) { for (com.sequenceiq.cloudbreak.domain.InstanceMetaData instance : originalMetaData) { privateIps.add(instance.getPrivateIp()); } }else { for (com.sequenceiq.cloudbreak.domain.InstanceMetaData instance : instancesMetaData) { privateIps.add(instance.getPrivateIp()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8136/buggy-version/src.main.java.com.sequenceiq.cloudbreak.service.stack.flow.AmbariRoleAllocator.java", "BodyUseAPI": [], "Fixed commit": "2ab054c946ea3b14bad3a5834bdf0fad63a371a2", "Url": "https://api.github.com/repos/sequenceiq/cloudbreak", "Date": "2015-02-12T13:42:28Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state.flipTexture) setUV(icon, (1 - (minUDiv[ix])), minVDiv[iy], (1 - (maxUDiv[ix])), maxVDiv[iy]); else setUV(icon, minUDiv[ix], minVDiv[iy], maxUDiv[ix], maxVDiv[iy]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5756/buggy-version/src.com.jaquadro.minecraft.chameleon.render.ChamRenderLL.java", "BodyUseAPI": [], "Fixed commit": "1298bd65f010affc3b0bfd83a188eebf45e47b34", "Url": "https://api.github.com/repos/jaquadro/Chameleon", "Date": "2015-05-15T05:33:42Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.viewpagerindicator.TitlePageIndicator.calculateAllBounds(android.graphics.Paint)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((bounds.size()) >= 0) { android.util.Log.w(com.viewpagerindicator.TitlePageIndicator.TAG, \"Prevented IndexOutOfBoundsException that occurs on < Android 2.2\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/7872/buggy-version/library.src.com.viewpagerindicator.TitlePageIndicator.java", "BodyUseAPI": [], "Fixed commit": "4b1cfe5f96eac42575ac8604a94c14c0bc52fdec", "Url": "https://api.github.com/repos/dirkmoors/Android-ViewPagerIndicator", "Date": "2011-11-15T10:04:25Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cc.kave.commons.pointsto.analysis.inclusion.graph.ConstraintGraph.concat(preEdge.getInclusionAnnotation(),succEdge.getInclusionAnnotation())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bothConstructedTerms && (newInclAnnotation instanceof cc.kave.commons.pointsto.analysis.inclusion.annotations.InvocationAnnotation)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2134/buggy-version/exec.exec.pointsto.src.main.java.cc.kave.commons.pointsto.analysis.inclusion.graph.ConstraintGraph.java", "BodyUseAPI": [], "Fixed commit": "638fa9ed0d4b41997b152d913e0474162455e310", "Url": "https://api.github.com/repos/stg-tud/kave-java", "Date": "2016-04-26T08:50:57Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((par.length) != 0) { v.sendMessage(TextColors.RED, \"This brush does not accept additional parameters.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2126/buggy-version/src.main.java.com.thevoxelbox.voxelsniper.brush.Brush.java", "BodyUseAPI": [], "Fixed commit": "d64a4fc9a9759f5f40c53512aa84b6b1bba62c37", "Url": "https://api.github.com/repos/TVPT/VoxelSniper", "Date": "2017-06-16T08:35:44Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.evercam.network.discovery.DiscoveredCamera.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cameraName.length()) > 24) { cameraName = cameraName.substring(0, 23); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4132/buggy-version/evercamPlay.src.main.java.io.evercam.androidapp.AddEditCameraActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "bb58f5af5aea4befaf24d246a10fef577539f2e3", "Url": "https://api.github.com/repos/evercam/evercam-android", "Date": "2015-07-24T09:29:33Z"},
{"Line": "=>801", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count % 2) == 0) { inQuote = false; }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5979/buggy-version/src.edu.ucla.cs.utils.SAT.java", "BodyUseAPI": [], "Fixed commit": "a9a1b942e4f0f71078829412f57c91847e1b896a", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-25T07:45:00Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count % 2) == 0) { ranges.add(new java.awt.Point(current_quote_starts, i)); inQuote = false; current_quote_starts = -1; }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5979/buggy-version/src.edu.ucla.cs.utils.SAT.java", "BodyUseAPI": [], "Fixed commit": "a9a1b942e4f0f71078829412f57c91847e1b896a", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-25T07:45:00Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p1.equals(\"true && !(arg0.charAt(0,)=='!')\")) || (p2.equals(\"true && !(arg0.charAt(0,)=='!')\"))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5979/buggy-version/src.edu.ucla.cs.utils.SAT.java", "BodyUseAPI": [], "Fixed commit": "a9a1b942e4f0f71078829412f57c91847e1b896a", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-25T07:45:00Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count % 2) == 0) { inQuote = false; sb.append(cur); }else { sb.append(cur); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5979/buggy-version/src.edu.ucla.cs.mine.PredicatePatternMiner.java", "BodyUseAPI": [], "Fixed commit": "a9a1b942e4f0f71078829412f57c91847e1b896a", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-25T07:45:00Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((cur == '\"') && (i > 0)) && ((chars[(i - 1)]) == '\\\\')) { int count = 0; while (((i - count) - 1) >= 0) { if ((chars[((i - count) - 1)]) == '\\\\') { count++; }else { break; } } if ((count % 2) == 0) { inQuote = false; }else { } }else if ((cur == '\"') && (!inQuote)) { inQuote = true; }else if (((cur == '\\'') && (i > 0)) && ((chars[(i - 1)]) == '\\\\')) { int count = 0; while (((i - count) - 1) >= 0) { if ((chars[((i - count) - 1)]) == '\\\\') { count++; }else { break; } } if ((count % 2) == 0) { inQuote = false; }else { } }else if ((cur == '\\'') && (!inQuote)) { inQuote = true; }else if ((cur == '\"') && inQuote) { inQuote = false; }else if ((cur == '\\'') && inQuote) { inQuote = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5979/buggy-version/src.edu.ucla.cs.mine.PredicatePatternMiner.java", "BodyUseAPI": [], "Fixed commit": "a9a1b942e4f0f71078829412f57c91847e1b896a", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-25T07:45:00Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count % 2) == 0) { inQuote = false; }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5979/buggy-version/src.edu.ucla.cs.mine.PredicatePatternMiner.java", "BodyUseAPI": [], "Fixed commit": "a9a1b942e4f0f71078829412f57c91847e1b896a", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-25T07:45:00Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(user.equals(lastUser))) vectorClass++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3133/buggy-version/src.main.java.co.pemma.MLClassProj.GetSyntacticFeatures.java", "BodyUseAPI": [], "Fixed commit": "b9ad908a1b511131b85140943a1e7e0bb90a3c2d", "Url": "https://api.github.com/repos/strubell/cs689-class-proj", "Date": "2013-12-03T18:16:19Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getNodeType()) == (StatementWrapper.SUPER_CONSTRUCTOR_INVOCATION)) { return new statementGraph.graphNode.SuperConstructorInvocationStatementWrapper(((org.eclipse.jdt.core.dom.SuperConstructorInvocation) (node))); }else if ((node.getNodeType()) == (StatementWrapper.SWITCH_CASE)) { return new statementGraph.graphNode.SwitchCaseStatementWrapper(((org.eclipse.jdt.core.dom.SwitchCase) (node))); }else if ((node.getNodeType()) == (StatementWrapper.SWITCH_STATEMENT)) { return new statementGraph.graphNode.SwitchStatementWrapper(((org.eclipse.jdt.core.dom.SwitchStatement) (node))); }else if ((node.getNodeType()) == (StatementWrapper.SYNCHRONIZED_STATEMENT)) { return new statementGraph.graphNode.SynchronizedStatementWrapper(((org.eclipse.jdt.core.dom.SynchronizedStatement) (node))); }else if ((node.getNodeType()) == (StatementWrapper.THROW_STATEMENT)) { return new statementGraph.graphNode.ThrowStatementWrapper(((org.eclipse.jdt.core.dom.ThrowStatement) (node))); }else if ((node.getNodeType()) == (StatementWrapper.TRY_STATEMENT)) { return new statementGraph.graphNode.TryStatementWrapper(((org.eclipse.jdt.core.dom.TryStatement) (node))); }else if ((node.getNodeType()) == (StatementWrapper.TYPE_DECLARATION_STATEMENT)) { return new statementGraph.graphNode.TypeDeclarationStatementWrapper(((org.eclipse.jdt.core.dom.TypeDeclarationStatement) (node))); }else if ((node.getNodeType()) == (StatementWrapper.VARIABLE_DECLARATION_STATEMENT)) { return new statementGraph.graphNode.VariableDeclarationStatementWrapper(((org.eclipse.jdt.core.dom.VariableDeclarationStatement) (node))); }else if ((node.getNodeType()) == (StatementWrapper.WHILE_STATEMENT)) { return new statementGraph.graphNode.WhileStatementWrapper(((org.eclipse.jdt.core.dom.WhileStatement) (node))); }else { java.lang.System.out.println(node.toString()); throw new java.lang.Exception((\"Unexpected Type:\" + (node.getNodeType()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6469/buggy-version/src.statementGraph.graphNode.StatementWrapperFactory.java", "BodyUseAPI": ["org.eclipse.jdt.core.dom.ASTNode.getNodeType()", "org.eclipse.jdt.core.dom.ASTNode.getNodeType()", "org.eclipse.jdt.core.dom.ASTNode.getNodeType()", "org.eclipse.jdt.core.dom.ASTNode.getNodeType()", "org.eclipse.jdt.core.dom.ASTNode.getNodeType()", "org.eclipse.jdt.core.dom.ASTNode.getNodeType()", "java.io.PrintStream.println(node.toString())", "org.eclipse.jdt.core.dom.ASTNode.getNodeType()", "org.eclipse.jdt.core.dom.ASTNode.getNodeType()", "org.eclipse.jdt.core.dom.ASTNode.toString()", "org.eclipse.jdt.core.dom.ASTNode.getNodeType()"], "Fixed commit": "78ed4f6924137a697146ef65055d98e8870cb38a", "Url": "https://api.github.com/repos/BinhangYuan/JavaMethodAutoAbridging", "Date": "2017-01-02T21:58:30Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((strings.length) == 0) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/4913/buggy-version/src.filters.FileFilter.java", "BodyUseAPI": [], "Fixed commit": "90b002c8dd2b9debf63b7020e75d1712577f7861", "Url": "https://api.github.com/repos/oak-tree/oop.ex1", "Date": "2011-03-22T21:40:18Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((thresholds[i].sumsClassesAndAttribute) == null) thresholds[i].sumsClassesAndAttribute = new id3.SumUnderAndOver[numvaluesClass];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1437/buggy-version/id3.src.id3.id3.java", "BodyUseAPI": [], "Fixed commit": "648d3184a72079ed077f0136b0446a0143079506", "Url": "https://api.github.com/repos/alexwareb9/proyecto-id3", "Date": "2016-02-15T01:09:58Z"},
{"Line": "=>566", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((thresholds[i].sumsClassesAndAttribute) != null) { probCandAUnder = (1.0 * (thresholds[i].sumsClassesAndAttribute[c].under)) / numdata; probCandAOver = (1.0 * (thresholds[i].sumsClassesAndAttribute[c].over)) / numdata; }else { probCandAUnder = 0; probCandAOver = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/1437/buggy-version/id3.src.id3.id3.java", "BodyUseAPI": [], "Fixed commit": "648d3184a72079ed077f0136b0446a0143079506", "Url": "https://api.github.com/repos/alexwareb9/proyecto-id3", "Date": "2016-02-15T01:09:58Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lechucksoftware.proxy.proxysettings.ui.fragments.ProxyDetailFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (activity != null) { activity.invalidateOptionsMenu(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6391/buggy-version/proxy-settings.src.main.java.com.lechucksoftware.proxy.proxysettings.ui.fragments.ProxyDetailFragment.java", "BodyUseAPI": ["android.support.v4.app.FragmentActivity.invalidateOptionsMenu()"], "Fixed commit": "ac7af78e634fba6f17c4313f081f224b73dc612f", "Url": "https://api.github.com/repos/shouldit/android-proxy", "Date": "2015-03-06T15:39:14Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lechucksoftware.proxy.proxysettings.ui.fragments.ProxyDetailFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (activity != null) { activity.invalidateOptionsMenu(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6391/buggy-version/proxy-settings.src.main.java.com.lechucksoftware.proxy.proxysettings.ui.fragments.ProxyDetailFragment.java", "BodyUseAPI": ["android.support.v4.app.FragmentActivity.invalidateOptionsMenu()"], "Fixed commit": "ac7af78e634fba6f17c4313f081f224b73dc612f", "Url": "https://api.github.com/repos/shouldit/android-proxy", "Date": "2015-03-06T15:39:14Z"},
{"Line": "=>887", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source.equalsIgnoreCase(org.ednovo.gooru.domain.service.userManagement.WSFED_SSO_USER_SOURCE)) { user.setViewFlag(org.ednovo.gooru.domain.service.userManagement.SSO_USER_VIEW_FLAG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5693/buggy-version/api.src.main.java.org.ednovo.gooru.domain.service.userManagement.UserManagementServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "f6e8fbc32b07c83b7608e2231a33fbdbb0570644", "Url": "https://api.github.com/repos/RenukaGurumurthy/Gooru-Core-API", "Date": "2015-09-28T10:34:26Z"},
{"Line": "=>729", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (token != null) { if (limitedAccessTokens.containsKey(token)) { org.intermine.api.profile.ProfileManager.LimitedAccessToken lat = limitedAccessTokens.get(token); if (lat.isValid()) { return lat.hasMoreUses(); }else { limitedAccessTokens.remove(token); } } try { java.util.UUID key = java.util.UUID.fromString(token); if (permanentTokens.containsKey(key)) { return true; } } catch (java.lang.IllegalArgumentException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8673/buggy-version/intermine.api.main.src.org.intermine.api.profile.ProfileManager.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.intermine.api.profile.ProfileManager.LimitedAccessToken>.containsKey(java.lang.String)", "java.util.Map<java.lang.String, org.intermine.api.profile.ProfileManager.LimitedAccessToken>.get(java.lang.String)", "java.util.UUID.fromString(java.lang.String)", "java.util.Map<java.lang.String, org.intermine.api.profile.ProfileManager.LimitedAccessToken>.remove(java.lang.String)"], "Fixed commit": "c1ac71ecad2846b8bbe566d47d09431caec09bb1", "Url": "https://api.github.com/repos/intermine/intermine", "Date": "2013-12-10T12:13:18Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (util.Util.isEmpty(display)) { display = \"waiting period requirement complete\"; barWaitPeriod.setValue(barWaitPeriod.getMaximum()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8836/buggy-version/src.main.java.bsaDb.client.home.clientPnls.BoyScoutPanel.java", "BodyUseAPI": [], "Fixed commit": "b4c82e542e1f6c8279ff5390b47e8206cb333d9d", "Url": "https://api.github.com/repos/nickFr0st/bsaDB", "Date": "2016-03-24T21:05:18Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((haveId) == false) { id = addContact(atct_name.getText().toString(), atct_relationship.getText().toString(), atct_name.getText().toString()); }else { com.example.admin.myapplication.model.Contact contact = new com.example.admin.myapplication.model.Contact(id, atct_name.getText().toString(), atct_relationship.getText().toString(), atct_name.getText().toString()); updateContact(contact); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/718/buggy-version/app.src.main.java.com.example.admin.myapplication.EditContactActivity.java", "BodyUseAPI": [], "Fixed commit": "db48fcd8904a4a7086504541af8e701f6d5606bd", "Url": "https://api.github.com/repos/coolspring1293/FamilyContacts-Android", "Date": "2016-04-26T12:21:31Z"},
{"Line": "=>609", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((previousSelects.size()) > 0) { java.lang.String previousSelect = previousSelects.remove(((previousSelects.size()) - 1)); previousSelect = previousSelect.replaceFirst(\"SELECT\", \"SELECT DISTINCT\"); previousSelects.add(previousSelect); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/5221/buggy-version/src.main.java.uk.ac.soton.ldanalytics.sparql2sql.model.SparqlOpVisitor.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.remove(int)"], "Fixed commit": "71f2cbacde2c3d74cebd9fd0b4c84202f67b7992", "Url": "https://api.github.com/repos/eugenesiow/sparql2sql", "Date": "2016-05-19T17:41:33Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(key)) return null; else return org.qii.weiciyuan.support.utils.GlobalContext.getInstance().getAvatarCache().get(key);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8401/buggy-version/src.org.qii.weiciyuan.support.asyncdrawable.TimeLineBitmapDownloader.java", "BodyUseAPI": ["org.qii.weiciyuan.support.utils.GlobalContext.getInstance().getAvatarCache().get(java.lang.String)"], "Fixed commit": "a8f88627ca5373e81cb5ce2dbe80f14b690a6206", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-12-30T17:40:21Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((query instanceof com.j_spaces.jdbc.AbstractDMLQuery) && ((((com.j_spaces.jdbc.AbstractDMLQuery) (query)).getExplainPlan()) != null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3281/buggy-version/xap-core.xap-datagrid.src.main.java.com.j_spaces.core.client.sql.SqlQueryParser.java", "BodyUseAPI": [], "Fixed commit": "a3e683916d36e2fb301952bc369ad29c4285fd2f", "Url": "https://api.github.com/repos/xap/xap", "Date": "2016-09-20T09:32:56Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(java.util.Collection.class.isAssignableFrom(collectionField.getType()))) && (!(java.util.Map.class.isAssignableFrom(collectionField.getType())))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3549/buggy-version/kundera-core.src.main.java.com.impetus.kundera.metadata.MetadataUtils.java", "BodyUseAPI": [], "Fixed commit": "6341c8f51ab3e9cd79e6ca77541bd7463126fcdf", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2013-08-02T07:06:46Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rule.getCategory().isDefaultOff()) { if (!(config.getEnabledRuleIds().contains(rule.getId()))) { config.getDisabledCategoryNames().remove(rule.getCategory().getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8852/buggy-version/languagetool-gui-commons.src.main.java.org.languagetool.gui.ConfigurationDialog.java", "BodyUseAPI": ["rule.getCategory().getName()", "config.getDisabledCategoryNames().remove(rule.getCategory().getName())", "org.languagetool.rules.Rule.getId()", "config.getEnabledRuleIds().contains(rule.getId())", "org.languagetool.rules.Rule.getCategory()"], "Fixed commit": "406125a8ca5c6596763f17b15c9a7d6d2d1be11c", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2014-06-29T16:54:44Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rule.getCategory().isDefaultOff()) { if (!(config.getEnabledRuleIds().contains(rule.getId()))) { config.getDisabledCategoryNames().add(rule.getCategory().getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8852/buggy-version/languagetool-gui-commons.src.main.java.org.languagetool.gui.ConfigurationDialog.java", "BodyUseAPI": ["rule.getCategory().getName()", "org.languagetool.rules.Rule.getId()", "org.languagetool.rules.Rule.getCategory()", "config.getEnabledRuleIds().contains(rule.getId())", "config.getDisabledCategoryNames().add(rule.getCategory().getName())"], "Fixed commit": "406125a8ca5c6596763f17b15c9a7d6d2d1be11c", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2014-06-29T16:54:44Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mn > mx) { throw new java.lang.IllegalArgumentException(\"Bad display range setting\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8274/buggy-version/core.legacy.src.main.java.imagej.legacy.translate.ColorTableHarmonizer.java", "BodyUseAPI": [], "Fixed commit": "2a9b778eec758042780689398e8a489a06614378", "Url": "https://api.github.com/repos/imagej/imagej", "Date": "2013-04-01T18:16:49Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((root.getPageNumberBlock()) != null) cBlockObject.addChild(root.getPageNumberBlock()); else return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8386/buggy-version/layout-analysis.src.main.java.ro.mps.data.parsing.XMLWriter.java", "BodyUseAPI": ["ro.mps.data.parsing.ComposedBlock.addChild(root.getPageNumberBlock())", "ro.mps.data.parsing.Root.getPageNumberBlock()"], "Fixed commit": "f418c0dabb7ff261c33537acde4991f6adfe4236", "Url": "https://api.github.com/repos/MPS-UPB/EchipaT4demiercuridela8la10", "Date": "2013-01-16T00:03:48Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(clip.chestName.isEmpty())) setChestsAndSpawners(generator, chunk, clip.chestOdds, clip.spawnerOdds, depth, edgeY3, clip.chestName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8953/buggy-version/src.me.daddychurchill.CityWorld.Clipboard.ClipboardLot.java", "BodyUseAPI": ["me.daddychurchill.CityWorld.Clipboard.ClipboardLot.setChestsAndSpawners(me.daddychurchill.CityWorld.WorldGenerator,me.daddychurchill.CityWorld.Support.RealChunk,clip.chestOdds,clip.spawnerOdds,int,int,clip.chestName)"], "Fixed commit": "c106cf51adeac04a2b19d08d9c48707060f46150", "Url": "https://api.github.com/repos/spaceribs/CityWorld", "Date": "2013-03-22T19:32:41Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (treeType == (org.bukkit.TreeType.JUNGLE)) { chunk.setBlocks(x, (x + 1), y, (y - 2), z, (z + 1), root.getType(), root.getData()); }else { chunk.setBlocks(x, bottomY, y, z, root.getType(), root.getData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8953/buggy-version/src.me.daddychurchill.CityWorld.Plugins.FoliageProvider.java", "BodyUseAPI": [], "Fixed commit": "c106cf51adeac04a2b19d08d9c48707060f46150", "Url": "https://api.github.com/repos/spaceribs/CityWorld", "Date": "2013-03-22T19:32:41Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (kv.isDeleteFamily()) { data.get(row).get(kv.getFamily()).clear(); }else { data.get(row).get(kv.getFamily()).remove(kv.getQualifier()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/589/buggy-version/common.src.main.java.org.apache.kylin.common.util.MockHTable.java", "BodyUseAPI": ["java.util.NavigableMap<byte[], java.util.NavigableMap<byte[], java.util.NavigableMap<java.lang.Long, byte[]>>>.get(kv.getFamily())", "org.apache.hadoop.hbase.KeyValue.getFamily()", "java.util.NavigableMap<byte[], java.util.NavigableMap<java.lang.Long, byte[]>>.clear()", "org.apache.hadoop.hbase.KeyValue.getFamily()", "java.util.NavigableMap<byte[], java.util.NavigableMap<java.lang.Long, byte[]>>.remove(kv.getQualifier())", "java.util.NavigableMap<byte[], java.util.NavigableMap<byte[], java.util.NavigableMap<java.lang.Long, byte[]>>>.get(kv.getFamily())", "org.apache.hadoop.hbase.KeyValue.getQualifier()"], "Fixed commit": "43ce8bc2528867121c8cb02a381e326079f69e3d", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2015-05-25T02:32:03Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (frontGrass.isScrolledLeft()) { frontGrass.reset(backGrass.getTailX()); }else if (backGrass.isScrolledLeft()) { backGrass.reset(frontGrass.getTailX()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6448/buggy-version/core.src.com.kilobolt.com.kilobolt.gameobjects.ScrollHandler.java", "BodyUseAPI": ["com.kilobolt.com.kilobolt.gameobjects.Grass.getTailX()", "com.kilobolt.com.kilobolt.gameobjects.Grass.reset(backGrass.getTailX())", "com.kilobolt.com.kilobolt.gameobjects.Grass.reset(frontGrass.getTailX())"], "Fixed commit": "3b075972d54315ad9ca6f2218da7c0f3b566cb6c", "Url": "https://api.github.com/repos/trblandford4/ZombieBird", "Date": "2016-09-22T06:28:47Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((soil == null) || (soil.isEmpty())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/414/buggy-version/src.main.java.org.agmip.translators.dssat.DssatControllerOutput.java", "BodyUseAPI": [], "Fixed commit": "4ee502272905a415174b08401b3cf8d3270a9bce", "Url": "https://api.github.com/repos/agmip/translator-dssat", "Date": "2013-04-09T19:37:51Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mReportDir) == null) { if ((mContext.getFilesDir()) != null) { mOutputStream = mContext.openFileOutput(fileName, 0); }else { mOutputStream = mTargetContext.openFileOutput(fileName, 0); } }else { mOutputStream = new java.io.FileOutputStream(new java.io.File(mReportDir, fileName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/6317/buggy-version/src.com.zutubi.android.junitreport.JUnitReportListener.java", "BodyUseAPI": [], "Fixed commit": "36581904c015d7d9b83fa69470c066fb3e0521ed", "Url": "https://api.github.com/repos/jsankey/android-junit-report", "Date": "2011-03-04T04:47:46Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.nasser.poulet.conquest.controller.Turn.eventList.size()) > index) com.nasser.poulet.conquest.controller.Turn.eventList.remove(index);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/9018/buggy-version/src.com.nasser.poulet.conquest.controller.Turn.java", "BodyUseAPI": ["java.util.ArrayList<com.nasser.poulet.conquest.model.Event>.remove(int)"], "Fixed commit": "6d45f2fdcb655017f54cb19000dd1dd265afacbf", "Url": "https://api.github.com/repos/Lord-Nazdar/Conquest", "Date": "2014-01-06T09:14:19Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (staticMethod) { method = callType.getBestMatchingStaticMethod(methodName, parameterTypes); }else { method = callType.getBestMatchingMethod(methodName, parameterTypes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3079/buggy-version/errai-codegen.src.main.java.org.jboss.errai.codegen.builder.callstack.MethodCall.java", "BodyUseAPI": [], "Fixed commit": "07852464e8ed492f0e534d382c9307e6c050c44e", "Url": "https://api.github.com/repos/errai/errai", "Date": "2017-09-19T19:10:20Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.util.Objects.equals(this.getMusician(), other.getMusician()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8397/buggy-version/music-library-ejb.src.main.java.cz.fi.muni.pa165.entity.Album.java", "BodyUseAPI": [], "Fixed commit": "3075b1bac0930f0a338eba4ccfcaebec393a2f8d", "Url": "https://api.github.com/repos/JaroslavDavidek/music-library", "Date": "2015-10-30T13:32:25Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCollectionCount()) == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2304/buggy-version/viewpager.src.main.java.com.fifed.viewpager.EndlessViewsAdapterForMutableViewPager.java", "BodyUseAPI": [], "Fixed commit": "db636e47e54c9a5812765f7b262a3adb77121c1f", "Url": "https://api.github.com/repos/fifed/AutoScrollMutableViewPager", "Date": "2017-03-23T14:01:50Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCollectionCount()) == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/2304/buggy-version/viewpager.src.main.java.com.fifed.viewpager.EndlessViewsAdapterForMutableViewPager.java", "BodyUseAPI": [], "Fixed commit": "db636e47e54c9a5812765f7b262a3adb77121c1f", "Url": "https://api.github.com/repos/fifed/AutoScrollMutableViewPager", "Date": "2017-03-23T14:01:50Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((paNumberOfAnswers - paNumberOfRight) == 0) fractionWrong = 0; else fractionWrong = 100 / (paNumberOfAnswers - paNumberOfRight);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/946/buggy-version/src.martinkontsek.core.Answer.java", "BodyUseAPI": [], "Fixed commit": "ab5c65e821d62468dd1e4f670bed06e9eec9efcf", "Url": "https://api.github.com/repos/martinkontsek/MoodleQuizCreator", "Date": "2015-07-22T10:05:37Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.dyndns.fzoli.rccar.controller.Main.CONN.isConnecting()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/8838/buggy-version/src.org.dyndns.fzoli.rccar.controller.Main.java", "BodyUseAPI": [], "Fixed commit": "ccb3c043b83e5bc860d70fd1f0e6f683e4ce43e3", "Url": "https://api.github.com/repos/fzoli/RemoteControlCar", "Date": "2013-03-18T02:24:17Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (unlockType.getType().equals(\"none\")) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V27/3338/buggy-version/src.main.java.gw2.compendium.persistence.domain.items.ItemConsumable.java", "BodyUseAPI": [], "Fixed commit": "9b32446ff0f8b257d2b78a565cb602c87f163dfe", "Url": "https://api.github.com/repos/AysonCurrax/Gw2Compendium", "Date": "2014-10-04T12:31:46Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.cygni.snake.tournament.util.TournamentUtil.getPlayerDistribution(int,int)", "se.cygni.snake.tournament.util.TournamentUtil.getNoofPlayersOut(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((playersPerGame[i]) + playersOut) <= 0) { playersPerGame[i] = 1; }else { playersPerGame[i] += playersOut; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1105/buggy-version/app.src.main.java.se.cygni.snake.tournament.util.TournamentUtil.java", "BodyUseAPI": [], "Fixed commit": "abd473c4cbcc68b02a3409b65dc39022e2add1fc", "Url": "https://api.github.com/repos/cygni/snakebot", "Date": "2016-04-25T13:45:47Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mThemeDark) { mDayOfWeekView.setBackgroundColor(lightBackground); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5859/buggy-version/androidbetterpickers.src.main.java.com.doomonafireball.betterpickers.calendardatepicker.CalendarDatePickerDialog.java", "BodyUseAPI": [], "Fixed commit": "8c9a08ac3e667988b47632f6ee3b641d745b9d7c", "Url": "https://api.github.com/repos/Tyderion/habit-tracker", "Date": "2014-04-16T21:58:36Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (player == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2939/buggy-version/src.main.java.me.superckl.factionalert.NameplateManager.java", "BodyUseAPI": [], "Fixed commit": "007b09f81c824df9536ef3777719aca1ec625e96", "Url": "https://api.github.com/repos/superckl/factionalert", "Date": "2014-02-11T22:57:53Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["e.getFPlayer().getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (player == null) player = org.bukkit.Bukkit.getOfflinePlayer(e.getFPlayer().getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2939/buggy-version/src.main.java.me.superckl.factionalert.NameplateManager.java", "BodyUseAPI": [], "Fixed commit": "007b09f81c824df9536ef3777719aca1ec625e96", "Url": "https://api.github.com/repos/superckl/factionalert", "Date": "2014-02-11T22:57:53Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["registry.getSessionFactory().getCurrentSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (session.isOpen()) session.flush();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7276/buggy-version/core.jbpm-context.src.main.java.pl.net.bluesoft.rnd.pt.ext.jbpm.ProcessToolContextFactoryImpl.java", "BodyUseAPI": ["org.hibernate.Session.flush()"], "Fixed commit": "a1a180276974cd0275fb8d5736f001ee097154be", "Url": "https://api.github.com/repos/bluesoft-rnd/aperte-workflow-core", "Date": "2013-07-17T12:30:36Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["registry.getSessionFactory().openSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (session.isOpen()) session.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7276/buggy-version/core.jbpm-context.src.main.java.pl.net.bluesoft.rnd.pt.ext.jbpm.ProcessToolContextFactoryImpl.java", "BodyUseAPI": ["org.hibernate.Session.close()"], "Fixed commit": "a1a180276974cd0275fb8d5736f001ee097154be", "Url": "https://api.github.com/repos/bluesoft-rnd/aperte-workflow-core", "Date": "2013-07-17T12:30:36Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.milkbowl.vault.economy.Economy.withdrawPlayer(p.getName(),plugin.getConfig().getInt(\"TicketFare\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (r.transactionSuccess()) { java.util.List<org.bukkit.entity.Player> onlinePlayers = java.util.Arrays.asList(org.bukkit.Bukkit.getServer().getOnlinePlayers()); java.util.Iterator<org.bukkit.entity.Player> iterator = onlinePlayers.iterator(); while (iterator.hasNext()) { org.bukkit.entity.Player onlinePlayer = iterator.next(); if (args[1].equals(hm.get(onlinePlayer))) { p.sendMessage((((org.bukkit.ChatColor.RED) + (onlinePlayer.getName())) + \" is in ownership of this ticket\")); } } if (!((java.lang.Integer.parseInt(args[1])) == (map.get(\"wn\")))) { org.bukkit.Bukkit.broadcastMessage(((((org.bukkit.ChatColor.GREEN) + (p.getName())) + \" has purchased lotto ticket #\") + (args[1]))); hm.put(p, java.lang.Integer.parseInt(args[1])); }else { me.pineabe.modernmc.Commands.econ.depositPlayer(p.getName(), jackpot); map.remove(\"le\"); org.bukkit.Bukkit.broadcastMessage(((((((org.bukkit.ChatColor.GREEN) + (p.getDisplayName())) + \" has won the lotto with the jackpot of \") + jackpot) + \" \") + (me.pineabe.modernmc.Commands.econ.currencyNamePlural()))); } }else { p.sendMessage(java.lang.String.format(((org.bukkit.ChatColor.RED) + \"An error occured: %s\"), r.errorMessage)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2467/buggy-version/src.me.pineabe.modernmc.Commands.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(java.lang.String)", "java.lang.String.format(((org.bukkit.ChatColor.RED) + \"An error occured: %s\"),r.errorMessage)"], "Fixed commit": "0a7d1b0ebb6fd0d95f33a99fc441be28cfcc57d4", "Url": "https://api.github.com/repos/PineAbe/MCLotto", "Date": "2013-04-18T12:32:21Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getOwned_vehicles()) != null) { for (int k = 0; k < (user.getOwned_vehicles().size()); k++) { if (user.getOwned_vehicles().get(k).getType().equals(\"car\")) { car_owner = true; } if (user.getOwned_vehicles().get(k).getType().equals(\"bicycle\")) { bike_owner = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8889/buggy-version/src.main.java.imu.recommender.Recommender.java", "BodyUseAPI": ["user.getOwned_vehicles().size()", "imu.recommender.models.user.User.getOwned_vehicles()", "user.getOwned_vehicles().get(int)", "imu.recommender.models.user.User.getOwned_vehicles()", "user.getOwned_vehicles().get(k).getType().equals(java.lang.String)", "user.getOwned_vehicles().get(k).getType()", "imu.recommender.models.user.User.getOwned_vehicles()", "user.getOwned_vehicles().get(k).getType()", "user.getOwned_vehicles().get(k).getType().equals(java.lang.String)", "user.getOwned_vehicles().get(int)"], "Fixed commit": "1e8feb2f924c0968005c5dc54e34263474f91d67", "Url": "https://api.github.com/repos/mpthimios/optimum_recommender", "Date": "2017-02-08T14:14:14Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (adapter)) { savingInstanceState.putSerializable(\"approveCheckList\", adapter.getCheckList()); savingInstanceState.putSerializable(\"editedForms\", adapter.getListOfEditedForms()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6740/buggy-version/application.src.main.java.org.openhds.mobile.activity.SupervisorMainActivity.java", "BodyUseAPI": [], "Fixed commit": "2c041805ae2d3af20353666f02fa17248bf44aac", "Url": "https://api.github.com/repos/USM-RCG/openhds-tablet", "Date": "2014-08-11T18:51:17Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.chalmers.datx02_15_36.studeraeffektivt.database.DBAdapter.getSpentTime(java.lang.String)", "se.chalmers.datx02_15_36.studeraeffektivt.database.DBAdapter.getTimeOnCourse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (total <= spent) { return 0; }else { return total - (dbAdapter.getSpentTime(currCourse)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1458/buggy-version/StuderaEffektivt.app.src.main.java.se.chalmers.datx02_15_36.studeraeffektivt.fragment.StatsFrag.java", "BodyUseAPI": [], "Fixed commit": "836a12dc6d70bffeb9158f15d3a5d756f407013e", "Url": "https://api.github.com/repos/Soya93/DATX02_15_36", "Date": "2015-05-05T12:31:50Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(java.lang.String,java.lang.String[],java.lang.String,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((cursor.getCount()) == 0) || ((cursor.getInt(0)) == 0)) { return 53; }else { return cursor.getInt(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1458/buggy-version/StuderaEffektivt.app.src.main.java.se.chalmers.datx02_15_36.studeraeffektivt.database.DBAdapter.java", "BodyUseAPI": ["android.database.Cursor.getInt(int)"], "Fixed commit": "836a12dc6d70bffeb9158f15d3a5d756f407013e", "Url": "https://api.github.com/repos/Soya93/DATX02_15_36", "Date": "2015-05-05T12:31:50Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((referenceId) == null) { referenceId = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/35/buggy-version/oscm-app.javasrc.org.oscm.app.domain.ServiceInstance.java", "BodyUseAPI": [], "Fixed commit": "664d8458efcd0a1ffa4b66fd747ead3b8c4a65ab", "Url": "https://api.github.com/repos/servicecatalog/development", "Date": "2016-11-25T12:26:33Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inQuote == '\\u0000') { char prev = '\\u0000'; int j = i; while ((prev <= ' ') && ((--j) >= 0)) { prev = characters[j]; } if ((j < 0) || (!(java.lang.Character.isLetterOrDigit(prev)))) { inQuote = ch; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8411/buggy-version/src.main.java.com.univocity.parsers.csv.CsvFormatDetector.java", "BodyUseAPI": [], "Fixed commit": "e302ba51418224e66f3251a4e4a3fe57eecff519", "Url": "https://api.github.com/repos/mosoft521/univocity-parsers", "Date": "2017-08-16T03:13:47Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!flag) { java.lang.System.out.println(\"The words arent crossing!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8499/buggy-version/ITTalents.Homework5.Task5.java", "BodyUseAPI": [], "Fixed commit": "f68501d507842818bedaae110e760e3a832b9d54", "Url": "https://api.github.com/repos/zaki1993/Java", "Date": "2016-12-11T23:22:07Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((moleculeOneX1 == (h2ointeractions.H2OInteractions.finalTransLeftHydrogenOneXPos)) && (moleculeTwoX2 == (h2ointeractions.H2OInteractions.finalTransLeftHydrogenTwoXPos))) { h2ointeractions.H2OInteractions.pointChargeEnergy = (((Constants.kConstant) * (Constants.KhydrogenPointCharge)) * (Constants.KhydrogenPointCharge)) / (java.lang.Math.abs(distance)); return h2ointeractions.H2OInteractions.pointChargeEnergy; }else if ((moleculeOneX1 == (h2ointeractions.H2OInteractions.finalTransLeftHydrogenOneXPos)) && (moleculeTwoX2 == (h2ointeractions.H2OInteractions.finalTransRightHydrogenTwoXPos))) { h2ointeractions.H2OInteractions.pointChargeEnergy = (((Constants.kConstant) * (Constants.KhydrogenPointCharge)) * (Constants.KhydrogenPointCharge)) / (java.lang.Math.abs(distance)); return h2ointeractions.H2OInteractions.pointChargeEnergy; }else if ((moleculeOneX1 == (h2ointeractions.H2OInteractions.finalTransRightHydrogenOneXPos)) && (moleculeTwoX2 == (h2ointeractions.H2OInteractions.finalTransLeftHydrogenTwoXPos))) { h2ointeractions.H2OInteractions.pointChargeEnergy = (((Constants.kConstant) * (Constants.KhydrogenPointCharge)) * (Constants.KhydrogenPointCharge)) / (java.lang.Math.abs(distance)); return h2ointeractions.H2OInteractions.pointChargeEnergy; }else if ((moleculeOneX1 == (h2ointeractions.H2OInteractions.finalTransOxygenOneXPos)) && (moleculeTwoX2 == (h2ointeractions.H2OInteractions.finalTransOxygenTwoXPos))) { h2ointeractions.H2OInteractions.pointChargeEnergy = (((Constants.kConstant) * (Constants.KoxygenPointCharge)) * (Constants.KoxygenPointCharge)) / (java.lang.Math.abs(distance)); return h2ointeractions.H2OInteractions.pointChargeEnergy; }else if ((moleculeOneX1 == (h2ointeractions.H2OInteractions.finalTransOxygenOneXPos)) && (moleculeTwoX2 == (h2ointeractions.H2OInteractions.finalTransOxygenTwoXPos))) { h2ointeractions.H2OInteractions.pointChargeEnergy = (((Constants.kConstant) * (Constants.KoxygenPointCharge)) * (Constants.KoxygenPointCharge)) / (java.lang.Math.abs(distance)); return h2ointeractions.H2OInteractions.pointChargeEnergy; }else if ((moleculeOneX1 == (h2ointeractions.H2OInteractions.finalTransLeftHydrogenOneXPos)) && (moleculeTwoX2 == (h2ointeractions.H2OInteractions.finalTransOxygenOneXPos))) { h2ointeractions.H2OInteractions.pointChargeEnergy = (((Constants.kConstant) * (Constants.KhydrogenPointCharge)) * (Constants.KoxygenPointCharge)) / (java.lang.Math.abs(distance)); return h2ointeractions.H2OInteractions.pointChargeEnergy; }else if ((moleculeOneX1 == (h2ointeractions.H2OInteractions.finalTransRightHydrogenOneXPos)) && (moleculeTwoX2 == (h2ointeractions.H2OInteractions.finalTransOxygenTwoXPos))) { h2ointeractions.H2OInteractions.pointChargeEnergy = (((Constants.kConstant) * (Constants.KhydrogenPointCharge)) * (Constants.KoxygenPointCharge)) / (java.lang.Math.abs(distance)); return h2ointeractions.H2OInteractions.pointChargeEnergy; }else if ((moleculeOneX1 == (h2ointeractions.H2OInteractions.finalTransLeftHydrogenTwoXPos)) && (moleculeTwoX2 == (h2ointeractions.H2OInteractions.finalTransOxygenOneXPos))) { h2ointeractions.H2OInteractions.pointChargeEnergy = (((Constants.kConstant) * (Constants.KhydrogenPointCharge)) * (Constants.KoxygenPointCharge)) / (java.lang.Math.abs(distance)); return h2ointeractions.H2OInteractions.pointChargeEnergy; }else if ((moleculeOneX1 == (h2ointeractions.H2OInteractions.finalTransRightHydrogenOneXPos)) && (moleculeTwoX2 == (h2ointeractions.H2OInteractions.finalTransOxygenOneXPos))) { h2ointeractions.H2OInteractions.pointChargeEnergy = (((Constants.kConstant) * (Constants.KhydrogenPointCharge)) * (Constants.KoxygenPointCharge)) / (java.lang.Math.abs(distance)); return h2ointeractions.H2OInteractions.pointChargeEnergy; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5381/buggy-version/H2OInteractions.src.h2ointeractions.H2OInteractions.java", "BodyUseAPI": [], "Fixed commit": "439ae4aa983644b0b4f5481819c190cd325f5459", "Url": "https://api.github.com/repos/sublimesynthesis/H20-Interactions-ScienceFair-2013", "Date": "2013-03-17T20:49:02Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((writeMethod.getParameterTypes()[0].isPrimitive()) && (value == null)) { writeMethod.invoke(target, com.google.common.base.Defaults.defaultValue(writeMethod.getParameterTypes()[0])); }else writeMethod.invoke(target, value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3092/buggy-version/src.main.java.de.danielbechler.diff.introspection.PropertyAccessor.java", "BodyUseAPI": ["com.google.common.base.Defaults.defaultValue(java.lang.Class<?>)", "java.lang.reflect.Method.invoke(java.lang.Object,com.google.common.base.Defaults.defaultValue(writeMethod.getParameterTypes()[0]))", "java.lang.reflect.Method.getParameterTypes()", "java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object)"], "Fixed commit": "e61bdb197936a0984fe9c1433515c28e5cbfd6c5", "Url": "https://api.github.com/repos/slimjim2234/java-object-diff", "Date": "2015-08-14T12:15:03Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { msg = ((org.qii.weiciyuan.bean.MessageBean) (savedInstanceState.getSerializable(\"msg\"))); token = savedInstanceState.getString(\"token\"); }else { android.content.Intent intent = getIntent(); token = intent.getStringExtra(\"token\"); msg = ((org.qii.weiciyuan.bean.MessageBean) (intent.getSerializableExtra(\"msg\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3153/buggy-version/src.org.qii.weiciyuan.ui.browser.BrowserWeiboMsgActivity.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)", "android.os.Bundle.getSerializable(java.lang.String)"], "Fixed commit": "38fb55cd135629ef39aed616d7e80acd397229ac", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-11T09:08:16Z"},
{"Line": "=>1062", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portlet.expando.model.ExpandoColumn.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type == (com.liferay.portlet.expando.model.ExpandoColumnConstants.SHORT_ARRAY)) { value.setShortArray(((short[]) (attributeValue))); }else if (type == (com.liferay.portlet.expando.model.ExpandoColumnConstants.STRING_ARRAY)) { value.setStringArray(((java.lang.String[]) (attributeValue))); }else if (type == (com.liferay.portlet.expando.model.ExpandoColumnConstants.STRING_LOCALIZED)) { value.setStringMap(((java.util.Map<java.util.Locale, java.lang.String>) (attributeValue)), java.util.Locale.getDefault()); }else { value.setString(((java.lang.String) (attributeValue))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7144/buggy-version/portal-impl.src.com.liferay.portlet.expando.service.impl.ExpandoValueLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "f4ff893340ee61709d2c9af8c8c2735e0d9e104b", "Url": "https://api.github.com/repos/philipjones03/liferay-portal", "Date": "2015-10-20T08:40:33Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (errCode != 0) { java.lang.System.exit(errCode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6364/buggy-version/View.java", "BodyUseAPI": ["java.lang.System.exit(int)"], "Fixed commit": "800b970a52b7396e47e471d44596a3123bfcac73", "Url": "https://api.github.com/repos/packlnd/inda12", "Date": "2013-05-07T18:27:24Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((path.getParent()) == null) { ret = \"/\"; }else { while (path != null) { if (ret.equals(\"\")) { ret = path.getName(); }else { ret = ((path.getName()) + \"/\") + ret; } path = path.getParent(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3508/buggy-version/src.main.java.tachyon.hadoop.Utils.java", "BodyUseAPI": ["org.apache.hadoop.fs.Path.getName()", "org.apache.hadoop.fs.Path.getName()", "org.apache.hadoop.fs.Path.getParent()"], "Fixed commit": "cf0e6a278485673bde4203aa4a25f433db5a2874", "Url": "https://api.github.com/repos/achalsoni81/tachyon", "Date": "2013-04-28T12:09:39Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tfs != null) { tRet.add(tfs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3508/buggy-version/src.main.java.tachyon.hadoop.TachyonFileSystem.java", "BodyUseAPI": ["java.util.ArrayList<org.apache.hadoop.fs.FileStatus>.add(org.apache.hadoop.fs.FileStatus)"], "Fixed commit": "cf0e6a278485673bde4203aa4a25f433db5a2874", "Url": "https://api.github.com/repos/achalsoni81/tachyon", "Date": "2013-04-28T12:09:39Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hsv[0]) < 0) hsv[0] += 360; else if ((hsv[0]) > 360) hsv[0] -= 360;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1882/buggy-version/src.view.HSVColorMediator.java", "BodyUseAPI": [], "Fixed commit": "9155025b4d91f8d7e1df875de6f432a96ebca0ba", "Url": "https://api.github.com/repos/nicolas-habak/GTI410-01_LAB1", "Date": "2017-09-30T19:03:52Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((\"\".equals(strWeightArray[1])) && (i != 0)) { doubleWeightArray[i] = java.lang.Double.parseDouble(strWeightArray[(i + 1)]); }else { doubleWeightArray[i] = java.lang.Double.parseDouble(strWeightArray[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8687/buggy-version/oryx.app.lazarus.src.main.java.com.cloudera.oryx.lazarus.serving.LazarusServingUtility.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "0c1016f3f89a36ebba12754470c90411b46d240b", "Url": "https://api.github.com/repos/ucl-eee-data-processing/MEng-Project-2015-Systems", "Date": "2016-04-12T12:44:40Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"\".equals(strWeightArray[1])) { maxSize = 4; }else { maxSize = strWeightArray.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8687/buggy-version/oryx.app.lazarus.src.main.java.com.cloudera.oryx.lazarus.serving.LazarusServingUtility.java", "BodyUseAPI": [], "Fixed commit": "0c1016f3f89a36ebba12754470c90411b46d240b", "Url": "https://api.github.com/repos/ucl-eee-data-processing/MEng-Project-2015-Systems", "Date": "2016-04-12T12:44:40Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activity == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4722/buggy-version/app.src.main.java.com.zjp.translateit.utils.SoftInputManager.java", "BodyUseAPI": [], "Fixed commit": "ed771333d70bce83843d37dbe234c639dbad9adb", "Url": "https://api.github.com/repos/zunpiau/TranslateIt", "Date": "2017-02-13T04:47:42Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s == \"\") || (s == null)) { throw new java.lang.RuntimeException(java.lang.String.format(\"String is empty.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6079/buggy-version/src.homework.hw4.Lfraction.java", "BodyUseAPI": [], "Fixed commit": "6e7bb5de4c5c15e8fd69cb7bcb18e0b301c672bd", "Url": "https://api.github.com/repos/sikumiku/Algo", "Date": "2017-04-07T09:24:06Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(model.existsVariable((name + \"$\")))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7530/buggy-version/org.jvoicexml.profile.vxml21.src.org.jvoicexml.profile.vxml21.tagstrategy.ClearStrategy.java", "BodyUseAPI": [], "Fixed commit": "4ec38f34c060f41fa864c9af3238b9e0e48b4df6", "Url": "https://api.github.com/repos/JVoiceXML/JVoiceXML", "Date": "2015-09-02T06:43:13Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeChange) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1513/buggy-version/src.main.java.com.bank.util.TimeSimulator.java", "BodyUseAPI": [], "Fixed commit": "b67e0cf9f25e2928076248039d842b62c02b45b4", "Url": "https://api.github.com/repos/boschma2702/F4U-Bank", "Date": "2017-07-20T10:28:02Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["geogit.command(org.geogit.api.porcelain.RemoteResolve.class).setName(\"origin\").call()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (originRemote.isPresent()) { repositories.add(geogit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7141/buggy-version/src.geotools.src.main.java.org.geogit.geotools.data.AutoSynchronizationHandler.java", "BodyUseAPI": [], "Fixed commit": "cd4d910713dfb330425912f5dfe848219ce90436", "Url": "https://api.github.com/repos/kelseyishmael/GeoGit", "Date": "2013-02-05T21:55:24Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["geogit.command(org.geogit.api.porcelain.RemoteResolve.class).setName(\"origin\").call()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (originRemote.isPresent()) { org.geogit.geotools.data.GeogitSynchronizationHandler.Pair<org.geogit.api.GeoGIT, com.google.common.base.Optional<java.lang.String>> entry = new org.geogit.geotools.data.GeogitSynchronizationHandler.Pair<org.geogit.api.GeoGIT, com.google.common.base.Optional<java.lang.String>>(geogit, com.google.common.base.Optional.fromNullable(branch)); if (!(repositories.contains(entry))) { repositories.add(entry); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7141/buggy-version/src.geotools.src.main.java.org.geogit.geotools.data.GeogitSynchronizationHandler.java", "BodyUseAPI": [], "Fixed commit": "cd4d910713dfb330425912f5dfe848219ce90436", "Url": "https://api.github.com/repos/kelseyishmael/GeoGit", "Date": "2013-02-05T21:55:24Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.marvinlabs.widget.slideshow.SlideShowView.getSlideView(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((inView.getParent()) == null) { addView(inView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1605/buggy-version/library.src.main.java.com.marvinlabs.widget.slideshow.SlideShowView.java", "BodyUseAPI": ["com.marvinlabs.widget.slideshow.SlideShowView.addView(android.view.View)"], "Fixed commit": "6569608ded340368417db586769791718e82ded2", "Url": "https://api.github.com/repos/Arasthel/android-slideshow-widget", "Date": "2014-06-01T09:21:00Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tempweps.size()) > 0) done = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3892/buggy-version/src.nationGen.rostergeneration.TroopGenerator.java", "BodyUseAPI": [], "Fixed commit": "bef3995ccca12f4466575ffaf14a4fa22b87ad75", "Url": "https://api.github.com/repos/elmokki/nationgen", "Date": "2015-07-17T11:19:30Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rtg.config.rtg.ConfigRTG.generateStrongholds) { strongholdGenerator.func_151539_a(this, this.worldObj, cx, cy, blocks); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6836/buggy-version/src.main.java.rtg.world.gen.ChunkProviderRTG.java", "BodyUseAPI": [], "Fixed commit": "a6984766bdcb16bed314796e3143cc69dcc82f48", "Url": "https://api.github.com/repos/Team-RTG/Realistic-Terrain-Generation", "Date": "2015-11-20T11:52:38Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rtg.config.rtg.ConfigRTG.generateScatteredFeatures) { scatteredFeatureGenerator.func_151539_a(this, this.worldObj, cx, cy, blocks); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6836/buggy-version/src.main.java.rtg.world.gen.ChunkProviderRTG.java", "BodyUseAPI": [], "Fixed commit": "a6984766bdcb16bed314796e3143cc69dcc82f48", "Url": "https://api.github.com/repos/Team-RTG/Realistic-Terrain-Generation", "Date": "2015-11-20T11:52:38Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rtg.config.rtg.ConfigRTG.generateMineshafts) { mineshaftGenerator.func_151539_a(this, this.worldObj, cx, cy, blocks); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6836/buggy-version/src.main.java.rtg.world.gen.ChunkProviderRTG.java", "BodyUseAPI": [], "Fixed commit": "a6984766bdcb16bed314796e3143cc69dcc82f48", "Url": "https://api.github.com/repos/Team-RTG/Realistic-Terrain-Generation", "Date": "2015-11-20T11:52:38Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rtg.config.rtg.ConfigRTG.generateVillages) { villageGenerator.func_151539_a(this, this.worldObj, cx, cy, blocks); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6836/buggy-version/src.main.java.rtg.world.gen.ChunkProviderRTG.java", "BodyUseAPI": [], "Fixed commit": "a6984766bdcb16bed314796e3143cc69dcc82f48", "Url": "https://api.github.com/repos/Team-RTG/Realistic-Terrain-Generation", "Date": "2015-11-20T11:52:38Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == null) { reloadState(ch.grze.frogment.activity.StateAwareFrogmentActivity.getIntent(), savedInstanceState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3915/buggy-version/frogment.src.main.java.ch.grze.frogment.activity.StateAwareFrogmentActivity.java", "BodyUseAPI": [], "Fixed commit": "9b8f7530de9aaa1437e1a3401d855e44578c9a6c", "Url": "https://api.github.com/repos/grzechu92/frogment", "Date": "2017-08-21T20:01:37Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mobicents.servlet.sip.core.session.MobicentsSipApplicationSession.getSipContext()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sipContext == null) { org.mobicents.servlet.sip.core.timers.DefaultSasTimerTask.logger.info(\"Sip context has been already destroyed\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5619/buggy-version/sip-servlets-impl.src.main.java.org.mobicents.servlet.sip.core.timers.DefaultSasTimerTask.java", "BodyUseAPI": [], "Fixed commit": "09555454fe647cc07be2ae41436269a263f2419b", "Url": "https://api.github.com/repos/AlerantAppNGIN/sip-servlets", "Date": "2016-11-18T17:19:20Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mobicents.servlet.sip.core.SipContext.getSipApplicationSessionTimerService()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sASTimerService == null) { org.mobicents.servlet.sip.core.timers.DefaultSasTimerTask.logger.info(\"Sip application session timer service has been already destroyed\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5619/buggy-version/sip-servlets-impl.src.main.java.org.mobicents.servlet.sip.core.timers.DefaultSasTimerTask.java", "BodyUseAPI": [], "Fixed commit": "09555454fe647cc07be2ae41436269a263f2419b", "Url": "https://api.github.com/repos/AlerantAppNGIN/sip-servlets", "Date": "2016-11-18T17:19:20Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.getFlutter().getSensors()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sensors[2].getSensorType()) != (FlutterProtocol.InputTypes.NOT_SET)) { sensorText.setCompoundDrawablesWithIntrinsicBounds(null, android.support.v4.content.ContextCompat.getDrawable(this, sensors[2].getWhiteImageIdSm()), null, null); sensorText.setText(sensors[2].getTypeTextId()); }else { sensorText.setCompoundDrawablesWithIntrinsicBounds(null, android.support.v4.content.ContextCompat.getDrawable(this, R.drawable.questionmark_white_sm20), null, null); sensorText.setText(R.string.set_sensor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6461/buggy-version/app.src.main.java.org.cmucreatelab.flutter_android.activities.RobotActivity.java", "BodyUseAPI": ["sensors[2].getTypeTextId()", "android.support.v4.content.ContextCompat.getDrawable(org.cmucreatelab.flutter_android.activities.RobotActivity,sensors[2].getWhiteImageIdSm())", "android.widget.TextView.setText(sensors[2].getTypeTextId())", "android.widget.TextView.setCompoundDrawablesWithIntrinsicBounds(<nulltype>,android.support.v4.content.ContextCompat.getDrawable(this, sensors[2].getWhiteImageIdSm()),<nulltype>,<nulltype>)", "sensors[2].getWhiteImageIdSm()"], "Fixed commit": "9c4430551914b5494f61ad4daef88bfb5508fc87", "Url": "https://api.github.com/repos/CMU-CREATE-Lab/flutter-app-android", "Date": "2017-04-07T14:33:14Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.getFlutter().getSensors()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sensors[1].getSensorType()) != (FlutterProtocol.InputTypes.NOT_SET)) { sensorText.setCompoundDrawablesWithIntrinsicBounds(null, android.support.v4.content.ContextCompat.getDrawable(this, sensors[1].getWhiteImageIdSm()), null, null); sensorText.setText(sensors[1].getTypeTextId()); }else { sensorText.setCompoundDrawablesWithIntrinsicBounds(null, android.support.v4.content.ContextCompat.getDrawable(this, R.drawable.questionmark_white_sm20), null, null); sensorText.setText(R.string.set_sensor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6461/buggy-version/app.src.main.java.org.cmucreatelab.flutter_android.activities.RobotActivity.java", "BodyUseAPI": ["sensors[1].getWhiteImageIdSm()", "android.support.v4.content.ContextCompat.getDrawable(org.cmucreatelab.flutter_android.activities.RobotActivity,sensors[1].getWhiteImageIdSm())", "sensors[1].getTypeTextId()", "android.widget.TextView.setText(sensors[1].getTypeTextId())", "android.widget.TextView.setCompoundDrawablesWithIntrinsicBounds(<nulltype>,android.support.v4.content.ContextCompat.getDrawable(this, sensors[1].getWhiteImageIdSm()),<nulltype>,<nulltype>)"], "Fixed commit": "9c4430551914b5494f61ad4daef88bfb5508fc87", "Url": "https://api.github.com/repos/CMU-CREATE-Lab/flutter-app-android", "Date": "2017-04-07T14:33:14Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.getFlutter().getSensors()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sensors[0].getSensorType()) != (FlutterProtocol.InputTypes.NOT_SET)) { sensorText.setCompoundDrawablesWithIntrinsicBounds(null, android.support.v4.content.ContextCompat.getDrawable(this, sensors[0].getWhiteImageIdSm()), null, null); sensorText.setText(sensors[0].getTypeTextId()); }else { sensorText.setCompoundDrawablesWithIntrinsicBounds(null, android.support.v4.content.ContextCompat.getDrawable(this, R.drawable.questionmark_white_sm20), null, null); sensorText.setText(R.string.set_sensor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6461/buggy-version/app.src.main.java.org.cmucreatelab.flutter_android.activities.RobotActivity.java", "BodyUseAPI": ["sensors[0].getWhiteImageIdSm()", "android.support.v4.content.ContextCompat.getDrawable(org.cmucreatelab.flutter_android.activities.RobotActivity,sensors[0].getWhiteImageIdSm())", "android.widget.TextView.setCompoundDrawablesWithIntrinsicBounds(<nulltype>,android.support.v4.content.ContextCompat.getDrawable(this, sensors[0].getWhiteImageIdSm()),<nulltype>,<nulltype>)", "sensors[0].getTypeTextId()", "android.widget.TextView.setText(sensors[0].getTypeTextId())"], "Fixed commit": "9c4430551914b5494f61ad4daef88bfb5508fc87", "Url": "https://api.github.com/repos/CMU-CREATE-Lab/flutter-app-android", "Date": "2017-04-07T14:33:14Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((last_selected_index) == (tabSpec.getIndex())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8834/buggy-version/src.main.java.com.std.framework.comm.view.MainBottomView.java", "BodyUseAPI": [], "Fixed commit": "2e9c80c42eef117694f4084c6f4948c54b49a00c", "Url": "https://api.github.com/repos/qingliPATHo/Delivery", "Date": "2016-09-29T06:26:02Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m == 0) return \"0\"; else return java.lang.String.valueOf((10 - (sum % 10)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/861/buggy-version/Mobile.BukuDroid.src.org.csie.mpp.buku.Util.java", "BodyUseAPI": [], "Fixed commit": "dfe9f0dc1471e7bdc972adbe172b39ef16ae8478", "Url": "https://api.github.com/repos/telgniw/BukuDroid", "Date": "2011-12-27T07:00:27Z"},
{"Line": "=>775", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNowDate) == null) mNowDate = org.joda.time.DateTime.now().toLocalDateTime();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8363/buggy-version/app.src.main.java.ua.od.acros.dualsimtrafficcounter.services.TrafficCountService.java", "BodyUseAPI": [], "Fixed commit": "8bff3ea5a826bbf2fec2ace80908c0104a4fece7", "Url": "https://api.github.com/repos/acras01/DualSIMTrafficCounter", "Date": "2017-05-19T07:15:53Z"},
{"Line": "=>998", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (convertView == null) { android.view.LayoutInflater vi = ((android.view.LayoutInflater) (getSystemService(Context.LAYOUT_INFLATER_SERVICE))); if (((o.contains(\"COMBO\")) || (o.contains(\"RetroCC\"))) || (o.toLowerCase().contains(\"manga\"))) { v = vi.inflate(R.layout.tree_loader_alternative_cart, null); }else { v = vi.inflate(R.layout.tree_loader_cart, null); } }else { v = convertView; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2850/buggy-version/src.usbong.android.store_app.CartActivity.java", "BodyUseAPI": [], "Fixed commit": "0ea60ac4d83684c2d52f157fff657f783322df49", "Url": "https://api.github.com/repos/usbong/UsbongStoreApp", "Date": "2017-06-07T02:23:17Z"},
{"Line": "=>1667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parentOrderBys != null) { for (org.teiid.query.optimizer.relational.OrderBy parentOrderBy : parentOrderBys) { replaceExpressions(parentOrderBy, mapping, subMapping); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4257/buggy-version/engine.src.main.java.org.teiid.query.optimizer.relational.RelationalPlanner.java", "BodyUseAPI": [], "Fixed commit": "9ae9984a3741fa70ed9ed914c0663fbe30459aaf", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2016-02-25T23:06:35Z"},
{"Line": "=>1137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((command.getOrderBy()) != null) { if (parentOrderBys == null) { parentOrderBys = new java.util.ArrayList<org.teiid.query.optimizer.relational.OrderBy>(2); } parentOrderBys.add(command.getOrderBy()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4257/buggy-version/engine.src.main.java.org.teiid.query.optimizer.relational.RelationalPlanner.java", "BodyUseAPI": ["org.teiid.query.optimizer.relational.QueryCommand.getOrderBy()", "java.util.List<org.teiid.query.optimizer.relational.OrderBy>.add(command.getOrderBy())"], "Fixed commit": "9ae9984a3741fa70ed9ed914c0663fbe30459aaf", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2016-02-25T23:06:35Z"},
{"Line": "=>1144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((command.getOrderBy()) != null) { parentOrderBys.remove(((parentOrderBys.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4257/buggy-version/engine.src.main.java.org.teiid.query.optimizer.relational.RelationalPlanner.java", "BodyUseAPI": [], "Fixed commit": "9ae9984a3741fa70ed9ed914c0663fbe30459aaf", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2016-02-25T23:06:35Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tableIndex) >= (hashTable.length)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7800/buggy-version/src.ChainingHash.java", "BodyUseAPI": [], "Fixed commit": "ff904f55acc4f88c3bbc540b0e561d2971609e35", "Url": "https://api.github.com/repos/ekgordon3645/373Ass4", "Date": "2016-05-16T18:17:29Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["catan.common.game.CatanGame.test(catan.common.game.LogicEvent)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (problem != null) { throw new catan.common.event.EventConsumerException(problem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3920/buggy-version/catan.src.main.java.catan.common.game.CatanGame.java", "BodyUseAPI": [], "Fixed commit": "00f92f6055247912d834fb7cd620a7a7213ae5a4", "Url": "https://api.github.com/repos/gharris1727/Catan", "Date": "2016-10-23T22:01:28Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((NBTextendetInfo) == null) { NBTextendetInfo = new net.minecraft.server.v1_4_R1.NBTTagCompound(\"Skills\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7019/buggy-version/src.Java.de.Keyle.MyPet.entity.types.InactiveMyPet.java", "BodyUseAPI": [], "Fixed commit": "6168b1f61ce36e383477f950c8e9e9822503d220", "Url": "https://api.github.com/repos/xXKeyleXx/MyPet", "Date": "2013-01-24T14:27:50Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((problemsTriedTotal) != 0) { performanceMeasure = ((hitsTotal) / (problemsTriedTotal)) * (score); }else { performanceMeasure = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8501/buggy-version/src.main.java.br.com.tpartner.persistence.model.TrajectorySummary.java", "BodyUseAPI": [], "Fixed commit": "3e7879a96a78afc17babb5df3bdb4895f0172eeb", "Url": "https://api.github.com/repos/sergioamorim/t-partner-ps", "Date": "2017-07-22T23:56:54Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!init) { me.legopal92.gamblr.Gamblr.getInstance().getDealerConfig().set(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8759/buggy-version/src.main.java.me.legopal92.gamblr.npc.NPCDealer.java", "BodyUseAPI": [], "Fixed commit": "44b6ab4a326495f296a84e1720163b8cb7e3f6b1", "Url": "https://api.github.com/repos/LegoPal92/Gamblr", "Date": "2016-05-03T23:23:45Z"},
{"Line": "=>1808", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ni < 0) { ni += si; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8660/buggy-version/uk.ac.diamond.scisoft.analysis.src.uk.ac.diamond.scisoft.analysis.dataset.AbstractDataset.java", "BodyUseAPI": [], "Fixed commit": "67e62f24b1d4d9d7c268262d627249155abd137f", "Url": "https://api.github.com/repos/DawnScience/scisoft-core", "Date": "2013-11-29T14:35:29Z"},
{"Line": "=>1811", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ni < 0) || (ni >= si)) { throw new java.lang.ArrayIndexOutOfBoundsException((((((((\"Index (\" + ni) + \") out of range [-\") + si) + \",\") + si) + \") in dimension \") + i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8660/buggy-version/uk.ac.diamond.scisoft.analysis.src.uk.ac.diamond.scisoft.analysis.dataset.AbstractDataset.java", "BodyUseAPI": [], "Fixed commit": "67e62f24b1d4d9d7c268262d627249155abd137f", "Url": "https://api.github.com/repos/DawnScience/scisoft-core", "Date": "2013-11-29T14:35:29Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1944/buggy-version/src.Client.ClientWorld.java", "BodyUseAPI": [], "Fixed commit": "7254da7bfd4943feaf5a79c9a49e543796b97710", "Url": "https://api.github.com/repos/Williamxu98/WorldQuestOnline", "Date": "2016-01-10T05:21:54Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1944/buggy-version/src.Client.ClientWorld.java", "BodyUseAPI": [], "Fixed commit": "7254da7bfd4943feaf5a79c9a49e543796b97710", "Url": "https://api.github.com/repos/Williamxu98/WorldQuestOnline", "Date": "2016-01-10T05:21:54Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSize()) == 1) { return getSorted().get(0); }else if (((getSize()) % 2) == 1) { medianElement = getSorted().get(((int) ((java.lang.Math.ceil(((getSize()) / 2))) - 1))); }else { medianElement = ((getSorted().get((((getSize()) / 2) - 1))) + (getSorted().get(((getSize()) / 2)))) / 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5680/buggy-version/CXFPerformanceInterceptors.src.main.java.service.performance.DefaultReportable.java", "BodyUseAPI": [], "Fixed commit": "64efdc7c2abcdd90a42228dc23093c5d52426db6", "Url": "https://api.github.com/repos/affkar/CXFUtils", "Date": "2015-05-22T14:20:33Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSize()) == 1) { return getSorted().get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5680/buggy-version/CXFPerformanceInterceptors.src.main.java.service.performance.DefaultReportable.java", "BodyUseAPI": [], "Fixed commit": "64efdc7c2abcdd90a42228dc23093c5d52426db6", "Url": "https://api.github.com/repos/affkar/CXFUtils", "Date": "2015-05-22T14:20:33Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentById(R.id.resources_fragment)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (droneListFragment != null) { droneListFragment.refresh(intervention); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/672/buggy-version/Flerjeco.app.src.main.java.istic.gla.groupeb.flerjeco.agent.planZone.PlanZoneActivity.java", "BodyUseAPI": ["istic.gla.groupeb.flerjeco.agent.planZone.DroneListFragment.refresh(istic.gla.groupb.nivimoju.entity.Intervention)"], "Fixed commit": "018208f3d7a4480e25976c2fcee6c544204a16b9", "Url": "https://api.github.com/repos/IsticGLA/SIT", "Date": "2015-05-20T13:00:36Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5447/buggy-version/client.src.LLAMA.app.src.main.java.org.llama.llama.services.UserService.java", "BodyUseAPI": [], "Fixed commit": "8413329e2b9bbd8211bdd6e0dccb70fbc1bd43c3", "Url": "https://api.github.com/repos/feberhard/LLAMA", "Date": "2017-01-17T12:57:05Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reduceSink.getConf().getKeyCols().equals(reduceSink.getConf().getPartitionCols())) { edgeProp.setShuffleSort(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1950/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.parse.spark.GenSparkUtils.java", "BodyUseAPI": [], "Fixed commit": "08cff248918c97ede4c951ec9a9fa58fe6ed37fd", "Url": "https://api.github.com/repos/lirui-intel/hive", "Date": "2014-11-07T12:14:15Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rs.getConf().getKeyCols().equals(rs.getConf().getPartitionCols())) { edgeProp.setShuffleSort(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1950/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.parse.spark.GenSparkWork.java", "BodyUseAPI": [], "Fixed commit": "08cff248918c97ede4c951ec9a9fa58fe6ed37fd", "Url": "https://api.github.com/repos/lirui-intel/hive", "Date": "2014-11-07T12:14:15Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((itemsListView) != null) { for (int i = 0; i < (itemsListView.getChildCount()); i++) { if (i == position) { continue; } android.view.View listItemView = itemsListView.getChildAt(i); android.view.View listItemExpandedDetails = listItemView.findViewById(R.id.expanded_item_details); if ((listItemExpandedDetails.getVisibility()) == (android.view.View.VISIBLE)) { listItemExpandedDetails.setVisibility(View.GONE); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4982/buggy-version/app.src.main.java.com.example.anubhav.vacmet.OrderInformation.java", "BodyUseAPI": [], "Fixed commit": "3bfb41e85bfcb0a0e0be2c831ea1f32846cb182e", "Url": "https://api.github.com/repos/jay1493/vacmetOrderStatus", "Date": "2017-10-03T09:51:36Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reciverEditText.getText().toString().trim().equals(userName)) { android.widget.Toast.makeText(this, \"Can't Send Coin to Your self\", Toast.LENGTH_LONG).show(); }else { if (scpp.globaleye.com.scppclient.utils.NetworkUtil.isAvailableNetwork(this)) { scpp.globaleye.com.scppclient.utils.ActivityUtils.showProgressDialog(this, \"Please wait...\"); senzCountDownTimer.start(); }else { android.widget.Toast.makeText(this, \"No network connection available\", Toast.LENGTH_LONG).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2428/buggy-version/app.src.main.java.scpp.globaleye.com.scppclient.ui.UserSelect.java", "BodyUseAPI": [], "Fixed commit": "91afd1a64d2430cd014b71738766c58946d56e0f", "Url": "https://api.github.com/repos/umayanga123/scpp_android_node", "Date": "2016-09-06T11:35:29Z"},
{"Line": "=>1082", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isCanceled) { removeMediaFromQueue(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6098/buggy-version/app.src.main.java.com.keylesspalace.tusky.ComposeActivity.java", "BodyUseAPI": [], "Fixed commit": "932a990fe46d4233b6c226c10f0e13e6a33f5646", "Url": "https://api.github.com/repos/tuskyapp/Tusky", "Date": "2017-07-02T21:55:18Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((asyncHttpClient != null) && (!(asyncHttpClient.isClosed()))) asyncHttpClient.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7582/buggy-version/harvester-server.src.main.java.eu.europeana.harvester.cluster.slave.downloading.SlaveLinkChecker.java", "BodyUseAPI": ["eu.europeana.harvester.cluster.slave.downloading.AsyncHttpClient.close()"], "Fixed commit": "0f7559fd784eeb5d2270c3f39d5edac87536691d", "Url": "https://api.github.com/repos/europeana/ImageHarvester", "Date": "2015-06-30T11:41:52Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.ql.plan.ExprNodeFieldDesc.getDesc()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (childDesc instanceof org.apache.hadoop.hive.ql.plan.ExprNodeGenericFuncDesc) { org.apache.hadoop.hive.ql.plan.ExprNodeGenericFuncDesc funcDesc = ((org.apache.hadoop.hive.ql.plan.ExprNodeGenericFuncDesc) (childDesc)); if ((funcDesc.getGenericUDF()) instanceof org.apache.hadoop.hive.ql.udf.generic.GenericUDFIndex) { org.apache.hadoop.hive.ql.optimizer.ColumnPrunerProcCtx.getNestedColsFromExprNodeDesc(funcDesc, pathToRoot, paths); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1205/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.optimizer.ColumnPrunerProcCtx.java", "BodyUseAPI": [], "Fixed commit": "5d45974e943b6a35f1428632283b6b9e20357485", "Url": "https://api.github.com/repos/wwjiang007/hive", "Date": "2016-12-23T17:35:20Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(json_data.isNull(\"descriptin\"))) description = \"Descri\u00e7\u00e3o: \" + (json_data.getString(\"description\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1662/buggy-version/TQS104_RentUA_Legacy.src.tqs104_rentua_legacy.MyProperties.java", "BodyUseAPI": [], "Fixed commit": "5e7d93770daa72413457301fd1e64f0ad673c6f5", "Url": "https://api.github.com/repos/pedroyzkrak/TQS104_RentUA_Legacy", "Date": "2017-06-04T04:00:33Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((objectAnimator.length) == 0) { objectAnimator = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8567/buggy-version/library.src.main.java.io.github.onivas.promotedactions.PromotedActionsLibrary.java", "BodyUseAPI": [], "Fixed commit": "d4bfa9dfbc58daaa20efb87c8f759643c5c46b80", "Url": "https://api.github.com/repos/onivas/MenuAnimation", "Date": "2014-09-15T06:45:45Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((objectAnimator.length) == 0) { objectAnimator = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8567/buggy-version/library.src.main.java.io.github.onivas.promotedactions.PromotedActionsLibrary.java", "BodyUseAPI": [], "Fixed commit": "d4bfa9dfbc58daaa20efb87c8f759643c5c46b80", "Url": "https://api.github.com/repos/onivas/MenuAnimation", "Date": "2014-09-15T06:45:45Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentHunt.getCurrentClue()) != null) { count = currentHunt.getCurrentClue().getSequenceNumberInHunt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7983/buggy-version/app.src.main.java.com.example.aj.scavengersworld.CluesRelated.ClueItemRecyclerViewAdapter.java", "BodyUseAPI": ["currentHunt.getCurrentClue().getSequenceNumberInHunt()", "com.example.aj.scavengersworld.Model.Hunt.getCurrentClue()"], "Fixed commit": "3eb0748ef70202780d894a5f7cb5cc7689f1eb7f", "Url": "https://api.github.com/repos/anirudh985/ScavengersWorld", "Date": "2016-11-10T05:56:35Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 4) { java.lang.System.out.println(\"Usage: consolidate.sh added removed hdt outputHdt\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8723/buggy-version/src.consolidate.java", "BodyUseAPI": [], "Fixed commit": "822062aa982659581182c59c432a68ddf41da4db", "Url": "https://api.github.com/repos/pabloem/hdt-iris", "Date": "2015-07-27T11:49:20Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!swapped) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3958/buggy-version/algorithms.BubbleSort.java", "BodyUseAPI": [], "Fixed commit": "901b4ff52d7e258673ddc7ceb140ea3de6acbe3a", "Url": "https://api.github.com/repos/pt657407064/data-structures-and-algorithms-in-Java", "Date": "2017-10-01T20:52:13Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((routine.getClass()) != (com.siberika.idea.pascal.lang.psi.impl.PasRoutineImplDeclImpl.class)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1202/buggy-version/plugin.src.ide.actions.SectionToggle.java", "BodyUseAPI": [], "Fixed commit": "e281df99cf89e53fcb9903d26f198b8697e50b14", "Url": "https://api.github.com/repos/casteng/i-pascal", "Date": "2017-03-14T23:25:39Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMinigameActive) { Gdx.app.log(\"WARN\", \"Unable to trigger next minigame! Currently one in progress.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/888/buggy-version/core.src.tv.rocketbeans.supermafiosi.minigame.MiniGameManager.java", "BodyUseAPI": [], "Fixed commit": "4983e2efef160357ebecdcdb8f1acf523678b75a", "Url": "https://api.github.com/repos/bitbrain/beansjam-2017", "Date": "2017-05-21T21:08:28Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!vein) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5710/buggy-version/OreBlob.java", "BodyUseAPI": [], "Fixed commit": "da983955be7a99ab6ee71d173f7e9d0a9f72e52f", "Url": "https://api.github.com/repos/slascola/Java-Simulation", "Date": "2015-04-30T18:44:37Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Platform.IsLogEnabled) android.util.Log.d(Platform.DEFAULT_LOG_TAG, (\"shouldDebugBreakFlag=\" + shouldDebugBreakFlag));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/859/buggy-version/src.src.com.tns.JsDebugger.java", "BodyUseAPI": [], "Fixed commit": "4ee2450be1e3a35054e403aea45d501b981d9383", "Url": "https://api.github.com/repos/NathanaelA/android-runtime", "Date": "2015-06-05T12:47:42Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Platform.IsLogEnabled) android.util.Log.d(Platform.DEFAULT_LOG_TAG, (\"envInFileFlag=\" + envInFileFlag));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/859/buggy-version/src.src.com.tns.JsDebugger.java", "BodyUseAPI": [], "Fixed commit": "4ee2450be1e3a35054e403aea45d501b981d9383", "Url": "https://api.github.com/repos/NathanaelA/android-runtime", "Date": "2015-06-05T12:47:42Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Platform.IsLogEnabled) android.util.Log.d(Platform.DEFAULT_LOG_TAG, (\"getDebuggerPortFromEnvironment:: shouldEnableDebuggingFlag=\" + shouldEnableDebuggingFlag));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/859/buggy-version/src.src.com.tns.JsDebugger.java", "BodyUseAPI": [], "Fixed commit": "4ee2450be1e3a35054e403aea45d501b981d9383", "Url": "https://api.github.com/repos/NathanaelA/android-runtime", "Date": "2015-06-05T12:47:42Z"},
{"Line": "=>1043", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mCurrentView) != null) && (mFullScreen)) { showActionBar(); mCurrentView.setTranslationY(toolbarSize); mToolbarLayout.setTranslationY(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6006/buggy-version/app.src.main.java.acr.browser.lightning.activity.BrowserActivity.java", "BodyUseAPI": [], "Fixed commit": "d3ead42f8eb7da92e30563909dc6c36b0240f62f", "Url": "https://api.github.com/repos/DF1E/Lightning-Browser", "Date": "2016-02-13T02:51:56Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Long>.indexOf(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pos != (-1)) { strAmount = lstAmounts.get(pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3264/buggy-version/src.com.trip.expensemanager.SyncIntentService.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)"], "Fixed commit": "9c237689aa7353233b7680c6d3184377e4966054", "Url": "https://api.github.com/repos/akhilspillai/tripmanager", "Date": "2014-12-01T18:50:18Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Long>.indexOf(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (posPrev != (-1)) { strAmountPrev = lstAmountsPrev.get(posPrev); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3264/buggy-version/src.com.trip.expensemanager.SyncIntentService.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)"], "Fixed commit": "9c237689aa7353233b7680c6d3184377e4966054", "Url": "https://api.github.com/repos/akhilspillai/tripmanager", "Date": "2014-12-01T18:50:18Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (application == null) { com.taobao.weex.utils.WXLogUtils.e(com.taobao.weex.WXSDKEngine.TAG, \" doInitInternal application is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2551/buggy-version/android.sdk.src.main.java.com.taobao.weex.WXSDKEngine.java", "BodyUseAPI": [], "Fixed commit": "247ea50a914afe24ee30d6dafb66f6f76986e7c3", "Url": "https://api.github.com/repos/apache/incubator-weex", "Date": "2017-10-17T09:00:40Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rows == 5) || (firstOfMonth == 6)) { if ((((e.date.get(java.util.Calendar.YEAR)) == (year)) && ((e.date.get(java.util.Calendar.MONTH)) == (month))) && ((e.date.get(java.util.Calendar.DAY_OF_MONTH)) == ((i - firstOfMonth) + 1))) { panel.addEvent(e); } }else { if ((((e.date.get(java.util.Calendar.YEAR)) == (year)) && ((e.date.get(java.util.Calendar.MONTH)) == (month))) && ((e.date.get(java.util.Calendar.DAY_OF_MONTH)) == ((i - firstOfMonth) - 6))) { panel.addEvent(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4754/buggy-version/src.js.incomplete.JSCalendar.java", "BodyUseAPI": [], "Fixed commit": "d22b5c73b2e2d36a4b59a846bbc7fc9d1fc24030", "Url": "https://api.github.com/repos/jobbogamer/JSLibrary", "Date": "2012-06-01T22:49:42Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.registeredAction) != null) registerReceiver(this.registeredAction, this.registeredCategory);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6110/buggy-version/android.src.main.java.com.darryncampbell.rndatawedgeintents.RNDataWedgeIntentsModule.java", "BodyUseAPI": [], "Fixed commit": "24751819c2524df630b0dfcc560f9f06f5cf9deb", "Url": "https://api.github.com/repos/darryncampbell/react-native-datawedge-intents", "Date": "2017-04-15T10:02:44Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((email_list) != null) { int n = email_list.length; for (int i = 0; i < n; i++) e = (e + (email_list[i].toString())) + \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3716/buggy-version/src.InfoGUI.java", "BodyUseAPI": [], "Fixed commit": "be1b6fa78479afd0708f7cce56e19a1d716c1735", "Url": "https://api.github.com/repos/vrispo/MiriamGUI", "Date": "2017-03-22T15:49:58Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((events) != null) { int nev = events.length; for (int i = 0; i < nev; i++) ev = (ev + (events[i].toString())) + \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3716/buggy-version/src.InfoGUI.java", "BodyUseAPI": [], "Fixed commit": "be1b6fa78479afd0708f7cce56e19a1d716c1735", "Url": "https://api.github.com/repos/vrispo/MiriamGUI", "Date": "2017-03-22T15:49:58Z"},
{"Line": "=>829", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xnio.ssl.JsseStreamConduit.performIO(int,java.nio.ByteBuffer[],int,int,java.nio.ByteBuffer[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (res == (-1)) { this.state |= org.xnio.ssl.JsseStreamConduit.READ_FLAG_EOF; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/502/buggy-version/api.src.main.java.org.xnio.ssl.JsseStreamConduit.java", "BodyUseAPI": [], "Fixed commit": "5ef9b0186cbaf2af3a26e3b9226c82c563bac1f8", "Url": "https://api.github.com/repos/luck3y/xnio", "Date": "2017-02-23T07:18:43Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(trustedAddressBook.isEmpty())) { removed = addressesToRemove.removeAll(trustedAddressBook); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/705/buggy-version/client.src.ch.uzh.csg.mbps.client.internalstorage.InternalStorageHandler.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.removeAll(java.util.Set<java.lang.String>)"], "Fixed commit": "c85f6dec6551bcbf29e2c7362163e5ea0de30cc1", "Url": "https://api.github.com/repos/MBPS-Project/mbps_client", "Date": "2014-07-26T11:58:53Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"\".equals(com.jerome.mylist.PhotoFragment.flickrPhoto.getUrl()))) { textView = ((android.widget.TextView) (view.findViewById(R.id.photo_title))); textView.setText(photo.getTitle()); imageView = ((android.widget.ImageView) (view.findViewById(R.id.photo_img))); com.squareup.picasso.Picasso.with(getContext()).load(photo.getUrl()).placeholder(R.mipmap.ic_launcher).into(imageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5912/buggy-version/app.src.main.java.com.jerome.mylist.PhotoFragment.java", "BodyUseAPI": [], "Fixed commit": "09b2ff08c4b4127a10a76553f5369cc3964eeab8", "Url": "https://api.github.com/repos/JeromedC34/MyList", "Date": "2016-10-20T14:23:20Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ee.bpw.dhx.ws.service.impl.AddressServiceImpl.getRenewedAdresseesList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((members != null) && ((members.size()) > 0)) { setAddresseeList(getRenewedAdresseesList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7601/buggy-version/ws.src.main.java.ee.bpw.dhx.ws.service.impl.AddressServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "26fb1830726048d1a17450f63bd7a5a404a6aa7b", "Url": "https://api.github.com/repos/e-gov/DHX-etalon", "Date": "2016-10-27T11:50:33Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((env.getProperty(\"document-resend-template\")) != null) { setDocumentResendTemplate(env.getProperty(\"document-resend-template\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7601/buggy-version/ws.src.main.java.ee.bpw.dhx.ws.config.DhxConfig.java", "BodyUseAPI": ["org.springframework.core.env.Environment.getProperty(java.lang.String)", "ee.bpw.dhx.ws.config.DhxConfig.setDocumentResendTemplate(env.getProperty(\"document-resend-template\"))"], "Fixed commit": "26fb1830726048d1a17450f63bd7a5a404a6aa7b", "Url": "https://api.github.com/repos/e-gov/DHX-etalon", "Date": "2016-10-27T11:50:33Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sprite.getType().getSubType().equals(SpriteSubType.PROJECTILE)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/9182/buggy-version/src.me.cameronwitcher.upsilon.sprites.Player.java", "BodyUseAPI": [], "Fixed commit": "3635b3396b0854dedb46c53a2a79a73b4c99cb9c", "Url": "https://api.github.com/repos/UpsilonTeam/UpsilonBeta", "Date": "2016-01-08T16:03:33Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.crosswire.jsword.book.Book.getBookCategory()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (BookCategory.BIBLE.equals(bookCategory)) { osisToHtmlParameters.setShowReferenceContent(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3074/buggy-version/AndBible.src.net.bible.service.sword.SwordContentFacade.java", "BodyUseAPI": [], "Fixed commit": "f729e25a0e76aeb74d513ba4a5ea5db089a1c562", "Url": "https://api.github.com/repos/tuomas2/and-bible", "Date": "2015-09-15T04:56:17Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (goalElement != null) { plugin.getGoals().getAny().add(goalElement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5522/buggy-version/src.main.java.com.phresco.pom.util.AndroidPomProcessor.java", "BodyUseAPI": ["plugin.getGoals().getAny().add(org.w3c.dom.Element)"], "Fixed commit": "e1fe932b9ccb449a4a6d0f66d34521347a0f849b", "Url": "https://api.github.com/repos/photon-infotech/phresco-pom", "Date": "2013-11-19T09:42:33Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (skippedAny) { gov.vha.isaac.ochre.api.Get.identifierService().clearUnusedIds(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3301/buggy-version/ochre-mojo.src.main.java.gov.vha.isaac.ochre.mojo.LoadTermstore.java", "BodyUseAPI": [], "Fixed commit": "e8aeb822d9c053dddfd8e676801f066961ebdd90", "Url": "https://api.github.com/repos/OSEHRA/ISAAC", "Date": "2016-04-04T02:19:16Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((item.getValue()) != null) && (value != null)) && (item.getValue().equals(value))) return item.getKey();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8267/buggy-version/src.main.java.net.sf.rubycollect4j.RubyHash.java", "BodyUseAPI": ["java.util.Map.Entry<K, V>.getKey()"], "Fixed commit": "a1f3baf7a639bbb5619271db365ff0bb35fa4299", "Url": "https://api.github.com/repos/wnameless/rubycollect4j", "Date": "2013-10-03T07:34:43Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((permission.getEntityType()) != null) { perm.setEntityType(org.apache.cloudstack.acl.AclEntityType.valueOf(permission.getEntityType())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3796/buggy-version/services.iam.plugin.src.org.apache.cloudstack.acl.api.AclApiServiceImpl.java", "BodyUseAPI": ["org.apache.cloudstack.acl.api.response.AclPermissionResponse.setEntityType(org.apache.cloudstack.acl.AclEntityType.valueOf(permission.getEntityType()))", "org.apache.cloudstack.acl.AclEntityType.valueOf(permission.getEntityType())", "org.apache.cloudstack.iam.api.AclPolicyPermission.getEntityType()"], "Fixed commit": "4b75fa806ab2d6394a34eabe05aa9fd3c96990c1", "Url": "https://api.github.com/repos/apache/cloudstack", "Date": "2014-02-14T01:57:49Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((permission.getScope()) != null) { perm.setScope(org.apache.cloudstack.acl.PermissionScope.valueOf(permission.getScope())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3796/buggy-version/services.iam.plugin.src.org.apache.cloudstack.acl.api.AclApiServiceImpl.java", "BodyUseAPI": ["org.apache.cloudstack.acl.PermissionScope.valueOf(permission.getScope())", "org.apache.cloudstack.iam.api.AclPolicyPermission.getScope()", "org.apache.cloudstack.acl.api.response.AclPermissionResponse.setScope(org.apache.cloudstack.acl.PermissionScope.valueOf(permission.getScope()))"], "Fixed commit": "4b75fa806ab2d6394a34eabe05aa9fd3c96990c1", "Url": "https://api.github.com/repos/apache/cloudstack", "Date": "2014-02-14T01:57:49Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getIntent().getFlags()) & (android.content.Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT)) != 0) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2391/buggy-version/app.src.main.java.bart.friendfinderapp.loginActivity.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "1e002568af7cdfc7d59291bd84f4f2b0a44f8896", "Url": "https://api.github.com/repos/pszczolkowski/FriendFinder_frontend", "Date": "2015-12-13T21:28:01Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (changelogFile != null) { listener.getLogger().println(\"P4 Task: saving built changes.\"); java.util.List<java.lang.Object> changes = calculateChanges(run, task); org.jenkinsci.plugins.p4.changes.P4ChangeSet.store(changelogFile, changes); listener.getLogger().println(\"... done\\n\"); }else { listener.getLogger().println(\"P4 Task: changeLogFile not set. Not saving built changes.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8732/buggy-version/src.main.java.org.jenkinsci.plugins.p4.PerforceScm.java", "BodyUseAPI": ["org.jenkinsci.plugins.p4.changes.P4ChangeSet.store(java.io.File,java.util.List<java.lang.Object>)"], "Fixed commit": "dcb989a281f508581f7c771f58f7e805a54c22aa", "Url": "https://api.github.com/repos/niconorsk/p4-plugin", "Date": "2015-08-06T05:03:02Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (assertion.isSigned()) { if ((assertion.getSaml1()) != null) { assertion.getSaml1().getDOM().setIdAttributeNS(null, \"AssertionID\", true); }else { assertion.getSaml2().getDOM().setIdAttributeNS(null, \"ID\", true); } try { assertion.verifySignature(requestData, new org.apache.ws.security.WSDocInfo(samlResponse.getDOM().getOwnerDocument())); } catch (org.apache.ws.security.WSSecurityException e) { throw new org.apache.ws.security.WSSecurityException(org.apache.ws.security.WSSecurityException.FAILURE, \"invalidSAMLsecurity\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8448/buggy-version/filter.security-filter-login.src.main.java.org.codice.ddf.security.filter.login.LoginFilter.java", "BodyUseAPI": ["assertion.getSaml2().getDOM()", "org.apache.ws.security.saml.ext.AssertionWrapper.verifySignature(org.apache.ws.security.handler.RequestData,org.apache.ws.security.WSDocInfo)", "org.apache.ws.security.saml.ext.AssertionWrapper.getSaml1()", "org.apache.ws.security.saml.ext.AssertionWrapper.getSaml1()", "assertion.getSaml1().getDOM()", "org.apache.ws.security.saml.ext.AssertionWrapper.getSaml2()", "assertion.getSaml2().getDOM().setIdAttributeNS(<nulltype>,java.lang.String,boolean)", "assertion.getSaml1().getDOM().setIdAttributeNS(<nulltype>,java.lang.String,boolean)"], "Fixed commit": "dfdcb915f92734befbab385c754f1898c34ef50b", "Url": "https://api.github.com/repos/codice-archives/archive-ddf-security", "Date": "2015-02-09T19:25:04Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dianping.rotate.shop.service.impl.RotateGroupShopDAO.queryRotateGroupShopByShopIDAndBizID(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (changedRotateGroupShop == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6459/buggy-version/rotate-shop-aggregation.src.main.java.com.dianping.rotate.shop.service.impl.ShopServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "84c58a0206a5f7f75448a6d867ec47848028c5ed", "Url": "https://api.github.com/repos/arnoldwang/rotate-shop", "Date": "2015-02-11T09:17:01Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dianping.rotate.shop.service.impl.ApolloShopDAO.queryApolloShopByShopIDWithNoStatus(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (apolloShopEntity == null) throw new com.dianping.rotate.shop.exceptions.WrongShopInfoException(\"update shop is not existed!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6459/buggy-version/rotate-shop-aggregation.src.main.java.com.dianping.rotate.shop.service.impl.ShopServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "84c58a0206a5f7f75448a6d867ec47848028c5ed", "Url": "https://api.github.com/repos/arnoldwang/rotate-shop", "Date": "2015-02-11T09:17:01Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.authentication.UsernamePasswordAuthenticationToken)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (authResult.isAuthenticated()) { org.springframework.security.core.context.SecurityContextHolder.getContext().setAuthentication(authResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1367/buggy-version/src.main.java.com.telefonica.euro_iaas.sdc.puppetwrapper.auth.OpenStackAuthenticationFilter.java", "BodyUseAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().setAuthentication(org.springframework.security.core.Authentication)"], "Fixed commit": "90b5dd322d29619743293d555dab01f1fea35c2e", "Url": "https://api.github.com/repos/jesuspg/fiware-puppetwrapper", "Date": "2015-04-21T14:51:27Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.speedui.android.uiautomation.navigationdrawer.SPDrawerActivity.getFragmentAtPosition(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fragment != null) { android.app.FragmentManager fragmentManager = getFragmentManager(); fragmentManager.beginTransaction().replace(R.id.spdrawer_content_frame, this.getFragmentAtPosition(position)).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4718/buggy-version/uiautomation.src.main.java.com.speedui.android.uiautomation.navigationdrawer.SPDrawerActivity.java", "BodyUseAPI": [], "Fixed commit": "e071445cb8ef79d8d33b43bb39a2575da40d2791", "Url": "https://api.github.com/repos/pradipvaghasiya/android-swiftui", "Date": "2015-05-23T12:06:42Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3467/buggy-version/src.main.java.com.mridang.messstats.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "139c1d3dd28b828ca9a09728773318eb721174dc", "Url": "https://api.github.com/repos/mridang/dashclock-messstats", "Date": "2015-03-29T09:11:03Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Commands.getSelf.execute()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (u == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5012/buggy-version/src.com.example.TaskMan.main.ui.activities.DispatchActivity.java", "BodyUseAPI": [], "Fixed commit": "675fc8a43a12f04b2e322f4720e3ac62906369bd", "Url": "https://api.github.com/repos/Dima564/TaskMan", "Date": "2014-05-05T19:35:12Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!success) { android.widget.Toast.makeText(this, \"Networking error. Please, check connection to the internet\", Toast.LENGTH_LONG).show(); android.content.Intent i = new android.content.Intent(this, com.example.TaskMan.main.ui.activities.LoginActivity.class); startActivity(i); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5012/buggy-version/src.com.example.TaskMan.main.ui.activities.DispatchActivity.java", "BodyUseAPI": [], "Fixed commit": "675fc8a43a12f04b2e322f4720e3ac62906369bd", "Url": "https://api.github.com/repos/Dima564/TaskMan", "Date": "2014-05-05T19:35:12Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((ent == null) || ((ent.worldObj) == null)) client = false; else client = ent.worldObj.isRemote;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/660/buggy-version/src.main.java.io.darkcraft.darkcore.mod.impl.EntityEffectStore.java", "BodyUseAPI": [], "Fixed commit": "b49949432de777537183b246cc62dd5a26f52440", "Url": "https://api.github.com/repos/DarkholmeTenk/Darkcore", "Date": "2016-06-22T00:47:40Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nullSafe && (c == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6724/buggy-version/rocker-runtime.src.main.java.com.fizzed.rocker.runtime.DefaultRockerTemplate.java", "BodyUseAPI": [], "Fixed commit": "2081acf08fc51c52df6eda8178d8a4d26b994902", "Url": "https://api.github.com/repos/fizzed/rocker", "Date": "2017-08-02T08:07:58Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getContext().getContentResolver().query(MediaStore.Video.Media.EXTERNAL_CONTENT_URI,<nulltype>,<nulltype>,<nulltype>,((MediaStore.Video.Media.DATE_TAKEN) + \" DESC\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (videoCursor.moveToNext()) { java.lang.String path = videoCursor.getString(videoCursor.getColumnIndex(MediaStore.Video.Media.DATA)); mThumbnail = android.media.ThumbnailUtils.createVideoThumbnail(path, MediaStore.Video.Thumbnails.MICRO_KIND); }else { mThumbnail = android.graphics.BitmapFactory.decodeResource(getResources(), R.drawable.music_item_no_album_art); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6688/buggy-version/app.src.main.java.com.estsoft.muvigram.ui.home.camera.view.LibraryThumbnailButton.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndex(MediaStore.Video.Media.DATA)", "android.database.Cursor.getString(videoCursor.getColumnIndex(MediaStore.Video.Media.DATA))"], "Fixed commit": "656e8a5d25e788a69424a0a70e349d77da6e8bbb", "Url": "https://api.github.com/repos/Muvigram/muvigram-android", "Date": "2017-02-16T12:20:25Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.id()) == \"\") return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4084/buggy-version/AndroidFree.src.main.java.com.chewielouie.textadventure.NormalItem.java", "BodyUseAPI": [], "Fixed commit": "8e428f300cbb2bb1a646d04164a89cc0f7d9e825", "Url": "https://api.github.com/repos/julianchurchill/text-adventure", "Date": "2013-02-18T22:08:29Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (basicAuthUsername.contains(\"-\")) { return basicAuthUsername.substring(((basicAuthUsername.indexOf('-')) + 1)); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6794/buggy-version/serviceregistry-auth.src.main.java.fi.vtt.dsp.service.serviceregistry.auth.token.AccessTokenFactory.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int)"], "Fixed commit": "8d19dfc68ed2193f3d8f7f2fb2691bf7ee961f5a", "Url": "https://api.github.com/repos/digitalhealthrevolution/serviceregistry", "Date": "2016-01-29T09:11:17Z"},
{"Line": "=>866", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((conn.getId()) != null) { savedConn = connectionService.getConnectionById(conn.getId()); }else { savedConn = connectionService.getConnectionByName(conn.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7471/buggy-version/src.org.pentaho.platform.dataaccess.datasource.wizard.service.impl.DatasourceResource.java", "BodyUseAPI": ["org.pentaho.database.model.IDatabaseConnection.getName()", "org.pentaho.database.model.IDatabaseConnection.getId()", "org.pentaho.platform.dataaccess.datasource.wizard.service.impl.ConnectionServiceImpl.getConnectionById(conn.getId())", "org.pentaho.platform.dataaccess.datasource.wizard.service.impl.ConnectionServiceImpl.getConnectionByName(conn.getName())"], "Fixed commit": "422dc81f94b89b666d7a99edf28130692e183537", "Url": "https://api.github.com/repos/scottyaslan/data-access", "Date": "2014-09-03T15:50:46Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(_isConstructor)) hashCodeGenerator = hashCodeGenerator.append(methodName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8037/buggy-version/src.main.java.com.helger.jcodemodel.JInvocation.java", "BodyUseAPI": [], "Fixed commit": "bc32a3b11d2e09067e5d0d8b6d76b332e9763de9", "Url": "https://api.github.com/repos/leventov/jcodemodel", "Date": "2014-10-06T02:43:43Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.isInstance(when)) { found.add(((T) (when))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1977/buggy-version/camel-core.src.main.java.org.apache.camel.model.ProcessorDefinitionHelper.java", "BodyUseAPI": [], "Fixed commit": "22c7edc0c25362be1663cb297e6304a7d7518360", "Url": "https://api.github.com/repos/wuwen5/camel", "Date": "2014-09-22T07:05:59Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(map.containsKey(path))) { map.put(path, new java.util.ArrayList<org.jabl.rhateoas.rest.includes.RestEndPoint>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/82/buggy-version/src.main.java.org.jabl.rhateoas.rest.common.RootResource.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<org.jabl.rhateoas.rest.includes.RestEndPoint>>.put(java.lang.String,java.util.ArrayList<org.jabl.rhateoas.rest.includes.RestEndPoint>)"], "Fixed commit": "036bb867d7a10c6184c559f6073b9b5049f5aea8", "Url": "https://api.github.com/repos/aliptay/rhateoas-easy", "Date": "2015-04-01T16:22:37Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sampleFraction > 1.0) { sampleFraction = 1.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8020/buggy-version/modules.components.org.wso2.carbon.ml.model.src.main.java.org.wso2.carbon.ml.model.internal.SparkModelService.java", "BodyUseAPI": [], "Fixed commit": "b75a03b34b6f2802d8ba91956964994858eef0ea", "Url": "https://api.github.com/repos/cdathuraliya/product-ml", "Date": "2015-01-29T06:39:13Z"},
{"Line": "=>731", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mObservation.getUri()) != null) { android.content.ContentValues cv = mObservation.getContentValues(); cv.put(Observation._SYNCED_AT, java.lang.System.currentTimeMillis()); getContentResolver().update(mObservation.getUri(), cv, null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8064/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.ObservationViewerActivity.java", "BodyUseAPI": ["getContentResolver().update(mObservation.getUri(),android.content.ContentValues,<nulltype>,<nulltype>)", "org.inaturalist.android.Observation.getUri()", "org.inaturalist.android.Observation.getContentValues()"], "Fixed commit": "350a44a1dc02f11f54b86bafcc2f661823b62178", "Url": "https://api.github.com/repos/budowski/iNaturalistAndroid", "Date": "2016-03-22T04:49:04Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentThisSwitchCase.isDefault()) && (currentOtherSwitchCase.isDefault())) { switchCaseStatementMatch = true; }else { switchCaseStatementMatch = matchCaseCondition(currentThisSwitchCase.getExpression(), currentOtherSwitchCase.getExpression()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3440/buggy-version/src.gr.uom.java.ast.decomposition.matching.conditional.SwitchControlCase.java", "BodyUseAPI": ["org.eclipse.jdt.core.dom.SwitchCase.getExpression()", "org.eclipse.jdt.core.dom.SwitchCase.getExpression()", "gr.uom.java.ast.decomposition.matching.conditional.SwitchControlCase.matchCaseCondition(currentThisSwitchCase.getExpression(),currentOtherSwitchCase.getExpression())"], "Fixed commit": "0a48c309485aad886b1b071719ff9e0d18a516ae", "Url": "https://api.github.com/repos/tsantalis/JDeodorant", "Date": "2014-09-05T19:40:32Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(url.startsWith(\"/\"))) { url = \"/\" + url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1244/buggy-version/binary-storage.src.main.java.powered.by.sergey.binarystorage.BinaryStorageBOInBlobStoreGAEImpl.java", "BodyUseAPI": [], "Fixed commit": "94895c39753bce6a86b97b4a5d3fa5dc3db4abd5", "Url": "https://api.github.com/repos/Laesod/binary-storage", "Date": "2014-06-27T02:35:11Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(offerers.exists())) { offerers.mkdirs(); }else { for (java.io.File f : offerers.listFiles()) { f.delete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2901/buggy-version/AndroidCode.app.src.main.java.itsjustaaron.food.FoodActivities.OfferFragment.java", "BodyUseAPI": ["java.io.File.listFiles()", "java.io.File.mkdirs()"], "Fixed commit": "3598d4d7cf2ca65d1048bcad694cebe106d04844", "Url": "https://api.github.com/repos/TheLegendaryDuke/Food", "Date": "2017-02-27T15:07:18Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (ip.isGrayscale()) { for (int y = 0; y < (ip.getHeight()); y++) { for (int x = 0; x < (ip.getWidth()); x++) { put(x, y, ip.getPixel(x, y)); } } }else { for (int y = 0; y < (ip.getHeight()); y++) { for (int x = 0; x < (ip.getWidth()); x++) { int[] rgb = new int[3]; ip.getPixel(x, y, rgb); put(x, y, ((((rgb[0]) + (rgb[1])) + (rgb[2])) / 3)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/740/buggy-version/plugins.checkers-detector.Image.java", "BodyUseAPI": [], "Fixed commit": "8e52cb3f31aeb1bccd663a977e97172fd22becd8", "Url": "https://api.github.com/repos/Ensiss/checkers-detector", "Date": "2015-05-09T17:43:56Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (component)) { component.revalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6896/buggy-version/swing.src.net.sf.openrocket.gui.scalefigure.ScaleScrollPane.java", "BodyUseAPI": [], "Fixed commit": "4e0761fd183e9e3f2045822e91cb8c07b9ebda74", "Url": "https://api.github.com/repos/teyrana/openrocket", "Date": "2016-05-01T19:03:23Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (exchange.hasOut()) { query.setVariable(\"out\", exchange.getOut()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/349/buggy-version/components.camel-josql.src.main.java.org.apache.camel.builder.sql.SqlBuilder.java", "BodyUseAPI": ["org.josql.Query.setVariable(java.lang.String,exchange.getOut())", "org.apache.camel.Exchange.getOut()"], "Fixed commit": "630b4c310dcf27f45da0ba7c702d50ad4b6e5287", "Url": "https://api.github.com/repos/dpocock/camel", "Date": "2014-12-05T12:59:05Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timedConstraint) { expressionStringBuilder.append(eu.hyvar.reconfigurator.input.exporter.HyVarRecExporter.BRACKETS_CLOSING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/33/buggy-version/plugins.eu.hyvar.reconfigurator.input.src.eu.hyvar.reconfigurator.input.exporter.HyVarRecExporter.java", "BodyUseAPI": [], "Fixed commit": "622dd934d5bea46fc827d794334ebdb2bd4a2add", "Url": "https://api.github.com/repos/DarwinSPL/DarwinSPL", "Date": "2017-09-18T14:14:35Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/831/buggy-version/src.com.axelby.podax.ui.AddSubscriptionFragment.java", "BodyUseAPI": [], "Fixed commit": "47ee0a57df4828842cb869c12481e484883ad43e", "Url": "https://api.github.com/repos/DavidEGx/Podax", "Date": "2012-10-26T21:41:15Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (s[i].split(\" \")[0].equals(g.getCategory())) { continue; }else { lines.add(((s[i]) + \"-\")); android.util.Log.i(\"File \", (\"Loading: \" + (s[i]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8550/buggy-version/app.src.main.java.com.example.vincent.budgetbuddy.FileIO.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "android.util.Log.i(java.lang.String,java.lang.String)"], "Fixed commit": "5e87f356c8d41b1d6533b7d99ff5841e7fb7b6fd", "Url": "https://api.github.com/repos/DavidLamar/BudgetBuddy", "Date": "2016-04-20T00:19:21Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<edu.berkeley.cs169.tangrams.Piece>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((_rotatedGraphic) != null) && ((_rotatedGraphic) == boardPiece)) { canvas.drawPath(boardPiecePath, activePaint); _rotatedGraphic = null; }else { canvas.drawPath(boardPiecePath, piecePaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6856/buggy-version/src.edu.berkeley.cs169.tangrams.PlayActivity.java", "BodyUseAPI": [], "Fixed commit": "b8208f48e7a7f484a6367c40f03f3f61397159ef", "Url": "https://api.github.com/repos/karthikj89/Tangrams", "Date": "2011-05-01T22:40:17Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((authentication == null) || ((authentication.getPrincipal()) == null)) { return UserCredentials.TEST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1684/buggy-version/smarti18n.smarti18n-editor.src.main.java.org.smarti18n.editor.EditorApplication.java", "BodyUseAPI": [], "Fixed commit": "18de5dde60643a46148db4a1f15c5c8ed3217f63", "Url": "https://api.github.com/repos/SmartI18N/SmartI18N", "Date": "2017-11-13T17:36:22Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((accident.getDataCount()) != 0) { msg = accident.getData().get(0).getExpectedDetourMsg(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4364/buggy-version/domain.src.main.java.org.highway.whatsup.domain.function.DefaultActionCreator.java", "BodyUseAPI": ["accident.getData().get(int)", "KoExAccidentApi.Response.getData()", "accident.getData().get(0).getExpectedDetourMsg()"], "Fixed commit": "babe1ce141ccecda3bd2f40777bb08beef7ca7a4", "Url": "https://api.github.com/repos/moltak/WhatsUp", "Date": "2015-08-25T05:12:00Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cctv.getDataCount()) != 0) { cctvUrl = cctv.getDatas().get(0).getCctvUrl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4364/buggy-version/domain.src.main.java.org.highway.whatsup.domain.function.DefaultActionCreator.java", "BodyUseAPI": ["cctv.getDatas().get(0).getCctvUrl()", "KoExCctvApi.Response.getDatas()", "cctv.getDatas().get(int)"], "Fixed commit": "babe1ce141ccecda3bd2f40777bb08beef7ca7a4", "Url": "https://api.github.com/repos/moltak/WhatsUp", "Date": "2015-08-25T05:12:00Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exoplatform.task.service.ProjectService.getProjectById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (project != null) { java.lang.String msg = bundle.getString(\"popup.msg.deleteProject\"); msg = msg.replace(\"{}\", project.getName()); return confirmDeleteProject.with().pid(project.getId()).msg(msg).ok().withCharset(Tools.UTF_8); }else { return juzu.Response.status(404); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1692/buggy-version/task-management.src.main.java.org.exoplatform.task.management.controller.ProjectController.java", "BodyUseAPI": ["confirmDeleteProject.with().pid(project.getId()).msg(java.lang.String)", "org.exoplatform.task.domain.Project.getId()", "java.lang.String.replace(java.lang.String,project.getName())", "confirmDeleteProject.with().pid(project.getId()).msg(msg).ok().withCharset(Tools.UTF_8)", "confirmDeleteProject.with().pid(project.getId()).msg(msg).ok()", "confirmDeleteProject.with().pid(project.getId())", "org.exoplatform.task.domain.Project.getName()"], "Fixed commit": "dc06934f4932c70e8b5c1f30ef0ea666310f710a", "Url": "https://api.github.com/repos/exo-addons/task", "Date": "2015-06-10T03:52:01Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (truncateAt != null) { startOffset -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/826/buggy-version/android.sdk.src.main.java.com.taobao.weex.dom.WXTextDomObject.java", "BodyUseAPI": [], "Fixed commit": "0df7f61b0f72626b07c8bc7a2bcda89843338f49", "Url": "https://api.github.com/repos/apache/incubator-weex", "Date": "2017-09-21T03:36:45Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vividsolutions.jts.awt.FontGlyphReader.read(child.getText(),java.awt.Font,com.vividsolutions.jts.geom.GeometryFactory)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (geom instanceof com.vividsolutions.jts.geom.MultiPolygon) { com.vividsolutions.jts.geom.MultiPolygon multi = ((com.vividsolutions.jts.geom.MultiPolygon) (geom)); for (int i = 0; i < (multi.getNumGeometries()); i++) { for (int j = 0; j < (multi.getNumGeometries()); j++) { if (i != j) { com.vividsolutions.jts.geom.Geometry geomI = multi.getGeometryN(i); com.vividsolutions.jts.geom.Geometry geomJ = multi.getGeometryN(j); if (geomI.contains(geomJ)) { diff.add(geomJ); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5574/buggy-version/pcbCreation.SVGProcessor2.src.main.java.de.raytec.svgprocessor2.SVGParser.java", "BodyUseAPI": [], "Fixed commit": "77005814036578715070eb727d807b0550c97611", "Url": "https://api.github.com/repos/Rhiath/libraries", "Date": "2013-06-16T14:28:48Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (EVENT_TYPE != null) { switch (EVENT_TYPE) { case \"SENSOR\" : mSensorDataDbService.save(b.getString(\"NAME\"), b.getFloatArray(\"VALUES\"), b.getLong(\"TIMESTAMP\")); break; default : mSensorDataLogService.write(b.toString()); } }else { mSensorDataLogService.write(\"EMPTY MESSAGE\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3184/buggy-version/app.src.main.java.com.ivarprudnikov.sensors.SensorDataProcessorService.java", "BodyUseAPI": [], "Fixed commit": "b68405fcea694c0beeb0cea6259158335e26cdfa", "Url": "https://api.github.com/repos/ivarprudnikov/android_sensors", "Date": "2015-09-23T21:42:18Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oop.ex6.main.Variable.isLegalVariableType(type)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1902/buggy-version/src.oop.ex6.main.ConditionBlock.java", "BodyUseAPI": [], "Fixed commit": "a4ee4347dc5fed37c3ca935020eaad8410cedc91", "Url": "https://api.github.com/repos/david-wies/ex6", "Date": "2016-06-08T15:05:07Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getCurrentContext().logPointer.get()) != 0) && (latestToken == (getCurrentContext().logPointer.get()))) return new java.util.ArrayList<org.corfudb.runtime.view.LogData>().toArray(new org.corfudb.runtime.view.LogData[0]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5415/buggy-version/src.main.java.org.corfudb.runtime.view.StreamView.java", "BodyUseAPI": [], "Fixed commit": "cf60cf2bb2ce75756187e41fcb3d35f0fa9a2137", "Url": "https://api.github.com/repos/amytai/CorfuDB", "Date": "2016-09-18T10:47:49Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) com.joanzapata.android.iconify.Iconify.addIcons(this); else this.setText(\"ico\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/187/buggy-version/android-iconify.src.main.java.android.widget.IconTextView.java", "BodyUseAPI": [], "Fixed commit": "e3c831df56ddb09330f01a99fccc868c5160dc51", "Url": "https://api.github.com/repos/neuronalmotion/android-iconify", "Date": "2014-04-30T17:14:03Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mAccountSelected) { setAccount(((android.accounts.Account) (savedInstanceState.getParcelable(FileActivity.EXTRA_ACCOUNT)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2429/buggy-version/src.com.owncloud.android.ui.activity.Uploader.java", "BodyUseAPI": [], "Fixed commit": "7d331765096d4cbc2fccbae5ee0a9e33c7f6a62a", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2015-04-30T16:12:23Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (field != null) { errorCode = edu.umass.cs.gnsserver.gnsapp.clientSupport.NSAuthentication.aclCheck(header, guid, field, header.getOriginatingGUID(), MetaDataTypeName.WRITE_WHITELIST, app).getResponseCode(); }else if (userJSON != null) { java.util.List<java.lang.String> fields = userJSON.getKeys(); for (java.lang.String aField : fields) { edu.umass.cs.gnsserver.utils.AclResult aclResult = edu.umass.cs.gnsserver.gnsapp.clientSupport.NSAuthentication.aclCheck(header, guid, aField, header.getOriginatingGUID(), MetaDataTypeName.WRITE_WHITELIST, app); if (aclResult.getResponseCode().isExceptionOrError()) { errorCode = aclResult.getResponseCode(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2474/buggy-version/src.edu.umass.cs.gnsserver.gnsapp.clientSupport.NSUpdateSupport.java", "BodyUseAPI": ["edu.umass.cs.gnsserver.gnsapp.clientSupport.NSAuthentication.aclCheck(header, guid, field, header.getOriginatingGUID(), MetaDataTypeName.WRITE_WHITELIST, app).getResponseCode()", "edu.umass.cs.gnsserver.gnsapp.clientSupport.NSAuthentication.aclCheck(edu.umass.cs.gnsserver.interfaces.InternalRequestHeader,java.lang.String,java.lang.String,header.getOriginatingGUID(),MetaDataTypeName.WRITE_WHITELIST,edu.umass.cs.gnsserver.gnsapp.deprecated.GNSApplicationInterface<java.lang.String>)"], "Fixed commit": "f3d78bb2417b7a1d51b5b7ae4e439fd5aebde184", "Url": "https://api.github.com/repos/ZhaoyuUmass/ActiveGNS", "Date": "2016-10-11T04:03:44Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inAppWebView) != null) { if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.KITKAT)) { inAppWebView.loadUrl((\"javascript:\" + finalScriptToInject)); }else { inAppWebView.evaluateJavascript(finalScriptToInject, null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4553/buggy-version/src.android.ThemeableBrowser.java", "BodyUseAPI": [], "Fixed commit": "c3e41272a288c661ae68c80fc94319ff0dab4a98", "Url": "https://api.github.com/repos/initialxy/cordova-plugin-themeablebrowser", "Date": "2015-06-14T08:24:56Z"},
{"Line": "=>784", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inAppWebView) != null) { emitButtonEvent(buttonDef, inAppWebView.getUrl(), index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4553/buggy-version/src.android.ThemeableBrowser.java", "BodyUseAPI": [], "Fixed commit": "c3e41272a288c661ae68c80fc94319ff0dab4a98", "Url": "https://api.github.com/repos/initialxy/cordova-plugin-themeablebrowser", "Date": "2015-06-14T08:24:56Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pwd == null) || (pwd.trim().isEmpty())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/691/buggy-version/src.main.java.com.thoughtworks.bbs.web.UserController.java", "BodyUseAPI": [], "Fixed commit": "0a1da8c49c161dcc1cbc127abecd38617fe38a53", "Url": "https://api.github.com/repos/freddie218/bbs_team_a", "Date": "2014-01-05T15:49:58Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (oldAuthentication == null) { authentication = new org.springframework.security.authentication.UsernamePasswordAuthenticationToken(newUsername, user.getPasswordHash()); }else { authentication = new org.springframework.security.authentication.UsernamePasswordAuthenticationToken(newUsername, user.getPasswordHash(), oldAuthentication.getAuthorities()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/691/buggy-version/src.main.java.com.thoughtworks.bbs.web.UserController.java", "BodyUseAPI": ["org.springframework.security.core.Authentication.getAuthorities()"], "Fixed commit": "0a1da8c49c161dcc1cbc127abecd38617fe38a53", "Url": "https://api.github.com/repos/freddie218/bbs_team_a", "Date": "2014-01-05T15:49:58Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lee.study.proxyee.util.ProtoUtil.getRequestProto(lee.study.proxyee.handler.HttpRequest)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (requestProto == null) { ctx.channel().close(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7512/buggy-version/src.main.java.lee.study.proxyee.handler.HttpProxyServerHandle.java", "BodyUseAPI": [], "Fixed commit": "beb7e807bcee4e13679b18893f9273f7af0fbf81", "Url": "https://api.github.com/repos/monkeyWie/proxyee", "Date": "2017-11-30T14:07:45Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.fortuna.ical4j.model.component.CalendarComponent.getProperty(Property.SUMMARY)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (summary != null) newObject.setSummary(summary.getValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4777/buggy-version/Sources.er.groupware.calendar.ERGWCalendarObject.java", "BodyUseAPI": ["net.fortuna.ical4j.model.property.Summary.getValue()", "er.groupware.calendar.ERGWCalendarObject.setSummary(summary.getValue())"], "Fixed commit": "d557091c15b7a5185a176643ab9ec0b22ce5547c", "Url": "https://api.github.com/repos/pascalrobert/ERGroupware", "Date": "2012-11-07T15:58:04Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["oldAttendee.getCalAddress().getSchemeSpecificPart()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (emailAddress != null) attendee.setEmailAddress(emailAddress);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4777/buggy-version/Sources.er.groupware.calendar.ERGWCalendarObject.java", "BodyUseAPI": ["er.groupware.calendar.ERGWAttendee.setEmailAddress(java.lang.String)"], "Fixed commit": "d557091c15b7a5185a176643ab9ec0b22ce5547c", "Url": "https://api.github.com/repos/pascalrobert/ERGroupware", "Date": "2012-11-07T15:58:04Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (process(inp)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2402/buggy-version/proj0.canfield.TextPlayer.java", "BodyUseAPI": [], "Fixed commit": "2fc4749b3f39db37c41a901ca8fb6c9fe15fee95", "Url": "https://api.github.com/repos/MadcowD/CS61B", "Date": "2015-09-30T01:32:51Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newValue < 0) { scriptParamsMap.put(\"count\", (-newValue)); scriptString = (((((\"if(\" + fieldName) + \"==null) {\") + fieldName) + \"=params.count}else{\") + fieldName) + \"-=params.count}\"; }else { scriptParamsMap.put(\"count\", newValue); scriptString = (((((\"if(\" + fieldName) + \"==null) {\") + fieldName) + \"=params.count}else{\") + fieldName) + \"+=params.count}\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/707/buggy-version/src.org.apache.cassandra.triggers.ElasticSearch.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,long)", "java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,long)"], "Fixed commit": "ff6714a954061655d934981cc13ff59b354338b6", "Url": "https://api.github.com/repos/gradeup/cassandra-trigger", "Date": "2017-09-01T11:54:43Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((persistenceManager.getRootPath()) != null) { java.lang.String relativePath = persistenceManager.getFile(parent, fStoredObjectMap).getAbsolutePath().replace(persistenceManager.getRootPath(), \"\"); folder.getProperties().put(PropertyIds.PATH, new org.apache.chemistry.opencmis.commons.impl.dataobjects.PropertyStringImpl(org.apache.chemistry.opencmis.commons.PropertyIds.PATH, ((relativePath + \"/\") + (folder.getName())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/9059/buggy-version/src.main.java.org.apache.chemistry.opencmis.inmemory.storedobj.impl.ObjectStoreImpl.java", "BodyUseAPI": ["persistenceManager.getFile(parent, fStoredObjectMap).getAbsolutePath().replace(persistenceManager.getRootPath(),java.lang.String)", "org.apache.chemistry.opencmis.utils.PersistenceManager.getRootPath()", "persistenceManager.getFile(parent, fStoredObjectMap).getAbsolutePath()", "org.apache.chemistry.opencmis.utils.PersistenceManager.getFile(org.apache.chemistry.opencmis.inmemory.storedobj.api.Folder,java.util.Map<java.lang.String, org.apache.chemistry.opencmis.inmemory.storedobj.api.StoredObject>)"], "Fixed commit": "3d3368e501a22950f88c5855d89674a4308b7a3d", "Url": "https://api.github.com/repos/MGDIS/lightweightCMISserver", "Date": "2016-08-01T08:10:06Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.lexicanalytics.application.Main.rootLayout.getCenter()) != (org.lexicanalytics.application.Main.help.getAnchorPane())) { org.lexicanalytics.application.Main.rootLayout.setUserData(org.lexicanalytics.application.Main.rootLayout.getCenter()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2744/buggy-version/src.org.lexicanalytics.application.Main.java", "BodyUseAPI": ["javafx.scene.layout.BorderPane.getCenter()", "javafx.scene.layout.BorderPane.setUserData(org.lexicanalytics.application.Main.rootLayout.getCenter())"], "Fixed commit": "5de0d8300eaf8ee5fd300881be349bd20a83bb44", "Url": "https://api.github.com/repos/glauberrleite/lexicanalytics", "Date": "2016-08-02T00:33:23Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<java.lang.String>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rightElem.startsWith(\"(\")) { ele.append(((rightElem.substring(1, ((rightElem.length()) - 1))) + \"')), _))\")); }else { ele.append((rightElem + \"')), _))\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7731/buggy-version/play-platformservices-querydispatcher.src.main.java.eu.play_project.play_platformservices_querydispatcher.bdpl.visitor.realtime.FilterExpressionCodeGenerator.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "278fdbae298bdc3fee10107bd3e04de0a152aa33", "Url": "https://api.github.com/repos/play-project/play-dcep", "Date": "2013-12-18T16:23:03Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flusher) != null) try { while (true) { try { flusher.get(); return; } catch (java.lang.InterruptedException e) { } } } catch (java.util.concurrent.ExecutionException e) { throw new java.lang.RuntimeException(e); } finally { flusher = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2026/buggy-version/src.main.java.com.moviepilot.sheldon.compactor.handler.IndexWriter.java", "BodyUseAPI": [], "Fixed commit": "66fdd47b802f755e47ab5afc387621792f6de7ca", "Url": "https://api.github.com/repos/moviepilot/sheldon_compactor", "Date": "2012-08-20T17:03:29Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberOfFramesTotal == 0) numberOfFramesTotal = animFramesCount;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8529/buggy-version/action.SayAction.java", "BodyUseAPI": [], "Fixed commit": "73b1f594a24b6dd1262e31afc4a4ceee2aedb174", "Url": "https://api.github.com/repos/a2g/core", "Date": "2014-12-06T10:45:05Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((language) == (Language.GOTO)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3565/buggy-version/src.de.theia.vm.Compiler.java", "BodyUseAPI": [], "Fixed commit": "7652701a55aff329526074a1141aca107ab15979", "Url": "https://api.github.com/repos/maxstrauch/theia", "Date": "2016-05-22T10:32:35Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.iteration) == null) this.iteration = newIteration;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8705/buggy-version/RequirementManager.src.edu.wpi.cs.wpisuitetng.modules.RequirementManager.models.Requirement.java", "BodyUseAPI": [], "Fixed commit": "5efe4870c42620a4c6dee8e5cd5546a5c5f0b229", "Url": "https://api.github.com/repos/djkirby/wpi-suite-tng", "Date": "2013-03-27T21:09:59Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mGcmRegistrationManager.useGCM()) { mGcmRegistrationManager.reregisterSessions(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1310/buggy-version/console.src.main.java.org.matrix.console.activity.SplashActivity.java", "BodyUseAPI": ["org.matrix.console.gcm.GcmRegistrationManager.reregisterSessions(<nulltype>)"], "Fixed commit": "86f75444f02804ddd9fd3a9bdd2337eeb3e74a41", "Url": "https://api.github.com/repos/matrix-org/matrix-android-console", "Date": "2015-07-17T11:10:48Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.name) != null) { return new org.opentox.toxotis.ontology.LiteralValue<java.lang.String>(name, com.hp.hpl.jena.datatypes.xsd.XSDDatatype.XSDstring); }else { if ((org.opentox.toxotis.core.component.Parameter.getMeta()) != null) { if (((org.opentox.toxotis.core.component.Parameter.getMeta().getTitles()) != null) && (!(org.opentox.toxotis.core.component.Parameter.getMeta().getTitles().isEmpty()))) { org.opentox.toxotis.ontology.LiteralValue val = org.opentox.toxotis.core.component.Parameter.getMeta().getTitles().iterator().next(); return val; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/9066/buggy-version/ToxOtis-core.src.main.java.org.opentox.toxotis.core.component.Parameter.java", "BodyUseAPI": [], "Fixed commit": "bcfe31d03115c82362d65ff5f1e7c92ee7c6208b", "Url": "https://api.github.com/repos/alphaville/ToxOtis", "Date": "2011-08-31T21:22:13Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gameOver) { java.lang.System.out.println(\"Conglaturation! A winner is you!!\"); java.lang.System.out.println(\"Press enter to exit.\"); teamvoid.ui.CommandLineUI.key.nextLine(); java.lang.System.exit(0); }else if ((battle) == null) { java.lang.System.out.println(maze); java.lang.System.out.println(\"What would you like to do?\"); options(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1405/buggy-version/teamvoid.ui.CommandLineUI.java", "BodyUseAPI": [], "Fixed commit": "c081b6cf01cd87f6de77bd96a9ea3f715712aeb0", "Url": "https://api.github.com/repos/brovie96/team-void-cscd350-project", "Date": "2016-06-06T19:18:03Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3325/buggy-version/src.main.java.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "fef7475d0d91709b40fd7a994bfc6ff78f66d2f4", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jazmin.core.app.Application.logger.isDebugEnabled()) { jazmin.core.app.Application.logger.debug(\"create wired object {}\", clazz.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1413/buggy-version/JazminServer.src.jazmin.core.app.Application.java", "BodyUseAPI": ["jazmin.log.Logger.debug(java.lang.String,java.lang.String)"], "Fixed commit": "04afe59b4d3b6a50ebbf75f6c877b33cfa96885f", "Url": "https://api.github.com/repos/guooscar/JazminServer", "Date": "2015-04-10T03:55:42Z"},
{"Line": "=>958", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dialog) != null) dialog.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4755/buggy-version/astrid.plugin-src.com.todoroo.astrid.actfm.EditPeopleControlSet.java", "BodyUseAPI": [], "Fixed commit": "7a4be838d08968d36b2bde565c0dfbf154f91e27", "Url": "https://api.github.com/repos/sbosley/astrid", "Date": "2012-05-03T08:37:21Z"},
{"Line": "=>780", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (r.isExists(ids)) { existingCommand = ((org.apache.aiaravata.application.catalog.data.impl.JobManagerCommandResource) (r.get(ids))); }else { existingCommand = new org.apache.aiaravata.application.catalog.data.impl.JobManagerCommandResource(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3453/buggy-version/modules.app-catalog.app-catalog-data.src.main.java.org.apache.aiaravata.application.catalog.data.impl.ComputeResourceImpl.java", "BodyUseAPI": ["org.apache.aiaravata.application.catalog.data.impl.JobManagerCommandResource.get(java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "3fbf952f049ece58457ba6ecdb351e7f1dba84a9", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2014-11-04T19:21:09Z"},
{"Line": "=>1004", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["JobsDAO.instance.getJobApplication(p.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (currApp != null) { if ((p.getStatus().matches(JobApplication.STATUS_ACCEPTED)) || (p.getStatus().matches(JobApplication.STATUS_REJECTED))) { if (!(currApp.getStatus().matches(JobApplication.STATUS_SHORTLISTED))) { msg = \"PUT: Application cannot be accepted or rejected without being shortlisted.\"; javax.ws.rs.core.Response.ResponseBuilder resBuild = javax.ws.rs.core.Response.ok(msg); resBuild.status(Response.Status.BAD_REQUEST); res = resBuild.build(); return res; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3163/buggy-version/src.main.java.au.edu.unsw.soacourse.job.FoundITResource.java", "BodyUseAPI": ["currApp.getStatus().matches(JobApplication.STATUS_SHORTLISTED)", "au.edu.unsw.soacourse.job.model.JobApplication.getStatus()"], "Fixed commit": "2d9a401ea057520d723b85bba059f15be08df981", "Url": "https://api.github.com/repos/double-pHelix/FoundITServer", "Date": "2016-05-31T06:26:04Z"},
{"Line": "=>664", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextArea.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((!(key.trim().isEmpty())) && (text.contains(\"=\"))) && ((text.trim().isEmpty()) != true)) c1come2melater(key.toLowerCase(), text);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6717/buggy-version/c1comehere.src.zeng.siyuan.C1comehere.C1comehere.java", "BodyUseAPI": ["zeng.siyuan.C1comehere.C1comehere.c1come2melater(java.lang.String,java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "c1a72ebc20e2367e2d095a87d67ebc4423c61240", "Url": "https://api.github.com/repos/SiyuanZeng/14_GUI", "Date": "2016-09-13T06:56:07Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((articles.size()) == 0) return articles;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6235/buggy-version/src.com.novel.db.SQLiteNovel.java", "BodyUseAPI": [], "Fixed commit": "91629d7473add6df46be8b0881959f9434ffb819", "Url": "https://api.github.com/repos/StevenKo/novel_reader", "Date": "2013-03-28T09:27:07Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (element.getType().getId().equals(type.getId())) { mapElement.get(type).add(element); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8918/buggy-version/src.main.java.org.tekCorp.api.Util.Util.java", "BodyUseAPI": ["mapElement.get(type).add(org.tekCorp.api.domain.Element)", "java.util.HashMap<org.tekCorp.api.domain.Type, java.util.List<org.tekCorp.api.domain.Element>>.get(org.tekCorp.api.domain.Type)"], "Fixed commit": "c35a1e43f1a1ac7e2be6c41fa0e4204e2fd84ecf", "Url": "https://api.github.com/repos/shouwy/SeriesProject", "Date": "2016-02-23T11:57:47Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(board[x][y].opened)) { if (board[x][y].isFlagged()) { removeFlag(x, y); if (questionMarks) questionMark(x, y); else removeQuestionMark(x, y); }else if ((board[x][y].isQuestionMarked()) && (questionMarks)) { removeQuestionMark(x, y); }else { board[x][y].setFlagged(true); (flagCount)--; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6327/buggy-version/src.Board.java", "BodyUseAPI": ["board[x][y].isQuestionMarked()", "Board.removeQuestionMark(int,int)", "Board.questionMark(int,int)", "Board.removeFlag(int,int)", "board[x][y].setFlagged(boolean)", "Board.removeQuestionMark(int,int)", "board[x][y].isFlagged()"], "Fixed commit": "e283a6346faacd967beec920644f07d691d83d9c", "Url": "https://api.github.com/repos/pdonlon/Mines", "Date": "2013-08-15T17:31:42Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tempBuffer.length()) > 10) { params.add(new org.apache.http.message.BasicNameValuePair(\"csrfmiddlewaretoken\", tempBuffer.substring(10))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5041/buggy-version/Demo.src.com.talk.demo.util.NetworkUtilities.java", "BodyUseAPI": ["java.util.ArrayList<org.apache.http.NameValuePair>.add(org.apache.http.message.BasicNameValuePair)", "java.lang.String.substring(int)"], "Fixed commit": "42340cfa28c3e36e1e67af00ec66c49bfafb1010", "Url": "https://api.github.com/repos/youtaya/crabapple", "Date": "2014-08-28T12:47:12Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((authtoken.split(\";\").length) > 1) { tempBuffer = authtoken.split(\";\")[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5041/buggy-version/Demo.src.com.talk.demo.util.NetworkUtilities.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "42340cfa28c3e36e1e67af00ec66c49bfafb1010", "Url": "https://api.github.com/repos/youtaya/crabapple", "Date": "2014-08-28T12:47:12Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((--(limitPullTimes)) == 0) listView.setPullEnabled(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4283/buggy-version/demo.src.main.java.com.jiaminglu.pulltoloadmorelistview.demo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c3aaf2aeb5bdc96c30981664c3d1b32a1e8a8564", "Url": "https://api.github.com/repos/jiaminglu/PullToLoadMoreListView", "Date": "2015-04-15T11:25:46Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((v.getParent()) == null) { v.setLayoutParams(lp); addView(v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7918/buggy-version/Ports.Android.src.com.codename1.impl.android.AndroidAsyncView.java", "BodyUseAPI": ["android.view.View.setLayoutParams(com.codename1.impl.android.AndroidAsyncView.LayoutParams)", "com.codename1.impl.android.AndroidAsyncView.AsyncGraphics.1.addView(android.view.View)"], "Fixed commit": "8d4356ba3293b0347a110cc7ad32afbb7155bf67", "Url": "https://api.github.com/repos/ThomasH99/CodenameOne", "Date": "2016-07-12T09:44:31Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mheight < 0) { my += mheight; mheight = -mheight; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2679/buggy-version/src.net.pixelstatic.utils.MiscUtils.java", "BodyUseAPI": [], "Fixed commit": "22f6e8efbe5e63f7ab3b3307fe78360ad6446cad", "Url": "https://api.github.com/repos/Anuken/uCore-Tools", "Date": "2016-07-08T02:56:58Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mwidth < 0) { mx += mwidth; mwidth = -mwidth; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2679/buggy-version/src.net.pixelstatic.utils.MiscUtils.java", "BodyUseAPI": [], "Fixed commit": "22f6e8efbe5e63f7ab3b3307fe78360ad6446cad", "Url": "https://api.github.com/repos/Anuken/uCore-Tools", "Date": "2016-07-08T02:56:58Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(canceled)) && ((animator) != null)) { if ((from != null) && ((!isPush) || (removesFromViewOnPush))) { container.removeView(from); } changeListener.onChangeCompleted(); animator.removeListener(this); if (isPush && (from != null)) { resetFromView(from); } animator = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6128/buggy-version/conductor.src.main.java.com.bluelinelabs.conductor.changehandler.AnimatorChangeHandler.java", "BodyUseAPI": [], "Fixed commit": "46e6fac6dbc6e4cfa30dfb2fd78d917fdc230d84", "Url": "https://api.github.com/repos/bluelinelabs/Conductor", "Date": "2016-09-27T20:57:37Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jme3.math.Vector3f.subtract(com.jme3.math.Vector3f)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (localDirection.isUnitVector()) { result = new com.jme3.math.Ray(localVertex, localDirection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6692/buggy-version/heart.src.main.java.jme3utilities.math.MyMath.java", "BodyUseAPI": [], "Fixed commit": "b1bdcfc493c257ebca5eaf809c376d34679457d6", "Url": "https://api.github.com/repos/stephengold/jme3-utilities", "Date": "2017-11-19T17:32:24Z"},
{"Line": "=>708", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFragmentManager().findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fragment == null) { android.util.Log.e(com.breadwallet.presenter.activities.BreadActivity.TAG, \"run: fragment is null\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2952/buggy-version/app.src.main.java.com.breadwallet.presenter.activities.BreadActivity.java", "BodyUseAPI": [], "Fixed commit": "7d5c89b792af79522885f5d8d4ab1cdc36a98a07", "Url": "https://api.github.com/repos/breadwallet/breadwallet-android", "Date": "2017-06-26T15:57:04Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.deleted) { target.markDeleted(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5536/buggy-version/segmentstore.server.src.main.java.io.pravega.segmentstore.server.logs.SegmentMetadataUpdateTransaction.java", "BodyUseAPI": [], "Fixed commit": "7e88b11ee11f5c80766a5eebd4705be4ad0f3d3c", "Url": "https://api.github.com/repos/pravega/pravega", "Date": "2017-06-09T18:27:37Z"},
{"Line": "=>3355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(account.getDescription()))) { builder.setTicker(mApplication.getString(R.string.notification_bg_send_ticker, account.getDescription())); }else { builder.setTicker(mApplication.getString(R.string.notification_bg_send_ticker, account.getEmail())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8344/buggy-version/src.com.fsck.k9.controller.MessagingController.java", "BodyUseAPI": ["NotificationCompat.Builder.setTicker(mApplication.getString(R.string.notification_bg_send_ticker, account.getEmail()))", "com.fsck.k9.Account.getDescription()", "android.app.Application.getString(R.string.notification_bg_send_ticker,account.getEmail())", "android.app.Application.getString(R.string.notification_bg_send_ticker,account.getDescription())", "NotificationCompat.Builder.setTicker(mApplication.getString(R.string.notification_bg_send_ticker, account.getDescription()))", "com.fsck.k9.Account.getEmail()"], "Fixed commit": "e633814061636d33df86601d31ca7aae5a1bb622", "Url": "https://api.github.com/repos/jerrycable/k-9", "Date": "2013-09-11T14:01:45Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.children()) != null) result.addAll(node.children());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/997/buggy-version/src.internal.tree.WorldTree.java", "BodyUseAPI": ["java.util.List<internal.tree.IWorldTree>.addAll(node.children())", "internal.tree.IWorldTree.children()"], "Fixed commit": "23ac52fa5b6bcd01f7f9aeb029d0b48dbffcd95c", "Url": "https://api.github.com/repos/gurupras/worldtree", "Date": "2013-09-03T11:20:24Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size > 0) this.objectCache = new android.support.v4.util.LruCache(size);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/766/buggy-version/CPOrm.src.main.java.za.co.cporm.model.util.CPOrmCursor.java", "BodyUseAPI": [], "Fixed commit": "7a58f83fdb92a36aff33fccf9443c6152625e749", "Url": "https://api.github.com/repos/Wackymax/CPOrm", "Date": "2015-04-20T11:13:28Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nbPublis <= 0) { nbPublis = 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3937/buggy-version/kmelia.kmelia-war.src.main.java.com.silverpeas.portlets.LastPublicationsPortlet.java", "BodyUseAPI": [], "Fixed commit": "ed3dd13ffadc64f27c50d068deeabb628889d359", "Url": "https://api.github.com/repos/NicolasEYSSERIC/Silverpeas-Components", "Date": "2017-02-09T16:17:46Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jhl.encourage.apis.SpocResponse.getSpocObjects()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((responseList.size()) > 1) { spocObject = responseList.get(1); map = spocObject.getMap(); java.lang.String message = map.get(\"errortitle\"); if (message.equals(\"User Name Exist\")) { com.jhl.encourage.utilities.JHUtility.showDialogOk(\"Error\", map.get(\"errordescription\"), this); } }else { com.jhl.encourage.utilities.JHUtility.showDialogOk(\"Error\", \"Registration Failed. Please try again\", this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1878/buggy-version/Encourage-Android.src.com.jhl.encourage.activities.JHRegistrationActivity.java", "BodyUseAPI": ["java.util.ArrayList<com.jhl.encourage.apis.SpocObject>.get(int)"], "Fixed commit": "c3d3ddc026ef12e4af765579c745fc22d9f82cbf", "Url": "https://api.github.com/repos/abubalanandan/Encourage-Android", "Date": "2014-07-21T21:17:34Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task) != null) add(ru.rrozhkov.easykin.gui.PanelFactory.createTaskCommentPanel(this, task.comments()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1085/buggy-version/src.main.java.ru.rrozhkov.easykin.gui.task.TaskEditor.java", "BodyUseAPI": [], "Fixed commit": "11aea3964af550f4d7919301d2b0ffeb453b7ceb", "Url": "https://api.github.com/repos/rozhkovra/easykin", "Date": "2017-03-03T05:32:40Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.org.rlinsdale.bookkeeper.dataobjects.JournalEntry.getType()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jetype == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/919/buggy-version/generated.src.main.java.uk.org.rlinsdale.bookkeeper.code.JournalEntityRule.java", "BodyUseAPI": [], "Fixed commit": "ce5b88ccc8742772a8cc5e49f3b7fbe20a0b3da6", "Url": "https://api.github.com/repos/The-Retired-Programmer/bookkeeper", "Date": "2016-05-22T21:29:29Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(data.toString().equals(\"currentPlayerToDisplayChanged\"))) { ShowAnimatedView(layoutPopupPrivateAuctionWon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3595/buggy-version/Masterpiece.app.src.main.java.com.example.adnansakel.masterpiece.view.MainGameView.java", "BodyUseAPI": [], "Fixed commit": "1dfeed40162b590e58c1c28136ce9be41645b87b", "Url": "https://api.github.com/repos/adnansakel/Magum-Opus-The-Mobile-Art-Auction-Game", "Date": "2016-04-24T18:43:34Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayDeque<com.af.pxl.PixelSurface2.Pixel>.removeFirst()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((p.y) > 0) && ((p.y) <= ((Q) - 1))) s.add(new com.af.pxl.PixelSurface2.Pixel(p.x, ((p.y) - 1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/398/buggy-version/app.src.main.java.com.af.pxl.PixelSurface2.java", "BodyUseAPI": ["java.util.ArrayDeque<com.af.pxl.PixelSurface2.Pixel>.add(com.af.pxl.PixelSurface2.Pixel)"], "Fixed commit": "21f97b0ddeadf34eb021de151dcfecf64bf278e5", "Url": "https://api.github.com/repos/Aefyr/PXL", "Date": "2017-06-26T18:48:52Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayDeque<com.af.pxl.PixelSurface2.Pixel>.removeFirst()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((p.x) > 0) && ((p.x) <= ((Q) - 1))) s.add(new com.af.pxl.PixelSurface2.Pixel(((p.x) - 1), p.y));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/398/buggy-version/app.src.main.java.com.af.pxl.PixelSurface2.java", "BodyUseAPI": ["java.util.ArrayDeque<com.af.pxl.PixelSurface2.Pixel>.add(com.af.pxl.PixelSurface2.Pixel)"], "Fixed commit": "21f97b0ddeadf34eb021de151dcfecf64bf278e5", "Url": "https://api.github.com/repos/Aefyr/PXL", "Date": "2017-06-26T18:48:52Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBitmap) != null) mBitmap = fastblur(mBitmap, mRadious);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3269/buggy-version/src.idv.jason.lib.imagemanager.Blur.java", "BodyUseAPI": [], "Fixed commit": "32a0afcc012b63bdc1b3fd6ad65b7313b161b2cc", "Url": "https://api.github.com/repos/jason1peng/ImageManager", "Date": "2013-02-01T08:54:19Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.widget.EditText) (findViewById(R.id.editText2))).getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (in.dc297.mqttclpro.Util.isNullOrBlanc(message)) { android.widget.Toast.makeText(getApplicationContext(), \"Invalid message variable\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/807/buggy-version/app.src.main.java.in.dc297.mqttclpro.tasker.PublishTaskerActivity.java", "BodyUseAPI": [], "Fixed commit": "3ec2229d956fb6f589e83052523110c3e417887c", "Url": "https://api.github.com/repos/dc297/mqttclpro", "Date": "2017-10-24T07:19:28Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.widget.EditText) (findViewById(R.id.mqttTopicVar))).getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (in.dc297.mqttclpro.Util.isNullOrBlanc(topicVar)) { android.widget.Toast.makeText(getApplicationContext(), \"Invalid topic variable\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/807/buggy-version/app.src.main.java.in.dc297.mqttclpro.tasker.PublishTaskerActivity.java", "BodyUseAPI": [], "Fixed commit": "3ec2229d956fb6f589e83052523110c3e417887c", "Url": "https://api.github.com/repos/dc297/mqttclpro", "Date": "2017-10-24T07:19:28Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lastDone.equals(submission.getFullName()))) { lastDone = submission.getFullName(); backdrop.setImageResource(android.R.color.transparent); thumbImage2.setImageResource(android.R.color.transparent); doImageAndText(submission, full, baseSub); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2871/buggy-version/app.src.main.java.me.ccrama.redditslide.SubmissionViews.HeaderImageLinkView.java", "BodyUseAPI": ["net.dean.jraw.models.Submission.getFullName()", "me.ccrama.redditslide.SubmissionViews.HeaderImageLinkView.doImageAndText(net.dean.jraw.models.Submission,boolean,java.lang.String)"], "Fixed commit": "b991f2db207feface7f9d50d2ba47b9bbabc2ebd", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-03-22T21:09:26Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (orders.get(index).isCurrent()) { for (model.Product product : orders.get(index).getProducts()) { model.Stock stock = new model.Stock(product, product.getQuantity()); stocks.add(stock); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/347/buggy-version/src.model.Shop.java", "BodyUseAPI": ["java.util.ArrayList<model.Order>.get(int)", "orders.get(index).getProducts()"], "Fixed commit": "72a424f36d953c2d22ecca3a4ca86fe01b891da3", "Url": "https://api.github.com/repos/fcpteam1/project", "Date": "2014-08-30T10:06:38Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value != null) { net.saik0.android.unifiedpreference.UnifiedPreferenceUtils.sBindPreferenceSummaryToValueListener.onPreferenceChange(preference, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/868/buggy-version/library.src.net.saik0.android.unifiedpreference.UnifiedPreferenceUtils.java", "BodyUseAPI": ["Preference.OnPreferenceChangeListener.onPreferenceChange(android.preference.Preference,java.lang.Object)"], "Fixed commit": "8a3fc8961319bac2b3ff1660429324282eafc32a", "Url": "https://api.github.com/repos/saik0/UnifiedPreference", "Date": "2012-11-14T19:50:12Z"},
{"Line": "=>770", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index >= (valueCount)) || (index < 0)) { throw new java.lang.IllegalArgumentException(((((\"Expected index \" + index) + \" to be greater than 0 and less than the \") + \"maximum value count of \") + (valueCount))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2078/buggy-version/src.main.java.com.jakewharton.disklrucache.DiskLruCache.java", "BodyUseAPI": [], "Fixed commit": "7e4e7797b91b43fa9fb73e274b9f37e745423165", "Url": "https://api.github.com/repos/sjudd/DiskLruCache", "Date": "2014-06-30T14:36:03Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(canShift)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6458/buggy-version/src.main.java.buildcraftAdditions.client.gui.containers.ContainerBase.java", "BodyUseAPI": [], "Fixed commit": "00bdece2e4be44bb30dfc351597ca77559dcc772", "Url": "https://api.github.com/repos/BCA-Team/Buildcraft-Additions", "Date": "2015-02-08T11:21:06Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((seriesLineStyle.getIndex()) >= 0) { seriesLineStyleMap.put(seriesLineStyle.getIndex(), seriesLineStyle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7542/buggy-version/xchart.src.main.java.com.xeiam.xchart.internal.misc.SeriesColorMarkerLineStyleCycler.java", "BodyUseAPI": [], "Fixed commit": "36196259d70b4344545a029f5dc19e6895355580", "Url": "https://api.github.com/repos/timmolter/XChart", "Date": "2013-01-23T14:13:14Z"},
{"Line": "=>700", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((map.getMapTile(x).getTreasure()) != null) { if ((map.getMapTile(x).getTreasure().found) == true) list.add(\"Treasure has been found already\"); else list.add(\"Unknown Treasure\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6671/buggy-version/Code.src.View.GUI.java", "BodyUseAPI": ["map.getMapTile(x).getTreasure()", "Model.Map.getMapTile(int)"], "Fixed commit": "8e913a3b0b3cba231ea370c2f6124fbc10929241", "Url": "https://api.github.com/repos/christophersayyeau/3004MagicRealm", "Date": "2015-03-31T18:18:25Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.doridian.yiffbungee.main.util.RedisManager.jedisPool) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7217/buggy-version/src.main.java.de.doridian.yiffbungee.main.util.RedisManager.java", "BodyUseAPI": [], "Fixed commit": "cff52a2655fdfc650f37995d3babdec41270d52e", "Url": "https://api.github.com/repos/YiffBukkit/YiffBungee", "Date": "2014-05-18T12:35:15Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7317/buggy-version/app.src.main.java.it.mobileprogramming.ragnarok.workapp.ExerciseDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "2383f8fa2dcaa0a1319871d4d7b60eecfc32f7bf", "Url": "https://api.github.com/repos/ragnarokmp/WorkApp", "Date": "2015-09-18T07:33:54Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(java.util.Objects.isNull(webhook.getTag()))) && (!(webhook.getTag().isEmpty()))) { item.put(\"tag\", new com.flightstats.hub.dao.aws.AttributeValue(webhook.getTag())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2526/buggy-version/src.main.java.com.flightstats.hub.dao.aws.DynamoWebhookDao.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.flightstats.hub.dao.aws.AttributeValue>.put(java.lang.String,com.flightstats.hub.dao.aws.AttributeValue)", "com.flightstats.hub.webhook.Webhook.getTag()"], "Fixed commit": "1d6afabd07e1d5807320639627f805beea73f628", "Url": "https://api.github.com/repos/flightstats/hub", "Date": "2017-10-16T20:03:55Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["reactions.get(j).getNotes().getChildAt(u).toXMLString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (noteString.contains(\"<p/>\")) { noteString = noteString.replace(\"<p/>\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2058/buggy-version/src.edu.rutgers.MOST.data.SBMLModelReader.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "2d4d9e3b744f81c28e80df66ee4a4e147becdea7", "Url": "https://api.github.com/repos/CodeGuro/MOST", "Date": "2014-06-12T18:25:55Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mongodb.DBRef.getCollectionName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (collection.equals(\"PhysicalThing\")) { doc.put(\"europeanaProxy\", java.util.Arrays.asList(((java.lang.Boolean) (doc.get(\"europeanaProxy\"))).toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1237/buggy-version/europeana-qa-client-rest.src.main.java.de.gwdg.europeanaqa.client.rest.DocumentTransformer.java", "BodyUseAPI": [], "Fixed commit": "646cfa204755bd4b73f2328ebc607e4c6db2ee65", "Url": "https://api.github.com/repos/pkiraly/europeana-qa-client", "Date": "2016-06-24T15:39:37Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstCameraChange) { no.postnord.routeoptimizer.util.MapUtil.moveCamera(map, route.getBounds()); firstCameraChange = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2853/buggy-version/app.src.main.java.no.postnord.routeoptimizer.view.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "fc5f64bc1c1e27e3cec870758fa7fdc7748203da", "Url": "https://api.github.com/repos/andersu/RouteOptimizer", "Date": "2015-01-23T15:37:26Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(DakrorLauncher.currentLauncher,java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (link == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7613/buggy-version/src.main.java.de.dakror.launcher.panel.TitlePanel.java", "BodyUseAPI": [], "Fixed commit": "b4bd2bc192c8c4719b1eb25e5a1536ad4f03a9c9", "Url": "https://api.github.com/repos/Dakror/DakrorLauncher", "Date": "2014-04-23T23:16:27Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6467/buggy-version/bankdroid-legacy.src.main.java.com.liato.bankdroid.utils.ExceptionUtils.java", "BodyUseAPI": [], "Fixed commit": "3068857343abc3b7ebbba7ba521e486bdbc6f98d", "Url": "https://api.github.com/repos/walles/android-bankdroid", "Date": "2016-11-10T21:17:27Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((yearSplit.length()) == 6) { inputMonth = yearSplit.substring(4, 6); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7608/buggy-version/yueyueGo.src.yueyueGo.fullModel.classifier.AdaboostFullModel.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "23d64376028d99a1ae2953815d8ab600f9513b33", "Url": "https://api.github.com/repos/robertlee2k/yueyuego", "Date": "2016-11-10T13:50:33Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.util.Callback<java.lang.Void, com.dooapp.fxform.view.FXFormNode>.call(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fxFormNode.getNode().getId()) == null) { fxFormNode.getNode().setId(((element.getName()) + (com.dooapp.fxform.FXForm.EDITOR_ID_SUFFIX))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1235/buggy-version/core.src.main.java.com.dooapp.fxform.view.FXFormSkin.java", "BodyUseAPI": ["com.dooapp.fxform.view.FXFormNode.getNode()", "fxFormNode.getNode().setId(((element.getName()) + (com.dooapp.fxform.FXForm.EDITOR_ID_SUFFIX)))"], "Fixed commit": "a0fdcfa745e47e8d13054e9ab53c5a4af53b4a55", "Url": "https://api.github.com/repos/dooApp/FXForm2", "Date": "2013-11-05T17:48:33Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((widthSet) || (heightSet)) { canvas.drawImage(image, 0, 0, dw, dh); }else { canvas.drawImage(image, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3571/buggy-version/java.src.playn.java.JavaImageLayer.java", "BodyUseAPI": [], "Fixed commit": "8bd88674e5f9aebef19a008549396931687e5f59", "Url": "https://api.github.com/repos/threerings/playn", "Date": "2012-03-21T18:54:51Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.qmuiteam.qmuidemo.base.BaseFragmentActivity.getCurrentFragment()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fragment == null) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4624/buggy-version/qmuidemo.src.main.java.com.qmuiteam.qmuidemo.base.BaseFragmentActivity.java", "BodyUseAPI": [], "Fixed commit": "eac81768e5e4822e0421795e82d4fff42ae76567", "Url": "https://api.github.com/repos/QMUI/QMUI_Android", "Date": "2017-09-04T10:57:38Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.javamoney.moneta.spi.MonetaryContext.getMaxScale()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((maxScale != (-1)) && (maxScale < (monetaryContext.getMaxScale()))) { throw new org.javamoney.moneta.spi.MonetaryException((\"Context exceeds maximal capabilities (scale) of this type: \" + monetaryContext)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7509/buggy-version/src.main.java.org.javamoney.moneta.spi.AbstractAmountFactory.java", "BodyUseAPI": [], "Fixed commit": "97e5a40f7e380e208a30079bd337f58d769e447c", "Url": "https://api.github.com/repos/JavaMoney/jsr354-ri", "Date": "2014-05-01T12:35:41Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.javamoney.moneta.spi.MonetaryContext.getPrecision()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((precision != 0) && (precision < (monetaryContext.getPrecision()))) { throw new org.javamoney.moneta.spi.MonetaryException((\"Contexts exceeds maximal capabilities (precision) of this type: \" + monetaryContext)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7509/buggy-version/src.main.java.org.javamoney.moneta.spi.AbstractAmountFactory.java", "BodyUseAPI": [], "Fixed commit": "97e5a40f7e380e208a30079bd337f58d769e447c", "Url": "https://api.github.com/repos/JavaMoney/jsr354-ri", "Date": "2014-05-01T12:35:41Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wakeups.size()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/780/buggy-version/flightplanner.src.se.flightplanner2.AutoSyncService.java", "BodyUseAPI": [], "Fixed commit": "237c72e224a88ccb06c1609963442b1dd9ef7be7", "Url": "https://api.github.com/repos/avl/androidflightplanner", "Date": "2012-05-29T10:39:07Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((settings.getPointToStart()) != null) { this.lastFixedLocation.setLatitude(settings.getPointToStart().getLatitude()); this.lastFixedLocation.setLongitude(settings.getPointToStart().getLongitude()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/27/buggy-version/OsmAnd.src.net.osmand.plus.routing.RoutingHelper.java", "BodyUseAPI": ["net.osmand.Location.setLongitude(settings.getPointToStart().getLongitude())", "settings.getPointToStart().getLatitude()", "net.osmand.plus.OsmandSettings.getPointToStart()", "net.osmand.Location.setLatitude(settings.getPointToStart().getLatitude())", "settings.getPointToStart().getLongitude()", "net.osmand.plus.OsmandSettings.getPointToStart()"], "Fixed commit": "326c9d76f9b0e3b85ce6d19e9fae0424e467d2db", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2015-01-10T12:42:15Z"},
{"Line": "=>1836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWellSampleDataSelection(selected)) { return; }else if (selected instanceof omero.gateway.model.DataObject) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((omero.gateway.model.DataObject) (selected))); accept(visitor); foundNode = visitor.getSelectedNode(); if (foundNode != null) { if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else view.setFoundNode(null); }else if (selected instanceof org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) { foundNode = ((org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) (selected)); if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else if (selected instanceof java.util.List) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((java.util.List<omero.gateway.model.DataObject>) (selected))); accept(visitor); java.util.List<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> nodes = visitor.getSelectedNodes(); if ((nodes.size()) == 0) { view.setFoundNode(null); }else if ((nodes.size()) == 1) { model.setSelectedDisplay(nodes.get(0), true); view.setFoundNode(model.getSelectedDisplays()); }else { model.setSelectedDisplay(null, true); java.util.Iterator<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> i = nodes.iterator(); while (i.hasNext()) model.addFoundNode(i.next()); view.setFoundNode(model.getSelectedDisplays()); } }else if (selected instanceof java.lang.String) { model.setSelectedDisplay(null, true); view.setFoundNode(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/9131/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.agents.treeviewer.browser.BrowserComponent.java", "BodyUseAPI": [], "Fixed commit": "5cf33a967e07950d80eb0b35a2aae5d7216e2cf6", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2016-05-19T03:06:52Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action.equals(Intent.ACTION_EDIT)) { getMenuInflater().inflate(R.menu.menu_editor, menu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8679/buggy-version/app.src.main.java.com.nguyenqphan.notes4u.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "5392e71401e3811def4698ac8ffe0ffa26fe2e52", "Url": "https://api.github.com/repos/nguyenqphan/Notes4U", "Date": "2015-08-17T03:36:58Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(parts[1].equals(parts[2]))) { inputGraph.putEdgeValue(parts[1], parts[2], parts[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1174/buggy-version/source.src.main.java.architecture.extraction.reconstruction.pkg.PackageReconstructor.java", "BodyUseAPI": ["com.google.common.graph.MutableValueGraph<java.lang.String, java.lang.String>.putEdgeValue(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "7f27838dde6913b65f8045d098582969c241a703", "Url": "https://api.github.com/repos/jodokae/cmput663-architecture", "Date": "2017-12-03T18:01:32Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["crazypants.enderio.waila.WailaCompat.WailaWorldWrapper.getBlockMetadata(int,int,int)", "crazypants.enderio.waila.WailaCompat.WailaWorldWrapper.getBlock(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((block == null) || (!(block.hasTileEntity(meta)))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7252/buggy-version/src.main.java.crazypants.enderio.waila.WailaCompat.java", "BodyUseAPI": [], "Fixed commit": "5d08a9d976a3d29072fe17a52945b7e00548795b", "Url": "https://api.github.com/repos/SleepyTrousers/EnderIO", "Date": "2015-04-01T22:56:03Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.block.Block.createTileEntity(crazypants.enderio.waila.WailaCompat.WailaWorldWrapper,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (te == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7252/buggy-version/src.main.java.crazypants.enderio.waila.WailaCompat.java", "BodyUseAPI": [], "Fixed commit": "5d08a9d976a3d29072fe17a52945b7e00548795b", "Url": "https://api.github.com/repos/SleepyTrousers/EnderIO", "Date": "2015-04-01T22:56:03Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shareActionProvider) != null) shareActionProvider.setShareIntent(shareIntent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7342/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": [], "Fixed commit": "40c42bd221c3afe8a44dfe00dd50d76866b9549c", "Url": "https://api.github.com/repos/Phyxsius/Super-Duo", "Date": "2015-09-16T04:08:56Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(handle.getConnection().getMetaData().getDatabaseProductName().contains(\"PostgreSQL\"))) { statement = java.lang.String.format((\"INSERT INTO %s (id, dataSource, created_date, start, end, partitioned, version, used, payload) \" + \"VALUES (:id, :dataSource, :created_date, :start, :end, :partitioned, :version, :used, :payload)\"), config.getSegmentTable()); }else { statement = java.lang.String.format((\"INSERT INTO %s (id, dataSource, created_date, start, \\\"end\\\", partitioned, version, used, payload) \" + \"VALUES (:id, :dataSource, :created_date, :start, :end, :partitioned, :version, :used, :payload)\"), config.getSegmentTable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6365/buggy-version/realtime.src.main.java.com.metamx.druid.realtime.DbSegmentPublisher.java", "BodyUseAPI": [], "Fixed commit": "fc65648809dd946a9749392c2b644cac5c2d8c1f", "Url": "https://api.github.com/repos/metamx/druid", "Date": "2013-07-23T20:21:14Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cosrot == (java.lang.Double.NaN)) { cosrot = 0.001; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7355/buggy-version/src.de._13ducks.cor.game.server.movement.Formation.java", "BodyUseAPI": [], "Fixed commit": "cc5f9157491b77d4a51c1481401c0159630aa68c", "Url": "https://api.github.com/repos/tfg13/Centuries-of-Rage", "Date": "2011-06-24T18:36:28Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((time.minute) < 10) { timeString.append((\"0\" + (time.minute))); }else { timeString.append(time.minute); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4884/buggy-version/src.it.unozerouno.givemetime.view.utilities.TimeConversion.java", "BodyUseAPI": ["java.lang.StringBuffer.append((\"0\" + (time.minute)))", "java.lang.StringBuffer.append(time.minute)"], "Fixed commit": "bcc93eaf4e4317e9dfb52553c370f96d3226e63c", "Url": "https://api.github.com/repos/PaoloBassi/Application", "Date": "2015-02-01T19:22:55Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((time.hour) < 10) { timeString.append((\"0\" + (time.hour))); }else { timeString.append(time.hour); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4884/buggy-version/src.it.unozerouno.givemetime.view.utilities.TimeConversion.java", "BodyUseAPI": ["java.lang.StringBuffer.append(time.hour)", "java.lang.StringBuffer.append((\"0\" + (time.hour)))"], "Fixed commit": "bcc93eaf4e4317e9dfb52553c370f96d3226e63c", "Url": "https://api.github.com/repos/PaoloBassi/Application", "Date": "2015-02-01T19:22:55Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.becja10.RandomTP.Main.spawn) == null) me.becja10.RandomTP.Main.spawn = player.getLocation();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/9105/buggy-version/src.me.becja10.RandomTP.Main.java", "BodyUseAPI": [], "Fixed commit": "fbd49fb5a69ee98fd6501d9cd0adaeaa16430004", "Url": "https://api.github.com/repos/10becja/RandomTP", "Date": "2014-11-26T00:45:58Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sdcardExist) { sdcardDir = android.os.Environment.getExternalStorageDirectory(); }else { sdcardDir = android.os.Environment.getDownloadCacheDirectory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/9126/buggy-version/app.src.main.java.com.forthorn.projecting.util.LogUtils.java", "BodyUseAPI": [], "Fixed commit": "d65ac4578b6a59018266923785dc9926b1c69296", "Url": "https://api.github.com/repos/forthorn/Projecting", "Date": "2017-12-28T03:15:52Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) { dir.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/9126/buggy-version/app.src.main.java.com.forthorn.projecting.util.LogUtils.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "d65ac4578b6a59018266923785dc9926b1c69296", "Url": "https://api.github.com/repos/forthorn/Projecting", "Date": "2017-12-28T03:15:52Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Map.MapExporter.getGoalZone()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (g != null) bw.write(((((((((((GameObjects.InanimateObjects.GOAL_TYPE) + \" \") + ((int) (g.getTopLeft().getX()))) + \" \") + ((int) (g.getTopLeft().getY()))) + \" \") + ((int) (g.getBottomRight().getX()))) + \" \") + ((int) (g.getBottomRight().getY()))) + \"\\n\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8452/buggy-version/src.Map.MapExporter.java", "BodyUseAPI": ["GameObjects.GoalZone.getTopLeft()", "java.io.BufferedWriter.write(((((((((((GameObjects.InanimateObjects.GOAL_TYPE) + \" \") + ((int) (g.getTopLeft().getX()))) + \" \") + ((int) (g.getTopLeft().getY()))) + \" \") + ((int) (g.getBottomRight().getX()))) + \" \") + ((int) (g.getBottomRight().getY()))) + \"\\n\"))", "g.getTopLeft().getY()", "g.getTopLeft().getX()", "GameObjects.GoalZone.getBottomRight()", "g.getBottomRight().getX()", "g.getBottomRight().getY()", "GameObjects.GoalZone.getTopLeft()", "GameObjects.GoalZone.getBottomRight()"], "Fixed commit": "af4e22703a2e07db6f489aff81fffddfd9e6ef14", "Url": "https://api.github.com/repos/milanw/MAS", "Date": "2015-02-27T14:56:00Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(java.lang.String)", "javax.swing.JOptionPane.showInputDialog(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((serverIP.length()) < 8) || ((serverIP.length()) > 16)) || (((serverPort.length()) > 5) || ((serverPort.length()) < 1))) { java.lang.System.err.println(\"\\n\\nParametros Zuados\"); }else { java.lang.String rtpCode = ((\"rtp://@\" + serverIP) + \":\") + serverPort; java.lang.System.out.println(((\"\\nCapturing from \\'\" + rtpCode) + \"'\")); mediaPlayer.playMedia(rtpCode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7071/buggy-version/src.stream.views.SWGPrincipal.java", "BodyUseAPI": [], "Fixed commit": "127e9ea78cb4b0dbada8269e753b9217223b5d4c", "Url": "https://api.github.com/repos/paguii/Stream", "Date": "2016-11-14T21:33:17Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getContext().isInitialized())) { getContext().getQuotaStore(zone).put(topic.getIdentifier(msgQuota, zone), msgQuota, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7821/buggy-version/fce.src.main.java.io.moquette.fce.event.internal.MqttManageHandler.java", "BodyUseAPI": [], "Fixed commit": "1d054097f0b38ed3909732066812a0a195f2fa9c", "Url": "https://api.github.com/repos/lants1/moquette", "Date": "2016-01-10T09:48:25Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((representation.hasKnownSize()) && ((representation.getRange().getSize()) > (representation.getSize()))) return representation.getSize(); else return representation.getRange().getSize();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5385/buggy-version/modules.org.restlet.src.org.restlet.engine.io.BioUtils.java", "BodyUseAPI": ["representation.getRange().getSize()", "org.restlet.representation.Representation.getSize()", "org.restlet.representation.Representation.getRange()"], "Fixed commit": "5a1c67f8dc62cdf857a04d2ead559b78b840eb7a", "Url": "https://api.github.com/repos/mintrigue/restlet-framework-java", "Date": "2012-06-14T23:19:44Z"},
{"Line": "=>1242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (imageUrl.startsWith(fr.ac_versailles.crdp.apiscol.edit.ResourceEditionAPI.contentWebServiceResource.getWanUrl().toString())) { imageUrl = imageUrl.replace(fr.ac_versailles.crdp.apiscol.edit.ResourceEditionAPI.contentWebServiceResource.getWanUrl().toString(), fr.ac_versailles.crdp.apiscol.edit.ResourceEditionAPI.contentWebServiceResource.getURI().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1253/buggy-version/src.fr.ac_versailles.crdp.apiscol.edit.ResourceEditionAPI.java", "BodyUseAPI": ["fr.ac_versailles.crdp.apiscol.edit.ResourceEditionAPI.contentWebServiceResource.getURI().toString()", "java.lang.String.replace(fr.ac_versailles.crdp.apiscol.edit.ResourceEditionAPI.contentWebServiceResource.getWanUrl().toString(),fr.ac_versailles.crdp.apiscol.edit.ResourceEditionAPI.contentWebServiceResource.getURI().toString())", "fr.ac_versailles.crdp.apiscol.restClient.LanWebResource.getWanUrl()", "fr.ac_versailles.crdp.apiscol.edit.ResourceEditionAPI.contentWebServiceResource.getWanUrl().toString()", "fr.ac_versailles.crdp.apiscol.restClient.LanWebResource.getURI()"], "Fixed commit": "2a5b219a2004c10ff29881a814e68efdc5e7a163", "Url": "https://api.github.com/repos/ITOPEducation/apiscol-edit", "Date": "2015-12-30T14:57:35Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foundColor == (-1)) return android.graphics.Color.parseColor(\"#81B4DE\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3520/buggy-version/watershed-android.watershed.app.src.main.java.com.blueprint.watershed.Utilities.Utility.java", "BodyUseAPI": [], "Fixed commit": "8aacee10b521d5ee039551fb790d55820ad9ca8a", "Url": "https://api.github.com/repos/calblueprint/watershed", "Date": "2015-05-01T09:21:58Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (usePolling) { pollingThread = new net.visualcoding.ts3serverquery.TS3PollingThread(this); pollingThread.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5341/buggy-version/src.main.java.net.visualcoding.ts3serverquery.TS3ServerQueryClient.java", "BodyUseAPI": [], "Fixed commit": "c65fa7660e7fcb6a9b9829206c834042c6dff0c8", "Url": "https://api.github.com/repos/aldehir/TS3ServerQuery", "Date": "2012-08-23T00:09:14Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.FROYO)) sb.append(com.yiPATH.zi.utils.Device.getPair(\"serial\", Build.SERIAL)); else sb.append(com.yiPATH.zi.utils.Device.getPair(\"serial\", \"No Serial\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3822/buggy-version/src.com.yiPATH.zi.utils.Device.java", "BodyUseAPI": [], "Fixed commit": "96ba9a94eb836547bf372d21332e7bf6e37e5834", "Url": "https://api.github.com/repos/iNdieboyjeff/ZI", "Date": "2013-11-08T02:35:30Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bleedingRecordList.isEmpty()) { for (int k = 0; k < j; k++) { com.assignment2.BleedingRecord bleedingRecord = new com.assignment2.BleedingRecord(date[k], part[k], description[k]); bleedingRecord.setID(ID[k]); bleedingRecordList.add(bleedingRecord); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3879/buggy-version/Assignment2.app.src.main.java.com.fragments.Fragment2.java", "BodyUseAPI": ["java.util.List<com.assignment2.BleedingRecord>.add(com.assignment2.BleedingRecord)"], "Fixed commit": "a53907bf09c072ec1419812444e3b6b57a0f57e8", "Url": "https://api.github.com/repos/RenruiLiu/Heamophiliac-helper", "Date": "2016-10-04T10:31:57Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (injectionRecordList.isEmpty()) { for (int k = 0; k < j; k++) { com.assignment2.InjectionRecord injectionRecord = new com.assignment2.InjectionRecord(date[k], purpose[k]); injectionRecord.setID(ID[k]); injectionRecordList.add(injectionRecord); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3879/buggy-version/Assignment2.app.src.main.java.com.fragments.Fragment1.java", "BodyUseAPI": ["java.util.List<com.assignment2.InjectionRecord>.add(com.assignment2.InjectionRecord)"], "Fixed commit": "a53907bf09c072ec1419812444e3b6b57a0f57e8", "Url": "https://api.github.com/repos/RenruiLiu/Heamophiliac-helper", "Date": "2016-10-04T10:31:57Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nodeReplacements.containsKey(mul)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6706/buggy-version/Compiler.src.compiler.firm.optimization.visitor.LocalOptimizationVisitor.java", "BodyUseAPI": [], "Fixed commit": "60e747af3cbd66048e3d6da05c381796961e6fcb", "Url": "https://api.github.com/repos/replimoc/compiler", "Date": "2015-02-03T15:14:05Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nodeReplacements.containsKey(rightAdd)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6706/buggy-version/Compiler.src.compiler.firm.optimization.visitor.LocalOptimizationVisitor.java", "BodyUseAPI": [], "Fixed commit": "60e747af3cbd66048e3d6da05c381796961e6fcb", "Url": "https://api.github.com/repos/replimoc/compiler", "Date": "2015-02-03T15:14:05Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(stagingDirectory.mkdir())) { throw new org.apache.maven.plugin.MojoExecutionException(\"Unable to create staging directory\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8124/buggy-version/src.main.java.com.google.cloud.tools.maven.StageMojo.java", "BodyUseAPI": [], "Fixed commit": "7021d179d2fd6e84c7ab9c673a42252ca8ac12da", "Url": "https://api.github.com/repos/GoogleCloudPlatform/app-maven-plugin", "Date": "2016-05-25T21:13:28Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentValue.length()) == 1) { currentValue = null; }else { currentValue = new java.lang.String(currentValue.toCharArray(), 0, ((currentValue.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/9064/buggy-version/Calculator.app.src.main.java.ian.malerich.com.calculator.CalcActivity.java", "BodyUseAPI": ["java.lang.String.toCharArray()", "java.lang.String.length()"], "Fixed commit": "c796e9edea8ff047ff6ca37bced4335af830677a", "Url": "https://api.github.com/repos/imalerich/AndroidStudioProjects", "Date": "2015-11-25T04:39:22Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (elem instanceof org.talend.designer.core.ui.editor.subjobcontainer.SubjobContainer) { label = org.talend.designer.core.i18n.Messages.getString(\"ComponentSettingsView.subjob\"); image = org.talend.commons.ui.runtime.image.ImageProvider.getImage(EImage.PASTE_ICON); }else if (elem instanceof org.talend.designer.core.ui.editor.connections.ConnectionLabel) { label = ((org.talend.designer.core.ui.editor.connections.ConnectionLabel) (elem)).getConnection().getElementName(); image = org.talend.commons.ui.runtime.image.ImageProvider.getImage(EImage.RIGHT_ICON); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/688/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.views.properties.ComponentSettingsView.java", "BodyUseAPI": [], "Fixed commit": "fb439a6573caede8a1ccbbeb46fffec5deebe722", "Url": "https://api.github.com/repos/pbailly/tdi-studio-se", "Date": "2014-08-06T06:06:41Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((properties.getProperty(\"url\")) != null) { java.lang.System.setProperty(\"easy.url\", properties.getProperty(\"url\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8909/buggy-version/src.main.java.com.redmine.easy.LoginUtil.java", "BodyUseAPI": ["java.lang.System.setProperty(java.lang.String,java.lang.String)", "java.util.Properties.getProperty(java.lang.String)"], "Fixed commit": "4a8fac66e831e5bf524a1982e692c0cd5e15eacb", "Url": "https://api.github.com/repos/achennuru/redmine-client", "Date": "2017-07-25T19:18:06Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((((animal.getName().equals(null)) || (animal.getName().equals(\"\"))) || (animal.getType().equals(null))) || (animal.getType().equals(\"\"))) || (animal.getDescription().equals(null))) || (animal.getDescription().equals(\"\"))) { return \"redirect:/\"; }else { animalsService.addAnimal(animal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/679/buggy-version/src.main.java.com.andrewrnagel.animalshelter.controller.AnimalShelterController.java", "BodyUseAPI": ["com.andrewrnagel.animalshelter.service.AnimalsService.addAnimal(com.andrewrnagel.animalshelter.entity.Animal)"], "Fixed commit": "f6767b1c34d48ee65302e9ceb444c1348d158a16", "Url": "https://api.github.com/repos/turboska5/tiy-homework-animal-shelter-spring", "Date": "2016-09-26T19:04:31Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((localVersion.split(\"\\\\.\").length) == 2) { local[2] = \"0\"; }else { local[2] = localVersion.split(\"\\\\.\")[2]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5295/buggy-version/DecraftingTable.src.me.x1machinemaker1x.decraftingtable.Updater.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "d919ac5133789449df3ea1975b3e82b3c409e960", "Url": "https://api.github.com/repos/X1machinemaker1X/DecraftingTable", "Date": "2017-09-06T18:22:42Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (remoteVersion.endsWith(\".jar\")) { remoteVersion = remoteVersion.replace(\".jar\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5295/buggy-version/DecraftingTable.src.me.x1machinemaker1x.decraftingtable.Updater.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "d919ac5133789449df3ea1975b3e82b3c409e960", "Url": "https://api.github.com/repos/X1machinemaker1X/DecraftingTable", "Date": "2017-09-06T18:22:42Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((remoteVersion.split(\"\\\\.\").length) == 2) { remote[2] = \"0\"; }else { remote[2] = remoteVersion.split(\"\\\\.\")[2]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5295/buggy-version/DecraftingTable.src.me.x1machinemaker1x.decraftingtable.Updater.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "d919ac5133789449df3ea1975b3e82b3c409e960", "Url": "https://api.github.com/repos/X1machinemaker1X/DecraftingTable", "Date": "2017-09-06T18:22:42Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (getTargets().add(target)) { target.addRelation(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7702/buggy-version/src.main.java.biz.jovido.seed.content.model.Relation.java", "BodyUseAPI": ["biz.jovido.seed.content.model.Item.addRelation(biz.jovido.seed.content.model.Relation)"], "Fixed commit": "3546902ea4f80c70fcaef25f6abf0cde2b4145f7", "Url": "https://api.github.com/repos/jovido/jovido-webseed", "Date": "2017-08-21T19:31:28Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.cfg.Configuration.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((schemaProperty != null) && ((schemaProperty.equals(\"create\")) || (schemaProperty.equals(\"create-drop\")))) { synchronized(sf) { for (java.lang.String pu : pus) { org.hibernate.StatelessSession session = sf.openStatelessSession(); if (!(pu.equals(getPersistenceUnit()))) { java.util.Collection<java.lang.Class<?>> collection = classes.get(pu); for (java.lang.Class clazz : collection) { com.impetus.kundera.metadata.model.EntityMetadata metadata = com.impetus.kundera.metadata.KunderaMetadataManager.getEntityMetadata(kunderaMetadata, clazz); try { session.createSQLQuery((\"Drop table \" + (metadata.getTableName()))).executeUpdate(); } catch (java.lang.Exception e) { } } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5962/buggy-version/src.kundera-rdbms.src.main.java.com.impetus.client.rdbms.RDBMSClientFactory.java", "BodyUseAPI": [], "Fixed commit": "4ee8f183d017d53e60a3c1050813df3316d3caa9", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2014-03-31T11:54:40Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lexemes.get((i + 1)).equals(\")\"))) { for (i++; !(lexemes.get((i + 1)).equals(\")\")); i++); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1079/buggy-version/src.tarccompiler.CodeGenerator.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "8b87ee45c21953c5fd9fd24ea3fd0d95c7e4997f", "Url": "https://api.github.com/repos/charlesyu122/TARCCompiler", "Date": "2013-03-06T12:59:18Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lexemes.get((i + 1)).equals(\")\"))) { for (i += 1; !(lexemes.get((i + 1)).equals(\")\")); i++); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1079/buggy-version/src.tarccompiler.CodeGenerator.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "8b87ee45c21953c5fd9fd24ea3fd0d95c7e4997f", "Url": "https://api.github.com/repos/charlesyu122/TARCCompiler", "Date": "2013-03-06T12:59:18Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.codename1.impl.android.InPlaceEditView.isEditing()) { com.codename1.impl.android.AndroidImplementation.stopEditing(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8949/buggy-version/Ports.Android.src.com.codename1.impl.android.CodenameOneActivity.java", "BodyUseAPI": [], "Fixed commit": "d9d82c9cb7bbd6636d4a554a3e96217b72a61b67", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2017-01-12T18:12:09Z"},
{"Line": "=>849", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((exceptionLine != null) && ((exceptionLine.getFileName()) != null)) { return (((((((buildlogString(level, message)) + \": \") + (e.getMessage())) + \" (l\") + (exceptionLine.getLineNumber())) + \" in \") + (exceptionLine.getFileName().replace(\"InvTweaks\", \"\"))) + \")\"; }else { return ((buildlogString(level, message)) + \": \") + (e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2412/buggy-version/src.minecraft.invtweaks.InvTweaks.java", "BodyUseAPI": ["java.lang.StackTraceElement.getFileName()", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.StackTraceElement.getLineNumber()"], "Fixed commit": "431a9ad4fadf071cc84ca1852dd79238d07716dc", "Url": "https://api.github.com/repos/Kobata/inventory-tweaks", "Date": "2013-02-17T19:48:56Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (e != null) afterQuery(e);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/490/buggy-version/src.ids.minishark.Transfer.java", "BodyUseAPI": ["ids.minishark.Transfer<E>.afterQuery(E)"], "Fixed commit": "34c377b5a68cc33a4d6c6003d7f38e5d768521d8", "Url": "https://api.github.com/repos/sharklite/MiniShark", "Date": "2017-11-28T09:05:32Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (e != null) beforeDelete(e);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/490/buggy-version/src.ids.minishark.Transfer.java", "BodyUseAPI": ["ids.minishark.Transfer<E>.beforeDelete(E)"], "Fixed commit": "34c377b5a68cc33a4d6c6003d7f38e5d768521d8", "Url": "https://api.github.com/repos/sharklite/MiniShark", "Date": "2017-11-28T09:05:32Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (e != null) beforeModify(e);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/490/buggy-version/src.ids.minishark.Transfer.java", "BodyUseAPI": ["ids.minishark.Transfer<E>.beforeModify(E)"], "Fixed commit": "34c377b5a68cc33a4d6c6003d7f38e5d768521d8", "Url": "https://api.github.com/repos/sharklite/MiniShark", "Date": "2017-11-28T09:05:32Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (e != null) beforeInsert(e);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/490/buggy-version/src.ids.minishark.Transfer.java", "BodyUseAPI": ["ids.minishark.Transfer<E>.beforeInsert(E)"], "Fixed commit": "34c377b5a68cc33a4d6c6003d7f38e5d768521d8", "Url": "https://api.github.com/repos/sharklite/MiniShark", "Date": "2017-11-28T09:05:32Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.ArrayList<org.bukkit.Location>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (locations2 == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4369/buggy-version/src.main.java.com.argo.bukkit.honeypot.HoneyStack.java", "BodyUseAPI": [], "Fixed commit": "d33ff2128fc89547300e4963e38c28cc5bd59433", "Url": "https://api.github.com/repos/BeastsMC/Honeypot", "Date": "2012-11-14T03:12:17Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["graphql.schema.GraphQLType.getFieldDefinition(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((null == fieldType) && (null != (this.graphQLPropertyName))) { fieldType = ((graphql.schema.GraphQLFieldsContainer) (type)).getFieldDefinition(graphQLPropertyName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/9112/buggy-version/apigen-deps.src.main.java.com.distelli.graphql.MethodDataFetcher.java", "BodyUseAPI": [], "Fixed commit": "461d63fb44fd83cff2faa364054f676a893b1605", "Url": "https://api.github.com/repos/Distelli/graphql-apigen", "Date": "2017-07-23T21:11:26Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isVisible())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3747/buggy-version/app.src.main.java.mobi.maptrek.fragments.WaypointInformation.java", "BodyUseAPI": [], "Fixed commit": "6b25f805151c88f856b13cd21c42905b4285541f", "Url": "https://api.github.com/repos/andreynovikov/trekarta", "Date": "2017-10-24T09:29:21Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.helix.model.Message.getAttribute(Message.Attributes.TGT_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(messageCount.containsKey(instanceName))) { messageCount.put(instanceName, 0L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/71/buggy-version/helix-core.src.main.java.org.apache.helix.monitoring.mbeans.ClusterStatusMonitor.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Long>.put(java.lang.String,long)"], "Fixed commit": "a8406012703f0e4f77ac7d4f1c950ec13b569b5a", "Url": "https://api.github.com/repos/dasahcc/helix", "Date": "2017-01-19T22:32:30Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value != null) && (value.getClass().isArray())) { value = convertArray(((java.lang.Object[]) (value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1474/buggy-version/src.main.java.richTea.runtime.attribute.variable.LookupChainElement.java", "BodyUseAPI": [], "Fixed commit": "298d5ede5cc55323f99dca3f47b891311ddc7dd1", "Url": "https://api.github.com/repos/RichTeaLang/RichTea", "Date": "2016-07-26T22:18:12Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(destroyed)) { userListAdapter.add(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4807/buggy-version/kouchat-android-impl.src.main.java.net.usikkert.kouchat.android.controller.MainChatController.java", "BodyUseAPI": [], "Fixed commit": "5a20b1c53936236f9fb21f50558ad0744c4c13f4", "Url": "https://api.github.com/repos/blurpy/kouchat-android", "Date": "2014-01-20T18:43:16Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(destroyed)) { userListAdapter.remove(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4807/buggy-version/kouchat-android-impl.src.main.java.net.usikkert.kouchat.android.controller.MainChatController.java", "BodyUseAPI": [], "Fixed commit": "5a20b1c53936236f9fb21f50558ad0744c4c13f4", "Url": "https://api.github.com/repos/blurpy/kouchat-android", "Date": "2014-01-20T18:43:16Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(destroyed)) { userListAdapter.sort(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4807/buggy-version/kouchat-android-impl.src.main.java.net.usikkert.kouchat.android.controller.MainChatController.java", "BodyUseAPI": [], "Fixed commit": "5a20b1c53936236f9fb21f50558ad0744c4c13f4", "Url": "https://api.github.com/repos/blurpy/kouchat-android", "Date": "2014-01-20T18:43:16Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.dangeru.launcher.API.ThreadWatcher.pullParallelIds()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parallelIds.length) == 0) { us.dangeru.launcher.API.ThreadWatcher.updateView(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8355/buggy-version/app.src.main.java.us.dangeru.launcher.API.ThreadWatcher.java", "BodyUseAPI": [], "Fixed commit": "21ad5d954d76f8ac2da6cc4154f06cf44d3446b2", "Url": "https://api.github.com/repos/nilesr/United4", "Date": "2017-08-23T14:45:48Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i5.las2peer.webConnector.serviceManagement.ServiceRepositoryManager.timer) != null) { i5.las2peer.webConnector.serviceManagement.ServiceRepositoryManager.timer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5108/buggy-version/src.main.java.i5.las2peer.webConnector.serviceManagement.ServiceRepositoryManager.java", "BodyUseAPI": [], "Fixed commit": "d0cc0f1d95cb697495746a98dc90dac8faf6744b", "Url": "https://api.github.com/repos/rwth-acis/las2peer-WebConnector", "Date": "2016-04-29T09:52:44Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.nascenia.biyeta.utils.Utils.isOnline(getActivity())) { android.content.Intent intent = new android.content.Intent(getActivity(), com.nascenia.biyeta.activity.NewUserProfileActivity.class); intent.putExtra(\"id\", profileList.get(position).getId()); intent.putExtra(\"user_name\", profileList.get(position).getDisplay_name()); intent.putExtra(\"PROFILE_EDIT_OPTION\", false); startActivity(intent); }else { com.nascenia.biyeta.utils.Utils.ShowInternetConnectionError(getActivity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1267/buggy-version/app.src.main.java.com.nascenia.biyeta.fragment.Search.java", "BodyUseAPI": [], "Fixed commit": "e6101823ef9bd8c73c68a95f1e0a5ac63b4b5d09", "Url": "https://api.github.com/repos/Ovi-nascenia/b-ye", "Date": "2017-04-06T05:23:20Z"},
{"Line": "=>1026", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getViewType().equals(org.ednovo.gooru.client.mvp.gshelf.util.ContentResourceWidgetWithMove.COURSE)) { collectionContentPresenter.updateWidgetCount(collectionItem, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8724/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gshelf.util.ContentResourceWidgetWithMove.java", "BodyUseAPI": [], "Fixed commit": "1ebeeeec0b7047ad2c8540332c56ea0e159cb126", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-08-10T08:50:21Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.corefacility.bioinformatics.irida.repositories.joins.sample.SampleSequencingObjectJoinRepository.getSampleForSequencingObject(ca.corefacility.bioinformatics.irida.model.sequenceFile.SequencingObject)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (sequencingObjectJoin != null) { return samplePermission.isAllowed(authentication, sequencingObjectJoin.getSubject()); }else { ca.corefacility.bioinformatics.irida.security.permissions.files.ReadSequencingObjectPermission.logger.trace(((((\"Permission denied for reading sequencing object id=\" + (sf.getId())) + \" by user=\") + (authentication.getName())) + \", no joined sample found.\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5011/buggy-version/src.main.java.ca.corefacility.bioinformatics.irida.security.permissions.files.ReadSequencingObjectPermission.java", "BodyUseAPI": ["ca.corefacility.bioinformatics.irida.model.sample.SampleSequencingObjectJoin.getSubject()", "ca.corefacility.bioinformatics.irida.security.permissions.sample.ReadSamplePermission.isAllowed(org.springframework.security.core.Authentication,sequencingObjectJoin.getSubject())"], "Fixed commit": "8cd88ad2621e41869611ad2da0e98566b9c051fa", "Url": "https://api.github.com/repos/phac-nml/irida", "Date": "2017-09-22T17:02:33Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dollarPosition = className.indexOf(\"$\")) != (-1)) { className = className.substring(0, dollarPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3322/buggy-version/src.main.java.org.asciidoctor.extension.JavaExtensionRegistry.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "fa77a2c2d46bd76fcaea086df23faf87984fefd5", "Url": "https://api.github.com/repos/asciidoctor/asciidoctorj", "Date": "2014-03-06T21:33:41Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bytesRead > 0) { destStream.write(inputBuffer, 0, bytesRead); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2601/buggy-version/src.main.java.com.thoughtworks.samples.hadoop.fs.FileUploader.java", "BodyUseAPI": ["com.thoughtworks.samples.hadoop.fs.FSDataOutputStream.write(byte[],int,int)"], "Fixed commit": "ac52d46df648fe60648b32422281790fb2191a1f", "Url": "https://api.github.com/repos/yhemanth/hadoop-training-samples", "Date": "2013-05-26T08:44:47Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (checksum == null) { throw new java.lang.NullPointerException(\"Parameter checksum must not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3743/buggy-version/src.main.java.org.apache.commons.compress.utils.ChecksumCalculatingInputStream.java", "BodyUseAPI": [], "Fixed commit": "738482a127c63ddd98900423eb3870f2f63b480d", "Url": "https://api.github.com/repos/sesuncedu/commons-compress", "Date": "2017-06-16T19:30:03Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (in == null) { throw new java.lang.NullPointerException(\"Parameter in must not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3743/buggy-version/src.main.java.org.apache.commons.compress.utils.ChecksumCalculatingInputStream.java", "BodyUseAPI": [], "Fixed commit": "738482a127c63ddd98900423eb3870f2f63b480d", "Url": "https://api.github.com/repos/sesuncedu/commons-compress", "Date": "2017-06-16T19:30:03Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!state) { stop_button.setText(context.getResources().getString(R.string.button_clear)); stop_button.setTextColor(android.graphics.Color.parseColor(\"white\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5610/buggy-version/src.com.vbh.virtualboathouse.Timer.java", "BodyUseAPI": [], "Fixed commit": "5c39f6d2f483c185f01f2c835ca268a80fadaaf2", "Url": "https://api.github.com/repos/sfjordan/VirtualBH", "Date": "2014-04-26T19:25:48Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (json.getAsJsonObject().has(\"next_page_token\")) { results.setPageToken(json.getAsJsonObject().get(\"next_page_token\").getAsString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6393/buggy-version/app.src.main.java.com.lyft.cityguide.models.bll.serializers.PlaceSearchResultSerializer.java", "BodyUseAPI": ["json.getAsJsonObject().get(java.lang.String)", "com.google.gson.JsonElement.getAsJsonObject()", "json.getAsJsonObject().get(\"next_page_token\").getAsString()", "com.lyft.cityguide.models.bll.utils.PlaceSearchResult.setPageToken(json.getAsJsonObject().get(\"next_page_token\").getAsString())"], "Fixed commit": "104a3cf7711c232f2216a74a3d2c165e1ce94121", "Url": "https://api.github.com/repos/acadet/lyft-city-guide", "Date": "2015-08-16T07:28:20Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((domainPermissionModel.getObject()) != null) { return domainPermissionRepo.findAllActionPermissions(domainPermissionModel.getObject().getId(), ids); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4497/buggy-version/bootstrap.src.main.java.org.soluvas.web.bootstrap.widget.ActionPermissionChoiceProvider.java", "BodyUseAPI": ["domainPermissionModel.getObject().getId()", "org.apache.wicket.model.IModel<org.soluvas.security.DomainPermission2>.getObject()", "org.soluvas.security.DomainPermissionRepository.findAllActionPermissions(domainPermissionModel.getObject().getId(),java.util.Collection<java.lang.String>)"], "Fixed commit": "3732397e2fff4217a6138a3f9c578210d5448f21", "Url": "https://api.github.com/repos/soluvas/soluvas-web", "Date": "2016-03-22T11:11:26Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.contains(n.n))) { if ((cache.size()) >= (size)) { peersim.core.Node oldest = selectOldest(); this.cache = delete(this.cache, oldest); } cache.add(n); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5234/buggy-version/src.example.cyclon.CyclonHandshake.java", "BodyUseAPI": ["example.cyclon.CyclonHandshake.add(example.cyclon.CyclonEntry)"], "Fixed commit": "6abee9967c35abad15dd66ecf60211a3ac74c7a4", "Url": "https://api.github.com/repos/jutanke/peersim-spray", "Date": "2015-01-29T02:58:43Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.transport.ws.WSServlet.getInitParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((containerFormat != null) && ((containerFormat.length()) > 0)) { msocket.setMoatContainerFormat(containerFormat); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6920/buggy-version/activemq-http.src.main.java.org.apache.activemq.transport.ws.WSServlet.java", "BodyUseAPI": ["org.apache.activemq.transport.ws.MQTTSocket.setMoatContainerFormat(java.lang.String)"], "Fixed commit": "cc425e19145be417009b21525cff048f391b60be", "Url": "https://api.github.com/repos/inventit/activemq", "Date": "2014-05-29T05:39:01Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fop) != null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6373/buggy-version/controllersvc.src.main.java.com.emc.storageos.util.LastFileAppender.java", "BodyUseAPI": [], "Fixed commit": "6fc717524eea40eacb3c8edb2c1e6f18f7aac804", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-11-17T02:06:11Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jobRequestCount) > 0) { nl.armatiek.xslweb.configuration.WebApp.logger.info(\"Wait for running jobs to finish ...\"); while ((jobRequestCount) > 0) { java.lang.Thread.sleep(250); } nl.armatiek.xslweb.configuration.WebApp.logger.info(\"All jobs finished\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1353/buggy-version/src.main.java.nl.armatiek.xslweb.configuration.WebApp.java", "BodyUseAPI": [], "Fixed commit": "6c28d974936924eec6fb2dfdb651d98d7cac30f2", "Url": "https://api.github.com/repos/Armatiek/xslweb", "Date": "2016-08-15T14:44:23Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.boot.context.embedded.jetty.JettyEmbeddedServletContainerFactory.getThreadPool()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (threadPool == null) { threadPool = new org.eclipse.jetty.util.thread.QueuedThreadPool(); jettyFactory.setThreadPool(threadPool); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7834/buggy-version/springtime.src.main.java.io.springside.springtime.springboot.SpringTimeJettyCustomizer.java", "BodyUseAPI": [], "Fixed commit": "b1177ffa424db7db725bb08619815f6eba251fb8", "Url": "https://api.github.com/repos/springside/springtime", "Date": "2016-12-20T06:28:50Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (period == (org.jboss.logmanager.handlers.PeriodicRotatingFileHandler.Period.WEEK)) { calendar.set(java.util.Calendar.DAY_OF_WEEK, calendar.getFirstDayOfWeek()); }else { calendar.clear(java.util.Calendar.DAY_OF_WEEK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/9022/buggy-version/src.main.java.org.jboss.logmanager.handlers.PeriodicRotatingFileHandler.java", "BodyUseAPI": [], "Fixed commit": "95ad66a0ac57ed4568ae66595ab8ebd3c93492b7", "Url": "https://api.github.com/repos/jamezp/jboss-logmanager", "Date": "2013-07-08T20:55:07Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (originalValue.startsWith(\"http\")) { java.lang.String query = \"WITH <%s> INSERT { ?s <%s> [a <%s>;<%s> %s]} WHERE {?s a <%s>. {{?s <%s> \\\"%s\\\"} UNION {?s <%s> <%s>}} }\"; return java.lang.String.format(query, graph, predicate, ODSVoc.ODS_OTHER_VALUE, ODSVoc.ODS_ORIGINAL_VALUE, originalValue, dcatClass, predicate, originalValue, predicate, originalValue); }else { java.lang.String query = \"WITH <%s> INSERT { ?s <%s> [a <%s>;<%s> %s]} WHERE {?s a <%s>. {?s <%s> \\\"%s\\\" }\"; return java.lang.String.format(query, graph, predicate, ODSVoc.ODS_OTHER_VALUE, ODSVoc.ODS_ORIGINAL_VALUE, originalValue, dcatClass, predicate, originalValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2966/buggy-version/lodms-ods-transformers.dcat-valuemapper.src.main.java.com.tenforce.lodms.transformers.ODSValueMapper.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String,java.lang.String,ODSVoc.ODS_OTHER_VALUE,ODSVoc.ODS_ORIGINAL_VALUE,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String,java.lang.String,ODSVoc.ODS_OTHER_VALUE,ODSVoc.ODS_ORIGINAL_VALUE,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "6a0c1b8c117e3ec80b44e0b1e8a2274c0eb8b46b", "Url": "https://api.github.com/repos/nvdk/ods-lodms-plugins", "Date": "2014-02-25T19:29:33Z"},
{"Line": "=>936", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.speech.tts.TextToSpeech.setLanguage(getResources().getConfiguration().locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((result == (android.speech.tts.TextToSpeech.LANG_MISSING_DATA)) || (result == (android.speech.tts.TextToSpeech.LANG_NOT_SUPPORTED))) { getFamiliarActivity().showTtsDialog(); }else { mTtsInit = true; if (mIsSearchViewOpen) { mAfterSearchClosedRunnable = new java.lang.Runnable() { @java.lang.Override public void run() { getActivity().supportInvalidateOptionsMenu(); } }; }else { getActivity().supportInvalidateOptionsMenu(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7340/buggy-version/MTGFamiliar.src.main.java.com.gelakinetic.mtgfam.fragments.LifeCounterFragment.java", "BodyUseAPI": [], "Fixed commit": "7e46e12227e6a8c99e704e3633f955fa8d7f8c49", "Url": "https://api.github.com/repos/AEFeinstein/mtg-familiar", "Date": "2014-05-14T13:43:39Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((splitValue.length) == 27) || ((splitValue.length) == 22)) { filteredLog = ((((((((((((((((((((((splitValue[0]) + \"\\t\") + (splitValue[3])) + \"\\t\") + (splitValue[4])) + \"\\t\") + (splitValue[5])) + \"\\t\") + (splitValue[6])) + \"\\t\") + (splitValue[7])) + \"\\t\") + (splitValue[8])) + \"\\t\") + (splitValue[9])) + \"\\t\") + (splitValue[10])) + \",\") + (splitValue[11].split(\"/\")[0])) + \"\\t\") + \"\\t\") + \"\\t\") + \"\\t\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2337/buggy-version/LogAnalysis.src.main.java.com.visualpath.hadoop.loganalysis.mapper.AccessLogMapper.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "f6efeca38f14a97c0f784a497bfdae3e605fa863", "Url": "https://api.github.com/repos/anilvisualpath/LogAnalysis", "Date": "2014-06-27T09:54:54Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((splitValue.length) == 30) { filteredLog = ((((((((((((((((((((((splitValue[0]) + \"\\t\") + (splitValue[3])) + \"\\t\") + (splitValue[4])) + \"\\t\") + (splitValue[5])) + \"\\t\") + (splitValue[6])) + \"\\t\") + (splitValue[7])) + \"\\t\") + (splitValue[8])) + \"\\t\") + (splitValue[9])) + \"\\t\") + (splitValue[10])) + \"\\t\") + (splitValue[11].split(\"/\")[0])) + \"\\t\") + (splitValue[22].split(\"/\")[0])) + \"\\t\") + (splitValue[28].split(\"/\")[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2337/buggy-version/LogAnalysis.src.main.java.com.visualpath.hadoop.loganalysis.mapper.AccessLogMapper.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "f6efeca38f14a97c0f784a497bfdae3e605fa863", "Url": "https://api.github.com/repos/anilvisualpath/LogAnalysis", "Date": "2014-06-27T09:54:54Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((splitValue.length) == 25) { filteredLog = ((((((((((((((((((((((splitValue[0]) + \"\\t\") + (splitValue[3])) + \"\\t\") + (splitValue[4])) + \"\\t\") + (splitValue[5])) + \"\\t\") + (splitValue[6])) + \"\\t\") + (splitValue[7])) + \"\\t\") + (splitValue[8])) + \"\\t\") + (splitValue[9])) + \"\\t\") + (splitValue[10])) + \"\\t\") + (splitValue[11].split(\"/\")[0])) + \"\\t\") + (splitValue[22].split(\"/\")[0])) + \"\\t\") + (splitValue[23].split(\"/\")[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2337/buggy-version/LogAnalysis.src.main.java.com.visualpath.hadoop.loganalysis.mapper.AccessLogMapper.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "f6efeca38f14a97c0f784a497bfdae3e605fa863", "Url": "https://api.github.com/repos/anilvisualpath/LogAnalysis", "Date": "2014-06-27T09:54:54Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (cofh.tweak.asmhooks.Config.agressiveAICulling) tickRate = 10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/9006/buggy-version/src.cofh.tweak.asmhooks.entity.EntityAITasks.java", "BodyUseAPI": [], "Fixed commit": "91f8c7be472cc32522e53044d666495ddca1b731", "Url": "https://api.github.com/repos/CoFH/CoFHTweaks", "Date": "2015-05-03T00:59:57Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (active) { Audio.Audio.playSound(\"jumpup\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1231/buggy-version/MazeRunner3.src.GameObjects.PowerUp.java", "BodyUseAPI": [], "Fixed commit": "e3ee3fe86c3c0ecfb89b94ec10d818735bc54c96", "Url": "https://api.github.com/repos/EWI3620TU-GROUP06/EWI3620TU-GROUP06", "Date": "2014-01-19T01:57:27Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (active) { Audio.Audio.playSound(\"speedup\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1231/buggy-version/MazeRunner3.src.GameObjects.PowerUp.java", "BodyUseAPI": [], "Fixed commit": "e3ee3fe86c3c0ecfb89b94ec10d818735bc54c96", "Url": "https://api.github.com/repos/EWI3620TU-GROUP06/EWI3620TU-GROUP06", "Date": "2014-01-19T01:57:27Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bitmap.getWidth()) > (bitmap.getHeight())) { resized = android.graphics.Bitmap.createScaledBitmap(bitmap, edu.kit.psegruppe3.mensax.DetailFragment.IMAGE_WIDTH, edu.kit.psegruppe3.mensax.DetailFragment.IMAGE_HEIGHT, true); }else { resized = android.graphics.Bitmap.createScaledBitmap(bitmap, edu.kit.psegruppe3.mensax.DetailFragment.IMAGE_HEIGHT, edu.kit.psegruppe3.mensax.DetailFragment.IMAGE_WIDTH, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1078/buggy-version/app.src.main.java.edu.kit.psegruppe3.mensax.DetailFragment.java", "BodyUseAPI": ["android.graphics.Bitmap.createScaledBitmap(android.graphics.Bitmap,int,int,boolean)", "android.graphics.Bitmap.createScaledBitmap(android.graphics.Bitmap,int,int,boolean)"], "Fixed commit": "d16ba1f737fbd1db9b3322699f859ae882144a73", "Url": "https://api.github.com/repos/esenturk/MensaX", "Date": "2015-09-26T19:58:11Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player.health) > (player.maxHealth)) { player.health = player.maxHealth; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5375/buggy-version/koc.GameCycle.java", "BodyUseAPI": [], "Fixed commit": "28d1bb608b3caf67f9d0d22e4f2e701cd48ca7de", "Url": "https://api.github.com/repos/buzcu/KoC", "Date": "2016-01-04T18:58:40Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.bbteam.letseatout.utils.Lib.getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) { android.content.Intent Intent = new android.content.Intent(context, com.example.bbteam.letseatout.activities.LoginActivity.class); context.startActivity(Intent); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/659/buggy-version/LetsEatOut.app.src.main.java.com.example.bbteam.letseatout.listeners.NavigationListener.java", "BodyUseAPI": [], "Fixed commit": "91df794b40641dd67162dbfe7876b3e7b8bf59e8", "Url": "https://api.github.com/repos/BBTeam/FinalProject", "Date": "2017-01-17T00:15:12Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (jarPath == null) { return version; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1923/buggy-version/impl.src.main.java.com.stormpath.sdk.impl.http.support.UserAgent.java", "BodyUseAPI": [], "Fixed commit": "0f659c22cb3a76ead8d1dedf2573a555b4d9b01e", "Url": "https://api.github.com/repos/stormpath/stormpath-sdk-java", "Date": "2015-02-19T13:38:49Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (classPath.startsWith(\"jar:file:\")) { jarPath = classPath.subSequence(9, classPath.lastIndexOf(\"!\")).toString(); }else if (classPath.startsWith(\"vfs:\")) { jarPath = classPath.subSequence(4, ((classPath.lastIndexOf(\".jar\")) + 4)).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1923/buggy-version/impl.src.main.java.com.stormpath.sdk.impl.http.support.UserAgent.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.CharSequence.toString()", "java.lang.String.subSequence(int,int)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.subSequence(int,int)", "java.lang.CharSequence.toString()"], "Fixed commit": "0f659c22cb3a76ead8d1dedf2573a555b4d9b01e", "Url": "https://api.github.com/repos/stormpath/stormpath-sdk-java", "Date": "2015-02-19T13:38:49Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.obeonetwork.dsl.environment.Attribute.getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name == null) { name = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5216/buggy-version/designs.environment.plugins.org.obeonetwork.dsl.environment.design.services.src.org.obeonetwork.dsl.environment.design.services.EnvironmentLabelServices.java", "BodyUseAPI": [], "Fixed commit": "18f7a158c2a3b28eb6206ce2c08009e475fc1f57", "Url": "https://api.github.com/repos/ymortier/InformationSystem", "Date": "2015-10-30T13:57:56Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["attribute.getType().getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (typeName == null) { typeName = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5216/buggy-version/designs.environment.plugins.org.obeonetwork.dsl.environment.design.services.src.org.obeonetwork.dsl.environment.design.services.EnvironmentLabelServices.java", "BodyUseAPI": [], "Fixed commit": "18f7a158c2a3b28eb6206ce2c08009e475fc1f57", "Url": "https://api.github.com/repos/ymortier/InformationSystem", "Date": "2015-10-30T13:57:56Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((interruptPlayer) != null) interruptPlayer.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8861/buggy-version/src.SwingDemo.java", "BodyUseAPI": [], "Fixed commit": "d56bbf8cdb56597945c2fd081d2cb72ba34042ba", "Url": "https://api.github.com/repos/Republic-of-Gondor/Client", "Date": "2016-06-05T05:09:54Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scoreSum == 0) { scoreSum = additionalScore; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8755/buggy-version/java.deisotoper.src.main.java.ch.fgcz.proteomics.fbdm.IsotopicClusterGraph.java", "BodyUseAPI": [], "Fixed commit": "3825fbec5ff71d898bd785ecd782daa08ee08abe", "Url": "https://api.github.com/repos/protViz/deisotoper", "Date": "2017-12-05T14:24:59Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((displayTime.getHour()) >= 10) && ((displayTime.getMinute()) >= 10)) && ((displayTime.getSecond()) >= 10)) { java.lang.System.out.println((((((displayTime.getHour()) + \":\") + (displayTime.getMinute())) + \":\") + (displayTime.getSecond()))); }else { java.lang.System.out.println((((((((\"0\" + (displayTime.getHour())) + \":\") + \"0\") + (displayTime.getMinute())) + \":\") + \"0\") + (displayTime.getSecond()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2436/buggy-version/Clock.java", "BodyUseAPI": ["Time.getMinute()", "Time.getSecond()", "java.io.PrintStream.println((((((((\"0\" + (displayTime.getHour())) + \":\") + \"0\") + (displayTime.getMinute())) + \":\") + \"0\") + (displayTime.getSecond())))", "Time.getMinute()", "Time.getHour()", "Time.getHour()", "Time.getSecond()", "java.io.PrintStream.println((((((displayTime.getHour()) + \":\") + (displayTime.getMinute())) + \":\") + (displayTime.getSecond())))"], "Fixed commit": "9e08db38615da71530a5d71f8c38731723bab6ca", "Url": "https://api.github.com/repos/dravidjoseph/eecs448proj1", "Date": "2016-02-10T20:02:21Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(data[i].isZero())) data[i] = modulus.subtract(data[i]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5876/buggy-version/src.main.java.cc.r2.core.poly2.bMutablePolynomialMod.java", "BodyUseAPI": ["cc.r2.core.number.BigInteger.subtract(data[i])"], "Fixed commit": "80ca1ddc5d33cc1aef543e2a6e8c68518203bfe7", "Url": "https://api.github.com/repos/PoslavskySV/rings", "Date": "2017-03-14T15:17:14Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data[i]) != 0) data[i] = (modulus) - (data[i]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5876/buggy-version/src.main.java.cc.r2.core.poly2.MutablePolynomialMod.java", "BodyUseAPI": [], "Fixed commit": "80ca1ddc5d33cc1aef543e2a6e8c68518203bfe7", "Url": "https://api.github.com/repos/PoslavskySV/rings", "Date": "2017-03-14T15:17:14Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node.getChildren().isEmpty()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7083/buggy-version/src.minicamelot.PlayerAI.java", "BodyUseAPI": [], "Fixed commit": "67eae79324c91f9eb88970a72b88be5a63b56314", "Url": "https://api.github.com/repos/mlaikhram/MiniCamelot", "Date": "2017-11-29T07:36:37Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wso2telco.services.dep.sandbox.util.CommonUtil.getNullOrTrimmedValue(wrapperDTO.getMnc())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (mnc != null) { validationRulesList.add(new com.wso2telco.dep.oneapivalidation.util.ValidationRule(com.wso2telco.dep.oneapivalidation.util.ValidationRule.VALIDATION_TYPE_OPTIONAL_INT_GE_ZERO, \"mnc\", mnc)); validationRulesList.add(new com.wso2telco.dep.oneapivalidation.util.ValidationRule(com.wso2telco.dep.oneapivalidation.util.ValidationRule.VALIDATION_TYPE_MANDATORY_INT_GE_ZERO, \"mcc\", mcc)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5291/buggy-version/dep-sandbox.src.main.java.com.wso2telco.services.dep.sandbox.servicefactory.customerinfo.GetAttributeRequestHandler.java", "BodyUseAPI": ["java.util.List<com.wso2telco.dep.oneapivalidation.util.ValidationRule>.add(com.wso2telco.dep.oneapivalidation.util.ValidationRule)"], "Fixed commit": "580344c5b44f28ce347040a633f84884fb9cde0c", "Url": "https://api.github.com/repos/rshahintha/sandbox-service", "Date": "2017-01-18T07:04:17Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.core.technicaldebt.db.CharacteristicDto.getParentId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (characteristicId != null) { characteristic = db.debtCharacteristicDao().selectById(characteristicId); if (characteristic != null) { update.put(org.sonar.server.rule.index.RuleNormalizer.RuleField.CHARACTERISTIC.field(), characteristic.getKey()); update.put(org.sonar.server.rule.index.RuleNormalizer.RuleField.SUB_CHARACTERISTIC.field(), subCharacteristic.getKey()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2835/buggy-version/sonar-server.src.main.java.org.sonar.server.rule.index.RuleNormalizer.java", "BodyUseAPI": ["db.debtCharacteristicDao().selectById(java.lang.Integer)"], "Fixed commit": "56e9763c66889d2072ad4f106d4150982b4e7668", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-07-02T08:17:16Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"File\".equals(node.getTokenValue())) { if ((node.getFirstChild(PuppetGrammar.PARAMS)) != null) { for (com.sonar.sslr.api.AstNode paramNode : node.getFirstChild(PuppetGrammar.PARAMS).getChildren(PuppetGrammar.PARAM)) { if (\"mode\".equals(paramNode.getTokenValue())) { checkMode(paramNode.getFirstChild(PuppetGrammar.EXPRESSION)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6380/buggy-version/puppet-checks.src.main.java.com.iadams.sonarqube.puppet.checks.FileModeCheck.java", "BodyUseAPI": ["node.getFirstChild(PuppetGrammar.PARAMS).getChildren(PuppetGrammar.PARAM)", "com.sonar.sslr.api.AstNode.getFirstChild(PuppetGrammar.PARAMS)", "com.sonar.sslr.api.AstNode.getFirstChild(PuppetGrammar.PARAMS)"], "Fixed commit": "bb424c45129b739c3a4ac165ff538d7b252f23ad", "Url": "https://api.github.com/repos/iwarapter/sonar-puppet", "Date": "2015-08-05T09:20:58Z"},
{"Line": "=>1620", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((set.getAvp(avpCode)) == null) { set.insertAvp(0, avpCode, value, vendorId, isMandatory, isProtected); }else { net.java.slee.resource.diameter.base.events.avp.AvpUtilities.logger.warn(((\"Trying to add another Session-ID AVP with value \" + value) + \". Current value will not be changed.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3335/buggy-version/resources.diameter-base.common.events.src.main.java.net.java.slee.resource.diameter.base.events.avp.AvpUtilities.java", "BodyUseAPI": ["org.jdiameter.api.AvpSet.insertAvp(int,int,byte[],long,boolean,boolean)"], "Fixed commit": "22a9cf243214fd0b7e70eb37a62c37486c2837d3", "Url": "https://api.github.com/repos/gfigiel/jain-slee.diameter", "Date": "2016-07-18T16:17:34Z"},
{"Line": "=>2243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.java.slee.resource.diameter.base.events.avp.DiameterAvp.getCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((set.getAvp(avpCode)) == null) { set.insertAvp(0, avpCode, avp.byteArrayValue(), avp.getVendorId(), ((avp.getMandatoryRule()) != (DiameterAvp.FLAG_RULE_MUSTNOT)), ((avp.getProtectedRule()) == (DiameterAvp.FLAG_RULE_MUST))); }else { net.java.slee.resource.diameter.base.events.avp.AvpUtilities.logger.warn(((\"Trying to add another Session-ID AVP with value \" + (avp.byteArrayValue())) + \". Current value will not be changed.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3335/buggy-version/resources.diameter-base.common.events.src.main.java.net.java.slee.resource.diameter.base.events.avp.AvpUtilities.java", "BodyUseAPI": ["org.jdiameter.api.AvpSet.insertAvp(int,int,avp.byteArrayValue(),avp.getVendorId(),((avp.getMandatoryRule()) != (DiameterAvp.FLAG_RULE_MUSTNOT)),((avp.getProtectedRule()) == (DiameterAvp.FLAG_RULE_MUST)))"], "Fixed commit": "22a9cf243214fd0b7e70eb37a62c37486c2837d3", "Url": "https://api.github.com/repos/gfigiel/jain-slee.diameter", "Date": "2016-07-18T16:17:34Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((set.getAvp(avpCode)) == null) { set.insertAvp(0, avpCode, value, vendorId, isMandatory, isProtected, isOctetString); }else { net.java.slee.resource.diameter.base.events.avp.AvpUtilities.logger.warn(((\"Trying to add another Session-ID AVP with value \" + value) + \". Current value will not be changed.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3335/buggy-version/resources.diameter-base.common.events.src.main.java.net.java.slee.resource.diameter.base.events.avp.AvpUtilities.java", "BodyUseAPI": ["org.jdiameter.api.AvpSet.insertAvp(int,int,java.lang.String,long,boolean,boolean,boolean)"], "Fixed commit": "22a9cf243214fd0b7e70eb37a62c37486c2837d3", "Url": "https://api.github.com/repos/gfigiel/jain-slee.diameter", "Date": "2016-07-18T16:17:34Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["railo.runtime.type.Array.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((right < 1) || (right > len)) throw new railo.runtime.exp.ExpressionException(((\"invalid index [\" + right) + \"]\"), (\"valid indexes are from 1 to \" + len));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3527/buggy-version/railo-java.railo-core.src.railo.runtime.type.util.ArrayUtil.java", "BodyUseAPI": [], "Fixed commit": "8cc8efe298f9b7b1547549f7f92715c466e6e243", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-08-27T14:02:42Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["railo.runtime.type.Array.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((left < 1) || (left > len)) throw new railo.runtime.exp.ExpressionException(((\"invalid index [\" + left) + \"]\"), (\"valid indexes are from 1 to \" + len));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3527/buggy-version/railo-java.railo-core.src.railo.runtime.type.util.ArrayUtil.java", "BodyUseAPI": [], "Fixed commit": "8cc8efe298f9b7b1547549f7f92715c466e6e243", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-08-27T14:02:42Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["railo.runtime.type.Array.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (len == 0) throw new railo.runtime.exp.ExpressionException(\"array is empty\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3527/buggy-version/railo-java.railo-core.src.railo.runtime.type.util.ArrayUtil.java", "BodyUseAPI": [], "Fixed commit": "8cc8efe298f9b7b1547549f7f92715c466e6e243", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-08-27T14:02:42Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsDeleteGeofence) msg = getString(R.string.geofence_deleted); else msg = getString(R.string.geofence_updated);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1990/buggy-version/app.src.main.java.com.fourthwardcoder.android.volumemanager.fragments.ProfileMainFragment.java", "BodyUseAPI": [], "Fixed commit": "5b4709a93a6085021ffb01ee4ce79247ff09aef8", "Url": "https://api.github.com/repos/o4wcoder/VolumeManager", "Date": "2016-03-24T21:29:07Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Boolean.booleanValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fireEvent) { org.renci.databridge.util.AMQPComms ac = new org.renci.databridge.util.AMQPComms(this.pathToAmqpPropsFile); java.lang.String headers = org.renci.databridge.message.ProcessedMetadataToMetadataDB.getSendHeaders(nameSpace); this.logger.log(java.util.logging.Level.FINER, (\"Send headers: \" + headers)); ac.publishMessage(new org.renci.databridge.util.AMQPMessage(), headers, true); ac.shutdownConnection(); this.logger.log(java.util.logging.Level.FINE, \"Sent ProcessedMetadataToMetadataDB message.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/9080/buggy-version/engines.ingest.src.main.java.org.renci.databridge.engines.ingest.IngestMetadataAMQPMessageHandler.java", "BodyUseAPI": [], "Fixed commit": "ba480aa9613f93bf5fe16e8f3368f44ed2d51560", "Url": "https://api.github.com/repos/HowardLander/DataBridge", "Date": "2015-05-15T22:27:01Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (Cmd.equals(\"MODE\")) { if (GetString(2).equals(\"TETRIS\")) LDS.Parameters.Mode = LDS.Parameters.TETRIS_MODE; else if (GetString(2).equals(\"LDS\")) LDS.Parameters.Mode = LDS.Parameters.LDS_MODE; }else if (Cmd.equals(\"BEGIN_TEXT_TASK\")) { if (InsideTask) { LDS.Parameters.ErrorCode = (\"LINE \" + (LineNo)) + \" MISSING END_TASK STATEMENT\"; return; } B = new LDS.Task(Task.TEXT_TASK); InsideTask = true; }else if (Cmd.equals(\"TEXT_BACKGROUND_COLOR_RGB\")) { java.awt.Color C = new java.awt.Color(GetRgbInteger(2), GetRgbInteger(3), GetRgbInteger(4)); Task.TextBackgroundColor = C; }else if (Cmd.equals(\"TEXT_COLOR_RGB\")) { java.awt.Color C = new java.awt.Color(GetRgbInteger(2), GetRgbInteger(3), GetRgbInteger(4)); Task.TextColor = C; }else if (Cmd.equals(\"TEXT_FONT_SIZE\")) { Task.TextFontSize = GetInteger(2); }else if (Cmd.equals(\"TEXT_Y_START\")) { Task.TextYStart = GetInteger(2); }else if (Cmd.equals(\"TEXT_X_START\")) { Task.TextXStart = GetInteger(2); }else if (Cmd.equals(\"TEXT_Y_SPACING\")) { Task.TextYSpacing = GetInteger(2); }else if (Cmd.equals(\"TEXT_ON_LINE\")) { if (InsideTask) { int LineNo = GetInteger(2); if (LineNo > 99) { LDS.Parameters.ErrorCode = (\"LINE \" + LineNo) + \" LINE NUMBER MUST BE LESS THAN 100\"; return; } B.TextLines[GetInteger(2)] = GetRestOfString(3); } }else if (Cmd.equals(\"BEGIN_SWITCHING_TASK\")) { if (InsideTask) { LDS.Parameters.ErrorCode = (\"LINE \" + (LineNo)) + \" MISSING END_TASK STATEMENT\"; return; } B = new LDS.Task(Task.SWITCHING_TASK); B.FileName = GetString(2); if (!(ValidFileName(B.FileName))) { LDS.Parameters.ErrorCode = (\"LINE \" + (LineNo)) + \" NOT A VALID FILE NAME\"; return; } InsideTask = true; }else if (Cmd.equals(\"BEGIN_FOCUS_TASK\")) { if (InsideTask) { LDS.Parameters.ErrorCode = (\"LINE \" + (LineNo)) + \" MISSING END_TASK STATEMENT\"; return; } B = new LDS.Task(Task.FOCUS_TASK); B.FileName = GetString(2); if (!(ValidFileName(B.FileName))) { LDS.Parameters.ErrorCode = (\"LINE \" + (LineNo)) + \" NOT A VALID FILE NAME\"; return; } InsideTask = true; }else if (Cmd.equals(\"END_TASK\")) { if (!(InsideTask)) { LDS.Parameters.ErrorCode = (\"LINE \" + (LineNo)) + \" MISSING TASK STATEMENT\"; return; } TaskList.add(B); InsideTask = false; }else if (Cmd.equals(\"SET_NO_OF_BLOCKS\")) { if (!(InsideTask)) { LDS.Parameters.ErrorCode = (\"LINE \" + (LineNo)) + \" MISSING TASK STATEMENT\"; return; } B.NoOfBlocks = GetInteger(2); }else if (Cmd.equals(\"SET_NO_OF_TRIALS\")) { if (!(InsideTask)) { LDS.Parameters.ErrorCode = (\"LINE \" + (LineNo)) + \" MISSING TASK STATEMENT\"; return; } B.MakeTrials(GetInteger(2)); }else if ((Cmd.equals(\"SET_PROBABILITY_OF_SWITCHING\")) | (Cmd.equals(\"SET_PROBABILITY_OF_HIGH_FOCUS\"))) { if (!(InsideTask)) { LDS.Parameters.ErrorCode = (\"LINE \" + (LineNo)) + \" MISSING TASK STATEMENT\"; return; } B.PresentGamePercent[0] = GetInteger(2); B.PresentGamePercent[1] = GetInteger(3); }else if ((Cmd.equals(\"SET_RANDOM_PROBABILITY_OF_SWITCHING\")) | (Cmd.equals(\"SET_RANDOM_PROBABILITY_OF_HIGH_FOCUS\"))) { if (!(InsideTask)) { LDS.Parameters.ErrorCode = (\"LINE \" + (LineNo)) + \" MISSING TASK STATEMENT\"; return; } Task.UseRandomGamePercent = true; Task.PresentRandomGamePercent[0] = GetInteger(2); Task.PresentRandomGamePercent[1] = GetInteger(3); if ((R.nextInt(2)) == 0) { int Temp = Task.PresentRandomGamePercent[0]; Task.PresentRandomGamePercent[0] = Task.PresentRandomGamePercent[1]; Task.PresentRandomGamePercent[1] = Temp; } }else if (Cmd.equals(\"DEBUG_TETRIS_ONLY\")) { OnlyTetris = true; }else if (Cmd.equals(\"NO_OF_SYMBOLS\")) { B.NoOfSymbols = GetInteger(2); }else if (Cmd.equals(\"FIRST_LETTERS\")) { Task.FirstLettersUsed = GetString(2); }else if (Cmd.equals(\"SECOND_LETTERS\")) { Task.SecondLettersUsed = GetString(2); }else if (Cmd.equals(\"LETTER_INDEX\")) { Task.LetterIndex[0] = GetInteger(2); Task.LetterIndex[1] = GetInteger(3); }else if (Cmd.equals(\"SYMBOL_DISPLAY_TIME\")) { Task.SymbolDisplayTime = GetInteger(2); Task.OriginalSymbolDisplayTime = Task.SymbolDisplayTime; }else if (Cmd.equals(\"SHOW_ACCURACY\")) { if (!(InsideTask)) { LDS.Parameters.ErrorCode = (\"LINE \" + (LineNo)) + \" MISSING TASK STATEMENT\"; return; } if (GetString(2).equals(\"TRUE\")) B.ShowAccuracy = true; }else if (Cmd.equals(\"CRITERION_TO_PERCENT\")) { if (!(InsideTask)) { LDS.Parameters.ErrorCode = (\"LINE \" + (LineNo)) + \" MISSING TASK STATEMENT\"; return; } B.TrialsToCriterion = true; B.CriterionPercent = GetInteger(2); B.TasksToSkipBackwards = GetInteger(3); if ((B.TaskCounter) <= (B.TasksToSkipBackwards)) LDS.Parameters.ErrorCode = (\"LINE \" + (LineNo)) + \" SKIPPING BACK BEFORE BEGINING\"; }else if (Cmd.equals(\"CRITERION_TO_TRIALS\")) { if (!(InsideTask)) { LDS.Parameters.ErrorCode = (\"LINE \" + (LineNo)) + \" MISSING TASK STATEMENT\"; return; } B.TrialsLimited = true; B.CriterionToTrials = GetInteger(2); }else if (Cmd.equals(\"HOW_MUCH_TO_DECREASE_THE_DELAY\")) { FocusTask.IsTetrisTask = true; FocusTask.HowMuchToDecreaseTheDelay = GetInteger(2); }else if (Cmd.equals(\"THRESHHOLD_IN_ACCURACY_TO_DECREASE_THE_DELAY\")) { FocusTask.ThreshHoldInAccuracyToDecreaseTheDelay = GetInteger(2); }else if (Cmd.equals(\"THRESHHOLD_FOR_SWITCHING_TO_TETRIS\")) { FocusTask.ThreshHoldForSwitchingToTetris = GetInteger(2); }else if (Cmd.equals(\"TAKE_SURVEY\")) { LDS.Parameters.SurveyArrayList.add(new LDS.Survey(GetString(2), GetString(3), GetInteger(4))); }else if ((Cmd.charAt(0)) == '/') { continue; }else if ((Cmd.length()) == 0) { LDS.Parameters.ErrorCode = (\"LINE \" + (LineNo)) + \" BLANK LINES NOT ALLOWED\"; return; }else { LDS.Parameters.ErrorCode = (((\"DO NOT RECOGNIZE PARAMETER FILE LINE \" + (LineNo)) + \" LINE = '\") + (Arg)) + \"'\"; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1529/buggy-version/src.LDS.Parameters.java", "BodyUseAPI": [], "Fixed commit": "4b1b3c66c7bbe31f27a76a97007263e37aa5b92f", "Url": "https://api.github.com/repos/koneill1994/FlowTetris", "Date": "2017-03-28T20:44:00Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isValid()) { validateId(); validateName(); validateDates(); validateIsCompleted(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7993/buggy-version/src.storage.TaskJson.java", "BodyUseAPI": [], "Fixed commit": "a5badd18872e79094376942ee09dc4db01e8baf3", "Url": "https://api.github.com/repos/cs2103aug2015-w11-3j/main", "Date": "2015-11-05T20:16:41Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.koldbyte.codebackup.plugins.codeforces.core.entities.CodeforcesProblem.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((id[0].length()) > 3) { problemUrl = GYMPROBLEMURL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4160/buggy-version/src.com.koldbyte.codebackup.plugins.codeforces.core.entities.CodeforcesProblem.java", "BodyUseAPI": [], "Fixed commit": "5566a9ecba425d87a9675deb6cb492f909b026bd", "Url": "https://api.github.com/repos/koldbyte/CodeBackup", "Date": "2015-05-25T09:00:08Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isActive()) { result = result.concat((((\"Task \\\"\" + (getTitle())) + \"\\\"\") + (isRepeated() ? (((((\" from \" + (getStartTime())) + \" to \") + (getEndTime())) + \" every \") + (repeat)) + \" seconds\" : (\" at\" + \" \") + (getStartTime())))); }else { result = result.concat((((\"Task \\\"\" + (getTitle())) + \"\\\"\") + (isRepeated() ? ((((((\" from \" + (getStartTime())) + \" to \") + (getEndTime())) + \" every \") + (repeat)) + \" seconds \") + \"is inactive\" : \" is inactive\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3852/buggy-version/src.main.java.ua.sumdu.j2se.zaretsky.tasks.model.Task.java", "BodyUseAPI": [], "Fixed commit": "d02b807d6eba5b3bb22dbb5d24f5ffc0bce5a6a5", "Url": "https://api.github.com/repos/Soldier180/tm_for_maven", "Date": "2017-02-08T18:30:30Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f.isField()) { final com.ibm.wala.classLoader.IClass cls = f.getField().getDeclaringClass(); final java.lang.String typeName = edu.kit.joana.wala.util.PrettyWalaNames.type2string(cls); return typeName.contains(className); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7550/buggy-version/wala.joana.wala.core.src.edu.kit.joana.wala.core.params.objgraph.SideEffectDetectorConfig.java", "BodyUseAPI": ["f.getField().getDeclaringClass()", "edu.kit.joana.wala.core.ParameterField.getField()"], "Fixed commit": "f65252c26116f9bb4831d1d1c6705df772e90d2e", "Url": "https://api.github.com/repos/jgf/joana", "Date": "2013-04-26T13:31:40Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hitCount) >= (game.Constants.MAX_HIT_BREAK)) { position.x = -1; position.y = (parent.height) * 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3013/buggy-version/src.game.Shield.java", "BodyUseAPI": [], "Fixed commit": "64f30b23002b37e2e0d28bf80db161910adf0d56", "Url": "https://api.github.com/repos/swapnilraj/SpaceInvaders", "Date": "2017-02-16T16:27:56Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.orientationChange)) this.mRealm.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4679/buggy-version/app.src.main.java.com.achievers.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "67fc770ae554fe70281b16b4d41fbd986b2789b2", "Url": "https://api.github.com/repos/ivzb/Achievers", "Date": "2017-04-15T19:11:50Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.orientationChange)) this.mRealm = io.realm.Realm.getDefaultInstance();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4679/buggy-version/app.src.main.java.com.achievers.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "67fc770ae554fe70281b16b4d41fbd986b2789b2", "Url": "https://api.github.com/repos/ivzb/Achievers", "Date": "2017-04-15T19:11:50Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (secondFunction instanceof heros.edgefunc.EdgeIdentity) return this;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8111/buggy-version/src.heros.edgefunc.AllBottom.java", "BodyUseAPI": [], "Fixed commit": "6939a4729e754c10960e0f7de250274caa120223", "Url": "https://api.github.com/repos/Sable/heros", "Date": "2015-01-23T12:34:11Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPoint) { for (VFFrame.TrackPoint tp : tracking) { px = ((((tp.x) - (minX)) + 1) * (VFFrame.VFPanel.wWidth)) / (((maxX) - (minX)) + 2); py = ((((-(tp.y)) - (minY)) + 1) * (VFFrame.VFPanel.wHeight)) / (((maxY) - (minY)) + 2); g.drawLine(((int) (px + 0.5)), ((int) (py + 0.5)), ((int) (px + 0.5)), ((int) (py + 0.5))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/656/buggy-version/VectorFieldDemo.java", "BodyUseAPI": [], "Fixed commit": "2cf721f4630973ab8dfdd6ee7954a7ad04d0528e", "Url": "https://api.github.com/repos/nthistle/vector-field-demo", "Date": "2016-12-13T02:59:41Z"},
{"Line": "=>1968", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"createdDate\".equals(sortBy)) || (\"lastUpdatedDate\".equals(sortBy))) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8446/buggy-version/components.governance.org.wso2.carbon.governance.api.src.main.java.org.wso2.carbon.governance.api.util.GovernanceUtils.java", "BodyUseAPI": [], "Fixed commit": "33591acf67c126eb8adee6c3806376667b33ad06", "Url": "https://api.github.com/repos/madawas/carbon-governance", "Date": "2016-06-14T10:05:53Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.equals(java.io.File.class.getName())) { return \"string\"; }else if (type.startsWith(\"java.lang.Class\")) { return \"string\"; }else if ((type.startsWith(\"java.util.List\")) || (type.startsWith(\"java.util.Collection\"))) { return \"array\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3948/buggy-version/tooling.apt.src.main.java.org.apache.camel.tools.apt.helper.JsonSchemaHelper.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "b83298c7dec624dd5e04f60d8f5543fba968d1e1", "Url": "https://api.github.com/repos/bjfr/camel", "Date": "2015-12-31T09:02:16Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7986/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "e8a56537fe4188b7c6f0556dca30a2c6b65ec0d6", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (partName.equals(\"q\")) { result = reference.getQuery(); }else if (partName.equals(\"r\")) { result = reference.getRemainingPart(); }else if (partName.isEmpty()) { result = reference.toString(false, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3020/buggy-version/modules.org.restlet.src.org.restlet.engine.util.CallResolver.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.isEmpty()"], "Fixed commit": "f46906b0eae64ed0d14cde69b5ba1980eb287f98", "Url": "https://api.github.com/repos/jgustie/restlet-framework-java", "Date": "2014-08-08T08:10:42Z"},
{"Line": "=>725", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null != (column)) && (column.isPrimaryKey())) { filterable = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2199/buggy-version/data.orm.src.main.java.leap.orm.mapping.FieldMappingBuilder.java", "BodyUseAPI": [], "Fixed commit": "5f5f130aa7af47b7f380239ae259fcec2a6cedd3", "Url": "https://api.github.com/repos/leapframework/framework", "Date": "2017-11-09T03:22:15Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((deck.returnDeckSize()) > 0) { cols.get(i).cards.add(deck.dealTop()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/893/buggy-version/src.main.java.models.Game.java", "BodyUseAPI": ["cols.get(i).cards.add(deck.dealTop())", "models.Deck.dealTop()"], "Fixed commit": "9b9904b3f4f5d9df1977d0827d808988acd8cf34", "Url": "https://api.github.com/repos/cs361fall2017/team26", "Date": "2017-12-03T02:38:35Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (main.java.com.dbyl.appiumServer.AppiumServerUtils.OSType.contains(\"win\")) { main.java.com.dbyl.appiumServer.RuntimeExec exec = new main.java.com.dbyl.appiumServer.RuntimeExec(); exec.excuteCMD(((((\"cmd /c echo off & FOR /F \\\"usebackq tokens=5\\\" %a in\" + \" (`netstat -nao ^| findstr /R /C:\\\"\") + appiumServicePort) + \"\\\"`) do (FOR /F \\\"usebackq\\\" %b in\") + \" (`TASKLIST /FI \\\"PID eq %a\\\" ^| findstr /I node.exe`) do taskkill /F /PID %a)\")); }else { java.lang.System.out.println(\"not windows\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4672/buggy-version/src.main.java.com.dbyl.appiumServer.AppiumServerUtils.java", "BodyUseAPI": [], "Fixed commit": "ffd92a0ce95f20d3b2276d599155cec324313fde", "Url": "https://api.github.com/repos/tobecrazy/appiumDemo", "Date": "2016-03-07T16:01:24Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (main.java.com.dbyl.appiumServer.AppiumServerUtils.OSType.contains(\"Mac\")) { main.java.com.dbyl.appiumServer.AppiumServerUtils.definedNode = \"/Applications/Appium.app/Contents/Resources/node_modules/appium/bin/appium.js\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4672/buggy-version/src.main.java.com.dbyl.appiumServer.AppiumServerUtils.java", "BodyUseAPI": [], "Fixed commit": "ffd92a0ce95f20d3b2276d599155cec324313fde", "Url": "https://api.github.com/repos/tobecrazy/appiumDemo", "Date": "2016-03-07T16:01:24Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (e != null) { android.widget.Toast.makeText(getApplicationContext(), e.getMessage(), Toast.LENGTH_LONG).show(); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6449/buggy-version/src.com.quadroid.quadroidmobile.gcm.GCMIntentService.java", "BodyUseAPI": ["java.lang.Exception.printStackTrace()", "android.widget.Toast.makeText(getApplicationContext(), e.getMessage(), Toast.LENGTH_LONG).show()", "java.lang.Exception.getMessage()", "android.widget.Toast.makeText(getApplicationContext(),java.lang.String,Toast.LENGTH_LONG)"], "Fixed commit": "5ad3957a9c4c0fa238af90713bbdeed1d7029562", "Url": "https://api.github.com/repos/Quadroid-Wildau/Quadroid-Android", "Date": "2014-01-02T22:48:29Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getConfig().getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i <= topPlayers) { i++; sender.sendMessage(util.colorize(util.stringPlayerize(util.voterize(message, entry.getValue()), entry.getKey()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3515/buggy-version/src.main.java.Me.MrEditor97.CommandVoter.Messages.Message.java", "BodyUseAPI": [], "Fixed commit": "cd7f4cea60f819224df8baac57aa7ee79bb9c661", "Url": "https://api.github.com/repos/MrEditor97/CommandVoter", "Date": "2014-08-11T17:40:01Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((treeNode.getParent()) != null) { com.relayd.web.bridge.TreeNodeRow relayNode = ((com.relayd.web.bridge.TreeNodeRow) (treeNode.getParent().getData())); com.relayd.web.bridge.TreeNodeRow participantRow = ((com.relayd.web.bridge.TreeNodeRow) (treeNode.getData())); com.relayd.Relay relay = relayNode.getRelay(); relay.addParticipant(participantRow.getParticipant(), Position.FIRST); com.relayd.ejb.RelayGateway jpaGateway = com.relayd.ejb.RelayGatewayFactory.get(GatewayType.JPA); jpaGateway.set(relay); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/374/buggy-version/relayD-web.src.main.java.com.relayd.web.bridge.RelayBridgeImpl.java", "BodyUseAPI": ["treeNode.getParent().getData()", "org.primefaces.model.TreeNode.getParent()", "org.primefaces.model.TreeNode.getData()"], "Fixed commit": "157d4eca166d43f867a0816c1e90cb452421597e", "Url": "https://api.github.com/repos/Rasumichin/relayD", "Date": "2016-11-25T12:10:21Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cdrolet.cdirect.repository.CustomerRepository.findOne(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((customer.getSubscription()) != null) { customer.getSubscription().getCustomers().remove(customer); customer.setSubscription(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3288/buggy-version/cdirect-service-impl.src.main.java.org.cdrolet.cdirect.service.CustomerServiceImpl.java", "BodyUseAPI": ["customer.getSubscription().getCustomers().remove(org.cdrolet.cdirect.entity.Customer)", "org.cdrolet.cdirect.entity.Customer.getSubscription()", "org.cdrolet.cdirect.entity.Customer.setSubscription(<nulltype>)", "customer.getSubscription().getCustomers()"], "Fixed commit": "a78275e4a6cd8c01992803b2d8aa75bc34534df1", "Url": "https://api.github.com/repos/cdrolet/cdirect", "Date": "2016-04-18T02:13:22Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (closest != null) { res.add(closest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6133/buggy-version/src.me.desht.scrollingmenusign.views.SMSRedstoneView.java", "BodyUseAPI": ["java.util.List<org.bukkit.entity.Player>.add(org.bukkit.entity.Player)"], "Fixed commit": "4573dfa5373cb58a60bccdfd0a87905eb35c5e0c", "Url": "https://api.github.com/repos/desht/ScrollingMenuSign", "Date": "2011-11-01T10:54:32Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"samsung\".equals(Build.MANUFACTURER)) && ((\"ha3gub\".equals(Build.PRODUCT)) || (\"k3gxx\".equals(Build.PRODUCT)))) { forceClassic = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5185/buggy-version/cam2.src.main.java.com.commonsware.cwac.cam2.AbstractCameraActivity.java", "BodyUseAPI": [], "Fixed commit": "b298a6d1c0706999e001778b4dbe1c7687a63405", "Url": "https://api.github.com/repos/rabl-dev/cwac-cam2", "Date": "2015-10-03T19:11:20Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResources().getConfiguration().orientation) == (android.content.res.Configuration.ORIENTATION_PORTRAIT)) { baseAdapter = ((android.widget.BaseAdapter) (((android.widget.HeaderViewListAdapter) (adapter)).getWrappedAdapter())); }else { baseAdapter = ((android.widget.BaseAdapter) (adapter)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/384/buggy-version/TP4.src.com.juliendelrio.tp4.RepoDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "92fd2f7192edab42d599293e986cef5a4783d51d", "Url": "https://api.github.com/repos/JulienDelRio/CoursLPBlagnac", "Date": "2014-06-01T22:33:19Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["btwmods.io.Settings.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (bannedColors != null) for (java.lang.String bannedColor : bannedColors.split(\"[,; ]+\")) this.bannedColors.add(bannedColor.toLowerCase().trim());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4770/buggy-version/src.btwmod.chat.mod_Chat.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "7db550ee0d062126ad2aaa0f1b2b7faf916bd62a", "Url": "https://api.github.com/repos/btwmodsbiz/server-mods", "Date": "2013-01-02T04:25:30Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["btwmods.io.Settings.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (bannedUsers != null) for (java.lang.String bannedUser : bannedUsers.split(\"[,; ]+\")) this.bannedUsers.add(bannedUser.toLowerCase().trim());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4770/buggy-version/src.btwmod.chat.mod_Chat.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "7db550ee0d062126ad2aaa0f1b2b7faf916bd62a", "Url": "https://api.github.com/repos/btwmodsbiz/server-mods", "Date": "2013-01-02T04:25:30Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.mps.openapi.module.SModule.getUsedLanguageVersion(org.jetbrains.mps.openapi.language.SLanguage)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ver == (-1)) { ver = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/456/buggy-version/plugins.migrationAssistant.solutions.component.source_gen.jetbrains.mps.migration.component.util.MigrationsUtil.java", "BodyUseAPI": [], "Fixed commit": "0e7ac642784d58cbc191af41dd6039aeddcf30b4", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2014-12-17T19:12:08Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chatText.getText().toString().length()) > 0) sendChatMessage();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6171/buggy-version/app.src.main.java.com.tutorial.chatapps.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2e0abe5e7d2a375eccde1b89aa16bcdfaacdd050", "Url": "https://api.github.com/repos/ashishonce/ChatApplication", "Date": "2016-07-26T23:51:26Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (pageSize != null) { result.setPageSize(pageSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4214/buggy-version/webApp.src.main.java.com.uyoung.web.controller.BaseController.java", "BodyUseAPI": ["com.uyoung.core.base.bean.Page.setPageSize(java.lang.Integer)"], "Fixed commit": "7bf4912f78410a845b289945a6558b7d42f8ee21", "Url": "https://api.github.com/repos/youngcommon/uYoung", "Date": "2015-11-04T00:26:30Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (page != null) { result.setPageNum(page); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4214/buggy-version/webApp.src.main.java.com.uyoung.web.controller.BaseController.java", "BodyUseAPI": ["com.uyoung.core.base.bean.Page.setPageNum(java.lang.Integer)"], "Fixed commit": "7bf4912f78410a845b289945a6558b7d42f8ee21", "Url": "https://api.github.com/repos/youngcommon/uYoung", "Date": "2015-11-04T00:26:30Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position) != null) { chunk.append(((((\"<position id=\\\"\" + (position.getId())) + \"\\\">\") + (position.getLocalizedName(ses.getLang()))) + \"</position>\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4923/buggy-version/rule.Staff.Resources.scripts.staff.model.Employee.java", "BodyUseAPI": [], "Fixed commit": "ae678aefa131f7edf196141020f8a1a2fcd63e3b", "Url": "https://api.github.com/repos/exponentus/officeframe", "Date": "2016-05-31T14:12:18Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cmd.equalsIgnoreCase(\"scr_on\")) || (cmd.equalsIgnoreCase(\"scr_off\"))) { handleClick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2173/buggy-version/app.src.main.java.ru.perm.trubnikov.clicklight.ClickFlashService.java", "BodyUseAPI": [], "Fixed commit": "d6ae5d9c34b622d29433010f26e96d8248fa76d5", "Url": "https://api.github.com/repos/tral/Triple-Click-Flashlight", "Date": "2015-02-27T08:26:28Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vesperin.cue.bsg.visitors.BlockVisitor.getCodeBlocks()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(visited.contains(children.get(0)))) { outsiders.add(children.get(0)); children.get(0).accept(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4951/buggy-version/src.main.java.com.vesperin.cue.bsg.visitors.BlockSegmentationVisitor.java", "BodyUseAPI": ["java.util.List<org.eclipse.jdt.core.dom.Block>.get(int)", "java.util.Set<org.eclipse.jdt.core.dom.ASTNode>.add(children.get(0))", "java.util.List<org.eclipse.jdt.core.dom.Block>.get(int)", "children.get(0).accept(com.vesperin.cue.bsg.visitors.BlockSegmentationVisitor)"], "Fixed commit": "80e1e034af385e0e4a07cbcf7b3e44a32927e118", "Url": "https://api.github.com/repos/vesperin/cue", "Date": "2016-04-21T16:45:19Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.Integer>.next()", "table.getRow(j).getCells()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cells[(key - 1)].getPhrase().getContent().toString().contains(\".\")) { aggrType[aggrResIndex] = \"float\"; aggrRes[aggrResIndex] += java.lang.Float.parseFloat(cells[(key - 1)].getPhrase().getContent().toString()); }else if (cells[(key - 1)].getPhrase().getContent().toString().contains(\",\")) { aggrType[aggrResIndex] = \"float\"; java.lang.String my_new_str = cells[(key - 1)].getPhrase().getContent().toString().replaceAll(\",\", \".\"); aggrRes[aggrResIndex] += java.lang.Float.parseFloat(my_new_str); }else { aggrType[aggrResIndex] = \"int\"; aggrRes[aggrResIndex] += java.lang.Float.parseFloat(cells[(key - 1)].getPhrase().getContent().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/515/buggy-version/src.main.java.ru.onyx.clipper.model.ReportRepeatingRow.java", "BodyUseAPI": ["java.lang.Float.parseFloat(cells[(key - 1)].getPhrase().getContent().toString())", "cells[(key - 1)].getPhrase()", "cells[(key - 1)].getPhrase()", "cells[(key - 1)].getPhrase()", "cells[(key - 1)].getPhrase().getContent()", "cells[(key - 1)].getPhrase().getContent().toString()", "cells[(key - 1)].getPhrase().getContent()", "cells[(key - 1)].getPhrase()", "cells[(key - 1)].getPhrase().getContent()", "java.lang.Float.parseFloat(cells[(key - 1)].getPhrase().getContent().toString())", "cells[(key - 1)].getPhrase().getContent().toString().contains(java.lang.String)", "cells[(key - 1)].getPhrase().getContent().toString()", "cells[(key - 1)].getPhrase().getContent().toString().replaceAll(java.lang.String,java.lang.String)", "cells[(key - 1)].getPhrase().getContent().toString()", "cells[(key - 1)].getPhrase().getContent().toString()", "cells[(key - 1)].getPhrase().getContent()"], "Fixed commit": "cb1102a614ee098d367757b9c000dc75c445054e", "Url": "https://api.github.com/repos/MasterSPB/pdf-generator", "Date": "2014-07-19T13:19:19Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.DimitriVranken.DatAdventure.DatAdventure.applicationProperties.getBoolean(\"debug_mode\", false)) { character_delay = 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7606/buggy-version/src.src.com.DimitriVranken.DatAdventure.DatAdventure.java", "BodyUseAPI": [], "Fixed commit": "1486320d12675d99a125dd9d4a47132e657ab9bf", "Url": "https://api.github.com/repos/drasive/dat-adventure", "Date": "2014-08-22T14:07:11Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isReqsValid) { infoLabel.setText(\"*Select at least one requirement\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6739/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.view.SessionPanel.java", "BodyUseAPI": [], "Fixed commit": "26a6b90e37986154fc574b3e2a30250707280110", "Url": "https://api.github.com/repos/alexbragdon/wpi-suite", "Date": "2014-04-04T02:53:27Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (balance < 0) { updateBalance((balance + amount)); }else { updateBalance((balance - amount)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/987/buggy-version/main.src.InitialScreen.java", "BodyUseAPI": ["InitialScreen.updateBalance(double)", "InitialScreen.updateBalance(double)"], "Fixed commit": "fe4eb15f824e05df05ac7121bede264e77bec294", "Url": "https://api.github.com/repos/luckek/Gemini", "Date": "2017-11-13T06:20:05Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (root != null) { elemStack.add(root); idxStack.add(0); maybeAdvance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4912/buggy-version/ArtIterator.java", "BodyUseAPI": [], "Fixed commit": "4715ef3e2f4a1a06c32cbc04f215de0300714135", "Url": "https://api.github.com/repos/ankurdave/part", "Date": "2015-04-03T01:20:28Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWithoutStartTime(task)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6590/buggy-version/src.tkLogic.Logic.java", "BodyUseAPI": [], "Fixed commit": "7a254ceb93ada30b1717d5c1d267b9dda447ac6f", "Url": "https://api.github.com/repos/cs2103aug2014-t16-1j/main", "Date": "2014-11-05T11:58:41Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gp.getChildAt(i)) instanceof android.view.ViewGroup) { boolean value = recurseGroup(((android.content.Context) (context)), ((android.view.ViewGroup) (gp.getChildAt(i)))); if (value) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/407/buggy-version/android.src.com.freshplanet.nativeExtensions.C2DMBroadcastReceiver.java", "BodyUseAPI": ["android.view.ViewGroup.getChildAt(int)", "com.freshplanet.nativeExtensions.C2DMBroadcastReceiver.recurseGroup(android.content.Context,((android.view.ViewGroup) (gp.getChildAt(i))))"], "Fixed commit": "38f3388fc43f6541448d7338b41b3adabcf6cedd", "Url": "https://api.github.com/repos/rozdonmobile/ANE-Push-Notification", "Date": "2013-03-06T23:05:19Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.freshplanet.nativeExtensions.C2DMBroadcastReceiver.notification_text_color) != null) { contentView.setTextColor(com.freshplanet.nativeExtensions.C2DMBroadcastReceiver.customLayoutDescription, com.freshplanet.nativeExtensions.C2DMBroadcastReceiver.notification_text_color); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/407/buggy-version/android.src.com.freshplanet.nativeExtensions.C2DMBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "38f3388fc43f6541448d7338b41b3adabcf6cedd", "Url": "https://api.github.com/repos/rozdonmobile/ANE-Push-Notification", "Date": "2013-03-06T23:05:19Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.freshplanet.nativeExtensions.C2DMBroadcastReceiver.notification_text_color) != null) { contentView.setTextColor(com.freshplanet.nativeExtensions.C2DMBroadcastReceiver.customLayoutTitle, com.freshplanet.nativeExtensions.C2DMBroadcastReceiver.notification_text_color); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/407/buggy-version/android.src.com.freshplanet.nativeExtensions.C2DMBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "38f3388fc43f6541448d7338b41b3adabcf6cedd", "Url": "https://api.github.com/repos/rozdonmobile/ANE-Push-Notification", "Date": "2013-03-06T23:05:19Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.seafile.seadroid2.util.Utils.isNetworkOn())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/9051/buggy-version/src.com.seafile.seadroid2.ui.fragment.ReposFragment.java", "BodyUseAPI": [], "Fixed commit": "691566746e85b0f544e53ef4ad812ebc4741ea25", "Url": "https://api.github.com/repos/Logan676/seadroid", "Date": "2014-11-30T18:30:09Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.seafile.seadroid2.util.Utils.isNetworkOn())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/9051/buggy-version/src.com.seafile.seadroid2.ui.fragment.ReposFragment.java", "BodyUseAPI": [], "Fixed commit": "691566746e85b0f544e53ef4ad812ebc4741ea25", "Url": "https://api.github.com/repos/Logan676/seadroid", "Date": "2014-11-30T18:30:09Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.springframework.util.StringUtils.hasText(nearLocationStr)) this.nearLocation = com.idrene.emefana.rest.resources.ResourceUtil.nearLocationString(nearLocationStr);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4686/buggy-version/src.main.java.com.idrene.emefana.domain.SearchCriteria.java", "BodyUseAPI": ["com.idrene.emefana.rest.resources.ResourceUtil.nearLocationString(java.lang.String)"], "Fixed commit": "34564522acfb2381fc1622d0d78e725cfc3ec1fb", "Url": "https://api.github.com/repos/IDRENE/emefana", "Date": "2015-06-22T00:29:59Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.corefacility.bioinformatics.irida.service.AnalysisSubmissionService.update(ca.corefacility.bioinformatics.irida.model.workflow.submission.AnalysisSubmission)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (completedSubmission.getUpdateSamples()) { try { analysisSubmissionSampleProcessor.updateSamples(completedSubmission); } catch (java.lang.Exception e) { ca.corefacility.bioinformatics.irida.service.analysis.execution.galaxy.AnalysisExecutionServiceGalaxyAsync.logger.error(((\"Error updating corresponding samples with analysis results for AnalysisSubmission = [\" + (completedSubmission.getId())) + \"]. Skipping this step.\"), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4411/buggy-version/src.main.java.ca.corefacility.bioinformatics.irida.service.analysis.execution.galaxy.AnalysisExecutionServiceGalaxyAsync.java", "BodyUseAPI": ["ca.corefacility.bioinformatics.irida.pipeline.results.AnalysisSubmissionSampleProcessor.updateSamples(ca.corefacility.bioinformatics.irida.model.workflow.submission.AnalysisSubmission)", "org.slf4j.Logger.error(((\"Error updating corresponding samples with analysis results for AnalysisSubmission = [\" + (completedSubmission.getId())) + \"]. Skipping this step.\"),java.lang.Exception)", "ca.corefacility.bioinformatics.irida.model.workflow.submission.AnalysisSubmission.getId()"], "Fixed commit": "d394b8a71cd2c181d0943676778a06bc7f898c30", "Url": "https://api.github.com/repos/phac-nml/irida", "Date": "2017-11-29T23:34:54Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.saiku.olap.query2.util.Fat.resolveFlag(java.lang.String,org.saiku.query.QueryLevel)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((exp.size()) == 1) { ql.setRangeEndExpr(exp.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7193/buggy-version/saiku-core.saiku-service.src.main.java.org.saiku.olap.query2.util.Fat.java", "BodyUseAPI": ["org.saiku.query.QueryLevel.setRangeEndExpr(java.lang.String)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "15eb443ffd1c389bdd2c364fcbfab4fa45d1ea42", "Url": "https://api.github.com/repos/pstoellberger/saiku", "Date": "2015-09-24T08:55:42Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (DateFlag.IGNORE.toString().equals(flag.toUpperCase())) { return exprs; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7193/buggy-version/saiku-core.saiku-service.src.main.java.org.saiku.olap.query2.util.Fat.java", "BodyUseAPI": [], "Fixed commit": "15eb443ffd1c389bdd2c364fcbfab4fa45d1ea42", "Url": "https://api.github.com/repos/pstoellberger/saiku", "Date": "2015-09-24T08:55:42Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.saiku.olap.query2.util.Fat.resolveFlag(java.lang.String,org.saiku.query.QueryLevel)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((exp.size()) == 1) { ql.setRangeStartExpr(exp.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7193/buggy-version/saiku-core.saiku-service.src.main.java.org.saiku.olap.query2.util.Fat.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "org.saiku.query.QueryLevel.setRangeStartExpr(java.lang.String)"], "Fixed commit": "15eb443ffd1c389bdd2c364fcbfab4fa45d1ea42", "Url": "https://api.github.com/repos/pstoellberger/saiku", "Date": "2015-09-24T08:55:42Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"F:\" + (DateFlag.IGNORE.toString())).equals(ql.getRangeEndSyn())) { rangeEnd = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7193/buggy-version/saiku-core.saiku-service.src.main.java.org.saiku.olap.query2.util.Thin.java", "BodyUseAPI": [], "Fixed commit": "15eb443ffd1c389bdd2c364fcbfab4fa45d1ea42", "Url": "https://api.github.com/repos/pstoellberger/saiku", "Date": "2015-09-24T08:55:42Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.state.getBlock()) == (rewbot.minecraft.tutorial.blocks.MmaBlocks.demonOre)) { event.drops.clear(); MmaBlocks.demonOre.increaseDangerLevel(); onDropSpawnMonster(event.world, event.pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7291/buggy-version/src.main.java.rewbot.minecraft.tutorial.handler.MmaDemonOreDropHandler.java", "BodyUseAPI": ["rewbot.minecraft.tutorial.handler.MmaDemonOreDropHandler.onDropSpawnMonster(event.world,event.pos)", "event.drops.clear()"], "Fixed commit": "f164d0b4dbfc21bd32e3d4f8beeca92f0e1dc170", "Url": "https://api.github.com/repos/rewbotV86/minecraft-modding-adventure", "Date": "2016-06-09T18:29:14Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (routingAction == (net.floodlightcontroller.routing.IRoutingDecision.RoutingAction.NONE)) { return Command.STOP; }else { return Command.CONTINUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6655/buggy-version/src.main.java.net.floodlightcontroller.savi.Provider.java", "BodyUseAPI": [], "Fixed commit": "061653d1a9c4c80f69597ff4a89c99f48bd9ddfc", "Url": "https://api.github.com/repos/netarchlab-savi/savi-floodlight", "Date": "2016-05-23T12:14:35Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.root) != null) { for (bio.genetics.DigraphGene.GraphEdge ed : this.edges) ed.recursionReset(); physics.PointMass init_pm = this.root.createPointMass(null); init_pm.initPosition(posx, posy); this.all_points.add(init_pm); traverse_helper(this.root); }else { java.lang.System.err.println(\"Attempting to create an empty organism.. creating a single pointmass instead\"); this.all_points.add(new physics.PointMass(1.0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8350/buggy-version/src.bio.genetics.DigraphGene.java", "BodyUseAPI": [], "Fixed commit": "eda4ef94e083811ea13e762c411d9e4045f7107b", "Url": "https://api.github.com/repos/wrongu/Evolution", "Date": "2014-01-28T00:50:20Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endX > (level.width)) endX = level.width;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5895/buggy-version/src.level.maps.LightManager.java", "BodyUseAPI": [], "Fixed commit": "201d19d98d305a9b206a43847bd11311a4863f43", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-02-04T01:42:47Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startY < 0) startY = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5895/buggy-version/src.level.maps.LightManager.java", "BodyUseAPI": [], "Fixed commit": "201d19d98d305a9b206a43847bd11311a4863f43", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-02-04T01:42:47Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (dockerTlsVerify != null) { java.lang.String trimmed = dockerTlsVerify.trim(); this.dockerTlsVerify = (\"true\".equalsIgnoreCase(trimmed)) || (\"1\".equals(trimmed)); }else { this.dockerTlsVerify = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1453/buggy-version/src.main.java.com.github.dockerjava.core.DockerClientConfig.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "7d1f64f7678b9857b3605558434c76d140aac172", "Url": "https://api.github.com/repos/docker-java/docker-java", "Date": "2016-06-02T21:19:50Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debug) { java.lang.System.out.println((\"===== \" + (testClass.getName()))); java.lang.System.out.println(output); java.lang.System.out.println(\"=====\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/376/buggy-version/junit.src.main.java.cucumber.runtime.junit.SanityChecker.java", "BodyUseAPI": [], "Fixed commit": "48f55294d9dd0a8731c0f057e3cfc3355d8291f5", "Url": "https://api.github.com/repos/Mishail/cucumber-jvm", "Date": "2012-10-24T16:11:11Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.constellio.app.ui.pages.SIP.BagInfoSIPPresenter.getAllBagInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bagInfoVOList.isEmpty()) { cb.setVisible(false); cb.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4348/buggy-version/app.src.com.constellio.app.ui.pages.SIP.BagInfoSIPForm.java", "BodyUseAPI": [], "Fixed commit": "6e87230e8119d3b728e632fc7db58f3e6750564f", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-11-21T16:47:10Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (emptyHistoryOnAdd) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7945/buggy-version/applications.plugins.org.csstudio.trends.databrowser2.src.org.csstudio.trends.databrowser2.model.PVSamples.java", "BodyUseAPI": [], "Fixed commit": "3c8d5ff070c25875d66a804ee42603cb3fc1aa70", "Url": "https://api.github.com/repos/css-iter/cs-studio", "Date": "2014-03-08T08:09:11Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numParameters > 4) version = ((org.infinispan.container.versioning.EntryVersion) (parameters[(i++)])); else version = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6522/buggy-version/core.src.main.java.org.infinispan.statetransfer.StateRequestCommand.java", "BodyUseAPI": [], "Fixed commit": "c4a8aea2fbce1f3cdaf551037821bdc1d70a7650", "Url": "https://api.github.com/repos/pruivo/infinispan", "Date": "2013-10-06T22:33:11Z"},
{"Line": "=>2067", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((highestCardZero) > 0) updateHighestCardZero();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4410/buggy-version/app.src.main.java.com.boardgame.friday.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "841ccb87fdabe33e3919c8ed5cb77f519b9c487a", "Url": "https://api.github.com/repos/coreymarchetti/FridayApp", "Date": "2016-07-01T19:42:16Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fs.exists(path)) { fs.delete(path, isDirectory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6447/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.planner.sql.handlers.CreateFunctionHandler.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.delete(org.apache.hadoop.fs.Path,boolean)"], "Fixed commit": "231d269e13c67815535af9fbcf0f1bf2dece3f59", "Url": "https://api.github.com/repos/arina-ielchiieva/drill", "Date": "2017-03-06T11:34:56Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.axelor.rpc.ActionRequest.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((context.get(\"startCurrency\")) instanceof com.axelor.apps.base.db.Currency) { fromCurrency = ((com.axelor.apps.base.db.Currency) (context.get(\"startCurrency\"))); toCurrency = ((com.axelor.apps.base.db.Currency) (context.get(\"endCurrency\"))); }else { java.util.Map startCurrency = ((java.util.Map) (context.get(\"startCurrency\"))); java.util.Map endCurrency = ((java.util.Map) (context.get(\"endCurrency\"))); fromCurrency = currencyRepo.find(java.lang.Long.parseLong(startCurrency.get(\"id\").toString())); toCurrency = currencyRepo.find(java.lang.Long.parseLong(endCurrency.get(\"id\").toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4967/buggy-version/axelor-base.src.main.java.com.axelor.apps.base.web.CurrencyConversionLineController.java", "BodyUseAPI": ["com.axelor.rpc.Context.get(java.lang.String)", "com.axelor.rpc.Context.get(java.lang.String)", "com.axelor.rpc.Context.get(java.lang.String)", "com.axelor.rpc.Context.get(java.lang.String)"], "Fixed commit": "3d2b9461f494d521ea24430c2427a8745b14c26f", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2015-04-30T06:19:50Z"},
{"Line": "=>550", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.empcraft.vsr.VoxelMask>.get(player.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mask.contains(player.getLocation())) { lastMask.remove(player.getName()); lastregion.put(player.getName(), false); if (CheckPerm(player, \"vsr.notify\")) { Msg(player, GetMsg(\"MSG1\")); } }else if (CheckPerm(player, \"vsr.notify.farewell\")) { if (lastregion.containsKey(player.getName())) { if ((lastregion.get(player.getName())) == true) { Msg(player, GetMsg(\"FAREWELL\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6361/buggy-version/src.com.empcraft.vsr.VoxelSniperRegions.java", "BodyUseAPI": ["org.bukkit.entity.Player.getName()", "com.empcraft.vsr.VoxelSniperRegions.CheckPerm(org.bukkit.entity.Player,java.lang.String)", "java.util.Map<java.lang.String, java.lang.Boolean>.get(player.getName())", "java.util.Map<java.lang.String, com.empcraft.vsr.VoxelMask>.remove(player.getName())", "java.util.Map<java.lang.String, java.lang.Boolean>.containsKey(player.getName())", "com.empcraft.vsr.VoxelSniperRegions.Msg(org.bukkit.entity.Player,java.lang.String)", "org.bukkit.entity.Player.getName()", "com.empcraft.vsr.VoxelSniperRegions.Msg(org.bukkit.entity.Player,java.lang.String)", "org.bukkit.entity.Player.getName()", "org.bukkit.entity.Player.getName()", "java.util.Map<java.lang.String, java.lang.Boolean>.put(player.getName(),boolean)", "com.empcraft.vsr.VoxelSniperRegions.CheckPerm(org.bukkit.entity.Player,java.lang.String)"], "Fixed commit": "80a080242e0fc3c8699bd8e7869778e8c178074d", "Url": "https://api.github.com/repos/boy0001/VoxelSniperRegions", "Date": "2014-05-03T07:09:21Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (imageVersion == null) { throw new java.lang.AssertionError(\"No `docker.image.version` or `project.version` system properties defined so can't default the docker image version!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/99/buggy-version/kibana.src.main.java.io.fabric8.apps.kibana.KibanaModelProcessor.java", "BodyUseAPI": [], "Fixed commit": "0de82b3b04b0b3c2d4c89b1668e1e9d795bc8c48", "Url": "https://api.github.com/repos/jimmidyson/fabric8-devops", "Date": "2016-03-11T15:34:43Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(obj instanceof de.bmoth.modelchecker.StateSpaceNode)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4537/buggy-version/src.main.java.de.bmoth.modelchecker.StateSpaceNode.java", "BodyUseAPI": [], "Fixed commit": "c2ce2693d9a2cb9a41f24962a47f6a675f7b99e7", "Url": "https://api.github.com/repos/bmoth-mc/bmoth", "Date": "2017-07-15T14:08:11Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == obj) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4537/buggy-version/src.main.java.de.bmoth.modelchecker.StateSpaceNode.java", "BodyUseAPI": [], "Fixed commit": "c2ce2693d9a2cb9a41f24962a47f6a675f7b99e7", "Url": "https://api.github.com/repos/bmoth-mc/bmoth", "Date": "2017-07-15T14:08:11Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hu.bme.mit.massif.simulink.api.util.bus.BusSignalMappingCreator.findBusCreatorOfIncomigBus(hu.bme.mit.massif.simulink.BusSelector)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (origin != null) { if ((origin.specification) == null) { handleIncompleteMappings(origin.outPort, selector.getMappings()); }else { createBusMappingUsingCreator(selector, origin.specification); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2731/buggy-version/plugins.hu.bme.mit.massif.simulink.api.src.hu.bme.mit.massif.simulink.api.util.bus.BusSignalMappingCreator.java", "BodyUseAPI": ["hu.bme.mit.massif.simulink.api.util.bus.BusSignalMappingCreator.handleIncompleteMappings(hu.bme.mit.massif.simulink.OutPort,selector.getMappings())", "hu.bme.mit.massif.simulink.api.util.bus.BusSignalMappingCreator.createBusMappingUsingCreator(hu.bme.mit.massif.simulink.BusSelector,hu.bme.mit.massif.simulink.BusSpecification)"], "Fixed commit": "f6a7e1ff64c44e6abc52b0b80ef3d48690c2b0da", "Url": "https://api.github.com/repos/viatra/massif", "Date": "2017-06-30T13:04:28Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (values == null) { if (optionality == (ParamOptionality.MANDATORY)) { com.vangav.backend.play_framework.param.ParamValidatorInl.throwInvalidParam(name); }else { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/535/buggy-version/src.com.vangav.backend.play_framework.param.ParamValidatorInl.java", "BodyUseAPI": [], "Fixed commit": "9ea53756f3c99338252f6ef42e8436eb0aa99d2e", "Url": "https://api.github.com/repos/vangav/vos_backend", "Date": "2016-10-25T13:58:48Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.vangav.backend.play_framework.request.RequestProperties.i().getBooleanProperty(RequestProperties.kValidateParam)) == false) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/535/buggy-version/src.com.vangav.backend.play_framework.param.ParamValidatorInl.java", "BodyUseAPI": [], "Fixed commit": "9ea53756f3c99338252f6ef42e8436eb0aa99d2e", "Url": "https://api.github.com/repos/vangav/vos_backend", "Date": "2016-10-25T13:58:48Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((values.length) == 0) { if (optionality == (ParamOptionality.MANDATORY)) { com.vangav.backend.play_framework.param.ParamValidatorInl.throwInvalidParam(name); }else { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/535/buggy-version/src.com.vangav.backend.play_framework.param.ParamValidatorInl.java", "BodyUseAPI": [], "Fixed commit": "9ea53756f3c99338252f6ef42e8436eb0aa99d2e", "Url": "https://api.github.com/repos/vangav/vos_backend", "Date": "2016-10-25T13:58:48Z"},
{"Line": "=>2318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (first == null) { return second == null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7832/buggy-version/rxjava-core.src.main.java.rx.Observable.java", "BodyUseAPI": [], "Fixed commit": "b753147c631841a4492fa5432e1f2ff86cc8a6ab", "Url": "https://api.github.com/repos/jloisel/RxJava", "Date": "2013-12-07T15:01:17Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (synthesijer.jcfrontend.JCFrontendUtils.isAnnotatedBy(decl.mods.annotations, \"unsynthesizable\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/9132/buggy-version/src.synthesijer.jcfrontend.JCTopVisitor.java", "BodyUseAPI": [], "Fixed commit": "0ff0528fb700ce3ad42b8d820c68339edf23cecb", "Url": "https://api.github.com/repos/synthesijer/synthesijer", "Date": "2016-03-21T12:12:05Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kwstudios.play.ragemode.gameLogic.PlayerList.getPlayersInGame(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((playersInGame[i]) != null) { org.bukkit.Bukkit.getPlayer(java.util.UUID.fromString(playersInGame[i])).sendMessage(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8528/buggy-version/src.org.kwstudios.play.ragemode.toolbox.GameBroadcast.java", "BodyUseAPI": ["java.util.UUID.fromString(java.lang.String)", "org.bukkit.Bukkit.getPlayer(java.util.UUID)", "org.bukkit.Bukkit.getPlayer(java.util.UUID.fromString(playersInGame[i])).sendMessage(java.lang.String)"], "Fixed commit": "a1b78ee34316dad7c765878cd146bdbe98575953", "Url": "https://api.github.com/repos/KWStudios/RageMode", "Date": "2015-08-14T18:39:47Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kwstudios.play.ragemode.gameLogic.PlayerList.getPlayersInGame(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((playersInGame[i]) != null) org.kwstudios.play.ragemode.gameLogic.PlayerList.removePlayer(org.bukkit.Bukkit.getPlayer(java.util.UUID.fromString(playersInGame[i])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8528/buggy-version/src.org.kwstudios.play.ragemode.gameLogic.PlayerList.java", "BodyUseAPI": ["org.kwstudios.play.ragemode.gameLogic.PlayerList.removePlayer(org.bukkit.Bukkit.getPlayer(java.util.UUID.fromString(playersInGame[i])))", "org.bukkit.Bukkit.getPlayer(java.util.UUID)", "java.util.UUID.fromString(java.lang.String)"], "Fixed commit": "a1b78ee34316dad7c765878cd146bdbe98575953", "Url": "https://api.github.com/repos/KWStudios/RageMode", "Date": "2015-08-14T18:39:47Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v <= 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/886/buggy-version/app.src.main.java.com.application.material.bookmarkswallet.app.fragments.BookmarkListFragment.java", "BodyUseAPI": [], "Fixed commit": "c1bae65589e270f97ac3186e2c56ce2fb2ec60c2", "Url": "https://api.github.com/repos/dadoz/BookmarksWallet-material", "Date": "2015-06-19T09:27:18Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.trafficCounter) != null) { return trafficCounter.getNumSockets(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4597/buggy-version/src.main.java.org.lantern.state.Peer.java", "BodyUseAPI": [], "Fixed commit": "1df7c3063b2a14e33107c3b5d7b551ba4f9c86bd", "Url": "https://api.github.com/repos/getlantern/lantern", "Date": "2013-02-28T19:34:02Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["teammemes.tritonbudget.db.MenuDataSource.cursorToMenu(android.database.Cursor)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((menus.size()) == 0) || (!(menus.get(((menus.size()) - 1)).equals(menu1.getCategory())))) { menus.add(menu1.getCategory()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7637/buggy-version/app.src.main.java.teammemes.tritonbudget.db.MenuDataSource.java", "BodyUseAPI": ["teammemes.tritonbudget.Menu.getCategory()", "java.util.List<java.lang.String>.add(menu1.getCategory())"], "Fixed commit": "31f9ec120421ecf3377bb1382f30b8fee4f264cc", "Url": "https://api.github.com/repos/knlim95/TritonBudget", "Date": "2017-03-10T04:17:55Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (annotation != null) { return annotation; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1075/buggy-version/errai-security.errai-security-server.src.main.java.org.jboss.errai.security.server.ServerSecurityRoleInterceptor.java", "BodyUseAPI": [], "Fixed commit": "69427e1d1c5df8d2cfacf79bbad8badb3328c699", "Url": "https://api.github.com/repos/csadilek/errai", "Date": "2014-03-25T19:46:49Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (left == right) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6295/buggy-version/railo-java.railo-core.src.railo.runtime.op.Operator.java", "BodyUseAPI": [], "Fixed commit": "8e76da8b8b0fa324ca3cfd5e147a51fa0e2e7d75", "Url": "https://api.github.com/repos/clitnak/mcrailo", "Date": "2013-05-17T17:06:46Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (left == right) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6295/buggy-version/railo-java.railo-core.src.railo.runtime.op.Operator.java", "BodyUseAPI": [], "Fixed commit": "8e76da8b8b0fa324ca3cfd5e147a51fa0e2e7d75", "Url": "https://api.github.com/repos/clitnak/mcrailo", "Date": "2013-05-17T17:06:46Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connDoorsExcludingOrigin.isEmpty()) { return originDoor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2900/buggy-version/TisButAScratch.src.main.java.scratch.model.DoorHandler.java", "BodyUseAPI": [], "Fixed commit": "b4236e7f8896d3fa36c04802abb05152766896e4", "Url": "https://api.github.com/repos/Tejpbit/TDA367", "Date": "2014-05-12T08:27:21Z"},
{"Line": "=>745", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((status) == 0) { if ((filterCategory) > 0) { reportByCategoryList(); }else { refreshReportLists(); } showCategories(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3229/buggy-version/Core.src.com.ushahidi.android.app.ui.tablet.ListReportFragment.java", "BodyUseAPI": [], "Fixed commit": "72d43eaed44a4dc83a98305bb7753dae0abe0c74", "Url": "https://api.github.com/repos/ushahidi/Ushahidi_Android", "Date": "2013-05-06T04:53:04Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((o1 instanceof scheduling.Job) && (o2 instanceof scheduling.Job)) { map1 = ((scheduling.Job) (o1)).getAttributes(); map2 = ((scheduling.Job) (o2)).getAttributes(); }else if ((o1 instanceof scheduling.Response) && (o2 instanceof scheduling.Response)) { map1 = ((scheduling.Response) (o1)).getAttributes(); map2 = ((scheduling.Response) (o2)).getAttributes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7478/buggy-version/src.reasoner.CrisnerReasoner.java", "BodyUseAPI": [], "Fixed commit": "a3822b6ffae3b30fbe8c8e8c30b511c5cad7eca4", "Url": "https://api.github.com/repos/maheedhar1305/TCPCompose", "Date": "2016-07-19T22:59:27Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filename == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8701/buggy-version/restapi.src.main.java.vod.filestorage.FileSystemStorageService.java", "BodyUseAPI": [], "Fixed commit": "77a4bb74e673bfca5bd7acef0e8d08baaab4ea06", "Url": "https://api.github.com/repos/anjepn/video_on_demand", "Date": "2016-11-21T14:11:26Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(boosterBoots.BoosterBoots.fuelRequired)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6872/buggy-version/src.boosterBoots.BoosterBoots.java", "BodyUseAPI": [], "Fixed commit": "d2bdf0760df901f108916e5502659838d6563ad6", "Url": "https://api.github.com/repos/4a2e532e/BoosterBoots", "Date": "2017-02-09T19:01:25Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(destroyed)) g.drawImage(image, x, y, width, height, c);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2485/buggy-version/src.Block.java", "BodyUseAPI": [], "Fixed commit": "2b06c26ae10a77cc8f243a772d67e57234cab505", "Url": "https://api.github.com/repos/rrdnd/Java-Game", "Date": "2016-08-24T22:44:19Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.RadioGroup.findViewById(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((rb != null) && (checkedId > (-1))) { android.widget.Toast.makeText(getApplicationContext(), rb.getText().toString(), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2009/buggy-version/app.src.main.java.omrobbie.com.iakbeginner.ActivityRadioButton.java", "BodyUseAPI": ["android.widget.Toast.makeText(getApplicationContext(),rb.getText().toString(),Toast.LENGTH_SHORT)", "rb.getText().toString()", "android.widget.Toast.makeText(getApplicationContext(), rb.getText().toString(), Toast.LENGTH_SHORT).show()", "android.widget.RadioButton.getText()"], "Fixed commit": "e7aa5f8eb6224b5f341d45cd7e1843b0a653d65e", "Url": "https://api.github.com/repos/omrobbie/IAK-Beginner", "Date": "2017-05-13T03:58:02Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.adf.emg.sonar.ojaudit.ResultsParser.parseInt(loc.getColumnOffset())", "java.lang.Math.min(int,line.end().lineOffset())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (lineEnd == column) { log.info(\"Found an issue location without a lenght, on rule {}.\", ruleKey); log.debug((((((((\"min: \" + lineEnd) + \" - column: \") + column) + \" - lineOffset: \") + (line.end().lineOffset())) + \" - length: \") + length)); log.debug(ruleKey); log.debug(inputFile.absolutePath()); log.debug(violation.getMessage()); log.info(\"We are manipulating the issue location to be reported to the linenum till linenum +1.\"); issueLocation = inputFile.newRange(lineNum, column, (lineNum + 1), lineEnd); }else { issueLocation = inputFile.newRange(lineNum, column, lineNum, lineEnd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4442/buggy-version/src.main.java.org.adf.emg.sonar.ojaudit.ResultsParser.java", "BodyUseAPI": ["org.sonar.api.batch.fs.InputFile.newRange(int,int,int,int)", "org.sonar.api.batch.fs.InputFile.newRange(int,int,int,int)", "org.sonar.api.utils.log.Logger.debug((((((((\"min: \" + lineEnd) + \" - column: \") + column) + \" - lineOffset: \") + (line.end().lineOffset())) + \" - length: \") + length))"], "Fixed commit": "be51973b9ace8307e5ec97b097c5daa0f160e131", "Url": "https://api.github.com/repos/adfemg/sonarqube-ojaudit", "Date": "2016-12-08T18:38:12Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hedvig.botService.enteties.UserContext.getDataEntry(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dateString == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1196/buggy-version/src.main.java.com.hedvig.botService.enteties.userContextHelpers.UserData.java", "BodyUseAPI": [], "Fixed commit": "6d252a1dc7a0fc31455e0af0054145d876fe6d4f", "Url": "https://api.github.com/repos/HedvigInsurance/bot-service", "Date": "2017-10-30T14:20:56Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((input.getRowGoal()) < (mazeDisplay.board.length)) && ((input.getColGoal()) < (mazeDisplay.board[0].length))) { mazeDisplay.character.setCharacterImageIndex((((mazeDisplay.character.getCharacterImageIndex()) + 1) % (mazeDisplay.character.getCharacterImagesArray().length))); mazeDisplay.frameIndex = ((mazeDisplay.frameIndex) + 1) % (mazeDisplay.images.length); mazeDisplay.board[input.getRowGoal()][input.getColGoal()].setGoal(new org.eclipse.swt.graphics.Image(display, mazeDisplay.images[mazeDisplay.frameIndex])); mazeDisplay.board[mazeDisplay.character.currentCellX][mazeDisplay.character.currentCellY].redraw(); mazeDisplay.board[input.getRowGoal()][input.getColGoal()].redraw(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8941/buggy-version/MVP.src.gui.MazeWindow.java", "BodyUseAPI": ["gui.MazeProperties.getColGoal()", "mazeDisplay.board[mazeDisplay.character.currentCellX][mazeDisplay.character.currentCellY].redraw()", "mazeDisplay.character.getCharacterImagesArray()", "gui.MazeProperties.getRowGoal()", "gui.MazeProperties.getColGoal()", "mazeDisplay.character.getCharacterImageIndex()", "gui.MazeProperties.getRowGoal()", "mazeDisplay.character.setCharacterImageIndex((((mazeDisplay.character.getCharacterImageIndex()) + 1) % (mazeDisplay.character.getCharacterImagesArray().length)))", "mazeDisplay.board[input.getRowGoal()][input.getColGoal()].setGoal(org.eclipse.swt.graphics.Image)", "mazeDisplay.board[input.getRowGoal()][input.getColGoal()].redraw()"], "Fixed commit": "3568d5ee21706517f3a1d482cd0d6251e23cb2f3", "Url": "https://api.github.com/repos/tomerdbz/In-java-we-trust", "Date": "2015-06-17T18:37:06Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((replaced) == 0) msg.append(\"created \").append((((this.type) + \":\") + (this.data))); else msg.append(\"replaced \").append((((this.type) + \":\") + (this.data))).append(\" with \").append((((this.type) + \":\") + (this.data)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2578/buggy-version/src.main.java.de.diddiz.LogBlock.BlockChange.java", "BodyUseAPI": [], "Fixed commit": "84e47f967b5ec29452cd5eb34178776754af8daf", "Url": "https://api.github.com/repos/Mywk/LogByte", "Date": "2013-11-02T22:37:45Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.selectFirst(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (metaElement == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5165/buggy-version/client-web-crawler.src.main.java.vip.fanrong.service.ZmzCrawlerService.java", "BodyUseAPI": [], "Fixed commit": "beb3bbb27f5849afefa41854725e9d8e881026cc", "Url": "https://api.github.com/repos/r0n9/spring-cloud", "Date": "2017-12-24T15:17:40Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lis == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5165/buggy-version/client-web-crawler.src.main.java.vip.fanrong.service.ZmzCrawlerService.java", "BodyUseAPI": [], "Fixed commit": "beb3bbb27f5849afefa41854725e9d8e881026cc", "Url": "https://api.github.com/repos/r0n9/spring-cloud", "Date": "2017-12-24T15:17:40Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parametros.containsKey(\"orderby\")) { query.append(\" ORDER BY :orderby\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2258/buggy-version/SiSaludSRL.src.main.java.ar.edu.ungs.persistence.dao.impl.turnos.TurnoDao.java", "BodyUseAPI": [], "Fixed commit": "ef4bb635a3b36a356dd7ae6a67c217666795e6ba", "Url": "https://api.github.com/repos/alefherrera/sisalud", "Date": "2017-05-21T19:40:25Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inhabitant) == null) return inhabitant; else { if (!(inhabitant.isAlive())) { empty(); } return inhabitant; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3677/buggy-version/Cell.java", "BodyUseAPI": [], "Fixed commit": "b272109cec6b61193f0f6903f438fff05f79f0af", "Url": "https://api.github.com/repos/kduggan15/Artificial-Life-Project", "Date": "2017-12-23T19:57:56Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wasLooperNull) { android.os.Looper.loop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3254/buggy-version/dexter.src.main.java.com.karumi.dexter.WorkerThread.java", "BodyUseAPI": [], "Fixed commit": "dd9d06d2e4c8eb86788f91d81504ff4ae08a6e4c", "Url": "https://api.github.com/repos/Coppernic/Dexter", "Date": "2017-07-18T08:48:05Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((playerNameList.size()) > x) { textView.setText(playerNameList.get(x)); }else { textView.setText(\"Waiting for Player...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1328/buggy-version/app.src.main.java.com.example.jacobcovey.Views.GameLobbyFragment.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "ec767d6bbd86637fa4b551753e4c92ed78972a97", "Url": "https://api.github.com/repos/jacobcovey/CS_340_project", "Date": "2017-05-19T18:08:10Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jbei.ice.lib.dao.hibernate.EntryDAO.getByRecordId(data.getRecordId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (linked == null) linked = saveTransferred(data);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5663/buggy-version/src.main.java.org.jbei.ice.lib.entry.EntryCreator.java", "BodyUseAPI": [], "Fixed commit": "4a4c0ce1d4f9708fe6da198920425ee028ab2560", "Url": "https://api.github.com/repos/JBEI/ice", "Date": "2015-02-25T20:59:13Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.confParams.getFile()) != null) { org.apache.commons.httpclient.methods.multipart.Part[] parts = new org.apache.commons.httpclient.methods.multipart.Part[]{ new org.apache.commons.httpclient.methods.multipart.StringPart(\"json\", this.confParams.getBody().toString()), new org.apache.commons.httpclient.methods.multipart.FilePart(this.confParams.getFile().getName(), convert(this.confParams.getFile())) }; postMethod.setRequestEntity(new org.apache.commons.httpclient.methods.multipart.MultipartRequestEntity(parts, postMethod.getParams())); }else { postMethod.setRequestEntity(new org.apache.commons.httpclient.methods.StringRequestEntity(this.confParams.getBody().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8180/buggy-version/monitors.HttpMonitoring.src.main.java.monitoring.tools.ApacheHttp.java", "BodyUseAPI": ["monitoring.model.HttpMonitoringParams.getBody()", "this.confParams.getBody().toString()", "monitoring.model.HttpMonitoringParams.getBody()", "this.confParams.getBody().toString()", "monitoring.model.HttpMonitoringParams.getFile()", "this.confParams.getFile().getName()", "monitoring.model.HttpMonitoringParams.getFile()", "org.apache.commons.httpclient.methods.PostMethod.setRequestEntity(org.apache.commons.httpclient.methods.StringRequestEntity)", "monitoring.tools.ApacheHttp.convert(this.confParams.getFile())"], "Fixed commit": "923320d550cdf315dabf8aa335ec6147198738aa", "Url": "https://api.github.com/repos/supersede-project/monitor_feedback", "Date": "2017-10-18T11:19:46Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (innerCtx.appLibRendered()) { ((org.structr.web.common.RenderContext) (ctx)).setAppLibRendered(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/677/buggy-version/structr-ui.src.main.java.org.structr.web.function.IncludeFunction.java", "BodyUseAPI": [], "Fixed commit": "f262cc8da6c24a853d3ff8fabdfa48dbc945c39f", "Url": "https://api.github.com/repos/structr/structr", "Date": "2017-08-10T07:45:59Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(com.breadwallet.BuildConfig.DEBUG)) && ((com.breadwallet.tools.security.KeyStoreManager.AUTH_DURATION_SEC) != 300)) throw new java.lang.IllegalArgumentException(\"AUTH_DURATION_SEC should be 300\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/232/buggy-version/app.src.main.java.com.breadwallet.presenter.activities.IntroActivity.java", "BodyUseAPI": [], "Fixed commit": "7c2b1a7c801c8c5250067c7ea75d28dbf4aab949", "Url": "https://api.github.com/repos/breadwallet/breadwallet-android", "Date": "2016-07-31T18:59:07Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nextEvents.get(0).getNextRepeat()) > (events.get(i).getNextRepeat())) { nextEvents = new java.util.LinkedList(); nextEvents.add(events.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4329/buggy-version/src.bots.CalendarBot.Calendar.java", "BodyUseAPI": ["java.util.LinkedList<bots.CalendarBot.Event>.add(events.get(i))", "java.util.LinkedList<bots.CalendarBot.Event>.get(int)"], "Fixed commit": "6245b1423e284772003c9dcfe4214824fd5f7cdf", "Url": "https://api.github.com/repos/Vinpasso/BridgeMPP-Bot", "Date": "2015-07-08T14:24:49Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (orders == null) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5026/buggy-version/xchange-bittrex.src.main.java.org.knowm.xchange.bittrex.BittrexAdapters.java", "BodyUseAPI": [], "Fixed commit": "fe82eb0f823b43214d2efd289de4cf69a9f1e1e5", "Url": "https://api.github.com/repos/roeiba/XChange", "Date": "2017-10-22T22:36:14Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.speed) == (rs.getMinSpeed())) { rs.resetMinSpeedTO_OVER_9000(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6103/buggy-version/workspace.TeamBokun4Lyfe.src.data.Car.java", "BodyUseAPI": ["data.RoadSegment.resetMinSpeedTO_OVER_9000()"], "Fixed commit": "7ab2a3b57359ab667b2cf36fc4fe4a123e3e8102", "Url": "https://api.github.com/repos/DongyKong/TeamBokun", "Date": "2014-04-21T03:44:17Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mUnitType.isUnitSelected()) { if (buttonPos != (mUnitType.getCurrUnitButtonPos())) { refreshButtonText(getResources().getString(R.string.convert_arrow), buttonPos); } setSelectedButtonHighlight(true); }else { refreshButtonText(\"\", buttonPos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4825/buggy-version/app.src.main.java.com.llamacorp.equate.view.ConvKeysFragment.java", "BodyUseAPI": ["com.llamacorp.equate.unit.UnitType.getCurrUnitButtonPos()"], "Fixed commit": "37970a1b1b6f405280eff0a0ca4bd94954d37f50", "Url": "https://api.github.com/repos/EvanRespaut/Equate", "Date": "2017-02-26T16:29:05Z"},
{"Line": "=>497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fieldClass.isEnum()) { com.alibaba.fastjson.parser.deserializer.ObjectDeserializer fieldDeser = this.getDeserializer(fieldClass); if (!(fieldDeser instanceof com.alibaba.fastjson.parser.deserializer.EnumDeserializer)) { asmEnable = false; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/945/buggy-version/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java", "BodyUseAPI": ["com.alibaba.fastjson.parser.ParserConfig.getDeserializer(java.lang.Class<?>)"], "Fixed commit": "32f94ea75aaa3ff24d50bc1053344610ff8489ec", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-15T10:09:52Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (isSOTrx == null) isSOTrx = \"N\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3909/buggy-version/base.org.spin.model.WPModelValidator.java", "BodyUseAPI": [], "Fixed commit": "d5b2ace0303b37f01201b1879078bc464805d611", "Url": "https://api.github.com/repos/erpcya/Warehouse-Product", "Date": "2014-12-19T16:23:29Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sdkVersion >= (Build.VERSION_CODES.LOLLIPOP)) { final java.util.List<java.util.Locale> availableLanguages = new java.util.ArrayList(tts.getAvailableLanguages()); if (!(availableLanguages.isEmpty())) { ttsLanguage = availableLanguages.get(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4025/buggy-version/Android.src.org.droidplanner.android.notifications.TTSNotificationProvider.java", "BodyUseAPI": [], "Fixed commit": "4d0a8b84a3c4838a091a46ff9915e6ba03b84246", "Url": "https://api.github.com/repos/DroidPlanner/Tower", "Date": "2015-06-06T16:59:40Z"},
{"Line": "=>798", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((event.getAction()) == (android.view.KeyEvent.ACTION_DOWN)) && ((event.getKeyCode()) == (android.view.KeyEvent.KEYCODE_SEARCH))) { mSearch.requestFocus(); mSearch.selectAll(); return true; }else if (((event.getAction()) == (android.view.KeyEvent.ACTION_UP)) && ((event.getKeyCode()) == (android.view.KeyEvent.KEYCODE_BACK))) { Handlers.MAIN.removeCallbacks(mLongPressBackRunnable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4378/buggy-version/app.src.main.java.acr.browser.lightning.activity.BrowserActivity.java", "BodyUseAPI": ["android.view.KeyEvent.getKeyCode()", "android.view.KeyEvent.getAction()"], "Fixed commit": "5ca956d8633061e4b9d4b1b6420fc3ae39db2edb", "Url": "https://api.github.com/repos/jiaojianhua/Browser", "Date": "2017-06-04T20:43:01Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["settings.METRIC_SYSTEM.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mc == (net.osmand.plus.OsmandSettings.MetricsConstants.MILES_AND_FOOTS)) && (roundDist == (1000 / ((double) (net.osmand.plus.OsmAndFormatter.FOOTS_IN_ONE_METER))))) { roundDist = 0.25F * (net.osmand.plus.OsmAndFormatter.METERS_IN_ONE_MILE); }else if ((mc == (net.osmand.plus.OsmandSettings.MetricsConstants.MILES_AND_YARDS)) && (roundDist == (1000 / ((double) (net.osmand.plus.OsmAndFormatter.YARDS_IN_ONE_METER))))) { roundDist = 0.5F * (net.osmand.plus.OsmAndFormatter.METERS_IN_ONE_MILE); }else if ((mc == (net.osmand.plus.OsmandSettings.MetricsConstants.MILES_AND_YARDS)) && (roundDist == (500 / ((double) (net.osmand.plus.OsmAndFormatter.YARDS_IN_ONE_METER))))) { roundDist = 0.25F * (net.osmand.plus.OsmAndFormatter.METERS_IN_ONE_MILE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4554/buggy-version/OsmAnd.src.net.osmand.plus.OsmAndFormatter.java", "BodyUseAPI": [], "Fixed commit": "c28da57999b200e234cd5599826fed200714b876", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2016-03-09T23:45:04Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (open < close) { if ((dataSet.getIncreasingColor()) == (com.github.mikephil.charting.utils.ColorTemplate.COLOR_NONE)) { mRenderPaint.setColor(dataSet.getColor(((j / 4) + minx))); }else { mRenderPaint.setColor(dataSet.getIncreasingColor()); } mRenderPaint.setStyle(dataSet.getIncreasingPaintStyle()); c.drawRect(leftBody, open, rightBody, close, mRenderPaint); }else { mRenderPaint.setColor(Color.BLACK); mRenderPaint.setStyle(Paint.Style.STROKE); c.drawLine(leftBody, open, rightBody, close, mRenderPaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/709/buggy-version/MPChartLib.src.com.github.mikephil.charting.renderer.CandleStickChartRenderer.java", "BodyUseAPI": ["android.graphics.Canvas.drawRect(float,float,float,float,com.github.mikephil.charting.renderer.CandleStickChartRenderer)", "android.graphics.Canvas.drawLine(float,float,float,float,com.github.mikephil.charting.renderer.CandleStickChartRenderer)"], "Fixed commit": "5b6ab3cf325693c40e3514ff194e9d1dae07fe68", "Url": "https://api.github.com/repos/dexterbg/MPAndroidChart", "Date": "2015-04-17T17:52:55Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.springframework.util.StringUtils.isEmpty(company.getWelfare()))) { welfares.addAll(java.util.Arrays.asList(company.getWelfare().split(\",\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3011/buggy-version/src.com.car.training.action.website.CompanyDetailAction.java", "BodyUseAPI": ["java.util.Arrays.asList(company.getWelfare().split(\",\"))", "company.getWelfare().split(java.lang.String)", "com.car.training.bean.Company.getWelfare()", "java.util.Set<java.lang.String>.addAll(java.util.List)"], "Fixed commit": "697fb23e990d0a5b00830d1b9a181e2f8d6934ad", "Url": "https://api.github.com/repos/billxc/car-training", "Date": "2016-12-03T06:56:02Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((chart) == null) && ((options) != null)) { createChart(options); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8053/buggy-version/src.com.invient.vaadin.charts.widgetset.client.ui.GwtInvientCharts.java", "BodyUseAPI": [], "Fixed commit": "67b7f31d1f260dd141e8ea86c0b5c15dd590be6c", "Url": "https://api.github.com/repos/S73417H/InvientCharts", "Date": "2012-06-28T10:20:32Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(categoryFilterValue)) { categoryFilterValue = \"Member\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3346/buggy-version/portlets.members-portlet.src.main.java.org.xcolab.portlets.users.MembersController.java", "BodyUseAPI": [], "Fixed commit": "1258ac1d826ae95d57c3221041f8b908133c7a51", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2016-06-09T01:37:20Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { if (android.provider.DocumentsContract.isDocumentUri(context, uri)) { java.lang.String documentId = android.provider.DocumentsContract.getDocumentId(uri); selectionArgs = new java.lang.String[]{ documentId.split(\":\")[1] }; tmpUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI; selection = \"_id=?\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6384/buggy-version/src.com.qiniu.utils.InputStreamAt.java", "BodyUseAPI": [], "Fixed commit": "614877fc0866444d2d83bd24fca096ad9b900850", "Url": "https://api.github.com/repos/yiranshaPATHo/android-sdk", "Date": "2014-11-25T07:08:25Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["userInputEditText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(userInput.equals(\"\"))) { com.companyname.secondproject.DataBaseHelper.getInstance(this).addQuote(userInput); android.widget.Toast.makeText(this, \"Quote added\", Toast.LENGTH_LONG).show(); userInputEditText.setText(\"\"); }else { android.widget.Toast.makeText(this, \"You can't add nothing man!\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8045/buggy-version/app.src.main.java.com.companyname.secondproject.UpdateActivity.java", "BodyUseAPI": ["com.companyname.secondproject.DataBaseHelper.getInstance(this).addQuote(java.lang.String)"], "Fixed commit": "66b99730ac5f186e39f9e806c9e3bac03da1b7cb", "Url": "https://api.github.com/repos/daaron4/SecondProject", "Date": "2016-05-04T18:44:26Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sudolink.isp.app.Application.calculateDataVerificationSignature()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (md5 != null) { pm.setProperty(PropertiesManager.DATA_INTEGRITY_SIGNATURE, md5); com.sudolink.isp.app.PropertiesManager.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7001/buggy-version/iSecurePasswords.src.com.sudolink.isp.app.Application.java", "BodyUseAPI": ["java.util.Properties.setProperty(PropertiesManager.DATA_INTEGRITY_SIGNATURE,java.lang.String)"], "Fixed commit": "df06140cfe3efa345752d649068e2dd5a1673839", "Url": "https://api.github.com/repos/matthew-macgregor/isecurepasswords", "Date": "2013-11-03T20:57:24Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((other_authors != \"\") && (other_authors_wid != \"\")) { other_authors = other_authors.substring(0, ((other_authors.length()) - 1)); other_authors_wid = other_authors_wid.substring(0, ((other_authors_wid.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3741/buggy-version/src.cn.edu.tongji.util.CommonFuncInServlet.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "ab1e588f5270b99078ecca792819f2e68d569bf2", "Url": "https://api.github.com/repos/mikema90/EAS", "Date": "2014-02-23T12:41:47Z"},
{"Line": "=>730", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (configuredServerEndpoints.isEmpty()) { listener.paused(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4397/buggy-version/websockets-jsr.src.main.java.io.undertow.websockets.jsr.ServerWebSocketContainer.java", "BodyUseAPI": [], "Fixed commit": "e5687e829fbe228e1eaacc3ff381f54ac57c9deb", "Url": "https://api.github.com/repos/marschall/undertow", "Date": "2015-08-14T23:08:48Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.chromis.pos.ticket.ProductInfoExt.getPromotionID()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((promID != null) && (!(promID.isEmpty()))) { jCheckBoxPromotion.setSelected(true); }else { jCheckBoxPromotion.setSelected(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3672/buggy-version/src-pos.uk.chromis.pos.inventory.ProductsEditor.java", "BodyUseAPI": [], "Fixed commit": "612782ef1dd6c4a767847a3d99df5fa0613b8aa2", "Url": "https://api.github.com/repos/ChromisPos/ChromisPOS", "Date": "2016-03-26T11:47:54Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((point) >= 0) (point)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8752/buggy-version/src.com.rpsg.rpg.object.script.Script.java", "BodyUseAPI": [], "Fixed commit": "b8d9252141afa4af455a486a3789e5fa8691ca21", "Url": "https://api.github.com/repos/dingjibang/GDX-RPG", "Date": "2015-04-09T01:37:54Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == idx1S) || (null == idx2S)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3242/buggy-version/src.io.lambdacloud.node.matrix.MatrixAccessNode.java", "BodyUseAPI": [], "Fixed commit": "f52d4c809b5efb38eb34df2f25769beaa3dc4385", "Url": "https://api.github.com/repos/yuemingl/ExprEngine", "Date": "2016-08-13T04:43:06Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hsyndicate.fs.SyndicateFSPath.getAncestors()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ancestors != null) { for (hsyndicate.fs.SyndicateFSPath ancestor : ancestors) { if (!(exists(ancestor))) { mkdir(ancestor); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1542/buggy-version/src.hsyndicate.fs.AHSyndicateFileSystemBase.java", "BodyUseAPI": [], "Fixed commit": "914660956d12543518a7e5680556776ee362da42", "Url": "https://api.github.com/repos/syndicate-storage/H-Syndicate", "Date": "2016-08-25T10:28:32Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.mapdb.Fun.isNullOrEmptyIterator(source)) { throw new java.lang.IllegalArgumentException(\"source iterator cannot be empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1390/buggy-version/src.main.java.org.mapdb.Pump.java", "BodyUseAPI": [], "Fixed commit": "3293f780a57ce44d7a148ab0a7a54da37aefb917", "Url": "https://api.github.com/repos/SleimanJneidi/mapdb", "Date": "2015-03-22T01:31:24Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(editText.isFocused())) && (ipChunkText.matches(\"(0{2}\\\\d|0\\\\d|0\\\\d{2})\"))) { editText.setText(ipChunkText.replaceFirst(\"^0+(?!$)\", \"\")); android.util.Log.d(\"FocusChange\", editText.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6221/buggy-version/src.net.geeksmind.alacrity.MyActivity.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)", "net.geeksmind.alacrity.EditText.setText(java.lang.String)", "android.util.Log.d(java.lang.String,editText.getText().toString())", "net.geeksmind.alacrity.EditText.getText()", "editText.getText().toString()"], "Fixed commit": "3139860d0f7e7dbc288db184daee29136b615916", "Url": "https://api.github.com/repos/geeksmind/alacrity", "Date": "2013-09-17T23:56:50Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((auctionItemList) == null) createAuctionItemPanel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5939/buggy-version/src.gui.ContactPanel.java", "BodyUseAPI": [], "Fixed commit": "926e9b15377b0ac71bafa30c23c1c4e437d4f5d5", "Url": "https://api.github.com/repos/360jmss/auctioncentral", "Date": "2016-12-06T05:26:26Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataValues) != null) { for (int i = 0; i < (dataValues.length); i++) { model.DataColumnInfo c = dci.get(i); sb.append(java.lang.String.format(\" %s=%s%s\", c.getName(), CommonUtils.outputDecimalFormatter.format(getData(i)), c.getUnit())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4391/buggy-version/src.model.Atom.java", "BodyUseAPI": [], "Fixed commit": "2ab989808094aa4cdf3dd49a43b80d3362ac759f", "Url": "https://api.github.com/repos/CBegau/AtomViewer", "Date": "2015-07-27T14:01:12Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!anonymous) { java.lang.String token = ((settings.USER_NAME.get()) + \":\") + (settings.USER_PASSWORD.get()); connection.addRequestProperty(\"Authorization\", (\"Basic \" + (net.osmand.osm.io.Base64.encode(token.getBytes(\"UTF-8\"))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4710/buggy-version/OsmAnd.src.net.osmand.plus.osmedit.OsmBugsRemoteUtil.java", "BodyUseAPI": [], "Fixed commit": "4ab88abcf1bf993d67820733be6dafa6893be79e", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2016-03-17T12:17:22Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((defaultTypeArguments[i]) == null) || (defaultTypeArguments[i].equals(TypeFactory.TYPE_OF_OBJECT))) { hasUnresolvedTypes = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1297/buggy-version/core.src.main.java.ma.glasnost.orika.metadata.TypeUtil.java", "BodyUseAPI": [], "Fixed commit": "5a9e88e141161ec4fc9f52f375694678d7364b3c", "Url": "https://api.github.com/repos/brabenetz/orika", "Date": "2015-08-08T19:13:40Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(getVersion())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2875/buggy-version/config.src.main.java.io.pixeloutlaw.minecraft.spigot.config.VersionedSmartYamlConfiguration.java", "BodyUseAPI": [], "Fixed commit": "c7d9ed5ef3227e83d468c4bbb7005a0c1abf3f49", "Url": "https://api.github.com/repos/PixelOutlaw/spigot-commons", "Date": "2017-06-03T06:55:32Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(getLocalVersion())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2875/buggy-version/config.src.main.java.io.pixeloutlaw.minecraft.spigot.config.VersionedSmartYamlConfiguration.java", "BodyUseAPI": [], "Fixed commit": "c7d9ed5ef3227e83d468c4bbb7005a0c1abf3f49", "Url": "https://api.github.com/repos/PixelOutlaw/spigot-commons", "Date": "2017-06-03T06:55:32Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.select.Elements.html()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (htmlMessages.contains(\"<li>\")) htmlMessages = htmlMessages.substring(htmlMessages.indexOf(\"<li>\"), htmlMessages.indexOf(\"</ul></li>\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4454/buggy-version/src.main.java.com.sumanth.magneto.RegistrationServletClass.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "02a945e8659f978518b2b6c21bfd69b312b55690", "Url": "https://api.github.com/repos/sumanthl158/rad1234-magneto-challenge", "Date": "2014-06-22T03:10:42Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.next) != null) { this.next.setNext(next); }else { this.next = ((com.tech.configurations.tools.customvalidators.interfaces.INumberValidator) (next)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1579/buggy-version/src.main.java.com.tech.configurations.tools.customvalidators.superclass.NumberValidator.java", "BodyUseAPI": [], "Fixed commit": "16762018490c8215faf8fafb836ef2b353ae1e61", "Url": "https://api.github.com/repos/TexnologiaLogismikou/Fiz", "Date": "2015-12-14T17:36:05Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.getMessage().equals(\"room_computer_null\")) { redirectAttr.addFlashAttribute(\"error\", \"Vous devez s\u00e9lectionnez un ordinateur et/ou une salle.\"); }else { redirectAttr.addFlashAttribute(\"error\", \"V\u00e9rifier que la salle et/ou l'ordinateur sont bien disponibles.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3534/buggy-version/src.main.java.co.simplon.kif.web.BookingController.java", "BodyUseAPI": [], "Fixed commit": "4763bf3db1332ea2cadd2ff4caf47e1a725da9d7", "Url": "https://api.github.com/repos/simplon-CQP-Java/kif", "Date": "2016-12-16T17:36:42Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.getMessage().equals(\"room_computer_null\")) { redirectAttr.addFlashAttribute(\"error\", \"Vous devez s\u00e9lectionnez un ordinateur et/ou une salle.\"); }else { redirectAttr.addFlashAttribute(\"error\", \"V\u00e9rifier que la salle et/ou l'ordinateur sont bien disponibles.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3534/buggy-version/src.main.java.co.simplon.kif.web.BookingController.java", "BodyUseAPI": [], "Fixed commit": "4763bf3db1332ea2cadd2ff4caf47e1a725da9d7", "Url": "https://api.github.com/repos/simplon-CQP-Java/kif", "Date": "2016-12-16T17:36:42Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((booking.getComputer()) == null) && ((booking.getRoom()) == null)) { throw new java.lang.Exception(\"room_computer_null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3534/buggy-version/src.main.java.co.simplon.kif.core.service.BookingService.java", "BodyUseAPI": [], "Fixed commit": "4763bf3db1332ea2cadd2ff4caf47e1a725da9d7", "Url": "https://api.github.com/repos/simplon-CQP-Java/kif", "Date": "2016-12-16T17:36:42Z"},
{"Line": "=>1203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((courseDo.getCreator()) != null) { if (org.ednovo.gooru.client.mvp.home.library.LibraryView.MALE.equalsIgnoreCase(courseDo.getCreator().getGender())) { authorName = (((i18n.GL1422()) + (i18n.GL_SPL_FULLSTOP())) + \" \") + (courseDo.getCreator().getLastName()); }else if (org.ednovo.gooru.client.mvp.home.library.LibraryView.FEMALE.equalsIgnoreCase(courseDo.getCreator().getGender())) { authorName = (((i18n.GL1423()) + (i18n.GL_SPL_FULLSTOP())) + \" \") + (courseDo.getCreator().getLastName()); }else { authorName = courseDo.getCreator().getLastName(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6455/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.home.library.LibraryView.java", "BodyUseAPI": ["org.ednovo.gooru.application.shared.model.library.CourseDo.getCreator()", "java.lang.String.equalsIgnoreCase(courseDo.getCreator().getGender())", "courseDo.getCreator().getGender()", "courseDo.getCreator().getLastName()", "org.ednovo.gooru.application.shared.model.library.CourseDo.getCreator()", "org.ednovo.gooru.application.shared.model.library.CourseDo.getCreator()", "courseDo.getCreator().getGender()", "org.ednovo.gooru.application.shared.model.library.CourseDo.getCreator()", "java.lang.String.equalsIgnoreCase(courseDo.getCreator().getGender())", "org.ednovo.gooru.application.shared.model.library.CourseDo.getCreator()", "courseDo.getCreator().getLastName()", "courseDo.getCreator().getLastName()"], "Fixed commit": "06ef6663447b99b61f9b0b1b7223e03ab28ecc88", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-09-08T11:03:42Z"},
{"Line": "=>1216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((courseDo.getCreator()) != null) { authorProfileImage = ((org.ednovo.gooru.application.client.gin.AppClientFactory.getLoggedInUser().getSettings().getProfileImageUrl()) + (courseDo.getCreator().getGooruUId())) + (org.ednovo.gooru.client.mvp.home.library.LibraryView.PNG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6455/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.home.library.LibraryView.java", "BodyUseAPI": ["courseDo.getCreator().getGooruUId()", "org.ednovo.gooru.application.shared.model.library.CourseDo.getCreator()"], "Fixed commit": "06ef6663447b99b61f9b0b1b7223e03ab28ecc88", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-09-08T11:03:42Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mDisplayNoteBaseActivity.mOpenInGalleryProgressDialog) == null) { mDisplayNoteBaseActivity.mOpenInGalleryProgressDialog = com.gcode.notes.ui.helpers.DialogBuilder.buildOpenImageProgressDialog(mDisplayNoteBaseActivity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6758/buggy-version/MyApplication.app.src.main.java.com.gcode.notes.activities.helpers.display.note.listeners.DisplayNoteImageOnItemClickListener.java", "BodyUseAPI": ["com.gcode.notes.ui.helpers.DialogBuilder.buildOpenImageProgressDialog(com.gcode.notes.activities.display.note.DisplayNoteBaseActivity)"], "Fixed commit": "ba8e374d747152bdd5df712eb65690d0d93a6467", "Url": "https://api.github.com/repos/ILIYANGERMANOV/Notes", "Date": "2016-01-26T18:32:33Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mDisplayNoteBaseActivity.mOpenInGalleryProgressDialog.isShowing()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6758/buggy-version/MyApplication.app.src.main.java.com.gcode.notes.activities.helpers.display.note.listeners.DisplayNoteImageOnItemClickListener.java", "BodyUseAPI": [], "Fixed commit": "ba8e374d747152bdd5df712eb65690d0d93a6467", "Url": "https://api.github.com/repos/ILIYANGERMANOV/Notes", "Date": "2016-01-26T18:32:33Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.reflect.Method, org.hibernate.validator.metadata.AggregatedMethodMetaData>.get(java.lang.reflect.Method)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (theValue != null) { return theValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1299/buggy-version/hibernate-validator.src.main.java.org.hibernate.validator.metadata.BeanMetaDataImpl.java", "BodyUseAPI": [], "Fixed commit": "1ff455fa7f0fdcabe9e3797146d2af74f4642a6d", "Url": "https://api.github.com/repos/kevinpollet/hibernate-validator", "Date": "2011-02-21T23:23:06Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.cfuller.imageanalysistools.image.ImageFactory.createWritable(edu.stanford.cfuller.imageanalysistools.image.WritableImage)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (this.shouldSubDivide(root, im, residual)) { root.subDivide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5853/buggy-version/src.main.java.edu.stanford.cfuller.imageanalysistools.filter.VariableSizeMeanFilter.java", "BodyUseAPI": ["edu.stanford.cfuller.imageanalysistools.filter.VariableSizeMeanFilter.OcttreeNode.subDivide()"], "Fixed commit": "a3c1fb7d052b0637d54420807d3d2df6d6b887e1", "Url": "https://api.github.com/repos/cjfuller/imageanalysistools", "Date": "2013-03-28T23:57:02Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((names.length) != (relation.arity)) throw new java.lang.IllegalArgumentException(\"Incorrect arity\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3363/buggy-version/org.mmaroti.ua.csp.Problem.java", "BodyUseAPI": [], "Fixed commit": "9b180554a8ff982c87b9c697ff43125eaaa06d12", "Url": "https://api.github.com/repos/mmaroti/shared", "Date": "2015-06-08T07:56:43Z"},
{"Line": "=>1841", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (token2.equals(pasted.toString())) { pasted = new org.nschmidt.ldparteditor.data.GData0(lineToParse); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6218/buggy-version/src.org.nschmidt.ldparteditor.data.VM01SelectHelper.java", "BodyUseAPI": [], "Fixed commit": "e474af0fcf0e38e58e1202c98c92aa7ac2cc9369", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-04-07T10:32:37Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t instanceof java.util.concurrent.TimeoutException) throw ((java.util.concurrent.TimeoutException) (t));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4502/buggy-version/src.main.java.net.jodah.lyra.internal.ConnectionHandler.java", "BodyUseAPI": [], "Fixed commit": "e7ae5d3740f829a6183120b49fb5c9be9b609bdc", "Url": "https://api.github.com/repos/jhalterman/lyra", "Date": "2015-05-13T23:14:13Z"},
{"Line": "=>2047", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (newitem == null) { if (((nu.pose) == (u.pose)) && ((u.getSlot(slot).tags.contains((\"tier \" + toTier))) || (!(u.getSlot(slot).tags.contains((\"tier \" + fromTier)))))) { newitem = u.getSlot(slot); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7569/buggy-version/src.nationGen.magic.MageGenerator.java", "BodyUseAPI": [], "Fixed commit": "13bb9a50f2c7b22b5352f02ed65d27b8e7d55702", "Url": "https://api.github.com/repos/elmokki/nationgen", "Date": "2015-07-26T12:23:27Z"},
{"Line": "=>2022", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (slot.equals(\"overlay\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7569/buggy-version/src.nationGen.magic.MageGenerator.java", "BodyUseAPI": [], "Fixed commit": "13bb9a50f2c7b22b5352f02ed65d27b8e7d55702", "Url": "https://api.github.com/repos/elmokki/nationgen", "Date": "2015-07-26T12:23:27Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"fill_form_fdf\".equals(args[i])) { config.formInputStream = java.lang.System.in; config.isFdf = true; i++; if (!(\"-\".equals(args[i]))) { throw new java.lang.RuntimeException(\"Missing \\\"-\\\" after fill_form_fdf operation.\"); } }else if (\"output\".equals(args[i])) { i++; if (!(\"-\".equals(args[i]))) { throw new java.lang.RuntimeException(\"Missing \\\"-\\\" after output operation.\"); } }else if (\"flatten\".equals(args[i])) { config.flatten = true; }else { throw new java.lang.RuntimeException((\"Unknown operation: \" + (args[i]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1060/buggy-version/src.main.java.aero.m_click.mcpdf.Main.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "e7fcf743f83053e5898ee3fd254a49f466260b16", "Url": "https://api.github.com/repos/alokdhir/mcpdf", "Date": "2016-01-15T00:01:43Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dirs != null) { for (java.io.File tt : dirs) { if ((com.door43.translationstudio.core.TargetTranslationMigrator.migrate(tt)) == null) { com.door43.tools.reporting.Logger.w(this.getClass().getName(), (\"Failed to migrate the target translation \" + (tt.getName()))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6989/buggy-version/app.src.main.java.com.door43.translationstudio.tasks.UpdateAppTask.java", "BodyUseAPI": [], "Fixed commit": "cd573e5e7674b2678db0ab0d2be4eefdd0146e5b", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2016-04-06T05:15:57Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5753/buggy-version/ShareViaHttp.app.src.main.java.com.MarcosDiez.shareviahttp.UriInterpretation.java", "BodyUseAPI": [], "Fixed commit": "562b7a6309436568327226c7935869209d0f56e2", "Url": "https://api.github.com/repos/marcosdiez/shareviahttp", "Date": "2017-02-04T19:46:59Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(location.contains(\"://\"))) { location = java.net.URLEncoder.encode(location, \"UTF-8\"); s((\"after urlencode location:\" + location)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5753/buggy-version/ShareViaHttp.app.src.main.java.com.MarcosDiez.shareviahttp.HttpServerConnection.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "562b7a6309436568327226c7935869209d0f56e2", "Url": "https://api.github.com/repos/marcosdiez/shareviahttp", "Date": "2017-02-04T19:46:59Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((location == null) && (return_code == 302)) { location = generateRandomFileNameForTextPlainContent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5753/buggy-version/ShareViaHttp.app.src.main.java.com.MarcosDiez.shareviahttp.HttpServerConnection.java", "BodyUseAPI": [], "Fixed commit": "562b7a6309436568327226c7935869209d0f56e2", "Url": "https://api.github.com/repos/marcosdiez/shareviahttp", "Date": "2017-02-04T19:46:59Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((latitude) == (jp.knct.di.c6t.model.Route.INITIAL_LAT_LNG_VALUE)) || ((longitude) == (jp.knct.di.c6t.model.Route.INITIAL_LAT_LNG_VALUE))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1501/buggy-version/src.jp.knct.di.c6t.model.Route.java", "BodyUseAPI": [], "Fixed commit": "0f900bc0e416d8c5e7c24922f003ad2c8623ede1", "Url": "https://api.github.com/repos/i09158knct/c6t-proto", "Date": "2013-07-15T11:25:00Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startLocation == null) { latitude = jp.knct.di.c6t.model.Route.INITIAL_LAT_LNG_VALUE; longitude = jp.knct.di.c6t.model.Route.INITIAL_LAT_LNG_VALUE; }else { latitude = startLocation.latitude; longitude = startLocation.longitude; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1501/buggy-version/src.jp.knct.di.c6t.model.Route.java", "BodyUseAPI": [], "Fixed commit": "0f900bc0e416d8c5e7c24922f003ad2c8623ede1", "Url": "https://api.github.com/repos/i09158knct/c6t-proto", "Date": "2013-07-15T11:25:00Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index != end) list.set(index, last);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5217/buggy-version/src.com.samrj.devil.io.IOUtil.java", "BodyUseAPI": ["java.util.List<T>.set(int,T)"], "Fixed commit": "c15a449ceaf45576164c98ce622b315622bba419", "Url": "https://api.github.com/repos/SmashMaster/DevilUtil", "Date": "2017-03-25T21:31:58Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (packageName != null) { return packageName; }else { packageName = ((biome.getClass().getName()) + \".\") + (biome.biomeName); jas.common.spawner.biome.group.BiomeHelper.packageNames[biome.biomeID] = packageName; return packageName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7954/buggy-version/src.jas.common.spawner.biome.group.BiomeHelper.java", "BodyUseAPI": [], "Fixed commit": "3a3231547c32ffcd1b72ef118a234f9be1a11a84", "Url": "https://api.github.com/repos/Crudedragos/JustAnotherSpawner", "Date": "2013-10-31T18:43:01Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xreliquary.util.StackHelper.getItemStackFromNameMeta(java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (stack != null) { Settings.AlkahestryTome.craftingRecipes.put(key, new xreliquary.util.alkahestry.AlkahestCraftRecipe(stack, yield, cost)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6861/buggy-version/src.main.java.xreliquary.handler.config.AlkahestConfiguration.java", "BodyUseAPI": ["Settings.AlkahestryTome.craftingRecipes.put(java.lang.String,xreliquary.util.alkahestry.AlkahestCraftRecipe)"], "Fixed commit": "e01096b3b294d4402aa84bb994fda4fb9765e13e", "Url": "https://api.github.com/repos/P3pp3rF1y/Reliquary", "Date": "2016-10-21T21:26:54Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((t != null) && ((fr.lirmm.graphik.graal.api.core.TermValueComparator.instance().compare(term, t)) == 0)) { return t; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7274/buggy-version/graal.graal-core.src.main.java.fr.lirmm.graphik.graal.core.atomset.graph.DefaultInMemoryGraphAtomSet.java", "BodyUseAPI": [], "Fixed commit": "b0341a21a0b7eb6aae2da537aa69d9aa4adda075", "Url": "https://api.github.com/repos/graphik-team/graal", "Date": "2016-10-07T07:38:21Z"},
{"Line": "=>804", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultValueAssignment) == null) { return assignment.getImportTypes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5944/buggy-version/processor.src.main.java.org.mapstruct.ap.internal.model.PropertyMapping.java", "BodyUseAPI": [], "Fixed commit": "7c2b4c9541697451a93ea575fd29820cd79f7c01", "Url": "https://api.github.com/repos/tmonney/mapstruct", "Date": "2015-11-25T18:56:42Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.monarchinitiative.exomiser.core.prioritisers.util.HiPhiveProteinInteractionScorer.getColumnIndexOfMostPhenotypicallySimilarGene(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (columnIndex == (-1)) { org.monarchinitiative.exomiser.core.prioritisers.util.HiPhiveProteinInteractionScorer.logger.info((((((\"No Score for \" + entrezGeneId) + \", rowIndex \") + rowIndex) + \", columnIndex \") + columnIndex)); return org.monarchinitiative.exomiser.core.prioritisers.model.GeneMatch.NO_HIT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2204/buggy-version/exomiser-core.src.main.java.org.monarchinitiative.exomiser.core.prioritisers.util.HiPhiveProteinInteractionScorer.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "bb5f666a6840446c36458edeaf5bcd35f93e8197", "Url": "https://api.github.com/repos/exomiser/Exomiser", "Date": "2017-06-22T12:13:30Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (commandName.contains(\" \")) { commandName = msg.substring(1, msg.indexOf(\" \")); args = msg.substring(msg.indexOf(\" \")).split(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3692/buggy-version/src.main.java.net.shadowfacts.discordchat.discord.MainListener.java", "BodyUseAPI": [], "Fixed commit": "e509c2d41cf79e0898a46209e46f9ba7d4903de8", "Url": "https://api.github.com/repos/allout58/DiscordChat", "Date": "2016-04-14T17:12:59Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getGraphicalRepresentation().getHasFocusedBackground()) || (getGraphicalRepresentation().getHasFocusedForeground())) { getPaintManager().addToTemporaryObjects(getGraphicalRepresentation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2675/buggy-version/flexodesktop.GUI.flexographicalengine.src.main.java.org.openflexo.fge.view.ShapeView.java", "BodyUseAPI": [], "Fixed commit": "b06f6456b0df357f4c06291aefd8b573e1f12331", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2012-07-16T16:07:30Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((choiceOptionGoBackTo) == (com.ftwinston.KillerMinecraft.GameConfiguration.Menu.GAME_MODE_CONFIG)) generateOptionMenuItems(inventories.get(choiceOptionGoBackTo), game.getGameMode()); else if ((choiceOptionGoBackTo) == (com.ftwinston.KillerMinecraft.GameConfiguration.Menu.WORLD_GEN_CONFIG)) generateOptionMenuItems(inventories.get(choiceOptionGoBackTo), game.getWorldGenerator());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7804/buggy-version/src.com.ftwinston.KillerMinecraft.GameConfiguration.java", "BodyUseAPI": [], "Fixed commit": "7596021581e3783086db459485e4d66fd2c4573c", "Url": "https://api.github.com/repos/KillerMinecraft/KillerMinecraft", "Date": "2013-09-22T21:53:35Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addToBackStack) ft.addToBackStack(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7056/buggy-version/Race2GED2.src.main.java.edu.mecc.race2ged.activities.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "2c368b550d76c8c38c244dbaa508966616d7ee43", "Url": "https://api.github.com/repos/RegionalAdultEducation/Race2GED2", "Date": "2014-07-12T02:17:24Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position % 2) == 0) { mRlSongCell.setBackgroundResource(R.drawable.gradient_song_cell); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2678/buggy-version/app.src.main.java.com.music.player.muzik.views.SongsViewHolder.java", "BodyUseAPI": [], "Fixed commit": "b7f329cd3331ab0655715333bad7fff92e40cbb2", "Url": "https://api.github.com/repos/AshuTyagi16/Muzik", "Date": "2017-03-25T19:08:06Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.openwide.core.wicket.more.markup.html.form.AbstractAjaxInputPrerequisiteBehavior<T>.getAjaxTarget(org.apache.wicket.Component)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fr.openwide.core.wicket.more.util.visit.VisitFilters.renderedComponents().visitObject(reloadedComponent)) { target.add(reloadedComponent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/814/buggy-version/owsi-core.owsi-core-components.owsi-core-component-wicket-more.src.main.java.fr.openwide.core.wicket.more.markup.html.form.AbstractAjaxInputPrerequisiteBehavior.java", "BodyUseAPI": ["org.apache.wicket.ajax.AjaxRequestTarget.add(org.apache.wicket.Component)"], "Fixed commit": "2e90d34efe6ba63434ea8ae27c80bc5b1bc7c18f", "Url": "https://api.github.com/repos/openwide-java/owsi-core-parent", "Date": "2017-02-24T18:22:18Z"},
{"Line": "=>722", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["config.resourcesFactory().find(r.uuid())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (((r2 != null) && (r2.isSuspended())) && ((r.hashCode()) != (r2.hashCode()))) { removeAtmosphereResource(r2); checkCachedAndPush(r2, r2.getAtmosphereResourceEvent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1143/buggy-version/modules.cpr.src.main.java.org.atmosphere.cpr.DefaultBroadcaster.java", "BodyUseAPI": ["org.atmosphere.cpr.DefaultBroadcaster.removeAtmosphereResource(org.atmosphere.cpr.AtmosphereResource)", "org.atmosphere.cpr.AtmosphereResource.getAtmosphereResourceEvent()", "org.atmosphere.cpr.DefaultBroadcaster.checkCachedAndPush(org.atmosphere.cpr.AtmosphereResource,r2.getAtmosphereResourceEvent())"], "Fixed commit": "2fd6e60ecf37231adb076f8fe8e48af301c62d3b", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2015-03-09T20:00:12Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((v.navigation.getDestination()) != null) { org.uci.luci.interchange.Graph.Node destNode = Global.openStreetMap.getNode(v.navigation.getDestination()); org.uci.luci.interchange.UI.NodePoint ppd = scaledXY(Global.projection.convertLongToX(destNode.lon), Global.projection.convertLatToY(destNode.lat)); g2d.setColor(java.awt.Color.RED); g2d.drawLine(((int) (ppd.x)), ((int) (ppd.y)), ((int) (p.x)), ((int) (p.y))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1867/buggy-version/src.main.java.org.uci.luci.interchange.UI.AppPanel.java", "BodyUseAPI": ["v.navigation.getDestination()", "Global.openStreetMap.getNode(v.navigation.getDestination())"], "Fixed commit": "27f964f161df0b675380b3436ba26ed2245cdf81", "Url": "https://api.github.com/repos/ns/interchange", "Date": "2012-05-28T23:15:51Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mFileFactory.createFile(file)) { return file; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7198/buggy-version/src.main.java.org.cojen.tupl.TempFileManager.java", "BodyUseAPI": [], "Fixed commit": "b53fd249e97deb6195e1bd06a346fb0e957a9f70", "Url": "https://api.github.com/repos/cojen/Tupl", "Date": "2014-01-20T17:21:38Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((this.startDate) == null) || ((otherDate.startDate) == null)) || ((this.endDate) == null)) || ((otherDate.endDate) == null)) { return false; }else if ((this.startDate.toString().equals(otherDate.startDate.toString())) && (this.endDate.toString().equals(otherDate.endDate.toString()))) { return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4407/buggy-version/src.main.java.seedu.doist.model.task.TaskDate.java", "BodyUseAPI": ["java.util.Date.toString()", "java.util.Date.toString()", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "8b3a1a41aae9edbfb5dbb68f9aec7ff67dbb5c23", "Url": "https://api.github.com/repos/CS2103JAN2017-W13-B4/main", "Date": "2017-04-04T17:43:08Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.capabilities.isCreativeMode) { return super.transferStackInSlot(p, slotNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8959/buggy-version/InfiniteInvoMutated.src.main.java.com.lothrazar.powerinventory.inventory.BigContainerPlayer.java", "BodyUseAPI": ["net.minecraft.inventory.ContainerPlayer.transferStackInSlot(net.minecraft.entity.player.EntityPlayer,int)"], "Fixed commit": "01700b0d78d7cf558828b4fa819841c2cdf0583d", "Url": "https://api.github.com/repos/PrinceOfAmber/SamsPowerups", "Date": "2015-07-27T16:36:15Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (randomReplicator) { new java.lang.Thread(replicator).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5028/buggy-version/src.game.map.MapManager.java", "BodyUseAPI": [], "Fixed commit": "d367328c5222ad1326839ad6f89b43db1c7b3a92", "Url": "https://api.github.com/repos/DVDripXvid/ProjektLab", "Date": "2016-04-23T18:28:17Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((thatVar instanceof microbat.model.value.ReferenceValue) && (thisVar instanceof microbat.model.value.ReferenceValue)) { microbat.model.value.ReferenceValue thisRefVar = ((microbat.model.value.ReferenceValue) (thisVar)); microbat.model.value.ReferenceValue thatRefVar = ((microbat.model.value.ReferenceValue) (thatVar)); return thisRefVar.getStringContainingAllChildren().equals(thatRefVar.getStringContainingAllChildren()); }else { java.lang.String thisString = ((thisVar.getStringValue()) == null) ? \"null\" : thisVar.getStringValue(); java.lang.String thatString = ((thatVar.getStringValue()) == null) ? \"null\" : thatVar.getStringValue(); return thisString.equals(thatString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8863/buggy-version/tregression.src.main.tregression.StepChangeTypeChecker.java", "BodyUseAPI": ["microbat.model.value.VarValue.getStringValue()", "microbat.model.value.VarValue.getStringValue()", "microbat.model.value.VarValue.getStringValue()", "microbat.model.value.VarValue.getStringValue()"], "Fixed commit": "cb49da2afd249f284d474746f53c3867c9444938", "Url": "https://api.github.com/repos/llmhyy/tregression", "Date": "2017-08-02T03:59:32Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (guess != amount) { java.lang.System.out.println(\"\\nInvalid guesses are to your own detriment, man. Trust me.\"); guess = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4742/buggy-version/DealOrNoDeal.java", "BodyUseAPI": [], "Fixed commit": "d3ee75908cafeaaa37bead8bf1692441d4f3fd76", "Url": "https://api.github.com/repos/katelyj/Boojum", "Date": "2016-01-23T23:37:26Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (res.last()) { return res.getRow(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5508/buggy-version/src.main.java.com.cloudcraftgaming.discal.database.DatabaseManager.java", "BodyUseAPI": ["java.sql.ResultSet.getRow()"], "Fixed commit": "62924cb9ec5917b5842982d31bc63c5f63714cab", "Url": "https://api.github.com/repos/NovaFox161/DisCal-Discord-Bot", "Date": "2017-04-13T23:21:29Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (res.last()) { return res.getRow(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5508/buggy-version/src.main.java.com.cloudcraftgaming.discal.database.DatabaseManager.java", "BodyUseAPI": ["java.sql.ResultSet.getRow()"], "Fixed commit": "62924cb9ec5917b5842982d31bc63c5f63714cab", "Url": "https://api.github.com/repos/NovaFox161/DisCal-Discord-Bot", "Date": "2017-04-13T23:21:29Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context) != null) new com.sunlightlabs.android.congress.tasks.LoadLegislatorTask(this).execute(context.bioguide_id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8541/buggy-version/src.com.sunlightlabs.android.congress.fragments.LegislatorLoaderFragment.java", "BodyUseAPI": [], "Fixed commit": "4f11bc603ac17a761e0ba5696f0e9f6ec9dedd75", "Url": "https://api.github.com/repos/sunlightlabs/congress-android", "Date": "2013-04-18T01:45:11Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context) != null) new com.sunlightlabs.android.congress.tasks.LoadBillTask(this, context.bill_id).execute(BillService.basicFields);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8541/buggy-version/src.com.sunlightlabs.android.congress.fragments.BillLoaderFragment.java", "BodyUseAPI": [], "Fixed commit": "4f11bc603ac17a761e0ba5696f0e9f6ec9dedd75", "Url": "https://api.github.com/repos/sunlightlabs/congress-android", "Date": "2013-04-18T01:45:11Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= 10) { java.lang.System.out.println(\"[...]\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7555/buggy-version/src.logic.ThreadStarter.java", "BodyUseAPI": [], "Fixed commit": "6d91754197e08b835af4d7022b34efd7934a6088", "Url": "https://api.github.com/repos/Orikuro/BNS_Comparer", "Date": "2016-04-26T18:14:00Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_OK)) { switch (requestCode) { case kg.kloop.android.redbutton.IntroActivity.RC_SIGN_IN : nextSlide(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4526/buggy-version/app.src.main.java.kg.kloop.android.redbutton.IntroActivity.java", "BodyUseAPI": [], "Fixed commit": "fd819e2218a2f04f8d220c58e5bdfe13eb87ce61", "Url": "https://api.github.com/repos/AlexWalker28/REDbutton", "Date": "2017-11-26T16:16:29Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nhpatt.agendaapp.Talk.getPicture()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (picture != null) { com.squareup.picasso.Picasso.with(this).load(picture).resize(200, 200).into(((android.widget.ImageView) (findViewById(R.id.speaker_image)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/418/buggy-version/app.src.main.java.com.nhpatt.agendaapp.DetailTalkActivity.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(this).load(java.lang.String)", "com.squareup.picasso.Picasso.with(this).load(picture).resize(200, 200).into(((android.widget.ImageView) (findViewById(R.id.speaker_image))))", "com.squareup.picasso.Picasso.with(this).load(picture).resize(int,int)"], "Fixed commit": "a4bc1e73f46e54ad415175e9eee7973e27b00d9a", "Url": "https://api.github.com/repos/nhpatt/AgendaApp", "Date": "2017-04-08T05:21:49Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javassist.Modifier.isStatic(method.getModifiers())) { newBody.append(((clazz.getName()) + \".\")); }else { newBody.append(\"this.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/258/buggy-version/language-adaptors.codegen.src.main.java.rx.codegen.CodeGenerator.java", "BodyUseAPI": [], "Fixed commit": "73c863143911fde6e8d074cb4f439461a940a182", "Url": "https://api.github.com/repos/mattrjacobs/RxJava", "Date": "2013-07-04T06:22:40Z"},
{"Line": "=>711", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.constellio.model.services.taxonomies.TaxonomiesSearchOptions.getEndRow()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((resultVisible.size()) < to) { to = resultVisible.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6959/buggy-version/model.src.com.constellio.model.services.taxonomies.TaxonomiesSearchServices.java", "BodyUseAPI": ["java.util.List<com.constellio.model.services.taxonomies.TaxonomySearchRecord>.size()"], "Fixed commit": "5e72067746d4dac05fc46b3587b9189d3ebcdc67", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-04-07T19:20:26Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (density >= 1.5) { popupWindow.showAsDropDown(btnOpenPopup, 50, (-120)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3771/buggy-version/app.src.main.java.pl.zdunex25.tutorial.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "32f09f7c7d52436fe184b27f40ac9625c0174efb", "Url": "https://api.github.com/repos/zdunex25/miui_user_guide", "Date": "2016-02-27T17:49:33Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((title) == null) { title = sender; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6166/buggy-version/src.com.ford.messi.sms.Message.java", "BodyUseAPI": [], "Fixed commit": "1acdc34eb38c53e81608dd1d9da7aa2cb1be8218", "Url": "https://api.github.com/repos/riverincloud/Messi", "Date": "2014-12-02T03:14:02Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.sarxos.webcam.ds.buildin.natives.OpenIMAJGrabber.nextFrame()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (flag == (-1)) { com.github.sarxos.webcam.ds.buildin.WebcamDefaultDevice.LOG.error(\"Timeout when requesting image!\"); return null; }else if (flag < (-1)) { com.github.sarxos.webcam.ds.buildin.WebcamDefaultDevice.LOG.error(\"Error requesting new frame!\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2237/buggy-version/webcam-capture.src.main.java.com.github.sarxos.webcam.ds.buildin.WebcamDefaultDevice.java", "BodyUseAPI": [], "Fixed commit": "dcfb905668c883440ef7e538fbbe7cbd91703cfa", "Url": "https://api.github.com/repos/sarxos/webcam-capture", "Date": "2013-03-18T21:10:41Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tasks.peek()) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/402/buggy-version/src.bakatxt.gui.Contents.java", "BodyUseAPI": [], "Fixed commit": "edd5103b5c2f18c8efdf45a27d42a2b90febd3fe", "Url": "https://api.github.com/repos/cs2103aug2014-t09-4j/main", "Date": "2014-10-07T08:59:38Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fraunhofer.plugins.hts.service.HazardService.getOrphanControls(cause.getHazards()[0])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(orphanControls.isEmpty())) controlNum = orphanControls.get(((orphanControls.size()) - 1)).getControlNumber();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2848/buggy-version/hts.src.main.java.org.fraunhofer.plugins.hts.service.CauseService.java", "BodyUseAPI": ["orphanControls.get(((orphanControls.size()) - 1)).getControlNumber()", "java.util.List<org.fraunhofer.plugins.hts.model.Hazard_Controls>.size()", "java.util.List<org.fraunhofer.plugins.hts.model.Hazard_Controls>.get(((orphanControls.size()) - 1))"], "Fixed commit": "760b03789b67b622953801ce3f7e8fede43690b0", "Url": "https://api.github.com/repos/FraunhoferCESE/HazardTrackingSystem", "Date": "2015-09-16T20:32:05Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fraunhofer.plugins.hts.service.HazardService.getOrphanVerifications(control.getHazard()[0])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(orphanVerifications.isEmpty())) verificationNum = orphanVerifications.get(((orphanVerifications.size()) - 1)).getVerificationNumber();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2848/buggy-version/hts.src.main.java.org.fraunhofer.plugins.hts.service.ControlService.java", "BodyUseAPI": ["orphanVerifications.get(((orphanVerifications.size()) - 1)).getVerificationNumber()", "java.util.List<org.fraunhofer.plugins.hts.model.Verifications>.get(((orphanVerifications.size()) - 1))", "java.util.List<org.fraunhofer.plugins.hts.model.Verifications>.size()"], "Fixed commit": "760b03789b67b622953801ce3f7e8fede43690b0", "Url": "https://api.github.com/repos/FraunhoferCESE/HazardTrackingSystem", "Date": "2015-09-16T20:32:05Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gk.model.GKInstance.getAttributeValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (author.getSchemClass().isValidAttribute(\"eMailAddress\")) { eMailAddress = ((java.lang.String) (author.getAttributeValue(\"eMailAddress\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2229/buggy-version/src.org.gk.sbml.HistoryBuilder.java", "BodyUseAPI": ["org.gk.model.GKInstance.getAttributeValue(java.lang.String)"], "Fixed commit": "321597e52e74c0398723a6a95f11377d9d210f48", "Url": "https://api.github.com/repos/reactome/Pathway-Exchange", "Date": "2017-11-06T16:56:10Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.oracle.bdglue.encoder.EventData.eventBody()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (event instanceof byte[]) { outval = new java.lang.String(((byte[]) (event))); }else { outval = event.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/874/buggy-version/src.main.java.com.oracle.bdglue.publisher.console.ConsolePublisher.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "6a2fdcd737ce63bbc6a61090807b495da198a472", "Url": "https://api.github.com/repos/oracle/bdglue", "Date": "2017-01-04T19:29:58Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.nineworlds.serenity.core.model.impl.SeasonsMediaContainer.getDirectories()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (shows == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4406/buggy-version/serenity-app.src.main.java.us.nineworlds.serenity.core.model.impl.SeasonsMediaContainer.java", "BodyUseAPI": [], "Fixed commit": "3f4056c87db897bfe5f47f3677d3763f682d5062", "Url": "https://api.github.com/repos/NineWorlds/serenity-android", "Date": "2014-02-10T02:31:37Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.uwsoft.editor.renderer.utils.ComponentRetriever.get(com.uwsoft.editor.view.ui.properties.panels.UIPolygonComponentPropertiesMediator,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dimensionsComponent.boundBox) != null) { polygonComponent.makeRectangle(dimensionsComponent.boundBox.x, dimensionsComponent.boundBox.y, dimensionsComponent.boundBox.width, dimensionsComponent.boundBox.height); }else { polygonComponent.makeRectangle(dimensionsComponent.width, dimensionsComponent.height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1175/buggy-version/overlap2d.src.com.uwsoft.editor.view.ui.properties.panels.UIPolygonComponentPropertiesMediator.java", "BodyUseAPI": ["com.uwsoft.editor.renderer.components.PolygonComponent.makeRectangle(dimensionsComponent.width,dimensionsComponent.height)", "com.uwsoft.editor.renderer.components.PolygonComponent.makeRectangle(dimensionsComponent.boundBox.x,dimensionsComponent.boundBox.y,dimensionsComponent.boundBox.width,dimensionsComponent.boundBox.height)"], "Fixed commit": "d9b18d26c283eb7a5b869b4103bc9e3a7ea89472", "Url": "https://api.github.com/repos/UnderwaterApps/overlap2d", "Date": "2016-01-21T13:33:12Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mapA[tilen]) != null) { if ((mapA[tilen].getBitmap()) != null) { mapA[tilen].getBitmap().eraseColor(0); } mapA[tilen].drawInBitmap(null, null, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4171/buggy-version/src.com.ds.avare.shapes.TileMap.java", "BodyUseAPI": ["mapA[tilen].drawInBitmap(<nulltype>,<nulltype>,int,int)", "mapA[tilen].getBitmap().eraseColor(int)", "mapA[tilen].getBitmap()", "mapA[tilen].getBitmap()"], "Fixed commit": "9966ab40d18980df2010a88ee5c51ed0bccff840", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2013-11-23T02:48:46Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((se.lth.gameofnature.data.GameMapData.getCurrentSessionInstance(this).getNumberDoneMarkers()) == ((se.lth.gameofnature.data.GameMapData.getCurrentSessionInstance(this).getNumberOfMarkers()) - 1)) { marker.getNextQuestion().startQuestionActivity(this, marker.getId()); }else { marker.setLocked(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6661/buggy-version/GameOfNature.src.se.lth.gameofnature.GameBoardActivity.java", "BodyUseAPI": [], "Fixed commit": "ef7044343169eae421b2faa86f984259203aba0a", "Url": "https://api.github.com/repos/Fump/GameOfNature", "Date": "2013-12-04T11:57:06Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useDefaults) { setLocation(com.mycompany.mavenproject1.Ball.DEFAULT_SPAWN_LOCATION); setSpeed(com.mycompany.mavenproject1.Ball.DEFAULT_INITIAL_SPEED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8154/buggy-version/src.main.java.com.mycompany.mavenproject1.Ball.java", "BodyUseAPI": [], "Fixed commit": "108c45c957741e36c833258a2d12ae2b17fd4b4a", "Url": "https://api.github.com/repos/Denpeer/ContextProject", "Date": "2015-05-13T21:46:40Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gps_enabled) { location_manager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, location_listening); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6445/buggy-version/app.src.main.java.com.llp.lunchkaki.helpers.CurrentLocation.java", "BodyUseAPI": [], "Fixed commit": "4213eddd855f5c73f9b462aed4f3f75ea0ee936d", "Url": "https://api.github.com/repos/brianfwz/lkk", "Date": "2016-05-04T07:38:59Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (network_enabled) { location_manager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, location_listening); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6445/buggy-version/app.src.main.java.com.llp.lunchkaki.helpers.CurrentLocation.java", "BodyUseAPI": [], "Fixed commit": "4213eddd855f5c73f9b462aed4f3f75ea0ee936d", "Url": "https://api.github.com/repos/brianfwz/lkk", "Date": "2016-05-04T07:38:59Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((link.getApiRequest()) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2683/buggy-version/src.main.java.com.pratilipi.api.impl.navigation.NavigationListApi.java", "BodyUseAPI": [], "Fixed commit": "ed446370bb37e51d96006007474625698f99e2dc", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-09-01T05:14:12Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((segs.length) < 2) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6337/buggy-version/src.annotateusinggenomicinfo.ParseCommandLine.java", "BodyUseAPI": [], "Fixed commit": "b97046cb694e25b961a234d49046575eb0f53f66", "Url": "https://api.github.com/repos/njdbickhart/AnnotateUsingGenomicInfo", "Date": "2015-08-03T13:36:55Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mTokens.containsKey(token)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2787/buggy-version/core.java.android.os.TokenWatcher.java", "BodyUseAPI": [], "Fixed commit": "dfe472ecae7783040491b2fadc5a14ad8e9bff6c", "Url": "https://api.github.com/repos/aosp-mirror/platform_frameworks_base", "Date": "2017-11-02T10:36:01Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (titleParameters.getJSONObject(j).has(\"description\")) { stringkeys.add(java.lang.Integer.toString(titleParameters.getJSONObject(j).getInt(\"description\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5504/buggy-version/src.unidaplan.SampleTypeParamGrps.java", "BodyUseAPI": ["titleParameters.getJSONObject(j).getInt(java.lang.String)", "java.lang.Integer.toString(titleParameters.getJSONObject(j).getInt(\"description\"))", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "org.json.JSONArray.getJSONObject(int)"], "Fixed commit": "ca22a0f006f96f19cb63d55c3627cedcc9ce4b48", "Url": "https://api.github.com/repos/rissom/unidaplan", "Date": "2017-08-04T21:06:05Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 0) { holder.setTopMargin(8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/218/buggy-version/app.src.main.java.com.apkupdater.adapter.UpdaterAdapter.java", "BodyUseAPI": [], "Fixed commit": "56669576eb3df657d163919410a5dc1be7a26793", "Url": "https://api.github.com/repos/rumboalla/apkupdater", "Date": "2017-06-13T12:08:46Z"},
{"Line": "=>1007", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tempString.contains(\" \")) { java.lang.String[] split = tempString.split(\" \"); for (int i = 0; i < (split.length); i++) { if (i > 0) { includeString += \"\\\\\" + \"space \"; } includeString += split[i]; } includeString = ('\"' + includeString) + '\"'; }else includeString = tempString;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4192/buggy-version/src.dna.latex.TexFile.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "df9ff34d15d7f739ed8e0768ac973fa741cb6058", "Url": "https://api.github.com/repos/BenjaminSchiller/DNA", "Date": "2016-03-15T16:39:23Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAvailable()) { player.sendMessage(videoRenderer, MediaCodecVideoTrackRenderer.MSG_SET_SURFACE, new android.view.Surface(getSurfaceTexture())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8074/buggy-version/app.src.main.java.org.sunger.net.ui.widget.VideoView.java", "BodyUseAPI": [], "Fixed commit": "9c9ddeb78a52ed6ab9d597da1b6f9e21a0fe7490", "Url": "https://api.github.com/repos/sungerk/meiShi", "Date": "2016-04-07T10:09:05Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hello.MossolController.httpConnection.post(hello.MossolController.REPLY_URI, writeJsonString(replyRequest))) { return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2765/buggy-version/src.main.java.hello.MossolController.java", "BodyUseAPI": [], "Fixed commit": "d7683e0129f4008994c3e72237e2507dd58c3821", "Url": "https://api.github.com/repos/AmosDoan/line_bot_mossol", "Date": "2017-12-04T05:08:39Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item.isAll()) { if (!first) { builder.append(\", \"); } builder.append(item.toString()); first = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4041/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.parser.OProjection.java", "BodyUseAPI": ["java.lang.StringBuilder.append(item.toString())", "com.orientechnologies.orient.core.sql.parser.OProjectionItem.toString()"], "Fixed commit": "7d6926491a6802ab4f15473e73d3b1c7a176d958", "Url": "https://api.github.com/repos/Sciumo/orientdb", "Date": "2015-07-06T08:08:35Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (all) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4041/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.parser.OProjectionItem.java", "BodyUseAPI": [], "Fixed commit": "7d6926491a6802ab4f15473e73d3b1c7a176d958", "Url": "https://api.github.com/repos/Sciumo/orientdb", "Date": "2015-07-06T08:08:35Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (o != null) { ret.add(o.copy()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7595/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.tile.TileEntityDeconstructor.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.copy()", "java.util.List<net.minecraft.item.ItemStack>.add(o.copy())"], "Fixed commit": "9009f2efbda38646de7a1b9e4b1724b4b2e669b1", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2017-07-10T09:59:45Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cartStatus) == \"full\") { showPlaceDialog(); }else { android.widget.Toast.makeText(this, \"Your Cart Is Empty!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5692/buggy-version/app.src.main.java.com.flyingburritoco.mobilemenu.Cart.java", "BodyUseAPI": [], "Fixed commit": "123b4371876a714d4eabb22b9dc73e09999f3179", "Url": "https://api.github.com/repos/SparksCode/Flying-Burrito-Mobile", "Date": "2017-12-03T06:42:43Z"},
{"Line": "=>1043", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ome.util.SqlAction.findEventType(s.getDefaultEventType().getValue())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { throw new ome.conditions.ApiUsageException((\"Bad event type: \" + (s.getDefaultEventType().getValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6417/buggy-version/components.server.src.ome.services.sessions.SessionManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "94a18868061041995fe0446ce6cfd5ffff96adf3", "Url": "https://api.github.com/repos/openmicroscopy/openmicroscopy", "Date": "2012-05-28T20:26:18Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openiot.ui.request.definition.web.scopes.controllers.pages.ApplicationDesignPageController.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (context.isPersistSpec()) { try { org.openiot.ui.request.commons.providers.SchedulerAPIWrapper.registerService(context.getAppManager().exportOSDSpec()); } catch (org.openiot.ui.request.commons.providers.exceptions.APIException ex) { org.openiot.ui.request.commons.logging.LoggerService.log(ex); javax.faces.context.FacesContext.getCurrentInstance().addMessage(null, new javax.faces.application.FacesMessage(javax.faces.application.FacesMessage.SEVERITY_FATAL, messages.getString(\"GROWL_ERROR_HEADER\"), org.openiot.ui.request.definition.web.util.FaceletLocalization.getLocalisedMessage(messages, \"ERROR_CONNECTING_TO_REGISTRATION_SERVICE\"))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6927/buggy-version/ui.ui.requestDefinition.src.main.java.org.openiot.ui.request.definition.web.scopes.controllers.pages.ApplicationDesignPageController.java", "BodyUseAPI": ["context.getAppManager().exportOSDSpec()", "org.openiot.ui.request.definition.web.scopes.session.context.pages.ApplicationDesignPageContext.getAppManager()", "org.openiot.ui.request.commons.providers.SchedulerAPIWrapper.registerService(context.getAppManager().exportOSDSpec())"], "Fixed commit": "5fea1c9637d975752f2a0a0301f0c1299c0221ba", "Url": "https://api.github.com/repos/OpenIotOrg/openiot", "Date": "2013-10-02T12:03:55Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.dakror.arise.Arise.wrapper) addLayer(new de.dakror.arise.layer.LoginLayerDakrorLauncher());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/791/buggy-version/src.main.java.de.dakror.arise.game.Game.java", "BodyUseAPI": [], "Fixed commit": "a4fded42f732cba76b5d9e05540067510cc9c12e", "Url": "https://api.github.com/repos/Dakror/Arise", "Date": "2014-04-23T21:50:14Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((values.length) % 2) == 1) { throw new java.lang.IllegalArgumentException(\"Mismatched arguments count.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/8483/buggy-version/src.main.java.jetbrick.template.runtime.JetUtils.java", "BodyUseAPI": [], "Fixed commit": "caa2931d89502d08cad32825335b87cb09d6d9fb", "Url": "https://api.github.com/repos/subchen/jetbrick-template", "Date": "2013-12-07T14:16:47Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFinishing()) { stopService(new android.content.Intent(this, de.roughriders.jf.eta.services.DistanceNotificationService.class)); de.roughriders.jf.eta.helpers.Logger.getInstance().close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3203/buggy-version/app.src.main.java.de.roughriders.jf.eta.activities.TripActivity.java", "BodyUseAPI": [], "Fixed commit": "0c240185527469c8065958c82163c0ad34fdd5cc", "Url": "https://api.github.com/repos/b0wter/ETA", "Date": "2016-08-06T10:23:20Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!isFriendly) && (u.isBeingConstructed())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1398/buggy-version/eisbw.src.main.java.eisbw.percepts.perceivers.UnitsPerceiver.java", "BodyUseAPI": [], "Fixed commit": "f321aa62dba916641947b0c2d421ef39d300213f", "Url": "https://api.github.com/repos/eishub/Starcraft", "Date": "2016-06-01T13:01:46Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isDirect()) { pushMatrix(); applyMatrix(matrix); pushMatrix(); translate(0, 0, vialab.SMT.SMT.getNextZone_Z()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1676/buggy-version/src.vialab.SMT.Zone.java", "BodyUseAPI": [], "Fixed commit": "98faebbf48e9a87b18fbc77398833136203d15a4", "Url": "https://api.github.com/repos/vialab/SMT", "Date": "2014-06-05T20:35:19Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((g.playerListener) != null) { mediaPlayer.setOnPreparedListener(g.playerListener); }else { mediaPlayer.setOnPreparedListener(new android.media.MediaPlayer.OnPreparedListener() { @java.lang.Override public void onPrepared(android.media.MediaPlayer mp) { g.playerDuration = mp.getDuration(); mp.start(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4968/buggy-version/src.com.stanford.tutti.Jam.java", "BodyUseAPI": ["android.media.MediaPlayer.setOnPreparedListener(g.playerListener)", "android.media.MediaPlayer.setOnPreparedListener(android.media.MediaPlayer.OnPreparedListener)"], "Fixed commit": "4b1b20542c406328019d62e3b421bf2823dd008c", "Url": "https://api.github.com/repos/JayThomason/Tutti", "Date": "2014-05-05T08:18:06Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Runtime.exec(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((p.exitValue()) != 0) throw new java.lang.RuntimeException((((((\"Failed to get the ip address of the master node! Script returned exit code: \" + (p.exitValue())) + \"\\nstdout: \") + stdout) + \"\\nstderr: \") + (org.apache.commons.io.IOUtils.toString(p.getErrorStream()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5025/buggy-version/genomix.genomix-data.src.main.java.edu.uci.ics.genomix.minicluster.DriverUtils.java", "BodyUseAPI": ["org.apache.commons.io.IOUtils.toString(java.io.InputStream)", "java.lang.Process.exitValue()", "java.lang.Process.getErrorStream()"], "Fixed commit": "e4acb3e90b23d8c291a35155ef200b38c63054c3", "Url": "https://api.github.com/repos/uci-cbcl/genomix", "Date": "2013-10-23T00:11:11Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (code == (com.easemob.EMError.UNABLE_CONNECT_TO_SERVER)) info = \"\u65e0\u6cd5\u8fde\u63a5\u5230\u670d\u52a1\u5668\uff0c\u8bf7\u68c0\u67e5\u60a8\u7684\u7f51\u7edc\u662f\u5426\u8fde\u63a5\"; else if (code == (com.easemob.EMError.INVALID_PASSWORD_USERNAME)) info = \"\u767b\u5f55\u5931\u8d25\uff0c \u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\"; else info = \"\u672a\u77e5\u9519\u8bef\uff0c\u8bf7\u7a0d\u540e\u518d\u8bd5\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3987/buggy-version/app.src.main.java.jc.house.activities.CustomerHelperLoginActivity.java", "BodyUseAPI": [], "Fixed commit": "cd7a3d0c4e6a5cb7a4dfa447d233989164941ffb", "Url": "https://api.github.com/repos/nannanIT/House", "Date": "2016-03-03T07:07:32Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((plist.size()) == 0) { plist.add(new com.pk.example.entity.ProfileEntity(new com.pk.example.clientui.Profile(\"No profiles to show.\", new java.util.ArrayList(java.util.Arrays.asList(\"Buenos Aires\", \"C\u00f3rdoba\", \"La Plata\")), false))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6053/buggy-version/Focus!.src.main.java.com.pk.example.clientui.ScheduleViewActivity.java", "BodyUseAPI": ["java.util.ArrayList<com.pk.example.entity.ProfileEntity>.add(com.pk.example.entity.ProfileEntity)"], "Fixed commit": "e30057d46c34399f541188fc5ea556ab5e0f229a", "Url": "https://api.github.com/repos/andyly123/Focus", "Date": "2017-11-09T03:34:30Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (result != null) { result.sortItemGroupDataRepeatingLast(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5435/buggy-version/radplanbio-core.src.main.java.de.dktk.dd.rpb.core.service.DataTransformationService.java", "BodyUseAPI": ["de.dktk.dd.rpb.core.service.Odm.sortItemGroupDataRepeatingLast()"], "Fixed commit": "0faa4449f3270213b03996a321c2c450587ebbac", "Url": "https://api.github.com/repos/ddRPB/rpb", "Date": "2017-04-21T10:08:13Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.pod.manager.ActivityHandler.executionTimes.get(activityId)) == null) newActivityTimeRegister(activityId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6146/buggy-version/application.src.com.pod.manager.ActivityHandler.java", "BodyUseAPI": ["com.pod.manager.ActivityHandler.newActivityTimeRegister(int)"], "Fixed commit": "88b2979dd31129f63ccdee9423c6f2546cfd3a9a", "Url": "https://api.github.com/repos/gpuenteallott/pod", "Date": "2014-07-19T22:30:43Z"},
{"Line": "=>1148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((passenger.getMPricecategory()) != null) { if (\"ADT\".equalsIgnoreCase(passenger.getMPricecategory().getCode())) { adult += 1; }else if (\"CHD\".equalsIgnoreCase(passenger.getMPricecategory().getCode())) { child += 1; }else if (\"INF\".equalsIgnoreCase(passenger.getMPricecategory().getCode())) { infant += 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5453/buggy-version/src.java.com.smi.travel.controller.AirTicketDetailController.java", "BodyUseAPI": ["com.smi.travel.datalayer.entity.AirticketPassenger.getMPricecategory()", "java.lang.String.equalsIgnoreCase(passenger.getMPricecategory().getCode())", "passenger.getMPricecategory().getCode()", "passenger.getMPricecategory().getCode()", "com.smi.travel.datalayer.entity.AirticketPassenger.getMPricecategory()", "java.lang.String.equalsIgnoreCase(passenger.getMPricecategory().getCode())", "passenger.getMPricecategory().getCode()", "java.lang.String.equalsIgnoreCase(passenger.getMPricecategory().getCode())", "com.smi.travel.datalayer.entity.AirticketPassenger.getMPricecategory()"], "Fixed commit": "c1ff7c1740c653bb6970db080dffebd6c577a68b", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2016-03-24T09:31:49Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((str.length()) == 0) { return \"Empty\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/3037/buggy-version/app.src.main.java.joseph.com.mealplan.GroceryListFragment.java", "BodyUseAPI": [], "Fixed commit": "af052697ffdcfc67676ef78bac7e1b2fdd28d36f", "Url": "https://api.github.com/repos/jgleoj23/MealPlan", "Date": "2017-07-27T20:11:20Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.evolveum.midpoint.prism.delta.PrismContainerDefinition<V>.findItemDefinition(com.evolveum.midpoint.prism.path.ItemPath)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (itemDefinition == null) { throw new java.lang.IllegalStateException((((\"No definition of \" + path) + \" in \") + (getDefinition()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/4049/buggy-version/infra.prism.src.main.java.com.evolveum.midpoint.prism.delta.ContainerDelta.java", "BodyUseAPI": [], "Fixed commit": "2782ff55574f682c39b9651db6b02a21112e7e8b", "Url": "https://api.github.com/repos/PetrGasparik/midpoint", "Date": "2016-12-05T13:17:44Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["no.difi.statistics.ingest.IngestService.last(no.difi.statistics.model.TimeSeriesDefinition.builder().name(seriesName).distance(distance).owner(owner))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lastPoint == null) response.setStatus(HttpStatus.NO_CONTENT.value());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1193/buggy-version/statistics-ingest.src.main.java.no.difi.statistics.ingest.api.IngestRestController.java", "BodyUseAPI": [], "Fixed commit": "2113120d2cce67ceb232d31aadc27e1196ab83e2", "Url": "https://api.github.com/repos/difi/poc-statistics", "Date": "2017-10-04T14:24:43Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection.getResponseCode()) == 204) return java.util.Optional.empty();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1193/buggy-version/statistics-client-ingest.src.main.java.no.difi.statistics.ingest.client.IngestClient.java", "BodyUseAPI": [], "Fixed commit": "2113120d2cce67ceb232d31aadc27e1196ab83e2", "Url": "https://api.github.com/repos/difi/poc-statistics", "Date": "2017-10-04T14:24:43Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.DimitriVranken.DatAdventure.DatAdventure.applicationProperties.getBoolean(\"debug_mode\", false)) { character_delay = 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/1706/buggy-version/src.src.com.DimitriVranken.DatAdventure.DatAdventure.java", "BodyUseAPI": [], "Fixed commit": "82f9238f83014b93e7ff209225cef9a58fd5e4ad", "Url": "https://api.github.com/repos/drasive/dat-adventure", "Date": "2014-08-22T14:07:11Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.jrew.geocatch.mobile.dao.PostponedImageManager.isPostponedImagesPresented(getActivity()))) { com.jrew.geocatch.mobile.util.FragmentSwitcherHolder.getFragmentSwitcher().showSingleUploadedPhotosFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/2659/buggy-version/geo-catch-mobile.src.main.java.com.jrew.geocatch.mobile.fragment.PrepareUserActionBarFragment.java", "BodyUseAPI": [], "Fixed commit": "df90cc3bebf2206eadd841c4e3b524f703141142", "Url": "https://api.github.com/repos/vadzim-kazak/geo-catch", "Date": "2014-02-12T18:49:57Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerQuitEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mAllProxied.containsKey(player.getUniqueId())) { au.com.addstar.bc.RemotePlayer current = new au.com.addstar.bc.RemotePlayer(player.getUniqueId(), player.getName()); mAllProxied.put(player.getUniqueId(), current); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/6941/buggy-version/Bukkit.src.au.com.addstar.bc.PlayerManager.java", "BodyUseAPI": ["com.google.common.collect.HashBiMap<java.util.UUID, org.bukkit.command.CommandSender>.put(player.getUniqueId(),au.com.addstar.bc.RemotePlayer)", "org.bukkit.entity.Player.getName()", "org.bukkit.entity.Player.getUniqueId()", "org.bukkit.entity.Player.getUniqueId()"], "Fixed commit": "13e28ae8338d6ca33db74638409baadb797b0289", "Url": "https://api.github.com/repos/Schmoller/BungeeChat", "Date": "2014-10-02T06:14:09Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menu.item.getItemId()) != (mOptionId)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/7679/buggy-version/src.org.denevell.droidnatch.app.views.FragmentPopOnOptionMenuActivator.java", "BodyUseAPI": [], "Fixed commit": "310f956c957a2108fd46dc30692412d44fc3a973", "Url": "https://api.github.com/repos/denevell/Natch-Android", "Date": "2014-03-07T16:48:44Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((file.exists()) && (!(file.isDirectory()))) { buildError(6, receivePacket, verbose); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V28/5215/buggy-version/iteration_1.src.TFTPWriteThread.java", "BodyUseAPI": [], "Fixed commit": "c9b1bd4fc89d68549791e371b2d6ff5699dd04ff", "Url": "https://api.github.com/repos/SYSC3303-Team4/Iteration_2", "Date": "2016-10-15T01:41:33Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.temenos.interaction.rimdsl.generator.launcher.Generator.runGenerator(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!fileResult) { result = fileResult; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7640/buggy-version/interaction-dsl.com.temenos.interaction.rimdsl.generator.src.main.java.com.temenos.interaction.rimdsl.generator.launcher.Generator.java", "BodyUseAPI": [], "Fixed commit": "f15d56a33acf2b97b12f500e5b15e3b9641e8c58", "Url": "https://api.github.com/repos/temenostech/IRIS", "Date": "2013-11-21T13:55:40Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uploadedPhotosAdapter.getImagesCount()) == 0) { com.jrew.geocatch.mobile.fragment.LayoutUtil.showRefreshLayout(getActivity(), R.string.uploadedPhotosLoadingCancelled); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8530/buggy-version/geo-catch-mobile.src.main.java.com.jrew.geocatch.mobile.fragment.UploadedPhotosFragment.java", "BodyUseAPI": [], "Fixed commit": "18fe53814146695d99bb959d87ee4563d76b008b", "Url": "https://api.github.com/repos/vadzim-kazak/geo-catch", "Date": "2014-03-03T14:00:40Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (url == null) { java.io.File f = new java.io.File(((\"bin/\" + (location)) + \".properties\")); configFile.store(new java.io.FileOutputStream(new java.io.File(f.getAbsolutePath())), null); }else { configFile.store(new java.io.FileOutputStream(new java.io.File(url.toURI())), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4012/buggy-version/wp4wp5.src.be.xios.project.GUI.jury.Settings.java", "BodyUseAPI": ["java.net.URL.toURI()", "java.util.Properties.store(java.io.FileOutputStream,<nulltype>)"], "Fixed commit": "1dd915610b2b03774f985790b4de964f166aca9a", "Url": "https://api.github.com/repos/hfsdo/project2ti", "Date": "2013-02-28T18:11:25Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.berkeley.cs.nlp.ocular.data.textreader.Charset.removeAnyDiacriticFromChar(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((nextWithoutDiacritics.length()) != 1) { if (!(nextWithoutDiacritics.equals(\"\\\\\\\\\"))) { throw new java.lang.AssertionError(((\"expected nextWithoutDiacritics [\" + nextWithoutDiacritics) + \"] length() == 1\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3261/buggy-version/src.main.java.edu.berkeley.cs.nlp.ocular.data.textreader.ConvertLongSTextReader.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "0917f481a74e99db515df0c9d9ca6f211a07d1e6", "Url": "https://api.github.com/repos/tberg12/ocular", "Date": "2017-01-25T07:28:44Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sliceSampler) { }else { factory.excludeNodeMove(conifer.moves.RealVectorOverRelaxedSlice.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6737/buggy-version/src.main.java.conifer.SingleProteinModel.java", "BodyUseAPI": [], "Fixed commit": "5846b51c602c6470b2d58afd42b0a097372f7caf", "Url": "https://api.github.com/repos/alexandrebouchard/conifer", "Date": "2015-06-21T19:19:15Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.investovator.core.data.cassandraexplorer.CassandraManagerImpl.getClusterInitialized()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.investovator.core.data.cassandraexplorer.utils.CassandraConnector.isColumnFamilyAvailable(cluster, org.investovator.core.data.cassandraexplorer.KEYSPACE, columnFamilyName)) { org.investovator.core.data.cassandraexplorer.utils.CassandraConnector.dropColumnFamily(cluster, org.investovator.core.data.cassandraexplorer.KEYSPACE, columnFamilyName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1868/buggy-version/src.main.java.org.investovator.core.data.cassandraexplorer.CassandraManagerImpl.java", "BodyUseAPI": ["org.investovator.core.data.cassandraexplorer.utils.CassandraConnector.dropColumnFamily(me.prettyprint.hector.api.Cluster,org.investovator.core.data.cassandraexplorer.KEYSPACE,java.lang.String)"], "Fixed commit": "24f3c8cb7fe80d58e56ca0aadf339701c2243c3e", "Url": "https://api.github.com/repos/investovator/investovator-core", "Date": "2013-11-14T05:17:21Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.investovator.core.data.cassandraexplorer.CassandraManagerImpl.getClusterInitialized()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.investovator.core.data.cassandraexplorer.utils.CassandraConnector.isColumnFamilyAvailable(cluster, org.investovator.core.data.cassandraexplorer.KEYSPACE, columnFamilyName)) { org.investovator.core.data.cassandraexplorer.utils.CassandraConnector.truncateColumnFamily(cluster, org.investovator.core.data.cassandraexplorer.KEYSPACE, columnFamilyName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1868/buggy-version/src.main.java.org.investovator.core.data.cassandraexplorer.CassandraManagerImpl.java", "BodyUseAPI": ["org.investovator.core.data.cassandraexplorer.utils.CassandraConnector.truncateColumnFamily(me.prettyprint.hector.api.Cluster,org.investovator.core.data.cassandraexplorer.KEYSPACE,java.lang.String)"], "Fixed commit": "24f3c8cb7fe80d58e56ca0aadf339701c2243c3e", "Url": "https://api.github.com/repos/investovator/investovator-core", "Date": "2013-11-14T05:17:21Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.easemob.chat.ImageMessageBody.getRemoteUrl()", "com.easemob.chat.ImageMessageBody.getThumbnailUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((android.text.TextUtils.isEmpty(thumbRemoteUrl)) && (!(android.text.TextUtils.isEmpty(remotePath)))) { thumbRemoteUrl = remotePath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/914/buggy-version/ChatDemoUI.src.com.easemob.chatuidemo.adapter.MessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "592d5afa6d756b51f3d96a260da4e00da250193e", "Url": "https://api.github.com/repos/liyuzhao/sdkexamples-android", "Date": "2015-06-11T03:14:11Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fragment != null) { android.util.Log.i(com.adguard.android.contentblocker.onboarding.OnboardingActivity.TAG, (\"Removing fragment \" + (fragment.toString()))); transaction.remove(fragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5346/buggy-version/adguard_cb.src.main.java.com.adguard.android.contentblocker.onboarding.OnboardingActivity.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,(\"Removing fragment \" + (fragment.toString())))", "android.support.v4.app.Fragment.toString()", "android.support.v4.app.FragmentTransaction.remove(android.support.v4.app.Fragment)"], "Fixed commit": "673c4bb303e3cbbd4f7e0768ac2e52c83755ce1d", "Url": "https://api.github.com/repos/AdguardTeam/ContentBlocker", "Date": "2017-02-07T13:06:37Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Dictionary<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (liferayService != null) { parentAppContext = _buildParentContext(extenderBundle, classLoader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1567/buggy-version/osgi.modules.spring-extender-module.spring-extender.src.main.java.com.liferay.spring.extender.context.ModuleApplicationContextCreator.java", "BodyUseAPI": [], "Fixed commit": "a406e20194470f1a8cacefc8dee5056aa052bf1b", "Url": "https://api.github.com/repos/csierra/liferay-portal", "Date": "2014-04-01T07:02:23Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (project.getOutputsBudgets().isEmpty()) { this.addMissingField(\"project.budgetbyMog.nosection\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6633/buggy-version/impactPathways.src.main.java.org.cgiar.ccafs.ap.validation.planning.ProjectBudgetByMOGValidator.java", "BodyUseAPI": [], "Fixed commit": "fef0614c24f80369880cf297d0f1a161d412bb7a", "Url": "https://api.github.com/repos/CCAFS/ccafs-ap", "Date": "2015-11-19T15:35:13Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (project.getBudgets().isEmpty()) { this.addMissingField(\"project.budgets.nosection\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6633/buggy-version/impactPathways.src.main.java.org.cgiar.ccafs.ap.validation.planning.ProjectBudgetPlanningValidator.java", "BodyUseAPI": [], "Fixed commit": "fef0614c24f80369880cf297d0f1a161d412bb7a", "Url": "https://api.github.com/repos/CCAFS/ccafs-ap", "Date": "2015-11-19T15:35:13Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, double[]>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((counts.length) < (totals.length)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4558/buggy-version/src.main.java.edu.gslis.indexes.TimeSeriesIndex.java", "BodyUseAPI": [], "Fixed commit": "0f0c835850d20634e91509cc4fdf63a67d77656e", "Url": "https://api.github.com/repos/craig-willis/temporal", "Date": "2015-01-20T19:57:29Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Class, java.lang.String>.get(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (alias != null) { classStringMap.putIfAbsent(clazz, alias); return alias; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5439/buggy-version/src.main.java.net.openhft.chronicle.core.pool.ClassAliasPool.java", "BodyUseAPI": ["java.util.Map<java.lang.Class, java.lang.String>.putIfAbsent(java.lang.Class,java.lang.String)"], "Fixed commit": "134b5a270dd567d152208dcbedee2d37973afd6e", "Url": "https://api.github.com/repos/OpenHFT/Chronicle-Core", "Date": "2017-08-25T11:54:35Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == (REQUEST_CODE_ASK_EXTERNAL_READ_PERMISSIONS)) { if (((grantResults.length) > 0) && ((grantResults[0]) == (android.content.pm.PackageManager.PERMISSION_GRANTED))) { getFilePicker(); }else { org.greenrobot.eventbus.EventBus.getDefault().post(new in.co.gorest.grblcontroller.events.UiToastEvent(getString(R.string.no_external_read_permission))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3988/buggy-version/app.src.main.java.in.co.gorest.grblcontroller.ui.FileSenderTabFragment.java", "BodyUseAPI": [], "Fixed commit": "1b87b2f43e9148906c9a28a70a86c5bab9d87382", "Url": "https://api.github.com/repos/zeevy/grblcontroller", "Date": "2017-10-30T06:29:11Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(URI.contains(\"individual/n\"))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7312/buggy-version/webapp.src.edu.cornell.mannlib.vitro.webapp.beans.BaseResourceBean.java", "BodyUseAPI": [], "Fixed commit": "3672337dcd3efd0486ed3aaaed5cb977735017b5", "Url": "https://api.github.com/repos/tetherless-world/Vitro", "Date": "2013-07-29T15:07:43Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gephi.graph.impl.Serialization.deserialize(java.io.DataInput)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (estimator != null) { column.setEstimator(estimator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4158/buggy-version/store.src.main.java.org.gephi.graph.impl.Serialization.java", "BodyUseAPI": ["org.gephi.graph.impl.ColumnImpl.setEstimator(org.gephi.graph.api.Estimator)"], "Fixed commit": "f292eb82ca5f412995cdaa4de816785427409bc8", "Url": "https://api.github.com/repos/gephi/graphstore", "Date": "2015-09-08T14:56:17Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prependDocType) { os.write(((docTypeTag) + \"\\n\").getBytes(getCharset())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3001/buggy-version/wffweb.src.main.java.com.webfirmframework.wffweb.tag.html.DocType.java", "BodyUseAPI": [], "Fixed commit": "0a072fbe3e4bcd49146e96877b6b61da071211fe", "Url": "https://api.github.com/repos/webfirmframework/wff", "Date": "2016-07-12T14:35:39Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prependDocType) { os.write(((docTypeTag) + \"\\n\").getBytes(getCharset())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3001/buggy-version/wffweb.src.main.java.com.webfirmframework.wffweb.tag.html.DocType.java", "BodyUseAPI": [], "Fixed commit": "0a072fbe3e4bcd49146e96877b6b61da071211fe", "Url": "https://api.github.com/repos/webfirmframework/wff", "Date": "2016-07-12T14:35:39Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (extras != null) { setTitle(extras.getString(\"title\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1038/buggy-version/OneDrinkAway.src.com.onedrinkaway.app.ResultsPage.java", "BodyUseAPI": ["com.onedrinkaway.app.ResultsPage.setTitle(extras.getString(\"title\"))", "android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "c7466751ff3be70a77bdac138df02df7434b7c77", "Url": "https://api.github.com/repos/teamGaia/OneDrinkAway", "Date": "2014-05-14T21:35:07Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(td.child(9).text().equals(\"\"))) { char NA = td.child(9).text().charAt(0); models.id.ac.unpar.siamodels.TahunSemester tahunSemesterNilai = new models.id.ac.unpar.siamodels.TahunSemester(java.lang.Integer.parseInt(thn), models.id.ac.unpar.siamodels.Semester.fromString(sem)); logged_mhs.getRiwayatNilai().add(new models.id.ac.unpar.siamodels.Mahasiswa.Nilai(tahunSemesterNilai, curr_mk, kelas, ART, UTS, UAS, NA)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6306/buggy-version/app.StudentPortal.app.models.support.Scraper.java", "BodyUseAPI": ["td.child(9).text().charAt(int)", "org.jsoup.nodes.Element.child(int)", "td.child(9).text()"], "Fixed commit": "4b9fb8cbc85ac32d23c64dc2aa6ce63d4b93cec3", "Url": "https://api.github.com/repos/herfanheryandi/Skripsi", "Date": "2015-11-23T10:29:17Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (statie.equals(parent.getItemAtPosition(position).toString())) tvLinieWithStatii.setTypeface(Typeface.DEFAULT_BOLD);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7171/buggy-version/app.src.main.java.com.example.user.master.StatiiActivity.java", "BodyUseAPI": [], "Fixed commit": "bb48e9dcda5ca9911932aec97b4840e3adac6b9b", "Url": "https://api.github.com/repos/bogdanblunt/disertatieandroid", "Date": "2015-06-07T22:46:29Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.andela.helpmebuy.activities.UserSettingsActivity.getSupportActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (actionBar != null) actionBar.setDisplayHomeAsUpEnabled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2093/buggy-version/app.src.main.java.com.andela.helpmebuy.activities.UserSettingsActivity.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.setDisplayHomeAsUpEnabled(boolean)"], "Fixed commit": "6c68b1ee67c5df602a8aa63cd1e5104470380e16", "Url": "https://api.github.com/repos/andela/helpmebuy", "Date": "2016-02-09T13:53:05Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (acceptable) { for (java.nio.file.PathMatcher pm : excludeMatchers) { if (pm.matches(rel)) { if (((log) != null) && (log.isDebugEnabled())) log.debug((((\"[EXCLUDE] \" + rel) + \" matches \") + pm)); acceptable = false; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6547/buggy-version/src.main.java.top.marchand.xml.maven.plugin.xsl.scandir.DirectoryScanner.java", "BodyUseAPI": [], "Fixed commit": "56eed5580d170e37bf37958b4a2e0217bb79ad86", "Url": "https://api.github.com/repos/cmarchand/xslCompiler-maven-plugin", "Date": "2017-09-06T13:37:27Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((findViewById(R.id.join_chatroom)) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5212/buggy-version/app.src.main.java.hk.ust.cse.hunkim.questionroom.JoinActivity.java", "BodyUseAPI": [], "Fixed commit": "ab9706502e814d1345de6b93b1df94b93bfc292d", "Url": "https://api.github.com/repos/wcc831/comp3111", "Date": "2015-10-31T19:16:04Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dbreturn == null) { if (com.ibm.ws.security.javaeesec.identitystore.DatabaseIdentityStore.tc.isEventEnabled()) { com.ibm.websphere.ras.Tr.event(com.ibm.ws.security.javaeesec.identitystore.DatabaseIdentityStore.tc, (\"The password returned from database is null for caller: \" + caller)); } return javax.security.enterprise.identitystore.CredentialValidationResult.INVALID_RESULT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1946/buggy-version/dev.com.ibm.ws.security.javaeesec.src.com.ibm.ws.security.javaeesec.identitystore.DatabaseIdentityStore.java", "BodyUseAPI": [], "Fixed commit": "1ef834336cd56aa9a680a0744fe22f4e68ab9be3", "Url": "https://api.github.com/repos/benjamin-confino/open-liberty", "Date": "2017-11-16T15:49:19Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mRefreshableView.getChildCount()) > 0) { final android.view.View firstVisibleChild = mRefreshableView.getChildAt(0); return (firstVisibleChild.getTop()) >= (mRefreshableView.getTop()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/336/buggy-version/library.src.com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase.java", "BodyUseAPI": ["com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase.getTop()", "com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase.getChildAt(int)"], "Fixed commit": "07f373af35dff95218f5ad0f9f96938be716a7e6", "Url": "https://api.github.com/repos/Spayce/Android-PullToRefresh", "Date": "2014-03-17T03:03:06Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.serde2.objectinspector.ListObjectInspector.getListLength(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((myagg.sumArray.size()) < listLen) { myagg.sumArray.ensureCapacity(listLen); while ((myagg.sumArray.size()) < listLen) { myagg.sumArray.add(0.0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8693/buggy-version/src.main.java.brickhouse.udf.timeseries.VectorUnionSumUDAF.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Double>.ensureCapacity(int)", "java.util.ArrayList<java.lang.Double>.size()", "java.util.ArrayList<java.lang.Double>.add(double)"], "Fixed commit": "31abdb6f27278974a75f505cb6688c41ed5847c4", "Url": "https://api.github.com/repos/y-lan/brickhouse", "Date": "2017-03-22T06:50:34Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Object>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tmpObj instanceof org.apache.hadoop.hive.serde2.lazy.LazyPrimitive) { writable = ((org.apache.hadoop.hive.serde2.lazy.LazyPrimitive) (tmpObj)).getWritableObject(); }else { writable = ((org.apache.hadoop.io.Writable) (tmpObj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/574/buggy-version/hive.src.com.esri.hadoop.hive.serde.JsonSerde.java", "BodyUseAPI": [], "Fixed commit": "23121ff56051d08404a3a50b4561fd2e9d62fc5a", "Url": "https://api.github.com/repos/Esri/spatial-framework-for-hadoop", "Date": "2013-06-08T00:32:41Z"},
{"Line": "=>602", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.radarlab.api.STObject.get(Field.Account)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (address.equals(account.address)) { effect.setTakerGets(new org.radarlab.api.AmountObj(preTakerGets.subtract(takerGets).doubleValue(), takerGets.currencyString(), takerGets.issuerString())); effect.setTakerPays(new org.radarlab.api.AmountObj(preTakerPays.subtract(takerPays).doubleValue(), takerPays.currencyString(), takerPays.issuerString())); }else { effect.setTakerGets(new org.radarlab.api.AmountObj(preTakerPays.subtract(takerPays).doubleValue(), takerPays.currencyString(), takerPays.issuerString())); effect.setTakerPays(new org.radarlab.api.AmountObj(preTakerGets.subtract(takerGets).doubleValue(), takerGets.currencyString(), takerGets.issuerString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5822/buggy-version/radar-lib.src.main.java.org.radarlab.api.TransactionImpl.java", "BodyUseAPI": [], "Fixed commit": "861e4ecdfef7b07b6076eff829e6b7bdbc193990", "Url": "https://api.github.com/repos/radrbiz/radarj", "Date": "2015-02-27T08:22:07Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.growcontrol.server.configs.gcServerConfig.getDebug()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((debug != null) && (debug.booleanValue())) xVars.debug(debug.booleanValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7284/buggy-version/server.src.com.growcontrol.server.gcServer.java", "BodyUseAPI": ["java.lang.Boolean.booleanValue()", "com.growcontrol.server.gcServer.debug(boolean)"], "Fixed commit": "c15529ef422b819bf31e9b37615214ed341e2e23", "Url": "https://api.github.com/repos/GrowControl/GrowControl", "Date": "2015-11-14T21:06:17Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(xVars.debug())) { final com.poixson.commonjava.xLogger.xLevel lvl = config.getLogLevel(); if (lvl != null) xLog.getRoot().setLevel(lvl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7284/buggy-version/server.src.com.growcontrol.server.gcServer.java", "BodyUseAPI": [], "Fixed commit": "c15529ef422b819bf31e9b37615214ed341e2e23", "Url": "https://api.github.com/repos/GrowControl/GrowControl", "Date": "2015-11-14T21:06:17Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((de.ovgu.cide.fstgen.ast.FSTNonTerminal) (child)).getChildren().size()) > 2) terminal = ((de.ovgu.cide.fstgen.ast.FSTTerminal) (((de.ovgu.cide.fstgen.ast.FSTNonTerminal) (child)).getChildren().get(2))); else terminal = ((de.ovgu.cide.fstgen.ast.FSTTerminal) (((de.ovgu.cide.fstgen.ast.FSTNonTerminal) (child)).getChildren().get(1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4258/buggy-version/fstcomp.composer.rules.meta.JavaMethodOverridingMeta.java", "BodyUseAPI": ["((de.ovgu.cide.fstgen.ast.FSTNonTerminal) (child)).getChildren().get(int)", "((de.ovgu.cide.fstgen.ast.FSTNonTerminal) (child)).getChildren().get(int)", "de.ovgu.cide.fstgen.ast.FSTNode.getChildren()", "de.ovgu.cide.fstgen.ast.FSTNode.getChildren()"], "Fixed commit": "9dd4ffbbcce922424eb8a03e7a3b6a02bbd0bde4", "Url": "https://api.github.com/repos/fbenduhn/featurehouse", "Date": "2013-04-30T18:23:40Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response) == null) { response = block.get(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1691/buggy-version/jspec-core.src.main.java.ar.com.nonosoft.jspec.block.SupplierProxyCache.java", "BodyUseAPI": [], "Fixed commit": "aae8457232ea5da392b99ea7f5d067c47f56a96c", "Url": "https://api.github.com/repos/adrianmarino/jspec", "Date": "2016-05-29T22:13:07Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.android.launcher2.ForceUserPassword.REQUEST_SET_PASSWORD) == requestCode) { if (resultCode == (android.app.Activity.RESULT_CANCELED)) { ShowToast(\"Failed or cancelled \", Toast.LENGTH_SHORT); resetPassword(); return; } android.content.Intent intent = new android.content.Intent(this, com.android.launcher2.PinOrPasswordChoice.class); startActivityForResult(intent, com.android.launcher2.ForceUserPassword.REQUEST_SET_PIN_OR_PASSWORD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5817/buggy-version/src.com.android.launcher2.ForceUserPassword.java", "BodyUseAPI": [], "Fixed commit": "665ad37eb87c812b7825c11ef4b8a47bd633a197", "Url": "https://api.github.com/repos/PDi-Communication-Systems-Inc/lollipop-packages-apps-Launcher2", "Date": "2017-03-03T16:12:45Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (k == 0) return rst;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3980/buggy-version/src.Top_K_Frequent_Words.java", "BodyUseAPI": [], "Fixed commit": "b4c8baabec926428c672f98bac29b5e2cc1b1032", "Url": "https://api.github.com/repos/adambillylee/lintcode-java", "Date": "2015-11-10T09:45:47Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPullRequest) == null) { menu.removeItem(R.id.share); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2167/buggy-version/src.com.gh4a.fragment.PullRequestFragment.java", "BodyUseAPI": [], "Fixed commit": "5541379bbd932afd308966a9bd4bf6e2d16711af", "Url": "https://api.github.com/repos/maniac103/gh4a", "Date": "2014-09-16T14:23:24Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/861/buggy-version/src.main.java.ff.sql.SqlCreate.java", "BodyUseAPI": [], "Fixed commit": "dc1bfc50c2e2fb1d0a400c452dd008b38aba95dc", "Url": "https://api.github.com/repos/fernandojerez/challenger", "Date": "2017-08-03T23:50:17Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActivity) != null) { mDeviceRotation = mActivity.getWindowManager().getDefaultDisplay().getRotation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7785/buggy-version/vrlib.src.main.java.com.asha.vrlib.strategy.interactive.MotionStrategy.java", "BodyUseAPI": [], "Fixed commit": "c847a73afdb20daaea0a1f12a67033daa5533997", "Url": "https://api.github.com/repos/vannywang/MD360Player4Android", "Date": "2016-09-02T02:47:42Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recordId) == (-1)) txtServ.setText(\"\"); else txtServ.setText(java.lang.String.valueOf(serving));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4792/buggy-version/DiaryNutrition.app.src.main.java.ediger.diarynutrition.activity.AddActivity.java", "BodyUseAPI": [], "Fixed commit": "ff44a04a7aa6bfa35c4d801980d93604c9bad236", "Url": "https://api.github.com/repos/EDlGER/Diary-Nutrition", "Date": "2017-08-08T11:47:26Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (op == (backend.FloatPointUnit.OP.LD)) { this.target = java.lang.Integer.parseInt(tar.substring(1)); }else if (op == (op.ST)) { this.operand1 = java.lang.Integer.parseInt(tar.substring(1)); }else { assert false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5542/buggy-version/src.backend.Instruction.java", "BodyUseAPI": [], "Fixed commit": "6c2ee8ebb9f82279c92a290e327c6f9a1eb4c7f9", "Url": "https://api.github.com/repos/evan69/Tomasulo", "Date": "2017-06-06T08:50:43Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lcountermax == 0) || (format.equals(\"\"))) || (publicid.equals(\"\"))) return \"redirect:\" + \"http://localhost:8080/homepage\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/905/buggy-version/src.main.java.cloudinary.controllers.PhotoController.java", "BodyUseAPI": [], "Fixed commit": "98dc566c1821d08e03c05ff7d56272f431cb529b", "Url": "https://api.github.com/repos/ahmedpopal456/PPP-Picture-Password-Protector-", "Date": "2017-04-13T06:35:12Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.octo.reactive.audit.URLTools.latencyURL(com.octo.reactive.audit.java.net.URLConnectionAudit,org.aspectj.lang.JoinPoint,java.net.URL)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ex != null) super.logLatency(com.octo.reactive.audit.java.net.HIGH, thisJoinPoint, new com.octo.reactive.audit.java.net.ExceptionFactory() { public com.octo.reactive.audit.lib.ReactiveAuditException lazyException() { return ex; } }); else if (!(com.octo.reactive.audit.NetworkTools.isURLConnected(((java.net.URLConnection) (thisJoinPoint.getTarget()))))) super.latency(com.octo.reactive.audit.java.net.HIGH, thisJoinPoint);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8335/buggy-version/reactive-audit-agent.src.main.java.com.octo.reactive.audit.java.net.URLConnectionAudit.java", "BodyUseAPI": ["com.octo.reactive.audit.AbstractNetworkAudit.logLatency(com.octo.reactive.audit.java.net.HIGH,org.aspectj.lang.JoinPoint,com.octo.reactive.audit.java.net.ExceptionFactory)"], "Fixed commit": "a383e6d6ecb4fb12aba6dd4315a6f4133e5c8ade", "Url": "https://api.github.com/repos/fxbonnet/audit-reactive", "Date": "2014-10-12T15:02:11Z"},
{"Line": "=>1552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isContainsInTypeAnnotation(argument.type.resolvedType, a)) { a.traverse(this, scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4986/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTTreeBuilder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(spoon.support.compiler.jdt.JDTTreeBuilder,org.eclipse.jdt.internal.compiler.lookup.BlockScope)"], "Fixed commit": "1dcfcbb19188c078a2e28c2fbba0f56b2064b1e9", "Url": "https://api.github.com/repos/GerardPaligot/spoon", "Date": "2015-02-17T14:42:39Z"},
{"Line": "=>2152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isContainsInTypeAnnotation(methodDeclaration.returnType.resolvedType, a)) { a.traverse(this, methodDeclaration.scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4986/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTTreeBuilder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(spoon.support.compiler.jdt.JDTTreeBuilder,methodDeclaration.scope)"], "Fixed commit": "1dcfcbb19188c078a2e28c2fbba0f56b2064b1e9", "Url": "https://api.github.com/repos/GerardPaligot/spoon", "Date": "2015-02-17T14:42:39Z"},
{"Line": "=>2028", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isContainsInTypeAnnotation(localDeclaration.type.resolvedType, a)) { a.traverse(this, scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4986/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTTreeBuilder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(spoon.support.compiler.jdt.JDTTreeBuilder,org.eclipse.jdt.internal.compiler.lookup.BlockScope)"], "Fixed commit": "1dcfcbb19188c078a2e28c2fbba0f56b2064b1e9", "Url": "https://api.github.com/repos/GerardPaligot/spoon", "Date": "2015-02-17T14:42:39Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getTargetBlock().getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(optLoc.isPresent())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5987/buggy-version/src.main.java.com.skelril.skree.content.zone.global.templeoffate.TempleOfFateListener.java", "BodyUseAPI": [], "Fixed commit": "e304f036a1fe76d8a00ca5bc125e29171c2e59b6", "Url": "https://api.github.com/repos/Skelril/Skree", "Date": "2016-04-27T02:26:18Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (importSql) { java.util.List<com.photon.phresco.configuration.Configuration> configurations = getConfiguration(Constants.SETTINGS_TEMPLATE_DB); for (com.photon.phresco.configuration.Configuration configuration : configurations) { util.updateSqlQuery(configuration, serverHost, context, serverport); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1409/buggy-version/wordpress-phresco-plugin.src.main.java.com.photon.phresco.plugins.wordpress.Deploy.java", "BodyUseAPI": [], "Fixed commit": "23e315bca36e877a7c9da74204c549ae01203a0c", "Url": "https://api.github.com/repos/phresco/plugins", "Date": "2013-01-04T09:21:53Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LRUCache.removeFromList(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((node.value) != value) { node.value = value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2185/buggy-version/src.LRUCache.java", "BodyUseAPI": [], "Fixed commit": "36c89feadc9383d8988acdcbb7980822599e7521", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-07-12T06:54:30Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSlot != (this.currentSlot)) && ((this.currentSlot) != null)) this.currentSlot.unsetBanner();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8092/buggy-version/core.src.com.esbjon.inventories.Teammate.java", "BodyUseAPI": [], "Fixed commit": "5cd402e7dde5a7534f4eab7ace652c7740520c6e", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2016-05-15T23:24:52Z"},
{"Line": "=>549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (what instanceof org.bukkit.entity.Fireball) return null; else if (what instanceof org.bukkit.entity.EnderDragonPart) return new com.gmail.zariust.otherdrops.subject.CreatureSubject(((org.bukkit.entity.ComplexEntityPart) (what)).getParent()); else if (what instanceof org.bukkit.entity.EnderCrystal) return null; else if (what instanceof org.bukkit.entity.ItemFrame) return null; else if (what instanceof org.bukkit.entity.TNTPrimed) return null; else if (what instanceof org.bukkit.entity.Arrow) return null; else if (what instanceof org.bukkit.entity.Item) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4042/buggy-version/src.com.gmail.zariust.otherdrops.event.OccurredEvent.java", "BodyUseAPI": [], "Fixed commit": "0ce61c4ecc3207244c05fbded4b4e2133a62f163", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2013-03-04T17:20:46Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((urlCounts.size()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4016/buggy-version/src.main.java.com.elex.bigdata.llda.mahout.data.generatedocs.GenerateLDocReducer.java", "BodyUseAPI": [], "Fixed commit": "741cd05766d59224fb4312c1d35bebd70efff727", "Url": "https://api.github.com/repos/elex-bigdata/lldaMahout", "Date": "2014-06-25T10:32:54Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (parentInspectorGroup != null) { org.openflexo.gina.utils.FIBInspector parentInspector = parentInspectorGroup.inspectorForClass(getInspectedClass()); if (parentInspector != null) { superInspectors.add(parentInspector); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/786/buggy-version/gina-core.src.main.java.org.openflexo.gina.utils.FIBInspector.java", "BodyUseAPI": ["org.openflexo.gina.utils.InspectorGroup.inspectorForClass(java.lang.Class<?>)"], "Fixed commit": "5eed1c35447605fc1652220d03e24b0d9074b0ba", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2016-05-09T21:03:05Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (overridingComponent != null) { insert = false; if (overridingComponent.isHidden()) { removeFromSubComponents(overridingComponent); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/786/buggy-version/gina-api.src.main.java.org.openflexo.gina.model.FIBContainer.java", "BodyUseAPI": ["org.openflexo.gina.model.FIBComponent.isHidden()", "org.openflexo.gina.model.FIBContainer.FIBContainerImpl.removeFromSubComponents(org.openflexo.gina.model.FIBComponent)"], "Fixed commit": "5eed1c35447605fc1652220d03e24b0d9074b0ba", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2016-05-09T21:03:05Z"},
{"Line": "=>616", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (overridingComponent.isHidden()) { removeFromSubComponents(overridingComponent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/786/buggy-version/gina-api.src.main.java.org.openflexo.gina.model.FIBContainer.java", "BodyUseAPI": ["org.openflexo.gina.model.FIBContainer.FIBContainerImpl.removeFromSubComponents(org.openflexo.gina.model.FIBComponent)"], "Fixed commit": "5eed1c35447605fc1652220d03e24b0d9074b0ba", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2016-05-09T21:03:05Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((revisionBuilder) == null) pageBuilder.id(id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6233/buggy-version/src.main.java.org.solr.wikipedia.handler.DefaultPageHandler.java", "BodyUseAPI": [], "Fixed commit": "8556ab2e22dcb1bdc55811c0197d1181b1de302e", "Url": "https://api.github.com/repos/ZeonTrevor/solr-wikipedia", "Date": "2017-12-24T01:05:13Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((webView.getUrl()) != null) && (!(webView.getUrl().equals(urls.getNewPostUrl())))) { webView.reload(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/127/buggy-version/app.src.main.java.com.github.dfa.diaspora_android.fragment.BrowserFragment.java", "BodyUseAPI": ["com.github.dfa.diaspora_android.ui.ContextMenuWebView.reload()"], "Fixed commit": "ff7f0eb86b7e147cc5d44697143fb669bd870e7b", "Url": "https://api.github.com/repos/gsantner/dandelion", "Date": "2016-10-09T09:39:05Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entity.getOwner().getID()) == (mID)) { return entity; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5382/buggy-version/src.com.dinasgames.main.Players.LocalPlayer.java", "BodyUseAPI": [], "Fixed commit": "264bda48cad492770f3a5eef0706dd714e40ff71", "Url": "https://api.github.com/repos/V414/SimpleRTS", "Date": "2015-07-23T12:41:26Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.beans.PropertyDescriptor.getPropertyType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (type.isAssignableFrom(java.sql.Timestamp.class)) { value = rs.getTimestamp(i); }else if (type.isAssignableFrom(java.sql.Time.class)) { value = rs.getTime(i); }else if (type.isAssignableFrom(java.util.Date.class)) { value = rs.getDate(i); }else if (type.isAssignableFrom(java.lang.String.class)) { value = rs.getString(i); }else if (type.isEnum()) { java.lang.String enumVal = rs.getString(i); if ((enumVal == null) || (\"\".equals(enumVal))) { value = null; }else { value = java.lang.Enum.valueOf(((java.lang.Class<? extends java.lang.Enum>) (type)), enumVal); } }else { value = rs.getObject(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4520/buggy-version/src.main.java.com.digitolio.jdbi.TranslationAwareMapper.java", "BodyUseAPI": ["java.lang.Class<?>.isAssignableFrom(java.lang.Class)", "java.lang.Class<?>.isAssignableFrom(java.lang.Class)", "java.lang.Class<?>.isAssignableFrom(java.lang.Class)", "java.lang.Class<?>.isEnum()"], "Fixed commit": "ca6d25692ee871252b217f58710a720e0fc758ec", "Url": "https://api.github.com/repos/cemo/jdbi-extra", "Date": "2012-12-17T17:18:30Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((tag != null) && (!(tag.isEmpty()))) { args.append(\" --tag \"); args.append(tag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4980/buggy-version/src.main.java.hudson.plugins.android_emulator.sdk.cli.SdkToolsCommands17To25_2.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "f2dd70c9b56918626564657e8e653de75a62435f", "Url": "https://api.github.com/repos/redeamer/android-emulator-plugin", "Date": "2017-11-26T21:57:53Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (saveConflictOnTimer) { addConflictTimeToTimers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9079/buggy-version/src.lazybones.conflicts.ConflictingTimersSet.java", "BodyUseAPI": [], "Fixed commit": "4117ec2a95817d110ec713d15c58db6290499aa8", "Url": "https://api.github.com/repos/hampelratte/lazybones", "Date": "2015-11-06T10:35:46Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(T)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (objVal == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6725/buggy-version/source.src.main.java.siena.gae.GaePersistenceManager.java", "BodyUseAPI": [], "Fixed commit": "fd2dec9e86421d54e38aa781bdcd1409128c0c74", "Url": "https://api.github.com/repos/mandubian/siena", "Date": "2011-04-09T12:53:22Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(T)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (objVal == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6725/buggy-version/source.src.main.java.siena.gae.GaePersistenceManager.java", "BodyUseAPI": [], "Fixed commit": "fd2dec9e86421d54e38aa781bdcd1409128c0c74", "Url": "https://api.github.com/repos/mandubian/siena", "Date": "2011-04-09T12:53:22Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.contains(\" \")) { typeString = getBefore(s, \" \"); }else { typeString = s; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5694/buggy-version/src.main.java.regalowl.simpledatalib.sql.TableLoader.java", "BodyUseAPI": ["regalowl.simpledatalib.sql.TableLoader.getBefore(java.lang.String,java.lang.String)"], "Fixed commit": "b1f892a72ed8e99c3c8091364b12815bc3881b4e", "Url": "https://api.github.com/repos/RegalOwl/SimpleDataLib", "Date": "2014-12-12T16:22:24Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.dundee.computing.aec.instagrim.lib.Convertors.SplitRequestPath(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((args.length) < 3) { response.sendRedirect(\"/InstaConnor/Home\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/324/buggy-version/src.main.java.uk.ac.dundee.computing.aec.instagrim.servlets.Image.java", "BodyUseAPI": [], "Fixed commit": "aa26ab927914300441c82befa61e50196d3a4d4a", "Url": "https://api.github.com/repos/ConnorSewell/Secure-Inet-Programming---CS", "Date": "2015-10-28T09:09:07Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.dundee.computing.aec.instagrim.lib.Convertors.SplitRequestPath(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((args.length) < 3) { response.sendRedirect(\"/InstaConnor/Home\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/324/buggy-version/src.main.java.uk.ac.dundee.computing.aec.instagrim.servlets.SearchedList.java", "BodyUseAPI": [], "Fixed commit": "aa26ab927914300441c82befa61e50196d3a4d4a", "Url": "https://api.github.com/repos/ConnorSewell/Secure-Inet-Programming---CS", "Date": "2015-10-28T09:09:07Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.dundee.computing.aec.instagrim.lib.Convertors.SplitRequestPath(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((args.length) < 3) { response.sendRedirect(\"/InstaConnor/Home\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/324/buggy-version/src.main.java.uk.ac.dundee.computing.aec.instagrim.servlets.SearchedProfile.java", "BodyUseAPI": [], "Fixed commit": "aa26ab927914300441c82befa61e50196d3a4d4a", "Url": "https://api.github.com/repos/ConnorSewell/Secure-Inet-Programming---CS", "Date": "2015-10-28T09:09:07Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(format.language))) { switch (format.language) { case \"nar\" : builder.setLanguage(\"Audio Description\"); break; case \"und\" : case \"syn\" : case \"mis\" : break; default : builder.setLanguage(format.language); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5767/buggy-version/app.src.main.java.ie.macinnes.tvheadend.player.ExoPlayerUtils.java", "BodyUseAPI": ["TvTrackInfo.Builder.setLanguage(format.language)"], "Fixed commit": "883cdda4cd97eb30b84b646ddcccc18c7d11b5f2", "Url": "https://api.github.com/repos/cyberjacob/android-tvheadend", "Date": "2017-08-08T08:37:20Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((params[0]) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9108/buggy-version/app.src.main.java.com.nordman.big.myfellowcompass.GeoEndpointManager.java", "BodyUseAPI": [], "Fixed commit": "23999b010ef5ff3776c17bc1aaff4a2bdc5698b8", "Url": "https://api.github.com/repos/BigNordman/MyFellasCompass", "Date": "2016-05-16T03:39:09Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<net.minecraft.block.Block, org.blockartistry.mod.DynSurround.registry.BlockProfile>.get(state.getBlock())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((random.nextInt(entry.getStepChance(state))) != 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3981/buggy-version/src.main.java.org.blockartistry.mod.DynSurround.registry.BlockRegistry.java", "BodyUseAPI": [], "Fixed commit": "cc9a21eb26da72a43216e32d39e0e67d9f59d280", "Url": "https://api.github.com/repos/OreCruncher/DynamicSurroundings", "Date": "2016-12-14T19:05:15Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.blockartistry.mod.DynSurround.registry.BlockProfile.getStepSounds(net.minecraft.block.state.IBlockState)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sounds.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3981/buggy-version/src.main.java.org.blockartistry.mod.DynSurround.registry.BlockRegistry.java", "BodyUseAPI": [], "Fixed commit": "cc9a21eb26da72a43216e32d39e0e67d9f59d280", "Url": "https://api.github.com/repos/OreCruncher/DynamicSurroundings", "Date": "2016-12-14T19:05:15Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<net.minecraft.block.Block, org.blockartistry.mod.DynSurround.registry.BlockProfile>.get(state.getBlock())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (entry == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3981/buggy-version/src.main.java.org.blockartistry.mod.DynSurround.registry.BlockRegistry.java", "BodyUseAPI": [], "Fixed commit": "cc9a21eb26da72a43216e32d39e0e67d9f59d280", "Url": "https://api.github.com/repos/OreCruncher/DynamicSurroundings", "Date": "2016-12-14T19:05:15Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.blockartistry.mod.DynSurround.registry.BlockProfile.getSounds(net.minecraft.block.state.IBlockState)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sounds.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3981/buggy-version/src.main.java.org.blockartistry.mod.DynSurround.registry.BlockRegistry.java", "BodyUseAPI": [], "Fixed commit": "cc9a21eb26da72a43216e32d39e0e67d9f59d280", "Url": "https://api.github.com/repos/OreCruncher/DynamicSurroundings", "Date": "2016-12-14T19:05:15Z"},
{"Line": "=>670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getDlvIsEnded()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5746/buggy-version/core.slee.services.sbbs.src.main.java.org.mobicents.smsc.slee.services.mt.MtSbb.java", "BodyUseAPI": [], "Fixed commit": "a62218f46052a422e22946848d006c4a942b2b76", "Url": "https://api.github.com/repos/vetss/smscgateway", "Date": "2017-11-02T19:19:06Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBase == true) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5858/buggy-version/MP3.MP3-Release.src.main.DatasetGenerator.java", "BodyUseAPI": [], "Fixed commit": "a49fa2fd5eefd924ba974783c13d8c3e039ca7da", "Url": "https://api.github.com/repos/hungle2/cs463_mp3", "Date": "2017-04-06T00:21:15Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (apps != null) { return java.util.Arrays.asList(org.graphast.config.Configuration.config.getProperty(\"graphast.apps\").split(\",\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1808/buggy-version/core.src.main.java.org.graphast.config.Configuration.java", "BodyUseAPI": [], "Fixed commit": "5cb02f7d582c9159cd1f65a279e574996e6cc855", "Url": "https://api.github.com/repos/InsightLab/graphast", "Date": "2015-10-27T20:03:34Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mmlovesyy.zlayout.TagLayout.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (view instanceof android.widget.Checkable) { boolean checkable = ((android.widget.Checkable) (view)).isChecked(); if (checkable && (view instanceof com.mmlovesyy.zlayout.IValue)) { builder.append(((((com.mmlovesyy.zlayout.IValue) (view)).value()) + \" \")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5401/buggy-version/app.src.main.java.com.mmlovesyy.zlayout.TagLayout.java", "BodyUseAPI": [], "Fixed commit": "b2b55c066133fcf2fc31f34f0b35d8bf520abd79", "Url": "https://api.github.com/repos/mmlovesyy/ZLayout", "Date": "2017-01-06T08:05:21Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["climbing.ClimbingControl.getNearPointsInDT2(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (nearFeet == null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6788/buggy-version/Climbing.src.climbing.ClimbingControl.java", "BodyUseAPI": [], "Fixed commit": "1b7b43f2a3bf38c8ba310d3241da0fd4db154b00", "Url": "https://api.github.com/repos/shinnara/CG_2017", "Date": "2017-05-24T16:29:32Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextStepIndex) >= (targetList.size())) { java.lang.System.out.println(\"FINSHED ALL STEP\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6788/buggy-version/Climbing.src.climbing.ClimbingControl.java", "BodyUseAPI": [], "Fixed commit": "1b7b43f2a3bf38c8ba310d3241da0fd4db154b00", "Url": "https://api.github.com/repos/shinnara/CG_2017", "Date": "2017-05-24T16:29:32Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (map == null) { de.cimt.talendcomp.connectionpool.BasicConnectionPool.warn((\"DatabaseSource map not available. Using key: \" + dataSourceKey)); }else { java.util.Map<java.lang.String, routines.system.TalendDataSource> newMap = new java.util.HashMap<java.lang.String, routines.system.TalendDataSource>(); for (java.util.Map.Entry<java.lang.String, routines.system.TalendDataSource> entry : map.entrySet()) { routines.system.TalendDataSource tds = entry.getValue(); if ((tds.getRawDataSource()) != null) { de.cimt.talendcomp.connectionpool.PooledTalendDataSource pds = new de.cimt.talendcomp.connectionpool.PooledTalendDataSource(tds.getRawDataSource()); newMap.put(entry.getKey(), pds); } } globalMap.put(dataSourceKey, newMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2742/buggy-version/src.main.java.de.cimt.talendcomp.connectionpool.BasicConnectionPool.java", "BodyUseAPI": ["java.util.Map<java.lang.String, routines.system.TalendDataSource>.entrySet()"], "Fixed commit": "a4dd095003c2fa63b936405bfbe257248ce2cb0f", "Url": "https://api.github.com/repos/jlolling/talendcomp_tDatabaseConnectionPool", "Date": "2016-06-14T10:50:46Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rest.getState().equals(RestState.WAITING_COMPLETE)) { while (rest.getState().equals(RestState.WAITING_COMPLETE)) { try { heat(); } catch (java.lang.InterruptedException e) { log.error(\"Heating adjustment was interrupted!\"); } } notifyListeners(rest.getState()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1121/buggy-version/src.main.java.ch.goodrick.brewcontrol.mashing.RestExecuter.java", "BodyUseAPI": ["rest.getState().equals(RestState.WAITING_COMPLETE)", "ch.goodrick.brewcontrol.mashing.Rest.getState()", "ch.goodrick.brewcontrol.mashing.RestExecuter.notifyListeners(rest.getState())", "ch.goodrick.brewcontrol.mashing.Rest.getState()"], "Fixed commit": "ff968bc6556688d9adb8e3f9304fc6fe5773eea2", "Url": "https://api.github.com/repos/SebiGo/BrewControlServer", "Date": "2015-06-20T00:09:33Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jaggeryjs.jaggery.app.mgt.Context.getManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (manager instanceof org.jaggeryjs.jaggery.app.mgt.CarbonTomcatSessionManager) { ((org.jaggeryjs.jaggery.app.mgt.CarbonTomcatSessionManager) (manager)).setOwnerTenantId(tenantId); }else if (manager instanceof org.jaggeryjs.jaggery.app.mgt.CarbonTomcatSessionPersistentManager) { ((org.jaggeryjs.jaggery.app.mgt.CarbonTomcatSessionPersistentManager) (manager)).setOwnerTenantId(tenantId); org.jaggeryjs.jaggery.app.mgt.TomcatJaggeryWebappsDeployer.log.debug((((manager.getInfo()) + \" enabled Tomcat HTTP Session Persistent mode using \") + (((org.jaggeryjs.jaggery.app.mgt.CarbonTomcatSessionPersistentManager) (manager)).getStore().getInfo()))); }else { context.setManager(new org.jaggeryjs.jaggery.app.mgt.CarbonTomcatSessionManager(tenantId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3504/buggy-version/components.jaggery-core.org.jaggeryjs.jaggery.app.mgt.src.main.java.org.jaggeryjs.jaggery.app.mgt.TomcatJaggeryWebappsDeployer.java", "BodyUseAPI": ["org.apache.catalina.Manager.getInfo()", "org.apache.commons.logging.Log.debug((((manager.getInfo()) + \" enabled Tomcat HTTP Session Persistent mode using \") + (((org.jaggeryjs.jaggery.app.mgt.CarbonTomcatSessionPersistentManager) (manager)).getStore().getInfo())))"], "Fixed commit": "0ec7331574f789e9e84139155729c6c003caaf0e", "Url": "https://api.github.com/repos/AlmavivA/jaggery", "Date": "2015-08-07T15:31:37Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (disabledNodes != null) { nodes.add(new consulo.csharp.lang.formatter.CSharpDisabledBlock(disabledNodes)); disabledNodes = null; whitespaces = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9109/buggy-version/csharp-impl.src.consulo.csharp.lang.formatter.CSharpFormattingBlock.java", "BodyUseAPI": ["java.util.Deque<com.intellij.lang.ASTNode>.add(consulo.csharp.lang.formatter.CSharpDisabledBlock)"], "Fixed commit": "d63ab62780810f4ed826000f3c0c46b966a90329", "Url": "https://api.github.com/repos/consulo/consulo-csharp", "Date": "2017-05-18T13:43:59Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getParcelable(ExperimentalActions.EXTRA_SET_ROI_LAT_LONG_ALT)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (roi != null) { org.droidplanner.core.helpers.coordinates.Coord3D coord3DRoi = new org.droidplanner.core.helpers.coordinates.Coord3D(roi.getLatitude(), roi.getLongitude(), roi.getAltitude()); org.droidplanner.core.MAVLink.command.doCmd.MavLinkDoCmds.setROI(getDrone(), coord3DRoi); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1307/buggy-version/ServiceApp.src.org.droidplanner.services.android.api.DroneApi.java", "BodyUseAPI": ["com.o3dr.services.android.lib.coordinate.LatLongAlt.getLongitude()", "com.o3dr.services.android.lib.coordinate.LatLongAlt.getLatitude()", "com.o3dr.services.android.lib.coordinate.LatLongAlt.getAltitude()"], "Fixed commit": "44d7049882740b48f1e8c61e06eea0349c426a58", "Url": "https://api.github.com/repos/dronekit/dronekit-android", "Date": "2015-06-14T01:17:28Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(crashLogFile.exists())) { crashLogFile.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2639/buggy-version/app.src.main.java.com.disarm.sanna.pdm.SelectCategoryActivity.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "abf8cfc6d004d762f16ae93ccbccc89c8c23c9cf", "Url": "https://api.github.com/repos/ItsForkIT/pdm", "Date": "2017-03-04T11:38:00Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getCandidateList()) != null) { out += (\"Candidates\\t:\" + (this.getCandidateList().toString())) + delimiter; }else { out += \"Candidates\\t:empty\" + delimiter; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5760/buggy-version/src.dto.ElectionDto.java", "BodyUseAPI": [], "Fixed commit": "c79a294270b3bde918a4e0ddf693f1274e34d39a", "Url": "https://api.github.com/repos/sfrink/CERTUS-Common", "Date": "2014-03-25T17:25:42Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.EdgeInfo.getHighway()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (controller.OSMRouting.hierarchyHashMap.containsKey(highway)) { hierarchy = controller.OSMRouting.hierarchyHashMap.get(highway); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3501/buggy-version/OpenStreetMap.src.controller.OSMRouting.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Fixed commit": "22c5e8e66566f8a0165dd4d6dc5d66dacb5a0f86", "Url": "https://api.github.com/repos/usunyu/CleanPath", "Date": "2013-10-29T20:48:40Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.EdgeInfo.getHighway()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (controller.OSMRouting.hierarchyHashMap.containsKey(highway)) { hierarchy = controller.OSMRouting.hierarchyHashMap.get(highway); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3501/buggy-version/OpenStreetMap.src.controller.OSMRouting.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Fixed commit": "22c5e8e66566f8a0165dd4d6dc5d66dacb5a0f86", "Url": "https://api.github.com/repos/usunyu/CleanPath", "Date": "2013-10-29T20:48:40Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.collectionspace.services.common.config.TenantBindingConfigReaderImpl.getTenantQualifiedServiceName(tenantBinding.getId(),serviceBinding.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (key == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5451/buggy-version/services.common.src.main.java.org.collectionspace.services.common.config.TenantBindingConfigReaderImpl.java", "BodyUseAPI": [], "Fixed commit": "d0d32a4b205c0a34bc4fc63b04dcaca1571645ee", "Url": "https://api.github.com/repos/aronr/services", "Date": "2013-07-19T23:58:36Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (serviceName != null) { org.collectionspace.services.common.config.TenantBindingConfigReaderImpl.logger.debug(java.lang.String.format(\" * tenant:serviceBindings '%s'\", serviceName)); java.lang.System.out.println(java.lang.String.format(\" * tenant:serviceBindings '%s'\", serviceName)); return org.collectionspace.services.common.config.TenantBindingConfigReaderImpl.getTenantQualifiedIdentifier(tenantId, serviceName.toLowerCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5451/buggy-version/services.common.src.main.java.org.collectionspace.services.common.config.TenantBindingConfigReaderImpl.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "org.collectionspace.services.common.config.TenantBindingConfigReaderImpl.getTenantQualifiedIdentifier(java.lang.String,java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String)", "org.slf4j.Logger.debug(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "d0d32a4b205c0a34bc4fc63b04dcaca1571645ee", "Url": "https://api.github.com/repos/aronr/services", "Date": "2013-07-19T23:58:36Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["args[1].getStringValue()", "args[2].getStringValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ftp.login(username, password)) { result = new org.exist.xquery.value.IntegerValue(org.exist.xquery.modules.ftpclient.FTPClientModule.storeConnection(context, ftp)); }else { ftp.disconnect(); org.exist.xquery.modules.ftpclient.GetConnectionFunction.log.warn(\"Unable to login with username/password to FTP server\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4695/buggy-version/extensions.modules.src.org.exist.xquery.modules.ftpclient.GetConnectionFunction.java", "BodyUseAPI": ["org.apache.commons.net.ftp.FTPClient.disconnect()", "org.exist.xquery.modules.ftpclient.FTPClientModule.storeConnection(org.exist.xquery.modules.ftpclient.GetConnectionFunction,org.apache.commons.net.ftp.FTPClient)"], "Fixed commit": "5bb2232c7d111fc50e5afe209c0d6c0958d18f60", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2015-06-24T20:53:35Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((getValue()) != null) && (getValue().isSet())) && (getValue().isValid())) { if (!(org.openflexo.connie.type.TypeUtils.isTypeAssignableFrom(getValue().getAnalyzedType(), type, true))) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5344/buggy-version/gina-api.src.main.java.org.openflexo.gina.model.FIBVariable.java", "BodyUseAPI": [], "Fixed commit": "a7a63a84d7ca0a9d4360b9c069ab97d904187801", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2016-07-18T09:33:49Z"},
{"Line": "=>941", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selectedFeatureNames.size()) > 0) { java.lang.Iterable<org.molgenis.omx.observ.ObservableFeature> iterators = dataService.findAll(ObservableFeature.ENTITY_NAME, new org.molgenis.data.support.QueryImpl().in(ObservableFeature.NAME, selectedFeatureNames), org.molgenis.omx.observ.ObservableFeature.class); for (org.molgenis.omx.observ.ObservableFeature feature : iterators) { featureIds.add(feature.getId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8448/buggy-version/molgenis-omx-biobankconnect.src.main.java.org.molgenis.omx.biobankconnect.ontologymatcher.AsyncOntologyMatcher.java", "BodyUseAPI": ["org.molgenis.data.DataService.findAll(ObservableFeature.ENTITY_NAME,new org.molgenis.data.support.QueryImpl().in(ObservableFeature.NAME, selectedFeatureNames),java.lang.Class)", "org.molgenis.data.support.QueryImpl.in(ObservableFeature.NAME,java.util.List<java.lang.String>)"], "Fixed commit": "35249e27ba4d3274e9c3e1bc8b243e93c2a2c5e8", "Url": "https://api.github.com/repos/molgenis/molgenis", "Date": "2014-07-28T08:08:48Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cm.com.newdon.common.CommonData.getInstance().getSelectedUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((selectedUser.getPictureUrl()) != null) { com.squareup.picasso.Picasso.with(getActivity()).load(selectedUser.getPictureUrl()).into(profileImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7865/buggy-version/app.src.main.java.cm.com.newdon.fragments.ProfileDonatesFragment.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(getActivity()).load(selectedUser.getPictureUrl()).into(de.hdodenhof.circleimageview.CircleImageView)", "com.squareup.picasso.Picasso.with(getActivity()).load(selectedUser.getPictureUrl())", "cm.com.newdon.classes.User.getPictureUrl()"], "Fixed commit": "31f2be488816400647d7d916d6d886fe057d0352", "Url": "https://api.github.com/repos/costamirkin/newdon", "Date": "2017-02-25T19:54:23Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((builder.length()) > 0) { builder.append(sectionSeparator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7929/buggy-version/src.main.java.com.github.resource4j.files.lookup.DefaultResourceFileEnumerationStrategy.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)"], "Fixed commit": "5fc0940a7da19afd8a23049832976e6ff9b3a50f", "Url": "https://api.github.com/repos/ivan-gammel/resource4j", "Date": "2013-07-05T11:12:14Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((builder.length()) > 0) { builder.append(sectionSeparator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7929/buggy-version/src.main.java.com.github.resource4j.files.lookup.DefaultResourceFileEnumerationStrategy.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)"], "Fixed commit": "5fc0940a7da19afd8a23049832976e6ff9b3a50f", "Url": "https://api.github.com/repos/ivan-gammel/resource4j", "Date": "2013-07-05T11:12:14Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["box.selectFirst(\".weui_media_title\").attr(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(detailUrl.startsWith(\"http\"))) { detailUrl = (com.zhongba01.service.impl.UserServiceImpl.WX_ROOT) + detailUrl; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4474/buggy-version/src.main.java.com.zhongba01.service.impl.UserServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "f3f699942ce1537b906b8502ed73f0b36c36535c", "Url": "https://api.github.com/repos/shmp2005/wechat-spider", "Date": "2017-12-26T12:07:46Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mImageUrl.startsWith(\"http\")) { cn.hadcn.davinci.image.VolleyImageListener listener = new cn.hadcn.davinci.image.VolleyImageListener(mContext, mImageView, mImageCache); listener.setDefaultImage(mLoadingImage, mErrorImage); listener.setMaxSize(mMaxSize); mImageLoader.get(mImageUrl, listener); }else { mImageView.setImageDrawable(mContext.getResources().getDrawable(mErrorImage)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9145/buggy-version/davinci.src.main.java.cn.hadcn.davinci.image.ReadImageTask.java", "BodyUseAPI": ["cn.hadcn.davinci.base.ImageLoader.get(java.lang.String,cn.hadcn.davinci.image.VolleyImageListener)"], "Fixed commit": "9f8edcbddd11620718d81df59265814cbdc3131b", "Url": "https://api.github.com/repos/CPPAlien/DaVinci", "Date": "2016-06-07T03:50:44Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state == (LoadingFooter.State.TheEnd)) { ((com.github.jdsjlzx.recyclerview.LRecyclerView) (recyclerView)).setNoMore(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7998/buggy-version/LRecyclerview_library.src.main.java.com.github.jdsjlzx.util.RecyclerViewStateUtils.java", "BodyUseAPI": [], "Fixed commit": "cfb2519585ead192398c14e9c0b9259d2c3997c0", "Url": "https://api.github.com/repos/jdsjlzx/LRecyclerView", "Date": "2016-08-09T03:28:37Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.kitskub.hungergames.HungerGames.scoreboard) != null) pm.registerEvents(new me.kitskub.hungergames.ScoreboardHandler(), me.kitskub.hungergames.HungerGames.instance);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3014/buggy-version/src.main.java.me.kitskub.hungergames.HungerGames.java", "BodyUseAPI": [], "Fixed commit": "3b0dabd8af5d114324563775de2830de5970bfd1", "Url": "https://api.github.com/repos/kitskub/MyHungerGames", "Date": "2013-04-13T21:36:03Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (map.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3014/buggy-version/src.main.java.me.kitskub.hungergames.utils.GeneralUtils.java", "BodyUseAPI": [], "Fixed commit": "3b0dabd8af5d114324563775de2830de5970bfd1", "Url": "https://api.github.com/repos/kitskub/MyHungerGames", "Date": "2013-04-13T21:36:03Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request.getCookies()) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/36/buggy-version/src.main.java.com.github.warmuuh.ytcoop.security.TokenAuthenticationService.java", "BodyUseAPI": [], "Fixed commit": "8e5f08e2aabaf7373dffdad09f325eb9f7cba9c8", "Url": "https://api.github.com/repos/warmuuh/ytcoop", "Date": "2015-10-31T09:04:41Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (object != null) { out.write(provider.toJson(object).getBytes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5834/buggy-version/src.main.java.com.khs.sherpa.util.JsonUtil.java", "BodyUseAPI": ["com.khs.sherpa.json.service.JsonProvider.toJson(java.lang.Object)", "provider.toJson(object).getBytes()", "java.io.OutputStream.write(provider.toJson(object).getBytes())"], "Fixed commit": "2484d6f44ad52afcdfdf154b1cd445e583c30976", "Url": "https://api.github.com/repos/in-the-keyhole/khs-sherpa", "Date": "2013-02-14T01:53:49Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editTextFromAmount.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (stringAmount.equalsIgnoreCase(\"\")) { android.support.design.widget.Snackbar.make(view, \"Enter a valid number\", Snackbar.LENGTH_LONG).setAction(\"Action\", null).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8811/buggy-version/app.src.main.java.com.protoype.osindex.currencyexchange.activities.ConversionActivity.java", "BodyUseAPI": [], "Fixed commit": "8ccd727d5053c88378b4d8f7f575b409f1d7ba91", "Url": "https://api.github.com/repos/osinakayah/currency-exchange-rate", "Date": "2017-10-31T08:51:18Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((listGuilds.getSelectionModel().getSelectedIndex()) == 0) || ((listGuilds.getSelectionModel().getSelectedItem()) == null)) { addNewVolunteerCellView(new frivilligetimer.gui.model.VolunteerCellModel(volunteer)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/323/buggy-version/src.frivilligetimer.gui.controller.TileViewController.java", "BodyUseAPI": [], "Fixed commit": "f64d37e31a35728b881d138989ff3afd3b3deb2e", "Url": "https://api.github.com/repos/JamesBabz/FrivilligeTimer", "Date": "2017-05-22T11:43:59Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.pentaho.di.core.Const.isOSX()) { fd_lblStartJob.top = new org.eclipse.swt.layout.FormAttachment(wlLogLevel, 8); }else { fd_lblStartJob.top = new org.eclipse.swt.layout.FormAttachment(wlLogLevel, 18); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4253/buggy-version/ui.src.org.pentaho.di.ui.job.dialog.JobExecutionConfigurationDialog.java", "BodyUseAPI": [], "Fixed commit": "07bcc8c2c9524df23e1f3a59af7fe122ea6d0c89", "Url": "https://api.github.com/repos/wseyler/pentaho-kettle", "Date": "2016-01-29T16:33:52Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.pentaho.di.core.Const.isOSX()) { fd_startJobCombo.top = new org.eclipse.swt.layout.FormAttachment(wLogLevel, 8); }else { fd_startJobCombo.top = new org.eclipse.swt.layout.FormAttachment(wLogLevel, 10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4253/buggy-version/ui.src.org.pentaho.di.ui.job.dialog.JobExecutionConfigurationDialog.java", "BodyUseAPI": [], "Fixed commit": "07bcc8c2c9524df23e1f3a59af7fe122ea6d0c89", "Url": "https://api.github.com/repos/wseyler/pentaho-kettle", "Date": "2016-01-29T16:33:52Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.pentaho.di.core.Const.isOSX()) { fdLogLevel.top = new org.eclipse.swt.layout.FormAttachment(wClearLog, 2, org.eclipse.swt.SWT.TOP); }else { fdLogLevel.top = new org.eclipse.swt.layout.FormAttachment(wClearLog, (-2), org.eclipse.swt.SWT.TOP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4253/buggy-version/ui.src.org.pentaho.di.ui.job.dialog.JobExecutionConfigurationDialog.java", "BodyUseAPI": [], "Fixed commit": "07bcc8c2c9524df23e1f3a59af7fe122ea6d0c89", "Url": "https://api.github.com/repos/wseyler/pentaho-kettle", "Date": "2016-01-29T16:33:52Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.pentaho.di.core.Const.isOSX()) { fdLogLevel.top = new org.eclipse.swt.layout.FormAttachment(wClearLog, 2, org.eclipse.swt.SWT.TOP); }else { fdLogLevel.top = new org.eclipse.swt.layout.FormAttachment(wClearLog, (-2), org.eclipse.swt.SWT.TOP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4253/buggy-version/ui.src.org.pentaho.di.ui.trans.dialog.TransExecutionConfigurationDialog.java", "BodyUseAPI": [], "Fixed commit": "07bcc8c2c9524df23e1f3a59af7fe122ea6d0c89", "Url": "https://api.github.com/repos/wseyler/pentaho-kettle", "Date": "2016-01-29T16:33:52Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getCompound()) == null) { eppic.assembly.Stoichiometry.logger.warn(\"Can't find entity for chain {}. Ignoring this chain in assemblies.\", c.getChainID()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7948/buggy-version/eppic-cli.src.main.java.eppic.assembly.Stoichiometry.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,c.getChainID())", "org.biojava.nbio.structure.Chain.getChainID()"], "Fixed commit": "b6ada392fdac2a1aed51f3a6f3a852ae7bf7fbc0", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2015-07-27T13:21:20Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getParameter(\"projectId\")) != null) { int projectId = java.lang.Integer.parseInt(request.getParameter(\"projectId\")); com.td.mace.model.Project project = projectService.findById(projectId); workPackage.setProject(project); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1081/buggy-version/src.main.java.com.td.mace.controller.WorkPackageController.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.lang.Integer.parseInt(request.getParameter(\"projectId\"))"], "Fixed commit": "dc9b80e11c710a4eff7eeaaa5a1194567a7dd038", "Url": "https://api.github.com/repos/mace120/EMSRepo", "Date": "2017-01-18T19:27:31Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((etRoll.getText()) == null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3940/buggy-version/app.src.main.java.com.pentapus.pentapusdmh.Fragments.Tracker.TrackerAdapter.java", "BodyUseAPI": [], "Fixed commit": "cf8530dc0c67f3819360bc9fc4a441e93cf7c9a2", "Url": "https://api.github.com/repos/DeGnoss/PentapusDMH", "Date": "2016-05-11T21:35:47Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nativeObject.isNull(key)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8557/buggy-version/androidbox.src.main.java.org.monroe.team.android.box.json.Json.java", "BodyUseAPI": [], "Fixed commit": "228ca407d0bec1a2f559cfe7ba9fe1785b65188e", "Url": "https://api.github.com/repos/mrjbee/beebox", "Date": "2015-04-18T14:45:58Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object.isNull(key)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8557/buggy-version/androidbox.src.main.java.org.monroe.team.android.box.json.Json.java", "BodyUseAPI": [], "Fixed commit": "228ca407d0bec1a2f559cfe7ba9fe1785b65188e", "Url": "https://api.github.com/repos/mrjbee/beebox", "Date": "2015-04-18T14:45:58Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (healthcheck != null) { com.developerb.dm.healtcheck.Result result = healthcheck.probeUntil(bootedContainer, org.joda.time.Duration.standardSeconds(60), org.joda.time.Duration.standardSeconds(3)); if (result.isHealthy()) { log.info(result.toString()); return bootedContainer; }else { throw new java.lang.IllegalStateException((\"Unable to verify health: \" + result)); } }else { return bootedContainer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2042/buggy-version/src.main.java.com.developerb.dm.domain.CreatedContainer.java", "BodyUseAPI": ["com.developerb.dm.healtcheck.Healthcheck.probeUntil(com.developerb.dm.domain.BootedContainer,org.joda.time.Duration.standardSeconds(60),org.joda.time.Duration.standardSeconds(3))"], "Fixed commit": "5b77eb25d6848be895a4ba0744b80be4b3d05b31", "Url": "https://api.github.com/repos/kimble/groovy-docker-dsl", "Date": "2015-01-14T19:37:26Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (strDate.contains(\".\")) { strDate = strDate.substring(0, strDate.indexOf(\".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4084/buggy-version/WebAlbums3-Service-Beans.src.java.net.wazari.service.engine.WebPageBean.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "65c00eadc5bb0fddc9ecfca9c3e3c96359cfb487", "Url": "https://api.github.com/repos/wazari972/WebAlbums-3", "Date": "2012-12-25T21:01:49Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gd.model.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((mFlash.getHint()) != null) hintText.setText(mFlash.getHint());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1651/buggy-version/source-code.app.src.main.java.org.buildmlearn.toolkit.flashcardtemplate.MainFragment.java", "BodyUseAPI": ["org.buildmlearn.toolkit.flashcardtemplate.FlashModel.getHint()", "android.widget.TextView.setText(mFlash.getHint())"], "Fixed commit": "0e76cb360bb8a5dca582e7bf90c819e52356df9d", "Url": "https://api.github.com/repos/shreyas29/BuildmLearn-Toolkit-Android", "Date": "2016-01-27T18:18:20Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFlipped) { if (!(textureRegions[i].isFlipY())) { textureRegions[i].flip(false, true); } }else { if (textureRegions[i].isFlipY()) { textureRegions[i].flip(false, true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3897/buggy-version/core.src.net.asg.games.dante.models.Missile.java", "BodyUseAPI": [], "Fixed commit": "87a99300410bafd5cb4846ae5a25c76f91d45605", "Url": "https://api.github.com/repos/ASGMarketing/https-github.com-blakbro2k-DantesEscape", "Date": "2017-04-11T11:15:50Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cascading.tuple.Tuple.getObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (valueBytes != null) put.add(org.apache.hadoop.hbase.util.Bytes.toBytes(familyNames[i]), org.apache.hadoop.hbase.util.Bytes.toBytes(((java.lang.String) (fields.get(j)))), valueBytes.get());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2487/buggy-version/src.main.java.parallelai.spyglass.hbase.HBaseScheme.java", "BodyUseAPI": ["org.apache.hadoop.hbase.io.ImmutableBytesWritable.get()", "org.apache.hadoop.hbase.client.Put.add(org.apache.hadoop.hbase.util.Bytes.toBytes(familyNames[i]),org.apache.hadoop.hbase.util.Bytes.toBytes(((java.lang.String) (fields.get(j)))),valueBytes.get())"], "Fixed commit": "8fdc6b0060b048dfc099153c25ba0c7595b649cb", "Url": "https://api.github.com/repos/ParallelAI/SpyGlass", "Date": "2013-08-07T15:47:11Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((total) != 0) { showNormalPrograssDailogBar(this, \"\u6b63\u5728\u52a0\u8f7d\"); markMsgRead(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8609/buggy-version/app.src.main.java.com.ps.app.ui.activity.MessageActivity.java", "BodyUseAPI": [], "Fixed commit": "fa09f1e7c9d1682dcc3d4d7773afad7f7e19f44e", "Url": "https://api.github.com/repos/PATHoqi05/App", "Date": "2016-05-17T16:15:02Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((((newDescription == null) && (newDeadline == null)) && (newStartDate == null)) && (newEndDate == null)) { return new main.logic.command.InvalidCommand(\"Please phrase your edit command differently!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7801/buggy-version/src.main.parser.CommandParser.java", "BodyUseAPI": [], "Fixed commit": "d80ec1de6208b3ef2478bfeca996d2c7fbe587bc", "Url": "https://api.github.com/repos/cs2103aug2015-t14-1j/main", "Date": "2015-10-27T11:04:32Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCurrentUser) { placeCtrl.goTo(clientFactory.getDefaultPlace()); }else { com.google.gwt.user.client.History.back(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3157/buggy-version/kornell-gwt.src.main.java.kornell.gui.client.presentation.profile.generic.GenericProfileView.java", "BodyUseAPI": [], "Fixed commit": "5ba6f8b2948064d42af54234109585ffcfd1d43f", "Url": "https://api.github.com/repos/Craftware/Kornell", "Date": "2015-02-22T18:28:51Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkSize) { mondrian.olap.fun.AggregateFunDef.AggregateCalc.checkIfAggregationSizeIsTooLarge(tupleList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/82/buggy-version/src.main.mondrian.olap.fun.AggregateFunDef.java", "BodyUseAPI": [], "Fixed commit": "5b5dbac3bd430ee9600e3d4db13aada06564c230", "Url": "https://api.github.com/repos/julianhyde/mondrian", "Date": "2012-04-28T00:57:08Z"},
{"Line": "=>880", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enableAuto != null) && enableAuto) { boolean sucess = clusteringService.setAutoElasticity(clusterName, null); if (!sucess) { throw com.vmware.bdd.exception.ClusterManagerException.SET_AUTO_ELASTICITY_NOT_ALLOWED_ERROR(clusterName, \"failed\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8588/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.manager.ClusterManager.java", "BodyUseAPI": [], "Fixed commit": "7ad7072eea7b9456cf31a40f84f50627ab295620", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-05-14T03:51:03Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (SudokuSolver.canBeSolved(puzzle, 0, 0)) { for (int a = 0; a < 9; a++) { for (int b = 0; b < 9; b++) { orig[a][b] = puzzle[a][b]; } } g.setColor(java.awt.Color.black); for (int k = 0; k < (puzzle.length); k++) { for (int j = 0; j < (puzzle[0].length); j++) { if (orig[k][j].equals(\"\")) g.setColor(java.awt.Color.cyan); g.drawString(((puzzle[k][j]) + \"\"), ((50 * j) + 25), ((50 * k) + 25)); g.setColor(java.awt.Color.black); } } }else { for (int a = 0; a < 9; a++) { for (int b = 0; b < 9; b++) { puzzle[a][b] = temp[a][b]; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8213/buggy-version/SolverGUI.java", "BodyUseAPI": ["java.awt.Graphics.drawString(java.lang.String,int,int)"], "Fixed commit": "43237fb3c0e13b44031d0eae2133e33589c33109", "Url": "https://api.github.com/repos/kkhan01/APCS1_Final_Project", "Date": "2017-01-10T03:54:34Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.gatech.rattracker.FirebaseManager.authenticateListener(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (authenticator == null) { android.util.Log.d(logTag, \"oh nooo\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3891/buggy-version/RatTracker.app.src.main.java.edu.gatech.rattracker.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "2dd875e575366ed36110ca478dac6fbb515918f4", "Url": "https://api.github.com/repos/chunloklo/cs2340-team43-rat", "Date": "2017-10-01T18:54:39Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lastReturned.previous()) == null) { this.begin = lastReturned.next(); }else { lastReturned.previous().setNext(lastReturned.next()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8195/buggy-version/src.collection.LinkedList.java", "BodyUseAPI": ["collection.LinkedList<E>.Node.previous()", "collection.LinkedList<E>.Node.next()", "collection.LinkedList<E>.Node.setNext(collection.LinkedList<E>.Node)", "collection.LinkedList<E>.Node.next()"], "Fixed commit": "4248d3e3c9b7bc5b4ae2f6ffb4e4b693daa221f7", "Url": "https://api.github.com/repos/TheAspiringHacker/java-collections", "Date": "2017-11-25T04:25:05Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lastReturned.next()) != null) { lastReturned.next().setPrevious(lastReturned.previous()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8195/buggy-version/src.collection.LinkedList.java", "BodyUseAPI": ["collection.LinkedList<E>.Node.next()", "collection.LinkedList<E>.Node.previous()", "collection.LinkedList<E>.Node.setPrevious(collection.LinkedList<E>.Node)"], "Fixed commit": "4248d3e3c9b7bc5b4ae2f6ffb4e4b693daa221f7", "Url": "https://api.github.com/repos/TheAspiringHacker/java-collections", "Date": "2017-11-25T04:25:05Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((amPmStart.equals(\"AM\")) && (firstHalfStart.equals(\"12\"))) && (!(amPmEnd.equals(\"AM\")))) { int x = (java.lang.Integer.parseInt(firstHalfStart)) + 12; firstHalfStart = java.lang.String.valueOf(x); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3884/buggy-version/app.src.main.java.listviewfromsqlitedb.example.com.scheduler.MainActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "6c1582b53c38562fb207da498f27f8d76986e1e5", "Url": "https://api.github.com/repos/payal-kothari/schedulerApp", "Date": "2017-01-05T17:12:46Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.IProject.findMember(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ebin == null) { project.getFolder(\"ebin\").create(true, true, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8943/buggy-version/org.erlide.core.src.org.erlide.core.internal.builder.ExternalBuilder.java", "BodyUseAPI": [], "Fixed commit": "782d1c2bbaf8b1e71deb0405a634f9195991de08", "Url": "https://api.github.com/repos/erlide/erlide", "Date": "2013-10-10T10:08:10Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (progressCallback != null) { for (final java.lang.String line : lines) { progressCallback.apply(line); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8943/buggy-version/org.erlide.core.src.org.erlide.core.executor.ToolExecutor.java", "BodyUseAPI": ["org.eclipse.xtext.xbase.lib.Procedures.Procedure1<java.lang.String>.apply(java.lang.String)"], "Fixed commit": "782d1c2bbaf8b1e71deb0405a634f9195991de08", "Url": "https://api.github.com/repos/erlide/erlide", "Date": "2013-10-10T10:08:10Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(player.capabilities.isCreativeMode)) { hand.stackSize -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5855/buggy-version/src.net.runfast.frangiblebuttons.entity.EntityEmergencyItemFrame.java", "BodyUseAPI": [], "Fixed commit": "7ea885d93c16f96f91a28f2481951a358fbbb84c", "Url": "https://api.github.com/repos/RunFast/FrangibleButtons", "Date": "2013-04-06T14:04:56Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source != null) && ((team.chisel.api.carving.CarvingUtils.getChiselRegistry().getVariation(source)) != v)) { source = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7501/buggy-version/src.main.java.team.chisel.common.block.TileAutoChisel.java", "BodyUseAPI": [], "Fixed commit": "8ad0f6253a0880a4e0a99894c48667f7d425df79", "Url": "https://api.github.com/repos/Chisel-Team/Chisel", "Date": "2017-12-29T06:16:57Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (javassist.util.proxy.ProxyFactory.isProxyClass(consequenceExceptionHandler.getValue().getClass())) { handlerClz = consequenceExceptionHandler.getValue().getClass().getSuperclass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/192/buggy-version/jboss-seam.src.main.java.org.jboss.seam.drools.RuleBase.java", "BodyUseAPI": ["org.jboss.seam.core.Expressions.ValueExpression<org.drools.spi.ConsequenceExceptionHandler>.getValue()", "consequenceExceptionHandler.getValue().getClass()", "consequenceExceptionHandler.getValue().getClass().getSuperclass()"], "Fixed commit": "1b0dea2054f7db1a4d21b7387be95d650b872172", "Url": "https://api.github.com/repos/albfernandez/jboss-seam", "Date": "2017-10-31T17:56:19Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) { mGPUImage = new jp.co.cyberagent.android.gpuimage.GPUImage(getContext()); mGPUImage.setGLSurfaceView(mGLSurfaceView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5394/buggy-version/library.src.jp.co.cyberagent.android.gpuimage.GPUImageView.java", "BodyUseAPI": [], "Fixed commit": "27ca4ca6e8489879943f02dccb3c4ebfa25d7f77", "Url": "https://api.github.com/repos/jonan/android-gpuimage", "Date": "2015-10-04T10:42:03Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.selectedPlayer) == selectedPlayer) { this.selectedPlayer = -1; this.confirm = -1; }else { this.selectedPlayer = selectedPlayer; this.confirm = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4077/buggy-version/app.src.main.java.com.trifice.theunderworldsiege.MainModel.java", "BodyUseAPI": [], "Fixed commit": "c7a2a084f1099edd336cd81c03a46889e5784edd", "Url": "https://api.github.com/repos/chengenzhao/TheUnderworldSiege", "Date": "2015-02-18T06:23:53Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (knownBadNames.contains(name)) return false; else { try { java.net.InetAddress nameAddr = java.net.InetAddress.getByName(name); if (localAddresses.contains(nameAddr)) { knownGoodNames.add(name); return true; }else { knownBadNames.add(name); return false; } } catch (java.net.UnknownHostException e) { knownBadNames.add(name); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7614/buggy-version/src.main.java.com.mchange.v2.net.LocalHostManager.java", "BodyUseAPI": ["java.util.Set.add(java.lang.String)", "java.util.Set.add(java.lang.String)", "java.util.Set.add(java.lang.String)", "java.net.InetAddress.getByName(java.lang.String)"], "Fixed commit": "d2574cefbc645ad5f19fc7b67846f5665042992c", "Url": "https://api.github.com/repos/swaldman/mchange-commons-java", "Date": "2015-06-20T08:45:25Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(scrollable.exists())) { io.appium.android.bootstrap.Logger.debug((\"Not scrolling because scrollable does not exist: \" + (scrollable.getSelector()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3624/buggy-version/bootstrap.src.io.appium.android.bootstrap.utils.UiScrollableParser.java", "BodyUseAPI": ["com.android.uiautomator.core.UiScrollable.getSelector()", "io.appium.android.bootstrap.Logger.debug((\"Not scrolling because scrollable does not exist: \" + (scrollable.getSelector())))"], "Fixed commit": "dea1aa84992f722bc8f0d0bc51a876e1a3ce1f5a", "Url": "https://api.github.com/repos/ngsankha/appium-android-bootstrap", "Date": "2015-10-21T16:31:40Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.currentThread()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (thread.isInterrupted()) { file.delete(); throw new java.io.InterruptedIOException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3086/buggy-version/src.org.qii.weiciyuan.support.http.JavaHttpUtility.java", "BodyUseAPI": [], "Fixed commit": "a3e3b4af506b108cac1f68cb757406143817675e", "Url": "https://api.github.com/repos/Jewelzqiu/weiciyuan", "Date": "2012-12-27T04:30:13Z"},
{"Line": "=>722", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.getContext(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(context.rawGraph.isClosed())) { context.rawGraph.commit(); context.rawGraph.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4946/buggy-version/blueprints-orient-graph.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.java", "BodyUseAPI": ["context.rawGraph.commit()", "context.rawGraph.close()"], "Fixed commit": "963ec9f78b0052f138b27573fc60e949660c41e6", "Url": "https://api.github.com/repos/SparsityTechnologies/blueprints", "Date": "2013-06-27T09:39:16Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReference.getText()", "com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReference.getContexts()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((contexts.size()) == 0) && (isAllowedEmptyPath(referenceText))) { result.add(new com.intellij.psi.impl.source.resolve.reference.impl.providers.PsiElementResolveResult(getElement().getContainingFile())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7977/buggy-version/platform.lang-impl.src.com.intellij.psi.impl.source.resolve.reference.impl.providers.FileReference.java", "BodyUseAPI": [], "Fixed commit": "bc8ef1ad3c9435dcbd34a2f79a7f629831b0380f", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2012-08-14T14:17:41Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.che.ide.api.resources.Resource.getProject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (project != null) { element.setAttribute(\"project\", project.getLocation().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6834/buggy-version/ide.che-core-ide-app.src.main.java.org.eclipse.che.ide.part.explorer.project.ProjectExplorerViewImpl.java", "BodyUseAPI": ["com.google.gwt.dom.client.Element.setAttribute(java.lang.String,project.getLocation().toString())", "project.getLocation().toString()", "org.eclipse.che.ide.api.resources.Project.getLocation()"], "Fixed commit": "1e57af993e92d9c89d8cc1ba872636cc72ff6630", "Url": "https://api.github.com/repos/dmytro-ndp/che", "Date": "2017-08-17T14:25:11Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (selectedApi != null) { org.apache.synapse.rest.Resource[] selectedAPIResources = selectedApi.getResources(); if ((selectedAPIResources.length) > 0) { for (org.apache.synapse.rest.dispatch.RESTDispatcher dispatcher : org.apache.synapse.rest.RESTUtils.getDispatchers()) { org.apache.synapse.rest.Resource resource = dispatcher.findResource(synCtx, java.util.Arrays.asList(selectedAPIResources)); if ((resource != null) && (java.util.Arrays.asList(resource.getMethods()).contains(httpMethod))) { selectedResource = resource; break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7974/buggy-version/components.apimgt.org.wso2.carbon.apimgt.gateway.src.main.java.org.wso2.carbon.apimgt.gateway.handlers.security.APIKeyValidator.java", "BodyUseAPI": ["org.apache.synapse.rest.API.getResources()"], "Fixed commit": "596a5d6df75c00793c43e5d4fa0957214e1aca52", "Url": "https://api.github.com/repos/chamilaadhi/carbon-apimgt", "Date": "2016-01-25T04:29:29Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(skip)) { com.henryzhefeng.stopwatch.ViewGroup.LayoutParams params = upLayout.getLayoutParams(); params.height -= distanceY; upLayout.setLayoutParams(params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7540/buggy-version/src.com.henryzhefeng.stopwatch.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fc42b4a6c64274159ca4aa98da312385c7034812", "Url": "https://api.github.com/repos/feng-zhe/stopwatch", "Date": "2015-01-01T10:45:45Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.vloxlands.settings.CFG.INTERNET)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7224/buggy-version/src.com.vloxlands.scene.Scene.java", "BodyUseAPI": [], "Fixed commit": "516dd495faa71692a3068e86986432a9cae19bde", "Url": "https://api.github.com/repos/Ichmed/Vloxlands", "Date": "2013-09-07T09:20:04Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((course.getCategory()) != null) { values.put(de.uni_passau.facultyinfo.client.model.access.SportsCourseAccess.KEY_COURSES_CATEGORY, course.getCategory().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7854/buggy-version/FacultyInfo_App.src.de.uni_passau.facultyinfo.client.model.access.SportsCourseAccess.java", "BodyUseAPI": ["course.getCategory().getId()", "de.uni_passau.facultyinfo.client.model.dto.SportsCourse.getCategory()", "android.content.ContentValues.put(java.lang.String,course.getCategory().getId())"], "Fixed commit": "9c575f4a9721b001035fa39f0bdcb115cd6a9190", "Url": "https://api.github.com/repos/TimoSta/FacultyInfo_Client", "Date": "2014-01-31T16:23:14Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) mCurrentSort = ((com.example.android.popularmovies.MovieDbApiUtils.SortOrder) (savedInstanceState.get(com.example.android.popularmovies.MainActivity.CURRENT_SORT_PREFERENCE_KEY)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/941/buggy-version/app.src.main.java.com.example.android.popularmovies.MainActivity.java", "BodyUseAPI": ["android.os.Bundle.get(java.lang.String)"], "Fixed commit": "0f764968700a3fca7a853411a1c76a02afdbe2b7", "Url": "https://api.github.com/repos/sakydpozrux/PopularMovies", "Date": "2017-04-21T01:29:42Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((reviewSaved) == 0) && (!(currentJob.isSet()))) { android.widget.Toast.makeText(this, \"First you have to take a job in order to review it\", Toast.LENGTH_SHORT).show(); }else if ((reviewSaved) == 0) { android.widget.Toast.makeText(this, \"You have to first take a job to review itThe review is not saved!\", Toast.LENGTH_SHORT).show(); }else { currentJob.setReviewSavedOnServer(true); currentJob.setReview(new it.polimi.guardian.authorityapp.Review(java.lang.Integer.parseInt(currentJob.getJob().getEvent().getId()), reviewComment)); currentJob.dismissJobAndReview(); currentJob.fileDelete(); android.widget.Toast.makeText(this, \"The review has been saved. Now you can take another job.\", Toast.LENGTH_SHORT).show(); et_review_comment.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/244/buggy-version/AuthorityApp.app.src.main.java.it.polimi.guardian.authorityapp.ReviewAJobActivity.java", "BodyUseAPI": ["it.polimi.guardian.authorityapp.CurrentJob.setReviewSavedOnServer(boolean)", "currentJob.getJob().getEvent().getId()", "it.polimi.guardian.authorityapp.CurrentJob.dismissJobAndReview()", "java.lang.Integer.parseInt(currentJob.getJob().getEvent().getId())", "it.polimi.guardian.authorityapp.CurrentJob.getJob()", "it.polimi.guardian.authorityapp.CurrentJob.setReview(it.polimi.guardian.authorityapp.Review)", "currentJob.getJob().getEvent()", "it.polimi.guardian.authorityapp.CurrentJob.fileDelete()"], "Fixed commit": "508000e577a1d80099cf58798be785ca71e8f70f", "Url": "https://api.github.com/repos/PhoneGuardian/AuthorityApp", "Date": "2015-07-08T12:38:23Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (controlProperty.contains(\".\")) throw new to.etc.webapp.ProgrammerErrorException(((\"You cannot bind a Control property dotted path, see \" + (to.etc.domui.util.DomUtil.DOCROOT)) + \"x/GYA-/\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4286/buggy-version/to.etc.domui.src.to.etc.domui.component.binding.ComponentPropertyBinding.java", "BodyUseAPI": [], "Fixed commit": "3ba7b1f25a91ea19385badf74e2b0ffaa04c8bee", "Url": "https://api.github.com/repos/fjalvingh/domui", "Date": "2017-03-24T14:43:23Z"},
{"Line": "=>4437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<lu.fisch.structorizer.elements.Root, java.util.HashMap<java.lang.String, java.lang.String>>.get(lu.fisch.structorizer.parsers.COBOLParser)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((paramTypes != null) && ((paramTypes.size()) > 0)) { for (int i = 0; i < (arguments.count()); i++) { java.lang.String type = paramTypes.get(arguments.get(i)); if (((type != null) && (!(type.isEmpty()))) && (!(type.equals(\"???\")))) { arguments.set(i, ((type + \" \") + (arguments.get(i)))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6683/buggy-version/src.lu.fisch.structorizer.parsers.COBOLParser.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(arguments.get(i))"], "Fixed commit": "9c1f6bc634cc8c10b14f799747b860604f25c3a3", "Url": "https://api.github.com/repos/codemanyak/Structorizer.Desktop", "Date": "2017-05-06T01:28:01Z"},
{"Line": "=>4863", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["_reduction.getParent().getTableIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ruleId == (lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_MULTIPLY_STATEMENT_MULTIPLY)) { java.lang.System.out.println(\"PROD_MULTIPLY_STATEMENT_MULTIPLY\"); lu.fisch.structorizer.parsers.Reduction secRed = _reduction.get(1).asReduction(); int secRuleId = secRed.getParent().getTableIndex(); int targetIx = 2; java.lang.String factors1 = this.getContent_R(secRed.get(0).asReduction(), \"\", \" * \"); java.lang.String factor2 = null; if (secRuleId == (lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_MULTIPLY_BODY_BY_GIVING)) { targetIx = 4; factor2 = this.getContent_R(secRed.get(2).asReduction(), \"\"); } java.lang.String[] targets = this.getContent_R(secRed.get(targetIx).asReduction(), \"\").split(\" \"); if ((targets.length) > 0) { lu.fisch.utils.StringList content = lu.fisch.utils.StringList.getNew((((((targets[0]) + \" <- \") + factors1) + \" * \") + (factor2 != null ? factor2 : targets[0]))); for (int i = 1; i < (targets.length); i++) { if (factor2 == null) { content.add((((((targets[i]) + \" <- \") + factors1) + \" * \") + (targets[i]))); }else { content.add((((targets[i]) + \" <- \") + (targets[0]))); } } _parentNode.addElement(new lu.fisch.structorizer.elements.Instruction(content)); }else { lu.fisch.structorizer.elements.Instruction defective = new lu.fisch.structorizer.elements.Instruction(this.getContent_R(_reduction, \"\", \" \")); defective.setColor(java.awt.Color.RED); defective.disabled = true; defective.setComment(\"COBOL import still not implemented\"); _parentNode.addElement(defective); } }else if (ruleId == (lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_DIVIDE_STATEMENT_DIVIDE)) { lu.fisch.structorizer.elements.Instruction defective = new lu.fisch.structorizer.elements.Instruction(this.getContent_R(_reduction, \"\")); defective.setColor(java.awt.Color.RED); defective.disabled = true; defective.setComment(\"COBOL import still not implemented\"); _parentNode.addElement(defective); }else if (ruleId == (lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_DISPLAY_STATEMENT_DISPLAY)) { java.lang.System.out.println(\"PROD_DISPLAY_STATEMENT_DISPLAY\"); lu.fisch.structorizer.parsers.Reduction secRed = _reduction.get(1).asReduction(); java.lang.String content = this.getContent_R(secRed, \"\", \", \"); if (content.startsWith(\", \")) { content = content.substring(2); } if (content.endsWith(\", \")) { content = content.substring(0, ((content.length()) - 2)); } content = ((lu.fisch.structorizer.parsers.CodeParser.getKeyword(\"output\")) + \" \") + content; lu.fisch.structorizer.elements.Instruction instr = new lu.fisch.structorizer.elements.Instruction(content); _parentNode.addElement(instr); }else if (ruleId == (lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_WRITE_STATEMENT_WRITE)) { java.lang.System.out.println(\"PROD_WRITE_STATEMENT_WRITE\"); java.lang.String content = this.getContent_R(_reduction, \"\"); lu.fisch.structorizer.elements.Instruction instr = new lu.fisch.structorizer.elements.Instruction(content); instr.setColor(java.awt.Color.RED); instr.setComment(\"TODO: there is still no automatic conversion for this statement\"); _parentNode.addElement(instr); }else if (ruleId == (lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_CALL_STATEMENT_CALL)) { lu.fisch.structorizer.parsers.Reduction secRed = _reduction.get(1).asReduction(); java.lang.String name = this.getContent_R(secRed.get(1).asReduction(), \"\").trim(); java.lang.String[] nameTokens = name.split(\"\\\\s+\"); for (int i = 0; i < (nameTokens.length); i++) { } if (name.matches(\"\\\\\\\".*?\\\\\\\"\")) { name = name.substring(1, ((name.length()) - 1)).replace(\"-\", \"_\"); } lu.fisch.utils.StringList args = new lu.fisch.utils.StringList(); if ((secRed.get(2).asReduction().size()) > 0) { args = this.getParameterList(secRed.get(2).asReduction().get(1).asReduction(), \"<call_param_list>\", lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_CALL_PARAM, 2); } java.lang.String content = ((name + \"(\") + (args.concatenate(\", \"))) + \")\"; lu.fisch.structorizer.parsers.Reduction retRed = secRed.get(3).asReduction(); if ((retRed.getParent().getTableIndex()) == (lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_CALL_RETURNING2)) { content = ((this.getContent_R(retRed.get(2).asReduction(), \"\")) + \" <- \") + content; } lu.fisch.structorizer.elements.Call ele = new lu.fisch.structorizer.elements.Call(content); ele.setComment(this.getContent_R(_reduction, \"\")); _parentNode.addElement(ele); }else if (ruleId == (lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_EXIT_STATEMENT_EXIT)) { java.lang.System.out.println(\"PROD_EXIT_STATEMENT_EXIT\"); java.lang.String content = \"\"; java.lang.String comment = \"\"; java.awt.Color color = null; lu.fisch.structorizer.parsers.Reduction secRed = _reduction.get(1).asReduction(); int secRuleId = secRed.getParent().getTableIndex(); switch (secRuleId) { case lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_EXIT_BODY : content = \"(exit from paragraph)\"; break; case lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_EXIT_BODY_PROGRAM : case lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_EXIT_BODY_FUNCTION : { content = lu.fisch.structorizer.parsers.CodeParser.getKeywordOrDefault(\"preReturn\", \"return\"); if ((secRed.getParent().getTableIndex()) == (lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_EXIT_PROGRAM_RETURNING2)) { content = this.getContent_R(secRed.get(1).asReduction(), (content + \" \")); } } break; case lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_EXIT_BODY_PERFORM : content = lu.fisch.structorizer.parsers.CodeParser.getKeywordOrDefault(\"preLeave\", \"leave\"); break; case lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_EXIT_BODY_PERFORM_CYCLE : case lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_EXIT_BODY_SECTION : case lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_EXIT_BODY_PARAGRAPH : content = this.getContent_R(_reduction, \"\"); color = java.awt.Color.RED; comment = \"Unsupported kind of JUMP\"; break; } if (content != null) { lu.fisch.structorizer.elements.Jump jmp = new lu.fisch.structorizer.elements.Jump(content.trim()); if (!(comment.isEmpty())) { jmp.setComment(comment); } if (color != null) { jmp.setColor(color); jmp.disabled = true; } _parentNode.addElement(jmp); } }else if (ruleId == (lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_GOBACK_STATEMENT_GOBACK)) { java.lang.System.out.println(\"PROD_GOBACK_STATEMENT_GOBACK\"); lu.fisch.structorizer.parsers.Reduction secRed = _reduction.get(1).asReduction(); java.lang.String content = lu.fisch.structorizer.parsers.CodeParser.getKeywordOrDefault(\"preReturn\", \"return\"); if ((secRed.getParent().getTableIndex()) == (lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_EXIT_PROGRAM_RETURNING2)) { content = this.getContent_R(secRed.get(1).asReduction(), (content + \" \")); } _parentNode.addElement(new lu.fisch.structorizer.elements.Jump(content.trim())); }else if ((ruleId == (lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_STOP_STATEMENT_STOP)) || (ruleId == (lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_STOP_STATEMENT_STOP_RUN))) { java.lang.System.out.println(\"PROD_STOP_STATEMENT_STOP[_RUN]\"); int contentIx = (ruleId == (lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_STOP_STATEMENT_STOP)) ? 1 : 2; lu.fisch.structorizer.parsers.Reduction secRed = _reduction.get(contentIx).asReduction(); java.lang.String content = lu.fisch.structorizer.parsers.CodeParser.getKeywordOrDefault(\"preExit\", \"exit\"); content = this.getContent_R(secRed, (content + \" \")); _parentNode.addElement(new lu.fisch.structorizer.elements.Jump(content)); }else if (ruleId == (lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_GOTO_STATEMENT_GO)) { java.lang.System.out.println(\"PROD_GOTO_STATEMENT_GO\"); java.lang.String content = this.getContent_R(_reduction.get(1).asReduction(), \"\").trim(); if (content.toUpperCase().startsWith(\"TO \")) { content = content.substring(3); } lu.fisch.structorizer.elements.Jump jmp = new lu.fisch.structorizer.elements.Jump((\"goto \" + content)); jmp.setColor(java.awt.Color.RED); jmp.setComment(\"GO TO statements are not supported in structured programming!\"); _parentNode.addElement(jmp); }else if (ruleId == (lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD__WORKING_STORAGE_SECTION_WORKING_STORAGE_SECTION_TOK_DOT)) { this.processDataDescriptions(_reduction.get(3).asReduction(), _parentNode, null); }else if (ruleId == (lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD__LINKAGE_SECTION_LINKAGE_SECTION_TOK_DOT)) { if (!(this.paramTypeMap.containsKey(root))) { this.paramTypeMap.put(root, new java.util.HashMap<java.lang.String, java.lang.String>()); } this.processDataDescriptions(_reduction.get(3).asReduction(), null, this.paramTypeMap.get(root)); }else { if ((_reduction.size()) > 0) { for (int i = 0; i < (_reduction.size()); i++) { if ((_reduction.get(i).getType()) == (com.creativewidgetworks.goldparser.engine.enums.SymbolType.NON_TERMINAL)) { buildNSD_R(_reduction.get(i).asReduction(), _parentNode); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6683/buggy-version/src.lu.fisch.structorizer.parsers.COBOLParser.java", "BodyUseAPI": [], "Fixed commit": "9c1f6bc634cc8c10b14f799747b860604f25c3a3", "Url": "https://api.github.com/repos/codemanyak/Structorizer.Desktop", "Date": "2017-05-06T01:28:01Z"},
{"Line": "=>5064", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.paramTypeMap.containsKey(root))) { this.paramTypeMap.put(root, new java.util.HashMap<java.lang.String, java.lang.String>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6683/buggy-version/src.lu.fisch.structorizer.parsers.COBOLParser.java", "BodyUseAPI": ["java.util.HashMap<lu.fisch.structorizer.elements.Root, java.util.HashMap<java.lang.String, java.lang.String>>.put(lu.fisch.structorizer.parsers.COBOLParser,java.util.HashMap<java.lang.String, java.lang.String>)"], "Fixed commit": "9c1f6bc634cc8c10b14f799747b860604f25c3a3", "Url": "https://api.github.com/repos/codemanyak/Structorizer.Desktop", "Date": "2017-05-06T01:28:01Z"},
{"Line": "=>4945", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (name.matches(\"\\\\\\\".*?\\\\\\\"\")) { name = name.substring(1, ((name.length()) - 1)).replace(\"-\", \"_\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6683/buggy-version/src.lu.fisch.structorizer.parsers.COBOLParser.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.length()"], "Fixed commit": "9c1f6bc634cc8c10b14f799747b860604f25c3a3", "Url": "https://api.github.com/repos/codemanyak/Structorizer.Desktop", "Date": "2017-05-06T01:28:01Z"},
{"Line": "=>4972", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["secRed.get(3).asReduction()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((retRed.getParent().getTableIndex()) == (lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_CALL_RETURNING2)) { content = ((this.getContent_R(retRed.get(2).asReduction(), \"\")) + \" <- \") + content; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6683/buggy-version/src.lu.fisch.structorizer.parsers.COBOLParser.java", "BodyUseAPI": ["lu.fisch.structorizer.parsers.Reduction.get(int)", "lu.fisch.structorizer.parsers.COBOLParser.getContent_R(retRed.get(2).asReduction(),java.lang.String)", "retRed.get(2).asReduction()"], "Fixed commit": "9c1f6bc634cc8c10b14f799747b860604f25c3a3", "Url": "https://api.github.com/repos/codemanyak/Structorizer.Desktop", "Date": "2017-05-06T01:28:01Z"},
{"Line": "=>5464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (aRoot.getMethodName().equals(\"???\")) { if ((aRoot.getParameterNames().count()) == 0) { java.lang.String fileName = new java.io.File(textToParse).getName(); if (fileName.contains(\".\")) { fileName = fileName.substring(0, fileName.indexOf('.')); } if (this.optionUpperCaseProgName) { fileName = fileName.toUpperCase(); } aRoot.setText(fileName); aRoot.isProgram = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6683/buggy-version/src.lu.fisch.structorizer.parsers.COBOLParser.java", "BodyUseAPI": ["lu.fisch.structorizer.elements.Root.getParameterNames()", "lu.fisch.structorizer.elements.Root.setText(java.lang.String)", "aRoot.getParameterNames().count()"], "Fixed commit": "9c1f6bc634cc8c10b14f799747b860604f25c3a3", "Url": "https://api.github.com/repos/codemanyak/Structorizer.Desktop", "Date": "2017-05-06T01:28:01Z"},
{"Line": "=>4949", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["_reduction.get(1).asReduction()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((secRed.get(2).asReduction().size()) > 0) { args = this.getParameterList(secRed.get(2).asReduction().get(1).asReduction(), \"<call_param_list>\", lu.fisch.structorizer.parsers.COBOLParser.RuleConstants.PROD_CALL_PARAM, 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6683/buggy-version/src.lu.fisch.structorizer.parsers.COBOLParser.java", "BodyUseAPI": ["lu.fisch.structorizer.parsers.COBOLParser.getParameterList(secRed.get(2).asReduction().get(1).asReduction(),java.lang.String,int,int)", "secRed.get(2).asReduction().get(1).asReduction()", "secRed.get(2).asReduction()", "lu.fisch.structorizer.parsers.Reduction.get(int)", "secRed.get(2).asReduction().get(int)"], "Fixed commit": "9c1f6bc634cc8c10b14f799747b860604f25c3a3", "Url": "https://api.github.com/repos/codemanyak/Structorizer.Desktop", "Date": "2017-05-06T01:28:01Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (time > (MAX)) { time = MAX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9089/buggy-version/src.mines.Player.java", "BodyUseAPI": [], "Fixed commit": "8d9d2531531a63b9422aadb9cf26c4d83e0d8e1a", "Url": "https://api.github.com/repos/joshatron/mines", "Date": "2014-02-15T23:30:22Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reportFile.length()) == 0) { if (error == null) { result.success = true; }else { result.message = \"An error occurred\"; result.success = false; } }else { result.message = \"An unknown error occurred\"; result.success = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3409/buggy-version/rspec-maven-plugin.src.main.java.de.saumya.mojo.rspec.RSpecMojo.java", "BodyUseAPI": [], "Fixed commit": "0376ee69575d680573ced9602d26a058466326da", "Url": "https://api.github.com/repos/torquebox/jruby-maven-plugins", "Date": "2014-04-29T10:44:07Z"},
{"Line": "=>525", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["DFA.DFAState.getNextState(Messages.Message,Messages.ControlMessage.ControlType)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((nextState.getMessage().body) instanceof Messages.ControlMessage) { Messages.ControlMessage controlMessage2 = ((Messages.ControlMessage) (nextState.getMessage().body)); currentState = controlMessage2.type; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5443/buggy-version/src.Receiver.ReceiverClient.java", "BodyUseAPI": ["DFA.DFAResponse.getMessage()"], "Fixed commit": "bd62751c7cb288d59be15e597e90aa7096aa9b97", "Url": "https://api.github.com/repos/shafe123/RCDP", "Date": "2017-06-09T01:15:23Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (instance == null) { javax.enterprise.inject.spi.InjectionPoint injectionPoint = beanManager.getServices().get(org.jboss.weld.injection.CurrentInjectionPoint.class).peek(); if (injectionPoint != null) { java.lang.Class<?> injectionPointRawType = org.jboss.weld.util.reflection.Reflections.getRawType(injectionPoint.getType()); if (injectionPointRawType.isPrimitive()) { return cast(com.google.common.base.Defaults.defaultValue(injectionPointRawType)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2676/buggy-version/impl.src.main.java.org.jboss.weld.bean.AbstractProducerBean.java", "BodyUseAPI": [], "Fixed commit": "44a3cab1fa9dce73d29b0a5ba9f67b8b6a1a900d", "Url": "https://api.github.com/repos/mkouba/core", "Date": "2012-09-17T10:49:44Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((evt.getSource()) == (getBaseBindingModel())) { updatePropertyVariables(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9040/buggy-version/flexo-foundation.src.main.java.org.openflexo.foundation.fml.binding.FlexoConceptBindingModel.java", "BodyUseAPI": [], "Fixed commit": "aa51dd78dd87cad7e98e87a76c21a4fee403d02e", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2017-06-26T10:31:39Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tmpTrans[i].contains(\"_\")) && (!(pn_.containsTransition(tmpTrans[i])))) { uniol.apt.adt.pn.Transition t = pn_.createTransition(tmpTrans[i]); if ((tmpTrans[i].split(\"_\").length) == 0) { throw new uniol.apt.module.exception.NetIsNotParsableException(); } t.setLabel(tmpTrans[i].split(\"_\")[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4725/buggy-version/src.uniol.apt.io.parser.impl.petrify.PetrifyPNParser.java", "BodyUseAPI": ["uniol.apt.adt.pn.Transition.setLabel(java.lang.String)", "java.lang.String.split(java.lang.String)", "uniol.apt.adt.pn.PetriNet.createTransition(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "9bc6c0ea491da1a7f8f136fd1971132b8c700e7e", "Url": "https://api.github.com/repos/renke/apt", "Date": "2013-04-17T10:55:04Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (curr.equals(algorithm.Algorithm.start)) { list.add(algorithm.Algorithm.start); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2667/buggy-version/src.algorithm.Algorithm.java", "BodyUseAPI": ["java.util.ArrayList<siteClasses.Node>.add(siteClasses.LastfmNode)"], "Fixed commit": "eedb46ba9673d38cab4a81c8e7bb482a5ed8a415", "Url": "https://api.github.com/repos/mpace965/degrees-of-separation", "Date": "2016-04-14T20:32:12Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (heur < 0) { java.lang.System.out.println(\"negative\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2667/buggy-version/src.algorithm.Algorithm.java", "BodyUseAPI": [], "Fixed commit": "eedb46ba9673d38cab4a81c8e7bb482a5ed8a415", "Url": "https://api.github.com/repos/mpace965/degrees-of-separation", "Date": "2016-04-14T20:32:12Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(listView.getItemAtPosition(position).toString().equals(\"No Events Today!\"))) { android.content.Intent eventInfo = new android.content.Intent(this, com.example.campusfeed.EventInfo.class); eventInfo.putExtra(\"EventName\", listView.getItemAtPosition(position).toString()); this.startActivity(eventInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8191/buggy-version/src.com.example.campusfeed.Tab1.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,listView.getItemAtPosition(position).toString())", "listView.getItemAtPosition(position).toString()", "android.widget.ListView.getItemAtPosition(int)"], "Fixed commit": "32e2b2ceae6eae6aaac47ecf746a4807d468d1da", "Url": "https://api.github.com/repos/aarya123/CampusFeed", "Date": "2012-12-25T02:16:01Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((names.size()) == 0) names.add(\"No Events Today!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8191/buggy-version/src.com.example.campusfeed.EventOrganizer.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "32e2b2ceae6eae6aaac47ecf746a4807d468d1da", "Url": "https://api.github.com/repos/aarya123/CampusFeed", "Date": "2012-12-25T02:16:01Z"},
{"Line": "=>633", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.innove.Peripheral.findWritableCharacteristic(android.bluetooth.BluetoothGattService,java.util.UUID,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(doWrite(characteristic, firstMessage))) { writeQueue.clear(); writeCallback = null; callback.invoke(\"Write failed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7512/buggy-version/android.src.main.java.it.innove.Peripheral.java", "BodyUseAPI": [], "Fixed commit": "a22922fa8b037c95998b794687c7eef72e01c269", "Url": "https://api.github.com/repos/Pilloxa/react-native-ble-manager", "Date": "2017-10-04T09:13:50Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((a.getBalance()) > value) { for (Server.Account a2 : accounts) { if ((a2.getAccount()) == account2) return a.tranfer(value, a2); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4995/buggy-version/src.Server.Manager.java", "BodyUseAPI": ["Server.Account.tranfer(double,Server.Account)"], "Fixed commit": "c86cb2f7b837b7165fb983cf97c06b378f75a1db", "Url": "https://api.github.com/repos/pauloharaujos/SistemaRMI", "Date": "2016-12-13T16:35:55Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(absolutePath.isEmpty())) absolutePath.remove(((absolutePath.size()) - 1)); else return new java.lang.String[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9170/buggy-version/src.se.jereq.filesystem.Filesystem.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.remove(int)"], "Fixed commit": "d5175ed77e93833725d22125a32f0af1817d40a8", "Url": "https://api.github.com/repos/Jereq/Filesystem", "Date": "2012-10-16T15:48:54Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["melnorme.lang.ide.ui.editor.AbstractLangEditor.getSourceViewerConfiguration_asLang()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (langSVC != null) { langSVC.handlePropertyChangeEvent(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7483/buggy-version/plugin_ide.ui.src-lang.melnorme.lang.ide.ui.editor.AbstractLangEditor.java", "BodyUseAPI": ["melnorme.lang.ide.ui.text.AbstractLangSourceViewerConfiguration.handlePropertyChangeEvent(org.eclipse.jface.util.PropertyChangeEvent)"], "Fixed commit": "81002686373f7073c07fc5836a61bd5a4e1aabca", "Url": "https://api.github.com/repos/DDT-IDE/DDT", "Date": "2015-03-06T17:04:00Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["femr.data.daos.IRepository<femr.common.models.IPatient>.findAll(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((patients.size()) > 0) { response.setResponseObject(patients); }else { response.addError(\"patients\", \"No patients available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8858/buggy-version/app.femr.business.services.ResearchService.java", "BodyUseAPI": ["femr.business.dtos.ServiceResponse<java.util.List<? extends femr.common.models.IPatient>>.setResponseObject(java.util.List<? extends femr.common.models.IPatient>)"], "Fixed commit": "014b7ce85b4a04e0fa62e5f955f95522ea8bbd01", "Url": "https://api.github.com/repos/codeitandloadit/femr", "Date": "2014-03-09T04:02:22Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((participantsAdapter) != null) { participantsAdapter.setListTextTypeface(listTextTypeface); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1239/buggy-version/layer-atlas.src.main.java.com.layer.atlas.AtlasParticipantPicker.java", "BodyUseAPI": [], "Fixed commit": "30a7b24e20026f8eaa51c2625654858edd19823f", "Url": "https://api.github.com/repos/5minutes/Atlas-Android", "Date": "2015-11-10T14:44:35Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.lp20.aikuma.util.AikumaSettings.getCurrentUserId()) != null) setSignInState(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/206/buggy-version/Aikuma.src.org.lp20.aikuma.ui.MenuBehaviour.java", "BodyUseAPI": [], "Fixed commit": "8df618a8fd4698a1a82090ab7a89b35db6396d55", "Url": "https://api.github.com/repos/langtech/aikuma", "Date": "2014-11-20T10:57:29Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDeviceOnline()) { android.content.SharedPreferences settings = android.preference.PreferenceManager.getDefaultSharedPreferences(this); new org.lp20.aikuma.MainActivity.GetTokenTask(emailAccount, googleAPIScope, settings, false).execute(); }else { android.widget.Toast.makeText(this, \"Network is disconnected\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/206/buggy-version/Aikuma.src.org.lp20.aikuma.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8df618a8fd4698a1a82090ab7a89b35db6396d55", "Url": "https://api.github.com/repos/langtech/aikuma", "Date": "2014-11-20T10:57:29Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tokenText.length()) > 0) { char firstChar = tokenText.charAt(0); if ((((((((((firstChar >= 'A') && (firstChar <= 'Z')) || ((firstChar >= 'a') && (firstChar <= 'z'))) || (firstChar == '\u00e4')) || (firstChar == '\u00f6')) || (firstChar == '\u00fc')) || (firstChar == '\u00c4')) || (firstChar == '\u00d6')) || (firstChar == '\u00dc')) || (firstChar == '\u00df')) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/743/buggy-version/languagetool-language-modules.de.src.main.java.org.languagetool.rules.de.LongSentenceRule.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "2d7236ac86e422bfc30829f3845767f8f90ec09e", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2017-10-18T09:37:38Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.rskupnik.storyteller.aggregates.Backgrounds.current(com.github.rskupnik.storyteller.statefulobjects.StatefulStage)", "com.github.rskupnik.storyteller.structs.backgrounds.Background.getPostPublishColor()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (((background.getTint()) != null) && (c != null)) { aurelienribon.tweenengine.Tween.to(background.getTint(), ColorAccessor.ALPHA, 1).target(c.a).start(tweenManager); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6816/buggy-version/src.main.java.com.github.rskupnik.storyteller.core.rendering.background.BasicBackgroundRenderingUnit.java", "BodyUseAPI": ["aurelienribon.tweenengine.Tween.to(background.getTint(),ColorAccessor.ALPHA,int)", "aurelienribon.tweenengine.Tween.to(background.getTint(), ColorAccessor.ALPHA, 1).target(c.a)", "aurelienribon.tweenengine.Tween.to(background.getTint(), ColorAccessor.ALPHA, 1).target(c.a).start(aurelienribon.tweenengine.TweenManager)", "com.github.rskupnik.storyteller.structs.backgrounds.Background.getTint()"], "Fixed commit": "7ffd4b328edfa5f579fe3cc61ebbb1ab7d741117", "Url": "https://api.github.com/repos/rskupnik/storyteller", "Date": "2017-08-26T11:56:12Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (context == null) { mSslContext = javax.net.ssl.SSLContext.getDefault(); }else { mSslContext = context; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7360/buggy-version/wirespider.wss.src.main.java.net.kazyx.wirespider.SecureSessionFactory.java", "BodyUseAPI": [], "Fixed commit": "aef6704ce56b4b9c12e8e954bdc3702efac52b9a", "Url": "https://api.github.com/repos/kazyx/wirespider", "Date": "2016-01-19T17:45:59Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!anyFiles) { java.util.zip.ZipEntry entry = new java.util.zip.ZipEntry(\"README.txt\"); zipout.putNextEntry(entry); zipout.write(\"Empty zip file\".getBytes()); zipout.closeEntry(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2833/buggy-version/core.src.main.java.com.webcohesion.enunciate.Enunciate.java", "BodyUseAPI": [], "Fixed commit": "583f67014a451747b370a7b4bcf0400cd6552b85", "Url": "https://api.github.com/repos/stoicflame/enunciate", "Date": "2015-08-18T22:00:05Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.nav_ticket_history)) { android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.example.icf.tripappclient.TicketHistory.class); startActivity(intent); }else if (id == (R.id.nav_login)) { android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.example.icf.tripappclient.LoginActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2279/buggy-version/src.client.app.src.main.java.com.example.icf.tripappclient.AccountBalance.java", "BodyUseAPI": [], "Fixed commit": "adc0e468bcc5a8ca9047165174412ed8409f2141", "Url": "https://api.github.com/repos/sergiosuperstar/TripApp", "Date": "2017-04-25T12:39:52Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.nav_ticket_balance)) { android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.example.icf.tripappclient.AccountBalance.class); startActivity(intent); }else if (id == (R.id.nav_camera)) { android.content.Intent intent = new android.content.Intent(\"android.media.action.IMAGE_CAPTURE\"); startActivity(intent); }else if (id == (R.id.nav_ticket_history)) { android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.example.icf.tripappclient.TicketHistory.class); startActivity(intent); }else if (id == (R.id.nav_login)) { android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.example.icf.tripappclient.LoginActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2279/buggy-version/src.client.app.src.main.java.com.example.icf.tripappclient.TicketHistory.java", "BodyUseAPI": [], "Fixed commit": "adc0e468bcc5a8ca9047165174412ed8409f2141", "Url": "https://api.github.com/repos/sergiosuperstar/TripApp", "Date": "2017-04-25T12:39:52Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.dockerjava.api.model.ContainerConfig.getExposedPorts()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (exposedPorts != null) { for (com.github.dockerjava.api.model.ExposedPort port : exposedPorts) { binding.addPortBinding(port.getPort(), (-1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5174/buggy-version/docker.docker.src.main.java.org.arquillian.cube.docker.impl.util.BindingUtil.java", "BodyUseAPI": [], "Fixed commit": "a1ef14231be9d337138eeec66a393a057876879c", "Url": "https://api.github.com/repos/tbarath/arquillian-cube", "Date": "2016-06-29T21:01:18Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ctrVal < 0) { java.lang.System.out.println(\"Arghhh.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/713/buggy-version/h2o-core.src.main.java.water.rapids.RadixCount.java", "BodyUseAPI": [], "Fixed commit": "61bea577c50865fc11de9b78a825b211402f4b09", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2017-07-24T21:06:48Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (_isNotDouble[i]) { biggestBit = _maxD[i].subtract(_baseD[i]).add(java.math.BigInteger.ONE).add(java.math.BigInteger.ONE).bitLength(); }else { int rangeD = _maxD[i].subtract(_baseD[i]).add(java.math.BigInteger.ONE).add(java.math.BigInteger.ONE).bitLength(); biggestBit = (rangeD == 64) ? 64 : rangeD + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/713/buggy-version/h2o-core.src.main.java.water.rapids.RadixOrder.java", "BodyUseAPI": ["java.math.BigInteger.add(java.math.BigInteger)", "java.math.BigInteger.add(java.math.BigInteger)", "java.math.BigInteger.subtract(java.math.BigInteger)", "java.math.BigInteger.subtract(java.math.BigInteger)", "java.math.BigInteger.bitLength()", "java.math.BigInteger.bitLength()", "java.math.BigInteger.add(java.math.BigInteger)", "java.math.BigInteger.add(java.math.BigInteger)"], "Fixed commit": "61bea577c50865fc11de9b78a825b211402f4b09", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2017-07-24T21:06:48Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mFragmented) { mStudyOptionsView.findViewById(R.id.studyoptions_gradient).setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2612/buggy-version/AnkiDroid.src.main.java.com.ichi2.anki.StudyOptionsFragment.java", "BodyUseAPI": [], "Fixed commit": "bf19f95ba7fc47db5e89e6903d90aca4ca893776", "Url": "https://api.github.com/repos/ankidroid/Anki-Android", "Date": "2015-10-07T03:45:58Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.SortedSet<java.lang.Integer>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(itr.hasNext())) return phraseList;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4269/buggy-version/src.main.java.rake4j.core.RakeAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "bcefc6e16156d24abb209c3b08749d98704c8e4d", "Url": "https://api.github.com/repos/idf/rake4j", "Date": "2015-01-07T09:12:59Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (interior_start > j) { logger.warn((((\"Overlapping index when adjoining keywords: \" + interior_start) + \" \") + j)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4269/buggy-version/src.main.java.rake4j.core.RakeAnalyzer.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String)"], "Fixed commit": "bcefc6e16156d24abb209c3b08749d98704c8e4d", "Url": "https://api.github.com/repos/idf/rake4j", "Date": "2015-01-07T09:12:59Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Throwable.getCause()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cause instanceof org.nuxeo.ecm.core.model.NoSuchDocumentException) { notFound = true; }else if ((cause != null) && ((cause.getMessage()) != null)) { if (cause.getMessage().contains(\"org.nuxeo.ecm.core.model.NoSuchDocumentException\")) { notFound = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3099/buggy-version/nuxeo-webengine-core.src.main.java.org.nuxeo.ecm.webengine.WebException.java", "BodyUseAPI": ["java.lang.Throwable.getMessage()", "java.lang.Throwable.getMessage()", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "abc859802cf1bf8c89c98d6d819d4931c8798f89", "Url": "https://api.github.com/repos/nuxeo/nuxeo-webengine", "Date": "2012-07-10T10:44:15Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (notFound) { return new org.nuxeo.ecm.webengine.model.exceptions.WebResourceNotFoundException(cause.getMessage(), e); }else { return new org.nuxeo.ecm.webengine.model.exceptions.WebDocumentException(message, ((org.nuxeo.ecm.core.api.ClientException) (e))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3099/buggy-version/nuxeo-webengine-core.src.main.java.org.nuxeo.ecm.webengine.WebException.java", "BodyUseAPI": [], "Fixed commit": "abc859802cf1bf8c89c98d6d819d4931c8798f89", "Url": "https://api.github.com/repos/nuxeo/nuxeo-webengine", "Date": "2012-07-10T10:44:15Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == (boundaries)) || (boundaries.isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3849/buggy-version/src.main.java.net.epsilony.mf.model.search.SimpChordCenterRangeSearcher.java", "BodyUseAPI": [], "Fixed commit": "e93c1f3c6143c9ee536ea0bf878f1987198beb99", "Url": "https://api.github.com/repos/epsilony/mf", "Date": "2014-05-22T07:16:24Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (object.has(\"imageUrl\")) imageUrl = object.getString(\"imageUrl\"); else imageUrl = object.getString(\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/600px-No_image_available.svg.png\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4421/buggy-version/app.src.main.java.com.example.a47989768s.magiccardslist.MagicTGGetAllCardsApi.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "77dab7d406c5f8671a6325a55bcb7ba94365ec2d", "Url": "https://api.github.com/repos/GFandos/MagicCardsList", "Date": "2016-11-08T17:30:45Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isStopped)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7812/buggy-version/src.java.org.apache.cassandra.net.OutboundTcpConnection.java", "BodyUseAPI": [], "Fixed commit": "db8705294ba96fe2b746fea4f26a919538653ebd", "Url": "https://api.github.com/repos/sainthxd/cassandra", "Date": "2013-01-23T07:44:43Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.group21.thermostat.MainActivity.schedule.isPermanent())) { if (com.group21.thermostat.MainActivity.schedule.shouldSwitchToDayTemperature(timer.getDay(), timer.getHour(), timer.getMinute())) { temperatureSeekbar.setProgress((((int) (com.group21.thermostat.MainActivity.schedule.getTempDay())) - 5)); temperatureChanged(com.group21.thermostat.MainActivity.schedule.getTempDay()); timer.switchMode(); }else { temperatureSeekbar.setProgress((((int) (com.group21.thermostat.MainActivity.schedule.getTempNight())) - 5)); temperatureChanged(com.group21.thermostat.MainActivity.schedule.getTempNight()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5953/buggy-version/app.src.main.java.com.group21.thermostat.MainActivity.java", "BodyUseAPI": ["com.group21.thermostat.WeekSchedule.getTempDay()", "com.group21.thermostat.WeekSchedule.getTempNight()", "com.group21.thermostat.WeekSchedule.shouldSwitchToDayTemperature(timer.getDay(),timer.getHour(),timer.getMinute())", "com.group21.thermostat.WeekSchedule.getTempNight()", "android.widget.SeekBar.setProgress(int)", "android.widget.SeekBar.setProgress(int)", "com.group21.thermostat.WeekSchedule.getTempDay()", "com.group21.thermostat.MainActivity.temperatureChanged(com.group21.thermostat.MainActivity.schedule.getTempDay())", "com.group21.thermostat.MainActivity.temperatureChanged(com.group21.thermostat.MainActivity.schedule.getTempNight())"], "Fixed commit": "6ac92c3f4b6f6c7fb97789ef57fcc4b273796c1a", "Url": "https://api.github.com/repos/PaulGroup21/Thermostat", "Date": "2015-05-29T12:38:21Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (message.startsWith(\"/channelLeave\")) { return message.replace(\"/channelLeave\", (userName + \" has left the channel\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9134/buggy-version/android-app.src.main.java.com.afzaln.mi_chat.utils.BbToHtml.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "84268e1b2219bbe2709ffa71978cf6d9482d271e", "Url": "https://api.github.com/repos/AfzalivE/MI-Chat", "Date": "2013-07-31T09:00:56Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.Bitmap.createBitmap(mat.cols(),mat.rows(),Bitmap.Config.ARGB_8888)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((bmp.getWidth()) > (bmp.getHeight())) { android.graphics.Matrix matrix = new android.graphics.Matrix(); matrix.postRotate(90); android.graphics.Bitmap rotatedBitmap = android.graphics.Bitmap.createBitmap(bmp, 0, 0, bmp.getWidth(), bmp.getHeight(), matrix, true); imageView.setImageBitmap(rotatedBitmap); }else { imageView.setImageBitmap(bmp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/953/buggy-version/edu.ksu.Crop.src.com.example.edu.ksu.crop.PictureFragment.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)", "android.graphics.Bitmap.getHeight()", "android.graphics.Bitmap.getWidth()", "android.graphics.Bitmap.createBitmap(android.graphics.Bitmap,int,int,bmp.getWidth(),bmp.getHeight(),android.graphics.Matrix,boolean)"], "Fixed commit": "eb8e53d1d0e0f126bad359902784eb5a3aa78fa3", "Url": "https://api.github.com/repos/CropYield/CropYield", "Date": "2014-11-03T22:56:40Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.Bitmap.createBitmap(smallerMat.cols(),smallerMat.rows(),Bitmap.Config.ARGB_8888)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((bmp.getWidth()) > (bmp.getHeight())) { android.graphics.Matrix matrix = new android.graphics.Matrix(); matrix.postRotate(90); android.graphics.Bitmap rotatedBitmap = android.graphics.Bitmap.createBitmap(bmp, 0, 0, 800, 1200, matrix, true); imageView.setImageBitmap(rotatedBitmap); }else { imageView.setImageBitmap(bmp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/953/buggy-version/edu.ksu.Crop.src.com.example.edu.ksu.crop.PictureFragment.java", "BodyUseAPI": ["android.graphics.Bitmap.createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)", "android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "eb8e53d1d0e0f126bad359902784eb5a3aa78fa3", "Url": "https://api.github.com/repos/CropYield/CropYield", "Date": "2014-11-03T22:56:40Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((servizi != null) && ((servizi.size()) > 0)) { row.setOreLavorate(servizi.get(0).getCausaleOds().getDescrizione()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7148/buggy-version/src.main.java.it.ivncr.erp.jsf.managedbean.operativo.mattinale.DettaglioOperativoMattinale.java", "BodyUseAPI": ["it.ivncr.erp.jsf.managedbean.operativo.mattinale.DettaglioOperativoMattinale.AddettoRow.setOreLavorate(servizi.get(0).getCausaleOds().getDescrizione())", "servizi.get(0).getCausaleOds()", "java.util.List<it.ivncr.erp.model.operativo.Servizio>.get(int)", "servizi.get(0).getCausaleOds().getDescrizione()"], "Fixed commit": "2e312ffe2d44a35aff23d3d1cee8f35ab8a8b98a", "Url": "https://api.github.com/repos/dariofabbri/ivncr", "Date": "2013-06-19T21:48:44Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (smallestDelta < 0.1) return new lorian.graph.function.PointXY(lorian.graph.function.Util.round(x2, 6), lorian.graph.function.Util.round(f.Calc(x2), 6)); else return new lorian.graph.function.PointXY(java.lang.Double.NaN, java.lang.Double.NaN);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2456/buggy-version/lorian.graph.function.Calculate.java", "BodyUseAPI": [], "Fixed commit": "7c4d90b12ed15b7bb25d160fbac486b92a9eb082", "Url": "https://api.github.com/repos/lorian1333/graph", "Date": "2013-04-05T15:50:11Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue().getAssignment()) != (java.lang.Integer.MAX_VALUE)) { possibleValues = entry.getValue().getValues().size(); if (possibleValues < minValues) { minValues = possibleValues; mostConstrained = entry.getValue(); }else if (possibleValues == minValues) { mostConstrained = CSPSolver.returnMostConstraining(vars, cons, mostConstrained.getName(), entry.getKey()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4306/buggy-version/src.CSPSolver.java", "BodyUseAPI": ["entry.getValue().getValues()", "java.util.Map.Entry<java.lang.String, Variable>.getValue()", "entry.getValue().getValues().size()", "java.util.Map.Entry<java.lang.String, Variable>.getValue()", "java.util.Map.Entry<java.lang.String, Variable>.getKey()", "CSPSolver.returnMostConstraining(java.util.TreeMap<java.lang.String, Variable>,java.util.ArrayList<Constraint>,mostConstrained.getName(),entry.getKey())"], "Fixed commit": "7c4b857a3e1036bb0dae69847076e78755bb092b", "Url": "https://api.github.com/repos/Asylumrunner/CS4365_CSPSolver", "Date": "2016-03-11T19:06:58Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files != null) { for (java.io.File file : files) { fileBrowseAdapter.add(file); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9021/buggy-version/app.src.main.java.com.readtracker.android.activities.ImportActivity.java", "BodyUseAPI": [], "Fixed commit": "0bfbc42893ffd2369eaf75ad2b4f4fdc95ca5650", "Url": "https://api.github.com/repos/christoffer/readtracker", "Date": "2015-11-13T06:54:41Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(location.getParentFile().exists())) { location.getParentFile().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/799/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Logger.Logger.java", "BodyUseAPI": ["java.io.File.getParentFile()", "java.io.File.mkdirs()"], "Fixed commit": "871379908e5e485b07dd6ffebe73ecdb7141f6e4", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2016-09-29T19:40:20Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPointer) isPointer = isPointer && (!(((zmaster587.libVulpes.tile.TilePointer) (world.getTileEntity((x - (direction.offsetX)), (y - (direction.offsetY)), (z - (direction.offsetZ))))).hasMaster()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7898/buggy-version/src.main.java.zmaster587.advancedRocketry.block.multiblock.BlockHatch.java", "BodyUseAPI": [], "Fixed commit": "a4000a8a7d0a9d1733f4bd0be53580cbcfd30816", "Url": "https://api.github.com/repos/zmaster587/AdvancedRocketry", "Date": "2016-06-25T14:59:19Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tokenIDMap.containsKey(symbol)) { return tokenIDMap.get(symbol); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5586/buggy-version/src.org.jgll.grammar.GrammarBuilder.java", "BodyUseAPI": ["java.util.Map<org.jgll.grammar.symbol.Symbol, java.lang.Integer>.get(org.jgll.grammar.symbol.Symbol)"], "Fixed commit": "dc146cd6d2204b8e733093a4961de274dbff4056", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2013-12-12T15:47:25Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.powertac.factoredcustomer.CapacityBundle.getPopulation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sumAllocations == population) { allocation = 0; }else if (i < (numTariffs - 1)) { allocation = ((int) (java.lang.Math.round((population * (probabilities.get(i)))))); if ((sumAllocations + allocation) > population) { allocation = population - sumAllocations; } sumAllocations += allocation; }else { allocation = population - sumAllocations; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1649/buggy-version/src.main.java.org.powertac.factoredcustomer.DefaultUtilityOptimizer.java", "BodyUseAPI": ["java.lang.Math.round(double)"], "Fixed commit": "fba0a150057c370d58cf68b4f8990981b642c686", "Url": "https://api.github.com/repos/powertac/factored-customer", "Date": "2012-05-22T12:07:50Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((VIPSimulator.version) == 1) { uploadFileSize = VIPSimulator.uploadSize; }else { uploadFileSize = ((args.length) > 2) ? java.lang.Long.valueOf(args[2]).longValue() : 1000000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2814/buggy-version/src.Gate.java", "BodyUseAPI": [], "Fixed commit": "9f4c5bd349e923bfeea462878d32dd8e9bb281dd", "Url": "https://api.github.com/repos/frs69wq/VIPSimulator", "Date": "2015-11-09T23:05:47Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (curr_value >= maximmumvalue) { currentValue = maximmumvalue; setValue = currentValue / speed; }else { currentValue = curr_value.intValue(); setValue = ((float) (currentValue)) / speed; android.util.Log.i(\"chkkkk1\", (setValue + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3507/buggy-version/custom_gauge_chart.src.main.java.gaugechart.ssa.alrais.customgaugechart.CustomGauge.java", "BodyUseAPI": ["java.lang.Double.intValue()"], "Fixed commit": "2672c5f6a8fdb1a5a712af90185eb7d62c560c22", "Url": "https://api.github.com/repos/SaoudSalih/Custom_guage", "Date": "2017-09-05T06:10:30Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ControlObjects.RentCtrl.createRent(entity.Rent)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (createdRent != null) { ControlObjects.ReserveCtrl newReserveCtrl = new ControlObjects.ReserveCtrl(); RentNavigator.selectedReservation.setReservationStatus(ReservationInfo.STATUS.RENTED); newReserveCtrl.updateReserve(RentNavigator.selectedReservation); SystemOperations.DialogFX dialog = new SystemOperations.DialogFX(SystemOperations.DialogFX.Type.INFO); dialog.setTitleText(\"Success\"); dialog.setMessage((\" Rent Agreement Created . Agreement # : \" + (java.lang.Integer.toString(createdRent.getContractNo())))); dialog.showDialog(); UserInterface.Operations.FXMLController.RentNavigator.loadVista(RentNavigator.ReserveSearchPage); }else { java.lang.System.out.println(\"Rent Creation Failed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5943/buggy-version/src.UserInterface.Operations.FXMLController.RentDetailPageFXMLController.java", "BodyUseAPI": ["SystemOperations.DialogFX.setMessage((\" Rent Agreement Created . Agreement # : \" + (java.lang.Integer.toString(createdRent.getContractNo()))))", "java.lang.Integer.toString(createdRent.getContractNo())", "entity.Rent.getContractNo()"], "Fixed commit": "ce4a3c67b8ee053964a5b3491230a239c6666724", "Url": "https://api.github.com/repos/OurSRC/SuperRent", "Date": "2014-04-25T16:38:07Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(mSelectSuffix))) { s.append(' '); s.append(mSelectSuffix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7458/buggy-version/src.cat.mobilejazz.database.SingleSelectView.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "80142ba3246c40f5e7e0712e9461d428225475d5", "Url": "https://api.github.com/repos/mobilejazz/mobilejazz-android-database", "Date": "2013-03-20T11:53:39Z"},
{"Line": "=>1433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((torrentListAdapter) != null) && ((torrentListAdapter.getCheckedItemCount()) == 0)) { if ((mActionMode) != null) { mActionMode.finish(); mActionMode = null; } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/615/buggy-version/BiglyBT.src.main.java.com.biglybt.android.client.fragment.TorrentListFragment.java", "BodyUseAPI": [], "Fixed commit": "2c4059debe9068ac409b7e50d58c3e46a3c247e3", "Url": "https://api.github.com/repos/BiglySoftware/BiglyBT-Android", "Date": "2017-10-30T22:36:55Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((arenaPlayer.getPlayerState()) == (me.naithantu.ArenaPVP.Arena.ArenaExtras.ArenaPlayerState.RESPAWNING)) { arenaPlayer.setPlayerState(ArenaPlayerState.PLAYING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8135/buggy-version/src.me.naithantu.ArenaPVP.Arena.PlayerExtras.PlayerTimers.java", "BodyUseAPI": ["me.naithantu.ArenaPVP.Arena.ArenaPlayer.setPlayerState(ArenaPlayerState.PLAYING)"], "Fixed commit": "96531c70700c29976e03cdd258eb271c918eb78f", "Url": "https://api.github.com/repos/naithantu/ArenaPVP", "Date": "2013-08-13T22:00:00Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getTaskStatus()) == false) { if ((task.getTaskType()) == (TaskType.DEADLINE)) { org.joda.time.DateTime dueTime = task.getEndDateTime(); org.joda.time.DateTime tempTime = dueTime; if (tempTime.minusHours(24).equals(currentTime)) { return true; } }else if ((task.getTaskType()) == (TaskType.TIMED)) { org.joda.time.DateTime startTime = task.getStartDateTime(); org.joda.time.DateTime tempTime = startTime; if (tempTime.minusHours(24).equals(currentTime)) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3559/buggy-version/src.todologApp.reminderLogic.java", "BodyUseAPI": ["todologApp.Task.getStartDateTime()", "todologApp.Task.getEndDateTime()", "todologApp.Task.getTaskType()", "todologApp.Task.getTaskType()"], "Fixed commit": "b1b4cd3f414781c0b0b6999b91372b308b560ce1", "Url": "https://api.github.com/repos/cs2103aug2014-t11-3j/main", "Date": "2014-11-07T05:44:58Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mImageUri) != null) { values.put(WatchEntry.COLUMN_STRING_IMAGE_URI, mImageUri.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/347/buggy-version/app.src.main.java.com.namclu.android.premiumwatches.activities.DetailEditorActivity.java", "BodyUseAPI": [], "Fixed commit": "0cc15c01fa90f41c80fdb3066c2d690368915d90", "Url": "https://api.github.com/repos/namclu/PremiumWatches", "Date": "2017-06-09T21:55:45Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (attMap.containsKey(\"mutex\")) { if (!(attMap.get(\"mutex\").equals(\"\"))) { arg.addMutuallyExclusiveArg(attMap.get(\"mutex\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3465/buggy-version/src.main.java.edu.wofford.XML.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "edu.wofford.NamedArgument.addMutuallyExclusiveArg(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "666f9e417bbcfd57e5398fefc8e5574cbc421fbf", "Url": "https://api.github.com/repos/WoffordCollege-COSC410/project-threatlevelmidnight", "Date": "2017-12-01T18:34:37Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (attMap.containsKey(\"shortname\")) { if (!(attMap.get(\"shortname\").equals(\"\"))) { parser.setNickname(arg, (\"-\" + (attMap.get(\"shortname\")))); }else { parser.setArgument(arg); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3465/buggy-version/src.main.java.edu.wofford.XML.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "edu.wofford.ArgumentParser.setNickname(edu.wofford.NamedArgument,java.lang.String)"], "Fixed commit": "666f9e417bbcfd57e5398fefc8e5574cbc421fbf", "Url": "https://api.github.com/repos/WoffordCollege-COSC410/project-threatlevelmidnight", "Date": "2017-12-01T18:34:37Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rdevice.getDeviceStatus()) == (Reference.STATUS.MISSING)) { ghostDevices.add(rdevice); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4782/buggy-version/sources.appsgate-project.appsgate-context.DependencyManagerSpec.src.main.java.appsgate.lig.context.dependency.graph.Graph.java", "BodyUseAPI": ["java.util.HashSet<appsgate.lig.context.dependency.graph.DeviceReference>.add(appsgate.lig.context.dependency.graph.DeviceReference)"], "Fixed commit": "97e44827ef6f8076cf5c55f80a24a1b265a7feb9", "Url": "https://api.github.com/repos/appsgate2015/appsgate", "Date": "2015-03-17T16:38:14Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (android.R.id.home)) { finish(); return true; }else if (id == (R.id.action_info)) { android.content.Intent i = new android.content.Intent(this, com.xlythe.sms.InfoActivity.class); i.putExtra(com.xlythe.sms.MessageActivity.EXTRA_THREAD, mThread); startActivity(i); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1128/buggy-version/app.src.main.java.com.xlythe.sms.MessageActivity.java", "BodyUseAPI": [], "Fixed commit": "f3237ebfcbd9d26a178ffbbf302beac8b6d1a8b3", "Url": "https://api.github.com/repos/Xlythe/AndroidTextManager", "Date": "2016-05-24T05:03:41Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.size()) == 0) { node.setSize(10.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8692/buggy-version/modules.ProcessorPlugin.src.main.java.org.gephi.io.processor.plugin.AbstractProcessor.java", "BodyUseAPI": ["org.gephi.graph.api.Node.setSize(float)"], "Fixed commit": "e31407771a0b36bada81241737150243b6b4fb0a", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2015-12-09T16:43:41Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((nodeDraft.getX()) != 0) || ((nodeDraft.getY()) != 0)) || ((nodeDraft.getZ()) != 0)) && ((((node.x()) == 0) && ((node.y()) == 0)) && ((node.z()) == 0))) { node.setX(nodeDraft.getX()); node.setY(nodeDraft.getY()); node.setZ(nodeDraft.getZ()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8692/buggy-version/modules.ProcessorPlugin.src.main.java.org.gephi.io.processor.plugin.AbstractProcessor.java", "BodyUseAPI": ["org.gephi.io.importer.api.NodeDraft.getY()", "org.gephi.graph.api.Node.setX(nodeDraft.getX())", "org.gephi.io.importer.api.NodeDraft.getZ()", "org.gephi.io.importer.api.NodeDraft.getX()", "org.gephi.graph.api.Node.setY(nodeDraft.getY())", "org.gephi.graph.api.Node.setZ(nodeDraft.getZ())"], "Fixed commit": "e31407771a0b36bada81241737150243b6b4fb0a", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2015-12-09T16:43:41Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(currentStructureElement.isArray)) && ((previousEvent) != (KEY_SEPARATOR_EVENT))) { throw uexc(\"Expected :\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5924/buggy-version/johnzon-core.src.main.java.org.apache.johnzon.core.JsonStreamParserImpl.java", "BodyUseAPI": [], "Fixed commit": "e356d5a81d05f09bc223069fa9a73993bb358191", "Url": "https://api.github.com/repos/salyh/incubator-johnzon", "Date": "2015-08-07T13:20:45Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(currentStructureElement.isArray)) && ((previousEvent) != (KEY_SEPARATOR_EVENT))) { throw uexc(\"Expected \\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5924/buggy-version/johnzon-core.src.main.java.org.apache.johnzon.core.JsonStreamParserImpl.java", "BodyUseAPI": [], "Fixed commit": "e356d5a81d05f09bc223069fa9a73993bb358191", "Url": "https://api.github.com/repos/salyh/incubator-johnzon", "Date": "2015-08-07T13:20:45Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getStartTime()) != null) { result += (addFormattedTime()) + \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2312/buggy-version/src.main.java.Task.java", "BodyUseAPI": [], "Fixed commit": "2fd41d863e449ec99e6e665e5797c8ecd2bedd7b", "Url": "https://api.github.com/repos/cs2103jan2015-w15-1j/main", "Date": "2015-04-09T15:26:41Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["buyResponse.getPurchaseStatusResponse().getAppDeliveryData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ada.hasDownloadUrl()) && ((ada.getDownloadAuthCookieCount()) > 0)) { return new com.akdeniz.googleplaycrawler.DownloadData(this, ada); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8764/buggy-version/src.main.java.com.akdeniz.googleplaycrawler.GooglePlayAPI.java", "BodyUseAPI": [], "Fixed commit": "a3c15735bcc43bfadf98d0dcbb98491abfea7e69", "Url": "https://api.github.com/repos/onyxbits/raccoon4", "Date": "2017-10-05T23:47:42Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (patientId != null) { patient = userRepository.findOne(patientId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/447/buggy-version/src.main.java.com.terrasystems.emedics.services.TaskServiceImpl.java", "BodyUseAPI": ["com.terrasystems.emedics.dao.UserRepository.findOne(java.lang.String)"], "Fixed commit": "2a0fe5af0ac44aa861682c0af30c0eb1a29ebadb", "Url": "https://api.github.com/repos/profiside/emedics-back", "Date": "2016-06-13T08:43:39Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((io.appflate.restmock.RESTMockServer.mockWebServer) != null) { io.appflate.restmock.RESTMockServer.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1237/buggy-version/core.src.main.java.io.appflate.restmock.RESTMockServer.java", "BodyUseAPI": [], "Fixed commit": "aeb5ebcdd455ace0c94adfef360f72d2e5a808fd", "Url": "https://api.github.com/repos/andrzejchm/RESTMock", "Date": "2016-04-27T05:48:32Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resources) == null) resources = provideResources();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/154/buggy-version/Common.src.main.java.wk.easyonboard.common.Launchable.java", "BodyUseAPI": [], "Fixed commit": "44ba4ee5884f10a6cdc1d02397e6920aa9b3391e", "Url": "https://api.github.com/repos/lucawelker-wk/Easyonboard", "Date": "2017-04-26T09:24:33Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) { listener.searchStringFound(hitPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2897/buggy-version/Forschungsmethoden_Benchmarks.src.benchmark.algorithms.BoyerMooreFinder.java", "BodyUseAPI": [], "Fixed commit": "95760b9785b4bf79983a1ca4a2f2221a0ea1ad9d", "Url": "https://api.github.com/repos/fleckb/forschungsmethoden", "Date": "2012-11-20T20:22:15Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.isSneaking()) { superscary.cache.common.tileentity.ValveBlockEntity valveBlockEntity = superscary.cache.util.Utils.getTileEntityAt(world, superscary.cache.common.tileentity.ValveBlockEntity.class, pos); if (valveBlockEntity.hasTanks()) { player.openGui(CacheMod.instance, EnumGuiID.Valve.getID(), world, pos.getX(), pos.getY(), pos.getZ()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5689/buggy-version/src.main.java.superscary.cache.common.block.ValveBlock.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.openGui(CacheMod.instance,EnumGuiID.Valve.getID(),net.minecraft.world.World,pos.getX(),pos.getY(),pos.getZ())"], "Fixed commit": "edcfa6ecd92ec251cf7f669420d9b0b217be3f48", "Url": "https://api.github.com/repos/SuperScary/Cache", "Date": "2016-11-03T06:27:24Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.getTargetBlock().getLocation().isPresent()) { if (com.sk89q.craftbook.sponge.util.SignUtil.isSign(event.getTargetBlock().getLocation().get())) { org.spongepowered.api.block.tileentity.Sign sign = ((org.spongepowered.api.block.tileentity.Sign) (event.getTargetBlock().getLocation().get().getTileEntity().get())); boolean down = (com.sk89q.craftbook.sponge.util.SignUtil.getTextRaw(sign, 1).equals(\"[Lift Down]\")) || (((com.sk89q.craftbook.sponge.util.SignUtil.getTextRaw(sign, 1).equals(\"[Lift UpDown]\")) && (event.getInteractionPoint().isPresent())) && ((event.getInteractionPoint().get().getY()) < 0.5)); if ((down || (com.sk89q.craftbook.sponge.util.SignUtil.getTextRaw(sign, 1).equals(\"[Lift Up]\"))) || (((com.sk89q.craftbook.sponge.util.SignUtil.getTextRaw(sign, 1).equals(\"[Lift UpDown]\")) && (event.getInteractionPoint().isPresent())) && ((event.getInteractionPoint().get().getY()) > 0.5))) transportEntity(human, event.getTargetBlock().getLocation().get(), (down ? org.spongepowered.api.util.Direction.DOWN : org.spongepowered.api.util.Direction.UP)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1628/buggy-version/src.main.java.com.sk89q.craftbook.sponge.mechanics.Elevator.java", "BodyUseAPI": ["event.getTargetBlock().getLocation().get()", "event.getTargetBlock().getLocation().get()", "event.getTargetBlock().getLocation()", "event.getInteractionPoint().get()", "event.getInteractionPoint().get().getY()", "com.sk89q.craftbook.sponge.util.SignUtil.isSign(event.getTargetBlock().getLocation().get())", "InteractBlockEvent.Secondary.getInteractionPoint()", "InteractBlockEvent.Secondary.getInteractionPoint()", "InteractBlockEvent.Secondary.getInteractionPoint()", "event.getTargetBlock().getLocation()", "InteractBlockEvent.Secondary.getTargetBlock()", "event.getTargetBlock().getLocation()", "event.getInteractionPoint().isPresent()", "event.getInteractionPoint().get().getY()", "event.getTargetBlock().getLocation().get().getTileEntity().get()", "com.sk89q.craftbook.sponge.mechanics.Elevator.transportEntity(org.spongepowered.api.entity.living.Humanoid,event.getTargetBlock().getLocation().get(),(down ? org.spongepowered.api.util.Direction.DOWN : org.spongepowered.api.util.Direction.UP))", "InteractBlockEvent.Secondary.getTargetBlock()", "InteractBlockEvent.Secondary.getInteractionPoint()", "event.getTargetBlock().getLocation().get().getTileEntity()", "InteractBlockEvent.Secondary.getTargetBlock()", "event.getTargetBlock().getLocation().get()", "event.getInteractionPoint().isPresent()", "event.getInteractionPoint().get()"], "Fixed commit": "5b48c3da5baf14e8434a8d3695355e8933b4c6bb", "Url": "https://api.github.com/repos/EngineHub/CraftBook", "Date": "2016-05-21T10:55:18Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (eliminatedTrips > 0) { thh.setNumberOfTrips(purp, ((thh.getNumberOfTrips(purp)) - eliminatedTrips)); removedTrips[td.getZoneIndex(thh.getHomeZone())] += eliminatedTrips; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7735/buggy-version/src.main.java.de.tum.bgu.msm.tripGeneration.TripGeneration.java", "BodyUseAPI": ["de.tum.bgu.msm.tripGeneration.TimoHousehold.setNumberOfTrips(int,((thh.getNumberOfTrips(purp)) - eliminatedTrips))"], "Fixed commit": "96d10f76a7429c8ee6c32768cddfc106897e6116", "Url": "https://api.github.com/repos/msmobility/mito", "Date": "2016-09-21T19:56:57Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.unima.sensor.features.model.Attribute.getStartTimePoint()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (attrAbsoluteStart > windowEnd) { long newWindowStart = windowEnd - shift; long newWindowEnd = newWindowStart + (de.unima.sensor.features.FactoryProperties.WINDOW_SIZE); de.unima.sensor.features.model.Window window = new de.unima.sensor.features.model.Window(this.windowForward, newWindowStart, newWindowEnd, labels); dc.addWindow(newWindowEnd, window); (this.windowForward)++; dc.increaseWindowsLastModified(); }else { if (((dc.getWindows()) == null) || ((dc.getWindows().size()) == 0)) { continue; } if (!(blacklist.containsKey(sensorType))) { blacklist.put(sensorType, new java.util.HashSet<java.lang.Long>()); } if (!(blacklist.get(sensorType).contains(attrAbsoluteEnd))) { blacklist.get(sensorType).add(attrAbsoluteEnd); dc.getWindows().lastEntry().getValue().build(); dc.increaseWindowsLastModified(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5093/buggy-version/src.de.unima.sensor.features.controller.WindowManager.java", "BodyUseAPI": [], "Fixed commit": "e4184bd3e55077eaba74f8c0cf7c4e8534e0da83", "Url": "https://api.github.com/repos/sztyler/sensorfeatureextraction", "Date": "2016-11-30T14:35:39Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fragmentManager.findFragmentByTag(\"signUpFragment\")) != null) { if (fragmentManager.findFragmentByTag(\"signUpFragment\").isAdded()) fragmentManager.beginTransaction().remove(fragmentManager.findFragmentByTag(\"signUpFragment\")).commit(); }else super.onBackPressed();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/193/buggy-version/app.src.main.java.com.harsh.nandy.cancerantidote.login.java", "BodyUseAPI": ["fragmentManager.findFragmentByTag(\"signUpFragment\").isAdded()", "android.support.v4.app.FragmentManager.beginTransaction()", "fragmentManager.beginTransaction().remove(fragmentManager.findFragmentByTag(\"signUpFragment\"))", "android.support.v4.app.FragmentManager.findFragmentByTag(java.lang.String)", "fragmentManager.beginTransaction().remove(fragmentManager.findFragmentByTag(\"signUpFragment\")).commit()", "android.support.v4.app.FragmentManager.findFragmentByTag(java.lang.String)"], "Fixed commit": "e9afa634731a9623e5027f076c860f514898ce80", "Url": "https://api.github.com/repos/komalkhatri3/pratiksha", "Date": "2017-03-26T21:18:18Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Ctx.assetManager.getIcon(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (imageDisabled != null) style.imageDisabled = new com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable(imageDisabled);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4730/buggy-version/adventure-editor.src.main.java.com.bladecoder.engineeditor.ui.ProjectToolbar.java", "BodyUseAPI": [], "Fixed commit": "e3fef269782d8cb6d1afdec43709544790560051", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2017-10-26T11:50:16Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((storageInfo.getParameters()) != null) { parameters.putAll(storageInfo.getParameters()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6404/buggy-version/metacat-s3-connector.src.main.java.com.netflix.metacat.s3.connector.util.ConverterUtil.java", "BodyUseAPI": ["com.facebook.presto.spi.StorageInfo.getParameters()", "java.util.Map<java.lang.String, java.lang.String>.putAll(storageInfo.getParameters())"], "Fixed commit": "e3ecbfc7bc526e47d0561d1a41a9a7e586f8453f", "Url": "https://api.github.com/repos/Netflix/metacat", "Date": "2016-03-24T19:15:43Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((storageInfo.getSerdeInfoParameters()) != null) { parameters.putAll(storageInfo.getSerdeInfoParameters()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6404/buggy-version/metacat-s3-connector.src.main.java.com.netflix.metacat.s3.connector.util.ConverterUtil.java", "BodyUseAPI": ["com.facebook.presto.spi.StorageInfo.getSerdeInfoParameters()", "java.util.Map<java.lang.String, java.lang.String>.putAll(storageInfo.getSerdeInfoParameters())"], "Fixed commit": "e3ecbfc7bc526e47d0561d1a41a9a7e586f8453f", "Url": "https://api.github.com/repos/Netflix/metacat", "Date": "2016-03-24T19:15:43Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.matsim.api.core.v01.Id<org.matsim.contrib.dvrp.data.Vehicle>, org.matsim.contrib.dvrp.schedule.Schedule<org.matsim.contrib.dvrp.schedule.AbstractTask>>.get(veh.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((s.getTasks().size()) > 1) && (s.getTasks().get(((s.getTasks().size()) - 2)).getOnWayToActivity())) && (!(s.getTasks().get(((s.getTasks().size()) - 2)).getStatus().equals(Task.TaskStatus.PERFORMED)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4233/buggy-version/contribs.dvrp.src.main.java.rideSharing.RideShareOptimizer.java", "BodyUseAPI": [], "Fixed commit": "fd4072c6ae713f28511e8a6975352aa77c31f41e", "Url": "https://api.github.com/repos/strawrange/matsim", "Date": "2017-01-29T03:36:15Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (len == (files.length)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5396/buggy-version/railo-java.railo-core.src.railo.runtime.engine.Controler.java", "BodyUseAPI": [], "Fixed commit": "906694f531982f884d87f438dad37dda9f9ec881", "Url": "https://api.github.com/repos/cybersonic/railo", "Date": "2010-12-16T10:28:47Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentActivity == null) { android.util.Log.d(\"SplashScreen\", \"Activity is null\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/102/buggy-version/GeoNote.app.src.main.java.geonote.app.Fragments.SplashScreenFragment.java", "BodyUseAPI": [], "Fixed commit": "43262ce3414aabf153eefa972eca192f5b79e730", "Url": "https://api.github.com/repos/ZanyGnu/GeoNote", "Date": "2015-04-30T03:08:47Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (place != null) { items[(pos++)] = place.name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/102/buggy-version/GeoNote.app.src.main.java.geonote.app.Activity.NoteViewActivity.java", "BodyUseAPI": [], "Fixed commit": "43262ce3414aabf153eefa972eca192f5b79e730", "Url": "https://api.github.com/repos/ZanyGnu/GeoNote", "Date": "2015-04-30T03:08:47Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (u.getProtocol().equalsIgnoreCase(\"https\")) { con = ((javax.net.ssl.HttpsURLConnection) (u.openConnection())); }else { con = ((java.net.HttpURLConnection) (u.openConnection())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/64/buggy-version/src.version2.prototype.download.DownloadUtils.java", "BodyUseAPI": ["java.net.URL.openConnection()", "java.net.URL.openConnection()"], "Fixed commit": "291c74dc2eb7724ae4ed20e7a727054521bc5ba3", "Url": "https://api.github.com/repos/eastweb/EastWeb.V2", "Date": "2016-12-23T21:59:02Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (conn instanceof javax.net.ssl.HttpsURLConnection) { ((javax.net.ssl.HttpsURLConnection) (conn)).setConnectTimeout(30000); ((javax.net.ssl.HttpsURLConnection) (conn)).connect(); final int code = ((javax.net.ssl.HttpsURLConnection) (conn)).getResponseCode(); if (code != 200) { throw new java.io.IOException((\"HTTPS request returned code \" + code)); } }else if (conn instanceof java.net.HttpURLConnection) { ((java.net.HttpURLConnection) (conn)).setConnectTimeout(30000); ((java.net.HttpURLConnection) (conn)).connect(); final int code = ((java.net.HttpURLConnection) (conn)).getResponseCode(); if (code != 200) { throw new java.io.IOException((\"HTTP request returned code \" + code)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/64/buggy-version/src.version2.prototype.download.DownloadUtils.java", "BodyUseAPI": [], "Fixed commit": "291c74dc2eb7724ae4ed20e7a727054521bc5ba3", "Url": "https://api.github.com/repos/eastweb/EastWeb.V2", "Date": "2016-12-23T21:59:02Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javafx.application.Platform.isFxApplicationThread()) { SP.setContent(tp); }else { javafx.application.Platform.runLater(() -> SP.setContent(tp)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4282/buggy-version/src.P2PFSGui_elements.java", "BodyUseAPI": [], "Fixed commit": "814a207ef59e3f93a07dd6f4975c721dde610814", "Url": "https://api.github.com/repos/maorbernstein/P2PFileSharing", "Date": "2016-08-21T06:22:17Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reader.remaining()) <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7915/buggy-version/src.main.java.org.jcodec.codecs.h264.decode.SliceReader.java", "BodyUseAPI": [], "Fixed commit": "4581b3356bbceb7522ad8bc422290bc9fd39c11d", "Url": "https://api.github.com/repos/jcodec/jcodec", "Date": "2017-08-03T13:43:14Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reader.remaining()) <= 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7915/buggy-version/src.main.java.org.jcodec.codecs.h264.decode.SliceReader.java", "BodyUseAPI": [], "Fixed commit": "4581b3356bbceb7522ad8bc422290bc9fd39c11d", "Url": "https://api.github.com/repos/jcodec/jcodec", "Date": "2017-08-03T13:43:14Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.qubit.topnet.Request.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (contentType != null) { int idx = contentType.indexOf(\"charset=\"); if (idx != (-1)) { java.lang.String charsetString = contentType.substring((idx + 8)).trim(); charset = com.qubit.topnet.ServerBase.getCharsetForName(charsetString); }else { charset = java.nio.charset.Charset.defaultCharset(); } }else { charset = java.nio.charset.Charset.defaultCharset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8654/buggy-version/src.main.java.com.qubit.topnet.Request.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "e047c0349dd0499218eb4b50c6de5998b5095d2b", "Url": "https://api.github.com/repos/QubitProducts/topNET", "Date": "2017-12-07T17:05:34Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((i == 0) && ((list.length) == 1)) master.addWord(list[i], null, true); else if (i == 0) master.addWord(list[i], list[(i + 1)], true); else if (i == ((list.length) - 1)) master.addWord(list[i], null); else master.addWord(list[i], list[(i + 1)]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9130/buggy-version/src.uk.co.ignignokt.markov.Markov.java", "BodyUseAPI": ["uk.co.ignignokt.markov.word.WordList.addWord(java.lang.String,java.lang.String)", "uk.co.ignignokt.markov.word.WordList.addWord(java.lang.String,<nulltype>,boolean)", "uk.co.ignignokt.markov.word.WordList.addWord(java.lang.String,java.lang.String,boolean)", "uk.co.ignignokt.markov.word.WordList.addWord(java.lang.String,<nulltype>)"], "Fixed commit": "e2b02af9246bb9a2db2f817aead0c8979c878285", "Url": "https://api.github.com/repos/seadog/markov", "Date": "2011-08-31T20:46:01Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.compiere.print.ReportEngine.getQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (query != null) Record_ID = ((java.lang.Integer) (query.getCode(0)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8608/buggy-version/base.src.org.compiere.print.ServerReportCtl.java", "BodyUseAPI": ["org.compiere.model.MQuery.getCode(int)"], "Fixed commit": "f9c28490c362a530eb69c4b8d314f9fd16773c9c", "Url": "https://api.github.com/repos/adempiere/adempiere", "Date": "2016-02-24T23:58:54Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Maps.newHashMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prunedKey.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4190/buggy-version/contrib.src.main.java.com.datatorrent.contrib.dimensions.DimensionsQueryExecutor.java", "BodyUseAPI": [], "Fixed commit": "f94fa3248f12562dab58f77b9165f86ad781e6f3", "Url": "https://api.github.com/repos/apache/apex-malhar", "Date": "2015-06-18T01:49:37Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selectedC.contains(cBox[a].getText())) cBox[a].setSelected(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8005/buggy-version/Application.src.Main.java", "BodyUseAPI": ["javax.swing.JCheckBox.setSelected(boolean)"], "Fixed commit": "d549e060e681c2f0c22738c1c05402b624d600b8", "Url": "https://api.github.com/repos/IoannisCleary/IS3Team", "Date": "2013-12-03T21:15:31Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request) != null) device = cache.getDevice(request, this); else device = cache.getDeviceFromID(this.userAgent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9237/buggy-version/code.src.main.java.com.scientiamobile.wurflcloud.CloudClient.java", "BodyUseAPI": [], "Fixed commit": "2d5d4fee31f486ff57a6c78e6392528bf346cd95", "Url": "https://api.github.com/repos/WURFL/wurfl-cloud-client-java", "Date": "2017-05-04T13:56:55Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (client.isCommandConnected()) { }else { clients.remove(client.getInetAddress()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7602/buggy-version/src.model.ClientList.java", "BodyUseAPI": ["java.util.HashMap<java.net.InetAddress, model.Client>.remove(client.getInetAddress())", "model.Client.getInetAddress()"], "Fixed commit": "ef86102c53c2b20334b4202ea27aa85f1a46e066", "Url": "https://api.github.com/repos/floppers09/AudioStreamingServer", "Date": "2017-03-15T06:03:11Z"},
{"Line": "=>1678", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (genericAttributeType instanceof java.lang.reflect.ParameterizedType) { java.lang.reflect.ParameterizedType parametrized = ((java.lang.reflect.ParameterizedType) (genericAttributeType)); java.lang.reflect.Type[] arguments = parametrized.getActualTypeArguments(); if ((arguments.length) > 0) { paremeterType = arguments[0]; } }else if ((realAttributeType.getTypeParameters().length) > 0) { paremeterType = realAttributeType.getTypeParameters()[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5072/buggy-version/src.main.java.uk.co.jemos.podam.api.PodamFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "ea30d68258a14a774b4e76a60b796fc2177c973c", "Url": "https://api.github.com/repos/daivanov/joinmo", "Date": "2015-02-22T11:15:01Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ps) != null) { stopPlayBack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1744/buggy-version/src.jspeak.ClipReader.java", "BodyUseAPI": [], "Fixed commit": "8136de813f9c7d2d08b7ba223e0602ba67afce87", "Url": "https://api.github.com/repos/BullShark/JSpeak", "Date": "2015-11-07T09:46:26Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (moveHistory.isEmpty()) { moveMap.put(new com.neptune.Move(5, 5), 0); return moveMap; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4045/buggy-version/src.com.neptune.State.java", "BodyUseAPI": [], "Fixed commit": "de9c2b26d87a07ea530f33b6c4ae75bb5424e7dd", "Url": "https://api.github.com/repos/bao2703/Gomoku", "Date": "2017-03-22T07:48:28Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jetbrains.python.debugger.pydev.VersionCommand.getRemoteVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (version != null) { version = version.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7184/buggy-version/python.pydevSrc.com.jetbrains.python.debugger.pydev.RemoteDebugger.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "5a1e543910bee226db067fca021ac12e418a1366", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2014-11-18T12:16:10Z"},
{"Line": "=>1542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wandConfig.getBoolean(\"mode_drop\", false)) { dropAction = WandAction.TOGGLE; swapAction = WandAction.CYCLE_HOTBAR; rightClickAction = WandAction.NONE; }else if ((mode) == (WandMode.CAST)) { leftClickAction = WandAction.CAST; rightClickAction = WandAction.CAST; swapAction = WandAction.NONE; dropAction = WandAction.NONE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6289/buggy-version/src.main.java.com.elmakers.mine.bukkit.wand.Wand.java", "BodyUseAPI": [], "Fixed commit": "ddf91f1762404b63d09a9dcc3eee64919f077f24", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2016-03-28T18:23:52Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.lang.Character.isLetterOrDigit(c)) postfix.append(c);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8883/buggy-version/src.calc.CalcEngine.java", "BodyUseAPI": ["java.lang.StringBuffer.append(char)"], "Fixed commit": "a5242ebd66730673f03c55a1075bfa15c9fde105", "Url": "https://api.github.com/repos/judyobrienie/Calculator", "Date": "2017-01-27T19:56:43Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mState) != (com.yat3s.chopin.ChopinLayout.STATE_LOADING)) { setState(com.yat3s.chopin.ChopinLayout.STATE_BOUNCING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4055/buggy-version/chopin.src.main.java.com.yat3s.chopin.ChopinLayout.java", "BodyUseAPI": [], "Fixed commit": "8f003d4a4ffc3beb5dea9b04e7b824210a4c2b02", "Url": "https://api.github.com/repos/Yat3s/Chopin", "Date": "2017-08-04T09:08:54Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mState) != (com.yat3s.chopin.ChopinLayout.STATE_REFRESHING)) { setState(com.yat3s.chopin.ChopinLayout.STATE_BOUNCING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4055/buggy-version/chopin.src.main.java.com.yat3s.chopin.ChopinLayout.java", "BodyUseAPI": [], "Fixed commit": "8f003d4a4ffc3beb5dea9b04e7b824210a4c2b02", "Url": "https://api.github.com/repos/Yat3s/Chopin", "Date": "2017-08-04T09:08:54Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p2pChat.Peer.getQuit()) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1290/buggy-version/NextInput.java", "BodyUseAPI": [], "Fixed commit": "b6e39bbc175c88e418498f0ef5a7db2097286a5c", "Url": "https://api.github.com/repos/joshuaconner/p2pChat", "Date": "2011-09-19T05:33:51Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stack.get(((stack.size()) - 1)).equals(\"lb\")) { characters(fr.inria.aviz.tikaextensions.tika.xml.ContextualElementMetadataHandler.SPACE, 0, fr.inria.aviz.tikaextensions.tika.xml.ContextualElementMetadataHandler.SPACE.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8327/buggy-version/src.main.java.fr.inria.aviz.tikaextensions.tika.xml.ContextualElementMetadataHandler.java", "BodyUseAPI": [], "Fixed commit": "3e1da316f81c9d66d774fe8f3768859004bd89e6", "Url": "https://api.github.com/repos/CENDARI/tika-extensions", "Date": "2015-12-24T23:43:28Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (copyDetail.isPublicationHeaderMustBeCopied()) { copyDetail.setFromNodePK(rootPK); copyDetail.setToNodePK(targetPK); getKmeliaBm().copyPublications(copyDetail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/621/buggy-version/kmelia.kmelia-ejb.src.main.java.com.silverpeas.component.kmelia.KmeliaPaste.java", "BodyUseAPI": ["com.silverpeas.component.kmelia.KmeliaCopyDetail.setFromNodePK(com.stratelia.webactiv.util.node.model.NodePK)", "com.silverpeas.component.kmelia.KmeliaCopyDetail.setToNodePK(com.stratelia.webactiv.util.node.model.NodePK)", "com.stratelia.webactiv.kmelia.control.ejb.KmeliaBm.copyPublications(com.silverpeas.component.kmelia.KmeliaCopyDetail)"], "Fixed commit": "45f5a689c6a5f3874416501483f63cb1f3d03547", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Components", "Date": "2015-07-24T08:09:02Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (contactNo.contains(\",\")) { multipleContact = contactNo.split(\",\"); }else if (contactNo.contains(\"<br>\")) { multipleContact = contactNo.split(\"<br>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1256/buggy-version/app.src.main.java.com.tapandtype.rutvik.ems.TakeFollowUp.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "81e58dce8894acb3b1ac2e4253e682419698bde8", "Url": "https://api.github.com/repos/rutvik106/EMS", "Date": "2017-03-17T18:18:24Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tvFollowUpCustomerContact.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(contactNo.contains(\",\"))) && (!(contactNo.contains(\"<br>\")))) { promptForPhoneCall(contactNo); }else { promptForSelectingNumber(contactNo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1256/buggy-version/app.src.main.java.com.tapandtype.rutvik.ems.TakeFollowUp.java", "BodyUseAPI": ["com.tapandtype.rutvik.ems.TakeFollowUp.1.promptForSelectingNumber(java.lang.String)", "com.tapandtype.rutvik.ems.TakeFollowUp.1.promptForPhoneCall(java.lang.String)"], "Fixed commit": "81e58dce8894acb3b1ac2e4253e682419698bde8", "Url": "https://api.github.com/repos/rutvik106/EMS", "Date": "2017-03-17T18:18:24Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (controller.getConnections(type).contains(connection.getSenderId(), connection.getReceiverId())) { connectionListener.onNoConnection(receiverConnectorUI); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9209/buggy-version/VWorkflows-FX.src.eu.mihosoft.vrl.workflow.fx.FXConnectionSkin.java", "BodyUseAPI": [], "Fixed commit": "c3ef5ef6c48b38f565207e988651255905654d1e", "Url": "https://api.github.com/repos/miho/VWorkflows", "Date": "2013-07-07T10:03:57Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (scale && (prev != null)) { prev = scaled(prev, minx, miny, maxx, maxy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4489/buggy-version/src.nl.tue.win.ga.model.SimplePolygon.java", "BodyUseAPI": ["nl.tue.win.ga.model.SimplePolygon.scaled(java.awt.Point,int,int,int,int)"], "Fixed commit": "5cebad90088b28dbd299ab5661e9d10055e61340", "Url": "https://api.github.com/repos/maikelsteneker/GeometricAlgorithms", "Date": "2015-01-05T16:21:31Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.gbif.occurrence.processor.interpreting.MultiMediaInterpreter.HTML_TYPE.equalsIgnoreCase(mo.getFormat())) && ((mo.getIdentifier()) != null)) { mo.setReferences(mo.getIdentifier()); mo.setIdentifier(null); mo.setFormat(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8014/buggy-version/occurrence-processor.src.main.java.org.gbif.occurrence.processor.interpreting.MultiMediaInterpreter.java", "BodyUseAPI": ["org.gbif.api.model.common.MediaObject.getIdentifier()", "org.gbif.api.model.common.MediaObject.setFormat(<nulltype>)", "org.gbif.api.model.common.MediaObject.setReferences(mo.getIdentifier())", "org.gbif.api.model.common.MediaObject.setIdentifier(<nulltype>)"], "Fixed commit": "7ee91504dbd096f31687a180aa5c507ba1d1d2e8", "Url": "https://api.github.com/repos/gbif/occurrence", "Date": "2014-05-06T10:21:47Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (editText.getText().toString().isEmpty()) { getYelp(null); }else { getYelp(editText.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6719/buggy-version/app.src.main.java.com.example.ahy.myapplication.TrailRecommendationActivity.java", "BodyUseAPI": ["com.example.ahy.myapplication.TrailRecommendationActivity.2.getYelp(editText.getText().toString())", "android.widget.EditText.getText()", "editText.getText().toString()"], "Fixed commit": "b2eb46de0fbdc53c4182024aef003f77ccb00ef9", "Url": "https://api.github.com/repos/al-hy/TrailTrotter", "Date": "2017-05-14T10:40:20Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loadMore) { showProgress(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1123/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.posts.PostsListFragment.java", "BodyUseAPI": [], "Fixed commit": "2f980993341c54cc57558d254e72cc46e914a5ab", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2015-06-07T13:15:00Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exist.security.Account.getPassword()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (passwd != null) { updatingAccount.setPassword(account.getPassword()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8957/buggy-version/src.org.exist.security.AbstractRealm.java", "BodyUseAPI": [], "Fixed commit": "80d313594cc65deb9f1117dbccd5cfaa317f11b8", "Url": "https://api.github.com/repos/joewiz/exist", "Date": "2014-01-11T11:20:10Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Main.systemIn.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cardStr.equals(\"\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4191/buggy-version/src.client.LocalPlayer.java", "BodyUseAPI": [], "Fixed commit": "4b94c845195f87e98b89d09801a6822a6d17a3b8", "Url": "https://api.github.com/repos/NoodyYeung/PokerGame", "Date": "2017-12-11T13:13:28Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nextRowCol.size()) < 11) { exists = false; }else { if ((nextRowCol.get(1).text().charAt(0)) == 160) { exists = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4821/buggy-version/app.src.main.java.uhmanoa.droid_sch.Parser.java", "BodyUseAPI": ["nextRowCol.get(1).text().charAt(int)", "nextRowCol.get(1).text()", "org.jsoup.select.Elements.get(int)"], "Fixed commit": "3193a78d633e3c74d3a7956565c8d45b0c141e02", "Url": "https://api.github.com/repos/1andyn/droid_sch", "Date": "2015-04-10T02:04:01Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Constructor<T>.newInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (instance instanceof android.test.ActivityInstrumentationTestCase2) { ((android.test.ActivityInstrumentationTestCase2) (instance)).injectInstrumentation(mInstrumentation); android.content.Intent intent = new android.content.Intent(); intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); ((android.test.ActivityInstrumentationTestCase2) (instance)).setActivityIntent(intent); }else if (instance instanceof android.test.InstrumentationTestCase) { ((android.test.InstrumentationTestCase) (instance)).injectInstrumentation(mInstrumentation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5023/buggy-version/cucumber-android.src.at.mfellner.cucumber.android.runtime.AndroidObjectFactory.java", "BodyUseAPI": [], "Fixed commit": "c82b7f2846cc0fe5ab1cf73b3de3df674b21078e", "Url": "https://api.github.com/repos/mfellner/cucumber-android", "Date": "2013-05-12T03:14:10Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (textWidth == 0) { textWidth = ((resolvedFont.getAverageFontWidth()) / 1000) * fontSize; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7757/buggy-version/sejda-sambox.src.main.java.org.sejda.impl.sambox.component.PageTextWriter.java", "BodyUseAPI": [], "Fixed commit": "305ef2abf1692c9f53dbaba389c724467da28a88", "Url": "https://api.github.com/repos/torakiki/sejda", "Date": "2017-10-28T09:24:42Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.greatmancode.craftconomy3.Common.getInstance().getConfigurationManager().getConfig().getBoolean(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isCaseSentitive) { stringBuilder.append(((\"('\" + (user.user)) + \"')\")); }else { stringBuilder.append(((\"('\" + (user.user.toLowerCase())) + \"')\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5577/buggy-version/src.main.java.com.greatmancode.craftconomy3.converter.Converter.java", "BodyUseAPI": [], "Fixed commit": "30aec995a28f526be9d817e6eb99d0353d243957", "Url": "https://api.github.com/repos/greatman/craftconomy3", "Date": "2013-03-11T22:09:52Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ticksInUse < 0) { player.stopActiveHand(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8128/buggy-version/src.main.java.xreliquary.items.ItemRendingGale.java", "BodyUseAPI": [], "Fixed commit": "34916b7488da8f62a8e8a25326f2e62c9a4c5634", "Url": "https://api.github.com/repos/P3pp3rF1y/Reliquary", "Date": "2016-07-13T23:42:18Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((links) == null) this.setLinks(new java.util.ArrayList<com.sun.syndication.feed.atom.Link>());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5312/buggy-version/src.main.java.ac.simons.syndication.modules.atom.AtomContent.java", "BodyUseAPI": [], "Fixed commit": "28d50ac99e6a8d9b565b3f32b6c40a0cdf6ae9ab", "Url": "https://api.github.com/repos/khoran/java-syndication", "Date": "2012-12-28T02:09:10Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSongPath) != null) { songBL.deleteByPath(currentSongPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7215/buggy-version/mobile.src.main.java.com.productiveengine.myl.Services.MediaPlayerService.java", "BodyUseAPI": [], "Fixed commit": "88b5a71fa0d0b91027d24294c67bb530bc803eb8", "Url": "https://api.github.com/repos/ProductiveEngine/MYL", "Date": "2017-07-07T18:02:35Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetMetadata != candidateSupportingMeta) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/922/buggy-version/src.main.java.portablejim.bbw.core.WandWorker.java", "BodyUseAPI": [], "Fixed commit": "4eb9028476255d75e5378065ee352783d3339302", "Url": "https://api.github.com/repos/portablejim/BetterBuildersWands", "Date": "2015-12-19T01:20:36Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (localDebug) java.lang.System.out.println((\"ConfigurationFileExport(i): ConfigurationFileType: \" + iConfigurationFileType));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3824/buggy-version/src.com.comcast.oscar.configurationfile.ConfigurationFileExport.java", "BodyUseAPI": [], "Fixed commit": "3d7667446f4a6c73ede522544edc9973229583b0", "Url": "https://api.github.com/repos/Comcast/Oscar", "Date": "2015-05-26T13:59:23Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (localDebug) java.lang.System.out.println(\"ConfigurationFileExport(i): PACKET-CABLE -> CONFIGURATION-TYPE\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3824/buggy-version/src.com.comcast.oscar.configurationfile.ConfigurationFileExport.java", "BodyUseAPI": [], "Fixed commit": "3d7667446f4a6c73ede522544edc9973229583b0", "Url": "https://api.github.com/repos/Comcast/Oscar", "Date": "2015-05-26T13:59:23Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (localDebug) java.lang.System.out.println(\"ConfigurationFileExport(i): DPoE -> CONFIGURATION-TYPE\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3824/buggy-version/src.com.comcast.oscar.configurationfile.ConfigurationFileExport.java", "BodyUseAPI": [], "Fixed commit": "3d7667446f4a6c73ede522544edc9973229583b0", "Url": "https://api.github.com/repos/Comcast/Oscar", "Date": "2015-05-26T13:59:23Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (localDebug) java.lang.System.out.println(\"ConfigurationFileExport(i): DOCSIS -> CONFIGURATION-TYPE\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3824/buggy-version/src.com.comcast.oscar.configurationfile.ConfigurationFileExport.java", "BodyUseAPI": [], "Fixed commit": "3d7667446f4a6c73ede522544edc9973229583b0", "Url": "https://api.github.com/repos/Comcast/Oscar", "Date": "2015-05-26T13:59:23Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((existing != null) && (runStatus != (co.cask.cdap.proto.ProgramRunStatus.FAILED))) { throw new java.lang.UnsupportedOperationException(java.lang.String.format(\"Cannot record program %s in status %s\", programId, runStatus)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6744/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.internal.app.store.AppMetadataStore.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,co.cask.cdap.proto.id.ProgramId,co.cask.cdap.proto.ProgramRunStatus)"], "Fixed commit": "195e93445938119c02148d52e500e4161785e748", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2017-07-20T17:50:15Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.collections.ObservableList<T>.indexOf(it.unibo.alchemist.boundary.gui.view.cells.AbstractEffectCell.getItem())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (thisIndex < 0) { throw new java.lang.IllegalStateException(\"Can't find the the item of this cell in the ListView\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5103/buggy-version/alchemist.alchemist-swingui.src.main.java.it.unibo.alchemist.boundary.gui.view.cells.AbstractEffectCell.java", "BodyUseAPI": [], "Fixed commit": "7ef6330852e87e3f40256e8d1c6d7026d33c57f5", "Url": "https://api.github.com/repos/NiccoMlt/Alchemist", "Date": "2017-06-12T10:29:08Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.apache.ambari.server.controller.internal.ServiceResourceProvider) (getResourceProvider(Resource.Type.Service))).installAndStart(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (request != null) { request.setMessage(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1414/buggy-version/ambari-server.src.main.java.org.apache.ambari.server.controller.internal.ClusterResourceProvider.java", "BodyUseAPI": ["org.apache.ambari.server.controller.internal.RequestStatusResponse.setMessage(java.lang.String)"], "Fixed commit": "42fca3b184d726466752909028ef27705871524d", "Url": "https://api.github.com/repos/fanzhidongyzby/ambari", "Date": "2015-12-11T15:11:34Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (requestStages == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1414/buggy-version/ambari-server.src.main.java.org.apache.ambari.server.controller.internal.ServiceResourceProvider.java", "BodyUseAPI": [], "Fixed commit": "42fca3b184d726466752909028ef27705871524d", "Url": "https://api.github.com/repos/fanzhidongyzby/ambari", "Date": "2015-12-11T15:11:34Z"},
{"Line": "=>740", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultDetails instanceof com.cloudstar.model.search.SMSResultDetails) { prefixRecipients = context.getResources().getString(R.string.chat_sms_prefix_recipients); }else { prefixRecipients = context.getResources().getString(R.string.chat_prefix_recipients); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/978/buggy-version/CloudStarProject.CloudStar.src.main.java.com.cloudstar.util.ResultDetailViewBuilder.java", "BodyUseAPI": [], "Fixed commit": "10699b05e5924c629627ed22def1c5c6cd4ff7ec", "Url": "https://api.github.com/repos/Cloud-Star/cloudstar-android", "Date": "2014-02-03T02:26:41Z"},
{"Line": "=>675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultDetails instanceof com.cloudstar.model.search.SMSResultDetails) { prefixRecipients = context.getResources().getString(R.string.chat_sms_prefix_recipients); }else { prefixRecipients = context.getResources().getString(R.string.chat_prefix_recipients); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/978/buggy-version/CloudStarProject.CloudStar.src.main.java.com.cloudstar.util.ResultDetailViewBuilder.java", "BodyUseAPI": [], "Fixed commit": "10699b05e5924c629627ed22def1c5c6cd4ff7ec", "Url": "https://api.github.com/repos/Cloud-Star/cloudstar-android", "Date": "2014-02-03T02:26:41Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.getResultType().equals(ResultType.SMS)) { prefixRecipients = context.getResources().getString(R.string.chat_sms_prefix_recipients); }else { prefixRecipients = context.getResources().getString(R.string.chat_prefix_recipients); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/978/buggy-version/CloudStarProject.CloudStar.src.main.java.com.cloudstar.util.ResultViewBuilder.java", "BodyUseAPI": [], "Fixed commit": "10699b05e5924c629627ed22def1c5c6cd4ff7ec", "Url": "https://api.github.com/repos/Cloud-Star/cloudstar-android", "Date": "2014-02-03T02:26:41Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (ZJGF)) { ZJGF = new java.math.BigDecimal(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7395/buggy-version/com.topsun.posclient.datamodel.src.com.topsun.posclient.datamodel.Item.java", "BodyUseAPI": [], "Fixed commit": "5f5a8ae6ab87d17f25f604a89b628b06b50fcf65", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2014-02-14T22:54:14Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bindUserRelations) considerUserRelationships(evaluatedTasks, user);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1183/buggy-version/src.main.java.crac.utility.SearchHelper.java", "BodyUseAPI": [], "Fixed commit": "8582dac21a4b3d08f09dc4da6c86a3b92034c742", "Url": "https://api.github.com/repos/CooperativeActivities/crac-core", "Date": "2016-10-10T15:57:30Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isScrollingEnabledX()) { velocityX = (getMouseWheelVelocityX(event.getNativeEvent())) / 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8829/buggy-version/src.main.java.com.googlecode.mgwt.ui.client.widget.impl.ScrollPanelTouchImpl.java", "BodyUseAPI": [], "Fixed commit": "133ad83696ca24db05e99a44f7502de80a79f756", "Url": "https://api.github.com/repos/dankurka/mgwt", "Date": "2011-11-16T14:09:44Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isScrollingEnabledY()) { velocityY = (getMouseWheelVelocityY(event.getNativeEvent())) / 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8829/buggy-version/src.main.java.com.googlecode.mgwt.ui.client.widget.impl.ScrollPanelTouchImpl.java", "BodyUseAPI": [], "Fixed commit": "133ad83696ca24db05e99a44f7502de80a79f756", "Url": "https://api.github.com/repos/dankurka/mgwt", "Date": "2011-11-16T14:09:44Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(v instanceof android.widget.AdapterView<?>)) { v.setOnClickListener(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5841/buggy-version/src.z.hol.loadingstate.LoadingStateLayout.java", "BodyUseAPI": ["android.view.View.setOnClickListener(<nulltype>)"], "Fixed commit": "6498539c56c5388fd60faa731d2edbab84c71bef", "Url": "https://api.github.com/repos/holmeszyx/LoadingStateLayout", "Date": "2014-08-01T08:24:41Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mIsNoDataViewInInit) && (!(isInEditMode()))) { throw new java.lang.IllegalArgumentException((\"Data view is \" + (getDataView()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5841/buggy-version/src.z.hol.loadingstate.view.SimpleAdapterViewWithLoadingState.java", "BodyUseAPI": [], "Fixed commit": "6498539c56c5388fd60faa731d2edbab84c71bef", "Url": "https://api.github.com/repos/holmeszyx/LoadingStateLayout", "Date": "2014-08-01T08:24:41Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (delim == null) { delim = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/811/buggy-version/net.solarnetwork.common.src.net.solarnetwork.util.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "806be5964bb42dbaa1d8a29cad9166a55ac986e6", "Url": "https://api.github.com/repos/SolarNetwork/solarnetwork-common", "Date": "2013-10-21T19:54:32Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (set == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/811/buggy-version/net.solarnetwork.common.src.net.solarnetwork.util.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "806be5964bb42dbaa1d8a29cad9166a55ac986e6", "Url": "https://api.github.com/repos/SolarNetwork/solarnetwork-common", "Date": "2013-10-21T19:54:32Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_pointIndex) == (_buffer.length())) { _buffer.append(character); (_pointIndex)++; }else { _buffer.insert(_pointIndex, character); (_pointIndex)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1566/buggy-version/fisked-java.src.org.fisked.buffer.Buffer.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.insert(int,char)"], "Fixed commit": "173267573cbe9d762fb65f3f7e005da1536495c7", "Url": "https://api.github.com/repos/fisk/fisked", "Date": "2015-09-27T12:33:06Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bookedSeats[javafx.scene.layout.GridPane.getRowIndex(element)][javafx.scene.layout.GridPane.getColumnIndex(element)]) == null) java.lang.System.out.println(\"This seat is not registered as free or booked\"); else java.lang.System.out.println(\"this seat is booked\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8595/buggy-version/src.customer.SeatSelectionCtrl.java", "BodyUseAPI": [], "Fixed commit": "6755209fb8207392822c223cb2f1e0660689a70c", "Url": "https://api.github.com/repos/jim1924/CinemaApp", "Date": "2017-11-30T10:35:52Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((journals) != null) { listAdapter = new android.widget.ArrayAdapter(this, R.layout.list_journals, R.id.journal_item, journals); journalsView.setAdapter(listAdapter); setProgressBar(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8774/buggy-version/Journee.app.src.main.java.com.journee.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fa410bba196e73a7c7ca27a6a10a686e015e0ecf", "Url": "https://api.github.com/repos/alon-itzhaki/tau_workshop_repo", "Date": "2016-04-02T14:29:31Z"},
{"Line": "=>675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eevolution.grid.IBrowserRow.getValueOfColumn(int,field.getAD_View_Column().getColumnName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (gridField != null) { java.lang.Object value = gridField.getValue(); if (value instanceof org.compiere.minigrid.IDColumn) { org.compiere.minigrid.IDColumn id = ((org.compiere.minigrid.IDColumn) (value)); value = id.getRecord_ID(); }else if (value instanceof java.lang.Double) { value = java.math.BigDecimal.valueOf(((java.lang.Double) (value))); }else if (value instanceof java.util.Date) { value = new java.sql.Timestamp(((java.util.Date) (value)).getTime()); } values.put(field.getAD_View_Column().getColumnName(), value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/687/buggy-version/client.src.org.eevolution.grid.Browser.java", "BodyUseAPI": ["org.compiere.model.GridField.getValue()"], "Fixed commit": "41169e67bc1665c9a3bcb2a2f3af749178408476", "Url": "https://api.github.com/repos/adempiere/adempiere", "Date": "2016-05-27T10:32:01Z"},
{"Line": "=>898", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (color < 0) { color = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1932/buggy-version/GUI_SI.src.imagen.ImageClass.java", "BodyUseAPI": [], "Fixed commit": "2ea70a1ebf1f68050e4eb61df13243eb3e6212c8", "Url": "https://api.github.com/repos/alu0100696585/Imapow", "Date": "2014-12-12T10:48:46Z"},
{"Line": "=>895", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (color > 255) { color = 255; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1932/buggy-version/GUI_SI.src.imagen.ImageClass.java", "BodyUseAPI": [], "Fixed commit": "2ea70a1ebf1f68050e4eb61df13243eb3e6212c8", "Url": "https://api.github.com/repos/alu0100696585/Imapow", "Date": "2014-12-12T10:48:46Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4581/buggy-version/src.me.StevenLawson.TotalFreedomMod.Commands.Command_wildcard.java", "BodyUseAPI": [], "Fixed commit": "b8b8ed8608f3615a54d0a377d355d27216439c1b", "Url": "https://api.github.com/repos/TotalFreedom/TotalFreedomMod", "Date": "2014-01-31T18:05:40Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Boolean>.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((failure != null) && failure) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7990/buggy-version/src.java.com.idega.manager.business.ContentMigrator.java", "BodyUseAPI": [], "Fixed commit": "752f9a63535242949ea0e33afeb8416389cde345", "Url": "https://api.github.com/repos/idega/com.idega.manager", "Date": "2013-04-26T11:29:37Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mExercise.getWeight()) != 0) { mSeekBar.setMax(((mExercise.getWeight()) * 2)); }else { mSeekBar.setMax(20); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8196/buggy-version/WorkoutWhiz.src.com.mcindoe.workoutwhiz.views.WeightDialogFragment.java", "BodyUseAPI": ["com.mcindoe.workoutwhiz.models.Exercise.getWeight()", "android.widget.SeekBar.setMax(((mExercise.getWeight()) * 2))"], "Fixed commit": "efc143bc7344da1a70e88b938036e9bb8457d056", "Url": "https://api.github.com/repos/rmcindoe3/Workout-Whiz", "Date": "2014-03-03T20:24:25Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lastMessage.length()) > 0) { try { android.text.SpannableString spannablecontent = new android.text.SpannableString(lastMessage); info.guardianproject.emoji.EmojiManager.getInstance(getContext()).addEmoji(getContext(), spannablecontent); mTextViewForMessages.setText(spannablecontent); } catch (java.io.IOException e) { e.printStackTrace(); } }else { mTextViewForMessages.setText(lastMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3127/buggy-version/src.info.guardianproject.otr.app.im.app.MessageView.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.CharSequence)"], "Fixed commit": "fb2ad6bace9fd9d76a8c1eb3e36ada5683982d88", "Url": "https://api.github.com/repos/n8fr8/Gibberbot", "Date": "2013-08-09T17:55:49Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((min == 60) || (min == 0)) { return hourStr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/495/buggy-version/application.src.se.chalmers.dat255.sleepfighter.speech.TimeFormatter.java", "BodyUseAPI": [], "Fixed commit": "1e6e7dd095b46bac82761c8d9450fda87098214a", "Url": "https://api.github.com/repos/Hasselmannen/sleepfighter", "Date": "2013-10-10T13:05:33Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (td == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5175/buggy-version/packages.SystemUI.src.com.android.systemui.statusbar.policy.Traffic.java", "BodyUseAPI": [], "Fixed commit": "5b9aaf632cd81fa640843c9ebd4098163d02d48e", "Url": "https://api.github.com/repos/temasek/android_frameworks_base", "Date": "2013-10-01T08:03:52Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (flag == (-1)) { java.lang.System.out.println((\"flag:-->\" + flag)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8895/buggy-version/ioc.src.com.smartions.ioc.logic.BaseBeanContext.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "8b8bc32da5dea87c8d39cc9a4f104b683bf43bf8", "Url": "https://api.github.com/repos/gmfenglin/android-ioc-aop", "Date": "2015-08-28T03:07:43Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag == 1) { objectElement = constructorElement.newInstance(new java.lang.Object[]{ new java.io.File(dexFilePath), null, dexFile }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8895/buggy-version/ioc.src.com.smartions.ioc.logic.BaseBeanContext.java", "BodyUseAPI": [], "Fixed commit": "8b8bc32da5dea87c8d39cc9a4f104b683bf43bf8", "Url": "https://api.github.com/repos/gmfenglin/android-ioc-aop", "Date": "2015-08-28T03:07:43Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag == 0) { objectElement = constructorElement.newInstance(new java.lang.Object[]{ new java.io.File(dexFilePath), false, null, dexFile }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8895/buggy-version/ioc.src.com.smartions.ioc.logic.BaseBeanContext.java", "BodyUseAPI": [], "Fixed commit": "8b8bc32da5dea87c8d39cc9a4f104b683bf43bf8", "Url": "https://api.github.com/repos/gmfenglin/android-ioc-aop", "Date": "2015-08-28T03:07:43Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trackingEntity == null) || (trackingEntity == (org.iabako.shared.entity.enumeration.TrackingEntity.Quote))) { query = \"SELECT count(s) from Sale s WHERE s.enterprise IN (:enterprises) AND s.quote=1\"; count = ((java.lang.Long) (entityManager.createQuery(query).setParameter(\"enterprises\", getSessionUser().getEnterprise().getVisibleEnterprises()).getSingleResult())); if (count > 0) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8428/buggy-version/src.main.java.org.iabako.server.dao.support.QuickStartDAO.java", "BodyUseAPI": [], "Fixed commit": "f79c53a5ebf198f592bfb2ef960e99cc89585c48", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2017-01-09T09:19:00Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currPos > 1) currPos = 1; else if (currPos < (-1)) currPos = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8538/buggy-version/VirtualGamepad.src.bgsep.model.Gyro.java", "BodyUseAPI": [], "Fixed commit": "d30b91c359212031aab3232c92f3dd15ff207b3a", "Url": "https://api.github.com/repos/golvmopp/BGSEP", "Date": "2013-10-15T12:52:35Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((bitBufferLen) % 8) != 0) throw new java.lang.IllegalStateException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1834/buggy-version/src.io.nayuki.flac.BitInputStream.java", "BodyUseAPI": [], "Fixed commit": "91174b92e167f560e1351bebd7d4f14ec80b87b1", "Url": "https://api.github.com/repos/nayuki/FLAC-library-Java", "Date": "2017-02-08T18:42:42Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (endlabelindex < 0) endlabelindex = dataline.length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2004/buggy-version/Relation-Bootstrap.src.gov.ornl.stucco.relationprediction.RunRelationSVMs.java", "BodyUseAPI": [], "Fixed commit": "fbde31e6aa204a7b67968b1c7d2b524d0bc496a7", "Url": "https://api.github.com/repos/stucco/relation-bootstrap", "Date": "2016-08-01T13:54:13Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((locationFix) != null) { timeLocationFix = locationFix.getTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1578/buggy-version/src.com.dedaulus.cinematty.activities.Pages.CinemasWithSchedulePage.java", "BodyUseAPI": [], "Fixed commit": "da53db34646b281596dcc4e6024111807ee43bcd", "Url": "https://api.github.com/repos/Dedaulus/Cinematty", "Date": "2012-05-13T07:01:19Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((locationFix) != null) { timeLocationFix = locationFix.getTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1578/buggy-version/src.com.dedaulus.cinematty.activities.Pages.CinemasWithSchedulePage.java", "BodyUseAPI": [], "Fixed commit": "da53db34646b281596dcc4e6024111807ee43bcd", "Url": "https://api.github.com/repos/Dedaulus/Cinematty", "Date": "2012-05-13T07:01:19Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((locationFix) != null) { timeLocationFix = locationFix.getTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1578/buggy-version/src.com.dedaulus.cinematty.activities.Pages.CinemasPage.java", "BodyUseAPI": [], "Fixed commit": "da53db34646b281596dcc4e6024111807ee43bcd", "Url": "https://api.github.com/repos/Dedaulus/Cinematty", "Date": "2012-05-13T07:01:19Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((locationFix) != null) { timeLocationFix = locationFix.getTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1578/buggy-version/src.com.dedaulus.cinematty.activities.Pages.CinemasPage.java", "BodyUseAPI": [], "Fixed commit": "da53db34646b281596dcc4e6024111807ee43bcd", "Url": "https://api.github.com/repos/Dedaulus/Cinematty", "Date": "2012-05-13T07:01:19Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((argument.resolvedType) != null) argumentTypes.add(argument.resolvedType);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/782/buggy-version/src.eclipseAgent.lombok.eclipse.agent.PatchExtensionMethod.java", "BodyUseAPI": ["java.util.List<org.eclipse.jdt.internal.compiler.lookup.TypeBinding>.add(argument.resolvedType)"], "Fixed commit": "932dc55b1ab88f66c64bba62d4181ee6e044490f", "Url": "https://api.github.com/repos/mg6maciej/hrisey", "Date": "2014-12-04T01:10:35Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((x > 50) && (y > 50)) { g.drawImage(img, x, y, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6105/buggy-version/src.main.java.co.atoth.intellij.plugin.chucknorris.ui.SettingsJPanel.java", "BodyUseAPI": ["java.awt.Graphics.drawImage(java.awt.Image,int,int,<nulltype>)"], "Fixed commit": "6bf43e89698dd1e5f93ad8f08948d90829eefd1e", "Url": "https://api.github.com/repos/atoth91/Chuck-Norris-Facts-IntelliJ-Plugin", "Date": "2017-02-05T13:41:28Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (condition.getSignature().equals(\"Z\")) { return IGNORE_PRIORITY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2003/buggy-version/findbugs.src.java.edu.umd.cs.findbugs.detect.RedundantConditions.java", "BodyUseAPI": [], "Fixed commit": "72abff2627abb6613f3b2c39a2a30e5f3dd14a96", "Url": "https://api.github.com/repos/arthepsy/findbugs", "Date": "2015-02-17T14:36:54Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((end.compareTo(parentFrame.getSelectProject().getEndDate())) > 0) { javax.swing.JOptionPane.showMessageDialog(null, \"Please choose a date before the end date of Project\", \"Incorrect End Date\", javax.swing.JOptionPane.WARNING_MESSAGE); return; }else if ((end.compareTo(start)) < 0) { javax.swing.JOptionPane.showMessageDialog(null, \"End date must after Start Date!\", \"Incorrect End Date\", javax.swing.JOptionPane.WARNING_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3273/buggy-version/src.taskmgt.AddTaskGUI.java", "BodyUseAPI": ["java.util.Date.compareTo(java.util.Date)"], "Fixed commit": "69fcb8755134bc45067d6011009c16d1eedf29c2", "Url": "https://api.github.com/repos/aperauch/TMS-Twink", "Date": "2014-02-23T18:34:26Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.has(JsonKeys.ANSWER_HINT)) { answer.setHintText(node.get(JsonKeys.ANSWER_HINT).asText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7005/buggy-version/app.repositories.FlashCardRepository.java", "BodyUseAPI": ["repositories.Answer.setHintText(node.get(JsonKeys.ANSWER_HINT).asText())", "node.get(JsonKeys.ANSWER_HINT).asText()", "com.fasterxml.jackson.databind.JsonNode.get(JsonKeys.ANSWER_HINT)"], "Fixed commit": "0a4aec8a050f49539fe6a9fc40903cc08b99fad4", "Url": "https://api.github.com/repos/FWidm/FlashCardsAPI", "Date": "2016-12-31T12:50:03Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.has(JsonKeys.ANSWER_CORRECT)) { answer.setCorrect(node.get(JsonKeys.ANSWER_CORRECT).asBoolean()); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7005/buggy-version/app.repositories.FlashCardRepository.java", "BodyUseAPI": ["repositories.Answer.setCorrect(node.get(JsonKeys.ANSWER_CORRECT).asBoolean())", "node.get(JsonKeys.ANSWER_CORRECT).asBoolean()", "com.fasterxml.jackson.databind.JsonNode.get(JsonKeys.ANSWER_CORRECT)"], "Fixed commit": "0a4aec8a050f49539fe6a9fc40903cc08b99fad4", "Url": "https://api.github.com/repos/FWidm/FlashCardsAPI", "Date": "2016-12-31T12:50:03Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jp.syuriken.snsw.twclient.twitter.TwitterUser.getProfileBannerMediumURL()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (profileBannerURL != null) { configuration.getImageCacher().setImageIcon(new jp.syuriken.snsw.twclient.net.AbstractImageSetter() { @java.lang.Override public void setImage(java.awt.Image image) { try { getComponentUserInfo().setBackgroundImage(image); } catch (java.lang.InterruptedException e) { java.lang.Thread.currentThread().interrupt(); } } }, new java.net.URL(profileBannerURL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6097/buggy-version/elnetw-core.src.main.java.jp.syuriken.snsw.twclient.gui.UserInfoFrameTab.java", "BodyUseAPI": ["configuration.getImageCacher().setImageIcon(jp.syuriken.snsw.twclient.net.AbstractImageSetter,java.net.URL)"], "Fixed commit": "af89bca565d020d5bcfd8ddf27fcd259888df4d9", "Url": "https://api.github.com/repos/turenar/elnetw", "Date": "2014-06-01T03:15:47Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.terasology.dynamicCities.population.Culture.getProcentualsForZone()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((tempZoneArea.get(zone)) / totalAssignedArea) > (culturalNeedsPercentage.get(zone))) { diff = 9999999.0F; }else { diff += org.terasology.math.TeraMath.fastAbs((((tempZoneArea.get(zone)) / totalAssignedArea) - (culturalNeedsPercentage.get(zone)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/741/buggy-version/src.main.java.org.terasology.dynamicCities.settlements.components.DistrictFacetComponent.java", "BodyUseAPI": ["org.terasology.math.TeraMath.fastAbs(float)", "java.util.Map<java.lang.String, java.lang.Float>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Float>.get(java.lang.String)"], "Fixed commit": "2555a0daa4f646e4235dde7ff8eeca5dc4ed5481", "Url": "https://api.github.com/repos/Terasology/DynamicCities", "Date": "2016-07-20T17:52:37Z"},
{"Line": "=>602", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugins.floghelper.ui.flog.FlogFactory.getContentsTreeMap(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((contents.size()) == 0) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4975/buggy-version/src.plugins.floghelper.ui.flog.FlogFactory.java", "BodyUseAPI": [], "Fixed commit": "a7ca19aae993650c3180f92f732b923e75df7e1b", "Url": "https://api.github.com/repos/zidel/plugin-FlogHelper-staging", "Date": "2010-11-09T20:22:42Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.seedboxer.seedroid.tools.XMLfunctions.getElementValue(org.w3c.dom.Node)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((queueIdVal != null) && (!(queueIdVal.isEmpty()))) { queueId = java.lang.Long.parseLong(queueIdVal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2292/buggy-version/src.com.seedboxer.seedroid.ws.SeedBoxerWSClientImpl.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "43dec796e9913fbe7e7346b1a099d1894ff26606", "Url": "https://api.github.com/repos/seedboxer/seedroid", "Date": "2012-10-01T00:20:06Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((myResultset.getDocument().getDocumentFormat()) == (org.textanalyzer.documentimporter.DocumentFormat.PLAIN_TEXT)) { fileformat.setText((\"Format: \" + (myResultset.getDocument().getDocumentFormat()))); fileformat.setSize(150, 30); fileformat.setLocation(230, 625); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9103/buggy-version/src.org.textanalyzer.reportcreator.ReportCreator.java", "BodyUseAPI": ["org.textanalyzer.database.IResultSet.getDocument()", "myResultset.getDocument().getDocumentFormat()", "javax.swing.JLabel.setText((\"Format: \" + (myResultset.getDocument().getDocumentFormat())))"], "Fixed commit": "6ead83c7377a8be20a458da48d960d0b96ebdbad", "Url": "https://api.github.com/repos/Schille/Text-Analyzer", "Date": "2012-11-13T20:50:35Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mApplication.getBattleDatabase().getMovesForPokemon(com.pokemonbattlearena.android.engine.database.Pokemon)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((moves.size()) < 4) { selectedPokemon.setActiveMoveList(moves); }else { selectedPokemon.setActiveMoveList(moves.subList(0, 4)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8304/buggy-version/app.src.main.java.com.pokemonbattlearena.android.fragments.team.TeamsHomeFragment.java", "BodyUseAPI": ["com.pokemonbattlearena.android.engine.database.Pokemon.setActiveMoveList(java.util.List<com.pokemonbattlearena.android.engine.database.Move>)", "java.util.List<com.pokemonbattlearena.android.engine.database.Move>.subList(int,int)", "com.pokemonbattlearena.android.engine.database.Pokemon.setActiveMoveList(moves.subList(0, 4))"], "Fixed commit": "8ae68ff153e1ea20b85758a7eb3dcc9d08c4b333", "Url": "https://api.github.com/repos/cireficc/pokemon-arena-android", "Date": "2016-12-02T18:26:19Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (minute < 10) { return (hour + \":0\") + minute; }else { return (hour + \":\") + minute; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/138/buggy-version/CollectionSystem.app.src.main.java.me.alfredis.collectionsystem.Utility.java", "BodyUseAPI": [], "Fixed commit": "9015fe6dd67e68fc15e70c9a2463801360a628e1", "Url": "https://api.github.com/repos/TeamShi/CollectionSystem", "Date": "2015-05-30T04:50:06Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((wall.id) != 0) || (!(dpw.WALL_BLOCK.equals(dpw.CLAIMED_WALL_BLOCK)))) { setWall(dpw, plot.id, new com.intellectualcrafters.plot.object.PlotBlock[]{ wall }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6020/buggy-version/src.main.java.com.intellectualcrafters.plot.generator.HybridPlotManager.java", "BodyUseAPI": ["com.intellectualcrafters.plot.generator.HybridPlotManager.2.setWall(com.intellectualcrafters.plot.generator.HybridPlotWorld,plot.id,com.intellectualcrafters.plot.object.PlotBlock[])"], "Fixed commit": "d46475261a3bc4b034a6c08bb27a947add987e8f", "Url": "https://api.github.com/repos/IntellectualSites/PlotSquared", "Date": "2015-08-11T19:29:14Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.wicket.model.IModel<org.patientview.model.Patient>.getObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (patient.isLink()) { addIdType = new org.apache.wicket.markup.html.form.DropDownChoice(\"idType\", java.util.Arrays.asList(org.patientview.radar.web.panels.generic.GenericDemographicsPanel.IdType.HOSPITAL_NUMBER, org.patientview.radar.web.panels.generic.GenericDemographicsPanel.IdType.RENAL_REGISTRY_NUMBER, org.patientview.radar.web.panels.generic.GenericDemographicsPanel.IdType.UK_TRANSPLANT_NUMBER, org.patientview.radar.web.panels.generic.GenericDemographicsPanel.IdType.REPUBLIC_OF_IRELAND, org.patientview.radar.web.panels.generic.GenericDemographicsPanel.IdType.CHANNELS_ISLANDS, org.patientview.radar.web.panels.generic.GenericDemographicsPanel.IdType.INDIA), new org.apache.wicket.markup.html.form.ChoiceRenderer()); }else { addIdType = new org.apache.wicket.markup.html.form.DropDownChoice(\"idType\", java.util.Arrays.asList(org.patientview.radar.web.panels.generic.GenericDemographicsPanel.IdType.RENAL_REGISTRY_NUMBER, org.patientview.radar.web.panels.generic.GenericDemographicsPanel.IdType.UK_TRANSPLANT_NUMBER, org.patientview.radar.web.panels.generic.GenericDemographicsPanel.IdType.REPUBLIC_OF_IRELAND, org.patientview.radar.web.panels.generic.GenericDemographicsPanel.IdType.CHANNELS_ISLANDS, org.patientview.radar.web.panels.generic.GenericDemographicsPanel.IdType.INDIA), new org.apache.wicket.markup.html.form.ChoiceRenderer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1135/buggy-version/patientview-parent.radar.src.main.java.org.patientview.radar.web.panels.generic.GenericDemographicsPanel.java", "BodyUseAPI": [], "Fixed commit": "4e901efc1d0ef2f1875f63af5e384e88eb57913f", "Url": "https://api.github.com/repos/robworth/patientview", "Date": "2013-12-02T15:23:14Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bukkit.mcteam.factions.FPlayer.getLastDamangedBy()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (aliveEntity == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5192/buggy-version/src.com.bukkit.mcteam.factions.listeners.FBountyEntityListener.java", "BodyUseAPI": [], "Fixed commit": "548a52f75a149f3bee051b8074f315134a901f8f", "Url": "https://api.github.com/repos/JimTheMiller/Factions", "Date": "2011-04-09T10:09:29Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (configAnnotInfo == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4206/buggy-version/modules.ballerina-core.src.main.java.org.ballerinalang.services.dispatchers.http.HTTPCorsFilter.java", "BodyUseAPI": [], "Fixed commit": "c40460b5443bcb3efad8917134c1d9c6438d84ef", "Url": "https://api.github.com/repos/Bhashinee/ballerina", "Date": "2017-08-10T13:02:15Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.badlogic.ashley.core.ComponentMapper<net.net63.codearcade.LSD.systems.PlayerComponent>.get(com.badlogic.ashley.core.Entity)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((applyDeath) && (!(playerComponent.isDead))) killPlayer(entity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6525/buggy-version/core.src.net.net63.codearcade.LSD.systems.PlayerSystem.java", "BodyUseAPI": [], "Fixed commit": "b2c5320b3043de3e25eac8601784b14fbaaa4bf5", "Url": "https://api.github.com/repos/basimkhajwal/LSD", "Date": "2015-11-22T20:30:55Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((accountBean) != null) org.qii.weiciyuan.support.utils.AppLogger.d(accountBean.getUsernick()); else org.qii.weiciyuan.support.utils.AppLogger.e(\"MainTneActivity dont have account\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2828/buggy-version/src.org.qii.weiciyuan.ui.main.MainTimeLineActivity.java", "BodyUseAPI": [], "Fixed commit": "8ea153ec960b2325714d28d54b02b2e4801b7ef3", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-06T04:51:35Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contextGroup) == null) { confJarName = org.talend.repository.hadoopcluster.conf.HadoopConfsUtils.getConfsJarDefaultName(connectionItem, false); }else { confJarName = org.talend.repository.hadoopcluster.conf.HadoopConfsUtils.getConfsJarDefaultName(connectionItem, false, contextGroup); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3049/buggy-version/main.plugins.org.talend.repository.hadoopcluster.src.org.talend.repository.hadoopcluster.ui.conf.HadoopImportConfsWizard.java", "BodyUseAPI": [], "Fixed commit": "8dd53bdb86e5f1221693e1438eeb14085991b3d2", "Url": "https://api.github.com/repos/Talend/tbd-studio-se", "Date": "2017-03-08T10:22:30Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.fizteh.fivt.students.AlexeyZhuravlev.storeable.StructuredTable.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (originResult == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6720/buggy-version/src.ru.fizteh.fivt.students.AlexeyZhuravlev.parallel.Diff.java", "BodyUseAPI": [], "Fixed commit": "9d88ac3e558727469aacbad3262099ed2e5ee728", "Url": "https://api.github.com/repos/dkomanov/fizteh-java-2014", "Date": "2014-11-30T13:51:30Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["press.io.CompressedFile.inputStream()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (inputStream.markSupported()) { inputStream.reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2365/buggy-version/app.controllers.press.Press.java", "BodyUseAPI": ["java.io.InputStream.reset()"], "Fixed commit": "76a160f2e394266aaa659880365e73c104f5e2d3", "Url": "https://api.github.com/repos/dirkmc/press", "Date": "2011-05-30T16:51:52Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRequest.getDownloadState()) != (DownloadManager.STATUS_SUCCESSFUL)) { updateDownloadFailed(DownloadManager.ERROR_DOWNLOAD_CANCELLED, \"Download cancelled\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7264/buggy-version/ThinDownloadManager.src.main.java.com.thin.downloadmanager.DownloadDispatcher.java", "BodyUseAPI": [], "Fixed commit": "ae2ee5eb15e5186bdc7b9622a30270b98402485b", "Url": "https://api.github.com/repos/smanikandan14/ThinDownloadManager", "Date": "2016-11-08T06:24:22Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.noroomattheinn.visibletesla.ScheduleItem.nameToCommand(command.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(((cmd == (org.noroomattheinn.visibletesla.ScheduleItem.Command.CHARGE_ON)) || (cmd == (org.noroomattheinn.visibletesla.ScheduleItem.Command.HVAC_ON))) || (cmd == (org.noroomattheinn.visibletesla.ScheduleItem.Command.CHARGE_SET)))) targetValue = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6624/buggy-version/src.org.noroomattheinn.visibletesla.ScheduleItem.java", "BodyUseAPI": [], "Fixed commit": "0d4cc1ce71a794cb30ff96fa76b457ed7b99e3fb", "Url": "https://api.github.com/repos/jpasqua/VisibleTesla", "Date": "2014-05-26T00:15:57Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((previousZoomLevel) == null) { previousZoomLevel = gmap.getCameraPosition().zoom; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2921/buggy-version/src.dwat.ccshuttletracker.Map.java", "BodyUseAPI": [], "Fixed commit": "74eab40ba12429701be320c3b44cf933fa67b53b", "Url": "https://api.github.com/repos/davidofwatkins/ccshuttletracker", "Date": "2014-03-11T05:56:14Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.org.downesward.dirtside.DatabaseHelper.getCampaign(mItem.getCampaignId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (campaign.moveToNext()) { thisCampaign = new uk.org.downesward.dirtside.domain.Campaign(campaign); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7083/buggy-version/src.uk.org.downesward.dirtside.InfantryTeamDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "d034fc118046cf59ddac14e008860fbbd278ecec", "Url": "https://api.github.com/repos/chrisdw/Dirtside", "Date": "2013-10-14T08:04:15Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.org.downesward.dirtside.DatabaseHelper.getInfantryFirepower(mItem.getInfantryFPId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (firepowers.moveToNext()) { thisInfantryFirepower = new uk.org.downesward.dirtside.domain.InfantryFirepower(firepowers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7083/buggy-version/src.uk.org.downesward.dirtside.InfantryTeamDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "d034fc118046cf59ddac14e008860fbbd278ecec", "Url": "https://api.github.com/repos/chrisdw/Dirtside", "Date": "2013-10-14T08:04:15Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.org.downesward.dirtside.DatabaseHelper.getInfantryMovement(mItem.getInfantryMovementId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (movement.moveToNext()) { thisInfantryMovement = new uk.org.downesward.dirtside.domain.InfantryMovement(movement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7083/buggy-version/src.uk.org.downesward.dirtside.InfantryTeamDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "d034fc118046cf59ddac14e008860fbbd278ecec", "Url": "https://api.github.com/repos/chrisdw/Dirtside", "Date": "2013-10-14T08:04:15Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (subView instanceof com.sothree.multiitemrowlistadapter.MultiItemRowListAdapter.PlaceholderView) { view.removeView(subView); subView = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1974/buggy-version/src.com.sothree.multiitemrowlistadapter.MultiItemRowListAdapter.java", "BodyUseAPI": ["android.widget.LinearLayout.removeView(android.view.View)"], "Fixed commit": "0359a1c28277dace67c9673a19643f1e589702b9", "Url": "https://api.github.com/repos/umano/MultiItemRowListAdapter", "Date": "2014-03-16T17:35:16Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((c1 == 'o') || (c1 == 'O')) { switch (stmt.charAt((++offset))) { case 'A' : case 'a' : return com.actiontech.dble.server.parser.ServerParse.loadCheck(stmt, offset); case 'C' : case 'c' : return com.actiontech.dble.server.parser.ServerParse.lockCheck(stmt, offset); default : return com.actiontech.dble.server.parser.ServerParse.OTHER; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5727/buggy-version/src.main.java.com.actiontech.dble.server.parser.ServerParse.java", "BodyUseAPI": [], "Fixed commit": "fb69e84c7e8350c8bd33b26462d34f19202b09bc", "Url": "https://api.github.com/repos/actiontech/dble", "Date": "2017-12-04T06:14:04Z"},
{"Line": "=>1516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((path.size()) > (com.orientechnologies.orient.core.index.sbtree.local.OSBTree.MAX_PATH_LENGTH)) throw new com.orientechnologies.orient.core.index.sbtree.local.OSBTreeException(\"We reached max level of depth of SBTree but still found nothing, seems like tree is in corrupted state. You should rebuild index related to given query.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7489/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.sbtree.local.OSBTree.java", "BodyUseAPI": [], "Fixed commit": "daeb8e71cbd08edd69693f081af522235649303a", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-12-11T18:09:23Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xcolab.service.admin.domain.emailtemplate.EmailTemplateDao.getEmailTemplate(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (emailTemplate == null) { throw new org.xcolab.service.admin.exceptions.NotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6832/buggy-version/microservices.services.admin-service.src.main.java.org.xcolab.service.admin.web.EmailTemplateController.java", "BodyUseAPI": [], "Fixed commit": "0879d0ab1ab6fc101b8d5ec9c16eb41eba7b8cd2", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2016-05-30T23:18:40Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cyprias.AdminNotes.database.MySQL.getResultCount(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rows == 0) return notes;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1147/buggy-version/src.com.cyprias.AdminNotes.database.MySQL.java", "BodyUseAPI": [], "Fixed commit": "4564d99e1d93c88001bac6949cd786bf46de7e65", "Url": "https://api.github.com/repos/Cyprias/AdminNotes", "Date": "2013-01-10T16:04:58Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cyprias.AdminNotes.database.SQLite.getResultCount(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rows == 0) return notes;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1147/buggy-version/src.com.cyprias.AdminNotes.database.SQLite.java", "BodyUseAPI": [], "Fixed commit": "4564d99e1d93c88001bac6949cd786bf46de7e65", "Url": "https://api.github.com/repos/Cyprias/AdminNotes", "Date": "2013-01-10T16:04:58Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lucas.garandel.listedecourses.AjoutMagasin.getIntent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((intent.getIntExtra(\"requestCode\", 0)) == (Magasins.REQUEST_CODE_EDIT)) { java.lang.String transmittedValue = intent.getStringExtra(Magasins.OLD_NOM_MAGASIN); if (!(transmittedValue.isEmpty())) { name.setText(transmittedValue); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5374/buggy-version/app.src.main.java.lucas.garandel.listedecourses.AjoutMagasin.java", "BodyUseAPI": ["android.content.Intent.getStringExtra(Magasins.OLD_NOM_MAGASIN)"], "Fixed commit": "c9e338d5eb50b3c553e2a154ed68e46f9b295457", "Url": "https://api.github.com/repos/b2s-clement/liste-de-courses", "Date": "2017-02-08T08:30:22Z"},
{"Line": "=>2003", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.idega.util.ListUtil.isEmpty(procInstIds)) procInstIds = new java.util.ArrayList<java.lang.Long>(results.keySet()); else { procInstIds.retainAll(results.keySet()); if (com.idega.util.ListUtil.isEmpty(procInstIds)) return java.util.Collections.emptyMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6611/buggy-version/src.java.com.idega.jbpm.data.impl.VariableInstanceQuerierImpl.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.retainAll(results.keySet())", "com.idega.util.ListUtil.isEmpty(java.util.List<java.lang.Long>)"], "Fixed commit": "08584511dce3cd82dc0a44e08b7114673cc164a3", "Url": "https://api.github.com/repos/idega/org.jboss.jbpm", "Date": "2012-04-11T12:15:55Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (column != null) values.add(column.getId()); else throw new javax.ws.rs.BadRequestException(((((\"wrong configuration for values parameters: the \" + columnID) + \" id for the dataset \") + (sourceDataset.getRID())) + \" does not exist\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8062/buggy-version/fenix-D3P-core.src.main.java.org.fao.fenix.d3p.process.impl.join.logic.ManualJoin.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(column.getId())", "org.fao.fenix.commons.msd.dto.full.DSDColumn.getId()"], "Fixed commit": "17149d0cfde00e4e0917bd9ab2731c7be99bc878", "Url": "https://api.github.com/repos/FENIX-Platform/fenix-d3p", "Date": "2016-05-25T14:38:49Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.wildfly.security.manager.WildFlySecurityManager.isChecking()) { org.wildfly.security.manager.WildFlySecurityManager.doUnchecked(new java.security.PrivilegedAction<java.lang.Object>() { @java.lang.Override public java.lang.Object run() { persistTimer(TimerImpl, false); return null; } }); }else { persistTimer(TimerImpl, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3693/buggy-version/ejb3.src.main.java.org.jboss.as.ejb3.timerservice.persistence.filestore.FileTimerPersistence.java", "BodyUseAPI": [], "Fixed commit": "f13244d812dec9724e8a38293245ba1a802e3310", "Url": "https://api.github.com/repos/sguilhen/wildfly", "Date": "2014-06-06T12:18:16Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.wildfly.security.manager.WildFlySecurityManager.isChecking()) { org.wildfly.security.manager.WildFlySecurityManager.doUnchecked(new java.security.PrivilegedAction<java.lang.Object>() { @java.lang.Override public java.lang.Object run() { persistTimer(TimerImpl, true); return null; } }); }else { persistTimer(TimerImpl, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3693/buggy-version/ejb3.src.main.java.org.jboss.as.ejb3.timerservice.persistence.filestore.FileTimerPersistence.java", "BodyUseAPI": [], "Fixed commit": "f13244d812dec9724e8a38293245ba1a802e3310", "Url": "https://api.github.com/repos/sguilhen/wildfly", "Date": "2014-06-06T12:18:16Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.lecogiteur.csvbang.parser.FieldGrammarAction.execute()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (c != null) { s.append(conf.delimiter).append(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4251/buggy-version/src.main.java.com.github.lecogiteur.csvbang.parser.RecordGrammarAction.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "53c9aeac5499ab6fea5a2367ef5e6f646dd189ce", "Url": "https://api.github.com/repos/lecogiteur/csvbang", "Date": "2015-03-11T15:10:19Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["engine.classes.getByTemplate(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null == tc) { tc = new com.greenlaw110.rythm.internal.compiler.TemplateClass(tr, engine); }else if (tc.equals(templateClass)) { return templateClass; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8178/buggy-version/src.com.greenlaw110.rythm.play.VirtualFileTemplateResourceLoader.java", "BodyUseAPI": ["com.greenlaw110.rythm.internal.compiler.TemplateClass.equals(com.greenlaw110.rythm.internal.compiler.TemplateClass)"], "Fixed commit": "608629e7aaf77f2c68206aec21ac56fec98fd0ec", "Url": "https://api.github.com/repos/greenlaw110/play-rythm", "Date": "2012-04-30T04:37:04Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.bombCount) > 0) { g.setColor(java.awt.Color.white); g.drawString(\"Bombs\", (500 - moveFactor), 475); g.drawString(java.lang.String.valueOf(player.bombCount), (575 - moveFactor), 475); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/147/buggy-version/src.main.java.com.negafinity.ironhawk.Game.java", "BodyUseAPI": ["java.lang.String.valueOf(player.bombCount)", "java.awt.Graphics.drawString(java.lang.String,int,int)"], "Fixed commit": "c1db187c33373c6ef8e300785fd3fbefe0ed25a7", "Url": "https://api.github.com/repos/InfraredPanda/IronHawk", "Date": "2015-11-19T02:13:35Z"},
{"Line": "=>647", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.twojeremys.awesometower.Constants.DEBUG) c.setTable(new com.badlogic.gdx.scenes.scene2d.ui.Table().pad(Constants.TABLE_PAD).debug()); else c.setTable(new com.badlogic.gdx.scenes.scene2d.ui.Table().pad(Constants.TABLE_PAD));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6281/buggy-version/core.src.com.twojeremys.awesometower.screen.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "5f59634629af0031cf63347f9504e6cc87aba3c8", "Url": "https://api.github.com/repos/kaltinril/AwesomeTower", "Date": "2015-03-15T23:34:03Z"},
{"Line": "=>639", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.twojeremys.awesometower.Constants.DEBUG) backgroundTable.debug();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6281/buggy-version/core.src.com.twojeremys.awesometower.screen.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "5f59634629af0031cf63347f9504e6cc87aba3c8", "Url": "https://api.github.com/repos/kaltinril/AwesomeTower", "Date": "2015-03-15T23:34:03Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.edu.tsinghua.cess.modelfile.dto.ModelNodeRelation.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (containedModels.contains(model)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8899/buggy-version/datamanager-core.src.main.java.cn.edu.tsinghua.cess.task.service.impl.WorkerNodeSubmitionServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "84dd67de456cedd35ebf522d4ca7caba228b214e", "Url": "https://api.github.com/repos/kurtyan/CAFE_NODE", "Date": "2016-10-22T08:40:10Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.eclipse.jubula.client.core.businessprocess.db.NodeBP.isEditable(specNode)) { org.eclipse.ui.IEditorPart openEditor = org.eclipse.jubula.client.ui.rcp.handlers.open.AbstractOpenHandler.openEditor(specNode); if (openEditor instanceof org.eclipse.jubula.client.ui.rcp.editors.AbstractJBEditor) { org.eclipse.jubula.client.ui.rcp.editors.AbstractJBEditor jbEditor = ((org.eclipse.jubula.client.ui.rcp.editors.AbstractJBEditor) (openEditor)); jbEditor.setSelection(new org.eclipse.jface.viewers.StructuredSelection(node)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3807/buggy-version/org.eclipse.jubula.client.ui.rcp.src.org.eclipse.jubula.client.ui.rcp.search.result.BasicSearchResult.java", "BodyUseAPI": ["org.eclipse.jubula.client.ui.rcp.handlers.open.AbstractOpenHandler.openEditor(org.eclipse.jubula.client.core.model.INodePO)"], "Fixed commit": "edfd7b9247a65f4d7b6efcc3d70b6ec4bc67ed5e", "Url": "https://api.github.com/repos/eclipse/jubula.core", "Date": "2015-04-10T07:59:37Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mLocation) != null) && ((location.getAccuracy()) < 10)) { mLocation = location; android.util.Log.d(\"ASDF\", \"Better location registered\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7387/buggy-version/android.VehicleTracking.app.src.main.java.net.creuroja.android.vehicletracking.PositionUpdaterService.java", "BodyUseAPI": [], "Fixed commit": "512de15439c6e2bdff097518c1a2a82af8142e71", "Url": "https://api.github.com/repos/darthsuicune/CreuRoja", "Date": "2014-09-11T13:46:04Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getMyApplication().getFavorites().getFavouritePoints().size()) > 0) { getLocationProvider().addCompassListener(this); getLocationProvider().registerOrUnregisterCompassListener(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7781/buggy-version/OsmAnd.src.net.osmand.plus.activities.MainMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "7bb6a7c1f525a2c38bbdf7c73031e878471f7043", "Url": "https://api.github.com/repos/Bars107/Osmand", "Date": "2014-12-24T13:44:53Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index == 1) { addNode(document, attributes, new org.primeframework.transformer.domain.TextNode(document, nodes.peek(), (index - 1), index), nodes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7776/buggy-version/src.main.java.org.primeframework.transformer.service.BBCodeParser.java", "BodyUseAPI": ["org.primeframework.transformer.service.BBCodeParser.addNode(org.primeframework.transformer.domain.Document,java.util.Map<java.lang.String, org.primeframework.transformer.domain.TagAttributes>,org.primeframework.transformer.domain.TextNode,java.util.Deque<org.primeframework.transformer.domain.TagNode>)"], "Fixed commit": "1fc1bedcaaf1a05cef995c887d791ed6d9238718", "Url": "https://api.github.com/repos/inversoft/prime-transformer", "Date": "2016-07-04T20:41:57Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<ac.soton.eventb.atomicitydecomposition.Child>.indexOf(ac.soton.eventb.atomicitydecomposition.Child)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ch instanceof ac.soton.eventb.atomicitydecomposition.Leaf) && (i > 0)) java.lang.System.out.println((((((((((ac.soton.eventb.atomicitydecomposition.Leaf) (ch)).getName()) + \" \") + i) + \" \") + (sibiling.get((i - 1)))) + \" \") + sw));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3288/buggy-version/ac.soton.eventb.atomicitydecomposition.generator.src.ac.soton.eventb.atomicitydecomposition.generator.utils.Utils.java", "BodyUseAPI": ["java.io.PrintStream.println((((((((((ac.soton.eventb.atomicitydecomposition.Leaf) (ch)).getName()) + \" \") + i) + \" \") + (sibiling.get((i - 1)))) + \" \") + sw))", "java.util.List<ac.soton.eventb.atomicitydecomposition.Child>.get(int)"], "Fixed commit": "881db593f8dd9d878a52c5b921e1eedda4f49cb7", "Url": "https://api.github.com/repos/mgt1g13/ERS-Java-Generator", "Date": "2014-07-21T09:16:01Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ch instanceof ac.soton.eventb.atomicitydecomposition.Leaf) java.lang.System.out.println(((((ac.soton.eventb.atomicitydecomposition.Leaf) (ch)).getName()) + \"Even though I shouldn't, I am here\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3288/buggy-version/ac.soton.eventb.atomicitydecomposition.generator.src.ac.soton.eventb.atomicitydecomposition.generator.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "881db593f8dd9d878a52c5b921e1eedda4f49cb7", "Url": "https://api.github.com/repos/mgt1g13/ERS-Java-Generator", "Date": "2014-07-21T09:16:01Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msg.what) == 0) { if ((adBeans.size()) == 2) { viewPager.setCurrentItem(((viewPager.getCurrentItem()) == 0 ? 1 : 0)); }else { viewPager.setCurrentItem(((viewPager.getCurrentItem()) + 1)); } if (isRunning) { handler.sendEmptyMessageDelayed(0, delayedTimer); } }else if ((msg.what) == (com.jasonzhang.library.view.AdView.MOVE_TO_FIRST)) { viewPager.setCurrentItem(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3803/buggy-version/library.src.main.java.com.jasonzhang.library.view.AdView.java", "BodyUseAPI": [], "Fixed commit": "80cfa723238f7d7ab572af3dc3483fc5db0cad0c", "Url": "https://api.github.com/repos/aii1991/AdView", "Date": "2016-06-23T08:40:52Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMenuStatesArray) != null) { mMenuStatesArray.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8202/buggy-version/library.src.main.java.cc.easyandroid.listfiltermenu.widget.EasyFilterMenuMulti.java", "BodyUseAPI": [], "Fixed commit": "161eb4f8bfe22f81964b3d96b48f9826fcd2ba3a", "Url": "https://api.github.com/repos/cgpllx/ListFilterMenu", "Date": "2016-06-06T06:31:44Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newTotal > 0) { state.setAvg95(((((state.getCount()) * (state.getAvg95())) + ((type.getTotalCount()) * (type.getLine95Value()))) / newTotal)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1716/buggy-version/cat-home.src.main.java.com.dianping.cat.report.task.utilization.TransactionReportVisitor.java", "BodyUseAPI": ["com.dianping.cat.home.utilization.entity.ApplicationState.setAvg95(((((state.getCount()) * (state.getAvg95())) + ((type.getTotalCount()) * (type.getLine95Value()))) / newTotal))"], "Fixed commit": "2534f50d5275b3f39b2ed6ba7a8bbd001034d193", "Url": "https://api.github.com/repos/dianping/cat", "Date": "2014-01-02T13:04:37Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CPUCore.assignedProcess()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (previouslyAssignedPCB == null) { if ((readyQueue.isEmpty()) != true) { ProcessControlBlock nextProcess = readyQueue.get(0); if (nextProcess != null) { aCore.assignProcess(nextProcess); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4508/buggy-version/src.DumbScheduler.java", "BodyUseAPI": [], "Fixed commit": "79908950737d41b5dbd93e057ce160ca94dc75a7", "Url": "https://api.github.com/repos/chinbv/CMSC312.OperatingSystems", "Date": "2017-12-01T02:09:19Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4785/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "41307ed281de8a88ed0b720d6dea8f60849210c0", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type.equals(\"Notification\")) { com.aapkashahar.helloavi.newsapp.config.ShareData.KEY_SCROLLINGACTIVITY_SWITCH = type; resultIntent = new android.content.Intent(getApplicationContext(), com.aapkashahar.helloavi.newsapp.ScrollingActivity.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3360/buggy-version/app.src.main.java.com.aapkashahar.helloavi.newsapp.service.MyFirebaseMessagingService.java", "BodyUseAPI": [], "Fixed commit": "a6216ba616772e6d205e16fb3df28f8145270ed5", "Url": "https://api.github.com/repos/avadheshsingh/NewsApp", "Date": "2017-02-12T04:48:25Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isCenterVertical())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/456/buggy-version/uiview.src.main.java.com.angcyo.uiview.widget.ExEditText.java", "BodyUseAPI": [], "Fixed commit": "5b19f7fa9bb5598075fb3e302eaf1229091dc9d1", "Url": "https://api.github.com/repos/angcyo/RLibrary", "Date": "2017-08-11T09:15:32Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.equals(Build.MODEL, \"SCH-I545\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/456/buggy-version/uiview.src.main.java.com.angcyo.uiview.widget.ExEditText.java", "BodyUseAPI": [], "Fixed commit": "5b19f7fa9bb5598075fb3e302eaf1229091dc9d1", "Url": "https://api.github.com/repos/angcyo/RLibrary", "Date": "2017-08-11T09:15:32Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(text)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/456/buggy-version/uiview.src.main.java.com.angcyo.uiview.widget.ExEditText.java", "BodyUseAPI": [], "Fixed commit": "5b19f7fa9bb5598075fb3e302eaf1229091dc9d1", "Url": "https://api.github.com/repos/angcyo/RLibrary", "Date": "2017-08-11T09:15:32Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mInputTipTextList.isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/456/buggy-version/uiview.src.main.java.com.angcyo.uiview.widget.ExEditText.java", "BodyUseAPI": [], "Fixed commit": "5b19f7fa9bb5598075fb3e302eaf1229091dc9d1", "Url": "https://api.github.com/repos/angcyo/RLibrary", "Date": "2017-08-11T09:15:32Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.github.ucchyocean.chatbot.Utility.isCB19orLater()) { reader = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), \"UTF-8\")); }else { reader = new java.io.BufferedReader(new java.io.FileReader(file)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4214/buggy-version/src.main.java.com.github.ucchyocean.chatbot.Utility.java", "BodyUseAPI": [], "Fixed commit": "c85bd3488085de2d4cb0c4717aa9fdb54af2f062", "Url": "https://api.github.com/repos/ucchyocean/MintChatBot", "Date": "2016-03-16T10:46:42Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)", "javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((photoItem == null) && ((contact.getPhotoPath()) == null)) { contact.setPhotoPath(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1201/buggy-version/ContactWeb.src.main.java.com.zhartunmatthew.web.contactbook.command.executablecommands.UpdateContactCommand.java", "BodyUseAPI": ["com.zhartunmatthew.web.contactbook.entity.Contact.setPhotoPath(<nulltype>)"], "Fixed commit": "4d81ee857f8012c674da1e68d4889d04d25f8da2", "Url": "https://api.github.com/repos/ZhartunMatthew/ContactBook", "Date": "2017-03-26T14:43:11Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (in.readBoolean()) { xAxisUnits = in.readDouble(); }else { xAxisUnits = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2838/buggy-version/src.main.java.org.elasticsearch.search.aggregations.reducers.derivative.DerivativeReducer.java", "BodyUseAPI": ["org.elasticsearch.common.io.stream.StreamInput.readDouble()"], "Fixed commit": "c3558fbbb3d5748cdff5212f1ad49020d8c99810", "Url": "https://api.github.com/repos/colings86/elasticsearch", "Date": "2015-04-30T13:06:33Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasXAxisUnitsValue) { out.writeDouble(xAxisUnits); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2838/buggy-version/src.main.java.org.elasticsearch.search.aggregations.reducers.derivative.DerivativeReducer.java", "BodyUseAPI": [], "Fixed commit": "c3558fbbb3d5748cdff5212f1ad49020d8c99810", "Url": "https://api.github.com/repos/colings86/elasticsearch", "Date": "2015-04-30T13:06:33Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.fau.osr.gui.Components.PathDEsJTree.getLastSelectedPathComponent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (element == null) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2857/buggy-version/amos-ss15-proj3-gui.src.main.java.de.fau.osr.gui.View.ElementHandler.PathDE_ElementHandler.java", "BodyUseAPI": [], "Fixed commit": "5eb50370e433715b8eb883e70cdc98c0638abca9", "Url": "https://api.github.com/repos/AMOSTeam3/amos-ss15-proj3", "Date": "2015-07-07T20:21:33Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getSelection(new de.fau.osr.gui.Controller.Visitor_Swing()).isEmpty())) { action.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2857/buggy-version/amos-ss15-proj3-gui.src.main.java.de.fau.osr.gui.View.ElementHandler.PathDE_ElementHandler.java", "BodyUseAPI": [], "Fixed commit": "5eb50370e433715b8eb883e70cdc98c0638abca9", "Url": "https://api.github.com/repos/AMOSTeam3/amos-ss15-proj3", "Date": "2015-07-07T20:21:33Z"},
{"Line": "=>1039", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (pNode == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6427/buggy-version/Aletheia.GUI.src.aletheia.gui.contextjtree.ContextJTreeModel.java", "BodyUseAPI": [], "Fixed commit": "09a74d36dd97e8747be0be5c067f84ad1195beaa", "Url": "https://api.github.com/repos/quimtestar/Aletheia", "Date": "2015-07-09T10:50:53Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((storeData) != null) { removeAllViews(); storeData.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6356/buggy-version/indicatorsteplib.src.main.java.com.cheekiat.indicatorsteplib.StepProgress.java", "BodyUseAPI": [], "Fixed commit": "70837b5e8e5e420112ef66658063b1b7944944b7", "Url": "https://api.github.com/repos/cheekiat/IndicatorsStep", "Date": "2017-09-25T17:40:41Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.spilgames.spilsdk.web.WebViewActivity.getActivity()) != null) { com.spilgames.spilsdk.web.WebViewActivity.getActivity().finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8619/buggy-version/spilsdk.src.main.java.com.spilgames.spilsdk.userdata.UserDataManager.java", "BodyUseAPI": [], "Fixed commit": "11c09838e722d9f0730450326519bcfd6ae2540f", "Url": "https://api.github.com/repos/spilgames/spil-android-sdk", "Date": "2017-11-08T16:07:31Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["document.tokenList.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(tokenIter.hasNext())) { java.lang.System.err.println((\"Skipping paragraph annotation empty document: \" + (document.docId))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8004/buggy-version/src.main.java.ims.cs.parc.ParcUtils.java", "BodyUseAPI": [], "Fixed commit": "019d1c7eb5a60850e39dd730d6573ddc9197da9a", "Url": "https://api.github.com/repos/christianscheible/qsample", "Date": "2016-11-28T07:56:19Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.xpath.XPathExpression.evaluate(org.w3c.dom.Document,javax.xml.namespace.QName)", "javax.xml.xpath.XPathExpression.evaluate(org.w3c.dom.Document,javax.xml.namespace.QName)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nl.surfnet.sab.SabResponseParser.SAMLP_RESPONDER.equals(statusCode)) && (statusMessage.startsWith(nl.surfnet.sab.SabResponseParser.NOT_FOUND_MESSAGE_PREFIX))) { nl.surfnet.sab.SabResponseParser.LOG.debug(\"Given nameId not found in SAB. Is regarded by us as 'valid' response, although server response indicates a server error.\"); return; }else { throw new java.io.IOException((((\"Unsuccessful status. Code: '\" + statusCode) + \"', message: \") + statusMessage)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2171/buggy-version/sab-client.src.main.java.nl.surfnet.sab.SabResponseParser.java", "BodyUseAPI": [], "Fixed commit": "4959141d7cd2ac835fa588b27915f51a8affbd4b", "Url": "https://api.github.com/repos/OpenConext/OpenConext-selfservice", "Date": "2013-06-17T13:08:53Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPooled) { org.elasticsearch.index.mapper.attachment.AttachmentMapper.sbPool.returnObject(contentData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6998/buggy-version/src.main.java.org.elasticsearch.index.mapper.attachment.AttachmentMapper.java", "BodyUseAPI": [], "Fixed commit": "72fffcf113143250c7a239133089ae598f462a3c", "Url": "https://api.github.com/repos/Keyintegrity/elasticsearch-mapper-attachments", "Date": "2014-06-26T07:15:35Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.Object>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (sourceElement != null) { org.modelmapper.spi.MappingContext<?, ?> elementContext = context.create(sourceElement, elementType); element = context.getMappingEngine().map(elementContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9029/buggy-version/core.src.main.java.org.modelmapper.internal.converter.IterableConverter.java", "BodyUseAPI": ["org.modelmapper.spi.MappingContext<S, D>.create(java.lang.Object,java.lang.Class<?>)"], "Fixed commit": "9e30ba1832b3728e75fa32c01a550fa0fe752f1e", "Url": "https://api.github.com/repos/jhalterman/modelmapper", "Date": "2013-07-26T00:01:36Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) != null) { org.modelmapper.spi.MappingContext<?, ?> valueContext = context.create(entry.getValue(), valueElementType); value = context.getMappingEngine().map(valueContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9029/buggy-version/core.src.main.java.org.modelmapper.internal.converter.MapConverter.java", "BodyUseAPI": ["java.util.Map.Entry<?, ?>.getValue()", "org.modelmapper.spi.MappingContext<java.util.Map<?, ?>, java.util.Map<java.lang.Object, java.lang.Object>>.create(entry.getValue(),java.lang.Class<?>)"], "Fixed commit": "9e30ba1832b3728e75fa32c01a550fa0fe752f1e", "Url": "https://api.github.com/repos/jhalterman/modelmapper", "Date": "2013-07-26T00:01:36Z"},
{"Line": "=>651", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nodeId == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5318/buggy-version/sources.appsgate-project.appsgate-EUDE.EUDEInterpreter.src.main.java.appsgate.lig.eude.interpreter.langage.nodes.NodeProgram.java", "BodyUseAPI": [], "Fixed commit": "9b3200f7ed10946bd8b543f660306265c16fc4da", "Url": "https://api.github.com/repos/appsgate2015/appsgate", "Date": "2014-09-10T11:03:03Z"},
{"Line": "=>633", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nodeId == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5318/buggy-version/sources.appsgate-project.appsgate-EUDE.EUDEInterpreter.src.main.java.appsgate.lig.eude.interpreter.langage.nodes.NodeProgram.java", "BodyUseAPI": [], "Fixed commit": "9b3200f7ed10946bd8b543f660306265c16fc4da", "Url": "https://api.github.com/repos/appsgate2015/appsgate", "Date": "2014-09-10T11:03:03Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["FlowAnalysis.getNodeForTree(com.sun.source.tree.Tree)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (node == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9068/buggy-version/framework.src.org.checkerframework.framework.type.GenericAnnotatedTypeFactory.java", "BodyUseAPI": [], "Fixed commit": "2429c72388ac9acf0fd49193b5e24468aa6ab2f5", "Url": "https://api.github.com/repos/typetools/checker-framework", "Date": "2015-12-29T10:42:48Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.text.style.URLSpan.getURL()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (url.endsWith(\"/\")) { url = url.substring(0, ((url.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4240/buggy-version/app.src.main.java.me.ccrama.redditslide.SpoilerRobotoTextView.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "88d60c8a7a057514102ced9d81874283dcdf2159", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-08-30T16:40:00Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)", "Codo.Controller.Reminder.User.getIdByToken(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (Codo.Controller.Reminder.Reminder.subscribeDelete(reminderId, userId)) { writer.write(Codo.Util.Json.getGson().toJson(new Codo.Model.Response.Response(CONSTANT.STATE.OK, \"ok.\"))); }else { writer.write(Codo.Util.Json.getGson().toJson(new Codo.Model.Response.Response(CONSTANT.STATE.PERMISSION_DENY, \"permission deny.\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1988/buggy-version/src.Codo.Controller.Reminder.ReminderController.java", "BodyUseAPI": [], "Fixed commit": "f70e72918aea2e0643bc5e1fb9394b0222409e44", "Url": "https://api.github.com/repos/ZERR2AC/Codo-API", "Date": "2016-11-29T18:55:30Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((threadhandle.ExecutorHandler.toDo.size()) == 1) { threadhandle.ExecutorHandler.dlQueue.addURL(threadhandle.ExecutorHandler.toDo.get(0)); }else { for (java.lang.String seed : threadhandle.ExecutorHandler.toDo) { for (java.lang.String dupCheck : threadhandle.ExecutorHandler.toDo) { if (!(seed.equalsIgnoreCase(dupCheck))) { threadhandle.ExecutorHandler.dlQueue.addURL(seed); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1170/buggy-version/src.threadhandle.ExecutorHandler.java", "BodyUseAPI": ["threadhandle.URLQueue.addURL(java.lang.String)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "f1daeb8497ae1c98064e3eff84cef2f2abb16163", "Url": "https://api.github.com/repos/Zenious/WebCrawler", "Date": "2014-07-31T06:12:55Z"},
{"Line": "=>689", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.eucalyptus.cloudformation.GetTemplateSummaryType.getTemplateURL()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (templateUrl != null) numNonNullParamsInTemplateBodyTemplateURLAndStackName++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7405/buggy-version/clc.modules.cloudformation.src.main.java.com.eucalyptus.cloudformation.CloudFormationService.java", "BodyUseAPI": [], "Fixed commit": "764b42c59ba533a9becba28bf5b0b50d9484e928", "Url": "https://api.github.com/repos/eucalyptus/eucalyptus", "Date": "2015-07-27T21:15:10Z"},
{"Line": "=>688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.eucalyptus.cloudformation.GetTemplateSummaryType.getTemplateBody()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (templateBody != null) numNonNullParamsInTemplateBodyTemplateURLAndStackName++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7405/buggy-version/clc.modules.cloudformation.src.main.java.com.eucalyptus.cloudformation.CloudFormationService.java", "BodyUseAPI": [], "Fixed commit": "764b42c59ba533a9becba28bf5b0b50d9484e928", "Url": "https://api.github.com/repos/eucalyptus/eucalyptus", "Date": "2015-07-27T21:15:10Z"},
{"Line": "=>690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.eucalyptus.cloudformation.GetTemplateSummaryType.getStackName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (stackName != null) numNonNullParamsInTemplateBodyTemplateURLAndStackName++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7405/buggy-version/clc.modules.cloudformation.src.main.java.com.eucalyptus.cloudformation.CloudFormationService.java", "BodyUseAPI": [], "Fixed commit": "764b42c59ba533a9becba28bf5b0b50d9484e928", "Url": "https://api.github.com/repos/eucalyptus/eucalyptus", "Date": "2015-07-27T21:15:10Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x > 0) && (x < 10)) { java.lang.System.out.println(\"x is positive single digit.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7400/buggy-version/chapt6.Countdown.java", "BodyUseAPI": [], "Fixed commit": "11210cecf5632630e6bbfb0c32125e14797cbe91", "Url": "https://api.github.com/repos/marcusmyers/MobileAppDev", "Date": "2013-11-06T01:14:45Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (damager != null) srcarea = com.bekvon.bukkit.residence.Residence.getResidenceManger().getByLoc(damager.getLocation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4894/buggy-version/src.com.bekvon.bukkit.residence.listeners.ResidenceEntityListener.java", "BodyUseAPI": ["com.bekvon.bukkit.residence.Residence.getResidenceManger().getByLoc(damager.getLocation())", "org.bukkit.entity.Entity.getLocation()"], "Fixed commit": "726683d95eaf8c730dbd0cc49449295970296964", "Url": "https://api.github.com/repos/bekvon/Residence", "Date": "2011-07-20T05:12:24Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.Game.getPermanent(source.getSourceId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (enchantment == null) { enchantment = ((mage.game.permanent.Permanent) (game.getLastKnownInformation(source.getSourceId(), Zone.BATTLEFIELD))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8669/buggy-version/Mage.src.mage.abilities.effects.common.counter.AddPlusOneCountersAttachedEffect.java", "BodyUseAPI": [], "Fixed commit": "bc7ffd120145a0eb6f1c8c129b68ef7895179574", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-03-15T14:57:06Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mvnsearch.intellij.plugin.zookeeper.ui.ZkTreeModel.getChildren(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (i < (children.size())) { return children.get(i); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3768/buggy-version/src.main.java.org.mvnsearch.intellij.plugin.zookeeper.ui.ZkTreeModel.java", "BodyUseAPI": ["java.util.List<org.mvnsearch.intellij.plugin.zookeeper.ui.ZkNode>.get(int)"], "Fixed commit": "a0161ccf476e146af3f1c75fc6941b74594732c9", "Url": "https://api.github.com/repos/linux-china/zookeeper-intellij", "Date": "2014-01-16T05:15:37Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (client.isConnected()) { client.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6718/buggy-version/src.main.java.lmo.tcp.bridge.client.BridgeClientForm.java", "BodyUseAPI": ["lmo.tcp.bridge.client.BridgeClient.start()"], "Fixed commit": "52e2cb7735e98519762c706cde4494a5e9e59305", "Url": "https://api.github.com/repos/lmo0731/tcp-bridge", "Date": "2016-05-19T11:36:57Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (accessor == null) { return getGovernorMethod(org.springframework.roo.classpath.details.BeanInfoUtils.getAccessorMethodName(field)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5197/buggy-version/runtime.classpath.src.main.java.org.springframework.roo.classpath.itd.AbstractItdTypeDetailsProvidingMetadataItem.java", "BodyUseAPI": [], "Fixed commit": "b918daffaf568767230c4415e8890c0e03c423f7", "Url": "https://api.github.com/repos/spring-projects/spring-roo", "Date": "2017-01-24T11:34:35Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((atomChainRemoved.size()) > 0) { compositionTxt.setText((((atomChainAdded.toString()) + \" - \") + (atomChainRemoved.toString()))); }else { compositionTxt.setText(atomChainAdded.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5570/buggy-version/src.main.java.com.compomics.util.gui.atoms.AtomChainDialog.java", "BodyUseAPI": ["com.compomics.util.experiment.biology.AtomChain.toString()", "javax.swing.JTextField.setText((((atomChainAdded.toString()) + \" - \") + (atomChainRemoved.toString())))"], "Fixed commit": "b92e2a961c2dd956297fc4bb32101f23b0b8cb5a", "Url": "https://api.github.com/repos/compomics/compomics-utilities", "Date": "2016-11-13T21:35:17Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clusterName) != null) vertex.save(clusterName); else vertex.save();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6117/buggy-version/graphdb.src.main.java.com.orientechnologies.orient.graph.sql.OCommandExecutorSQLCreateVertex.java", "BodyUseAPI": [], "Fixed commit": "e39c0d9c01c248025df0d5aba49bd2237590647c", "Url": "https://api.github.com/repos/fabriziofortino/orientdb", "Date": "2013-05-04T16:10:26Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(beingUnhacked)) { sprite = new pitzik4.ageOfTheInternet.graphics.Sprite(38, x, y, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7365/buggy-version/src.pitzik4.ageOfTheInternet.tiles.CorporationTile.java", "BodyUseAPI": [], "Fixed commit": "799cabd9600a61e9ff45b2f525c8712b8c6338c0", "Url": "https://api.github.com/repos/Pitzik4/Age-of-the-Internet", "Date": "2012-03-18T21:34:54Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(dest.getParentFile().exists())) && (!(dest.getParentFile().mkdirs()))) { javax.swing.JOptionPane.showMessageDialog(null, ((\"There was a error creating download folder for \" + (url)) + \", skipping download\"), \"Error\", javax.swing.JOptionPane.WARNING_MESSAGE); siteActive = false; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5744/buggy-version/src.main.java.cpw.mods.fml.installer.DownloadFile.java", "BodyUseAPI": [], "Fixed commit": "a83c1a20d9aa9a383cbd3f5a56c44f6482ef3fec", "Url": "https://api.github.com/repos/CodingBadgers/Installer", "Date": "2013-08-09T19:11:05Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((shape.getName()) == null) name = \"\"; else name = ((shape.getName().length()) == 0) ? \"non-editpart\" : shape.getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1110/buggy-version/de.tud.cs.st.vespucci.diagram.src.de.tud.cs.st.vespucci.diagram.converter.DiagramConverter.java", "BodyUseAPI": ["de.tud.cs.st.vespucci.vespucci_model.Shape.getName()", "shape.getName().length()", "de.tud.cs.st.vespucci.vespucci_model.Shape.getName()"], "Fixed commit": "9a8d121a4eebabbd2c16727681c9fc75ec7de8bc", "Url": "https://api.github.com/repos/mitschke/vespucci", "Date": "2011-03-23T14:26:39Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["partial.code.grapa.delta.graph.data.Connector.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((mark > 0) && (mark < ((label.length()) - 1))) { label = label.substring((mark + 1)); mark = label.indexOf(\" \"); if (mark > 0) { label = label.substring(0, mark); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3702/buggy-version/src.partial.code.grapa.delta.graph.data.Connector.java", "BodyUseAPI": ["partial.code.grapa.delta.graph.data.Connector.substring(int)"], "Fixed commit": "ad4bc14fa766391a60421d371ff2acc7ca9755cf", "Url": "https://api.github.com/repos/drzhonghao/grapa", "Date": "2015-12-02T00:57:51Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(loginActive)) { startActivity(in); loginActive = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6112/buggy-version/SnapPollAndroidClient.app.src.main.java.dev.jinkim.snappollandroid.ui.activity.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "9b2ddab50623329dc4bd16ddcfd6a1710610a186", "Url": "https://api.github.com/repos/jinkim608/SnapPoll", "Date": "2015-01-30T20:26:27Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((timestamp != null) && ((timestamp.length()) > 0)) { com.avaje.ebean.ExpressionList<models.Instance> ll = find.where().eq(Const.FIELD_TIMESTAMP, timestamp); list = ll.findList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4053/buggy-version/app.models.Instance.java", "BodyUseAPI": ["find.where().eq(Const.FIELD_TIMESTAMP,java.lang.String)"], "Fixed commit": "fa37bb655d6fdb8cb32a1fef92cb2dd8ebb9dcba", "Url": "https://api.github.com/repos/ukwa/w3act", "Date": "2014-03-19T12:14:56Z"},
{"Line": "=>533", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.size()) > 0) { instance = list.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4053/buggy-version/app.models.Instance.java", "BodyUseAPI": ["java.util.List<models.Instance>.get(int)"], "Fixed commit": "fa37bb655d6fdb8cb32a1fef92cb2dd8ebb9dcba", "Url": "https://api.github.com/repos/ukwa/w3act", "Date": "2014-03-19T12:14:56Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (useBitmap != null) { mTextureHandles[((y * (mCols)) + x)] = com.google.android.apps.muzei.render.GLUtil.loadTexture(useBitmap); if (useBitmap != tileBitmap) { useBitmap.recycle(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3626/buggy-version/main.src.main.java.com.google.android.apps.muzei.render.GLPicture.java", "BodyUseAPI": [], "Fixed commit": "2aefff4b34c1dfb021538d0a4f2606258ed95a94", "Url": "https://api.github.com/repos/ianhanniballake/muzei", "Date": "2014-12-04T23:35:33Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fos != null) { fos.flush(); fos.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6940/buggy-version/editor.exporter.src.main.java.es.eucm.ead.editor.utils.ZipUtils.java", "BodyUseAPI": ["java.io.OutputStream.close()", "java.io.OutputStream.flush()"], "Fixed commit": "3633a613b25dd97e5b66466cb8ff2d4d2a9f86a4", "Url": "https://api.github.com/repos/jtorrente/ead", "Date": "2014-11-19T13:46:34Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Shop.player.getCurrentBalance()) > 0) { startBingo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2329/buggy-version/Shop.java", "BodyUseAPI": [], "Fixed commit": "9b4e19784013a72f5871ee3207d77d6138830f32", "Url": "https://api.github.com/repos/Elinor78/Bingo", "Date": "2014-05-31T05:16:02Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newArray.length()) == 0) { throw new java.lang.Error(\"No common objects in passed arrays!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5581/buggy-version/src.main.java.com.mbi.AssertDirector.java", "BodyUseAPI": [], "Fixed commit": "8f17fc5f3b8935863d3e528da92555b7bb605125", "Url": "https://api.github.com/repos/mbi88/json-assert", "Date": "2016-10-24T10:05:50Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getNestedClassifier(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (c instanceof java.lang.Class) { sss = ((java.lang.Class) (c)); }else { sss = ((java.lang.Class) (question.class_.createNestedClassifier(pName, UMLPackage.Literals.CLASS))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/320/buggy-version/ide.plugins.uml2.src.main.java.org.overture.ide.plugins.uml2.vdm2uml.Vdm2Uml.java", "BodyUseAPI": [], "Fixed commit": "7dc4e9f5c24db60da78eeeaeb570d9853a585ee7", "Url": "https://api.github.com/repos/overturetool/overture", "Date": "2014-05-22T22:31:48Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1074/buggy-version/src.main.java.at.junction.pvp.Team.java", "BodyUseAPI": [], "Fixed commit": "9ae620fbefcbb4b5bb8f7b618e6b8abdbaf63301", "Url": "https://api.github.com/repos/JunctionAt/JunctionPVP", "Date": "2014-01-05T00:19:39Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index > (maxNodeIndex)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8703/buggy-version/src.dna.graph.datastructures.DArray.java", "BodyUseAPI": [], "Fixed commit": "0e504f32db7d97183f924132c0bc9258704a7900", "Url": "https://api.github.com/repos/NicoHaase/DNA", "Date": "2014-03-03T15:51:55Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (exits != null) { this.exits = new java.util.HashMap<java.lang.String, java.lang.Integer>(exits); }else { this.exits = new java.util.HashMap<java.lang.String, java.lang.Integer>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7119/buggy-version/src.advanturemaps.Location.java", "BodyUseAPI": [], "Fixed commit": "ba5d2061e4d37d93490d7391b563277fd41cd044", "Url": "https://api.github.com/repos/Longer04/Exercises", "Date": "2017-08-02T18:37:00Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.shrinkwrap.api.Node.getAsset()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((asset.getClass()) == (org.jboss.shrinkwrap.api.asset.ArchiveAsset.class)) { return org.jboss.shrinkwrap.api.asset.ArchiveAsset.class.cast(asset).getArchive().as(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3639/buggy-version/impl-base.src.main.java.org.jboss.shrinkwrap.impl.base.ArchiveBase.java", "BodyUseAPI": ["org.jboss.shrinkwrap.api.asset.ArchiveAsset.getArchive()", "org.jboss.shrinkwrap.api.asset.ArchiveAsset.class.cast(asset).getArchive().as(java.lang.Class<X>)", "java.lang.Class.cast(org.jboss.shrinkwrap.api.asset.Asset)"], "Fixed commit": "d867112e5f3c111fff4b995b506b9c78b7f419ae", "Url": "https://api.github.com/repos/ALRubinger/shrinkwrap", "Date": "2014-03-03T06:52:57Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c instanceof artGame.game.Guard) { guards.add(((artGame.game.Guard) (c))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3524/buggy-version/EclipseWorkspace.ArtGame.src.artGame.game.Floor.java", "BodyUseAPI": [], "Fixed commit": "248c5d792e85f2c24d8d9a9d41ea8ed410bd5c60", "Url": "https://api.github.com/repos/MicrowavedScrambledEggs/SWEN222_GroupPage_ArtGame", "Date": "2015-10-03T04:42:37Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCustomProviders) != null) { for (com.janrain.android.engage.session.JRProvider provider : mCustomProviders) { providers.put(provider.getName(), provider); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3345/buggy-version/Jump.src.com.janrain.android.engage.session.JRSession.java", "BodyUseAPI": [], "Fixed commit": "fbd1c67c68b477f4998d77328139066356f2543b", "Url": "https://api.github.com/repos/janrain/jump.android", "Date": "2013-09-17T18:58:18Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mCardView.getVisibility()) != (GONE)) { paddingBottom = mCardView.getHeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1811/buggy-version/app.src.main.java.com.kuelye.notbadcoffee.gui.fragments.MapFragment.java", "BodyUseAPI": ["android.support.v7.widget.CardView.getHeight()"], "Fixed commit": "4b068a9dcb3dcf102d528b2cf3b0c924dc9a939d", "Url": "https://api.github.com/repos/kuelye/a.notbadcoffee", "Date": "2016-02-07T03:06:46Z"},
{"Line": "=>4127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsRTL) { index = ((mCurrentAttachmentPager) > (com.android.mms.ui.ComposeMessageActivity.DEFAULT_ATTACHMENT_PAGER)) ? position : (mAttachmentPagerAdapter.PAGE_GRID_COUNT) + position; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5486/buggy-version/src.com.android.mms.ui.ComposeMessageActivity.java", "BodyUseAPI": [], "Fixed commit": "a7beb30dbc5be627f7d0ced0cf5284eee17a7cb5", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Mms", "Date": "2015-05-21T04:21:19Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.CommandLine.getOptionValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (output.equals(\"s\")) { java.io.File configurationFile = new java.io.File(configuration); if ((!(configurationFile.exists())) || (configurationFile.isDirectory())) throw new java.lang.IllegalArgumentException(((\"File '\" + configuration) + \"' not exists or is directory.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6045/buggy-version/src.main.java.main.CLIParameters.java", "BodyUseAPI": [], "Fixed commit": "4125e5842cc6ea31d41e35713fb5cbdecfe960b2", "Url": "https://api.github.com/repos/AlexCAB/CLIMailer", "Date": "2015-09-09T06:43:59Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parameters.getOptionValue(\"o\").equals(\"s\")) mailSender = new main.MailSender(configuration, message);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6045/buggy-version/src.main.java.main.Mailer.java", "BodyUseAPI": [], "Fixed commit": "4125e5842cc6ea31d41e35713fb5cbdecfe960b2", "Url": "https://api.github.com/repos/AlexCAB/CLIMailer", "Date": "2015-09-09T06:43:59Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parameters.getOptionValue(\"o\").equals(\"s\")) configuration = ((java.util.Map<java.lang.String, java.lang.Object>) (yaml.load(new java.io.FileInputStream(parameters.getOptionValue(\"c\")))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6045/buggy-version/src.main.java.main.Mailer.java", "BodyUseAPI": ["main.CLIParameters.getOptionValue(java.lang.String)", "org.yaml.snakeyaml.Yaml.load(java.io.FileInputStream)"], "Fixed commit": "4125e5842cc6ea31d41e35713fb5cbdecfe960b2", "Url": "https://api.github.com/repos/AlexCAB/CLIMailer", "Date": "2015-09-09T06:43:59Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.arrow.acn.client.cloud.MqttConnectorAbstract.subscriberTopic()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isEmpty(topic))) { client.setTopics(topic); }else { logWarn(method, \"no topic to subscribe!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4011/buggy-version/acn-client.src.main.java.com.arrow.acn.client.cloud.MqttConnectorAbstract.java", "BodyUseAPI": ["com.arrow.acn.client.cloud.CustomMqttClient.setTopics(java.lang.String)"], "Fixed commit": "234f068b2baf2bf8838b2fb584fad75299992ca1", "Url": "https://api.github.com/repos/arrow-acs/acn-sdk-java", "Date": "2017-10-24T20:19:34Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openur.module.persistence.rdbms.repository.OrgUnitRepository.findOne(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (persistable == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8022/buggy-version/open_ur-modules.open_ur-module-persistence.src.main.java.org.openur.module.persistence.dao.rdbms.UserStructureDaoImplRdbms.java", "BodyUseAPI": [], "Fixed commit": "86a77f541eaa021810e03ca0b3962cd06f0b5cb4", "Url": "https://api.github.com/repos/Uwe-Fuchs/open-ur", "Date": "2015-02-21T16:09:23Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dk.mrspring.kitchen.tileentity.TileEntityBoard.removeTopMostItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (itemStack != null) { world.spawnEntityInWorld(new net.minecraft.entity.item.EntityItem(world, (x + 0.5), (y + 0.5), (z + 0.5), itemStack)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9027/buggy-version/src.main.java.dk.mrspring.kitchen.block.BlockBoard.java", "BodyUseAPI": ["net.minecraft.world.World.spawnEntityInWorld(net.minecraft.entity.item.EntityItem)"], "Fixed commit": "21dd4a1763eadc2616f50bf563c04f6f97719304", "Url": "https://api.github.com/repos/MrSpring/ModJam4", "Date": "2014-09-01T10:32:17Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lsinf1225.groupe_t.bartender.model.Order.getAllTable()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tables.isEmpty()) { newBill.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8566/buggy-version/app.src.main.java.com.lsinf1225.groupe_t.bartender.activity.AddBillActivity.java", "BodyUseAPI": [], "Fixed commit": "9a557f6760f798fed128b593a38d5dd0e851d16a", "Url": "https://api.github.com/repos/anpar/LSINF1225-projet", "Date": "2015-05-14T14:42:32Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lowerLeft.getX()) > (topRight.getX())) { double x = lowerLeft.getX(); lowerLeft = ctx.makePoint(topRight.getX(), lowerLeft.getY()); topRight = ctx.makePoint(x, topRight.getY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1764/buggy-version/src.main.java.com.orientechnologies.lucene.shape.ORectangleShapeFactory.java", "BodyUseAPI": ["com.spatial4j.core.context.SpatialContext.makePoint(double,topRight.getY())", "com.spatial4j.core.shape.Point.getY()", "com.spatial4j.core.shape.Point.getX()", "com.spatial4j.core.context.SpatialContext.makePoint(topRight.getX(),lowerLeft.getY())", "com.spatial4j.core.shape.Point.getX()", "com.spatial4j.core.shape.Point.getY()"], "Fixed commit": "52c7b5baeba0b1e8a9e9582717484a97c2b6792b", "Url": "https://api.github.com/repos/orientechnologies/orientdb-lucene", "Date": "2015-10-07T15:51:54Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count % 360) == 0) { java.lang.System.out.println(\"contact_list\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8443/buggy-version/stat.Bootstrap.java", "BodyUseAPI": [], "Fixed commit": "e186d18dcafb25c28e2cdaf9aaa0c31f0671cd0d", "Url": "https://api.github.com/repos/mathcolo/telegram-analytics", "Date": "2016-01-16T05:32:32Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size < 1) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4529/buggy-version/LimitedInfection.java", "BodyUseAPI": [], "Fixed commit": "6563798c3bbb40ab1e8c2a5eb629a14bbe5c0305", "Url": "https://api.github.com/repos/spqchan/LimitedInfection", "Date": "2014-10-21T19:27:11Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mProcess) != null) { try { mProcess.getOutputStream().write(\"q\\n\".getBytes()); mProcess.getOutputStream().flush(); mProcess.getOutputStream().close(); } catch (java.io.IOException ex) { } mProcess.destroy(); mProcess.destroyForcibly(); mProcess = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7467/buggy-version/src.webroom.engine.SourceFFMpeg.java", "BodyUseAPI": [], "Fixed commit": "90ba588c18ed18a60b8850b53e796c2790ad22d3", "Url": "https://api.github.com/repos/patrickballeux/wroom", "Date": "2017-08-13T16:01:31Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((holes.size()) <= j) && ((holes.size()) > 0)) { currentStartingHole = holes.get(0); }else if ((holes.size()) > 0) { currentStartingHole = holes.get(j); }else { holes.add(new Hole(0, 0)); currentStartingHole = holes.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8221/buggy-version/NextFit.java", "BodyUseAPI": ["java.util.ArrayList<Hole>.size()", "java.util.ArrayList<Hole>.get(int)", "java.util.ArrayList<Hole>.get(int)", "java.util.ArrayList<Hole>.get(int)", "java.util.ArrayList<Hole>.add(Hole)"], "Fixed commit": "bef06557a40cae55fe5e5df74f927802ed1a1b61", "Url": "https://api.github.com/repos/johng1lee/assignment4", "Date": "2015-03-20T02:40:54Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<Hole>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((hole.getSize()) <= 0) { holes.remove(j); if (((holes.size()) <= j) && ((holes.size()) > 0)) { currentStartingHole = holes.get(0); }else if ((holes.size()) > 0) { currentStartingHole = holes.get(j); }else { holes.add(new Hole(0, 0)); currentStartingHole = holes.get(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8221/buggy-version/NextFit.java", "BodyUseAPI": [], "Fixed commit": "bef06557a40cae55fe5e5df74f927802ed1a1b61", "Url": "https://api.github.com/repos/johng1lee/assignment4", "Date": "2015-03-20T02:40:54Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((isRoot(parent)) && ((compare(key, parent.key)) == 0)) { if (isLeaf(parent)) { root = null; }else { swapValues(getNodeToSwap(root), root); } }else if (((compare(key, parent.key)) > 0) && ((parent.right) != null)) { child = parent.right; if ((child.key) != key) { delete(child, key); }else { if (isLeaf(child)) { parent.right = null; }else { swapValues(getNodeToSwap(child), child); } } }else if (((compare(key, parent.key)) < 0) && ((parent.left) != null)) { child = parent.left; if ((child.key) != key) { delete(child, key); }else { if (isLeaf(child)) { parent.left = null; }else { swapValues(getNodeToSwap(child), child); } } }else { java.lang.System.out.println(\"No such element\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7085/buggy-version/homework.lesson_18.alexander.bazhanov.src.main.java.algo.BSTMap.java", "BodyUseAPI": ["algo.BSTMap<K, V>.delete(algo.BSTMap<K, V>.Node,K)", "algo.BSTMap<K, V>.compare(K,K)", "algo.BSTMap<K, V>.delete(algo.BSTMap<K, V>.Node,K)", "algo.BSTMap<K, V>.compare(K,K)", "algo.BSTMap<K, V>.isLeaf(algo.BSTMap<K, V>.Node)"], "Fixed commit": "d28ebb8b62b965832ca826b4107324d9fef809a9", "Url": "https://api.github.com/repos/Sunscratch/HomeWorkNew", "Date": "2017-03-13T15:52:07Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Class<? extends net.minecraft.entity.Entity>, java.lang.String>.get(java.lang.Class<? extends net.minecraft.entity.Entity>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (page != null) { return page; }else { return \"entity/\" + (EntityList.classToStringMapping.get(entityClass)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9176/buggy-version/src.igwmod.api.WikiRegistry.java", "BodyUseAPI": [], "Fixed commit": "df60597bc2c09a133772b199d0d67756d838cf77", "Url": "https://api.github.com/repos/MineMaarten/IGW-mod", "Date": "2016-02-22T15:36:35Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xcolab.client.contents.ContentsClient.getContentPageByContentArticleId(contentArticleVersion.getContentArticleId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (cp != null) { articleVersion.put(\"contentUrl\", cp.getTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6315/buggy-version/view.src.main.java.org.xcolab.view.pages.contenteditor.ContentEditorController.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,cp.getTitle())", "org.xcolab.client.contents.pojo.ContentPage.getTitle()"], "Fixed commit": "929d0834187702a1bc16d094133ae2be9bc3df7b", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2017-05-09T01:01:15Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (domains != null) { for (com.ocs.dynamo.functional.domain.Domain d : domains) { if ((d != null) && (d.getClass().isAssignableFrom(clazz))) { result.add(((T) (d))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7152/buggy-version/dynamo-functional-domain.src.main.java.com.ocs.dynamo.functional.util.DomainUtil.java", "BodyUseAPI": [], "Fixed commit": "b4d4e6cac75f1bd41d8a930809e62f00d7315f03", "Url": "https://api.github.com/repos/opencirclesolutions/dynamo", "Date": "2016-10-25T14:11:34Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((options.length) == 3) { constraintsXml2 = options[3]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1075/buggy-version/hit-core-hl7v2-service.src.main.java.gov.nist.hit.core.hl7v2.service.message.Er7MessageValidator.java", "BodyUseAPI": [], "Fixed commit": "5e0b391c6f871a588f4c5155659b113e11111a25", "Url": "https://api.github.com/repos/haffo/hit-core-hl7v2", "Date": "2015-07-10T14:40:42Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (constraintsXml2 != null) { c = getConformanceContext(org.apache.commons.io.IOUtils.toInputStream(constraintsXml), org.apache.commons.io.IOUtils.toInputStream(constraintsXml2)); }else { c = getConformanceContext(org.apache.commons.io.IOUtils.toInputStream(constraintsXml)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1075/buggy-version/hit-core-hl7v2-service.src.main.java.gov.nist.hit.core.hl7v2.service.message.Er7MessageValidator.java", "BodyUseAPI": ["gov.nist.hit.core.hl7v2.service.message.Er7MessageValidator.getConformanceContext(org.apache.commons.io.IOUtils.toInputStream(constraintsXml),org.apache.commons.io.IOUtils.toInputStream(constraintsXml2))", "org.apache.commons.io.IOUtils.toInputStream(java.lang.String)"], "Fixed commit": "5e0b391c6f871a588f4c5155659b113e11111a25", "Url": "https://api.github.com/repos/haffo/hit-core-hl7v2", "Date": "2015-07-10T14:40:42Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((songItems) != null) { return songItems.size(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5418/buggy-version/app.src.main.java.com.ocwvar.darkpurple.Adapters.SlidingListAdapter.java", "BodyUseAPI": [], "Fixed commit": "c1be0f119221d4bc8e0542bc05a11f5fc9779d08", "Url": "https://api.github.com/repos/ocwvar/DarkPurple", "Date": "2016-08-06T16:11:55Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.songList) != null) && ((this.songList.size()) > 1)) { this.playingIndex = playIndex; playNext(); }else { this.playingIndex = -1; this.songList = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5418/buggy-version/app.src.main.java.com.ocwvar.darkpurple.Services.AudioCore.java", "BodyUseAPI": [], "Fixed commit": "c1be0f119221d4bc8e0542bc05a11f5fc9779d08", "Url": "https://api.github.com/repos/ocwvar/DarkPurple", "Date": "2016-08-06T16:11:55Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kizombadev.markdownparser.InputStream.create(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tokenStream.current()) == '\\n') { handleEndOfText(); tokens.add(org.kizombadev.markdownparser.Token.create(Token.Category.NEW_LINE)); }else if ((((tokenStream.current()) == '#') && (tokenStream.hasNext())) && ((tokenStream.showNext()) == '#')) { handleEndOfText(); tokens.add(org.kizombadev.markdownparser.Token.create(Token.Category.DOUBLE_NUMBER_SIGN)); tokenStream.next(); }else if ((tokenStream.current()) == '#') { handleEndOfText(); tokens.add(org.kizombadev.markdownparser.Token.create(Token.Category.NUMBER_SIGN)); }else if ((((tokenStream.current()) == '*') && (tokenStream.hasNext())) && ((tokenStream.showNext()) == '*')) { handleEndOfText(); tokens.add(org.kizombadev.markdownparser.Token.create(Token.Category.DOUBLE_STAR)); tokenStream.next(); }else if ((tokenStream.current()) == '*') { handleEndOfText(); tokens.add(org.kizombadev.markdownparser.Token.create(Token.Category.STAR)); }else if ((tokenStream.current()) == '>') { handleEndOfText(); tokens.add(org.kizombadev.markdownparser.Token.create(Token.Category.GREATER_THAN_SIGN)); }else { text.append(tokenStream.current()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3835/buggy-version/src.main.java.org.kizombadev.markdownparser.Tokenizer.java", "BodyUseAPI": ["org.kizombadev.markdownparser.InputStream.showNext()", "org.kizombadev.markdownparser.InputStream.current()", "org.kizombadev.markdownparser.InputStream.next()", "org.kizombadev.markdownparser.InputStream.current()", "org.kizombadev.markdownparser.InputStream.hasNext()", "org.kizombadev.markdownparser.InputStream.next()", "org.kizombadev.markdownparser.InputStream.current()", "org.kizombadev.markdownparser.InputStream.current()", "java.lang.StringBuilder.append(tokenStream.current())", "org.kizombadev.markdownparser.InputStream.hasNext()", "org.kizombadev.markdownparser.InputStream.current()", "org.kizombadev.markdownparser.InputStream.showNext()", "org.kizombadev.markdownparser.InputStream.current()"], "Fixed commit": "3a96e2b8ffb6f76f0a7a50bec4a2dc9a6a1f5e16", "Url": "https://api.github.com/repos/kizombaDev/MarkdownParser", "Date": "2017-04-09T12:26:16Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pendingCollection) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2258/buggy-version/realm.realm-library.src.main.java.io.realm.internal.PendingRow.java", "BodyUseAPI": [], "Fixed commit": "ecb06237470af9fe122f6006172fa93a2d4f0dcd", "Url": "https://api.github.com/repos/realm/realm-java", "Date": "2017-01-10T14:59:33Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((banterRoomFragment.timer) != null) { banterRoomFragment.timer.cancel(); banterRoomFragment.beginPostPolling(30000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5142/buggy-version/src.com.example.Banter.BanterActivity.java", "BodyUseAPI": ["com.example.Banter.BanterRoomFragment.beginPostPolling(int)", "banterRoomFragment.timer.cancel()"], "Fixed commit": "b8f56bffdafc997d81a4fd89559610002181db1f", "Url": "https://api.github.com/repos/fatzalore/Banter", "Date": "2014-10-21T06:49:56Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (res.next()) { return new net.nifheim.beelzebu.coins.core.multiplier.MultiplierDataBuilder(res.getString(\"server\"), core.getNick(java.util.UUID.fromString(res.getString(\"uuid\"))), res.getInt(\"amount\"), res.getBoolean(\"enabled\")).create(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2945/buggy-version/src.net.nifheim.beelzebu.coins.core.multiplier.Multiplier.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getBoolean(java.lang.String)", "java.sql.ResultSet.getInt(java.lang.String)", "net.nifheim.beelzebu.coins.core.Core.getNick(java.util.UUID)", "net.nifheim.beelzebu.coins.core.multiplier.MultiplierDataBuilder.create()", "java.util.UUID.fromString(java.lang.String)"], "Fixed commit": "27f8418f76ff5e1d95256ed5a5fc40ceb5b401db", "Url": "https://api.github.com/repos/Beelzebu/Coins", "Date": "2017-09-23T01:19:24Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(columns[4].isEmpty())) workloadContext.setStopDate(com.intel.cosbench.controller.loader.Formats.DATETIME.parse(columns[4]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4337/buggy-version/dev.cosbench-controller.src.com.intel.cosbench.controller.loader.CSVRunLoader.java", "BodyUseAPI": ["com.intel.cosbench.controller.model.WorkloadContext.setStopDate(com.intel.cosbench.controller.loader.Formats.DATETIME.parse(columns[4]))", "com.intel.cosbench.controller.loader.Formats.DATETIME.parse(java.lang.String)"], "Fixed commit": "77ac4b2d4ebf31863345f8e8c2815d4510fe58f7", "Url": "https://api.github.com/repos/intel-cloud/cosbench", "Date": "2013-12-27T02:59:12Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((str.length) > 1) stateDate = com.intel.cosbench.controller.loader.Formats.DATETIME.parse(str[1].trim());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4337/buggy-version/dev.cosbench-controller.src.com.intel.cosbench.controller.loader.CSVRunLoader.java", "BodyUseAPI": ["com.intel.cosbench.controller.loader.Formats.DATETIME.parse(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "77ac4b2d4ebf31863345f8e8c2815d4510fe58f7", "Url": "https://api.github.com/repos/intel-cloud/cosbench", "Date": "2013-12-27T02:59:12Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(columns[2].isEmpty())) workloadContext.setSubmitDate(com.intel.cosbench.controller.loader.Formats.DATETIME.parse(columns[2]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4337/buggy-version/dev.cosbench-controller.src.com.intel.cosbench.controller.loader.CSVRunLoader.java", "BodyUseAPI": ["com.intel.cosbench.controller.model.WorkloadContext.setSubmitDate(com.intel.cosbench.controller.loader.Formats.DATETIME.parse(columns[2]))", "com.intel.cosbench.controller.loader.Formats.DATETIME.parse(java.lang.String)"], "Fixed commit": "77ac4b2d4ebf31863345f8e8c2815d4510fe58f7", "Url": "https://api.github.com/repos/intel-cloud/cosbench", "Date": "2013-12-27T02:59:12Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(columns[3].isEmpty())) workloadContext.setStartDate(com.intel.cosbench.controller.loader.Formats.DATETIME.parse(columns[3]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4337/buggy-version/dev.cosbench-controller.src.com.intel.cosbench.controller.loader.CSVRunLoader.java", "BodyUseAPI": ["com.intel.cosbench.controller.model.WorkloadContext.setStartDate(com.intel.cosbench.controller.loader.Formats.DATETIME.parse(columns[3]))", "com.intel.cosbench.controller.loader.Formats.DATETIME.parse(java.lang.String)"], "Fixed commit": "77ac4b2d4ebf31863345f8e8c2815d4510fe58f7", "Url": "https://api.github.com/repos/intel-cloud/cosbench", "Date": "2013-12-27T02:59:12Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((masterThread) != null) masterThread.interrupt();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1731/buggy-version/wififixer.src.org.wahtod.wififixer.utility.Hostup.java", "BodyUseAPI": [], "Fixed commit": "05d8abfe443a23ff6902a1770f7c0cb27421def8", "Url": "https://api.github.com/repos/Zanshinmu/Wifi-Fixer", "Date": "2016-04-01T21:50:19Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rule.getWhen()) != null) { whenString = new java.lang.String(rule.getWhen()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5709/buggy-version/src.main.java.com.sap.ems.service.impl.EMSServiceImpl.java", "BodyUseAPI": ["com.sap.ems.entity.Rule.getWhen()"], "Fixed commit": "fd86f5f2fb4624a59dcbe2e1e7448a647cb3093a", "Url": "https://api.github.com/repos/nelo0844/emsdroolsproject01", "Date": "2017-11-29T09:35:15Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rule.getThen()) != null) { thenString = new java.lang.String(rule.getThen()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5709/buggy-version/src.main.java.com.sap.ems.service.impl.EMSServiceImpl.java", "BodyUseAPI": ["com.sap.ems.entity.Rule.getThen()"], "Fixed commit": "fd86f5f2fb4624a59dcbe2e1e7448a647cb3093a", "Url": "https://api.github.com/repos/nelo0844/emsdroolsproject01", "Date": "2017-11-29T09:35:15Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.get(0).substring(2, 3).equals(\">\")) des = result.get(0).substring(3); else des = result.get(0).substring(2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4776/buggy-version/GalwayTideTimes.src.com.galwaytidetimes.MainActivity.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)", "java.lang.String.substring(int)"], "Fixed commit": "710ff08afc7085b51f27c243a9ec80a3a2d62362", "Url": "https://api.github.com/repos/darrenjl/GalwayTideTimes", "Date": "2013-06-29T10:03:15Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (items.get(0).substring(2, 3).equals(\">\")) des = items.get(0).substring(3); else des = items.get(0).substring(2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4776/buggy-version/GalwayTideTimes.src.com.galwaytidetimes.MainActivity.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)", "java.lang.String.substring(int)"], "Fixed commit": "710ff08afc7085b51f27c243a9ec80a3a2d62362", "Url": "https://api.github.com/repos/darrenjl/GalwayTideTimes", "Date": "2013-06-29T10:03:15Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getEventTime()) < (mResumeTime)) { if (MediaPhone.DEBUG) { android.util.Log.d(ac.robinson.util.DebugUtilities.getLogTag(this), \"Discarded touch event with start time earlier than onResume()\"); } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/31/buggy-version/src.ac.robinson.mediaphone.MediaPhoneActivity.java", "BodyUseAPI": [], "Fixed commit": "4f98d521d901d0e1bbda81ba7058b0f56ec5a465", "Url": "https://api.github.com/repos/communitymedia/mediaphone", "Date": "2013-03-10T13:35:29Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8832/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "9511cecc4fb86d5497ca4497cd8378022ef4c038", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLastLocation) != null) animateAinolaNeedle();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8236/buggy-version/src.fi.yle.sibkompassi.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b2aaed8291f38ab7e6efba1d163950d0be9c7733", "Url": "https://api.github.com/repos/emiliam/sibkompassi-android", "Date": "2015-09-13T07:27:26Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.yle.sibkompassi.MainActivity.getSystemService(Context.LOCATION_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (locationManager != null) { mLastLocation = locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER); if ((mLastLocation) == null) mLastLocation = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8236/buggy-version/src.fi.yle.sibkompassi.MainActivity.java", "BodyUseAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER)", "android.location.LocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER)"], "Fixed commit": "b2aaed8291f38ab7e6efba1d163950d0be9c7733", "Url": "https://api.github.com/repos/emiliam/sibkompassi-android", "Date": "2015-09-13T07:27:26Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.rsdt.japp.application.fragments.HomeFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (activity != null) { android.app.NotificationManager mNotifyMgr = ((android.app.NotificationManager) (this.getActivity().getSystemService(Activity.NOTIFICATION_SERVICE))); mNotifyMgr.notify(nl.rsdt.japp.application.fragments.HomeFragment.NOTIFICATION_ID, builder.build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4279/buggy-version/app.src.main.java.nl.rsdt.japp.application.fragments.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "44dca27fd0d0dd2a6fd9d0e09c50fd7ae4b589fe", "Url": "https://api.github.com/repos/RSDT/Japp16", "Date": "2017-10-01T20:58:44Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (objectType == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2/buggy-version/src.main.java.net.aokv.idataconverter.Converter.java", "BodyUseAPI": [], "Fixed commit": "212c720ad60bc70db5132a99f7a50af3d738f7d1", "Url": "https://api.github.com/repos/StefanMacke/ao-idata-converter", "Date": "2015-07-17T09:04:36Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!readOnly) { com.era7.bioinfo.bioinfoneo4j.Neo4jManager.graphService = new org.neo4j.kernel.EmbeddedGraphDatabase(dbFolder); }else { com.era7.bioinfo.bioinfoneo4j.Neo4jManager.graphService = new org.neo4j.kernel.EmbeddedReadOnlyGraphDatabase(dbFolder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/48/buggy-version/src.main.java.com.era7.bioinfo.bioinfoneo4j.Neo4jManager.java", "BodyUseAPI": [], "Fixed commit": "9f844b2b2c2ce1946c8fdef14634321ea2264400", "Url": "https://api.github.com/repos/pablopareja/BioinfoNeo4j", "Date": "2011-12-27T11:59:14Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.cache.Cache<java.lang.String, com.sdl.ecommerce.dummy.model.DummyCart>.getIfPresent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cart == null) { cart = ((com.sdl.ecommerce.dummy.model.DummyCart) (this.createCart())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3654/buggy-version/connectors.dummy-ecommerce-connector.src.main.java.com.sdl.ecommerce.dummy.DummyCartService.java", "BodyUseAPI": [], "Fixed commit": "d72e48b2c4fd4f0d3310e47c0d85a81552d96c9c", "Url": "https://api.github.com/repos/sdl/ecommerce-framework", "Date": "2017-03-06T14:06:33Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.atlasapi.media.entity.Item.getSeriesRef()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (seriesRef == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6804/buggy-version/src.main.java.org.atlasapi.remotesite.bbc.nitro.PidUpdateController.java", "BodyUseAPI": [], "Fixed commit": "1290423188151aef13e1e95f436c750ae30a9db7", "Url": "https://api.github.com/repos/atlasapi/atlas", "Date": "2016-01-19T18:34:16Z"},
{"Line": "=>814", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(commandIsRunning)) || (!(emitOperationsWhenCommandCompleted))) { operations.remove(compositeOperation); operationRecorded(compositeOperation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1251/buggy-version/org.eclipse.emf.emfstore.client.src.org.eclipse.emf.emfstore.client.model.impl.OperationRecorder.java", "BodyUseAPI": [], "Fixed commit": "efcd56a9ac6d5f7c2421b7215fa09a6c46d8da18", "Url": "https://api.github.com/repos/aumann/emfstore.core", "Date": "2012-06-13T16:02:01Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.kth.ict.id2216.groupcontactsharing.JsonReader.getStringData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((data == null) || ((data.length()) == 0)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6911/buggy-version/A5.GroupContactSharing.src.se.kth.ict.id2216.groupcontactsharing.GetDataTask.java", "BodyUseAPI": [], "Fixed commit": "dca691017a6e20b056113cc178e096c1552a72c2", "Url": "https://api.github.com/repos/Zazcallabah/id2216", "Date": "2013-02-20T12:41:23Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((a.type) == (DataTypeEnum.INT)) && ((b.type) == (DataTypeEnum.INT))) { return ((int) ((a.intVal) - (b.intVal))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7730/buggy-version/EsperDist2.core.dist.esper.epl.expr.Value.java", "BodyUseAPI": [], "Fixed commit": "08e8c34321829fe67be6ac8b18c495ec215b20ab", "Url": "https://api.github.com/repos/HoratiusTang/EsperDist", "Date": "2015-05-03T12:38:06Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(directiveExpression.trim().startsWith(\";\"))) { children.append(\";\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2815/buggy-version/src.com.twinsoft.convertigo.beans.mobile.components.UIControlDirective.java", "BodyUseAPI": [], "Fixed commit": "36e30e21ab1872f4383eb268b06a71d768507835", "Url": "https://api.github.com/repos/convertigo/convertigo-engine", "Date": "2017-09-07T12:30:32Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (argValue instanceof java.lang.String) { argValue = processText(((java.lang.String) (argValue))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2233/buggy-version/yukthi-xml-mapper.src.main.java.com.yukthitech.ccg.xml.SAXEventHandler.java", "BodyUseAPI": [], "Fixed commit": "fd7cd05193e6b49d3e733631c88e2b5a1a454821", "Url": "https://api.github.com/repos/yukthitech/utils", "Date": "2017-09-26T16:06:19Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xmlcalabash.model.Step.getInput(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pin.getPrimary()) { ppport = port; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/709/buggy-version/src.com.xmlcalabash.runtime.XStep.java", "BodyUseAPI": [], "Fixed commit": "c56d5c71a5e0c5d61ed979e415810817b78bf42a", "Url": "https://api.github.com/repos/sharwell/xmlcalabash1", "Date": "2013-09-22T09:33:12Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ppport != null) { pport = ppport; }else { if (pportCount > 1) { throw new com.xmlcalabash.core.XProcException(step.getNode(), \"Attempt to set parameter w/o specifying a port (and there's more than one)\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/709/buggy-version/src.com.xmlcalabash.runtime.XStep.java", "BodyUseAPI": [], "Fixed commit": "c56d5c71a5e0c5d61ed979e415810817b78bf42a", "Url": "https://api.github.com/repos/sharwell/xmlcalabash1", "Date": "2013-09-22T09:33:12Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xmlcalabash.runtime.Parameter.getPort()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (port == null) { newstep.setParameter(name, value); }else { newstep.setParameter(port, name, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/709/buggy-version/src.com.xmlcalabash.runtime.XPipelineCall.java", "BodyUseAPI": ["com.xmlcalabash.runtime.XPipeline.setParameter(java.lang.String,net.sf.saxon.s9api.QName,com.xmlcalabash.runtime.RuntimeValue)"], "Fixed commit": "c56d5c71a5e0c5d61ed979e415810817b78bf42a", "Url": "https://api.github.com/repos/sharwell/xmlcalabash1", "Date": "2013-09-22T09:33:12Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dir.isDirectory()) { java.lang.String[] children = dir.list(); for (int i = 0; i < (children.length); i++) { new java.io.File(dir, children[i]).delete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3466/buggy-version/app.src.main.java.com.triptik.dev.triptik.AspectSelect.java", "BodyUseAPI": ["java.io.File.list()", "java.io.File.delete()"], "Fixed commit": "5f17d9db975d5573b80ee079806221bc25c851af", "Url": "https://api.github.com/repos/dhenniga/triptik", "Date": "2016-02-17T15:27:37Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.egit.github.core.event.CommitCommentPayload.getComment()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (comment != null) { return res.getString(R.string.event_commit_comment_desc, comment.getCommitId().substring(0, 7), comment.getBody()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3586/buggy-version/src.com.gh4a.adapter.FeedAdapter.java", "BodyUseAPI": ["org.eclipse.egit.github.core.CommitComment.getBody()", "org.eclipse.egit.github.core.CommitComment.getCommitId()", "comment.getCommitId().substring(int,int)", "android.content.res.Resources.getString(R.string.event_commit_comment_desc,comment.getCommitId().substring(0, 7),comment.getBody())"], "Fixed commit": "99a38bf875d0219bc5c2f69973d1736f2ff109ef", "Url": "https://api.github.com/repos/maniac103/gh4a", "Date": "2014-03-27T12:14:57Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((JSONresponse.getString(\"success\").equals(\"false\")) && (JSONresponse.getString(\"message\").equals(\"Already logged in.\"))) { startActivity(new android.content.Intent(getApplicationContext(), com.dunksoftware.seminoletix.ListActivity.class)); }else { ShowMessage(JSONresponse.getString(\"message\"), Toast.LENGTH_LONG); editUsername.getText().clear(); editPassword.getText().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9087/buggy-version/src.com.dunksoftware.seminoletix.LoginActivity.java", "BodyUseAPI": ["com.dunksoftware.seminoletix.LoginActivity.1.ShowMessage(JSONresponse.getString(\"message\"),Toast.LENGTH_LONG)", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "bf516ce70bc3507abb089a0fe412ec5d2d5f79c3", "Url": "https://api.github.com/repos/edaniels/Seminole_Tix", "Date": "2013-04-18T04:21:01Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((targetX < 0) || (targetY < 0)) || (targetX >= (world.getSize()))) || (targetY >= (world.getSize()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/113/buggy-version/core.src.com.lucasdnd.onepixel.gameplay.Player.java", "BodyUseAPI": [], "Fixed commit": "9ad6cc7a4fee503f620d1f3e6945e91a1007c232", "Url": "https://api.github.com/repos/lucas-tulio/lone-block", "Date": "2015-09-09T00:29:38Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ret.isEmpty()) { android.widget.Toast.makeText(getApplicationContext(), \"Select a date with available pack leaders!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4309/buggy-version/app.src.main.java.com.juniordesign.unleashedpotential.canineconcierge.ScheduleWalkActivity.java", "BodyUseAPI": [], "Fixed commit": "df0d1dff1368c042a0860b5f8afb4ee86328311b", "Url": "https://api.github.com/repos/shstan/CS3312_Proj", "Date": "2017-10-01T21:35:28Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userInput.equals(\"#quit\")) { this.end(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8634/buggy-version/src.com.drexel.cs283.assignment2.ChatWriteHandler.java", "BodyUseAPI": [], "Fixed commit": "55eb7e9ae170163235a2d138bf294a24ed037090", "Url": "https://api.github.com/repos/andrew-mainhart/ChatProgram", "Date": "2017-08-17T20:22:20Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((movingPiece instanceof chess.Pawn) && (((chess.Pawn) (movingPiece)).isFirstMove())) { ((chess.Pawn) (movingPiece)).setMoved(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9177/buggy-version/src.chess.Board.java", "BodyUseAPI": ["chess.Piece.setMoved()"], "Fixed commit": "da49bc467b1a342d02a96961db73e93d46edcd8e", "Url": "https://api.github.com/repos/dimabliz/ChessyMcChessface", "Date": "2017-07-17T03:31:07Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCpuInfoList) != null) { for (int i = 0; i < (mCpuInfoList.size()); i++) { final uk.co.alt236.floatinginfo.data.access.generalinfo.inforeader.cpu.CpuUtilisationReader.CpuInfo info = mCpuInfoList.get(i); result.addCpuUtil(info.getUsage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1424/buggy-version/app.src.main.java.uk.co.alt236.floatinginfo.data.access.generalinfo.inforeader.cpu.CpuUtilisationReader.java", "BodyUseAPI": [], "Fixed commit": "1ec38c42735b2e39733c7e2f8e173978fd2a0dae", "Url": "https://api.github.com/repos/alt236/Floating-Info---Android", "Date": "2017-07-11T10:29:24Z"},
{"Line": "=>624", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.energyos.espi.common.domain.MeterReading.getUsagePoint()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (usagePoint != null) { retailCustomer = usagePoint.getRetailCustomer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9266/buggy-version/src.main.java.org.energyos.espi.common.models.atom.ContentType.java", "BodyUseAPI": ["org.energyos.espi.common.domain.UsagePoint.getRetailCustomer()"], "Fixed commit": "2a36acdfc3c63f537a662403fc35283cc6e4f5bf", "Url": "https://api.github.com/repos/RonPasquarelli/OpenESPI-Common-java", "Date": "2014-02-15T16:24:11Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((personPhoto) != null) signUp.putExtra(\"personPhoto\", personPhoto.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8045/buggy-version/app.src.main.java.com.campusconnect.cc_reboot.SignInActivity.java", "BodyUseAPI": [], "Fixed commit": "0cf6b7884e7f6e8e5ec81573f2f836effa90eab5", "Url": "https://api.github.com/repos/RK02/CampusConnect_2016", "Date": "2016-06-24T10:49:25Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mFolderId.equals(FirebaseDatabaseHelper.REF_MY_BOOKS_FOLDER)) mBtnLend.setVisibility(View.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2277/buggy-version/app.src.main.java.com.quartzodev.fragments.DetailActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "302de4d09efd1eaa8bc73fee434bfcf6516c5ea6", "Url": "https://api.github.com/repos/victoraldir/BuddyBook", "Date": "2017-10-19T01:29:11Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((samlssoRespDTO.getRespString()) != null) { org.wso2.carbon.identity.sso.saml.processors.SPInitSSOAuthnRequestProcessor.log.debug(samlssoRespDTO.getRespString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2726/buggy-version/components.sso-saml.org.wso2.carbon.identity.sso.saml.src.main.java.org.wso2.carbon.identity.sso.saml.processors.SPInitSSOAuthnRequestProcessor.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(samlssoRespDTO.getRespString())", "org.wso2.carbon.identity.sso.saml.dto.SAMLSSORespDTO.getRespString()"], "Fixed commit": "a6dd0f88f1bba579bf698e6da0b6ae63641ca969", "Url": "https://api.github.com/repos/GayanM/carbon-identity", "Date": "2015-10-29T08:12:32Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((samlssoRespDTO.getRespString()) != null) { org.wso2.carbon.identity.sso.saml.processors.IdPInitSSOAuthnRequestProcessor.log.debug(samlssoRespDTO.getRespString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2726/buggy-version/components.sso-saml.org.wso2.carbon.identity.sso.saml.src.main.java.org.wso2.carbon.identity.sso.saml.processors.IdPInitSSOAuthnRequestProcessor.java", "BodyUseAPI": ["org.wso2.carbon.identity.sso.saml.dto.SAMLSSORespDTO.getRespString()", "org.apache.commons.logging.Log.debug(samlssoRespDTO.getRespString())"], "Fixed commit": "a6dd0f88f1bba579bf698e6da0b6ae63641ca969", "Url": "https://api.github.com/repos/GayanM/carbon-identity", "Date": "2015-10-29T08:12:32Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((introText) != null) { return xssapi.filterHTML(introText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/319/buggy-version/lasvegas.core.src.main.java.adobe.summit.lasvegas.core.NewsPageModel.java", "BodyUseAPI": [], "Fixed commit": "e8e1fedef4f6ef1212784694a7663b3af3844fd6", "Url": "https://api.github.com/repos/heervisscher/l318", "Date": "2016-03-17T10:57:34Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkCacheExists(cacheFileName, cacheType))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6340/buggy-version/app.src.main.java.com.sunhz.projectutils.cacheutils.CacheUtils.java", "BodyUseAPI": [], "Fixed commit": "db1a4299c2dfe3d4d8bf68a223b1f518cf75b610", "Url": "https://api.github.com/repos/ChinaSunHZ/ProjectUtils", "Date": "2015-05-29T05:20:44Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(rendering)) { joons.P.background(gray); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7384/buggy-version/joons.JoonsRenderer.java", "BodyUseAPI": [], "Fixed commit": "99c7cb2fef7be6b75b6d77c6a2bb751b7493e48a", "Url": "https://api.github.com/repos/sntx/joons-renderer", "Date": "2015-02-12T12:42:18Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(rendering)) { joons.P.background(r, g, b); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7384/buggy-version/joons.JoonsRenderer.java", "BodyUseAPI": [], "Fixed commit": "99c7cb2fef7be6b75b6d77c6a2bb751b7493e48a", "Url": "https://api.github.com/repos/sntx/joons-renderer", "Date": "2015-02-12T12:42:18Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSharedPreferences(java.lang.String,Activity.MODE_PRIVATE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prefs.getBoolean(\"bottom_counter\", false)) { seriesFilteredList.remove(((seriesFilteredList.size()) - 1)); notifyItemRemoved(((seriesFilteredList.size()) - 1)); seriesFilteredList.add(new org.michaelbel.model.Series(database.getCount())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6350/buggy-version/app.src.main.java.org.michaelbel.ui.adapter.SeriesAdapter.java", "BodyUseAPI": [], "Fixed commit": "977876e3e38b4fed2880e0f648401cde1354bb43", "Url": "https://api.github.com/repos/michaelbel/YouShows", "Date": "2017-12-13T18:04:23Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.ArrayList<org.fergonco.devmind.interpreter.Statement>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ret == null) { return new org.fergonco.devmind.interpreter.Statement[0]; }else { return ret.toArray(new org.fergonco.devmind.interpreter.Statement[ret.size()]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5800/buggy-version/src.main.java.org.fergonco.devmind.interpreter.KnowledgeBase.java", "BodyUseAPI": ["java.util.ArrayList<org.fergonco.devmind.interpreter.Statement>.toArray(org.fergonco.devmind.interpreter.Statement[])", "java.util.ArrayList<org.fergonco.devmind.interpreter.Statement>.size()"], "Fixed commit": "dd36afa7f6a87710c136ee1c0453cdde65227d2b", "Url": "https://api.github.com/repos/fergonco/devmind", "Date": "2017-08-04T08:22:55Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (currentPermission != null) { permissions = new java.util.HashSet<>(); permissions.add(currentPermission); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4768/buggy-version/src.soot.jimple.infoflow.android.data.parsers.PScoutPermissionMethodParser.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "7d9196e09719e049b8c5b37f579d36d51c48d6b5", "Url": "https://api.github.com/repos/secure-software-engineering/soot-infoflow-android", "Date": "2015-10-12T08:48:50Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.forName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (transaccion.getDinero().getClass().equals(tipoDiner)) { if (transaccion.getTipoTransaccion().equals(TipoTransaccion.INGRESO)) { dinero.setCantidad(((dinero.getCantidad()) + (transaccion.getDinero().getCantidad()))); }else { dinero.setCantidad(((dinero.getCantidad()) - (transaccion.getDinero().getCantidad()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4100/buggy-version/src.main.java.registrodecaja.transaccion.TransaccionDao.java", "BodyUseAPI": ["transaccion.getDinero().getCantidad()", "transaccion.getDinero().getCantidad()", "registrodecaja.model.Dinero.setCantidad(((dinero.getCantidad()) - (transaccion.getDinero().getCantidad())))", "registrodecaja.model.Transaccion.getDinero()", "transaccion.getTipoTransaccion().equals(TipoTransaccion.INGRESO)", "registrodecaja.model.Dinero.setCantidad(((dinero.getCantidad()) + (transaccion.getDinero().getCantidad())))", "registrodecaja.model.Transaccion.getDinero()", "registrodecaja.model.Transaccion.getTipoTransaccion()"], "Fixed commit": "411d45711780ae8ccd147bd4d8a1398a23c76c4d", "Url": "https://api.github.com/repos/EugeValeiras/registrodecaja", "Date": "2015-09-28T23:42:50Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stack.getUnlocalizedName()) != null) { java.util.List<java.lang.String> info = igwmod.InfoSupplier.getInfo(modid, igwmod.WikiUtils.getNameFromStack(stack), true); if (info != null) igwmod.api.WikiRegistry.registerBlockAndItemPageEntry(stack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3745/buggy-version/src.igwmod.ClientProxy.java", "BodyUseAPI": ["igwmod.InfoSupplier.getInfo(java.lang.String,igwmod.WikiUtils.getNameFromStack(stack),boolean)", "igwmod.api.WikiRegistry.registerBlockAndItemPageEntry(net.minecraft.item.ItemStack)", "igwmod.WikiUtils.getNameFromStack(net.minecraft.item.ItemStack)"], "Fixed commit": "edefa32b2359d977f25035974ce3d7c6450a987a", "Url": "https://api.github.com/repos/MineMaarten/IGW-mod", "Date": "2016-01-21T11:55:19Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["o1.getUpdateDate().compareTo(o2.getUpdateDate())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (compareResult == 0) { compareResult = (java.lang.Integer.parseInt(o1.getId())) - (java.lang.Integer.parseInt(o2.getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3178/buggy-version/web-core.src.main.java.com.silverpeas.look.PublicationUpdateDateComparator.java", "BodyUseAPI": [], "Fixed commit": "b47a4901f44929d48bff4c440d9ba4bda3d23288", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Core", "Date": "2015-10-21T15:19:44Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.programmerdan.db.DBCPConnectionProvider.log.isDebugEnabled()) { com.programmerdan.db.DBCPConnectionProvider.log.debug(\"nothing active\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2028/buggy-version/src.main.java.com.programmerdan.db.DBCPConnectionProvider.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "d128fe2c0fbeb21ee054f69924ba5fb3011540d3", "Url": "https://api.github.com/repos/ProgrammerDan/fieldscan", "Date": "2014-03-11T03:32:24Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(Environment.PASS)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (password != null) { dbcpProperties.put(\"password\", password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2028/buggy-version/src.main.java.com.programmerdan.db.DBCPConnectionProvider.java", "BodyUseAPI": ["java.util.Properties.put(java.lang.String,java.lang.String)"], "Fixed commit": "d128fe2c0fbeb21ee054f69924ba5fb3011540d3", "Url": "https://api.github.com/repos/ProgrammerDan/fieldscan", "Date": "2014-03-11T03:32:24Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((carData.getYear()) != null) { carDataEntity.setYear(java.lang.Integer.parseInt(carData.getYear())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4780/buggy-version/capitol.src.main.java.de.unimuenster.wi.wfm.ejb.CarDataServiceBean.java", "BodyUseAPI": ["de.unimuenster.wi.wfm.entitiy.CarData.setYear(int)", "java.lang.Integer.parseInt(carData.getYear())", "de.unimuenster.wi.wfm.entitiy.CarData.getYear()"], "Fixed commit": "fc24be2d9019458be8cd8e1204a8f0a287a941ee", "Url": "https://api.github.com/repos/larsbe/capitolNbvis", "Date": "2015-07-06T19:34:14Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getAttribute(com.google.refine.importing.REQUEST_ATTEIBUTE_DIMENSION)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (sDimension != null) dimension = heatmap.dimension(Dimension.Type.from(sDimension));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6695/buggy-version/annotation.server.src.main.java.com.google.refine.importing.ImportingUtilities.java", "BodyUseAPI": ["edu.dfci.cccb.mev.dataset.domain.contract.Dataset.dimension(Dimension.Type.from(sDimension))", "Dimension.Type.from(java.lang.String)"], "Fixed commit": "2d59034b5ba2a69f13500d458d43dd458b0b467d", "Url": "https://api.github.com/repos/jfarid27/mev", "Date": "2015-04-17T21:22:18Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.block.BlockBreakEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((!(((org.bukkit.entity.Entity) (player)).isOnGround())) && (!(player.isInsideVehicle()))) && (!(eu.blackspectrum.bspsolutions.BSPSolutions.isClimbing(player)))) && (!(eu.blackspectrum.bspsolutions.BSPSolutions.isSwimming(player)))) if ((event.getBlock().getLocation().distance(player.getLocation())) < 1.0) { player.teleport(player.getLocation(), TeleportCause.PLUGIN); player.setVelocity(player.getLocation().getDirection().normalize().multiply((-0.5)).setY(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1065/buggy-version/src.main.java.eu.blackspectrum.bspsolutions.plugins.FalseAccessBlocker.java", "BodyUseAPI": ["org.bukkit.entity.Player.getLocation()", "event.getBlock().getLocation().distance(player.getLocation())", "org.bukkit.entity.Player.getLocation()", "org.bukkit.entity.Player.getLocation()", "org.bukkit.entity.Player.setVelocity(player.getLocation().getDirection().normalize().multiply((-0.5)).setY(0))", "player.getLocation().getDirection().normalize().multiply((-0.5)).setY(int)", "player.getLocation().getDirection()", "org.bukkit.entity.Player.teleport(player.getLocation(),TeleportCause.PLUGIN)", "player.getLocation().getDirection().normalize().multiply(double)", "player.getLocation().getDirection().normalize()"], "Fixed commit": "455536807feb86e430f1c46725b7dde97980eb89", "Url": "https://api.github.com/repos/Mats391/BSPSolutions", "Date": "2014-07-28T08:25:13Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(requiredViolationMap.containsKey(this))) { requiredViolationMap.put(this, 1); }else { requiredViolationMap.put(this, ((requiredViolationMap.get(this)) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/911/buggy-version/src.symposium.model.VenueTimeDurationFilter.java", "BodyUseAPI": ["java.util.Map<symposium.model.Constraint, java.lang.Integer>.put(symposium.model.VenueTimeDurationFilter,int)", "java.util.Map<symposium.model.Constraint, java.lang.Integer>.put(symposium.model.VenueTimeDurationFilter,((requiredViolationMap.get(this)) + 1))", "java.util.Map<symposium.model.Constraint, java.lang.Integer>.get(symposium.model.VenueTimeDurationFilter)"], "Fixed commit": "6be4a3c33685042d99ebdb079c7e52ac9f620276", "Url": "https://api.github.com/repos/SymposiumScheduler/Symposium", "Date": "2016-02-26T19:12:29Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (timeframe.equals(\"week\")) { minDate = com.ems.lifetracker.DateUtil.getOffsetDate(com.ems.lifetracker.DateUtil.getFormattedDate(null), (-6)); }else if (timeframe.equals(\"month\")) { minDate = com.ems.lifetracker.DateUtil.getOffsetDate(com.ems.lifetracker.DateUtil.getFormattedDate(null), (-29)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/201/buggy-version/src.com.ems.lifetracker.HistoryMainFragment.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "609b857a31433dc60b9e639e2bd1f9d4fbf7d3f7", "Url": "https://api.github.com/repos/someguy235/lifetracker", "Date": "2014-09-03T20:00:23Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((model.getSpeed()) < (model.getTargetSpeed())) model.modifyCurrentSpeed(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4127/buggy-version/src.main.java.Class.Regulador.java", "BodyUseAPI": ["main.java.Model.SccModel.modifyCurrentSpeed(int)"], "Fixed commit": "3cdf2d6e0d371fe53cabc8e37d594802c929cb9e", "Url": "https://api.github.com/repos/zimmcl/IngSoft-2016-SeDiceAtomico", "Date": "2016-06-04T07:11:53Z"},
{"Line": "=>949", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.bot) != null) { this.bot.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2162/buggy-version/polly.src.polly.core.irc.IrcManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "81dc5865f337249291da46461adbc5b459779603", "Url": "https://api.github.com/repos/skuzzle/polly", "Date": "2012-08-21T11:32:59Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((calllFunction.getFunctionId()) != null) { step.functions.Function function = functionRepository.getFunctionById(calllFunction.getFunctionId()); if (((function != null) && ((function.getAttributes()) != null)) && (function.getAttributes().containsKey(\"name\"))) { name = function.getAttributes().get(\"name\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7326/buggy-version/initialization.src.main.java.step.initialization.InitializationPlugin.java", "BodyUseAPI": ["step.plugins.adaptergrid.FunctionRepositoryImpl.getFunctionById(calllFunction.getFunctionId())", "step.artefacts.CallFunction.getFunctionId()"], "Fixed commit": "e027f47d45896f21d2045911511fc8209229af5f", "Url": "https://api.github.com/repos/exense/step", "Date": "2017-05-08T08:42:26Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((callPlan.getArtefactId()) != null) { step.core.artefacts.AbstractArtefact calledArtefact = a.get(callPlan.getArtefactId()); if (((calledArtefact != null) && ((calledArtefact.getAttributes()) != null)) && (calledArtefact.getAttributes().containsKey(\"name\"))) { name = calledArtefact.getAttributes().get(\"name\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7326/buggy-version/initialization.src.main.java.step.initialization.InitializationPlugin.java", "BodyUseAPI": ["step.artefacts.CallPlan.getArtefactId()", "step.core.artefacts.ArtefactAccessor.get(callPlan.getArtefactId())"], "Fixed commit": "e027f47d45896f21d2045911511fc8209229af5f", "Url": "https://api.github.com/repos/exense/step", "Date": "2017-05-08T08:42:26Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) instanceof net.ssehub.easy.varModel.model.values.ContainerValue) { oldValue = ((net.ssehub.easy.varModel.model.values.ContainerValue) (value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5616/buggy-version/Plugins.VarModel.Model.src.net.ssehub.easy.varModel.confModel.ToplevelVarConfigProvider.java", "BodyUseAPI": [], "Fixed commit": "1f210da22099151a4b60fa1307eda2956f7601f4", "Url": "https://api.github.com/repos/SSEHUB/EASyProducer", "Date": "2016-08-11T15:24:15Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().getBackStackEntryAt(((getSupportFragmentManager().getBackStackEntryCount()) - 1)).getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tag.equals(\"MainFragment\")) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3619/buggy-version/app.src.main.java.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9c737d276fb972dbcc64be05aea96fb88490f042", "Url": "https://api.github.com/repos/nirmal66/Karrier-Bay", "Date": "2017-03-02T10:33:26Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(segment.hasProperty(hu.bme.mit.trainbenchmark.benchmark.neo4j.queries.core.LENGTH))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5403/buggy-version/trainbenchmark-tool-neo4j.src.main.java.hu.bme.mit.trainbenchmark.benchmark.neo4j.queries.core.Neo4jCoreQueryPosLength.java", "BodyUseAPI": [], "Fixed commit": "8e660d4e0befd3c1a6d18e8292e2d98c03864045", "Url": "https://api.github.com/repos/FTSRG/trainbenchmark", "Date": "2016-11-21T06:01:09Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cmd.hasOption(\"maxEditDistance\")) { applicationOptions.setMaxEditDistance(java.lang.Integer.parseInt(cmd.getOptionValue(\"maxEditDistance\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/229/buggy-version/src.main.java.org.kidneyomics.rnaseq.ApplicationOptionProcessor.java", "BodyUseAPI": ["org.kidneyomics.rnaseq.ApplicationOptions.setMaxEditDistance(int)", "java.lang.Integer.parseInt(cmd.getOptionValue(\"maxEditDistance\"))", "org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)"], "Fixed commit": "cf5ee53c334aabdc08bc7233494a3561ca14e362", "Url": "https://api.github.com/repos/christopher-gillies/rna-seq-pipeline", "Date": "2015-12-17T18:08:42Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((homeFragment) != null) { homeFragment.share(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2563/buggy-version/app.src.main.java.com.merryapps.fileowl.ui.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "cf16b238b3f0f4aad4c11eda5b6d5f22b5969e57", "Url": "https://api.github.com/repos/PravSonawane/FileOwl-Android-App", "Date": "2016-12-27T10:50:45Z"},
{"Line": "=>821", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\u043a\u0432. \u041a\u043d\u044f\u0436\u0435\u0432\u043e \u0413\u0430\u0440\u0430 \u0421\u043e\u0444\u0438\u044f \u0441\u0435\u0432\u0435\u0440\".equals(directionName)) { directionName = \"\u043a\u0432. \u041a\u043d\u044f\u0436\u0435\u0432\u043e - \u0413\u0430\u0440\u0430 \u0421\u043e\u0444\u0438\u044f \u0441\u0435\u0432\u0435\u0440\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8617/buggy-version/sofbus24.src.main.java.bg.znestorov.sofbus24.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "dfa2d9e6091983207cbad5a40226b8805386cae0", "Url": "https://api.github.com/repos/zdravko-nestorov/Sofbus-24-GitHub", "Date": "2016-08-07T21:26:18Z"},
{"Line": "=>763", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\u0416\u043a. \u041c\u043b\u0430\u0434\u043e\u0441\u0442 1\".equals(directionName)) { directionName = \"\u0436.\u043a. \u041c\u043b\u0430\u0434\u043e\u0441\u0442 -1 - \u0436.\u043a. \u041b\u044e\u043b\u0438\u043d 1,2\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8617/buggy-version/sofbus24.src.main.java.bg.znestorov.sofbus24.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "dfa2d9e6091983207cbad5a40226b8805386cae0", "Url": "https://api.github.com/repos/zdravko-nestorov/Sofbus-24-GitHub", "Date": "2016-08-07T21:26:18Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["au.edu.unimelb.boldapp.MainActivity.findViewById(R.id.UserName)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (nameView == null) { android.util.Log.i(\"line49\", \"nameview null \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7569/buggy-version/BOLDApp.src.au.edu.unimelb.boldapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "33a2f36321db80754a8df957f277510b77fe68d8", "Url": "https://api.github.com/repos/langtech/aikuma", "Date": "2013-01-17T04:26:32Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((au.edu.unimelb.boldapp.GlobalState.getCurrentUser()) == null) { android.util.Log.i(\"line49\", \"GlobalState.getCurentUser() null \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7569/buggy-version/BOLDApp.src.au.edu.unimelb.boldapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "33a2f36321db80754a8df957f277510b77fe68d8", "Url": "https://api.github.com/repos/langtech/aikuma", "Date": "2013-01-17T04:26:32Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (localDescriptor != null) { binding.setDescriptor(org.jboss.byteman.rule.type.Type.parseFieldDescriptor(localDescriptor)); binding.setLocalIndex(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/557/buggy-version/agent.src.main.java.org.jboss.byteman.agent.adapter.RuleCheckMethodAdapter.java", "BodyUseAPI": ["org.jboss.byteman.rule.type.Type.parseFieldDescriptor(java.lang.String)", "org.jboss.byteman.rule.binding.Binding.setDescriptor(org.jboss.byteman.rule.type.Type.parseFieldDescriptor(localDescriptor))"], "Fixed commit": "3e33718f17a20f1c915ed01670c871aa741c7685", "Url": "https://api.github.com/repos/doctau/byteman", "Date": "2012-05-03T17:18:32Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getScene()) != null) gameObject.create();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7706/buggy-version/src.main.java.me.keybarricade.voxeltex.gameobject.GameObject.java", "BodyUseAPI": [], "Fixed commit": "69a2b68ad696202a75181b3fd833a9eb22a7b82b", "Url": "https://api.github.com/repos/timvisee/key-barricade", "Date": "2016-03-31T19:01:43Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mImage.getDrawable()) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9248/buggy-version/app.src.main.java.org.alexsem.color.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "54ea0a807d5b99d9f593764b890e255e62ce9ba2", "Url": "https://api.github.com/repos/ASemeniuk/recognizer", "Date": "2014-11-07T08:08:14Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (data.has(\"economy\")) me.gnat008.perworldinventory.data.serializers.EconomySerializer.deserialize(econ, data.getAsJsonObject(\"economy\"), player);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7103/buggy-version/src.main.java.me.gnat008.perworldinventory.data.serializers.PlayerSerializer.java", "BodyUseAPI": ["me.gnat008.perworldinventory.data.serializers.EconomySerializer.deserialize(net.milkbowl.vault.economy.Economy,data.getAsJsonObject(\"economy\"),org.bukkit.entity.Player)", "com.google.gson.JsonObject.getAsJsonObject(java.lang.String)"], "Fixed commit": "ab493ebfc7c65d8676e52dac8e97d8f0cf8bc014", "Url": "https://api.github.com/repos/wd40bomber7/PerWorldInventory", "Date": "2016-05-23T16:16:27Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.gnat008.perworldinventory.PerWorldInventory.getEconomy()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (econ == null) { plugin.getLogger().warning(\"Economy saving is turned on, but no economy found!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7103/buggy-version/src.main.java.me.gnat008.perworldinventory.data.serializers.PlayerSerializer.java", "BodyUseAPI": [], "Fixed commit": "ab493ebfc7c65d8676e52dac8e97d8f0cf8bc014", "Url": "https://api.github.com/repos/wd40bomber7/PerWorldInventory", "Date": "2016-05-23T16:16:27Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["opt.readValue(se.sics.p2ptoolbox.util.config.KConfigCore)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(aux.isPresent())) { return com.google.common.base.Optional.absent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6747/buggy-version/util.basic.src.main.java.se.sics.p2ptoolbox.util.config.KConfigCore.java", "BodyUseAPI": [], "Fixed commit": "235334d03a1ae74253e0291b445d526f619a6657", "Url": "https://api.github.com/repos/Decentrify/KompicsToolbox", "Date": "2015-10-28T09:59:42Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!FIRST_LETTER_MATCH) && ((res.getParts().get(0).getLemma().charAt(0)) == (wtr.getWord().charAt(0)))) { bestResult.clear(); bestResult.add(res); cw = res.getWeight(); guessCount = ngc; frequency = myFrequency; FIRST_LETTER_MATCH = true; }else if (((!FIRST_LETTER_MATCH) || ((res.getGlobalTags().get(\"FIRST_IN_SENTENCE\")) != null)) || ((res.getParts().get(0).getLemma().charAt(0)) == (wtr.getWord().charAt(0)))) { if (POS_MATCH) { if (res.getGlobalTags().containsKey(\"POS_MATCH\")) { if ((res.getWeight()) < cw) { bestResult.clear(); bestResult.add(res); cw = res.getWeight(); guessCount = ngc; frequency = myFrequency; FIRST_LETTER_MATCH = (res.getParts().get(0).getLemma().charAt(0)) == (wtr.getWord().charAt(0)); }else if ((res.getWeight()) == cw) { if (myFrequency > frequency) { bestResult.clear(); bestResult.add(res); guessCount = ngc; frequency = myFrequency; FIRST_LETTER_MATCH = (res.getParts().get(0).getLemma().charAt(0)) == (wtr.getWord().charAt(0)); }else if (myFrequency == frequency) { if (ngc > guessCount) { guessCount = ngc; bestResult.clear(); } if (ngc == guessCount) bestResult.add(res); } } } }else if (res.getGlobalTags().containsKey(\"POS_MATCH\")) { POS_MATCH = true; bestResult.clear(); bestResult.add(res); cw = res.getWeight(); guessCount = ngc; frequency = myFrequency; FIRST_LETTER_MATCH = (res.getParts().get(0).getLemma().charAt(0)) == (wtr.getWord().charAt(0)); }else if ((res.getWeight()) < cw) { bestResult.clear(); bestResult.add(res); cw = res.getWeight(); guessCount = ngc; frequency = myFrequency; FIRST_LETTER_MATCH = (res.getParts().get(0).getLemma().charAt(0)) == (wtr.getWord().charAt(0)); }else if ((res.getWeight()) == cw) { if (myFrequency > frequency) { bestResult.clear(); bestResult.add(res); guessCount = ngc; frequency = myFrequency; FIRST_LETTER_MATCH = (res.getParts().get(0).getLemma().charAt(0)) == (wtr.getWord().charAt(0)); }else if (myFrequency == frequency) { if (ngc > guessCount) { guessCount = ngc; bestResult.clear(); } if (ngc == guessCount) bestResult.add(res); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9128/buggy-version/src.main.java.fi.seco.lexical.combined.CombinedLexicalAnalysisService.java", "BodyUseAPI": ["res.getParts().get(0).getLemma()", "java.util.List<fi.seco.lexical.combined.Result>.add(fi.seco.lexical.combined.Result)", "fi.seco.lexical.combined.WordToResults.getWord()", "java.util.List<fi.seco.lexical.combined.Result>.add(fi.seco.lexical.combined.Result)", "fi.seco.lexical.combined.Result.getGlobalTags()", "fi.seco.lexical.combined.Result.getParts()", "java.util.List<fi.seco.lexical.combined.Result>.add(fi.seco.lexical.combined.Result)", "res.getParts().get(0).getLemma().charAt(int)", "fi.seco.lexical.combined.Result.getParts()", "wtr.getWord().charAt(int)", "res.getParts().get(0).getLemma()", "res.getParts().get(0).getLemma()", "res.getParts().get(0).getLemma()", "res.getGlobalTags().containsKey(java.lang.String)", "fi.seco.lexical.combined.Result.getParts()", "fi.seco.lexical.combined.Result.getWeight()", "res.getParts().get(0).getLemma()", "fi.seco.lexical.combined.Result.getGlobalTags()", "res.getParts().get(0).getLemma().charAt(int)", "wtr.getWord().charAt(int)", "res.getGlobalTags().containsKey(java.lang.String)", "fi.seco.lexical.combined.Result.getParts()", "java.util.List<fi.seco.lexical.combined.Result>.add(fi.seco.lexical.combined.Result)", "fi.seco.lexical.combined.Result.getWeight()", "fi.seco.lexical.combined.WordToResults.getWord()", "res.getParts().get(0).getLemma().charAt(int)", "res.getParts().get(int)", "fi.seco.lexical.combined.Result.getWeight()", "fi.seco.lexical.combined.WordToResults.getWord()", "java.util.List<fi.seco.lexical.combined.Result>.add(fi.seco.lexical.combined.Result)", "res.getParts().get(int)", "res.getParts().get(int)", "fi.seco.lexical.combined.WordToResults.getWord()", "res.getParts().get(int)", "fi.seco.lexical.combined.Result.getParts()", "res.getParts().get(int)", "res.getParts().get(0).getLemma().charAt(int)", "wtr.getWord().charAt(int)", "fi.seco.lexical.combined.WordToResults.getWord()", "java.util.List<fi.seco.lexical.combined.Result>.add(fi.seco.lexical.combined.Result)", "wtr.getWord().charAt(int)", "java.util.List<fi.seco.lexical.combined.Result>.add(fi.seco.lexical.combined.Result)", "fi.seco.lexical.combined.Result.getWeight()", "fi.seco.lexical.combined.Result.getGlobalTags()", "fi.seco.lexical.combined.Result.getWeight()", "res.getParts().get(0).getLemma()", "java.util.List<fi.seco.lexical.combined.Result>.add(fi.seco.lexical.combined.Result)", "res.getParts().get(int)", "wtr.getWord().charAt(int)", "fi.seco.lexical.combined.Result.getWeight()", "fi.seco.lexical.combined.Result.getWeight()", "res.getParts().get(0).getLemma().charAt(int)", "fi.seco.lexical.combined.WordToResults.getWord()", "fi.seco.lexical.combined.Result.getParts()", "wtr.getWord().charAt(int)", "fi.seco.lexical.combined.Result.getWeight()", "res.getGlobalTags().get(java.lang.String)", "res.getParts().get(0).getLemma().charAt(int)"], "Fixed commit": "be21770fb47c1561629ce828814922709e08a5e1", "Url": "https://api.github.com/repos/jiemakel/seco-lexicalanalysis", "Date": "2017-03-31T08:20:07Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pm == 0) { r = new com.jpexs.decompiler.flash.abc.avm2.model.NullAVM2Item(null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8791/buggy-version/libsrc.ffdec_lib.src.com.jpexs.decompiler.flash.abc.avm2.parser.script.PropertyAVM2Item.java", "BodyUseAPI": [], "Fixed commit": "ca31ef513d2325bb79812ac1787ed1f2c3687b6c", "Url": "https://api.github.com/repos/jindrapetrik/jpexs-decompiler", "Date": "2016-10-03T21:45:33Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((username == null) || (username == \"\")) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8640/buggy-version/src.main.java.com.twit.account.service.UserDetailsServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "0dd4d84b945f060851cbbdb4a436e6142cb4900c", "Url": "https://api.github.com/repos/superchaoran/mini-twit", "Date": "2016-10-27T21:22:58Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nfsdb.utils.Unsafe.getUnsafe().getByte(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b == '=') { name = (name == null) ? pool.next().of(_lo, (p - 1)) : name.of(_lo, (p - 1)); _lo = p; swallowSpace = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4005/buggy-version/nfsdb-core.src.main.java.com.nfsdb.net.http.Request.java", "BodyUseAPI": [], "Fixed commit": "810b64e41698ced617ce91e18e62bfde9c25b62c", "Url": "https://api.github.com/repos/bluestreak01/questdb", "Date": "2015-11-16T19:21:40Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((((worldObj.getRedstonePower(pos, EnumFacing.UP)) == 0) || ((worldObj.getRedstonePower(pos, EnumFacing.DOWN)) == 0)) || ((worldObj.getRedstonePower(pos, EnumFacing.NORTH)) == 0)) || ((worldObj.getRedstonePower(pos, EnumFacing.SOUTH)) == 0)) || ((worldObj.getRedstonePower(pos, EnumFacing.WEST)) == 0)) || ((worldObj.getRedstonePower(pos, EnumFacing.EAST)) == 0)) { outputEnergy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5029/buggy-version/src.main.java.com.vanhal.progressiveautomation.entities.capacitor.TileCapacitor.java", "BodyUseAPI": [], "Fixed commit": "156262046d6c0ee2990056801649ede6ec37333a", "Url": "https://api.github.com/repos/Vanhal/ProgressiveAutomation", "Date": "2017-01-29T13:24:39Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.lwjgl.input.Mouse.isGrabbed())) updateMousePosition(org.lwjgl.input.Mouse.getEventX(), ((Game.WINDOW.height) - (org.lwjgl.input.Mouse.getEventY())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5609/buggy-version/src.com.steftmax.larrys_epic_misadventures.input.MouseInput.java", "BodyUseAPI": [], "Fixed commit": "d7715a4858876db68baec53f8a27041427c16695", "Url": "https://api.github.com/repos/STEFTMAX/The-Epic-Misadventures-of-Larry", "Date": "2015-02-01T20:47:16Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((c.getTolerance()) != null) { if (c.getTolerance().substring(((c.getTolerance().length()) - 2)).equals(\"--\")) tolerance = 0; else tolerance = java.lang.Integer.parseInt(c.getTolerance().substring(0, ((c.getTolerance().length()) - 2))); }else tolerance = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2128/buggy-version/Costinator.src.de.bandb.costinator.database.entities.TCostelement.java", "BodyUseAPI": [], "Fixed commit": "e8ccd608278b3900ebd1f5d5849d478b56205adc", "Url": "https://api.github.com/repos/MathiasBicker/costinator", "Date": "2014-03-02T21:32:31Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_OK)) { android.os.Bundle b = data.getExtras(); de.bandb.costinator.customadapter.CostelementListViewItem element = ((de.bandb.costinator.customadapter.CostelementListViewItem) (b.get(NewCostelement.COSTELEMENTTAG))); addCostelement(checkCurrency(element)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2128/buggy-version/Costinator.src.de.bandb.costinator.Costgroup.java", "BodyUseAPI": [], "Fixed commit": "e8ccd608278b3900ebd1f5d5849d478b56205adc", "Url": "https://api.github.com/repos/MathiasBicker/costinator", "Date": "2014-03-02T21:32:31Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (modelClass.getImgPath().equals(\"homer\")) { android.widget.Toast.makeText(getActivity(), R.string.toast_some_error, Toast.LENGTH_SHORT); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8959/buggy-version/ExerciseAndroid.ContactsBook.src.com.example.diary.ShowFragment.java", "BodyUseAPI": [], "Fixed commit": "1dd7e03efc03ccc95c3faaf2a91894da4ccf958a", "Url": "https://api.github.com/repos/lelelelem/AndroidExers", "Date": "2014-06-23T07:36:56Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((striker.getType().equals(\"dead\")) || (struck.getType().equals(\"dead\"))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4681/buggy-version/backend.src.main.Arena.java", "BodyUseAPI": [], "Fixed commit": "5374dbd315d205cb21b521300ad993afb9c1ddb5", "Url": "https://api.github.com/repos/dylanswiggett/DubHacksRPS", "Date": "2014-10-18T20:53:20Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.getTurnController().getOpponent().getPlayerDeck().getDrawDeck().size()) > 0) { card0 = context.getTurnController().getOpponent().getPlayerDeck().getDrawDeck().get(0); }else { context.getTurnController().getOpponent().getPlayerDeck().shuffleDeck(); card0 = context.getTurnController().getOpponent().getPlayerDeck().getDrawDeck().get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4054/buggy-version/src.main.cards.ThiefCard.java", "BodyUseAPI": ["context.getTurnController().getOpponent().getPlayerDeck().getDrawDeck()", "context.getTurnController().getOpponent()", "context.getTurnController().getOpponent().getPlayerDeck().getDrawDeck()", "context.getTurnController().getOpponent().getPlayerDeck().getDrawDeck().get(int)", "context.getTurnController().getOpponent().getPlayerDeck()", "context.getTurnController().getOpponent()", "context.getTurnController().getOpponent().getPlayerDeck()", "context.getTurnController().getOpponent().getPlayerDeck()", "context.getTurnController().getOpponent().getPlayerDeck().shuffleDeck()", "context.getTurnController().getOpponent().getPlayerDeck().getDrawDeck().get(int)", "main.GameContext.getTurnController()", "context.getTurnController().getOpponent()", "main.GameContext.getTurnController()", "main.GameContext.getTurnController()"], "Fixed commit": "30ebe68c90da305011f63c73a6ea8add9cc390c5", "Url": "https://api.github.com/repos/walamoonbeam/DominiotReally", "Date": "2014-05-22T23:26:35Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.getTurnController().getOpponent().getPlayerDeck().getDrawDeck().size()) > 0) { card1 = context.getTurnController().getOpponent().getPlayerDeck().getDrawDeck().get(1); }else { context.getTurnController().getOpponent().getPlayerDeck().shuffleDeck(); card1 = context.getTurnController().getOpponent().getPlayerDeck().getDrawDeck().get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4054/buggy-version/src.main.cards.ThiefCard.java", "BodyUseAPI": ["main.GameContext.getTurnController()", "context.getTurnController().getOpponent()", "context.getTurnController().getOpponent().getPlayerDeck().getDrawDeck().get(int)", "context.getTurnController().getOpponent().getPlayerDeck().getDrawDeck().get(int)", "context.getTurnController().getOpponent()", "context.getTurnController().getOpponent().getPlayerDeck()", "context.getTurnController().getOpponent().getPlayerDeck().getDrawDeck()", "main.GameContext.getTurnController()", "main.GameContext.getTurnController()", "context.getTurnController().getOpponent()", "context.getTurnController().getOpponent().getPlayerDeck().shuffleDeck()", "context.getTurnController().getOpponent().getPlayerDeck()", "context.getTurnController().getOpponent().getPlayerDeck()", "context.getTurnController().getOpponent().getPlayerDeck().getDrawDeck()"], "Fixed commit": "30ebe68c90da305011f63c73a6ea8add9cc390c5", "Url": "https://api.github.com/repos/walamoonbeam/DominiotReally", "Date": "2014-05-22T23:26:35Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((contentType.startsWith(\"text/plain\")) && (!(extContentType.equals(\"application/octet-stream\")))) contentType = extContentType;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4446/buggy-version/interject-webapp.app.models.Inspection.java", "BodyUseAPI": [], "Fixed commit": "953f0845ce0f7120192bd3372a2c0aa3582307e0", "Url": "https://api.github.com/repos/ukwa/interject", "Date": "2014-01-30T23:28:19Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getItemInHand()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (stack == null) { p.sendMessage(((org.bukkit.ChatColor.RED) + \"You need to be holding an ItemStack.\")); return true; }else if (reinType == null) { p.sendMessage(((org.bukkit.ChatColor.RED) + \"That is not a ReinforcementType.\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5823/buggy-version/src.vg.civcraft.mc.citadel.command.commands.Fortification.java", "BodyUseAPI": [], "Fixed commit": "1eddc46195446f6fe5cab7373a1fef5b9d9568c9", "Url": "https://api.github.com/repos/Civcraft/Citadel", "Date": "2015-02-01T18:45:23Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Optional<java.util.HashMap<seedu.addressbook.AddressBook.PersonProperty, java.lang.String>>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (seedu.addressbook.AddressBook.ALL_PERSONS.contains(personToAdd)) { return seedu.addressbook.AddressBook.MESSAGE_DUPLICATE_ENTRY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2126/buggy-version/addressbook-level1-master.src.seedu.addressbook.AddressBook.java", "BodyUseAPI": [], "Fixed commit": "e10bca7fe31ce1eed0b35f1210063a960faa4ace", "Url": "https://api.github.com/repos/ALim95/AddressBook", "Date": "2017-08-28T14:27:40Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((notifications.get(\"victims\")) == null) || ((notifications.get(\"victims\")) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/402/buggy-version/src.main.java.ltg.hg.HungerGamesMasterBot.java", "BodyUseAPI": [], "Fixed commit": "a49266164022b2c8839cc55b3eb44f11d5868482", "Url": "https://api.github.com/repos/ltg-uic/hg-java-master-bot", "Date": "2013-10-01T19:19:12Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (distance <= distance_max) { java.lang.String friendID = tempF.getUser().getID(); newFriends.addAll(getAllImmediateFriends(friendID, date, distance, status)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7715/buggy-version/SocialNetwork.java", "BodyUseAPI": ["java.util.Queue<Friend>.addAll(java.util.LinkedList<Friend>)", "SocialNetwork.getAllImmediateFriends(java.lang.String,java.sql.Date,int,SocialNetworkStatus)"], "Fixed commit": "45ac26deee80b1261891e911009411536af026cb", "Url": "https://api.github.com/repos/ghodulik95/293_HW2", "Date": "2014-09-26T19:31:21Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((level) < 100) { totalExpForNextLevel = species.calculateExp(((byte) ((level) + 1))); }else { totalExpForNextLevel = species.calculateExp(((byte) (100))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6051/buggy-version/src.pokemon.core.Pokemon.java", "BodyUseAPI": [], "Fixed commit": "265de441848c5bd728f25414a464375c8d6ed9b1", "Url": "https://api.github.com/repos/Jdog653/Pokemon", "Date": "2013-05-14T15:36:19Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (unpack) { org.avuna.httpd.AvunaHTTPD.mainConfig.save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9190/buggy-version/src.org.avuna.httpd.AvunaHTTPD.java", "BodyUseAPI": [], "Fixed commit": "57f9d7b49c5522b6773613c25593fbc073e24556", "Url": "https://api.github.com/repos/Protryon/AvunaHTTPD-Java", "Date": "2015-04-03T20:34:05Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg instanceof org.zstack.compute.vm.APIGetInterdependentL3NetworksImagesMsg) { validate(((org.zstack.compute.vm.APIGetInterdependentL3NetworksImagesMsg) (msg))); }else if (msg instanceof org.zstack.compute.vm.APIUpdateVmInstanceMsg) { validate(((org.zstack.compute.vm.APIUpdateVmInstanceMsg) (msg))); }else if (msg instanceof org.zstack.compute.vm.APISetVmConsolePasswordMsg) { validate(((org.zstack.compute.vm.APISetVmConsolePasswordMsg) (msg))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5384/buggy-version/compute.src.main.java.org.zstack.compute.vm.VmInstanceApiInterceptor.java", "BodyUseAPI": [], "Fixed commit": "6393f3d7dae973c3e038cdfbf26b79748b088c4f", "Url": "https://api.github.com/repos/camilesing/zstack", "Date": "2017-03-13T06:33:38Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((table[target.getRow()][target.getCol()]) != null) if ((table[source.getRow()][source.getCol()].getPlayerRole()) == (table[target.getRow()][target.getCol()].getPlayerRole())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5514/buggy-version/src.shogi.board.GameBoard.java", "BodyUseAPI": ["table[source.getRow()][source.getCol()].getPlayerRole()", "table[target.getRow()][target.getCol()].getPlayerRole()", "shogi.board.Position.getCol()", "shogi.board.Position.getRow()"], "Fixed commit": "c9d9dae940bd125c3b685347607d00da70f3aef0", "Url": "https://api.github.com/repos/poorvatanProjects/shogi", "Date": "2016-04-09T09:55:38Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.learnpad.ca.analysis.Plugin.getSentenceFromNode(java.util.Set<eu.learnpad.ca.rest.data.Annotation>,eu.learnpad.ca.rest.data.Node,eu.learnpad.ca.rest.data.Node)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sentencedef.size()) == 1) { gate.Annotation simplesentence = sentencedef.iterator().next(); a.setStartSentence_Offset(simplesentence.getStartNode().getOffset().intValue()); a.setEndSentence_Offset(simplesentence.getEndNode().getOffset().intValue()); }else { if ((sentencedef.size()) > 1) { int g = 0; for (gate.Annotation msentence : sentencedef) { if (g == 0) { a.setStartSentence_Offset(msentence.getStartNode().getOffset().intValue()); } g++; if (g == (sentencedef.size())) { a.setEndSentence_Offset(msentence.getEndNode().getOffset().intValue()); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7444/buggy-version/src.main.java.eu.learnpad.ca.analysis.Plugin.java", "BodyUseAPI": ["java.util.Set<eu.learnpad.ca.rest.data.Annotation>.size()", "java.util.Set<eu.learnpad.ca.rest.data.Annotation>.iterator()", "sentencedef.iterator().next()", "java.util.Set<eu.learnpad.ca.rest.data.Annotation>.size()"], "Fixed commit": "d42ede275214823f9a3b6172e3ccf0f72754ea85", "Url": "https://api.github.com/repos/ISTI-FMT-LearnPAd/ContentAnalysisComponent", "Date": "2016-05-27T21:44:04Z"},
{"Line": "=>1870", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aValue == o) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8314/buggy-version/pamela-core.src.main.java.org.openflexo.model.factory.ProxyMethodHandler.java", "BodyUseAPI": [], "Fixed commit": "107d1aa56d1ef94ad68e5543491b69fa3dc007ca", "Url": "https://api.github.com/repos/openflexo-team/pamela", "Date": "2014-12-20T15:10:33Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(edu.upenn.cis455.xpath.XPathParser.matchToken(tokens.get((next++)), edu.upenn.cis455.xpath.XPathParser.symbol.DoubleQuote))) { test = null; }else { if (!(edu.upenn.cis455.xpath.XPathParser.matchToken(tokens.get((next++)), edu.upenn.cis455.xpath.XPathParser.symbol.CloseParen))) { test = null; }else { test.setAfterTest(next); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3381/buggy-version/src.edu.upenn.cis455.xpath.XPathParser.java", "BodyUseAPI": ["edu.upenn.cis455.xpath.XPathParser.matchToken(java.lang.String,edu.upenn.cis455.xpath.XPathParser.symbol)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "3803c01a1d95e7e4808761dd331082f65d54a2b7", "Url": "https://api.github.com/repos/mishra14/RSS-XPathAggregator", "Date": "2015-10-16T23:30:54Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((micdoodle8.mods.crossbowmod.Util.hasHeavyMech(itemstack)) || (micdoodle8.mods.crossbowmod.Util.hasMediumMech(itemstack))) || (micdoodle8.mods.crossbowmod.Util.hasLightMech(itemstack))) && (mouseHeld)) { itemstack = shoot(itemstack, world, entityplayer); }else if ((((mouseHeld) && (!(lastMouseHeld))) && (!(micdoodle8.mods.crossbowmod.Util.hasBasicScope(itemstack)))) && (!(micdoodle8.mods.crossbowmod.Util.hasLongRangeScope(itemstack)))) { itemstack = shoot(itemstack, world, entityplayer); }else if ((((micdoodle8.mods.crossbowmod.Util.hasBasicScope(itemstack)) || (micdoodle8.mods.crossbowmod.Util.hasLongRangeScope(itemstack))) && (lastMouseHeld)) && (!(mouseHeld))) { itemstack = shoot(itemstack, world, entityplayer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8133/buggy-version/src.common.micdoodle8.mods.crossbowmod.ItemCrossbow.java", "BodyUseAPI": ["micdoodle8.mods.crossbowmod.ItemCrossbow.shoot(net.minecraft.src.ItemStack,net.minecraft.src.World,net.minecraft.src.EntityPlayer)", "micdoodle8.mods.crossbowmod.Util.hasLongRangeScope(net.minecraft.src.ItemStack)", "micdoodle8.mods.crossbowmod.ItemCrossbow.shoot(net.minecraft.src.ItemStack,net.minecraft.src.World,net.minecraft.src.EntityPlayer)", "micdoodle8.mods.crossbowmod.Util.hasBasicScope(net.minecraft.src.ItemStack)"], "Fixed commit": "f0df2d8f66409a1e5ff7b48a6748739e91883895", "Url": "https://api.github.com/repos/micdoodle8/Crossbow_Mod_2", "Date": "2012-11-22T06:58:04Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loadBike) { getIntent().putParcelableArrayListExtra(\"bikeStations\", ((java.util.ArrayList<fr.cph.chicago.entity.BikeStation>) (bikeStations))); onNewIntent(getIntent()); favoritesFragment.setBikeStations(bikeStations); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8536/buggy-version/ChicagoTracker.src.fr.cph.chicago.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "178329d799b782261ca8197f62fb614d719c3a0c", "Url": "https://api.github.com/repos/carlphilipp/Chicago-Tracker", "Date": "2014-07-08T03:08:12Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBreak) android.widget.Toast.makeText(getActivity(), \"Time to take a break\", Toast.LENGTH_LONG).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6469/buggy-version/src.com.sharif.PomoDo.PomodoroFragment.java", "BodyUseAPI": [], "Fixed commit": "1cf4c1a7cd46f714d10d6a5657f95ff3f8f23a35", "Url": "https://api.github.com/repos/mina-rf/Pomo.Do", "Date": "2016-07-14T17:22:26Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (projectIsNotThere) { com.attask.jenkins.scaffolding.ScaffoldAction.cloneJob(jobToClone, newName, variables); jobToClone.save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5167/buggy-version/src.main.java.com.attask.jenkins.scaffolding.ScaffoldAction.java", "BodyUseAPI": [], "Fixed commit": "c2d9b7d120f22778210c6686e9ef515d57ff8694", "Url": "https://api.github.com/repos/bmondido/Templating", "Date": "2012-08-30T20:07:14Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.intuit.karate.JsonUtils.pathExists(doc, left))) { com.intuit.karate.JsonUtils.createParents(doc, left); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6239/buggy-version/karate-core.src.main.java.com.intuit.karate.JsonUtils.java", "BodyUseAPI": ["com.intuit.karate.JsonUtils.createParents(com.jayway.jsonpath.DocumentContext,java.lang.String)"], "Fixed commit": "e9758d6ae29c504709f5a2c89b59e303dad06081", "Url": "https://api.github.com/repos/intuit/karate", "Date": "2017-09-10T16:44:19Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["recievedDocument.getPrimary_document_id().getDomain()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (newDocumentIdDomain != null) { if (newDocumentIdDomain.equals(oldDocument.getPrimary_document_id().getDomain())) { newDocumentID.setDomain(oldDocument.getPrimary_document_id().getDomain()); }else { newDocumentID.setDomain(newDocumentIdDomain); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6846/buggy-version/src.main.java.org.blub.controller.DocumentController.java", "BodyUseAPI": ["org.blub.domain.Document_id.setDomain(org.blub.domain.Document_id_domain)", "org.blub.domain.Document_id_domain.equals(oldDocument.getPrimary_document_id().getDomain())"], "Fixed commit": "053f28758eee10c7c5c60a12ab0b2ede33c896ab", "Url": "https://api.github.com/repos/neo8ba8dms/neo_ba_dms", "Date": "2016-03-06T15:39:57Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((def.getThrustSpeed()) < 800000) { beh.probeForBehavior(org.jtrfp.trcl.beh.phy.HasPropulsion.class).setPropulsion(0); beh.probeForBehavior(org.jtrfp.trcl.beh.phy.VelocityDragBehavior.class).setEnable(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4573/buggy-version/src.main.java.org.jtrfp.trcl.obj.DEFObject.java", "BodyUseAPI": [], "Fixed commit": "53e01d387741463da6e50c4afca054ba3fe7877f", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-03-04T04:21:24Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ContactListActivity.mTwoPane)) { new com.truszkowski.rafal.contacts.app.ContactDetailFragment.GetContactImage().execute(mContact.smallImageURL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2157/buggy-version/app.src.main.java.com.truszkowski.rafal.contacts.app.ContactDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "4b8954e8102621c0b8a75f70535f41643df4c5c5", "Url": "https://api.github.com/repos/rafaltrus/Solstice-Mobile", "Date": "2015-06-03T20:34:26Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ContactListActivity.mTwoPane) { new com.truszkowski.rafal.contacts.app.ContactDetailFragment.GetContactImage().execute(jsonContactDetails.getString(\"largeImageURL\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2157/buggy-version/app.src.main.java.com.truszkowski.rafal.contacts.app.ContactDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "4b8954e8102621c0b8a75f70535f41643df4c5c5", "Url": "https://api.github.com/repos/rafaltrus/Solstice-Mobile", "Date": "2015-06-03T20:34:26Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((args != null) && ((args.length) > 0)) && (args[0].equals(\"spring\"))) { com.epam.jmp.tasks.jms.ServerRunner.runSpringImplementation(); }else { com.epam.jmp.tasks.jms.ServerRunner.runJavaImplementation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/785/buggy-version/10-JMS.jms-synchronous-server.src.main.java.com.epam.jmp.tasks.jms.ServerRunner.java", "BodyUseAPI": [], "Fixed commit": "05f92599c559efe0b9677259a9833eabccbfe4de", "Url": "https://api.github.com/repos/vliashchuk/Vital-Liashchuk-Group-1", "Date": "2015-01-23T10:24:03Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((type[i]) == null) || ((type[i]) == (pers.ywheel.fsql.parser.impl.Load.ColumnType.Integer))) { try { java.lang.Integer.parseInt(rowData.get(index)[i]); type[i] = pers.ywheel.fsql.parser.impl.Load.ColumnType.Integer; } catch (java.lang.NumberFormatException e1) { try { java.lang.Double.parseDouble(rowData.get(index)[i]); type[i] = pers.ywheel.fsql.parser.impl.Load.ColumnType.Double; } catch (java.lang.NumberFormatException e2) { type[i] = pers.ywheel.fsql.parser.impl.Load.ColumnType.String; } } catch (java.lang.Exception e) { java.lang.System.out.println(e.getMessage()); } }else if ((type[i]) == (pers.ywheel.fsql.parser.impl.Load.ColumnType.Double)) { try { java.lang.Double.parseDouble(rowData.get(index)[i]); type[i] = pers.ywheel.fsql.parser.impl.Load.ColumnType.Double; } catch (java.lang.NumberFormatException e2) { type[i] = pers.ywheel.fsql.parser.impl.Load.ColumnType.String; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/5274/buggy-version/src.pers.ywheel.fsql.parser.impl.Load.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "c1f783e16d82ad30185752641db3201b266e7dfe", "Url": "https://api.github.com/repos/ywheel/fsql", "Date": "2014-07-07T17:15:01Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (cursor == null) { return uri.getPath(); }else { int columnIndex = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA); cursor.moveToFirst(); mResult = cursor.getString(columnIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4311/buggy-version/app.src.main.java.com.vsevolod.swipe.addphoto.config.PathConverter.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA)", "android.database.Cursor.moveToFirst()", "android.database.Cursor.getString(int)"], "Fixed commit": "9fac34d14f3122473cdb8968e9f999311d97b104", "Url": "https://api.github.com/repos/Usevalad/HyperFax", "Date": "2017-06-09T11:09:58Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (editPersonDescriptor.getFavourite().isPresent()) { seedu.address.logic.commands.EditCommand.areFieldsAllPrivate = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4961/buggy-version/src.main.java.seedu.address.logic.commands.EditCommand.java", "BodyUseAPI": [], "Fixed commit": "eb065bd12a2aeefe6ec2f44f3abed209d7efc54c", "Url": "https://api.github.com/repos/CS2103AUG2017-W09-B2/main", "Date": "2017-10-28T16:25:59Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (editPersonDescriptor.getTags().isPresent()) { seedu.address.logic.commands.EditCommand.areFieldsAllPrivate = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4961/buggy-version/src.main.java.seedu.address.logic.commands.EditCommand.java", "BodyUseAPI": [], "Fixed commit": "eb065bd12a2aeefe6ec2f44f3abed209d7efc54c", "Url": "https://api.github.com/repos/CS2103AUG2017-W09-B2/main", "Date": "2017-10-28T16:25:59Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((searchPos.x) == (mapPos.x)) && ((searchPos.y) == (mapPos.y))) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8866/buggy-version/core.src.com.gdx.Objects.GameObjects.GameAgents.AgentStratagys.RaceStratagy.java", "BodyUseAPI": [], "Fixed commit": "d5e5cb6a1613730ad06ee92ca394b3f37a636239", "Url": "https://api.github.com/repos/healyou/GdxGame", "Date": "2016-01-01T13:40:49Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["moa.tasks.Anonymize.getPreparedClassOption(moa.options.ClassOption)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (filter.isEvaluationEnabled()) { writeToFile(evaluationWriter, filter.getEvaluation().getEvaluationCSVHeader()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6631/buggy-version/src.main.java.moa.tasks.Anonymize.java", "BodyUseAPI": ["moa.tasks.Anonymize.writeToFile(java.io.Writer,filter.getEvaluation().getEvaluationCSVHeader())", "filter.getEvaluation().getEvaluationCSVHeader()", "moa.streams.filters.privacy.PrivacyFilter.getEvaluation()"], "Fixed commit": "ecb60019d7f8e12a2f28ee2f1a13b1383484f46e", "Url": "https://api.github.com/repos/necavit-fib/moa-ppsm", "Date": "2017-03-07T21:34:10Z"},
{"Line": "=>604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.druid.indexing.overlord.RemoteTaskRunnerWorkQueue.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (workItem != null) { taskComplete(workItem, null, io.druid.indexing.common.TaskStatus.failure(taskId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8727/buggy-version/indexing-service.src.main.java.io.druid.indexing.overlord.RemoteTaskRunner.java", "BodyUseAPI": ["io.druid.indexing.overlord.RemoteTaskRunner.3.taskComplete(io.druid.indexing.overlord.RemoteTaskRunnerWorkItem,<nulltype>,io.druid.indexing.common.TaskStatus.failure(taskId))"], "Fixed commit": "9669e79df23653a78a283b4087ab710dfe8664b0", "Url": "https://api.github.com/repos/navis/druid", "Date": "2016-04-28T17:28:00Z"},
{"Line": "=>718", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (immutableZkWorker.isPresent()) { if ((workersWithUnacknowledgedTask.putIfAbsent(immutableZkWorker.get().getWorker().getHost(), task.getId())) == null) { assignedWorker = zkWorkers.get(immutableZkWorker.get().getWorker().getHost()); return announceTask(task, assignedWorker, taskRunnerWorkItem); }else { io.druid.indexing.overlord.RemoteTaskRunner.log.debug(\"Lost race to run task [%s] on worker [%s]. Workers to ack tasks are [%s].\", task.getId(), immutableZkWorker.get().getWorker().getHost(), workersWithUnacknowledgedTask); } }else { io.druid.indexing.overlord.RemoteTaskRunner.log.debug(\"Unsuccessful task-assign attempt for task [%s] on workers [%s]. Workers to ack tasks are [%s].\", task.getId(), zkWorkers.values(), workersWithUnacknowledgedTask); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8727/buggy-version/indexing-service.src.main.java.io.druid.indexing.overlord.RemoteTaskRunner.java", "BodyUseAPI": ["com.google.common.base.Optional<io.druid.indexing.overlord.ImmutableWorkerInfo>.get()", "immutableZkWorker.get().getWorker().getHost()", "java.util.concurrent.ConcurrentMap<java.lang.String, io.druid.indexing.overlord.ZkWorker>.get(immutableZkWorker.get().getWorker().getHost())", "com.google.common.base.Optional<io.druid.indexing.overlord.ImmutableWorkerInfo>.get()", "immutableZkWorker.get().getWorker()", "java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.String>.putIfAbsent(immutableZkWorker.get().getWorker().getHost(),task.getId())", "immutableZkWorker.get().getWorker()", "immutableZkWorker.get().getWorker().getHost()", "immutableZkWorker.get().getWorker().getHost()", "com.google.common.base.Optional<io.druid.indexing.overlord.ImmutableWorkerInfo>.get()", "immutableZkWorker.get().getWorker()", "com.metamx.emitter.EmittingLogger.debug(java.lang.String,task.getId(),immutableZkWorker.get().getWorker().getHost(),java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.String>)"], "Fixed commit": "9669e79df23653a78a283b4087ab710dfe8664b0", "Url": "https://api.github.com/repos/navis/druid", "Date": "2016-04-28T17:28:00Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_inetChan.isActive()) gate_to_inet(p);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4223/buggy-version/src.Igate.java", "BodyUseAPI": [], "Fixed commit": "30f18b98fd1926a13eeeb03761d7e0678b8c6867", "Url": "https://api.github.com/repos/PolaricServer/aprsd", "Date": "2015-12-21T19:30:36Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFragmentManager().findFragmentByTag(Form.NAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (form != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4890/buggy-version/app.src.main.java.scs2682.exercise06.AppActivity.java", "BodyUseAPI": [], "Fixed commit": "efaa16278ee03586aa90cb81b229bb9cb382cd88", "Url": "https://api.github.com/repos/DanielKulesza/AndroidSessionMid", "Date": "2016-11-23T23:13:42Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["online.pizzacrust.fernfertilizier.ClassFile.filter(StandardFilter.FLOAT)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((newFloats.length) > 0) { diffMap.setNotApplicable(StandardFilter.FLOAT); }else if ((oldFloats.length) > 0) { online.pizzacrust.fernfertilizier.math.ArrayPercentageCalculator<java.lang.Float> floatCalculator = new online.pizzacrust.fernfertilizier.math.ArrayPercentageCalculator(toArray(newFloats), toArray(oldFloats)); diffMap.set(StandardFilter.FLOAT, floatCalculator.calculate()); }else { diffMap.setNotApplicable(StandardFilter.FLOAT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/966/buggy-version/src.main.java.online.pizzacrust.fernfertilizier.ClassComparator.java", "BodyUseAPI": ["online.pizzacrust.fernfertilizier.ClassComparator.toArray(java.lang.Float[])"], "Fixed commit": "95c81f1aee60a3e6e9a1613c2002778ef80d98c6", "Url": "https://api.github.com/repos/PizzaCrust/Fernfertilizer", "Date": "2016-12-17T13:45:30Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["online.pizzacrust.fernfertilizier.ClassFile.filter(StandardFilter.STRING)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((newStrings.length) > 0) { diffMap.setNotApplicable(StandardFilter.STRING); }else if ((oldStrings.length) > 0) { online.pizzacrust.fernfertilizier.math.ArrayPercentageCalculator<java.lang.String> stringCalculator = new online.pizzacrust.fernfertilizier.math.ArrayPercentageCalculator(toArray(newStrings), toArray(oldStrings)); diffMap.set(StandardFilter.STRING, stringCalculator.calculate()); }else { diffMap.setNotApplicable(StandardFilter.STRING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/966/buggy-version/src.main.java.online.pizzacrust.fernfertilizier.ClassComparator.java", "BodyUseAPI": ["online.pizzacrust.fernfertilizier.ClassComparator.toArray(java.lang.String[])"], "Fixed commit": "95c81f1aee60a3e6e9a1613c2002778ef80d98c6", "Url": "https://api.github.com/repos/PizzaCrust/Fernfertilizer", "Date": "2016-12-17T13:45:30Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == holder) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2822/buggy-version/app.src.main.java.com.yat3s.calendar.calendar.CalendarAdapter.java", "BodyUseAPI": [], "Fixed commit": "e49be1fa6544235ae42bc66fb7c4b669cdfafe85", "Url": "https://api.github.com/repos/Yat3s/Calendar", "Date": "2017-05-18T15:50:03Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getServer().getOnlinePlayers()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((players.size()) > 0) { java.util.ArrayList<java.lang.String> displayNames = new java.util.ArrayList<java.lang.String>(players.size()); for (org.bukkit.entity.Player player : players) { displayNames.add(((player.getDisplayName()) + (org.bukkit.ChatColor.RESET))); } sender.sendMessage(java.lang.String.join(\", \", displayNames)); }else { sender.sendMessage(((org.bukkit.ChatColor.YELLOW) + \"No players online\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7772/buggy-version/AdminTools.src.main.java.me.teamalpha5441.mcplugins.admintools.commands.OnlineCommand.java", "BodyUseAPI": ["java.util.Collection<? extends org.bukkit.entity.Player>.size()"], "Fixed commit": "808edbc35a387805112adc3a8e293f89a13299c9", "Url": "https://api.github.com/repos/teamalpha5441/MCPlugins", "Date": "2015-11-01T12:51:52Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pos != (-1)) return onPlayLongClick(v, pos);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4787/buggy-version/app.src.main.java.org.fasola.fasolaminutes.CursorListFragment.java", "BodyUseAPI": ["org.fasola.fasolaminutes.CursorListFragment.onPlayLongClick(android.view.View,int)"], "Fixed commit": "00e0b09899d14af8a90877c8c8ff88d1504f2c97", "Url": "https://api.github.com/repos/mrichards42/fasola_android", "Date": "2016-01-21T19:21:47Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pos != (-1)) onPlayClick(v, pos);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4787/buggy-version/app.src.main.java.org.fasola.fasolaminutes.CursorListFragment.java", "BodyUseAPI": ["org.fasola.fasolaminutes.CursorListFragment.onPlayClick(android.view.View,int)"], "Fixed commit": "00e0b09899d14af8a90877c8c8ff88d1504f2c97", "Url": "https://api.github.com/repos/mrichards42/fasola_android", "Date": "2016-01-21T19:21:47Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (results[0].equalsIgnoreCase(\"Player\")) { org.bukkit.entity.Player player = org.bukkit.Bukkit.getPlayer(results[1].replace(\" \", \"\")); shieldOwner = new net.sqdmc.bubbleshield.ShieldOwnerPlayer(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1322/buggy-version/src.net.sqdmc.bubbleshield.BSConfiguration.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "org.bukkit.Bukkit.getPlayer(java.lang.String)"], "Fixed commit": "bfff268fd86ac46339676a3907d78affd8e33ae6", "Url": "https://api.github.com/repos/MinecraftWars/BubbleShield", "Date": "2012-11-05T07:30:58Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (apiSource.isUseJAXBAnnotationProcessor()) { objectMapper.registerModule(new com.fasterxml.jackson.module.jaxb.JaxbAnnotationModule()); objectMapper.registerModule(new com.fasterxml.jackson.module.jaxb.JaxbAnnotationModule()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4544/buggy-version/src.main.java.com.github.kongchen.swagger.docgen.AbstractDocumentSource.java", "BodyUseAPI": [], "Fixed commit": "53b1412c158a96cf25c95accd4102c8316dc4682", "Url": "https://api.github.com/repos/mdzhigarov/swagger-maven-plugin", "Date": "2015-11-24T07:57:22Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (di == di) tmpVarphi[i] = 1 - (1 / (1 + di)); else tmpVarphi[i] = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/892/buggy-version/src.multinomial.MixtureUpdate.java", "BodyUseAPI": [], "Fixed commit": "95c42410029e324c25edf0dca03b8a7f843f3940", "Url": "https://api.github.com/repos/YpGu/15A", "Date": "2015-04-02T23:51:45Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pi[i]) == 1) { tmpVarphi[i] = 1; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/892/buggy-version/src.multinomial.MixtureUpdate.java", "BodyUseAPI": [], "Fixed commit": "95c42410029e324c25edf0dca03b8a7f843f3940", "Url": "https://api.github.com/repos/YpGu/15A", "Date": "2015-04-02T23:51:45Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (soundSwitch.isChecked()) { if ((player) != null) player.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4800/buggy-version/app.src.main.java.com.awesome.scottquach.proximitypush_upcounter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "87bbb3af468b5ea922edeac3665e7d9df2022a25", "Url": "https://api.github.com/repos/scottquach/Proximity-Push-Up-Counter", "Date": "2017-09-09T20:00:35Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) player.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4800/buggy-version/app.src.main.java.com.awesome.scottquach.proximitypush_upcounter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "87bbb3af468b5ea922edeac3665e7d9df2022a25", "Url": "https://api.github.com/repos/scottquach/Proximity-Push-Up-Counter", "Date": "2017-09-09T20:00:35Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) player.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/4800/buggy-version/app.src.main.java.com.awesome.scottquach.proximitypush_upcounter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "87bbb3af468b5ea922edeac3665e7d9df2022a25", "Url": "https://api.github.com/repos/scottquach/Proximity-Push-Up-Counter", "Date": "2017-09-09T20:00:35Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.kniese.payslip.calculator.ValueType, java.lang.String>.get(ValueType.TAX_MAX)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(maxValue)) { taxMax = new java.math.BigDecimal(maxValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8331/buggy-version/src.main.java.com.kniese.payslip.calculator.CalcTax.java", "BodyUseAPI": [], "Fixed commit": "73af1ff81efcba9a11b926d6e5901b63dfbe347a", "Url": "https://api.github.com/repos/kniesec/Payslip", "Date": "2016-10-08T09:20:10Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLocationListeners) == null) mLocationListeners = new java.util.ArrayList<com.google.android.gms.common.GooglePlayServicesClient.ConnectionCallbacks>(5);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6927/buggy-version/app.src.main.java.edu.rutgers.css.Rutgers.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b605a4214c37b252d475a0dbc82ed755d437afed", "Url": "https://api.github.com/repos/rutgersmobile/android-client", "Date": "2014-08-05T21:16:34Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((numerator.signum()) == (-1)) && ((denominator.signum()) == (-1))) g = g.negate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/686/buggy-version/src.main.java.cas.util.BigRational.java", "BodyUseAPI": [], "Fixed commit": "b6dcea488e4123134823ae7f0b95d61b70befc98", "Url": "https://api.github.com/repos/eukaryote31/computer-algebra-system", "Date": "2017-05-13T01:53:35Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (energia < 0) { throw new util.ApplicationException(\"La energ\u00eda a utilizar para el ataque debe ser mayor o igual a 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7782/buggy-version/src.business.entities.Personaje.java", "BodyUseAPI": [], "Fixed commit": "d3f0c3a2edef7c8a2d85f35d62fa2774ae65d4b2", "Url": "https://api.github.com/repos/marcegeek/TPJavaWeb", "Date": "2016-11-20T23:24:09Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (post.getURI().toString().contains(org.archiviststoolkit.plugin.utils.aspace.ASpaceClient.ASSESSMENT_ATTR_DEFNS_ENDPOINT)) { if (response.getString(\"status\").equalsIgnoreCase(\"updated\")) id = \"ok\"; }else { id = response.getString(idName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1676/buggy-version/src.org.archiviststoolkit.plugin.utils.aspace.ASpaceClient.java", "BodyUseAPI": [], "Fixed commit": "a295614236a82f167333e1f4d36d17712ba6eb6e", "Url": "https://api.github.com/repos/archivesspace/at-migration", "Date": "2017-10-18T13:22:58Z"},
{"Line": "=>1470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((proxy) != null) { boolean shouldProxy = true; for (java.util.regex.Pattern p : proxy.getNoProxyHostPatterns()) { if (p.matcher(uri.getHost()).matches()) { shouldProxy = false; break; } } if (shouldProxy) { client.getHostConfiguration().setProxy(proxy.name, proxy.port); if (((proxy.getUserName()) != null) && ((proxy.getPassword()) != null)) client.getState().setProxyCredentials(AuthScope.ANY, new org.apache.commons.httpclient.UsernamePasswordCredentials(proxy.getUserName(), proxy.getPassword())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3882/buggy-version/src.main.java.org.jenkinsci.plugins.gitclient.CliGitAPIImpl.java", "BodyUseAPI": [], "Fixed commit": "47861e70dd25f87d6da5b4e2859b1b5ff08412e5", "Url": "https://api.github.com/repos/timothy-volvo/git-client-plugin", "Date": "2013-11-26T19:19:02Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((errorMessage != null) && ((errorMessage.length) > 0)) { com.twosigma.beaker.jupyter.msg.MessageCreator.logger.info((\"Execution result ERROR: \" + (errorMessage[0]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/9168/buggy-version/kernel.base.src.main.java.com.twosigma.beaker.jupyter.msg.MessageCreator.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "d6b8e769566c17a23a7fbd2257bf218d359707a5", "Url": "https://api.github.com/repos/twosigma/beakerx", "Date": "2017-04-04T15:08:30Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(rotatedAlt)) { player.rotation += io.anuke.ucore.core.Inputs.getAxis(\"rotate\"); rotatedAlt = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8404/buggy-version/core.src.io.anuke.mindustry.input.DesktopInput.java", "BodyUseAPI": [], "Fixed commit": "c69779bf7e6ee0b5456fac603c039c59ecf1f1fd", "Url": "https://api.github.com/repos/Anuken/Mindustry", "Date": "2017-12-24T19:40:08Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(io.anuke.ucore.core.Inputs.getAxisActive(\"rotate\"))) rotatedAlt = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8404/buggy-version/core.src.io.anuke.mindustry.input.DesktopInput.java", "BodyUseAPI": [], "Fixed commit": "c69779bf7e6ee0b5456fac603c039c59ecf1f1fd", "Url": "https://api.github.com/repos/Anuken/Mindustry", "Date": "2017-12-24T19:40:08Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getAttributeNode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (resRefAttr == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/8870/buggy-version/muikku-deus-nex-machina.src.main.java.fi.muikku.plugins.dnm.parser.content.DeusNexContentParser.java", "BodyUseAPI": [], "Fixed commit": "f9994a0ce05da2b4491d1c8c9ec7807e195b0a74", "Url": "https://api.github.com/repos/otavanopisto/muikku", "Date": "2015-06-02T08:11:56Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.worldObj.isDaytime())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/315/buggy-version/src.minecraft.sbfp.machines.tiles.TileSolarCharger.java", "BodyUseAPI": [], "Fixed commit": "5dd0daf0dd5574a90c3891d965c9f8b1477756a3", "Url": "https://api.github.com/repos/Pentachoron-Labs/SBFP-Tech", "Date": "2013-06-02T23:22:13Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dependency.isEmpty())) { this.dependencies.add(new ro.fortsoft.pf4j.PluginDependency(dependency)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3954/buggy-version/pf4j.src.main.java.ro.fortsoft.pf4j.PluginDescriptor.java", "BodyUseAPI": ["java.util.List<ro.fortsoft.pf4j.PluginDependency>.add(ro.fortsoft.pf4j.PluginDependency)"], "Fixed commit": "a2293ed9a883bad70612772277973e95a5a5f3e5", "Url": "https://api.github.com/repos/decebals/pf4j", "Date": "2012-11-13T11:16:20Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getNextNoteFromScale(a, pos).num) < (b.num)) return java.lang.Integer.MAX_VALUE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3493/buggy-version/src.rekkyn.musicgen.Song.java", "BodyUseAPI": [], "Fixed commit": "ce89f972fc7f73f6b65d96028ed9d7a9361753de", "Url": "https://api.github.com/repos/Rekkyn/MusicGenerator", "Date": "2014-08-13T02:50:25Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getNextNoteFromScale(a, pos).num) > (b.num)) return java.lang.Integer.MAX_VALUE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3493/buggy-version/src.rekkyn.musicgen.Song.java", "BodyUseAPI": [], "Fixed commit": "ce89f972fc7f73f6b65d96028ed9d7a9361753de", "Url": "https://api.github.com/repos/Rekkyn/MusicGenerator", "Date": "2014-08-13T02:50:25Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (user.equals(\"admin\")) { return \"redirect:/admin\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3497/buggy-version/src.main.java.wepa.tr00news.controller.IndexController.java", "BodyUseAPI": [], "Fixed commit": "980eff6808280c3e5bc387086822bbf4fc8f13da", "Url": "https://api.github.com/repos/jrnn/tr00news", "Date": "2017-12-09T17:20:10Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (libFolder.exists()) { deployParams.addResource(jfxAppOutputDir, \"lib\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/1857/buggy-version/src.main.java.com.zenjava.javafx.maven.plugin.WebMojo.java", "BodyUseAPI": [], "Fixed commit": "75dbc23f1565f7812488dab1a4f19f03758bc54f", "Url": "https://api.github.com/repos/FibreFoX/javafx-maven-plugin", "Date": "2015-04-28T08:09:18Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((interestModel.interest.compareTo(java.math.BigDecimal.ZERO)) <= 0) interestModel.interest = java.math.BigDecimal.ZERO;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/6399/buggy-version/src.main.java.net.posesor.debts.Calculations.java", "BodyUseAPI": [], "Fixed commit": "95b3ecd77ab959cd78bb0712a96c3e42f12777de", "Url": "https://api.github.com/repos/Respekto/posesor-backend", "Date": "2017-04-30T11:57:42Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset < 0) || (count < 0)) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7443/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "f0565bdf9c75428dba386dd4168b0f00661c916c", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:34Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset < 0) || (count < 0)) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7443/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "f0565bdf9c75428dba386dd4168b0f00661c916c", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:34Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(user.hasPermission(InvisibilityManager.vanishPermission))) { com.bendude56.goldenapple.GoldenApple.logPermissionFail(user, commandLabel, args, true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3030/buggy-version/src.main.java.com.bendude56.goldenapple.invisible.command.PoofCommand.java", "BodyUseAPI": ["com.bendude56.goldenapple.GoldenApple.logPermissionFail(com.bendude56.goldenapple.User,java.lang.String,java.lang.String[],boolean)"], "Fixed commit": "16088a7ee3b7c6310a07cc40f7526fc1043388a9", "Url": "https://api.github.com/repos/bendude56/GoldenApple", "Date": "2014-07-26T03:25:17Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event instanceof org.bukkit.event.block.BlockExpEvent) { }else { com.bendude56.goldenapple.GoldenApple.log(java.util.logging.Level.WARNING, (\"Unrecognized event in InvisibilityListener: \" + (event.getClass().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/3030/buggy-version/src.main.java.com.bendude56.goldenapple.invisible.InvisibilityListener.java", "BodyUseAPI": ["com.bendude56.goldenapple.GoldenApple.log(java.util.logging.Level,(\"Unrecognized event in InvisibilityListener: \" + (event.getClass().getName())))", "org.bukkit.event.Event.getClass()", "event.getClass().getName()"], "Fixed commit": "16088a7ee3b7c6310a07cc40f7526fc1043388a9", "Url": "https://api.github.com/repos/bendude56/GoldenApple", "Date": "2014-07-26T03:25:17Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.teamunify.i18n.I.isNullDate(refDate)) { if ((com.teamunify.i18n.I.defaultDate) == null) refDate = new java.util.Date(); else refDate = com.teamunify.i18n.I.defaultDate; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/2869/buggy-version/src.main.java.com.teamunify.i18n.I.java", "BodyUseAPI": [], "Fixed commit": "b15e8483be213830d7a87d33129e7c42a9c9aeb2", "Url": "https://api.github.com/repos/awkay/easy-i18n", "Date": "2014-02-04T20:36:40Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jenkinsci.plugins.workflow.support.steps.build.RunWrapper.getRawBuild()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (r != null) { org.jenkinsci.plugins.pipeline.modeldefinition.model.CredentialsBindingHandler handler = org.jenkinsci.plugins.pipeline.modeldefinition.model.CredentialsBindingHandler.forId(credentialsId, currentBuild.getRawBuild()); withCredentialsParameters = handler.getWithCredentialsParameters(credentialsId); }else { throw new org.jenkinsci.plugins.credentialsbinding.impl.CredentialNotFoundException(credentialsId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V29/7591/buggy-version/pipeline-model-definition.src.main.java.org.jenkinsci.plugins.pipeline.modeldefinition.environment.impl.Credentials.java", "BodyUseAPI": [], "Fixed commit": "4dde5a91ae8ccf63986f8a24568a02dcdbf9b06e", "Url": "https://api.github.com/repos/jenkinsci/pipeline-model-definition-plugin", "Date": "2017-02-10T22:26:02Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getOwner()) != null) { return mergeRequiredAuthorities(requiredAuthoritiesBase, this.getAccount(), PrivateKeyType.OWNER); }else { return mergeRequiredAuthorities(requiredAuthoritiesBase, this.getAccount(), PrivateKeyType.ACTIVE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2700/buggy-version/core.src.main.java.eu.bittrade.libs.steemj.base.models.operations.AccountUpdateOperation.java", "BodyUseAPI": [], "Fixed commit": "831270d3a1bad1d8f37088511dfad6be9547b1e8", "Url": "https://api.github.com/repos/marvin-we/steem-java-api-wrapper", "Date": "2017-10-02T18:08:57Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getPublicationRightForAudience(audience).getVideoRestriction()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (videoRestriction == null) return new java.lang.String[]{ };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5259/buggy-version/ContentBroker.src.main.java.de.uzk.hki.da.convert.PublishVideoConversionStrategy.java", "BodyUseAPI": [], "Fixed commit": "9e583b42e1843ac22bbaaf264553ebd9858c6d13", "Url": "https://api.github.com/repos/da-nrw/DNSCore", "Date": "2014-02-06T13:13:27Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((me.ccrama.redditslide.Authentication.httpAdapter.getNativeClient()) != null) me.ccrama.redditslide.Authentication.httpAdapter.getNativeClient().connectionPool().evictAll();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7559/buggy-version/app.src.main.java.me.ccrama.redditslide.Authentication.java", "BodyUseAPI": ["me.ccrama.redditslide.Authentication.httpAdapter.getNativeClient().connectionPool().evictAll()", "me.ccrama.redditslide.Authentication.httpAdapter.getNativeClient().connectionPool()", "net.dean.jraw.http.OkHttpAdapter.getNativeClient()"], "Fixed commit": "2559c30cb3bf6c1ec5f20a227c53cf749d5d36d2", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-10-20T17:24:22Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sizeOfTeleport2 < sizeOfTeleport1) { java.lang.System.out.println(\"Es mas corta\"); for (int i = 0; i < (listForTeleport.size()); i++) { listRouteShort.add(listForTeleport.get(i)); } }else { clearAll(); for (int i = 1; i < ((backUpList.size()) - 1); i++) { markInGraph(backUpList.get(i)); } shortRouteWeight(backup, destiny); if (listRouteShort.isEmpty()) for (int i = 0; i < (listForTeleport.size()); i++) { listRouteShort.add(listForTeleport.get(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2967/buggy-version/ProyectoMigrado.src.pk.codeapp.controller.NewCharacterController.java", "BodyUseAPI": [], "Fixed commit": "c289482d0d916f7024425632c66b154afa38f360", "Url": "https://api.github.com/repos/jdamador/MazeRunner", "Date": "2017-10-31T05:49:58Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(st.hasMoreTokens())) { throw new java.lang.IllegalArgumentException(\"Attempt to scan invalid header\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7138/buggy-version/src.com.meterware.httpunit.HttpUnitUtils.java", "BodyUseAPI": [], "Fixed commit": "bb19e2d6e7b60c96bcfc33b538df99f525ff8808", "Url": "https://api.github.com/repos/emopers/httpunit", "Date": "2015-10-21T18:30:45Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isEmpty(codeSigningIdentity))) { packageCommandLine.add(\"--sign\"); packageCommandLine.add(codeSigningIdentity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/74/buggy-version/src.main.java.au.com.rayh.XCodeBuilder.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "dc8db27ed5a43e6cf7d6b0354aff1d1f3031d94c", "Url": "https://api.github.com/repos/dlvenable/xcode-plugin", "Date": "2012-10-17T20:53:09Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isIconified())) { findHighlight(newText, mTextView.getSelectionStart(), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/914/buggy-version/src.au.radsoft.widget.TextSearchView.java", "BodyUseAPI": [], "Fixed commit": "84f938173681e65cd9757b0cd092f38d569ec415", "Url": "https://api.github.com/repos/RadAd/RadNotepad", "Date": "2015-10-29T02:51:20Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (req.getCore().getSolrConfig().luceneMatchVersion.onOrAfter(Version.LUCENE_5_1_0)) { java.lang.String reqPath = ((java.lang.String) (req.getContext().get(org.apache.solr.handler.component.PATH))); if (!(\"/select\".equals(reqPath))) { params.set(CommonParams.QT, reqPath); } }else { params.remove(CommonParams.QT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2721/buggy-version/solr.core.src.java.org.apache.solr.handler.component.SearchHandler.java", "BodyUseAPI": ["req.getContext().get(org.apache.solr.handler.component.PATH)", "org.apache.solr.request.SolrQueryRequest.getContext()"], "Fixed commit": "5c50124246805e11fed94dac16095a145074f096", "Url": "https://api.github.com/repos/ryantxu/lucene-solr", "Date": "2016-03-18T12:36:36Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nikr.eve.jeveasset.io.shared.AttributeGetters.getInt(org.w3c.dom.Element,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (group2 <= 0) { group2 = 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7517/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.local.SettingsReader.java", "BodyUseAPI": [], "Fixed commit": "8290c5611876e6755c82d146151dbff198bcd87a", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2015-10-18T11:17:02Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.everbetter.controller.ParentsService.getParentByPhone(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (parentsDao != null) { parentgiftBalance = parentsDao.getGiftBalance().add(vipCardNew.getGiftBalance()); }else { parentgiftBalance = vipCardNew.getGiftBalance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5346/buggy-version/src.main.java.com.everbetter.controller.VipController.java", "BodyUseAPI": ["parentsDao.getGiftBalance().add(vipCardNew.getGiftBalance())", "com.everbetter.controller.ParentsDao.getGiftBalance()"], "Fixed commit": "8e17eed18717719bcc2ab66dee7f1701629e55fc", "Url": "https://api.github.com/repos/champion626/everbetter", "Date": "2017-10-19T01:24:33Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.everbetter.controller.ParentsService.getParentByPhone(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (parentsDao != null) { parentgiftBalance = parentsDao.getGiftBalance().add(vipCardNew.getGiftBalance()); }else { parentgiftBalance = vipCardNew.getGiftBalance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5346/buggy-version/src.main.java.com.everbetter.controller.VipController.java", "BodyUseAPI": ["com.everbetter.controller.ParentsDao.getGiftBalance()", "parentsDao.getGiftBalance().add(vipCardNew.getGiftBalance())"], "Fixed commit": "8e17eed18717719bcc2ab66dee7f1701629e55fc", "Url": "https://api.github.com/repos/champion626/everbetter", "Date": "2017-10-19T01:24:33Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.everbetter.controller.ParentsService.getParentByPhone(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (parentsDao != null) { parentgiftBalance = parentsDao.getGiftBalance().add(vipCardNew.getGiftBalance()); }else { parentgiftBalance = vipCardNew.getGiftBalance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5346/buggy-version/src.main.java.com.everbetter.controller.VipController.java", "BodyUseAPI": ["parentsDao.getGiftBalance().add(vipCardNew.getGiftBalance())", "com.everbetter.controller.ParentsDao.getGiftBalance()"], "Fixed commit": "8e17eed18717719bcc2ab66dee7f1701629e55fc", "Url": "https://api.github.com/repos/champion626/everbetter", "Date": "2017-10-19T01:24:33Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.everbetter.service.VipCardService.getCardByNo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(vipCardDao.getStatus().equals(\"\u672a\u6ce8\u518c\"))) return new com.everbetter.common.utils.result.Result(ReturnCode.FAILURE.code, \"\u6b64\u5361\u5f53\u524d\u72b6\u6001\u65e0\u6cd5\u9500\u552e\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5346/buggy-version/src.main.java.com.everbetter.controller.VipCardController.java", "BodyUseAPI": [], "Fixed commit": "8e17eed18717719bcc2ab66dee7f1701629e55fc", "Url": "https://api.github.com/repos/champion626/everbetter", "Date": "2017-10-19T01:24:33Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strLine.startsWith(\"debug-messages = \")) { this.DEBUGMESSAGES_ = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3189/buggy-version/src.com.gmail.ryansinn.iGrow.iGrow.java", "BodyUseAPI": [], "Fixed commit": "6093d15314a448cf73e21a09a0c76c53937fd692", "Url": "https://api.github.com/repos/Zarius/iGrow", "Date": "2011-05-07T12:43:08Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(newsSourceItem.getSourceName().equals(\"null\"))) { name.setText(newsSourceItem.getSourceName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/329/buggy-version/app.src.main.java.com.trianz.newshunthackathon.NewsSourceAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(newsSourceItem.getSourceName())", "com.trianz.newshunthackathon.NewsSourceItem.getSourceName()"], "Fixed commit": "fc42f2fa115eb8b527e3a05fe93a74cb3ad866b6", "Url": "https://api.github.com/repos/NivedithaKabbur/DailyFeed", "Date": "2017-06-27T08:52:10Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(newsImage.equals(\"null\"))) && (!(newsImage.equals(\"\")))) { com.squareup.picasso.Picasso.with(this).load(newsImage).fit().placeholder(R.drawable.news_details_foreground).into(news_image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/329/buggy-version/app.src.main.java.com.trianz.newshunthackathon.NewsContentActivity.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(this).load(newsImage).fit().placeholder(R.drawable.news_details_foreground)", "com.squareup.picasso.Picasso.with(this).load(newsImage).fit().placeholder(R.drawable.news_details_foreground).into(android.widget.ImageView)", "com.squareup.picasso.Picasso.with(this).load(newsImage).fit()", "com.squareup.picasso.Picasso.with(this).load(java.lang.String)"], "Fixed commit": "fc42f2fa115eb8b527e3a05fe93a74cb3ad866b6", "Url": "https://api.github.com/repos/NivedithaKabbur/DailyFeed", "Date": "2017-06-27T08:52:10Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(newsDetails.getUrlToImage().equals(\"null\"))) && (!(newsDetails.getUrlToImage().equals(\"\")))) { com.squareup.picasso.Picasso.with(context).setLoggingEnabled(true); com.squareup.picasso.Picasso.with(context).load(newsDetails.getUrlToImage()).fit().into(image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/329/buggy-version/app.src.main.java.com.trianz.newshunthackathon.NewsListAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(context).load(newsDetails.getUrlToImage())", "com.squareup.picasso.Picasso.with(context).load(newsDetails.getUrlToImage()).fit().into(android.widget.ImageView)", "com.squareup.picasso.Picasso.with(context).load(newsDetails.getUrlToImage()).fit()", "com.trianz.newshunthackathon.NewsDetails.getUrlToImage()"], "Fixed commit": "fc42f2fa115eb8b527e3a05fe93a74cb3ad866b6", "Url": "https://api.github.com/repos/NivedithaKabbur/DailyFeed", "Date": "2017-06-27T08:52:10Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((next.getTotalChanges()) - (next.getNumberOfRelevants())) >= 0) { irrelevants[toAnalyze.indexOf(next)] = java.lang.Integer.toString(((next.getTotalChanges()) - (next.getNumberOfRelevants()))); }else { irrelevants[toAnalyze.indexOf(next)] = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8030/buggy-version/src.NodeStatistics.java", "BodyUseAPI": ["RevisionNode.getNumberOfRelevants()", "java.util.LinkedList<RevisionNode>.indexOf(RevisionNode)", "java.util.LinkedList<RevisionNode>.indexOf(RevisionNode)", "java.lang.Integer.toString(((next.getTotalChanges()) - (next.getNumberOfRelevants())))", "RevisionNode.getTotalChanges()"], "Fixed commit": "b7ff8a44458325df4124387c9a821b6530c7fc1a", "Url": "https://api.github.com/repos/KJJ/CodeHistory", "Date": "2011-05-24T16:35:38Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["voldemort.server.StoreRepository.getRepairJob()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (job != null) { voldemort.server.protocol.admin.AdminServiceRequestHandler.logger.info((\"Starting the repair job now on ID : \" + (metadataStore.getNodeId()))); job.run(); }else voldemort.server.protocol.admin.AdminServiceRequestHandler.logger.error(\"RepairJob is not scheduled.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5219/buggy-version/src.java.voldemort.server.protocol.admin.AdminServiceRequestHandler.java", "BodyUseAPI": ["voldemort.server.scheduler.slop.RepairJob.run()"], "Fixed commit": "fc06b17b759388ad5c75bf8398f61a8c9b454628", "Url": "https://api.github.com/repos/voldemort/voldemort", "Date": "2011-11-01T00:34:27Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(flexRel.getAttribute(\"max\").getDjValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newCurrent > max) { newCurrent = max; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9169/buggy-version/src.main.java.com.oneops.transistor.service.FlexManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "16a33fc0db5d4d6c349086057547ba96f31df6bd", "Url": "https://api.github.com/repos/bannama/transistor", "Date": "2016-06-01T21:42:48Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(flexRel.getAttribute(\"min\").getDjValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newCurrent < min) { newCurrent = min; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9169/buggy-version/src.main.java.com.oneops.transistor.service.FlexManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "16a33fc0db5d4d6c349086057547ba96f31df6bd", "Url": "https://api.github.com/repos/bannama/transistor", "Date": "2016-06-01T21:42:48Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dateString == null) || (dateString.isEmpty())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1038/buggy-version/src.main.java.com.blocktyper.spoileralert.SpoilerAlertCalendar.java", "BodyUseAPI": [], "Fixed commit": "8d29cda45f3c852935be1561c3b437d07fae8113", "Url": "https://api.github.com/repos/spaarkimus/SpoilerAlert", "Date": "2017-01-20T20:35:28Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (c != null) { synchronized(surfaceHolder) { scene.draw(c); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2287/buggy-version/src.com.sigseg.android.worldmap.WorldView.java", "BodyUseAPI": ["com.sigseg.android.view.InputStreamScene.draw(android.graphics.Canvas)"], "Fixed commit": "9f351ae1bd73d96c21f2987183fc47ab6061ba1d", "Url": "https://api.github.com/repos/johnnylambada/WorldMap", "Date": "2012-05-10T19:52:27Z"},
{"Line": "=>3587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(deletableList.contains(imageItem.path))) { imageItem.isSelected = true; deletableList.add(imageItem.path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4250/buggy-version/app.src.main.java.vn.mbm.phimp.me.newGallery.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(imageItem.path)"], "Fixed commit": "6fe08d7a64fa637655b138f3613efa3c2996a2e2", "Url": "https://api.github.com/repos/rohanagarwal94/phimpme-android", "Date": "2017-04-02T11:35:21Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action == (-1)) { return 0.0; }else { return Q[state][action]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1892/buggy-version/AIQlearning.src.QLearner.java", "BodyUseAPI": [], "Fixed commit": "7f0ea1c0b00876ad32ad32513507bcc982e14c50", "Url": "https://api.github.com/repos/JasperAdegeest/Q-Learning", "Date": "2016-03-28T18:48:56Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (empty) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7440/buggy-version/yabench-oracle.src.main.java.io.github.yabench.oracle.EngineResultsReader.java", "BodyUseAPI": [], "Fixed commit": "2c175edde25012f6d9ce4fa10a5d4ec550abe222", "Url": "https://api.github.com/repos/YABench/yabench", "Date": "2015-04-16T11:20:06Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fr.s13d.photobackup.PBApplication.mediaStore) != null) { fr.s13d.photobackup.PBApplication.mediaStore.close(); fr.s13d.photobackup.PBApplication.mediaStore = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/761/buggy-version/app.src.main.java.fr.s13d.photobackup.PBApplication.java", "BodyUseAPI": [], "Fixed commit": "e06576d496f34a788a27c9752b6de4a66a698348", "Url": "https://api.github.com/repos/PhotoBackup/client-android", "Date": "2016-08-19T16:34:18Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p1.isE()) return p2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8901/buggy-version/BlindSignature.src.cn.edu.fzu.cmcs.hxr.EllipticCurve.java", "BodyUseAPI": [], "Fixed commit": "8d0660f0c34a5e51164e2c0d211f6e854d5e1f27", "Url": "https://api.github.com/repos/woniu17/blindsignature", "Date": "2013-12-19T13:12:05Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p2.isE()) return p1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8901/buggy-version/BlindSignature.src.cn.edu.fzu.cmcs.hxr.EllipticCurve.java", "BodyUseAPI": [], "Fixed commit": "8d0660f0c34a5e51164e2c0d211f6e854d5e1f27", "Url": "https://api.github.com/repos/woniu17/blindsignature", "Date": "2013-12-19T13:12:05Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(WebConstants.FEATURE_UID)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.ff4j.utils.Util.hasLength(featureId)) { org.ff4j.core.Feature current = ff4j.getFeatureStore().read(featureId); ap = current.getProperty(uid); ap.setDescription(description); if (ap.getType().equalsIgnoreCase(type)) { ap.setValueFromString(value); }else { ap = org.ff4j.property.util.PropertyFactory.createProperty(name, type, value); org.ff4j.web.embedded.ConsoleOperations.LOGGER.warn(\"By changing property type you loose the fixedValues, cannot evaluate ? at runtime\"); } ff4j.getFeatureStore().update(current); }else if (ff4j.getPropertiesStore().existProperty(uid)) { if (uid.equalsIgnoreCase(name)) { ap = ff4j.getPropertiesStore().readProperty(uid); if (ap.getType().equalsIgnoreCase(type)) { ap.setDescription(description); ap.setValueFromString(value); ff4j.getPropertiesStore().updateProperty(ap); }else { ap = org.ff4j.property.util.PropertyFactory.createProperty(name, type, value); ap.setDescription(description); org.ff4j.web.embedded.ConsoleOperations.LOGGER.warn(\"By changing property type you loose the fixedValues, cannot evaluate ? at runtime\"); ff4j.getPropertiesStore().deleteProperty(name); ff4j.getPropertiesStore().createProperty(ap); } }else { ap = org.ff4j.property.util.PropertyFactory.createProperty(name, type, value); ap.setDescription(description); org.ff4j.web.embedded.ConsoleOperations.LOGGER.warn(\"By changing property name you loose the fixedValues, cannot evaluate generics at runtime (type inference)\"); ff4j.getPropertiesStore().deleteProperty(uid); ff4j.getPropertiesStore().createProperty(ap); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3482/buggy-version/ff4j-web.src.main.java.org.ff4j.web.embedded.ConsoleOperations.java", "BodyUseAPI": ["ff4j.getFeatureStore().read(java.lang.String)"], "Fixed commit": "6ca6313b97026bd858ed272b5c42c9e01bc64983", "Url": "https://api.github.com/repos/eSailors/ff4j", "Date": "2017-03-13T08:20:25Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((start) == null) { start = new Kreuzung(startPos.x, startPos.y); kreuzungen.put(startPos, start); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1331/buggy-version/src.PathFinder.java", "BodyUseAPI": [], "Fixed commit": "58710e57e98bb2fc64169d3084a890f21ad48c22", "Url": "https://api.github.com/repos/Haeki/JavaKara_PathFinder", "Date": "2016-04-08T23:24:29Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ziel) == null) { int zielX = tools.intInput(\"Ziel X Koordinate:\"); int zielY = tools.intInput(\"Ziel Y Koordinate:\"); if ((zielX < 0) || (zielX >= (world.getSizeX()))) { tools.showMessage(\"X Koordinate invalid! Using 1 instead\"); zielX = 1; } if ((zielY < 0) || (zielY >= (world.getSizeY()))) { tools.showMessage(\"Y Koordinate invalid! Using 1 instead\"); zielY = 1; } ziel = new Kreuzung(zielX, zielY); kreuzungen.put(new Coord(ziel.getX(), ziel.getY()), ziel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1331/buggy-version/src.PathFinder.java", "BodyUseAPI": [], "Fixed commit": "58710e57e98bb2fc64169d3084a890f21ad48c22", "Url": "https://api.github.com/repos/Haeki/JavaKara_PathFinder", "Date": "2016-04-08T23:24:29Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((CURRENT_CALL_TYPE) == (com.example.android.popularmoviesstage2.MainActivity.FAVORITE_CALL)) { com.example.android.popularmoviesstage2.CursorGridAdapter cursorGridAdapter = new com.example.android.popularmoviesstage2.CursorGridAdapter(this, null, getString(R.string.no_favorite_movie_found)); recyclerView.setAdapter(cursorGridAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3061/buggy-version/app.src.main.java.com.example.android.popularmoviesstage2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "faff423b824956c603fa64e072c40bfa4639a69c", "Url": "https://api.github.com/repos/hrishikesh-kadam/popular-movie-stage-2", "Date": "2017-10-28T23:34:47Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.highlight()) != null) { for (org.elasticsearch.search.highlight.SearchContextHighlight.Field field : context.highlight().fields()) { field.forceSource(true); } doc.setSource(fetchedDoc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7473/buggy-version/src.main.java.org.elasticsearch.percolator.PercolatorService.java", "BodyUseAPI": ["context.highlight().fields()", "org.elasticsearch.percolator.PercolateContext.highlight()"], "Fixed commit": "c1033f7cb691f2d717e5be00bf65df6dbf778f84", "Url": "https://api.github.com/repos/polyfractal/elasticsearch", "Date": "2014-02-13T00:28:56Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((intMinTotal <= 21) && (intMaxTotal <= 21)) { sum = java.lang.Math.max(intMinTotal, intMaxTotal); }else if (intMinTotal <= 21) { sum = intMinTotal; }else { sum = intMaxTotal; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2117/buggy-version/blackjack.GameActor.java", "BodyUseAPI": ["java.lang.Math.max(int,int)"], "Fixed commit": "1599f055fbce7baf1726e00dca2ae5f8187c3a4e", "Url": "https://api.github.com/repos/upuld/blackjack_game", "Date": "2017-07-13T07:45:25Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Loader.POP_UP_OPEN) { Loader.POP_UP.requestFocus(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7879/buggy-version/DietTracker.src.me.ci.FoodList.java", "BodyUseAPI": [], "Fixed commit": "3a584a8570831ee29b8cacad886e0ddcfab4e312", "Url": "https://api.github.com/repos/TheDudeFromCI/DietTracker", "Date": "2015-01-06T10:21:07Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["classInfo.annotations().get(org.jboss.jandex.DotName)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (annotations != null) { for (org.jboss.jandex.AnnotationInstance annotationInstance : annotations) { if (annotationInstance.target().equals(classInfo)) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8971/buggy-version/weld.src.main.java.org.jboss.as.weld.discovery.WeldClassFileInfo.java", "BodyUseAPI": [], "Fixed commit": "497a4aa10910a41feeb366464e8d8b276d6b604b", "Url": "https://api.github.com/repos/weld/wildfly", "Date": "2013-10-09T08:56:50Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.dataprofiler.chart.TOPChartService.1.getCurrentMenu(org.jfree.chart.entity.CategoryItemEntity)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (menu != null) { chartComp.setMenu(menu); menu.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3980/buggy-version/main.plugins.org.talend.dataprofiler.top.chart.src.org.talend.dataprofiler.chart.TOPChartService.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Menu.setVisible(boolean)", "org.jfree.experimental.chart.swt.ChartComposite.setMenu(org.eclipse.swt.widgets.Menu)"], "Fixed commit": "9a9a52fb2c1646c2c7091269d7f4797425bd60fa", "Url": "https://api.github.com/repos/Talend/tdq-studio-se", "Date": "2015-10-20T07:16:57Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (messages.getJSONObject(i).getString(\"status\").equalsIgnoreCase(\"delivered\")) { messagesArrayAdapter.insert(messages.getJSONObject(i), im); im++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7848/buggy-version/app.src.main.java.com.tfp.tfpsms.MainActivity.java", "BodyUseAPI": ["com.tfp.tfpsms.MainActivity.MessagesArrayAdapter.insert(messages.getJSONObject(i),int)", "org.json.JSONArray.getJSONObject(int)"], "Fixed commit": "6d256f06379afbcbc59374aac4f023d214d7d4c7", "Url": "https://api.github.com/repos/tigerfarm/OwlMessaging", "Date": "2017-10-02T23:20:18Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (messages.getJSONObject(i).getString(\"status\").equalsIgnoreCase(\"delivered\")) { messagesArrayAdapter.insert(messages.getJSONObject(i), im); im++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7848/buggy-version/app.src.main.java.com.tfp.tfpsms.SendSmsActivity.java", "BodyUseAPI": ["org.json.JSONArray.getJSONObject(int)", "com.tfp.tfpsms.SendSmsActivity.MessagesArrayAdapter.insert(messages.getJSONObject(i),int)"], "Fixed commit": "6d256f06379afbcbc59374aac4f023d214d7d4c7", "Url": "https://api.github.com/repos/tigerfarm/OwlMessaging", "Date": "2017-10-02T23:20:18Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entityManager.createQuery(query).setParameter(\"productId\", id).getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((modifications != null) && (!(modifications.isEmpty()))) { query = \"DELETE FROM ProductStockTrack pst WHERE pst.product.id = :productId\"; entityManager.createQuery(query).setParameter(\"productId\", id).executeUpdate(); query = \"DELETE FROM ProductStockModification modif WHERE modif.id IN (:modifications)\"; entityManager.createQuery(query).setParameter(\"modifications\", modifications).executeUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1736/buggy-version/src.main.java.org.iabako.server.dao.business.ProductDAO.java", "BodyUseAPI": ["entityManager.createQuery(query).setParameter(java.lang.String,java.util.List<java.lang.Long>)", "entityManager.createQuery(query).setParameter(\"modifications\", modifications).executeUpdate()"], "Fixed commit": "6afcdcbe4b4855563efe0fa5ec3f851f242384a5", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2016-04-19T07:47:24Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isBig())) { runGrowAnimation = true; marioIsBig = true; timeToDefineBigMario = true; setBounds(getX(), getY(), getWidth(), ((getHeight()) * 2)); MarioBros.manager.get(\"audio/sounds/powerup.wav\", com.badlogic.gdx.audio.Sound.class).play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5353/buggy-version/core.src.com.brentaureli.mariobros.Sprites.Mario.java", "BodyUseAPI": [], "Fixed commit": "5513b166d5c91ef07be90c34e64daf84aa9978da", "Url": "https://api.github.com/repos/BrentAureli/SuperMario", "Date": "2015-11-25T20:37:03Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Objects.nonNull(complaint.getChildLocation())) { complaintIndex.setLocalityName(complaint.getChildLocation().getName()); complaintIndex.setLocalityNo(complaint.getChildLocation().getBoundaryNum().toString()); if ((java.util.Objects.nonNull(complaint.getChildLocation().getLongitude())) && (java.util.Objects.nonNull(complaint.getChildLocation().getLatitude()))) complaintIndex.setLocalityGeo(new org.springframework.data.elasticsearch.core.geo.GeoPoint(complaint.getChildLocation().getLatitude(), complaint.getChildLocation().getLongitude())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7510/buggy-version/egov.egov-pgr.src.main.java.org.egov.pgr.entity.es.ComplaintCustomMapper.java", "BodyUseAPI": ["org.egov.pgr.entity.es.ComplaintIndex.setLocalityGeo(org.springframework.data.elasticsearch.core.geo.GeoPoint)", "complaint.getChildLocation().getLatitude()", "complaint.getChildLocation().getName()", "java.util.Objects.nonNull(complaint.getChildLocation().getLongitude())", "complaint.getChildLocation().getLongitude()", "org.egov.pgr.entity.Complaint.getChildLocation()", "complaint.getChildLocation().getBoundaryNum().toString()", "org.egov.pgr.entity.Complaint.getChildLocation()", "org.egov.pgr.entity.es.ComplaintIndex.setLocalityName(complaint.getChildLocation().getName())", "complaint.getChildLocation().getLatitude()", "java.util.Objects.nonNull(complaint.getChildLocation().getLatitude())", "org.egov.pgr.entity.Complaint.getChildLocation()", "org.egov.pgr.entity.es.ComplaintIndex.setLocalityNo(complaint.getChildLocation().getBoundaryNum().toString())", "complaint.getChildLocation().getBoundaryNum()", "complaint.getChildLocation().getLongitude()", "org.egov.pgr.entity.Complaint.getChildLocation()", "org.egov.pgr.entity.Complaint.getChildLocation()", "org.egov.pgr.entity.Complaint.getChildLocation()"], "Fixed commit": "da54393e467c4804f1ecd9c0e3c440e804390aea", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-11-10T06:11:17Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Objects.nonNull(complaint.getLocation())) { complaintIndex.setWardName(complaint.getLocation().getName()); complaintIndex.setWardNo(complaint.getLocation().getBoundaryNum().toString()); if ((java.util.Objects.nonNull(complaint.getLocation().getLongitude())) && (java.util.Objects.nonNull(complaint.getLocation().getLatitude()))) complaintIndex.setWardGeo(new org.springframework.data.elasticsearch.core.geo.GeoPoint(complaint.getLocation().getLatitude(), complaint.getLocation().getLongitude())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7510/buggy-version/egov.egov-pgr.src.main.java.org.egov.pgr.entity.es.ComplaintCustomMapper.java", "BodyUseAPI": ["complaint.getLocation().getName()", "org.egov.pgr.entity.es.ComplaintIndex.setWardGeo(org.springframework.data.elasticsearch.core.geo.GeoPoint)", "org.egov.pgr.entity.Complaint.getLocation()", "complaint.getLocation().getLatitude()", "org.egov.pgr.entity.es.ComplaintIndex.setWardName(complaint.getLocation().getName())", "org.egov.pgr.entity.Complaint.getLocation()", "complaint.getLocation().getBoundaryNum().toString()", "java.util.Objects.nonNull(complaint.getLocation().getLongitude())", "org.egov.pgr.entity.Complaint.getLocation()", "org.egov.pgr.entity.Complaint.getLocation()", "complaint.getLocation().getBoundaryNum()", "org.egov.pgr.entity.Complaint.getLocation()", "org.egov.pgr.entity.Complaint.getLocation()", "java.util.Objects.nonNull(complaint.getLocation().getLatitude())", "complaint.getLocation().getLongitude()", "complaint.getLocation().getLatitude()", "complaint.getLocation().getLongitude()", "org.egov.pgr.entity.es.ComplaintIndex.setWardNo(complaint.getLocation().getBoundaryNum().toString())"], "Fixed commit": "da54393e467c4804f1ecd9c0e3c440e804390aea", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-11-10T06:11:17Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((varValue.charAt(0)) == '-') { intVal = -intVal; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1357/buggy-version/src.main.java.edu.kit.iti.formal.stvs.logic.io.xml.verification.GeTeTaImporter.java", "BodyUseAPI": [], "Fixed commit": "6f6eb867e0b7215b9bc30bbf4f9543c5c96fc3d8", "Url": "https://api.github.com/repos/VerifAPS/stvs", "Date": "2017-07-19T21:11:19Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.DataInputStream.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (signal != (org.apache.flink.python.api.streaming.io.PythonSplitProcessorStreamer.SIGNAL_BUFFER_REQUEST)) { throw new java.lang.RuntimeException(\"yo aint getting no buffer\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4228/buggy-version/flink-libraries.flink-python.src.main.java.org.apache.flink.python.api.streaming.io.PythonSplitProcessorStreamer.java", "BodyUseAPI": [], "Fixed commit": "85de04f8808f37dcdea1a761c033a360239b54d6", "Url": "https://api.github.com/repos/mathiaspet/pyflink", "Date": "2016-10-07T13:44:44Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (this.gradient)) { ret.gradient = null; }else { ret.gradient.assign(this.gradient); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6810/buggy-version/src.main.java.tv.floe.metronome.deeplearning.neuralnetwork.core.learning.AdagradLearningRate.java", "BodyUseAPI": [], "Fixed commit": "c57223fc8cdf5ada00435c8d6a26e8a17e79123f", "Url": "https://api.github.com/repos/jpatanooga/Metronome", "Date": "2014-04-08T13:36:46Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.walkmod.javalang.ast.expr.Expression>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(e instanceof org.walkmod.javalang.ast.expr.NullLiteralExpr)) { java.util.List<org.walkmod.javalang.ast.SymbolData> params = e.getSymbolData().getParameterizedTypes(); if ((params != null) && (!(params.isEmpty()))) { org.walkmod.javalang.compiler.symbols.SymbolType eType = ((org.walkmod.javalang.compiler.symbols.SymbolType) (params.get(0))); symbolTable.pushSymbol(letter, ReferenceType.TYPE, eType, e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7136/buggy-version/src.main.java.org.walkmod.javalang.compiler.reflection.AbstractGenericsBuilderFromParameterTypes.java", "BodyUseAPI": ["org.walkmod.javalang.compiler.symbols.SymbolTable.pushSymbol(java.lang.String,ReferenceType.TYPE,org.walkmod.javalang.compiler.symbols.SymbolType,org.walkmod.javalang.ast.expr.Expression)", "e.getSymbolData().getParameterizedTypes()", "org.walkmod.javalang.ast.expr.Expression.getSymbolData()"], "Fixed commit": "544c338918b0e652b3369e7f03fb6f794ae80997", "Url": "https://api.github.com/repos/rpau/javalang-compiler", "Date": "2016-03-20T15:28:16Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nextFile.isFile()) presets.add(modelservice.loadPresetModel(nextFile));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4050/buggy-version/org.eclipse.aid.core.src.org.eclipse.aid.core.cache.ModelPresetsPath.java", "BodyUseAPI": ["java.util.List<org.eclipse.aid.core.model.AidPreset.AidPreset>.add(modelservice.loadPresetModel(nextFile))", "org.eclipse.aid.core.service.AidPresetModelService.loadPresetModel(java.io.File)"], "Fixed commit": "b2536802087e0faeb7620cced156672f270f40d9", "Url": "https://api.github.com/repos/moley/aid2", "Date": "2014-03-10T17:29:25Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mybatis.generator.api.dom.java.CompilationUnit.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(baseModelJavaType.getFullyQualifiedName().endsWith(\"Example\"))) { org.mybatis.generator.api.dom.java.Field field = new org.mybatis.generator.api.dom.java.Field(\"serialVersionUID\", new org.mybatis.generator.api.dom.java.FullyQualifiedJavaType(\"long\")); field.setStatic(true); field.setFinal(true); field.setVisibility(JavaVisibility.PRIVATE); field.setInitializationString(\"1L\"); subModelClass.addField(field); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3930/buggy-version/mybatis-generator-plugin.src.main.java.com.github.mybatis.generator.plugin.ModelAndExampleSubClassPlugin.java", "BodyUseAPI": [], "Fixed commit": "3f5d656d6d0f9168dca48ee4fe9db06b5f3c6498", "Url": "https://api.github.com/repos/wangjohnny/mybatis-generator-ext", "Date": "2016-04-11T11:18:33Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.javascript.rhino.Node.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (parent.isGetProp()) { }else { parent.addChildBefore(buildInstrumentationStatement(node.getLineno()), node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4178/buggy-version/src.main.java.jscover.instrument.NodeProcessor.java", "BodyUseAPI": ["com.google.javascript.rhino.Node.addChildBefore(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node)"], "Fixed commit": "fd7335712785146669d54e361af4839352a189c7", "Url": "https://api.github.com/repos/tntim96/JSCover", "Date": "2017-07-14T13:16:09Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pyLintRunnable) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7973/buggy-version/plugins.org.python.pydev.src.org.python.pydev.builder.pylint.PyLintVisitor.java", "BodyUseAPI": [], "Fixed commit": "70ea357cf390dd131ea31f52cdb8f259338dce9d", "Url": "https://api.github.com/repos/fabioz/Pydev", "Date": "2017-04-10T12:25:46Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(vectorValues.isEmpty())) { final java.lang.String[] values = vectorValues.split(\",\"); final java.util.List<net.turtle.math.core.BigRational> coordinatesTemp = new java.util.ArrayList<>(values.length); for (final java.lang.String value : values) { final net.turtle.math.core.BigRational valueNumber = new net.turtle.math.core.BigRational(value); coordinatesTemp.add(valueNumber); } this.coordinates = coordinatesTemp; }else { this.coordinates = new java.util.ArrayList(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7490/buggy-version/src.main.java.net.turtle.math.core.BigVector.java", "BodyUseAPI": [], "Fixed commit": "06c83825df70b9dff0c260906a24eac6bdec5357", "Url": "https://api.github.com/repos/zolv/bignumbers", "Date": "2016-02-22T23:52:20Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.server.rule.RuleDao.selectById(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (rule == null) { throw new org.sonar.server.exceptions.NotFoundException((\"Impossible to find rule with ID \" + ruleId)); }else { java.util.Collection<org.sonar.server.rule.RuleParamDto> params = ruleDao.selectParameters(rule.getId()); java.util.Collection<org.sonar.server.rule.RuleRuleTagDto> tags = ruleDao.selectTags(rule.getId()); save(rule, params, tags); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9234/buggy-version/sonar-server.src.main.java.org.sonar.server.rule.RuleRegistry.java", "BodyUseAPI": ["org.sonar.server.rule.RuleDto.getId()", "org.sonar.server.rule.RuleDto.getId()", "org.sonar.server.rule.RuleDao.selectTags(rule.getId())", "org.sonar.server.rule.RuleDao.selectParameters(rule.getId())", "org.sonar.server.rule.RuleRegistry.save(org.sonar.server.rule.RuleDto,java.util.Collection<org.sonar.server.rule.RuleParamDto>,java.util.Collection<org.sonar.server.rule.RuleRuleTagDto>)"], "Fixed commit": "2b2714fb6409bf72234a8db8ae0189f91de82ba3", "Url": "https://api.github.com/repos/SonarSource/sonar", "Date": "2014-02-03T08:34:07Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (getClass().getName().contains(\"$$EnhancerByCGLIB$$\")) { genericSuperClass = getClass().getSuperclass().getGenericSuperclass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1098/buggy-version/faster-orm.src.main.java.org.faster.orm.service.hibernate.HibernateDaoSupport.java", "BodyUseAPI": [], "Fixed commit": "20660ded0d09778f1fef959a743acf6ab4b9d734", "Url": "https://api.github.com/repos/wensq/faster", "Date": "2013-07-11T01:45:08Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ugos.jiprolog.engine.BuiltIn.getRealTerm(params.getTail())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(rhs instanceof com.ugos.jiprolog.engine.ConsCell)) throw new com.ugos.jiprolog.engine.JIPTypeException(JIPTypeException.CALLABLE, rhs);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5413/buggy-version/src.com.ugos.jiprolog.engine.Clause.java", "BodyUseAPI": [], "Fixed commit": "288dbcba29185659d8a4460213464c91ba2267b8", "Url": "https://api.github.com/repos/jiprolog/jiprolog", "Date": "2015-04-20T10:40:55Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o instanceof java.util.ArrayList) { java.lang.String nested = \"\"; for (java.lang.Object el : ((java.util.ArrayList<java.lang.Object>) (o))) { nested += \"\\n\"; nested += el.toString(); } nested = nested.replace(\"\\n\", \"\\n \"); argString.add(nested); }else { if ((o == null) && ((obj.getBlockSpec().getFlag().contains(\"c\")) | (obj.getBlockSpec().getFlag().contains(\"e\")))) { java.lang.String e = \"\\n\" + (java.lang.String.valueOf(o)); e = e.replace(\"\\n\", \"\\n \"); argString.add(e); }else { argString.add(java.lang.String.valueOf(o)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8792/buggy-version/src.main.java.cs.vt.analysis.analyzer.nodes.Block.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.Object)", "java.lang.String.valueOf(java.lang.Object)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "f66f37212a8a1c4c6eecb612d8c254b9e1a235c3", "Url": "https://api.github.com/repos/peeratham/dataset-analyzer", "Date": "2016-01-29T16:07:26Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (target != null) { target.getInventory().addItem(pl.getSettings().getItemReward()); target.sendMessage(Lang.ITEM_RECEIVED); sender.sendMessage(((org.bukkit.ChatColor.GREEN) + \"Reward successfully sent !\")); }else { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"The target is not connected !\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3744/buggy-version/src.main.java.fr.zaral.npcreward.commands.ItemRewardCommand.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(Lang.ITEM_RECEIVED)", "target.getInventory().addItem(pl.getSettings().getItemReward())", "org.bukkit.entity.Player.getInventory()"], "Fixed commit": "6aca18de32de0c20217f4ff0ed43e45e3dbc6a0c", "Url": "https://api.github.com/repos/ZaralDev/NpcReward", "Date": "2016-04-28T18:04:27Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attachView == null) return getBuilder(text);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/499/buggy-version/library.src.main.java.com.hyena.coretext.CYSinglePageView.java", "BodyUseAPI": [], "Fixed commit": "1609508ac7181ffd525532446b6b9781899069d2", "Url": "https://api.github.com/repos/yangzc/AndroidCoreText", "Date": "2017-08-05T07:32:31Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBuilder) == null) { super.onMeasure(widthMeasureSpec, heightMeasureSpec); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/499/buggy-version/library.src.main.java.com.hyena.coretext.CYSinglePageView.java", "BodyUseAPI": [], "Fixed commit": "1609508ac7181ffd525532446b6b9781899069d2", "Url": "https://api.github.com/repos/yangzc/AndroidCoreText", "Date": "2017-08-05T07:32:31Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((arr.length) > 1) { intervalArr = arr[1].split(\" \"); }else { intervalArr = new java.lang.String[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/273/buggy-version/src.main.java.hackaton.cuckoodobot.CuckoodoBot.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "526beb4d5670c579147ae8bc7cda8c6fc1290ed2", "Url": "https://api.github.com/repos/rkhozinov/cuckoodo", "Date": "2017-03-19T10:13:34Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, com.orientechnologies.orient.server.distributed.ODistributedStorage>.get(iDatabase.getURL())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (storage == null) { storage = new com.orientechnologies.orient.server.distributed.ODistributedStorage(serverInstance, ((com.orientechnologies.orient.core.storage.OStorageEmbedded) (iDatabase.getStorage()))); final com.orientechnologies.orient.server.distributed.ODistributedStorage oldStorage = storages.putIfAbsent(iDatabase.getURL(), storage); if (oldStorage != null) storage = oldStorage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/368/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.ODistributedAbstractPlugin.java", "BodyUseAPI": [], "Fixed commit": "eca59f524241a12818143d46d1a20bca018f0dee", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-07-08T12:30:13Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.started)) this.started = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7699/buggy-version/src.handlers.Handler.java", "BodyUseAPI": [], "Fixed commit": "62e62dd87979a33398370002cec23a32e7218ad2", "Url": "https://api.github.com/repos/Mikkomario/RaceKingdoms", "Date": "2013-06-29T14:01:35Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((col.length) == 4) this.m_jbtncolor.setBackground(new java.awt.Color(java.lang.Integer.parseInt(col[0]), java.lang.Integer.parseInt(col[1]), java.lang.Integer.parseInt(col[2]), java.lang.Integer.parseInt(col[3])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8650/buggy-version/src-pos.com.openbravo.data.gui.JImageEditor.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JButton.setBackground(java.awt.Color)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "21043e5b2e52ae3200dbf095b75996b78954d712", "Url": "https://api.github.com/repos/rhinterndorfer/w4cash", "Date": "2016-04-05T19:14:05Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((col.length) == 1) this.m_jbtncolor.setBackground(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8650/buggy-version/src-pos.com.openbravo.data.gui.JImageEditor.java", "BodyUseAPI": [], "Fixed commit": "21043e5b2e52ae3200dbf095b75996b78954d712", "Url": "https://api.github.com/repos/rhinterndorfer/w4cash", "Date": "2016-04-05T19:14:05Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((col.length) == 3) this.m_jbtncolor.setBackground(new java.awt.Color(java.lang.Integer.parseInt(col[0]), java.lang.Integer.parseInt(col[1]), java.lang.Integer.parseInt(col[2])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8650/buggy-version/src-pos.com.openbravo.data.gui.JImageEditor.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JButton.setBackground(java.awt.Color)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "21043e5b2e52ae3200dbf095b75996b78954d712", "Url": "https://api.github.com/repos/rhinterndorfer/w4cash", "Date": "2016-04-05T19:14:05Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cursor.getCount()) == 0) { mBooksAroundMeGridView.setEmptyView(mEmptyView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5747/buggy-version/barter.li.src.li.barter.fragments.BooksAroundMeFragment.java", "BodyUseAPI": [], "Fixed commit": "fd52106cb1781f720403b322794464e3b84f05dc", "Url": "https://api.github.com/repos/barterli/barterli_android", "Date": "2014-06-23T10:31:48Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (level == (-1)) fp = new com.orientechnologies.orient.core.fetch.OFetchPlan.OFetchPlanLevel(0, (-1), level); else fp = new com.orientechnologies.orient.core.fetch.OFetchPlan.OFetchPlanLevel(0, 0, level);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3855/buggy-version/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchPlan.java", "BodyUseAPI": [], "Fixed commit": "e393a29bdd6a0dda409dcbfa2ec17c0ba40ed008", "Url": "https://api.github.com/repos/matanshukry/orientdb", "Date": "2015-06-01T13:33:55Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sum == 0) sum = pstat.getUpdateCount();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4505/buggy-version/src.org.nutz.dao.impl.sql.run.NutDaoExecutor.java", "BodyUseAPI": [], "Fixed commit": "1cd7f5d7838c2005677f3eac67472f448401f2ec", "Url": "https://api.github.com/repos/zhang-yan-talendbj/nutz", "Date": "2012-09-12T04:37:26Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 0) sum += i;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4505/buggy-version/src.org.nutz.dao.impl.sql.run.NutDaoExecutor.java", "BodyUseAPI": [], "Fixed commit": "1cd7f5d7838c2005677f3eac67472f448401f2ec", "Url": "https://api.github.com/repos/zhang-yan-talendbj/nutz", "Date": "2012-09-12T04:37:26Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ptc.foodList) != null) { for (int j = 0; j < (ptc.foodList.size()); j++) { antworld.client.A_Star.board[ptc.foodList.get(j).gridX][ptc.foodList.get(j).gridY] = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8801/buggy-version/src.antworld.client.A_Star.java", "BodyUseAPI": ["ptc.foodList.size()", "ptc.foodList.get(int)", "ptc.foodList.get(int)"], "Fixed commit": "edae1c1cde81d14ac9d7fb05635e8f2158a09905", "Url": "https://api.github.com/repos/awgGit/AntWorld_CS351", "Date": "2017-05-08T06:25:03Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ptc.foodList) != null) { for (int j = 0; j < (ptc.foodList.size()); j++) { antworld.client.A_Star.board[ptc.foodList.get(j).gridX][ptc.foodList.get(j).gridY] = new antworld.client.PathNode(ptc.foodList.get(j).gridX, ptc.foodList.get(j).gridY, 0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8801/buggy-version/src.antworld.client.A_Star.java", "BodyUseAPI": ["ptc.foodList.get(int)", "ptc.foodList.get(int)", "ptc.foodList.get(int)", "ptc.foodList.size()", "ptc.foodList.get(int)"], "Fixed commit": "edae1c1cde81d14ac9d7fb05635e8f2158a09905", "Url": "https://api.github.com/repos/awgGit/AntWorld_CS351", "Date": "2017-05-08T06:25:03Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((textColor.length()) < 2) { textColor = \"#ffffff\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2575/buggy-version/app.src.main.java.com.byteshaft.keyboard.CustomKeyboardView.java", "BodyUseAPI": [], "Fixed commit": "13abbdf7d4b718c28f9b1db8bc1727d364cc1f5a", "Url": "https://api.github.com/repos/fi8er1/keyboard", "Date": "2015-06-06T12:42:09Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((event.getEntity().getKiller()) == null)) { java.lang.String k = event.getEntity().getKiller().getName(); killer.add(k); }else { killer.add(\"Unknown\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4748/buggy-version/src.io.github.FiddyPercent.fiddycraft.FiddyCraftListener.java", "BodyUseAPI": ["org.bukkit.event.entity.EntityDeathEvent.getEntity()", "event.getEntity().getKiller().getName()", "event.getEntity().getKiller()"], "Fixed commit": "f21465d63554602ae7119db568ec1609d5f6830d", "Url": "https://api.github.com/repos/FiddyPercent/FiddyCraft", "Date": "2014-01-16T10:59:03Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (listx.toString().contains(\"Failed\")) { android.widget.Toast.makeText(mContext, listx, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2224/buggy-version/src.app.src.main.java.lighttimer.undefined.lighttimer.MainActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(mContext, listx, Toast.LENGTH_LONG).show()", "android.widget.Toast.makeText(android.content.Context,java.lang.String,Toast.LENGTH_LONG)"], "Fixed commit": "840dc16d5e3cfd8a3186c6f13377a029897454c4", "Url": "https://api.github.com/repos/sovereign313/LightTimer", "Date": "2017-07-06T08:22:35Z"},
{"Line": "=>768", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(renameManifestPackage)) { commands.add(\"--rename-manifest-package\"); commands.add(renameManifestPackage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6006/buggy-version/src.main.java.com.jayway.maven.plugins.android.phase09package.ApkMojo.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "7522a24c8ed5223b3d4d2ec01ad260f4cc822701", "Url": "https://api.github.com/repos/AlbinTheander/maven-android-plugin", "Date": "2011-05-05T20:55:47Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dynmap.markers.MarkerSet.createPolyLineMarker(java.lang.String,(\"\" + (c.getLowWind().getSpeed())),boolean,c.getWorld().getName(),double[],double[],double[],boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (l == null) { }else { l.setLineStyle(1, 0, Color.BLACK.asRGB()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1735/buggy-version/LivelyWorld.src.main.java.com.kylantraynor.livelyworld.hooks.DynmapHook.java", "BodyUseAPI": ["org.dynmap.markers.PolyLineMarker.setLineStyle(int,int,Color.BLACK.asRGB())"], "Fixed commit": "470bea4d77b3f5f7f05dc183db2d2257e6c4b069", "Url": "https://api.github.com/repos/KylanTraynor/LivelyWorld", "Date": "2017-08-03T11:47:48Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (servicesProvider.streamJavascriptServices(out)) { first = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4754/buggy-version/ocelot-web.src.main.java.org.ocelotds.marshallers.IServiceProviderMarshaller.java", "BodyUseAPI": [], "Fixed commit": "c2357f7a6c8e26311d7ddb578ac3e037f3bc971c", "Url": "https://api.github.com/repos/ocelotds/ocelot", "Date": "2015-12-12T01:14:13Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getRecentMessages()) != null) { for (int i = 0; i < 4; i++) { recentMessages[(i + 1)] = p.getRecentMessages()[i]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4076/buggy-version/Guestbook.src.main.java.studyR.MessageBoardServlet.java", "BodyUseAPI": ["studyR.Profile.getRecentMessages()"], "Fixed commit": "b5c3be0587bac778254d47a30ea8e6f25c7d1b41", "Url": "https://api.github.com/repos/mvandinh/ee461l_studyR", "Date": "2017-05-01T02:52:48Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(bean.signatures.isEmpty())) { int random = new java.util.Random().nextInt(bean.signatures.size()); com.itextpdf.text.Image img = com.itextpdf.text.Image.getInstance(bean.signatures.get(random).toURI().toURL()); img.scaleToFit(200, 100); img.setIndentationLeft((25 + (((random * random) * 14) % 51))); doc.add(img); }else { doc.add(new com.itextpdf.text.Paragraph(\" \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2894/buggy-version/src.main.java.net.vzurczak.timesheetgenerator.internal.PdfGenerator.java", "BodyUseAPI": ["java.util.Random.nextInt(bean.signatures.size())", "bean.signatures.get(int)", "bean.signatures.get(random).toURI().toURL()", "bean.signatures.size()", "com.itextpdf.text.Image.getInstance(bean.signatures.get(random).toURI().toURL())", "bean.signatures.get(random).toURI()"], "Fixed commit": "5597022287559b815d3f9f34fd2edd5d7dee1d5b", "Url": "https://api.github.com/repos/vincent-zurczak/time-sheet-generator", "Date": "2017-04-06T17:53:21Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!hasCommentField) { this.isFieldComment = hasCommentField; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3531/buggy-version/src.main.java.com.github.lecogiteur.csvbang.parser.CommentGrammarAction.java", "BodyUseAPI": [], "Fixed commit": "3b2d8b2c89e88798be446d7a3f0a8225261a9ac4", "Url": "https://api.github.com/repos/lecogiteur/csvbang", "Date": "2015-03-02T23:24:17Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((finalResult) > toRemove) { finalResult = (finalResult) - toRemove; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1151/buggy-version/org.osate.aadl2.errormodel.analysis.src.org.osate.aadl2.errormodel.analysis.actions.RBDAction.java", "BodyUseAPI": [], "Fixed commit": "1e15f6b395859eb790ec3fb195c34cc15e8d9b7a", "Url": "https://api.github.com/repos/osate/ErrorModelV2", "Date": "2013-05-09T19:03:40Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((settings.getServerURI()) != null) { java.net.URI uri = new java.net.URI(settings.getServerURI()); uri = uri.normalize(); java.lang.String uriString = uri.toString(); if (uriString.endsWith(\"/\")) { settings.setServerURI(uriString.substring(0, ((uriString.length()) - 1))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2391/buggy-version/dhis2.src.main.java.org.motechproject.dhis2.service.impl.SettingsServiceImpl.java", "BodyUseAPI": ["org.motechproject.dhis2.service.Settings.setServerURI(java.lang.String)", "org.motechproject.dhis2.service.Settings.getServerURI()"], "Fixed commit": "74c213dde5b2a9e979600493907fd3755477fcc6", "Url": "https://api.github.com/repos/mjazdzdewski/modules", "Date": "2016-09-26T13:21:31Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["app.flaneurs.com.flaneurs.models.InboxItem.getNew()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isNew) { android.support.v4.util.Pair<android.view.View, java.lang.String> p3 = android.support.v4.util.Pair.create(((android.view.View) (view.ivImageThumb)), \"image\"); android.support.v4.app.ActivityOptionsCompat options = android.support.v4.app.ActivityOptionsCompat.makeSceneTransitionAnimation(this, p3); startActivity(i, options.toBundle()); }else { android.support.v4.app.ActivityOptionsCompat options = android.support.v4.app.ActivityOptionsCompat.makeSceneTransitionAnimation(this); startActivity(i, options.toBundle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/411/buggy-version/Flaneurs.app.src.main.java.app.flaneurs.com.flaneurs.activities.InboxActivity.java", "BodyUseAPI": [], "Fixed commit": "040c7cd45b8b7481f768e4fcb02f5dc60957f7be", "Url": "https://api.github.com/repos/Flaneurs/WalkAbout", "Date": "2016-03-23T07:22:43Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["filters[i].getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(inValues.isEmpty())) { if ((inValues.get(0)) instanceof java.lang.String) { sb.append(\"'\").append(org.apache.commons.lang.StringUtils.join(((java.util.List<java.lang.String>) (filters[i].getValue())), \"','\")).append(\"'\"); }else { sb.append(org.apache.commons.lang.StringUtils.join(((java.util.List<java.lang.String>) (filters[i].getValue())), \",\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5120/buggy-version/deep-cassandra.src.main.java.com.stratio.deep.cassandra.util.CassandraUtils.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)"], "Fixed commit": "9b57bb8ae7fc7427665d4a42ddbbeec4ddaef056", "Url": "https://api.github.com/repos/Stratio/deep-spark", "Date": "2014-11-12T15:32:08Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filters[i].getValue()) instanceof java.lang.String) { value = singleQuote(value.trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5120/buggy-version/deep-cassandra.src.main.java.com.stratio.deep.cassandra.util.CassandraUtils.java", "BodyUseAPI": [], "Fixed commit": "9b57bb8ae7fc7427665d4a42ddbbeec4ddaef056", "Url": "https://api.github.com/repos/Stratio/deep-spark", "Date": "2014-11-12T15:32:08Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tistory.devyongsik.domain.CrescentCollection.getFields()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(crescentCollectionFieldList.contains(crescentField))) { crescentCollectionFieldList.add(crescentField); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4237/buggy-version/crescent_core_web.src.main.java.com.tistory.devyongsik.admin.CollectionManageServiceImpl.java", "BodyUseAPI": ["java.util.List<com.tistory.devyongsik.domain.CrescentCollectionField>.add(com.tistory.devyongsik.domain.CrescentCollectionField)"], "Fixed commit": "54e6122fa41c607b770e7bf1e05aa74e38df7d4f", "Url": "https://api.github.com/repos/need4spd/crescent", "Date": "2013-04-04T07:56:49Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((after) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4390/buggy-version/src.main.java.net.andreinc.mockneat.unit.seq.Seq.java", "BodyUseAPI": [], "Fixed commit": "8315b76e8bce0659fdd1c2c18cbfbec3727b3dc9", "Url": "https://api.github.com/repos/nomemory/mockneat", "Date": "2017-05-23T11:55:07Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newStatus == (PurchaseOrderStatus._2_received)) { purchaseDone = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1226/buggy-version/src.main.java.org.iabako.client.ui.form.business.purchase.PurchaseForm.java", "BodyUseAPI": [], "Fixed commit": "4c87d4abc1479bae780d8e661dd892eb3011655c", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2017-05-19T14:06:20Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geoserver.catalog.LayerInfo.getStyles()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (styles != null) { for (java.util.Iterator it = styles.iterator(); it.hasNext();) { org.geoserver.catalog.StyleInfo styleInfo = ((org.geoserver.catalog.StyleInfo) (it.next())); if (styleInfo == null) { it.remove(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/729/buggy-version/src.main.src.main.java.org.geoserver.catalog.impl.CatalogImpl.java", "BodyUseAPI": ["java.util.Set<org.geoserver.catalog.StyleInfo>.iterator()"], "Fixed commit": "2847e95614096a68aa843ee8d7d7086706365322", "Url": "https://api.github.com/repos/geosolutions-it/geoserver", "Date": "2016-07-13T14:01:18Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (client.isClientClient()) engine.GlobalData.setCraftFilter(engine.GlobalData.getCraftFilter());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4727/buggy-version/src.inventory.container.mob.TraderContainer.java", "BodyUseAPI": [], "Fixed commit": "2cabbf0cf6b983b07b172dd917df06cf88cf47c6", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-12-14T15:59:13Z"},
{"Line": "=>5", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MainClass.verbose) { java.lang.System.out.println(\"Replacing method called\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1015/buggy-version/src.timeshifter.ShiftedTimeSystem.java", "BodyUseAPI": [], "Fixed commit": "5e96ff5fafd219ce55b22d4a05259d1dfe1a458e", "Url": "https://api.github.com/repos/krems/TimeShifter", "Date": "2014-01-29T16:23:06Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tyrannyofheaven.bukkit.zPermissions.dao.BaseMemoryPermissionDao.getGroup(java.lang.String)", "org.tyrannyofheaven.bukkit.zPermissions.model.PermissionEntity.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((oldParent != null) && (!(oldParent.equals(group.getParent())))) { oldParent.getChildren().remove(group); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3128/buggy-version/src.main.java.org.tyrannyofheaven.bukkit.zPermissions.dao.BaseMemoryPermissionDao.java", "BodyUseAPI": ["oldParent.getChildren().remove(org.tyrannyofheaven.bukkit.zPermissions.model.PermissionEntity)", "org.tyrannyofheaven.bukkit.zPermissions.model.PermissionEntity.getChildren()"], "Fixed commit": "54986da68f819a3721197da9ab019c33a5474e06", "Url": "https://api.github.com/repos/ZerothAngel/zPermissions", "Date": "2013-05-14T04:34:11Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tyrannyofheaven.bukkit.zPermissions.dao.BaseMemoryPermissionDao.getEntity(java.lang.String,boolean,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((entity.getParent()) != null) { entity.getParent().getChildren().remove(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3128/buggy-version/src.main.java.org.tyrannyofheaven.bukkit.zPermissions.dao.BaseMemoryPermissionDao.java", "BodyUseAPI": ["org.tyrannyofheaven.bukkit.zPermissions.model.PermissionEntity.getParent()", "entity.getParent().getChildren()", "entity.getParent().getChildren().remove(org.tyrannyofheaven.bukkit.zPermissions.model.PermissionEntity)"], "Fixed commit": "54986da68f819a3721197da9ab019c33a5474e06", "Url": "https://api.github.com/repos/ZerothAngel/zPermissions", "Date": "2013-05-14T04:34:11Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (curvedScore >= 0) { stud.getGrades().get(curAssign.getID()).setScore(scoreString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8956/buggy-version/trunk.implementation.model.graph.Graph.java", "BodyUseAPI": [], "Fixed commit": "d88c120af1c393926a3d30dfe09aec29ef16d659", "Url": "https://api.github.com/repos/jjfazio/308Grader", "Date": "2014-03-12T22:14:48Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (relative == 0) { mBg.clearColorFilter(); }else { mBg.setColorFilter(android.support.v4.content.res.ResourcesCompat.getColor(getResources(), R.color.colorAccent, getContext().getTheme()), PorterDuff.Mode.MULTIPLY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1081/buggy-version/app.src.main.java.apps.xenione.com.swipelayout.example.swipe.TwoStepRightCoordinatorLayout.java", "BodyUseAPI": [], "Fixed commit": "ba7042906fa5e460f7391dae644c60b4652a38d4", "Url": "https://api.github.com/repos/xenione/swipe-maker", "Date": "2016-04-16T07:06:09Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(localBlogs.contains(blogElement))) { localBlogs.add(blogElement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4235/buggy-version/app.src.main.java.eu.nioc.tumblrbrowse.services.GetTumblrBlogs.java", "BodyUseAPI": ["java.util.List<eu.nioc.tumblrbrowse.models.BlogElement>.add(eu.nioc.tumblrbrowse.models.BlogElement)"], "Fixed commit": "0283b23ecc95b3d10f103b964cba683587b5777f", "Url": "https://api.github.com/repos/nioc/tumblr-photo-browse", "Date": "2017-02-28T22:52:08Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.yaml.snakeyaml.Yaml.loadAs(java.io.Reader,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (identityProviderEntity != null) { identityProviderConfig = identityProviderEntity.getIdentityProviderConfig(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8940/buggy-version/components.org.wso2.carbon.identity.gateway.src.main.java.org.wso2.carbon.identity.gateway.deployer.IdentityProviderDeployer.java", "BodyUseAPI": ["org.wso2.carbon.identity.gateway.common.model.idp.IdentityProviderEntity.getIdentityProviderConfig()"], "Fixed commit": "3e5757c1aef968350c710579dcf2c77930be0530", "Url": "https://api.github.com/repos/wso2/carbon-identity-framework", "Date": "2017-02-13T15:31:36Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (contactNo != null) { contact = nm.format(contactNo); contact = contact.replace(\",\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7018/buggy-version/app.src.main.java.com.android.clockwork.model.LoginManager.java", "BodyUseAPI": ["java.text.NumberFormat.format(java.lang.Double)"], "Fixed commit": "22869fe9688ed98173472a94361a897f1c8a46df", "Url": "https://api.github.com/repos/jaytanjiabao/ClockworkAndroid", "Date": "2015-09-02T16:24:50Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (contactNo != null) { contact = nm.format(contactNo); contact = contact.replace(\",\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7018/buggy-version/app.src.main.java.com.android.clockwork.model.RegisterManager.java", "BodyUseAPI": ["java.text.NumberFormat.format(java.lang.Double)"], "Fixed commit": "22869fe9688ed98173472a94361a897f1c8a46df", "Url": "https://api.github.com/repos/jaytanjiabao/ClockworkAndroid", "Date": "2015-09-02T16:24:50Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (contactNo != null) { contact = nm.format(contactNo); contact = contact.replace(\",\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7018/buggy-version/app.src.main.java.com.android.clockwork.model.FBLoginManager.java", "BodyUseAPI": ["java.text.NumberFormat.format(java.lang.Double)"], "Fixed commit": "22869fe9688ed98173472a94361a897f1c8a46df", "Url": "https://api.github.com/repos/jaytanjiabao/ClockworkAndroid", "Date": "2015-09-02T16:24:50Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!((GotoServlet.isNumeric(x)) && (GotoServlet.isNumeric(y)))) { out.println(\"false\"); }else { out.println(SocketConnection.fetch((((\"goto,\" + x) + \",\") + y))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4084/buggy-version/webservice.src.GotoServlet.java", "BodyUseAPI": ["SocketConnection.fetch(java.lang.String)", "java.io.PrintWriter.println(SocketConnection.fetch((((\"goto,\" + x) + \",\") + y)))"], "Fixed commit": "3bf7617467add4fd5057813f14ce283b0132a284", "Url": "https://api.github.com/repos/radiohead/runestone-2015", "Date": "2015-05-18T12:53:47Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(paired.contains(exit))) { paired.add(exit); org.jboss.byteman.agent.adapter.cfg.CodeLocation inverse = inverseMonitorPairs.put(exit, enter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6514/buggy-version/agent.src.main.java.org.jboss.byteman.agent.adapter.cfg.CFG.java", "BodyUseAPI": ["java.util.Map<org.jboss.byteman.agent.adapter.cfg.CodeLocation, org.jboss.byteman.agent.adapter.cfg.CodeLocation>.put(org.jboss.byteman.agent.adapter.cfg.CodeLocation,org.jboss.byteman.agent.adapter.cfg.CodeLocation)", "java.util.List<org.jboss.byteman.agent.adapter.cfg.CodeLocation>.add(org.jboss.byteman.agent.adapter.cfg.CodeLocation)"], "Fixed commit": "20670c21677a830746ae4f7acfaca6c4ad6ee594", "Url": "https://api.github.com/repos/adinn/byteman", "Date": "2011-09-30T16:57:09Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.DialogFragment.onCreateDialog(android.os.Bundle)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((dialog.getWindow()) != null) { dialog.getWindow().requestFeature(Window.FEATURE_NO_TITLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/662/buggy-version/app.src.main.java.org.tvheadend.tvhclient.fragments.FileBrowserFragment.java", "BodyUseAPI": ["android.app.Dialog.getWindow()", "dialog.getWindow().requestFeature(Window.FEATURE_NO_TITLE)"], "Fixed commit": "f91f1afe121e0635ffb77648a7354a66020221d5", "Url": "https://api.github.com/repos/rsiebert/TVHClient", "Date": "2016-09-21T18:16:38Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((bizElemRef.getReference()) == null) { try { java.net.URI uriValue = java.net.URI.create(\"-\"); bizElemRef.setReference(uriValue); } catch (java.lang.IllegalArgumentException ex) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/895/buggy-version/MdmiMapEditor.src.org.openhealthtools.mdht.mdmi.editor.map.tree.BusinessElementReferenceNode.java", "BodyUseAPI": [], "Fixed commit": "448e6ac5c6989747d573712e0ee24b58b60ff998", "Url": "https://api.github.com/repos/MDMI/MDMI", "Date": "2015-07-21T22:27:43Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((bizElemRef.getReferenceDatatype()) == null) { bizElemRef.setReferenceDatatype(DTSPrimitive.BINARY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/895/buggy-version/MdmiMapEditor.src.org.openhealthtools.mdht.mdmi.editor.map.tree.BusinessElementReferenceNode.java", "BodyUseAPI": [], "Fixed commit": "448e6ac5c6989747d573712e0ee24b58b60ff998", "Url": "https://api.github.com/repos/MDMI/MDMI", "Date": "2015-07-21T22:27:43Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (session.getUserEmail().equals(emailTxt.getText())) { model.User updateUsr = new model.User(emailTxt.getText(), passwordTxt.getText(), firstNameTxt.getText(), lastNameTxt.getText(), dobPicker.getValue().toString()); if (usrDao.updateUser(updateUsr)) controller.loadScreen(controller.HOME_FXML); else wrongLabel.setText(\"Invaild Information\"); }else wrongLabel.setText(\"Email cannot be changed\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2865/buggy-version/src.controller.EditController.java", "BodyUseAPI": ["javafx.scene.control.TextField.getText()"], "Fixed commit": "1557b1e168ca0fde6e2aa4dd5e39d61fe0a9b0cb", "Url": "https://api.github.com/repos/paulsoiya/teamj", "Date": "2015-04-03T01:49:48Z"},
{"Line": "=>834", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ksession instanceof org.drools.command.impl.CommandBasedStatefulKnowledgeSession) { sksImpl = ((org.drools.impl.StatefulKnowledgeSessionImpl) (((org.drools.command.impl.KnowledgeCommandContext) (((org.drools.command.impl.CommandBasedStatefulKnowledgeSession) (ksession)).getCommandService().getContext())).getStatefulKnowledgesession())); }else { sksImpl = ((org.drools.impl.StatefulKnowledgeSessionImpl) (ksession)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2766/buggy-version/pfpServices.knowledgeSessionService.src.main.java.org.jboss.processFlow.knowledgeService.BaseKnowledgeSessionBean.java", "BodyUseAPI": [], "Fixed commit": "62e7a14dcc452d77e65b1781f11e7acb3bd87480", "Url": "https://api.github.com/repos/jboss-gpe/processFlowProvision", "Date": "2014-01-10T03:16:36Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != row) { if (mIsSearchMode) { mLiveMessagesRowList.remove(row); }else { removeFromEventGroup(row); int position = getPosition(row); super.remove(row); checkEventGroupsMerge(row, position); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1112/buggy-version/vector.src.main.java.im.vector.adapters.VectorMessagesAdapter.java", "BodyUseAPI": ["org.matrix.androidsdk.adapters.AbstractMessagesAdapter.remove(org.matrix.androidsdk.adapters.MessageRow)", "java.util.ArrayList<org.matrix.androidsdk.adapters.MessageRow>.remove(org.matrix.androidsdk.adapters.MessageRow)", "im.vector.adapters.VectorMessagesAdapter.removeFromEventGroup(org.matrix.androidsdk.adapters.MessageRow)", "im.vector.adapters.VectorMessagesAdapter.getPosition(org.matrix.androidsdk.adapters.MessageRow)", "im.vector.adapters.VectorMessagesAdapter.checkEventGroupsMerge(org.matrix.androidsdk.adapters.MessageRow,int)"], "Fixed commit": "563d566c4a8ac6574e6af1dd7910ccaf72119815", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-11-23T10:39:48Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((posOffset) != null) { org.lwjgl.opengl.GL11.glTranslated(posOffset.x(), posOffset.y(), posOffset.z()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9250/buggy-version/src.main.java.com.builtbroken.icbm.content.missile.tile.TileCrashedMissile.java", "BodyUseAPI": [], "Fixed commit": "eee91a6e2ca35c2f4e51b38cfdad8e3d34d4a848", "Url": "https://api.github.com/repos/BuiltBrokenModding/ICBM", "Date": "2016-05-04T17:34:50Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((posOffset) != null) { org.lwjgl.opengl.GL11.glTranslated(posOffset.x(), posOffset.y(), posOffset.z()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9250/buggy-version/src.main.java.com.builtbroken.icbm.content.missile.tile.TileCrashedMissile.java", "BodyUseAPI": [], "Fixed commit": "eee91a6e2ca35c2f4e51b38cfdad8e3d34d4a848", "Url": "https://api.github.com/repos/BuiltBrokenModding/ICBM", "Date": "2016-05-04T17:34:50Z"},
{"Line": "=>1575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8239/buggy-version/src.com.bekvon.bukkit.residence.Residence.java", "BodyUseAPI": [], "Fixed commit": "e315e135ef3c47e5c039a46b7fb33d8e080b0fcb", "Url": "https://api.github.com/repos/bekvon/Residence", "Date": "2011-09-06T20:45:40Z"},
{"Line": "=>1517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 2) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8239/buggy-version/src.com.bekvon.bukkit.residence.Residence.java", "BodyUseAPI": [], "Fixed commit": "e315e135ef3c47e5c039a46b7fb33d8e080b0fcb", "Url": "https://api.github.com/repos/bekvon/Residence", "Date": "2011-09-06T20:45:40Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getMeasuredHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mHeight) < (((mTop) + childHeight) + bottomMargin)) { mHeight = ((mTop) + childHeight) + bottomMargin; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1058/buggy-version/animationwraplayout.src.main.java.com.github.sjnyag.AnimationWrapLayout.java", "BodyUseAPI": [], "Fixed commit": "69e94fdf5f29e74ac5828676fa14ee533071a460", "Url": "https://api.github.com/repos/sjnyag/AnimationWrapLayout", "Date": "2017-03-22T00:59:21Z"},
{"Line": "=>868", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.google.android.gms.games.multiplayer.Participant>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((first.getDisplayName().length()) > n) { opponentPlayer.setName(second.getDisplayName().substring(0, n)); }else { opponentPlayer.setName(second.getDisplayName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7610/buggy-version/app.src.main.java.com.gomuku.rs.gomuku.GamePage.java", "BodyUseAPI": ["com.gomuku.rs.gomuku.Player.setName(second.getDisplayName().substring(0, n))", "second.getDisplayName().substring(int,int)"], "Fixed commit": "45c6ba6d283c6cff1f604843a280b7b74ef2c6ce", "Url": "https://api.github.com/repos/tsundin/CS454Group6_Gomoku", "Date": "2017-03-11T21:26:46Z"},
{"Line": "=>858", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.google.android.gms.games.multiplayer.Participant>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((first.getDisplayName().length()) > n) { thisPlayer.setName(first.getDisplayName().substring(0, n)); }else { thisPlayer.setName(first.getDisplayName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7610/buggy-version/app.src.main.java.com.gomuku.rs.gomuku.GamePage.java", "BodyUseAPI": ["com.google.android.gms.games.multiplayer.Participant.getDisplayName()", "com.google.android.gms.games.multiplayer.Participant.getDisplayName()", "com.gomuku.rs.gomuku.Player.setName(first.getDisplayName())", "com.gomuku.rs.gomuku.Player.setName(first.getDisplayName().substring(0, n))", "first.getDisplayName().substring(int,int)"], "Fixed commit": "45c6ba6d283c6cff1f604843a280b7b74ef2c6ce", "Url": "https://api.github.com/repos/tsundin/CS454Group6_Gomoku", "Date": "2017-03-11T21:26:46Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.micah.randomselect.Data.getLength()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (length <= 0) { android.app.AlertDialog.Builder builder1 = new android.app.AlertDialog.Builder(this); builder1.setMessage(\"Unable to find any data. Please try again later.\"); builder1.setCancelable(true); builder1.setPositiveButton(\"Okay\", new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int id) { dialog.cancel(); } }); android.app.AlertDialog alert11 = builder1.create(); alert11.show(); }else { int selection = -1; while ((selection < 0) || (selection > (com.example.micah.randomselect.Data.getLength()))) { selection = ((int) ((java.lang.Math.random()) * (com.example.micah.randomselect.Data.getLength()))); } tvOutput.setText(com.example.micah.randomselect.Data.getData(selection)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9200/buggy-version/app.src.main.java.com.example.micah.randomselect.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5bc6d0526599dc7b0a77ebdc895ce44b225b75a7", "Url": "https://api.github.com/repos/MicahFender/RandomSelect", "Date": "2016-03-03T03:36:26Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(canRespond())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/112/buggy-version/src.gfx.forms.presets.PauseMenuForm.java", "BodyUseAPI": [], "Fixed commit": "831f2db6fa8e3bd25dd8a03fdad6f060070e079a", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2015-12-01T08:47:54Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cardName.equals(\"\u5723\u708e\u9b54\u6cd5\u5e08\")) { cardName = \"\u9a6d\u7075\u6cd5\u5e08\"; }else if (cardName.equals(\"\u8840\u796d\u6076\u9b54\")) { cardName = \"\u6076\u9b54\u4f2f\u7235\"; }else if (cardName.equals(\"\u8840\u70bc\u5deb\u5996\")) { cardName = \"\u5deb\u5996\u5b66\u5f92\"; }else if (cardName.equals(\"\u8840\u77b3\u9b54\u5251\u5e08\")) { cardName = \"\u8d64\u77b3\u9b54\u5251\u5e08\"; }else if (cardName.equals(\"\u8840\u8272\u9a91\u58eb\")) { cardName = \"\u6697\u8272\u9a91\u58eb\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3418/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.officialdata.OfficialDataStore.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "cdc7228fbf2fb7b3df7f1819c12c0cf0c114c8c3", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2015-10-05T17:52:07Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user.getText().toString()) == \"null\") { register.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1858/buggy-version/EatUBC.src.com.jminions.eatubc.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c3119fb0f340a0e3cc87f716da1b616cc2ab6616", "Url": "https://api.github.com/repos/JMinions/module2", "Date": "2014-04-07T02:06:16Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, we.should.list.Category>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(cat.getName().equals(REFERRALS.getName()))) { addMenu.add(R.id.add_item, i, i, s); mMenuIDs.put(i, cat); i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2266/buggy-version/src.we.should.WeShouldActivity.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, we.should.list.Category>.put(int,we.should.list.Category)"], "Fixed commit": "6c67480fcd992f1ef2575091f51da67035c26a7b", "Url": "https://api.github.com/repos/ccemeraldeyes/AndroidLunch", "Date": "2012-05-17T22:51:42Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((trimmed.length()) == 0) || (\"\\n\".equals(trimmed))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/337/buggy-version/src.main.java.fr.vinze.textanalysis.parser.impl.XHTMLParser.java", "BodyUseAPI": [], "Fixed commit": "410b0c22bb00f6e96c04c430bd8599128eed5ea3", "Url": "https://api.github.com/repos/vinzelec/textanalysis", "Date": "2014-10-19T20:22:25Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentGesture) == null) { currentGesture = gesture.get(0).type().toString(); if ((gesture.get(0).type()) == (Gesture.Type.TYPE_SWIPE)) { com.lithium.SwipeGesture swipeGesture = new com.lithium.SwipeGesture(gesture.get(0)); com.lithium.Vector swipeDirection = swipeGesture.direction(); if ((swipeDirection.getX()) < 0) { sp.playSound(SoundPlayer.LEFT); }else { sp.playSound(SoundPlayer.RIGHT); } } if ((gesture.get(0).type()) == (Gesture.Type.TYPE_KEY_TAP)) { sp.playSound(SoundPlayer.TAP); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/409/buggy-version/com.lithium.GestureListener.java", "BodyUseAPI": [], "Fixed commit": "723878d1f5e79f3acae484420476708dc3078608", "Url": "https://api.github.com/repos/koedwards/MPC_LeapMotion", "Date": "2014-09-20T14:02:20Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getColor()) != (pt.getOriginalPiece().getColor())) { for (edu.mccc.cos210.fp2014.cm.piece.PossibleTile move : p.getLazyTiles(bClone)) { if (((move.getX()) == (k.getX())) && ((move.getY()) == (k.getY()))) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/836/buggy-version/src.edu.mccc.cos210.fp2014.cm.piece.Piece.java", "BodyUseAPI": ["edu.mccc.cos210.fp2014.cm.piece.Piece.getLazyTiles(edu.mccc.cos210.fp2014.cm.game.Board)"], "Fixed commit": "b97847f3d26948007f349a8c1dcbc9360a9b5714", "Url": "https://api.github.com/repos/Unstable-Robert/Checkmate3000NetworkAIEdition", "Date": "2014-04-22T06:17:36Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stack.getStackDepth()) > 0) { stack.getStackItem(0).setUserValue(userObject); userObject = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4022/buggy-version/src.com.mebigfatguy.fbcontrib.detect.WriteOnlyCollection.java", "BodyUseAPI": ["edu.umd.cs.findbugs.OpcodeStack.getStackItem(int)", "stack.getStackItem(0).setUserValue(java.lang.Object)"], "Fixed commit": "eb3493917deb72693ffabfcd450c20616e46109e", "Url": "https://api.github.com/repos/mebigfatguy/fb-contrib", "Date": "2014-02-11T20:36:06Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stack.getStackDepth()) > 0) { userObject = stack.getStackItem(0).getUserValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4022/buggy-version/src.com.mebigfatguy.fbcontrib.detect.WriteOnlyCollection.java", "BodyUseAPI": ["stack.getStackItem(0).getUserValue()", "edu.umd.cs.findbugs.OpcodeStack.getStackItem(int)"], "Fixed commit": "eb3493917deb72693ffabfcd450c20616e46109e", "Url": "https://api.github.com/repos/mebigfatguy/fb-contrib", "Date": "2014-02-11T20:36:06Z"},
{"Line": "=>732", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.compiere.model.MJournal.processIt(org.compiere.model.DOCACTION_Complete)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!sucess) { throw new org.adempiere.exceptions.AdempiereException(reverse.getProcessMsg()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1/buggy-version/patches.org.compiere.model.MJournal.java", "BodyUseAPI": [], "Fixed commit": "ab085b74a51daa4b126196a48ffd895802c2f29a", "Url": "https://api.github.com/repos/erpcya/LVE-ADempiere", "Date": "2015-05-21T04:14:29Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fhtw.bsa2.gafert_steiner.BloodMonitor.bluetooth.BloodPressureDeviceConnector.connect(fhtw.bsa2.gafert_steiner.BloodMonitor.bluetooth.BloodPressureProfile,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (successful) { es.dmoral.toasty.Toasty.success(this, \"Blood Pressure Device connected\", Toast.LENGTH_LONG).show(); }else { es.dmoral.toasty.Toasty.error(this, \"Could not connect to Blood Pressure Device\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1069/buggy-version/app.src.main.java.fhtw.bsa2.gafert_steiner.BloodMonitor.activities.AddActivity.java", "BodyUseAPI": [], "Fixed commit": "f0849d0c56fad2b69b2a7cf4308c1fc82d600d8a", "Url": "https://api.github.com/repos/gafert/BloodMonitor", "Date": "2017-06-29T19:13:55Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getCurrentFrame()) == 5) entity.playSound(\"mhfc:deviljho.tailwhip\", 2.0F, 1.0F);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/458/buggy-version/src.main.java.mhfc.net.common.ai.entity.boss.deviljho.DeviljhoTailWhip.java", "BodyUseAPI": [], "Fixed commit": "6e2a32f6f5d8eb120928209d1ea35b3e8217814d", "Url": "https://api.github.com/repos/Guild-Hall/MHFC", "Date": "2016-07-05T10:46:12Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck.getLine(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(line.isEmpty())) { final int start = getLineStart(line); if (indentLevel.isGreaterThan(start)) { logChildError(lineNum, start, indentLevel); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5865/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler.getLineStart(java.lang.String)"], "Fixed commit": "12869800359559f225a6a66a17d0517ef5f36d7b", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2015-12-17T21:59:15Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentLoc == null) { java.lang.System.out.println(\"test\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4249/buggy-version/CSS.java", "BodyUseAPI": [], "Fixed commit": "2ac830594325e614ddcf19b659dff5eadfbc9195", "Url": "https://api.github.com/repos/sunwooha/MinotaursMaze", "Date": "2017-11-29T01:26:00Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((workoutObj.getWorkoutDate()) != null) && (group.g203.justalittlefit.util.Utils.isToday(workoutObj.getWorkoutDate()))) { bundle.putString(Constants.TODAY_HIGHLIGHT_KEY, Constants.TODAY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5306/buggy-version/app.src.main.java.group.g203.justalittlefit.adapter.WorkoutRvNameAdapter.java", "BodyUseAPI": [], "Fixed commit": "dcff9dc72e666e55fc48a0b1f8b602cb669d625b", "Url": "https://api.github.com/repos/tmsmart/just-a-little-fit", "Date": "2016-04-02T01:25:19Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(GeocodingService.PARAM_IN_ADDRESS_TEXT)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(android.text.TextUtils.equals(query, mLastQuery))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1366/buggy-version/sample.src.com.manuelpeinado.geocodingtask.demo.GeocodingServiceActivity.java", "BodyUseAPI": [], "Fixed commit": "725d1cc5a877991617a5506cec1427baef4ae818", "Url": "https://api.github.com/repos/ManuelPeinado/GeocodingTask", "Date": "2013-05-19T20:29:01Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flangeDiameter) < (this.boreDiameter)) { handler.logError(\"Termination flange diameter must not be less than bore diameter.\"); }else if ((terminalBorePoint != null) && (((terminalBorePoint.boreDiameter) - (flangeDiameter)) > 1.0E-5)) { handler.logError(\"Termination flange diameter must not be less than bore diameter.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8375/buggy-version/WWIDesigner.src.main.com.wwidesigner.geometry.Termination.java", "BodyUseAPI": [], "Fixed commit": "7295fba875d5d5ccf5479434ec7c61836a619aef", "Url": "https://api.github.com/repos/edwardkort/WWIDesigner", "Date": "2016-08-12T01:21:26Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nasceniaco.controller.RecommendationController.retrieveRecommendationSetFromCache(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (cachedSingleRecommendation != null) { return findTogetherRecommendationResultSet(pageNumber, cachedSingleRecommendation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9089/buggy-version/src.main.java.com.nasceniaco.controller.RecommendationController.java", "BodyUseAPI": ["com.nasceniaco.controller.RecommendationController.findTogetherRecommendationResultSet(int,com.nasceniaco.controller.RecommendationResultsSet)"], "Fixed commit": "db768399ac6a6f168e4cf0f51944061ad1b1b4c1", "Url": "https://api.github.com/repos/fuadomar/biyeta-profile-recommendation", "Date": "2017-07-06T10:37:31Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nasceniaco.redis.service.RedisService.findCachedSingleRecommendation(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (cachedSingleRecommendation != null) { return findSingleRecommendationResultSet(pageNumber, cachedSingleRecommendation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9089/buggy-version/src.main.java.com.nasceniaco.controller.RecommendationController.java", "BodyUseAPI": ["com.nasceniaco.controller.RecommendationController.findSingleRecommendationResultSet(int,com.nasceniaco.controller.RecommendationResultsSet)"], "Fixed commit": "db768399ac6a6f168e4cf0f51944061ad1b1b4c1", "Url": "https://api.github.com/repos/fuadomar/biyeta-profile-recommendation", "Date": "2017-07-06T10:37:31Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.notes.isEmpty()) { return noteRange; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1056/buggy-version/src.cs3500.music.model.MusicModel.java", "BodyUseAPI": [], "Fixed commit": "2e9e37bb4431636e2fc1c7d51e4c6a910ecf987b", "Url": "https://api.github.com/repos/evanmjohnson/music-editor", "Date": "2016-11-08T16:41:41Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ac.uk.abdn.foobs.utils.XMLUtils.getIntValue(org.w3c.dom.Element,java.lang.String)", "ac.uk.abdn.foobs.utils.XMLUtils.getIntValue(org.w3c.dom.Element,java.lang.String)", "ac.uk.abdn.foobs.utils.XMLUtils.getIntValue(org.w3c.dom.Element,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((hygiene != null) && (structural != null)) && (confidence != null)) { scores = new ac.uk.abdn.foobs.fsa.Scores(hygiene, structural, confidence); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4987/buggy-version/src.main.java.ac.uk.abdn.foobs.EstablishmentFactory.java", "BodyUseAPI": [], "Fixed commit": "ac721022f9b1c94e7048182b3448b440e3afbb25", "Url": "https://api.github.com/repos/FoodSentimentObservatory/data-collectors", "Date": "2017-04-29T19:10:00Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JList<org.oruji.peyk.PeykUser>.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((userListModel.getSize()) != 0) { java.lang.Object item = userListModel.getElementAt(index); final org.oruji.peyk.PeykUser selectedUser = ((org.oruji.peyk.PeykUser) (item)); userJList.ensureIndexIsVisible(index); org.oruji.peyk.ChatFrame.getChatFrame(selectedUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4113/buggy-version/src.main.java.org.oruji.peyk.PeykFrame.java", "BodyUseAPI": ["javax.swing.ListModel<org.oruji.peyk.PeykUser>.getElementAt(int)"], "Fixed commit": "655298bafe7f30f3291cfbfd57698e7e74db4447", "Url": "https://api.github.com/repos/oruji/peyk", "Date": "2015-03-04T17:05:34Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((message.equals(\"null\")) || (message.equals(\"\"))) mRegExValidationMessage = null; else mRegExValidationMessage = message;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7926/buggy-version/src.org.adaptlab.chpir.android.survey.Models.Question.java", "BodyUseAPI": [], "Fixed commit": "b809542d86b6625cf50e66635d1a119ab15e5194", "Url": "https://api.github.com/repos/mnipper/AndroidSurvey", "Date": "2014-01-24T21:58:33Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((message.equals(\"null\")) || (message.equals(\"\"))) mRegExValidationMessage = null; else mRegExValidationMessage = message;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7926/buggy-version/src.org.adaptlab.chpir.android.survey.Models.QuestionTranslation.java", "BodyUseAPI": [], "Fixed commit": "b809542d86b6625cf50e66635d1a119ab15e5194", "Url": "https://api.github.com/repos/mnipper/AndroidSurvey", "Date": "2014-01-24T21:58:33Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sensitivity <= 1.0E-4F) { sensitivity = 1.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/473/buggy-version/src.org.kde.kdeconnect.Plugins.MousePadPlugin.MousePadPlugin.java", "BodyUseAPI": [], "Fixed commit": "d8aab59d4bf24fbededbcd3c4199f05593fcdcf3", "Url": "https://api.github.com/repos/KDE/kdeconnect-android", "Date": "2016-06-04T11:45:33Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sceneToolbar) != null) { toolbarContainer.remove(sceneToolbar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8095/buggy-version/JME3-SDK.jme3-core.src.com.jme3.gde.core.sceneviewer.SceneViewerTopComponent.java", "BodyUseAPI": [], "Fixed commit": "8034e04d221293e1a7b4d783c2d1f95d07b3c98c", "Url": "https://api.github.com/repos/shamanDevel/shaman.rpg", "Date": "2014-07-13T15:07:09Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.carcv.core.model.file.FileEntry.getCarImages()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (images.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4674/buggy-version/carcv-core.src.main.java.org.carcv.impl.core.detect.CarSorterImpl.java", "BodyUseAPI": [], "Fixed commit": "c3f536369ad2123666b02e08739e5aa0daa97bfb", "Url": "https://api.github.com/repos/oskopek/carcv", "Date": "2013-11-18T21:36:57Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.sH) != null) { if (!(this.sH.equals(\"\"))) { json.put(edu.aku.hassannaqvi.sero_afghanistan.contracts.FormsContract.singleForm.COLUMN_SH, (this.sH.equals(\"\") ? org.json.JSONObject.NULL : new org.json.JSONObject(this.sH))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5659/buggy-version/app.src.main.java.edu.aku.hassannaqvi.sero_afghanistan.contracts.FormsContract.java", "BodyUseAPI": [], "Fixed commit": "7cd9e17f52a33276428b60e60f448e5c31661bd8", "Url": "https://api.github.com/repos/shznaqvi/SERO-AFG", "Date": "2017-10-30T07:32:35Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aReport == null) { throw new java.lang.IllegalArgumentException(\"Report class cannot be null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/494/buggy-version/dkpro-lab-core.src.main.java.de.tudarmstadt.ukp.dkpro.lab.task.impl.TaskBase.java", "BodyUseAPI": [], "Fixed commit": "def6f44e6fae6e3ebd27e21c16b248a2d48be90f", "Url": "https://api.github.com/repos/dkpro/dkpro-lab", "Date": "2014-09-09T15:02:51Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sca.isEmpty()) { org.holoeverywhere.widget.Toast.makeText(this, \"Brak wpis\u00f3w do zsynchronizowania\", Toast.LENGTH_LONG).show(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2091/buggy-version/src.main.java.com.zeyomir.ocfun.gui.MyLogs.java", "BodyUseAPI": [], "Fixed commit": "b1455360ea711a1886ad5f60ff00217356be9a90", "Url": "https://api.github.com/repos/zeyomir/OpenCachingFun", "Date": "2014-01-09T11:02:59Z"},
{"Line": "=>814", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (appInfo.isAForkedRepo()) { java.lang.String userName = org.wso2.developerstudio.appfactory.core.authentication.Authenticator.getInstance().getCredentials().getUser(); if (org.wso2.developerstudio.appfactory.core.authentication.Authenticator.getInstance().isAppCloud()) { userName = org.wso2.developerstudio.appfactory.core.authentication.Authenticator.getInstance().getCredentials().getCloudUserName(); } builderBaseUrl = builderBaseUrl.replace(\"default\", (\"default-\" + userName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7179/buggy-version/appfactory.org.wso2.developerstudio.appfactory.ui.src.org.wso2.developerstudio.appfactory.ui.views.AppfactoryApplicationListView.java", "BodyUseAPI": [], "Fixed commit": "9d34d42344f6fa0ad389bf291caa08a3ce10c3fd", "Url": "https://api.github.com/repos/kaviththiranga/developer-studio", "Date": "2014-07-11T05:56:15Z"},
{"Line": "=>911", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (appInfo.isAForkedRepo()) { params.put(\"action\", JagApiProperties.FORKED_REPO_INFO_ACTION); }else { params.put(\"action\", JagApiProperties.App_BUILD_INFO_ACTION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7179/buggy-version/appfactory.org.wso2.developerstudio.appfactory.ui.src.org.wso2.developerstudio.appfactory.ui.views.AppfactoryApplicationListView.java", "BodyUseAPI": [], "Fixed commit": "9d34d42344f6fa0ad389bf291caa08a3ce10c3fd", "Url": "https://api.github.com/repos/kaviththiranga/developer-studio", "Date": "2014-07-11T05:56:15Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(profile.usesCompounds())) && (!(text.contains(((\" \" + term) + \" \"))))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3635/buggy-version/ang.analyzer.src.main.java.ang.analyzer.Analyzer.java", "BodyUseAPI": [], "Fixed commit": "eb03ccefa129adbe31dc3287413ca92a525f4798", "Url": "https://api.github.com/repos/spinfo/ang", "Date": "2016-08-30T15:48:01Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.tum.in.tumcampusapp.auxiliary.NetUtils.downloadJson(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((departures.get().get(\"departureList\")) == null) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1906/buggy-version/app.src.main.java.de.tum.in.tumcampusapp.managers.TransportManager.java", "BodyUseAPI": [], "Fixed commit": "0f426dcc33f273dc0de04fff544bff2d29d5395d", "Url": "https://api.github.com/repos/TCA-Team/TumCampusApp", "Date": "2016-10-18T07:25:24Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.description)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (description != null) { description.setText(expense.getDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7908/buggy-version/src.com.example.delteutgifter.expenseLogItemAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(expense.getDescription())"], "Fixed commit": "2d2f5ae6d0683e3878d40019d3a979c3bf95db12", "Url": "https://api.github.com/repos/einar90/SharedExpenses", "Date": "2013-03-14T21:20:20Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (post[i].equalsIgnoreCase(\"not\")) { ekspresi = ((((ekspresi) + (post[i])) + \" \") + (post[(++i)])) + \" \"; }else stk.add(post[i]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/430/buggy-version/CalculatorNanoQ-v1.0.src.edu.nanoq.ekspresi.Prefix.java", "BodyUseAPI": ["java.util.Stack<java.lang.String>.add(java.lang.String)"], "Fixed commit": "7162c35121d4c17ff753991a3b433f5540e36131", "Url": "https://api.github.com/repos/natanelia/CalcJava-NanoQ", "Date": "2015-04-07T18:18:55Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((aclUuidList == null) || (dpId == null)) { org.opendaylight.netvirt.aclservice.AbstractEgressAclServiceImpl.LOG.warn(\"one of the egress acl parameters can not be null. sg {}, dpId {}\", aclUuidList, dpId); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9170/buggy-version/vpnservice.aclservice.impl.src.main.java.org.opendaylight.netvirt.aclservice.AbstractEgressAclServiceImpl.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,java.util.List<org.opendaylight.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.yang.types.rev130715.Uuid>,java.math.BigInteger)"], "Fixed commit": "a7b7e379128658b712ddefb39a2ab40ce66487a1", "Url": "https://api.github.com/repos/opendaylight/netvirt", "Date": "2016-09-02T20:05:25Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getParcelableExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (event != null) { android.util.Log.d(com.cse403.matchonthestreet.view.MapsActivity.TAG, (\"Maps was passed the event: \" + (event.title))); android.util.Log.d(com.cse403.matchonthestreet.view.MapsActivity.TAG, (((\"passed event location \" + (event.location.getLatitude())) + \" \") + (event.location.getLongitude()))); mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(new com.google.android.gms.maps.model.LatLng(event.location.getLatitude(), event.location.getLongitude()), com.cse403.matchonthestreet.view.MapsActivity.ZOOM_IN_MAGNITUDE)); displayMarkerInfo(event); }else { centerOnLocation = true; if ((mCurrentLocation) != null) mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(new com.google.android.gms.maps.model.LatLng(mCurrentLocation.getLatitude(), mCurrentLocation.getLongitude()), com.cse403.matchonthestreet.view.MapsActivity.ZOOM_IN_MAGNITUDE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/69/buggy-version/app.src.main.java.com.cse403.matchonthestreet.view.MapsActivity.java", "BodyUseAPI": ["event.location.getLatitude()", "android.util.Log.d(java.lang.String,(((\"passed event location \" + (event.location.getLatitude())) + \" \") + (event.location.getLongitude())))", "android.util.Log.d(java.lang.String,(\"Maps was passed the event: \" + (event.title)))", "com.google.android.gms.maps.GoogleMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(new com.google.android.gms.maps.model.LatLng(event.location.getLatitude(), event.location.getLongitude()), com.cse403.matchonthestreet.view.MapsActivity.ZOOM_IN_MAGNITUDE))", "event.location.getLatitude()", "event.location.getLongitude()", "event.location.getLongitude()", "com.cse403.matchonthestreet.view.MapsActivity.displayMarkerInfo(com.cse403.matchonthestreet.models.Event)", "com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(com.google.android.gms.maps.model.LatLng,int)"], "Fixed commit": "da67fafa738ab5382289709c93b252a92cd6f52a", "Url": "https://api.github.com/repos/MatchOnTheStreet/MatchOnTheStreet", "Date": "2016-02-27T04:15:34Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (line - 1)) { int origin_column = column; for (int j = 0; j < origin_column; j++) { if ((sourceLine.charAt(j)) == '\\t') { column += 3; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7731/buggy-version/src.main.java.jetbrick.template.utils.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "18eb3a7ed922fd2ac680d82b687e854f9f9900b7", "Url": "https://api.github.com/repos/subchen/jetbrick-template", "Date": "2013-11-30T06:43:46Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Class, com.frs.alto.nosql.mapper.NoSqlClassMapping>.get(instance.getClass())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (java.util.Date.class.isAssignableFrom(mapping.getRangeKeyType())) { java.util.Date rangeValue = ((java.util.Date) (org.apache.commons.beanutils.PropertyUtils.getProperty(instance, mapping.getRangeKeyProperty()))); return new com.frs.alto.nosql.mapper.HashKeyWithNumericRangeKey(((java.lang.String) (org.apache.commons.beanutils.PropertyUtils.getProperty(instance, mapping.getHashKeyProperty()))), rangeValue.getTime()); }else if (java.lang.String.class.isAssignableFrom(mapping.getRangeKeyType())) { return new com.frs.alto.nosql.mapper.HashKeyWithStringRangeKey(((java.lang.String) (org.apache.commons.beanutils.PropertyUtils.getProperty(instance, mapping.getHashKeyProperty()))), ((java.lang.String) (org.apache.commons.beanutils.PropertyUtils.getProperty(instance, mapping.getRangeKeyProperty())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8739/buggy-version/src.main.java.com.frs.alto.nosql.mapper.ReflectionBasedNoSqlObjectMapper.java", "BodyUseAPI": ["com.frs.alto.nosql.mapper.NoSqlClassMapping.getHashKeyProperty()", "com.frs.alto.nosql.mapper.NoSqlClassMapping.getRangeKeyProperty()", "org.apache.commons.beanutils.PropertyUtils.getProperty(com.frs.alto.domain.BaseDomainObject,mapping.getHashKeyProperty())", "com.frs.alto.nosql.mapper.NoSqlClassMapping.getRangeKeyType()", "org.apache.commons.beanutils.PropertyUtils.getProperty(com.frs.alto.domain.BaseDomainObject,mapping.getHashKeyProperty())", "org.apache.commons.beanutils.PropertyUtils.getProperty(com.frs.alto.domain.BaseDomainObject,mapping.getRangeKeyProperty())", "com.frs.alto.nosql.mapper.NoSqlClassMapping.getHashKeyProperty()", "com.frs.alto.nosql.mapper.NoSqlClassMapping.getRangeKeyProperty()", "org.apache.commons.beanutils.PropertyUtils.getProperty(com.frs.alto.domain.BaseDomainObject,mapping.getRangeKeyProperty())", "java.lang.Class.isAssignableFrom(mapping.getRangeKeyType())"], "Fixed commit": "e2159ba75360ed24c233ce8b4d0cb40d766df42b", "Url": "https://api.github.com/repos/alto-project/alto", "Date": "2013-03-08T22:05:48Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.on36.haetae.server.core.manager.EndPointManager.epMap.get(channel)) == null) { if ((activeListener) != null) activeListener.handler(endPoint); com.on36.haetae.server.core.manager.EndPointManager.epMap.put(channel, endPoint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1217/buggy-version/haetae-server.src.main.java.com.on36.haetae.server.core.manager.EndPointManager.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "4b297d864d95c00a5105ad56f79ff1495720b12f", "Url": "https://api.github.com/repos/on36/haetae", "Date": "2016-10-28T00:58:15Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((o1.getDate()) == (o2.getDate())) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1626/buggy-version/library.src.main.java.cn.finalteam.rxgalleryfinal.ui.activity.NormalFilePickActivity.java", "BodyUseAPI": [], "Fixed commit": "e7e0b346fa9ec6e79e9822db6660f65a9ca3bf69", "Url": "https://api.github.com/repos/BeeShield/AndroidPicker", "Date": "2017-09-05T03:20:25Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.shiro.subject.Subject.getPrincipal()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentUserPrincipal instanceof org.apache.usergrid.security.shiro.principals.AdminUserPrincipal) { org.apache.usergrid.security.shiro.principals.AdminUserPrincipal adminUserPrincipal = ((org.apache.usergrid.security.shiro.principals.AdminUserPrincipal) (currentUserPrincipal)); collectionSchema = em.createCollectionSchema(context.getCollectionName(), adminUserPrincipal.getUser().getEmail(), context.getProperties()); }else if (currentUserPrincipal instanceof org.apache.usergrid.security.shiro.principals.ApplicationPrincipal) { collectionSchema = em.createCollectionSchema(context.getCollectionName(), \"app credentials\", context.getProperties()); }else if (currentUserPrincipal instanceof org.apache.usergrid.security.shiro.principals.PrincipalIdentifier) { collectionSchema = em.createCollectionSchema(context.getCollectionName(), \"generic credentials\", context.getProperties()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6268/buggy-version/stack.services.src.main.java.org.apache.usergrid.services.AbstractCollectionService.java", "BodyUseAPI": [], "Fixed commit": "3a442b0bb580e6917ece785ffae5e9b47484f092", "Url": "https://api.github.com/repos/GERey/usergrid", "Date": "2016-04-13T19:59:45Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (currentElement == null) { return current; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/282/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientDynaElementIterator.java", "BodyUseAPI": [], "Fixed commit": "c55577954450e15ff2d23b3ebc02cca8ad101d00", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-02-14T16:29:48Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.photon.phresco.commons.model.User.getId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((userjson.get(userId)) != null) { customerId = ((java.lang.String) (userjson.get(userId))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7671/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.Login.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "4dc158c4ccf1071e38cfdf6f11d966ffd4b4c616", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2013-04-18T14:47:30Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((phrase.length()) > 0) { phrases.add(phrase.toString()); phrase = new java.lang.StringBuilder(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7360/buggy-version/src.cnrs.rhapsodie.treebankbrowser.utils.Corpus.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "b66cff0860ecfe48b4e966dcfc0bf813a3b09017", "Url": "https://api.github.com/repos/Evpok/TreebankBrowser", "Date": "2017-02-10T09:08:15Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mCameraOpeningTask.getStatus()) != (AsyncTask.Status.FINISHED)) || ((mCamera) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8101/buggy-version/app.src.main.java.com.carver.paul.dotavision.DotaCamera.CameraActivity.java", "BodyUseAPI": [], "Fixed commit": "2814781ce231c996d6656feff9ae8b8a865ddd6c", "Url": "https://api.github.com/repos/dbdkmezz/true-sight-dota", "Date": "2015-12-27T17:20:27Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextFirstItem) > 0) { (nextFirstItem)--; }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3972/buggy-version/Uebung5.src.assignment5.ArraySequence.java", "BodyUseAPI": [], "Fixed commit": "410ee37906a1c54f8fe36e941b3e3d79c74f8e60", "Url": "https://api.github.com/repos/jacobfreise/Programmiertechnik-II", "Date": "2014-06-26T08:53:33Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((next.getSucc()) != null) { path.closePath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/461/buggy-version/src.main.java.net.epsilony.tb.solid.Segment2DUtils.java", "BodyUseAPI": [], "Fixed commit": "254450e9ae177327bf69fc144739770f68fe6ed7", "Url": "https://api.github.com/repos/epsilony/tb", "Date": "2013-06-24T14:43:08Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.example.isanroman.threeinone.Inventory.userResources.get(name)) == null) return 0; else return com.example.isanroman.threeinone.Inventory.userResources.get(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/680/buggy-version/app.src.main.java.com.example.isanroman.threeinone.Inventory.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Fixed commit": "8d8c285514ffb068e88e1bb8c9c20dbc89afef30", "Url": "https://api.github.com/repos/ShatteredSoul/ThreeInOne", "Date": "2016-10-13T14:27:22Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((db.getUser(mail_string)) != null) { user = db.getUser(mail_string); java.lang.System.out.println(((((mail_string) + (user.getEmail())) + (password_string)) + (user.getPassword()))); if ((!(user.getEmail().equals(\"null\"))) || (!(user.getPassword().equals(\"null\")))) { if ((user.getEmail().equals(mail_string)) && (user.getPassword().equals(password_string))) { android.content.Intent i = new android.content.Intent(getApplicationContext(), mehmet.com.sharedpreference.MainActivity.class); startActivity(i); finish(); }else { android.support.v7.app.AlertDialog.Builder alertDialog = new android.support.v7.app.AlertDialog.Builder(this); alertDialog.setTitle(\"Hata\"); alertDialog.setMessage(\"Mailiniz veya \u015eifreniz Uyu\u015fmuyor!\"); alertDialog.setPositiveButton(\"Tamam\", new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int which) { } }); alertDialog.show(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3671/buggy-version/app.src.main.java.mehmet.com.sharedpreference.LoginActivity.java", "BodyUseAPI": ["mehmet.com.sharedpreference.DbHandler.getUser(java.lang.String)", "user.getEmail().equals(java.lang.String)"], "Fixed commit": "2b096409cb32e28aff2285e7e2d4a34f4ceb36d2", "Url": "https://api.github.com/repos/mehmetsirintadik/SharedPreference", "Date": "2016-11-15T20:57:38Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getPlayer().getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (net.othercraft.steelsecurity.utils.PlayerConfigManager.createConfig(playername)) { config = net.othercraft.steelsecurity.utils.PlayerConfigManager.getConfig(playername); }else { java.io.IOException e = new java.io.IOException(); throw e; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2075/buggy-version/src.net.othercraft.steelsecurity.listeners.PlayerConfigListener.java", "BodyUseAPI": ["net.othercraft.steelsecurity.utils.PlayerConfigManager.getConfig(java.lang.String)"], "Fixed commit": "eb6ebd5ef69736e2ded8020bf209d72c9bc47faf", "Url": "https://api.github.com/repos/Mike111177/Steel-Security", "Date": "2012-06-14T00:38:50Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPreview()) { startSettingsActivity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9120/buggy-version/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java", "BodyUseAPI": [], "Fixed commit": "14b1e46529e9ffebd8f5c2f87ad2bfe0367df83f", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2015-03-10T12:10:37Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch.getParticipantIds()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((participantIds.size()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5340/buggy-version/app.src.main.java.de.appphil.categories.activities.menu.MatchOverviewActivity.java", "BodyUseAPI": [], "Fixed commit": "1f247def01890bba8a2a6c8ef147c400dab08fff", "Url": "https://api.github.com/repos/PhilippDE/Categories", "Date": "2017-05-20T10:26:21Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch.getParticipantIds()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((participantIds.size()) == 1) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5340/buggy-version/app.src.main.java.de.appphil.categories.activities.menu.MatchOverviewActivity.java", "BodyUseAPI": [], "Fixed commit": "1f247def01890bba8a2a6c8ef147c400dab08fff", "Url": "https://api.github.com/repos/PhilippDE/Categories", "Date": "2017-05-20T10:26:21Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((plugin.getConfig().getDefaults()) != null) { this.defaultKeys = plugin.getConfig().getDefaults().getKeys(true); }else { throw new java.lang.Exception(\"Failed to read default configuration\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8918/buggy-version/src.main.java.viggo.omniscient.Settings.java", "BodyUseAPI": [], "Fixed commit": "11c21e582c94a4e728b196f0d1fe3be8abea3299", "Url": "https://api.github.com/repos/cviggo/omniscient", "Date": "2014-05-02T23:06:15Z"},
{"Line": "=>1194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state == (PluginState.Running)) { getServer().broadcastMessage(((ChatColor.GREEN) + \"Omniscient is now running.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8918/buggy-version/src.main.java.viggo.omniscient.Plugin.java", "BodyUseAPI": [], "Fixed commit": "11c21e582c94a4e728b196f0d1fe3be8abea3299", "Url": "https://api.github.com/repos/cviggo/omniscient", "Date": "2014-05-02T23:06:15Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (absolutePath.contains(\"/modules/apps/\")) { _checkExportPackage(fileName, absolutePath, content); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4421/buggy-version/modules.util.source-formatter.src.main.java.com.liferay.source.formatter.checks.BNDExportsCheck.java", "BodyUseAPI": ["com.liferay.source.formatter.checks.BNDExportsCheck._checkExportPackage(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "87b5975c78b8f681dcb339960039f86654a0731d", "Url": "https://api.github.com/repos/csierra/liferay-portal", "Date": "2017-10-26T07:22:43Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(fileName.endsWith(\"/bnd.bnd\"))) || (absolutePath.contains(\"/third-party/\"))) { return content; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4421/buggy-version/modules.util.source-formatter.src.main.java.com.liferay.source.formatter.checks.BNDExportsCheck.java", "BodyUseAPI": [], "Fixed commit": "87b5975c78b8f681dcb339960039f86654a0731d", "Url": "https://api.github.com/repos/csierra/liferay-portal", "Date": "2017-10-26T07:22:43Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Enumeration<java.lang.Object>.nextElement()", "java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (line.startsWith(((\" #\" + (key.toString())) + \"=\"))) { currentComment.setLength(oldCommentLength); if ((currentComment.length()) != 0) { pretty.append(currentComment); pretty.append(\"\\n\"); currentComment.setLength(0); } }else { pretty.append(currentComment); pretty.append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6999/buggy-version/portlets.portal-properties-prettier-portlet.src.main.java.br.com.thiagomoreira.liferay.plugins.PortalPropertiesPrettierPortlet.java", "BodyUseAPI": [], "Fixed commit": "ef5733f08a7236994a28693265bfedeb0df382bd", "Url": "https://api.github.com/repos/tmoreira2020/portal-properties-prettier-app", "Date": "2015-06-25T00:07:27Z"},
{"Line": "=>836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.quorum.symbols.SymbolTable.getFileDescriptor(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (mainFile == null) { int a = 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5953/buggy-version/quorum.src.org.quorum.symbols.SymbolTable.java", "BodyUseAPI": [], "Fixed commit": "e1eb3d5c53ae63f9fa5a0a544653b13467d1aa39", "Url": "https://api.github.com/repos/rjnienaber/quorum-ci", "Date": "2013-08-29T16:37:46Z"},
{"Line": "=>959", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.fileupload.FileItem.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((fileName.indexOf(\":\\\\\")) > 0) { fileName = fileName.substring(((fileName.lastIndexOf(\"\\\\\")) + 1), fileName.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3857/buggy-version/src.main.java.org.eweb4j.mvc.action.ActionExecution.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "0c64db9219d365ef9befd3d4ae9ae368632e987a", "Url": "https://api.github.com/repos/neuqik/jlxt", "Date": "2013-01-04T08:43:35Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.privacy_policy)) { android.content.Intent intent = new android.content.Intent(this, application.example.com.notecard.PrivacyPolicyActivity.class); startActivity(intent); }else if (id == (R.id.nav_logout)) { com.firebase.ui.auth.AuthUI.getInstance().signOut(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8582/buggy-version/app.src.main.java.application.example.com.notecard.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1d9d61c8c16767c6f7c8cec32e879e98bedd13e9", "Url": "https://api.github.com/repos/divyankvijayvergiya/Capstone_Project", "Date": "2017-10-12T18:36:05Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (rc != null) rc.getTree();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5244/buggy-version/org.gitective.core.src.main.java.org.gitective.core.CommitUtils.java", "BodyUseAPI": ["org.eclipse.jgit.revwalk.RevCommit.getTree()"], "Fixed commit": "36fe6a8b192c18913324a8714fbf04d71510e3eb", "Url": "https://api.github.com/repos/summer1433/gitective", "Date": "2012-08-06T07:58:46Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!isChecked) && (isSpeedAlarmPlaying)) { isSpeedAlarmPlaying = false; view.playSound(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5479/buggy-version/app.src.main.java.net.kwatts.powtools.view.AlertsPresenter.java", "BodyUseAPI": [], "Fixed commit": "5205aa035b1060cf6fdeda96bc1cf28c9466599e", "Url": "https://api.github.com/repos/ponewheel/android-ponewheel", "Date": "2017-12-14T03:47:06Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!isChecked) && (isChargeAlarmPlaying)) { isChargeAlarmPlaying = false; view.playSound(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5479/buggy-version/app.src.main.java.net.kwatts.powtools.view.AlertsPresenter.java", "BodyUseAPI": [], "Fixed commit": "5205aa035b1060cf6fdeda96bc1cf28c9466599e", "Url": "https://api.github.com/repos/ponewheel/android-ponewheel", "Date": "2017-12-14T03:47:06Z"},
{"Line": "=>700", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (containerVolumeLimit == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3887/buggy-version/src.resources.objects.tangible.TangibleObject.java", "BodyUseAPI": [], "Fixed commit": "c47ddf77df82116fb2edb127019d9cbae9641d89", "Url": "https://api.github.com/repos/ProjectSWGCore/NGECore2", "Date": "2014-05-11T16:42:40Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pokemon.name().contains(query)) { nameList.add(pokemon.name()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/827/buggy-version/app.src.main.java.rejasupotaro.mds.data.models.Pokemons.java", "BodyUseAPI": ["rejasupotaro.mds.data.models.Pokemon.name()", "java.util.List<java.lang.String>.add(pokemon.name())"], "Fixed commit": "8ae1a33fb7d977dd96cebed2447b111a17be7e91", "Url": "https://api.github.com/repos/yangxu02/MaterialDesignSample", "Date": "2016-08-29T14:08:42Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dd.getConfig().getConfigurationSection((((p.getName()) + \".\") + drug)).contains(\"clean\"))) dd.getConfig().set(((((p.getName()) + \".\") + drug) + \".clean\"), true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2949/buggy-version/src.me.G4meM0ment.Junkie.Handler.DrugHandler.java", "BodyUseAPI": ["dd.getConfig().set(((((p.getName()) + \".\") + drug) + \".clean\"),boolean)", "org.bukkit.entity.Player.getName()", "me.G4meM0ment.Junkie.DataStorage.DrugData.getConfig()"], "Fixed commit": "3909e8f893115ab9e572917316bd7c5574bc4458", "Url": "https://api.github.com/repos/G4meM0ment/RPGEssentials", "Date": "2014-01-09T21:54:00Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fileUtil.fileExists(filename))) return inverses;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1546/buggy-version/src.main.java.edu.cmu.ml.rtw.pra.experiments.KbPraDriver.java", "BodyUseAPI": [], "Fixed commit": "fa6cf26cfa542111fb9afd9a42c1e83350b5a70f", "Url": "https://api.github.com/repos/matt-gardner/pra", "Date": "2014-11-11T15:52:59Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (potion.equalsIgnoreCase(\"INCREASE_DAMAGE\")) { temploreline.replace(\"{potion}\", \"Strength\"); }else { temploreline.replace(\"{potion}\", potion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2922/buggy-version/src.com.enjin.devection.legendary.LegendaryItems.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "2c3ab1138d303e71d1f2d5f8f8738422f79ebd9e", "Url": "https://api.github.com/repos/ConnorChristie/LegendaryArmor", "Date": "2015-08-06T13:44:02Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bannerUrl == null) || (bannerUrl.isEmpty())) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4389/buggy-version/app.src.main.java.news.androidtv.tvapprepo.model.AdvancedOptions.java", "BodyUseAPI": [], "Fixed commit": "c4d02ec6bc98e3529b6f813be2f720d2e71bf4ca", "Url": "https://api.github.com/repos/ITVlab/TvAppRepo", "Date": "2017-03-25T18:31:53Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.getBytes(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((c - (findBytes.length)) + savedFromLastTime) > 0) { out.write(buf, 0, ((c - (findBytes.length)) + savedFromLastTime)); pos = findBytes.length; java.lang.System.arraycopy(buf, ((c - (findBytes.length)) + savedFromLastTime), buf, 0, pos); savedFromLastTime = pos; }else { pos = c + savedFromLastTime; savedFromLastTime = pos; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/799/buggy-version/src.main.java.com.central1.push0ver.BinarySed.java", "BodyUseAPI": ["java.lang.System.arraycopy(byte[],int,byte[],int,int)", "java.io.OutputStream.write(byte[],int,int)"], "Fixed commit": "cc47b673b442e58e8296d8977a948c23182e5bcc", "Url": "https://api.github.com/repos/mwhanna/push0ver", "Date": "2017-06-14T18:58:47Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/799/buggy-version/src.main.java.com.central1.push0ver.BinarySed.java", "BodyUseAPI": [], "Fixed commit": "cc47b673b442e58e8296d8977a948c23182e5bcc", "Url": "https://api.github.com/repos/mwhanna/push0ver", "Date": "2017-06-14T18:58:47Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAccessibilityServiceSwitch) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8756/buggy-version/app.src.main.java.com.stardust.scriptdroid.ui.main.SideMenuFragment.java", "BodyUseAPI": [], "Fixed commit": "9d489c17cd0d20ff9f6675d0fbe1630bb92186df", "Url": "https://api.github.com/repos/hyb1996/Auto.js", "Date": "2017-07-09T00:29:23Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tr.renderer) != null) { if (tr.renderer.isDone()) { if (this.tr.renderer.isDone()) this.tr.renderer.get().render(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3131/buggy-version/src.main.java.org.jtrfp.trcl.core.ThreadManager.java", "BodyUseAPI": ["tr.renderer.isDone()"], "Fixed commit": "2897069a2050b767325ae88c254f31d7dbf77cf4", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-06-09T09:53:22Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (enemies.get(i).isDead) { enemies.removeIndex(i); paths.removeIndex(i); (enemiesCount)--; }else { paths.get(i).tick(deltaT); com.badlogic.gdx.math.Vector2 newPos = paths.get(i).getCurrentPoint(); enemies.get(i).goalX = newPos.x; enemies.get(i).goalY = newPos.y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3532/buggy-version/core.src.com.starbangers.sasus.EnemyGroup.java", "BodyUseAPI": ["com.badlogic.gdx.utils.Array<com.starbangers.sasus.Path>.get(int)", "com.badlogic.gdx.utils.Array<com.starbangers.sasus.Path>.get(int)", "com.badlogic.gdx.utils.Array<com.starbangers.sasus.Enemy>.removeIndex(int)", "paths.get(i).getCurrentPoint()", "com.badlogic.gdx.utils.Array<com.starbangers.sasus.Enemy>.get(int)", "paths.get(i).tick(double)", "com.badlogic.gdx.utils.Array<com.starbangers.sasus.Enemy>.get(int)", "com.badlogic.gdx.utils.Array<com.starbangers.sasus.Path>.removeIndex(int)"], "Fixed commit": "eceaacf5ded9ba79ab692ddc14b6a04a24386fca", "Url": "https://api.github.com/repos/Starbangers/SASUS", "Date": "2016-06-20T22:11:09Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (req.getPathInfo().equals(\"/ws\")) { super.doGet(req, resp); }else { resp.sendError(HttpServletResponse.SC_NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2442/buggy-version/src.info.pishen.radio.Controller.java", "BodyUseAPI": ["org.apache.catalina.websocket.WebSocketServlet.doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"], "Fixed commit": "d3b4f7b50812df1a0047b28b4f2e23ce8f1b5eb2", "Url": "https://api.github.com/repos/pishen/vocaradio", "Date": "2013-07-28T10:32:18Z"},
{"Line": "=>906", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((currentView == null) && ((listFragment) != null)) && ((listFragment.getAdapter()) != null)) currentView = listFragment.getAdapter().getViewForList(currentList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1649/buggy-version/src.de.azapps.mirakel.main_activity.MainActivity.java", "BodyUseAPI": ["de.azapps.mirakel.main_activity.ListFragment.getAdapter()", "listFragment.getAdapter().getViewForList(de.azapps.mirakel.model.list.ListMirakel)"], "Fixed commit": "e6e2c3fb7025032444acb93d66ea66c293cc131a", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-09-20T11:36:14Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, de.andreas_rueckert.trade.order.Order>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (currentOrder == null) { java.lang.System.out.println(\"Current order is null!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8390/buggy-version/core.src.de.andreas_rueckert.trade.order.OrderBook.java", "BodyUseAPI": [], "Fixed commit": "707bf9ec89b5c02462ee39efd51aceeaa523adfe", "Url": "https://api.github.com/repos/ReAzem/cryptocoin-tradelib", "Date": "2013-08-27T19:57:47Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sromku.simple.fb.SimpleFacebook.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (simpleFacebook != null) { simpleFacebook.logout(onLogoutListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1878/buggy-version/ICEMAN-client.com.teamunemployment.breadcrumbs.src.com.teamunemployment.breadcrumbs.client.Settings.java", "BodyUseAPI": ["com.sromku.simple.fb.SimpleFacebook.logout(com.sromku.simple.fb.listeners.OnLogoutListener)"], "Fixed commit": "9930d47d24b34459e7da1e7b94e3ecf934163c96", "Url": "https://api.github.com/repos/kloin/ICEMANv0.5", "Date": "2016-03-15T22:35:40Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.teamunemployment.breadcrumbs.caching.GlobalContainer.GetContainerInstance().GetBreadCrumbsFusedLocationProvider()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (provider != null) { provider.StopBackgroundGPSSerivce(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1878/buggy-version/ICEMAN-client.com.teamunemployment.breadcrumbs.src.com.teamunemployment.breadcrumbs.client.Settings.java", "BodyUseAPI": ["com.teamunemployment.breadcrumbs.Location.BreadCrumbsFusedLocationProvider.StopBackgroundGPSSerivce()"], "Fixed commit": "9930d47d24b34459e7da1e7b94e3ecf934163c96", "Url": "https://api.github.com/repos/kloin/ICEMANv0.5", "Date": "2016-03-15T22:35:40Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.asual.summer.core.util.RequestUtils.getUserAgent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (userAgent != null) { return (java.util.regex.Pattern.compile(\"Mozilla\").matcher(userAgent).find()) && (!(java.util.regex.Pattern.compile(\"compatible|WebKit\").matcher(userAgent).find())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1576/buggy-version/modules.core.src.main.java.com.asual.summer.core.util.RequestUtils.java", "BodyUseAPI": ["java.util.regex.Matcher.find()", "java.util.regex.Matcher.find()", "java.util.regex.Pattern.matcher(java.lang.String)", "java.util.regex.Pattern.matcher(java.lang.String)"], "Fixed commit": "098ff126d953739ae361d82da2068818c3f2ebd4", "Url": "https://api.github.com/repos/asual/summer", "Date": "2011-04-07T07:36:18Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.asual.summer.core.util.RequestUtils.getUserAgent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (userAgent != null) { return java.util.regex.Pattern.compile(\" Mobile/\").matcher(userAgent).find(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1576/buggy-version/modules.core.src.main.java.com.asual.summer.core.util.RequestUtils.java", "BodyUseAPI": ["java.util.regex.Matcher.find()", "java.util.regex.Pattern.matcher(java.lang.String)"], "Fixed commit": "098ff126d953739ae361d82da2068818c3f2ebd4", "Url": "https://api.github.com/repos/asual/summer", "Date": "2011-04-07T07:36:18Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dependencyController == rootController) { throw org.jboss.msc.txn.SERVICE.cycleDetected(rootController.getPrimaryRegistration().getServiceName(), org.jboss.msc.txn.CycleDetector.getCycle(branches)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6142/buggy-version/src.main.java.org.jboss.msc.txn.CycleDetector.java", "BodyUseAPI": ["org.jboss.msc.txn.ServiceControllerImpl<?>.getPrimaryRegistration()", "org.jboss.msc.txn.SERVICE.cycleDetected(rootController.getPrimaryRegistration().getServiceName(),java.util.Collection<org.jboss.msc.service.ServiceName>)", "rootController.getPrimaryRegistration().getServiceName()"], "Fixed commit": "847f94aabe1ce988e1d30102cd4138af35d46141", "Url": "https://api.github.com/repos/ropalka/msc2", "Date": "2014-04-02T19:20:56Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.planning.InterfacePlanning.isNodeEntrepot(view_noeud.getNoeud().getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isEntrepot) { interfaceView.displayAlert(\"Supprimer une livraison\", \"Vous ne pouvez pas supprimer l'entrepot\", \"warning\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/919/buggy-version/titan-shippment.src.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "59d6aa9e93bb1933632a602eb8509f421c91741a", "Url": "https://api.github.com/repos/LeonardA-L/hm-devOO", "Date": "2014-11-11T15:39:54Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentSize == maxSize) { lastCell[0] = pos_x; lastCell[1] = pos_y; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3578/buggy-version/src.com.danilafe.mazegen.MazeGenerator.java", "BodyUseAPI": [], "Fixed commit": "b3ac1e985fbc41e6fecae72c3e83d7e23b900fc9", "Url": "https://api.github.com/repos/DanilaFe/SimpleMazeGen", "Date": "2015-08-27T20:59:59Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (gd != null) newSelection.add(transformCSG(lowAccTransformation, gd));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4857/buggy-version/src.org.nschmidt.ldparteditor.data.VM20Manipulator.java", "BodyUseAPI": ["org.nschmidt.ldparteditor.data.VM20Manipulator.transformCSG(org.lwjgl.util.vector.Matrix4f,org.nschmidt.ldparteditor.data.GDataCSG)", "java.util.ArrayList<org.nschmidt.ldparteditor.data.GData>.add(org.nschmidt.ldparteditor.data.GDataCSG)"], "Fixed commit": "df9b2a3e7a0fe6121d3e6fa8b5b68764e5a2eb60", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-05-15T13:42:45Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sourceMapEnabled) { if ((realMap.getParentFile().exists()) || (realMap.getParentFile().mkdirs())) { org.codehaus.groovy.runtime.ResourceGroovyMethods.write(realMap, output.getSourceMap()); }else { getLogger().error(\"Cannot write into {}\", realMap.getParentFile()); throw new io.freefair.gradle.plugins.TaskExecutionException(this, null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3995/buggy-version/src.main.java.io.freefair.gradle.plugins.CompileSass.java", "BodyUseAPI": [], "Fixed commit": "ca0b6b57086c599fff537c9a02b8dc4f57fe5d16", "Url": "https://api.github.com/repos/freefair/jsass-gradle-plugin", "Date": "2017-03-11T22:35:26Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cpw.mods.fml.common.network.ByteBufUtils.readItemStack(io.netty.buffer.ByteBuf)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((stack.stackSize) == 0) stack.stackSize = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1285/buggy-version/src.main.java.com.builtbroken.creation.content.forge.TileFireChannel.java", "BodyUseAPI": [], "Fixed commit": "59efc00ecee05bd1a684518e0c2fdf15c1878a46", "Url": "https://api.github.com/repos/BuiltBrokenModding/Creations-BuildersToolkit", "Date": "2015-06-22T06:55:02Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.getWorld().getChunk(mocha.game.world.Location)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(chunkOptional.isPresent())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1844/buggy-version/src.main.java.mocha.game.GameView.java", "BodyUseAPI": [], "Fixed commit": "35348f08b578b6bd12ad6352e594dcb8c949fbee", "Url": "https://api.github.com/repos/srwaggon/mocha", "Date": "2017-10-25T15:23:26Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.apache.carbondata.core.metadata.datatype.DataType.DATE) == (carbonColumns[i].getDataType())) { if ((data[i]) == null) { data[i] = data[i]; }else { java.lang.String dateFormat = org.apache.carbondata.core.util.CarbonProperties.getInstance().getProperty(CarbonCommonConstants.CARBON_DATE_FORMAT, CarbonCommonConstants.CARBON_DATE_DEFAULT_FORMAT); java.lang.Long date = (java.lang.Long.parseLong(java.lang.String.valueOf(data[i]))) * (org.apache.carbondata.flink.FlinkRowReadSupportImpl.MILLIS_PER_DAY); java.util.Date millisTransformedDate = new java.util.Date(date); java.text.SimpleDateFormat simpleDateFormat = new java.text.SimpleDateFormat(dateFormat); data[i] = simpleDateFormat.format(millisTransformedDate); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/161/buggy-version/integration.flink.src.main.java.org.apache.carbondata.flink.FlinkRowReadSupportImpl.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)", "java.lang.String.valueOf(java.lang.Object)"], "Fixed commit": "d020c89c946625ffd143526097a077e8a0f3a259", "Url": "https://api.github.com/repos/PKOfficial/incubator-carbondata", "Date": "2017-05-24T09:54:52Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.ehcache.spi.ServiceLocator.findSingletonAmongst(org.ehcache.config.serializer.DefaultSerializationProviderConfiguration.class, config.getServiceConfigurations().toArray())) == null) { serviceLocator.addService(new org.ehcache.jsr107.DefaultJsr107SerializationProvider()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3992/buggy-version/107.src.main.java.org.ehcache.jsr107.EhcacheCachingProvider.java", "BodyUseAPI": [], "Fixed commit": "d59c986c8a3552913dd1e2d8ea1075b43a8859a9", "Url": "https://api.github.com/repos/rishabhmonga/ehcache3", "Date": "2015-07-28T07:02:52Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != isr) { isr.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4685/buggy-version/src.main.java.org.vintsie.jcobweb.config.I18nFactory.java", "BodyUseAPI": ["java.io.InputStreamReader.close()"], "Fixed commit": "ef88af04715632928cb89169c172acce95536f9d", "Url": "https://api.github.com/repos/vintsie/jcobweb", "Date": "2014-01-07T09:43:12Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context instanceof com.couchbase.lite.android.AndroidContext) androidContext = ((com.couchbase.lite.android.AndroidContext) (context)).getWrappedContext();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8817/buggy-version/src.main.java.com.couchbase.lite.auth.TokenStoreFactory.java", "BodyUseAPI": [], "Fixed commit": "5a3f8a0237e856a99a18c74e448adb5bf5b0f0a7", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-android", "Date": "2016-06-27T20:07:18Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (androidContext == null) return new com.couchbase.lite.auth.MemTokenStore();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8817/buggy-version/src.main.java.com.couchbase.lite.auth.TokenStoreFactory.java", "BodyUseAPI": [], "Fixed commit": "5a3f8a0237e856a99a18c74e448adb5bf5b0f0a7", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-android", "Date": "2016-06-27T20:07:18Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((contentLayout) != null) { android.view.View emptyView = com.adrielcafe.recifebomdebola.Util.getEmptyView(com.adrielcafe.recifebomdebola.ui.tab.MatchTabFragment.activity); contentLayout.addView(emptyView); contentLayout.setGravity(Gravity.CENTER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7254/buggy-version/app.src.main.java.com.adrielcafe.recifebomdebola.ui.tab.MatchTabFragment.java", "BodyUseAPI": [], "Fixed commit": "bc37c4c58c832c982ded010fd42eae4b60630cbb", "Url": "https://api.github.com/repos/adrielcafe/RecifeBomDeBola", "Date": "2015-11-10T18:39:37Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ret == null) ret = i;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5638/buggy-version/app.src.main.java.heavyinternetindustries.mephesto.cards.Card.java", "BodyUseAPI": [], "Fixed commit": "74962c09d5757664c9c2f5ca8037679d9476b958", "Url": "https://api.github.com/repos/mephest0/Cards", "Date": "2016-06-06T13:38:43Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.netapp.NetAppApi.getSnapMirrorStateInfo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (mirrorStatusInfo != null) { if ((SnapMirrorState.SYNCRONIZED.equals(mirrorStatusInfo.getTransferType())) || (SnapMirrorState.PAUSE.equals(mirrorStatusInfo.getTransferType()))) { com.emc.storageos.volumecontroller.impl.netapp.NetappMirrorFileOperations._log.info(\"Calling snapmirror break on path: {}\", location); nApi.breakSnapMirror(location); }else { com.emc.storageos.svcs.errorhandling.model.ServiceError error = DeviceControllerErrors.netapp.jobFailed((\"Snapmirror break operation failed, because of mirror state: \" + (mirrorStatusInfo.getTransferType().toString()))); return com.emc.storageos.volumecontroller.impl.BiosCommandResult.createErrorResult(error); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7875/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.netapp.NetappMirrorFileOperations.java", "BodyUseAPI": ["com.iwave.ext.netapp.model.SnapMirrorStatusInfo.getTransferType()", "com.iwave.ext.netapp.model.SnapMirrorStatusInfo.getTransferType()", "SnapMirrorState.SYNCRONIZED.equals(mirrorStatusInfo.getTransferType())", "mirrorStatusInfo.getTransferType().toString()", "DeviceControllerErrors.netapp.jobFailed((\"Snapmirror break operation failed, because of mirror state: \" + (mirrorStatusInfo.getTransferType().toString())))", "SnapMirrorState.PAUSE.equals(mirrorStatusInfo.getTransferType())", "com.iwave.ext.netapp.model.SnapMirrorStatusInfo.getTransferType()"], "Fixed commit": "c72e172885e69156f2316297449bd6cb5c431df4", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-03-30T11:57:14Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (param.equals(\"normal\")) { final android.graphics.Typeface regular = android.graphics.Typeface.createFromAsset(context.getAssets(), java.lang.String.format(java.util.Locale.US, \"fonts/%s\", \"OpenSans-Light.ttf\")); com.velkonost.lume.FontsOverride.replaceFont(staticTypefaceFieldName, regular); }else if (param.equals(\"bold\")) { final android.graphics.Typeface regular = android.graphics.Typeface.createFromAsset(context.getAssets(), java.lang.String.format(java.util.Locale.US, \"fonts/%s\", \"OpenSans-Bold.ttf\")); com.velkonost.lume.FontsOverride.replaceFont(staticTypefaceFieldName, regular); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5603/buggy-version/app.src.main.java.com.velkonost.lume.FontsOverride.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "658349431acae7b721997a469745ca6c3c39e786", "Url": "https://api.github.com/repos/Velkonost/LumeMessenger", "Date": "2017-11-09T16:41:22Z"},
{"Line": "=>2918", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((fileData[_lastPosition]) != ' ') && ((fileData[_lastPosition]) != '\\t')) { if (((fileData[_lastPosition]) == '\\n') || ((fileData[_lastPosition]) == '\\r')) break; _startPosition = _lastPosition; startFound = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7217/buggy-version/Java.Eta.Source.impl.com.thomsonreuters.upa.codec.DataDictionaryImpl.java", "BodyUseAPI": [], "Fixed commit": "9dce998222109fed7a3ab8719591f4a31954ddb8", "Url": "https://api.github.com/repos/thomsonreuters/Elektron-SDK", "Date": "2017-02-14T15:23:59Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputStream) != null) { try { properties.load(inputStream); } catch (java.io.IOException e) { java.lang.System.out.print(((\"property file '\" + (propFileName)) + \"' not found in the classpath\")); } }else { throw new java.io.FileNotFoundException(((\"property file '\" + (propFileName)) + \"' not found in the classpath\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3048/buggy-version/src.TOC19.Settings.java", "BodyUseAPI": [], "Fixed commit": "6fa59a0f52d2bd891537b2ec6a0b4dd91558ff6e", "Url": "https://api.github.com/repos/jarrah-95/TOC19", "Date": "2014-12-05T15:25:49Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (first.equals(\" Datacenter\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8570/buggy-version/src.FirstWrite.java", "BodyUseAPI": [], "Fixed commit": "2def5fb63c101f11da527eebf8231fb48d4bd945", "Url": "https://api.github.com/repos/ansinghal/PDF", "Date": "2015-05-28T08:59:38Z"},
{"Line": "=>633", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((txtFieldMovieTitleText.getText().length()) > 0) { guiMain.enableFileWrite(); }else { guiMain.disableFileWrite(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1346/buggy-version/JAVMovieScraper.src.moviescraper.doctord.view.FileDetailPanel.java", "BodyUseAPI": [], "Fixed commit": "fbb02ed18554995879cc3983cd83a754d0f73c5f", "Url": "https://api.github.com/repos/DoctorD1501/JAVMovieScraper", "Date": "2016-05-15T16:36:43Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (onCancelled != null) onCancelled.execute();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4563/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.source.editors.text.TextEditingTarget.java", "BodyUseAPI": ["com.google.gwt.user.client.Command.execute()"], "Fixed commit": "701b21d53ff5edcdaadfab7ab6536ddc12c6e12a", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2011-10-24T17:56:26Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((onParametersChangeListener) != null) { onParametersChangeListener.onParametersChange(dirtyCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5130/buggy-version/Android.src.org.droidplanner.android.view.adapterViews.ParamsAdapter.java", "BodyUseAPI": [], "Fixed commit": "cf0955ae6151e540dd600840cb19fe6ec8d32988", "Url": "https://api.github.com/repos/DroidPlanner/Tower", "Date": "2016-08-21T20:29:05Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((onParametersChangeListener) != null) { onParametersChangeListener.onParametersChange(dirtyCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5130/buggy-version/Android.src.org.droidplanner.android.view.adapterViews.ParamsAdapter.java", "BodyUseAPI": [], "Fixed commit": "cf0955ae6151e540dd600840cb19fe6ec8d32988", "Url": "https://api.github.com/repos/DroidPlanner/Tower", "Date": "2016-08-21T20:29:05Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((clickedContainer != null) && (!(clickedContainer.getState()))) { clickedContainer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8033/buggy-version/src.metro.UI.Renderer.BasicContainerRenderer.java", "BodyUseAPI": [], "Fixed commit": "541dae1c8b649a3f086ed3f7aba4534b2dcf9133", "Url": "https://api.github.com/repos/hauke96/METRO", "Date": "2016-12-23T23:11:16Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((storage.getCurrentSoC()) < (storage.getMaximumCharge())) storage.charge(java.lang.Math.abs(flow));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5325/buggy-version/Simulation.src.filehandler.Parser.java", "BodyUseAPI": ["filehandler.Storage.charge(double)"], "Fixed commit": "dd74685caf480b573e2dede0de9294711d5db507", "Url": "https://api.github.com/repos/B00ms/energyGridSimulation", "Date": "2016-08-10T11:09:48Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((user.getGrant().getSystemUnitsBranchLevel()) > (com.citycon.model.Grant.READ)) { req.setAttribute(\"showSystemUnitsOperationBtns\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4696/buggy-version/src.main.java.com.citycon.controllers.filters.LoginFilter.java", "BodyUseAPI": [], "Fixed commit": "e29d08a0923a9a5c11b3b4f7561babe6ad0e5871", "Url": "https://api.github.com/repos/NcBsuirGr2/ncCityCon", "Date": "2016-11-21T23:54:43Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((user.getGrant().getUsersBranchLevel()) > (com.citycon.model.Grant.READ)) { req.setAttribute(\"showUsersOperationBtns\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4696/buggy-version/src.main.java.com.citycon.controllers.filters.LoginFilter.java", "BodyUseAPI": [], "Fixed commit": "e29d08a0923a9a5c11b3b4f7561babe6ad0e5871", "Url": "https://api.github.com/repos/NcBsuirGr2/ncCityCon", "Date": "2016-11-21T23:54:43Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["input.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((!(inputText.isEmpty())) && (value != null)) dataStore.setInt(\"param\", value.intValue()); else dataStore.setString(\"type\", \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5336/buggy-version/Android.app.src.main.java.com.example.reativos.oscar.AddParam.java", "BodyUseAPI": ["java.lang.Integer.intValue()", "com.example.reativos.oscar.GlobalAppDataStore.setInt(java.lang.String,int)"], "Fixed commit": "6f3add039c38d955e9a8bac495fe875617fb3209", "Url": "https://api.github.com/repos/michellevalente/Oscar", "Date": "2016-06-21T21:51:57Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trim) { sb.setLength(((sb.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5095/buggy-version/src.main.java.com.amrainder.algorithms.linkedlist.SingleLinkedList.java", "BodyUseAPI": [], "Fixed commit": "5483225f14b8c01716ad05e3458aa35e7652c02a", "Url": "https://api.github.com/repos/amrainder/all-java", "Date": "2013-03-02T08:49:13Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((((from != null) && (from.isActive())) && (to != null)) && (to.isActive())) { from.withdraw(amount); to.deposit(amount); }else { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3167/buggy-version/Bank.src.bank.Server.ServerBank.java", "BodyUseAPI": ["bank.Account.deposit(double)", "bank.Account.withdraw(double)"], "Fixed commit": "96fc36f170480aa3e7e61206ee25a0a4e85120a2", "Url": "https://api.github.com/repos/Grisu118/vesys", "Date": "2015-03-16T15:36:27Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((balance) < 0) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3167/buggy-version/Bank.src.bank.Server.ServerAccount.java", "BodyUseAPI": [], "Fixed commit": "96fc36f170480aa3e7e61206ee25a0a4e85120a2", "Url": "https://api.github.com/repos/Grisu118/vesys", "Date": "2015-03-16T15:36:27Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amount < 0) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3167/buggy-version/Bank.src.bank.Server.ServerAccount.java", "BodyUseAPI": [], "Fixed commit": "96fc36f170480aa3e7e61206ee25a0a4e85120a2", "Url": "https://api.github.com/repos/Grisu118/vesys", "Date": "2015-03-16T15:36:27Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7710/buggy-version/src.DocProcessUtil.Trie.java", "BodyUseAPI": [], "Fixed commit": "b98c787e192db8513f9a84a3bff1a3c48b8e904f", "Url": "https://api.github.com/repos/shcup/DocumentProcessPipelineMR", "Date": "2016-08-11T14:26:45Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.zstack.core.db.Q.New(org.zstack.compute.host.HostVO.class).eq(HostVO_.uuid, msg.getHostUuid()).isExists())) { reply.setNoReconnect(true); }else if (changeConnectionState(HostStatusEvent.disconnected)) { new org.zstack.core.logging.Event().log(HostLogLabel.HOST_STATUS_DISCONNECTED, self.getUuid(), self.getName(), errorCode.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1259/buggy-version/compute.src.main.java.org.zstack.compute.host.HostBase.java", "BodyUseAPI": [], "Fixed commit": "f9f1ed016613b4fab5abe09d1bc2b84ad760a4ab", "Url": "https://api.github.com/repos/MaJin1996/zstack", "Date": "2017-04-10T11:57:05Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) { getSupportActionBar().setDisplayHomeAsUpEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7509/buggy-version/app.src.main.java.com.sksanwar.bakingapp.Activities.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "f4f4866218863b116c61a087578fa8224a5ce95e", "Url": "https://api.github.com/repos/polash/BakingApp", "Date": "2017-07-26T10:40:19Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defender.getOwner().getHand().contains(defender)) || (defender.getOwner().getDeck().contains(defender))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9229/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.skill.Flee.java", "BodyUseAPI": [], "Fixed commit": "b66e5edaa386c8a40ff667e4dceb88bf9f412615", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2015-11-29T21:39:37Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((leg.isWalk()) == false) { try { android.widget.TextView line = new android.widget.TextView(context); line.setText(java.lang.String.valueOf(leg.getProduct().getNum())); mos.addView(line); } catch (java.lang.NullPointerException exp) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2352/buggy-version/app.src.main.java.alitea.am.ali_travel.RouteAdapter.java", "BodyUseAPI": ["alitea.am.ali_travel.api_wrapper.rese_planerare.Leg.getProduct()", "android.widget.TextView.setText(java.lang.String)", "java.lang.String.valueOf(leg.getProduct().getNum())", "leg.getProduct().getNum()"], "Fixed commit": "ec9675330ecff9c9e1f28fed40ee8f26eeede5b5", "Url": "https://api.github.com/repos/ALI-Team/ALI-Travel", "Date": "2017-03-12T17:40:09Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (CorruptionDataHelper.currentCorruption.containsKey(e.player)) { CorruptionDataHelper.currentCorruption.get(e.player).onUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4811/buggy-version/src.main.java.com.kihira.corruption.common.ServerTickHandler.java", "BodyUseAPI": ["CorruptionDataHelper.currentCorruption.get(e.player).onUpdate()", "CorruptionDataHelper.currentCorruption.get(e.player)"], "Fixed commit": "eb0fb3f93e1b3e5e5a4b86ebbdd2f9d7357e3c89", "Url": "https://api.github.com/repos/kihira/modjam4", "Date": "2014-05-15T10:01:10Z"},
{"Line": "=>859", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Node.getOwnerDocument()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((node.getNodeType()) == (org.w3c.dom.Node.DOCUMENT_NODE)) return ((org.w3c.dom.Document) (node));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9100/buggy-version/xml.src.main.java.bee.creative.xml.XML.java", "BodyUseAPI": [], "Fixed commit": "b093b1383f2379e63e8a167db4c6271943b04cd1", "Url": "https://api.github.com/repos/Sebastian-Rostock/java.bee-creative", "Date": "2015-03-15T23:07:28Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (utilities.structuredmap.JsonScanner.INTEGER_PATTERN.matcher(token).matches()) { tokens.offer(new utilities.structuredmap.JsonToken(JsonTokenType.INTEGER, token)); }else if (utilities.structuredmap.JsonScanner.STRING_PATTERN.matcher(token).matches()) { tokens.offer(new utilities.structuredmap.JsonToken(JsonTokenType.STRING, utilities.structuredmap.JsonScanner.stripQuotes(token))); }else { throw new java.lang.IllegalArgumentException((token + \" is not a valid JSON token.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8713/buggy-version/src.utilities.structuredmap.JsonScanner.java", "BodyUseAPI": ["java.util.Queue<utilities.structuredmap.JsonToken>.offer(utilities.structuredmap.JsonToken)", "java.util.Queue<utilities.structuredmap.JsonToken>.offer(utilities.structuredmap.JsonToken)", "utilities.structuredmap.JsonScanner.stripQuotes(java.lang.String)", "java.util.regex.Matcher.matches()", "java.util.regex.Pattern.matcher(java.lang.String)"], "Fixed commit": "c238754f13f066d5b55625c7a01080046cd2b77d", "Url": "https://api.github.com/repos/Iteration-3/Code", "Date": "2015-04-20T07:44:31Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bladecoder.engineeditor.common.ElementUtils.cloneElement(com.bladecoder.engineeditor.ui.ActorList)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newElement instanceof com.bladecoder.engine.model.InteractiveActor) { com.bladecoder.engine.model.InteractiveActor ia = ((com.bladecoder.engine.model.InteractiveActor) (newElement)); ia.loadAssets(); com.bladecoder.engine.assets.EngineAssetManager.getInstance().finishLoading(); ia.retrieveAssets(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6405/buggy-version/adventure-editor.src.main.java.com.bladecoder.engineeditor.ui.ActorList.java", "BodyUseAPI": [], "Fixed commit": "faf9516a073010f2e1ed57a3b87d13f3c127e964", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2016-06-30T16:17:57Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(me.mrdj.attractor.config.Config.canBeMobGriefed)) { this.setHardness(((float) (50.0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7294/buggy-version/src.main.java.me.mrdj.attractor.blocks.BlockAttractor.java", "BodyUseAPI": [], "Fixed commit": "c89507412cb339af9a6663697faf227c506479aa", "Url": "https://api.github.com/repos/MrDj200/Attractor", "Date": "2017-10-20T17:11:59Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pruned.endsWith(\".\")) { pruned = pruned.substring(0, ((pruned.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1577/buggy-version/src.com.therandomlabs.romannumeralgenerator.RomanNumeralGenerator.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "ff98fc06528a64f643cb7e6f080d579b2d89142b", "Url": "https://api.github.com/repos/TheRandomLabs/Roman-Numeral-Generator", "Date": "2017-01-20T04:41:30Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (harvestedCheck) { countQuery.append(\" FILTER (bound(?refreshed))\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8815/buggy-version/src.main.java.eionet.cr.dao.virtuoso.VirtuosoBrowseVoidDatasetsDAO.java", "BodyUseAPI": [], "Fixed commit": "7a1c7d8e0e058cd402382ccae3bbde5399a63f2f", "Url": "https://api.github.com/repos/eea/eionet.contreg", "Date": "2015-06-17T12:39:56Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lessonTimeString.getId()) == (lessonTime.getId())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4342/buggy-version/src.main.java.com.examscheduler.controllers.tools.LessonsTimeValidator.java", "BodyUseAPI": [], "Fixed commit": "216f488c5dce3b10193fded9cfc2e03fbedfd019", "Url": "https://api.github.com/repos/migunovAlex/examScheduler", "Date": "2014-10-02T21:34:21Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((iRequest.content) != null) && (!(iRequest.content.isEmpty()))) { if (iRequest.content.startsWith(\"{\")) { final com.orientechnologies.orient.core.record.impl.ODocument doc = new com.orientechnologies.orient.core.record.impl.ODocument().fromJSON(iRequest.content); text = doc.field(\"command\"); params = doc.field(\"parameters\"); if (params instanceof java.util.Collection) { final java.lang.Object[] paramArray = new java.lang.Object[((java.util.Collection) (params)).size()]; ((java.util.Collection) (params)).toArray(paramArray); params = paramArray; } }else { text = iRequest.content; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6790/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.http.command.post.OServerCommandPostCommand.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.fromJSON(iRequest.content)", "iRequest.content.startsWith(java.lang.String)"], "Fixed commit": "44c7eba3ff0572ab82bf827257dd137d93819af0", "Url": "https://api.github.com/repos/mcculls/orientdb", "Date": "2015-09-17T17:06:44Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((iArgs.length) == 1) && ((iArgs[0]) != null)) && (iArgs[0].getClass().isArray())) && ((iArgs[0]) instanceof java.lang.Object[])) iArgs = ((java.lang.Object[]) (iArgs[0]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6790/buggy-version/core.src.main.java.com.orientechnologies.orient.core.command.OCommandRequestAbstract.java", "BodyUseAPI": [], "Fixed commit": "44c7eba3ff0572ab82bf827257dd137d93819af0", "Url": "https://api.github.com/repos/mcculls/orientdb", "Date": "2015-09-17T17:06:44Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!fixedSelection) { if (hasMatchingParent(target, de.thm.mni.mote.mode.uiactor.editor.elementmanager.interfaces.Selectable.class)) { de.thm.mni.mote.mode.uiactor.editor.elementmanager.ElementManager.getInstance(tab.getData()).setSelectedElement(((de.thm.mni.mote.mode.uiactor.editor.elementmanager.interfaces.Selectable) (getMatchingParent(target, de.thm.mni.mote.mode.uiactor.editor.elementmanager.interfaces.Hoverable.class)))); }else { de.thm.mni.mote.mode.uiactor.editor.elementmanager.ElementManager.getInstance(tab.getData()).clearSelectedElement(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4233/buggy-version/src.main.java.de.thm.mni.mote.mode.uiactor.editor.statemachine.StateMachine.java", "BodyUseAPI": [], "Fixed commit": "97b50f2d60af59d5ad5aec865ba6507df731f630", "Url": "https://api.github.com/repos/THM-MoTE/MoDE", "Date": "2017-03-02T14:10:43Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((effect.getRoll()) > 0) { collection.addSingleOpposingRoll(effect.getRoll(), effect.getPlayerId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3838/buggy-version/src.main.java.org.butterbrot.ffb.stats.StatsCollector.java", "BodyUseAPI": ["org.butterbrot.ffb.stats.collections.StatsCollection.addSingleOpposingRoll(effect.getRoll(),effect.getPlayerId())", "refactored.com.balancedbytes.games.ffb.report.ReportSpecialEffectRoll.getRoll()", "refactored.com.balancedbytes.games.ffb.report.ReportSpecialEffectRoll.getPlayerId()"], "Fixed commit": "5067d28fe06984df5fad83023484d01ac0870a6b", "Url": "https://api.github.com/repos/SanityResort/FFBStats", "Date": "2016-06-07T23:00:51Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.READ_EXTERNAL_STORAGE, Manifest.permission.INTERNET }, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1224/buggy-version/app.src.main.java.aggrathon.a360video.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "582161c794c4a402d88e1f2b768002a22962fdf1", "Url": "https://api.github.com/repos/Aggrathon/360-Video-Player", "Date": "2016-11-26T19:22:33Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cmb.getHideButton().getText().equalsIgnoreCase(\"no\")) { org.iplantc.de.client.views.windows.FileViewerWindow.super.doHide(); doClose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6367/buggy-version/src.main.java.org.iplantc.de.client.views.windows.FileViewerWindow.java", "BodyUseAPI": [], "Fixed commit": "8c939bfef728dc7547c024af95f79bf4c0b35a96", "Url": "https://api.github.com/repos/iPlantCollaborativeOpenSource/de-webapp", "Date": "2013-12-18T01:06:54Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p) != null) { p.setVeiwDirtyState(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6367/buggy-version/src.main.java.org.iplantc.de.client.views.windows.FileViewerWindow.java", "BodyUseAPI": [], "Fixed commit": "8c939bfef728dc7547c024af95f79bf4c0b35a96", "Url": "https://api.github.com/repos/iPlantCollaborativeOpenSource/de-webapp", "Date": "2013-12-18T01:06:54Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uiContext.getUnitImageFactory().getImage(games.strategy.engine.data.UnitType,games.strategy.engine.data.PlayerID,games.strategy.engine.data.GameData,boolean,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (img.isPresent()) { drawUnit(graphics, img.get(), placementPoint, bounds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/815/buggy-version/src.games.strategy.triplea.ui.screen.UnitsDrawer.java", "BodyUseAPI": ["java.util.Optional<java.awt.Image>.get()", "games.strategy.triplea.ui.screen.UnitsDrawer.drawUnit(java.awt.Graphics2D,java.awt.Image,java.awt.Point,java.awt.Rectangle)"], "Fixed commit": "e11984e8d453a2baee62423dd41f16472acb4631", "Url": "https://api.github.com/repos/RoiEXLab/triplea", "Date": "2016-06-15T03:19:00Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uiContext.getUnitImageFactory().getImage(games.strategy.engine.data.UnitType,games.strategy.engine.data.PlayerID,games.strategy.engine.data.GameData,boolean,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(img.isPresent())) { games.strategy.debug.ClientLogger.logError((\"MISSING IMAGE (this unit or image will be invisible): \" + type)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/815/buggy-version/src.games.strategy.triplea.ui.screen.UnitsDrawer.java", "BodyUseAPI": [], "Fixed commit": "e11984e8d453a2baee62423dd41f16472acb4631", "Url": "https://api.github.com/repos/RoiEXLab/triplea", "Date": "2016-06-15T03:19:00Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((latitude != 0.0F) && (longitude != 0.0F)) { return new main.java.com.dagorhir.api.domain.EventListWrapper(eventService.getEvents(latitude, longitude, radius, limit)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5704/buggy-version/src.main.java.com.dagorhir.api.controller.EventController.java", "BodyUseAPI": ["main.java.com.dagorhir.api.service.EventService.getEvents(java.lang.Float,java.lang.Float,java.lang.String,int)"], "Fixed commit": "8fd5d9958d494d954d1424b3ccf690ebeff469c3", "Url": "https://api.github.com/repos/aolsenjazz/dagorhir-api", "Date": "2017-10-27T21:12:53Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.java.com.dagorhir.api.util.Util.csvToList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(realmsList.isEmpty())) { return new main.java.com.dagorhir.api.domain.EventListWrapper(eventService.getEvents(latitude, longitude, realmsList, limit)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5704/buggy-version/src.main.java.com.dagorhir.api.controller.EventController.java", "BodyUseAPI": ["main.java.com.dagorhir.api.service.EventService.getEvents(java.lang.Float,java.lang.Float,java.util.List<java.lang.String>,int)"], "Fixed commit": "8fd5d9958d494d954d1424b3ccf690ebeff469c3", "Url": "https://api.github.com/repos/aolsenjazz/dagorhir-api", "Date": "2017-10-27T21:12:53Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((results.size()) != 0) { return results; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2055/buggy-version/src.infrastructure.NerParser.java", "BodyUseAPI": [], "Fixed commit": "d352e1a1923831eab0f7c17ea02973e45b56ce7e", "Url": "https://api.github.com/repos/cs2103aug2014-w15-2j/main", "Date": "2014-11-09T21:06:50Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((results.size()) != 0) { return results; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2055/buggy-version/src.infrastructure.NerParser.java", "BodyUseAPI": [], "Fixed commit": "d352e1a1923831eab0f7c17ea02973e45b56ce7e", "Url": "https://api.github.com/repos/cs2103aug2014-w15-2j/main", "Date": "2014-11-09T21:06:50Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.wisdom.lottery.service.UserService.getUserById(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (merchant != null) { sendNewsMessage(news, merchant.getOpenid()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6979/buggy-version/LotteryService.src.main.java.cn.wisdom.lottery.service.wx.MessageNotifierImpl.java", "BodyUseAPI": ["cn.wisdom.lottery.dao.vo.User.getOpenid()", "cn.wisdom.lottery.service.wx.MessageNotifierImpl.sendNewsMessage(me.chanjar.weixin.mp.bean.WxMpCustomMessage.WxArticle,merchant.getOpenid())"], "Fixed commit": "b2d4cb471636726c34c607009537237f1f00e7dd", "Url": "https://api.github.com/repos/ooclrickliu/lottery", "Date": "2016-08-10T06:06:02Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((actionKey) == null) || ((actionKey.length()) == 0)) { mCall = com.snowdays.snowdaysctrl.utilities.NetworkService.getInstance().getParticipants(getHeaders()); }else { mCall = com.snowdays.snowdaysctrl.utilities.NetworkService.getInstance().getParticipantsWithFields(getHeaders(), actionKey, switch_value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7605/buggy-version/app.src.main.java.com.snowdays.snowdaysctrl.activities.ParticipantListActivity.java", "BodyUseAPI": ["com.snowdays.snowdaysctrl.utilities.NetworkService.getInstance().getParticipantsWithFields(getHeaders(),java.lang.String,java.lang.Boolean)"], "Fixed commit": "396859028bd69bc138e8bdbe8b14c9a96b2c6b37", "Url": "https://api.github.com/repos/danielmorandini/snowdays-ctrl", "Date": "2017-03-08T10:53:48Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((cmmsBusiness.AccessVehicle.dbVehicles.size()) == 0) { try { cmmsObjects.Vehicle.Vehicle[] vList = dataAccess.getAllVehicles(); for (cmmsObjects.Vehicle.Vehicle v : vList) cmmsBusiness.AccessVehicle.dbVehicles.add(v); } catch (java.sql.SQLException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6176/buggy-version/src.cmmsBusiness.AccessVehicle.java", "BodyUseAPI": [], "Fixed commit": "91863e9980df4a95d9b8ade8f858b4ee7438e2fa", "Url": "https://api.github.com/repos/brycepfrimmer/3350Project", "Date": "2014-03-22T22:11:49Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.exp) == (-0)) { this.exp = 0; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5385/buggy-version/src.main.java.com.firegodjr.ancientlanguage.entity.properties.ExtPropMagicExperience.java", "BodyUseAPI": [], "Fixed commit": "b4858f51b90b729ca3a67f600ceaad2ad124e89f", "Url": "https://api.github.com/repos/Spartan322/Alagaesias-Ancient-Language", "Date": "2016-05-04T23:28:17Z"},
{"Line": "=>668", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paymentIntent.isBluetoothPaymentUrl()) directPaymentEnableView.setChecked((resultCode == (android.app.Activity.RESULT_OK)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4735/buggy-version/wallet.src.de.schildbach.wallet.ui.SendCoinsFragment.java", "BodyUseAPI": [], "Fixed commit": "5e3ea3aa255fc5cee6fb4581cab2bfe89d44a75f", "Url": "https://api.github.com/repos/schildbach/bitcoin-wallet", "Date": "2014-03-01T11:36:54Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (paymentIntent.isBluetoothPaymentUrl()) directPaymentEnableView.setChecked((((bluetoothAdapter) != null) && (bluetoothAdapter.isEnabled()))); else if (paymentIntent.isHttpPaymentUrl()) directPaymentEnableView.setChecked(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4735/buggy-version/wallet.src.de.schildbach.wallet.ui.SendCoinsFragment.java", "BodyUseAPI": ["de.schildbach.wallet.PaymentIntent.isHttpPaymentUrl()"], "Fixed commit": "5e3ea3aa255fc5cee6fb4581cab2bfe89d44a75f", "Url": "https://api.github.com/repos/schildbach/bitcoin-wallet", "Date": "2014-03-01T11:36:54Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(loggers.containsKey(filterDestination))) { org.apache.log4j.Logger filterLogger = org.slf4j.org.apache.log4j.Logger.getLogger((\"LOG_FILTER_\" + (payloadFilter.get(org.swisspush.gateleen.logging.LoggingHandler.URL)))); filterLogger.removeAllAppenders(); filterLogger.addAppender(appender); filterLogger.setAdditivity(false); loggers.put(filterDestination, filterLogger); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/561/buggy-version/gateleen-logging.src.main.java.org.swisspush.gateleen.logging.LoggingHandler.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.slf4j.Logger>.put(java.lang.String,org.slf4j.Logger)"], "Fixed commit": "1f8ded5adad886c4f455247671c7bef675b5dff9", "Url": "https://api.github.com/repos/swisspush/gateleen", "Date": "2016-06-16T12:32:02Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mActivity.getEditText().getText().toString().trim().isEmpty())) { numberChosen = java.lang.Integer.parseInt(mActivity.getEditText().getText().toString().trim()); switch (numberChosen) { case 0 : startActivity(new android.content.Intent(this, com.example.jettcalder.loginexample.LoginActivity.class)); break; case 1 : startActivity(new android.content.Intent(this, com.example.jettcalder.loginexample.ProfileActivity.class).putExtra(\"username\", username)); break; case 2 : startActivity(new android.content.Intent(this, com.example.jettcalder.loginexample.DummyActivity.class)); break; case 3 : startActivity(new android.content.Intent(this, com.example.jettcalder.loginexample.ExampleActivity.class)); break; default : android.widget.Toast.makeText(this, \"Pls choose the number from the list above!\", Toast.LENGTH_LONG).show(); } mActivity.getEditText().setText(\"\"); }else { android.widget.Toast.makeText(this, \"Pls Enter a valid number\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9127/buggy-version/app.src.main.java.com.example.jettcalder.loginexample.MainActivity.java", "BodyUseAPI": ["mActivity.getEditText().setText(java.lang.String)", "android.support.design.widget.TextInputLayout.getEditText()", "android.support.design.widget.TextInputLayout.getEditText()", "java.lang.Integer.parseInt(mActivity.getEditText().getText().toString().trim())", "mActivity.getEditText().getText()", "mActivity.getEditText().getText().toString().trim()", "mActivity.getEditText().getText().toString()"], "Fixed commit": "f46286011077f9a4a81bcf887fb7c15dac6b415e", "Url": "https://api.github.com/repos/NiobeCipher/LoginExample", "Date": "2017-08-22T12:46:11Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3822/buggy-version/src.main.java.gregtech.common.tileentities.machines.multi.GT_MetaTileEntity_AssemblyLine.java", "BodyUseAPI": [], "Fixed commit": "1c195f5aab22c23aed4df944e49631e62312bd8b", "Url": "https://api.github.com/repos/Blood-Asp/GT5-Unofficial", "Date": "2016-09-13T22:40:50Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3822/buggy-version/src.main.java.gregtech.common.tileentities.machines.multi.GT_MetaTileEntity_AssemblyLine.java", "BodyUseAPI": [], "Fixed commit": "1c195f5aab22c23aed4df944e49631e62312bd8b", "Url": "https://api.github.com/repos/Blood-Asp/GT5-Unofficial", "Date": "2016-09-13T22:40:50Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.data.mongodb.repository.MongoRepository<E, java.lang.String>.findOne(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (entity == null) { throw new java.lang.RuntimeException(((\"entity, \" + entityId) + \", not found in db.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6285/buggy-version/src.main.java.com.cooper.creator.builder.CarryableBuilderTemplate.java", "BodyUseAPI": [], "Fixed commit": "e97182c3ba0fd94a75b77b7f1e5dcb07a7f869c6", "Url": "https://api.github.com/repos/JamesRCooper/PatternGame", "Date": "2016-06-09T14:08:22Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.onsdigital.zebedee.api.Collections.getCollection(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (collection == null) { throw new com.github.onsdigital.zebedee.exceptions.NotFoundException(\"Collection not found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7184/buggy-version/src.main.java.com.github.onsdigital.zebedee.api.Review.java", "BodyUseAPI": [], "Fixed commit": "4acd0e89bd4a3f687e32469f09e12dd5d0732a91", "Url": "https://api.github.com/repos/ONSdigital/zebedee", "Date": "2015-05-18T13:40:47Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cmd.getName().toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (command.equalsIgnoreCase(\"say\")) { new org.bukkit.command.defaults.SayCommand().execute(sender, \"\", args); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1466/buggy-version/src.base.plugin.ChatHandler.java", "BodyUseAPI": [], "Fixed commit": "ae761f5a63dce2d8d657ad260453ab87e0250d86", "Url": "https://api.github.com/repos/VeganRoach-OS/vrchat", "Date": "2014-01-19T20:00:41Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (spec instanceof com.rockwellcollins.atc.agree.agree.EqStatement) { result.add(spec); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8185/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.src.com.rockwellcollins.atc.agree.scoping.AgreeScopeProvider.java", "BodyUseAPI": ["java.util.Set<org.osate.aadl2.Element>.add(com.rockwellcollins.atc.agree.agree.SpecStatement)"], "Fixed commit": "ac78244c18b286bf9029fc9e40b47db6f7fb10be", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2013-08-27T21:58:24Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (type != null) { type = type.resolveAliases(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3911/buggy-version/typechecker.src.com.redhat.ceylon.compiler.typechecker.analyzer.AnalyzerUtil.java", "BodyUseAPI": ["com.redhat.ceylon.model.typechecker.model.Type.resolveAliases()"], "Fixed commit": "0fa8d9531c8331b5f5f25b3a22a2c3f91a9f5ed7", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-03-22T17:46:25Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(playerInChannel.containsKey(channelDatabase))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9151/buggy-version/src.main.java.net.cubespace.CloudChat.Module.ChannelManager.ChannelManager.java", "BodyUseAPI": [], "Fixed commit": "c8e98f05975dc93f192eac9b3b4c07a615cbef66", "Url": "https://api.github.com/repos/geNAZt/CloudChat", "Date": "2014-01-02T16:33:58Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) != null) { keyValueBuilder.setValue(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8124/buggy-version/apm-sniffer.apm-agent-core.src.main.java.org.skywalking.apm.agent.core.context.util.KeyValuePair.java", "BodyUseAPI": [], "Fixed commit": "fa42cd47b5989e5dc3b1ebfc0accea6b30098c1f", "Url": "https://api.github.com/repos/apache/incubator-skywalking", "Date": "2017-08-29T10:25:27Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((getIntent()) != null) && ((getIntent().getData()) != null)) && ((getIntent().getData().getQueryParameter(\"group_name\")) != null)) { android.content.Intent mainActivityIntent = new android.content.Intent(this, edu.uw.dengz6.checkmate.MainActivity.class); startActivity(mainActivityIntent); }else { android.content.Intent intent = new android.content.Intent(getApplicationContext(), edu.uw.dengz6.checkmate.AddMembersActivity.class); intent.putExtra(\"group_id\", groupName); startActivityForResult(intent, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6107/buggy-version/CheckMate.app.src.main.java.edu.uw.dengz6.checkmate.SignupActivity.java", "BodyUseAPI": [], "Fixed commit": "9b29d0f45a633deecb6de203229fc5efdd5fa57c", "Url": "https://api.github.com/repos/zicodeng/checkmate", "Date": "2017-05-31T07:59:54Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["n.getLikes(directionOut, vote).toArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((result == null) || ((result.length) == 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/86/buggy-version/src.main.java.de.metalcon.like.api.LikeService.java", "BodyUseAPI": [], "Fixed commit": "b978b800e47117ebd199a2d3ca7a58030e40076b", "Url": "https://api.github.com/repos/Metalcon/likeButtonServer", "Date": "2014-03-30T20:42:25Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (previousSerializedItems.equals(newSerializedItems)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8864/buggy-version/api.src.main.java.org.openmrs.module.auditlog.api.db.hibernate.interceptor.HibernateAuditLogInterceptor.java", "BodyUseAPI": [], "Fixed commit": "cb3c5902b77143746b485b2b8319cea15bcbf3e6", "Url": "https://api.github.com/repos/openmrs/openmrs-module-auditlog", "Date": "2013-10-07T11:24:59Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(record.get(0))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idToInt >= (nextId)) { nextId = idToInt + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2323/buggy-version/src.main.java.com.libertymutual.goforcode.todolist.services.ToDoItemRepository.java", "BodyUseAPI": [], "Fixed commit": "d1b42c4df995e37b15080bb17872bed3b1a41052", "Url": "https://api.github.com/repos/peter5210/to-do-list", "Date": "2017-08-25T20:34:18Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m.getStatus().equals(\"Not online\")) { postSnackbar((\"It looks like this location is offline. \" + \"Please go to the laundry room to check machines.\"), Snackbar.LENGTH_LONG); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5806/buggy-version/app.src.main.java.xyz.jhughes.laundry.fragments.MachineFragment.java", "BodyUseAPI": [], "Fixed commit": "572645aa7f3488980dddc373a46efa19bb504a63", "Url": "https://api.github.com/repos/Purdue-ACM-SIGApp/PurdueLaundry-android", "Date": "2016-12-19T09:23:48Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node1 instanceof com.intellij.codeInspection.ui.InspectionRootNode) && (node2 instanceof com.intellij.codeInspection.ui.InspectionRootNode)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/443/buggy-version/platform.lang-impl.src.com.intellij.codeInspection.ui.InspectionResultsViewComparator.java", "BodyUseAPI": [], "Fixed commit": "7f6897c3e28db84a29f84117890662166da98b10", "Url": "https://api.github.com/repos/ollie314/intellij-community", "Date": "2016-04-04T07:29:25Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (faked_line != null) { java.lang.String[] faked_jobs = faked_line.split(\"\\\\s+\"); for (java.lang.String faked_job : faked_jobs) faked.add(faked_job); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2225/buggy-version/src.edu.jhu.thrax.hadoop.jobs.Scheduler.java", "BodyUseAPI": [], "Fixed commit": "f9d34dca3d674746033d95afb407463420281edf", "Url": "https://api.github.com/repos/jganitkevitch/thrax", "Date": "2012-04-09T03:21:09Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Boolean.valueOf(request.getParameter(\"cache\"))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (cache) { photoData = photoService.getDataByFilename(fileName, PhotoDataEnum.BOTH_DATA, cache); }else { photoData = photoService.getDataByFilename(fileName, PhotoDataEnum.PICTURE_ONLY, cache); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8731/buggy-version/src.main.java.com.zotyo.photos.servlet.PhotoServlet.java", "BodyUseAPI": ["com.zotyo.photos.service.PhotoService.getDataByFilename(java.lang.String,PhotoDataEnum.PICTURE_ONLY,boolean)", "com.zotyo.photos.service.PhotoService.getDataByFilename(java.lang.String,PhotoDataEnum.BOTH_DATA,boolean)"], "Fixed commit": "158d8b3ad40c542098ce3f82701f001fcb7adb55", "Url": "https://api.github.com/repos/zgorbe/BabaNaplo", "Date": "2013-07-02T12:28:12Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.lang.model.element.ExecutableElement.getModifiers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((modifiers.contains(javax.lang.model.element.Modifier.PUBLIC)) || (modifiers.contains(javax.lang.model.element.Modifier.PROTECTED))) { warning(methodElement, \"@Inject annotated methods should have protect visibility: %s#%s\", enclosingElement.getQualifiedName(), methodElement.getSimpleName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1248/buggy-version/toothpick-compiler.src.main.java.toothpick.compiler.common.ToothpickProcessor.java", "BodyUseAPI": [], "Fixed commit": "1b4664f84a38fcfa7550f836e5735b932d3ce677", "Url": "https://api.github.com/repos/stephanenicolas/toothpick", "Date": "2016-10-03T20:33:25Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node1 == node2) return node1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7773/buggy-version/src.interview.LowestCommonAncestor.java", "BodyUseAPI": [], "Fixed commit": "42efbd90903035e3c21c600e4cf1523a44002922", "Url": "https://api.github.com/repos/DylanYu/algorithms", "Date": "2014-08-24T17:07:05Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((waitForAndGetElement(ELEMENT_CANCEL_BUTTON_PORTAL_FORM, 3000, 0)) != null) { click(ELEMENT_CANCEL_BUTTON_PORTAL_FORM); }else if ((waitForAndGetElement(ELEMENT_CANCEL_BUTTON, 3000, 0)) != null) { click(ELEMENT_CANCEL_BUTTON); }else { click(ELEMENT_CANCEL_BUTTON_AUX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/526/buggy-version/ui-common.src.main.java.org.exoplatform.selenium.Button.java", "BodyUseAPI": ["org.exoplatform.selenium.Button.click(org.openqa.selenium.By)"], "Fixed commit": "8487daf85c14a5e64c2f91e185df3369fa9a7b66", "Url": "https://api.github.com/repos/exoplatform/ui-test", "Date": "2014-06-23T09:04:07Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getData()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (data != null) { java.lang.String sharedText = data.toString(); mWebView.loadUrl(sharedText); }else { mWebView.loadUrl(\"http://www.newyorker.com/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1363/buggy-version/app.src.main.java.com.danielqiu.newyorker.MainActivity.java", "BodyUseAPI": ["android.net.Uri.toString()"], "Fixed commit": "4720a4d5c6dcfc73a98604cec96f4435ece3e00c", "Url": "https://api.github.com/repos/qsz13/NewYorker-Android", "Date": "2015-02-05T18:14:15Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j >= ((this.linesBuilder.getTotalLength()) - (this.linesBuilder.getLines().size()))) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/481/buggy-version/src.main.java.fiji.plugin.kymographbuilder.KymographCreator.java", "BodyUseAPI": [], "Fixed commit": "1d7e261f0291eea36eb1ab0f5414a0e52dd3587f", "Url": "https://api.github.com/repos/fiji/KymographBuilder", "Date": "2016-06-29T19:14:03Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cd != null) org.nutz.aop.DefaultClassDefiner.one = new org.nutz.aop.DefaultClassDefiner(cd); else org.nutz.aop.DefaultClassDefiner.one = new org.nutz.aop.DefaultClassDefiner(org.nutz.aop.DefaultClassDefiner.class.getClassLoader());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4085/buggy-version/src.org.nutz.aop.DefaultClassDefiner.java", "BodyUseAPI": [], "Fixed commit": "80e85d04b1e9258c6091c91f2ac8c01844ada375", "Url": "https://api.github.com/repos/Rekoe/nutz", "Date": "2015-06-07T13:13:07Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.cesnet.shongo.controller.api.rpc.AuthorizationService.getUserSettings(cz.cesnet.shongo.controller.api.SecurityToken,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((userSettings.getHomeTimeZone()) != null) { result.put(\"homeTimeZone\", userSettings.getHomeTimeZone().getID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4830/buggy-version/shongo-client-web.src.main.java.cz.cesnet.shongo.client.web.controllers.UserController.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,userSettings.getHomeTimeZone().getID())", "userSettings.getHomeTimeZone().getID()", "cz.cesnet.shongo.controller.api.UserSettings.getHomeTimeZone()"], "Fixed commit": "50c1ff9ebc825bcf5a38a071c9a7b54d114a7422", "Url": "https://api.github.com/repos/shongo/shongo", "Date": "2016-02-25T13:07:30Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((canvas.getWidth()) <= 0) || ((canvas.getHeight()) <= 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1722/buggy-version/src.main.java.org.bytedeco.javacv.CanvasFrame.java", "BodyUseAPI": [], "Fixed commit": "ca0895b72212a1662604c81cd4b7454e9e94d03f", "Url": "https://api.github.com/repos/poqudrof/javacv", "Date": "2014-11-29T01:30:16Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeToSend()) > (ar.nowTime)) { java.lang.System.out.println(((\"MEETING NOTIFICATION BUG: Request to send when TimeToSend (\" + (new java.util.Date(timeToSend()))) + \") is still in the future!\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8903/buggy-version/src.org.socialbiz.cog.MeetingRecord.java", "BodyUseAPI": [], "Fixed commit": "7a7a8f93b8dcac39c30e031314dda2a4cac595e9", "Url": "https://api.github.com/repos/agilepro/cognoscenti", "Date": "2015-12-03T21:59:36Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sn.timeToSend()) < nowTime) { sn.sendIt(ar, emailArchive); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8903/buggy-version/src.org.socialbiz.cog.mail.EmailSender.java", "BodyUseAPI": ["org.socialbiz.cog.mail.ScheduledNotification.sendIt(org.socialbiz.cog.AuthRequest,org.socialbiz.cog.mail.MailFile)"], "Fixed commit": "7a7a8f93b8dcac39c30e031314dda2a4cac595e9", "Url": "https://api.github.com/repos/agilepro/cognoscenti", "Date": "2015-12-03T21:59:36Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((commitmentStatusPicker.getSelectedItem()) == \"Not Started\") e.setStatus(CommitmentStatus.NotStarted);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/350/buggy-version/Calendar.src.edu.wpi.cs.wpisuitetng.modules.cal.ui.tabs.AddCommitmentDisplay.java", "BodyUseAPI": [], "Fixed commit": "0d6a880ba65f6dc661951d90fd7d4cbbafdc2f5e", "Url": "https://api.github.com/repos/cs3733-team4/wpi-suite", "Date": "2013-12-14T22:43:36Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((y * width) + x) >= (data.length)) return new com.lemonslice.appathon.EmojiDetector.rgb(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6744/buggy-version/app.src.main.java.com.lemonslice.appathon.EmojiDetector.java", "BodyUseAPI": [], "Fixed commit": "09782b69be52dc9dd2babe887991a560d0f515cf", "Url": "https://api.github.com/repos/SwiftPush/Appathon2015", "Date": "2015-03-07T20:47:22Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((width * height) + (2 * xby2)) + 1) + (yby2 * width)) >= (data.length)) return new com.lemonslice.appathon.EmojiDetector.rgb(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6744/buggy-version/app.src.main.java.com.lemonslice.appathon.EmojiDetector.java", "BodyUseAPI": [], "Fixed commit": "09782b69be52dc9dd2babe887991a560d0f515cf", "Url": "https://api.github.com/repos/SwiftPush/Appathon2015", "Date": "2015-03-07T20:47:22Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outputFileName) == null) { writer = new java.io.OutputStreamWriter(java.lang.System.out); }else { writer = new java.io.FileWriter(outputFileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/235/buggy-version/ScriptToAssembly.java", "BodyUseAPI": [], "Fixed commit": "689af5b55752f573e6b54eb660773b25c389bfcd", "Url": "https://api.github.com/repos/mikecat/script_to_assembly", "Date": "2016-12-19T13:39:48Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.util.Arrays.asList(this.getComponents()).contains(progressWheel))) { this.add(progressWheel, java.awt.BorderLayout.NORTH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4033/buggy-version/src.aurora.V1.core.Game.java", "BodyUseAPI": ["aurora.V1.core.Game.add(aurora.engine.V1.UI.AProgressWheel,java.lang.String)"], "Fixed commit": "007311a67430bba5bf1c7c775cc43b060b6d69a1", "Url": "https://api.github.com/repos/sguergachi/AuroraGameHub", "Date": "2013-04-25T16:54:08Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newEnd.isEqual(currentStart)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4752/buggy-version/src.logic.add.Add.java", "BodyUseAPI": [], "Fixed commit": "d231cb07944406a7dfc737d148faa714325924da", "Url": "https://api.github.com/repos/cs2103jan2016-t11-3j/main", "Date": "2016-04-06T09:52:48Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.bonitasoft.web.toolkit.client.common.util.StringUtil.isBlank(fileName)) { fileName = theSourceFile.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2992/buggy-version/server.src.main.java.org.bonitasoft.web.rest.server.datastore.bpm.cases.CaseDocumentDatastore.java", "BodyUseAPI": [], "Fixed commit": "9d044f577e02cffd4dabee0ca1ddbb08674e7ab9", "Url": "https://api.github.com/repos/bonitasoft/bonita-web", "Date": "2015-02-26T08:35:30Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(msg.substring(a, (a + 1)).equals(\" \"))) { myStack.push(msg.substring(a, (a + 1))); myQueue.add(msg.substring(a, (a + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5530/buggy-version/src.P1Qc3.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.util.Queue<java.lang.String>.add(java.lang.String)", "java.lang.String.substring(int,int)", "java.util.Stack<java.lang.String>.push(java.lang.String)"], "Fixed commit": "7b9c14c41b071c60c3a8a05cac116250cc44c5bf", "Url": "https://api.github.com/repos/LimFangChun/ASD-week3", "Date": "2017-10-31T23:54:57Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showHeader) position--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5004/buggy-version/library.src.main.java.com.karumi.headerrecyclerview.HeaderRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "df75060c38411b4c097b066bbab3012073bd4698", "Url": "https://api.github.com/repos/deano2390/HeaderRecyclerView", "Date": "2016-10-28T15:02:48Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (pack == null) { throw new pl.betoncraft.betonquest.ObjectNotFoundException((\"Package of this object does not exist: \" + id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2324/buggy-version/src.main.java.pl.betoncraft.betonquest.ID.java", "BodyUseAPI": [], "Fixed commit": "d3c064d1cadd4ec6670aab72d8e268e56974484c", "Url": "https://api.github.com/repos/AliveShiro/BetonQuest", "Date": "2017-01-09T18:12:03Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((args.length) > 0) && (\"-h\".equals(args[0]))) { help(e); }else if (((args.length) == 0) || (((args.length) > 0) && (\"start\".equals(args[0])))) { gn = new Game.GuessNumber(e); }else if (((args.length) > 0) && (\"end\".equals(args[0]))) { gn.endGame(); e.getChannel().sendMessage(((\"Game ended! The number was \" + (gn.getNumber())) + \".\")).queue(); }else { try { if (!(gn.isEnded)) gn.sendInput(args, e); else e.getChannel().sendMessage(((Resource.Emoji.error) + \" Game haven't started yet!\")).queue(); } catch (java.lang.NullPointerException en) { e.getChannel().sendMessage(((Resource.Emoji.error) + \" Game haven't started yet!\")).queue(); Setting.SmartLogger.errorLog(en, e, this.getClass().getName(), \"Game haven't started.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7714/buggy-version/src.main.java.Command.FunModule.GuessNumberCommand.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "Game.GuessNumber.sendInput(java.lang.String[],net.dv8tion.jda.core.events.message.MessageReceivedEvent)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "519da661b12e6e8da788c9d9b688ce6692f4db5f", "Url": "https://api.github.com/repos/AlienIdeology/AIBot", "Date": "2017-04-10T23:44:43Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.properties) != null) { for (java.lang.String key : this.properties.keySet()) { final java.lang.String value = this.properties.getString(key); if (value != null) { envParam.put(key, value); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7795/buggy-version/src.main.java.ir.xweb.module.Manager.java", "BodyUseAPI": [], "Fixed commit": "aa2fb5e8236fa5e2fa4ba497eb9e16692a493667", "Url": "https://api.github.com/repos/abdollahpour/xweb", "Date": "2014-05-02T09:00:53Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (serverURI.getScheme().equals(br.com.vicenteneto.api.tuleap.util.ConfigurationUtil.getConfiguration(\"HTTP\"))) { java.lang.String https = br.com.vicenteneto.api.tuleap.util.ConfigurationUtil.getConfiguration(\"HTTPS\"); serverURI = new java.net.URI(https, null, serverURI.getHost(), serverURI.getPort(), null, null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8797/buggy-version/src.main.java.br.com.vicenteneto.api.tuleap.TuleapServer.java", "BodyUseAPI": [], "Fixed commit": "14536fbbaa3a7a2d6e3215216d578dd478c28ea7", "Url": "https://api.github.com/repos/vicenteneto/tuleap-java-api", "Date": "2016-02-29T02:01:48Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataPosition > 0) && (nextDataPosition < (spectrumBox.gui.common.dialog.about.ImportFilePreviewPanel.importFileModel.getData().length))) { int data = ((int) (((getHeight()) * (spectrumBox.gui.common.dialog.about.ImportFilePreviewPanel.importFileModel.getData()[dataPosition])) / (java.lang.Math.pow(2, 16)))); int nextData = ((int) (((getHeight()) * (spectrumBox.gui.common.dialog.about.ImportFilePreviewPanel.importFileModel.getData()[nextDataPosition])) / (java.lang.Math.pow(2, 16)))); g2d.drawLine(zoomX, (((getHeight()) / 2) + (data / 2)), (zoomX + 1), (((getHeight()) / 2) + (nextData / 2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6841/buggy-version/src.main.java.spectrumBox.gui.common.dialog.about.ImportFilePreviewPanel.java", "BodyUseAPI": ["spectrumBox.gui.common.dialog.about.ImportFileModel.getData()", "spectrumBox.gui.common.dialog.about.ImportFileModel.getData()"], "Fixed commit": "e9415fb19cbd183982944a99cb6a5e5ee4c9bcda", "Url": "https://api.github.com/repos/alvarogimenez/spectrumbox", "Date": "2015-08-24T21:53:09Z"},
{"Line": "=>1617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fredbear) != null) targets.add(fredbear);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8871/buggy-version/src.main.java.org.bitbucket.ucchy.fnafim.game.GameSession.java", "BodyUseAPI": [], "Fixed commit": "94a52cff6131b601c1507d19498311f90a3ed362", "Url": "https://api.github.com/repos/ucchyocean/Five-Nights-at-Freddy-s-in-Minecraft", "Date": "2016-03-20T09:13:15Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.verify.VerifyOracle.getBuildNumber()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((buildNumber >= (com.liferay.portal.kernel.util.ReleaseInfo.RELEASE_6_0_0_BUILD_NUMBER)) && (buildNumber < (com.liferay.portal.kernel.util.ReleaseInfo.RELEASE_6_1_20_BUILD_NUMBER))) { if (dataLength != 4000) { dataLength = dataLength / 4; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3583/buggy-version/portal-impl.src.com.liferay.portal.verify.VerifyOracle.java", "BodyUseAPI": [], "Fixed commit": "d3f54938395fb3bb5cd4b2decc93d445488a5872", "Url": "https://api.github.com/repos/dnprossi/liferay-portal", "Date": "2012-07-06T23:31:25Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["securityData.getCurrentDocDeny().get(SecurityConstants.EVERYONE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((deniedPerms != null) && (deniedPerms.contains(SecurityConstants.EVERYTHING))) { blockRightInheritance = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4518/buggy-version/nuxeo-platform-webapp-core.src.main.java.org.nuxeo.ecm.webapp.security.SecurityActionsBean.java", "BodyUseAPI": [], "Fixed commit": "9e3a8c61d167e310628a6274dfd701b147193bce", "Url": "https://api.github.com/repos/nuxeo/nuxeo-dm", "Date": "2014-09-09T17:32:48Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(instrumentationPackage)) { commands.add(\"--rename-instrumentation-target-package\"); commands.add(instrumentationPackage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2696/buggy-version/src.main.java.com.jayway.maven.plugins.android.common.AaptCommandBuilder.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "e003c1cbcf5dca4ae2bec8ac334421f94b912fd2", "Url": "https://api.github.com/repos/tprochazka/maven-android-plugin", "Date": "2014-05-27T11:52:43Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(manifestPackage)) { commands.add(\"--rename-manifest-package\"); commands.add(manifestPackage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2696/buggy-version/src.main.java.com.jayway.maven.plugins.android.common.AaptCommandBuilder.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "e003c1cbcf5dca4ae2bec8ac334421f94b912fd2", "Url": "https://api.github.com/repos/tprochazka/maven-android-plugin", "Date": "2014-05-27T11:52:43Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["newContentsItem.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (text.matches(\"\")) { edu.berkeley.cs160.tagit.Toast toast = edu.berkeley.cs160.tagit.Toast.makeText(this, \"You must enter an item before adding.\", Toast.LENGTH_SHORT); toast.show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/964/buggy-version/TagIt.src.edu.berkeley.cs160.tagit.AddBoxActivity.java", "BodyUseAPI": [], "Fixed commit": "ae89800f6cdd8faa74ddbd665d9c201eedeb7fa7", "Url": "https://api.github.com/repos/bjrafeld/TagIt", "Date": "2013-11-24T20:38:50Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"2\".equalsIgnoreCase(util.ConvertString(B[16])))) { data.add(overdue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3446/buggy-version/src.java.com.smi.travel.datalayer.dao.impl.OverdueSummaryImpl.java", "BodyUseAPI": [], "Fixed commit": "d7f68eac987093711665bad1f861fb74ca209b44", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2016-10-10T03:06:14Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"\".equals(field.getFieldValue())) { field.setFieldValue(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1460/buggy-version/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.programProfile.programProfileDAO.java", "BodyUseAPI": ["com.registryKit.programProfile.programProfileFields.setFieldValue(java.lang.String)"], "Fixed commit": "b584de7e5b6cb33ac76ee029abadf4e28c0e2726", "Url": "https://api.github.com/repos/bowlinktech/rr-mvn-repo", "Date": "2016-11-29T21:50:33Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((handlers.get(nextId).segment.from) != null) { if ((handlers.get(nextId).segment.from.length) == 2) { if (handlers.get(nextId).segment.from[1].equals(current.segment.id)) { alternate = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7084/buggy-version/osgi.enroute.trains.util.src.osgi.enroute.trains.track.util.Tracks.java", "BodyUseAPI": ["java.util.Map<java.lang.String, osgi.enroute.trains.track.util.Tracks.SegmentHandler<T>>.get(java.lang.String)", "java.util.Map<java.lang.String, osgi.enroute.trains.track.util.Tracks.SegmentHandler<T>>.get(java.lang.String)", "handlers.get(nextId).segment.from[1].equals(current.segment.id)"], "Fixed commit": "eb55c2b42a16779898092c41f3b3436bc01176cd", "Url": "https://api.github.com/repos/osgi/osgi.enroute.trains", "Date": "2015-09-16T14:56:52Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getWorld(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (world == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7095/buggy-version/src.main.java.org.gestern.gringotts.data.EBeanDAO.java", "BodyUseAPI": [], "Fixed commit": "8869249d69bfe865552b394084fbe7238f2a854f", "Url": "https://api.github.com/repos/MinecraftWars/Gringotts", "Date": "2014-06-22T14:30:38Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getWorld(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (world == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7095/buggy-version/src.main.java.org.gestern.gringotts.data.EBeanDAO.java", "BodyUseAPI": [], "Fixed commit": "8869249d69bfe865552b394084fbe7238f2a854f", "Url": "https://api.github.com/repos/MinecraftWars/Gringotts", "Date": "2014-06-22T14:30:38Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.equals(\"\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9115/buggy-version/src.BotIO.java", "BodyUseAPI": [], "Fixed commit": "7e228c9bb1fc919cb29848e6b54cced8793379ad", "Url": "https://api.github.com/repos/TomHeatwole/Piscis", "Date": "2017-08-28T17:36:43Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pageNumber == null) pageNumber = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6628/buggy-version/backend.src.main.java.com.fdvs.cpb.backendlab.services.NoteServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "6d8a45eacdb2ebc967fb4309d46f4ba3ed277d41", "Url": "https://api.github.com/repos/juanalvarezg/US-Backend-Candidate-Lab", "Date": "2013-08-19T02:08:18Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == (TAKE_PHOTO)) { int whichTile = ((java.lang.Integer) (tileNum)); takePhoto(whichTile); }else { addPhoto(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2703/buggy-version/src.ca.ualberta.CMPUT301F13T02.chooseyouradventure.ViewPageActivity.java", "BodyUseAPI": [], "Fixed commit": "f56af3163cd9c3f7e56373206ada7baf2e4e5fec", "Url": "https://api.github.com/repos/tbendubois/301project", "Date": "2013-12-02T19:17:25Z"},
{"Line": "=>548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loading) != null) { loading.setSize(((getWidth()) / 3), ((getHeight()) / 3)); loading.setLocation(((getWidth()) / 3), ((getHeight()) / 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1234/buggy-version/PaintNotes.src.main.java.view.View.java", "BodyUseAPI": [], "Fixed commit": "e3e305a3348ff1d212470815516f438cb11c8210", "Url": "https://api.github.com/repos/juliusHuelsmann/paint", "Date": "2015-04-03T12:54:22Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((callMethodExpression.getCallee()) == null) { sb.append(\"this\"); }else { callMethodExpression.getCallee().accept(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3820/buggy-version/brennus-builder.src.main.java.brennus.printer.TypePrinter.java", "BodyUseAPI": ["callMethodExpression.getCallee().accept(brennus.printer.ExpressionStringifierVisitor)", "brennus.model.CallMethodExpression.getCallee()"], "Fixed commit": "b7920a0607271f0fd4704cae2eaf3751f417b1b5", "Url": "https://api.github.com/repos/julienledem/brennus", "Date": "2012-07-14T00:54:37Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(world.isRemote)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1522/buggy-version/src.main.java.de.katzenpapst.amunra.proxy.ClientProxy.java", "BodyUseAPI": [], "Fixed commit": "9dcdb7ae64f930cfa4c67779a3bdc51e6dac222a", "Url": "https://api.github.com/repos/katzenpapst/amunra", "Date": "2017-01-04T15:32:46Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tile.getWorldObj().isRemote)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1522/buggy-version/src.main.java.de.katzenpapst.amunra.proxy.ClientProxy.java", "BodyUseAPI": [], "Fixed commit": "9dcdb7ae64f930cfa4c67779a3bdc51e6dac222a", "Url": "https://api.github.com/repos/katzenpapst/amunra", "Date": "2017-01-04T15:32:46Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (nextToken == null) { nextToken = com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck.getNextToken(ast); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7422/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck.java", "BodyUseAPI": [], "Fixed commit": "ec02b758405a1b9645a254d5eab8fca2dd09041e", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2017-01-30T20:29:10Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ast.getFirstChild().getType()) == (com.puppycrawl.tools.checkstyle.api.TokenTypes.RESOURCE_SPECIFICATION)) { lcurly = ast.getFirstChild().getNextSibling(); }else { lcurly = ast.getFirstChild(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7422/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getFirstChild()", "com.puppycrawl.tools.checkstyle.api.DetailAST.getFirstChild()", "ast.getFirstChild().getNextSibling()"], "Fixed commit": "ec02b758405a1b9645a254d5eab8fca2dd09041e", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2017-01-30T20:29:10Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"VAR_ID\".equals(child.getName())) return getEb().getEsiContext().retrieveVariable(child.getValue().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2337/buggy-version/src.main.java.org.netkernelroc.esi.expression.domain.FunctionArgumentExpression.java", "BodyUseAPI": ["org.netkernel.layer0.representation.IHDSNode.getValue()", "getEb().getEsiContext().retrieveVariable(child.getValue().toString())", "child.getValue().toString()"], "Fixed commit": "a3331b154d84f27ce2e57d15b205875669d70153", "Url": "https://api.github.com/repos/nflearl/esi-engine", "Date": "2014-10-25T00:34:01Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nodeResults.containsKey(node)) getConstructedData(node);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6316/buggy-version/supersql.dataconstructor.optimizer.construction.TreeMaker.java", "BodyUseAPI": ["supersql.dataconstructor.optimizer.construction.TreeMaker.getConstructedData(supersql.dataconstructor.optimizer.nodes.Node)"], "Fixed commit": "fefb8a161a2b7e513612c1698fb534d57eeca1fe", "Url": "https://api.github.com/repos/ToyamaLab/NewSSQL", "Date": "2016-07-07T00:56:41Z"},
{"Line": "=>1093", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((smarts != null) && ((smarts.length()) > 0)) { java.util.BitSet matchBitSet = m.getSmartsMatch(smarts); if ((matchBitSet.cardinality()) > 0) { match = true; if ((m.getHighlightedSmarts()) != null) { if ((highlightMode) == (HighlightMode.Spheres)) view.scriptWait((\"color cpk\" + (getColorSuffixTranslucent(translucency)))); else view.scriptWait((compoundColor + (getColorSuffixTranslucent(translucency)))); } m.setHighlightedSmarts(smarts); view.select(matchBitSet); view.scriptWait(((\"color \" + (gui.View.convertColor(matchColor))) + (getColorSuffixTranslucent(translucency)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8060/buggy-version/src.gui.MainPanel.java", "BodyUseAPI": ["cluster.Compound.getSmartsMatch(java.lang.String)", "cluster.Compound.setHighlightedSmarts(java.lang.String)"], "Fixed commit": "9f16accde66f62ea461cc942c3d7a43fe6949895", "Url": "https://api.github.com/repos/mguetlein/CheS-View", "Date": "2014-03-17T08:42:43Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((patternlist.get(0).getBehaviorList().size()) == 1) { }else if ((patternlist.get(0).getBehaviorList().size()) == 2) { java.util.HashMap<java.lang.String, edu.hit.yh.gitdata.mine.module.BehaviorPattern> prePatternMap = new java.util.HashMap<java.lang.String, edu.hit.yh.gitdata.mine.module.BehaviorPattern>(); for (edu.hit.yh.gitdata.mine.module.BehaviorPattern<edu.hit.yh.gitdata.mine.module.TimeBasedBehavior> preBehaviorPattern : patternlist) { for (edu.hit.yh.gitdata.mine.module.Artifact<edu.hit.yh.gitdata.mine.module.SimpleBehavior> artifact : artifactList) { if (isNeedToCheck(preBehaviorPattern, artifact)) { java.util.List<edu.hit.yh.gitdata.mine.module.TimeBasedBehavior> preTimePatternList = preBehaviorPattern.getBehaviorList(); java.util.List<edu.hit.yh.gitdata.mine.module.SimpleBehavior> artBehaviorSeq = artifact.getBehaviorSeq(); int preNum = 0; int artNum = 0; for (edu.hit.yh.gitdata.mine.module.SimpleBehavior simpleBehavior : artBehaviorSeq) { if (preTimePatternList.get(preNum).simplEquals(simpleBehavior)) { if (preNum == 1) { java.lang.String r = edu.hit.yh.gitdata.mine.util.RelativeTimeUtil.calculateRelativeTime(artBehaviorSeq.get(artNum).getCreatedAt(), simpleBehavior.getCreatedAt()); preTimePatternList.get(preNum).setRelativeTime(r); java.lang.StringBuilder patternInfo = new java.lang.StringBuilder(); for (edu.hit.yh.gitdata.mine.module.TimeBasedBehavior t : preTimePatternList) { patternInfo.append(((t.getActor()) + \" \")); patternInfo.append(((t.getEventType()) + \" \")); patternInfo.append(((t.getRelativeTime()) + \"|\")); } if (prePatternMap.containsKey(patternInfo.toString())) { prePatternMap.get(patternInfo).addSurpport(); }else { edu.hit.yh.gitdata.mine.module.BehaviorPattern<edu.hit.yh.gitdata.mine.module.TimeBasedBehavior> pattern = new edu.hit.yh.gitdata.mine.module.BehaviorPattern<edu.hit.yh.gitdata.mine.module.TimeBasedBehavior>(); pattern.setBehaviorList(preTimePatternList); pattern.setSurpport(1); } }else { artNum = artBehaviorSeq.indexOf(simpleBehavior); preNum++; } } } } } } java.util.List<edu.hit.yh.gitdata.mine.module.BehaviorPattern> list = new java.util.ArrayList<edu.hit.yh.gitdata.mine.module.BehaviorPattern>(); for (java.util.Map.Entry<java.lang.String, edu.hit.yh.gitdata.mine.module.BehaviorPattern> entry : prePatternMap.entrySet()) { if ((entry.getValue().getSurpport()) >= (this.getSurpport())) { list.add(entry.getValue()); } } return list; }else if ((patternlist.get(0).getBehaviorList().size()) > 2) { for (edu.hit.yh.gitdata.mine.module.BehaviorPattern<edu.hit.yh.gitdata.mine.module.TimeBasedBehavior> preBehaviorPattern : patternlist) { for (edu.hit.yh.gitdata.mine.module.Artifact<edu.hit.yh.gitdata.mine.module.SimpleBehavior> artifact : artifactList) { if (isNeedToCheck(preBehaviorPattern, artifact)) { int artPoint = 0; java.util.List<edu.hit.yh.gitdata.mine.module.SimpleBehavior> artBehaviorSeq = artifact.getBehaviorSeq(); java.util.List<java.lang.Integer> resultIndexList = new java.util.ArrayList<java.lang.Integer>(); boolean flag = true; for (int preNum = 0; preNum < (preBehaviorPattern.getBehaviorList().size()); preNum++) { edu.hit.yh.gitdata.mine.module.TimeBasedBehavior preTimeBehavior = preBehaviorPattern.getBehaviorList().get(preNum); if ((((artBehaviorSeq.size()) - artPoint) >= ((preBehaviorPattern.getBehaviorList().size()) - preNum)) && flag) { for (; artPoint < (artBehaviorSeq.size()); artPoint++) { if (preTimeBehavior.simplEquals(artBehaviorSeq.get(artPoint))) { java.lang.String preRelativeTime = preTimeBehavior.getRelativeTime(); if (preNum != 0) { int artlastPoint = resultIndexList.get(((resultIndexList.size()) - 1)); java.lang.String artifactRealtiveTime = edu.hit.yh.gitdata.mine.util.RelativeTimeUtil.calculateRelativeTime(artBehaviorSeq.get(artlastPoint).getCreatedAt(), artBehaviorSeq.get(artPoint).getCreatedAt()); if (!(artifactRealtiveTime.equals(preRelativeTime))) { if (artPoint == ((artBehaviorSeq.size()) - 1)) preNum -= 1; if (preNum == (-1)) { flag = false; break; } artPoint = (resultIndexList.get(((resultIndexList.size()) - 1))) + 1; continue; } } if (preNum != ((preBehaviorPattern.getBehaviorList().size()) - 1)) { resultIndexList.add(artPoint); break; }else { preBehaviorPattern.addSurpport(); java.lang.System.out.println((\"\u626b\u63cf\u6210\u529f pattern \u7684\u652f\u6301\u5ea6\u4e3a\" + (preBehaviorPattern.getSurpport()))); break; } } } } } }else { } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3394/buggy-version/gitdata-mining.src.main.java.edu.hit.yh.gitdata.mine.algorithm.TimeBasedGspMiningAlgorithm.java", "BodyUseAPI": ["java.util.List<edu.hit.yh.gitdata.mine.module.BehaviorPattern>.get(int)", "patternlist.get(0).getBehaviorList().size()", "patternlist.get(0).getBehaviorList().size()", "patternlist.get(0).getBehaviorList()", "patternlist.get(0).getBehaviorList()", "java.util.List<edu.hit.yh.gitdata.mine.module.BehaviorPattern>.get(int)"], "Fixed commit": "2c720df6ef012edc7fa5c76781e6abfdde56bf63", "Url": "https://api.github.com/repos/yh443042575/gitdata", "Date": "2016-03-03T07:35:36Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.hit.yh.gitdata.mine.module.BehaviorPattern.getBehaviorList()", "edu.hit.yh.gitdata.mine.module.BehaviorPattern.getBehaviorList()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((i == 1) && (!(timeBasedBehaviorList2.get((i - 1)).simplEquals(timeBasedBehaviorList1.get(i))))) { return false; }else if (!(timeBasedBehaviorList1.get(i).equals(timeBasedBehaviorList2.get((i - 1))))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3394/buggy-version/gitdata-mining.src.main.java.edu.hit.yh.gitdata.mine.algorithm.TimeBasedGspMiningAlgorithm.java", "BodyUseAPI": ["timeBasedBehaviorList1.get(i).equals(timeBasedBehaviorList2.get((i - 1)))", "java.util.List<edu.hit.yh.gitdata.mine.module.TimeBasedBehavior>.get(int)", "java.util.List<edu.hit.yh.gitdata.mine.module.TimeBasedBehavior>.get(int)"], "Fixed commit": "2c720df6ef012edc7fa5c76781e6abfdde56bf63", "Url": "https://api.github.com/repos/yh443042575/gitdata", "Date": "2016-03-03T07:35:36Z"},
{"Line": "=>525", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode != (RESULT_OK)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7836/buggy-version/app.src.main.java.com.beetle.kefu.CustomerSupportMessageActivity.java", "BodyUseAPI": [], "Fixed commit": "f65ba8233f13a365d5c6fdea096f2812bb27559b", "Url": "https://api.github.com/repos/richmonkey/kefu_android", "Date": "2016-06-01T07:52:48Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((action.getComponentId2()) != null) { conceptStats.get(editor).add(action.getComponentId2()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4797/buggy-version/jpa-services.src.main.java.com.wci.umls.server.jpa.algo.report.DailyEditingReport.java", "BodyUseAPI": ["com.wci.umls.server.model.actions.MolecularAction.getComponentId2()", "java.util.Set<java.lang.Long>.add(action.getComponentId2())"], "Fixed commit": "37832a912aa347bed8716f4528e9b3006970b3c0", "Url": "https://api.github.com/repos/WestCoastInformatics/UMLS-Terminology-Server", "Date": "2017-01-27T16:35:23Z"},
{"Line": "=>1582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["freenet.node.PeerNode.getPeerTransport(freenet.pluginmanager.TransportPlugin)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((peerTransport.transportName) == \"udp\") && (newAddress instanceof freenet.node.PeerPluginAddress)) detectedPeer = ((freenet.node.PeerPluginAddress) (newAddress)).peer;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8520/buggy-version/src.freenet.node.PeerNode.java", "BodyUseAPI": [], "Fixed commit": "768eb28f013f9f37261fe675851f5e880ca38c75", "Url": "https://api.github.com/repos/chetanhosmani/fred-staging", "Date": "2013-01-08T15:42:35Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (identifiable == null) identifiable = rid;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8007/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.ridbag.embedded.OEmbeddedRidBag.java", "BodyUseAPI": [], "Fixed commit": "8ea8c35cd1f90229e8428d80f9d92035123b2dc3", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-08-02T14:09:06Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((accountId) != null) { account = new org.mifos.accounts.business.service.AccountBusinessService().getAccount(java.lang.Integer.valueOf(accountId)); if ((account.getPersonnel()) != null) { personnelId = account.getPersonnel().getPersonnelId(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8454/buggy-version/application.src.main.java.org.mifos.accounts.struts.actionforms.AccountApplyPaymentActionForm.java", "BodyUseAPI": [], "Fixed commit": "e30afaa255bc05e300904adf1f5b69abbf518b35", "Url": "https://api.github.com/repos/mifos/head", "Date": "2013-09-17T15:53:11Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, arkhados.effects.EffectBox>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (box == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/901/buggy-version/src.arkhados.EffectHandler.java", "BodyUseAPI": [], "Fixed commit": "07090a6e95b71c6191200fa1f5a885fec171021c", "Url": "https://api.github.com/repos/dnyarri/Arkhados", "Date": "2014-06-28T10:35:34Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (what == (io.vov.vitamio.MediaPlayer.MEDIA_ERROR_SERVER_DIED)) { msg = getString(R.string.video_error_server_unaccessible); }else if (java.util.Objects.equals(channel.getStreamtype(), \"youtube\")) { msg = getString(R.string.video_error_youtube); }else { msg = getString(R.string.video_error_unknown_error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8914/buggy-version/app.src.main.java.com.tinnvec.dctvandroid.PlayStreamActivity.java", "BodyUseAPI": [], "Fixed commit": "8700be93c1f74ad539a14b9b45398541507de9ca", "Url": "https://api.github.com/repos/chatrealm/DctvAndroid", "Date": "2016-10-24T21:17:13Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userRepository.findUserByLogin(newUser.getLogin())) != null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4063/buggy-version/src.main.java.by.itechart.flowerty.web.service.UserService.java", "BodyUseAPI": [], "Fixed commit": "a66a70d61ed486963a4ede03a97cde413bb38d45", "Url": "https://api.github.com/repos/katerinassem/flowerty", "Date": "2015-05-19T00:06:11Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxIdleTimeSeconds) > 0) { pipeline.addLast(\"idleStateHandler\", new org.jboss.netty.handler.timeout.IdleStateHandler(timer, 0, 0, maxIdleTimeSeconds)); pipeline.addLast(\"maxIdleHandler\", new com.taobao.top.link.websocket.WebSocketServerChannel.MaxIdleHandler(loggerFactory, maxIdleTimeSeconds)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4013/buggy-version/java.src.main.java.com.taobao.top.link.websocket.WebSocketServerChannel.java", "BodyUseAPI": [], "Fixed commit": "a51a79709067ce0b33733cab39ca5374af57489e", "Url": "https://api.github.com/repos/wsky/top-link", "Date": "2013-02-28T07:47:55Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result < 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4179/buggy-version/poulpe-view.poulpe-web-controller.src.main.java.org.jtalks.poulpe.web.controller.group.EditGroupMembersVm.java", "BodyUseAPI": [], "Fixed commit": "6b5302fe2364bf6bf844184d67b196e510c6bedc", "Url": "https://api.github.com/repos/jtalks-org/poulpe", "Date": "2012-07-31T21:20:18Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHelper) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/242/buggy-version/lib-googlepay.src.main.java.com.jeanboy.gpay.GPayManager.java", "BodyUseAPI": [], "Fixed commit": "7635d0cb2e7c20848fe60f138e30df97d11f8e12", "Url": "https://api.github.com/repos/jeanboydev/Android-GooglePay", "Date": "2016-09-19T08:23:15Z"},
{"Line": "=>814", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hl.getPainter()) instanceof org.languagetool.gui.LanguageToolSupport.HighlightPainter) { textComponent.getHighlighter().removeHighlight(hl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5021/buggy-version/languagetool-standalone.src.main.java.org.languagetool.gui.LanguageToolSupport.java", "BodyUseAPI": ["javax.swing.text.Highlighter.removeHighlight(javax.swing.text.Highlighter.Highlight)"], "Fixed commit": "c3433a5d7b24f6eb530ab347c4e5d983e544b3c8", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2014-12-12T15:28:04Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clickReceiver) != null) { clickReceiver.click(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7218/buggy-version/app.src.main.java.de.kochon.enrico.secrettalkmessenger.activities.ConversationListActivity.java", "BodyUseAPI": [], "Fixed commit": "8b56bd6033a34d7f6318cc60cf8e1ce976d78157", "Url": "https://api.github.com/repos/talkfish/talkfish-client-android", "Date": "2016-08-21T08:32:50Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(expenseListTotal.isEmpty())) { createEditExpenseMenu(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9244/buggy-version/src.com.jiahaoliuliu.android.myexpenses.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "af325fb801e6479dc9b08d393bb9cdf8f1a8818d", "Url": "https://api.github.com/repos/jiahaoliuliu/MyExpenses", "Date": "2013-09-27T16:59:08Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.attask.jenkins.AbstractProject.getBuildByNumber(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (run == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7734/buggy-version/src.main.java.com.attask.jenkins.TriggerJobBuildStep.java", "BodyUseAPI": [], "Fixed commit": "5c67c75b4a17a5a81005a606ddf3849be9443287", "Url": "https://api.github.com/repos/JoelJ/JobBuildSteps", "Date": "2012-11-08T17:00:25Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codeup.controller.UsersController.transferUploadedFile(org.springframework.web.multipart.MultipartFile,java.lang.String,org.springframework.ui.Model)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (filename.isEmpty()) { filename = \"default_user.png\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7060/buggy-version/src.main.java.com.codeup.controller.UsersController.java", "BodyUseAPI": [], "Fixed commit": "11adfe82c7beb2c06c7242f3fd72ab3037f5cafc", "Url": "https://api.github.com/repos/Capstone-Notably/Get-It", "Date": "2017-07-03T21:34:29Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (home == null) { android.view.ViewGroup sherlockRoot = ((android.view.ViewGroup) (activity.findViewById(R.id.abs__action_bar_container))); if (sherlockRoot != null) { walkViewGroupForSherlockUpView(sherlockRoot); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5558/buggy-version/lib.src.com.actionbarsherlock.app.ActionBarDrawerToggleSherlock.java", "BodyUseAPI": [], "Fixed commit": "78e8a7c3105716ff2fe59635092b51fdb11b61a7", "Url": "https://api.github.com/repos/rzsombor/ActionBarSherlockDrawerToggle", "Date": "2013-07-18T09:54:18Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sii.setHomeAsUpIndicator) != null) { try { final com.actionbarsherlock.app.ActionBar actionBar = sherlockActivity.getSupportActionBar(); sii.setHomeActionContentDescription.invoke(actionBar, contentDescRes); } catch (java.lang.Exception e) { android.util.Log.w(com.actionbarsherlock.app.ActionBarDrawerToggleSherlock.TAG, \"Couldn't set content description via JB-MR2 API\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5558/buggy-version/lib.src.com.actionbarsherlock.app.ActionBarDrawerToggleSherlock.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(com.actionbarsherlock.app.ActionBar,int)"], "Fixed commit": "78e8a7c3105716ff2fe59635092b51fdb11b61a7", "Url": "https://api.github.com/repos/rzsombor/ActionBarSherlockDrawerToggle", "Date": "2013-07-18T09:54:18Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sii.setHomeAsUpIndicator) != null) { try { final com.actionbarsherlock.app.ActionBar actionBar = sherlockActivity.getSupportActionBar(); sii.setHomeAsUpIndicator.invoke(actionBar, drawable); sii.setHomeActionContentDescription.invoke(actionBar, contentDescRes); } catch (java.lang.Exception e) { android.util.Log.w(com.actionbarsherlock.app.ActionBarDrawerToggleSherlock.TAG, \"Couldn't set home-as-up indicator via JB-MR2 API\", e); } }else if ((sii.upIndicatorView) != null) { sii.upIndicatorView.setImageDrawable(drawable); }else { android.util.Log.w(com.actionbarsherlock.app.ActionBarDrawerToggleSherlock.TAG, \"Couldn't set home-as-up indicator\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5558/buggy-version/lib.src.com.actionbarsherlock.app.ActionBarDrawerToggleSherlock.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(com.actionbarsherlock.app.ActionBar,int)", "android.widget.ImageView.setImageDrawable(android.graphics.drawable.Drawable)", "java.lang.reflect.Method.invoke(com.actionbarsherlock.app.ActionBar,android.graphics.drawable.Drawable)"], "Fixed commit": "78e8a7c3105716ff2fe59635092b51fdb11b61a7", "Url": "https://api.github.com/repos/rzsombor/ActionBarSherlockDrawerToggle", "Date": "2013-07-18T09:54:18Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (childCount != 2) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5558/buggy-version/lib.src.com.actionbarsherlock.app.ActionBarDrawerToggleSherlock.java", "BodyUseAPI": [], "Fixed commit": "78e8a7c3105716ff2fe59635092b51fdb11b61a7", "Url": "https://api.github.com/repos/rzsombor/ActionBarSherlockDrawerToggle", "Date": "2013-07-18T09:54:18Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pwList) != null) { for (cn.edu.zufe.drawable.PWell pw : pwList) { pw.setClicked(false); } if ((mouseButton) == (LEFT)) { for (cn.edu.zufe.drawable.PWell pw : pwList) { if (pw.collisionDetection(mouseX, mouseY)) { pw.setClicked(true); break; } } } drawPGBottom(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6859/buggy-version/src.cn.edu.zufe.ui.PAppletWellView.java", "BodyUseAPI": [], "Fixed commit": "5c51f8772d0ea5d6aecb2e05347c51ca638ee15e", "Url": "https://api.github.com/repos/ZUFE-AutoCompare/AutoCompare", "Date": "2016-06-04T09:34:51Z"},
{"Line": "=>731", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nschmidt.csg.VectorCSGd.magnitude()", "org.nschmidt.csg.VectorCSGd.magnitude()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dtvm_backward < dovm_backward) { if (vs < 4) { return null; } for (int i = 1; i < vs; i++) { thisNewVertices.add(vertices.get(i)); } otherNewVertices.add(vertices.get(1).clone()); for (int i = 1; i < ovs; i++) { otherNewVertices.add(other.vertices.get(i)); } newVertices.add(vertices.get((vs - 1)).clone()); newVertices.add(other.vertices.get(1).clone()); newVertices.add(vertices.get(1).clone()); org.nschmidt.csg.Polygon p1 = new org.nschmidt.csg.Polygon(df, thisNewVertices, this); org.nschmidt.csg.Polygon p2 = new org.nschmidt.csg.Polygon(df, otherNewVertices, this); org.nschmidt.csg.Polygon p3 = new org.nschmidt.csg.Polygon(df, newVertices, this); p1.setColour(new org.nschmidt.ldparteditor.data.GColourIndex(org.nschmidt.ldparteditor.enums.View.getLDConfigColour(14), this.getColour().getIndex())); p2.setColour(new org.nschmidt.ldparteditor.data.GColourIndex(org.nschmidt.ldparteditor.enums.View.getLDConfigColour(1), this.getColour().getIndex())); p3.setColour(new org.nschmidt.ldparteditor.data.GColourIndex(org.nschmidt.ldparteditor.enums.View.getLDConfigColour(6), this.getColour().getIndex())); return new org.nschmidt.csg.Polygon[]{ p1, p2, p3 }; }else { if (ovs < 4) { return null; } for (int i = 1; i < vs; i++) { thisNewVertices.add(vertices.get(i)); } thisNewVertices.add(other.vertices.get((ovs - 1)).clone()); for (int i = 1; i < ovs; i++) { otherNewVertices.add(other.vertices.get(i)); } newVertices.add(vertices.get((vs - 1)).clone()); newVertices.add(other.vertices.get(1).clone()); newVertices.add(other.vertices.get((ovs - 1)).clone()); org.nschmidt.csg.Polygon p1 = new org.nschmidt.csg.Polygon(df, thisNewVertices, this); org.nschmidt.csg.Polygon p2 = new org.nschmidt.csg.Polygon(df, otherNewVertices, this); org.nschmidt.csg.Polygon p3 = new org.nschmidt.csg.Polygon(df, newVertices, this); return new org.nschmidt.csg.Polygon[]{ p1, p2, p3 }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1990/buggy-version/src.org.nschmidt.csg.Polygon.java", "BodyUseAPI": [], "Fixed commit": "cd4c2c25687b14a07fb3d76d439c96f69769cc48", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-10-23T19:40:41Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) != null) { for (java.lang.String value : entry.getValue()) { temp.add(value); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5546/buggy-version/api-servlet.src.main.java.org.ocpsoft.rewrite.servlet.util.QueryStringBuilder.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String[]>.getValue()"], "Fixed commit": "0b54a2ebe3f6633841a098fbefa291743650912f", "Url": "https://api.github.com/repos/chkal/rewrite", "Date": "2013-04-15T15:37:13Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(interceptors.isEmpty())) { org.ocpsoft.rewrite.servlet.config.response.ResponseContentInterceptor interceptor = interceptors.remove(0); interceptor.intercept(event, buffer, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5546/buggy-version/impl-servlet.src.main.java.org.ocpsoft.rewrite.servlet.impl.ResponseContentInterceptorChainImpl.java", "BodyUseAPI": ["java.util.List<org.ocpsoft.rewrite.servlet.config.response.ResponseContentInterceptor>.remove(int)"], "Fixed commit": "0b54a2ebe3f6633841a098fbefa291743650912f", "Url": "https://api.github.com/repos/chkal/rewrite", "Date": "2013-04-15T15:37:13Z"},
{"Line": "=>1813", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bytedeco.javacpp.tools.TokenIndexer.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((prevToken == null) || (prevToken.match('}', ','))) && (token.match(Token.IDENTIFIER))) { name = type.javaName = type.cppName = token.value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/829/buggy-version/src.main.java.org.bytedeco.javacpp.tools.Parser.java", "BodyUseAPI": [], "Fixed commit": "de9c9191d2daddbb13a848be4aef2f5339e5723f", "Url": "https://api.github.com/repos/bytedeco/javacpp", "Date": "2015-06-27T07:28:56Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "type.cppName.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((namespace < 0) && (namespace2 >= 0)) { groupName = groupName.substring((namespace2 + 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/829/buggy-version/src.main.java.org.bytedeco.javacpp.tools.Parser.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "de9c9191d2daddbb13a848be4aef2f5339e5723f", "Url": "https://api.github.com/repos/bytedeco/javacpp", "Date": "2015-06-27T07:28:56Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (max.equals(VectorTimestamp.s_zero)) { return mp.ShMemObject.m_now; }else { return max; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5097/buggy-version/src.mp.ShMemObject.java", "BodyUseAPI": [], "Fixed commit": "73427c9500bdb0ad4f16798713ec470d4c134323", "Url": "https://api.github.com/repos/jmfaleiro/MessagePassing", "Date": "2013-09-20T02:58:09Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/190/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "7e130483822a1e51a3e60ad48e27e9cba56bf5af", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((queued.getSender()) instanceof org.bukkit.entity.Player)) { throw new java.lang.IllegalStateException(\"sender must be player\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8021/buggy-version/src.main.java.net.syamn.sakuracmd.commands.player.HardEndCommand.java", "BodyUseAPI": [], "Fixed commit": "baf7fd5a4400d72e522be1c0c3216e3c2186c04d", "Url": "https://api.github.com/repos/SakuraServer/SakuraCmd", "Date": "2013-02-15T20:40:09Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.syamn.utils.queue.QueuedCommand.getSender()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((queuedPlayer == null) || (!(queuedPlayer.isOnline()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8021/buggy-version/src.main.java.net.syamn.sakuracmd.commands.player.HardEndCommand.java", "BodyUseAPI": [], "Fixed commit": "baf7fd5a4400d72e522be1c0c3216e3c2186c04d", "Url": "https://api.github.com/repos/SakuraServer/SakuraCmd", "Date": "2013-02-15T20:40:09Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wifi) != null) { prefers = wifi.getPreference(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8816/buggy-version/client.Ping.src.com.num.utils.WifiUtil.java", "BodyUseAPI": [], "Fixed commit": "59072abb087bc35a159bdffb48bf4fc7238ec67d", "Url": "https://api.github.com/repos/ykim320/androidperformance", "Date": "2013-09-22T22:17:15Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPage) >= 1) { (currentPage)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7749/buggy-version/src.gameView.ingame.menu.DrawableInventory.java", "BodyUseAPI": [], "Fixed commit": "e29334772c9c237710aec1827abd555b4c3c855c", "Url": "https://api.github.com/repos/Kostronor/digsite", "Date": "2013-04-28T16:16:13Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPage) < ((pageList.size()) - 1)) { (currentPage)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7749/buggy-version/src.gameView.ingame.menu.DrawableInventory.java", "BodyUseAPI": [], "Fixed commit": "e29334772c9c237710aec1827abd555b4c3c855c", "Url": "https://api.github.com/repos/Kostronor/digsite", "Date": "2013-04-28T16:16:13Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(el.isPhysical())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1165/buggy-version/src.org.gridgain.inspection.abbrev.GridAbbreviationInspection.java", "BodyUseAPI": [], "Fixed commit": "16a1e2a6cf7ff2fd3dc70c18b0a289154842549c", "Url": "https://api.github.com/repos/sevdokimov-gg/gg-abbrev-plugin", "Date": "2015-05-08T10:00:43Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (background != null) starklabs.sivodim.Drama.View.EditChapterActivity.chapterPresenter.setBackground(background);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5844/buggy-version/app.src.main.java.starklabs.sivodim.Drama.View.EditChapterActivity.java", "BodyUseAPI": ["starklabs.sivodim.Drama.Presenter.ChapterPresenter.setBackground(starklabs.sivodim.Drama.Model.Utilities.Background)"], "Fixed commit": "1dbd037954fd7dc83f0b46ba9dab0e7f2602f9af", "Url": "https://api.github.com/repos/Stark-Labs/SiVoDiM-Libraries", "Date": "2016-07-06T19:02:39Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (soundtrack != null) starklabs.sivodim.Drama.View.EditChapterActivity.chapterPresenter.setSoundtrack(soundtrack);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5844/buggy-version/app.src.main.java.starklabs.sivodim.Drama.View.EditChapterActivity.java", "BodyUseAPI": ["starklabs.sivodim.Drama.Presenter.ChapterPresenter.setSoundtrack(starklabs.sivodim.Drama.Model.Utilities.Soundtrack)"], "Fixed commit": "1dbd037954fd7dc83f0b46ba9dab0e7f2602f9af", "Url": "https://api.github.com/repos/Stark-Labs/SiVoDiM-Libraries", "Date": "2016-07-06T19:02:39Z"},
{"Line": "=>732", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (answer.endsWith(\".0\")) { outputTF.setText(answer.substring(0, ((answer.length()) - 2))); }else { outputTF.setText(answer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4017/buggy-version/CrazyCalculator.src.crazycalculator.gui.EventHandler.java", "BodyUseAPI": ["java.lang.String.length()", "crazycalculator.gui.EventHandler.3.setText(java.lang.String)", "crazycalculator.gui.EventHandler.3.setText(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "275b7ec2ea71b4f755cc0c3fea3e39fa5416ad56", "Url": "https://api.github.com/repos/cylwyn-creer/CrazyCalculator", "Date": "2017-04-04T13:03:20Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.isCancelled()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1539/buggy-version/src.japura.Tribes.TribeProtectListener.java", "BodyUseAPI": [], "Fixed commit": "09669c54e4bc9ea6cc51185af6c20d40e7e36e82", "Url": "https://api.github.com/repos/monofuel/MonoMods", "Date": "2014-03-10T08:12:29Z"},
{"Line": "=>2684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inject) { parsed.put(de, cf.defaults.get(de)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8388/buggy-version/time4j-android.src.main.java.net.time4j.format.expert.ChronoFormatter.java", "BodyUseAPI": [], "Fixed commit": "194d8b48db3eed93d28207c6ab90ec357dd94656", "Url": "https://api.github.com/repos/MenoData/Time4A", "Date": "2016-11-16T09:05:32Z"},
{"Line": "=>2673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.time4j.engine.ChronoElement<?>.getSymbol()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (s != '\\u0000') { if (parsedElements == null) { parsedElements = parsed.getRegisteredElements(); } for (net.time4j.engine.ChronoElement<?> pe : parsedElements) { if ((pe.getSymbol()) == s) { inject = false; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8388/buggy-version/time4j-android.src.main.java.net.time4j.format.expert.ChronoFormatter.java", "BodyUseAPI": [], "Fixed commit": "194d8b48db3eed93d28207c6ab90ec357dd94656", "Url": "https://api.github.com/repos/MenoData/Time4A", "Date": "2016-11-16T09:05:32Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mLoopMode)) { if (next == (mAdapter.getRealCount())) next = 0; if (next == (-1)) next = (mAdapter.getRealCount()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6649/buggy-version/library.src.main.java.com.missmess.autorollpager.BaseRollPager.java", "BodyUseAPI": [], "Fixed commit": "89e2418a80b31862b44182581ef550b70f634a0b", "Url": "https://api.github.com/repos/missmess/autorollpager", "Date": "2016-09-12T02:24:39Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parser.isLookingAtLiteral(\",\")) { parser.setPos(possibleEndOfChallenge); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/846/buggy-version/src.main.java.com.albroco.barebonesdigest.WwwAuthenticateHeader.java", "BodyUseAPI": ["com.albroco.barebonesdigest.Rfc2616AbnfParser.setPos(int)"], "Fixed commit": "45b05ea9a284a9e422ff09603c4d40adfd7a23a0", "Url": "https://api.github.com/repos/al-broco/bare-bones-digest", "Date": "2016-10-02T18:18:49Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.symeda.sormas.app.epidata.EpiDataTravelsListArrayAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((travel.getTravelType()) != null) { android.widget.TextView type = ((android.widget.TextView) (convertView.findViewById(R.id.travel_type_li))); type.setText(travel.getTravelType().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/555/buggy-version/sormas-app.app.src.main.java.de.symeda.sormas.app.epidata.EpiDataTravelsListArrayAdapter.java", "BodyUseAPI": ["de.symeda.sormas.app.backend.epidata.EpiDataTravel.getTravelType()", "travel.getTravelType().toString()", "android.widget.TextView.setText(travel.getTravelType().toString())"], "Fixed commit": "7d0ca866fc55b154797dcf9f4ba021941f9087f1", "Url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project", "Date": "2017-09-01T09:11:29Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((date != null) && ((start) != null)) && ((end) != null)) { return (((overlaps(date)) || ((((date.get(java.util.Calendar.YEAR)) == (start.get(java.util.Calendar.YEAR))) && ((date.get(java.util.Calendar.MONTH)) == (start.get(java.util.Calendar.MONTH)))) && ((date.get(java.util.Calendar.DAY_OF_MONTH)) == (start.get(java.util.Calendar.DAY_OF_MONTH))))) || ((((date.get(java.util.Calendar.YEAR)) == (end.get(java.util.Calendar.YEAR))) && ((date.get(java.util.Calendar.MONTH)) == (end.get(java.util.Calendar.MONTH)))) && ((date.get(java.util.Calendar.DAY_OF_MONTH)) == (end.get(java.util.Calendar.DAY_OF_MONTH))))) || (((start.compareTo(date)) < 0) && ((end.compareTo(date)) > 0)); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2308/buggy-version/MovieScheduler.src.businessobjects.TimeInterval.java", "BodyUseAPI": ["java.util.GregorianCalendar.compareTo(java.util.GregorianCalendar)", "java.util.GregorianCalendar.get(int)", "java.util.GregorianCalendar.compareTo(java.util.GregorianCalendar)", "java.util.GregorianCalendar.get(int)", "java.util.GregorianCalendar.get(int)", "java.util.GregorianCalendar.get(int)", "businessobjects.TimeInterval.overlaps(java.util.GregorianCalendar)", "java.util.GregorianCalendar.get(int)", "java.util.GregorianCalendar.get(int)"], "Fixed commit": "8e4c6aa0fb6ba9f7d0d583742e15e636a2f70f45", "Url": "https://api.github.com/repos/iainworkman/370Project", "Date": "2014-12-06T02:42:17Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (EnumMoveTypeHandle.T.isValid()) { this.handle = handle; }else { this.handle = com.bergerkiller.generated.net.minecraft.server.EnumMoveTypeHandle.createHandle(new java.lang.Object()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3198/buggy-version/src.main.java.com.bergerkiller.bukkit.common.wrappers.MoveType.java", "BodyUseAPI": [], "Fixed commit": "739dcd95751fb977e27ce95d9178f20959f8dbef", "Url": "https://api.github.com/repos/bergerhealer/BKCommonLib", "Date": "2017-06-24T01:56:30Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (postOperatorMetrics.isDefined()) for (final SigmaEC.measure.PopulationMetric<T> metric : postOperatorMetrics.get()) metric.reset();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2370/buggy-version/src.SigmaEC.RandomCircleOfLife.java", "BodyUseAPI": ["SigmaEC.util.Option<java.util.List<SigmaEC.measure.PopulationMetric<T>>>.get()"], "Fixed commit": "9081bbfa695b60a19b579628e8a8bad103033644", "Url": "https://api.github.com/repos/SigmaX/SigmaEC", "Date": "2015-03-13T02:58:12Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (preOperatorMetrics.isDefined()) for (final SigmaEC.measure.PopulationMetric<T> metric : preOperatorMetrics.get()) metric.reset();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2370/buggy-version/src.SigmaEC.RandomCircleOfLife.java", "BodyUseAPI": ["SigmaEC.util.Option<java.util.List<SigmaEC.measure.PopulationMetric<T>>>.get()"], "Fixed commit": "9081bbfa695b60a19b579628e8a8bad103033644", "Url": "https://api.github.com/repos/SigmaX/SigmaEC", "Date": "2015-03-13T02:58:12Z"},
{"Line": "=>687", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((patient) != null) { poControl.syncHistoryDatas(); android.util.Log.i(pl.nerosoft.nerohealthdock.activity.MainActivity.TAG, (\"Device <IHealthPO> history: \" + (poControl.getDevice().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5505/buggy-version/app.src.main.java.pl.nerosoft.nerohealthdock.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "28e168690156343899a7c1f0c66fbdfcedfb74f8", "Url": "https://api.github.com/repos/piomin/NeroHealthDock", "Date": "2016-01-29T14:30:06Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == null) state = com.pratilipi.common.type.AuthorState.ACTIVE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4396/buggy-version/src.main.java.com.pratilipi.data.type.gae.AuthorEntity.java", "BodyUseAPI": [], "Fixed commit": "fbf965a9bea5cffcc41fbe0208fe7f82e7f883b7", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-01-11T10:09:45Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.hannesniederhausen.storynotes.ui.internal.navigation.widgets.StoryNotesLabelProvider.getLabelFeature(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (lf != null) { org.eclipse.emf.ecore.EObject e = ((org.eclipse.emf.ecore.EObject) (element)); return e.eGet(lf).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8008/buggy-version/de.hannesniederhausen.storynotes.ui.src.de.hannesniederhausen.storynotes.ui.internal.navigation.widgets.StoryNotesLabelProvider.java", "BodyUseAPI": ["org.eclipse.emf.ecore.EObject.eGet(org.eclipse.emf.ecore.EStructuralFeature)", "e.eGet(lf).toString()"], "Fixed commit": "84f61953c3663df6dde137ef338759f65134170e", "Url": "https://api.github.com/repos/hannesN/storynotes", "Date": "2011-10-31T17:08:14Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (receivingPower) { if (this.isBeingRidden()) { this.removePassengers(); } if ((this.getRollingAmplitude()) == 0) { this.setRollingDirection((-(this.getRollingDirection()))); this.setRollingAmplitude(10); this.setDamage(50.0F); this.setBeenAttacked(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3685/buggy-version/src.main.java.com.lime.terracart.EntityTerraCart.java", "BodyUseAPI": [], "Fixed commit": "fc4de3daa37ee92550f5a9805753162fc8aabb73", "Url": "https://api.github.com/repos/alfuken/terracart", "Date": "2017-05-10T15:18:41Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (demotedRelIds.isEmpty()) { return new java.util.HashSet<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5327/buggy-version/jpa-services.src.main.java.com.wci.umls.server.jpa.services.validation.DT_I3B.java", "BodyUseAPI": [], "Fixed commit": "e49784dacad773b74a2381fd327c18f820172df2", "Url": "https://api.github.com/repos/WestCoastInformatics/UMLS-Terminology-Server", "Date": "2017-05-19T18:23:01Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.siot.sss.hsgallery.util.data.image.ImageController.getImageData()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(lists.isEmpty())) { com.siot.sss.hsgallery.util.data.image.ImageShow.getInstance().setImages(lists); com.siot.sss.hsgallery.util.data.image.ImageShow.getInstance().getBuckets().add(new com.siot.sss.hsgallery.app.model.ImageBucket(lists.get(0))); for (com.siot.sss.hsgallery.app.model.ImageData image : lists) { if (!(com.siot.sss.hsgallery.util.data.image.ImageShow.getInstance().containsBucket(image.bucketId))) com.siot.sss.hsgallery.util.data.image.ImageShow.getInstance().getBuckets().add(new com.siot.sss.hsgallery.app.model.ImageBucket(image)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1039/buggy-version/app.src.main.java.com.siot.sss.hsgallery.util.data.image.ImageController.java", "BodyUseAPI": ["com.siot.sss.hsgallery.util.data.image.ImageShow.getInstance().getBuckets().add(com.siot.sss.hsgallery.app.model.ImageBucket)", "java.util.List<com.siot.sss.hsgallery.app.model.ImageData>.get(int)", "com.siot.sss.hsgallery.util.data.image.ImageShow.getInstance().setImages(java.util.List<com.siot.sss.hsgallery.app.model.ImageData>)"], "Fixed commit": "daf0006f64ad34b0e415f373fd31430f3e25a3e7", "Url": "https://api.github.com/repos/Shinseungsou/gallery", "Date": "2015-10-02T13:29:56Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(org.proofpad.MenuBar.WIN)) { menu.add(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4036/buggy-version/src.org.proofpad.MenuBar.java", "BodyUseAPI": [], "Fixed commit": "6868c931f1a937e3f1108aa057926d84398ddaa6", "Url": "https://api.github.com/repos/calebegg/proof-pad", "Date": "2012-08-27T22:48:39Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(description))) { deployParams.setDescription(description); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6743/buggy-version/src.main.java.com.zenjava.javafx.maven.plugin.WebMojo.java", "BodyUseAPI": ["com.sun.javafx.tools.packager.DeployParams.setDescription(java.lang.String)"], "Fixed commit": "ba912d197634d3ca973acfac43b78e2f5e2f9301", "Url": "https://api.github.com/repos/javafx-maven-plugin/javafx-maven-plugin", "Date": "2015-05-10T12:41:02Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(title))) { deployParams.setTitle(title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6743/buggy-version/src.main.java.com.zenjava.javafx.maven.plugin.WebMojo.java", "BodyUseAPI": ["com.sun.javafx.tools.packager.DeployParams.setTitle(java.lang.String)"], "Fixed commit": "ba912d197634d3ca973acfac43b78e2f5e2f9301", "Url": "https://api.github.com/repos/javafx-maven-plugin/javafx-maven-plugin", "Date": "2015-05-10T12:41:02Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((feuilleDeRoute) != null) feuilleDeRoute.setPulseSleepTime(sleepTime);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2033/buggy-version/Supervision.src.views.ViewMain.java", "BodyUseAPI": [], "Fixed commit": "980ec2e54a4c86b5035816946f6cd1d198e54b12", "Url": "https://api.github.com/repos/fspot/devoo", "Date": "2012-12-15T14:56:15Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kafsemo.futoshiki.Possibilities.maxPossible(r.getGreaterColumn(),r.getGreaterRow())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (leastLessThan > 0) { for (int v = leastLessThan; v <= (length); v++) { learnedSomething |= !(possibilities.get(bit(r.getLesserColumn(), r.getLesserRow(), v))); possibilities.set(bit(r.getLesserColumn(), r.getLesserRow(), v)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3651/buggy-version/src.main.java.org.kafsemo.futoshiki.Possibilities.java", "BodyUseAPI": [], "Fixed commit": "143b4cd1aa1090ad9c7e425b6d01193ff85d8c63", "Url": "https://api.github.com/repos/josephw/futoshiki", "Date": "2011-03-27T06:23:48Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kafsemo.futoshiki.Possibilities.minPossible(r.getLesserColumn(),r.getLesserRow())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (greatestMoreThan > 0) { for (int v = 1; v <= greatestMoreThan; v++) { learnedSomething |= !(possibilities.get(bit(r.getGreaterColumn(), r.getGreaterRow(), v))); possibilities.set(bit(r.getGreaterColumn(), r.getGreaterRow(), v)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3651/buggy-version/src.main.java.org.kafsemo.futoshiki.Possibilities.java", "BodyUseAPI": [], "Fixed commit": "143b4cd1aa1090ad9c7e425b6d01193ff85d8c63", "Url": "https://api.github.com/repos/josephw/futoshiki", "Date": "2011-03-27T06:23:48Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.commcare.suite.model.StackFrameStep.getValue()", "org.commcare.suite.model.StackFrameStep.getId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((key != null) && (value != null)) { data.put(key, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6427/buggy-version/backend.src.org.commcare.util.CommCareSession.java", "BodyUseAPI": ["org.javarosa.core.util.OrderedHashtable.put(java.lang.String,java.lang.String)"], "Fixed commit": "e72cd4c6c3d45308c040ca9d116c3dd2ab0fc140", "Url": "https://api.github.com/repos/dimagi/commcare-core", "Date": "2015-05-01T01:33:29Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((value.length()) == 19) && (value.matches(at.screenteam.oma.JSONTransformer.DATETIME_REGEX))) { try { java.util.Date date = at.screenteam.oma.JSONTransformer.DATETIME_FORMAT.parse(value); long timestamp = (date.getTime()) / 1000; return java.lang.Long.toString(timestamp); } catch (java.text.ParseException ex) { } }else if (((value.length()) == 10) && (value.matches(at.screenteam.oma.JSONTransformer.DATE_REGEX))) { try { java.util.Date date = at.screenteam.oma.JSONTransformer.DATE_FORMAT.parse(value); long timestamp = (date.getTime()) / 1000; return java.lang.Long.toString(timestamp); } catch (java.text.ParseException ex) { } }else { if ((value.indexOf(\"\\r\\n\")) != (-1)) { value = value.replaceAll(\"\\r\\n\", \"\\n\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2793/buggy-version/src.at.screenteam.oma.JSONTransformer.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.text.SimpleDateFormat.parse(java.lang.String)", "java.text.SimpleDateFormat.parse(java.lang.String)", "java.lang.String.matches(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "cf55c6baa3acebc6ec5e8388508c7d0598b18c63", "Url": "https://api.github.com/repos/screenteam/CommandProxyJson2SqlitePlugin", "Date": "2011-11-08T13:14:14Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (desiredCoP.containsNaN()) { if (!(cop.containsNaN())) { desiredCoP.setIncludingFrame(cop); }else { desiredCoP.setToZero(soleFrame); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4427/buggy-version/CommonWalkingControlModules.src.us.ihmc.commonWalkingControlModules.controlModules.foot.HoldPositionState.java", "BodyUseAPI": ["us.ihmc.robotics.geometry.FramePoint2d.setToZero(us.ihmc.robotics.referenceFrames.ReferenceFrame)", "us.ihmc.robotics.geometry.FramePoint2d.setIncludingFrame(us.ihmc.robotics.geometry.FramePoint2d)"], "Fixed commit": "edf3c5affb66070fab826526a05c0455d9299758", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2016-04-16T18:47:58Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getCurrentSession().createCriteria(fr.mcc.ginco.beans.ThesaurusTerm.class).add(org.hibernate.criterion.Restrictions.eq(\"conceptId.identifier\", conceptId)).add(org.hibernate.criterion.Restrictions.eq(\"prefered\", java.lang.Boolean.TRUE)).list()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((list.size()) == 0) throw new fr.mcc.ginco.exceptions.BusinessException((\"No preferred term found ! \" + \"Please check your database !\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5898/buggy-version/ginco-impl.src.main.java.fr.mcc.ginco.dao.hibernate.ThesaurusTermDAO.java", "BodyUseAPI": [], "Fixed commit": "5f3567ca4b8f8ec3ec667caefd2d22b0c8e61084", "Url": "https://api.github.com/repos/culturecommunication/ginco", "Date": "2013-02-20T15:17:32Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == set2) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4140/buggy-version/src.fr.istic.prg1.tp4.SmallSet.java", "BodyUseAPI": [], "Fixed commit": "e14b7d78c3345df8882e2df4ec68c50acdc61800", "Url": "https://api.github.com/repos/anohabbah/l3-prg1", "Date": "2017-12-10T13:48:11Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.size()) > (set2.size())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4140/buggy-version/src.fr.istic.prg1.tp4.SmallSet.java", "BodyUseAPI": [], "Fixed commit": "e14b7d78c3345df8882e2df4ec68c50acdc61800", "Url": "https://api.github.com/repos/anohabbah/l3-prg1", "Date": "2017-12-10T13:48:11Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((SneakySnakeClient.Main.client.connection) != null) { SneakySnakeClient.Main.client.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/736/buggy-version/src.SneakySnakeClient.Main.java", "BodyUseAPI": ["tk.norelect.nonetwork.Client.disconnect()"], "Fixed commit": "51ef5f38b0172d7f707d124f376043af12778a0b", "Url": "https://api.github.com/repos/PLEXATIC/SneakySnakeClient", "Date": "2016-03-30T11:28:48Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (expected != null) { return reportMissingException(fname, expected, out); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/987/buggy-version/src.org.rascalmpl.library.cobra.QuickCheck.java", "BodyUseAPI": ["org.rascalmpl.library.cobra.QuickCheck.reportMissingException(java.lang.String,java.lang.String,java.io.PrintWriter)"], "Fixed commit": "10725a7789708914f996a543847707dcee21f304", "Url": "https://api.github.com/repos/usethesource/rascal", "Date": "2015-12-17T10:57:45Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["munchkin.cards.treasures.api.ITreasure.getArmor()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (type == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7778/buggy-version/src.munchkin.cards.treasures.api.ArmorSet.java", "BodyUseAPI": [], "Fixed commit": "9dde71cd2b752026802d74fca850671e28edb493", "Url": "https://api.github.com/repos/pastorsj/SaltyMunchkins", "Date": "2016-05-10T01:10:06Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.todddavies.components.progressbar.MeasureSpec.getMode(int)", "com.todddavies.components.progressbar.MeasureSpec.getMode(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((heightMode != (MeasureSpec.UNSPECIFIED)) && (widthMode != (MeasureSpec.UNSPECIFIED))) { if (widthWithoutPadding > heigthWithoutPadding) { size = heigthWithoutPadding; }else { size = widthWithoutPadding; } }else { size = java.lang.Math.max(heigthWithoutPadding, widthWithoutPadding); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5949/buggy-version/src.com.todddavies.components.progressbar.ProgressWheel.java", "BodyUseAPI": [], "Fixed commit": "1069c22d80d79ef367b663fff7c9a8cc8bfd948b", "Url": "https://api.github.com/repos/eliezio/ProgressWheel", "Date": "2015-07-26T22:04:14Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (located == null) { text.append(\"global protocol ProtocolName(role Role1\"); }else { text.append((((\"local protocol ProtocolName at \" + located) + \"(role \") + located)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6990/buggy-version/tools.eclipse.plugins.org.scribble.editor.tools.src.main.java.org.scribble.editor.tools.ui.NewProtocolWizard.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "3e920ca2c7409fc709341136dee4038aeed1ee20", "Url": "https://api.github.com/repos/objectiser/scribble-java", "Date": "2014-04-05T15:55:31Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((v2.y) > 0) && ((java.lang.Math.abs(v2.x)) < (EPS))) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1344/buggy-version/pilot-problem.src.wslf.geometry.Point.java", "BodyUseAPI": [], "Fixed commit": "815b7516a00515c29a1250cb586fd34d7b84f8da", "Url": "https://api.github.com/repos/WslF/2dWay", "Date": "2016-04-26T17:23:53Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((v1.y) > 0) && ((java.lang.Math.abs(v1.x)) < (EPS))) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1344/buggy-version/pilot-problem.src.wslf.geometry.Point.java", "BodyUseAPI": [], "Fixed commit": "815b7516a00515c29a1250cb586fd34d7b84f8da", "Url": "https://api.github.com/repos/WslF/2dWay", "Date": "2016-04-26T17:23:53Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sgn(v2.x)", "java.lang.Math.sgn(v1.x)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sgn1 == sgn2) { return revers ? -sgn : sgn; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1344/buggy-version/pilot-problem.src.wslf.geometry.Point.java", "BodyUseAPI": [], "Fixed commit": "815b7516a00515c29a1250cb586fd34d7b84f8da", "Url": "https://api.github.com/repos/WslF/2dWay", "Date": "2016-04-26T17:23:53Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.HONEYCOMB)) { this.mImageView.setLayerType(View.LAYER_TYPE_SOFTWARE, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3944/buggy-version/src.com.droid4you.util.cropimage.CropImage.java", "BodyUseAPI": [], "Fixed commit": "5d2771db9f5b1175314b98f4bb3de918686d30a8", "Url": "https://api.github.com/repos/7yl4r/AvatarWallpaper", "Date": "2013-08-26T05:33:23Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (circularBuffer.isFull()) { for (long i = 0; i < ((numberOfBatches) - (minibatchCounter)); i++) { if (!(circularBuffer.isEmpty())) { circularBuffer.remove(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/204/buggy-version/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.invokable.operator.BatchReduceInvokable.java", "BodyUseAPI": ["org.apache.flink.streaming.state.NullableCircularBuffer.remove()", "org.apache.flink.streaming.state.NullableCircularBuffer.isEmpty()"], "Fixed commit": "8894b06132fdc821ba604b39a9237d12bd6d3162", "Url": "https://api.github.com/repos/mbalassi/incubator-flink", "Date": "2014-10-02T15:13:18Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(circularBuffer.isEmpty())) { circularBuffer.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/204/buggy-version/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.invokable.operator.BatchReduceInvokable.java", "BodyUseAPI": ["org.apache.flink.streaming.state.NullableCircularBuffer.remove()"], "Fixed commit": "8894b06132fdc821ba604b39a9237d12bd6d3162", "Url": "https://api.github.com/repos/mbalassi/incubator-flink", "Date": "2014-10-02T15:13:18Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useCache) objectCache.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7818/buggy-version/bonaparte-core.src.main.java.de.jpaw.bonaparte.core.ByteArrayComposer.java", "BodyUseAPI": [], "Fixed commit": "f8247c8f530f6de9b3087ca8253e9ff36d61dd0c", "Url": "https://api.github.com/repos/jpaw/bonaparte-java", "Date": "2013-07-31T18:07:34Z"},
{"Line": "=>578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((requestCode == (com.t3hh4xx0r.haxlauncher.Launcher.REQUEST_PICK_APPWIDGET)) || (requestCode == (com.t3hh4xx0r.haxlauncher.Launcher.REQUEST_CREATE_APPWIDGET))) && (resultCode == (RESULT_CANCELED))) { if (data != null) { int appWidgetId = data.getIntExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, (-1)); if (appWidgetId != (-1)) { mAppWidgetHost.deleteAppWidgetId(appWidgetId); } } }else if (((requestCode == (com.t3hh4xx0r.haxlauncher.Launcher.REQUEST_PICK_APPWIDGET)) || (requestCode == (com.t3hh4xx0r.haxlauncher.Launcher.REQUEST_CREATE_APPWIDGET))) && (resultCode == (RESULT_OK))) { int appWidgetId = data.getIntExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, (-1)); completeAddAppWidget(appWidgetId, randomArgs.container, randomArgs.screen); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4851/buggy-version/src.com.t3hh4xx0r.haxlauncher.Launcher.java", "BodyUseAPI": [], "Fixed commit": "4b6d2d99fdef0ded0684688a2ac5ddeb2faa9f1d", "Url": "https://api.github.com/repos/T3hh4xx0r/Hax-Launcher", "Date": "2012-10-31T18:55:37Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPendingAddInfo.screen) != (-1)) { randomArgs = args; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4851/buggy-version/src.com.t3hh4xx0r.haxlauncher.Launcher.java", "BodyUseAPI": [], "Fixed commit": "4b6d2d99fdef0ded0684688a2ac5ddeb2faa9f1d", "Url": "https://api.github.com/repos/T3hh4xx0r/Hax-Launcher", "Date": "2012-10-31T18:55:37Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends org.eclipse.january.metadata.MetadataType>.getSuperclass()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (c != null) { return org.eclipse.january.dataset.LazyDatasetBase.findMetadataTypeSubInterfaces(((java.lang.Class<? extends org.eclipse.january.metadata.MetadataType>) (c))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2338/buggy-version/org.eclipse.january.src.org.eclipse.january.dataset.LazyDatasetBase.java", "BodyUseAPI": [], "Fixed commit": "759f94573b0d60cf9e443d1c59c7d7df324f56e7", "Url": "https://api.github.com/repos/eclipse/january", "Date": "2016-09-21T16:37:27Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (editPersonDescriptor.getName().isPresent()) { seedu.address.logic.commands.EditCommand.areFieldsAllPrivate = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7660/buggy-version/src.main.java.seedu.address.logic.commands.EditCommand.java", "BodyUseAPI": [], "Fixed commit": "ad24ae4274c388aec9cddc7ed75fa811703ac0a5", "Url": "https://api.github.com/repos/CS2103AUG2017-W09-B2/main", "Date": "2017-10-28T15:56:16Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (editPersonDescriptor.getPhone().isPresent()) { seedu.address.logic.commands.EditCommand.areFieldsAllPrivate = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7660/buggy-version/src.main.java.seedu.address.logic.commands.EditCommand.java", "BodyUseAPI": [], "Fixed commit": "ad24ae4274c388aec9cddc7ed75fa811703ac0a5", "Url": "https://api.github.com/repos/CS2103AUG2017-W09-B2/main", "Date": "2017-10-28T15:56:16Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (struri != null) { attachmentUri = android.net.Uri.parse(struri); int imax = c.getCount(); int jmax = c.getColumnCount(); for (int i = 0; i < imax; i++) { if (c.moveToNext()) str = c.getString(0); } }else attachmentUri = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5197/buggy-version/GPSLogger.src.main.java.com.mendhak.gpslogger.ConfImportActivity.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)"], "Fixed commit": "e35edfb1ef5ab05c53b97fd55923f57d7b2c8ec6", "Url": "https://api.github.com/repos/dkm/gpslogger", "Date": "2015-06-06T23:39:47Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (confImport != null) com.mendhak.gpslogger.Utilities.LogInfo(\"Got string to import configuration data\"); else confImport = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5197/buggy-version/GPSLogger.src.main.java.com.mendhak.gpslogger.GpsMainActivity.java", "BodyUseAPI": [], "Fixed commit": "e35edfb1ef5ab05c53b97fd55923f57d7b2c8ec6", "Url": "https://api.github.com/repos/dkm/gpslogger", "Date": "2015-06-06T23:39:47Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(power)) > 1.0) { throw new com.nutrons.framework.controllers.EventUnimplementedException(\"Power greater than magnitude of 1.0 is not supported for Talons\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6015/buggy-version/src.com.nutrons.framework.controllers.RunAtPowerEvent.java", "BodyUseAPI": [], "Fixed commit": "b48eba43687fd54d3440fb5484914acd1a52cdc3", "Url": "https://api.github.com/repos/FRC125/FRamework", "Date": "2017-02-04T16:12:37Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.json.JsonArray.getJsonObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((object.get(\"cvss_score\").getValueType()) != (javax.json.JsonValue.ValueType.NULL)) { advisory.setCvssScore(java.lang.Float.parseFloat(object.getJsonNumber(\"cvss_score\").toString())); }else { advisory.setCvssScore((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/825/buggy-version/dependency-check-core.src.main.java.org.owasp.dependencycheck.data.nsp.NspSearch.java", "BodyUseAPI": ["org.owasp.dependencycheck.data.nsp.Advisory.setCvssScore(float)", "java.lang.Float.parseFloat(object.getJsonNumber(\"cvss_score\").toString())", "javax.json.JsonObject.getJsonNumber(java.lang.String)", "object.getJsonNumber(\"cvss_score\").toString()"], "Fixed commit": "9c0a166b7d54b26cb366d94e0c29f557fd75f89e", "Url": "https://api.github.com/repos/jeremylong/DependencyCheck", "Date": "2017-09-27T10:38:52Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((manager.get(org.fabric3.binding.jms.runtime.connection.DEFAULT_CONNECTION_FACTORY)) == null) { javax.jms.ConnectionFactory factory = creatorRegistry.create(localConfig); manager.register(org.fabric3.binding.jms.runtime.connection.DEFAULT_CONNECTION_FACTORY, factory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3755/buggy-version/extension.binding.fabric3-binding-jms.src.main.java.org.fabric3.binding.jms.runtime.connection.ConfigurationBuilder.java", "BodyUseAPI": ["org.fabric3.binding.jms.spi.runtime.manager.ConnectionFactoryManager.register(org.fabric3.binding.jms.runtime.connection.DEFAULT_CONNECTION_FACTORY,javax.jms.ConnectionFactory)"], "Fixed commit": "ae3047a291e817dfd9c230ce7ee57c6bcd5a366e", "Url": "https://api.github.com/repos/Fabric3/fabric3-core", "Date": "2013-01-17T23:57:55Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((manager.get(org.fabric3.binding.jms.runtime.connection.DEFAULT_XA_CONNECTION_FACTORY)) == null) { javax.jms.ConnectionFactory xaFactory = creatorRegistry.create(xaConfig); manager.register(org.fabric3.binding.jms.runtime.connection.DEFAULT_XA_CONNECTION_FACTORY, xaFactory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3755/buggy-version/extension.binding.fabric3-binding-jms.src.main.java.org.fabric3.binding.jms.runtime.connection.ConfigurationBuilder.java", "BodyUseAPI": ["org.fabric3.binding.jms.spi.runtime.manager.ConnectionFactoryManager.register(org.fabric3.binding.jms.runtime.connection.DEFAULT_XA_CONNECTION_FACTORY,javax.jms.ConnectionFactory)"], "Fixed commit": "ae3047a291e817dfd9c230ce7ee57c6bcd5a366e", "Url": "https://api.github.com/repos/Fabric3/fabric3-core", "Date": "2013-01-17T23:57:55Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.TypedQuery<java.lang.String>.getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result.isEmpty()) { java.lang.String clusterUuid = org.zstack.core.db.Q.New(org.zstack.header.host.HostVO.class).select(HostVO_.clusterUuid).eq(HostVO_.uuid, hostUuid).findValue(); throw new org.zstack.header.errorcode.OperationFailureException(operr(\"There is no LocalStorage primary storage[state=%s,status=%s] on the cluster[%s]. Check the state/status of primary storage and make sure they have been attached to clusters\", PrimaryStorageState.Enabled, PrimaryStorageStatus.Connected, clusterUuid)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6117/buggy-version/plugin.localstorage.src.main.java.org.zstack.storage.primary.local.LocalStorageAllocateCapacityFlow.java", "BodyUseAPI": [], "Fixed commit": "2e80601daea7ece77a014171a845597c76cf4364", "Url": "https://api.github.com/repos/zstackio/zstack", "Date": "2017-06-29T11:55:59Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.gitblit.utils.StringUtils.isEmpty(params.baseFolder))) { baseFolder = new java.io.File(params.baseFolder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7381/buggy-version/src.main.java.com.gitblit.FederationClient.java", "BodyUseAPI": [], "Fixed commit": "e5c14e6d7e24bbf6807a65e56560a13e7bd7eca3", "Url": "https://api.github.com/repos/gitblit/gitblit", "Date": "2013-03-29T14:49:37Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (charSequence.toString().isEmpty()) { currentBill.setAmount(0.0); }else { double amount = (java.lang.Double.parseDouble(charSequence.toString())) / 100.0; currentBill.setAmount(amount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/823/buggy-version/app.src.main.java.edu.orangecoastcollege.cs273.snguyen171.tipcalculator.MainActivity.java", "BodyUseAPI": ["java.lang.CharSequence.toString()", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "b2326529dbc6595939b7acb380fe65234026239d", "Url": "https://api.github.com/repos/snguyen171/TipCalculator", "Date": "2016-09-13T23:28:23Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (max == (-1)) { bar = new javax.swing.JProgressBar(); bar.setIndeterminate(true); }else bar = new javax.swing.JProgressBar(min, max);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7296/buggy-version/src.io.darkcraft.multimccompanion.ui.ProgressDialog.java", "BodyUseAPI": [], "Fixed commit": "bfb6e9bb5f1a59ac14e14ad769f8f685a0c6067a", "Url": "https://api.github.com/repos/DarkholmeTenk/MMC-Companion", "Date": "2016-12-10T19:00:54Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bookApi.getId()) != null) { mCardViewAnnotation.setVisibility(View.VISIBLE); if (((mFolderId) != null) && (mFolderId.equals(FirebaseDatabaseHelper.REF_MY_BOOKS_FOLDER))) mBtnLend.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3484/buggy-version/app.src.main.java.com.quartzodev.fragments.DetailActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "8a208f790c6e4433de438b9b0d3a7a89467c3278", "Url": "https://api.github.com/repos/victoraldir/BuddyBook", "Date": "2017-10-14T18:29:13Z"},
{"Line": "=>735", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source instanceof org.eclipse.uml2.uml.InputPin) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3886/buggy-version/plugins.org.obeonetwork.dsl.uml2.design.src.org.obeonetwork.dsl.uml2.design.api.services.ActivityDiagramServices.java", "BodyUseAPI": [], "Fixed commit": "14a19ded735703452f0ffbfad8d9c496ba947298", "Url": "https://api.github.com/repos/ObeoNetwork/UML-Designer", "Date": "2015-01-07T15:15:28Z"},
{"Line": "=>744", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source instanceof org.eclipse.uml2.uml.DataStoreNode) && (preTarget instanceof org.eclipse.uml2.uml.OutputPin)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3886/buggy-version/plugins.org.obeonetwork.dsl.uml2.design.src.org.obeonetwork.dsl.uml2.design.api.services.ActivityDiagramServices.java", "BodyUseAPI": [], "Fixed commit": "14a19ded735703452f0ffbfad8d9c496ba947298", "Url": "https://api.github.com/repos/ObeoNetwork/UML-Designer", "Date": "2015-01-07T15:15:28Z"},
{"Line": "=>738", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source instanceof org.eclipse.uml2.uml.OutputPin) && (preTarget instanceof org.eclipse.uml2.uml.OutputPin)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3886/buggy-version/plugins.org.obeonetwork.dsl.uml2.design.src.org.obeonetwork.dsl.uml2.design.api.services.ActivityDiagramServices.java", "BodyUseAPI": [], "Fixed commit": "14a19ded735703452f0ffbfad8d9c496ba947298", "Url": "https://api.github.com/repos/ObeoNetwork/UML-Designer", "Date": "2015-01-07T15:15:28Z"},
{"Line": "=>741", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source instanceof org.eclipse.uml2.uml.ActivityParameterNode) && (preTarget instanceof org.eclipse.uml2.uml.OutputPin)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3886/buggy-version/plugins.org.obeonetwork.dsl.uml2.design.src.org.obeonetwork.dsl.uml2.design.api.services.ActivityDiagramServices.java", "BodyUseAPI": [], "Fixed commit": "14a19ded735703452f0ffbfad8d9c496ba947298", "Url": "https://api.github.com/repos/ObeoNetwork/UML-Designer", "Date": "2015-01-07T15:15:28Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gpp.getDataStore().getClaimAt(org.bukkit.Location,boolean,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (claim.isAdminClaim()) { player.sendMessage((((plugin.dataStore.chatPrefix) + (org.bukkit.ChatColor.RED)) + \"Admin claims can't be !\")); event.getClickedBlock().setType(Material.AIR); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3464/buggy-version/src.main.java.net.kaikk.mc.gpprealestate.EventListener.java", "BodyUseAPI": [], "Fixed commit": "00b5098b11ccb9d838787bf56a0821449c1f6653", "Url": "https://api.github.com/repos/KaiKikuchi/GPPRealEstate", "Date": "2015-09-22T21:54:01Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.blanche.projetfinal.DatabaseManager.getPreferencesManager().getNetworkConnectivity()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (currentAcceptedConnectivity == null) { com.example.blanche.projetfinal.DatabaseManager.getPreferencesManager().updateNetworkConnectivity(\"any\"); }else if (currentAcceptedConnectivity.equals(\"wifi\")) { wifiRadioButton.setChecked(true); anyNetworkRadioButton.setChecked(false); }else if (currentAcceptedConnectivity.equals(\"any\")) { anyNetworkRadioButton.setChecked(true); wifiRadioButton.setChecked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3100/buggy-version/TP3.ProjetFinal.app.src.main.java.com.example.blanche.projetfinal.SettingsActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "16af869ea2a7687d5e55001fb7fde4775c419783", "Url": "https://api.github.com/repos/BlancheP/INF8405", "Date": "2017-04-30T12:53:44Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((publicationDetails.get(\"title\").length()) < 15) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7146/buggy-version/src.main.java.de.rwth.i9.palm.datasetcollect.service.DblpEventCollection.java", "BodyUseAPI": [], "Fixed commit": "6afd20c747437ff93acbe147000f08d2542f7ab1", "Url": "https://api.github.com/repos/palm-toolkit/palm-core", "Date": "2016-02-03T08:23:04Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["team1028.plannertravelassistant.ExpandableListAdapter.getChild(int,int)", "android.view.View.findViewById(R.id.lblListItem)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((childText != null) && (txtListChild != null)) { txtListChild.setText(childText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4134/buggy-version/app.src.main.java.team1028.plannertravelassistant.ExpandableListAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "6fef02a1f3ee0b516ec15cbc06311fc490ccacd4", "Url": "https://api.github.com/repos/brianjkd/Planner-Travel-Assistant", "Date": "2016-12-09T13:43:02Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(path.isEmpty())) fullPath = (path + \"/\") + f; else fullPath = f;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5262/buggy-version/dspace-xmlui.src.main.java.org.dspace.app.xmlui.cocoon.ConcatenationReader.java", "BodyUseAPI": [], "Fixed commit": "1aca9de59aa4d830c08c40811990a511b7116b8a", "Url": "https://api.github.com/repos/alanorth/DSpace", "Date": "2015-02-20T16:45:43Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (src.contains(\"/\")) { path = src.substring(0, src.lastIndexOf('/')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5262/buggy-version/dspace-xmlui.src.main.java.org.dspace.app.xmlui.cocoon.ConcatenationReader.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(char)"], "Fixed commit": "1aca9de59aa4d830c08c40811990a511b7116b8a", "Url": "https://api.github.com/repos/alanorth/DSpace", "Date": "2015-02-20T16:45:43Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((split.length) < 5) { throw new org.ohmage.exception.ValidationException(org.ohmage.annotator.Annotator.ErrorCode.OMH_INVALID_PAYLOAD_ID, (\"Missing the stream ID for the observer payload ID.\" + (\"Observer payload IDs must be of the form: \" + \"omh:ohmage:observer:<observer_id>:<stream_id>\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6113/buggy-version/src.org.ohmage.validator.OmhValidators.java", "BodyUseAPI": [], "Fixed commit": "a1fe7bccb83a4c5a27f510bb1fb6800a8ee8056c", "Url": "https://api.github.com/repos/cens/ohmageServer", "Date": "2013-02-08T16:25:39Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (peerDiscovery == null) { logger.info(((\"OORT will not be enabled. Missing \" + (org.cometd.oort.OortPropertiesFileConfigServlet.OORT_PEER_DISCOVERY_PARAM)) + \" init parameter\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7044/buggy-version/cometd-java.cometd-java-oort.src.main.java.org.cometd.oort.OortPropertiesFileConfigServlet.java", "BodyUseAPI": [], "Fixed commit": "8d7ecf55b523ae7127b918801adfd7486da74896", "Url": "https://api.github.com/repos/patriziomunzi/cometd", "Date": "2014-06-13T09:19:58Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_oortConfig) != null) { _oortConfig.destroyCloud(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7044/buggy-version/cometd-java.cometd-java-oort.src.main.java.org.cometd.oort.OortPropertiesFileConfigServlet.java", "BodyUseAPI": [], "Fixed commit": "8d7ecf55b523ae7127b918801adfd7486da74896", "Url": "https://api.github.com/repos/patriziomunzi/cometd", "Date": "2014-06-13T09:19:58Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getDueDate()) == null) { taskObject.put(\"due\", null); }else { taskObject.put(\"due\", task.getDueDate().getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6478/buggy-version/source.src.planner.Storage.java", "BodyUseAPI": ["planner.Task.getDueDate()", "org.json.simple.JSONObject.put(java.lang.String,task.getDueDate().getTime())", "task.getDueDate().getTime()"], "Fixed commit": "98653d9fa1b8eaf42d1d1689b8ebcdf4163423ad", "Url": "https://api.github.com/repos/cs2103jan2015-w15-4j/main", "Date": "2015-03-26T05:46:49Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (due != null) { dueDate = new java.util.Date(((java.lang.Long) (taskJson.get(\"due\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6478/buggy-version/source.src.planner.Storage.java", "BodyUseAPI": [], "Fixed commit": "98653d9fa1b8eaf42d1d1689b8ebcdf4163423ad", "Url": "https://api.github.com/repos/cs2103jan2015-w15-4j/main", "Date": "2015-03-26T05:46:49Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()", "com.lowagie.text.html.Markup.parseLength(java.lang.String,float)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((v != 0) && (java.lang.Character.isDigit(ss.charAt(((ss.length()) - 1))))) { h.put(\"leading\", (\"0,\" + v)); }else { h.put(\"leading\", (v + \",0\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3289/buggy-version/pdf-html.src.main.java.com.lowagie.text.html.simpleparser.FactoryProperties.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "77629610d5bc952e1542dfb8c8ceddd0e126aef6", "Url": "https://api.github.com/repos/syakovyn/OpenPDF", "Date": "2017-01-13T10:15:49Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entry.getKey().equals(\"Other\")) { if ((item.getExpDate()) == null) { }else if ((prachihada.eatfoodv2.DateUtil.tryParse(item.getExpDate(), \"yyyy-MM-dd\")) == null) { android.widget.EditText editTextDate = ((android.widget.EditText) (findViewById(R.id.editText_Date))); editTextDate.setError(\"Invalid date. Format yyyy-mm-dd\"); return false; }else { dataHelper.insertData(entry.getKey(), item); } }else { dataHelper.insertData(entry.getKey(), item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4326/buggy-version/Code.CONSUMit.app.src.main.java.prachihada.eatfoodv2.AddFoodItemsActivity.java", "BodyUseAPI": ["prachihada.eatfoodv2.DBHandler.insertData(entry.getKey(),prachihada.eatfoodv2.Item)", "prachihada.eatfoodv2.DBHandler.insertData(entry.getKey(),prachihada.eatfoodv2.Item)", "java.util.Map.Entry<java.lang.String, prachihada.eatfoodv2.Item>.getKey()", "java.util.Map.Entry<java.lang.String, prachihada.eatfoodv2.Item>.getKey()"], "Fixed commit": "679d7aeeb516e19d809a061284ce3784ea9a59b6", "Url": "https://api.github.com/repos/SJSU272Lab/Consumit", "Date": "2016-12-05T20:21:33Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (root == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5489/buggy-version/src.com.kami.leetcode.Leetcode_116.java", "BodyUseAPI": [], "Fixed commit": "edf469ae56a0b5afa0e2318eb6c63fff312ed134", "Url": "https://api.github.com/repos/Sunnykaby/OJSolution", "Date": "2016-09-14T06:03:53Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taille > nbVar) return sub;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3021/buggy-version/src.preferences.heuristiques.HeuristiqueMultipleComposedDuel.java", "BodyUseAPI": [], "Fixed commit": "578093bca3913164509cf87953fbdc734edcecc7", "Url": "https://api.github.com/repos/PFGimenez/PhD", "Date": "2017-08-22T15:21:11Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (defaultImage != (-1)) { this.imageView.setImageResource(defaultImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/460/buggy-version/library.src.at.diamonddogs.service.processor.ImageLoader.java", "BodyUseAPI": [], "Fixed commit": "39bd1921b5b738afd49d0273c6218de00b2c958b", "Url": "https://api.github.com/repos/SphericalElephant/android-http", "Date": "2014-09-04T09:28:29Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((editView) != null) { editView.requestFocus(); new android.os.Handler().postDelayed(new java.lang.Runnable() { public void run() { editView.dispatchTouchEvent(android.view.MotionEvent.obtain(android.os.SystemClock.uptimeMillis(), android.os.SystemClock.uptimeMillis(), MotionEvent.ACTION_DOWN, 0, 0, 0)); editView.dispatchTouchEvent(android.view.MotionEvent.obtain(android.os.SystemClock.uptimeMillis(), android.os.SystemClock.uptimeMillis(), MotionEvent.ACTION_UP, 0, 0, 0)); } }, 200); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8241/buggy-version/app.src.main.java.org.cm.podd.report.model.view.QuestionView.java", "BodyUseAPI": [], "Fixed commit": "2018a334ae3539c5cb4850c4cb2ae5192f28f765", "Url": "https://api.github.com/repos/openpodd/podd-android", "Date": "2017-07-24T04:30:47Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["view.CalendarProgram.getSelectedAppointment()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (appointment != null) { db.AppointmentDBC.removeInvitation(appointment.getId(), user.getUsername()); if (appointment.isEditable()) { db.AppointmentDBC.removeAppointment(appointment.getId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7178/buggy-version/src.main.Controller.java", "BodyUseAPI": ["db.AppointmentDBC.removeAppointment(appointment.getId())", "model.Appointment.getId()", "db.AppointmentDBC.removeInvitation(appointment.getId(),user.getUsername())", "model.Appointment.getId()", "model.Appointment.isEditable()"], "Fixed commit": "5f74cf9b11ee3b793d9991d909c528086ae633f3", "Url": "https://api.github.com/repos/thomahan/calendar", "Date": "2015-03-09T17:07:15Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.owner.emitsEvents()) { org.bukkit.Bukkit.getPluginManager().callEvent(new eu.concord.worldutils.async.events.BlockChangeTaskStatusEvent(this.owner.getStatus())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8505/buggy-version/concord-lib.concord-worldutils.src.main.java.eu.concord.worldutils.async.BlockChanger.java", "BodyUseAPI": ["org.bukkit.Bukkit.getPluginManager().callEvent(eu.concord.worldutils.async.events.BlockChangeTaskStatusEvent)", "eu.concord.worldutils.async.BlockChangeTask.getStatus()"], "Fixed commit": "b1f6700eb59275973983446fc23f7650d4c8b288", "Url": "https://api.github.com/repos/WouterG/concord-lib", "Date": "2016-03-31T15:11:47Z"},
{"Line": "=>1986", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mConnectivityReceiver) != null) { unregisterReceiver(mConnectivityReceiver); mConnectivityReceiver = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1574/buggy-version/exchange2.src.com.android.exchange.ExchangeService.java", "BodyUseAPI": [], "Fixed commit": "0ffdddfb3d9915dda270a5ca01075a692b13452e", "Url": "https://api.github.com/repos/CyanogenMod/android_packages_apps_Exchange", "Date": "2013-11-15T10:52:33Z"},
{"Line": "=>1990", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBackgroundDataSettingReceiver) != null) { unregisterReceiver(mBackgroundDataSettingReceiver); mBackgroundDataSettingReceiver = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1574/buggy-version/exchange2.src.com.android.exchange.ExchangeService.java", "BodyUseAPI": [], "Fixed commit": "0ffdddfb3d9915dda270a5ca01075a692b13452e", "Url": "https://api.github.com/repos/CyanogenMod/android_packages_apps_Exchange", "Date": "2013-11-15T10:52:33Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sakaiproject.nakamura.api.lite.authorizable.AuthorizableManager.findAuthorizable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (auth != null) { org.sakaiproject.nakamura.user.counts.GroupMembersCounter.LOGGER.debug((\"Counting member: \" + (auth.getId()))); count++; }else { org.sakaiproject.nakamura.user.counts.GroupMembersCounter.LOGGER.debug(((\"Authorizable is null, member \" + member) + \" likely has been deleted, not counting\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1136/buggy-version/bundles.user.src.main.java.org.sakaiproject.nakamura.user.counts.GroupMembersCounter.java", "BodyUseAPI": ["org.sakaiproject.nakamura.api.lite.authorizable.Authorizable.getId()", "org.slf4j.Logger.debug((\"Counting member: \" + (auth.getId())))"], "Fixed commit": "ce29dd03b4207c022b91f106f719f44274610589", "Url": "https://api.github.com/repos/ets-berkeley-edu/nakamura", "Date": "2011-09-20T21:22:13Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sceneText.length()) > 5) { return (\"Change scene text to\\\"\" + (sceneText.substring(0, 5))) + \"...\\\"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3073/buggy-version/core.src.main.java.io.github.visualista.visualista.model.SetSceneTextAction.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "f3804ea8e46a1bd09bbb9f475538e976eba53692", "Url": "https://api.github.com/repos/Visualista/Visualista", "Date": "2014-05-22T09:15:42Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (rowField.getSchema().isNullableSimple()) { this.rowKeyFunction = co.cask.cdap.internal.io.ReflectionRowRecordReader.rowKeyFunctions.get(rowField.getSchema().getNonNullable().getType()); }else { this.rowKeyFunction = co.cask.cdap.internal.io.ReflectionRowRecordReader.rowKeyFunctions.get(rowType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8427/buggy-version/cdap-common.src.main.java.co.cask.cdap.internal.io.ReflectionRowRecordReader.java", "BodyUseAPI": [], "Fixed commit": "8e56170a8b65f20d141053dcdab62b2dd3b3eca1", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2015-09-17T18:44:35Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (angle > 15) java.lang.System.out.println((((((\"Length: \" + normLength) + \", Scalar: \") + scalar) + \", Angle: \") + angle));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/208/buggy-version/EvalTool.src.stepdetector.VectorStepdetector.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "d00e95224278a6606094e3b3f9de1051b7393a75", "Url": "https://api.github.com/repos/knowing/annotation-tool", "Date": "2012-03-24T21:35:29Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.currentTimeMillis()) > (tempBlinkTimeout)) { this.hz = 0; this.color = this.secondary; tempBlinkCount = 0; update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4001/buggy-version/src.com.coderedrobotics.libs.RobotLEDs.java", "BodyUseAPI": [], "Fixed commit": "cd237364afc78d5416ec2259b4409cd97d16fa1c", "Url": "https://api.github.com/repos/CodeRed2771/RobotLibrary", "Date": "2016-04-01T02:17:46Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fLexer.peekOperator(\";\")) { fLexer.readOperator(\";\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4845/buggy-version/sveditor.plugins.net.sf.sveditor.core.src.net.sf.sveditor.core.parser.SVConstraintParser.java", "BodyUseAPI": ["net.sf.sveditor.core.parser.SVConstraintParser.readOperator(java.lang.String)"], "Fixed commit": "35263ecc9194565622d4951babb83b7b615ae8f6", "Url": "https://api.github.com/repos/mballance/sveditor", "Date": "2015-04-02T16:10:01Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fLexer.peekOperator(\"}\")) { ret = new net.sf.sveditor.core.db.stmt.SVDBExprStmt(expr); }else { error((\"Unknown suffix for expression: \" + (fLexer.getImage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4845/buggy-version/sveditor.plugins.net.sf.sveditor.core.src.net.sf.sveditor.core.parser.SVConstraintParser.java", "BodyUseAPI": ["net.sf.sveditor.core.parser.SVConstraintParser.getImage()", "net.sf.sveditor.core.parser.SVConstraintParser.error((\"Unknown suffix for expression: \" + (fLexer.getImage())))"], "Fixed commit": "35263ecc9194565622d4951babb83b7b615ae8f6", "Url": "https://api.github.com/repos/mballance/sveditor", "Date": "2015-04-02T16:10:01Z"},
{"Line": "=>1349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.identity4j.connector.jndi.directory.DirectoryIdentity.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((passwordexpiryComputed != null) && (org.apache.commons.lang.StringUtils.isNotBlank(passwordexpiryComputed))) { long expireTime = java.lang.Long.parseLong(passwordexpiryComputed); if ((expireTime > 0) && (expireTime < (java.lang.Long.MAX_VALUE))) { passwordStatus.setExpire(com.identity4j.connector.jndi.activedirectory.ActiveDirectoryDateUtil.adTimeToJavaDate(expireTime)); } }else if (passwordLastSet != null) { passwordStatus.setExpire(getAgedDate(maximumPasswordAge, passwordLastSet)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/890/buggy-version/identity4j-active-directory-jndi.src.main.java.com.identity4j.connector.jndi.activedirectory.ActiveDirectoryConnector.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "f6946f1486d61294fd273b8448a1881af42227f5", "Url": "https://api.github.com/repos/nervepoint/identity4j", "Date": "2017-09-25T08:27:34Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((splited.length) == 5) { this.flag = java.lang.Integer.valueOf(splited[3]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3177/buggy-version/src.main.java.net.spy.memcached.collection.BTreeGetBulkWithLongTypeBkey.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "fbcb803bb38dc5f96504e1679a462fcf61763f9f", "Url": "https://api.github.com/repos/naver/arcus-java-client", "Date": "2016-12-09T02:33:32Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8402/buggy-version/src.main.java.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "c16a755f3d77f4ef78698812c8b419b04cce0802", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(original)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8564/buggy-version/zanata-war.src.main.java.org.zanata.webtrans.client.ui.DiffMatchPatchLabel.java", "BodyUseAPI": [], "Fixed commit": "c0b2dd926f522f98c64d3f73ee3da8314a971b08", "Url": "https://api.github.com/repos/zanata/zanata", "Date": "2012-06-13T03:41:00Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(search)) { highlight(); }else { org.zanata.webtrans.client.ui.Highlighting.searchHighlight(search, element); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8564/buggy-version/zanata-war.src.main.java.org.zanata.webtrans.client.ui.HighlightingLabel.java", "BodyUseAPI": ["org.zanata.webtrans.client.ui.Highlighting.searchHighlight(java.lang.String,com.google.gwt.dom.client.Element)"], "Fixed commit": "c0b2dd926f522f98c64d3f73ee3da8314a971b08", "Url": "https://api.github.com/repos/zanata/zanata", "Date": "2012-06-13T03:41:00Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sbmlDocument.getModel().getExtension(LayoutConstants.shortLabel)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (layoutPlugin == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7248/buggy-version/extensions.render.src.org.sbml.jsbml.xml.parsers.RenderParser.java", "BodyUseAPI": [], "Fixed commit": "cb0981346eb74809e92f6adf3eee7d75d3d4ff74", "Url": "https://api.github.com/repos/sbmlteam/jsbml", "Date": "2017-03-07T17:12:48Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (splitUrl == null) { org.wso2.carbon.registry.indexing.solr.SolrClient.log.warn(\"Specified solr server url is not correct, registry indexing will use the default value\"); solrCore = org.wso2.carbon.registry.indexing.IndexingConstants.DEFAULT_SOLR_SERVER_CORE; }else { solrCore = splitUrl[((splitUrl.length) - 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2843/buggy-version/components.registry.org.wso2.carbon.registry.indexing.src.main.java.org.wso2.carbon.registry.indexing.solr.SolrClient.java", "BodyUseAPI": [], "Fixed commit": "f40913f9b04338a74a064b212fff97a178fe2db6", "Url": "https://api.github.com/repos/daneshk/carbon-registry", "Date": "2015-01-18T17:41:57Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((targetTaxa.size()) == 0) && ((sourceTaxa.size()) > 0)) { query.append(\"(\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4886/buggy-version/eol-globi-rest.src.main.java.org.eol.globi.server.CypherQueryBuilder.java", "BodyUseAPI": [], "Fixed commit": "5b9301357b83b683875940ab1287e541b6d881a1", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2015-03-16T04:44:21Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newFile.exists()) newFile.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4337/buggy-version/app.src.main.java.org.ramonaza.unofficialazaapp.helpers.backend.ChapterPackHandlerSupport.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "e38e469c02a88d82d38089961d0665494c90cdca", "Url": "https://api.github.com/repos/ischeinkman/UnofficialAZAApp", "Date": "2015-10-16T22:47:44Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (idcService == null) { at.o2xfs.xfs.service.util.ExceptionUtil.nullArgument(\"idcService\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8892/buggy-version/at.o2xfs.xfs.service.src.at.o2xfs.xfs.service.cmd.idc.ChipIOCommand.java", "BodyUseAPI": [], "Fixed commit": "f1ef9c1bdbd7d1265cbd86886b729893b676f160", "Url": "https://api.github.com/repos/AndreasFagschlunger/O2Xfs", "Date": "2012-07-21T17:08:00Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (alert != null) { android.widget.TextView messageView = ((android.widget.TextView) (alert.findViewById(android.R.id.message))); messageView.setGravity(Gravity.CENTER); android.widget.TextView titleView = ((android.widget.TextView) (alert.findViewById(getContext().getResources().getIdentifier(\"alertTitle\", \"id\", \"android\")))); if (titleView != null) { titleView.setGravity(Gravity.CENTER); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8066/buggy-version/app.src.main.java.com.breadwallet.presenter.fragments.MainFragment.java", "BodyUseAPI": ["android.app.AlertDialog.findViewById(getContext().getResources().getIdentifier(\"alertTitle\", \"id\", \"android\"))", "android.app.AlertDialog.findViewById(android.R.id.message)"], "Fixed commit": "832ca3af5ef602e1ecf0f7178fd47177ace9972b", "Url": "https://api.github.com/repos/Groestlcoin/groestlwallet-android", "Date": "2017-02-07T03:15:15Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sender.hasPermission(\"customhardcore.admin\"))) { throw new com.sk89q.minecraft.util.commands.CommandPermissionsException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1104/buggy-version/src.main.java.org.kepow.customhardcore.CustomHardcoreCommands.java", "BodyUseAPI": [], "Fixed commit": "d9d5d7bab0920868b7ce2bf1a688ee89dbd019eb", "Url": "https://api.github.com/repos/Beskhue/CustomHardcore", "Date": "2015-05-24T19:20:17Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sender.hasPermission(\"customhardcore.admin\"))) { throw new com.sk89q.minecraft.util.commands.CommandPermissionsException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1104/buggy-version/src.main.java.org.kepow.customhardcore.CustomHardcoreCommands.java", "BodyUseAPI": [], "Fixed commit": "d9d5d7bab0920868b7ce2bf1a688ee89dbd019eb", "Url": "https://api.github.com/repos/Beskhue/CustomHardcore", "Date": "2015-05-24T19:20:17Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode != 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4032/buggy-version/app.src.main.java.com.lazyengineers.gradecalculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "122fdfec068b1caa7c246d77a6af40ac89b0e974", "Url": "https://api.github.com/repos/brendonsalinas/GradeCalculator", "Date": "2014-12-23T19:39:15Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reqContext == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1997/buggy-version/modules.security.src.main.java.io.liveoak.security.impl.PolicyBasedAuthzService.java", "BodyUseAPI": [], "Fixed commit": "7075211e960b12c7f6f8f89537ff5fab5eb0b1be", "Url": "https://api.github.com/repos/liveoak-io/liveoak", "Date": "2013-12-13T10:52:07Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cordova.api.DataResource.initiateNewDataRequestForUri(java.lang.String,this.appView.pluginManager,org.apache.cordova.IceCreamCordovaWebViewClient,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((is = dataResource.getInputStream()) != null) && ((mimeType = dataResource.getMimeType()) != null)) { ret = new android.webkit.WebResourceResponse(mimeType, \"UTF-8\", is); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2692/buggy-version/framework.src.org.apache.cordova.IceCreamCordovaWebViewClient.java", "BodyUseAPI": [], "Fixed commit": "8f91ebf194baa8028367e9e41f2e5ee2ff099b88", "Url": "https://api.github.com/repos/yimingkuan/cordova-android", "Date": "2013-05-10T21:08:50Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uriString.startsWith(\"file://\")) { return new java.io.FileInputStream(org.apache.cordova.FileHelper.getRealPath(uriString, cordova)); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2692/buggy-version/framework.src.org.apache.cordova.FileHelper.java", "BodyUseAPI": ["org.apache.cordova.FileHelper.getRealPath(java.lang.String,org.apache.cordova.api.CordovaInterface)"], "Fixed commit": "8f91ebf194baa8028367e9e41f2e5ee2ff099b88", "Url": "https://api.github.com/repos/yimingkuan/cordova-android", "Date": "2013-05-10T21:08:50Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rbPatientID.isSelected()) { try { int patientID = java.lang.Integer.parseInt(txtPatientID.getText()); patient = puf.m2.hms.model.Patient.getPatientById(patientID); } catch (puf.m2.hms.exception.PatientException e1) { java.lang.System.out.println(e1.getMessage()); } }else if (rbPatientName.isSelected()) { try { java.util.List<puf.m2.hms.model.Patient> ls = puf.m2.hms.model.Patient.getPatientByName(txtPatientName.getText()); if ((ls.size()) > 0) patient = ls.get(0); } catch (puf.m2.hms.exception.PatientException e1) { java.lang.System.out.println(e1.getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6392/buggy-version/src.main.java.puf.m2.hms.view.LookupPatient.java", "BodyUseAPI": [], "Fixed commit": "2f2e98fb97eb20f274982808ae6c08ae88bd6157", "Url": "https://api.github.com/repos/pufm2/hms", "Date": "2012-05-09T07:08:55Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.core.JsonParser.getValueAsString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((value.isEmpty()) || (value == null)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2205/buggy-version/crawler.src.main.java.xyz.antsgroup.langfashion.json.DateTimeDeser.java", "BodyUseAPI": [], "Fixed commit": "a1a22b46e65b345aae32cfaeb2428263573173b8", "Url": "https://api.github.com/repos/Antsypc/lang-fashion", "Date": "2016-04-10T05:38:27Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(disciplinas.isEmpty())) { for (int i = 0; i < (disciplinas.size()); i++) { eventos.addAll(ufms.br.com.ufmsapp.MyApplication.getWritableDatabase().listarEventos(disciplinas.get(i).getIdDisciplinaServidor())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1482/buggy-version/app.src.main.java.ufms.br.com.ufmsapp.fragment.ExploreFragment.java", "BodyUseAPI": ["java.util.ArrayList<ufms.br.com.ufmsapp.pojo.Disciplina>.size()", "disciplinas.get(i).getIdDisciplinaServidor()", "java.util.ArrayList<ufms.br.com.ufmsapp.pojo.Disciplina>.get(int)", "ufms.br.com.ufmsapp.MyApplication.getWritableDatabase().listarEventos(disciplinas.get(i).getIdDisciplinaServidor())", "java.util.ArrayList<ufms.br.com.ufmsapp.pojo.Evento>.addAll(ufms.br.com.ufmsapp.MyApplication.getWritableDatabase().listarEventos(disciplinas.get(i).getIdDisciplinaServidor()))"], "Fixed commit": "de6659aa9d20fb9dd21a48e249d148249a5e6ead", "Url": "https://api.github.com/repos/luizhsda10/UFMSApp", "Date": "2016-04-01T03:10:02Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(eventos.isEmpty())) { eventosList.add(eventos.get(0)); eventosList.add(eventos.get(1)); eventosList.add(eventos.get(2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1482/buggy-version/app.src.main.java.ufms.br.com.ufmsapp.fragment.ExploreFragment.java", "BodyUseAPI": ["java.util.ArrayList<ufms.br.com.ufmsapp.pojo.Evento>.add(eventos.get(2))", "java.util.ArrayList<ufms.br.com.ufmsapp.pojo.Evento>.get(int)", "java.util.ArrayList<ufms.br.com.ufmsapp.pojo.Evento>.add(eventos.get(1))", "java.util.ArrayList<ufms.br.com.ufmsapp.pojo.Evento>.add(eventos.get(0))", "java.util.ArrayList<ufms.br.com.ufmsapp.pojo.Evento>.get(int)", "java.util.ArrayList<ufms.br.com.ufmsapp.pojo.Evento>.get(int)"], "Fixed commit": "de6659aa9d20fb9dd21a48e249d148249a5e6ead", "Url": "https://api.github.com/repos/luizhsda10/UFMSApp", "Date": "2016-04-01T03:10:02Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gameIsActive) { if (v.getTag().equals(java.lang.String.valueOf(tile))) { (scoreCount)++; } (totalAnswered)++; setBoard(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8800/buggy-version/app.src.main.java.com.brettsandusky.braintrainer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5ebed6e22617226107942025055798dc26574f3d", "Url": "https://api.github.com/repos/bsandusky/android-brain-trainer", "Date": "2016-08-24T19:59:46Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.lang.Double.isNaN(total))) result.setText(((((((((((\"Maximum amount of credit: \" + (new java.text.DecimalFormat(\"##.##\").format(total))) + \"lv.\") + \"\\n\") + \"All paid sum:\") + ((int) (toPay))) + \"lv.\") + \"\\n\") + \"Monthly percent: \") + credit3) + \"%\")); else result.setText(\"Maximum amount of credit is too high to display\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4872/buggy-version/app.src.main.java.com.example.android.itcreditonline.CalculatorFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "java.text.DecimalFormat.format(double)"], "Fixed commit": "44366acf1e4122a120e482af191d3f683673a2f3", "Url": "https://api.github.com/repos/CreditApp/CreditApp", "Date": "2016-10-12T21:18:44Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.files.length) == 0) { super.setNodes(0); }else { super.setNodes(gtna.io.GraphReader.nodes(this.files[0], this.type)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3959/buggy-version/src.gtna.networks.util.ReadableFolder.java", "BodyUseAPI": [], "Fixed commit": "17e7a73ee0a0fd1ab453e9e2119db2daea0bff96", "Url": "https://api.github.com/repos/BenjaminSchiller/GTNA", "Date": "2011-06-17T07:58:36Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((legToRender) > (map.NUM_LEGS)) legToRender = map.NUM_LEGS;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2290/buggy-version/core.src.com.ld.game.MapRenderer.java", "BodyUseAPI": [], "Fixed commit": "e844a57b04825065f4e839f4545665f88d0d491f", "Url": "https://api.github.com/repos/pzai577/ld37", "Date": "2016-12-25T09:17:13Z"},
{"Line": "=>810", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!isTargetStateSet) && (event instanceof org.squirrelframework.foundation.fsm.impl.TransitionEndEvent)) && (parameterType.isAssignableFrom(typeOfState()))) { parameterValues.add(((org.squirrelframework.foundation.fsm.impl.TransitionEndEvent<T, S, E, C>) (event)).getTargetState()); isTargetStateSet = true; }else if (((!isTargetStateSet) && (event instanceof org.squirrelframework.foundation.fsm.impl.TransitionCompleteEvent)) && (parameterType.isAssignableFrom(typeOfState()))) { parameterValues.add(((org.squirrelframework.foundation.fsm.impl.TransitionCompleteEvent<T, S, E, C>) (event)).getTargetState()); isTargetStateSet = true; }else if ((((!isTargetStateSet) && (event instanceof org.squirrelframework.foundation.fsm.impl.TransitionExceptionEvent)) && (parameterType.isAssignableFrom(typeOfState()))) && (!isTargetStateSet)) { parameterValues.add(((org.squirrelframework.foundation.fsm.impl.TransitionExceptionEvent<T, S, E, C>) (event)).getTargetState()); isTargetStateSet = true; }else if ((!isEventSet) && (parameterType.isAssignableFrom(typeOfEvent()))) { parameterValues.add(event.getCause()); isEventSet = true; }else if ((!isContextSet) && (parameterType.isAssignableFrom(typeOfContext()))) { parameterValues.add(event.getContext()); isContextSet = true; }else if (parameterType.isAssignableFrom(this.getClass())) { parameterValues.add(event.getStateMachine()); }else if ((event instanceof org.squirrelframework.foundation.fsm.impl.TransitionExceptionEvent) && (parameterType.isAssignableFrom(org.squirrelframework.foundation.exception.TransitionException.class))) { parameterValues.add(((org.squirrelframework.foundation.fsm.impl.TransitionExceptionEvent<T, S, E, C>) (event)).getException()); }else { parameterValues.add(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1195/buggy-version/squirrel-foundation.src.main.java.org.squirrelframework.foundation.fsm.impl.AbstractStateMachine.java", "BodyUseAPI": ["java.lang.Class<?>.isAssignableFrom(java.lang.Class<? extends org.squirrelframework.foundation.fsm.impl.AbstractStateMachine>)", "org.squirrelframework.foundation.fsm.impl.TransitionEvent<T, S, E, C>.getContext()", "java.util.List<java.lang.Object>.add(event.getStateMachine())", "java.lang.Class<?>.isAssignableFrom(java.lang.Class<S>)", "java.lang.Class<?>.isAssignableFrom(java.lang.Class<S>)", "org.squirrelframework.foundation.fsm.impl.TransitionEvent<T, S, E, C>.getStateMachine()", "java.util.List<java.lang.Object>.add(event.getContext())", "org.squirrelframework.foundation.fsm.impl.TransitionEvent<T, S, E, C>.getCause()", "java.util.List<java.lang.Object>.add(event.getCause())", "java.lang.Class<?>.isAssignableFrom(java.lang.Class<E>)", "java.lang.Class<?>.isAssignableFrom(java.lang.Class)", "java.lang.Class<?>.isAssignableFrom(java.lang.Class<C>)"], "Fixed commit": "dd2ecddb0b289f6a14148153fa4beb1d4d690ac1", "Url": "https://api.github.com/repos/hekailiang/squirrel", "Date": "2014-02-01T04:29:12Z"},
{"Line": "=>11927", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!r) r = consumeToken(b, net.masterthought.dlanguage.parser.OP_OR);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5363/buggy-version/gen.net.masterthought.dlanguage.parser.DLanguageParser.java", "BodyUseAPI": [], "Fixed commit": "0be41ccc22cff0eddc958654b1543dc82fa0df1c", "Url": "https://api.github.com/repos/intellij-dlanguage/intellij-dlanguage", "Date": "2016-01-09T07:33:35Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(workspace.mkdirs())) { org.jenkinsci.plugins.gitserver.FileBackedHttpGitRepository.LOGGER.log(java.util.logging.Level.WARNING, \"Cannot create a workspace in {0}\", workspace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9204/buggy-version/src.main.java.org.jenkinsci.plugins.gitserver.FileBackedHttpGitRepository.java", "BodyUseAPI": [], "Fixed commit": "e8d075877d9242917e8161bc57f5b30d9d933847", "Url": "https://api.github.com/repos/oleg-nenashev/git-server-plugin", "Date": "2015-07-16T18:39:45Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fortysevendeg.android.swipelistview.SwipeListView.getChildAt((position - (swipeListView.getFirstVisiblePosition())))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (view != null) closeAnimate(view.findViewById(swipeFrontView), position);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8106/buggy-version/src.main.java.com.fortysevendeg.android.swipelistview.SwipeListViewTouchListener.java", "BodyUseAPI": ["com.fortysevendeg.android.swipelistview.View.findViewById(int)", "com.fortysevendeg.android.swipelistview.SwipeListViewTouchListener.closeAnimate(view.findViewById(swipeFrontView),int)"], "Fixed commit": "7d6418402cd0085f7db5f9d8c4f7a6fe286821e5", "Url": "https://api.github.com/repos/josomers/android-swipelistview", "Date": "2013-08-06T15:38:42Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (artifact != null) { artifact.setType(extension); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/241/buggy-version/main.plugins.org.talend.core.runtime.src.main.java.org.talend.core.model.general.ModuleNeeded.java", "BodyUseAPI": ["org.talend.core.runtime.maven.MavenArtifact.setType(java.lang.String)"], "Fixed commit": "206f5175cf9d1a0f97416b26426d32fe3709eafe", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2016-05-03T15:09:55Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valor > 0) { razoes[i] = (tabela[i][((colunas) - 1)]) / valor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2815/buggy-version/src.net.ramonsilva.po.solvers.Tableau.java", "BodyUseAPI": [], "Fixed commit": "c63bf06b061293cd3486bbd26a017575b1b2f559", "Url": "https://api.github.com/repos/ramonsilvanet/PesquisaOperacional", "Date": "2017-05-05T23:12:58Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(ig)) ig = 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4562/buggy-version/src.pk.edu.kics.dsl.qa.qe.IG.java", "BodyUseAPI": [], "Fixed commit": "36ae36d367e7f2fcbd164b0cd80c77c600bce044", "Url": "https://api.github.com/repos/wasimbhalli/DSL-BiomedicalQueryExpansion", "Date": "2017-09-20T06:07:43Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(score)) score = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4562/buggy-version/src.pk.edu.kics.dsl.qa.qe.LRF.java", "BodyUseAPI": [], "Fixed commit": "36ae36d367e7f2fcbd164b0cd80c77c600bce044", "Url": "https://api.github.com/repos/wasimbhalli/DSL-BiomedicalQueryExpansion", "Date": "2017-09-20T06:07:43Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["node.getIncomingEdge().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (label == \"\\\"\") { label = \"\\\\\\\"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9188/buggy-version/src.triePackage.TrieNode.java", "BodyUseAPI": [], "Fixed commit": "3997f9e3c5cf45bc49851303a2170f7c0e04c989", "Url": "https://api.github.com/repos/mbensonathm/AlgoDaten15", "Date": "2015-06-16T10:13:25Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.facebook.react.bridge.ReadableArray.getMap(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (file.hasKey(\"filetype\")) { java.lang.String filetype = file.getString(\"filetype\"); outputStream.writeBytes(((\"Content-Type: \" + filetype) + lineEnd)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3011/buggy-version/android.src.main.java.com.yoloci.fileupload.FileUploadModule.java", "BodyUseAPI": ["com.facebook.react.bridge.ReadableMap.getString(java.lang.String)"], "Fixed commit": "327062eff632f4d56e2c06639135090547234524", "Url": "https://api.github.com/repos/shengupiao/react-native-fileupload", "Date": "2016-01-28T07:44:26Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((blockToAdd.getType()) == (org.bukkit.Material.HUGE_MUSHROOM_1)) blockToAdd.setType(Material.BROWN_MUSHROOM); else if ((blockToAdd.getType()) == (org.bukkit.Material.HUGE_MUSHROOM_2)) blockToAdd.setType(Material.HUGE_MUSHROOM_2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7488/buggy-version/src.net.src_dev.wgtreefarmflag.WGTreeFarmFlag.java", "BodyUseAPI": ["org.bukkit.block.Block.setType(Material.BROWN_MUSHROOM)", "org.bukkit.block.Block.setType(Material.HUGE_MUSHROOM_2)", "org.bukkit.block.Block.getType()"], "Fixed commit": "a7274c7b05ec1d22e9422b78a42cdd896b08e831", "Url": "https://api.github.com/repos/src-dev/WGTreeFarmFlag", "Date": "2016-01-04T23:49:03Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["clickedButton.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((clearOnInput) && ((text.equals(\"(\")) || (text.equals(\")\")))) { clearScreen(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1418/buggy-version/InfixCalculator.src.main.java.com.cameron.infixcalculator.DisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "136b2764655ddb613b35e2ca4fe755682b43ccc1", "Url": "https://api.github.com/repos/cameronbroe/AndroidCalculator", "Date": "2013-12-30T20:05:14Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (color != null) { poiCellStyle.setFillForegroundColor(((com.dua3.meja.model.poi.PoiWorkbook.PoiHssfWorkbook) (workbook)).getPoiColor(color).getIndex()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8430/buggy-version/meja.src.com.dua3.meja.model.poi.PoiCellStyle.java", "BodyUseAPI": ["com.dua3.meja.model.CellStyle.setFillForegroundColor(((com.dua3.meja.model.poi.PoiWorkbook.PoiHssfWorkbook) (workbook)).getPoiColor(color).getIndex())", "com.dua3.meja.model.poi.PoiWorkbook.getPoiColor(java.awt.Color)", "((com.dua3.meja.model.poi.PoiWorkbook.PoiHssfWorkbook) (workbook)).getPoiColor(color).getIndex()"], "Fixed commit": "c432996ee25ab03f2079b01720e48635c63c2be4", "Url": "https://api.github.com/repos/xzel23/meja", "Date": "2015-05-07T19:55:49Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (color == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8430/buggy-version/meja.src.com.dua3.meja.model.poi.PoiWorkbook.java", "BodyUseAPI": [], "Fixed commit": "c432996ee25ab03f2079b01720e48635c63c2be4", "Url": "https://api.github.com/repos/xzel23/meja", "Date": "2015-05-07T19:55:49Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNQF) { isDeletion = false; }else { for (java.util.Map.Entry<gov.healthit.chpl.dto.CQMCriterionDTO, java.lang.Boolean> cqm : cqmResults.entrySet()) { java.lang.Boolean cqmIsNQF = (cqm.getKey().getCmsId()) == null; if (!cqmIsNQF) { if (cqm.getKey().getCmsId().equals(criterion.getCmsId())) { isDeletion = false; break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9086/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.manager.impl.CertifiedProductManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "a7e9e5f0e7f2000e8cab7ec5a256bdbfa663d441", "Url": "https://api.github.com/repos/kekey1/chpl-api", "Date": "2015-11-12T18:31:24Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(result.equals(\"ERROR_PAYMENT\"))) android.widget.Toast.makeText(getBaseContext(), ((\"You have successfully purchased '\" + (currName)) + \"'.\"), Toast.LENGTH_LONG).show(); else android.widget.Toast.makeText(getBaseContext(), ((\"Error during payment of '\" + (currName)) + \"'.\"), Toast.LENGTH_LONG).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2813/buggy-version/android.Phone.app.src.main.java.com.evildell.nesh.colourhandler.GetColourActivity.java", "BodyUseAPI": [], "Fixed commit": "6ea37fd9a13b9a82a2ab87950453dbc94822de95", "Url": "https://api.github.com/repos/chandanjog/match_it", "Date": "2015-05-10T10:08:01Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2277/buggy-version/src.main.Space.java", "BodyUseAPI": [], "Fixed commit": "5ce5e4760d038b36b52758cb791a390b3a112837", "Url": "https://api.github.com/repos/kem345/Network-Chess", "Date": "2015-08-21T15:22:37Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == obj) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2277/buggy-version/src.main.Space.java", "BodyUseAPI": [], "Fixed commit": "5ce5e4760d038b36b52758cb791a390b3a112837", "Url": "https://api.github.com/repos/kem345/Network-Chess", "Date": "2015-08-21T15:22:37Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((yCoordinate) != (other.yCoordinate)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2277/buggy-version/src.main.Space.java", "BodyUseAPI": [], "Fixed commit": "5ce5e4760d038b36b52758cb791a390b3a112837", "Url": "https://api.github.com/repos/kem345/Network-Chess", "Date": "2015-08-21T15:22:37Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((xCoordinate) != (other.xCoordinate)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2277/buggy-version/src.main.Space.java", "BodyUseAPI": [], "Fixed commit": "5ce5e4760d038b36b52758cb791a390b3a112837", "Url": "https://api.github.com/repos/kem345/Network-Chess", "Date": "2015-08-21T15:22:37Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.util.List<java.lang.Integer>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (adjNodes != null) { for (java.lang.Integer nextNode : adjNodes) { if ((visited[nextNode]) == false) { dfs(nextNode); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3898/buggy-version/AlgoProblemSolvingBook.src.edu.happylearn.graph.dfs.DFSGraph.java", "BodyUseAPI": [], "Fixed commit": "969a9269fad0464872dd51698cd7901da71eac39", "Url": "https://api.github.com/repos/xuhu357/algostudy", "Date": "2017-12-28T13:18:25Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) { if (!(file.getParentFile().exists())) { if (file.getParentFile().mkdirs()) { if (!(file.createNewFile())) { throw new java.io.IOException((\"error in creating the file: \" + (file.getAbsolutePath()))); } }else { throw new java.io.IOException((\"error in creating the parent directories: \" + (file.getParentFile().getAbsolutePath()))); } }else { if (!(file.createNewFile())) { throw new java.io.IOException((\"error in creating the file: \" + (file.getAbsolutePath()))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9178/buggy-version/modules.ballerina-logging.src.main.java.org.ballerinalang.logging.BLogManager.java", "BodyUseAPI": ["java.io.File.exists()", "java.io.File.mkdirs()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.createNewFile()", "java.io.File.getAbsolutePath()", "java.io.File.getParentFile()", "java.io.File.getAbsolutePath()", "java.io.File.createNewFile()", "java.io.File.getAbsolutePath()"], "Fixed commit": "4a28861c57278d8b319999e0e9e802d60e362022", "Url": "https://api.github.com/repos/pubudu91/ballerina", "Date": "2017-08-10T12:39:55Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mChart.isDrawBarShadowEnabled()) { for (int j = 0; j < (buffer.size()); j += 4) { if (!(mViewPortHandler.isInBoundsLeft(buffer.buffer[(j + 2)]))) continue; if (!(mViewPortHandler.isInBoundsRight(buffer.buffer[j]))) break; c.drawRect(buffer.buffer[j], mViewPortHandler.contentTop(), buffer.buffer[(j + 2)], mViewPortHandler.contentBottom(), mShadowPaint); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5173/buggy-version/MPChartLib.src.com.github.mikephil.charting.renderer.BarChartRenderer.java", "BodyUseAPI": [], "Fixed commit": "a6ce45f9ac608972aec11b340c0a2cef050d796d", "Url": "https://api.github.com/repos/PhilJay/MPAndroidChart", "Date": "2016-03-10T16:20:36Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sbaseurl.contains(\"zhuishushenqi.com\")) { return site_zssq.getUrlPage(suburl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6437/buggy-version/src.com.linpinger.foxbook.FoxBookLib.java", "BodyUseAPI": [], "Fixed commit": "7a5d3268b87de2ec92229b598d3c08755b53957d", "Url": "https://api.github.com/repos/linpinger/foxbook-android", "Date": "2014-05-30T03:36:09Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (bytes != null) { try { payloads.add(objectMapper.readValue(bytes, payloadClass)); } catch (java.lang.Exception x) { com.jivesoftware.os.miru.cluster.rcvs.MiruActivityPayloads.log.error((((\"Failed mapping \" + (new java.lang.String(bytes))) + \" to \") + payloadClass), x); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/319/buggy-version/code.com.jivesoftware.os.miru.miru-cluster.src.main.java.com.jivesoftware.os.miru.cluster.rcvs.MiruActivityPayloads.java", "BodyUseAPI": ["com.jivesoftware.os.mlogger.core.MetricLogger.error(java.lang.String,java.lang.Exception)", "com.fasterxml.jackson.databind.ObjectMapper.readValue(byte[],java.lang.Class<T>)", "java.util.List<T>.add(objectMapper.readValue(bytes, payloadClass))"], "Fixed commit": "21ce36ddd5f4df85273d9d8e21bcf9a7a331e37e", "Url": "https://api.github.com/repos/jivesoftware/miru", "Date": "2015-01-31T08:17:41Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.hsyyid.polis.utils.ConfigManager.isClaimed(location.get())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((event instanceof org.spongepowered.api.event.block.InteractBlockEvent.Secondary) && (io.github.hsyyid.polis.utils.ConfigManager.isAllowedBlock(isClaimed, event.getTargetBlock().getState().getType()))) { return; }else { event.setCancelled(true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3946/buggy-version/src.main.java.io.github.hsyyid.polis.listeners.PlayerInteractListener.java", "BodyUseAPI": ["org.spongepowered.api.event.block.InteractBlockEvent.setCancelled(boolean)"], "Fixed commit": "829e04c0e376e9698cbd862b2fa5f24338797118", "Url": "https://api.github.com/repos/NeumimTo/Polis", "Date": "2016-04-30T22:52:22Z"},
{"Line": "=>2447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dRadius != 0) && (length != 0)) { C.x = ((int) (((double) (e.x)) - ((dRadius / length) * (((double) (a.x)) - ((double) (e.x)))))); C.y = ((int) (((double) (e.y)) - ((dRadius / length) * (((double) (a.y)) - ((double) (e.y)))))); }else { C.x = e.x; C.y = e.y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3713/buggy-version/core.JavaLineArray.src.main.java.JavaLineArray.lineutility.java", "BodyUseAPI": [], "Fixed commit": "65e226c34f61a716e4b18d87dd19ce8ee40c2561", "Url": "https://api.github.com/repos/missioncommand/mil-sym-java", "Date": "2015-05-22T22:03:34Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((model.low.document.imp.TextIntroImp) (this.getParent())).getParent()) instanceof model.low.document.imp.DocumentImp) { model.low.document.Document doc = ((model.low.document.Document) (((model.low.document.imp.TextIntroImp) (this.getParent())).getParent())); if ((doc.getSubSectionNb()) > 0) return doc.getSubSection(0).getTitle().getLine(); else return doc.getTextIntro().getLastLine(); }else if ((((model.low.document.imp.SectionImp) (((model.low.document.imp.TextIntroImp) (this.getParent())).getParent())).getNextSection()) != null) { return ((model.low.document.imp.SectionImp) (((model.low.document.imp.TextIntroImp) (this.getParent())).getParent())).getNextSection().getFirstLine(); }else { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4743/buggy-version/src.model.low.document.imp.LineImp.java", "BodyUseAPI": [], "Fixed commit": "9804f644f64aeae8f56b014a475c72505bac17b2", "Url": "https://api.github.com/repos/KevinMonnier/org-editor", "Date": "2012-11-04T04:45:06Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.android.settings.MultiSimSettingTab.findRecordBySlotId(this, mSubscription)) == null) { getPreferenceScreen().setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8492/buggy-version/src.com.android.settings.sim.SimConfiguration.java", "BodyUseAPI": [], "Fixed commit": "8986f53bed4bfa09ed34efe09dc674a9f27dda0d", "Url": "https://api.github.com/repos/CyanogenMod/android_packages_apps_Settings", "Date": "2014-11-28T13:00:49Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((rule.getPointsToAdd()) == null) && ((rule.getBadgeIdToAdd()) == null)) && ((rule.getRewardIdToAdd()) == null)) { return ch.heigvd.amt.moussaraser.rest.config.response.SendRule.missingDataInPayload(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/243/buggy-version/projet.MoussaRaser.src.main.java.ch.heigvd.amt.moussaraser.rest.resources.RulesRessource.java", "BodyUseAPI": [], "Fixed commit": "c346b3ae0b4c1fc7e8b43e97a2c58c0d56f88416", "Url": "https://api.github.com/repos/Kjnokeer/Teaching-HEIGVD-AMT-2015-Project", "Date": "2016-01-15T10:35:33Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((partition == null) && ((this.getProducerMetadata().getPartitioner()) != null)) { partition = this.getProducerMetadata().getPartitioner().partition(messageKey, this.producer.partitionsFor(targetTopic).size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5539/buggy-version/src.main.java.org.springframework.integration.kafka.support.ProducerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "41b8251b973674a57a51fb4424f08f671cbd64aa", "Url": "https://api.github.com/repos/abhijith-prabhakar/spring-integration-kafka", "Date": "2015-10-08T18:46:07Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((leftClicked) && (rightClicked))) cancel = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5688/buggy-version/MS.src.main.java.pat.game.MS.Game.java", "BodyUseAPI": [], "Fixed commit": "8f0f95dd5c4c03e26b0c42c0d697a176ae018c25", "Url": "https://api.github.com/repos/patrickkuo/minesweeper", "Date": "2012-08-06T09:33:31Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["watodo.logic.commands.MarkCommand.getFilteredTaskList()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((filteredTaskListIndex < (lastShownList.size())) && (filteredTaskListIndex != (-1))) taskToEdit = lastShownList.get(filteredTaskListIndex); else throw new watodo.logic.commands.exceptions.CommandException(watodo.logic.commands.MarkCommand.MESSAGE_INVALID_TASK);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4528/buggy-version/src.main.java.watodo.logic.commands.MarkCommand.java", "BodyUseAPI": ["java.util.List<watodo.model.task.ReadOnlyTask>.get(int)"], "Fixed commit": "f3a650993738be39d7a443ba5fae7ad9e510d3f0", "Url": "https://api.github.com/repos/CS2103JAN2017-T15-B2/main", "Date": "2017-04-06T07:31:53Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.iee.translator.antlr.translator.JavaTranslator.translateName(ctx.getText())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(org.eclipse.iee.translator.antlr.translator.JavaTranslator.fFoundedVariables.contains(variable))) org.eclipse.iee.translator.antlr.translator.JavaTranslator.fFoundedVariables.add(variable);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7263/buggy-version/org.eclipse.iee.translator.antlr.src.org.eclipse.iee.translator.antlr.translator.JavaTranslator.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "c83cbfe09fb25875d891ec88abf2faa583d0631e", "Url": "https://api.github.com/repos/iee/iee", "Date": "2013-03-04T13:26:41Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (moveQueue.contains(move)) { moveQueue.remove(move); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/675/buggy-version/src.main.GameObject.java", "BodyUseAPI": ["java.util.Queue<main.Move>.remove(main.Move)"], "Fixed commit": "f9b82eceb8f1b5b4eaaed71bafb68937d6a36efe", "Url": "https://api.github.com/repos/danieka/indavaders", "Date": "2014-05-13T12:27:14Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5519/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "0a3753e5f84bfe9df211d520060b385eaca0d876", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.osgl.util.C.newList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (allowMethods.isEmpty()) { return act.handler.builtin.AlwaysNotFound.INSTANCE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/925/buggy-version/src.main.java.act.handler.OptionsInfoBase.java", "BodyUseAPI": [], "Fixed commit": "34c67d070bc5ff590011fb16c7bca83673c7916b", "Url": "https://api.github.com/repos/actframework/actframework", "Date": "2016-12-15T01:20:12Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.ebi.pride.data.core.Modification.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (modName != null) { tip.append(\"<b>Name</b>:\"); tip.append(mod.getName()); tip.append(\"<br>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3332/buggy-version/pride-inspector.branches.development.src.main.java.uk.ac.ebi.pride.gui.component.table.renderer.PeptideSequenceCellRenderer.java", "BodyUseAPI": [], "Fixed commit": "415a22d72a255cd8a9615c373b2ec85cec209fc3", "Url": "https://api.github.com/repos/PRIDE-Toolsuite/old-pride-toolsuite", "Date": "2012-01-09T10:21:21Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.childSizes) != null) { this.childSizes[childIndex] = size; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1476/buggy-version/src.org.zoodb.internal.server.index.btree.BTreeNode.java", "BodyUseAPI": [], "Fixed commit": "dbe384b90811e16e0cbae6bc5a68b9b9d449f4ec", "Url": "https://api.github.com/repos/tzaeschke/zoodb", "Date": "2014-05-22T11:51:45Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (args[i].startsWith(\"--exclude=\")) { watcher.excludes(args[i].substring(10)); }else if (args[i].equals(\"--postChanges\")) { postChanges = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/907/buggy-version/src.main.java.hr.hrg.javawatcher.Main.java", "BodyUseAPI": ["hr.hrg.javawatcher.GlobWatcher.excludes(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "fbbc56afa4adff83fd4dcb042efe3123ace1c772", "Url": "https://api.github.com/repos/hrgdavor/java-watcher", "Date": "2017-05-10T12:37:24Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cdata) != null) { if (offset > (cdata.length())) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); } if ((offset + count) > (cdata.length())) { cdata.delete(offset, ((cdata.length()) - offset)); }else { cdata.delete(offset, count); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/706/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "c62526b7c14c9bcd62af280317dba504dbb9f1e3", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/706/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "c62526b7c14c9bcd62af280317dba504dbb9f1e3", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset + count) > length) { document.alpha[nodeNumber] = inDocOffset + offset; document.alphaLen[nodeNumber] = length - offset; }else { document.alpha[nodeNumber] = inDocOffset + offset; document.alphaLen[nodeNumber] = count; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/706/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "c62526b7c14c9bcd62af280317dba504dbb9f1e3", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > length) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/706/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "c62526b7c14c9bcd62af280317dba504dbb9f1e3", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > length) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/706/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "c62526b7c14c9bcd62af280317dba504dbb9f1e3", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.hibernate.context.internal.ManagedSessionContext.hasBind(sessionFactory))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3117/buggy-version/src.main.java.ar.edu.itba.paw.grupo1.web.HibernateRequestCycleListener.java", "BodyUseAPI": [], "Fixed commit": "044be453df548d124900193d0e95fb5a68680a9d", "Url": "https://api.github.com/repos/champo/TPE-PAW", "Date": "2012-07-12T23:32:20Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.hibernate.context.internal.ManagedSessionContext.hasBind(sessionFactory))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3117/buggy-version/src.main.java.ar.edu.itba.paw.grupo1.web.HibernateRequestCycleListener.java", "BodyUseAPI": [], "Fixed commit": "044be453df548d124900193d0e95fb5a68680a9d", "Url": "https://api.github.com/repos/champo/TPE-PAW", "Date": "2012-07-12T23:32:20Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((variables.size()) > 0) { variables.pop(); }else { containsVariable = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8438/buggy-version/src.CalcModel.java", "BodyUseAPI": ["java.util.Stack.pop()"], "Fixed commit": "5bf7b91c01f298b2043ab6058c3dd18bd9375458", "Url": "https://api.github.com/repos/raksonibs/Calc-u-later", "Date": "2016-04-04T02:11:19Z"},
{"Line": "=>1296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Main.game.getPlayer().hasItemType(ItemType.DYE_BRUSH)) { boolean hasFullInventory = Main.game.getPlayer().isInventoryFull(); boolean isDyeingStackItem = (Main.game.getPlayer().getMapOfDuplicateClothing().get(com.base.game.dialogue.utils.InventoryDialogue.clothing)) > 1; boolean canDye = !(isDyeingStackItem && hasFullInventory); if (canDye) { return new com.base.game.dialogue.responses.Response(\"Dye\", \"Use a Dye-brush to dye this item of clothing.\", com.base.game.dialogue.utils.InventoryDialogue.DYE_CLOTHING); }else { return new com.base.game.dialogue.responses.Response(\"Dye\", \"Your inventory is full, so you can't dye this item of clothing.\", null); } }else { if (Main.game.getPlayer().getItemsDiscovered().contains(ItemType.DYE_BRUSH)) return new com.base.game.dialogue.responses.Response(\"Dye\", \"You'll need to find another Dye-brush if you want to dye your clothes.\", null); else return new com.base.game.dialogue.responses.Response(\"Dye\", \"You'll need to find an item of some sort if you want to dye your clothes.\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7103/buggy-version/src.com.base.game.dialogue.utils.InventoryDialogue.java", "BodyUseAPI": [], "Fixed commit": "05bd45e6ef15424912bd6940fa27b300d26d2503", "Url": "https://api.github.com/repos/Rfpnj/liliths-throne-public", "Date": "2017-08-15T21:38:09Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, java.util.ArrayList<java.lang.Integer>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (docs == null) { java.lang.System.out.println(\"The queryID can not be found in the relevance list!\"); java.lang.System.exit(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/753/buggy-version/src.PrecisionRecall.java", "BodyUseAPI": [], "Fixed commit": "fda9be368edbfecaa511fceb96587b076782a75c", "Url": "https://api.github.com/repos/vcarbune/acse", "Date": "2012-10-24T13:51:10Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"Entrezgene_summary\".equals(qName)) { currentValue = new java.lang.StringBuilder(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8828/buggy-version/dcc-import-gene.src.main.java.org.icgc.dcc.imports.gene.reader.XMLHandler.java", "BodyUseAPI": [], "Fixed commit": "7ef5c3ef064980c1e76de60a5e0a59c823fc97e5", "Url": "https://api.github.com/repos/icgc-dcc/dcc-import", "Date": "2016-02-26T22:28:50Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"Entrezgene_summary\".equals(qName)) { summaryMap.put(currentId, currentValue.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8828/buggy-version/dcc-import-gene.src.main.java.org.icgc.dcc.imports.gene.reader.XMLHandler.java", "BodyUseAPI": [], "Fixed commit": "7ef5c3ef064980c1e76de60a5e0a59c823fc97e5", "Url": "https://api.github.com/repos/icgc-dcc/dcc-import", "Date": "2016-02-26T22:28:50Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((ar.edu.unq.unidad3.wop.service.runner.SessionFactoryProvider.INSTANCE) != null) && ((ar.edu.unq.unidad3.wop.service.runner.SessionFactoryProvider.INSTANCE.sessionFactory) != null)) { ar.edu.unq.unidad3.wop.service.runner.SessionFactoryProvider.INSTANCE.sessionFactory.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4627/buggy-version/src.main.java.ar.edu.unq.unidad3.wop.service.runner.SessionFactoryProvider.java", "BodyUseAPI": ["org.hibernate.SessionFactory.close()"], "Fixed commit": "02faf3f28c0bb03f8afffa09b198c6165545f213", "Url": "https://api.github.com/repos/EPERS-UNQ/unidad3-ejemplo-hibernate", "Date": "2016-09-20T23:54:30Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((tx != null) && (tx.isActive())) { tx.rollback(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4627/buggy-version/src.main.java.ar.edu.unq.unidad3.wop.service.runner.Runner.java", "BodyUseAPI": ["org.hibernate.Transaction.rollback()"], "Fixed commit": "02faf3f28c0bb03f8afffa09b198c6165545f213", "Url": "https://api.github.com/repos/EPERS-UNQ/unidad3-ejemplo-hibernate", "Date": "2016-09-20T23:54:30Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (invocationTarget == null) { ((org.jboss.errai.bus.client.api.MessageCallback) (org.jboss.errai.cdi.server.Util.lookupCallbackBean(beanManager, type.getJavaClass()))).callback(message); }else { invocationTarget.callback(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1372/buggy-version/integration.src.main.java.org.jboss.errai.cdi.server.CDIExtensionPoints.java", "BodyUseAPI": ["org.jboss.errai.bus.client.api.MessageCallback.callback(org.jboss.errai.bus.client.api.Message)"], "Fixed commit": "c386bfb317fd179611af7b770ba2a3d7bc32a879", "Url": "https://api.github.com/repos/mikebrock/errai-cdi", "Date": "2011-02-28T22:09:02Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.otter.shared.etl.model.EventType.valueOf(rowChange.getEventType().name())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (eventType.isRename()) { notExistReturnNull = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7755/buggy-version/node.etl.src.main.java.com.alibaba.otter.node.etl.select.selector.MessageParser.java", "BodyUseAPI": [], "Fixed commit": "9d366a922348949c038382b58a1f6ee974638532", "Url": "https://api.github.com/repos/alibaba/otter", "Date": "2014-07-03T13:01:10Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (notExistReturnNull) { return null; }else { throw new com.alibaba.otter.shared.common.model.config.ConfigException((((\"no such DataMedia , the namespace = \" + namespace) + \" name = \") + name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7755/buggy-version/shared.common.src.main.java.com.alibaba.otter.shared.common.model.config.ConfigHelper.java", "BodyUseAPI": [], "Fixed commit": "9d366a922348949c038382b58a1f6ee974638532", "Url": "https://api.github.com/repos/alibaba/otter", "Date": "2014-07-03T13:01:10Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bfName.contains(\"\\\\\")) { split = bfName.split(\"\\\\+\"); return split[((split.length) - 1)]; }else if (bfName.contains(\"/\")) { split = bfName.split(\"/\"); return split[((split.length) - 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6670/buggy-version/src.bitbit.Bitmap.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "14e6b9b572d86176cd55d7fa8183ea80dd79d8c8", "Url": "https://api.github.com/repos/zvakanaka/bitbit", "Date": "2014-12-16T04:47:23Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element.contains(\"elm-render\")) java.lang.System.out.println(\"hi\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7858/buggy-version/util.src.main.java.com.thesett.util.resource.ResourceUtils.java", "BodyUseAPI": [], "Fixed commit": "6fcf2c8221c980f0484bb0246dd57f6f678b6e27", "Url": "https://api.github.com/repos/rupertlssmith/jenerator_utils", "Date": "2016-12-14T14:01:31Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.util.ExchangeHelper.getContentType(org.apache.camel.Exchange)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (contentTypeString != null) { if ((contentTypeString.indexOf(\"charset\")) > 0) { contentType = org.apache.http.entity.ContentType.parse(contentTypeString); }else { contentType = org.apache.http.entity.ContentType.create(contentTypeString); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5796/buggy-version/components.camel-http4.src.main.java.org.apache.camel.component.http4.HttpProducer.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "org.apache.http.entity.ContentType.create(java.lang.String)", "org.apache.http.entity.ContentType.parse(java.lang.String)"], "Fixed commit": "2bcac18c8c30bc2a8248293d164df885b1f929b1", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-10-09T08:11:17Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (randX > (max)) max = randX;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4519/buggy-version/core.src.com.hasbrouckproductions.rhasbrouck.games.DefaultLevel.java", "BodyUseAPI": [], "Fixed commit": "5928c3dc7b24fd77140da80433333d71e2c1f2b6", "Url": "https://api.github.com/repos/hasbrour1/StarOmega", "Date": "2016-06-27T16:21:09Z"},
{"Line": "=>671", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MainScreen.thiz.getFocusMode()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((fm.compareTo(preferenceFocusMode)) != 0) MainScreen.thiz.setCameraFocusMode(preferenceFocusMode);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3411/buggy-version/src.com.almalence.plugins.vf.focus.FocusVFPlugin.java", "BodyUseAPI": ["MainScreen.thiz.setCameraFocusMode(java.lang.String)"], "Fixed commit": "d8080b4467b970e421c1aa480c910a9178cd90f0", "Url": "https://api.github.com/repos/almalence/OpenCamera", "Date": "2013-12-16T06:19:04Z"},
{"Line": "=>1154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.treasure_data.client.HttpClientAdaptor.LOG.isLoggable(java.util.logging.Level.FINE)) { com.treasure_data.client.HttpClientAdaptor.LOG.fine(sbuf.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7275/buggy-version/src.main.java.com.treasure_data.client.HttpClientAdaptor.java", "BodyUseAPI": ["java.util.logging.Logger.fine(java.lang.String)"], "Fixed commit": "b0f235cf34e8c40989d7618b46acc66f637583b6", "Url": "https://api.github.com/repos/treasure-data/td-client-java", "Date": "2012-06-04T23:47:34Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subtask) { sb.append(\" in subtask \").append(task.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1661/buggy-version/model.model-impl.src.main.java.com.evolveum.midpoint.model.impl.sync.TaskHandlerUtil.java", "BodyUseAPI": [], "Fixed commit": "d2a3af671a87f84bdf85a35d82de80d9db40e469", "Url": "https://api.github.com/repos/PetrGasparik/midpoint", "Date": "2016-12-13T14:07:33Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((that.getPrimary()) instanceof com.redhat.ceylon.compiler.typechecker.tree.Tree.MemberOrTypeExpression) && (com.redhat.ceylon.compiler.java.codegen.Decl.isConstructor(((com.redhat.ceylon.compiler.typechecker.tree.Tree.MemberOrTypeExpression) (that.getPrimary())).getDeclaration()))) { com.redhat.ceylon.model.typechecker.model.Constructor ctor = com.redhat.ceylon.compiler.java.codegen.Decl.getConstructor(((com.redhat.ceylon.compiler.typechecker.tree.Tree.MemberOrTypeExpression) (that.getPrimary())).getDeclaration()); if (com.redhat.ceylon.compiler.java.codegen.Decl.isJavaObjectArrayWith(ctor)) { com.redhat.ceylon.compiler.java.codegen.CodegenUtil.markTypeErased(that); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/200/buggy-version/compiler-java.src.com.redhat.ceylon.compiler.java.codegen.BoxingVisitor.java", "BodyUseAPI": ["com.redhat.ceylon.compiler.typechecker.tree.Tree.InvocationExpression.getPrimary()", "com.redhat.ceylon.compiler.java.codegen.Decl.getConstructor(((com.redhat.ceylon.compiler.typechecker.tree.Tree.MemberOrTypeExpression) (that.getPrimary())).getDeclaration())", "((com.redhat.ceylon.compiler.typechecker.tree.Tree.MemberOrTypeExpression) (that.getPrimary())).getDeclaration()", "com.redhat.ceylon.compiler.java.codegen.CodegenUtil.markTypeErased(com.redhat.ceylon.compiler.typechecker.tree.Tree.InvocationExpression)"], "Fixed commit": "763f257f4e9933016f22cc8cd66545bb919f71f8", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-12-09T15:04:49Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fileOrDirectory.isDirectory()) { java.io.File[] files = fileOrDirectory.listFiles(); if (files != null) { for (java.io.File child : fileOrDirectory.listFiles()) { if (!(org.unfoldingword.door43client.FileUtil.deleteQuietly(child))) { return false; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7884/buggy-version/door43-client.src.main.java.org.unfoldingword.door43client.FileUtil.java", "BodyUseAPI": ["java.io.File.listFiles()", "java.io.File.listFiles()"], "Fixed commit": "0edf20afdc95a8a46c6d89e66fd7756fe9cbc965", "Url": "https://api.github.com/repos/unfoldingWord-dev/android-door43-client", "Date": "2017-03-17T17:12:20Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((connection.getResponseCode()) >= 400) || ((connection.getResponseCode()) < 200)) { inputStream = connection.getErrorStream(); }else { inputStream = connection.getInputStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/951/buggy-version/app.src.main.java.com.example.android.virtualpantry.Network.Request.java", "BodyUseAPI": ["java.net.HttpURLConnection.getInputStream()", "java.net.HttpURLConnection.getErrorStream()"], "Fixed commit": "1e955eb345371b386b3cccaecd952abcb1da65ed", "Url": "https://api.github.com/repos/bradwarrum/CS307-AndroidClient", "Date": "2015-04-06T22:17:35Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nz.ac.auckland.alm.algebra.IDirection.getTab(nz.ac.auckland.alm.IArea)", "nz.ac.auckland.alm.algebra.IDirection.getTab(nz.ac.auckland.alm.EmptySpace)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((currentTab.getValue()) >= (endTab.getValue())) chainFound = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7441/buggy-version/alm.src.main.java.nz.ac.auckland.alm.algebra.LambdaTransformation.java", "BodyUseAPI": [], "Fixed commit": "e0c215c9f3d8c4b57949d08a125211f4effbbe23", "Url": "https://api.github.com/repos/czeidler/alm", "Date": "2015-07-01T05:10:34Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((x) > 0) && ((x) < 19)) g.drawImage(image, ((int) ((x) * 30)), ((int) ((y) * 30)), game);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4699/buggy-version/src.objects.GameObject.java", "BodyUseAPI": ["java.awt.Graphics.drawImage(java.awt.Image,double,double,game.Game)"], "Fixed commit": "8a6f74e958ef36dc70a3e6199ea132097ba457ea", "Url": "https://api.github.com/repos/2000Slash/Minecraft2D", "Date": "2017-05-24T07:03:17Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasNotCalculated) { calculatePercent(t1, t2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5823/buggy-version/App.app.src.main.java.eic.beike.projectx.model.Count.java", "BodyUseAPI": [], "Fixed commit": "e8da8c8e266fd12d11365a7df1ca1468f22e73e4", "Url": "https://api.github.com/repos/BeikeElectricity/ProjectX", "Date": "2015-10-19T08:32:59Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t2 == 0) { }else { calculatePercent(t1, t2); hasNotCalculated = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5823/buggy-version/App.app.src.main.java.eic.beike.projectx.model.Count.java", "BodyUseAPI": ["eic.beike.projectx.model.Count.1.calculatePercent(long,java.lang.Long)"], "Fixed commit": "e8da8c8e266fd12d11365a7df1ca1468f22e73e4", "Url": "https://api.github.com/repos/BeikeElectricity/ProjectX", "Date": "2015-10-19T08:32:59Z"},
{"Line": "=>945", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((markers) != null) { markers.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3225/buggy-version/library.src.tw.kewang.mapcontroller.MapController.java", "BodyUseAPI": [], "Fixed commit": "f60525d94a41041fe1296027005e0226562329e7", "Url": "https://api.github.com/repos/kewangtw/map-controller", "Date": "2014-03-29T04:25:59Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((br.com.brasolia.application.BrasoliaApplication.getUser()) == null) { logout.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4728/buggy-version/app.src.main.java.br.com.brasolia.homeTabs.BSProfileFragment.java", "BodyUseAPI": [], "Fixed commit": "44767d27f3422cc6590668a35006e878415f74a2", "Url": "https://api.github.com/repos/brasolia/Brasolia-Android", "Date": "2017-07-03T18:17:24Z"},
{"Line": "=>3423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null == (sourceVolume.getAssociatedVolumes())) || (sourceVolume.getAssociatedVolumes().isEmpty())) { com.emc.storageos.api.service.impl.resource.RPBlockServiceApiImpl._log.error(\"VPLEX volume {} has no backend volumes.\", sourceVolume.forDisplay()); throw InternalServerErrorException.internalServerErrors.noAssociatedVolumesForVPLEXVolume(sourceVolume.forDisplay()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7238/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.RPBlockServiceApiImpl.java", "BodyUseAPI": ["com.emc.storageos.db.client.model.Volume.forDisplay()", "org.slf4j.Logger.error(java.lang.String,sourceVolume.forDisplay())", "InternalServerErrorException.internalServerErrors.noAssociatedVolumesForVPLEXVolume(sourceVolume.forDisplay())", "com.emc.storageos.db.client.model.Volume.forDisplay()"], "Fixed commit": "32cf3aebd87c8a31cb192a5438d8f16f34b85e56", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-08-29T22:28:42Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.isNeededUpdate()) { android.os.Message.obtain(handler, com.auguraclient.view.ProjectListScreen.CMD_SYNC_PROJECT, p.getId()).sendToTarget(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5384/buggy-version/src.com.auguraclient.view.ProjectListScreen.java", "BodyUseAPI": ["android.os.Message.obtain(handler, com.auguraclient.view.ProjectListScreen.CMD_SYNC_PROJECT, p.getId()).sendToTarget()", "android.os.Message.obtain(com.auguraclient.view.ProjectListScreen.CmdHandler,int,p.getId())", "com.auguraclient.model.Project.getId()"], "Fixed commit": "05c85d6b808063affc63efd7f4aa83b25b6bb743", "Url": "https://api.github.com/repos/jiangzhen1984/CRMAndroidClientTA", "Date": "2013-05-11T12:44:54Z"},
{"Line": "=>1417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.pressgang.ccms.contentspec.KeyValueNode<?>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof java.lang.Integer) { setId(((java.lang.Integer) (value))); }else { setId(java.lang.Integer.parseInt(((java.lang.String) (value)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8314/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.ContentSpec.java", "BodyUseAPI": [], "Fixed commit": "2ae8a0da0fa8219caa875b979259c5ae5ffe8703", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpec", "Date": "2013-08-01T05:27:39Z"},
{"Line": "=>1477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.pressgang.ccms.contentspec.KeyValueNode<?>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof java.lang.Integer) { setPubsNumber(((java.lang.Integer) (value))); }else { setPubsNumber(java.lang.Integer.parseInt(((java.lang.String) (value)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8314/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.ContentSpec.java", "BodyUseAPI": [], "Fixed commit": "2ae8a0da0fa8219caa875b979259c5ae5ffe8703", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpec", "Date": "2013-08-01T05:27:39Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.angrycat.erp.excel.ProductExcelImporter.getXSSFValueByCellType(org.apache.poi.ss.usermodel.Cell)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((val.getClass()) == (java.lang.Double.class)) { name = new java.math.BigDecimal(((java.lang.Double) (val))).toString(); }else { name = sourceVal; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/9009/buggy-version/AngryCatERP.code.com.angrycat.erp.excel.ProductExcelImporter.java", "BodyUseAPI": [], "Fixed commit": "048d25b91cde9626221d124d0f994db2aaa308dc", "Url": "https://api.github.com/repos/blueschen/angrycat-app", "Date": "2016-02-04T05:29:18Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((check(left(p))) && (check(right(p)))) { int minP = right(p); while (check(left(minP))) { minP = left(minP); } move(minP, p); }else if (check(left(p))) { move(left(p), p); }else if (check(right(p))) { move(right(p), p); }else { this.t.set(p, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5060/buggy-version/BSTImplMk2.java", "BodyUseAPI": ["BSTImplMk2.BST<T>.left(int)", "BSTImplMk2.BST<T>.right(int)", "BSTImplMk2.BST<T>.left(int)", "BSTImplMk2.BST<T>.move(int,int)", "java.util.ArrayList<T>.set(int,<nulltype>)", "BSTImplMk2.BST<T>.move(int,int)", "BSTImplMk2.BST<T>.move(int,int)", "BSTImplMk2.BST<T>.right(int)", "BSTImplMk2.BST<T>.check(int)", "BSTImplMk2.BST<T>.check(int)", "BSTImplMk2.BST<T>.right(int)"], "Fixed commit": "6843b346887800288331bacc2d317e8435c0bd60", "Url": "https://api.github.com/repos/tiagopnoliveira/programming", "Date": "2017-04-07T18:02:52Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(check(p))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5060/buggy-version/BSTImplMk2.java", "BodyUseAPI": [], "Fixed commit": "6843b346887800288331bacc2d317e8435c0bd60", "Url": "https://api.github.com/repos/tiagopnoliveira/programming", "Date": "2017-04-07T18:02:52Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.erakk.lnreader.helper.NonLeakingWebView.getContentHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (contentHeight == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1175/buggy-version/app.src.main.java.com.erakk.lnreader.UI.activity.DisplayLightNovelContentActivity.java", "BodyUseAPI": [], "Fixed commit": "6a7d8cd57eca4531637b1e92c657875aa40d237f", "Url": "https://api.github.com/repos/freedomofkeima/LNReader-Android", "Date": "2015-09-07T06:36:28Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.hasChild(eventId)) { savedEvents.child(\"savedEvents\").child(eventId).child(\"date\").child(uid).setValue(date); }else { savedEvents.child(\"savedEvents\").child(eventId).setValue(info); savedEvents.child(\"savedEvents\").child(eventId).child(\"date\").child(uid).setValue(date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/150/buggy-version/app.src.main.java.com.codepath.engage.EventDetailsActivity.java", "BodyUseAPI": ["savedEvents.child(\"savedEvents\").child(java.lang.String)", "savedEvents.child(\"savedEvents\").child(java.lang.String)", "savedEvents.child(\"savedEvents\").child(java.lang.String)", "savedEvents.child(\"savedEvents\").child(eventId).child(java.lang.String)", "savedEvents.child(\"savedEvents\").child(eventId).child(\"date\").child(uid).setValue(java.util.Date)", "savedEvents.child(\"savedEvents\").child(eventId).child(\"date\").child(uid).setValue(java.util.Date)", "savedEvents.child(\"savedEvents\").child(eventId).child(\"date\").child(java.lang.String)", "savedEvents.child(\"savedEvents\").child(eventId).child(java.lang.String)", "savedEvents.child(\"savedEvents\").child(eventId).setValue(com.codepath.engage.models.UserEvents)", "savedEvents.child(\"savedEvents\").child(eventId).child(\"date\").child(java.lang.String)"], "Fixed commit": "e16ce3b7b351208eb9e2b08c3fb2059dc229cc5c", "Url": "https://api.github.com/repos/amandakw5/Engage", "Date": "2017-08-08T20:35:00Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.getContextClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cl != null) { java.util.Enumeration<java.net.URL> urls = java.lang.Thread.currentThread().getContextClassLoader().getResources(org.apache.tamaya.core.provider.JavaConfigurationProvider.DEFAULT_PROPERTIES_FILE_NAME); while (urls.hasMoreElements()) { propertySources.add(new org.apache.tamaya.core.propertysource.SimplePropertySource(urls.nextElement())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6846/buggy-version/core.src.main.java.org.apache.tamaya.core.provider.JavaConfigurationProvider.java", "BodyUseAPI": [], "Fixed commit": "8e2a5cb6e16fcac73b47647800ba41f1f8583871", "Url": "https://api.github.com/repos/apache/incubator-tamaya", "Date": "2015-11-26T21:47:05Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((learned_step_count) == 0) learned_step_count = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3122/buggy-version/app.src.com.mindpin.kc_android.activity.LearnActivity.java", "BodyUseAPI": [], "Fixed commit": "3f1e96a21c31fbce514986bb18a1867dde1fafb0", "Url": "https://api.github.com/repos/mindpin/kc-android", "Date": "2014-09-27T06:50:29Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) == null) return (id) == (tool.id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8459/buggy-version/src.com.gmail.zariust.otherdrops.subject.ToolAgent.java", "BodyUseAPI": [], "Fixed commit": "620974e26d6597b45bf43ddfdecfa8690d6ea5db", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2011-09-06T12:48:31Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((classDefKeywords.size()) > 1) { java.util.Collections.reverse(classDefKeywords); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1765/buggy-version/plugins.org.python.pydev.parser.src.org.python.pydev.parser.grammar30.TreeBuilder30.java", "BodyUseAPI": ["java.util.Collections.reverse(java.util.ArrayList<org.python.pydev.parser.jython.ast.keywordType>)"], "Fixed commit": "9f296911cc98d9ab19cb5f71f23ca12a290179a1", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2011-03-16T16:42:58Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.size()) <= 0) { Translator.curFunc = \"\"; funcstack.remove(((funcstack.size()) - 1)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5693/buggy-version/src.Code.java", "BodyUseAPI": [], "Fixed commit": "1235ced424153907bdfdeea651da10da63a6d4f1", "Url": "https://api.github.com/repos/DavidBittner/Translator", "Date": "2017-05-18T17:48:07Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rowData.size()) <= 0) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5693/buggy-version/src.FuncMaster.java", "BodyUseAPI": [], "Fixed commit": "1235ced424153907bdfdeea651da10da63a6d4f1", "Url": "https://api.github.com/repos/DavidBittner/Translator", "Date": "2017-05-18T17:48:07Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((auth.getCurrentUser()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7414/buggy-version/app.src.main.java.com.snapsigns.utilities.FireBaseUtility.java", "BodyUseAPI": [], "Fixed commit": "a6c6a7459ceb9c57381f3bec077644e1971553e1", "Url": "https://api.github.com/repos/fahadhd/SnapSigns", "Date": "2016-12-05T03:42:21Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.realm.DynamicRealm.getSchema()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(schema.get(\"ScheduledTransactionWeekly\").hasField(\"onTuesday\"))) { schema.get(\"ScheduledTransactionWeekly\").addField(\"onTuesday\", boolean.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1489/buggy-version/app.src.main.java.org.assistant.sigma.model.migrations.Migration.java", "BodyUseAPI": ["io.realm.RealmSchema.get(java.lang.String)", "schema.get(\"ScheduledTransactionWeekly\").addField(java.lang.String,java.lang.Class)"], "Fixed commit": "58b4f80c8834f9be06265d6f85e298a6b4d499bc", "Url": "https://api.github.com/repos/DiganmeGiovanni/Sigma", "Date": "2017-10-18T04:33:41Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinkerpop.gremlin.java.GremlinPipeline<java.lang.Object, java.lang.Object>.count()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (verticesCount != 0) { bgraph.setVertexIdKey(GraphConfig.URI_PROPERTY); bgraph.setLoadingFromScratch(false); de.unima.dws.dbpediagraph.graphdb.GraphProvider.logger.info(\"There is an existing graph with {} vertices.\", verticesCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7230/buggy-version/src.main.java.de.unima.dws.dbpediagraph.graphdb.GraphProvider.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,long)"], "Fixed commit": "2f7253b2fe8f88e82a86d6794e9aaced9b2d6de5", "Url": "https://api.github.com/repos/bernhardschaefer/dbpedia-graph", "Date": "2013-08-21T10:38:44Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinkerpop.blueprints.GraphFactory.open(de.unima.dws.dbpediagraph.graphdb.GraphConfig.getInstance().getConfig())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (graph instanceof com.tinkerpop.blueprints.impls.neo4j.Neo4jGraph) { com.tinkerpop.blueprints.impls.neo4j.Neo4jGraph nGraph = ((com.tinkerpop.blueprints.impls.neo4j.Neo4jGraph) (graph)); nGraph.createKeyIndex(GraphConfig.URI_PROPERTY, com.tinkerpop.blueprints.Vertex.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7230/buggy-version/src.main.java.de.unima.dws.dbpediagraph.graphdb.GraphProvider.java", "BodyUseAPI": [], "Fixed commit": "2f7253b2fe8f88e82a86d6794e9aaced9b2d6de5", "Url": "https://api.github.com/repos/bernhardschaefer/dbpedia-graph", "Date": "2013-08-21T10:38:44Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.catrobat.catroid.formulaeditor.SensorHandler.gpsSensorAvailable()) { org.catrobat.catroid.formulaeditor.SensorHandler.instance.locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, org.catrobat.catroid.formulaeditor.SensorHandler.instance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7791/buggy-version/catroid.src.main.java.org.catrobat.catroid.formulaeditor.SensorHandler.java", "BodyUseAPI": [], "Fixed commit": "64e636050f97864fb8f86d81afac41bd5c6fa8ac", "Url": "https://api.github.com/repos/comeclarity/Catroid", "Date": "2016-08-22T12:49:51Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.catrobat.catroid.formulaeditor.SensorHandler.networkGpsAvailable()) { org.catrobat.catroid.formulaeditor.SensorHandler.instance.locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, org.catrobat.catroid.formulaeditor.SensorHandler.instance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7791/buggy-version/catroid.src.main.java.org.catrobat.catroid.formulaeditor.SensorHandler.java", "BodyUseAPI": [], "Fixed commit": "64e636050f97864fb8f86d81afac41bd5c6fa8ac", "Url": "https://api.github.com/repos/comeclarity/Catroid", "Date": "2016-08-22T12:49:51Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["no.ntnu.fp.g20.ServerConnection.receive()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (reply == null) return null; else { if (!(reply.startsWith(\"LOGIN OK\"))) return null; else { java.util.StringTokenizer parser = new java.util.StringTokenizer(reply); if (!(parser.nextToken().equals(\"LOGIN\"))) return null; if (!(parser.nextToken().equals(\"OK\"))) return null; int uid = java.lang.Integer.parseInt(parser.nextToken()); java.lang.String firstName = parser.nextToken(); java.lang.String lastName = parser.nextToken(); return new no.ntnu.fp.g20.User(uid, username, password, firstName, lastName); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5221/buggy-version/src.no.ntnu.fp.g20.ServerConnection.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "e566598bdd1747748dc2c6ffb3619b1969e85cd0", "Url": "https://api.github.com/repos/Jimtrim/FellesprosjektGruppe20", "Date": "2012-03-20T11:24:30Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(send((((\"LOGIN \" + username) + \" \") + password)))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5221/buggy-version/src.no.ntnu.fp.g20.ServerConnection.java", "BodyUseAPI": [], "Fixed commit": "e566598bdd1747748dc2c6ffb3619b1969e85cd0", "Url": "https://api.github.com/repos/Jimtrim/FellesprosjektGruppe20", "Date": "2012-03-20T11:24:30Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(connected)) if (!(connect())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5221/buggy-version/src.no.ntnu.fp.g20.ServerConnection.java", "BodyUseAPI": [], "Fixed commit": "e566598bdd1747748dc2c6ffb3619b1969e85cd0", "Url": "https://api.github.com/repos/Jimtrim/FellesprosjektGruppe20", "Date": "2012-03-20T11:24:30Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((member.getLastConsumedMessageIndex()) == null) { map.putNull(\"lastConsumedMessageIndex\"); }else { map.putInt(\"lastConsumedMessageIndex\", member.getLastConsumedMessageIndex().intValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4112/buggy-version/android.src.main.java.com.bradbumbalough.RCTTwilioIPMessaging.RCTConvert.java", "BodyUseAPI": ["com.facebook.react.bridge.WritableMap.putInt(java.lang.String,member.getLastConsumedMessageIndex().intValue())", "com.twilio.ipmessaging.Member.getLastConsumedMessageIndex()", "member.getLastConsumedMessageIndex().intValue()"], "Fixed commit": "b5b71508d5bfd1deb65d1939fe48670e2da5bdae", "Url": "https://api.github.com/repos/ccm-innovation/react-native-twilio-ip-messaging", "Date": "2016-07-18T13:07:41Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerName == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4041/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Utils.java", "BodyUseAPI": [], "Fixed commit": "1a38cbb11640f22b7673df76affef6628e96b951", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-04-06T23:17:36Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buildName) != null) { buildInfo.setBuildName(buildName); }else { buildInfo.setBuildName(apkFileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5117/buggy-version/android-maven-plugin.src.main.java.com.photon.maven.plugins.android.standalonemojos.UpdateBuildInfoMojo.java", "BodyUseAPI": [], "Fixed commit": "2ce46c1e43cd5b9be8fb389ddf01b9f09c1fce51", "Url": "https://api.github.com/repos/photon-infotech/plugins", "Date": "2013-06-12T14:55:33Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buildNumber) != null) buildNo = java.lang.Integer.parseInt(buildNumber);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5117/buggy-version/android-maven-plugin.src.main.java.com.photon.maven.plugins.android.standalonemojos.UpdateBuildInfoMojo.java", "BodyUseAPI": [], "Fixed commit": "2ce46c1e43cd5b9be8fb389ddf01b9f09c1fce51", "Url": "https://api.github.com/repos/photon-infotech/plugins", "Date": "2013-06-12T14:55:33Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (buildNo > 0) { buildInfo.setBuildNo(buildNo); }else { buildInfo.setBuildNo(nextBuildNo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5117/buggy-version/android-maven-plugin.src.main.java.com.photon.maven.plugins.android.standalonemojos.UpdateBuildInfoMojo.java", "BodyUseAPI": ["com.photon.phresco.commons.model.BuildInfo.setBuildNo(int)"], "Fixed commit": "2ce46c1e43cd5b9be8fb389ddf01b9f09c1fce51", "Url": "https://api.github.com/repos/photon-infotech/plugins", "Date": "2013-06-12T14:55:33Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mIndex) < 0) { mIndex = ru.neverdark.phototools.utils.evcalculator.EvCalculator.INVALID_INDEX; }else { (mIndex)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1741/buggy-version/src.ru.neverdark.phototools.utils.evcalculator.EvCalculator.java", "BodyUseAPI": [], "Fixed commit": "32eb7b1f748bdd40bf54179f870eb39b37180938", "Url": "https://api.github.com/repos/yankovskiy/PhotoTools", "Date": "2014-02-25T21:46:23Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mangaError)) { de.keyboardsurfer.android.widget.crouton.Crouton.makeText(this, R.string.crouton_Manga_Sync_error, Style.ALERT).show(); mangaError = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1322/buggy-version/Atarashii.src.net.somethingdreadful.MAL.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "d449d77151ca2c307d0c0a4d1280917bf1f71f7c", "Url": "https://api.github.com/repos/AnimaSA/Atarashii", "Date": "2014-02-28T15:10:18Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(animeError)) { de.keyboardsurfer.android.widget.crouton.Crouton.makeText(this, R.string.crouton_Anime_Sync_error, Style.ALERT).show(); animeError = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1322/buggy-version/Atarashii.src.net.somethingdreadful.MAL.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "d449d77151ca2c307d0c0a4d1280917bf1f71f7c", "Url": "https://api.github.com/repos/AnimaSA/Atarashii", "Date": "2014-02-28T15:10:18Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FileFilter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fileList == null) { return null; }else { return fileList[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1288/buggy-version/src.main.java.com.tibco.bw.maven.plugin.utils.FileUtilsProject.java", "BodyUseAPI": [], "Fixed commit": "b87ef2e069a7c6e7c2f0560fe7cc34862db8555e", "Url": "https://api.github.com/repos/Tantino/bw6-maven-plugin-resource", "Date": "2017-12-21T11:03:53Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.tibco.bw.maven.plugin.utils.FileUtilsProject.getApplicationMetaInf(projectBasedir)) == null) { getLog().info(\"bwresourceImport: Skip Import properties\"); }else if ((com.tibco.bw.maven.plugin.utils.FileUtilsProject.getApplicationMSrcResources(projectBasedir)) == null) { getLog().info(\"bwresourceImport: Skip Import properties.RESOURCE Path(src/resources) not exists.\"); }else { getLog().info(((\"bwresourceImport: Skip Import properties.file properties \" + (propertyfile)) + \" not exists.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1288/buggy-version/src.main.java.com.tibco.bw.maven.plugin.application.BWEARResourceImportMojo.java", "BodyUseAPI": ["com.tibco.bw.maven.plugin.utils.FileUtilsProject.getApplicationMSrcResources(java.io.File)"], "Fixed commit": "b87ef2e069a7c6e7c2f0560fe7cc34862db8555e", "Url": "https://api.github.com/repos/Tantino/bw6-maven-plugin-resource", "Date": "2017-12-21T11:03:53Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prefix == null) || (prefix.isEmpty())) { qname = new org.exist.dom.QName(javax.xml.XMLConstants.XMLNS_ATTRIBUTE, uri); }else { qname = new org.exist.dom.QName(prefix, uri, javax.xml.XMLConstants.XMLNS_ATTRIBUTE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/7744/buggy-version/src.org.exist.dom.memtree.MemTreeBuilder.java", "BodyUseAPI": [], "Fixed commit": "ec4ac1fc98babbf90a49c8259f7213c0273b802d", "Url": "https://api.github.com/repos/RemiKoutcherawy/exist", "Date": "2017-11-29T01:56:39Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isDormancyTrackingActive == null) { this.isDormancyTrackingActive = java.lang.Boolean.FALSE; }else { this.isDormancyTrackingActive = isDormancyTrackingActive; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5724/buggy-version/fineract-provider.src.main.java.org.apache.fineract.portfolio.savings.domain.SavingsProduct.java", "BodyUseAPI": [], "Fixed commit": "f2251223bff2b3b45863f0a9c8a776330e81479e", "Url": "https://api.github.com/repos/Musoni/fineract", "Date": "2016-06-22T01:50:23Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 24) { uri = android.support.v4.content.FileProvider.getUriForFile(context, ((context.getPackageName()) + \".fileprovider\"), new java.io.File(StrFile)); }else { uri = android.net.Uri.fromFile(new java.io.File(StrFile)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2311/buggy-version/app.src.main.java.com.puti.education.appupdate.AppUpdateUtil.java", "BodyUseAPI": [], "Fixed commit": "80b68a1640702103477d7158d672bcce8f977758", "Url": "https://api.github.com/repos/bearLei/5AMaster", "Date": "2017-12-01T06:50:07Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((((stubParent instanceof net.masterthought.dlanguage.stubs.types.DLanguageConstructorStub) || (stubParent instanceof net.masterthought.dlanguage.stubs.types.DLanguageSharedStaticConstructorStub)) || (stubParent instanceof net.masterthought.dlanguage.stubs.types.DLanguageStaticConstructorStub)) || (stubParent instanceof net.masterthought.dlanguage.stubs.types.DLanguageDestructorStub)) || (stubParent instanceof net.masterthought.dlanguage.stubs.types.DLanguageSharedStaticDestructorStub)) || (stubParent instanceof net.masterthought.dlanguage.stubs.types.DLanguageStaticDestructorStub)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5176/buggy-version/src.main.java.net.masterthought.dlanguage.stubs.types.DNamedStubElementType.java", "BodyUseAPI": [], "Fixed commit": "b788d7c33c3f425b1dddab154c5b37a219d2e914", "Url": "https://api.github.com/repos/intellij-dlanguage/intellij-dlanguage", "Date": "2017-06-17T23:47:58Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((stub instanceof net.masterthought.dlanguage.stubs.types.DLanguageParameterStub) || (stub instanceof net.masterthought.dlanguage.stubs.types.DLanguageForeachTypeStub)) || (stub instanceof net.masterthought.dlanguage.stubs.types.DLanguageTemplateParameterStub)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5176/buggy-version/src.main.java.net.masterthought.dlanguage.stubs.types.DNamedStubElementType.java", "BodyUseAPI": [], "Fixed commit": "b788d7c33c3f425b1dddab154c5b37a219d2e914", "Url": "https://api.github.com/repos/intellij-dlanguage/intellij-dlanguage", "Date": "2017-06-17T23:47:58Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attributeType == (AttributeType.ATTR_TYPE_ID)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/6283/buggy-version/src.main.org.deidentifier.arx.DataHandleOutput.java", "BodyUseAPI": [], "Fixed commit": "7c995f981ce4cb341614fb26a4888cfd6b98d35d", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2013-10-06T18:51:39Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFlattened) { return buildInitCodeViewFlattened(context, rootNode); }else { return buildInitCodeViewRequestObject(context, rootNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1544/buggy-version/src.main.java.com.google.api.codegen.transformer.InitCodeTransformer.java", "BodyUseAPI": [], "Fixed commit": "0cd5319b90dc046ff3c806c81fe54eb93cd9e3e8", "Url": "https://api.github.com/repos/shinfan/toolkit", "Date": "2016-10-10T18:25:56Z"},
{"Line": "=>995", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.media.AudioManager.requestAudioFocus(ch.blinkenlights.android.vanilla.PlaybackService,AudioManager.STREAM_MUSIC,AudioManager.AUDIOFOCUS_GAIN)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result != (android.media.AudioManager.AUDIOFOCUS_REQUEST_GRANTED)) { unsetFlag(ch.blinkenlights.android.vanilla.PlaybackService.FLAG_PLAYING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8953/buggy-version/src.ch.blinkenlights.android.vanilla.PlaybackService.java", "BodyUseAPI": [], "Fixed commit": "ddf29c92afb8e22011b00446f01d182f9ef5e99e", "Url": "https://api.github.com/repos/vanilla-music/vanilla", "Date": "2016-09-09T15:55:33Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((model) != null) && ((model.getFeatureProject().getFeatureModel().getFeature(name).getColorList()) != null)) { de.ovgu.featureide.fm.core.Feature feature = model.getFeatureProject().getFeatureModel().getFeature(name); if ((feature.getColorList()) != null) { return model.getFeatureProject().getFeatureModel().getFeature(name).getColorList().getColor(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/2682/buggy-version/plugins.de.ovgu.featureide.core.src.de.ovgu.featureide.core.fstmodel.FSTFeature.java", "BodyUseAPI": ["model.getFeatureProject().getFeatureModel()", "model.getFeatureProject().getFeatureModel().getFeature(name).getColorList()", "model.getFeatureProject().getFeatureModel().getFeature(java.lang.String)", "de.ovgu.featureide.core.fstmodel.FSTModel.getFeatureProject()", "model.getFeatureProject().getFeatureModel()", "de.ovgu.featureide.core.fstmodel.FSTModel.getFeatureProject()", "model.getFeatureProject().getFeatureModel().getFeature(java.lang.String)", "model.getFeatureProject().getFeatureModel().getFeature(name).getColorList().getColor()"], "Fixed commit": "f5130ada72567718fd7b5f3d41506847ee5f838c", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2015-08-21T12:51:08Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (objects == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1428/buggy-version/app.src.main.java.com.clothapp.upload.InfoListAdapter.java", "BodyUseAPI": [], "Fixed commit": "ab353717cba34f5f11c715c52d85cc59666ce643", "Url": "https://api.github.com/repos/ClothAppProject/ClothAppAndroid", "Date": "2016-03-07T22:47:22Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zoodb.jdo.internal.query.QueryTerm.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((qVal != (QueryParser.NULL)) && ((((op) == (org.zoodb.jdo.internal.query.QueryParser.COMP_OP.NE)) || ((op) == (org.zoodb.jdo.internal.query.QueryParser.COMP_OP.LE))) || ((op) == (org.zoodb.jdo.internal.query.QueryParser.COMP_OP.L)))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3954/buggy-version/src.org.zoodb.jdo.internal.query.QueryTerm.java", "BodyUseAPI": [], "Fixed commit": "99112294190e901e7ce3e026c1c86aeef2898bbb", "Url": "https://api.github.com/repos/tzaeschke/zoodb", "Date": "2013-09-18T14:35:41Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zoodb.jdo.internal.query.QueryTerm.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((qVal == (QueryParser.NULL)) && ((((op) == (org.zoodb.jdo.internal.query.QueryParser.COMP_OP.EQ)) || ((op) == (org.zoodb.jdo.internal.query.QueryParser.COMP_OP.LE))) || ((op) == (org.zoodb.jdo.internal.query.QueryParser.COMP_OP.AE)))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3954/buggy-version/src.org.zoodb.jdo.internal.query.QueryTerm.java", "BodyUseAPI": [], "Fixed commit": "99112294190e901e7ce3e026c1c86aeef2898bbb", "Url": "https://api.github.com/repos/tzaeschke/zoodb", "Date": "2013-09-18T14:35:41Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((op) == (org.zoodb.jdo.internal.query.QueryParser.COMP_OP.NE)) || ((op) == (org.zoodb.jdo.internal.query.QueryParser.COMP_OP.A))) || ((op) == (org.zoodb.jdo.internal.query.QueryParser.COMP_OP.AE))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3954/buggy-version/src.org.zoodb.jdo.internal.query.QueryTerm.java", "BodyUseAPI": [], "Fixed commit": "99112294190e901e7ce3e026c1c86aeef2898bbb", "Url": "https://api.github.com/repos/tzaeschke/zoodb", "Date": "2013-09-18T14:35:41Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sun.tools.javac.util.Options.instance(com.sun.tools.javac.util.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rawOptions instanceof lombok.javac.LombokOptions) return ((lombok.javac.LombokOptions) (rawOptions));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/8841/buggy-version/src.delombok.lombok.delombok.LombokOptionsFactory.java", "BodyUseAPI": [], "Fixed commit": "7b3d34631ea959354d56368023d296e228a38f4d", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2013-12-04T06:14:56Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((id == null) || (id.isEmpty())) id = telephonyManager.getDeviceId();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1461/buggy-version/app.src.main.java.chau.utils.DeviceUtil.java", "BodyUseAPI": [], "Fixed commit": "3324e848e229b159e8ccac1622fc010bf66f9995", "Url": "https://api.github.com/repos/sukhoi344/AndroidUtils", "Date": "2014-12-31T16:22:35Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dir == null) { return com.nec.congenio.ConfigProperties.getLibDefs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1457/buggy-version/src.main.java.com.nec.congenio.ConfigProperties.java", "BodyUseAPI": [], "Fixed commit": "c030e79e3712bdff68056f3d3d9ed439985e7e75", "Url": "https://api.github.com/repos/tatemura/congenio", "Date": "2016-03-25T19:40:51Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sawyerharris.gravitygame.manager.LevelManager.getCustomLevels()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (index == (levelList.size())) { Gdx.input.getTextInput(listener, \"Enter level name\", \"\", \"\"); }else { com.sawyerharris.gravitygame.game.Level level = levelList.get(index); Gdx.input.getTextInput(listener, \"Enter level name\", level.getName(), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/4148/buggy-version/core.src.com.sawyerharris.gravitygame.screen.MenuScreen.java", "BodyUseAPI": ["java.util.ArrayList<com.sawyerharris.gravitygame.game.Level>.get(int)"], "Fixed commit": "f68f1d2d7b965b2f2ecb024f390f5b1aff0a8bdd", "Url": "https://api.github.com/repos/Sawrr/gravity-game", "Date": "2016-08-03T02:34:39Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mWeightEditText.getText().toString().trim()", "mBreedEditText.getText().toString().trim()", "mNameEditText.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((((mCurrentPetUri) == null) && (android.text.TextUtils.isEmpty(nameString))) && (android.text.TextUtils.isEmpty(breedString))) && (android.text.TextUtils.isEmpty(weightString))) && ((mGender) == (com.example.android.pets.data.PetContract.PetEntry.GENDER_UNKNOWN))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1349/buggy-version/app.src.main.java.com.example.android.pets.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "29b8f657b7c75a4d2352ba46dd4fdaea918770cd", "Url": "https://api.github.com/repos/danielhertenstein/Pets", "Date": "2017-11-28T14:16:37Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((value.length) < (md5Sum.length)) decal = (md5Sum.length) - (value.length); else from = (value.length) - (md5Sum.length);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/1193/buggy-version/fake-starteam.src.com.starbase.util.MD5.java", "BodyUseAPI": [], "Fixed commit": "5d021c8c9ff6a1b9970c62a7fbaeed3ccabb9cbc", "Url": "https://api.github.com/repos/planestraveler/git-starteam", "Date": "2012-12-12T02:44:33Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nr_of_frequency_without_spikes > 0) { average_frequency_without_spikes /= nr_of_frequency_without_spikes; return average_frequency_without_spikes; }else { return average_frequency_truncated; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3132/buggy-version/app.src.main.java.de.madpage.bicyclekaraoke.SoundMeter.java", "BodyUseAPI": [], "Fixed commit": "8465621602bff1b04a0aed24c37a8900867fee96", "Url": "https://api.github.com/repos/mdicke2s/BicycleKaraoke", "Date": "2016-09-07T17:32:02Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((stdev_frequencies < 10.0) || (stdev_frequencies == (java.lang.Double.NaN))) { return average_frequency_truncated; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/3132/buggy-version/app.src.main.java.de.madpage.bicyclekaraoke.SoundMeter.java", "BodyUseAPI": [], "Fixed commit": "8465621602bff1b04a0aed24c37a8900867fee96", "Url": "https://api.github.com/repos/mdicke2s/BicycleKaraoke", "Date": "2016-09-07T17:32:02Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageIndex) != 6) { images.get(imageIndex).setClickable(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/949/buggy-version/TheHunt.app.src.main.java.com.example.lwilcox.thehunt.VideoFragment.java", "BodyUseAPI": [], "Fixed commit": "db8c59700ce365d433e78e744359e7c14a0360c2", "Url": "https://api.github.com/repos/nmohamed/The-Hunt", "Date": "2015-10-26T00:33:10Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (direction.equals(Direction.OUT)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/5047/buggy-version/src.ace.ucv.petri_net.Arc.java", "BodyUseAPI": [], "Fixed commit": "3a334ab212ff09fde710b8ab07bd27e9bdd6c073", "Url": "https://api.github.com/repos/AlexTatulescu/petri_networks", "Date": "2017-12-01T10:42:42Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.M)) { mdl.sinlov.andorid.device_mark.DeviceIDFactory.wifiMac = mdl.sinlov.andorid.device_mark.DeviceIDFactory.getMacAddressByIP(); if (android.text.TextUtils.isEmpty(mdl.sinlov.andorid.device_mark.DeviceIDFactory.wifiMac)) { mdl.sinlov.andorid.device_mark.DeviceIDFactory.wifiMac = mdl.sinlov.andorid.device_mark.DeviceIDFactory.getDevicesHardwareAddress(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V30/725/buggy-version/device_mark.src.main.java.mdl.sinlov.andorid.device_mark.DeviceIDFactory.java", "BodyUseAPI": [], "Fixed commit": "7aba0007cf91e21fc8322c29ff62a33154f2bf9b", "Url": "https://api.github.com/repos/MDL-Sinlov/MDL_Android-Device-Mark", "Date": "2017-09-05T07:46:26Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (canvasWidth == (ic.getWidth())) { ic.zoomOut(0, 0); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8993/buggy-version/src.main.java.inra.ijpb.plugins.MorphologicalSegmentation.java", "BodyUseAPI": [], "Fixed commit": "d49b537bad02b050e3fe6e9beb5aa77bf8ceaa2a", "Url": "https://api.github.com/repos/ijpb/MorphoLibJ", "Date": "2017-08-31T16:57:48Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (canvasWidth == (ic.getWidth())) { ic.zoomOut(0, 0); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8993/buggy-version/src.main.java.inra.ijpb.plugins.InteractiveMarkerControlledWatershed.java", "BodyUseAPI": [], "Fixed commit": "d49b537bad02b050e3fe6e9beb5aa77bf8ceaa2a", "Url": "https://api.github.com/repos/ijpb/MorphoLibJ", "Date": "2017-08-31T16:57:48Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (canvasWidth == (ic.getWidth())) { ic.zoomOut(0, 0); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8993/buggy-version/src.main.java.inra.ijpb.plugins.LabelEdition.java", "BodyUseAPI": [], "Fixed commit": "d49b537bad02b050e3fe6e9beb5aa77bf8ceaa2a", "Url": "https://api.github.com/repos/ijpb/MorphoLibJ", "Date": "2017-08-31T16:57:48Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { mCurrentIndex = savedInstanceState.getInt(cn.jiaoyangcn.geoquiz.QuizActivity.KEY_INDEX, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2433/buggy-version/app.src.main.java.cn.jiaoyangcn.geoquiz.QuizActivity.java", "BodyUseAPI": ["android.os.Bundle.getInt(java.lang.String,int)"], "Fixed commit": "92f6eba95f445fd4ee980d609cc0d369261aa497", "Url": "https://api.github.com/repos/life1st/GeoQuiz", "Date": "2016-11-10T11:05:28Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.krka.kahlua.stdlib.BaseLib.rawTostring(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (valueStr == null) { se.krka.kahlua.stdlib.BaseLib.fail(((\"bad value at index \" + i) + \": expected string or number\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1164/buggy-version/src.se.krka.kahlua.stdlib.TableLib.java", "BodyUseAPI": [], "Fixed commit": "82b28c255fcbc544cd686e90f5493cc112b164be", "Url": "https://api.github.com/repos/cosmicdrift/virtlua", "Date": "2015-02-02T01:26:25Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sLine == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/142/buggy-version/src-pos.com.openbravo.pos.printer.DeviceTicket.java", "BodyUseAPI": [], "Fixed commit": "75e8806e01f4703243b047212bd1d1bc47e70db3", "Url": "https://api.github.com/repos/omidp/iranOpenbravoPOS", "Date": "2013-11-14T17:10:25Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sLine == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/142/buggy-version/src-pos.com.openbravo.pos.printer.DeviceTicket.java", "BodyUseAPI": [], "Fixed commit": "75e8806e01f4703243b047212bd1d1bc47e70db3", "Url": "https://api.github.com/repos/omidp/iranOpenbravoPOS", "Date": "2013-11-14T17:10:25Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sLine == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/142/buggy-version/src-pos.com.openbravo.pos.printer.DeviceTicket.java", "BodyUseAPI": [], "Fixed commit": "75e8806e01f4703243b047212bd1d1bc47e70db3", "Url": "https://api.github.com/repos/omidp/iranOpenbravoPOS", "Date": "2013-11-14T17:10:25Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sLine == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/142/buggy-version/src-pos.com.openbravo.pos.printer.DeviceTicket.java", "BodyUseAPI": [], "Fixed commit": "75e8806e01f4703243b047212bd1d1bc47e70db3", "Url": "https://api.github.com/repos/omidp/iranOpenbravoPOS", "Date": "2013-11-14T17:10:25Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.delfin.jarexp.frame.JarTree.isExist(node, f))) { node.add(child); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1597/buggy-version/src.com.delfin.jarexp.frame.JarTree.java", "BodyUseAPI": ["com.delfin.jarexp.frame.JarNode.add(com.delfin.jarexp.frame.JarNode)"], "Fixed commit": "c7afc9a5901df250e5f89ef5725c1c2cbcf453b6", "Url": "https://api.github.com/repos/okiktev/jarexp", "Date": "2017-03-02T11:12:43Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSuccessful) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3924/buggy-version/Hestia.app.src.main.java.hestia.UI.dialogs.ChangeNameDialog.java", "BodyUseAPI": [], "Fixed commit": "27d8a7d3d7734bed74552d3cdea9dd48378bbd6d", "Url": "https://api.github.com/repos/RUGSoftEng/2017-Hestia-Client", "Date": "2017-05-26T11:31:51Z"},
{"Line": "=>1056", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.filterWindow) != null) { this.filterWindow.clearFilterSelections(); this.filterWindow.applyFilters(sdf_manager.HibernateUtil.getSessionFactory().openSession()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1009/buggy-version/src.main.java.sdf_manager.SDFEditor.java", "BodyUseAPI": [], "Fixed commit": "f6f97cf4ceb9034241601ef7f4b51d0215518b68", "Url": "https://api.github.com/repos/eea/eionet.nat2000.sdfmanager", "Date": "2014-06-04T14:52:09Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (parent instanceof sdf_manager.SDFEditor) { this.filterWindow = ((sdf_manager.SDFFilter) (parent)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1009/buggy-version/src.main.java.sdf_manager.SDFEditor.java", "BodyUseAPI": [], "Fixed commit": "f6f97cf4ceb9034241601ef7f4b51d0215518b68", "Url": "https://api.github.com/repos/eea/eionet.nat2000.sdfmanager", "Date": "2014-06-04T14:52:09Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset < 0) || (count < 0)) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8345/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "a18f9a5d1d46d52230f25673c538ed9b20eb53a9", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:34Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset < 0) || (count < 0)) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8345/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "a18f9a5d1d46d52230f25673c538ed9b20eb53a9", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:34Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUIComponent(\"shoppingCartForm\")) != null) { updateList.add(\"shoppingCartForm\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7468/buggy-version/PortalBase.src.com.web.bb.retail.module.loginpanel.LoginPanelBB.java", "BodyUseAPI": [], "Fixed commit": "7d2bbd3fb310b9581bbb925dded24e2d1ce99593", "Url": "https://api.github.com/repos/santlalvishwakarma/RootBranch", "Date": "2017-04-02T18:39:55Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUIComponent(\"shoppingCartForm\")) != null) { updateList.add(\"shoppingCartForm\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7468/buggy-version/PortalBase.src.com.web.bb.retail.module.loginpanel.LoginPanelBB.java", "BodyUseAPI": [], "Fixed commit": "7d2bbd3fb310b9581bbb925dded24e2d1ce99593", "Url": "https://api.github.com/repos/santlalvishwakarma/RootBranch", "Date": "2017-04-02T18:39:55Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUIComponent(\"readMoreForm\")) != null) { updateList.add(\"readMoreForm\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7468/buggy-version/PortalBase.src.com.web.bb.retail.module.loginpanel.LoginPanelBB.java", "BodyUseAPI": [], "Fixed commit": "7d2bbd3fb310b9581bbb925dded24e2d1ce99593", "Url": "https://api.github.com/repos/santlalvishwakarma/RootBranch", "Date": "2017-04-02T18:39:55Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUIComponent(\"readMoreForm\")) != null) { updateList.add(\"readMoreForm\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7468/buggy-version/PortalBase.src.com.web.bb.retail.module.loginpanel.LoginPanelBB.java", "BodyUseAPI": [], "Fixed commit": "7d2bbd3fb310b9581bbb925dded24e2d1ce99593", "Url": "https://api.github.com/repos/santlalvishwakarma/RootBranch", "Date": "2017-04-02T18:39:55Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUIComponent(\"homeForm\")) != null) { updateList.add(\"homeForm\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7468/buggy-version/PortalBase.src.com.web.bb.retail.module.loginpanel.LoginPanelBB.java", "BodyUseAPI": [], "Fixed commit": "7d2bbd3fb310b9581bbb925dded24e2d1ce99593", "Url": "https://api.github.com/repos/santlalvishwakarma/RootBranch", "Date": "2017-04-02T18:39:55Z"},
{"Line": "=>578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUIComponent(\"paymentForm\")) != null) { updateList.add(\"paymentForm\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7468/buggy-version/PortalBase.src.com.web.bb.retail.module.loginpanel.LoginPanelBB.java", "BodyUseAPI": [], "Fixed commit": "7d2bbd3fb310b9581bbb925dded24e2d1ce99593", "Url": "https://api.github.com/repos/santlalvishwakarma/RootBranch", "Date": "2017-04-02T18:39:55Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUIComponent(\"homeForm\")) != null) { updateList.add(\"homeForm\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7468/buggy-version/PortalBase.src.com.web.bb.retail.module.loginpanel.LoginPanelBB.java", "BodyUseAPI": [], "Fixed commit": "7d2bbd3fb310b9581bbb925dded24e2d1ce99593", "Url": "https://api.github.com/repos/santlalvishwakarma/RootBranch", "Date": "2017-04-02T18:39:55Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUIComponent(\"browseProductsForm\")) != null) { updateList.add(\"browseProductsForm\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7468/buggy-version/PortalBase.src.com.web.bb.retail.module.loginpanel.LoginPanelBB.java", "BodyUseAPI": [], "Fixed commit": "7d2bbd3fb310b9581bbb925dded24e2d1ce99593", "Url": "https://api.github.com/repos/santlalvishwakarma/RootBranch", "Date": "2017-04-02T18:39:55Z"},
{"Line": "=>566", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUIComponent(\"browseProductsForm\")) != null) { updateList.add(\"browseProductsForm\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7468/buggy-version/PortalBase.src.com.web.bb.retail.module.loginpanel.LoginPanelBB.java", "BodyUseAPI": [], "Fixed commit": "7d2bbd3fb310b9581bbb925dded24e2d1ce99593", "Url": "https://api.github.com/repos/santlalvishwakarma/RootBranch", "Date": "2017-04-02T18:39:55Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"0\".equals(lastpart)) contentRemove(p); else contentRemove(currentRewritePath);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3476/buggy-version/src.netmash.forest.ObjectMash.java", "BodyUseAPI": [], "Fixed commit": "aa5840b1a49f94114a5fc0d83af4cc342c2ebf26", "Url": "https://api.github.com/repos/DuncanCragg/NetMash", "Date": "2012-11-29T09:21:02Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.length()) > 0) { context.write(new org.apache.hadoop.io.Text(s), one); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2649/buggy-version/src.main.java.com.alectenharmsel.research.SrcTokMapper.java", "BodyUseAPI": ["Mapper.Context.write(org.apache.hadoop.io.Text,org.apache.hadoop.io.LongWritable)"], "Fixed commit": "11e34b02a07e24e5ac0718e84069f439c3732b8d", "Url": "https://api.github.com/repos/trozamon/hadoop-examples", "Date": "2014-11-07T17:06:58Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((oldHandler.getErrorManager()) != null) { newConsoleHandler.setErrorManager(oldHandler.getErrorManager()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5146/buggy-version/src.main.java.it.albertus.jface.console.ScrollableConsole.java", "BodyUseAPI": ["java.util.logging.ConsoleHandler.setErrorManager(java.util.logging.ErrorManager)", "java.util.logging.Handler.getErrorManager()"], "Fixed commit": "80c4c13653a1e5beee8709182ef27edcc6d53ded", "Url": "https://api.github.com/repos/Albertus82/JFaceUtils", "Date": "2017-02-14T15:29:12Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((oldHandler.getFormatter()) != null) { newConsoleHandler.setFormatter(oldHandler.getFormatter()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5146/buggy-version/src.main.java.it.albertus.jface.console.ScrollableConsole.java", "BodyUseAPI": ["java.util.logging.ConsoleHandler.setFormatter(java.util.logging.Formatter)", "java.util.logging.Handler.getFormatter()"], "Fixed commit": "80c4c13653a1e5beee8709182ef27edcc6d53ded", "Url": "https://api.github.com/repos/Albertus82/JFaceUtils", "Date": "2017-02-14T15:29:12Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(fields[0])) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1882/buggy-version/gitools-core.src.main.java.org.gitools.core.persistence.formats.matrix.AnnotationMatrixFormat.java", "BodyUseAPI": [], "Fixed commit": "dcf993f96b83b0783d9c2bcb5b6d8a6707a9b0f2", "Url": "https://api.github.com/repos/gitools/gitools", "Date": "2013-05-23T05:54:17Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.body().getErrcode()) == (com.qhiehome.ihome.activity.ParkingListActivity.ERROR_CODE_INSUFFICIENT)) { android.content.Intent intent = new android.content.Intent(this, com.qhiehome.ihome.activity.PayActivity.class); intent.putExtra(\"fee\", mGuaranteeFee); intent.putExtra(\"payState\", Constant.PAY_STATE_GUARANTEE); intent.putExtra(\"orderId\", orderId); com.qhiehome.ihome.util.SharedPreferenceUtil.setLong(mContext, Constant.ORDER_CREATE_TIME, java.lang.System.currentTimeMillis()); com.qhiehome.ihome.util.SharedPreferenceUtil.setInt(mContext, Constant.FREE_CANCELLATION_TIME, FREE_CANCELLATION_TIME); startActivity(intent); com.qhiehome.ihome.util.ToastUtil.showToast(mContext, \"\u9884\u7ea6\u6210\u529f\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4722/buggy-version/app.src.main.java.com.qhiehome.ihome.activity.ParkingListActivity.java", "BodyUseAPI": [], "Fixed commit": "0e2c3db72688068def8b0d9b323bbf3e23eb84a2", "Url": "https://api.github.com/repos/yuema110/ihome", "Date": "2017-09-18T02:46:02Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.unAckRespMsgService) == null) { throw new java.lang.IllegalStateException(\"unAckRespMsgService can not be null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4538/buggy-version/src.com.sf.heros.im.timingwheel.UnAckRespMsgFixIntervalTimingWheel.java", "BodyUseAPI": [], "Fixed commit": "84255e1d9f5547a0f7df6516896fc23755a28c42", "Url": "https://api.github.com/repos/zhiying8710/app_im", "Date": "2014-10-20T09:05:38Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.opengamma.web.server.push.analytics.ValueTypes.getTypeForValueName(valueSpec.getValueName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (type != null) { return getFormatterForType(type); }else { return getFormatterForType(value.getClass()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1989/buggy-version/projects.OG-Web.src.com.opengamma.web.server.push.analytics.formatting.ResultsFormatter.java", "BodyUseAPI": ["com.opengamma.web.server.push.analytics.formatting.ResultsFormatter.getFormatterForType(java.lang.Class<?>)"], "Fixed commit": "23d56fe6b1864f02c6bf579f82c59f1df3580bc7", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2012-07-25T15:03:12Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.view.ViewPager.getCurrentItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == currItem) addIndicator(mIndicatorBackgroundResId, mAnimationOut); else addIndicator(mIndicatorUnselectedBackgroundResId, mAnimationIn);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3455/buggy-version/circleindicator.src.main.java.me.relex.circleindicator.CircleIndicator.java", "BodyUseAPI": [], "Fixed commit": "f447347cafce5e1ad29bb1e5dbfe70f33b0d3e80", "Url": "https://api.github.com/repos/MaTriXy/CircleIndicator", "Date": "2015-12-01T04:52:20Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) { java.lang.String book = data.getStringExtra(Constants.EXTRA_BOOK_OBJECT); if ((resultCode == (android.app.Activity.RESULT_OK)) && (requestCode == (Constants.BOOK_ADD))) { android.util.Log.d(com.bookpond.bookpond.MainActivity.TAG, (\"added book \" + book)); android.support.design.widget.Snackbar.make(mainView, \"Book added\", Snackbar.LENGTH_LONG).setAction(\"Action\", null).show(); }else if ((resultCode == (android.app.Activity.RESULT_OK)) && (requestCode == (Constants.BOOK_EDIT))) { android.util.Log.d(com.bookpond.bookpond.MainActivity.TAG, (\"edited book \" + book)); android.support.design.widget.Snackbar.make(mainView, \"Book edited\", Snackbar.LENGTH_LONG).setAction(\"Action\", null).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1913/buggy-version/app.src.main.java.com.bookpond.bookpond.MainActivity.java", "BodyUseAPI": ["android.content.Intent.getStringExtra(Constants.EXTRA_BOOK_OBJECT)"], "Fixed commit": "b55a8877d88d0eb0c20bb6b6240abe6788eace8a", "Url": "https://api.github.com/repos/Nicoli-Y/Book-Pond", "Date": "2016-09-22T09:08:00Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userInfo) != null) { userName = userInfo.optString(\"username\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5613/buggy-version/src.main.java.io.rocketchat.livechat.LiveChatAPI.java", "BodyUseAPI": [], "Fixed commit": "0d8bb88f5903863a1b60168fdcda15b1cd2dd796", "Url": "https://api.github.com/repos/sacOO7/Rocket.Chat.Java.SDK", "Date": "2017-07-17T12:39:05Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiElement.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (candidate.getName().equals(variableName)) { final com.intellij.psi.PsiElement parent = candidate.getParent(); if (parent instanceof com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.ConcatenationExpression) { this.inspectConcatenationContext(((com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.ConcatenationExpression) (parent))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5769/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.HostnameSubstitutionInspector.java", "BodyUseAPI": ["com.kalessil.phpStorm.phpInspectionsEA.inspectors.security.Variable.getParent()"], "Fixed commit": "e68063bc559e9a2a48dde513398eba9dd5d335e4", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2017-07-24T18:46:18Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (endLSN.get().equals(startLSN)) { return java.lang.Boolean.FALSE; }else com.orientechnologies.orient.server.distributed.impl.task.ODistributedServerLog.info(this, iManager.getLocalNodeName(), getNodeSource(), DIRECTION.OUT, \"Delta backup of database '%s' completed. range=%s-%s\", databaseName, startLSN, endLSN.get());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6158/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseDeltaTask.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicReference<com.orientechnologies.orient.core.storage.impl.local.paginated.wal.OLogSequenceNumber>.get()", "com.orientechnologies.orient.server.distributed.impl.task.ODistributedServerLog.info(com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseDeltaTask,iManager.getLocalNodeName(),getNodeSource(),DIRECTION.OUT,java.lang.String,java.lang.String,com.orientechnologies.orient.core.storage.impl.local.paginated.wal.OLogSequenceNumber,endLSN.get())"], "Fixed commit": "1083c79e63810dbafc9fee07f24654b22a5b7e65", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-08-08T14:02:46Z"},
{"Line": "=>993", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.storage.impl.local.OWriteAheadLog.end()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lsn.equals(endLsn)) { return endLsn; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6158/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.OAbstractPaginatedStorage.java", "BodyUseAPI": [], "Fixed commit": "1083c79e63810dbafc9fee07f24654b22a5b7e65", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-08-08T14:02:46Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((front.output.DrawPanel.wait) && (character.isFalling)) front.output.DrawPanel.wait = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6083/buggy-version/src.front.output.DrawPanel.java", "BodyUseAPI": [], "Fixed commit": "dd2d2d662e07bf74d6f1cda9adf2085f99cb4233", "Url": "https://api.github.com/repos/gallopinggoose6/CodeRun", "Date": "2017-10-23T23:00:02Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((results.size()) > 1) { java.util.Collections.sort(results); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8201/buggy-version/jtravis.src.main.java.fr.inria.spirals.jtravis.helpers.BuildHelper.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.List<fr.inria.spirals.jtravis.entities.Build>)"], "Fixed commit": "86f0e78e63d60dd86a8a0a835df77154c23ddb44", "Url": "https://api.github.com/repos/fermadeiral/repairnator", "Date": "2017-03-06T12:44:42Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.util.List<java.lang.Object>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rawRow.get(j)) != null) row[j] = rawRow.get(j).toString(); else row[j] = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3892/buggy-version/src.main.java.org.keedio.flume.source.SQLSourceHelper.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.List<java.lang.Object>.get(int)"], "Fixed commit": "fd13bc84384f173884a5f3b5af9c2af6183fce55", "Url": "https://api.github.com/repos/keedio/flume-ng-sql-source", "Date": "2015-05-27T16:34:04Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gameGrid.addTileAt(m, s.getGridX(), s.getGridY())) { gameGrid.addActor(m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/478/buggy-version/MacroMachine.core.src.com.derelictech.macromachine.util.Level.java", "BodyUseAPI": ["com.derelictech.macromachine.util.TileGrid.addActor(com.derelictech.macromachine.tiles.Material)"], "Fixed commit": "69829ff9add70cca09febbd0e9f2cb4ffde04b41", "Url": "https://api.github.com/repos/voxelv/MacroMachine", "Date": "2016-05-04T23:17:58Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gameGrid.addTileAt(m, s.getGridX(), s.getGridY())) { gameGrid.addActor(m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/478/buggy-version/MacroMachine.core.src.com.derelictech.macromachine.util.Level.java", "BodyUseAPI": ["com.derelictech.macromachine.util.TileGrid.addActor(com.derelictech.macromachine.tiles.Material)"], "Fixed commit": "69829ff9add70cca09febbd0e9f2cb4ffde04b41", "Url": "https://api.github.com/repos/voxelv/MacroMachine", "Date": "2016-05-04T23:17:58Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMagnifyingLayout) != null) { mMagnifyingLayout.invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5961/buggy-version/library.src.main.java.com.datayes.magnifying.MagnifyGlass.java", "BodyUseAPI": [], "Fixed commit": "1ec63b747c1ea23c4e526441307b20e277e8c4da", "Url": "https://api.github.com/repos/FridayLi/MagnifyingLayout", "Date": "2015-05-28T05:26:39Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LocalAreas.VertexArea.arrayToList(model.getCornerTable().getIndexNeighbors(vertex, model))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tmp.size()) <= 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2167/buggy-version/Comparison.src.LocalAreas.VertexArea.java", "BodyUseAPI": [], "Fixed commit": "0032343f9372f9120bef23e71b2493f1a212843a", "Url": "https://api.github.com/repos/ZueFe/Thesis", "Date": "2016-10-31T13:38:08Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7848/buggy-version/app.src.main.java.com.breadwallet.presenter.fragments.FragmentSend.java", "BodyUseAPI": [], "Fixed commit": "e62d81a93ca6a4ad4f390d90c0577233dee34312", "Url": "https://api.github.com/repos/breadwallet/breadwallet-android", "Date": "2017-04-02T21:14:58Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentById(R.id.fragment_container)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((fragment != null) && (fragment instanceof com.bacecek.lolkek.navigation.BackButtonListener)) { if ((slidingLayout.getPanelState()) == (SlidingUpPanelLayout.PanelState.EXPANDED)) { slidingLayout.setPanelState(SlidingUpPanelLayout.PanelState.ANCHORED); }else if ((slidingLayout.getPanelState()) == (SlidingUpPanelLayout.PanelState.ANCHORED)) { slidingLayout.setPanelState(SlidingUpPanelLayout.PanelState.COLLAPSED); }else { super.onBackPressed(); } }else { super.onBackPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3556/buggy-version/app.src.main.java.com.bacecek.lolkek.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "18d04ad5c188b1976ea61b0bf113d730c1da2739", "Url": "https://api.github.com/repos/bacecek/lolkek", "Date": "2017-08-12T14:30:27Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y < 0) { cy -= server.world.Chunk.size; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2863/buggy-version/src.server.world.Chunk.java", "BodyUseAPI": [], "Fixed commit": "f7fdc1b54cb242c03f483e0233a0d0b9c403a2f2", "Url": "https://api.github.com/repos/funkiben/GameServer", "Date": "2014-10-31T22:44:16Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x < 0) { cx -= server.world.Chunk.size; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2863/buggy-version/src.server.world.Chunk.java", "BodyUseAPI": [], "Fixed commit": "f7fdc1b54cb242c03f483e0233a0d0b9c403a2f2", "Url": "https://api.github.com/repos/funkiben/GameServer", "Date": "2014-10-31T22:44:16Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (info != null) { if ((getHostPkg().equals(info.packageName)) || (com.lody.virtual.helper.utils.ComponentUtils.isSystemApp(info.applicationInfo))) { return info; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/415/buggy-version/VirtualApp.lib.src.main.java.com.lody.virtual.client.hook.patchs.pm.GetServiceInfo.java", "BodyUseAPI": ["com.lody.virtual.helper.utils.ComponentUtils.isSystemApp(info.applicationInfo)", "getHostPkg().equals(info.packageName)"], "Fixed commit": "372f37c0c7c2fe5d984283b2720038bee23a6817", "Url": "https://api.github.com/repos/cqllang/VirtualApp", "Date": "2017-02-05T09:07:43Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lody.virtual.client.ipc.VPackageManager.get().getServiceInfo(android.content.ComponentName,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (info != null) { return info; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/415/buggy-version/VirtualApp.lib.src.main.java.com.lody.virtual.client.hook.patchs.pm.GetServiceInfo.java", "BodyUseAPI": [], "Fixed commit": "372f37c0c7c2fe5d984283b2720038bee23a6817", "Url": "https://api.github.com/repos/cqllang/VirtualApp", "Date": "2017-02-05T09:07:43Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) == null) { timer = new java.util.Timer(); timer.schedule(waveTask, 0, 10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1219/buggy-version/Libs.refresh.src.main.java.com.handmark.pulltorefresh.library.extras.WaveAnimationView.java", "BodyUseAPI": [], "Fixed commit": "f98388ced830d2fdfc72f292741f06a86b4650cc", "Url": "https://api.github.com/repos/alienjun/AJWaveRefreshForAndroid", "Date": "2015-10-23T09:29:02Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((waveTask) == null) { waveTask = new com.handmark.pulltorefresh.library.extras.WaveAnimationView.MyTimerTask(updateHandler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1219/buggy-version/Libs.refresh.src.main.java.com.handmark.pulltorefresh.library.extras.WaveAnimationView.java", "BodyUseAPI": [], "Fixed commit": "f98388ced830d2fdfc72f292741f06a86b4650cc", "Url": "https://api.github.com/repos/alienjun/AJWaveRefreshForAndroid", "Date": "2015-10-23T09:29:02Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) == null) { timer = new java.util.Timer(); timer.schedule(waveTask, 0, 10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1219/buggy-version/app.src.main.java.alienjun.com.demo.WaveAnimationView.java", "BodyUseAPI": [], "Fixed commit": "f98388ced830d2fdfc72f292741f06a86b4650cc", "Url": "https://api.github.com/repos/alienjun/AJWaveRefreshForAndroid", "Date": "2015-10-23T09:29:02Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((waveTask) == null) { waveTask = new alienjun.com.demo.WaveAnimationView.MyTimerTask(updateHandler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1219/buggy-version/app.src.main.java.alienjun.com.demo.WaveAnimationView.java", "BodyUseAPI": [], "Fixed commit": "f98388ced830d2fdfc72f292741f06a86b4650cc", "Url": "https://api.github.com/repos/alienjun/AJWaveRefreshForAndroid", "Date": "2015-10-23T09:29:02Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(mScreenValues.get(AlarmContract.AlarmEntry.COLUMN_ALARM_TIME))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((alarmTime.length()) == 2) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/410/buggy-version/app.src.main.java.com.example.benjaminlize.smilealarm.AlarmConverter.java", "BodyUseAPI": [], "Fixed commit": "507c7bb2728b505d1e05d3ce27520d05f82138a1", "Url": "https://api.github.com/repos/benjamin94/SmileAlarm", "Date": "2016-06-07T21:57:05Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.intermine.webservice.server.lists.ListMakerService.getNewListType(org.intermine.webservice.server.lists.ListInput)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (type != null) { addOutputInfo(org.intermine.webservice.server.lists.ListMakerService.LIST_TYPE_KEY, type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3123/buggy-version/intermine.web.main.src.org.intermine.webservice.server.lists.ListMakerService.java", "BodyUseAPI": ["org.intermine.webservice.server.lists.ListMakerService.addOutputInfo(java.lang.String,java.lang.String)"], "Fixed commit": "28453b30d3e633a5be07928c1696de0a72727507", "Url": "https://api.github.com/repos/danielabutano/intermine", "Date": "2017-05-05T09:21:46Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(datum.matches(\"^(?:(?:31(\\\\/|-|\\\\.)(?:0?[13578]|1[02]))\\\\1|(?:(?:29|30)(\\\\/|-|\\\\.)(?:0?[1,3-9]|1[0-2])\\\\2))(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$|^(?:29(\\\\/|-|\\\\.)0?2\\\\3(?:(?:(?:1[6-9]|[2-9]\\\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\\\d|2[0-8])(\\\\/|-|\\\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\\\4(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$\"))) { javax.swing.JOptionPane.showMessageDialog(null, \"Datum nije ispravno unesen\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5757/buggy-version/vozniPark.src.main.java.vozniPark.Controller.PrijavaPreuzetogVozilaController.java", "BodyUseAPI": [], "Fixed commit": "61df4e36688044be85bf29f8da643d76fd95dbd4", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/SI2015Tim7", "Date": "2016-05-21T11:41:05Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(vrijeme.matches(\"^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"))) { javax.swing.JOptionPane.showMessageDialog(null, \"Vrijeme nije ispravno uneseno\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5757/buggy-version/vozniPark.src.main.java.vozniPark.Controller.PrijavaPreuzetogVozilaController.java", "BodyUseAPI": [], "Fixed commit": "61df4e36688044be85bf29f8da643d76fd95dbd4", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/SI2015Tim7", "Date": "2016-05-21T11:41:05Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.AsyncPlayerChatEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(plugin.getContext().isAlreadyInATeam(player))) && ((player.getGameMode()) == (org.bukkit.GameMode.SPECTATOR))) { ev.setCancelled(true); for (org.bukkit.entity.Player play : plugin.getServer().getOnlinePlayers()) { play.sendMessage((((((((org.bukkit.ChatColor.GRAY) + \"[Spec] \") + (org.bukkit.ChatColor.RESET)) + \"<\") + (ev.getPlayer().getName())) + \"> \") + (ev.getMessage()))); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4953/buggy-version/src.taupegun.listeners.Global.java", "BodyUseAPI": ["taupegun.start.TaupeGunPlugin.getServer()", "plugin.getServer().getOnlinePlayers()"], "Fixed commit": "e310a78d785a1778ac658421fe551038bd53ccbb", "Url": "https://api.github.com/repos/LetMeR00t/TaupeGun-Minecraft", "Date": "2016-05-08T13:37:01Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.AsyncPlayerChatEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (plugin.getContext().isAlreadyInATeam(player)) { ev.setCancelled(true); taupegun.structures.Team team = plugin.getContext().getTeamOfPlayer(player); if (message.startsWith(\"!\")) { message = message.substring(1); plugin.getServer().broadcastMessage((((((((team.getColor()) + \"<\") + (player.getName())) + \">\") + (org.bukkit.ChatColor.RESET)) + \" \") + message)); }else { for (org.bukkit.entity.Player play : team.getPlayers()) { play.sendMessage((((((((team.getColor()) + \"<\") + (player.getName())) + \" -> team>\") + (org.bukkit.ChatColor.RESET)) + \" \") + message)); } } }else { ev.setFormat((((\"<\" + (ev.getPlayer().getName())) + \"> \") + (ev.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4953/buggy-version/src.taupegun.listeners.Global.java", "BodyUseAPI": ["plugin.getServer().broadcastMessage((((((((team.getColor()) + \"<\") + (player.getName())) + \">\") + (org.bukkit.ChatColor.RESET)) + \" \") + message))", "plugin.getContext().getTeamOfPlayer(org.bukkit.entity.Player)", "taupegun.start.TaupeGunPlugin.getServer()", "org.bukkit.entity.Player.getName()", "org.bukkit.entity.Player.sendMessage((((((((team.getColor()) + \"<\") + (player.getName())) + \" -> team>\") + (org.bukkit.ChatColor.RESET)) + \" \") + message))", "org.bukkit.entity.Player.getName()", "taupegun.start.TaupeGunPlugin.getContext()"], "Fixed commit": "e310a78d785a1778ac658421fe551038bd53ccbb", "Url": "https://api.github.com/repos/LetMeR00t/TaupeGun-Minecraft", "Date": "2016-05-08T13:37:01Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.erlide.engine.internal.model.root.ErlProject.getChildNamed(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (external == null) { external = new org.erlide.engine.internal.model.erlang.ErlOtpExternalReferenceEntryList(this, name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/9172/buggy-version/org.erlide.model.src.org.erlide.engine.internal.model.root.ErlProject.java", "BodyUseAPI": [], "Fixed commit": "35fa1e75115c807365fddafc1f759e3321dc39f8", "Url": "https://api.github.com/repos/vladdu/erlide", "Date": "2014-04-16T06:54:00Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((people.size()) > 0) { createPopup(people.toArray(new java.lang.String[people.size()])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8092/buggy-version/src.main.java.seedu.address.model.BirthdayNotifier.java", "BodyUseAPI": [], "Fixed commit": "8cbf5ce80b59cd85ea5948f11de2243d519107ec", "Url": "https://api.github.com/repos/liliwei25/addressbook-level4", "Date": "2017-10-18T11:59:20Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.gc.aafc.seqdb_barcode_scanner.utils.DataParser.getAcronym()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((acronym.equalsIgnoreCase(\"CON\")) || (acronym.equalsIgnoreCase(\"07\"))) { service = this.getContentSession.getService(acronym); }else { android.widget.Toast.makeText(this, \"Wrong object scanned please scan a container\", Toast.LENGTH_LONG).show(); this.launchScanner(\"SCAN_CONTAINER\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1382/buggy-version/seqdb_barcode_scanner.src.ca.gc.aafc.seqdb_barcode_scanner.GetContentsActivity.java", "BodyUseAPI": ["ca.gc.aafc.seqdb_barcode_scanner.utils.Session.getService(java.lang.String)"], "Fixed commit": "1d6ecc5b86b05661616a92d615cd86eaf9d448dc", "Url": "https://api.github.com/repos/mgrah043/sequence_database_barcode_scanner", "Date": "2014-03-10T18:06:21Z"},
{"Line": "=>1007", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.data.access.DataAccessor.getPratilipi(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pratilipi.getContentType()) != (com.pratilipi.commons.shared.PratilipiContentType.IMAGE)) pratilipi.setContentType(PratilipiContentType.IMAGE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5826/buggy-version/src.com.pratilipi.pagecontent.pratilipi.PratilipiContentHelper.java", "BodyUseAPI": ["com.pratilipi.data.transfer.Pratilipi.setContentType(PratilipiContentType.IMAGE)"], "Fixed commit": "0ded0fd31432bee2c95d4969c763ff2be93815b3", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-04-05T20:12:12Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loanCap) != null) { loanCap = loanCap.add(returnedAmount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/576/buggy-version/src.project.model.Bank.java", "BodyUseAPI": [], "Fixed commit": "7fd151bb563b3a783daa8c16c8421f7d32707b68", "Url": "https://api.github.com/repos/meyerkizner/COP3504", "Date": "2013-04-13T00:00:45Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sun.tools.javac.util.Log.instance(com.sun.tools.javac.util.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((log.getSource(fileObject).getEndPosTable()) != null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3486/buggy-version/OpenJML.src.org.jmlspecs.openjml.API.java", "BodyUseAPI": [], "Fixed commit": "86177653efdf017de293049790c55a86ea983f62", "Url": "https://api.github.com/repos/OpenJML/OpenJML", "Date": "2016-12-01T12:25:46Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (visitMap[yBlock][xBlock]) occupancyMap[yBlock][xBlock] = -5; else if ((!(Rover.pilot.isMoving())) && (val < 0)) occupancyMap[yBlock][xBlock] = 1; else occupancyMap[yBlock][xBlock] += (val < 5) ? 1 : 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7490/buggy-version/app.src.app.Map.java", "BodyUseAPI": [], "Fixed commit": "23a2e25ab13ee1676ae3e70e396e239b77c5aa9e", "Url": "https://api.github.com/repos/soCzech/robo-okami", "Date": "2014-11-09T17:51:42Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isVirtuoso_06_01_3127_workaroundActive) { _writer.write(((\"INSERT+INTO+GRAPH+%3C\" + graphUri) + \"%3E+%7B\")); }else { _writer.write(((\"INSERT+DATA+INTO+%3C\" + graphUri) + \"%3E+%7B\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1265/buggy-version/src.com.ontologycentral.ldspider.hooks.sink.SinkSparul.java", "BodyUseAPI": [], "Fixed commit": "7a777f6612968012256b00a25d1164714dac8769", "Url": "https://api.github.com/repos/researchstudio-sat/ldspider4won", "Date": "2013-05-07T12:16:16Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.weidemeier.alexander.downfall.SnowThread.isPaused()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!paused) snowThread.onResume();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2022/buggy-version/app.src.main.java.de.weidemeier.alexander.downfall.SnowDisplay.java", "BodyUseAPI": [], "Fixed commit": "ccdbe35d7bcc5e91f0424578b66054977884f03c", "Url": "https://api.github.com/repos/AlexofTheBigE/Downfall", "Date": "2017-01-23T13:51:43Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(recipient)) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/324/buggy-version/src.de.ub0r.android.smsdroid.MobilePhoneAdapter.java", "BodyUseAPI": [], "Fixed commit": "077bed635178ab905305df827a83af05eb12d713", "Url": "https://api.github.com/repos/felixb/smsdroid", "Date": "2011-12-12T09:56:56Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (out != null) { out.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/9048/buggy-version/server.src.main.java.org.bonitasoft.console.server.servlet.BonitaExportServlet.java", "BodyUseAPI": ["java.io.OutputStream.close()"], "Fixed commit": "06d3ccecb88b72a74d4c8ce3d91504e61a232f64", "Url": "https://api.github.com/repos/bonitasoft/bonita-web", "Date": "2015-04-29T14:36:30Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ch) == (quote)) && (prev == (quote))) { output.appender.append(quote); }else { prev = ch; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7040/buggy-version/src.main.java.com.univocity.parsers.csv.CsvParser.java", "BodyUseAPI": [], "Fixed commit": "16a654a3986b623a6e0949ba1e9e2bf2e206a0ac", "Url": "https://api.github.com/repos/RafaelRViana/univocity-parsers", "Date": "2015-12-17T13:19:22Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mPreferences.getSharedPreferences().getString(com.mti.videodiary.mvp.view.activity.IMAGE_HEADER_MENU,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(picturePath)) { setChoiceImageVisibility(com.mti.videodiary.mvp.view.activity.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3649/buggy-version/presentation.src.main.java.com.mti.videodiary.mvp.view.activity.MenuActivity.java", "BodyUseAPI": [], "Fixed commit": "f22caf3bb05477f292255beae65341a2109900b4", "Url": "https://api.github.com/repos/TarasMatolinets/video_diary", "Date": "2017-02-19T12:00:29Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.verbose) { msi.gama.headless.runtime.SystemLogger.activeDisplay(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4419/buggy-version/msi.gama.headless.src.msi.gama.headless.runtime.Application.java", "BodyUseAPI": [], "Fixed commit": "4f8fcdf3eb6872e5e50098c1722e2a78fed9c3d0", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2016-03-22T12:20:11Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((userProfile.apiKey) != null) { apiKey = userProfile.apiKey; if (edu.ucsb.cs56.S13.utilities.commafeed.CommaFeed.DEBUG) { java.lang.System.out.println(java.lang.String.format(\"SUCCESS! Generated apiKey=%s\", apiKey)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2996/buggy-version/src.edu.ucsb.cs56.S13.utilities.commafeed.CommaFeed.java", "BodyUseAPI": [], "Fixed commit": "dbabe41be495fa95c920c51466deeea935d93660", "Url": "https://api.github.com/repos/nguyenmp/cs56-utilities-rss-reader", "Date": "2013-06-01T23:18:00Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (edu.ucsb.cs56.S13.utilities.commafeed.CommaFeed.DEBUG) { java.lang.System.out.println(java.lang.String.format(\"Was able to get apiKey=%s\", apiKey)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2996/buggy-version/src.edu.ucsb.cs56.S13.utilities.commafeed.CommaFeed.java", "BodyUseAPI": [], "Fixed commit": "dbabe41be495fa95c920c51466deeea935d93660", "Url": "https://api.github.com/repos/nguyenmp/cs56-utilities-rss-reader", "Date": "2013-06-01T23:18:00Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (edu.ucsb.cs56.S13.utilities.commafeed.CommaFeed.DEBUG) { java.lang.System.out.print(\"No apiKey found. Attempting to generate one... \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2996/buggy-version/src.edu.ucsb.cs56.S13.utilities.commafeed.CommaFeed.java", "BodyUseAPI": [], "Fixed commit": "dbabe41be495fa95c920c51466deeea935d93660", "Url": "https://api.github.com/repos/nguyenmp/cs56-utilities-rss-reader", "Date": "2013-06-01T23:18:00Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (edu.ucsb.cs56.S13.utilities.commafeed.CommaFeed.DEBUG) { java.lang.System.out.println(\"FAILURE!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2996/buggy-version/src.edu.ucsb.cs56.S13.utilities.commafeed.CommaFeed.java", "BodyUseAPI": [], "Fixed commit": "dbabe41be495fa95c920c51466deeea935d93660", "Url": "https://api.github.com/repos/nguyenmp/cs56-utilities-rss-reader", "Date": "2013-06-01T23:18:00Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isJtaManaged) { properties.put(\"javax.persistence.jtaDataSource\", dataSourceJNDIName); }else { properties.put(\"javax.persistence.nonJtaDataSource\", dataSourceJNDIName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3818/buggy-version/src.main.java.cz.muni.exceptions.listener.db.PersistenceUnitCreator.java", "BodyUseAPI": [], "Fixed commit": "bed8700894eb96b4891e33f334f6fac3e41ebbe5", "Url": "https://api.github.com/repos/iref/wildfly-exceptions", "Date": "2014-04-16T01:39:05Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 16) ((android.graphics.drawable.GradientDrawable) (findViewById(R.id.info_container).getBackground())).setColors(new int[]{ withAlpha, android.graphics.Color.TRANSPARENT });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/876/buggy-version/LibrarySample.app.src.main.java.com.thecamtech.librarysample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3792234a0b0550e3565b02e4ae44a6935e6228f8", "Url": "https://api.github.com/repos/ggveasna/android-L-library", "Date": "2014-11-06T16:59:01Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.wequick.small.util.ReflectAccelerator.invoke(java.lang.reflect.Method,android.content.res.AssetManager,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ret == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6557/buggy-version/Android.aar-small.src.main.java.net.wequick.small.util.ReflectAccelerator.java", "BodyUseAPI": [], "Fixed commit": "828ea7cc90ddded633ed1ee67d8720e4c9f76a62", "Url": "https://api.github.com/repos/cochee/Small", "Date": "2016-01-11T06:40:05Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<? extends com.github.davidmoten.rtree.Node<T>>.get(np.position())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (condition.call(child.geometry())) return child.search(condition, subscriber, stack.push(new com.github.davidmoten.rtree.NodePosition<T>(child, 0)), request); else return search(condition, subscriber, stack.pop().push(np.nextPosition()), request);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3433/buggy-version/src.main.java.com.github.davidmoten.rtree.NonLeaf.java", "BodyUseAPI": ["com.github.davidmoten.rtree.Node<T>.search(rx.functions.Func1<? super com.github.davidmoten.rtree.geometry.Geometry, java.lang.Boolean>,rx.Subscriber<? super com.github.davidmoten.rtree.Entry<T>>,stack.push(new com.github.davidmoten.rtree.NodePosition<T>(child, 0)),long)", "com.github.davidmoten.util.ImmutableStack<com.github.davidmoten.rtree.NodePosition<T>>.push(com.github.davidmoten.rtree.NodePosition<T>)", "com.github.davidmoten.rtree.NonLeaf<T>.search(rx.functions.Func1<? super com.github.davidmoten.rtree.geometry.Geometry, java.lang.Boolean>,rx.Subscriber<? super com.github.davidmoten.rtree.Entry<T>>,stack.pop().push(np.nextPosition()),long)"], "Fixed commit": "852ef6f94f3d7c0ce05e81b2ee9975fa5d753d56", "Url": "https://api.github.com/repos/davidmoten/rtree", "Date": "2014-08-30T12:15:25Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ae.getId()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6177/buggy-version/server.src.main.java.org.apache.kylin.rest.service.AccessService.java", "BodyUseAPI": [], "Fixed commit": "109e1daf82cf784fc02b6bd6f17a057ada79ad1b", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2016-01-19T02:29:22Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(backup.isDirectory())) { throw new java.io.IOException((\"Unable to create directories for \" + (backup))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2394/buggy-version/src.main.java.dk.dma.ais.view.AisViewDaemon.java", "BodyUseAPI": [], "Fixed commit": "9f6fcd88cbc8d28049e5e58a8f186ab7dd3e5096", "Url": "https://api.github.com/repos/dma-ais/AisView", "Date": "2015-01-28T13:49:51Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.telephony.PhoneNumberUtils.isGlobalPhoneNumber(phoneNumber)) { contact = contactsProvider.getContactByPhoneNumber(phoneNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6897/buggy-version/android.src.main.java.com.rt2zz.reactnativecontacts.ContactsManager.java", "BodyUseAPI": ["com.rt2zz.reactnativecontacts.ContactsProvider.getContactByPhoneNumber(java.lang.String)"], "Fixed commit": "310dd6c75dc5904d3b6380754cbba05733b980b3", "Url": "https://api.github.com/repos/mbernardeau/react-native-contacts", "Date": "2017-06-14T09:05:29Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { getActivity().setResult(com.collage.sendimage.RESULT_PICTURE_SENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2224/buggy-version/app.src.main.java.com.collage.sendimage.SendImageFragment.java", "BodyUseAPI": [], "Fixed commit": "8502232c830ae1a66aa48e2ac5a10d542661ea42", "Url": "https://api.github.com/repos/matdziu/collage", "Date": "2017-02-08T16:53:48Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selectedTreeNode.getParent()) != null) selectedTreeNode.getParent().expand();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5187/buggy-version/genericsystem-myadmin.src.main.java.org.genericsystem.myadmin.beans.GuiGenericsTreeBean.java", "BodyUseAPI": ["selectedTreeNode.getParent().expand()", "org.genericsystem.myadmin.gui.GuiGenericsTreeNode.getParent()"], "Fixed commit": "9815ace5a9b8135dad996467ed8675d9015f2a11", "Url": "https://api.github.com/repos/genericsystem/genericsystem2011", "Date": "2013-10-30T14:27:39Z"},
{"Line": "=>517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nagarro.gde.service.api.UserSchoolDetailService.getUserSchoolDetailsDtoList(com.nagarro.gde.persistence.model.GdeUser)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!isValid) || (org.apache.commons.collections.CollectionUtils.isEmpty(lstSschool))) { return candidateDataModelAndView.view(\"candidatedata\", model, request, response, locale); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8197/buggy-version/gde-webapp.src.main.java.com.nagarro.gde.base.CandidateDataController.java", "BodyUseAPI": [], "Fixed commit": "1e073c3325e873d42bc354e07b9dea0ef26c8a0a", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-01-13T09:58:49Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((testData.size()) > 0) { if ((sampleSize) != (-1)) testScore = distance.distance(org.lilian.data.real.Datasets.sample(testData, sampleSize), em.model().generator().generate(sampleSize)); else testScore = distance.distance(testData, em.model().generator().generate(testData.size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3264/buggy-version/lilian-experimental.src.main.java.org.lilian.experiment.FractalEM.java", "BodyUseAPI": ["org.lilian.data.real.Datasets.sample(java.util.List<org.lilian.data.real.Point>,int)", "em.model().generator().generate(testData.size())", "java.util.List<org.lilian.data.real.Point>.size()", "org.lilian.util.distance.Distance<java.util.List<org.lilian.data.real.Point>>.distance(java.util.List<org.lilian.data.real.Point>,em.model().generator().generate(testData.size()))", "org.lilian.util.distance.Distance<java.util.List<org.lilian.data.real.Point>>.distance(org.lilian.data.real.Datasets.sample(testData, sampleSize),em.model().generator().generate(sampleSize))"], "Fixed commit": "145c5f1331bf79c235a98c8d509ee46f8fa6c6ee", "Url": "https://api.github.com/repos/pbloem/Lilian-experimental", "Date": "2012-09-04T12:55:41Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) != null) map.put(\"data\", data);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6627/buggy-version/src.main.java.team.unstudio.udpl.area.Area.java", "BodyUseAPI": [], "Fixed commit": "ca4c0b97c7b4a9d09d876fd6e7f8571f91c1cf21", "Url": "https://api.github.com/repos/UnknownStudio/UDPLib", "Date": "2017-10-08T15:43:02Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (map.containsKey(\"data\")) data = ((team.unstudio.udpl.area.AreaDataContainer) (map.get(\"data\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6627/buggy-version/src.main.java.team.unstudio.udpl.area.Area.java", "BodyUseAPI": [], "Fixed commit": "ca4c0b97c7b4a9d09d876fd6e7f8571f91c1cf21", "Url": "https://api.github.com/repos/UnknownStudio/UDPLib", "Date": "2017-10-08T15:43:02Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (countOneLetterWords == (wordList.length)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7/buggy-version/src.Logic.Search.java", "BodyUseAPI": [], "Fixed commit": "1ef146dd8a079a316167b4e8e0a2b3c32e2cbdad", "Url": "https://api.github.com/repos/cs2103jan2016-t09-2j/main", "Date": "2016-04-03T02:59:24Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((salaryInput.getsType()) == (com.calculator.salariu.md.salaryClasses.SalaryType.BRUT_SALARY)) java.lang.Thread.sleep(1500);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6379/buggy-version/app.src.main.java.com.calculator.salariu.md.CalculateTask.java", "BodyUseAPI": [], "Fixed commit": "6600e8800267875d352f00bd5a118e3ec85dc69d", "Url": "https://api.github.com/repos/alextreme88/MoldovaSalaryCalculator", "Date": "2016-11-22T06:37:34Z"},
{"Line": "=>1824", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedPart) != null) { selectedPart.addPoint(mouseState.getX(), mouseState.getY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1415/buggy-version/src.main.java.org.concord.energy3d.scene.SceneManager.java", "BodyUseAPI": [], "Fixed commit": "fcb5a2e95eec1efa6138a5149ae9907ea4956bf4", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2016-10-14T17:17:13Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updatedToNextFrame) { me.newyith.fortress.core.BaseCore core = me.newyith.fortress.main.FortressesManager.forWorld(model.world).getCore(model.anchorPoint); if (core != null) { core.onGeneratedChanged(); }else { me.newyith.fortress.util.Debug.error(((\"CoreAnimator.onGeneratedChanged(): Core at \" + (model.anchorPoint)) + \" is null.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1212/buggy-version/src.main.java.me.newyith.fortress.core.CoreAnimator.java", "BodyUseAPI": [], "Fixed commit": "ccaad9b626514504e3e8a865bc458fafa7ed7426", "Url": "https://api.github.com/repos/rockysims/fortressplugin", "Date": "2016-12-26T09:08:53Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (profileWithSkin != null) gameProfile.getProperties().putAll(profileWithSkin.getProperties());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6956/buggy-version/src.me.libraryaddict.disguise.utilities.ReflectionManager.java", "BodyUseAPI": ["com.comphenix.protocol.wrappers.WrappedGameProfile.getProperties()", "gameProfile.getProperties().putAll(profileWithSkin.getProperties())"], "Fixed commit": "e0fffdaa14b831604db0451cf7844f49232544e0", "Url": "https://api.github.com/repos/libraryaddict/LibsDisguises", "Date": "2017-03-19T12:14:45Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getPassword(user.getUsername()).equals(\"NO_SUCH_USER\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5091/buggy-version/src.directi.androidteam.training.chatclient.Authentication.UserDatabaseHandler.java", "BodyUseAPI": [], "Fixed commit": "ada77e1fc898b9ada9671a383bfce2cb1fa24971", "Url": "https://api.github.com/repos/vinayakbhavnani/android_chat_client", "Date": "2012-09-14T07:35:08Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((domain) == null) { if ((startUrls.size()) > 0) { domain = us.codecraft.webmagic.utils.UrlUtils.getDomain(startUrls.get(0)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2556/buggy-version/webmagic-core.src.main.java.us.codecraft.webmagic.Site.java", "BodyUseAPI": [], "Fixed commit": "d08b6fba4f88d37f0e276868062380a38bca5bb4", "Url": "https://api.github.com/repos/code4craft/webmagic", "Date": "2013-08-06T14:43:31Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((object) != null) { java.lang.String talkingAnimTextualId = object.getTalkingAnimation(); object.setCurrentAnimation(talkingAnimTextualId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2777/buggy-version/action.SayAction.java", "BodyUseAPI": [], "Fixed commit": "12c2375cbbe68a49f756f01a0c1feb80f5cc2f60", "Url": "https://api.github.com/repos/a2g/core", "Date": "2013-08-07T11:28:53Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (hook == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3301/buggy-version/cascading-core.src.main.java.cascading.util.ShutdownUtil.java", "BodyUseAPI": [], "Fixed commit": "a003240bee58d92509c768a2337411c79e971b27", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2015-07-24T17:16:31Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < (args.length)) { if (((((((args[i].equalsIgnoreCase(\"player\")) || (args[i].equalsIgnoreCase(\"SITENAME\"))) || (args[i].equalsIgnoreCase(\"number\"))) || (args[i].equalsIgnoreCase(\"string\"))) || (args[i].equalsIgnoreCase(\"boolean\"))) || (args[i].equalsIgnoreCase(\"list\"))) || (arg.equalsIgnoreCase(args[i]))) { return true; } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/9052/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.CommandHandler.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "8da39b6d49fa9b4fbb1f0eb31910e6a1226f4feb", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-05-23T14:38:41Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (models.datatable.BackupDataTable.Type.REMOTE)) { util.BackupUtils.cancelPullBackup(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8303/buggy-version/vipr-portal.portal.app.controllers.Backup.java", "BodyUseAPI": [], "Fixed commit": "f929a5afd1a617bcd2b47a9c976c5eb46bbc33ca", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-01-26T07:34:22Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(item.getText()))) owner.removebook(java.lang.Integer.parseInt(item.getText())); else java.lang.System.out.println(\"Empty field\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8436/buggy-version/src.book.RemoveBook.java", "BodyUseAPI": ["libarypackage.Libary.removebook(int)", "java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JTextField.getText()"], "Fixed commit": "845823d1af82856220fb9c47227ccc56be1b01dd", "Url": "https://api.github.com/repos/rukeyscott/Library", "Date": "2015-04-19T19:25:42Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addLast) { location = mListSize; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5712/buggy-version/src.com.spazedog.lib.utilsLib.SparseList.java", "BodyUseAPI": [], "Fixed commit": "e710eb575a8de6be467ab0840bff964c83e25648", "Url": "https://api.github.com/repos/SpazeDog/utils-lib", "Date": "2015-11-09T13:08:08Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.id) instanceof org.telegram.tl.users.InputUser) { user_id = ((org.telegram.tl.users.InputUser) (this.id)).user_id; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6422/buggy-version/src.org.telegram.tl.users.GetFullUser.java", "BodyUseAPI": [], "Fixed commit": "bdcb3d63cf56692f621d14d8d75496d73bd9b613", "Url": "https://api.github.com/repos/aykutalparslan/Telegram-Server", "Date": "2015-12-12T11:54:35Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((s == null) || (s.trim().equals(\"\"))) || (s.trim().equals(\"null\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2862/buggy-version/src.me.daniel.slack.Main.java", "BodyUseAPI": [], "Fixed commit": "438668c08ff89df1fd4129e61bd597a217bde397", "Url": "https://api.github.com/repos/dashaw92/SlackMessenger", "Date": "2016-01-07T04:19:10Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (instream != null) { try { instream.close(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4021/buggy-version/core.src.main.java.com.aliyun.fs.oss.utils.task.OSSPutTask.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "14200e9a7511549d08e04abc7ff72d921c8460c3", "Url": "https://api.github.com/repos/uncleGen/aliyun-emapreduce-sdk", "Date": "2016-01-29T06:09:17Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (referenceInfo == null) { referenceInfo = createCreditCardReferenceInfo(paymentInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/24/buggy-version/core.broadleaf-framework.src.main.java.org.broadleafcommerce.core.payment.service.BroadleafPaymentInfoTypeServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "aec26d9e0af2b9d4bf0dc99986de0f6150a9b78b", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-01-22T00:01:32Z"},
{"Line": "=>887", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (grade == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7087/buggy-version/woServer.src.edu.umass.ckc.wo.db.DbProblem.java", "BodyUseAPI": [], "Fixed commit": "de921b801dd657a80530b43956443a9812fa12c6", "Url": "https://api.github.com/repos/marshall62/mathspring", "Date": "2016-12-01T04:41:12Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (result != null) populate(null, result);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/532/buggy-version/src.com.kedzie.vbox.machine.SnapshotFragment.java", "BodyUseAPI": ["com.kedzie.vbox.machine.SnapshotFragment.LoadSnapshotsTask.populate(<nulltype>,com.kedzie.vbox.api.ISnapshot)"], "Fixed commit": "05fffd250f8f9f82a285881341d73f5002f81ae2", "Url": "https://api.github.com/repos/kedzie/VBoxManager", "Date": "2013-03-03T01:58:24Z"},
{"Line": "=>727", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (settingsHandler.isSharingData()) { dataCollector = new ca.cumulonimbus.pressurenetsdk.CbService.CbDataCollector(); dataCollector.startCollectingData(); startWithIntent(intent, true); }else { log(\"cbservice not sharing data\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2299/buggy-version/src.ca.cumulonimbus.pressurenetsdk.CbService.java", "BodyUseAPI": [], "Fixed commit": "064cd1dacadef651af8fe1acb46260411342a3a7", "Url": "https://api.github.com/repos/Cbsoftware/pressureNET-SDK", "Date": "2013-09-13T18:11:01Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (username.equals(\"loginnode\")) { nodeReady(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2273/buggy-version/src.main.java.ch.uzh.csg.p2p.Node.java", "BodyUseAPI": [], "Fixed commit": "601bd1e047228f16935a7c0e30df36f2eb3fe267", "Url": "https://api.github.com/repos/savf/ct2016", "Date": "2016-05-17T08:11:50Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((GUI.ReceiptPrinting._cb.lblTax2_1.getText().length()) > 0) { g.drawString(Tax2, x, (y += newline)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8420/buggy-version/src.GUI.ReceiptPrinting.java", "BodyUseAPI": [], "Fixed commit": "ed4bdac5f91b53535004ea7f7d3be58f45aeecf1", "Url": "https://api.github.com/repos/neerajrajgure/Canyou", "Date": "2016-04-01T14:18:30Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((GUI.ReceiptPrinting._cb.lblTax1_1.getText().length()) > 0) { g.drawString(Tax1, x, (y += newline)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8420/buggy-version/src.GUI.ReceiptPrinting.java", "BodyUseAPI": [], "Fixed commit": "ed4bdac5f91b53535004ea7f7d3be58f45aeecf1", "Url": "https://api.github.com/repos/neerajrajgure/Canyou", "Date": "2016-04-01T14:18:30Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((GUI.ReceiptPrinting._cb.lblTax2_1.getText().length()) > 0) { g.drawString(Tax2, x, (y += newline)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8420/buggy-version/src.GUI.ReceiptPrinting.java", "BodyUseAPI": [], "Fixed commit": "ed4bdac5f91b53535004ea7f7d3be58f45aeecf1", "Url": "https://api.github.com/repos/neerajrajgure/Canyou", "Date": "2016-04-01T14:18:30Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((GUI.ReceiptPrinting._cb.lblTax3_1.getText().length()) > 0) { g.drawString(Tax3, x, (y += newline)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8420/buggy-version/src.GUI.ReceiptPrinting.java", "BodyUseAPI": [], "Fixed commit": "ed4bdac5f91b53535004ea7f7d3be58f45aeecf1", "Url": "https://api.github.com/repos/neerajrajgure/Canyou", "Date": "2016-04-01T14:18:30Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((GUI.ReceiptPrinting._cb.lblTax3_1.getText().length()) > 0) { g.drawString(Tax3, x, (y += newline)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8420/buggy-version/src.GUI.ReceiptPrinting.java", "BodyUseAPI": [], "Fixed commit": "ed4bdac5f91b53535004ea7f7d3be58f45aeecf1", "Url": "https://api.github.com/repos/neerajrajgure/Canyou", "Date": "2016-04-01T14:18:30Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((GUI.ReceiptPrinting._cb.lblTax1_1.getText().length()) > 0) { g.drawString(Tax1, x, (y += newline)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8420/buggy-version/src.GUI.ReceiptPrinting.java", "BodyUseAPI": [], "Fixed commit": "ed4bdac5f91b53535004ea7f7d3be58f45aeecf1", "Url": "https://api.github.com/repos/neerajrajgure/Canyou", "Date": "2016-04-01T14:18:30Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((GUI.KitchenReceiptPrinting._cb.lblTax2_1.getText().length()) > 0) { g.drawString(GUI.KitchenReceiptPrinting._cb.lblTax2.getText(), leftMargin, (yPosition1 += newline)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8420/buggy-version/src.GUI.KitchenReceiptPrinting.java", "BodyUseAPI": ["java.awt.Graphics.drawString(GUI.KitchenReceiptPrinting._cb.lblTax2.getText(),int,int)", "GUI.KitchenReceiptPrinting._cb.lblTax2.getText()"], "Fixed commit": "ed4bdac5f91b53535004ea7f7d3be58f45aeecf1", "Url": "https://api.github.com/repos/neerajrajgure/Canyou", "Date": "2016-04-01T14:18:30Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((GUI.KitchenReceiptPrinting._cb.lblTax2_1.getText().length()) > 0) { g.drawString(Tax2Num, x, (yPosition1 += newline)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8420/buggy-version/src.GUI.KitchenReceiptPrinting.java", "BodyUseAPI": [], "Fixed commit": "ed4bdac5f91b53535004ea7f7d3be58f45aeecf1", "Url": "https://api.github.com/repos/neerajrajgure/Canyou", "Date": "2016-04-01T14:18:30Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((GUI.KitchenReceiptPrinting._cb.lblTax1_1.getText().length()) > 0) { g.drawString(GUI.KitchenReceiptPrinting._cb.lblTax1.getText(), leftMargin, (yPosition1 += newline)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8420/buggy-version/src.GUI.KitchenReceiptPrinting.java", "BodyUseAPI": ["GUI.KitchenReceiptPrinting._cb.lblTax1.getText()", "java.awt.Graphics.drawString(GUI.KitchenReceiptPrinting._cb.lblTax1.getText(),int,int)"], "Fixed commit": "ed4bdac5f91b53535004ea7f7d3be58f45aeecf1", "Url": "https://api.github.com/repos/neerajrajgure/Canyou", "Date": "2016-04-01T14:18:30Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((GUI.KitchenReceiptPrinting._cb.lblTax3_1.getText().length()) > 0) { g.drawString(Tax3Num, x, (yPosition1 += newline)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8420/buggy-version/src.GUI.KitchenReceiptPrinting.java", "BodyUseAPI": [], "Fixed commit": "ed4bdac5f91b53535004ea7f7d3be58f45aeecf1", "Url": "https://api.github.com/repos/neerajrajgure/Canyou", "Date": "2016-04-01T14:18:30Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((GUI.KitchenReceiptPrinting._cb.lblTax3_1.getText().length()) > 0) { g.drawString(GUI.KitchenReceiptPrinting._cb.lblTax3.getText(), leftMargin, (yPosition1 += newline)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8420/buggy-version/src.GUI.KitchenReceiptPrinting.java", "BodyUseAPI": ["GUI.KitchenReceiptPrinting._cb.lblTax3.getText()", "java.awt.Graphics.drawString(GUI.KitchenReceiptPrinting._cb.lblTax3.getText(),int,int)"], "Fixed commit": "ed4bdac5f91b53535004ea7f7d3be58f45aeecf1", "Url": "https://api.github.com/repos/neerajrajgure/Canyou", "Date": "2016-04-01T14:18:30Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((GUI.KitchenReceiptPrinting._cb.lblTax1_1.getText().length()) > 0) { g.drawString(tax1Num, x, (yPosition1 += newline)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8420/buggy-version/src.GUI.KitchenReceiptPrinting.java", "BodyUseAPI": [], "Fixed commit": "ed4bdac5f91b53535004ea7f7d3be58f45aeecf1", "Url": "https://api.github.com/repos/neerajrajgure/Canyou", "Date": "2016-04-01T14:18:30Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.AsyncPlayerChatEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (MumbleChat.permission.has(p, cc.colorpermissions)) { evMessage = cc.FormatString(evMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3976/buggy-version/MumbleChat.src.com.minecats.cindyk.listeners.ChatListener.java", "BodyUseAPI": ["com.minecats.cindyk.ChatChannelInfo.FormatString(java.lang.String)"], "Fixed commit": "356f88df9d556a21effc10059065050dae50f8fa", "Url": "https://api.github.com/repos/cindyker/MumbleChat", "Date": "2014-05-29T02:16:05Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mayRun()) { if (((ticks) % 20) == 0) { syncMachines(); } for (refinedstorage.tile.TileMachine machine : machines) { if (machine.mayUpdate()) { machine.updateMachine(); } } for (refinedstorage.tile.autocrafting.task.ICraftingTask taskToCancel : craftingTasksToCancel) { taskToCancel.onCancelled(this); } craftingTasks.removeAll(craftingTasksToCancel); craftingTasksToCancel.clear(); craftingTasks.addAll(craftingTasksToAdd); craftingTasksToAdd.clear(); if (!(craftingTasks.empty())) { refinedstorage.tile.autocrafting.task.ICraftingTask top = craftingTasks.peek(); if ((((ticks) % (top.getPattern().getCrafter(worldObj).getSpeed())) == 0) && (top.update(this))) { top.onDone(this); craftingTasks.pop(); } } }else { disconnectAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/369/buggy-version/src.main.java.refinedstorage.tile.TileController.java", "BodyUseAPI": [], "Fixed commit": "5ababd69469188eae68940b2a8065991dfac82d8", "Url": "https://api.github.com/repos/raoulvdberge/refinedstorage", "Date": "2016-05-21T11:37:27Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<refinedstorage.tile.autocrafting.task.ICraftingTask>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((ticks) % (top.getPattern().getCrafter(worldObj).getSpeed())) == 0) && (top.update(this))) { top.onDone(this); craftingTasks.pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/369/buggy-version/src.main.java.refinedstorage.tile.TileController.java", "BodyUseAPI": ["refinedstorage.tile.autocrafting.task.ICraftingTask.onDone(refinedstorage.tile.TileController)"], "Fixed commit": "5ababd69469188eae68940b2a8065991dfac82d8", "Url": "https://api.github.com/repos/raoulvdberge/refinedstorage", "Date": "2016-05-21T11:37:27Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (adapter == null) { adapter = new net.vtst.ow.eclipse.less.scoping.LessImportingStatementFinder.ResourceAdapter(projectAdapter, styleSheet); styleSheet.eResource().eAdapters().add(adapter); adapter.update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3496/buggy-version/src.eclipse.net.vtst.ow.eclipse.less.src.net.vtst.ow.eclipse.less.scoping.LessImportingStatementFinder.java", "BodyUseAPI": [], "Fixed commit": "8005913b0cde427bd7429a317f3552c541d03ee8", "Url": "https://api.github.com/repos/vtst/ow", "Date": "2014-04-14T10:42:16Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (finalPos.add(target).valid()) { if (de._13ducks.cor.game.server.Server.getInnerServer().netmap.getMoveMap().isPositionWalkable(finalPos.add(target))) { formation[foundPositions] = new de._13ducks.cor.game.FloatingPointPosition(finalPos.getfX(), finalPos.getfY()); foundPositions++; if (foundPositions == unitCount) { return formation; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4881/buggy-version/src.de._13ducks.cor.game.server.movement.Formation.java", "BodyUseAPI": ["de._13ducks.cor.game.server.Server.getInnerServer().netmap.getMoveMap().isPositionWalkable(finalPos.add(target))", "de._13ducks.cor.game.FloatingPointPosition.add(de._13ducks.cor.game.FloatingPointPosition)", "de._13ducks.cor.game.FloatingPointPosition.getfY()", "de._13ducks.cor.game.FloatingPointPosition.getfX()"], "Fixed commit": "02f8edbd56b6091df2fd975c23895d24618920d0", "Url": "https://api.github.com/repos/tfg13/Centuries-of-Rage", "Date": "2011-06-24T18:06:32Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startButton.isEnabled()) == false) { timer.schedule(new java.util.TimerTask() { @java.lang.Override public void run() { updateOnTick(); } }, (((long) (0.1)) * 1000)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/40/buggy-version/src.global.NachosGrande.java", "BodyUseAPI": [], "Fixed commit": "a8d4959cab864f75357342d553b5c71dabf1d281", "Url": "https://api.github.com/repos/nachosgrande/System-Prototype", "Date": "2014-11-17T19:38:07Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.db.record.OIdentifiable.getRecord()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (linked == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6514/buggy-version/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java", "BodyUseAPI": [], "Fixed commit": "54f7315c6b83bf6c1e634318d13e6dfa7fb709a3", "Url": "https://api.github.com/repos/mcculls/orientdb", "Date": "2015-01-26T06:09:28Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((suffix) != null) { for (int f = 0; f < (files.length); f++) { final java.lang.String path = files[f].path(); if (!(path.contains(\".\"))) files[f] = new org.basex.gui.layout.IOFile((path + (suffix))); } }else if (ff instanceof org.basex.gui.layout.BaseXFileChooser.Filter) { final java.lang.String[] sufs = ((org.basex.gui.layout.BaseXFileChooser.Filter) (ff)).sufs; for (int f = 0; (f < (files.length)) && ((sufs.length) != 0); f++) { final java.lang.String path = files[f].path(); if (!(path.contains(\".\"))) files[f] = new org.basex.gui.layout.IOFile((path + (sufs[0]))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/570/buggy-version/src.main.java.org.basex.gui.layout.BaseXFileChooser.java", "BodyUseAPI": [], "Fixed commit": "c0a6d140dc7b5d5ae5af4e26af7511284da8aa53", "Url": "https://api.github.com/repos/BaseXdb/basex", "Date": "2013-06-19T20:35:35Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cursor == null) { cursor = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4263/buggy-version/src.main.java.com.pratilipi.recommendations.controller.PratilipisController.java", "BodyUseAPI": [], "Fixed commit": "68a66c228a2ce398a31de186d193e06aaa94c73f", "Url": "https://api.github.com/repos/Pratilipi/ecs-recommendation", "Date": "2017-06-13T10:48:51Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((contact) == null) || ((contact.getId()) == null)) { java.lang.String msg = java.lang.String.format(\"No es posible eliminar\"); com.Notarius.view.adressbook.Notification.show(msg, Type.TRAY_NOTIFICATION); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5857/buggy-version/src.main.java.com.Notarius.view.adressbook.ContactForm.java", "BodyUseAPI": [], "Fixed commit": "efe85dc6897081544af1daff59ac99d2a68296a9", "Url": "https://api.github.com/repos/agusalex/Notarius", "Date": "2017-09-15T05:49:58Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t.isConstant()) { fields.append(\"'\"); fields.append(t.getIdentifier()); fields.append(\"'\"); }else { fields.append(columns.get(t)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2401/buggy-version/graal-store.graal-store-rdbms.rdbms-adhoc.src.main.java.fr.lirmm.graphik.graal.store.rdbms.adhoc.AdHocConjunctiveQueryTranslator.java", "BodyUseAPI": ["fr.lirmm.graphik.graal.api.core.Term.getIdentifier()", "java.lang.StringBuilder.append(t.getIdentifier())", "java.lang.StringBuilder.append(columns.get(t))", "java.util.TreeMap<fr.lirmm.graphik.graal.api.core.Term, java.lang.String>.get(fr.lirmm.graphik.graal.api.core.Term)"], "Fixed commit": "3f17746a7b88adc64f8a3233ba6b253e5ac17b2b", "Url": "https://api.github.com/repos/graphik-team/graal", "Date": "2016-11-15T15:44:18Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t.isConstant()) { fields.append(\"'\"); fields.append(t.getIdentifier()); fields.append(\"'\"); }else { fields.append(columns.get(t)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2401/buggy-version/graal-store.graal-store-rdbms.rdbms-natural.src.main.java.fr.lirmm.graphik.graal.store.rdbms.natural.NaturalConjunctiveQueryTranslator.java", "BodyUseAPI": ["java.lang.StringBuilder.append(t.getIdentifier())", "java.util.TreeMap<fr.lirmm.graphik.graal.api.core.Term, java.lang.String>.get(fr.lirmm.graphik.graal.api.core.Term)", "fr.lirmm.graphik.graal.api.core.Term.getIdentifier()", "java.lang.StringBuilder.append(columns.get(t))"], "Fixed commit": "3f17746a7b88adc64f8a3233ba6b253e5ac17b2b", "Url": "https://api.github.com/repos/graphik-team/graal", "Date": "2016-11-15T15:44:18Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (dynamoRecord == null) { throw new org.sagebionetworks.bridge.exceptions.BridgeServiceException(\"Health data record cannot be found\", org.apache.commons.httpclient.HttpStatus.SC_NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7721/buggy-version/app.org.sagebionetworks.bridge.services.HealthDataServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "6d1d471a5fce9236b859376855dbac97663403c1", "Url": "https://api.github.com/repos/Sage-Bionetworks/BridgePF", "Date": "2014-05-21T21:07:44Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cloudbus.cloudsim.simulate.CustomResCloudlet.getCloudlet()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cl.getCloudletId()) == 660000) { org.cloudbus.cloudsim.Log.printLine(\"BREAK\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4149/buggy-version/src.org.cloudbus.cloudsim.simulate.CustomDatacenterBroker.java", "BodyUseAPI": [], "Fixed commit": "7894a095d4d9849fad1349eb6e8bdb5046558c99", "Url": "https://api.github.com/repos/daitr-gu/cloudsim_simulator_v2.0", "Date": "2014-12-21T04:12:37Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, hex.genmodel.MojoModel>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (model.isSupervised()) { modelPredictors.remove(model.getResponseName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5074/buggy-version/src.main.java.com.github.dsotnyk.hive.udf.h2o.mojo.ModelProcessor.java", "BodyUseAPI": ["hex.genmodel.MojoModel.getResponseName()", "java.util.List<java.lang.String>.remove(model.getResponseName())"], "Fixed commit": "35607ee6218c61cb1003df6b219ad64fa3744c7d", "Url": "https://api.github.com/repos/dsotnyk/H2OMojoOnHive", "Date": "2017-09-21T23:02:13Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, hex.genmodel.MojoModel>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((modelPredictors.size()) != (model.getNumCols())) { throw new com.github.dsotnyk.hive.udf.h2o.exception.InitException((\"Failed to parse predictors for model \" + (modelEntry.getKey()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5074/buggy-version/src.main.java.com.github.dsotnyk.hive.udf.h2o.mojo.ModelProcessor.java", "BodyUseAPI": [], "Fixed commit": "35607ee6218c61cb1003df6b219ad64fa3744c7d", "Url": "https://api.github.com/repos/dsotnyk/H2OMojoOnHive", "Date": "2017-09-21T23:02:13Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (namePiece.identifier.contains(\"IAM\")) { namePiece = new com.google.api.codegen.util.Name.NamePiece(namePiece.identifier.replace(\"IAM\", \"Iam\"), namePiece.caseFormat); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/504/buggy-version/src.main.java.com.google.api.codegen.util.Name.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "d77fd042b19314191104412f8494d72e819ff321", "Url": "https://api.github.com/repos/landrito/toolkit", "Date": "2016-09-19T04:29:07Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.nio.file.Files.notExists(parentPath)) { java.nio.file.Files.createDirectory(parentPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8307/buggy-version/dockstore-launcher.src.main.java.io.dockstore.common.FileProvisioning.java", "BodyUseAPI": ["java.nio.file.Files.createDirectory(java.nio.file.Path)"], "Fixed commit": "d88810694e4192d5348f71b511079465993402d3", "Url": "https://api.github.com/repos/ga4gh/dockstore", "Date": "2017-01-16T20:06:50Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mWaitingDialog) == null) { mWaitingDialog = createWaitingDialog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5015/buggy-version/Projects.Finder.src.com.telepathic.finder.app.BusStationFragment.java", "BodyUseAPI": [], "Fixed commit": "0b16b5cf54de5b9c6c988238a0afe9d6252746e3", "Url": "https://api.github.com/repos/timlian/Telepathic", "Date": "2013-03-19T06:57:43Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((zabbixPort) == null) || (zabbixPort.equals(\"\"))) { zabbixURL = (\"http://\" + (zabbixIp)) + \"/zabbix/api_jsonrpc.php\"; }else { zabbixURL = (((\"http://\" + (zabbixIp)) + \":\") + (zabbixPort)) + \"/zabbix/api_jsonrpc.php\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8052/buggy-version/src.main.java.org.openbaton.monitoring.agent.ZabbixMonitoringAgent.java", "BodyUseAPI": [], "Fixed commit": "09d625262ba8d268246e2e96841c8a25d8efd7bf", "Url": "https://api.github.com/repos/openbaton/zabbix-plugin", "Date": "2015-11-02T17:12:33Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) != null) { adapter.getFilter().filter(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8163/buggy-version/src.kermit11.tweettimer.UserSelectionActivity.java", "BodyUseAPI": [], "Fixed commit": "a917bb970bcb178a6f32ada86c7b9c9b38c8d223", "Url": "https://api.github.com/repos/kermit11/TweetTimer", "Date": "2014-05-30T08:03:09Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i > 0) dns = dns.substring(0, i);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7092/buggy-version/src.main.java.edu.washington.iam.tools.ComboDNSVerifier.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "8ba27576e0f285ddaddca88a16ca3f15ae188716", "Url": "https://api.github.com/repos/UWIT-IAM/spregistry", "Date": "2017-10-10T22:48:47Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (stringData != null) { writerDestino.write(stringData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/683/buggy-version/src.main.java.br.com.brunorozendo.controller.Converter.java", "BodyUseAPI": ["java.io.Writer.write(java.lang.String)"], "Fixed commit": "9ce436cac9e21eda9a18950ab62c9cb93d939646", "Url": "https://api.github.com/repos/brunorozendo/converter-any_encode_to_UTF8", "Date": "2017-06-04T16:58:08Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.getMessage().equals(\"invalid login credentials\")) { android.widget.Toast.makeText(this, R.string.invalid_login_credentials, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1232/buggy-version/app.src.br.edu.ufcg.les142.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "2a234f50c17dca3f5d3495973cdd30a20b8793d5", "Url": "https://api.github.com/repos/joopeed/arrumae", "Date": "2015-03-11T02:19:09Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.CharSequence.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((i == 0) && (java.lang.Character.isDigit(c))) { tempSink.put('_'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7774/buggy-version/core.src.main.java.com.questdb.io.parser.listener.MetadataExtractorListener.java", "BodyUseAPI": [], "Fixed commit": "02c63a4d220562970222fbc7b110d5c95325c62f", "Url": "https://api.github.com/repos/bluestreak01/questdb", "Date": "2016-09-22T12:19:01Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((profile) == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/9200/buggy-version/src.main.java.itn.issuemanager.domain.User.java", "BodyUseAPI": [], "Fixed commit": "aa402d53600cc810c912c4a84fbc3b1e200dfacf", "Url": "https://api.github.com/repos/I-Think-Not/I-Think-Not", "Date": "2017-02-16T05:38:35Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (value.contains(\"\\\"\")) { throw new LotusException(\"syntaxError\", value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3991/buggy-version/fonte.Expression.java", "BodyUseAPI": [], "Fixed commit": "1ae180f5de9b644d29b134b0e7ca3e2a1e30340f", "Url": "https://api.github.com/repos/vladimirbelinski/Lotus", "Date": "2015-04-16T03:19:23Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (v instanceof StringVar) { throw new LotusException(\"cantAssign\", (((Expression.class) + \";\") + (v.getClass()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3991/buggy-version/fonte.Interpreter.java", "BodyUseAPI": ["Variable.getClass()"], "Fixed commit": "1ae180f5de9b644d29b134b0e7ca3e2a1e30340f", "Url": "https://api.github.com/repos/vladimirbelinski/Lotus", "Date": "2015-04-16T03:19:23Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < ((tiles.getHeight()) - 1)) { strVersion.append('\\n'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8577/buggy-version/src.yuuki.world.Land.java", "BodyUseAPI": [], "Fixed commit": "f437a1c490635bef62f4d07ae7f2f11141aff1f5", "Url": "https://api.github.com/repos/dekarrin/yuuki-jrpg", "Date": "2013-01-29T12:30:26Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((key.getWord().toString().length()) > 0) { name = key.getWord().toString().substring(0, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4689/buggy-version/src.io.github.scorpiochn.PdfWordCount.WordFreqSortReducer.java", "BodyUseAPI": ["io.github.scorpiochn.PdfWordCount.WordFreqWritable.getWord()", "key.getWord().toString()", "key.getWord().toString().substring(int,int)"], "Fixed commit": "3cfd4223b4f6f2507c596d1e9b9f3f6dcf33eda8", "Url": "https://api.github.com/repos/scorpiochn/PdfWordCount", "Date": "2015-10-29T09:08:02Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ctx.IDENTIFIER().isEmpty()) { property.put(ctx, new com.miracle.astree.statement.declaration.MiracleASTreeFunctionDeclaration(null, ((com.miracle.astree.base.MiracleASTreeTypeNode) (property.get(ctx.typename(0)))), parameters, body, new com.miracle.cstree.MiracleSourcePosition(ctx), null)); }else { property.put(ctx, new com.miracle.astree.statement.declaration.MiracleASTreeFunctionDeclaration(ctx.IDENTIFIER().get(0).getText(), ((com.miracle.astree.base.MiracleASTreeTypeNode) (property.get(ctx.typename(0)))), parameters, body, new com.miracle.cstree.MiracleSourcePosition(ctx), new com.miracle.cstree.MiracleSourcePosition(ctx.IDENTIFIER(0).getSymbol()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4308/buggy-version/src.com.miracle.astree.MiracleASTree.java", "BodyUseAPI": ["MiracleParser.FunctionDeclarationStatementContext.IDENTIFIER(int)", "ctx.IDENTIFIER().get(int)", "org.antlr.v4.runtime.tree.ParseTreeProperty<java.lang.Object>.get(ctx.typename(0))", "org.antlr.v4.runtime.tree.ParseTreeProperty<java.lang.Object>.get(ctx.typename(0))", "MiracleParser.FunctionDeclarationStatementContext.IDENTIFIER()", "org.antlr.v4.runtime.tree.ParseTreeProperty<java.lang.Object>.put(MiracleParser.FunctionDeclarationStatementContext,com.miracle.astree.statement.declaration.MiracleASTreeFunctionDeclaration)", "ctx.IDENTIFIER(0).getSymbol()", "org.antlr.v4.runtime.tree.ParseTreeProperty<java.lang.Object>.put(MiracleParser.FunctionDeclarationStatementContext,com.miracle.astree.statement.declaration.MiracleASTreeFunctionDeclaration)", "ctx.IDENTIFIER().get(0).getText()", "MiracleParser.FunctionDeclarationStatementContext.typename(int)", "MiracleParser.FunctionDeclarationStatementContext.typename(int)"], "Fixed commit": "58dd8322bc4f9cb592b9173d90ea932b43270758", "Url": "https://api.github.com/repos/Kipsora/x86-64-Java-Miracle-Compiler", "Date": "2017-05-18T00:18:11Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shirts.getCount()) > 0) { if (isFavorite()) { bookmark.setVisibility(View.GONE); }else { bookmark.setVisibility(View.VISIBLE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6944/buggy-version/app.src.main.java.com.project.wardrobe.Activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "348a15659fe431aca425a7b3a0455c442d7f0e4d", "Url": "https://api.github.com/repos/khetanrajesh/Wardrobe", "Date": "2016-12-25T15:41:52Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pants.getCount()) > 0) { if (isFavorite()) { bookmark.setVisibility(View.GONE); }else { bookmark.setVisibility(View.VISIBLE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6944/buggy-version/app.src.main.java.com.project.wardrobe.Activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "348a15659fe431aca425a7b3a0455c442d7f0e4d", "Url": "https://api.github.com/repos/khetanrajesh/Wardrobe", "Date": "2016-12-25T15:41:52Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (obj.isClass()) { writeWithIndentation(((((\"Java::\" + (obj.getPackageName())) + \".\") + (obj.getName())) + \".new(\"), w, 0); first = true; for (final com.ning.killbill.objects.Method m : flattenedMethods) { if (!(m.isGetter())) { continue; } if (!first) { writeAppend(\", \", w); } final java.lang.String member = camelToUnderscore(convertGetterMethodToFieldName(m.getName())); writeAppend((\"@\" + member), w); first = false; } writeAppend(\")\", w); writeNewLine(w); }else { writeWithIndentationAndNewLine(\"self\", w, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4173/buggy-version/src.main.java.com.ning.killbill.generators.ruby.JRubyPluginGenerator.java", "BodyUseAPI": ["com.ning.killbill.generators.ruby.JRubyPluginGenerator.writeWithIndentation(((((\"Java::\" + (obj.getPackageName())) + \".\") + (obj.getName())) + \".new(\"),java.io.Writer,int)", "com.ning.killbill.objects.ClassEnumOrInterface.getPackageName()", "com.ning.killbill.objects.ClassEnumOrInterface.getName()"], "Fixed commit": "170035a67200ae12661eafc2b25c7c64c742f509", "Url": "https://api.github.com/repos/killbill/killbill-java-parser", "Date": "2013-06-19T19:01:41Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_inetChan.isActive()) gate_to_inet(p);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7615/buggy-version/src.Igate.java", "BodyUseAPI": [], "Fixed commit": "fde344a919badc8faefc3bd553d458990f9cfd03", "Url": "https://api.github.com/repos/PolaricServer/aprsd", "Date": "2015-12-21T19:30:36Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((noob_mode) || (normal_mode)) { android.widget.TextView help = ((android.widget.TextView) (findViewById(R.id.help_display))); help.setText(help_1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7224/buggy-version/app.src.main.java.com.arlauunlimited.mrbinary.Player_1.java", "BodyUseAPI": [], "Fixed commit": "fa2be0c06f551d229f106d632ca823b9c7044d6a", "Url": "https://api.github.com/repos/Poudouu/MrBinary", "Date": "2015-10-06T20:49:50Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((noob_mode) || (normal_mode)) { android.widget.TextView help = ((android.widget.TextView) (findViewById(R.id.help_display))); help.setText(help_1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7224/buggy-version/app.src.main.java.com.arlauunlimited.mrbinary.Player_1.java", "BodyUseAPI": [], "Fixed commit": "fa2be0c06f551d229f106d632ca823b9c7044d6a", "Url": "https://api.github.com/repos/Poudouu/MrBinary", "Date": "2015-10-06T20:49:50Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<routing.DTNHost, java.util.List<java.lang.Integer>>.get(routing.DTNHost)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (theHashes == null) { theHashes = intermediate.hashesFor(destination.getAddress()); this.identityCache.put(destination, theHashes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2231/buggy-version/src.routing.BFGRouter.java", "BodyUseAPI": [], "Fixed commit": "d8ac05a6874ad4eac886d42dcdf7c9f59115e993", "Url": "https://api.github.com/repos/jairosh/the-one", "Date": "2017-08-17T00:33:59Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.massivecraft.factions.cmd.CmdList.argAsInt(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pagenumber > pagecount) pagenumber = pagecount; else if (pagenumber < 1) pagenumber = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2642/buggy-version/src.com.massivecraft.factions.cmd.CmdList.java", "BodyUseAPI": [], "Fixed commit": "9e4cc676ead6caa34c7c6893d45856bd26fdfc1d", "Url": "https://api.github.com/repos/Tahkeh/Factions", "Date": "2012-12-01T01:43:01Z"},
{"Line": "=>1068", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.progCode.size()) >= (this.programCounter)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/239/buggy-version/src.model.VM.java", "BodyUseAPI": [], "Fixed commit": "ef82166fed05e4250080b53415b4406fc8285d2c", "Url": "https://api.github.com/repos/roboter202/loweralpha", "Date": "2016-07-19T16:06:12Z"},
{"Line": "=>5335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((receivedBatchIds) != null) && ((receivedBatchIds.size()) > 0)) { if (selRow > (-1)) { com.ut.dph.model.activityReportReceivedMessages selMessage = receivedBatchIds.get(selRow); java.lang.String[] batchIds = selMessage.getRecevedBatchIds().split(\",\"); for (java.lang.String batchId : batchIds) { transactionList = getReceivedBatchTransaction(java.lang.Integer.parseInt(batchId), userInfo.getId(), transactionList); } }else { for (com.ut.dph.model.activityReportReceivedMessages message : receivedBatchIds) { java.lang.String[] batchIds = message.getRecevedBatchIds().split(\",\"); for (java.lang.String batchId : batchIds) { transactionList = getReceivedBatchTransaction(java.lang.Integer.parseInt(batchId), userInfo.getId(), transactionList); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4180/buggy-version/src.main.java.com.ut.dph.controller.HealtheWebController.java", "BodyUseAPI": ["java.util.List<com.ut.dph.model.activityReportReceivedMessages>.get(java.lang.Integer)"], "Fixed commit": "d2a4421063edb5e393b7df1a8ed564bb486ec1cb", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2016-07-08T18:10:10Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.charAt(j)) == '*') { if (((p.charAt((j - 1))) != (s.charAt(i))) && ((p.charAt((j - 1))) != '.')) { dp[(i + 1)][(j + 1)] = dp[(i + 1)][(j - 1)]; }else { dp[(i + 1)][(j + 1)] = ((dp[(i + 1)][j]) || (dp[i][(j + 1)])) || (dp[(i + 1)][(j - 1)]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8375/buggy-version/src.com.leetcode.www.RegularExpressionMatching.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.charAt(int)"], "Fixed commit": "6e5bc4f7523950d1f11f39144ec808d2df2c53ae", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-08-11T05:56:50Z"},
{"Line": "=>5", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s == null) || (p == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8375/buggy-version/src.com.leetcode.www.RegularExpressionMatching.java", "BodyUseAPI": [], "Fixed commit": "6e5bc4f7523950d1f11f39144ec808d2df2c53ae", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-08-11T05:56:50Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p.charAt(j)) == (s.charAt(i))) { dp[(i + 1)][(j + 1)] = dp[i][j]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8375/buggy-version/src.com.leetcode.www.RegularExpressionMatching.java", "BodyUseAPI": [], "Fixed commit": "6e5bc4f7523950d1f11f39144ec808d2df2c53ae", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-08-11T05:56:50Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (detail.getEvent().equals(\"income\")) { this.value += detail.getValue(); }else if (detail.getEvent().equals(\"expenditure\")) { this.value -= detail.getValue(); }else if (detail.getEvent().equals(\"transfer in\")) { this.value += detail.getValue(); }else if (detail.getEvent().equals(\"transfer out\")) { this.value -= detail.getValue(); }else if (detail.getEvent().equals(\"add borrowing\")) { this.value += detail.getValue(); }else if (detail.getEvent().equals(\"repay borrowing\")) { this.value -= detail.getValue(); }else if (detail.getEvent().equals(\"add loan\")) { this.value -= detail.getValue(); }else if (detail.getEvent().equals(\"repay loan\")) { this.value += detail.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2603/buggy-version/model.type.MoneyHistoryType.java", "BodyUseAPI": ["detail.getEvent().equals(java.lang.String)", "type.DetailType.getValue()", "type.DetailType.getEvent()", "detail.getEvent().equals(java.lang.String)", "type.DetailType.getValue()", "detail.getEvent().equals(java.lang.String)", "type.DetailType.getEvent()", "detail.getEvent().equals(java.lang.String)", "detail.getEvent().equals(java.lang.String)", "detail.getEvent().equals(java.lang.String)", "detail.getEvent().equals(java.lang.String)", "type.DetailType.getValue()", "type.DetailType.getEvent()", "type.DetailType.getEvent()", "type.DetailType.getValue()", "type.DetailType.getValue()", "type.DetailType.getValue()", "type.DetailType.getEvent()", "type.DetailType.getValue()", "type.DetailType.getEvent()", "type.DetailType.getValue()", "type.DetailType.getEvent()"], "Fixed commit": "004d40f9fc93f137e958473f98f5fbf4bca463a3", "Url": "https://api.github.com/repos/xloypaypa/WalletLogic", "Date": "2015-05-28T11:44:51Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((m_subqueryStmt) instanceof org.voltdb.planner.ParsedSelectStmt) == false) { throw new org.voltdb.planner.PlanningErrorException((\"Unsupported subquery found in FROM clause:\" + (m_subqueryStmt.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1976/buggy-version/src.frontend.org.voltdb.planner.parseinfo.StmtSubqueryScan.java", "BodyUseAPI": [], "Fixed commit": "0bae0b5342470959d53b604b37787a362fea7c8e", "Url": "https://api.github.com/repos/deerwalk/voltdb", "Date": "2015-06-15T14:52:20Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mScaleFactor) == 1.0) { newBitmap = android.graphics.Bitmap.createBitmap(picture, (((middle.x) - ((cropSize) / 2)) - (java.lang.Math.round(left))), (((middle.y) - ((cropSize) / 2)) - (java.lang.Math.round(top))), croppedSize, croppedSize); }else { newBitmap = android.graphics.Bitmap.createBitmap(picture, (x > 0 ? x : 0), (y > 0 ? y : 0), croppedSize, croppedSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/9030/buggy-version/imagecrop.src.main.java.no.hyper.imagecrop.ImageTray.java", "BodyUseAPI": [], "Fixed commit": "a0e85d71469729053f62453473608240fa9eebcd", "Url": "https://api.github.com/repos/hyperoslo/ImageCrop", "Date": "2016-03-15T09:07:52Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(asker.isDisposed())) asker.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3307/buggy-version/src.main.Main.java", "BodyUseAPI": ["frame.UserInfoAsker.dispose()"], "Fixed commit": "b828582e2e7b73f7708f47ab48b6ed30d95482ab", "Url": "https://api.github.com/repos/fzoli/IPCamLogViewer", "Date": "2013-03-24T01:59:58Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((loanLists.borrowedList) != null) { borrowedList.addAll(loanLists.borrowedList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5069/buggy-version/app.src.main.java.org.bbt.kiakoa.model.LoanLists.java", "BodyUseAPI": ["java.util.ArrayList<org.bbt.kiakoa.model.Loan>.addAll(java.util.ArrayList<org.bbt.kiakoa.model.Loan>)"], "Fixed commit": "dcdb5d6bc4b9f27b662515d249b6e36644ba8b32", "Url": "https://api.github.com/repos/benoit-development/KiaKoa", "Date": "2017-09-01T08:52:15Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((loanLists.lentList) != null) { lentList.addAll(loanLists.lentList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5069/buggy-version/app.src.main.java.org.bbt.kiakoa.model.LoanLists.java", "BodyUseAPI": ["java.util.ArrayList<org.bbt.kiakoa.model.Loan>.addAll(java.util.ArrayList<org.bbt.kiakoa.model.Loan>)"], "Fixed commit": "dcdb5d6bc4b9f27b662515d249b6e36644ba8b32", "Url": "https://api.github.com/repos/benoit-development/KiaKoa", "Date": "2017-09-01T08:52:15Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((loanLists.returnedList) != null) { returnedList.addAll(loanLists.returnedList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5069/buggy-version/app.src.main.java.org.bbt.kiakoa.model.LoanLists.java", "BodyUseAPI": ["java.util.ArrayList<org.bbt.kiakoa.model.Loan>.addAll(java.util.ArrayList<org.bbt.kiakoa.model.Loan>)"], "Fixed commit": "dcdb5d6bc4b9f27b662515d249b6e36644ba8b32", "Url": "https://api.github.com/repos/benoit-development/KiaKoa", "Date": "2017-09-01T08:52:15Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((criteria.getStartDate()) != null) { predicates.add(criteriaBuilder.greaterThanOrEqualTo(createdDate, new org.joda.time.DateTime(criteria.getStartDate()).toDate())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2087/buggy-version/pgr.pgr-rest.src.main.java.org.egov.pgrrest.read.persistence.specification.SubmissionSpecification.java", "BodyUseAPI": ["org.egov.pgrrest.read.domain.model.ServiceRequestSearchCriteria.getStartDate()", "java.util.List<org.egov.pgrrest.read.persistence.specification.Predicate>.add(criteriaBuilder.greaterThanOrEqualTo(createdDate, new org.joda.time.DateTime(criteria.getStartDate()).toDate()))", "org.egov.pgrrest.read.persistence.specification.CriteriaBuilder.greaterThanOrEqualTo(org.egov.pgrrest.read.persistence.specification.Path<java.util.Date>,new org.joda.time.DateTime(criteria.getStartDate()).toDate())", "org.joda.time.DateTime.toDate()"], "Fixed commit": "43b59ce94c1b2997626b8e91780eaf33885072ae", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-10-31T12:46:12Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startHour > endHour) || ((startHour == endHour) && (startMin >= endMin))) { createDialog(\"Invalid Time Range\", \"Please specify a valid range.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3223/buggy-version/Vibernate-2.src.main.java.com.napontaratan.vibernate.CreateTimerActivity.java", "BodyUseAPI": [], "Fixed commit": "9584476c8021365b153bd61b362ae53b16a941f7", "Url": "https://api.github.com/repos/D-PLAN/Vibernate-2", "Date": "2015-04-27T00:59:37Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (v != null) if (v.equals(RewardType.Command)) next = main.java.me.ultimate.LiteQuests.Language.UNVALID_TYPE; else if (v.equals(RewardType.Item)) next = main.java.me.ultimate.LiteQuests.Language.PUT_ITEM_IN_HAND; else if (v.equals(RewardType.Teleport)) next = main.java.me.ultimate.LiteQuests.Language.LOCATION_SETUP;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2888/buggy-version/src.main.java.me.ultimate.LiteQuests.Utils.QuestCreator.java", "BodyUseAPI": ["main.java.me.ultimate.LiteQuests.QuestManager.Reward.RewardType.equals(RewardType.Item)", "main.java.me.ultimate.LiteQuests.QuestManager.Reward.RewardType.equals(RewardType.Command)", "main.java.me.ultimate.LiteQuests.QuestManager.Reward.RewardType.equals(RewardType.Teleport)"], "Fixed commit": "cd663ee14dcd3016e01b61c30395771ededc8241", "Url": "https://api.github.com/repos/Ultimate-N00b/LiteQuests", "Date": "2013-06-27T21:17:34Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(elem.getAttribute(\"cx\").equals(\"\"))) startPoint.setX(java.lang.Integer.parseInt(elem.getAttribute(\"cx\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/707/buggy-version/paint.src.main.java.com.csci4448.paint4448.shapes.Ellipse.java", "BodyUseAPI": [], "Fixed commit": "8a0f5c62e6b2675753de40c06ce21cd85d1506a0", "Url": "https://api.github.com/repos/th3ac3/Paint_4448", "Date": "2017-05-01T16:02:42Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(elem.getAttribute(\"cy\").equals(\"\"))) startPoint.setY(java.lang.Integer.parseInt(elem.getAttribute(\"cy\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/707/buggy-version/paint.src.main.java.com.csci4448.paint4448.shapes.Ellipse.java", "BodyUseAPI": [], "Fixed commit": "8a0f5c62e6b2675753de40c06ce21cd85d1506a0", "Url": "https://api.github.com/repos/th3ac3/Paint_4448", "Date": "2017-05-01T16:02:42Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (part.isDrawCompleted()) part.drawHeatFlux();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3627/buggy-version/src.main.java.org.concord.energy3d.simulation.SolarRadiation.java", "BodyUseAPI": ["org.concord.energy3d.model.HousePart.drawHeatFlux()"], "Fixed commit": "e708108426b30ab538bbec03b3d71749a8b31433", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2016-01-21T16:30:13Z"},
{"Line": "=>733", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.concord.energy3d.scene.SceneManager.getInstance().getSelectedPart()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((selectedPart != null) && (!(selectedPart.isDrawCompleted()))) { org.concord.energy3d.scene.Scene.getInstance().remove(selectedPart, true); org.concord.energy3d.scene.SceneManager.getInstance().setSelectedPart(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3627/buggy-version/src.main.java.org.concord.energy3d.gui.MainPanel.java", "BodyUseAPI": ["org.concord.energy3d.scene.Scene.getInstance().remove(org.concord.energy3d.model.HousePart,boolean)"], "Fixed commit": "e708108426b30ab538bbec03b3d71749a8b31433", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2016-01-21T16:30:13Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((quantity) == 0) { return monthlyCosts; }else { return monthlyCosts.multiply(new java.math.BigDecimal(quantity)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4738/buggy-version/backend.src.main.java.de.slackspace.rmanager.gameengine.domain.Cabinet.java", "BodyUseAPI": [], "Fixed commit": "e2468466dbd3fe16da6bbaaf8f630f347ebd33e9", "Url": "https://api.github.com/repos/cternes/R-Manager", "Date": "2015-05-15T20:52:41Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temp_reverse != reverse) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6390/buggy-version/Leetcode.src.reverse_integer_j.java", "BodyUseAPI": [], "Fixed commit": "18beeff058486b858cabbd18f241378e83d77841", "Url": "https://api.github.com/repos/geeks-codes/codes", "Date": "2017-08-24T01:08:55Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node instanceof com.redhat.ceylon.compiler.typechecker.tree.Tree.Declaration) { com.redhat.ceylon.compiler.typechecker.tree.Tree.Declaration decNode = ((com.redhat.ceylon.compiler.typechecker.tree.Tree.Declaration) (node)); d = decNode.getDeclarationModel(); }else if (node instanceof com.redhat.ceylon.compiler.typechecker.tree.Tree.BaseMemberExpression) { d = ((com.redhat.ceylon.compiler.typechecker.tree.Tree.BaseMemberExpression) (node)).getDeclaration(); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6354/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.quickfix.CeylonQuickFixAssistant.java", "BodyUseAPI": [], "Fixed commit": "6d01a5b98d35f13e41223d18ffab053c56d73834", "Url": "https://api.github.com/repos/ceylon/ceylon-ide-eclipse", "Date": "2013-09-23T12:15:22Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.getCurrentArchitecture()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.getCurrentOs().isWindows()) && ((architecture.getInstructionSet()) == (ArchitectureInternal.InstructionSet.X86))) && ((architecture.getRegisterSize()) == 64)) { architecture = new org.gradle.nativeplatform.platform.internal.DefaultArchitecture(architecture.getName(), ArchitectureInternal.InstructionSet.X86, 32); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7483/buggy-version/subprojects.platform-native.src.main.groovy.org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.java", "BodyUseAPI": ["org.gradle.nativeplatform.platform.internal.ArchitectureInternal.getName()"], "Fixed commit": "7cb403b094e462f4a93074671f073b74e334e92a", "Url": "https://api.github.com/repos/gradle/gradle", "Date": "2014-10-20T21:10:31Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.DataInputStream.read(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (readed != length) { throw new com.linuxense.javadbf.DBFException(((\"failed to read:\" + length) + \" bytes\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8886/buggy-version/src.main.java.com.linuxense.javadbf.DBFUtils.java", "BodyUseAPI": [], "Fixed commit": "1d7ce47bef04d33a8502fd9d7260a31c7e72b4aa", "Url": "https://api.github.com/repos/albfernandez/javadbf", "Date": "2017-02-15T00:12:16Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["group4.tcss450.uw.edu.challengeapp.VisionActivity.2.handleJSON(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (query != null) { intent.putExtra(\"query\", handleJSON(result)); startActivity(intent); }else { android.widget.Toast.makeText(this, (\"We saw a plant, but were unable to \" + \"determine what it was. please try again.\"), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4944/buggy-version/app.src.main.java.group4.tcss450.uw.edu.challengeapp.VisionActivity.java", "BodyUseAPI": [], "Fixed commit": "b5acaa519cdfe5d57bc2702dee413109fc6099ef", "Url": "https://api.github.com/repos/Rpotter8/tcss450App", "Date": "2017-05-30T01:06:40Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == 2) { if (resultCode == (RESULT_OK)) { mChosenFile = data.getStringExtra(\"result\"); mChosenFile = mChosenFile.substring(((mChosenFile.lastIndexOf(\"/\")) + 1), mChosenFile.length()); mHandler.post(importDB); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2414/buggy-version/app.src.main.java.com.fieldbook.tracker.ConfigActivity.java", "BodyUseAPI": [], "Fixed commit": "c091e2e803ea60d2520830423885947e360241e3", "Url": "https://api.github.com/repos/PhenoApps/Field-Book", "Date": "2017-09-05T19:36:12Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.java1234.util.PageIUtil.instance) != null) return com.java1234.util.PageIUtil.instance;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8481/buggy-version/src.com.java1234.util.PageIUtil.java", "BodyUseAPI": [], "Fixed commit": "1b7c480b9b75343dd0ad3bc0469108d9b440e4ba", "Url": "https://api.github.com/repos/ldgej/Xsxk", "Date": "2017-08-12T19:00:15Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.java1234.util.StringIUtil.instance) != null) return com.java1234.util.StringIUtil.instance;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8481/buggy-version/src.com.java1234.util.StringIUtil.java", "BodyUseAPI": [], "Fixed commit": "1b7c480b9b75343dd0ad3bc0469108d9b440e4ba", "Url": "https://api.github.com/repos/ldgej/Xsxk", "Date": "2017-08-12T19:00:15Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((instance) != null) return instance;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8481/buggy-version/src.com.java1234.util.DBIUtil.java", "BodyUseAPI": [], "Fixed commit": "1b7c480b9b75343dd0ad3bc0469108d9b440e4ba", "Url": "https://api.github.com/repos/ldgej/Xsxk", "Date": "2017-08-12T19:00:15Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.ingrid.utils.query.FieldQuery.getFieldName()", "fieldQuery.getFieldValue().toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((\"incl_meta\".equals(indexField)) && (\"on\".equals(value))) { }else if (value.contains(\"*\")) { subQuery = org.elasticsearch.index.query.QueryBuilders.wildcardQuery(indexField, value); bq = de.ingrid.admin.elasticsearch.converter.ConverterUtils.applyAndOrRules(fieldQuery, bq, subQuery); }else { subQuery = org.elasticsearch.index.query.QueryBuilders.matchQuery(fieldQuery.getFieldName(), fieldQuery.getFieldValue()); bq = de.ingrid.admin.elasticsearch.converter.ConverterUtils.applyAndOrRules(fieldQuery, bq, subQuery); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/461/buggy-version/src.main.java.de.ingrid.admin.elasticsearch.converter.FieldQueryIGCConverter.java", "BodyUseAPI": ["org.elasticsearch.index.query.QueryBuilders.wildcardQuery(java.lang.String,java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "0a4f728dff50eaf3e3ccc55250a77a32c5764612", "Url": "https://api.github.com/repos/informationgrid/ingrid-base-webapp", "Date": "2015-11-18T11:12:27Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (shouldCheckVersion) { checkVersionCompatibility(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4196/buggy-version/api.src.main.java.com.basistech.rosette.api.RosetteAPI.java", "BodyUseAPI": [], "Fixed commit": "a2bf271a36e18ba8399dcc578d862f1a80f41bed", "Url": "https://api.github.com/repos/dandersonw/java", "Date": "2016-03-31T12:46:30Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sawai.medical.service.UserService.getById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (user != null) { java.util.List<com.sawai.medical.model.PhoneNumber> outputList = new java.util.ArrayList<com.sawai.medical.model.PhoneNumber>(); for (com.sawai.medical.model.PhoneNumber phoneNumber : phoneNumbers) { phoneNumber.setUser(user); outputList.add(createPhoneNumber(phoneNumber)); } return outputList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3468/buggy-version/src.main.java.com.sawai.medical.service.impl.PhoneNumberServiceImpl.java", "BodyUseAPI": ["com.sawai.medical.model.PhoneNumber.setUser(com.sawai.medical.model.User)"], "Fixed commit": "1a851dd2920700da29015694c3778e6847e82876", "Url": "https://api.github.com/repos/sawaisinghrajadhok/medical-services", "Date": "2017-06-07T04:43:41Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.service.PersistedModelLocalServiceRegistryUtil.getPersistedModelLocalService(entry.getClassName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (persistedModelLocalService instanceof com.liferay.portal.kernel.service.PersistedResourcedModelLocalService) { com.liferay.portal.kernel.service.PersistedResourcedModelLocalService persistedResourcedModelLocalService = ((com.liferay.portal.kernel.service.PersistedResourcedModelLocalService) (persistedModelLocalService)); java.util.List<? extends com.liferay.portal.kernel.model.PersistedModel> persistedModels = persistedResourcedModelLocalService.getPersistedModel(newClassPK); if (com.liferay.portal.kernel.util.ListUtil.isEmpty(persistedModels)) { return; } }else { persistedModelLocalService.getPersistedModel(newClassPK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2300/buggy-version/modules.apps.collaboration.ratings.ratings-service.src.main.java.com.liferay.ratings.internal.exportimport.data.handler.RatingsEntryStagedModelDataHandler.java", "BodyUseAPI": ["com.liferay.portal.kernel.service.PersistedModelLocalService.getPersistedModel(long)"], "Fixed commit": "dcb71a1ba0e00707e8cfc74263b9655bbe231df3", "Url": "https://api.github.com/repos/linolaoj/liferay-portal", "Date": "2017-07-18T15:08:40Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestCode == (com.example.edwin.photoarchive.Activity2.ACTIVITY_START_CAMERA_APP)) && (resultCode == (RESULT_CANCELED))) { java.io.File file = new java.io.File(imageFileLocation); file.delete(); this.sendBroadcast(new android.content.Intent(android.content.Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, android.net.Uri.fromFile(new java.io.File(imageFileLocation)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7196/buggy-version/app.src.main.java.com.example.edwin.photoarchive.Activity2.java", "BodyUseAPI": [], "Fixed commit": "c2ae72f3dee2ab526c8498c7cd51621570d53b32", "Url": "https://api.github.com/repos/AF-PENS/ANDROID", "Date": "2016-10-23T22:11:46Z"},
{"Line": "=>880", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o != null) { return styleFile.equals(((net.sf.jabref.oo.OOBibStyle) (o)).styleFile); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/9264/buggy-version/src.main.java.net.sf.jabref.oo.OOBibStyle.java", "BodyUseAPI": [], "Fixed commit": "b7812d18bb741e9442b75fed6df13e0a6dd3184a", "Url": "https://api.github.com/repos/JabRef/jabref", "Date": "2015-07-16T11:34:16Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (activatedOnDate != null) { this.activatedOnDate.add(activatedOnDate.getYear()); this.activatedOnDate.add(activatedOnDate.get(org.joda.time.DateTimeFieldType.monthOfYear())); this.activatedOnDate.add(activatedOnDate.getDayOfMonth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4283/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.dataimport.data.savings.SavingsTimeline.java", "BodyUseAPI": [], "Fixed commit": "de6670d38a26f430b4ce03518af2b189805c5717", "Url": "https://api.github.com/repos/diunuge/mifosx", "Date": "2014-08-01T06:21:59Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((remoteDatabases.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2049/buggy-version/syncany-lib.src.main.java.org.syncany.database.dao.ApplicationSqlDao.java", "BodyUseAPI": [], "Fixed commit": "e278461386d3176c38f5ff35a9514c9d3357e6af", "Url": "https://api.github.com/repos/syncany/syncany", "Date": "2015-04-04T13:13:52Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<petablox.util.soot.SootClass, java.util.HashSet<petablox.util.soot.SootClass>>.get(petablox.util.soot.SootClass)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (j != null) iSet.addAll(j);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8517/buggy-version/src.petablox.util.soot.SootUtilities.java", "BodyUseAPI": ["java.util.HashSet<petablox.util.soot.SootClass>.addAll(java.util.HashSet<petablox.util.soot.SootClass>)"], "Fixed commit": "74411aa3a6a562ef62a08a06c104c56a43f0a90b", "Url": "https://api.github.com/repos/KihongHeo/petablox", "Date": "2017-08-25T14:13:10Z"},
{"Line": "=>575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lockedControllerBox) { controllerBox.fitScreen(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6460/buggy-version/annotationtool.annotation.AnnotationToolApplication.java", "BodyUseAPI": [], "Fixed commit": "9ed197a4cf887fa510bc8124b8e7226e14da10b1", "Url": "https://api.github.com/repos/seedor87/scratchpad_project", "Date": "2017-07-03T17:02:45Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lockedControllerBox) { controllerBox.fitScreen(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6460/buggy-version/annotationtool.annotation.AnnotationToolApplication.java", "BodyUseAPI": [], "Fixed commit": "9ed197a4cf887fa510bc8124b8e7226e14da10b1", "Url": "https://api.github.com/repos/seedor87/scratchpad_project", "Date": "2017-07-03T17:02:45Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.buffer.ChannelBuffer.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_GENERIC_NACK)) { pdu = new com.cloudhopper.smpp.pdu.GenericNack(); }else if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_SUBMIT_MULTI_RESP)) { pdu = new com.cloudhopper.smpp.pdu.SubmitMultiResp(); }else { pdu = new com.cloudhopper.smpp.pdu.PartialPduResp(commandId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2456/buggy-version/src.main.java.com.cloudhopper.smpp.transcoder.DefaultPduTranscoder.java", "BodyUseAPI": [], "Fixed commit": "4ac58e07759efbe7fd0648a992167d225a3e687c", "Url": "https://api.github.com/repos/RestComm/cloudhopper-smpp", "Date": "2013-06-09T08:31:22Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.buffer.ChannelBuffer.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_ALERT_NOTIFICATION)) { pdu = new com.cloudhopper.smpp.pdu.AlertNotification(); }else if (commandId == (com.cloudhopper.smpp.SmppConstants.CMD_ID_SUBMIT_MULTI)) { pdu = new com.cloudhopper.smpp.pdu.SubmitMulti(); }else { pdu = new com.cloudhopper.smpp.pdu.PartialPdu(commandId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2456/buggy-version/src.main.java.com.cloudhopper.smpp.transcoder.DefaultPduTranscoder.java", "BodyUseAPI": [], "Fixed commit": "4ac58e07759efbe7fd0648a992167d225a3e687c", "Url": "https://api.github.com/repos/RestComm/cloudhopper-smpp", "Date": "2013-06-09T08:31:22Z"},
{"Line": "=>883", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zkoss.idom.Element.getLocalName()", "org.zkoss.zk.ui.metainfo.PageDefinition.getLanguageDefinition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((\"custom-attributes\".equals(nm)) && (org.zkoss.zk.ui.metainfo.Parser.isZkElement(langdef, nm, pref, uri, bNativeContent))) { org.zkoss.zk.ui.metainfo.Parser.parseCustomAttributes(langdef, parent, el, annHelper); }else if ((\"variables\".equals(nm)) && (org.zkoss.zk.ui.metainfo.Parser.isZkElement(langdef, nm, pref, uri, bNativeContent))) { org.zkoss.zk.ui.metainfo.Parser.parseVariables(langdef, parent, el, annHelper); }else if ((\"zk\".equals(nm)) && (org.zkoss.zk.ui.metainfo.Parser.isZkElement(langdef, nm, pref, uri))) { parseItems(pgdef, org.zkoss.zk.ui.metainfo.Parser.parseZk(parent, el, annHelper), el.getChildren(), annHelper, bNativeContent); }else if (org.zkoss.zk.ui.metainfo.Parser.isShadowElement(langdef, pgdef, nm, pref, uri, bNativeContent)) { parseItems(pgdef, org.zkoss.zk.ui.metainfo.Parser.parseShadowElement(pgdef, parent, el, annHelper), el.getChildren(), annHelper, bNativeContent); }else { if (org.zkoss.zk.ui.metainfo.Parser.isZkSwitch(parent)) throw new org.zkoss.zk.ui.UiException(org.zkoss.zk.ui.metainfo.Parser.message(\"Only <zk> can be used in <zk switch>\", el)); boolean prefRequired = uri.startsWith(LanguageDefinition.NATIVE_NAMESPACE_PREFIX); boolean bNative = ((bNativeContent || prefRequired) || (LanguageDefinition.NATIVE_NAMESPACE.equals(uri))) || (\"native\".equals(uri)); if (((!bNative) && (langdef.isNative())) && (!(langdef.getNamespace().equals(uri)))) bNative = prefRequired = ((\"\".equals(pref)) && (\"\".equals(uri))) || (!(org.zkoss.zk.ui.metainfo.LanguageDefinition.exists(uri))); final org.zkoss.zk.ui.metainfo.ComponentInfo compInfo; if (bNative) { if (annHelper.clear()) org.zkoss.zk.ui.metainfo.Parser.log.warn(org.zkoss.zk.ui.metainfo.Parser.message(\"Annotations are ignored since native doesn't support them\", el)); final org.zkoss.zk.ui.metainfo.NativeInfo ni; compInfo = ni = new org.zkoss.zk.ui.metainfo.NativeInfo(parent, langdef.getNativeDefinition(), (prefRequired && ((pref.length()) > 0) ? (pref + \":\") + nm : nm)); final java.util.Collection<org.zkoss.idom.Namespace> dns = el.getDeclaredNamespaces(); if (!(dns.isEmpty())) org.zkoss.zk.ui.metainfo.Parser.addDeclaredNamespace(ni, dns, langdef); }else { final boolean defaultNS = org.zkoss.zk.ui.metainfo.Parser.isDefaultNS(langdef, pref, uri); final org.zkoss.zk.ui.metainfo.LanguageDefinition complangdef = (defaultNS) ? langdef : org.zkoss.zk.ui.metainfo.LanguageDefinition.lookup(uri); org.zkoss.zk.ui.metainfo.ComponentDefinition compdef = (defaultNS) ? pgdef.getComponentDefinitionMap().get(nm) : null; if (compdef != null) { compInfo = new org.zkoss.zk.ui.metainfo.ComponentInfo(parent, compdef, nm); }else if (complangdef.hasComponentDefinition(nm)) { compdef = complangdef.getComponentDefinition(nm); compInfo = new org.zkoss.zk.ui.metainfo.ComponentInfo(parent, compdef, nm); langdef = complangdef; }else { compdef = complangdef.getDynamicTagDefinition(); if (compdef == null) throw new org.zkoss.zk.ui.metainfo.DefinitionNotFoundException(org.zkoss.zk.ui.metainfo.Parser.message((((\"Component definition not found: \" + nm) + \" in \") + complangdef), el)); compInfo = new org.zkoss.zk.ui.metainfo.ComponentInfo(parent, compdef, nm); langdef = complangdef; } java.lang.String use = el.getAttributeValue(\"use\"); if (use != null) { use = use.trim(); if ((use.length()) != 0) compInfo.setImplementation(use); } } java.lang.String ifc = null; java.lang.String unless = null; java.lang.String forEach = null; java.lang.String forEachBegin = null; java.lang.String forEachEnd = null; java.lang.String forEachStep = null; org.zkoss.zk.ui.metainfo.impl.AnnotationHelper attrAnnHelper = null; boolean isMVVM = false; for (java.util.Iterator it = el.getAttributeItems().iterator(); it.hasNext();) { final org.zkoss.idom.Attribute attr = ((org.zkoss.idom.Attribute) (it.next())); final org.zkoss.idom.Namespace attrns = attr.getNamespace(); final java.lang.String attURI = (attrns != null) ? attrns.getURI() : \"\"; final java.lang.String attnm = attr.getLocalName(); final java.lang.String attval = attr.getValue(); final java.lang.String attPref = (attrns != null) ? attrns.getPrefix() : \"\"; if ((((org.zkoss.zk.ui.metainfo.Parser.isNativeNamespace(uri)) || (org.zkoss.zk.ui.metainfo.Parser.isXmlNamespace(uri))) || (\"native\".equals(langName))) || (\"xml\".equals(langName))) { if (((((!(org.zkoss.zk.ui.metainfo.Parser.isZkAttr(langdef, attrns))) && (!(org.zkoss.zk.ui.metainfo.Parser.isZKNamespace(attURI)))) && (!(\"xmlns\".equals(attPref)))) && (!((\"xmlns\".equals(attnm)) && (\"\".equals(attPref))))) && (!(\"http://www.w3.org/2001/XMLSchema-instance\".equals(attURI)))) { compInfo.addProperty(attr.getName(), attval, null); continue; }else if ((org.zkoss.zk.ui.metainfo.Parser.isClientNamespace(attURI)) || (org.zkoss.zk.ui.metainfo.Parser.isClientAttrNamespace(attURI))) { compInfo.addProperty(attnm, attval, null); continue; } } if ((\"apply\".equals(attnm)) && (org.zkoss.zk.ui.metainfo.Parser.isZkAttr(langdef, attrns))) { compInfo.setApply(attval); }else if ((\"forward\".equals(attnm)) && (org.zkoss.zk.ui.metainfo.Parser.isZkAttr(langdef, attrns))) { compInfo.setForward(attval); }else if ((\"if\".equals(attnm)) && (org.zkoss.zk.ui.metainfo.Parser.isZkAttr(langdef, attrns))) { ifc = attval; }else if ((\"unless\".equals(attnm)) && (org.zkoss.zk.ui.metainfo.Parser.isZkAttr(langdef, attrns))) { unless = attval; }else if ((\"forEach\".equals(attnm)) && (org.zkoss.zk.ui.metainfo.Parser.isZkAttr(langdef, attrns))) { forEach = attval; }else if ((\"forEachStep\".equals(attnm)) && (org.zkoss.zk.ui.metainfo.Parser.isZkAttr(langdef, attrns))) { forEachStep = attval; }else if ((\"forEachBegin\".equals(attnm)) && (org.zkoss.zk.ui.metainfo.Parser.isZkAttr(langdef, attrns))) { forEachBegin = attval; }else if ((\"forEachEnd\".equals(attnm)) && (org.zkoss.zk.ui.metainfo.Parser.isZkAttr(langdef, attrns))) { forEachEnd = attval; }else if ((\"fulfill\".equals(attnm)) && (org.zkoss.zk.ui.metainfo.Parser.isZkAttr(langdef, attrns, bNativeContent))) { compInfo.setFulfill(attval); }else if ((LanguageDefinition.ANNOTATION_NAMESPACE.equals(attURI)) || (\"annotation\".equals(attURI))) { if (attrAnnHelper == null) attrAnnHelper = new org.zkoss.zk.ui.metainfo.impl.AnnotationHelper(); org.zkoss.zk.ui.metainfo.Parser.applyAttrAnnot(attrAnnHelper, compInfo, attnm, attval.trim(), true, org.zkoss.zk.ui.metainfo.Parser.location(attr)); }else if ((!(\"use\".equals(attnm))) || (!(org.zkoss.zk.ui.metainfo.Parser.isZkAttr(langdef, attrns, bNativeContent)))) { final java.lang.String attvaltrim; if (((!(\"xmlns\".equals(attPref))) && (!((\"xmlns\".equals(attnm)) && (\"\".equals(attPref))))) && (!(\"http://www.w3.org/2001/XMLSchema-instance\".equals(attURI)))) { if ((((!bNativeContent) && (!bNative)) && (((attURI.length()) == 0) || (LanguageDefinition.ZK_NAMESPACE.endsWith(attURI)))) && (org.zkoss.zk.ui.metainfo.impl.AnnotationHelper.isAnnotation((attvaltrim = attval.trim())))) { if (attrAnnHelper == null) attrAnnHelper = new org.zkoss.zk.ui.metainfo.impl.AnnotationHelper(); org.zkoss.zk.ui.metainfo.Parser.applyAttrAnnot(attrAnnHelper, compInfo, attnm, attvaltrim, true, org.zkoss.zk.ui.metainfo.Parser.location(attr)); org.zkoss.zk.ui.util.Configuration config = org.zkoss.zk.ui.WebApps.getCurrent().getConfiguration(); if (config.getBinderInitAttribute().equals(attnm)) isMVVM = true; java.util.Set<java.lang.String> binderAnnotations = config.getBinderAnnotations(); for (java.lang.String annot : binderAnnotations) { if ((attvaltrim.indexOf(annot)) != (-1)) { compInfo.enableBindingAnnotation(); break; } } }else { boolean handled = false; for (org.zkoss.zk.ui.metainfo.NamespaceParser nsParser : _nsParsers) { if (nsParser.isMatched(attURI)) { if (nsParser.parse(attr, compInfo, pgdef)) { handled = true; break; } } } if (!handled) { addAttribute(compInfo, attrns, attnm, attval, null, attr.getLocator()); if (attrAnnHelper != null) attrAnnHelper.applyAnnotations(compInfo, attnm, true); } } } } } if (isMVVM) { java.lang.String apply = compInfo.getApply(); if ((apply != null) && ((apply.indexOf(\"org.zkoss.bind.BindComposer\")) != (-1))) { org.zkoss.zk.ui.metainfo.Parser.log.warn(org.zkoss.zk.ui.metainfo.Parser.message(\"If the attribute of viewModel is being used, then \\\"org.zkoss.bind.BindComposer\\\" will be applied automatically\", el)); }else if ((apply == null) || ((apply.length()) == 0)) { compInfo.setApply(\"org.zkoss.bind.BindComposer\"); } } compInfo.setCondition(org.zkoss.zk.ui.util.ConditionImpl.getInstance(ifc, unless)); compInfo.setForEach(forEach, forEachBegin, forEachEnd, forEachStep); annHelper.applyAnnotations(compInfo, null, true); if (((compInfo.getAnnotationMap()) != null) && ((el.getLocator()) != null)) { compInfo.addAnnotation(null, \"ZKLOC\", null, org.zkoss.xml.Locators.toLocation(el.getLocator())); } final java.util.Collection<org.zkoss.idom.Item> items = el.getChildren(); java.lang.String textAs = null; if (((!bNativeContent) && (!(items.isEmpty()))) && ((textAs = compInfo.getTextAs()) != null)) { if ((compInfo.isChildAllowedInTextAs()) || (!(textAsAllowed(langdef, items, bNativeContent)))) textAs = null; } if (textAs != null) parseAsProperty(pgdef, compInfo, textAs, items, annHelper, null); else parseItems(pgdef, compInfo, items, annHelper, bNativeContent); if ((compInfo instanceof org.zkoss.zk.ui.metainfo.NativeInfo) && (!(compInfo.getChildren().isEmpty()))) { org.zkoss.zk.ui.metainfo.Parser.optimizeNativeInfos(((org.zkoss.zk.ui.metainfo.NativeInfo) (compInfo))); return compInfo; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/989/buggy-version/zk.src.org.zkoss.zk.ui.metainfo.Parser.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "org.zkoss.zk.ui.metainfo.Parser.message((((\"Component definition not found: \" + nm) + \" in \") + complangdef),org.zkoss.idom.Element)", "org.zkoss.zk.ui.metainfo.Parser.textAsAllowed(org.zkoss.zk.ui.metainfo.LanguageDefinition,java.util.Collection<org.zkoss.idom.Item>,boolean)", "org.zkoss.zk.ui.metainfo.Parser.isShadowElement(org.zkoss.zk.ui.metainfo.LanguageDefinition,org.zkoss.zk.ui.metainfo.PageDefinition,java.lang.String,java.lang.String,java.lang.String,boolean)", "org.zkoss.zk.ui.metainfo.Parser.parseItems(org.zkoss.zk.ui.metainfo.PageDefinition,org.zkoss.zk.ui.metainfo.NodeInfo,el.getChildren(),org.zkoss.zk.ui.metainfo.impl.AnnotationHelper,boolean)", "org.zkoss.zk.ui.metainfo.Parser.isZkElement(org.zkoss.zk.ui.metainfo.LanguageDefinition,java.lang.String,java.lang.String,java.lang.String)", "org.zkoss.zk.ui.metainfo.Parser.addDeclaredNamespace(org.zkoss.zk.ui.metainfo.NativeInfo,java.util.Collection<org.zkoss.idom.Namespace>,org.zkoss.zk.ui.metainfo.LanguageDefinition)", "org.zkoss.zk.ui.metainfo.Parser.isNativeNamespace(java.lang.String)", "org.zkoss.zk.ui.metainfo.LanguageDefinition.getComponentDefinition(java.lang.String)", "java.lang.String.equals(java.lang.String)", "org.zkoss.zk.ui.metainfo.LanguageDefinition.isNative()", "org.zkoss.zk.ui.metainfo.LanguageDefinition.exists(java.lang.String)", "org.zkoss.zk.ui.metainfo.Parser.isZkElement(org.zkoss.zk.ui.metainfo.LanguageDefinition,java.lang.String,java.lang.String,java.lang.String,boolean)", "LanguageDefinition.NATIVE_NAMESPACE.equals(java.lang.String)", "org.zkoss.zk.ui.metainfo.LanguageDefinition.hasComponentDefinition(java.lang.String)", "java.lang.String.startsWith(LanguageDefinition.NATIVE_NAMESPACE_PREFIX)", "langdef.getNamespace().equals(java.lang.String)", "org.zkoss.zk.ui.metainfo.LanguageDefinition.getNamespace()", "org.zkoss.zk.ui.metainfo.Parser.parseVariables(org.zkoss.zk.ui.metainfo.LanguageDefinition,org.zkoss.zk.ui.metainfo.NodeInfo,org.zkoss.idom.Element,org.zkoss.zk.ui.metainfo.impl.AnnotationHelper)", "org.zkoss.zk.ui.metainfo.Parser.isXmlNamespace(java.lang.String)", "org.zkoss.zk.ui.metainfo.LanguageDefinition.getNativeDefinition()", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "org.zkoss.zk.ui.metainfo.Parser.parseItems(org.zkoss.zk.ui.metainfo.PageDefinition,org.zkoss.zk.ui.metainfo.ZkInfo,el.getChildren(),org.zkoss.zk.ui.metainfo.impl.AnnotationHelper,boolean)", "org.zkoss.zk.ui.metainfo.Parser.parseCustomAttributes(org.zkoss.zk.ui.metainfo.LanguageDefinition,org.zkoss.zk.ui.metainfo.NodeInfo,org.zkoss.idom.Element,org.zkoss.zk.ui.metainfo.impl.AnnotationHelper)", "org.zkoss.zk.ui.metainfo.Parser.isDefaultNS(org.zkoss.zk.ui.metainfo.LanguageDefinition,java.lang.String,java.lang.String)", "java.lang.String.equals(java.lang.String)", "org.zkoss.zk.ui.metainfo.LanguageDefinition.lookup(java.lang.String)", "org.zkoss.zk.ui.metainfo.Parser.parseItems(org.zkoss.zk.ui.metainfo.PageDefinition,org.zkoss.zk.ui.metainfo.ComponentInfo,java.util.Collection<org.zkoss.idom.Item>,org.zkoss.zk.ui.metainfo.impl.AnnotationHelper,boolean)", "org.zkoss.zk.ui.metainfo.Parser.isZkAttr(org.zkoss.zk.ui.metainfo.LanguageDefinition,org.zkoss.idom.Namespace,boolean)", "org.zkoss.zk.ui.metainfo.Parser.isZkAttr(org.zkoss.zk.ui.metainfo.LanguageDefinition,org.zkoss.idom.Namespace,boolean)", "pgdef.getComponentDefinitionMap().get(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "1a6bbdcd8a7081aed8d2a3702f0905e6a08f1c7c", "Url": "https://api.github.com/repos/zkoss/zk", "Date": "2015-10-15T10:22:01Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reportname) != null) { reportFilename = (reportname) + (net.paissad.tools.reqcoco.core.report.ReqReportBuilderHtml.REPORT_FILE_DEFAULT_EXTENSION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5301/buggy-version/reqcoco-maven-plugin.src.main.java.net.paissad.tools.reqcoco.maven.plugin.ReqCocoReportMojo.java", "BodyUseAPI": [], "Fixed commit": "95c1fdff622a5b14588271e8850e8fc710dad860", "Url": "https://api.github.com/repos/paissad/reqcoco", "Date": "2017-04-27T02:07:38Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.inventory.IInventory.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (eplus.helper.EnchantHelper.isItemEnchanted(itemStack)) { temp.putAll(net.minecraft.enchantment.EnchantmentHelper.getEnchantments(itemStack)); for (final net.minecraft.enchantment.Enchantment obj : net.minecraft.enchantment.Enchantment.enchantmentsList) { if (obj == null) continue; boolean add = true; for (final java.lang.Object enc : temp.keySet()) { final net.minecraft.enchantment.Enchantment enchantment = net.minecraft.enchantment.Enchantment.enchantmentsList[((java.lang.Integer) (enc))]; if (enchantment == null) continue; if ((!(obj.canApplyTogether(enchantment))) || (!(enchantment.canApplyTogether(obj)))) { add = false; } } if (((eplus.helper.EnchantHelper.canEnchantItem(itemStack, obj)) && add) && (!(eplus.lib.EnchantmentHelp.isBlackListed(obj)))) { temp2.put(obj.effectId, 0); } } temp.putAll(temp2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3029/buggy-version/src.eplus.inventory.ContainerEnchantTable.java", "BodyUseAPI": ["eplus.helper.EnchantHelper.canEnchantItem(net.minecraft.item.ItemStack,net.minecraft.enchantment.Enchantment)", "net.minecraft.enchantment.EnchantmentHelper.getEnchantments(net.minecraft.item.ItemStack)", "java.util.HashMap<java.lang.Integer, java.lang.Integer>.putAll(net.minecraft.enchantment.EnchantmentHelper.getEnchantments(itemStack))"], "Fixed commit": "3ec4a7145c2d41533dfa7fee6977cf29e14a0f6c", "Url": "https://api.github.com/repos/odininon/EnchantingPlus", "Date": "2013-07-30T13:30:19Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.api.codegen.metacode.InitCodeNode.getFieldConfig()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (methodContext.getFeatureConfig().useResourceNameFormatOption(fieldConfig)) { if (fieldConfig.requiresAnyParamTransformation()) { expectedTransformFunction = namer.getToStringMethod(); actualTransformFunction = namer.getToStringMethod(); }else if (fieldConfig.requiresParamTransformation()) { expectedTransformFunction = namer.getResourceOneofCreateMethod(methodContext.getTypeTable(), fieldConfig); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4291/buggy-version/src.main.java.com.google.api.codegen.transformer.InitCodeTransformer.java", "BodyUseAPI": ["com.google.api.codegen.config.FieldConfig.requiresAnyParamTransformation()", "com.google.api.codegen.transformer.SurfaceNamer.getResourceOneofCreateMethod(methodContext.getTypeTable(),com.google.api.codegen.config.FieldConfig)", "com.google.api.codegen.config.FieldConfig.requiresParamTransformation()", "com.google.api.codegen.transformer.GapicMethodContext.getTypeTable()"], "Fixed commit": "8b6609fbc78aab79a967ba43a66e9847cd954c3f", "Url": "https://api.github.com/repos/vam-google/gapic-generator", "Date": "2017-07-26T01:40:45Z"},
{"Line": "=>811", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fieldConfig.requiresAnyParamTransformation())) { transformParamFunctionName = namer.getResourceOneofCreateMethod(typeTable, fieldConfig); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4291/buggy-version/src.main.java.com.google.api.codegen.transformer.StaticLangApiMethodTransformer.java", "BodyUseAPI": ["com.google.api.codegen.transformer.SurfaceNamer.getResourceOneofCreateMethod(com.google.api.codegen.transformer.ModelTypeTable,com.google.api.codegen.config.FieldConfig)"], "Fixed commit": "8b6609fbc78aab79a967ba43a66e9847cd954c3f", "Url": "https://api.github.com/repos/vam-google/gapic-generator", "Date": "2017-07-26T01:40:45Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((params.get(\"mode\")) != null) { mode = com.bladecoder.engine.actions.PositionAction.Mode.valueOf(params.get(\"mode\").trim().toUpperCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3202/buggy-version/blade-engine.src.com.bladecoder.engine.actions.PositionAction.java", "BodyUseAPI": ["com.bladecoder.engine.actions.PositionAction.Mode.valueOf(java.lang.String)", "java.lang.String.toUpperCase()", "java.lang.String.trim()", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "ed3280b6ff229bee9ccd9148989aa6256461728f", "Url": "https://api.github.com/repos/Arcnor/bladecoder-adventure-engine", "Date": "2015-08-19T22:36:35Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((params.get(\"interpolation\")) != null) { interpolation = com.bladecoder.engine.util.InterpolationMode.valueOf(params.get(\"interpolation\").trim().toUpperCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3202/buggy-version/blade-engine.src.com.bladecoder.engine.actions.PositionAction.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "com.bladecoder.engine.util.InterpolationMode.valueOf(java.lang.String)", "java.lang.String.trim()", "java.lang.String.toUpperCase()"], "Fixed commit": "ed3280b6ff229bee9ccd9148989aa6256461728f", "Url": "https://api.github.com/repos/Arcnor/bladecoder-adventure-engine", "Date": "2015-08-19T22:36:35Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mSsids) != null) && ((mSsids.size()) > 0)) { mSsid.setSelection(selection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7079/buggy-version/src.riddimon.android.asianetautologin.CredentialActivity.java", "BodyUseAPI": [], "Fixed commit": "c9c2302c4d4b9aa2a67ea1a1e53ab88ab536923b", "Url": "https://api.github.com/repos/ridhishguhan/asianet-autologin", "Date": "2013-08-18T08:52:18Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((coord) == null) { return new java.util.LinkedList<com.lajv.NodeWrapper>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7571/buggy-version/src.com.lajv.closepeer.ClosePeerProtocol.java", "BodyUseAPI": [], "Fixed commit": "3d0c8316087f8ab199a69d182c22b9adb31ca9cb", "Url": "https://api.github.com/repos/JYZR/peersim-closepeer", "Date": "2014-05-28T15:35:08Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.phcri.GridFromXml.getElementValueAsStr(org.w3c.dom.Element,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"null\".equals(str)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/181/buggy-version/src.main.java.ca.phcri.GridFromXml.java", "BodyUseAPI": [], "Fixed commit": "4854da3c1c12b74dbb3702de76ab04e36efc1654", "Url": "https://api.github.com/repos/phcri/imagej-combined-grids-plugin", "Date": "2015-02-08T13:56:25Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) != null) { getLog().error(e.getCause(), \"HadoopInstaller.Installation.HostFailed\", host.getHostname()); }else { getLog().error(e, \"HadoopInstaller.Installation.HostFailed\", host.getHostname()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/932/buggy-version/src.main.java.hadoopInstaller.installation.Installer.java", "BodyUseAPI": ["hadoopInstaller.logging.MessageFormattingLog.error(e.getCause(),java.lang.String,host.getHostname())", "hadoopInstaller.exception.InstallationError.getCause()", "hadoopInstaller.logging.MessageFormattingLog.error(hadoopInstaller.exception.InstallationError,java.lang.String,host.getHostname())"], "Fixed commit": "bb23f25a52474e858932ef6ec34f105ee786c6c5", "Url": "https://api.github.com/repos/serpi90/hadoop-installer", "Date": "2016-02-17T00:13:16Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit.RetrofitError.getBodyAs(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (apiError == null) { registrationErrorText.setText(R.string.could_not_connect_to_server); }else { registrationErrorText.setText(apiError.messages()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6610/buggy-version/app.src.main.java.com.thoughtworks.yoTWo.android.activities.RegistrationActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(apiError.messages())", "com.thoughtworks.yotwo.api.ApiError.messages()"], "Fixed commit": "1653185624b4f74cc9343b98918838de15817ffd", "Url": "https://api.github.com/repos/jeredp/yoTWo", "Date": "2014-07-11T15:27:50Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isMouseOnEdgePath(event))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6204/buggy-version/violet-framework.src.main.java.com.horstmann.violet.workspace.editorpart.behavior.AddTransitionPointBehavior.java", "BodyUseAPI": [], "Fixed commit": "f32e625be4ab52d4e9ed278fe889795b34d24429", "Url": "https://api.github.com/repos/violetumleditor/violetumleditor", "Date": "2015-01-06T11:25:36Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GamePackage.Command.getCommandWord()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (commandWord.equals(\"help\")) { printHelp(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3666/buggy-version/src.GamePackage.Game.java", "BodyUseAPI": [], "Fixed commit": "d436a779a6fa05bc8b21ab87c7888e89ca62486e", "Url": "https://api.github.com/repos/duqcyxwd/SYSC3110-Project--ZuuM", "Date": "2012-11-01T04:11:13Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.ticktask.model.task.DueDate.getLocalEndDate()", "java.time.LocalDate.now()", "java.time.LocalTime.now()", "seedu.ticktask.model.task.DueTime.getLocalEndTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((endDate.equals(nowDate)) && (endTime.isBefore(nowTime))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1285/buggy-version/src.main.java.seedu.ticktask.model.task.Task.java", "BodyUseAPI": [], "Fixed commit": "0344e2e9e813a96f1f8f20f7d8f125fc81de97f7", "Url": "https://api.github.com/repos/CS2103JUN2017-T1/main", "Date": "2017-07-24T09:30:42Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (time.getEndTime().equals(\"\")) { time.setEndTime(time.getLocalStartTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1285/buggy-version/src.main.java.seedu.ticktask.model.task.Task.java", "BodyUseAPI": ["seedu.ticktask.model.task.DueTime.setEndTime(time.getLocalStartTime())", "seedu.ticktask.model.task.DueTime.getLocalStartTime()"], "Fixed commit": "0344e2e9e813a96f1f8f20f7d8f125fc81de97f7", "Url": "https://api.github.com/repos/CS2103JUN2017-T1/main", "Date": "2017-07-24T09:30:42Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (date.getEndDate().equals(\"\")) { date.setEndDate(date.getLocalStartDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1285/buggy-version/src.main.java.seedu.ticktask.model.task.Task.java", "BodyUseAPI": ["seedu.ticktask.model.task.DueDate.getLocalStartDate()", "seedu.ticktask.model.task.DueDate.setEndDate(date.getLocalStartDate())"], "Fixed commit": "0344e2e9e813a96f1f8f20f7d8f125fc81de97f7", "Url": "https://api.github.com/repos/CS2103JUN2017-T1/main", "Date": "2017-07-24T09:30:42Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((configuration) == null) { return new org.jboss.tools.windup.ui.internal.explorer.IssueExplorerContentProvider.TreeNode[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6917/buggy-version/plugins.org.jboss.tools.windup.ui.src.org.jboss.tools.windup.ui.internal.explorer.IssueExplorerContentProvider.java", "BodyUseAPI": [], "Fixed commit": "73ca5b2c2ec203fc8dab6768e12ad2ed9cb98e2b", "Url": "https://api.github.com/repos/windup/windup-eclipse-plugin", "Date": "2016-11-22T00:50:53Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRoot) == null) mRoot = new TreeNode<>(key, data);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5626/buggy-version/src.uk.ac.cam.josi2.DataStructures.BinarySearchTree.java", "BodyUseAPI": [], "Fixed commit": "d96cb77ae1e84ede6009ec478b0b6ab67b075a6c", "Url": "https://api.github.com/repos/Curdled/Algorithms", "Date": "2015-04-07T12:57:35Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sessions.isEmpty()) { addNewSession(search); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3992/buggy-version/src.sk.stuba.fiit.ms.session.identifiers.consecutive.ConsecutiveSessionIdentifier.java", "BodyUseAPI": [], "Fixed commit": "960db6bfded433f359217c8691c27db997a9bffd", "Url": "https://api.github.com/repos/martinpetlus/session-identifier", "Date": "2015-04-25T19:28:47Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((n <= 0) || (trials <= 0)) throw new java.lang.IllegalArgumentException(\"both arguments N and T must be greater than 1\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5621/buggy-version/Percolation.src.PercolationStats.java", "BodyUseAPI": [], "Fixed commit": "cf3758d8c93ea023ed11b0bca6c2b1df962ef3a3", "Url": "https://api.github.com/repos/Nero5023/Princeton-Algorithms-Part1", "Date": "2017-03-18T13:32:08Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.crowsofwar.avatar.common.data.ctx.AbilityContext.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (data.hasStatusControl(StatusControl.SHIELD_SHATTER)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5037/buggy-version/src.main.java.com.crowsofwar.avatar.common.bending.ice.AbilityIceBurst.java", "BodyUseAPI": [], "Fixed commit": "6015504e5f87c7d1065c745cd14559ab7b87c7ed", "Url": "https://api.github.com/repos/ProjectKorra/AvatarMod", "Date": "2017-12-07T02:48:55Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rollPeriod >= (com.dp.blackhole.common.Util.magic)) { ret = ret - (com.dp.blackhole.common.Util.magic); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1877/buggy-version/src.main.java.com.dp.blackhole.common.Util.java", "BodyUseAPI": [], "Fixed commit": "6d7dc33d11c7018f238474e6e3aa8898bdf25e87", "Url": "https://api.github.com/repos/LantaoJin/blackhole", "Date": "2013-09-06T07:44:30Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (game.getTicTacToeGameList().get(j).getPlayer2().equals(game.getPlayer().getName())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7332/buggy-version/client.network.UDPClient.Client.java", "BodyUseAPI": [], "Fixed commit": "0ef852f43a2298c44c0898d2468a58f9adf1079e", "Url": "https://api.github.com/repos/Legio17/src", "Date": "2016-12-12T11:09:10Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(swt.isSingleWord())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4373/buggy-version/src.main.java.eu.project.ttc.engines.morpho.PrefixSplitter.java", "BodyUseAPI": [], "Fixed commit": "79f552b0f126526f3205a0a8359299038242a760", "Url": "https://api.github.com/repos/termsuite/termsuite-core", "Date": "2016-06-30T15:51:47Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.firstName.equals(other.getFirstName()))) { return this.firstName.compareTo(other.getFirstName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3333/buggy-version/com.teamtreehouse.model.Player.java", "BodyUseAPI": ["com.teamtreehouse.model.Player.getFirstName()", "java.lang.String.compareTo(java.lang.String)"], "Fixed commit": "91f74d708a735477bbd6b63176939be84dcc0e55", "Url": "https://api.github.com/repos/francesyu90/Soccer-League-Organizer", "Date": "2017-10-14T21:31:30Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(nextMatching.isReady())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4377/buggy-version/subprojects.core.src.main.groovy.org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.java", "BodyUseAPI": [], "Fixed commit": "faed55694d2ba2e62e486ddf7a281ceb300fda77", "Url": "https://api.github.com/repos/gradle/gradle", "Date": "2012-08-10T03:15:29Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) <= (Build.VERSION_CODES.HONEYCOMB_MR2)) request.setShowRunningNotification(true); else request.setNotificationVisibility(DownloadManager.Request.VISIBILITY_VISIBLE_NOTIFY_COMPLETED);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6831/buggy-version/src.com.nasageek.utexasutilities.fragments.BlackboardDownloadableItemFragment.java", "BodyUseAPI": [], "Fixed commit": "912f245350090797dbff954cc7269c29b2bb9b02", "Url": "https://api.github.com/repos/NasaGeek/utexas-utilities", "Date": "2013-09-10T05:13:43Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inTransaction()) return mDb;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5833/buggy-version/app.src.main.java.me.arbogast.trainponctuality.DBAccess.DAOBase.java", "BodyUseAPI": [], "Fixed commit": "ef595ed8dc6e1d6264a1dd330aa02a44b2e757eb", "Url": "https://api.github.com/repos/Baleine82/TrainPonctuality", "Date": "2017-02-11T13:59:58Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inTransaction()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5833/buggy-version/app.src.main.java.me.arbogast.trainponctuality.DBAccess.DAOBase.java", "BodyUseAPI": [], "Fixed commit": "ef595ed8dc6e1d6264a1dd330aa02a44b2e757eb", "Url": "https://api.github.com/repos/Baleine82/TrainPonctuality", "Date": "2017-02-11T13:59:58Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inTransaction()) && (!(mDb.isReadOnly()))) return mDb;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5833/buggy-version/app.src.main.java.me.arbogast.trainponctuality.DBAccess.DAOBase.java", "BodyUseAPI": [], "Fixed commit": "ef595ed8dc6e1d6264a1dd330aa02a44b2e757eb", "Url": "https://api.github.com/repos/Baleine82/TrainPonctuality", "Date": "2017-02-11T13:59:58Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (list == \"\") { sender.sendMessage(\"There are currently no available kits.\"); }else { sender.sendMessage(list.substring(0, ((list.length()) - 2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8033/buggy-version/src.main.java.com.lol768.LiteKits.commands.Kit.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(java.lang.String)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "7f1a0619648b3a9de55ae3e0ab54a5db62013783", "Url": "https://api.github.com/repos/lol768/LiteKits", "Date": "2013-04-18T20:18:28Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSending) { sendData.setChecked(false); isSending = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6704/buggy-version/src.ar.com.fclad.datasender.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d6a1952f47c74ea747873153f6ff5f9df8205ee5", "Url": "https://api.github.com/repos/fcladera/Qriro", "Date": "2013-11-10T01:11:19Z"},
{"Line": "=>1319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDisplayedTopic().getId()) != null) { getServerSettings(new org.jboss.pressgang.ccms.ui.client.local.callbacks.ServerSettingsCallback() { @java.lang.Override public void serverSettingsLoaded(@org.jetbrains.annotations.NotNull org.jboss.pressgang.ccms.rest.v1.elements.RESTServerSettingsV1 serverSettings) { final java.lang.Integer contentSpecTagId = serverSettings.getEntities().getContentSpecTagId(); if (contentSpecTagId != null) { final java.lang.String query = ((\"query;tag\" + contentSpecTagId) + \"=1;topicIds=\") + (getDisplayedTopic().getId()); getFailOverRESTCall().performRESTCall(org.jboss.pressgang.ccms.ui.client.local.restcalls.FailOverRESTCallDatabase.getTopicsFromQuery(query), new org.jboss.pressgang.ccms.ui.client.local.restcalls.RESTCallBack<org.jboss.pressgang.ccms.rest.v1.collections.RESTTopicCollectionV1>() { public void success(@org.jetbrains.annotations.NotNull final org.jboss.pressgang.ccms.rest.v1.collections.RESTTopicCollectionV1 retValue) { if ((retValue.getSize()) != 0) { if (com.google.gwt.user.client.Window.confirm((((((PressGangCCMSUI.INSTANCE.OldContentSpec()) + \"\\n\\n\") + (PressGangCCMSUI.INSTANCE.OldContentSpec2().replace(\"#\", getDisplayedTopic().getId().toString()))) + \"\\n\\n\") + (PressGangCCMSUI.INSTANCE.OldContentSpec3())))) { getEventBus().fireEvent(new org.jboss.pressgang.ccms.ui.client.local.mvp.events.viewevents.ContentSpecSearchResultsAndContentSpecViewEvent((\"query;contentSpecIds=\" + (getDisplayedTopic().getId())), false)); } } } }); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6467/buggy-version/src.main.java.org.jboss.pressgang.ccms.ui.client.local.mvp.presenter.topic.searchresults.topics.TopicFilteredResultsAndDetailsPresenter.java", "BodyUseAPI": [], "Fixed commit": "ead640463ac2371fa4b9b22978105d92a9f50c31", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSUI", "Date": "2014-03-30T08:35:21Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.geat.GitUtils.hasRemote(java.lang.String,repo.getRepository())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (hasRemote && (org.talend.geat.GitUtils.hasRemoteBranch(repo.getRepository(), source))) { org.eclipse.jgit.transport.RefSpec refSpec = new org.eclipse.jgit.transport.RefSpec().setSource(null).setDestination((\"refs/heads/\" + source)); repo.push().setRefSpecs(refSpec).setRemote(\"origin\").call(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3312/buggy-version/src.main.java.org.talend.geat.GitUtils.java", "BodyUseAPI": ["new org.eclipse.jgit.transport.RefSpec().setSource(null).setDestination(java.lang.String)", "repo.push().setRefSpecs(org.eclipse.jgit.transport.RefSpec)", "repo.push().setRefSpecs(refSpec).setRemote(java.lang.String)", "repo.push().setRefSpecs(refSpec).setRemote(\"origin\").call()", "org.eclipse.jgit.api.Git.push()"], "Fixed commit": "d8550895b6623997a4a0d1eef781a884a2d62c50", "Url": "https://api.github.com/repos/smallet/GEAT", "Date": "2014-05-28T10:23:31Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((networkManager) != null) { networkManager.update(Gdx.graphics.getDeltaTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5689/buggy-version/core.src.com.samuel.simplepong.SimplePong.java", "BodyUseAPI": [], "Fixed commit": "243dc70c846fb21894c41dccfa9fe1c547a98227", "Url": "https://api.github.com/repos/AdmiralSam/SimplePongLocal", "Date": "2016-03-02T02:58:08Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.picture) != null) com.squareup.picasso.Picasso.with(tvName.getContext()).load(user.picture.getData().getUrl()).into(ivProfileImage);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5095/buggy-version/apps.encounter.src.main.java.com.encounter.app.adapters.viewholders.UserViewHolder.java", "BodyUseAPI": ["user.picture.getData().getUrl()", "com.squareup.picasso.Picasso.with(tvName.getContext()).load(user.picture.getData().getUrl()).into(android.widget.ImageView)", "user.picture.getData()", "com.squareup.picasso.Picasso.with(tvName.getContext()).load(user.picture.getData().getUrl())"], "Fixed commit": "f6480a51650d97bf03a07dd0c3c0e25ca5b58f8f", "Url": "https://api.github.com/repos/MatthewlRoberts/DevTechDesign", "Date": "2017-01-11T17:41:46Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stopped) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8362/buggy-version/SWP2015.src.webot.logic.LogicExecutor.java", "BodyUseAPI": [], "Fixed commit": "94dc8f2acb308d38747657503d7e56c79c059ef8", "Url": "https://api.github.com/repos/135Shadowsoul/SWP2015", "Date": "2015-07-07T11:33:45Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.startsWith(\"Content-Transfer-Encoding: base64\")) { line = org.basex.fs.fsml.build.mail.MailParser.br.readLine(); if (line.startsWith(\"Content-Disposition: attachment;\")) insertAttachment(mail, line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5723/buggy-version/src.java.src.main.java.org.basex.fs.fsml.build.mail.MailParser.java", "BodyUseAPI": [], "Fixed commit": "1f9b13e2b9cb97bbde67c7621d91cf305bfd0e50", "Url": "https://api.github.com/repos/yzzo/basexfs", "Date": "2011-10-06T10:56:08Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isSymfonyDebugger) == false) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3571/buggy-version/com.dubture.symfony.debug.src.com.dubture.symfony.debug.launch.LaunchConfigurationTab.java", "BodyUseAPI": [], "Fixed commit": "583ae6314bc04a714ca4886952f312536b96a5b6", "Url": "https://api.github.com/repos/pulse00/Symfony-2-Eclipse-Plugin", "Date": "2011-10-30T15:12:30Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((project) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3571/buggy-version/com.dubture.symfony.debug.src.com.dubture.symfony.debug.launch.LaunchConfigurationTab.java", "BodyUseAPI": [], "Fixed commit": "583ae6314bc04a714ca4886952f312536b96a5b6", "Url": "https://api.github.com/repos/pulse00/Symfony-2-Eclipse-Plugin", "Date": "2011-10-30T15:12:30Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().findViewById(R.id.delays)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (gwDelays != null) gwDelays.setAdapter(new eu.trentorise.smartcampus.jp.custom.TTDelaysAdapter(getSherlockActivity(), delays));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2089/buggy-version/src.eu.trentorise.smartcampus.jp.SmartCheckTTFragment.java", "BodyUseAPI": ["android.widget.GridView.setAdapter(eu.trentorise.smartcampus.jp.custom.TTDelaysAdapter)"], "Fixed commit": "db54df1666bf9ab2142e8a29021bda28358861c9", "Url": "https://api.github.com/repos/smartcampuslab/android.journeyplanner.lib", "Date": "2013-06-20T08:58:10Z"},
{"Line": "=>833", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.software.mgmt.plugin.model.ClusterBlueprint.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(isProvisioned(clusterName))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8152/buggy-version/server.software-mgmt-plugin-clouderamgr.src.main.java.com.vmware.bdd.plugin.clouderamgr.service.ClouderaManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "5850f84edb65c8372ff60a83d15a7a38cac94025", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-09-09T18:36:21Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(node.getVolumes().isEmpty())) { roleDef.addConfig(Constants.CONFIG_DFS_JOURNALNODE_EDITS_DIR, ((node.getVolumes().get(0)) + \"/dfs/jn\")); }else { com.vmware.bdd.plugin.clouderamgr.model.CmClusterDef.logger.warn((\"No disk volumes found in node \" + (node.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8152/buggy-version/server.software-mgmt-plugin-clouderamgr.src.main.java.com.vmware.bdd.plugin.clouderamgr.model.CmClusterDef.java", "BodyUseAPI": [], "Fixed commit": "5850f84edb65c8372ff60a83d15a7a38cac94025", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-09-09T18:36:21Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (flist == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7647/buggy-version/src.JDownLoadComic.util.WorkaroundUtility.java", "BodyUseAPI": [], "Fixed commit": "942a309f9028c0ab0621bbd4fa85b39bb11d0b97", "Url": "https://api.github.com/repos/RayTW/RComicDownloader", "Date": "2015-08-28T15:35:17Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (flist == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7647/buggy-version/src.JDownLoadComic.util.WorkaroundUtility.java", "BodyUseAPI": [], "Fixed commit": "942a309f9028c0ab0621bbd4fa85b39bb11d0b97", "Url": "https://api.github.com/repos/RayTW/RComicDownloader", "Date": "2015-08-28T15:35:17Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((datum.length()) <= 6) { if (!(datum.endsWith(\".\"))) datum += \".\"; datum += java.util.Calendar.getInstance().get(java.util.Calendar.YEAR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/513/buggy-version/miwotreff.src.main.java.de.micmun.android.miwotreff.utils.HtmlParser.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "c3d10438cb9fb114b76a4199377e799e81d7412a", "Url": "https://api.github.com/repos/MicMun/MiWoTreff", "Date": "2014-02-20T18:05:46Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getWorld().getName()) != \"world\") { com.onemoreblock.oml.Vix.lvlman.unloadWorld(player.getWorld()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/498/buggy-version/src.com.onemoreblock.oml.Vix.java", "BodyUseAPI": ["com.onemoreblock.oml.LevelManager.unloadWorld(player.getWorld())", "org.bukkit.entity.Player.getWorld()"], "Fixed commit": "90caf283a72cf3d006ea3eb98cc1f25eadd4c64d", "Url": "https://api.github.com/repos/Epowerj/OneMoreLevel", "Date": "2014-09-12T02:36:06Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lombok.eclipse.EclipseNode.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((md.returnType) instanceof org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference) { tpOnRet_ = new org.eclipse.jdt.internal.compiler.ast.TypeReference[1][]; tpOnRet_[0] = ((org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference) (md.returnType)).typeArguments; }else if ((md.returnType) instanceof org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference) { tpOnRet_ = ((org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference) (md.returnType)).typeArguments; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5076/buggy-version/src.core.lombok.eclipse.handlers.HandleBuilder.java", "BodyUseAPI": [], "Fixed commit": "07f7afe626a2f76d7c5776e0cd97b131107638be", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2015-08-18T21:43:17Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wordUsed) { i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1962/buggy-version/HanziToAnki.ConvertToCSV.java", "BodyUseAPI": [], "Fixed commit": "93db9482a3a192d9fdd645d84059eacf59f1ebb7", "Url": "https://api.github.com/repos/danielt998/HanziToAnki", "Date": "2017-05-11T23:38:08Z"},
{"Line": "=>1121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentlyValidatedObjects.get().size()) > 0) && (currentlyValidatedObjects.get().getLast().contains(guardedObject))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7342/buggy-version/src.main.java.net.sf.oval.guard.Guard.java", "BodyUseAPI": [], "Fixed commit": "3864289d92d1d3fafcc32f531e8952bf9d0177cb", "Url": "https://api.github.com/repos/sebthom/oval", "Date": "2017-05-22T10:55:28Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(msg.getContent())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bid > (parent.secondMaxBid)) { parent.secondMaxBid = bid; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6913/buggy-version/src.auctioneerBehaviours.AuctioneerReceiveBids.java", "BodyUseAPI": [], "Fixed commit": "76c235a812c5ab00689627428d4ee0811202b877", "Url": "https://api.github.com/repos/Shindorinn/JDCC-JADE", "Date": "2016-04-06T13:33:56Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cacheResults) { mPerTripCache.put(trip, results); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/326/buggy-version/smartReceiptsLibrary.src.main.java.co.smartreceipts.android.persistence.database.tables.TripForeignKeyAbstractSqlTable.java", "BodyUseAPI": [], "Fixed commit": "788b01d73cba5a28fdd8c493698e48b1f6a602f3", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2016-11-21T01:06:15Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(wasPreviousActionClick)) checkIfRectangleMatched(touchX, touchY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3421/buggy-version/app.src.main.java.com.example.makda.pentago.BoardView.java", "BodyUseAPI": [], "Fixed commit": "b39918df5efbed0312b5326e0a38baa77c48ab03", "Url": "https://api.github.com/repos/magdgar/Pentago", "Date": "2015-12-04T09:44:57Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (movieListFinal.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3006/buggy-version/homework1.hw1.src.main.java.univ.bigdata.course.MoviesStorage.java", "BodyUseAPI": [], "Fixed commit": "0103a54b3d204416b7da1e07a69acf720917f19d", "Url": "https://api.github.com/repos/amird1234/BigData1", "Date": "2016-03-31T07:21:10Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Hanger.receive()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (currentAnswer != null) { java.lang.System.out.println((\"User Input: \" + currentAnswer)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4616/buggy-version/src.Hanger.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "d65a871be98b5b931df03227d5cdef46c1b4a3f7", "Url": "https://api.github.com/repos/GiantPanda0090/Hangman_server", "Date": "2017-11-09T14:45:49Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getDataAccess().doSearchList(SearchSpace.hostName,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((searchResults != null) && (!(searchResults.isEmpty()))) { for (com.northernwall.hadrian.db.SearchResult searchResult : searchResults) { if (module.getModuleId().equals(searchResult.moduleId)) { com.northernwall.hadrian.handlers.host.HostBackfillHandler.LOGGER.warn(\"Could not backfill host {} becuase it already exists in {}\", hostname, module.getModuleName()); throw new com.northernwall.hadrian.handlers.routing.Http400BadRequestException(((hostname + \" is already associated to \") + (module.getModuleName()))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4952/buggy-version/src.main.java.com.northernwall.hadrian.handlers.host.HostBackfillHandler.java", "BodyUseAPI": [], "Fixed commit": "13cebe1ca842bb3c32289a9b0c2839ba4954081b", "Url": "https://api.github.com/repos/Jukkorsis/Hadrian", "Date": "2017-06-17T22:15:04Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(title))) { deployParams.setTitle(title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/569/buggy-version/src.main.java.com.zenjava.javafx.maven.plugin.WebMojo.java", "BodyUseAPI": ["com.sun.javafx.tools.packager.DeployParams.setTitle(java.lang.String)"], "Fixed commit": "9419cedbbb8045a00f19b1c3835a3c2fd76fd893", "Url": "https://api.github.com/repos/javafx-maven-plugin/javafx-maven-plugin", "Date": "2015-05-10T12:57:15Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(description))) { deployParams.setDescription(description); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/569/buggy-version/src.main.java.com.zenjava.javafx.maven.plugin.WebMojo.java", "BodyUseAPI": ["com.sun.javafx.tools.packager.DeployParams.setDescription(java.lang.String)"], "Fixed commit": "9419cedbbb8045a00f19b1c3835a3c2fd76fd893", "Url": "https://api.github.com/repos/javafx-maven-plugin/javafx-maven-plugin", "Date": "2015-05-10T12:57:15Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getConfig().isBoolean(\"config.die_below_bedrock_level\")) { boolean die_below_zero = this.getConfig().getBoolean(\"config.die_below_bedrock_level\"); if (die_below_zero) { pli.getArenaListener().loseY = 100; } }else { pli.getArenaListener().loseY = this.getConfig().getInt(\"config.die_below_bedrock_level\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2181/buggy-version/src.main.java.com.comze_instancelabs.deathrun.Main.java", "BodyUseAPI": [], "Fixed commit": "1df3e2253b25030472288ae11a4a7fdf6dd57a4e", "Url": "https://api.github.com/repos/MysticCity/MGDeathRun", "Date": "2016-09-18T10:56:03Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pratilipi.getKeywords()) != null) pratilipi.setKeywords(((pratilipi.getKeywords().split(\"\\\\s+\").length) + \"\")); else pratilipi.setKeywords(\"0\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7071/buggy-version/src.main.java.com.pratilipi.api.init.InitApi.java", "BodyUseAPI": ["com.pratilipi.data.type.Pratilipi.getKeywords()", "com.pratilipi.data.type.Pratilipi.setKeywords(java.lang.String)", "pratilipi.getKeywords().split(java.lang.String)", "com.pratilipi.data.type.Pratilipi.setKeywords(((pratilipi.getKeywords().split(\"\\\\s+\").length) + \"\"))"], "Fixed commit": "6d9caf64e47bee796b280c6262a0e37d3d99811d", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-07-22T09:33:41Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reloadTimer -= deltaTime) < 0) { reloadTimer = reloadInterval; shoot(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2710/buggy-version/core.src.ru.geekbrains.java_games.common.enemies.Enemy.java", "BodyUseAPI": [], "Fixed commit": "13c5ac4ab2c7e3dded6edb4c0e0f2dc4cfe958e6", "Url": "https://api.github.com/repos/geeksploit/java_games", "Date": "2017-09-14T14:50:46Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (vData.getJSONObject(\"files\").has(\"mp4-mobile\")) mobileFile = vData.getJSONObject(\"files\").getJSONObject(\"mp4-mobile\"); else mobileFile = vData.getJSONObject(\"files\").getJSONObject(\"mp4\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1504/buggy-version/app.src.main.java.com.example.jorgegil.closegamealert.Utils.HLLoader.java", "BodyUseAPI": ["vData.getJSONObject(\"files\").getJSONObject(java.lang.String)", "vData.getJSONObject(\"files\").getJSONObject(java.lang.String)", "org.json.JSONObject.getJSONObject(java.lang.String)", "org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "c23e2235e1bad70cbe3edf6425088c1a4bb95bb1", "Url": "https://api.github.com/repos/jorgegil96/All-NBA", "Date": "2016-05-01T05:46:33Z"},
{"Line": "=>1257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c != ' ') && ((compositeText[0].getLineAtOffset(event.offset)) == ((compositeText[0].getLineCount()) - 1))) { event.newOffset = java.lang.Math.max((len + 1), ((event.newOffset) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/611/buggy-version/src.org.nschmidt.ldparteditor.composites.compositetab.CompositeTab.java", "BodyUseAPI": ["java.lang.Math.max(int,((event.newOffset) + 1))"], "Fixed commit": "515aa4683d2ffbb975f9e736d08b4b61c8baf0f5", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-11-17T17:35:07Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.nio.file.Files.exists(this.path))) { java.nio.file.Files.createFile(this.path); }else { if ((!(java.nio.file.Files.isRegularFile(this.path))) || (!(java.nio.file.Files.isWritable(this.path)))) { throw new java.io.IOException(((\"Cannot write to file \\\"\" + (this.path.toString())) + \"\\\"\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8923/buggy-version/src.main.java.by.iddqd.passcracker.cli.Saver.java", "BodyUseAPI": ["java.nio.file.Files.isRegularFile(java.nio.file.Path)", "java.nio.file.Files.createFile(java.nio.file.Path)", "java.nio.file.Files.isWritable(java.nio.file.Path)", "java.nio.file.Path.toString()"], "Fixed commit": "f52b578620297b2132424ebada14b5a1356f3231", "Url": "https://api.github.com/repos/iddqdby/PassCracker", "Date": "2014-12-23T11:22:21Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((slaveJedisPoolMap) == null) slaveJedisPoolMap = new java.util.concurrent.ConcurrentHashMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1744/buggy-version/src.main.java.com.didapinche.commons.redis.MasterSlaveRedisPool.java", "BodyUseAPI": [], "Fixed commit": "a30b2c88c82f590e93e998c0ce0b58d8cdf8280e", "Url": "https://api.github.com/repos/lldaaron/redis_client", "Date": "2015-08-03T17:34:53Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAboutToUp) { com.didapinche.commons.redis.JedisPool slaveJedisPool = addSlavePoolPartly(hostAndPort); com.didapinche.commons.redis.Jedis decideJedis = slaveJedisPool.getResource(); while (true) { try { decideJedis.randomKey(); break; } catch (redis.clients.jedis.exceptions.JedisDataException e) { com.didapinche.commons.redis.MasterSlaveRedisPool.logger.error(e.getMessage()); } } decideJedis.close(); slaveHaps.add(hostAndPort); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1744/buggy-version/src.main.java.com.didapinche.commons.redis.MasterSlaveRedisPool.java", "BodyUseAPI": [], "Fixed commit": "a30b2c88c82f590e93e998c0ce0b58d8cdf8280e", "Url": "https://api.github.com/repos/lldaaron/redis_client", "Date": "2015-08-03T17:34:53Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (compression) { tmpOutputStream = new java.util.zip.GZIPOutputStream(new java.io.FileOutputStream(tmpFile)); }else { tmpOutputStream = new java.io.FileOutputStream(tmpFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8631/buggy-version/src.main.java.kafka.s3.consumer.App.java", "BodyUseAPI": [], "Fixed commit": "1a3dd9858906ed574aa5fece1778d9da13732057", "Url": "https://api.github.com/repos/vinietje/kafka-s3-consumer", "Date": "2012-11-26T16:01:01Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.savara.scenario.simulator.switchyard.internal.MessageStore.LOG.isLoggable(java.util.logging.Level.FINE)) { org.savara.scenario.simulator.switchyard.internal.MessageStore.LOG.fine((((\"Returning receive event: op=\" + operation) + \" ret=\") + ret)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3879/buggy-version/bundles.org.savara.scenario.simulator.switchyard.src.main.java.org.savara.scenario.simulator.switchyard.internal.MessageStore.java", "BodyUseAPI": ["java.util.logging.Logger.fine((((\"Returning receive event: op=\" + operation) + \" ret=\") + ret))"], "Fixed commit": "c95c1cbb8e88c261f642f451e6b2c1335d0e7d05", "Url": "https://api.github.com/repos/savara/savara-core", "Date": "2012-09-03T14:15:39Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.savara.scenario.simulator.switchyard.internal.MessageStore.LOG.isLoggable(java.util.logging.Level.FINE)) { org.savara.scenario.simulator.switchyard.internal.MessageStore.LOG.fine((\"Wait for receive event: op=\" + operation)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3879/buggy-version/bundles.org.savara.scenario.simulator.switchyard.src.main.java.org.savara.scenario.simulator.switchyard.internal.MessageStore.java", "BodyUseAPI": ["java.util.logging.Logger.fine(java.lang.String)"], "Fixed commit": "c95c1cbb8e88c261f642f451e6b2c1335d0e7d05", "Url": "https://api.github.com/repos/savara/savara-core", "Date": "2012-09-03T14:15:39Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mesgElem.getLocalName().equals(\"return\")) { ret = true; }else if (paramElem.getLocalName().equals(mesgElem.getLocalName())) { ret = true; }else { org.savara.scenario.util.MessageUtil.logger.info((((\"isValid: element name mismatch, param=\" + (paramElem.getLocalName())) + \" mesg=\") + (mesgElem.getLocalName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3879/buggy-version/bundles.org.savara.scenario.src.main.java.org.savara.scenario.util.MessageUtil.java", "BodyUseAPI": ["org.w3c.dom.Element.getLocalName()", "org.w3c.dom.Element.getLocalName()", "java.util.logging.Logger.info(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "c95c1cbb8e88c261f642f451e6b2c1335d0e7d05", "Url": "https://api.github.com/repos/savara/savara-core", "Date": "2012-09-03T14:15:39Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (client.connect()) { statusUpdater.updateStatusAndLog(\"Connected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8242/buggy-version/app.src.com.adam.rvc.service.RVCConnection.java", "BodyUseAPI": [], "Fixed commit": "4970f919b5040646a34121fc38854917a782fb2c", "Url": "https://api.github.com/repos/ouchadam/Remote-Volume-Control", "Date": "2013-01-16T22:43:20Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.hssf.usermodel.HSSFCell.getStringCellValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ticker.length()) == 0) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6011/buggy-version/Backup.src.main.java.com.github.it89.investordiary.backup.xls.LoaderXLS.java", "BodyUseAPI": [], "Fixed commit": "d73c308d3168ca962f938a17978257f85c33da0b", "Url": "https://api.github.com/repos/it89/InvestorDaybook", "Date": "2017-01-22T14:53:04Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["be.spring.app.controller.AccountController.getAccountFromSecurity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.google.common.base.Strings.isNullOrEmpty(form.getOldPassword())) || (!(accountService.checkOldPassword(activeAccount, form.getOldPassword())))) { result.rejectValue(\"oldPassword\", \"validation.oldpwd.nomatch\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8672/buggy-version/src.main.java.be.spring.app.controller.AccountController.java", "BodyUseAPI": [], "Fixed commit": "6cf80fa3991fab1a5b4e5d9f00c8915a353094f1", "Url": "https://api.github.com/repos/Goddy/svk", "Date": "2015-04-11T13:12:43Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cameraFrag) == null) { cameraFrag = ((com.commonsware.cwac.cam2.CameraFragmentInterface) (getFragmentManager().findFragmentByTag(com.commonsware.cwac.cam2.AbstractCameraActivity.TAG_CAMERA))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/360/buggy-version/cam2.src.main.java.com.commonsware.cwac.cam2.AbstractCameraActivity.java", "BodyUseAPI": [], "Fixed commit": "f5656a90777e363a0d868751810f9cd553ff7e77", "Url": "https://api.github.com/repos/ShareTheMeal/cwac-cam2", "Date": "2017-03-20T10:54:00Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cameraFrag) instanceof android.app.Fragment) { fragNeedsToBeAdded = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/360/buggy-version/cam2.src.main.java.com.commonsware.cwac.cam2.AbstractCameraActivity.java", "BodyUseAPI": [], "Fixed commit": "f5656a90777e363a0d868751810f9cd553ff7e77", "Url": "https://api.github.com/repos/ShareTheMeal/cwac-cam2", "Date": "2017-03-20T10:54:00Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((head) == null) { node.prev = null; node.next = tail; head = node; }else { node.prev = tail; tail.next = node; node.next = null; tail = node; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2948/buggy-version/src.syy.LinkedListDouble.java", "BodyUseAPI": [], "Fixed commit": "e184de21790e51f58fc6e9f959b2d089657fb6d7", "Url": "https://api.github.com/repos/CodeWithJava/CPE593", "Date": "2016-04-22T00:35:35Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.util.config.Configuration.getList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (triggers != null) { for (java.lang.Object trigger : triggers) { enabledTriggers.add(((java.lang.String) (trigger))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3756/buggy-version/src.main.java.org.dynmap.DynmapPlugin.java", "BodyUseAPI": [], "Fixed commit": "b804aa72f83aefd113daf37c872e2598b42dcb85", "Url": "https://api.github.com/repos/flames/dynmap", "Date": "2011-05-16T22:38:26Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.gondola_map_editor.userInteractions.UserEditObject.getId()) == (de.gondola_map_editor.lwjgl.LWJGLTool.mouseOverWhatObject(camx, camy, mouseX, mouseY))) { if ((((de.gondola_map_editor.userInteractions.UserEditObject.getX()) + camx) + ((de.gondola_map_editor.lwjgl.LWJGLObjectFactory.getObject(de.gondola_map_editor.userInteractions.UserEditObject.getSpecified()).getBreite()) / 2)) > mouseX) { if ((((de.gondola_map_editor.userInteractions.UserEditObject.getX()) + camx) - ((de.gondola_map_editor.lwjgl.LWJGLObjectFactory.getObject(de.gondola_map_editor.userInteractions.UserEditObject.getSpecified()).getBreite()) / 2)) < mouseX) { if ((((de.gondola_map_editor.userInteractions.UserEditObject.getY()) + camy) + ((de.gondola_map_editor.lwjgl.LWJGLObjectFactory.getObject(de.gondola_map_editor.userInteractions.UserEditObject.getSpecified()).getHoehe()) / 2)) > mouseY) { if ((((de.gondola_map_editor.userInteractions.UserEditObject.getY()) + camy) - ((de.gondola_map_editor.lwjgl.LWJGLObjectFactory.getObject(de.gondola_map_editor.userInteractions.UserEditObject.getSpecified()).getHoehe()) / 2)) < mouseY) { return true; } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8986/buggy-version/src.de.gondola_map_editor.lwjgl.LWJGLTool.java", "BodyUseAPI": [], "Fixed commit": "95fdaadf76d423dad7e362492478f88538e1f1d1", "Url": "https://api.github.com/repos/RosesTheN00b/gondola_map_editor", "Date": "2013-12-28T17:12:37Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((calc) == null) { return super.getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6563/buggy-version/src.main.mondrian.rolap.RolapProfilingEvaluator.java", "BodyUseAPI": [], "Fixed commit": "b7909a5b410e61e67a52464ea6372a7fd6251f9c", "Url": "https://api.github.com/repos/wgorman/mondrian", "Date": "2014-03-27T06:29:16Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (filelength > (cf.imxqd.ebook.reader.TxtReader.MAX_MEMORY)) { throw new java.io.IOException(\"\u6587\u4ef6\u8fc7\u5927\uff01\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5537/buggy-version/app.src.main.java.cf.imxqd.ebook.reader.TxtReader.java", "BodyUseAPI": [], "Fixed commit": "ddfa957994fbd9610d2d590f1c591f4a3e12749c", "Url": "https://api.github.com/repos/hfutxqd/ebook", "Date": "2015-11-29T14:25:07Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((super.getOnChange()) != null) { super.getOnChange().run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1555/buggy-version/src.com.valkryst.VRoguelike.stat.BoundedStatistic.java", "BodyUseAPI": ["super.getOnChange().run()", "com.valkryst.VRoguelike.stat.Statistic.getOnChange()"], "Fixed commit": "06b86c6e2882aec6bc8e550461378e80a2da14a2", "Url": "https://api.github.com/repos/Valkryst/VRoguelike", "Date": "2017-10-03T19:34:30Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (learn2crack.jsonparsing.util.NetworkUtils.isNetworkConnected(this)) { new learn2crack.jsonparsing.MainActivity.MyAsyncTask().execute(learn2crack.jsonparsing.MainActivity.url); }else { android.widget.Toast.makeText(this, R.string.networkUnavailable, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2314/buggy-version/JSONParsing.src.learn2crack.jsonparsing.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ffb743d644c915b651b9683148ead0a0d685234e", "Url": "https://api.github.com/repos/onecoders/ViewPageIndicator", "Date": "2013-10-28T07:22:28Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (active) { spriteID = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1746/buggy-version/UniQuest.src.main.interactables.Door.java", "BodyUseAPI": [], "Fixed commit": "f7adeddeb6e1f465be0df53c9d4569e5dd7e15ab", "Url": "https://api.github.com/repos/ayrtonmassey/OOP-Project", "Date": "2013-03-26T21:45:13Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (active) { spriteID = 0; }else { spriteID = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1746/buggy-version/UniQuest.src.main.interactables.Door.java", "BodyUseAPI": [], "Fixed commit": "f7adeddeb6e1f465be0df53c9d4569e5dd7e15ab", "Url": "https://api.github.com/repos/ayrtonmassey/OOP-Project", "Date": "2013-03-26T21:45:13Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getAnnotationsByType(java.lang.Class)", "java.lang.Class.getAnnotationsByType(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((propertiesAnnotation != null) && ((propertiesAnnotation.length) > 0)) && ((propertyAnnotation != null) && ((propertyAnnotation.length) > 0))) throw new java.lang.Exception(\"PianaSpaceProperty and PianaSpaceProperties can not appears in the same type\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1749/buggy-version/src.main.java.ir.piana.dev.webtool2.server.annotation.AnnotationController.java", "BodyUseAPI": [], "Fixed commit": "c9d275bb65038ac585d71a8e69df2e033659530e", "Url": "https://api.github.com/repos/pianairco/piana-rest-server", "Date": "2017-08-05T12:12:25Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.hypervisor.vmware.manager.VmwareHostService.getServiceContext(org.apache.cloudstack.storage.command.CopyCommand)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (context == null) { return new org.apache.cloudstack.storage.command.CopyCmdAnswer(\"Failed to create a Vmware context, check the management server logs or the ssvm log for details\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5794/buggy-version/plugins.hypervisors.vmware.src.com.cloud.storage.resource.VmwareStorageProcessor.java", "BodyUseAPI": [], "Fixed commit": "1d2124dcbf48d15d23ddbdea23a29f0ab21be6f3", "Url": "https://api.github.com/repos/apache/cloudstack", "Date": "2014-07-22T15:43:49Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (command.isCommand(main.java.logic.Logic.EDIT_COMMAND)) { task = createTask(command); result = handleEditCommand(task); for (main.java.logic.Task temp : result) { temp.setShowToUserDelete(true); } }else if (command.isCommand(main.java.logic.Logic.SEARCH_COMMAND)) { }else if (command.isCommand(main.java.logic.Logic.CHANGE_DIRECTORY_COMMAND)) { java.nio.file.Path path = java.nio.file.Paths.get(command.getParameters()[main.java.logic.Logic.TASK]); }else if (command.isCommand(main.java.logic.Logic.SORT_COMMAND)) { if (command.getParameters()[main.java.logic.Logic.TASK].equalsIgnoreCase(\"time\")) { }else if (command.getParameters()[main.java.logic.Logic.TASK].equalsIgnoreCase(\"name\")) { }else if (command.getParameters()[main.java.logic.Logic.TASK].equalsIgnoreCase(\"priority\")) { }else if (command.getParameters()[main.java.logic.Logic.TASK].equalsIgnoreCase(\"type\")) { } }else if (command.isCommand(main.java.logic.Logic.UNDO_COMMAND)) { temp.undoPrevious(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2225/buggy-version/src.main.java.logic.Logic.java", "BodyUseAPI": ["main.java.logic.Logic.createTask(main.java.logic.Command)", "command.getParameters()[main.java.logic.Logic.TASK].equalsIgnoreCase(java.lang.String)", "command.getParameters()[main.java.logic.Logic.TASK].equalsIgnoreCase(java.lang.String)", "java.nio.file.Paths.get(command.getParameters()[main.java.logic.Logic.TASK])", "command.getParameters()[main.java.logic.Logic.TASK].equalsIgnoreCase(java.lang.String)", "main.java.logic.Command.getParameters()", "main.java.logic.Command.getParameters()", "main.java.logic.Command.getParameters()", "main.java.logic.Command.getParameters()", "main.java.logic.Command.isCommand(java.lang.String)", "main.java.logic.Command.isCommand(java.lang.String)", "main.java.logic.Command.isCommand(java.lang.String)", "command.getParameters()[main.java.logic.Logic.TASK].equalsIgnoreCase(java.lang.String)", "main.java.logic.Command.isCommand(java.lang.String)", "main.java.logic.Command.getParameters()"], "Fixed commit": "9e217ec9122bf3b1bcade801fc678f5772660ec8", "Url": "https://api.github.com/repos/cs2103jan2016-w14-3j/main", "Date": "2016-03-14T12:30:23Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) == null) { data = new hunternif.mc.atlas.ext.ExtBiomeData(hunternif.mc.atlas.ext.ExtBiomeDataHandler.DATA_KEY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8662/buggy-version/src.hunternif.mc.atlas.ext.ExtBiomeDataHandler.java", "BodyUseAPI": [], "Fixed commit": "76a4bb22e6c230ba2cc6c30e8385f11a72b3d195", "Url": "https://api.github.com/repos/Hunternif/AntiqueAtlas", "Date": "2014-02-09T19:34:13Z"},
{"Line": "=>591", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { if (component.equals(new android.content.ComponentName(getActivity(), com.owncloud.android.media.MediaService.class))) { com.owncloud.android.utils.Log_OC.d(com.owncloud.android.ui.preview.PreviewMediaFragment.TAG, \"Media service connected\"); mMediaServiceBinder = ((com.owncloud.android.media.MediaServiceBinder) (service)); if ((mMediaServiceBinder) != null) { prepareMediaController(); playAudio(); com.owncloud.android.utils.Log_OC.d(com.owncloud.android.ui.preview.PreviewMediaFragment.TAG, \"Successfully bound to MediaService, MediaController ready\"); }else { com.owncloud.android.utils.Log_OC.e(com.owncloud.android.ui.preview.PreviewMediaFragment.TAG, \"Unexpected response from MediaService while binding\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4324/buggy-version/src.com.owncloud.android.ui.preview.PreviewMediaFragment.java", "BodyUseAPI": [], "Fixed commit": "4bb987e7b76d117c98269ff9b356050159a877df", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2014-02-14T12:36:47Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.jitsi.jicofo.ChatRoomRoleAndPresence.logger.isDebugEnabled()) { org.jitsi.jicofo.ChatRoomRoleAndPresence.logger.debug((((((\"Focus role: \" + (evt.getNewRole())) + \" init: \") + (evt.isInitial())) + \" room: \") + (conference.getRoomName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7849/buggy-version/src.main.java.org.jitsi.jicofo.ChatRoomRoleAndPresence.java", "BodyUseAPI": ["net.java.sip.communicator.util.Logger.debug((((((\"Focus role: \" + (evt.getNewRole())) + \" init: \") + (evt.isInitial())) + \" room: \") + (conference.getRoomName())))"], "Fixed commit": "d36127cf7ff3558f560736dd87699bc2fc71f70f", "Url": "https://api.github.com/repos/jitsi/jicofo", "Date": "2016-08-30T19:36:47Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerMob) == null) playerMob = new entity.mobs.PlayerMob(level, packet.getName(), this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/500/buggy-version/src.engine.network.client.ClientClient.java", "BodyUseAPI": [], "Fixed commit": "31735ae9f8f060f5e7aa61e43998e634ebdc24b6", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-06-19T09:23:12Z"},
{"Line": "=>4075", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.compiler.java.loader.TypeFactory.getDefiniteType(com.redhat.ceylon.model.typechecker.model.Type)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (typeFact().getSetDeclaration().equals(type.getDeclaration())) { com.redhat.ceylon.model.typechecker.model.Type elementType = type.getTypeArgumentList().get(0); return make().Apply(null, makeSelect(make().Apply(com.redhat.ceylon.langtools.tools.javac.util.List.<com.redhat.ceylon.langtools.tools.javac.tree.JCTree.JCExpression>of((isJavaBoxableType(elementType, true) ? javaBoxType(elementType) : makeJavaType(elementType, com.redhat.ceylon.compiler.java.codegen.AbstractTransformer.JT_TYPE_ARGUMENT)), makeJavaType(elementType, com.redhat.ceylon.compiler.java.codegen.AbstractTransformer.JT_TYPE_ARGUMENT)), makeQuotedFQIdent(\"com.redhat.ceylon.compiler.java.wrapping.Wrappings.toCeylonSet\"), com.redhat.ceylon.langtools.tools.javac.util.List.<com.redhat.ceylon.langtools.tools.javac.tree.JCTree.JCExpression>of(makeReifiedTypeArgument(elementType), allowNull)), \"wrap\"), com.redhat.ceylon.langtools.tools.javac.util.List.<com.redhat.ceylon.langtools.tools.javac.tree.JCTree.JCExpression>of(expr)); }else if (typeFact().getMapDeclaration().equals(type.getDeclaration())) { com.redhat.ceylon.model.typechecker.model.Type keyType = type.getTypeArgumentList().get(0); com.redhat.ceylon.model.typechecker.model.Type itemType = type.getTypeArgumentList().get(1); return make().Apply(null, makeSelect(make().Apply(com.redhat.ceylon.langtools.tools.javac.util.List.<com.redhat.ceylon.langtools.tools.javac.tree.JCTree.JCExpression>of((isJavaBoxableType(keyType, true) ? javaBoxType(keyType) : makeJavaType(keyType, com.redhat.ceylon.compiler.java.codegen.AbstractTransformer.JT_TYPE_ARGUMENT)), (isJavaBoxableType(itemType, true) ? javaBoxType(itemType) : makeJavaType(itemType, com.redhat.ceylon.compiler.java.codegen.AbstractTransformer.JT_TYPE_ARGUMENT)), makeJavaType(keyType, com.redhat.ceylon.compiler.java.codegen.AbstractTransformer.JT_TYPE_ARGUMENT), makeJavaType(itemType, com.redhat.ceylon.compiler.java.codegen.AbstractTransformer.JT_TYPE_ARGUMENT)), makeQuotedFQIdent(\"com.redhat.ceylon.compiler.java.wrapping.Wrappings.toCeylonMap\"), com.redhat.ceylon.langtools.tools.javac.util.List.<com.redhat.ceylon.langtools.tools.javac.tree.JCTree.JCExpression>of(makeReifiedTypeArgument(keyType), makeReifiedTypeArgument(itemType), allowNull)), \"wrap\"), com.redhat.ceylon.langtools.tools.javac.util.List.<com.redhat.ceylon.langtools.tools.javac.tree.JCTree.JCExpression>of(expr)); }else { return expr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/250/buggy-version/compiler-java.src.com.redhat.ceylon.compiler.java.codegen.AbstractTransformer.java", "BodyUseAPI": ["com.redhat.ceylon.model.typechecker.model.Type.getTypeArgumentList()", "typeFact().getMapDeclaration().equals(type.getDeclaration())", "com.redhat.ceylon.model.typechecker.model.Type.getTypeArgumentList()", "type.getTypeArgumentList().get(int)", "type.getTypeArgumentList().get(int)", "type.getTypeArgumentList().get(int)", "com.redhat.ceylon.model.typechecker.model.Type.getDeclaration()", "com.redhat.ceylon.model.typechecker.model.Type.getTypeArgumentList()"], "Fixed commit": "6d8a8d2c3b78b685f4bf25f4aa34061135a8d86a", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-11-08T13:55:43Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.getStatus()) == (POGOProtos.Networking.Responses.CatchPokemonResponseOuterClass.CatchPokemonResponse.CatchStatus.CATCH_ERROR)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/50/buggy-version/src.main.java.com.pokegoapi.api.map.pokemon.CatchablePokemon.java", "BodyUseAPI": [], "Fixed commit": "5dfe2c7ede59750ccbcbcf69c5afa18b329c2d15", "Url": "https://api.github.com/repos/Annoraaq/PokeGOAPI-Java", "Date": "2016-08-01T10:49:08Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activeSearch) user = ((org.naturenet.data.model.Users) (mAdapter.getItem(i))); else user = ((org.naturenet.data.model.Users) (mAdapterOrig.getItem(i)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2453/buggy-version/app.src.main.java.org.naturenet.ui.CommunitiesFragment.java", "BodyUseAPI": [], "Fixed commit": "217dbbabd1ad6150587bbd70d327d734afcce1fe", "Url": "https://api.github.com/repos/rigotre7/naturenet-android-app", "Date": "2017-06-06T17:48:33Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numRetries == (ContextVS.NUM_MAX_LOCK_PATERN_RETRIES)) { org.votingsystem.util.LogUtils.LOGD(org.votingsystem.util.PrefUtils.TAG, \"NUM. MAX RETRIES EXCEEDED (3). Resseting password lock\"); org.votingsystem.util.PrefUtils.putLockPatter(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4085/buggy-version/app.src.main.java.org.votingsystem.util.PrefUtils.java", "BodyUseAPI": [], "Fixed commit": "60ba50a290f588b72f7e4bac4fab65db2c710489", "Url": "https://api.github.com/repos/votingsystem/votingsystem-android-client", "Date": "2016-02-10T23:06:05Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (email.getText().toString().isEmpty()) { android.widget.Toast.makeText(getApplicationContext(), \"Do not leave the Email blank\", Toast.LENGTH_LONG).show(); }else if (password.getText().toString().isEmpty()) { android.widget.Toast.makeText(getApplicationContext(), \"Do not leave the Password blank\", Toast.LENGTH_LONG).show(); }else { mAuth.signInWithEmailAndPassword(email.getText().toString(), password.getText().toString()).addOnCompleteListener(new com.google.android.gms.tasks.OnCompleteListener<com.google.firebase.auth.AuthResult>() { @java.lang.Override public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult> task) { if (task.isSuccessful()) { if ((verifiedEmailNotRequiredForLogin) || (task.getResult().getUser().isEmailVerified())) { android.widget.Toast.makeText(getApplicationContext(), ((task.getResult().getUser().getEmail()) + \" was successfully signed in\"), Toast.LENGTH_LONG).show(); dBase.addListenerForSingleValueEvent(new com.google.firebase.database.ValueEventListener() { @java.lang.Override public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) { navigateToMenu(dataSnapshot); } @java.lang.Override public void onCancelled(com.google.firebase.database.DatabaseError databaseError) { } }); }else { android.widget.Toast.makeText(getApplicationContext(), \"That user is not verified, check email for verification link.\", Toast.LENGTH_LONG).show(); } }else { android.widget.Toast.makeText(getApplicationContext(), \"Sign in was not successful. Check login details please.\", Toast.LENGTH_LONG).show(); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7762/buggy-version/app.src.main.java.com.gmail.dleemcewen.tandemfieri.MainActivity.java", "BodyUseAPI": ["mAuth.signInWithEmailAndPassword(email.getText().toString(), password.getText().toString()).addOnCompleteListener(com.google.android.gms.tasks.OnCompleteListener<com.google.firebase.auth.AuthResult>)", "email.getText().toString()", "com.google.firebase.auth.FirebaseAuth.signInWithEmailAndPassword(email.getText().toString(),password.getText().toString())", "android.widget.EditText.getText()"], "Fixed commit": "cd56438fd76e7ad159b72fcd20bad168e6cad813", "Url": "https://api.github.com/repos/apettitt9/TandemFieri", "Date": "2017-02-17T05:51:16Z"},
{"Line": "=>525", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.siacs.conversations.ui.ConversationActivity.findViewById(R.id.action_security)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (menuItemView == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1305/buggy-version/src.eu.siacs.conversations.ui.ConversationActivity.java", "BodyUseAPI": [], "Fixed commit": "3bb585c020f6b21e41de7ce6d8ee9cb0675a9b54", "Url": "https://api.github.com/repos/siacs/Conversations", "Date": "2014-06-26T10:09:12Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.siacs.conversations.ui.ConversationActivity.findViewById(R.id.action_attach_file)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (menuAttachFile == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1305/buggy-version/src.eu.siacs.conversations.ui.ConversationActivity.java", "BodyUseAPI": [], "Fixed commit": "3bb585c020f6b21e41de7ce6d8ee9cb0675a9b54", "Url": "https://api.github.com/repos/siacs/Conversations", "Date": "2014-06-26T10:09:12Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mLocationManager.getAllProviders().contains(LocationManager.NETWORK_PROVIDER)) { mLocationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, mGpsLocationListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6415/buggy-version/src.main.java.com.nextgis.maplib.location.GpsEventSource.java", "BodyUseAPI": ["android.location.LocationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER,int,int,com.nextgis.maplib.location.GpsEventSource.GpsLocationListener)"], "Fixed commit": "25884d0e4b0f0229b1954457bc49b81e459277b4", "Url": "https://api.github.com/repos/nextgis/android_maplib", "Date": "2015-01-16T21:18:35Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mLocationManager.getAllProviders().contains(LocationManager.GPS_PROVIDER)) { mLocationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 0, 0, mGpsLocationListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6415/buggy-version/src.main.java.com.nextgis.maplib.location.GpsEventSource.java", "BodyUseAPI": ["android.location.LocationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER,int,int,com.nextgis.maplib.location.GpsEventSource.GpsLocationListener)"], "Fixed commit": "25884d0e4b0f0229b1954457bc49b81e459277b4", "Url": "https://api.github.com/repos/nextgis/android_maplib", "Date": "2015-01-16T21:18:35Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (mapError != null) { next.fail(mapError.apply(value)); }else { next.fail(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8168/buggy-version/app.src.main.java.codeia.ph.wizbizlogic.service.Result.java", "BodyUseAPI": ["codeia.ph.wizbizlogic.service.Result.Convert<Fail, NewFail>.apply(Fail)", "codeia.ph.wizbizlogic.service.Result<NewOk, NewFail>.fail(NewFail)"], "Fixed commit": "241090603409e4d7a7e18dd33a2dc571c4c2d972", "Url": "https://api.github.com/repos/monzee/wizbizlogic", "Date": "2015-07-27T23:55:39Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromLucene) return org.apache.lucene.analysis.core.StopAnalyzer.ENGLISH_STOP_WORDS_SET;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8847/buggy-version/TrendingTopics.src.edu.nyu.trendingtopics.storm.util.StopWords.java", "BodyUseAPI": [], "Fixed commit": "19548b33b080a46ab7df41bf59f1c78ae6a663c2", "Url": "https://api.github.com/repos/samskd/RealtimeProject", "Date": "2013-05-01T15:57:01Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b_gibfc < 0.01) { b_gibfc = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4918/buggy-version/src.com.yuanrex.pumacheck.checkGIB.java", "BodyUseAPI": [], "Fixed commit": "da335220708691182d5117e216608390db03c4da", "Url": "https://api.github.com/repos/yuanrex2012/MorningCheck", "Date": "2017-05-03T02:24:11Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b_gibfclcy < 0.01) { b_gibfclcy = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4918/buggy-version/src.com.yuanrex.pumacheck.checkGIB.java", "BodyUseAPI": [], "Fixed commit": "da335220708691182d5117e216608390db03c4da", "Url": "https://api.github.com/repos/yuanrex2012/MorningCheck", "Date": "2017-05-03T02:24:11Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tools4j.spockito.Strings.removeStartAndEndChars(java.lang.String,char,char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (plainValue.trim().isEmpty()) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2373/buggy-version/src.main.java.org.tools4j.spockito.Converters.java", "BodyUseAPI": [], "Fixed commit": "caa4396740e5888d3e6c256392cd2af816c5a752", "Url": "https://api.github.com/repos/buzzsawddog/spockito", "Date": "2017-05-07T08:18:09Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tools4j.spockito.Strings.removeStartAndEndChars(java.lang.String,char,char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (plainValue.trim().isEmpty()) { return java.util.Collections.emptyMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2373/buggy-version/src.main.java.org.tools4j.spockito.Converters.java", "BodyUseAPI": [], "Fixed commit": "caa4396740e5888d3e6c256392cd2af816c5a752", "Url": "https://api.github.com/repos/buzzsawddog/spockito", "Date": "2017-05-07T08:18:09Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mBillingSetupDone)) alert(getString(R.string.no_billing_setup));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7683/buggy-version/src.se.slide.skypewidget.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "ca233d4333a462dd593a5f12f2c91a3a39cf7766", "Url": "https://api.github.com/repos/slidese/SkypeWidget", "Date": "2014-01-20T21:23:23Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Phweda.MFM.MFM.isSystemDebug()) { java.lang.System.out.println(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1886/buggy-version/src.Phweda.MFM.UI.MachineListTableModel.java", "BodyUseAPI": [], "Fixed commit": "6ecfaa7e90762f7bfb0c5d340c08c53e5d1b06da", "Url": "https://api.github.com/repos/phweda/MFM", "Date": "2017-05-17T22:55:45Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((pos.start) == (-1)) pos.start = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8278/buggy-version/Libraries.src.simple.net.Uri.java", "BodyUseAPI": [], "Fixed commit": "b4238283e726ddcd441db647351df5583e976cc9", "Url": "https://api.github.com/repos/knyri/Simple-Java-Library", "Date": "2014-05-09T18:53:25Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task) != null) task.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2980/buggy-version/src.main.java.com.turt2live.antishare.metrics.Metrics.java", "BodyUseAPI": [], "Fixed commit": "906566bcac7671e788022c94016b3078e943c776", "Url": "https://api.github.com/repos/turt2live/AntiShare", "Date": "2012-12-08T07:28:10Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["libra.common.helpers.PathHelper.getExtensionWithoutCompressed(path.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (ext != null) { ext = ext.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1465/buggy-version/src.libra.common.sequence.FastaPathFilter.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "7f3ca51dcdcd10531743dea94d56d66d45f1a6f1", "Url": "https://api.github.com/repos/iychoi/libra", "Date": "2017-02-21T02:02:57Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["libra.common.helpers.PathHelper.getExtensionWithoutCompressed(path.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (ext != null) { ext = ext.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1465/buggy-version/src.libra.common.sequence.FastqPathFilter.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "7f3ca51dcdcd10531743dea94d56d66d45f1a6f1", "Url": "https://api.github.com/repos/iychoi/libra", "Date": "2017-02-21T02:02:57Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.util.PsiTreeUtil.getTopmostParentOfType(com.intellij.plugins.haxe.util.PsiElement,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (topmostParentOfType == null) { topmostParentOfType = ((com.intellij.plugins.haxe.util.HaxeReferenceExpression) (type)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1550/buggy-version/src.common.com.intellij.plugins.haxe.util.HaxeResolveUtil.java", "BodyUseAPI": [], "Fixed commit": "19e1cdc37024a168dc5c36f1ccc68259d055bdfd", "Url": "https://api.github.com/repos/eliasku/intellij-haxe", "Date": "2016-02-04T02:41:57Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((theDevice.getCategory()) != null) theDevice.setCategory(categoryMap.get(theDevice.getCategory()).getName()); else theDevice.setCategory(\"<unknown>\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5530/buggy-version/src.main.java.com.bwssystems.vera.VeraInfo.java", "BodyUseAPI": ["categoryMap.get(theDevice.getCategory()).getName()", "com.bwssystems.luupRequests.Device.setCategory(java.lang.String)", "com.bwssystems.luupRequests.Device.setCategory(categoryMap.get(theDevice.getCategory()).getName())", "com.bwssystems.luupRequests.Device.getCategory()", "java.util.Map<java.lang.String, com.bwssystems.luupRequests.Categorie>.get(theDevice.getCategory())"], "Fixed commit": "bd60d63d0f7004154de56f05adf46112618e98df", "Url": "https://api.github.com/repos/bwssytems/ha-bridge", "Date": "2015-08-26T21:52:44Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((theDevice.getRoom()) != null) theDevice.setRoom(roomMap.get(theDevice.getRoom()).getName()); else theDevice.setRoom(\"<unknown>\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5530/buggy-version/src.main.java.com.bwssystems.vera.VeraInfo.java", "BodyUseAPI": ["com.bwssystems.luupRequests.Device.setRoom(roomMap.get(theDevice.getRoom()).getName())", "java.util.Map<java.lang.String, com.bwssystems.luupRequests.Room>.get(theDevice.getRoom())", "com.bwssystems.luupRequests.Device.getRoom()", "roomMap.get(theDevice.getRoom()).getName()", "com.bwssystems.luupRequests.Device.setRoom(java.lang.String)"], "Fixed commit": "bd60d63d0f7004154de56f05adf46112618e98df", "Url": "https://api.github.com/repos/bwssytems/ha-bridge", "Date": "2015-08-26T21:52:44Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(firingLaser)) laserTurret.setDispAngle(((laserTurret.getDispAngle()) + (rotationalVelocity)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3095/buggy-version/pegasus-game.core.src.com.tlear.pegasus.Ship.java", "BodyUseAPI": [], "Fixed commit": "46d9627a038d76bf81b704ee7270336c8c9a431c", "Url": "https://api.github.com/repos/tlear/pegasus", "Date": "2015-04-12T21:05:54Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pattern.replace.isEmpty()) { runs.get(begin).setText(\"\", 0); }else if ((runs.size()) == 1) { runs.get(begin).setText(pattern.replace, 0); }else { runs.get(begin).setText(pattern.replace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8173/buggy-version/src.main.java.ru.otlsoft.msword.Processor.java", "BodyUseAPI": ["runs.get(begin).setText(pattern.replace,int)", "runs.get(begin).setText(pattern.replace)"], "Fixed commit": "6db46f7943f515e40ad72bed5537051083ac67c7", "Url": "https://api.github.com/repos/ZaWertun/msword-java", "Date": "2014-07-25T11:24:25Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type != null) && (type instanceof java.lang.Class)) { java.lang.Class<?> clazz = ((java.lang.Class<?>) (type)); if (java.lang.Throwable.class.isAssignableFrom(clazz)) { exClass = clazz; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1061/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.ThrowableDeserializer.java", "BodyUseAPI": [], "Fixed commit": "d2af3080b25cc67a2cd22e9550ecaa812a5a9709", "Url": "https://api.github.com/repos/AlibabaTech/fastjson", "Date": "2011-12-09T12:25:27Z"},
{"Line": "=>863", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinkerpop.blueprints.impls.orient.OrientVertex.getRecord()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(outDocument.getSchemaClass().isSubClassOf(\"V\"))) throw new java.lang.IllegalArgumentException(\"source record is not a vertex\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6344/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientVertex.java", "BodyUseAPI": [], "Fixed commit": "5ceab963887a6267ea2b8a5cea59c00e9eb926a8", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-06-16T21:18:13Z"},
{"Line": "=>870", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinkerpop.blueprints.impls.orient.OrientVertex.getRecord()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(inDocument.getSchemaClass().isSubClassOf(\"V\"))) throw new java.lang.IllegalArgumentException(\"destination record is not a vertex\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6344/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientVertex.java", "BodyUseAPI": [], "Fixed commit": "5ceab963887a6267ea2b8a5cea59c00e9eb926a8", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-06-16T21:18:13Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (l.equals(l.ITALIAN)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5089/buggy-version/lp-model-verification.verification-component-understandability-plugin.src.main.java.eu.learnpad.verification.plugin.bpmn.guideline.Messages.java", "BodyUseAPI": [], "Fixed commit": "01f037ed1d1d0031458e66ac876643c6cd8bef08", "Url": "https://api.github.com/repos/damianofalcioni/learnpad", "Date": "2015-12-21T07:06:13Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.view_route_stats)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (graph != null) { drawRouteGraph(i, graph); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8082/buggy-version/app.src.main.java.bernhardwebstudio.shadowtravelor.MainActivity.java", "BodyUseAPI": ["bernhardwebstudio.shadowtravelor.MainActivity.2.drawRouteGraph(int,com.jjoe64.graphview.GraphView)"], "Fixed commit": "f7c01c8e3fb454f238ebf6fa8c5b6868aebb077b", "Url": "https://api.github.com/repos/BernhardWebstudio/ShadowTravelor", "Date": "2017-09-16T20:22:06Z"},
{"Line": "=>2137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lane.getToLinkIds().isEmpty()) lane.addToLinkId(throughLink.getLink().getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6939/buggy-version/src.main.java.org.matsim.example.OsmNetworkWithLanesAndSignalsReader.java", "BodyUseAPI": ["org.matsim.lanes.data.Lane.addToLinkId(throughLink.getLink().getId())"], "Fixed commit": "73dd84f0b86a5aaa667772dccb8f906334a502c5", "Url": "https://api.github.com/repos/nschirrmacher/matsim-example-project", "Date": "2017-08-22T16:32:47Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((user.getLikedLocations().size()) == 0) { progressBar.setVisibility(View.INVISIBLE); noLocations.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3425/buggy-version/app.src.main.java.it.rieger.happyhour.view.FavoriteLocations.java", "BodyUseAPI": [], "Fixed commit": "c6a5da9f2929dd88773fa5f314a75688a627b61e", "Url": "https://api.github.com/repos/ajdf24/Happy_Hour", "Date": "2017-02-28T22:37:36Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((record) == null) { java.lang.String id = org.mlbran.vocab.beans.util.FacesContextUtil.getRequestParameters().get(\"record\"); record = service.getRecord(java.lang.Long.valueOf(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7095/buggy-version/vocab.src.main.java.org.mlbran.vocab.beans.edit.EditingBean.java", "BodyUseAPI": [], "Fixed commit": "2a7246707769ed6d3b825e244e0c3e4c094aefac", "Url": "https://api.github.com/repos/mlbran/vocab", "Date": "2017-10-26T06:25:51Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (me.prettyprint.cassandra.connection.HThriftClient.log.isDebugEnabled()) me.prettyprint.cassandra.connection.HThriftClient.log.debug(\"keyspace reseting from {} to {}\", keyspaceName, keyspaceNameArg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1353/buggy-version/core.src.main.java.me.prettyprint.cassandra.connection.HThriftClient.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "18358d86bd07e9378aa5bda5791bcd2f84d7f936", "Url": "https://api.github.com/repos/rantav/hector", "Date": "2011-03-03T02:51:14Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (url.contains(\"www.\")) url = url.substring(4, url.length());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8931/buggy-version/GUI.ProxyScan.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "ddb02bea194bef4516e33cca2c7e428356d5ec31", "Url": "https://api.github.com/repos/pcsx22/proxyScanner", "Date": "2015-04-01T15:14:10Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!alreadyContains) info.getRestrictions().add((((info.getVar()) + \" a \") + classAbbr));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3420/buggy-version/limes-core.src.main.java.org.aksw.limes.core.gui.model.Endpoint.java", "BodyUseAPI": [], "Fixed commit": "2e7a3f96c4f26d41b191806a0ebb13d4464b0274", "Url": "https://api.github.com/repos/dice-group/LIMES", "Date": "2017-02-15T10:52:19Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (containerInfoJson.has(\"parameters\")) { net.sf.json.JSONArray parametersJson = containerInfoJson.getJSONArray(\"parameters\"); for (java.lang.Object obj : parametersJson) { net.sf.json.JSONObject parameterJson = ((net.sf.json.JSONObject) (obj)); parameters.add(new org.jenkinsci.plugins.mesos.MesosSlaveInfo.Parameter(parameterJson.getString(\"key\"), parameterJson.getString(\"value\"))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2847/buggy-version/src.main.java.org.jenkinsci.plugins.mesos.MesosCloud.java", "BodyUseAPI": ["net.sf.json.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "d9cc4821325d5f0635bb4832effad29ea1d3d8d6", "Url": "https://api.github.com/repos/barkerd427/mesos-plugin", "Date": "2014-12-28T19:46:27Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (main.activator.Activator.getDefault().getEditorController().isEverythingMatching()) { boolean state = org.eclipse.ui.handlers.HandlerUtil.toggleCommandState(event.getCommand()); main.activator.Activator.getDefault().getCFGController().settLinkState((!state)); }else org.eclipse.jface.dialogs.MessageDialog.openInformation(window.getShell(), Messages.DRAW_GRAPH_TITLE, Messages.GRAPH_UPDATE_MSG);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2999/buggy-version/PESTT.src.ui.handler.LinkHandler.java", "BodyUseAPI": [], "Fixed commit": "9355b0e1706f44300436270c47c2002dae9ffcde", "Url": "https://api.github.com/repos/pestt/PESTT", "Date": "2012-03-29T11:24:57Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (main.activator.Activator.getDefault().getEditorController().isEverythingMatching()) { option = event.getParameter(RadioState.PARAMETER_ID); if (((option) != null) && (!(option.equals(old)))) { if (((option) != null) && (!(option.equals(Description.NONE)))) { org.eclipse.ui.handlers.HandlerUtil.updateRadioState(event.getCommand(), option); old = option; } main.activator.Activator.getDefault().getTestPathController().selectTourType(old); } }else { flag = true; org.eclipse.jface.dialogs.MessageDialog.openInformation(window.getShell(), Messages.DRAW_GRAPH_TITLE, Messages.GRAPH_UPDATE_MSG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2999/buggy-version/PESTT.src.ui.handler.ToursHandler.java", "BodyUseAPI": [], "Fixed commit": "9355b0e1706f44300436270c47c2002dae9ffcde", "Url": "https://api.github.com/repos/pestt/PESTT", "Date": "2012-03-29T11:24:57Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (main.activator.Activator.getDefault().getEditorController().isEverythingMatching()) { option = event.getParameter(RadioState.PARAMETER_ID); if (((option) != null) && (!(option.equals(Description.NONE)))) { org.eclipse.ui.handlers.HandlerUtil.updateRadioState(event.getCommand(), option); old = option; }else if (((option) == null) && (old.equals(Layer.EMPTY.toString()))) old = ((java.lang.String) (event.getCommand().getState(\"org.eclipse.ui.commands.radioState\").getValue())); main.activator.Activator.getDefault().getCFGController().selectLayer(old); }else { flag = true; org.eclipse.jface.dialogs.MessageDialog.openInformation(window.getShell(), Messages.DRAW_GRAPH_TITLE, Messages.GRAPH_UPDATE_MSG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2999/buggy-version/PESTT.src.ui.handler.LayerHandler.java", "BodyUseAPI": [], "Fixed commit": "9355b0e1706f44300436270c47c2002dae9ffcde", "Url": "https://api.github.com/repos/pestt/PESTT", "Date": "2012-03-29T11:24:57Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bottomMenu) != null) bottomMenu.closeSearch();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2003/buggy-version/xabber.src.main.java.com.xabber.android.ui.activity.ContactListActivity.java", "BodyUseAPI": [], "Fixed commit": "783cb1946b67e347f618bd208caec8309892d9b0", "Url": "https://api.github.com/repos/redsolution/xabber-android", "Date": "2017-10-30T11:32:26Z"},
{"Line": "=>714", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bottomMenu) == null) bottomMenu = com.xabber.android.ui.widget.bottomnavigation.BottomMenu.newInstance();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2003/buggy-version/xabber.src.main.java.com.xabber.android.ui.activity.ContactListActivity.java", "BodyUseAPI": [], "Fixed commit": "783cb1946b67e347f618bd208caec8309892d9b0", "Url": "https://api.github.com/repos/redsolution/xabber-android", "Date": "2017-10-30T11:32:26Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((menu.size()) == 0) { inflater.inflate(R.menu.forum_index_options, menu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8668/buggy-version/application.src.com.ferg.awfulapp.ForumsIndexFragment.java", "BodyUseAPI": ["com.actionbarsherlock.view.MenuInflater.inflate(R.menu.forum_index_options,com.actionbarsherlock.view.Menu)"], "Fixed commit": "a0ca3ae0818b178536f4831bc2438d11181ec5a2", "Url": "https://api.github.com/repos/Geekner/Something-Awful-Android", "Date": "2012-11-05T06:05:42Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.actionbarsherlock.view.Menu.findItem(R.id.pm)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (pm != null) { pm.setEnabled(mPrefs.hasPlatinum); pm.setVisible(mPrefs.hasPlatinum); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8668/buggy-version/application.src.com.ferg.awfulapp.ForumsIndexFragment.java", "BodyUseAPI": ["com.actionbarsherlock.view.MenuItem.setEnabled(mPrefs.hasPlatinum)", "com.actionbarsherlock.view.MenuItem.setVisible(mPrefs.hasPlatinum)"], "Fixed commit": "a0ca3ae0818b178536f4831bc2438d11181ec5a2", "Url": "https://api.github.com/repos/Geekner/Something-Awful-Android", "Date": "2012-11-05T06:05:42Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (registry.startsWith(\"file:\")) { registry = registry.replace('\\\\', '/'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/693/buggy-version/manager.api.core.src.main.java.io.apiman.manager.api.core.config.ApiManagerConfig.java", "BodyUseAPI": ["java.lang.String.replace(char,char)"], "Fixed commit": "449bae0c88225de13c115ee34c3d73840d3f00d0", "Url": "https://api.github.com/repos/kahboom/apiman", "Date": "2016-05-25T13:00:00Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((info.flags) & (android.media.MediaCodec.BUFFER_FLAG_KEY_FRAME)) == (android.media.MediaCodec.BUFFER_FLAG_KEY_FRAME)) { flag = VideoPacket.Flag.KEY_FRAME; }else if ((info.flags) == 0) { flag = VideoPacket.Flag.FRAME; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8984/buggy-version/app.src.main.java.com.renovavision.videocodec.sender.Sender.java", "BodyUseAPI": [], "Fixed commit": "9ecee7e6c912be08eda2491996e205267719f80c", "Url": "https://api.github.com/repos/alexmprog/VideoCodec", "Date": "2016-06-27T15:52:27Z"},
{"Line": "=>1218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof org.apache.commons.vfs2.FileNotFoundException) { intpResult.add(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5425/buggy-version/spark.src.main.java.org.apache.zeppelin.spark.SparkInterpreter.java", "BodyUseAPI": [], "Fixed commit": "373d4bcd100d8867155bd2e06a2010ddaafeb7f3", "Url": "https://api.github.com/repos/YuanGunGun/zeppelin", "Date": "2017-06-27T13:34:06Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Module.getMatchingLeftEqs(rightHS.getOpName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i != ((matchingEqs.size()) - 1)) res += \" &&\" + '\\n';", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4441/buggy-version/src.model.JmlGenerator.java", "BodyUseAPI": [], "Fixed commit": "fd9658a1886677be669a1418dfffd7540a46f80a", "Url": "https://api.github.com/repos/endimion/Cafe2JML", "Date": "2015-03-27T10:58:55Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((server.networkInfo()) != null) { com.google.common.base.Optional<org.jclouds.dimensiondata.cloudcontroller.domain.NatRule> natRuleOptional = api.getNetworkApi().listNatRules(server.networkInfo().networkDomainId()).concat().firstMatch(new com.google.common.base.Predicate<org.jclouds.dimensiondata.cloudcontroller.domain.NatRule>() { @java.lang.Override public boolean apply(org.jclouds.dimensiondata.cloudcontroller.domain.NatRule input) { return input.internalIp().equalsIgnoreCase(server.networkInfo().primaryNic().privateIpv4()); } }); if (natRuleOptional.isPresent()) { builder.externalIp(natRuleOptional.get().externalIp()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/821/buggy-version/src.main.java.org.jclouds.dimensiondata.cloudcontroller.compute.functions.ServerToServetWithExternalIp.java", "BodyUseAPI": ["input.internalIp().equalsIgnoreCase(server.networkInfo().primaryNic().privateIpv4())", "org.jclouds.dimensiondata.cloudcontroller.domain.Server.networkInfo()", "server.networkInfo().primaryNic().privateIpv4()", "org.jclouds.dimensiondata.cloudcontroller.domain.Server.networkInfo()", "server.networkInfo().primaryNic()", "api.getNetworkApi().listNatRules(server.networkInfo().networkDomainId()).concat().firstMatch(com.google.common.base.Predicate<org.jclouds.dimensiondata.cloudcontroller.domain.NatRule>)", "server.networkInfo().networkDomainId()", "api.getNetworkApi().listNatRules(server.networkInfo().networkDomainId()).concat()", "api.getNetworkApi().listNatRules(server.networkInfo().networkDomainId())"], "Fixed commit": "25a018b42bb78d338c383a00451c2ecfa69d3576", "Url": "https://api.github.com/repos/trevorflanagan/amp-dimensiondata", "Date": "2016-08-12T12:28:54Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mKillActivity) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3394/buggy-version/app.src.main.java.com.phuston.android.kyzr.WelcomeActivity.java", "BodyUseAPI": [], "Fixed commit": "d1f71e31f2b13f64a139a762e1768f62e252041d", "Url": "https://api.github.com/repos/phuston/Kyzr", "Date": "2015-04-28T17:37:12Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.linuxOS) { java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(\" [0-9]+:\"); for (java.io.File file : chaptersDirectory) { java.util.regex.Matcher matcher = pattern.matcher(file.getName()); if (matcher.find()) { java.lang.String chapterNumber = matcher.group(); chapterNumber = chapterNumber.substring(0, ((chapterNumber.length()) - 1)); chaptersDouble.add(new java.lang.Double(chapterNumber)); } } }else { java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(\" [0-9]+\"); for (java.io.File file : chaptersDirectory) { java.util.regex.Matcher matcher = pattern.matcher(file.getName()); java.lang.String chapterNumber = \"-1\"; while (matcher.find()) { chapterNumber = matcher.group(); } chapterNumber = chapterNumber.substring(0, ((chapterNumber.length()) - 1)); chaptersDouble.add(new java.lang.Double(chapterNumber)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5551/buggy-version/src.it.iuland.mangaDownloader.model.MangaDownloader.java", "BodyUseAPI": [], "Fixed commit": "b692b97dae534aba1fb0cd6ae6d4c1e4e22ee02c", "Url": "https://api.github.com/repos/Pausa90/MangaDownloader", "Date": "2017-10-23T19:54:28Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (tempNode == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6736/buggy-version/app.src.main.java.xyz.monkeytong.hongbao.services.HongbaoService.java", "BodyUseAPI": [], "Fixed commit": "8317ad990263ad54b58b6a92451a0ac974e1dc1e", "Url": "https://api.github.com/repos/geeeeeeeeek/WeChatLuckyMoney", "Date": "2016-05-31T14:03:06Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fragmentInteractionListener.isNetworkConnectionAvailable())) noWifi(); else new com.mobileproto.hireddit.hireddit.reddit.RedditSearcher(this, shakeWord, getActivity().getApplicationContext()).getRedditComment();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6085/buggy-version/app.src.main.java.com.mobileproto.hireddit.hireddit.visuals.SpeechFragment.java", "BodyUseAPI": [], "Fixed commit": "803b602decc4ed0b207f7ad2b6500cfcafd618b7", "Url": "https://api.github.com/repos/davidabrahams/Hi-Reddit", "Date": "2015-12-17T21:11:30Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fragmentInteractionListener.isNetworkConnectionAvailable())) noWifi(); else new com.mobileproto.hireddit.hireddit.reddit.RedditSearcher(this, firstResult, getActivity().getApplicationContext()).getRedditComment();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6085/buggy-version/app.src.main.java.com.mobileproto.hireddit.hireddit.visuals.SpeechFragment.java", "BodyUseAPI": [], "Fixed commit": "803b602decc4ed0b207f7ad2b6500cfcafd618b7", "Url": "https://api.github.com/repos/davidabrahams/Hi-Reddit", "Date": "2015-12-17T21:11:30Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.st_ddt.crazylogin.CrazyLogin.getPlayerData(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (playerdata.isLoggedIn()) { playerdata.notifyAction(); plugin.getCrazyDatabase().save(playerdata); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7861/buggy-version/CrazyLogin.src.de.st_ddt.crazylogin.listener.CrazyLoginPlayerListener.java", "BodyUseAPI": ["de.st_ddt.crazylogin.data.LoginPlayerData.notifyAction()", "plugin.getCrazyDatabase().save(de.st_ddt.crazylogin.data.LoginPlayerData)"], "Fixed commit": "7fce13fb50c4e044be319334a77819b511f60b2c", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2012-08-21T07:00:45Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (PrintMachineCode.value) { backend.codegen.PrintMachineFunctionPass.createMachineFunctionPrinterPass(java.lang.System.err, \"# *** IR dump after computing Local Liveness ***:\\n\").runOnMachineFunction(mf); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8787/buggy-version/java.backend.codegen.RegAllocLocal.java", "BodyUseAPI": [], "Fixed commit": "909d51fe28672f81e6552b6bd83aae6cfb5a54cc", "Url": "https://api.github.com/repos/JianpingZeng/xcc", "Date": "2017-11-26T05:07:37Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Dungeon.level.hasExit(0)) { mainExit = Dungeon.level.getExit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7924/buggy-version/PixelDungeon.src.main.java.com.watabou.pixeldungeon.ui.StatusPane.java", "BodyUseAPI": [], "Fixed commit": "9ddeaa5567a5a96f5dd3d6c30a2a25164902c569", "Url": "https://api.github.com/repos/NYRDS/pixel-dungeon-remix", "Date": "2016-06-07T20:10:32Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hasExit(index)) { return exitMap.get(index); }else { throw new com.nyrds.android.util.TrackedRuntimeException((\"no exit with index: \" + (index.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7924/buggy-version/PixelDungeon.src.main.java.com.watabou.pixeldungeon.levels.Level.java", "BodyUseAPI": ["java.lang.Integer.toString()", "java.util.HashMap<java.lang.Integer, java.lang.Integer>.get(java.lang.Integer)"], "Fixed commit": "9ddeaa5567a5a96f5dd3d6c30a2a25164902c569", "Url": "https://api.github.com/repos/NYRDS/pixel-dungeon-remix", "Date": "2016-06-07T20:10:32Z"},
{"Line": "=>1673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.photon.phresco.commons.model.ProjectInfo.getAppInfos()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isEmpty(appInfos)) { return response; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7888/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.rest.api.ProjectService.java", "BodyUseAPI": [], "Fixed commit": "3c148e33aa2123aba98711fb5b483df3b4c4c725", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2014-07-08T05:06:37Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.isCurrent) == null) { this.isCurrent = new java.util.concurrent.atomic.AtomicBoolean(isCurrent); }else { this.isCurrent.set(isCurrent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8548/buggy-version/blackhole-supervisor.src.main.java.com.dp.blackhole.supervisor.model.Stage.java", "BodyUseAPI": [], "Fixed commit": "ee2a7b14b70f812343a9f1068fbe955066b2fceb", "Url": "https://api.github.com/repos/ErikFang/blackhole", "Date": "2015-12-02T06:29:19Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.status) == null) { this.status = new java.util.concurrent.atomic.AtomicInteger(status); }else { this.status.set(status); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8548/buggy-version/blackhole-supervisor.src.main.java.com.dp.blackhole.supervisor.model.Stage.java", "BodyUseAPI": [], "Fixed commit": "ee2a7b14b70f812343a9f1068fbe955066b2fceb", "Url": "https://api.github.com/repos/ErikFang/blackhole", "Date": "2015-12-02T06:29:19Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isClassInPackage(name)) { java.lang.String compressed = name.substring(packagePrefix.length()); if (isAmbiguous(compressed)) { sb.append(name); }else { sb.append(compressed); } }else if (name.startsWith(\"java.lang.\")) { sb.append(name.substring(\"java.lang.\".length())); }else { sb.append(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1479/buggy-version/src.main.java.com.squareup.java.JavaWriter.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.startsWith(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "17605c52dfe212a4b9d205f32097e752027fbd0d", "Url": "https://api.github.com/repos/leusonmario/javapoet", "Date": "2013-05-08T20:11:24Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gameStarted)) android.util.Log.v(\"SHOT_IS_FIRED\", \"Igra nije startovana\"); else android.util.Log.v(\"SHOT_IS_FIRED\", \"Aktiviran je pancir\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4471/buggy-version/src.edu.elfak.chasegame.GameService.java", "BodyUseAPI": [], "Fixed commit": "8f8767babc765b9bce78c313d14e637be8993847", "Url": "https://api.github.com/repos/filip-jovanovic/chase_game", "Date": "2013-02-11T15:52:45Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((iteratee) != null) iteratee.add(child); else children.add(child);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2828/buggy-version/core.pixgen.scene.Node.java", "BodyUseAPI": [], "Fixed commit": "50a3b574a7e29c15061aa082fe542e68bd11d67d", "Url": "https://api.github.com/repos/inventer99/pixgen2", "Date": "2016-12-11T03:03:31Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (stream != null) { final java.util.List<java.lang.String> files = org.apache.commons.io.IOUtils.readLines(stream, Charsets.UTF_8); for (java.lang.String name : files) { final java.lang.String path = (folder + (!(folder.endsWith(\"/\")) ? \"/\" : \"\")) + name; if ((name.lastIndexOf(\".\")) > 1) { java.lang.String extension = name.substring(((name.lastIndexOf(\".\")) + 1), name.length()); if (extensionsToLoad.contains(extension)) { classPathResources.add(path); } }else { loadResourcesFromPackage((path + \"/\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2465/buggy-version/src.main.scala.com.builtbroken.mc.lib.json.JsonContentLoader.java", "BodyUseAPI": ["org.apache.commons.io.IOUtils.readLines(java.io.InputStream,Charsets.UTF_8)"], "Fixed commit": "a4a229caf254e0647f11986935f883b27c6d0561", "Url": "https://api.github.com/repos/VoltzEngine-Project/Engine", "Date": "2016-11-30T17:06:22Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gson.getAdapter(com.google.gson.JsonElement.class).read(in).getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (object.has(\"Items\")) { array = object.get(\"Items\").getAsJsonArray(); }else { return new net.ilexiconn.magister.container.Grade[]{ }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3313/buggy-version/app.src.main.java.net.ilexiconn.magister.adapter.GradeAdapter.java", "BodyUseAPI": ["com.google.gson.JsonObject.get(java.lang.String)", "object.get(\"Items\").getAsJsonArray()"], "Fixed commit": "aebc9d3fc9edabfc54490a0209224c72b1c60b4d", "Url": "https://api.github.com/repos/Z3r0byte/Magis", "Date": "2016-10-04T17:23:49Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userCalendarItem.color) != null) { holder.box.setBackgroundColor(android.graphics.Color.parseColor(userCalendarItem.color)); }else { if ((userCalendarItem.items.size()) > 0) { }else { holder.box.setBackgroundColor(context.getResources().getColor(R.color.dn_default)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3310/buggy-version/app.src.main.java.org.jboss.aerogear.devnexus2015.ui.adapter.MyScheduleViewAdapter.java", "BodyUseAPI": ["android.graphics.Color.parseColor(userCalendarItem.color)", "userCalendarItem.items.size()", "android.widget.RelativeLayout.setBackgroundColor(android.graphics.Color.parseColor(userCalendarItem.color))"], "Fixed commit": "0317afa28b9b02aa16a4b0d16de68ea9da772ba4", "Url": "https://api.github.com/repos/secondsun/devnexus-android", "Date": "2016-01-24T02:14:50Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (transferType == (com.kozak.triangles.enums.TransferType.PROFIT)) { newBalance = com.kozak.triangles.util.CommonUtil.moneyFormat((userMoney + sum)); newSolvency = com.kozak.triangles.util.CommonUtil.getSolvency(java.lang.String.valueOf((userMoney + sum)), prRep, userId); }else if (transferType == (com.kozak.triangles.enums.TransferType.SPEND)) { newBalance = com.kozak.triangles.util.CommonUtil.moneyFormat((userMoney - sum)); newSolvency = com.kozak.triangles.util.CommonUtil.getSolvency(java.lang.String.valueOf((userMoney + sum)), prRep, userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2104/buggy-version/src.main.java.com.kozak.triangles.util.ResponseUtil.java", "BodyUseAPI": [], "Fixed commit": "b0992ee2fd8a3e7d4e68183123718428d77cf4dc", "Url": "https://api.github.com/repos/r-kozak/triangles", "Date": "2017-10-03T15:54:02Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (old_specie.has(bioProject)) { try { java.util.Date oldDate = sdf.parse(((java.lang.String) (old_specie.get(bioProject)))); java.util.Date currentDate = sdf.parse(modify_date); if ((currentDate.compareTo(oldDate)) > 0) core.SpeciesManager.toDo(this.root_path, specie); if (!(core.SpeciesManager.isDone(this.root_path, specie))) { toDo = true; } } catch (java.text.ParseException e) { } old_specie.remove(bioProject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1565/buggy-version/src.main.connection.GenomeManager.java", "BodyUseAPI": ["org.json.JSONObject.get(java.lang.String)", "java.text.SimpleDateFormat.parse(((java.lang.String) (old_specie.get(bioProject))))", "org.json.JSONObject.remove(java.lang.String)"], "Fixed commit": "7efda0a60eec2071cf06493806f5f6f2da55f765", "Url": "https://api.github.com/repos/Oueee/Excel-Lent", "Date": "2015-05-05T09:49:23Z"},
{"Line": "=>1004", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mBaseCastConsumers.add(listener)) { LOGD(com.google.sample.castcompanionlibrary.cast.BaseCastManager.TAG, (\"Successfully added the new BaseCastConsumer listener \" + listener)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/795/buggy-version/src.com.google.sample.castcompanionlibrary.cast.BaseCastManager.java", "BodyUseAPI": ["com.google.sample.castcompanionlibrary.cast.BaseCastManager.LOGD(java.lang.String,(\"Successfully added the new BaseCastConsumer listener \" + listener))"], "Fixed commit": "b74e547e82731ddb661bf9c6fc83f37fcf33d16e", "Url": "https://api.github.com/repos/googlecast/CastCompanionLibrary-android", "Date": "2014-02-09T06:31:30Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mApiClient)) { LOGD(com.google.sample.castcompanionlibrary.cast.BaseCastManager.TAG, (\"acquiring a conenction to Google Play services for \" + (mSelectedCastDevice))); com.google.android.gms.cast.Cast.CastOptions.Builder apiOptionsBuilder = getCastOptionBuilder(mSelectedCastDevice); mApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder(mContext).addApi(Cast.API, apiOptionsBuilder.build()).addConnectionCallbacks(this).addOnConnectionFailedListener(this).build(); mApiClient.connect(); }else if (!(mApiClient.isConnected())) { mApiClient.connect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/795/buggy-version/src.com.google.sample.castcompanionlibrary.cast.BaseCastManager.java", "BodyUseAPI": [], "Fixed commit": "b74e547e82731ddb661bf9c6fc83f37fcf33d16e", "Url": "https://api.github.com/repos/googlecast/CastCompanionLibrary-android", "Date": "2014-02-09T06:31:30Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((startX) > 0) || ((startY) > 0)) { defaultAlign = com.github.onlynight.rippleeverywhere.library.RippleLayout.RIPPLE_CENTER_ALIGN_TOP_LEFT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/439/buggy-version/library.src.main.java.com.github.onlynight.rippleeverywhere.library.RippleLayout.java", "BodyUseAPI": [], "Fixed commit": "14645ea966534fa12550f6e6574c84ce23022dd3", "Url": "https://api.github.com/repos/onlynight/RippleEverywhere", "Date": "2016-11-23T12:19:03Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((channel.getSynchronizationStatus()) == (Channel.SynchronizationStatus.ALL)) { callbackListener.onSuccess(channel.getMessages()); }else { com.twilio.chat.ChannelListener listener = new com.twilio.chat.ChannelListener() { @java.lang.Override public void onMessageAdded(com.twilio.chat.Message member) { } @java.lang.Override public void onMessageUpdated(com.twilio.chat.Message message, com.twilio.chat.Message.UpdateReason reason) { } @java.lang.Override public void onMessageDeleted(com.twilio.chat.Message message) { } @java.lang.Override public void onMemberAdded(com.twilio.chat.Member member) { } @java.lang.Override public void onMemberUpdated(com.twilio.chat.Member member, com.twilio.chat.Member.UpdateReason reason) { } @java.lang.Override public void onMemberDeleted(com.twilio.chat.Member member) { } @java.lang.Override public void onTypingStarted(com.twilio.chat.Member member) { } @java.lang.Override public void onTypingEnded(com.twilio.chat.Member member) { } @java.lang.Override public void onSynchronizationChanged(com.twilio.chat.Channel channel) { if ((channel.getSynchronizationStatus()) == (Channel.SynchronizationStatus.ALL)) { callbackListener.onSuccess(channel.getMessages()); } } }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/800/buggy-version/android.src.main.java.com.bradbumbalough.RCTTwilioChat.RCTTwilioChatMessages.java", "BodyUseAPI": ["com.twilio.chat.CallbackListener<com.twilio.chat.Messages>.onSuccess(channel.getMessages())", "com.twilio.chat.Channel.getMessages()", "com.twilio.chat.CallbackListener<com.twilio.chat.Messages>.onSuccess(channel.getMessages())", "com.twilio.chat.Channel.getMessages()", "com.twilio.chat.Channel.getSynchronizationStatus()"], "Fixed commit": "0c8bd8b17d4dc48535682146f2dea09e14fe2a46", "Url": "https://api.github.com/repos/pitch-me-app/react-native-twilio-chat", "Date": "2017-12-14T19:00:25Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (messages == null) { java.util.List<com.twilio.chat.Message> _messages = new java.util.ArrayList<com.twilio.chat.Message>(); promise.resolve(com.bradbumbalough.RCTTwilioChat.RCTConvert.Messages(_messages)); }else { messages.getLastMessages(count, new com.twilio.chat.CallbackListener<java.util.List<com.twilio.chat.Message>>() { @java.lang.Override public void onError(com.twilio.chat.ErrorInfo errorInfo) { super.onError(errorInfo); promise.reject(\"get-last-messages-error\", \"Error occurred while attempting to getLastMessages.\"); } @java.lang.Override public void onSuccess(java.util.List<com.twilio.chat.Message> _messages) { promise.resolve(com.bradbumbalough.RCTTwilioChat.RCTConvert.Messages(_messages)); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/800/buggy-version/android.src.main.java.com.bradbumbalough.RCTTwilioChat.RCTTwilioChatMessages.java", "BodyUseAPI": ["com.twilio.chat.Messages.getLastMessages(java.lang.Integer,com.twilio.chat.CallbackListener<java.util.List<com.twilio.chat.Message>>)"], "Fixed commit": "0c8bd8b17d4dc48535682146f2dea09e14fe2a46", "Url": "https://api.github.com/repos/pitch-me-app/react-native-twilio-chat", "Date": "2017-12-14T19:00:25Z"},
{"Line": "=>1292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isModelDead())) { if ((this.getAnimation()) == (this.NO_ANIMATION)) { this.setAnimation(com.github.alexthe666.iceandfire.entity.EntityDragonBase.ANIMATION_SPEAK); } super.playHurtSound(source); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5814/buggy-version/src.main.java.com.github.alexthe666.iceandfire.entity.EntityDragonBase.java", "BodyUseAPI": [], "Fixed commit": "fee7632ef2a9c3a8f1861583514339116819404e", "Url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire", "Date": "2016-11-21T17:29:47Z"},
{"Line": "=>724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stack == null) && (!(player.isSneaking()))) { this.openGUI(player); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5814/buggy-version/src.main.java.com.github.alexthe666.iceandfire.entity.EntityDragonBase.java", "BodyUseAPI": ["com.github.alexthe666.iceandfire.entity.EntityDragonBase.openGUI(net.minecraft.entity.player.EntityPlayer)"], "Fixed commit": "fee7632ef2a9c3a8f1861583514339116819404e", "Url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire", "Date": "2016-11-21T17:29:47Z"},
{"Line": "=>652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isModelDead())) { this.setTamed(true); this.setOwnerId(player.getUniqueID()); if (this.isOwner(player)) { if (stack != null) { if (((this.isBreedingItem(stack)) && (this.isAdult())) && (!(this.isInLove()))) { this.consumeItemFromStack(player, stack); this.setInLove(player); return true; } if ((stack.getItem()) != null) { int itemFoodAmount = FoodMappings.INSTANCE.getItemFoodAmount(stack.getItem(), diet); if (itemFoodAmount > 0) { this.setHunger(((this.getHunger()) + itemFoodAmount)); this.setHealth(java.lang.Math.min(this.getMaxHealth(), ((int) ((this.getHealth()) + (itemFoodAmount / 10))))); this.playSound(SoundEvents.ENTITY_GENERIC_EAT, this.getSoundVolume(), this.getSoundPitch()); this.spawnItemCrackParticles(stack.getItem()); this.eatFoodBonus(stack); if (!(player.isCreative())) { (stack.stackSize)--; } return true; } if ((stack.getItem()) == (com.github.alexthe666.iceandfire.core.ModItems.dragon_meal)) { this.growDragon(1); this.setHunger(((this.getHunger()) + 20)); this.setHealth(java.lang.Math.min(this.getMaxHealth(), ((int) ((this.getMaxHealth()) / 3)))); this.playSound(SoundEvents.ENTITY_GENERIC_EAT, this.getSoundVolume(), this.getSoundPitch()); this.spawnItemCrackParticles(stack.getItem()); this.spawnItemCrackParticles(Items.BONE); this.spawnItemCrackParticles(Items.DYE); this.eatFoodBonus(stack); if (!(player.isCreative())) { (stack.stackSize)--; } return true; } if ((stack.getItem()) == (com.github.alexthe666.iceandfire.core.ModItems.dragon_stick)) { this.playSound(SoundEvents.ENTITY_ZOMBIE_INFECT, this.getSoundVolume(), this.getSoundPitch()); this.setSitting((!(this.isSitting()))); if (worldObj.isRemote) { player.addChatComponentMessage(new net.minecraft.util.text.TextComponentTranslation((\"dragon.command.\" + (this.isSitting() ? \"sit\" : \"stand\")))); } return true; } if ((stack.getItem()) == (com.github.alexthe666.iceandfire.core.ModItems.dragon_horn)) { this.playSound(SoundEvents.ENTITY_ZOMBIE_VILLAGER_CONVERTED, 3, 1.25F); net.minecraft.item.ItemStack stack1 = new net.minecraft.item.ItemStack((this.isFire ? com.github.alexthe666.iceandfire.core.ModItems.dragon_horn_fire : com.github.alexthe666.iceandfire.core.ModItems.dragon_horn_ice)); stack1.setTagCompound(new net.minecraft.nbt.NBTTagCompound()); this.writeEntityToNBT(stack1.getTagCompound()); player.setHeldItem(hand, stack1); this.setDead(); return true; } } }else { if (player.isSneaking()) { if ((this.getDragonStage()) > 2) { player.setSneaking(false); player.startRiding(this, true); this.setSleeping(false); }else if (this.isRiding()) { this.dismountRidingEntity(); }else if ((this.getDragonStage()) < 2) { this.startRiding(player, true); } return true; }else if ((stack == null) && (!(player.isSneaking()))) { this.openGUI(player); return true; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5814/buggy-version/src.main.java.com.github.alexthe666.iceandfire.entity.EntityDragonBase.java", "BodyUseAPI": [], "Fixed commit": "fee7632ef2a9c3a8f1861583514339116819404e", "Url": "https://api.github.com/repos/Alex-the-666/Ice_and_Fire", "Date": "2016-11-21T17:29:47Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.Jsoup.connect(URLstrings[0]).get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((doc.getElementsByClass(\"main-article-content\").size()) != 0) { masterArticle = doc.getElementsByClass(\"main-article-content\").first(); articolo = masterArticle.select(\"p\").text(); }else { masterArticle = doc.getElementsByClass(\"main-article-header\").first(); articolo = masterArticle.getElementsByClass(\"summary\").first().text(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8062/buggy-version/app.src.main.java.com.example.admin.primepaginecalcio.TuttosportActivity.java", "BodyUseAPI": ["org.jsoup.nodes.Document.getElementsByClass(java.lang.String)", "doc.getElementsByClass(\"main-article-header\").first()", "doc.getElementsByClass(\"main-article-content\").first()", "org.jsoup.nodes.Document.getElementsByClass(java.lang.String)"], "Fixed commit": "7a25440e3461cfa1a5009252d83ac019821b51c3", "Url": "https://api.github.com/repos/Droez/PrimePagineCalcio_Simple", "Date": "2015-12-03T17:00:41Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.Jsoup.connect(URLstrings[0]).get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((doc.getElementsByClass(\"single-desc\").size()) != 0) { masterArticle = doc.getElementsByClass(\"lazy\"); articolo = masterArticle.first().getElementsByAttribute(\"alt\").attr(\"alt\"); }else { masterArticle = doc.getElementsByClass(\"desc-article\"); articolo = masterArticle.text(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8062/buggy-version/app.src.main.java.com.example.admin.primepaginecalcio.GazzettaActivity.java", "BodyUseAPI": ["org.jsoup.nodes.Document.getElementsByClass(java.lang.String)", "org.jsoup.nodes.Document.getElementsByClass(java.lang.String)"], "Fixed commit": "7a25440e3461cfa1a5009252d83ac019821b51c3", "Url": "https://api.github.com/repos/Droez/PrimePagineCalcio_Simple", "Date": "2015-12-03T17:00:41Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["set.iterator().next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (singleNewExpr == (soot.jimple.toolkits.pointer.LocalMustNotAliasAnalysis.UNKNOWN)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6666/buggy-version/src.soot.jimple.toolkits.pointer.LocalMustNotAliasAnalysis.java", "BodyUseAPI": [], "Fixed commit": "7032b64ee69b115931740d4e3c4aa783e166d266", "Url": "https://api.github.com/repos/Sable/soot", "Date": "2013-12-25T13:31:24Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.ai.myplugin.WeatherSensor.WEATHER.equals(property.get(com.ai.myplugin.WeatherSensor.OPTION))) { return weatherStates; }else if (com.ai.myplugin.WeatherSensor.HUMIDITY.equals(property.get(com.ai.myplugin.WeatherSensor.OPTION))) { return humidityStates; }else { return new java.lang.String[]{ }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1539/buggy-version/com.ai.myplugin.WeatherSensor.java", "BodyUseAPI": ["java.util.Properties.get(java.lang.String)", "java.lang.String.equals(java.lang.Object)"], "Fixed commit": "7eed9495d8faab572df98f0d8e35c8ff33ed48f8", "Url": "https://api.github.com/repos/pizuricv/BayesAppPluginProject", "Date": "2013-05-20T17:07:21Z"},
{"Line": "=>886", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connEndPoint instanceof org.osate.aadl2.Subcomponent) { instance = ctxt.findSubcomponentInstance(((org.osate.aadl2.Subcomponent) (connEndPoint))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8388/buggy-version/org.osate.aadl2.src.org.osate.aadl2.instance.impl.ConnectionInstanceImpl.java", "BodyUseAPI": [], "Fixed commit": "02a4b24636df256833e769d048af5e1705875d11", "Url": "https://api.github.com/repos/osate/osate2-core", "Date": "2013-02-20T19:40:03Z"},
{"Line": "=>897", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (instance == null) { org.osate.aadl2.util.OsateDebug.osateDebug(\"[ConnectionInstanceImpl] Error while evaluating object\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8388/buggy-version/org.osate.aadl2.src.org.osate.aadl2.instance.impl.ConnectionInstanceImpl.java", "BodyUseAPI": [], "Fixed commit": "02a4b24636df256833e769d048af5e1705875d11", "Url": "https://api.github.com/repos/osate/osate2-core", "Date": "2013-02-20T19:40:03Z"},
{"Line": "=>891", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connEndPoint instanceof org.osate.aadl2.Feature) { instance = ctxt.findFeatureInstance(((org.osate.aadl2.Feature) (connEndPoint))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8388/buggy-version/org.osate.aadl2.src.org.osate.aadl2.instance.impl.ConnectionInstanceImpl.java", "BodyUseAPI": [], "Fixed commit": "02a4b24636df256833e769d048af5e1705875d11", "Url": "https://api.github.com/repos/osate/osate2-core", "Date": "2013-02-20T19:40:03Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ssoConfiguration.getSkipURIs()) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3948/buggy-version/src.main.java.org.wso2.appserver.webapp.security.agent.SSOAgentRequestResolver.java", "BodyUseAPI": [], "Fixed commit": "2d344bf763a006ad44f297ae717fb98c6e64fca0", "Url": "https://api.github.com/repos/wso2-extensions/tomcat-extension-samlsso", "Date": "2016-06-21T03:31:09Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((paymentDate) != null) { java.text.SimpleDateFormat format = new java.text.SimpleDateFormat(\"dd.MM.yyyy hh:mm\"); return (((((((((\"\u041d\u043e\u043c\u0435\u0440 \u0437\u0430\u043a\u0430\u0437\u0430: \" + (this.getId())) + \"\\n\\u041d\\u043e\\u043c\\u0435\\u0440 \\u043a\\u043b\\u0438\\u0435\\u043d\\u0442\\u0430: \") + (this.getClient())) + \"\\n\\u0418\\u0437\\u0434\\u0435\\u043b\\u0438\\u0435: \") + (this.getJewel())) + \"\\n\\u0426\\u0435\\u043d\\u0430: \") + (this.getPrice())) + \"\\n\\u0414\\u0430\\u0442\\u0430 \\u043e\\u043f\\u043b\\u0430\\u0442\\u044b: \") + (format.format(this.getPaymentDate()).toString())) + \"\\n\"; }else return (((((((\"\u041d\u043e\u043c\u0435\u0440 \u0437\u0430\u043a\u0430\u0437\u0430: \" + (this.getId())) + \"\\n\\u041d\\u043e\\u043c\\u0435\\u0440 \\u043a\\u043b\\u0438\\u0435\\u043d\\u0442\\u0430: \") + (this.getClient())) + \"\\n\\u0418\\u0437\\u0434\\u0435\\u043b\\u0438\\u0435: \") + (this.getJewel())) + \"\\n\\u0426\\u0435\\u043d\\u0430: \") + (this.getPrice())) + \"\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/263/buggy-version/src.main.java.Model.Order.java", "BodyUseAPI": [], "Fixed commit": "65ccb9ce5dc20ace14eff5b7fd3afb16c3f7729d", "Url": "https://api.github.com/repos/AlexandrSkoblikov/Jewelry", "Date": "2016-11-23T10:03:03Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((responseCode) >= (HttpStatusCode.BAD_REQUEST.getStatusCode())) { in = new java.io.BufferedInputStream(httpConnection.getErrorStream()); }else { in = new java.io.BufferedInputStream(httpConnection.getInputStream()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3525/buggy-version/T03.app.src.main.java.ca.ualberta.cmput301.t03.common.http.HttpResponse.java", "BodyUseAPI": [], "Fixed commit": "71ea7f0f406762996144b4db070ee22d968f1c2c", "Url": "https://api.github.com/repos/CMPUT301F15T03/301p", "Date": "2015-10-31T22:41:11Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tracker.isSpaceKey(msg.arg1))) mLIMEKeyboardBaseView.startKeyPreviewFadeInAnimation();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4495/buggy-version/LimeStudio.app.src.main.java.net.toload.main.hd.keyboard.LIMEKeyboardBaseView.java", "BodyUseAPI": [], "Fixed commit": "79e8e376a8df1988be560ba751cd5904af6f93f4", "Url": "https://api.github.com/repos/lime-ime/limeime", "Date": "2016-07-31T00:57:37Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dataSnapshot.child(\"-1\").child(\"News_Image\").getValue().toString().equals(\"\"))) { com.google.firebase.storage.StorageReference remove = storageReference.child(dataSnapshot.child(\"-1\").child(\"News_Image\").getValue().toString()); remove.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/280/buggy-version/app.src.main.java.com.venkibellu.myapplication.News_Adding.java", "BodyUseAPI": ["dataSnapshot.child(\"-1\").child(\"News_Image\").getValue().toString()", "dataSnapshot.child(\"-1\").child(java.lang.String)", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "com.google.firebase.storage.StorageReference.child(dataSnapshot.child(\"-1\").child(\"News_Image\").getValue().toString())", "dataSnapshot.child(\"-1\").child(\"News_Image\").getValue()"], "Fixed commit": "30ec819826d41c4c3d4b9ccb1d3c8df5cec43bd1", "Url": "https://api.github.com/repos/venki-bellu/UVCEConnectRetake", "Date": "2017-09-07T10:21:13Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((values.length) == 1) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6618/buggy-version/src.com.dineroscript.vm.memory.Scope.java", "BodyUseAPI": [], "Fixed commit": "073d2a26db6e64c87afa5e65983c8ae010d4a08f", "Url": "https://api.github.com/repos/raguirre/dineroscript", "Date": "2016-11-21T04:16:41Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((bl4ckscor3.game.GameDev.menu.Menu.getState()) != (bl4ckscor3.game.GameDev.menu.Menu.STATE_PAUSE)) || ((bl4ckscor3.game.GameDev.menu.Menu.getState()) != (bl4ckscor3.game.GameDev.menu.Menu.STATE_MAIN))) { if ((bl4ckscor3.game.GameDev.menu.Menu.getPreviousState()) == (bl4ckscor3.game.GameDev.menu.Menu.STATE_MAIN)) bl4ckscor3.game.GameDev.menu.Menu.setState(Menu.STATE_MAIN); else if ((bl4ckscor3.game.GameDev.menu.Menu.getPreviousState()) == (bl4ckscor3.game.GameDev.menu.Menu.STATE_PAUSE)) bl4ckscor3.game.GameDev.menu.Menu.setState(Menu.STATE_PAUSE); }else bl4ckscor3.game.GameDev.game.Game.unpause();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4970/buggy-version/GameDev.src.bl4ckscor3.game.GameDev.listener.Key.java", "BodyUseAPI": [], "Fixed commit": "be5925652fc5af1c44a648650c379aa319d12fba", "Url": "https://api.github.com/repos/bl4ckscor3/GameDev", "Date": "2015-01-01T00:15:34Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.effectiveCode) == null) && ((this.code) != null)) { this.setEffectiveCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1792/buggy-version/ultradns-rest.src.main.java.denominator.ultradns.model.Region.java", "BodyUseAPI": [], "Fixed commit": "3fc6d2df081d4f8d6db04009a6c7211fe09eaaa3", "Url": "https://api.github.com/repos/ultradns/denominator", "Date": "2017-03-22T07:53:35Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.effectiveCodeForGeo) == null) && ((this.code) != null)) { this.setEffectiveCodeForGeo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1792/buggy-version/ultradns-rest.src.main.java.denominator.ultradns.model.Region.java", "BodyUseAPI": [], "Fixed commit": "3fc6d2df081d4f8d6db04009a6c7211fe09eaaa3", "Url": "https://api.github.com/repos/ultradns/denominator", "Date": "2017-03-22T07:53:35Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.kenyaemr.fragment.controller.patient.PatientSummaryFragmentController.getLatestObs(org.openmrs.Patient,Dictionary.DELIVERY_STATUS)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (deliveryStatus != null) { deliveredStatusVal = deliveryStatus.getValueCoded().getConceptId().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2039/buggy-version/omod.src.main.java.org.openmrs.module.kenyaemr.fragment.controller.patient.PatientSummaryFragmentController.java", "BodyUseAPI": ["org.openmrs.Obs.getValueCoded()", "deliveryStatus.getValueCoded().getConceptId().toString()", "deliveryStatus.getValueCoded().getConceptId()"], "Fixed commit": "91356d56c702badc719d62ef0725c83ecc0e4a87", "Url": "https://api.github.com/repos/hispindia/his-tb-emr", "Date": "2016-09-15T10:15:14Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.kenyaemr.calculation.EmrCalculationUtils.obsResultForPatient(org.openmrs.calculation.result.CalculationResultMap,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (deliveryStatusObs != null) { if ((((deliveryStatusObs.getValueCoded().getConceptId()) == 140242) || ((deliveryStatusObs.getValueCoded().getConceptId()) == 140791)) || ((deliveryStatusObs.getValueCoded().getConceptId()) == 151843)) { result = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2039/buggy-version/api.src.main.java.org.openmrs.module.kenyaemr.calculation.library.IsPregnantCalculation.java", "BodyUseAPI": ["deliveryStatusObs.getValueCoded().getConceptId()", "deliveryStatusObs.getValueCoded().getConceptId()", "org.openmrs.Obs.getValueCoded()", "deliveryStatusObs.getValueCoded().getConceptId()", "org.openmrs.Obs.getValueCoded()", "org.openmrs.Obs.getValueCoded()"], "Fixed commit": "91356d56c702badc719d62ef0725c83ecc0e4a87", "Url": "https://api.github.com/repos/hispindia/his-tb-emr", "Date": "2016-09-15T10:15:14Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((witnesses != null) && (witnesses.booleanValue())) { taskArgs.add(\"-W\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1806/buggy-version/Sources.ParsyboneWidget.src.main.java.mu.fi.sybila.esther.parsybonewidget.controllers.ParsyboneController.java", "BodyUseAPI": [], "Fixed commit": "16babd207b50fac8f1f4e1ec5ddc8c90e6be8b7e", "Url": "https://api.github.com/repos/sybila/Esther", "Date": "2013-07-29T07:44:39Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((robustness != null) && (robustness.booleanValue())) { taskArgs.add(\"-r\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1806/buggy-version/Sources.ParsyboneWidget.src.main.java.mu.fi.sybila.esther.parsybonewidget.controllers.ParsyboneController.java", "BodyUseAPI": [], "Fixed commit": "16babd207b50fac8f1f4e1ec5ddc8c90e6be8b7e", "Url": "https://api.github.com/repos/sybila/Esther", "Date": "2013-07-29T07:44:39Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == 1) { return new com.github.android.downloader.bean.DownloadInfo[]{ new com.github.android.downloader.bean.DownloadInfo(dFile, 0, com.github.android.downloader.bean.DownloadInfo.RANGE_NONE) }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1159/buggy-version/app.src.main.java.com.github.android.downloader.net.HttpDownAnalysis.java", "BodyUseAPI": [], "Fixed commit": "ea6655610045723574b1304304f37e5eabb0b380", "Url": "https://api.github.com/repos/8enet/libdownloadmanager", "Date": "2015-01-31T16:44:08Z"},
{"Line": "=>2200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vok.getURI()) != null) { name = vok.getURI().getLastPathSegment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6935/buggy-version/learnforAndroidFrag.src.main.java.org.de.jmg.learn.MainActivity.java", "BodyUseAPI": ["org.de.jmg.learn.vok.Vokabel.getURI()", "vok.getURI().getLastPathSegment()"], "Fixed commit": "4dcfc4e5b70a8dea570870772b94671600476e8c", "Url": "https://api.github.com/repos/jhmgbl/learnforandroidfragAS", "Date": "2016-12-06T20:53:34Z"},
{"Line": "=>2204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(libString.IsNullOrEmpty(vok.getFileName()))) { try { name = new java.io.File(vok.getFileName()).getName(); } catch (java.lang.Exception ex) { ex.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6935/buggy-version/learnforAndroidFrag.src.main.java.org.de.jmg.learn.MainActivity.java", "BodyUseAPI": ["java.io.File.getName()", "org.de.jmg.learn.vok.Vokabel.getFileName()"], "Fixed commit": "4dcfc4e5b70a8dea570870772b94671600476e8c", "Url": "https://api.github.com/repos/jhmgbl/learnforandroidfragAS", "Date": "2016-12-06T20:53:34Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNewKey(key)) { ++(size); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5472/buggy-version/src.main.java.ujj.origami.ForgettingMap.java", "BodyUseAPI": [], "Fixed commit": "3637b2113cdefc977d3b4c13790804d381b3a12e", "Url": "https://api.github.com/repos/ujjpista/forgettingMap", "Date": "2015-11-07T20:25:03Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.menu_share)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6912/buggy-version/app.src.main.java.cn.vove7.bingwallpaper.activitys.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "22891e052d2bfeff535153ece64cdac8a4cae4dc", "Url": "https://api.github.com/repos/Vove7/BingWallpaper", "Date": "2017-11-11T11:55:53Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (options.hasKey(\"url\")) { url = options.getString(\"url\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5463/buggy-version/android.src.main.java.com.github.xfumihiro.react_native_image_to_base64.ImageToBase64Module.java", "BodyUseAPI": ["com.facebook.react.bridge.ReadableMap.getString(java.lang.String)"], "Fixed commit": "c0e3b5b885facfe8e923f3d1e67c4df464596a88", "Url": "https://api.github.com/repos/katanabe/react-native-image-to-base64", "Date": "2016-10-27T10:09:55Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["myContext.getRunnerParameters().get(VMConstants.PARAMETER_SHELL)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (loc == null) { return \"/bin/bash\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6517/buggy-version/agent.src.com.jonnyzzz.teamcity.virtual.run.VMRunnerContext.java", "BodyUseAPI": [], "Fixed commit": "58b6a7e6900685cef587d50bd24b9e73bdb7917e", "Url": "https://api.github.com/repos/rodm/TeamCity.Virtual", "Date": "2016-06-12T18:18:33Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(skillTreeMobType.getMobTypeName().equals(\"default\"))) { de.Keyle.MyPet.util.MyPetSkillTreeConfigLoader.addDefault(skillTreeMobType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3983/buggy-version/src.Java.de.Keyle.MyPet.util.MyPetSkillTreeConfigLoader.java", "BodyUseAPI": ["de.Keyle.MyPet.util.MyPetSkillTreeConfigLoader.addDefault(de.Keyle.MyPet.util.MyPetSkillTreeMobType)"], "Fixed commit": "e04487cd62ceee5200d90cf5249bb36cd95224ab", "Url": "https://api.github.com/repos/xXLupoXx/MyPet", "Date": "2012-12-18T14:05:07Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_size) == 1) { _end = null; _front = null; _size -= 1; return ret; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3748/buggy-version/DLDeque.java", "BodyUseAPI": [], "Fixed commit": "fb9fb6d16933c5b5e2ed6c760ca7b34b49c725e4", "Url": "https://api.github.com/repos/DimitriyL/HorsesNeck", "Date": "2017-04-06T02:55:16Z"},
{"Line": "=>1904", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((objectWorldOrder.type()) == (greycat.internal.MWResolver.NodeValueType)) { types[i] = ChunkType.TIME_TREE_DVALUE_CHUNK; }else { types[i] = ChunkType.TIME_TREE_CHUNK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1319/buggy-version/greycat.src.main.java.greycat.internal.MWResolver.java", "BodyUseAPI": [], "Fixed commit": "cf318a4350775ff5cf264c38c6615154a240f318", "Url": "https://api.github.com/repos/Neoskai/greycat", "Date": "2017-07-25T07:30:52Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!assistit) { btnQR.setText(\"Accedir mitjan\u00e7ant QR\"); if ((mNfcAdapter) == null) btnNFC.setVisibility(View.GONE); }else { btnNFC.setVisibility(View.GONE); btnQR.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2153/buggy-version/app.src.main.java.es.cat.cofb.bbsaccess.Presentation.DetalleEventoActivity.java", "BodyUseAPI": [], "Fixed commit": "679d8847cf309404c0baf27479842e588283b8eb", "Url": "https://api.github.com/repos/ericguti90/BBS_Access", "Date": "2015-11-05T13:46:52Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messages.size()) <= 0) return messages;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6990/buggy-version/src.main.java.com.oracle.Session.java", "BodyUseAPI": [], "Fixed commit": "c81f916beaffdb94b40eee44e60334b2237de762", "Url": "https://api.github.com/repos/mgordon9/BuzMo", "Date": "2016-12-01T07:26:40Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messages.size()) <= 0) return messages;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6990/buggy-version/src.main.java.com.oracle.Session.java", "BodyUseAPI": [], "Fixed commit": "c81f916beaffdb94b40eee44e60334b2237de762", "Url": "https://api.github.com/repos/mgordon9/BuzMo", "Date": "2016-12-01T07:26:40Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(checkListItems.isEmpty())) return checkListItems.split(\"\\n\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4912/buggy-version/src.main.java.com.attask.jenkins.codereviewer.CodeReviewBuildWrapper.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "926a9ad0bedc7aa641ce3ab09678d0db363c476c", "Url": "https://api.github.com/repos/JoelJ/PipelineDashboard", "Date": "2012-08-15T22:00:20Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDeleteErrorToast) == null) { mDeleteErrorToast = android.widget.Toast.makeText(mContext, \"\u5220\u9664\u89c6\u9891\u6587\u4ef6\u5f02\u5e38\", Toast.LENGTH_SHORT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4893/buggy-version/src.com.haoke.ui.video.VideoListLayout.java", "BodyUseAPI": [], "Fixed commit": "daa6e3820506ea7fd192dbd82b9369456b4383f4", "Url": "https://api.github.com/repos/Yearlay/AmdMediaService", "Date": "2017-12-27T11:28:54Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCopyErrorEndToast) == null) { mCopyErrorEndToast = android.widget.Toast.makeText(mContext, \"\u62f7\u8d1d\u89c6\u9891\u6587\u4ef6\u5f02\u5e38\", Toast.LENGTH_SHORT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4893/buggy-version/src.com.haoke.ui.video.VideoListLayout.java", "BodyUseAPI": [], "Fixed commit": "daa6e3820506ea7fd192dbd82b9369456b4383f4", "Url": "https://api.github.com/repos/Yearlay/AmdMediaService", "Date": "2017-12-27T11:28:54Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Integer>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((getSupportFragmentManager().findFragmentById(detail_id)) != null) { ((com.main.toledo.gymtrackr.EditExerciseDetailsFragment) (getSupportFragmentManager().findFragmentById(detail_id))).focusFirstEdit(); ((com.main.toledo.gymtrackr.EditExerciseDetailsFragment) (getSupportFragmentManager().findFragmentById(detail_id))).implementSwipeListener(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2245/buggy-version/app.src.main.java.com.main.toledo.gymtrackr.DetailActivity.java", "BodyUseAPI": ["((com.main.toledo.gymtrackr.EditExerciseDetailsFragment) (getSupportFragmentManager().findFragmentById(detail_id))).implementSwipeListener()", "getSupportFragmentManager().findFragmentById(int)", "((com.main.toledo.gymtrackr.EditExerciseDetailsFragment) (getSupportFragmentManager().findFragmentById(detail_id))).focusFirstEdit()", "getSupportFragmentManager().findFragmentById(int)"], "Fixed commit": "57658062b3c5520ef7aa88b3a83baaba2bd1deba", "Url": "https://api.github.com/repos/kodieGlosser/FitnessApp", "Date": "2015-04-21T03:24:13Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.releasequeue.server.ServerConnection.listProducts()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (products != null) { for (java.lang.Object product : products) { items.add(((org.json.simple.JSONObject) (product)).get(\"name\").toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4411/buggy-version/src.main.java.com.releasequeue.jenkins.trigger.ReleaseQueueWebHookTrigger.java", "BodyUseAPI": [], "Fixed commit": "8ae81d343b6a9a57d69b5fb767d3520111d814ef", "Url": "https://api.github.com/repos/ReleaseQueue/jenkins-releasequeue-plugin", "Date": "2015-07-21T10:47:24Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((product) != null) && ((triggerUrl) != null)) { server.removeWebHookSubscription(product, triggerUrl.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4411/buggy-version/src.main.java.com.releasequeue.jenkins.trigger.ReleaseQueueWebHookTrigger.java", "BodyUseAPI": [], "Fixed commit": "8ae81d343b6a9a57d69b5fb767d3520111d814ef", "Url": "https://api.github.com/repos/ReleaseQueue/jenkins-releasequeue-plugin", "Date": "2015-07-21T10:47:24Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.userId) == null) { requestToken(email, password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4411/buggy-version/src.main.java.com.releasequeue.server.ReleaseQueueServer.java", "BodyUseAPI": [], "Fixed commit": "8ae81d343b6a9a57d69b5fb767d3520111d814ef", "Url": "https://api.github.com/repos/ReleaseQueue/jenkins-releasequeue-plugin", "Date": "2015-07-21T10:47:24Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) != 0) de.haw_chat.server.Main.showUsage();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5389/buggy-version/RN_Praktikum_02.HawChatServer.src.de.haw_chat.server.Main.java", "BodyUseAPI": [], "Fixed commit": "cd1a0a76bfa5b38f57fadcf12f4b098221f9549b", "Url": "https://api.github.com/repos/mcmyffin/BAI-4-RN", "Date": "2015-11-19T08:41:41Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (amount == 0) { sender.sendMessage((((((BottledExp.langOrder1) + \" \") + amount) + \" \") + (BottledExp.langOrder2))); }else { org.bukkit.inventory.PlayerInventory inventory = player.getInventory(); org.bukkit.inventory.ItemStack items = new org.bukkit.inventory.ItemStack(384, amount); inventory.addItem(items); player.setTotalExperience(0); player.setLevel(0); player.setExp(0); player.giveExp((currentxp - (amount * (BottledExp.xpCost)))); sender.sendMessage((((((BottledExp.langOrder1) + \" \") + amount) + \" \") + (BottledExp.langOrder2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5766/buggy-version/src.me.sacnoth.bottledexp.BottledExpCommandExecutor.java", "BodyUseAPI": ["org.bukkit.entity.Player.giveExp((currentxp - (amount * (BottledExp.xpCost))))", "org.bukkit.command.CommandSender.sendMessage((((((BottledExp.langOrder1) + \" \") + amount) + \" \") + (BottledExp.langOrder2)))", "org.bukkit.command.CommandSender.sendMessage((((((BottledExp.langOrder1) + \" \") + amount) + \" \") + (BottledExp.langOrder2)))"], "Fixed commit": "f8f870b8da8f8740e9484af3cfd78cffa956274b", "Url": "https://api.github.com/repos/sacnoth/BottledExp", "Date": "2012-04-14T11:23:15Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (meta > (aroma1997.compactwindmills.WindType.values().length)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4971/buggy-version/compactwindmills_common.aroma1997.compactwindmills.BlockCompactWindmill.java", "BodyUseAPI": [], "Fixed commit": "d490c16fc85d3b2707cdfb85e9a5132aa9567d95", "Url": "https://api.github.com/repos/Aroma1997/CompactWindmills", "Date": "2013-06-21T14:42:25Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((teams.length) == 2) { stavka.Fortuna.insertRow(teams, rates); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6089/buggy-version/stavka.src.stavka.Fortuna.java", "BodyUseAPI": [], "Fixed commit": "75620e915eabcf84d87c0a548cf81c15a8f2394f", "Url": "https://api.github.com/repos/NovakA/pokus", "Date": "2017-07-01T13:50:17Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((old = m_slot.clear()) != null) m_observers.raise(io.github.jevaengine.rpg.entity.character.ILoadoutObserver.class).unequip(m_wieldTarget);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6718/buggy-version/src.main.java.io.github.jevaengine.rpg.entity.character.DefaultLoadout.java", "BodyUseAPI": [], "Fixed commit": "49ef91408d9f101a5998df5e6bbe0d90f018bcd9", "Url": "https://api.github.com/repos/JeremyWildsmith/rpg", "Date": "2017-02-14T00:35:11Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.getGeneratedKeys()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.next()) { fileId = rs.getInt(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4908/buggy-version/src.main.java.indexing.DbHandler.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(int)"], "Fixed commit": "9d4b8b9eff2cb3f881738f3c780498a11a679868", "Url": "https://api.github.com/repos/OttkO/IndexBuilder", "Date": "2017-01-08T20:28:40Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.jakobkrantz.transit.app.skanetrafikenAPI.XMLQueryJourneyHandler.getJourneys()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((j.size()) != 0) { j.get(0).setJourneyResultKey(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6015/buggy-version/app.src.main.java.se.jakobkrantz.transit.app.apiasynctasks.SearchJourneysTask.java", "BodyUseAPI": ["java.util.ArrayList<se.jakobkrantz.transit.app.skanetrafikenAPI.Journey>.get(int)", "j.get(0).setJourneyResultKey(java.lang.String)"], "Fixed commit": "e1089dc0a023d3f87b7b4db1d34892267115d029", "Url": "https://api.github.com/repos/jakkra/Transit", "Date": "2015-03-24T22:44:59Z"},
{"Line": "=>868", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (structuresNextUpdate == null) { javax.swing.JOptionPane.showMessageDialog(getMainWindow().getFrame(), net.nikr.eve.jeveasset.i18n.GuiFrame.get().updateStructureInvalid(), net.nikr.eve.jeveasset.i18n.GuiFrame.get().updateStructureTitle(), javax.swing.JOptionPane.PLAIN_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3047/buggy-version/src.main.java.net.nikr.eve.jeveasset.Program.java", "BodyUseAPI": [], "Fixed commit": "8d4896a8a9de0004048f5413bacd041a54ecfe11", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-11-04T13:29:19Z"},
{"Line": "=>875", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (time <= 1000) { updatableIn = \"seconds\"; }else if (time < (60 * 1000)) { updatableIn = net.nikr.eve.jeveasset.gui.shared.Formater.milliseconds(time, false, true, false, true); }else { updatableIn = net.nikr.eve.jeveasset.gui.shared.Formater.milliseconds(time, false, true, true, true, true, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3047/buggy-version/src.main.java.net.nikr.eve.jeveasset.Program.java", "BodyUseAPI": ["net.nikr.eve.jeveasset.gui.shared.Formater.milliseconds(long,boolean,boolean,boolean,boolean,boolean,boolean)", "net.nikr.eve.jeveasset.gui.shared.Formater.milliseconds(long,boolean,boolean,boolean,boolean)"], "Fixed commit": "8d4896a8a9de0004048f5413bacd041a54ecfe11", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-11-04T13:29:19Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (low == null) low = this.low();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8783/buggy-version/pre-aggregate.src.main.java.nl.utwente.db.neogeo.preaggregate.MetricAxis.java", "BodyUseAPI": [], "Fixed commit": "98e5528c6e0ea4dab036cb837238e61919e0feec", "Url": "https://api.github.com/repos/utwente-db/neogeo", "Date": "2014-08-05T13:08:18Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((java.sql.Timestamp) (low)).getTime()) < (this.low)) low = this.low();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8783/buggy-version/pre-aggregate.src.main.java.nl.utwente.db.neogeo.preaggregate.MetricAxis.java", "BodyUseAPI": [], "Fixed commit": "98e5528c6e0ea4dab036cb837238e61919e0feec", "Url": "https://api.github.com/repos/utwente-db/neogeo", "Date": "2014-08-05T13:08:18Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (high == null) high = this.high();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8783/buggy-version/pre-aggregate.src.main.java.nl.utwente.db.neogeo.preaggregate.MetricAxis.java", "BodyUseAPI": [], "Fixed commit": "98e5528c6e0ea4dab036cb837238e61919e0feec", "Url": "https://api.github.com/repos/utwente-db/neogeo", "Date": "2014-08-05T13:08:18Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(low instanceof java.sql.Timestamp)) low = this.low();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8783/buggy-version/pre-aggregate.src.main.java.nl.utwente.db.neogeo.preaggregate.MetricAxis.java", "BodyUseAPI": [], "Fixed commit": "98e5528c6e0ea4dab036cb837238e61919e0feec", "Url": "https://api.github.com/repos/utwente-db/neogeo", "Date": "2014-08-05T13:08:18Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (high instanceof java.lang.Long) high = new java.sql.Timestamp(((java.lang.Long) (high)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8783/buggy-version/pre-aggregate.src.main.java.nl.utwente.db.neogeo.preaggregate.MetricAxis.java", "BodyUseAPI": [], "Fixed commit": "98e5528c6e0ea4dab036cb837238e61919e0feec", "Url": "https://api.github.com/repos/utwente-db/neogeo", "Date": "2014-08-05T13:08:18Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(high instanceof java.sql.Timestamp)) high = this.high();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8783/buggy-version/pre-aggregate.src.main.java.nl.utwente.db.neogeo.preaggregate.MetricAxis.java", "BodyUseAPI": [], "Fixed commit": "98e5528c6e0ea4dab036cb837238e61919e0feec", "Url": "https://api.github.com/repos/utwente-db/neogeo", "Date": "2014-08-05T13:08:18Z"},
{"Line": "=>714", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.arkasoft.jton.JtonElement.getAsJtonObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((map.size()) > 0) { writer.append('\\n'); writer.append(padding((level * (indentFactor)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7282/buggy-version/src.com.arkasoft.jton.serialization.JsonSerializer.java", "BodyUseAPI": [], "Fixed commit": "fabd67d39fd11ad0fb47cba5c8ab5674bf299d4e", "Url": "https://api.github.com/repos/ggeorg/jton-lib", "Date": "2015-12-16T16:49:27Z"},
{"Line": "=>636", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.arkasoft.jton.JtonElement.getAsJtonArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((list.size()) > 0) { writer.append('\\n'); writer.append(padding((level * (indentFactor)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7282/buggy-version/src.com.arkasoft.jton.serialization.JsonSerializer.java", "BodyUseAPI": [], "Fixed commit": "fabd67d39fd11ad0fb47cba5c8ab5674bf299d4e", "Url": "https://api.github.com/repos/ggeorg/jton-lib", "Date": "2015-12-16T16:49:27Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gr.iti.mklab.reveal.util.MediaCluster.getCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (offset > numMembers) offset = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7652/buggy-version/src.main.java.gr.iti.mklab.reveal.web.RevealController.java", "BodyUseAPI": [], "Fixed commit": "d520bed820ef8d0ec96b10b37c3c50a6c62d2f65", "Url": "https://api.github.com/repos/kandreadou/reveal-web-service", "Date": "2014-10-08T06:52:32Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gr.iti.mklab.reveal.util.MediaCluster.getCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((offset + count) > numMembers) count = numMembers - offset;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7652/buggy-version/src.main.java.gr.iti.mklab.reveal.web.RevealController.java", "BodyUseAPI": [], "Fixed commit": "d520bed820ef8d0ec96b10b37c3c50a6c62d2f65", "Url": "https://api.github.com/repos/kandreadou/reveal-web-service", "Date": "2014-10-08T06:52:32Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.socialsensor.framework.client.dao.impl.StreamUserDAOImpl.getStreamUsers(gr.iti.mklab.reveal.mongo.DBObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((users != null) && ((users.size()) > 0)) { q.put(\"uid\", users.get(0).getId()); }else { return new java.util.ArrayList<gr.iti.mklab.reveal.util.MediaItem>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7652/buggy-version/src.main.java.gr.iti.mklab.reveal.mongo.RevealMediaItemDaoImpl.java", "BodyUseAPI": ["gr.iti.mklab.reveal.mongo.BasicDBObject.put(java.lang.String,users.get(0).getId())", "users.get(0).getId()", "java.util.List<eu.socialsensor.framework.common.domain.StreamUser>.get(int)"], "Fixed commit": "d520bed820ef8d0ec96b10b37c3c50a6c62d2f65", "Url": "https://api.github.com/repos/kandreadou/reveal-web-service", "Date": "2014-10-08T06:52:32Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (which == 1) { }else if (which == 2) { }else if (which == 3) { }else { android.widget.Toast.makeText(getContext(), (\"Option: \" + (arr[which])), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3714/buggy-version/app.src.main.java.io.github.kosmologist.easytimetracker.fragments.ShiftListFragment.java", "BodyUseAPI": ["android.widget.Toast.makeText(getContext(),java.lang.String,Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(getContext(), (\"Option: \" + (arr[which])), Toast.LENGTH_SHORT).show()"], "Fixed commit": "e1a09726e2f6c767a52da94f041ea74ac68fca66", "Url": "https://api.github.com/repos/kosmologist/bigbang", "Date": "2016-11-22T13:14:42Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (targetModel == movedModel) { com.smartgwt.client.widgets.tree.TreeNode targetNode = structureTree.findById(dropPlace.getAttribute(Constants.ATTR_ID)); com.smartgwt.client.widgets.tree.TreeNode movedNode = structureTree.findById(selection[0].getAttribute(Constants.ATTR_ID)); structureTree.move(movedNode, structureTree.getParent(targetNode), structureTreeGrid.getEventRow()); }else { com.smartgwt.client.util.SC.say(((((lang.objNotDropable()) + \": <code>\") + (movedModel.getValue())) + \"</code>\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/9184/buggy-version/editor-creation.src.main.java.cz.mzk.editor.client.view.CreateObjectMenuView.java", "BodyUseAPI": ["cz.mzk.editor.shared.domain.DigitalObjectModel.getValue()", "com.smartgwt.client.util.SC.say(((((lang.objNotDropable()) + \": <code>\") + (movedModel.getValue())) + \"</code>\"))"], "Fixed commit": "d36fdf5a13c3b229877dea0fcc1e441c25c8373a", "Url": "https://api.github.com/repos/moravianlibrary/MEditor", "Date": "2012-06-13T14:00:49Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((modelId != null) && (!(\"\".equals(modelId)))) setIsFolder(((cz.mzk.editor.shared.domain.DigitalObjectModel.parseString(modelId)) != (cz.mzk.editor.shared.domain.DigitalObjectModel.PAGE)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/9184/buggy-version/editor-common.editor-common-client.src.main.java.cz.mzk.editor.client.view.other.SubstructureTreeNode.java", "BodyUseAPI": [], "Fixed commit": "d36fdf5a13c3b229877dea0fcc1e441c25c8373a", "Url": "https://api.github.com/repos/moravianlibrary/MEditor", "Date": "2012-06-13T14:00:49Z"},
{"Line": "=>4508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((network.getBroadcastUri()) != null) nic.setBroadcastUri(network.getBroadcastUri()); else nic.setBroadcastUri(BroadcastDomainType.Vlan.toUri(ip.getVlanTag()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/9054/buggy-version/server.src.com.cloud.network.NetworkManagerImpl.java", "BodyUseAPI": ["com.cloud.vm.NicProfile.setBroadcastUri(network.getBroadcastUri())", "com.cloud.network.Network.getBroadcastUri()"], "Fixed commit": "09e7ab9750df27d96159bbcf3f41bafc33ac6fbe", "Url": "https://api.github.com/repos/apache/cloudstack", "Date": "2013-11-07T10:07:24Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<java.lang.String, org.jgroups.protocols.Locking.ServerLock>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (lock == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3886/buggy-version/src.org.jgroups.protocols.Locking.java", "BodyUseAPI": [], "Fixed commit": "1d9f91422f9c7b844753955239632d92c5d825a6", "Url": "https://api.github.com/repos/galderz/JGroups", "Date": "2011-09-18T14:57:39Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.wso2.carbon.analytics.spark.utils.ComputeClasspath.fileExists(carbonHome))) throw new java.io.IOException((\"CarbonHome specified, does not exists :\" + carbonHome));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3464/buggy-version/components.analytics-processors.org.wso2.carbon.analytics.spark.utils.src.main.java.org.wso2.carbon.analytics.spark.utils.ComputeClasspath.java", "BodyUseAPI": [], "Fixed commit": "edd2b8f1d0c82f79c8ae7244d33cca23516aa2fe", "Url": "https://api.github.com/repos/swsachith/carbon-analytics", "Date": "2015-10-26T12:00:19Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.wso2.carbon.analytics.spark.utils.ComputeClasspath.fileExists(carbonHome))) throw new java.io.IOException((\"CarbonHome specified, does not exists :\" + carbonHome));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3464/buggy-version/components.analytics-processors.org.wso2.carbon.analytics.spark.utils.src.main.java.org.wso2.carbon.analytics.spark.utils.ComputeClasspath.java", "BodyUseAPI": [], "Fixed commit": "edd2b8f1d0c82f79c8ae7244d33cca23516aa2fe", "Url": "https://api.github.com/repos/swsachith/carbon-analytics", "Date": "2015-10-26T12:00:19Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (error == (mRecognizer.ERROR_NO_MATCH)) { }else if (error == (mRecognizer.ERROR_RECOGNIZER_BUSY)) { android.widget.Toast.makeText(getApplicationContext(), \"Error - \uc778\uc2a4\ud134\uc2a4\uac00 \ubc14\uc068\", Toast.LENGTH_SHORT).show(); voiceButton.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8467/buggy-version/app.src.main.java.com.example.secondapplication.ButtonD.java", "BodyUseAPI": [], "Fixed commit": "64700c70f0910daa539a3b8cbb64fa75d57e882c", "Url": "https://api.github.com/repos/hyunOO/SecondApplication", "Date": "2017-07-11T16:11:09Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((err[0]) != (CL_SUCCESS)) { throw new whiley.gpgpu.OpenCL.Devices.DeviceFetchException(err[0], \"Unable to get any platforms\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2657/buggy-version/modules.wyjc.src.whiley.gpgpu.OpenCL.Devices.DeviceList.java", "BodyUseAPI": [], "Fixed commit": "71152489e4cb6a187be181a2a9e3949a96c9af5c", "Url": "https://api.github.com/repos/melbyruarus/Whiley", "Date": "2013-08-11T05:02:10Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((err[0]) != (CL_SUCCESS)) || ((numPlatforms[0]) == 0)) { throw new whiley.gpgpu.OpenCL.Devices.DeviceFetchException(err[0], \"Unable to find any platforms\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2657/buggy-version/modules.wyjc.src.whiley.gpgpu.OpenCL.Devices.DeviceList.java", "BodyUseAPI": [], "Fixed commit": "71152489e4cb6a187be181a2a9e3949a96c9af5c", "Url": "https://api.github.com/repos/melbyruarus/Whiley", "Date": "2013-08-11T05:02:10Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ai.isForSpecialHttpMethod())) { org.nutz.mvc.impl.UrlMappingImpl.log.debugf((\"Duplicate @At mapping ? path=\" + path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2294/buggy-version/src.org.nutz.mvc.impl.UrlMappingImpl.java", "BodyUseAPI": [], "Fixed commit": "1ada714711cd4dc23480c87faeb3232d45b0a49e", "Url": "https://api.github.com/repos/InsideZhou/nutz", "Date": "2014-07-08T07:07:44Z"},
{"Line": "=>655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((player) == null) && ((mMediaPlayer) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7945/buggy-version/XWalkProxy.src.org.example.xwalkembedded.XWalkExoMediaPlayer.java", "BodyUseAPI": [], "Fixed commit": "a8609390217e590a8b9b0fb8d35e3757ed8c7cff", "Url": "https://api.github.com/repos/fujunwei/customer_w", "Date": "2016-06-16T03:20:30Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((intent.getComponent()) != null) { intent.setAction(Intent.ACTION_MAIN); intent.addCategory(Intent.CATEGORY_LAUNCHER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8395/buggy-version/library.src.main.java.cat.ereza.customactivityoncrash.CustomActivityOnCrash.java", "BodyUseAPI": ["android.content.Intent.setAction(Intent.ACTION_MAIN)", "android.content.Intent.addCategory(Intent.CATEGORY_LAUNCHER)"], "Fixed commit": "bb1a451eb32bc8b0e7ceb138d2056b31d4e9a6fd", "Url": "https://api.github.com/repos/Ereza/CustomActivityOnCrash", "Date": "2017-06-14T13:35:54Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(file.exists())) && (!(file.mkdirs()))) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1134/buggy-version/VirtualApp.lib.src.main.java.com.lody.virtual.client.hook.proxies.mount.MethodProxies.java", "BodyUseAPI": [], "Fixed commit": "60dc575f5c4aa1d7dad8fd1699e3a3e6d49804a9", "Url": "https://api.github.com/repos/dstmath/VirtualApp", "Date": "2017-04-11T14:08:07Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) != null) { count++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3018/buggy-version/src.main.java.com.e7hz3r0.RedisCommand.java", "BodyUseAPI": [], "Fixed commit": "ebaa9bc18bf755f4cd13b43443bd22f8eb535012", "Url": "https://api.github.com/repos/e7hz3r0/java8redis", "Date": "2014-04-08T17:09:39Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.openjpa.azure.jdbc.conf.AzureConfiguration.getFederations(org.apache.openjpa.jdbc.schema.Table)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (federations.isEmpty()) { return new java.lang.String[]{ \"ROOT\" }; }else { final java.util.List<java.lang.String> rep = new java.util.ArrayList<java.lang.String>(federations.size()); for (org.apache.openjpa.azure.Federation fed : federations) { rep.add(fed.getName()); } return rep.toArray(new java.lang.String[federations.size()]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1887/buggy-version/src.main.java.org.apache.openjpa.azure.AzureReplicationPolicy.java", "BodyUseAPI": ["java.util.List<org.apache.openjpa.azure.Federation>.size()", "java.util.List<org.apache.openjpa.azure.Federation>.size()", "java.util.List<java.lang.String>.toArray(java.lang.String[])"], "Fixed commit": "26a9432137a22bacbe5618a98beb633fc6809280", "Url": "https://api.github.com/repos/Tirasa/OpenJPA-Azure", "Date": "2012-11-19T12:02:07Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zohaltech.app.sigma.dal.DataPackages.selectPackageById(item.getDataPackageId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dataPackage.getSecondaryTraffic()) != 0) { java.lang.String secondaryExpDate = (((item.getSecondaryTrafficEndDateTime()) != null) && (!(item.getSecondaryTrafficEndDateTime().isEmpty()))) ? com.zohaltech.app.sigma.classes.SolarCalendar.getShamsiDateTime(com.zohaltech.app.sigma.classes.Helper.getDateTime(item.getSecondaryTrafficEndDateTime())).substring(0, 16) : \"---\"; txtSecondaryExpDate.setText(secondaryExpDate); }else txtSecondaryExpDate.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7219/buggy-version/app.src.main.java.com.zohaltech.app.sigma.adapters.HistoryAdapter.java", "BodyUseAPI": [], "Fixed commit": "ada3bb905a9854b2707319194f3af2d439948d1e", "Url": "https://api.github.com/repos/zohaltech/MobileDataMonitor", "Date": "2015-09-18T10:30:56Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model) != null) modelDebugName = model.getDebugName(); else modelDebugName = \"[null model]\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5538/buggy-version/src.main.java.org.jtrfp.trcl.obj.WorldObject.java", "BodyUseAPI": [], "Fixed commit": "8aa4c38da0729e73811012ea67398da39e82252b", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-10-01T10:24:08Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((plugin.getCommand(command)) != null) plugin.getCommand(command).setExecutor(manager);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3775/buggy-version/CensoredLib-Core.src.main.java.com.censoredsoftware.censoredlib.helper.CommandManager.java", "BodyUseAPI": ["plugin.getCommand(command).setExecutor(com.censoredsoftware.censoredlib.helper.CommandManager)", "com.censoredsoftware.censoredlib.helper.CensoredJavaPlugin.getCommand(java.lang.String)"], "Fixed commit": "be38ec42298dde2f47421d1a9cbf99532bc4a47a", "Url": "https://api.github.com/repos/CensoredSoftware/CensoredLib", "Date": "2014-01-10T00:29:09Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cxf.jaxrs.swagger.SwaggerUiResolver.findSwaggerUiRootInternal(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((root == null) && ((org.apache.cxf.jaxrs.swagger.SwaggerUiResolver.HELPER.getClass()) != (org.apache.cxf.jaxrs.swagger.SwaggerUiResolver.class))) { root = new org.apache.cxf.jaxrs.swagger.SwaggerUiResolver().findSwaggerUiRootInternal(swaggerUiVersion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6447/buggy-version/rt.rs.description-swagger.src.main.java.org.apache.cxf.jaxrs.swagger.SwaggerUiResolver.java", "BodyUseAPI": [], "Fixed commit": "a48c2f07f5c657f764157132590a9e82509f0874", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2017-02-21T12:58:11Z"},
{"Line": "=>548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mode) == (org.intrace.client.gui.helper.InTraceUI.UIMode.ECLIPSE)) { sRoot.pack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4216/buggy-version/org.intrace.src.org.intrace.client.gui.helper.InTraceUI.java", "BodyUseAPI": [], "Fixed commit": "918d8ad829fbf6632053cfe7768a4369aa79fc53", "Url": "https://api.github.com/repos/mchr3k/org.intrace", "Date": "2011-07-09T09:45:23Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((batchedParameters.size()) == 0) { count += state.ps.executeUpdate(); }else { for (java.util.List<com.github.davidmoten.rx.jdbc.Parameter> parameters : batchedParameters) { try { com.github.davidmoten.rx.jdbc.Util.setParameters(state.ps, parameters, query.names()); com.github.davidmoten.rx.jdbc.QueryUpdateOnSubscribe.log.debug(\"executing sql={}, parameters {}\", query.sql(), parameters); count += state.ps.executeUpdate(); com.github.davidmoten.rx.jdbc.QueryUpdateOnSubscribe.log.debug(\"executed ps={}\", state.ps); } catch (java.sql.SQLException e) { throw new java.sql.SQLException((\"failed to execute sql=\" + (query.sql())), e); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2807/buggy-version/src.main.java.com.github.davidmoten.rx.jdbc.QueryUpdateOnSubscribe.java", "BodyUseAPI": [], "Fixed commit": "15cddf86d5f75708074c642906898c8855de9169", "Url": "https://api.github.com/repos/thomasnield/rxjava-jdbc", "Date": "2016-09-27T17:47:16Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node == (recomb.getNode2())) return recomb.getNode1().getParent();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8810/buggy-version/src.argbeast.RecombinationGraph.java", "BodyUseAPI": ["recomb.getNode1().getParent()", "argbeast.Recombination.getNode1()"], "Fixed commit": "a1ce825d428774b6bfe7562897da66da711189e6", "Url": "https://api.github.com/repos/CompEvol/ARGBEAST", "Date": "2014-04-16T04:40:52Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((item.getDescription()) == null) || (item.getDescription().trim().equals(\"\"))) item.setDescription(str);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1493/buggy-version/src.com.derek.cshome.util.MyContentHandler.java", "BodyUseAPI": ["com.derek.cshome.util.MyContentHandler.Item.setDescription(java.lang.String)"], "Fixed commit": "c6e7cbaf3790656386916de839e198c3ae4f5c57", "Url": "https://api.github.com/repos/1and1get2/cs335ass1", "Date": "2013-09-19T00:05:14Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clientId) != (-1)) { android.util.Log.d(Utils.TAG, \"PROCESS GAME RESUME WHEN RECONNECT\"); writer.println(\"game_resume\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2021/buggy-version/app.src.main.java.cnr.partlinkclient.GameCommunicator.java", "BodyUseAPI": [], "Fixed commit": "d3c2c73ee7ff690360822715aeda1edfe8610367", "Url": "https://api.github.com/repos/lightblue502/PartLinkClient", "Date": "2016-02-22T15:18:23Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSharedPreferences(java.lang.String,Context.MODE_PRIVATE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sharedPref.getBoolean(\"useGPS\", false)) { orderProjectListViaDistance(projects); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1838/buggy-version/app.src.main.java.dess15proj5.fau.cs.osr_amos.mobiletimerecording.businesslogic.ProjectManager.java", "BodyUseAPI": [], "Fixed commit": "34f6336c62ddf56f62a5dcdf9140a46f47b7db12", "Url": "https://api.github.com/repos/corchwll/amos-ss15-proj5_android", "Date": "2015-06-23T17:15:55Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["biz.jovido.seed.content.ItemService.getStructure(biz.jovido.seed.content.Item)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (structure.isPublishable()) { map.put(\"url\", itemService.getUrl(item)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5297/buggy-version/src.main.java.biz.jovido.seed.content.SimpleModelFactory.java", "BodyUseAPI": [], "Fixed commit": "e8ec0fe4c305a2c0cea8925f8970130a6e3f302c", "Url": "https://api.github.com/repos/jovido/jovido-webseed", "Date": "2017-11-24T13:57:14Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedDateForExport) == null) { android.widget.Toast.makeText(this, R.string.no_date_selected_msg, Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2697/buggy-version/app.src.main.java.in.tranquilsoft.powerkeeper.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "e168231b372d02d4bd0ba7ac88b5e29fdad42b96", "Url": "https://api.github.com/repos/gparmar/PowerKeeper", "Date": "2017-08-09T15:39:09Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((duplicatedEventsProccesor) != null) duplicatedEventsProccesor.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8187/buggy-version/src.main.java.ch.cern.db.flume.source.JDBCSource.java", "BodyUseAPI": [], "Fixed commit": "50131ddcfec11c66387fd616dd8da130db7bdb3c", "Url": "https://api.github.com/repos/cerndb/flume-ng-audit-db", "Date": "2016-03-07T10:42:01Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((duplicatedEventsProccesor) != null) duplicatedEventsProccesor.commit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8187/buggy-version/src.main.java.ch.cern.db.flume.source.JDBCSource.java", "BodyUseAPI": [], "Fixed commit": "50131ddcfec11c66387fd616dd8da130db7bdb3c", "Url": "https://api.github.com/repos/cerndb/flume-ng-audit-db", "Date": "2016-03-07T10:42:01Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((duplicatedEventsProccesor) != null) duplicatedEventsProccesor.rollback();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8187/buggy-version/src.main.java.ch.cern.db.flume.source.JDBCSource.java", "BodyUseAPI": [], "Fixed commit": "50131ddcfec11c66387fd616dd8da130db7bdb3c", "Url": "https://api.github.com/repos/cerndb/flume-ng-audit-db", "Date": "2016-03-07T10:42:01Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((med.getRxcui()) != null) { insertStatement.setLong(2, med.getRxcui()); }else { insertStatement.setNull(2, java.sql.Types.INTEGER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7147/buggy-version/server.src.main.java.info.doseamigos.meds.MySQLMedDao.java", "BodyUseAPI": ["java.sql.PreparedStatement.setLong(int,med.getRxcui())", "info.doseamigos.meds.Med.getRxcui()"], "Fixed commit": "ea03ab557a30985b5a27ed784e30c6c878816401", "Url": "https://api.github.com/repos/dose-amigos/dose-amigos", "Date": "2016-07-25T23:28:34Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFragmentManager().findFragmentById(R.id.youtube_fragment_container)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (youTubePlayerFragment == null) { youTubePlayerFragment = com.google.android.youtube.player.YouTubePlayerFragment.newInstance(); android.app.FragmentTransaction transaction = getFragmentManager().beginTransaction(); try { transaction.add(R.id.youtube_fragment_container, youTubePlayerFragment); } finally { transaction.commit(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1637/buggy-version/src.com.kvest.odessatoday.ui.fragment.BaseFilmDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "819d45f7bf1830372b67de0629d306b2a348f744", "Url": "https://api.github.com/repos/Kvest/odessa-today", "Date": "2015-01-10T13:42:27Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (oPlayer == null) oPlayer = org.bukkit.Bukkit.getServer().getOfflinePlayer(player);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7570/buggy-version/src.com.redstoner.modules.check.Check.java", "BodyUseAPI": [], "Fixed commit": "73f7f0da5065abac10f9682294442dbb295bb573", "Url": "https://api.github.com/repos/RedstonerServer/ModuleLoader", "Date": "2017-02-18T15:33:44Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((item == null) || ((item.getId()) < 1)) || ((item.getAmount()) < 1)) return java.util.Optional.empty();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4597/buggy-version/src.com.asteria.world.entity.combat.effect.CombatPoisonEffect.java", "BodyUseAPI": [], "Fixed commit": "aa28a41a597808ef6a5656ae9d54ef99eb5483c3", "Url": "https://api.github.com/repos/Lmctruck30/asteria-2.0", "Date": "2014-09-04T22:55:47Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((tp1.inf8405.match3.PlayActivity) (getContext())).getNbRemainingShots()) == 0) && ((((tp1.inf8405.match3.PlayActivity) (getContext())).getScore()) < (((tp1.inf8405.match3.PlayActivity) (getContext())).getObjective()))) { ((tp1.inf8405.match3.PlayActivity) (getContext())).gameOver(); }else if ((((tp1.inf8405.match3.PlayActivity) (getContext())).getScore()) >= (((tp1.inf8405.match3.PlayActivity) (getContext())).getObjective())) { ((tp1.inf8405.match3.PlayActivity) (getContext())).victory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2931/buggy-version/Match3.app.src.main.java.tp1.inf8405.match3.GridView.java", "BodyUseAPI": [], "Fixed commit": "9cc2de7bdda17cde5dc5a9b82b48deec77168212", "Url": "https://api.github.com/repos/BlancheP/INF8405", "Date": "2017-02-14T19:36:33Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((envVar[i].startsWith(\"PERL5LIB\")) && (organism.equals(\"Mm\"))) { envVar[i] = envVar[i].replaceAll(\"ensembl_ucsc\", \"ensembl_ucsc_old\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3895/buggy-version/src.edu.ucdenver.ccp.PhenoGen.tools.analysis.ExonDataTools.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "f887ac83a210e29ef53193fd6f36f8a18219c5c8", "Url": "https://api.github.com/repos/TabakoffLab/PhenoGen", "Date": "2013-09-05T20:47:32Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strict) { throw new org.apache.camel.language.simple.types.SimpleParserException((\"Unknown file language syntax: \" + remainder), token.getIndex()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4694/buggy-version/camel-core.src.main.java.org.apache.camel.language.simple.ast.SimpleFunctionExpression.java", "BodyUseAPI": [], "Fixed commit": "b5cfe4d7dcf2765b0bcd861b72e4811843fe8e7e", "Url": "https://api.github.com/repos/apache/camel", "Date": "2016-02-24T15:56:24Z"},
{"Line": "=>1009", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.view.MotionEventCompat.getActionMasked(android.view.MotionEvent)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((action == (android.view.MotionEvent.ACTION_UP)) && (mIsScrollableViewHandlingTouch)) { mDragHelper.setDragState(ViewDragHelper.STATE_IDLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4741/buggy-version/library.src.com.sothree.slidinguppanel.SlidingUpPanelLayout.java", "BodyUseAPI": [], "Fixed commit": "bc24980fd0972774b254b5d689cf72167606a6f5", "Url": "https://api.github.com/repos/TR4Android/AndroidSlidingUpPanel", "Date": "2015-07-23T21:09:56Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (from > 0) from = from + 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6528/buggy-version/webappframework.src.main.java.com.jedlab.framework.report.JasperReportManager.java", "BodyUseAPI": [], "Fixed commit": "770f1b04fb541cab6b729fc529aec124c4df63c3", "Url": "https://api.github.com/repos/jedlab/openpm", "Date": "2017-08-09T14:25:00Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((0 == dataLength) || ((dataLength % 2) != 0)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5418/buggy-version/ChessHeroCommon.src.com.kt.game.Game.java", "BodyUseAPI": [], "Fixed commit": "914978881720fd51b80205fc32695a8eea4b59d6", "Url": "https://api.github.com/repos/tmpit/chesshero", "Date": "2014-01-12T20:53:23Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((org.bukkit.entity.Skeleton) (event.getEntity())).getSkeletonType()) == (Skeleton.SkeletonType.NORMAL)) { EntityDeathHelper(event, 0, ((plugin.configFile.getDouble(\"skeletondroprate\")) * lootingrate)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8396/buggy-version/src.org.shininet.bukkit.playerheads.PlayerHeadsListener.java", "BodyUseAPI": ["org.shininet.bukkit.playerheads.PlayerHeadsListener.EntityDeathHelper(org.bukkit.event.entity.EntityDeathEvent,int,((plugin.configFile.getDouble(\"skeletondroprate\")) * lootingrate))"], "Fixed commit": "791bb3e03690cde1b2b8dee2d7cc4c391177ca7e", "Url": "https://api.github.com/repos/zand/PlayerHeads", "Date": "2012-11-19T05:15:20Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serverSocket) == null) { android.util.Log.d(TAG, \"Server socket is null - something went wrong with Bluetooth stack initialization?\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7478/buggy-version/src.com.simonguest.BTPhotoTransfer.ServerThread.java", "BodyUseAPI": [], "Fixed commit": "33932178a00a8d21c6eb56f604588ec5326dd377", "Url": "https://api.github.com/repos/simonguest/btphototransfer-sample", "Date": "2013-04-14T18:22:37Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"\".compareTo(ris)) == 0) { ris = \"[]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8701/buggy-version/src.data_structures.implementation.FineGrainedList.java", "BodyUseAPI": [], "Fixed commit": "d0cfd9b23845a7b4d0820870977862f4e9333af6", "Url": "https://api.github.com/repos/N3d/ConcAndMulti", "Date": "2012-10-01T16:24:15Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (i > 0) url = url.substring((i + (\"//\".length())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2336/buggy-version/wiki-finder-project.wedt.src.main.java.wedt.keywords.Keywords.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "c32729afca58cc74313e72d4249bba20b844ce8b", "Url": "https://api.github.com/repos/lzn/WikiFinder", "Date": "2015-01-20T21:33:00Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getCommandAliases()) != null) && (!(getCommandAliases().isEmpty()))) { for (java.lang.String alias : getCommandAliases()) if ((alias != null) && (commandMap.containsKey(alias))) OutputHandler.felog.error(java.lang.String.format(\"Command alias %s of command %s registered twice\", alias, getCommandName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2485/buggy-version/src.main.java.com.forgeessentials.core.commands.ForgeEssentialsCommandBase.java", "BodyUseAPI": [], "Fixed commit": "64916bd1d9b59d451ec96a4c074c6455ddd90ceb", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentials", "Date": "2015-07-02T08:51:30Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(simulatedVehicles.get(simulationID).isAvailable())) simulatedVehicles.get(simulationID).ResetStartPoint();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5051/buggy-version/SmartRacecar.src.main.java.be.uantwerpen.fti.ds.sc.smartracecar.simdeployer.SimDeployer.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Long, be.uantwerpen.fti.ds.sc.smartracecar.simdeployer.SimulatedVehicle>.get(long)", "simulatedVehicles.get(simulationID).ResetStartPoint()"], "Fixed commit": "5393a442acc4bd62357f4a190a645ea52c2145e4", "Url": "https://api.github.com/repos/SmartCity-UAntwerpen/SmartRaceCar", "Date": "2017-06-06T15:29:11Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCastlable()) { org._7hills.liueri19.game.Piece p; for (int file = 1; file < 9; file += 7) { p = getBoard().getPieceAt(file, getRank()); if ((p instanceof org._7hills.liueri19.game.Rook) && (((org._7hills.liueri19.game.Rook) (p)).isCastlable())) addLegalMove(new org._7hills.liueri19.game.Castling(this, ((org._7hills.liueri19.game.Rook) (p)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7344/buggy-version/src.org._7hills.liueri19.game.King.java", "BodyUseAPI": [], "Fixed commit": "9900dc9767a664b5975c94ae9f352333a6020ffd", "Url": "https://api.github.com/repos/liueri19/ChessBoard", "Date": "2017-04-20T17:10:38Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count > 0) { count += uk.ac.horizon.busabascan.MenuListAdapter.DYNAMIC_CHILDREN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2280/buggy-version/android.Busabascan.src.uk.ac.horizon.busabascan.MenuListAdapter.java", "BodyUseAPI": [], "Fixed commit": "22f70097e1f81eabce5cd7a7c245babaae78fe43", "Url": "https://api.github.com/repos/horizon-institute/tableware", "Date": "2012-08-13T11:03:08Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foodpresent[dir]) growthCnt[i] = (growthCnt[i]) + 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4125/buggy-version/src.organisms.g05.AttemptSurvivorYang2.java", "BodyUseAPI": [], "Fixed commit": "26466c36ac1b6b2dd860910272534215cb211222", "Url": "https://api.github.com/repos/phecdarain/organisms", "Date": "2013-09-10T19:01:59Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (conf.isComplex()) { int type = conf.getType(field); if (type != (org.exist.xquery.value.Type.ITEM)) { return type; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/9016/buggy-version/extensions.indexes.range.src.org.exist.indexing.range.RangeIndexConfig.java", "BodyUseAPI": ["org.exist.indexing.range.RangeIndexConfigElement.getType(java.lang.String)"], "Fixed commit": "28bb546ead00a9f3674c648de440766bed67278d", "Url": "https://api.github.com/repos/claudius108/exist", "Date": "2014-08-28T18:50:35Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((waMan.getWorksheetAnalysisAt(j).getQcId()) != null) waMan.getWorksheetQcResultAt(j);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7189/buggy-version/ejb.src.org.openelis.manager.WorksheetManagerProxy.java", "BodyUseAPI": ["org.openelis.manager.WorksheetAnalysisManager.getWorksheetQcResultAt(int)"], "Fixed commit": "7d49d1ae6065c8986fca7b2902de86a7707f376b", "Url": "https://api.github.com/repos/mbielicke/OpenELIS-Iowa", "Date": "2012-09-21T15:57:13Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((waMan.getWorksheetAnalysisAt(j).getAnalysisId()) != null) { waMan.getBundleAt(j); waMan.getWorksheetResultAt(j); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7189/buggy-version/ejb.src.org.openelis.manager.WorksheetManagerProxy.java", "BodyUseAPI": ["org.openelis.manager.WorksheetAnalysisManager.getWorksheetResultAt(int)", "org.openelis.manager.WorksheetAnalysisManager.getBundleAt(int)"], "Fixed commit": "7d49d1ae6065c8986fca7b2902de86a7707f376b", "Url": "https://api.github.com/repos/mbielicke/OpenELIS-Iowa", "Date": "2012-09-21T15:57:13Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (delta != 0) { rate = (_messageCount) / delta; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1499/buggy-version/transitime.src.main.java.org.transitime.custom.aws.AvlSqsClientModule.java", "BodyUseAPI": [], "Fixed commit": "ce110f82e84e4cd85bed9a07b18e472efc54762e", "Url": "https://api.github.com/repos/sheldonabrown/core", "Date": "2015-09-30T19:04:07Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chassi.getNameShort().equals(\"KTO-19\")) { getUpgrades().setFerroFibrous(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8800/buggy-version/src.lisong_mechlab.model.loadout.Loadout.java", "BodyUseAPI": [], "Fixed commit": "9c4068656fd2e27ceb94eb3a28b8fbc1495a8a15", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2013-09-11T19:07:18Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (closeParameter != null) { account.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4315/buggy-version/src.java.servlet.AccountServlet.java", "BodyUseAPI": [], "Fixed commit": "6b81b7c2e3f81c8fac6719e48b269904240e00b8", "Url": "https://api.github.com/repos/taylorkl/Assignment4", "Date": "2017-02-15T14:13:43Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messages) != null) { messages.saveMessages(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4444/buggy-version/src.com.wasteofplastic.askyblock.ASkyBlock.java", "BodyUseAPI": [], "Fixed commit": "927e553c07c55efbc7883f964b9eaafef99ead0a", "Url": "https://api.github.com/repos/tastybento/askyblock", "Date": "2015-05-02T05:02:47Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (httpLocation.startsWith(\"/\")) { httpLocation = httpLocation.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1195/buggy-version/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "d56f5c03255ac0e8523bfd4171cf0ef4a66f0d5b", "Url": "https://api.github.com/repos/wso2/carbon-data", "Date": "2014-04-23T09:37:47Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ic2.api.recipe.Recipes.compressor.getOutputFor(item, true)) == null) { ic2.api.recipe.Recipes.compressor.addRecipe(item, new net.minecraft.item.ItemStack(net.minecraft.item.Item.coal, 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2343/buggy-version/utilityrecipes_common.de.keridos.utilityrecipes.data.Recipes.java", "BodyUseAPI": ["ic2.api.recipe.Recipes.compressor.addRecipe(net.minecraft.item.ItemStack,net.minecraft.item.ItemStack)"], "Fixed commit": "289f598421cad6fafdbe3e7764d3f863a72c7c39", "Url": "https://api.github.com/repos/Keridos/UtilityRecipes", "Date": "2013-06-21T08:09:35Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (role.equals(Role.SUPERADMIN)) { if (!(actor.hasSuperAdminRole())) { org.linagora.linshare.core.facade.webservice.admin.impl.AdminGenericFacadeImpl.logger.error((\"Current actor is trying to access to a forbbiden api : \" + (actor.getAccountReprentation()))); throw new org.linagora.linshare.core.exception.BusinessException(org.linagora.linshare.core.exception.BusinessErrorCode.WEBSERVICE_FORBIDDEN, \"You are not authorized to use this service\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2935/buggy-version/src.main.java.org.linagora.linshare.core.facade.webservice.admin.impl.AdminGenericFacadeImpl.java", "BodyUseAPI": [], "Fixed commit": "6abbf4f88c23439fbb7ad40cd455cae6b6a85351", "Url": "https://api.github.com/repos/linagora/linshare-core", "Date": "2015-01-26T14:25:42Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.data.Form.form(model.GeotagUnico.class).bindFromRequest().get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(g.incapacidad.contains(\";\"))) return badRequest();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/728/buggy-version/app.controllers.Application.java", "BodyUseAPI": [], "Fixed commit": "c1c15a6e0d97c71f5bae6412bf87ccab571c942d", "Url": "https://api.github.com/repos/valchulen/play-dal", "Date": "2014-10-25T19:08:59Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (handler)) updateImage(current);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3257/buggy-version/src.main.java.au.com.tyo.common.ui.ImageViewAutoRefreshed.java", "BodyUseAPI": [], "Fixed commit": "ec7191beca8755170de21f9bed80dcf07eb3ebba", "Url": "https://api.github.com/repos/tyolab/CommonUiLib", "Date": "2017-04-19T06:59:05Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (strat.isChoiceDefined(s)) { return mdp.getSuccessors(s, strat.getChoiceIndex(s)); }else { return explicit.SuccessorsIterator.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4025/buggy-version/prism.src.explicit.DTMCFromMDPAndMDStrategy.java", "BodyUseAPI": ["explicit.MDP.getSuccessors(int,strat.getChoiceIndex(s))", "strat.MDStrategy.getChoiceIndex(int)"], "Fixed commit": "748c097907c2e801c59e3d28d19b64412a9519c6", "Url": "https://api.github.com/repos/muhrik/prism-gsmp", "Date": "2017-12-27T01:12:39Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j == (chunks - 1)) { int l = 0; while (((j * k) + l) < centroidSize) { chunkGroup.add(new java.util.ArrayList<Datapoint>()); l++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3255/buggy-version/KMeansMPI.src.Master.java", "BodyUseAPI": [], "Fixed commit": "edc476a018636347a58d95c34b007c9e24e86a1f", "Url": "https://api.github.com/repos/EnamiBatte/15-440", "Date": "2014-12-05T22:53:59Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i / k) == k) { allChunks.get((chunks - 1)).get(((i % k) + k)).add(input.get(j)); }else { allChunks.get((i / k)).get((i % k)).add(input.get(j)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3255/buggy-version/KMeansMPI.src.Master.java", "BodyUseAPI": ["allChunks.get((i / k)).get((i % k)).add(input.get(j))", "allChunks.get((i / k)).get(int)", "allChunks.get((chunks - 1)).get(int)", "allChunks.get((chunks - 1)).get(((i % k) + k)).add(input.get(j))", "java.util.List<java.util.List<java.util.List<Datapoint>>>.get(int)"], "Fixed commit": "edc476a018636347a58d95c34b007c9e24e86a1f", "Url": "https://api.github.com/repos/EnamiBatte/15-440", "Date": "2014-12-05T22:53:59Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (base <= 0) { return org.giiwa.core.bean.X.EMPTY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/482/buggy-version/src.main.java.org.giiwa.framework.web.Language.java", "BodyUseAPI": [], "Fixed commit": "516d242ef62d5f618326064bb1e34ec8dcad53ba", "Url": "https://api.github.com/repos/giiwa/giiwa", "Date": "2016-12-13T23:53:18Z"},
{"Line": "=>943", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((destLayout.getChildCount()) == 1) { org.routy.view.DestinationRowView destView = ((org.routy.view.DestinationRowView) (destLayout.getChildAt(0))); if (\"\".equals(destView.getAddressString())) { destLayout.removeView(destView); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6243/buggy-version/Routy.src.org.routy.OriginActivity.java", "BodyUseAPI": ["android.widget.LinearLayout.removeView(org.routy.view.DestinationRowView)", "android.widget.LinearLayout.getChildAt(int)"], "Fixed commit": "45e93727ee5fc1d9ac5763f43ce347cd4f097628", "Url": "https://api.github.com/repos/ryanprater/Routy", "Date": "2013-04-26T21:14:45Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((displayName) != null) { if (bukkitVersion >= 15) { for (org.bukkit.entity.Entity ent : dropResult.getDropped()) { if (ent instanceof org.bukkit.entity.LivingEntity) { org.bukkit.entity.LivingEntity lEnt = ((org.bukkit.entity.LivingEntity) (ent)); lEnt.setCustomName(org.bukkit.ChatColor.translateAlternateColorCodes('&', displayName)); } } }else { com.gmail.zariust.otherdrops.Log.logWarning(\"Warning: can only set custom mob names in Bukkit 1.5 and above.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3718/buggy-version/src.com.gmail.zariust.otherdrops.drop.CreatureDrop.java", "BodyUseAPI": [], "Fixed commit": "98efa6b74a08cd6d7a3a7255c967be83cdb54e0a", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2013-04-01T11:00:55Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRecyclerView.getAdapter()) instanceof com.onval.popular_movies.CursorRecyclerAdapter) { favoritesAdapter.updateCursor(); favoritesAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/73/buggy-version/app.src.main.java.com.onval.popular_movies.GridFragment.java", "BodyUseAPI": [], "Fixed commit": "1f010c4d41bdcf6d0134b21fa92170f2bbbbc816", "Url": "https://api.github.com/repos/onVal/Udacity-Popular_Movies", "Date": "2017-08-14T15:06:36Z"},
{"Line": "=>769", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((filename.startsWith(\"http://\")) || (filename.startsWith(\"file://\"))) || (filename.startsWith(\"https://\"))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8134/buggy-version/src.org.teachothers.fishwatchr.SoundPlayer.java", "BodyUseAPI": [], "Fixed commit": "51b2ca9c3ae70a09d666d13072b1351a09e34db8", "Url": "https://api.github.com/repos/himawari-san/FishWatchr", "Date": "2016-01-29T08:40:56Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedItemIndex) < 0) selectedItemIndex = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1436/buggy-version/src.controllers.InventoryViewController.java", "BodyUseAPI": [], "Fixed commit": "62874a375f47345b6a90c8bf508a6ac1f0076c7c", "Url": "https://api.github.com/repos/kanye2021/OOP-Game-S16-Iteration2", "Date": "2016-03-05T00:17:29Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedItemIndex) < 0) selectedItemIndex = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1436/buggy-version/src.controllers.InventoryViewController.java", "BodyUseAPI": [], "Fixed commit": "62874a375f47345b6a90c8bf508a6ac1f0076c7c", "Url": "https://api.github.com/repos/kanye2021/OOP-Game-S16-Iteration2", "Date": "2016-03-05T00:17:29Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.picto.dao.OperationRecordDao.queryOrCtRelByOrId(or.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (orct == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2902/buggy-version/PictoLottery.src.main.java.com.picto.service.impl.StartLotteryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "23b6327f5b1136d9db148aeae2d4b69f35b2e7cf", "Url": "https://api.github.com/repos/meiosischen/picto_lottery", "Date": "2016-08-31T14:50:53Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tempString.equals(\"https://www.google.de/#q=\")) { return new java.net.URI(\"https://www.google.de/\"); }else { return new java.net.URI(tempString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6437/buggy-version/com.andreasgrassl.src.parser.StringToURIParser.java", "BodyUseAPI": [], "Fixed commit": "581acc2f89fd1c10c0d8d6952a0dc74d78ddb105", "Url": "https://api.github.com/repos/Valadur/DesktopTools", "Date": "2014-06-07T12:23:08Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((providerParameters.getTokenRequirements().getActAs()) != null) { receivedToken = providerParameters.getTokenRequirements().getActAs(); if (receivedToken.getState().equals(STATE.VALID)) { principal = receivedToken.getPrincipal(); } }else if ((providerParameters.getTokenRequirements().getValidateTarget()) != null) { receivedToken = providerParameters.getTokenRequirements().getValidateTarget(); if (receivedToken.getState().equals(STATE.VALID)) { principal = receivedToken.getPrincipal(); } }else { principal = providerParameters.getPrincipal(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7384/buggy-version/services.sts.sts-core.src.main.java.org.apache.cxf.sts.token.provider.DefaultSubjectProvider.java", "BodyUseAPI": ["org.apache.cxf.sts.token.provider.TokenProviderParameters.getTokenRequirements()", "providerParameters.getTokenRequirements().getActAs()", "providerParameters.getTokenRequirements().getValidateTarget()", "org.apache.cxf.sts.token.provider.TokenProviderParameters.getPrincipal()", "org.apache.cxf.sts.token.provider.TokenProviderParameters.getTokenRequirements()", "providerParameters.getTokenRequirements().getValidateTarget()", "org.apache.cxf.sts.token.provider.TokenProviderParameters.getTokenRequirements()"], "Fixed commit": "5a40d6ecee44062c258c93dd6e6c1e6d80ba816d", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2014-09-18T11:07:44Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bergerkiller.bukkit.common.utils.EntityUtil.getPortalCooldownMaximum(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (maxCoolDown <= 2) { maxCoolDown = 300; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8752/buggy-version/src.main.java.com.bergerkiller.bukkit.mw.TeleportationTracker.java", "BodyUseAPI": [], "Fixed commit": "4cbaecf911b202ebccff3440ed13db8c4435b6e1", "Url": "https://api.github.com/repos/bergerhealer/MyWorlds", "Date": "2017-06-30T14:29:52Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.isBlockEnd()) && (\")\".equals(node.calculateNext().getText()))) { return result.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/539/buggy-version/src.main.java.x.java.snippets.MethodBody.java", "BodyUseAPI": [], "Fixed commit": "afdbe84e46a7d3477843b5ad0a5c43844758c628", "Url": "https://api.github.com/repos/klaus31/x-formatter", "Date": "2017-01-03T07:58:08Z"},
{"Line": "=>723", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Printer.Type.ID_CARD.equals(printer.getType())) { org.apache.commons.io.IOUtils.write(data.toString().getBytes(\"Windows-1252\"), socket.getOutputStream()); }else { org.apache.commons.io.IOUtils.write(data.toString(), socket.getOutputStream(), \"UTF-8\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3242/buggy-version/api.src.main.java.org.openmrs.module.patientregistration.service.PatientRegistrationServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "0575e1dff42d335d3cd15ac8e6d417cd93ec987c", "Url": "https://api.github.com/repos/PIH/openmrs-module-patientregistration", "Date": "2012-12-04T18:30:14Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (backwardEdges.containsKey(tableName)) { return backwardEdges.get(tableName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1384/buggy-version/src.main.java.simsql.compiler.timetable.TableDependencyGraph.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.HashSet<java.lang.String>>.get(java.lang.String)"], "Fixed commit": "d3fed06a2a46d442dde57e779d4e77a3d67a8651", "Url": "https://api.github.com/repos/dimitrijejankov/simsql", "Date": "2016-09-17T10:04:50Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edge.matches(\"^[^_]+((\\\\[[0-9]+to[0-9]])+|(\\\\[[0-9]+to])|(\\\\[[0-9]+]))+$\")) { simsql.compiler.MultidimensionalSchemaIndices indices = new simsql.compiler.MultidimensionalSchemaIndices(simsql.compiler.MultidimensionalTableSchema.getQualifiedTableNameFromBracketsTableName(edge)); if (indices.areIndicesForThisTable(node.indexStrings)) { return backwardEdges.get(edge); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1384/buggy-version/src.main.java.simsql.compiler.timetable.TableDependencyGraph.java", "BodyUseAPI": ["simsql.compiler.MultidimensionalTableSchema.getQualifiedTableNameFromBracketsTableName(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.HashSet<java.lang.String>>.get(java.lang.String)"], "Fixed commit": "d3fed06a2a46d442dde57e779d4e77a3d67a8651", "Url": "https://api.github.com/repos/dimitrijejankov/simsql", "Date": "2016-09-17T10:04:50Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["api.items.getItemByID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (item.getString(\"status\").equals(\"listed\")) { output.put(\"status\", \"error\"); output.put(\"error\", \"ITEM HAS NOT BEEN BOUGHT\"); }else if (item.getString(\"status\").equals(\"pending\")) { org.bson.Document updates = new org.bson.Document(); updates.put(\"status\", \"sold\"); api.itemsCollection.updateOne(new org.bson.Document(\"itemID\", itemID), new org.bson.Document(\"$set\", updates)); api.usersCollection.updateOne(new org.bson.Document(\"userID\", buyerID), new org.bson.Document(\"$inc\", new org.bson.Document(\"numPendingPurchases\", (-1)))); java.lang.String itemName = item.getString(\"name\"); java.lang.String sellerID = item.getString(\"sellerID\"); try { Email.send((buyerID + \"@exeter.edu\"), \"Successful purchase\", ((\"Successful purchase of \" + itemName) + \".\")); Email.send((sellerID + \"@exeter.edu\"), \"Successful sale\", ((\"Successful sale of \" + itemName) + \".\")); } catch (java.lang.Exception e) { e.printStackTrace(); } org.bson.Document userDocument = api.usersCollection.find(new org.bson.Document(\"userID\", buyerID)).first(); int numPendingPurchases = java.lang.Integer.parseInt(userDocument.get(\"numPendingPurchases\").toString()); output.put(\"status\", \"sold\"); output.put(\"numPendingPurchases\", (numPendingPurchases + \"\")); }else { output.put(\"status\", \"error\"); output.put(\"error\", \"STATUS ILLEGAL\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4391/buggy-version/src.main.java.Sales.java", "BodyUseAPI": ["org.bson.Document.getString(java.lang.String)", "item.getString(\"status\").equals(java.lang.String)", "org.bson.Document.getString(java.lang.String)", "org.bson.Document.getString(java.lang.String)"], "Fixed commit": "12e76e4af10784061bbefaff57c8a11f0731be73", "Url": "https://api.github.com/repos/PEACSC590/server", "Date": "2016-11-16T05:29:40Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["api.usersCollection.find(new org.bson.Document(\"userID\", userID)).first()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (user.isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4391/buggy-version/src.main.java.UserTokenController.java", "BodyUseAPI": [], "Fixed commit": "12e76e4af10784061bbefaff57c8a11f0731be73", "Url": "https://api.github.com/repos/PEACSC590/server", "Date": "2016-11-16T05:29:40Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldUseIphoneSimulatorSDK) { buildParameters.add((((((\"CONFIGURATION_BUILD_DIR=\" + (targetDirectory.getAbsolutePath())) + \"/\") + (properties.get(Utils.PLUGIN_PROPERTIES.CONFIGURATION.toString()))) + \"-\") + (Utils.SDK_IPHONE_SIMULATOR))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/375/buggy-version/src.main.java.de.letsdev.maven.plugins.ios.ProjectBuilder.java", "BodyUseAPI": [], "Fixed commit": "134847cba594301e2430415ef2cb93c6d37649e7", "Url": "https://api.github.com/repos/letsdev/maven-ios-plugin", "Date": "2016-02-23T22:19:16Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<Command>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((Compiler.mainROM.size()) > startsize) { Compiler.prevCall = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1475/buggy-version/src.Compiler.java", "BodyUseAPI": [], "Fixed commit": "8abbcee8b5113860f5f6218d05fb7cb58e7d5722", "Url": "https://api.github.com/repos/PhiNotPi/Cogol", "Date": "2016-06-17T18:46:28Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (group3.beef.mail.model.GenerateLinkUtils.generateCheckcode(empVO).equals(checkCode)) { return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3031/buggy-version/AmyClinic.src.main.java.group3.beef.mail.model.GenerateLinkUtils.java", "BodyUseAPI": [], "Fixed commit": "5e5682f338d574c4493d46e426aec93d0a8fe3d2", "Url": "https://api.github.com/repos/EEIT85team03/AmyClinic", "Date": "2016-05-25T12:04:24Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(java.nio.file.Files.exists(currentPath))) { java.nio.file.Files.createDirectory(currentPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/646/buggy-version/wprlib.src.org.crimcat.lib.wpr.DatabaseConfig.java", "BodyUseAPI": [], "Fixed commit": "e27862e562381e445206761e322b5a0caa145e0e", "Url": "https://api.github.com/repos/crimcat/weekly-plans-and-reports", "Date": "2014-09-23T11:32:43Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.getState()) == (AbstractTree.TreeState.LIVING)) { amount += t.harvest(); treesToGo--; if (treesToGo <= 0) { break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5393/buggy-version/oop-ue.src.main.java.Forest.java", "BodyUseAPI": ["AbstractTree.harvest()"], "Fixed commit": "a7b770f60981c9fe2e87a0ccadf9ef6598152182", "Url": "https://api.github.com/repos/huberc/OOPWS2015", "Date": "2015-10-27T18:10:19Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.data4all.handler.DataBaseHandler.getAllUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((users != null) && (!(users.isEmpty()))) { final io.github.data4all.model.data.User user = users.get(0); this.uploadElems(receiver, user); stopNext = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3166/buggy-version/src.main.java.io.github.data4all.service.UploadService.java", "BodyUseAPI": ["java.util.List<io.github.data4all.model.data.User>.get(int)"], "Fixed commit": "8b04798e8e8a1e443d2918ce42c3751aa27937ae", "Url": "https://api.github.com/repos/Data4All/Data4All", "Date": "2015-03-26T18:28:05Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x < 0) { x = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3166/buggy-version/src.main.java.io.github.data4all.activity.ShowPictureActivity.java", "BodyUseAPI": [], "Fixed commit": "8b04798e8e8a1e443d2918ce42c3751aa27937ae", "Url": "https://api.github.com/repos/Data4All/Data4All", "Date": "2015-03-26T18:28:05Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y < 0) { y = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3166/buggy-version/src.main.java.io.github.data4all.activity.ShowPictureActivity.java", "BodyUseAPI": [], "Fixed commit": "8b04798e8e8a1e443d2918ce42c3751aa27937ae", "Url": "https://api.github.com/repos/Data4All/Data4All", "Date": "2015-03-26T18:28:05Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInWorkspace(org.eclipse.gemoc.moccml.mapping.moccml_mapping.MoCCMLmappingPackage.class))) { resourceSet.getPackageRegistry().put(org.eclipse.gemoc.moccml.mapping.moccml_mapping.org.eclipse.gemoc.moccml.mapping.moccml_mapping.MoCCMLmappingPackage.getNsURI(), org.eclipse.gemoc.moccml.mapping.moccml_mapping.org.eclipse.gemoc.moccml.mapping.moccml_mapping.MoCCMLmappingPackage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/262/buggy-version/moccml.mapping.transformations.org.eclipse.gemoc.moccml.mapping.ecltoqvto.src.org.eclipse.gemoc.moccml.mapping.ecltoqvto.main.Generate.java", "BodyUseAPI": [], "Fixed commit": "7236c2ec390507171bc28923cc7acc9eec0430d4", "Url": "https://api.github.com/repos/gemoc/concurrency", "Date": "2017-09-26T15:51:40Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (m.matches()) { ret.append((((m.group(1)) + \" \") + (m.group(2)))); ret.append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2651/buggy-version/src.csy.block.NativeBlockSystem.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "943013c07d9fc3d4e70ba67c61f1d8c3f363736e", "Url": "https://api.github.com/repos/ccldev/v2-compile-sytems", "Date": "2016-12-05T14:41:23Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numOfThrows) > 0) { controller.setNumOfThrows(numOfThrows); throwDownArea.setText((\"waiting on player input...\\nChoose ROCK, PAPER,\" + \" or SCISSORS on the left...\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1507/buggy-version/RockPaperScissor.src.rockpaperscissor.GameUI.java", "BodyUseAPI": [], "Fixed commit": "49ab7f045b295b3e5c32059128b4ece85b26dd7d", "Url": "https://api.github.com/repos/soullessknight/AddCode", "Date": "2012-04-21T03:44:16Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numOfThrows) <= 0) { throwDownArea.setText(menu.numThrowsErrorText()); enableUIs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1507/buggy-version/RockPaperScissor.src.rockpaperscissor.GameUI.java", "BodyUseAPI": [], "Fixed commit": "49ab7f045b295b3e5c32059128b4ece85b26dd7d", "Url": "https://api.github.com/repos/soullessknight/AddCode", "Date": "2012-04-21T03:44:16Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((authorLink.length) != 1) { try { authorLink = thread.evaluateXPath(\"//p\"); } catch (es.hackxcrack.andHxC.XPatherException xpe) { android.util.Log.e(\"andHxC\", xpe.toString()); continue; } if ((authorLink.length) != 1) { android.util.Log.e(\"andHxC\", \"Parse error looking for topic author\"); continue; } es.hackxcrack.andHxC.TagNode authorTag = ((es.hackxcrack.andHxC.TagNode) (authorLink[0])); author = authorTag.getText().toString(); java.lang.String[] authorSlices = author.split(\"\\n\"); author = authorSlices[0].substring(13); }else { es.hackxcrack.andHxC.TagNode authorTag = ((es.hackxcrack.andHxC.TagNode) (authorLink[0])); author = authorTag.getText().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6729/buggy-version/src.es.hackxcrack.andHxC.ForumManager.java", "BodyUseAPI": [], "Fixed commit": "90f9c963261e1741de630782c3f4602b50d54c16", "Url": "https://api.github.com/repos/kenkeiras/andHxC", "Date": "2013-02-19T03:43:48Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (settings.getSpNameIDFormat().equals(Constants.NAMEID_UNSPECIFIED)) spNameQualifier = settings.getSpEntityId();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/9248/buggy-version/core.src.main.java.com.onelogin.saml2.logout.LogoutRequest.java", "BodyUseAPI": ["com.onelogin.saml2.settings.Saml2Settings.getSpEntityId()"], "Fixed commit": "45df75ac9e1ceb3745bfd056831ccf1415d7cefa", "Url": "https://api.github.com/repos/albertogeniola/java-saml", "Date": "2017-11-02T14:18:39Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (width <= 0) { curr_height = height = com.edsand.Eview.DEFAULT_IMAGEN_ACTUAL_HEIGHT_BIG; curr_width = width = com.edsand.Eview.DEFAULT_IMAGEN_ACTUAL_WIDTH_BIG; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1468/buggy-version/com.edsand.Eview.java", "BodyUseAPI": [], "Fixed commit": "d3d20724307b921d36623ecd267494d1aa77dd24", "Url": "https://api.github.com/repos/ed-sand/Eview", "Date": "2017-10-26T17:28:15Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!dirty) { logger.debug(\"failed shard {} not found in routingNodes, ignoring it\", failedShard); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5496/buggy-version/src.main.java.org.elasticsearch.cluster.routing.allocation.AllocationService.java", "BodyUseAPI": [], "Fixed commit": "099b9c6b06fd94d6ee2c183a6110b1b84d59e258", "Url": "https://api.github.com/repos/martijnvg/elasticsearch", "Date": "2014-04-16T12:45:54Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clientSocket == (this.clientSocket)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4399/buggy-version/src.main.java.com.db.edu.chat.server.ClientConnectionHandler.java", "BodyUseAPI": [], "Fixed commit": "cc3dc4908ca15dc3badd1cd1bacef8cbc0c4468c", "Url": "https://api.github.com/repos/eugene-krivosheyev/java4qa-advanced", "Date": "2015-06-01T09:20:00Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tok.fImage.equals(\":\")) { tok = next_s(); tok = next_s(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7103/buggy-version/sveditor.plugins.net.sf.sveditor.core.src.net.sf.sveditor.core.indent.SVDefaultIndenter2.java", "BodyUseAPI": [], "Fixed commit": "84484764b0a21468415cf39b81e7d7a777828f4b", "Url": "https://api.github.com/repos/mballance-sf/sveditor", "Date": "2012-11-20T17:09:33Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (waitingForResult) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3727/buggy-version/Ports.Android.src.com.codename1.impl.android.CodenameOneActivity.java", "BodyUseAPI": [], "Fixed commit": "a7d166ad91e083fa1aae0800da7dc54e8df0c2dc", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-08-19T22:38:01Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (responseCode == 400) { java.lang.System.out.println((\"HTTP Error: \" + (connection.getResponseMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6490/buggy-version/JournalImprover.src.lib.util.HTTPRequester.java", "BodyUseAPI": [], "Fixed commit": "4b997109b058bae75d1d5601e594d3d2396f732b", "Url": "https://api.github.com/repos/bartvbl/journalimprover", "Date": "2016-04-04T10:59:59Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode != (RESULT_OK)) { photoFileName = null; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5322/buggy-version/app.src.uk.co.jarofgreen.cityoutdoors.UI.BaseNewFeatureContentOrReportActivity.java", "BodyUseAPI": [], "Fixed commit": "81c9980a8e4196bcdb103de85e53892f8bc1a57c", "Url": "https://api.github.com/repos/City-Outdoors/City-Outdoors-Android", "Date": "2013-03-21T00:33:24Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exoplatform.crowdin.model.CrowdinFileFactory.matchTranslation(_master.getFile().getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (matcher.matches()) { masterName = getFactory().matchTranslation(_master.getFile().getName()).group(1); }else { masterName = _master.getFile().getName().substring(0, _master.getFile().getName().lastIndexOf('.')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8828/buggy-version/crowdin-maven-plugin.src.main.java.org.exoplatform.crowdin.mojo.AbstractCrowdinMojo.java", "BodyUseAPI": [], "Fixed commit": "abc7dab3b297faf0c227202593f800db91605237", "Url": "https://api.github.com/repos/exoplatform/crowdin-maven-plugin", "Date": "2012-05-28T08:59:17Z"},
{"Line": "=>845", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (query instanceof clojure.lang.IPersistentList) { return dendrite.java.Schema.applyQueryList(context, schema, ((clojure.lang.IPersistentList) (query)), parents); }else if (query instanceof clojure.lang.Symbol) { return dendrite.java.Schema.applyQueryUntaggedSymbol(context, schema, ((clojure.lang.Symbol) (query)), parents); }else if (query instanceof dendrite.java.Col) { return dendrite.java.Schema.applyQueryUntaggedSymbol(context, schema, ((dendrite.java.Col) (query)).type, parents); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4425/buggy-version/dendrite.java-src.dendrite.java.Schema.java", "BodyUseAPI": [], "Fixed commit": "11eaff96c7a1e04689ee0b13ff1a7971168f1be7", "Url": "https://api.github.com/repos/jwhitbeck/dendrite", "Date": "2015-06-24T18:28:17Z"},
{"Line": "=>830", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (query instanceof clojure.lang.Symbol) { return dendrite.java.Schema.applyQueryTaggedSymbol(context, schema, ((clojure.lang.Symbol) (query)), parents); }else if (query instanceof dendrite.java.Col) { return dendrite.java.Schema.applyQueryTaggedSymbol(context, schema, ((dendrite.java.Col) (query)).type, parents); }else { return dendrite.java.Schema.applyQueryTagged(context, schema, query, parents); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4425/buggy-version/dendrite.java-src.dendrite.java.Schema.java", "BodyUseAPI": ["dendrite.java.Schema.applyQueryTagged(dendrite.java.Schema.QueryContext,dendrite.java.Schema,java.lang.Object,clojure.lang.PersistentVector)"], "Fixed commit": "11eaff96c7a1e04689ee0b13ff1a7971168f1be7", "Url": "https://api.github.com/repos/jwhitbeck/dendrite", "Date": "2015-06-24T18:28:17Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Tree.AttributeDeclaration.getDeclarationModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((declarationModel.isShared()) || (declarationModel.isCaptured())) { result.add(com.redhat.ceylon.compiler.loader.model.AnnotationTarget.METHOD); if (!((that.getSpecifierOrInitializerExpression()) instanceof com.redhat.ceylon.compiler.typechecker.tree.Tree.LazySpecifierExpression)) { result.add(com.redhat.ceylon.compiler.loader.model.AnnotationTarget.FIELD); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2486/buggy-version/src.com.redhat.ceylon.compiler.loader.model.AnnotationTarget.java", "BodyUseAPI": [], "Fixed commit": "1e3fc1296165c6c96e54a8f4ef6b969ad3b9c550", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2015-01-23T13:18:40Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getChildFragmentManager().getFragments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fragments != null) { for (android.support.v4.app.Fragment fragment : fragments) { fragment.onActivityResult(requestCode, resultCode, data); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5365/buggy-version/src.main.java.usbong.android.builder.fragments.ScreenDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "86306ab8f50daeca310ecaa76b6dbdd3caf1f88a", "Url": "https://api.github.com/repos/masarapmabuhay/usbong-builder", "Date": "2014-10-01T14:16:46Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getMessage()) != null) { android.widget.Toast.makeText(getActivity(), e.getMessage(), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5365/buggy-version/src.main.java.usbong.android.builder.fragments.ScreenDetailFragment.java", "BodyUseAPI": ["android.widget.Toast.makeText(getActivity(),java.lang.String,Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(getActivity(), e.getMessage(), Toast.LENGTH_SHORT).show()", "java.lang.Throwable.getMessage()"], "Fixed commit": "86306ab8f50daeca310ecaa76b6dbdd3caf1f88a", "Url": "https://api.github.com/repos/masarapmabuhay/usbong-builder", "Date": "2014-10-01T14:16:46Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mTargetView) == null) && ((getChildCount()) > 0)) { mTargetView = getChildAt(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/819/buggy-version/android.sdk.src.main.java.com.taobao.weex.ui.view.refresh.core.WXSwipeLayout.java", "BodyUseAPI": [], "Fixed commit": "fc824a0331667fdd4a342534d01d44a5bea0035d", "Url": "https://api.github.com/repos/apache/incubator-weex", "Date": "2017-08-15T09:17:27Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTargetView) != null) { if (((headerView) == null) || ((footerView) == null)) { setRefreshView(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/819/buggy-version/android.sdk.src.main.java.com.taobao.weex.ui.view.refresh.core.WXSwipeLayout.java", "BodyUseAPI": [], "Fixed commit": "fc824a0331667fdd4a342534d01d44a5bea0035d", "Url": "https://api.github.com/repos/apache/incubator-weex", "Date": "2017-08-15T09:17:27Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsPrimary) { mPhotoView.setTransitionName(getString(R.string.transition_photo)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6282/buggy-version/XYZReader.src.main.java.com.example.xyzreader.ui.ArticleDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "bdee711636f9eb8e1a8b6c337dd85fb18a6476ad", "Url": "https://api.github.com/repos/dorren/android_p5_polish_design", "Date": "2017-07-02T20:25:45Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xpn.xwiki.objects.BaseObject.getStringValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.xwiki.workflowpublication.internal.DefaultPublicationWorkflow.STATUS_PUBLISHED.equals(draftStatus)) { makeDocumentDraft(draftDoc, workflow, xcontext); xcontext.getWiki().saveDocument(draftDoc, (\"Cr\u00e9ation d'un brouillon depuis le document publi\u00e9 \" + (stringSerializer.serialize(document))), true, xcontext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6791/buggy-version/xwiki-workflow-publication-api.src.main.java.org.xwiki.workflowpublication.internal.DefaultPublicationWorkflow.java", "BodyUseAPI": [], "Fixed commit": "58a79d3090872c56741eb4fe89185a0105f699ee", "Url": "https://api.github.com/repos/tdelafosse/workflow-publication", "Date": "2013-01-16T15:01:39Z"},
{"Line": "=>1019", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.caluga.morphium.query.Query<T>.getCollectionName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (collectionName == null) morphium.getMapper().getCollectionName(q.getType());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1486/buggy-version/src.de.caluga.morphium.writer.MorphiumWriterImpl.java", "BodyUseAPI": [], "Fixed commit": "7a367eb7105c697001fba167cd48395283d756fc", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2016-01-14T15:08:47Z"},
{"Line": "=>1836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWellSampleDataSelection(selected)) { return; }else if (selected instanceof omero.gateway.model.DataObject) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((omero.gateway.model.DataObject) (selected))); accept(visitor); foundNode = visitor.getSelectedNode(); if (foundNode != null) { if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else view.setFoundNode(null); }else if (selected instanceof org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) { foundNode = ((org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) (selected)); if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else if (selected instanceof java.util.List) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((java.util.List<omero.gateway.model.DataObject>) (selected))); accept(visitor); java.util.List<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> nodes = visitor.getSelectedNodes(); if ((nodes.size()) == 0) { view.setFoundNode(null); }else if ((nodes.size()) == 1) { model.setSelectedDisplay(nodes.get(0), true); view.setFoundNode(model.getSelectedDisplays()); }else { model.setSelectedDisplay(null, true); java.util.Iterator<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> i = nodes.iterator(); while (i.hasNext()) model.addFoundNode(i.next()); view.setFoundNode(model.getSelectedDisplays()); } }else if (selected instanceof java.lang.String) { model.setSelectedDisplay(null, true); view.setFoundNode(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2128/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.agents.treeviewer.browser.BrowserComponent.java", "BodyUseAPI": [], "Fixed commit": "741e2d880c9861f3d1ca0db0be1ea1b617f00ef6", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2016-05-20T02:32:13Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (viewHolder.duckDuckWent = false) { new com.hunterdavis.jsongamelistmanager.tasks.DuckDuckGoTask(getActivity(), viewHolder.imagePreview, viewHolder.description, systemReference.getSystemListItemName(position)).execute(); viewHolder.duckDuckWent = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5873/buggy-version/JsonGameList.app.src.main.java.com.hunterdavis.jsongamelistmanager.fragment.SystemFragment.java", "BodyUseAPI": ["com.hunterdavis.jsongamelistmanager.tasks.DuckDuckGoTask.execute()"], "Fixed commit": "29ad5d95030ffe4fe72caef783e38b52f644fe8a", "Url": "https://api.github.com/repos/huntergdavis/json_game_list", "Date": "2015-04-11T05:24:39Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.TerraStormDE.QuestionPower.Util.TQuestionAssistant.getAssistant(e.getPlayer())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((assistant.getStep()) != (de.TerraStormDE.QuestionPower.Enums.TQuestionAssistantValue.VOTE_ITEM)) { e.setCancelled(true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1707/buggy-version/src.de.TerraStormDE.QuestionPower.Listener.TQuestionListener.java", "BodyUseAPI": [], "Fixed commit": "a180383fd66b789bd772c59eb77f646629f30518", "Url": "https://api.github.com/repos/MissionReplace/QuestionPower", "Date": "2014-12-13T18:39:45Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(e.getAction().toString().contains(\"RIGHT\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1707/buggy-version/src.de.TerraStormDE.QuestionPower.Listener.TQuestionListener.java", "BodyUseAPI": [], "Fixed commit": "a180383fd66b789bd772c59eb77f646629f30518", "Url": "https://api.github.com/repos/MissionReplace/QuestionPower", "Date": "2014-12-13T18:39:45Z"},
{"Line": "=>1935", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.core.model.repository.RepositoryManager.getRepositoryPreferenceStore()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(preferenceStore.contains(IRepositoryPrefConstants.MERGE_REFERENCE_PROJECT))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1598/buggy-version/main.plugins.org.talend.core.repository.src.main.java.org.talend.core.repository.model.ProjectRepositoryNode.java", "BodyUseAPI": [], "Fixed commit": "27080cf094d6c5f3acc2833cee6ab7f3bbb499fe", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2016-12-08T06:44:48Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (term.isEpsilon()) { hasEpsilon = true; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4724/buggy-version/src.ParseTable.java", "BodyUseAPI": [], "Fixed commit": "d8e1c47e5e308bd6c0274e5533383b31e42cca02", "Url": "https://api.github.com/repos/nybblr/cs3240-compiler", "Date": "2013-04-27T22:26:05Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (bookTitle.isEmpty()) { bookTitle = bookName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4467/buggy-version/app.src.main.java.com.door43.translationstudio.core.ExportUsfm.java", "BodyUseAPI": [], "Fixed commit": "edc4e257c604430b95b93e3e894195493244d1cc", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2017-02-16T18:44:44Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.door43.translationstudio.core.ProjectTranslation.getTitle()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (title.isEmpty()) { org.unfoldingword.resourcecontainer.Project project = com.door43.translationstudio.App.getLibrary().index.getProject(targetTranslation.getTargetLanguageId(), targetTranslation.getProjectId(), true); if ((project != null) && ((project.name) != null)) { title = project.name; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4467/buggy-version/app.src.main.java.com.door43.translationstudio.core.PdfPrinter.java", "BodyUseAPI": [], "Fixed commit": "edc4e257c604430b95b93e3e894195493244d1cc", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2017-02-16T18:44:44Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (threeAlleles) { p.setAbsoluteFitness(Genotype.AC, afAC); p.setAbsoluteFitness(Genotype.BC, afBC); p.setAbsoluteFitness(Genotype.CC, afCC); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/903/buggy-version/src.gui.SelectionPane.java", "BodyUseAPI": [], "Fixed commit": "17c663c954ac51601a23a383d6bd73b32eebea29", "Url": "https://api.github.com/repos/teamevolve/EVOLVE", "Date": "2017-09-23T23:41:04Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(configDir.exists())) configDir.mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2909/buggy-version/src.main.java.com.whammich.sstow.SoulShardsTOW.java", "BodyUseAPI": [], "Fixed commit": "f2fc9e163b1a6d67bba026177ba01a54203bf601", "Url": "https://api.github.com/repos/TehNut/Soul-Shards-The-Old-Ways", "Date": "2017-06-16T06:00:18Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.teljjb.dao.UserSignInRecordDao.findUserSignInRecordByTime(com.teljjb.util.DateUtil.dateOnlyExt(new java.util.Date()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (record != null) { throw new com.teljjb.exception.BusinessException((-9998), \"\u60a8\u4eca\u5929\u5df2\u7ecf\u7b7e\u8fc7\u5230\u4e86!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/402/buggy-version/comjujibaotelecomweb.src.main.java.com.teljjb.service.impl.SignInServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "7cf858e0dd0ba49fea2ff7ced4a9e060bcabd7ae", "Url": "https://api.github.com/repos/hautGroup/lolProject", "Date": "2017-05-11T09:02:21Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (delayMs > 0) try { java.lang.Thread.sleep(delayMs); } catch (java.lang.InterruptedException ie) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/223/buggy-version/lib-dempsyimpl.src.main.java.com.nokia.dempsy.cluster.invm.LocalClusterSessionFactory.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "d9b2e0d3b8d8e483902bc1ee1e377dc63b60c6bd", "Url": "https://api.github.com/repos/jimfcarroll/Dempsy", "Date": "2013-05-10T21:17:19Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (delayMs > 0) try { java.lang.Thread.sleep(delayMs); } catch (java.lang.InterruptedException ie) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/223/buggy-version/lib-dempsyimpl.src.main.java.com.nokia.dempsy.cluster.zookeeper.ZookeeperSession.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "d9b2e0d3b8d8e483902bc1ee1e377dc63b60c6bd", "Url": "https://api.github.com/repos/jimfcarroll/Dempsy", "Date": "2013-05-10T21:17:19Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ds.getType()) instanceof net.imglib2.type.numeric.integer.ShortType) markAsSigned16Bit(imp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1945/buggy-version/core.legacy.src.main.java.imagej.legacy.translate.GrayImagePlusCreator.java", "BodyUseAPI": [], "Fixed commit": "e803735ae3f5f3136795bc3a2ecacd97250a3599", "Url": "https://api.github.com/repos/imagej/imagej", "Date": "2013-05-14T20:16:23Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (source.hasTop()) { key = source.getTopKey(); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/5979/buggy-version/extensions.datastores.accumulo.src.main.java.mil.nga.giat.geowave.datastore.accumulo.query.QueryFilterIterator.java", "BodyUseAPI": ["org.apache.accumulo.core.iterators.SortedKeyValueIterator<org.apache.accumulo.core.data.Key, org.apache.accumulo.core.data.Value>.getTopKey()"], "Fixed commit": "b6b0b9888d78cbc823d62df89755a293c8a8c700", "Url": "https://api.github.com/repos/locationtech/geowave", "Date": "2016-07-10T17:32:36Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getCause()) instanceof java.lang.NumberFormatException) { p.sendMessage(((org.bukkit.ChatColor.RED) + \"The page must be an integer.\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3130/buggy-version/src.vg.civcraft.mc.namelayer.command.commands.ListGroups.java", "BodyUseAPI": [], "Fixed commit": "c38cbdf0ca46f44b6cb72e1927a0a3e4913d8084", "Url": "https://api.github.com/repos/Civcraft/NameLayer", "Date": "2015-01-31T14:08:46Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.Keyle.MyPet.chatcommands.MyPetList.getMyPet(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((MyPetConfig.automaticSkilltreeAssignment) && (!(myPet.getOwner().isMyPetAdmin()))) { sender.sendMessage(de.Keyle.MyPet.chatcommands.MyPetUtil.setColors(de.Keyle.MyPet.chatcommands.MyPetLanguage.getString(\"Msg_AutomaticSkilltreeAssignment\"))); }else if ((((myPet.getSkillTree()) != null) && (MyPetConfig.chooseSkilltreeOnce)) && (!(myPet.getOwner().isMyPetAdmin()))) { sender.sendMessage(de.Keyle.MyPet.chatcommands.MyPetUtil.setColors(de.Keyle.MyPet.chatcommands.MyPetLanguage.getString(\"Msg_OnlyChooseSkilltreeOnce\").replace(\"%petname%\", myPet.petName))); }else if (de.Keyle.MyPet.skill.MyPetSkillTreeMobType.hasMobType(myPet.getPetType().getTypeName())) { de.Keyle.MyPet.skill.MyPetSkillTreeMobType skillTreeMobType = de.Keyle.MyPet.skill.MyPetSkillTreeMobType.getMobTypeByName(myPet.getPetType().getTypeName()); if ((args.length) == 1) { if (skillTreeMobType.hasSkillTree(args[0])) { de.Keyle.MyPet.skill.MyPetSkillTree skillTree = skillTreeMobType.getSkillTree(args[0]); if (de.Keyle.MyPet.chatcommands.MyPetPermissions.has(myPet.getOwner().getPlayer(), (\"MyPet.custom.skilltree.\" + (skillTree.getName())))) { if (myPet.setSkilltree(skillTree)) { sender.sendMessage(de.Keyle.MyPet.chatcommands.MyPetUtil.setColors(de.Keyle.MyPet.chatcommands.MyPetLanguage.getString(\"Msg_SkilltreeSwitchedTo\").replace(\"%name%\", skillTree.getName()))); }else { sender.sendMessage(de.Keyle.MyPet.chatcommands.MyPetUtil.setColors(de.Keyle.MyPet.chatcommands.MyPetLanguage.getString(\"Msg_SkilltreeNotSwitched\"))); } }else { sender.sendMessage(de.Keyle.MyPet.chatcommands.MyPetUtil.setColors(de.Keyle.MyPet.chatcommands.MyPetLanguage.getString(\"Msg_CantFindSkilltree\").replace(\"%name%\", args[0]))); } }else { sender.sendMessage(de.Keyle.MyPet.chatcommands.MyPetUtil.setColors(de.Keyle.MyPet.chatcommands.MyPetLanguage.getString(\"Msg_CantFindSkilltree\").replace(\"%name%\", args[0]))); } }else { sender.sendMessage(de.Keyle.MyPet.chatcommands.MyPetUtil.setColors(de.Keyle.MyPet.chatcommands.MyPetLanguage.getString(\"Msg_AvailableSkilltrees\").replace(\"%petname%\", myPet.petName))); for (java.lang.String skillTreeName : skillTreeMobType.getSkillTreeNames()) { if (de.Keyle.MyPet.chatcommands.MyPetPermissions.has(player, (\"MyPet.custom.skilltree.\" + skillTreeName))) { sender.sendMessage((\" \" + skillTreeName)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/9074/buggy-version/src.Java.de.Keyle.MyPet.chatcommands.CommandChooseSkilltree.java", "BodyUseAPI": ["de.Keyle.MyPet.chatcommands.MyPetLanguage.getString(\"Msg_OnlyChooseSkilltreeOnce\").replace(java.lang.String,myPet.petName)", "de.Keyle.MyPet.entity.types.MyPet.getPetType()", "de.Keyle.MyPet.chatcommands.MyPetUtil.setColors(de.Keyle.MyPet.chatcommands.MyPetLanguage.getString(\"Msg_AvailableSkilltrees\").replace(\"%petname%\", myPet.petName))", "de.Keyle.MyPet.entity.types.MyPet.getOwner()", "de.Keyle.MyPet.chatcommands.MyPetLanguage.getString(\"Msg_AvailableSkilltrees\").replace(java.lang.String,myPet.petName)", "de.Keyle.MyPet.chatcommands.MyPetUtil.setColors(de.Keyle.MyPet.chatcommands.MyPetLanguage.getString(\"Msg_OnlyChooseSkilltreeOnce\").replace(\"%petname%\", myPet.petName))", "myPet.getPetType().getTypeName()", "myPet.getOwner().getPlayer()", "de.Keyle.MyPet.entity.types.MyPet.getOwner()", "de.Keyle.MyPet.entity.types.MyPet.getSkillTree()", "de.Keyle.MyPet.skill.MyPetSkillTreeMobType.hasMobType(myPet.getPetType().getTypeName())", "myPet.getPetType().getTypeName()", "org.bukkit.command.CommandSender.sendMessage(de.Keyle.MyPet.chatcommands.MyPetUtil.setColors(de.Keyle.MyPet.chatcommands.MyPetLanguage.getString(\"Msg_OnlyChooseSkilltreeOnce\").replace(\"%petname%\", myPet.petName)))", "de.Keyle.MyPet.entity.types.MyPet.setSkilltree(de.Keyle.MyPet.skill.MyPetSkillTree)", "org.bukkit.command.CommandSender.sendMessage(de.Keyle.MyPet.chatcommands.MyPetUtil.setColors(de.Keyle.MyPet.chatcommands.MyPetLanguage.getString(\"Msg_AvailableSkilltrees\").replace(\"%petname%\", myPet.petName)))", "de.Keyle.MyPet.skill.MyPetSkillTreeMobType.getMobTypeByName(myPet.getPetType().getTypeName())", "de.Keyle.MyPet.chatcommands.MyPetPermissions.has(myPet.getOwner().getPlayer(),(\"MyPet.custom.skilltree.\" + (skillTree.getName())))", "de.Keyle.MyPet.entity.types.MyPet.getPetType()", "myPet.getOwner().isMyPetAdmin()"], "Fixed commit": "55e071b340d5b7e34350c97f9dff976c7afd5335", "Url": "https://api.github.com/repos/xXKeyleXx/MyPet", "Date": "2012-12-30T14:06:35Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exception instanceof com.android.internal.telephony.CommandException) { com.android.internal.telephony.CommandException.Error err = ((com.android.internal.telephony.CommandException) (exception)).getCommandError(); if (err == (CommandException.Error.PASSWORD_INCORRECT)) { android.widget.Toast.makeText(getContext(), getPinPasswordErrorMessage(attemptsRemaining), Toast.LENGTH_LONG).show(); }else { if (mToState) { android.widget.Toast.makeText(getContext(), mRes.getString(R.string.sim_pin_enable_failed), Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(getContext(), mRes.getString(R.string.sim_pin_disable_failed), Toast.LENGTH_LONG).show(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2223/buggy-version/src.com.android.settings.IccLockSettings.java", "BodyUseAPI": [], "Fixed commit": "d6e86e04754da80fa183bccf0c7bf43e74d7e43f", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Settings", "Date": "2017-12-11T08:07:32Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((index > (dims.length)) || ((dims[index]) != null)) { throw new com.metamx.common.ISE(\"Dimension[%s] occurred more than once in InputRow\", dimension); }else { dims[index] = getDimVals(dimValues.get(dimension), dimensionValues); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3447/buggy-version/processing.src.main.java.io.druid.segment.incremental.IncrementalIndex.java", "BodyUseAPI": [], "Fixed commit": "67134badcc95d1fbe05c06ec9a89e701f9da0cba", "Url": "https://api.github.com/repos/dclim/druid", "Date": "2015-11-22T09:53:33Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (data == null) { throw new java.lang.IllegalArgumentException((\"Not a family: \" + (familyDocument.getDocumentReference()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7726/buggy-version/components.family-studies.api.src.main.java.org.phenotips.studies.family.internal.PhenotipsFamily.java", "BodyUseAPI": [], "Fixed commit": "ee9fa040d518372da6c87c982b3e0a6c2e0289d2", "Url": "https://api.github.com/repos/phenotips/phenotips", "Date": "2017-09-21T18:19:47Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Sudoku.solvePuzzle.solvePuzzle(0, 0)) { java.lang.System.out.println(\"Solution found!\"); sud.printSudoku(); java.lang.System.out.println(((\"It took me \" + ((java.lang.System.currentTimeMillis()) - start)) + \"ms to solve this puzzle.\")); }else { java.lang.System.out.println(\"No Solution Found!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4171/buggy-version/src.solvePuzzle.java", "BodyUseAPI": [], "Fixed commit": "72736f3147c6280f352ce24df81d3f02b565755f", "Url": "https://api.github.com/repos/devkapupara/Sudoku-Solver", "Date": "2017-10-09T04:22:50Z"},
{"Line": "=>1168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JComboBox.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (curType != null) { saveWord.setWordType((curType.equals(defTypeValue) ? \"\" : curType.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6260/buggy-version/src.PolyGlot.Screens.ScrLexicon.java", "BodyUseAPI": ["PolyGlot.Nodes.TypeNode.equals(PolyGlot.Nodes.TypeNode)", "PolyGlot.Nodes.ConWord.setWordType((curType.equals(defTypeValue) ? \"\" : curType.getValue()))", "PolyGlot.Nodes.TypeNode.getValue()"], "Fixed commit": "23de082a95470a14a041327eeb7b8d1fc23b1ffb", "Url": "https://api.github.com/repos/DraqueT/PolyGlot", "Date": "2015-08-25T16:02:04Z"},
{"Line": "=>1157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JComboBox.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (curGend != null) { saveWord.setGender((curGend.equals(defGenderValue) ? \"\" : curGend.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6260/buggy-version/src.PolyGlot.Screens.ScrLexicon.java", "BodyUseAPI": ["PolyGlot.Nodes.GenderNode.equals(PolyGlot.Nodes.GenderNode)", "PolyGlot.Nodes.GenderNode.getValue()", "PolyGlot.Nodes.ConWord.setGender((curGend.equals(defGenderValue) ? \"\" : curGend.getValue()))"], "Fixed commit": "23de082a95470a14a041327eeb7b8d1fc23b1ffb", "Url": "https://api.github.com/repos/DraqueT/PolyGlot", "Date": "2015-08-25T16:02:04Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(saveOrCancelTest())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6260/buggy-version/src.PolyGlot.Screens.ScrDictMenu.java", "BodyUseAPI": [], "Fixed commit": "23de082a95470a14a041327eeb7b8d1fc23b1ffb", "Url": "https://api.github.com/repos/DraqueT/PolyGlot", "Date": "2015-08-25T16:02:04Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (usesTEXMAP) { texmapData = new java.util.ArrayList<>(texmapDataInOrder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8910/buggy-version/src.org.nschmidt.ldparteditor.data.GL33ModelRenderer.java", "BodyUseAPI": [], "Fixed commit": "2758636d3738849db6533a6cb3e437af0e63c5cb", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-10-25T06:32:11Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.gmail.justbru00.meaningfull.currency.main.Main.console) != null) { Main.console.sendMessage(((com.gmail.justbru00.meaningfull.currency.main.Main.PREFIX) + (com.gmail.justbru00.meaningfull.currency.utils.Messager.color(msg)))); }else { Main.log.info(org.bukkit.ChatColor.stripColor(com.gmail.justbru00.meaningfull.currency.utils.Messager.color(msg))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2683/buggy-version/src.com.gmail.justbru00.meaningfull.currency.utils.Messager.java", "BodyUseAPI": [], "Fixed commit": "2800f3fccbeee9e16a5d237dc319a6fa34493238", "Url": "https://api.github.com/repos/JustBru00/MeaningfullCurrency", "Date": "2016-04-21T02:15:25Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((m.getModuleDescriptor()) != null) && ((m.getModuleDescriptor().getUsedDevkits()) != null)) { for (jetbrains.mps.project.DevKit dk : jetbrains.mps.project.ModuleUtil.refsToDevkits(m.getModuleDescriptor().getUsedDevkits())) { myUsedDevkits.add(dk); myUsedDevkits.addAll(dk.getAllExtendedDevkits()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6337/buggy-version/core.kernel.source.jetbrains.mps.smodel.DefaultScope.java", "BodyUseAPI": ["jetbrains.mps.project.ModuleUtil.refsToDevkits(m.getModuleDescriptor().getUsedDevkits())", "jetbrains.mps.project.IModule.getModuleDescriptor()", "m.getModuleDescriptor().getUsedDevkits()"], "Fixed commit": "fddc48a4ac37e81d9a214bd76fa14056efc028c5", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2013-04-15T07:14:52Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCaptureTheCrownChallenge.getChallengeStatusType()) == (dariogonzalez.fitplaygames.classes.ParseConstants.CHALLENGE_STATUS_PLAYING)) { profilePicture = (file != null) ? android.net.Uri.parse(file.getUrl()) : null; player.setmImageUri(profilePicture); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3956/buggy-version/app.src.main.java.dariogonzalez.fitplaygames.CaptureTheCrownDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "d52d3c1d5b3a4b453bc1854522db61a5d0587535", "Url": "https://api.github.com/repos/dariogs2001/FitPlayGames", "Date": "2016-03-11T05:12:30Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.InetAddress.getHostAddress()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((remoteIP.indexOf(\"%\")) != (-1)) { remoteIP = remoteIP.substring(0, remoteIP.indexOf(\"%\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8673/buggy-version/src.main.java.eu.spitfire_project.smart_service_proxy.backends.coap.CoapNodeRegistrationServer.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "da8995567752b94a19646f93b9f417576e6c3ad4", "Url": "https://api.github.com/repos/smartsantander/smart-service-proxy", "Date": "2012-04-24T14:38:15Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nustaq.kson.KsonCharInput.peekChar()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((ch == '[') && (((expected == null) || (expected == (java.lang.Object.class))) || (expected.isInterface()))) { in.readChar(); if ((((expected != null) && (!(java.util.Map.class.isAssignableFrom(expected)))) && (java.util.Collection.class.isAssignableFrom(expected))) && (genericValueType == null)) { genericValueType = genericKeyType; } return readList(genericKeyType, genericValueType); }else { return readObject(expected, genericKeyType, genericValueType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8769/buggy-version/src.main.java.org.nustaq.kson.KsonDeserializer.java", "BodyUseAPI": ["org.nustaq.kson.KsonDeserializer.readObject(java.lang.Class,java.lang.Class,java.lang.Class)", "java.lang.Class.isAssignableFrom(java.lang.Class)", "java.lang.Class.isAssignableFrom(java.lang.Class)"], "Fixed commit": "d0e264a97220b070a460717f77182bbeeafcc7f9", "Url": "https://api.github.com/repos/RuedigerMoeller/fast-serialization", "Date": "2014-09-20T11:08:26Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["widgetItem2.componentName.getPackageName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((packageUserKey != null) && (!(packageUserKey.mPackageName.equals(packageName)))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1043/buggy-version/app.src.main.java.ch.deletescape.lawnchair.model.WidgetsModel.java", "BodyUseAPI": [], "Fixed commit": "f93fcf318a17900ca31d3743a18a380da5f1112a", "Url": "https://api.github.com/repos/G0ldenSp00n/Lawnchair", "Date": "2017-07-22T13:46:41Z"},
{"Line": "=>688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (backupName.contains(\"/\")) { snapshotDir = backupName.split(\"/\")[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1855/buggy-version/plugins.hypervisors.vmware.src.com.cloud.hypervisor.vmware.manager.VmwareStorageManagerImpl.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "05e025fa35baaa4b4e9007d92d1e025f81889e7d", "Url": "https://api.github.com/repos/CloudStack-QA/incubator-cloudstack", "Date": "2013-03-16T01:54:09Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (valueSemilla != null) { idSemilla = semilla.id; play.Logger.info((((\"Semilla a buscar: \" + valueSemilla) + \", encontrada: \") + idSemilla)); while (idSemilla < valueSemilla) { app.SemillaExpediente sem = new app.SemillaExpediente(); sem.save(); idSemilla = sem.id; } play.Logger.info((\"Semilla actualizada a \" + idSemilla)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3281/buggy-version/fap.app.app.Start.java", "BodyUseAPI": ["play.Logger.info(java.lang.String)"], "Fixed commit": "f1e6445ddd2d36f095676edbfe232b957314809e", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2012-05-02T07:00:22Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jo.getJSONObject(\"user\").getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == server) { httpPost.setURI(new java.net.URI(((\"http://10.110.18.30:8000/hub/api/users/\" + user) + \"/server\"))); httpPost.setEntity(null); httpPost.setHeader(\"Authorization\", (\"token \" + (jo.getString(\"token\")))); response = client.execute(httpPost); if ((response.getStatusLine().getStatusCode()) == 200) { resultMap.put(\"url\", (\"http://10.110.18.30:8000/user/\" + user)); resultMap.put(\"token\", jo.getString(\"token\")); }else { resultMap.putAll(com.inspur.da.dsw.utils.JSONUtil.json2map(org.apache.commons.io.IOUtils.toString(response.getEntity().getContent()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6167/buggy-version/src.main.java.com.inspur.da.dsw.controller.LoginController.java", "BodyUseAPI": [], "Fixed commit": "79b2a236448b112555f0f0e07f841b1b9db8245b", "Url": "https://api.github.com/repos/xuande/idsw", "Date": "2017-11-03T10:33:10Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((histogram.getRangeMax()) != null) jgen.writeObjectField(\"range_max\", histogram.getRangeMax());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7047/buggy-version/plugin.jvm.src.main.java.com.twosigma.beaker.chart.serializer.HistogramSerializer.java", "BodyUseAPI": ["com.twosigma.beaker.chart.histogram.Histogram.getRangeMax()", "org.codehaus.jackson.JsonGenerator.writeObjectField(java.lang.String,histogram.getRangeMax())"], "Fixed commit": "001efea6cd6501f927c94d83149ec3d69b0c610c", "Url": "https://api.github.com/repos/twosigma/beakerx", "Date": "2015-10-26T12:08:51Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((histogram.getRangeMin()) != null) jgen.writeObjectField(\"range_min\", histogram.getRangeMin());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7047/buggy-version/plugin.jvm.src.main.java.com.twosigma.beaker.chart.serializer.HistogramSerializer.java", "BodyUseAPI": ["org.codehaus.jackson.JsonGenerator.writeObjectField(java.lang.String,histogram.getRangeMin())", "com.twosigma.beaker.chart.histogram.Histogram.getRangeMin()"], "Fixed commit": "001efea6cd6501f927c94d83149ec3d69b0c610c", "Url": "https://api.github.com/repos/twosigma/beakerx", "Date": "2015-10-26T12:08:51Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck.getLine(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(line.isEmpty())) { final int start = getLineStart(line); if (indentLevel.isGreaterThan(start)) { logChildError(lineNum, start, indentLevel); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8382/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler.getLineStart(java.lang.String)"], "Fixed commit": "cce5bcbcb0c3473f5f13e0ebc14d7500d9f9c253", "Url": "https://api.github.com/repos/checkstyle/checkstyle", "Date": "2015-12-17T21:59:15Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.memtrip.sqlking.preprocessor.processor.freemarker.method.JoinReferencesMethod.getTableFromName(java.lang.String,java.util.List<com.memtrip.sqlking.preprocessor.processor.data.Table>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (joinTable != null) { java.util.List<com.memtrip.sqlking.preprocessor.processor.data.Column> columns = joinTable.getColumns(); for (com.memtrip.sqlking.preprocessor.processor.data.Column column : columns) { if (column.isJoinable(tables)) { java.lang.System.out.println((\"++ \" + (column.getName()))); com.memtrip.sqlking.preprocessor.processor.data.Table columnTable = column.getRootTable(tables); sb.append(buildJoinTable(joinTableName, columnTable)); sb.append(build(column.getClassName(), tables)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8697/buggy-version/preprocessor.src.main.java.com.memtrip.sqlking.preprocessor.processor.freemarker.method.JoinReferencesMethod.java", "BodyUseAPI": ["com.memtrip.sqlking.preprocessor.processor.data.Table.getColumns()"], "Fixed commit": "c17ce4b72c0c95ba5250b71a6d309978d6d5b711", "Url": "https://api.github.com/repos/memtrip/SQLKing", "Date": "2016-09-02T14:19:31Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (evt.world.isRemote) { if (net.minecraft.server.MinecraftServer.getServer().isDedicatedServer()) { com.mcjty.rftools.dimension.RfToolsDimensionManager.unregisterDimensions(); com.mcjty.rftools.items.dimlets.KnownDimletConfiguration.clean(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3850/buggy-version/src.main.java.com.mcjty.rftools.WorldLoadEvent.java", "BodyUseAPI": [], "Fixed commit": "be58f2046919c58287e31fc53cad8a31fba9dc78", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-02-06T05:17:23Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.asofold.bukkit.simplyvanish.SimplyVanishCore.getVanishConfig(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(cfg.needsSave())) sender.sendMessage(SimplyVanish.msgDefaultFlags); else sender.sendMessage(((((((SimplyVanish.msgLabel) + (org.bukkit.ChatColor.GRAY)) + \"Flags(\") + name) + \"): \") + (cfg.toLine())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/2311/buggy-version/SimplyVanish.src.me.asofold.bukkit.simplyvanish.SimplyVanishCore.java", "BodyUseAPI": ["me.asofold.bukkit.simplyvanish.config.VanishConfig.toLine()", "org.bukkit.command.CommandSender.sendMessage(((((((SimplyVanish.msgLabel) + (org.bukkit.ChatColor.GRAY)) + \"Flags(\") + name) + \"): \") + (cfg.toLine())))"], "Fixed commit": "0c13b09a9ea235ca22a68744f1c1b6106fbf1f12", "Url": "https://api.github.com/repos/asofold/SimplyVanish", "Date": "2012-05-07T09:13:59Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (is != null) is.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/812/buggy-version/src.java.com.rondhuit.commons.IOUtils.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "07b02540f889dcb60966ea9e86d85a75fcb5b5f8", "Url": "https://api.github.com/repos/kojisekig/rondhuit-commons", "Date": "2014-05-09T08:40:47Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (r != null) r.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/812/buggy-version/src.java.com.rondhuit.commons.IOUtils.java", "BodyUseAPI": ["java.io.Reader.close()"], "Fixed commit": "07b02540f889dcb60966ea9e86d85a75fcb5b5f8", "Url": "https://api.github.com/repos/kojisekig/rondhuit-commons", "Date": "2014-05-09T08:40:47Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (os != null) os.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/812/buggy-version/src.java.com.rondhuit.commons.IOUtils.java", "BodyUseAPI": ["java.io.OutputStream.close()"], "Fixed commit": "07b02540f889dcb60966ea9e86d85a75fcb5b5f8", "Url": "https://api.github.com/repos/kojisekig/rondhuit-commons", "Date": "2014-05-09T08:40:47Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (w != null) w.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/812/buggy-version/src.java.com.rondhuit.commons.IOUtils.java", "BodyUseAPI": ["java.io.Writer.close()"], "Fixed commit": "07b02540f889dcb60966ea9e86d85a75fcb5b5f8", "Url": "https://api.github.com/repos/kojisekig/rondhuit-commons", "Date": "2014-05-09T08:40:47Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.listStart) == null) { java.lang.System.out.println(\"List is empty\"); }else if ((this.listStart.getNext()) == null) { java.lang.System.out.println(\"No other elements in the list\"); }else { this.listStart = listStart.getNext(); listStart.setPrevious(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6815/buggy-version/DoubleLinkedList.DoubleHospitalManager.java", "BodyUseAPI": [], "Fixed commit": "438508ed1477e43c97eeb5be15934dfd4349d572", "Url": "https://api.github.com/repos/LiliyaStefanova/JavaProgrammingExercise", "Date": "2014-01-13T00:09:16Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ServerIPTextField.getText().isEmpty()) ServerIPTextField.setText(prefs.get(\"SERVERIP\", \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7072/buggy-version/ControllerCS.src.ControllerCS.java", "BodyUseAPI": ["javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "34d3486dd339bb460be6cd5f45c73341ec5235e4", "Url": "https://api.github.com/repos/PatrickJoshua/Software-Engineering", "Date": "2014-11-05T05:00:07Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ServerIPTextField.getText().isEmpty()) ServerIPTextField.setText(prefs.get(\"SERVERIP\", \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7072/buggy-version/ControllerIS.src.ControllerIS.java", "BodyUseAPI": ["javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "34d3486dd339bb460be6cd5f45c73341ec5235e4", "Url": "https://api.github.com/repos/PatrickJoshua/Software-Engineering", "Date": "2014-11-05T05:00:07Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ServerIPTextField.getText().isEmpty()) ServerIPTextField.setText(prefs.get(\"SERVERIP\", \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7072/buggy-version/Input.src.Input.java", "BodyUseAPI": ["javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "34d3486dd339bb460be6cd5f45c73341ec5235e4", "Url": "https://api.github.com/repos/PatrickJoshua/Software-Engineering", "Date": "2014-11-05T05:00:07Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((dummy) == 1) && ((facing == null) || (facing == (this.facing.getOpposite())))) { net.minecraft.tileentity.TileEntity te = world.getTileEntity(getPos().down(dummy)); if (te instanceof blusunrize.immersiveengineering.common.blocks.metal.TileEntityBelljar) return ((T) (((blusunrize.immersiveengineering.common.blocks.metal.TileEntityBelljar) (te)).outputHandler)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8924/buggy-version/src.main.java.blusunrize.immersiveengineering.common.blocks.metal.TileEntityBelljar.java", "BodyUseAPI": [], "Fixed commit": "6bee6512096d006d85b9abef68635ac782e79a0b", "Url": "https://api.github.com/repos/BluSunrize/ImmersiveEngineering", "Date": "2017-07-22T09:29:58Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vs.indexX) == (vs.indexY)) showname += ds.getChannelInfo().get(vs.indexX).getShortestName(); else showname += ((ds.getChannelInfo().get(vs.indexX).getShortestName()) + \" / \") + (ds.getChannelInfo().get(vs.indexY).getShortestName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/58/buggy-version/src.facsanadu.gui.ViewsListWidget.java", "BodyUseAPI": ["ds.getChannelInfo().get(vs.indexY)", "ds.getChannelInfo().get(vs.indexX).getShortestName()", "ds.getChannelInfo().get(vs.indexX).getShortestName()", "ds.getChannelInfo().get(vs.indexX)", "ds.getChannelInfo().get(vs.indexY).getShortestName()", "ds.getChannelInfo().get(vs.indexX)"], "Fixed commit": "dfe7e3c491007067ca260614aa5073992d72c97c", "Url": "https://api.github.com/repos/mahogny/facsanadu", "Date": "2015-04-21T08:16:26Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.sixinwen.utils.NewsItem.getCommentNumber()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (n > 10000) { holder.commentNumber.setText(((\"\u8bc4\u8bba:\" + (n / 1000)) + \"k\")); }else { holder.commentNumber.setText((\"\u8bc4\u8bba:\" + (newsItem.getCommentNumber()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7305/buggy-version/app.src.main.java.com.example.sixinwen.adapter.FirstPageNewsAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "3a8755718d8307faf983c711d01b041d734b565b", "Url": "https://api.github.com/repos/SiXinWen/android-dev", "Date": "2015-05-14T03:27:40Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((appointmentItem.endTime) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/8261/buggy-version/AppointmentSend.src.com.ge.smg.operator.impl.KillNode.java", "BodyUseAPI": [], "Fixed commit": "0c8b7a801a77ae6bf0064c5924f8b0b1070dbb41", "Url": "https://api.github.com/repos/Armyadviser/SMG", "Date": "2017-01-10T02:08:46Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((input.length()) == 1) && (endStates[stateId])) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6423/buggy-version/src.org.jgll.regex.DFA.java", "BodyUseAPI": [], "Fixed commit": "935612ca1008c6d71d4e56bf84df340086127737", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2013-12-30T23:52:05Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key.isButtonTapped(java.awt.event.KeyEvent.VK_P)) { menu.open(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/6294/buggy-version/src.MainGame.Game.java", "BodyUseAPI": [], "Fixed commit": "606c065191fb69af85302f60aa8815b149bcef51", "Url": "https://api.github.com/repos/SmallWorldEGaDSGameJam/MainGame", "Date": "2014-09-27T20:23:47Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.Document.get(Field.ROOT_ENTRY_CLASS_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNull(className)) { className = document.get(Field.ENTRY_CLASS_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1325/buggy-version/portal-impl.src.com.liferay.portal.search.SearchPermissionCheckerImpl.java", "BodyUseAPI": [], "Fixed commit": "16d9354378cc170c4c321877226afa911f9ea3ee", "Url": "https://api.github.com/repos/Preston-Crary/liferay-portal", "Date": "2015-05-22T21:08:16Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["capteurs.CapteursProcess.getPositionVue(capteurs[i],data.mesures[i],data.cinematique,data.angleRoueGauche,data.angleRoueDroite)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (positionVue == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4545/buggy-version/pc.src.capteurs.CapteursProcess.java", "BodyUseAPI": [], "Fixed commit": "446fac3c8d6ada2e9e081605eada52ecdc1a6d9b", "Url": "https://api.github.com/repos/INTechSenpai/moon-rover", "Date": "2017-05-15T21:54:39Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.kwstudios.play.ragemode.gameLogic.PlayerList.runningGames[i]) != null) { if (org.kwstudios.play.ragemode.gameLogic.PlayerList.runningGames[i].equals(game)) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7167/buggy-version/src.org.kwstudios.play.ragemode.gameLogic.PlayerList.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "bf6c42d482d891de20c99c821ab56833f7a67f85", "Url": "https://api.github.com/repos/KWStudios/RageMode", "Date": "2015-08-01T19:30:25Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((col) - 1) >= 0) s = this.strip.getSquare(((col) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4280/buggy-version/src.Square.java", "BodyUseAPI": ["Strip.getSquare(int)"], "Fixed commit": "4c9bd0a758d544111588e355339e99daa3e98143", "Url": "https://api.github.com/repos/tmzhuang/pvz-reloaded", "Date": "2013-10-23T09:00:05Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((col) + 1) < (Field.DEFAULT_MAX_POSN)) s = this.strip.getSquare(((col) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/4280/buggy-version/src.Square.java", "BodyUseAPI": ["Strip.getSquare(int)"], "Fixed commit": "4c9bd0a758d544111588e355339e99daa3e98143", "Url": "https://api.github.com/repos/tmzhuang/pvz-reloaded", "Date": "2013-10-23T09:00:05Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(editValidMinute.getText().toString().equals(\"\"))) { currentTime.add(java.util.Calendar.MINUTE, java.lang.Integer.parseInt(editValidMinute.getText().toString())); android.util.Log.d(TAG, (\"current time final\" + (currentTime.getTime()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3037/buggy-version/app.src.main.java.cs701b.middshare.CreateNew.java", "BodyUseAPI": ["java.util.Calendar.add(int,int)", "editValidMinute.getText().toString()", "java.lang.Integer.parseInt(editValidMinute.getText().toString())", "android.widget.EditText.getText()"], "Fixed commit": "19614d295b775f70df222bffe9631dce200878bd", "Url": "https://api.github.com/repos/TonyJin001/MiddShare", "Date": "2016-12-07T21:41:54Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(editValidHour.getText().toString().equals(\"\"))) { currentTime.add(java.util.Calendar.HOUR_OF_DAY, java.lang.Integer.parseInt(editValidHour.getText().toString())); android.util.Log.d(TAG, (\"current time before adding minute\" + (currentTime.getTime()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3037/buggy-version/app.src.main.java.cs701b.middshare.CreateNew.java", "BodyUseAPI": ["java.lang.Integer.parseInt(editValidHour.getText().toString())", "android.widget.EditText.getText()", "java.util.Calendar.add(int,int)", "editValidHour.getText().toString()"], "Fixed commit": "19614d295b775f70df222bffe9631dce200878bd", "Url": "https://api.github.com/repos/TonyJin001/MiddShare", "Date": "2016-12-07T21:41:54Z"},
{"Line": "=>715", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.GINGERBREAD_MR1)) { mBitmapCanvas.setBitmap(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1320/buggy-version/MPChartLib.src.main.java.com.github.mikephil.charting.renderer.LineChartRenderer.java", "BodyUseAPI": [], "Fixed commit": "6b0bae7cd0f0204bff6fad557b16ecaed5328ffd", "Url": "https://api.github.com/repos/dzungpv/MPAndroidChart", "Date": "2016-11-04T03:34:51Z"},
{"Line": "=>985", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.GINGERBREAD_MR1)) { mBitmapCanvas.setBitmap(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/1320/buggy-version/MPChartLib.src.main.java.com.github.mikephil.charting.renderer.PieChartRenderer.java", "BodyUseAPI": [], "Fixed commit": "6b0bae7cd0f0204bff6fad557b16ecaed5328ffd", "Url": "https://api.github.com/repos/dzungpv/MPAndroidChart", "Date": "2016-11-04T03:34:51Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["message.getPushBundle().getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sExpandContent == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/3287/buggy-version/UrbanAirshipPlugin.src.com.adenda.plugin.urbanairship.UrbanAirshipLockscreenFragment.java", "BodyUseAPI": [], "Fixed commit": "9a9e03ec07f8867a9b22dbf728d0a87edb8fc1f4", "Url": "https://api.github.com/repos/adenda/adenda-urbanairship", "Date": "2015-11-14T20:08:26Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dare2date.applicationservice.IAuthorisationService.getUsername(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (lastFmUsername != null) { result.setEvents(api.getUserEventHistory(lastFmUsername)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V31/7871/buggy-version/spring-ws.src.main.java.com.dare2date.businessservice.LastfmService.java", "BodyUseAPI": ["com.dare2date.domein.lastfm.LastfmData.setEvents(api.getUserEventHistory(lastFmUsername))", "com.dare2date.externeservice.lastfm.ILastfmAPI.getUserEventHistory(java.lang.String)"], "Fixed commit": "9a3159c8ba511f9bd99750c4e46f8d1f4a200359", "Url": "https://api.github.com/repos/ArjanO/KenIkJouNietErgensVan", "Date": "2013-06-04T20:30:53Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (children != null) { numberOfChildren = ((int) (children.number)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6964/buggy-version/src.algorithms.imageProcessing.HeapNode.java", "BodyUseAPI": [], "Fixed commit": "ba94505fa2cb0b998602769e37f0901522bc9d20", "Url": "https://api.github.com/repos/nking/curvature-scale-space-corners-and-transformations", "Date": "2017-03-21T08:44:31Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((author.getCitedBy()) < citation) { author.setCitedBy(citation); persistenceStrategy.getAuthorDAO().persist(author); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1713/buggy-version/src.main.java.de.rwth.i9.palm.datasetcollect.service.PublicationCollectionService.java", "BodyUseAPI": ["persistenceStrategy.getAuthorDAO().persist(de.rwth.i9.palm.model.Author)", "de.rwth.i9.palm.model.Author.setCitedBy(int)"], "Fixed commit": "0043a16e98aee3573ad4b1bae2c259239dc38dcb", "Url": "https://api.github.com/repos/palm-toolkit/palm-core", "Date": "2016-01-20T11:57:26Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.ometa.lovemonster.service.NetworkHelper.isUp(getActivity())) { onSwipeUp(page); }else { android.widget.Toast.makeText(getActivity(), R.string.check_internet, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2275/buggy-version/app.src.main.java.org.ometa.lovemonster.ui.fragments.LovesListFragment.java", "BodyUseAPI": [], "Fixed commit": "be100af5bbbff738322e4a2bed0f8a809abe23bc", "Url": "https://api.github.com/repos/lovemonster/love-monster-android", "Date": "2015-12-08T06:44:21Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.doridian.yiffbukkit.chatlink.RedisManager.jedisPool) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8120/buggy-version/src.main.java.de.doridian.yiffbukkit.chatlink.RedisManager.java", "BodyUseAPI": [], "Fixed commit": "8607228628cee2315918ec5aec264faea1146d11", "Url": "https://api.github.com/repos/YiffBukkit/YiffBukkitChatLink", "Date": "2014-05-18T12:33:36Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((activeUsersUsername.size()) > 0) { for (int i = 0; i < (activeUsersUsername.size()); i++) { if (activeUsersUsername.get(i).equals(username)) { valid = true; index = i; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3924/buggy-version/src.InstantMessagingServer.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "c4eb9e9d0c1737bf92a2e166f0efcf899c75b7da", "Url": "https://api.github.com/repos/adindabudi/InstantMessagingRabbitMQ", "Date": "2016-10-29T04:43:21Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clusterSetTable.getColumn(\"WC_ComputedLabel\")) == null) clusterSetTable.createColumn(\"WC_ComputedLabel\", java.lang.String.class, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7518/buggy-version/EnrichmentMapPlugin.src.main.java.org.baderlab.csplugins.enrichmentmap.autoannotate.task.cluster.UpdateClusterLabelTask.java", "BodyUseAPI": ["org.cytoscape.model.CyTable.createColumn(java.lang.String,java.lang.Class,boolean)"], "Fixed commit": "402076519af407b335c10d81eda15b5e49dd60a7", "Url": "https://api.github.com/repos/BaderLab/EnrichmentMapApp", "Date": "2015-05-12T14:32:05Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 1) { holder.itemView.post(new java.lang.Runnable() { @java.lang.Override public void run() { notifyItemChanged(0); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3183/buggy-version/Application.src.main.java.org.vai.vari.bsiandroid.BoxContentAdapter.java", "BodyUseAPI": [], "Fixed commit": "5952c562244b72e7616e68c80787a3d4fa998b4c", "Url": "https://api.github.com/repos/VARI-PBC/BsiAndroid", "Date": "2017-02-22T21:29:35Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastLocation) != null) { moveCamera(new com.google.android.gms.maps.model.LatLng(lastLocation.getLatitude(), lastLocation.getLongitude()), true, searchRadius, true); this.resetZoomLevel = false; comp3717.bcit.ca.hydrantfinder.DataAccessor.getInstance().retrieveHydrantsOnLocation(getContext(), new com.google.android.gms.maps.model.LatLng(lastLocation.getLatitude(), lastLocation.getLongitude()), searchRadius); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7517/buggy-version/hydrantfinder.app.src.main.java.comp3717.bcit.ca.hydrantfinder.MainMapFragment.java", "BodyUseAPI": [], "Fixed commit": "fb2f6d28656b1e3fe553162a8a16989fa19df702", "Url": "https://api.github.com/repos/JaydenLiang/ca.bcit.comp3717.hydrantfinder", "Date": "2017-04-06T18:07:23Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 < (getProceduresStopping())) { io.github.scrier.opus.nuke.task.NukeTasks.log.info(((\"Issued stop command to \" + (getProceduresStopping())) + \" procedures, waiting for done.\")); setStopCommand(command); }else { io.github.scrier.opus.nuke.task.NukeTasks.log.info(\"All procedures stopped, updating command.\"); command.setState(CommandState.DONE); updateEntry(getStopCommand()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8313/buggy-version/nuke.src.main.java.io.github.scrier.opus.nuke.task.NukeTasks.java", "BodyUseAPI": [], "Fixed commit": "f555ea1aa865776a02d3e6e969de6f4b50fbebd2", "Url": "https://api.github.com/repos/Scrier/opus", "Date": "2014-12-17T10:42:43Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mEngine.util.vectorHelper.VectorHelper.getAbs(mEngine.util.vectorHelper.VectorHelper.subtractVectors(vertexB, vertexA))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((mEngine.util.vectorHelper.VectorHelper.getAbs(mEngine.util.vectorHelper.VectorHelper.subtractVectors(vertexC, vertexA))) > longestVertexDifference) longestVertexDifference = mEngine.util.vectorHelper.VectorHelper.getAbs(mEngine.util.vectorHelper.VectorHelper.subtractVectors(vertexC, vertexA));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/852/buggy-version/src.mEngine.physics.Collider.java", "BodyUseAPI": ["mEngine.util.vectorHelper.VectorHelper.getAbs(mEngine.util.vectorHelper.VectorHelper.subtractVectors(vertexC, vertexA))", "mEngine.util.vectorHelper.VectorHelper.subtractVectors(org.lwjgl.util.vector.Vector3f,org.lwjgl.util.vector.Vector3f)"], "Fixed commit": "4615ecbdcbc337693c4a9d18cdc577ad836c2028", "Url": "https://api.github.com/repos/mGameLabs/mEngine", "Date": "2014-02-26T16:38:10Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mEngine.util.vectorHelper.VectorHelper.subtractVectors(org.lwjgl.util.vector.Vector3f,org.lwjgl.util.vector.Vector3f)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((mEngine.util.vectorHelper.VectorHelper.getAbs(mEngine.util.vectorHelper.VectorHelper.subtractVectors(intersectionPoint, vertexA))) <= longestVertexDifference) { float difference = java.lang.Math.abs(((mEngine.util.vectorHelper.VectorHelper.getScalarProduct(normal, intersectionPoint)) + (mEngine.util.vectorHelper.VectorHelper.getScalarProduct(normal, vertexA)))); float collisionTime = difference / (mEngine.util.vectorHelper.VectorHelper.getAbs(velocity)); if (((collisionTime >= (-1)) && (collisionTime <= 1)) && ((java.lang.Math.abs(collisionTime)) < (java.lang.Math.abs(collisionTimes[renderComponentA.model.faces.indexOf(faceA)])))) { colliding = true; collisionTimes[renderComponentA.model.faces.indexOf(faceA)] = collisionTime; collisionFaces[renderComponentA.model.faces.indexOf(faceA)] = faceB; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/852/buggy-version/src.mEngine.physics.Collider.java", "BodyUseAPI": ["mEngine.util.vectorHelper.VectorHelper.getScalarProduct(org.lwjgl.util.vector.Vector3f,org.lwjgl.util.vector.Vector3f)", "java.lang.Math.abs(((mEngine.util.vectorHelper.VectorHelper.getScalarProduct(normal, intersectionPoint)) + (mEngine.util.vectorHelper.VectorHelper.getScalarProduct(normal, vertexA))))", "mEngine.util.vectorHelper.VectorHelper.getScalarProduct(org.lwjgl.util.vector.Vector3f,org.lwjgl.util.vector.Vector3f)"], "Fixed commit": "4615ecbdcbc337693c4a9d18cdc577ad836c2028", "Url": "https://api.github.com/repos/mGameLabs/mEngine", "Date": "2014-02-26T16:38:10Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s > 1.0F) { mSuppMatrix.postScale(s, s, focusX, focusY); checkAndDisplayMatrix(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1045/buggy-version/library.src.uk.co.senab.photoview.PhotoViewAttacher.java", "BodyUseAPI": ["android.graphics.Matrix.postScale(float,float,float,float)"], "Fixed commit": "82d29600375cb28fc9490a3d141bd22bdfc2402f", "Url": "https://api.github.com/repos/oizo/PhotoView", "Date": "2014-04-25T11:27:30Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s < 0.9998) { mSuppMatrix.postScale(s, s, focusX, focusY); checkAndDisplayMatrix(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1045/buggy-version/library.src.uk.co.senab.photoview.PhotoViewAttacher.java", "BodyUseAPI": ["android.graphics.Matrix.postScale(float,float,float,float)"], "Fixed commit": "82d29600375cb28fc9490a3d141bd22bdfc2402f", "Url": "https://api.github.com/repos/oizo/PhotoView", "Date": "2014-04-25T11:27:30Z"},
{"Line": "=>775", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.viewers.TreeViewer.getSelection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ts != null) { java.util.List<org.nimy.eclipse.editor.xml.ui.Entity> list = this.entitySelection(this.tv); if (list != null) { this.logger.debug((\"TreeSelection : \" + list)); model = ((java.util.List) (this.tv.getInput())); this.logger.debug((\"Data Model:\" + model)); for (org.nimy.eclipse.editor.xml.ui.Entity e : list) { this.logger.debug((\"Remove Result :\" + (del(e, model)))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8232/buggy-version/swt-embeded-xml-editor.src.main.java.org.nimy.eclipse.editor.xml.ui.ViewActionsManager.java", "BodyUseAPI": [], "Fixed commit": "0e64eb998f2aa65451a3aede24a17bb721f0d78c", "Url": "https://api.github.com/repos/nimysan/swtembededitor", "Date": "2014-04-12T10:41:02Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (validInput(menu, userInput)) { optionChosen = menu.selectOption(userInput); }else { java.lang.System.out.println(\"invalid option try again\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1946/buggy-version/src.com.twu.biblioteca.BibliotecaApp.java", "BodyUseAPI": ["com.twu.biblioteca.MainMenu.selectOption(java.lang.String)"], "Fixed commit": "0813e60c58c58237395de6660a1bfdddd4daca66", "Url": "https://api.github.com/repos/tam-borine/twu-biblioteca-tamborine", "Date": "2017-01-16T11:30:21Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) timer.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3621/buggy-version/Rollback.app.src.main.java.ghost.vrithika.com.rollback.Main_Rollback.java", "BodyUseAPI": [], "Fixed commit": "0cac7cdc520ef128a1e67b96f9b8268a589f6ef0", "Url": "https://api.github.com/repos/vrithikam/rollback", "Date": "2016-06-24T17:05:51Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mUri) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6115/buggy-version/library.src.main.java.com.malmstein.fenster.view.FensterVideoView.java", "BodyUseAPI": [], "Fixed commit": "e536c97368d74445398ecd40f7f9d22ca8734d58", "Url": "https://api.github.com/repos/skonb/fenster", "Date": "2016-03-26T20:21:04Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(SAOOption.FORCE_HUD.getValue())) && (!(this.mc.playerController.shouldDrawHUD()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5310/buggy-version/src.main.java.com.bluexin.saoui.SAOIngameGUI.java", "BodyUseAPI": [], "Fixed commit": "ef1bd931b931c54495c6a2cc1ea0b779ff8162f2", "Url": "https://api.github.com/repos/Bluexin/SAOUI-mirror", "Date": "2016-01-08T15:01:19Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.management.MBeanServerConnection.getMBeanInfo(javax.management.ObjectName)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isOperation(mbeanInfo, this.operationName)) { log.debug((\"We have operation: \" + (this.operationName))); operationResult = conn.invoke(on, this.operationName, parms, sig); }else { java.lang.String attributeName; if (this.operationName.substring(0, 3).equals(\"set\")) { attributeName = this.operationName.substring(3); if (isAttribute(mbeanInfo, attributeName)) { log.debug((\"We have attribute setter: \" + (this.operationName))); javax.management.Attribute attr = new javax.management.Attribute(attributeName, opArguments.get(0)); conn.setAttribute(on, attr); }else { throw new org.jboss.console.twiddle.command.CommandException((((((\"Failed to invoke \\\"\" + (this.operationName)) + \"\\\".\") + \" Attribute \\\"\") + attributeName) + \"\\\" is not existing.\")); } }else if (this.operationName.substring(0, 3).equals(\"get\")) { attributeName = this.operationName.substring(3); if (isAttribute(mbeanInfo, attributeName)) { log.debug((\"We have attribute getter: \" + (this.operationName))); operationResult = conn.getAttribute(on, this.operationName.substring(3)); }else { throw new org.jboss.console.twiddle.command.CommandException((((((\"Failed to invoke \\\"\" + (this.operationName)) + \"\\\".\") + \" Attribute \\\"\") + attributeName) + \"\\\" is not existing.\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/9136/buggy-version/tools.twiddle.cli.src.main.java.org.mobicents.tools.twiddle.op.AbstractOperation.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int)", "javax.management.MBeanServerConnection.getAttribute(javax.management.ObjectName,java.lang.String)", "org.mobicents.tools.twiddle.op.AbstractOperation.isAttribute(javax.management.MBeanInfo,java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "org.mobicents.tools.twiddle.op.AbstractOperation.isAttribute(javax.management.MBeanInfo,java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.substring(int)", "javax.management.MBeanServerConnection.invoke(javax.management.ObjectName,java.lang.String,java.lang.Object[],java.lang.String[])", "java.lang.String.substring(int,int)"], "Fixed commit": "083293523e9c8c9701b667abc3a004bc7c7dabd4", "Url": "https://api.github.com/repos/RestComm/jain-slee", "Date": "2017-03-02T12:12:46Z"},
{"Line": "=>711", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vcase == 3) { if (((int) (height)) == 300) { return 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7473/buggy-version/app.src.main.java.uhmanoa.droid_sch.Visualize.java", "BodyUseAPI": [], "Fixed commit": "a6bf7ef849f927809260d2d55544ff3a98e23fbf", "Url": "https://api.github.com/repos/1andyn/droid_sch", "Date": "2015-04-21T05:15:53Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((elementName.indexOf(firstChar)) == (-1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7554/buggy-version/Splurth.src.main.java.org.deb.App.java", "BodyUseAPI": [], "Fixed commit": "f5991f62f36a0c98fd2a77df5bc5dcbe0e1a1b23", "Url": "https://api.github.com/repos/debmalya/SplurthPeriodicTable", "Date": "2016-08-08T16:05:41Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((maxHeap.getSize()) > ((minHeap.getSize()) + 1)) { minHeap.add(maxHeap.delete()); }else if ((minHeap.getSize()) > ((maxHeap.getSize()) + 1)) { maxHeap.add(minHeap.delete()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5805/buggy-version/14Median.RunningMedian.java", "BodyUseAPI": ["MyHeap.delete()", "MyHeap.getSize()", "MyHeap<java.lang.Integer>.getSize()", "MyHeap.add(maxHeap.delete())", "MyHeap<java.lang.Integer>.add(minHeap.delete())", "MyHeap<java.lang.Integer>.delete()"], "Fixed commit": "5b5d937ebc7d035ae3eab48bbd4eac9abb501cf4", "Url": "https://api.github.com/repos/Glitchmanbeta/MKS22X-HW", "Date": "2016-05-11T02:59:16Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((discount) == 0.0) return 1.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7905/buggy-version/src.com.thoughtworks.pos.domains.Item.java", "BodyUseAPI": [], "Fixed commit": "40d1939054a379e86537939493363ec8f6e05114", "Url": "https://api.github.com/repos/BJUT-2016-YU-LT/Pos-seed-03", "Date": "2015-01-02T11:04:11Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.as.server.deployment.DeploymentPhaseContext.getDeploymentUnit()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.jboss.as.webservices.deployers.WSModelDeploymentProcessor.isWebServiceDeployment(unit)) { org.jboss.as.webservices.config.ServerConfigImpl config = ((org.jboss.as.webservices.config.ServerConfigImpl) (phaseContext.getServiceRegistry().getRequiredService(WSServices.CONFIG_SERVICE).getValue())); config.incrementWSDeploymentCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5353/buggy-version/webservices.server-integration.src.main.java.org.jboss.as.webservices.deployers.WSModelDeploymentProcessor.java", "BodyUseAPI": [], "Fixed commit": "01a0854a08208e8968798d34e72624682515b83a", "Url": "https://api.github.com/repos/asoldano/wildfly", "Date": "2014-01-31T17:49:32Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.jboss.as.webservices.deployers.WSModelDeploymentProcessor.isWebServiceDeployment(context)) { org.jboss.as.webservices.config.ServerConfigImpl config = ((org.jboss.as.webservices.config.ServerConfigImpl) (context.getServiceRegistry().getRequiredService(WSServices.CONFIG_SERVICE).getValue())); config.decrementWSDeploymentCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5353/buggy-version/webservices.server-integration.src.main.java.org.jboss.as.webservices.deployers.WSModelDeploymentProcessor.java", "BodyUseAPI": ["org.jboss.as.server.deployment.DeploymentUnit.getServiceRegistry()", "context.getServiceRegistry().getRequiredService(WSServices.CONFIG_SERVICE).getValue()", "context.getServiceRegistry().getRequiredService(WSServices.CONFIG_SERVICE)"], "Fixed commit": "01a0854a08208e8968798d34e72624682515b83a", "Url": "https://api.github.com/repos/asoldano/wildfly", "Date": "2014-01-31T17:49:32Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (levelController.levelIsCompleted(circuitController.circuit)) { scenarioCompleted(); }else if (run) { giveNegativeFeedback(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8667/buggy-version/app.src.main.java.com.edulectronics.tinycircuit.Views.CircuitActivity.java", "BodyUseAPI": [], "Fixed commit": "2464c353b1c03e1770d53569133c605e012c0ebd", "Url": "https://api.github.com/repos/wzwietering/IntroductieProject", "Date": "2017-01-19T20:19:34Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (aliasIndex != (-1)) { username = login.substring(0, login.indexOf('@')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7800/buggy-version/uwandroid.src.main.java.com.amgems.uwschedule.ui.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "b4d49b2c1c3caebd047d7c267f520cd442825024", "Url": "https://api.github.com/repos/xamgems/UWSchedule", "Date": "2014-04-02T00:13:16Z"},
{"Line": "=>763", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.griefcraft.cache.ProtectionCache.getProtection(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((protection != null) && ((id) == (protection.getId()))) { cache.remove(cacheKey); }else { cache.removeNull(cacheKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8263/buggy-version/src.main.java.com.griefcraft.model.Protection.java", "BodyUseAPI": [], "Fixed commit": "66d7d2fa92ce9353f26ddff99194cc4342218696", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2012-03-28T11:24:48Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.openmeetings.util.OmFileHelper.getPersistence(org.apache.openmeetings.util.ConnectionProperties.DbType)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(conf.exists())) && (type == null)) { return props; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3802/buggy-version/openmeetings-web.src.main.java.org.apache.openmeetings.web.pages.install.InstallWizard.java", "BodyUseAPI": [], "Fixed commit": "4393fb1d8e305e29d6a7e3c177b072fc12dbff53", "Url": "https://api.github.com/repos/apache/openmeetings", "Date": "2017-10-05T01:12:00Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (action.equalsIgnoreCase(\"sessionInvalidate\")) { javax.servlet.http.HttpSession session = request.getSession(); session.invalidate(); int numberOfTimesPageAccessedSoFar = com.steven.hicks.TechHandling.TechLogic.getSessionAccessAcount(session, request); request.setAttribute(\"accessCount\", (numberOfTimesPageAccessedSoFar + \"\")); javax.servlet.RequestDispatcher dispatcher = getServletContext().getRequestDispatcher(\"/techPractice/sessionPractice.jsp\"); dispatcher.forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8282/buggy-version/src.main.java.com.steven.hicks.TechHandling.TechHandler.java", "BodyUseAPI": [], "Fixed commit": "bed65927e9d123261318d8d57bae4a36c30bdfba", "Url": "https://api.github.com/repos/shicks255/resumeSite", "Date": "2017-03-08T19:15:51Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reborncore.common.util.OreUtil.doesOreExistAndValid(\"stoneBasalt\")) { net.minecraft.item.ItemStack marbleStack = techreborn.init.ModRecipes.getOre(\"stoneBasalt\"); marbleStack.setCount(1); reborncore.api.recipe.RecipeHandler.addRecipe(new techreborn.init.GrinderRecipe(marbleStack, techreborn.init.ItemDusts.getDustByName(\"basalt\"), 120, 10)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2072/buggy-version/src.main.java.techreborn.init.ModRecipes.java", "BodyUseAPI": [], "Fixed commit": "1ebce46413b44cf84bb1346acb5c7cb9cf03120e", "Url": "https://api.github.com/repos/drcrazy/TechReborn", "Date": "2017-08-01T17:28:06Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reborncore.common.util.OreUtil.doesOreExistAndValid(\"stoneMarble\")) { net.minecraft.item.ItemStack marbleStack = techreborn.init.ModRecipes.getOre(\"stoneMarble\"); marbleStack.setCount(1); reborncore.api.recipe.RecipeHandler.addRecipe(new techreborn.init.GrinderRecipe(marbleStack, techreborn.init.ItemDusts.getDustByName(\"marble\"), 120, 10)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2072/buggy-version/src.main.java.techreborn.init.ModRecipes.java", "BodyUseAPI": [], "Fixed commit": "1ebce46413b44cf84bb1346acb5c7cb9cf03120e", "Url": "https://api.github.com/repos/drcrazy/TechReborn", "Date": "2017-08-01T17:28:06Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(allPlayers.contains(p))) { allPlayers.add(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7574/buggy-version/src.CardsAgainstHumanity.java", "BodyUseAPI": ["java.util.HashSet<Player>.add(Player)"], "Fixed commit": "8cbc4a676054c21d8898783c643f6c272556622c", "Url": "https://api.github.com/repos/Eviltechie/CAHbot", "Date": "2012-07-12T00:20:01Z"},
{"Line": "=>747", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mMessageFormat) != (com.fsck.k9.Account.MessageFormat.TEXT)) && ((mQuotedTextBar.getVisibility()) == (android.view.View.VISIBLE))) { mMessageFormat = com.fsck.k9.Account.MessageFormat.TEXT; try { populateUIWithQuotedMessage(); } catch (com.fsck.k9.activity.MessagingException e) { deleteQuotedText(); android.util.Log.e(K9.LOG_TAG, \"Could not re-process source message; deleting quoted text to be safe.\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7019/buggy-version/src.com.fsck.k9.activity.MessageCompose.java", "BodyUseAPI": [], "Fixed commit": "f7a64d0ce1f0b28ca6840c488550a4725b7db63a", "Url": "https://api.github.com/repos/aatdark/k-9", "Date": "2011-04-29T02:45:56Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((status.equals(Status.FETCHED)) || (status.equals(Status.REDIRECTION))) { metadata.remove(Constants.STATUS_ERROR_CAUSE); metadata.remove(Constants.STATUS_ERROR_MESSAGE); metadata.remove(Constants.STATUS_ERROR_SOURCE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4042/buggy-version/core.src.main.java.com.digitalpebble.stormcrawler.persistence.AbstractStatusUpdaterBolt.java", "BodyUseAPI": [], "Fixed commit": "4a8d31a246c6a32244f292b974848b2c9a81db27", "Url": "https://api.github.com/repos/DigitalPebble/storm-crawler", "Date": "2017-01-26T15:04:50Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((validateQuery == null) || ((validateQuery.length()) == 0)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6621/buggy-version/src.main.java.com.alibaba.druid.pool.vendor.OracleValidConnectionChecker.java", "BodyUseAPI": [], "Fixed commit": "89093deb758b4f8c6c9b6cbcfb855078e7d7c181", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2016-11-25T12:58:26Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (asm) { for (java.lang.reflect.Field field : clazz.getDeclaredFields()) { com.alibaba.fastjson.annotation.JSONField annotation = field.getAnnotation(com.alibaba.fastjson.annotation.JSONField.class); if ((annotation != null) && (!(com.alibaba.fastjson.util.ASMUtils.checkName(annotation.name())))) { asm = false; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7082/buggy-version/src.main.java.com.alibaba.fastjson.serializer.SerializeConfig.java", "BodyUseAPI": [], "Fixed commit": "19e0ede61830b76df1b529f1951f41ae5a4b2572", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2015-08-19T00:10:36Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clazz.getDeclaredFields().length) > 256) { asm = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7082/buggy-version/src.main.java.com.alibaba.fastjson.serializer.SerializeConfig.java", "BodyUseAPI": [], "Fixed commit": "19e0ede61830b76df1b529f1951f41ae5a4b2572", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2015-08-19T00:10:36Z"},
{"Line": "=>1900", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isShepherd) { java.util.ArrayList<java.lang.String> holdingNodes = new java.util.ArrayList<java.lang.String>(); holdingNodes.add(formatNodeIdentifierData()); networkFiles.put(fm.fileName, holdingNodes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8258/buggy-version/src.main.java.com.rkwon.app.CMNode.java", "BodyUseAPI": [], "Fixed commit": "5aeb475d34eb1337d07e2a3b6b4f8d386e74dde8", "Url": "https://api.github.com/repos/rynkwn/collective-memory", "Date": "2017-12-13T16:46:32Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["transferDataCorrection.find().add(com.qcadoo.model.api.search.SearchRestrictions.eq(\"stockAreas.id\", stockAreasId)).add(com.qcadoo.model.api.search.SearchRestrictions.eq(\"product.id\", productId)).addOrder(com.qcadoo.model.api.search.SearchOrders.desc(\"stockCorrectionDate\")).setMaxResults(1).uniqueResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (resultDataCorrection != null) { lastCorrectionDate = ((java.util.Date) (resultDataCorrection.getField(\"stockCorrectionDate\"))); countProduct = ((java.math.BigDecimal) (resultDataCorrection.getField(\"found\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8671/buggy-version/mes-plugins.mes-plugins-material-flow.src.main.java.com.qcadoo.mes.materialFlow.MaterialFlowService.java", "BodyUseAPI": ["com.qcadoo.model.api.Entity.getField(java.lang.String)", "com.qcadoo.model.api.Entity.getField(java.lang.String)"], "Fixed commit": "597d6c08de69655518bda15c791cf3a8c602348b", "Url": "https://api.github.com/repos/qcadoo/mes", "Date": "2011-10-04T18:02:19Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentRoom.getShop()) != null) { currentRoom.getShop().enter(hero); }else { java.lang.System.out.println(\"There isn't a shop here.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/786/buggy-version/Game.java", "BodyUseAPI": ["currentRoom.getShop().enter(textrpg.Player)", "textrpg.Room.getShop()"], "Fixed commit": "283ff3d3c9b6c32c29b198b661c82fa8feae8a6f", "Url": "https://api.github.com/repos/TomaQ/TextRPG", "Date": "2014-05-05T04:52:13Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.undertow.servlet.spec.ServletInputStreamImpl.read(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (read == (-1)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4061/buggy-version/servlet.src.main.java.io.undertow.servlet.spec.ServletInputStreamImpl.java", "BodyUseAPI": [], "Fixed commit": "389fb6ed3bcc026e28d617367e3d526de8290d40", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2013-04-04T03:44:01Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.undertow.io.UndertowInputStream.read(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (read == (-1)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4061/buggy-version/core.src.main.java.io.undertow.io.UndertowInputStream.java", "BodyUseAPI": [], "Fixed commit": "389fb6ed3bcc026e28d617367e3d526de8290d40", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2013-04-04T03:44:01Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loci.common.IniList.getTable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (microscopeTable != null) { java.lang.String objective = microscopeTable.get(\"Objective\"); int space = objective.indexOf(\" \"); if (space != (-1)) { magnification = new java.lang.Double(objective.substring(0, (space - 1))); immersion = objective.substring((space + 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7259/buggy-version/components.formats-gpl.src.loci.formats.in.SimplePCITiffReader.java", "BodyUseAPI": ["loci.common.IniTable.get(java.lang.String)"], "Fixed commit": "cfe449480901db2de17f4ba6b87ddf44583a6a41", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-25T02:48:47Z"},
{"Line": "=>1328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tracer.isVbl()) { (flashToggle)++; if ((textMod) < 2) textMod = (((flashToggle) & 16) != 0) ? 1 : 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7247/buggy-version/src.emulator.io.display.DisplayIIe.java", "BodyUseAPI": [], "Fixed commit": "adf57912240f06b81c52b2c917ed99e24c6a0282", "Url": "https://api.github.com/repos/cursorcorner/ever2e-jvm", "Date": "2015-07-03T00:57:08Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(rowProperties.propagateQueryResultSet())) { statement.executeBatch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/809/buggy-version/components.components-snowflake.src.main.java.org.talend.components.snowflake.runtime.SnowflakeRowWriter.java", "BodyUseAPI": [], "Fixed commit": "81af2507ad644bb64a0bb1a170caabb8cb74f9a5", "Url": "https://api.github.com/repos/Talend/components", "Date": "2017-09-06T07:44:29Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(rowProperties.usePreparedStatement())) { statement.executeBatch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/809/buggy-version/components.components-snowflake.src.main.java.org.talend.components.snowflake.runtime.SnowflakeRowWriter.java", "BodyUseAPI": [], "Fixed commit": "81af2507ad644bb64a0bb1a170caabb8cb74f9a5", "Url": "https://api.github.com/repos/Talend/components", "Date": "2017-09-06T07:44:29Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataSnapshot.getValue()) != null) { for (com.google.firebase.database.DataSnapshot postSnapshot : dataSnapshot.getChildren()) { com.exemple.android.cookbook.entity.CategoryRecipes categoryRecipes = postSnapshot.getValue(com.exemple.android.cookbook.entity.CategoryRecipes.class); mCategory.add(categoryRecipes); mOnUserCategoryRecipe.OnGet(mCategory); } }else { mOnUserCategoryRecipe.OnGet(mCategory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8204/buggy-version/app.src.main.java.com.exemple.android.cookbook.helpers.FirebaseHelper.java", "BodyUseAPI": ["com.google.firebase.database.DataSnapshot.getChildren()"], "Fixed commit": "fb5cd92ab06a40dbf9eb34731dfd5b89e4eed617", "Url": "https://api.github.com/repos/IraSmalko/Cookbook", "Date": "2017-03-03T11:54:25Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.coremedia.cap.content.Version.getContainingContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(contentToBeDeleted.contains(referrer))) { getOut().warn(((((\"version \" + (referringVersion.getId())) + \" is only version of its content. \") + \"Will have to delete content instead of kill version. \") + \"You may need to run the tool again.\")); contentToBeDeleted.add(referrer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4997/buggy-version/cm-tools-lib.src.main.java.de.ahoiit.cm.tools.zombiekiller.Zombiekiller.java", "BodyUseAPI": ["java.util.Set<com.coremedia.cap.content.Content>.add(com.coremedia.cap.content.Content)"], "Fixed commit": "a2061998262ea0162b3eddfd8fee45d105fe2c42", "Url": "https://api.github.com/repos/Ahoi-IT/coremedia-tools", "Date": "2015-03-16T22:44:04Z"},
{"Line": "=>6482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.beans.admin.Admin.getComponentInst(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (component != null) { if (component.isPublic()) { return java.util.Arrays.asList(getAllUsersIds()); }else { java.util.List<com.stratelia.webactiv.beans.admin.ProfileInst> profiles = component.getAllProfilesInst(); for (com.stratelia.webactiv.beans.admin.ProfileInst profile : profiles) { userIds.addAll(getUserIdsForComponentProfile(profile)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/171/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.beans.admin.Admin.java", "BodyUseAPI": ["com.stratelia.webactiv.beans.admin.ComponentInst.isPublic()", "com.stratelia.webactiv.beans.admin.ComponentInst.getAllProfilesInst()"], "Fixed commit": "2a6532e57af425401de9f7c8d0999bb9cc120905", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2011-03-11T16:53:25Z"},
{"Line": "=>6519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.beans.admin.Admin.getComponentInst(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (component != null) { if (component.isPublic()) { componentId = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/171/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.beans.admin.Admin.java", "BodyUseAPI": ["com.stratelia.webactiv.beans.admin.ComponentInst.isPublic()"], "Fixed commit": "2a6532e57af425401de9f7c8d0999bb9cc120905", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2011-03-11T16:53:25Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<byte[], byte[]>.get(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (bytes == null) { values.add(null); }else { values.add(new java.lang.String(bytes)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2460/buggy-version/src.main.java.storm.trident.redis.RedisState.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "bf076d25fdd0316775af72e517157c165c72c31f", "Url": "https://api.github.com/repos/dkatten/trident-redis", "Date": "2014-08-07T20:38:03Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (force) session = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7416/buggy-version/src.main.java.org.quantumbadger.redreader.listingcontrollers.PostListingController.java", "BodyUseAPI": [], "Fixed commit": "2bfd439ac9158f6f5178b52e739b459088478837", "Url": "https://api.github.com/repos/QuantumBadger/RedReader", "Date": "2013-04-07T15:30:32Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (force) session = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7416/buggy-version/src.main.java.org.quantumbadger.redreader.listingcontrollers.CommentListingController.java", "BodyUseAPI": [], "Fixed commit": "2bfd439ac9158f6f5178b52e739b459088478837", "Url": "https://api.github.com/repos/QuantumBadger/RedReader", "Date": "2013-04-07T15:30:32Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.g414.st9.proto.service.store.JDBIKeyValueStorage.7.getObjectBytes(com.g414.st9.proto.service.store.Key,boolean,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (originalBytes == null) { return javax.ws.rs.core.Response.status(Status.NOT_FOUND).entity(\"\").build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5478/buggy-version/src.main.java.com.g414.st9.proto.service.store.JDBIKeyValueStorage.java", "BodyUseAPI": [], "Fixed commit": "9c6acfa1cd086a9e1ccaf00470b64f8faa457f04", "Url": "https://api.github.com/repos/sunnygleason/st9-proto-service", "Date": "2011-12-05T14:48:48Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((journeyQuery.transportModes) == null) { journeyQuery.transportModes = com.markupartist.sthlmtraveling.provider.TransportMode.getDefaultTransportModes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2781/buggy-version/src.com.markupartist.sthlmtraveling.FavoritesActivity.java", "BodyUseAPI": [], "Fixed commit": "e291c15c6cd1228ddf8e67599209dbab52e8b009", "Url": "https://api.github.com/repos/johannilsson/sthlmtraveling", "Date": "2011-07-07T18:56:20Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config.contains(\"rank\")) { adminList = rank.getAdminList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2634/buggy-version/src.com.Shadersoft.UniverseMG.UniverseMG.java", "BodyUseAPI": [], "Fixed commit": "1944344632a9a041cfc7e538bcbd41d82be0050d", "Url": "https://api.github.com/repos/Shadersoft/UniverseMG", "Date": "2016-08-25T20:16:52Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isWholeCollection())) mDeckId = col.getDecks().selected(); else mDeckId = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7692/buggy-version/AnkiDroid.src.main.java.com.ichi2.anki.Statistics.java", "BodyUseAPI": [], "Fixed commit": "3dd49a75cef5992147cb0f852faad12587ba724f", "Url": "https://api.github.com/repos/bexsadirov/Anki-Android", "Date": "2017-03-20T10:49:35Z"},
{"Line": "=>682", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isWholeCollection())) { mDeckId = col.getDecks().selected(); }else { mDeckId = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7692/buggy-version/AnkiDroid.src.main.java.com.ichi2.anki.Statistics.java", "BodyUseAPI": [], "Fixed commit": "3dd49a75cef5992147cb0f852faad12587ba724f", "Url": "https://api.github.com/repos/bexsadirov/Anki-Android", "Date": "2017-03-20T10:49:35Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((testCaseName.contains(\"text.Rendering.tests.drawString\")) && (osName.toLowerCase().contains(\"linux\"))) return 0.18;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7699/buggy-version/src.share.demo.java2d.J2DBench.src.j2dbench.report.TCChartReporter.java", "BodyUseAPI": [], "Fixed commit": "33930d2eeff52ef35324fcd778ed45552a213a11", "Url": "https://api.github.com/repos/JetBrains/jdk8u_jdk", "Date": "2017-03-29T03:30:08Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((data != null) && ((data.length()) > 0)) { return battleships.message.Message.toMessage(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5250/buggy-version/Client.src.battleships.network.Socket.java", "BodyUseAPI": ["battleships.message.Message.toMessage(java.lang.String)"], "Fixed commit": "fa6d6ad6eb61a7e107d69b4fc8f2ae7cd8bbab0b", "Url": "https://api.github.com/repos/uipo/Battleships", "Date": "2013-05-30T08:25:02Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((data != null) && ((data.length()) > 0)) { return battleships.message.Message.toMessage(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5250/buggy-version/Server.src.battleships.network.Socket.java", "BodyUseAPI": ["battleships.message.Message.toMessage(java.lang.String)"], "Fixed commit": "fa6d6ad6eb61a7e107d69b4fc8f2ae7cd8bbab0b", "Url": "https://api.github.com/repos/uipo/Battleships", "Date": "2013-05-30T08:25:02Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(projections.equals(other.getProjections()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2695/buggy-version/src.main.java.com.googlecode.gql4j.GqlQuery.java", "BodyUseAPI": [], "Fixed commit": "28ef42080b66c8e334d7f28a9701f1ea390ec4aa", "Url": "https://api.github.com/repos/andreacimino/gql4j", "Date": "2012-07-08T17:59:53Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j == 0) { p.println(sent.getTextContent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1964/buggy-version/src.main.java.uk.ac.shef.dcs.jate.util.GENIACorpusParser.java", "BodyUseAPI": [], "Fixed commit": "651f66050924aa0342cc3467b940fbcdaecc30bc", "Url": "https://api.github.com/repos/ziqizhang/jate", "Date": "2017-01-18T17:41:48Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.cmr.util.JarUtils.toPlatformIndependentPath(java.lang.Iterable<? extends java.io.File>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(copiedFiles.contains(sourceFile))) { srcOutputStream.putNextEntry(new java.util.zip.ZipEntry(sourceFile)); try { java.io.InputStream inputStream = new java.io.FileInputStream(prefixedSourceFile); try { com.redhat.ceylon.cmr.util.JarUtils.copy(inputStream, srcOutputStream); } finally { inputStream.close(); } } finally { srcOutputStream.closeEntry(); } copiedFiles.add(sourceFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5739/buggy-version/impl.src.main.java.com.redhat.ceylon.cmr.impl.SourceArchiveCreatorImpl.java", "BodyUseAPI": ["java.util.jar.JarOutputStream.putNextEntry(java.util.zip.ZipEntry)", "java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "46e6d0356c69a62f2dba14408761e978d76fb4e9", "Url": "https://api.github.com/repos/ceylon/ceylon-module-resolver", "Date": "2013-10-26T18:19:37Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model) == null) { initModel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5368/buggy-version/core.src.main.java.hivemall.topicmodel.LDAUDTF.java", "BodyUseAPI": [], "Fixed commit": "56f5c41ee90a538a2cc113eb41a4138f39c6269b", "Url": "https://api.github.com/repos/takuti/incubator-hivemall", "Date": "2017-04-18T08:26:30Z"},
{"Line": "=>596", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userTasks == null) || (userTasks.isEmpty())) { return logic.Logic.ERROR_INVALID_ARGUMENT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6000/buggy-version/src.logic.Logic.java", "BodyUseAPI": [], "Fixed commit": "377140f4f73100e3208bb73a8d9635ca4840fb66", "Url": "https://api.github.com/repos/cs2103aug2015-w10-4j/main", "Date": "2015-11-07T15:16:20Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasNext())) { throw new java.lang.IllegalStateException(\"End of stream has been reached\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6686/buggy-version/java.src.hr.fer.bioinf.minimizer.fastaparser.Parser.java", "BodyUseAPI": [], "Fixed commit": "4f13d193bc73de41479e8958de43188952b1ebfb", "Url": "https://api.github.com/repos/anniekovac/minimizers", "Date": "2017-11-05T21:22:57Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastChar) == ';') { reader.readLine(); lastChar = reader.read(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6686/buggy-version/java.src.hr.fer.bioinf.minimizer.fastaparser.Parser.java", "BodyUseAPI": [], "Fixed commit": "4f13d193bc73de41479e8958de43188952b1ebfb", "Url": "https://api.github.com/repos/anniekovac/minimizers", "Date": "2017-11-05T21:22:57Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (value > 98) { if ((blocks[x][height][z].getID()) == (Block.BlockType.BlockType_Grass.getID())) { blocks[x][(height + 1)][z] = new Block(Block.BlockType.BlockType_Pumpkin); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8237/buggy-version/CS445_FinalProject.src.Chunk.java", "BodyUseAPI": [], "Fixed commit": "5a445589a1984298860313e73f59665ed9afa528", "Url": "https://api.github.com/repos/CS445FinalAssignment/FinalProject", "Date": "2017-11-28T20:45:00Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageRegistry) == null) { imageRegistry = new org.eclipse.jface.resource.ImageRegistry(org.eclipse.swt.widgets.Display.getDefault()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8562/buggy-version/core.plugins.org.csstudio.autocomplete.ui.src.org.csstudio.autocomplete.ui.AutoCompleteUIPlugin.java", "BodyUseAPI": [], "Fixed commit": "eb7b3670c78c999db2924c676defd022f86919ef", "Url": "https://api.github.com/repos/ControlSystemStudio/cs-studio", "Date": "2013-09-26T15:34:26Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.worldObj.isRemote) { if ((net.minecraft.client.Minecraft.getMinecraft().thePlayer) == player) { int d = tagCompound.getInteger(\"d\"); if (d > 0) { if ((time % (d * 3)) == 0) { for (int i = 0; i < 3; ++i) { entity.playSound(\"note.harp\", 1, 1.2F); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3498/buggy-version/src.main.java.fiskfille.tf.item.ItemTransformiumDetector.java", "BodyUseAPI": [], "Fixed commit": "d7d61ce341fdcd9781491936835ab59acdf5732d", "Url": "https://api.github.com/repos/FiskFille/TransformersMod", "Date": "2015-02-08T11:36:22Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getLastDamageCause()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (deathCause != null) { if ((deathCause.getCause()) == (org.bukkit.event.entity.EntityDamageEvent.DamageCause.ENTITY_ATTACK)) { org.bukkit.entity.Entity entity = ((org.bukkit.event.entity.EntityDamageByEntityEvent) (deathCause)).getDamager(); if (((entity.getType().equals(EntityType.ZOMBIE)) && (info.plugmania.ijmh.Util.config(\"zombie\", null).getBoolean(\"whenzombie\"))) || (!(info.plugmania.ijmh.Util.config(\"zombie\", null).getBoolean(\"whenzombie\")))) { if (info.plugmania.ijmh.Util.pctChance(info.plugmania.ijmh.Util.config(\"zombie\", null).getInt(\"chance\"), info.plugmania.ijmh.Util.config(\"zombie\", null).getInt(\"chancemod\"))) { player.getServer().getWorld(player.getWorld().getName()).spawnEntity(player.getLocation(), EntityType.ZOMBIE); if (info.plugmania.ijmh.Util.config(\"zombie\", null).getBoolean(\"message\")) event.setDeathMessage((((player.getName()) + \" \") + (Util.language.getString(\"lan_35\")))); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5099/buggy-version/src.info.plugmania.ijmh.effects.PlayerEffects.java", "BodyUseAPI": ["org.bukkit.event.entity.EntityDamageEvent.getCause()"], "Fixed commit": "47ff5652f5d6a56500a25628410af3666b41f909", "Url": "https://api.github.com/repos/PlugMania/ijmh", "Date": "2012-10-04T07:03:28Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sortBundle) != null) && ((sortBundle.getString(com.stephenomoarukhe.android.popularmovies.ui.MainActivity.SORT_DATA_KEY)) == (getResources().getString(R.string.favorite)))) { com.stephenomoarukhe.android.popularmovies.data.MovieData[] movieData = com.stephenomoarukhe.android.popularmovies.utilities.DbUtils.getFavoriteMovies(this); gridLayoutAdapter.setMovieData(movieData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/857/buggy-version/app.src.main.java.com.stephenomoarukhe.android.popularmovies.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3ab821406637e704939d5c1b572fab3422026c8a", "Url": "https://api.github.com/repos/kyngsteev/PopularMovies-Stage-2", "Date": "2017-05-15T00:04:54Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["screen.getCube().findFrontFace()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (targetScreen >= 0) { manager.setScreen(screen.getCube().findFrontFace()); switchPerspective(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8580/buggy-version/perspective.src.com.cap4053.perspective.view.GameInputProcessor3D.java", "BodyUseAPI": [], "Fixed commit": "2b570f319c09dfc996388188021ed4c36aa1a35d", "Url": "https://api.github.com/repos/marcjmcdougall/perspective", "Date": "2013-03-31T01:34:47Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page < 1) { page = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2704/buggy-version/src.main.java.io.stallion.dataAccess.filtering.MySqlFilterChain.java", "BodyUseAPI": [], "Fixed commit": "f498bcb29b8ecfbaa8d8092e98c8e861ea669aa6", "Url": "https://api.github.com/repos/StallionCMS/stallion-core", "Date": "2016-05-29T20:13:39Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iterator == null) { return new php.runtime.memory.ArrayMemory().toConstant(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1452/buggy-version/jphp-runtime.src.php.runtime.memory.ObjectMemory.java", "BodyUseAPI": [], "Fixed commit": "d78c3cdbb4ad311c4f245b858a41aa0a28d0460c", "Url": "https://api.github.com/repos/jphp-group/jphp", "Date": "2016-09-23T15:29:03Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DynamicSchedulerExtension.debug) DynamicSchedulerExtension.printToConsole(context, (\"size of schedule: \" + (sched.schedule.size())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5522/buggy-version/src.DynamicSchedulerExtension.java", "BodyUseAPI": [], "Fixed commit": "472c98e47802af023429a58221d25dad7db316c0", "Url": "https://api.github.com/repos/colinsheppard/Dynamic-Scheduler-Extension", "Date": "2012-06-23T17:05:34Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["armor.armor.getSpellFailure()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (randNumber > spellFailure) { send(spell.castMsg.replace(\"&target\", player.getTarget().getName()), client); for (final mud.Effect e : spell.effects) { if (target instanceof mud.objects.Player) { parent.applyEffect(((mud.objects.Player) (target)), e); }else { parent.applyEffect(target, e); } } if (target instanceof mud.objects.Player) { parent.addMessage(new mud.utils.Message(player, ((((player.getName()) + \" cast \") + (spell.name)) + \" on you.\"), ((mud.objects.Player) (target)))); } }else { send(\"A bit of magical energy sparks off you briefly, then fizzles out. Drat!\", client); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3275/buggy-version/MUDServer.src.mud.commands.CastCommand.java", "BodyUseAPI": [], "Fixed commit": "74d956ffed22bdd19b168b6c2586136518d2228a", "Url": "https://api.github.com/repos/jnharton/mud-server", "Date": "2013-02-20T15:05:56Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ro.redeul.google.go.inspection.GoPsiType.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resolvedTypeName.startsWith(\"float\")) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3888/buggy-version/src.ro.redeul.google.go.inspection.FunctionCallInspection.java", "BodyUseAPI": [], "Fixed commit": "b83efc567802fa0bbfb1a539196b087c04e07cd7", "Url": "https://api.github.com/repos/coocood/google-go-lang-idea-plugin", "Date": "2013-12-17T19:30:17Z"},
{"Line": "=>1806", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (answer3B.isSelected()) { javax.swing.JOptionPane.showMessageDialog(this, \"Correct!\", \"Correct\", javax.swing.JOptionPane.PLAIN_MESSAGE); game.addPoints(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2391/buggy-version/src.nz.ac.aut.ense701.gui.BonusQuizUI3.java", "BodyUseAPI": [], "Fixed commit": "bb30e6cc0579d5658a8f0cd13d256f67c492b04b", "Url": "https://api.github.com/repos/ChoiJeff/KiwiIsland", "Date": "2017-06-04T06:24:27Z"},
{"Line": "=>1920", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (game.getFacts().get(((iterator) - 1)).equals(\"Tuatara are New Zealand\u2019s largest reptile, with adult males measuring up to about a half metre in length and weighing up to 1.5 kg when fully grown.\")) { if (((answer16A.isSelected()) || (answer16B.isSelected())) || (answer16D.isSelected())) { javax.swing.JOptionPane.showMessageDialog(this, \"Your answer is wrong\", \"Wrong\", javax.swing.JOptionPane.ERROR_MESSAGE); }else if (answer16C.isSelected()) { javax.swing.JOptionPane.showMessageDialog(this, \"Correct!\", \"Correct\", javax.swing.JOptionPane.PLAIN_MESSAGE); game.addPoints(); } showCards(); }else if (game.getFacts().get(((iterator) - 1)).equals(\"The k\u0101k\u0101p\u014d (night parrot) is one of New Zealand\u2019s unique treasures with fewer than 160 known surviving birds.\")) { if (((answer17A.isSelected()) || (answer17C.isSelected())) || (answer17D.isSelected())) { javax.swing.JOptionPane.showMessageDialog(this, \"Your answer is wrong\", \"Wrong\", javax.swing.JOptionPane.ERROR_MESSAGE); }else if (answer17B.isSelected()) { javax.swing.JOptionPane.showMessageDialog(this, \"Correct!\", \"Correct\", javax.swing.JOptionPane.PLAIN_MESSAGE); game.addPoints(); } showCards(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2391/buggy-version/src.nz.ac.aut.ense701.gui.BonusQuizUI3.java", "BodyUseAPI": ["nz.ac.aut.ense701.gameModel.Game.addPoints()", "game.getFacts().get(int)", "nz.ac.aut.ense701.gameModel.Game.addPoints()", "nz.ac.aut.ense701.gameModel.Game.getFacts()", "game.getFacts().get(((iterator) - 1)).equals(java.lang.String)"], "Fixed commit": "bb30e6cc0579d5658a8f0cd13d256f67c492b04b", "Url": "https://api.github.com/repos/ChoiJeff/KiwiIsland", "Date": "2017-06-04T06:24:27Z"},
{"Line": "=>1788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (answer1C.isSelected()) { javax.swing.JOptionPane.showMessageDialog(this, \"Correct!\", \"Correct\", javax.swing.JOptionPane.PLAIN_MESSAGE); game.addPoints(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2391/buggy-version/src.nz.ac.aut.ense701.gui.BonusQuizUI3.java", "BodyUseAPI": [], "Fixed commit": "bb30e6cc0579d5658a8f0cd13d256f67c492b04b", "Url": "https://api.github.com/repos/ChoiJeff/KiwiIsland", "Date": "2017-06-04T06:24:27Z"},
{"Line": "=>1858", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((answer9B.isSelected()) || (answer9C.isSelected())) || (answer9D.isSelected())) { javax.swing.JOptionPane.showMessageDialog(this, \"Your answer is wrong\", \"Wrong\", javax.swing.JOptionPane.ERROR_MESSAGE); }else if (answer9A.isSelected()) { javax.swing.JOptionPane.showMessageDialog(this, \"Correct!\", \"Correct\", javax.swing.JOptionPane.PLAIN_MESSAGE); game.addPoints(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2391/buggy-version/src.nz.ac.aut.ense701.gui.BonusQuizUI3.java", "BodyUseAPI": [], "Fixed commit": "bb30e6cc0579d5658a8f0cd13d256f67c492b04b", "Url": "https://api.github.com/repos/ChoiJeff/KiwiIsland", "Date": "2017-06-04T06:24:27Z"},
{"Line": "=>1831", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((answer6B.isSelected()) || (answer6C.isSelected())) || (answer6D.isSelected())) { javax.swing.JOptionPane.showMessageDialog(this, \"Your answer is wrong\", \"Wrong\", javax.swing.JOptionPane.ERROR_MESSAGE); }else if (answer6A.isSelected()) { javax.swing.JOptionPane.showMessageDialog(this, \"Correct!\", \"Correct\", javax.swing.JOptionPane.PLAIN_MESSAGE); game.addPoints(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2391/buggy-version/src.nz.ac.aut.ense701.gui.BonusQuizUI3.java", "BodyUseAPI": [], "Fixed commit": "bb30e6cc0579d5658a8f0cd13d256f67c492b04b", "Url": "https://api.github.com/repos/ChoiJeff/KiwiIsland", "Date": "2017-06-04T06:24:27Z"},
{"Line": "=>1894", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((answer13A.isSelected()) || (answer13C.isSelected())) || (answer13D.isSelected())) { javax.swing.JOptionPane.showMessageDialog(this, \"Your answer is wrong\", \"Wrong\", javax.swing.JOptionPane.ERROR_MESSAGE); }else if (answer13B.isSelected()) { javax.swing.JOptionPane.showMessageDialog(this, \"Correct!\", \"Correct\", javax.swing.JOptionPane.PLAIN_MESSAGE); game.addPoints(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2391/buggy-version/src.nz.ac.aut.ense701.gui.BonusQuizUI3.java", "BodyUseAPI": [], "Fixed commit": "bb30e6cc0579d5658a8f0cd13d256f67c492b04b", "Url": "https://api.github.com/repos/ChoiJeff/KiwiIsland", "Date": "2017-06-04T06:24:27Z"},
{"Line": "=>1876", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((answer11B.isSelected()) || (answer11C.isSelected())) || (answer11D.isSelected())) { javax.swing.JOptionPane.showMessageDialog(this, \"Your answer is wrong\", \"Wrong\", javax.swing.JOptionPane.ERROR_MESSAGE); }else if (answer11A.isSelected()) { javax.swing.JOptionPane.showMessageDialog(this, \"Correct!\", \"Correct\", javax.swing.JOptionPane.PLAIN_MESSAGE); game.addPoints(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2391/buggy-version/src.nz.ac.aut.ense701.gui.BonusQuizUI3.java", "BodyUseAPI": [], "Fixed commit": "bb30e6cc0579d5658a8f0cd13d256f67c492b04b", "Url": "https://api.github.com/repos/ChoiJeff/KiwiIsland", "Date": "2017-06-04T06:24:27Z"},
{"Line": "=>1923", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (answer16C.isSelected()) { javax.swing.JOptionPane.showMessageDialog(this, \"Correct!\", \"Correct\", javax.swing.JOptionPane.PLAIN_MESSAGE); game.addPoints(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2391/buggy-version/src.nz.ac.aut.ense701.gui.BonusQuizUI3.java", "BodyUseAPI": [], "Fixed commit": "bb30e6cc0579d5658a8f0cd13d256f67c492b04b", "Url": "https://api.github.com/repos/ChoiJeff/KiwiIsland", "Date": "2017-06-04T06:24:27Z"},
{"Line": "=>1824", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (answer5D.isSelected()) { javax.swing.JOptionPane.showMessageDialog(this, \"Correct!\", \"Correct\", javax.swing.JOptionPane.PLAIN_MESSAGE); game.addPoints(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2391/buggy-version/src.nz.ac.aut.ense701.gui.BonusQuizUI3.java", "BodyUseAPI": [], "Fixed commit": "bb30e6cc0579d5658a8f0cd13d256f67c492b04b", "Url": "https://api.github.com/repos/ChoiJeff/KiwiIsland", "Date": "2017-06-04T06:24:27Z"},
{"Line": "=>1815", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (answer4B.isSelected()) { javax.swing.JOptionPane.showMessageDialog(this, \"Correct!\", \"Correct\", javax.swing.JOptionPane.PLAIN_MESSAGE); game.addPoints(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2391/buggy-version/src.nz.ac.aut.ense701.gui.BonusQuizUI3.java", "BodyUseAPI": [], "Fixed commit": "bb30e6cc0579d5658a8f0cd13d256f67c492b04b", "Url": "https://api.github.com/repos/ChoiJeff/KiwiIsland", "Date": "2017-06-04T06:24:27Z"},
{"Line": "=>1885", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((answer12B.isSelected()) || (answer12C.isSelected())) || (answer12D.isSelected())) { javax.swing.JOptionPane.showMessageDialog(this, \"Your answer is wrong\", \"Wrong\", javax.swing.JOptionPane.ERROR_MESSAGE); }else if (answer12A.isSelected()) { javax.swing.JOptionPane.showMessageDialog(this, \"Correct!\", \"Correct\", javax.swing.JOptionPane.PLAIN_MESSAGE); game.addPoints(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2391/buggy-version/src.nz.ac.aut.ense701.gui.BonusQuizUI3.java", "BodyUseAPI": [], "Fixed commit": "bb30e6cc0579d5658a8f0cd13d256f67c492b04b", "Url": "https://api.github.com/repos/ChoiJeff/KiwiIsland", "Date": "2017-06-04T06:24:27Z"},
{"Line": "=>1840", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((answer7A.isSelected()) || (answer7C.isSelected())) || (answer7D.isSelected())) { javax.swing.JOptionPane.showMessageDialog(this, \"Your answer is wrong\", \"Wrong\", javax.swing.JOptionPane.ERROR_MESSAGE); }else if (answer7B.isSelected()) { javax.swing.JOptionPane.showMessageDialog(this, \"Correct!\", \"Correct\", javax.swing.JOptionPane.PLAIN_MESSAGE); game.addPoints(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2391/buggy-version/src.nz.ac.aut.ense701.gui.BonusQuizUI3.java", "BodyUseAPI": [], "Fixed commit": "bb30e6cc0579d5658a8f0cd13d256f67c492b04b", "Url": "https://api.github.com/repos/ChoiJeff/KiwiIsland", "Date": "2017-06-04T06:24:27Z"},
{"Line": "=>1912", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((answer15A.isSelected()) || (answer15C.isSelected())) || (answer15D.isSelected())) { javax.swing.JOptionPane.showMessageDialog(this, \"Your answer is wrong\", \"Wrong\", javax.swing.JOptionPane.ERROR_MESSAGE); }else if (answer15B.isSelected()) { javax.swing.JOptionPane.showMessageDialog(this, \"Correct!\", \"Correct\", javax.swing.JOptionPane.PLAIN_MESSAGE); game.addPoints(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2391/buggy-version/src.nz.ac.aut.ense701.gui.BonusQuizUI3.java", "BodyUseAPI": [], "Fixed commit": "bb30e6cc0579d5658a8f0cd13d256f67c492b04b", "Url": "https://api.github.com/repos/ChoiJeff/KiwiIsland", "Date": "2017-06-04T06:24:27Z"},
{"Line": "=>1849", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((answer8B.isSelected()) || (answer8C.isSelected())) || (answer8D.isSelected())) { javax.swing.JOptionPane.showMessageDialog(this, \"Your answer is wrong\", \"Wrong\", javax.swing.JOptionPane.ERROR_MESSAGE); }else if (answer8A.isSelected()) { javax.swing.JOptionPane.showMessageDialog(this, \"Correct!\", \"Correct\", javax.swing.JOptionPane.PLAIN_MESSAGE); game.addPoints(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2391/buggy-version/src.nz.ac.aut.ense701.gui.BonusQuizUI3.java", "BodyUseAPI": [], "Fixed commit": "bb30e6cc0579d5658a8f0cd13d256f67c492b04b", "Url": "https://api.github.com/repos/ChoiJeff/KiwiIsland", "Date": "2017-06-04T06:24:27Z"},
{"Line": "=>1867", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((answer10A.isSelected()) || (answer10B.isSelected())) || (answer10D.isSelected())) { javax.swing.JOptionPane.showMessageDialog(this, \"Your answer is wrong\", \"Wrong\", javax.swing.JOptionPane.ERROR_MESSAGE); }else if (answer10C.isSelected()) { javax.swing.JOptionPane.showMessageDialog(this, \"Correct!\", \"Correct\", javax.swing.JOptionPane.PLAIN_MESSAGE); game.addPoints(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2391/buggy-version/src.nz.ac.aut.ense701.gui.BonusQuizUI3.java", "BodyUseAPI": [], "Fixed commit": "bb30e6cc0579d5658a8f0cd13d256f67c492b04b", "Url": "https://api.github.com/repos/ChoiJeff/KiwiIsland", "Date": "2017-06-04T06:24:27Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getTv().hasCapability(WebAppLauncher.Message_Send_JSON)) sendJSONButton.setEnabled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8732/buggy-version/src.com.connectsdk.sampler.fragments.WebAppFragment.java", "BodyUseAPI": [], "Fixed commit": "041e88fcff2214c03a957a0e829cd0044d28eaba", "Url": "https://api.github.com/repos/ConnectSDK/Connect-SDK-Android-API-Sampler", "Date": "2014-06-10T19:01:21Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getTv().hasAnyCapability(WebAppLauncher.Message_Send, WebAppLauncher.Message_Receive, WebAppLauncher.Message_Receive_JSON, WebAppLauncher.Message_Send_JSON)) { mWebAppSession.connect(connectionListener); mWebAppSession.setWebAppSessionListener(webAppListener); }else { connectionListener.onSuccess(webAppSession.launchSession); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8732/buggy-version/src.com.connectsdk.sampler.fragments.WebAppFragment.java", "BodyUseAPI": [], "Fixed commit": "041e88fcff2214c03a957a0e829cd0044d28eaba", "Url": "https://api.github.com/repos/ConnectSDK/Connect-SDK-Android-API-Sampler", "Date": "2014-06-10T19:01:21Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getTv().hasCapability(WebAppLauncher.Message_Send)) sendMessageButton.setEnabled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8732/buggy-version/src.com.connectsdk.sampler.fragments.WebAppFragment.java", "BodyUseAPI": [], "Fixed commit": "041e88fcff2214c03a957a0e829cd0044d28eaba", "Url": "https://api.github.com/repos/ConnectSDK/Connect-SDK-Android-API-Sampler", "Date": "2014-06-10T19:01:21Z"},
{"Line": "=>844", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shaded.com.google.common.base.Strings.isNullOrEmpty(value)) { return hudson.util.FormValidation.ok(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/9052/buggy-version/jclouds-plugin.src.main.java.jenkins.plugins.jclouds.compute.JCloudsSlaveTemplate.java", "BodyUseAPI": [], "Fixed commit": "29b00af6672bd9a62e994cb28c1323e7a556b5d1", "Url": "https://api.github.com/repos/OpenDataSpace/jclouds-plugin", "Date": "2015-09-11T15:05:25Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.node.ObjectNode.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (backupValue.isNull()) { tree.remove(fieldName); }else if ((primaryValue.isObject()) && (backupValue.isObject())) { com.google.api.codegen.discovery.ViewModelProvider.merge(((com.fasterxml.jackson.databind.node.ObjectNode) (primaryValue)), ((com.fasterxml.jackson.databind.node.ObjectNode) (backupValue.deepCopy()))); }else { tree.set(fieldName, overrideTree.get(fieldName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7865/buggy-version/src.main.java.com.google.api.codegen.discovery.ViewModelProvider.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.deepCopy()", "com.fasterxml.jackson.databind.JsonNode.isObject()", "com.google.api.codegen.discovery.ViewModelProvider.merge(com.fasterxml.jackson.databind.JsonNode,((com.fasterxml.jackson.databind.node.ObjectNode) (backupValue.deepCopy())))"], "Fixed commit": "556f9fc9464d1036cfadef08cc8346a51afb123a", "Url": "https://api.github.com/repos/saicheems/toolkit", "Date": "2016-09-21T03:22:57Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((secondTerritory) != null) { map.get(secondTerritory).setBackground(java.awt.Color.blue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4474/buggy-version/src.view.BoardView.java", "BodyUseAPI": [], "Fixed commit": "7a1b682f374c9ad4594624121a8ebe43e5e55eec", "Url": "https://api.github.com/repos/gamesource/Risk", "Date": "2014-12-25T10:36:58Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((secondTerritory) != null) { controller.TerritoryController.fortify(currentTerritory, secondTerritory, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4474/buggy-version/src.view.BoardView.java", "BodyUseAPI": [], "Fixed commit": "7a1b682f374c9ad4594624121a8ebe43e5e55eec", "Url": "https://api.github.com/repos/gamesource/Risk", "Date": "2014-12-25T10:36:58Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shareActionProvider) != null) { android.content.Intent shareIntent = new android.content.Intent(android.content.Intent.ACTION_SEND); shareIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_DOCUMENT); shareIntent.setType(\"text/plain\"); shareIntent.putExtra(Intent.EXTRA_TEXT, ((getString(R.string.share_text)) + (bookTitle))); shareActionProvider.setShareIntent(shareIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5712/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": [], "Fixed commit": "a5b27a23263f6ad619612ee1d31d1ac07a9d6a5d", "Url": "https://api.github.com/repos/willwallis/ExcellenteDue", "Date": "2016-02-09T01:52:24Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(es.glasspixel.wlanaudit.activities.NetworkListActivity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(prefs.contains(\"autoscan_interval\"))) { android.content.SharedPreferences.Editor editor = prefs.edit(); editor.putInt(\"autoscan_interval\", 30); editor.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/358/buggy-version/WLANAudit.src.es.glasspixel.wlanaudit.activities.NetworkListActivity.java", "BodyUseAPI": ["android.content.SharedPreferences.edit()"], "Fixed commit": "1fc112b34f9e1b87edf21bdda0fb9140ae5acba7", "Url": "https://api.github.com/repos/RobertoEstrada/WLANAudit-Android", "Date": "2012-08-06T16:16:16Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["map.KeywordMap.getMarkerWithName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (nm != null) nm.setColor(map.KeywordMap.HIGHLIGHTED_MARKER_COLOR);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4/buggy-version/src.map.KeywordMap.java", "BodyUseAPI": ["ui.marker.NamedMarker.setColor(int)"], "Fixed commit": "9210b6c7e13234898425fcfde6462de08625d28d", "Url": "https://api.github.com/repos/croes/capsel-lak", "Date": "2013-04-17T11:24:02Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputElement.getFieldParent().getSchemaDataType().equals(SchemaDataType.ARRAY)) index = dataMapper.diagram.custom.configuration.operators.ToUpperCaseTransformer.INDEX;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5127/buggy-version/data-mapper.org.wso2.developerstudio.visualdatamapper.diagram.src.dataMapper.diagram.custom.configuration.operators.ToUpperCaseTransformer.java", "BodyUseAPI": [], "Fixed commit": "065045db16a524793c4ace6a4adfbc48714beb03", "Url": "https://api.github.com/repos/kaviththiranga/developer-studio", "Date": "2014-04-25T05:15:38Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputElement.getFieldParent().getSchemaDataType().equals(SchemaDataType.ARRAY)) index = dataMapper.diagram.custom.configuration.operators.ToLowerCaseTransform.INDEX;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5127/buggy-version/data-mapper.org.wso2.developerstudio.visualdatamapper.diagram.src.dataMapper.diagram.custom.configuration.operators.ToLowerCaseTransform.java", "BodyUseAPI": [], "Fixed commit": "065045db16a524793c4ace6a4adfbc48714beb03", "Url": "https://api.github.com/repos/kaviththiranga/developer-studio", "Date": "2014-04-25T05:15:38Z"},
{"Line": "=>1297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.io.Serializable>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((dlFileVersions != null) && (!(dlFileVersions.isEmpty()))) { com.liferay.portlet.documentlibrary.model.DLFileVersion oldDLFileVersion = dlFileVersions.get(0); oldDLFileVersionStatus = oldDLFileVersion.getStatus(); dlFileVersionStatusOVPs = getDlFileVersionStatuses(dlFileVersions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2862/buggy-version/portal-impl.src.com.liferay.portlet.documentlibrary.service.impl.DLFileEntryLocalServiceImpl.java", "BodyUseAPI": ["java.util.List<com.liferay.portlet.documentlibrary.model.DLFileVersion>.get(int)", "com.liferay.portlet.documentlibrary.service.impl.DLFileEntryLocalServiceImpl.getDlFileVersionStatuses(java.util.List<com.liferay.portlet.documentlibrary.model.DLFileVersion>)"], "Fixed commit": "1dac788e34409699a5a67ab9df700e6befba67a9", "Url": "https://api.github.com/repos/JorgeFerrer/liferay-portal", "Date": "2012-10-08T17:21:28Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.lucene.util.Constants.WINDOWS) { basePath = basePath.replaceFirst(\"^/(.:/)\", \"$1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7009/buggy-version/solr.core.src.java.org.apache.solr.core.backup.repository.LocalFileSystemRepository.java", "BodyUseAPI": [], "Fixed commit": "9c37aaabe4e1b3f66cd0034e2e3fe0399e82fffd", "Url": "https://api.github.com/repos/apache/lucene-solr", "Date": "2016-08-04T16:43:05Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((encounter.getForm()) != null) { encounterParameters.put(EventKeys.FORM_ID, encounter.getForm().getUuid()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2249/buggy-version/openmrs.src.main.java.org.motechproject.openmrs.helper.EventHelper.java", "BodyUseAPI": ["org.motechproject.openmrs.domain.Encounter.getForm()", "java.util.Map<java.lang.String, java.lang.Object>.put(EventKeys.FORM_ID,encounter.getForm().getUuid())", "encounter.getForm().getUuid()"], "Fixed commit": "b200f2c1f9ea073062983ab61b39a1e1c49ca625", "Url": "https://api.github.com/repos/afijal/modules", "Date": "2016-09-23T11:52:37Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smi.travel.controller.DaytourOperationDetailController.setDaytourBookings(javax.servlet.http.HttpServletRequest,com.smi.travel.datalayer.entity.TourOperationDesc,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (daytourBookings == null) { return result = \"false\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3051/buggy-version/src.java.com.smi.travel.controller.DaytourOperationDetailController.java", "BodyUseAPI": [], "Fixed commit": "a0b6a9a7124c269b996f785856d907cae4555a8a", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-08-14T01:40:40Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smi.travel.datalayer.service.DaytourOperationService.getTourDetail(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (daytourBookingDetail == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3051/buggy-version/src.java.com.smi.travel.controller.DaytourOperationDetailController.java", "BodyUseAPI": [], "Fixed commit": "a0b6a9a7124c269b996f785856d907cae4555a8a", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-08-14T01:40:40Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(param.trim().equals(\"\"))) { return new main.logic.command.IncorrectCommand(java.lang.String.format(Messages.MESSAGE_INVALID_PARAMETERS, \"ListCommand\", ListCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8378/buggy-version/task-tracker.src.main.java.main.logic.parser.MainParser.java", "BodyUseAPI": [], "Fixed commit": "e02c09b891cb7be5c027733a1c191e0c18b448c7", "Url": "https://api.github.com/repos/CS2103AUG2016-T09-C3/main", "Date": "2016-10-24T18:08:54Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.arcao.geocaching4locus.task.UpdateMoreTask.prepareOldWaypointsFromIndexes(android.content.Context,long[],int,AppConstants.CACHES_PER_REQUEST)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((oldPoints.size()) == 0) { current = current + (java.lang.Math.min(((pointIndexes.length) - current), AppConstants.CACHES_PER_REQUEST)); publishProgress(current); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5820/buggy-version/src.com.arcao.geocaching4locus.task.UpdateMoreTask.java", "BodyUseAPI": [], "Fixed commit": "f4fdef6d3cc17c6688341a49c90f83c227cee41c", "Url": "https://api.github.com/repos/arcao/Geocaching4Locus", "Date": "2013-02-03T23:35:06Z"},
{"Line": "=>1051", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.getWorld().equals(com.wasteofplastic.askyblock.ASkyBlock.getIslandWorld()))) { player.sendMessage(((org.bukkit.ChatColor.RED) + (Locale.setHomeerrorNotOnIsland))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3786/buggy-version/src.com.wasteofplastic.askyblock.GridManager.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(((org.bukkit.ChatColor.RED) + (Locale.setHomeerrorNotOnIsland)))"], "Fixed commit": "b43d07977c11e8de11566c0bc2aee534f2c04145", "Url": "https://api.github.com/repos/tastybento/askyblock", "Date": "2015-03-14T17:42:53Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.coderetreat.gol.engine.rules.GameOfLifeRules.getNumAliveNeighbours(java.util.List<com.coderetreat.gol.models.Cell>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cell.isAlive()) && (numberAliveNeighbours > 3)) { return Rules.CELL_DIES_BECAUSE_OF_OVERPOPULATION; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7221/buggy-version/src.main.java.com.coderetreat.gol.engine.rules.GameOfLifeRules.java", "BodyUseAPI": [], "Fixed commit": "ff790da9d37ae125504df79bb533b1582161e19c", "Url": "https://api.github.com/repos/tobiasheine/GameOfLife", "Date": "2013-12-30T16:50:08Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tokenResponse.getError()) != null) { }else if ((tokenResponse != null) && ((tokenResponse.getPrincipal()) != null)) { request.setAttribute(org.surfnet.oaaas.auth.server.support.filter.ApisAuthorizationFilter.ATTR_AUTHORIZATION, tokenResponse); chain.doFilter(request, response); return; }else { sendError(response, HttpServletResponse.SC_FORBIDDEN, \"OAuth2 endpoint\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3467/buggy-version/apis-resource-server-support.src.main.java.org.surfnet.oaaas.auth.server.support.filter.ApisAuthorizationFilter.java", "BodyUseAPI": ["org.surfnet.oaaas.auth.api.ApisAuthorization.getPrincipal()", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,org.surfnet.oaaas.auth.api.ApisAuthorization)"], "Fixed commit": "c16c0d081327b899c4dc8fab66caeb90c85237d7", "Url": "https://api.github.com/repos/toddfast/apis", "Date": "2013-04-15T10:39:30Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.resource(java.lang.String.format(\"%s?access_token=%s\", authorizationServerUrl, accessToken)).header(HttpHeaders.AUTHORIZATION, (\"Basic \" + (authorizationValue))).accept(\"application/json\").get(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((res.getStatus()) == 410) { final java.lang.String error = \"Token expired\"; sendError(response, HttpServletResponse.SC_FORBIDDEN, error); return getErrorAuthorization(error); }else { final java.lang.String error = \"Unknown error verifying token with \" + \"authorization server\"; sendError(response, HttpServletResponse.SC_INTERNAL_SERVER_ERROR, error); return getErrorAuthorization(error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3467/buggy-version/apis-resource-server-support.src.main.java.org.surfnet.oaaas.auth.server.support.filter.ApisAuthorizationFilter.java", "BodyUseAPI": [], "Fixed commit": "c16c0d081327b899c4dc8fab66caeb90c85237d7", "Url": "https://api.github.com/repos/toddfast/apis", "Date": "2013-04-15T10:39:30Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.xtext.xbase.lib.ObjectExtensions.operator_equals(de.hs_rm.cs.vs.dsm.flow.Expression,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (_operator_equals) { { de.hs_rm.cs.vs.dsm.flow.ReturnTypeOperator _operator = statement.getOperator(); org.eclipse.emf.ecore.EClass _eClass = _operator.eClass(); java.lang.String _name = _eClass.getName(); boolean _equals = _name.equals(\"JoinOperator\"); if (_equals) { de.hs_rm.cs.vs.dsm.flow.ReturnTypeOperator _operator_1 = statement.getOperator(); java.lang.String _write = this.write(((de.hs_rm.cs.vs.dsm.flow.JoinOperator) (_operator_1)), statement); _builder.append(_write, \"\"); _builder.newLineIfNotEmpty(); }else { de.hs_rm.cs.vs.dsm.flow.ReturnTypeOperator _operator_2 = statement.getOperator(); org.eclipse.emf.ecore.EClass _eClass_1 = _operator_2.eClass(); java.lang.String _name_1 = _eClass_1.getName(); boolean _equals_1 = _name_1.equals(\"SplitOperator\"); if (_equals_1) { de.hs_rm.cs.vs.dsm.flow.ReturnTypeOperator _operator_3 = statement.getOperator(); java.lang.String _write_1 = this.write(((de.hs_rm.cs.vs.dsm.flow.SplitOperator) (_operator_3)), statement); _builder.append(_write_1, \"\"); _builder.newLineIfNotEmpty(); }else { de.hs_rm.cs.vs.dsm.flow.ReturnTypeOperator _operator_4 = statement.getOperator(); org.eclipse.emf.ecore.EClass _eClass_2 = _operator_4.eClass(); java.lang.String _name_2 = _eClass_2.getName(); boolean _equals_2 = _name_2.equals(\"CountOperator\"); if (_equals_2) { de.hs_rm.cs.vs.dsm.flow.ReturnTypeOperator _operator_5 = statement.getOperator(); java.lang.String _write_2 = this.write(((de.hs_rm.cs.vs.dsm.flow.CountOperator) (_operator_5)), statement); _builder.append(_write_2, \"\"); _builder.newLineIfNotEmpty(); }else { de.hs_rm.cs.vs.dsm.flow.ReturnTypeOperator _operator_6 = statement.getOperator(); org.eclipse.emf.ecore.EClass _eClass_3 = _operator_6.eClass(); java.lang.String _name_3 = _eClass_3.getName(); boolean _equals_3 = _name_3.equals(\"AverageOperator\"); if (_equals_3) { de.hs_rm.cs.vs.dsm.flow.ReturnTypeOperator _operator_7 = statement.getOperator(); java.lang.String _write_3 = this.write(((de.hs_rm.cs.vs.dsm.flow.AverageOperator) (_operator_7)), statement); _builder.append(_write_3, \"\"); _builder.newLineIfNotEmpty(); }else { de.hs_rm.cs.vs.dsm.flow.ReturnTypeOperator _operator_8 = statement.getOperator(); org.eclipse.emf.ecore.EClass _eClass_4 = _operator_8.eClass(); java.lang.String _name_4 = _eClass_4.getName(); boolean _equals_4 = _name_4.equals(\"StandardDeviationOperator\"); if (_equals_4) { de.hs_rm.cs.vs.dsm.flow.ReturnTypeOperator _operator_9 = statement.getOperator(); java.lang.String _write_4 = this.write(((de.hs_rm.cs.vs.dsm.flow.StandardDeviationOperator) (_operator_9)), statement); _builder.append(_write_4, \"\"); _builder.newLineIfNotEmpty(); }else { de.hs_rm.cs.vs.dsm.flow.ReturnTypeOperator _operator_10 = statement.getOperator(); org.eclipse.emf.ecore.EClass _eClass_5 = _operator_10.eClass(); java.lang.String _name_5 = _eClass_5.getName(); boolean _equals_5 = _name_5.equals(\"ElementJoinOperator\"); if (_equals_5) { de.hs_rm.cs.vs.dsm.flow.ReturnTypeOperator _operator_11 = statement.getOperator(); java.lang.String _write_5 = this.write(((de.hs_rm.cs.vs.dsm.flow.ElementJoinOperator) (_operator_11)), statement); _builder.append(_write_5, \"\"); _builder.newLineIfNotEmpty(); } } } } } } } }else { _builder.newLine(); _builder.newLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1033/buggy-version/de.hs_rm.cs.vs.dsm.flow.xtend-gen.de.hs_rm.cs.vs.dsm.generator.FlowGenerator.java", "BodyUseAPI": [], "Fixed commit": "6e0b4ecf61051fcd1bc6c5c40a1384f4ac8a6422", "Url": "https://api.github.com/repos/mfrey/flow", "Date": "2011-11-25T10:50:02Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (title == null) { titleView.setVisibility(fr.days.android.uitableview.view.GONE); }else { titleView.setVisibility(fr.days.android.uitableview.view.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/40/buggy-version/src.fr.days.android.uitableview.view.UITableHeaderView.java", "BodyUseAPI": [], "Fixed commit": "b704dcfe6d86d7104c45d84628752a4b3298af5d", "Url": "https://api.github.com/repos/DayS/uitableview4android", "Date": "2012-09-07T15:01:41Z"},
{"Line": "=>2820", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dragged) != null) { if (dragged.isDragAndDropInitialized()) { dragged.dragFinishedImpl(x, y); dragged = null; }else { dragged.pointerReleased(x, y); dragged = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5893/buggy-version/CodenameOne.src.com.codename1.ui.Form.java", "BodyUseAPI": [], "Fixed commit": "11b98b669f1f99cdb79bdc773f406fb170441be2", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2017-12-05T20:45:59Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index > 0) { language = value.substring(0, index); locale = value.substring((index + 1)); }else { language = value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/570/buggy-version/rt.frontend.jaxrs.src.main.java.org.apache.cxf.jaxrs.utils.HttpUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int)"], "Fixed commit": "ffba6ce5ca133043bfb9ab2423ee2fab69307989", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2015-10-15T16:36:17Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (notificationId >= (old_notificationId)) { old_notificationId = notificationId; return originalResponse.newBuilder().body(new org.catrobat.catroid.web.ProgressResponseBody(originalResponse.body(), receiver, notificationId)).build(); }else { return originalResponse; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/9223/buggy-version/catroid.src.org.catrobat.catroid.web.ServerCalls.java", "BodyUseAPI": ["originalResponse.newBuilder().body(new org.catrobat.catroid.web.ProgressResponseBody(originalResponse.body(), receiver, notificationId)).build()", "originalResponse.newBuilder().body(org.catrobat.catroid.web.ProgressResponseBody)"], "Fixed commit": "5d62ad75719730fc51586c5b2c2e76d94b75b04a", "Url": "https://api.github.com/repos/Manu91/Catroid", "Date": "2015-06-22T09:46:15Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.muni.exceptions.listener.classifier.StaxPackageDataParser.Element.forName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (element == null) { throw new java.lang.IllegalStateException(\"Unexpected root element\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8131/buggy-version/src.main.java.cz.muni.exceptions.listener.classifier.StaxPackageDataParser.java", "BodyUseAPI": [], "Fixed commit": "8ebdb1e0d85d9f45724cad0d7109a7caded335a0", "Url": "https://api.github.com/repos/iref/wildfly-exceptions", "Date": "2014-04-25T21:57:29Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.pressgang.ccms.rest.v1.entities.RESTTranslatedTopicV1.getTranslatedCSNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (restEntity == null) { if ((entity.getTranslatedCSNode()) != null) { entity.getTranslatedCSNode().removeTranslatedTopicData(entity); } }else { final org.jboss.pressgang.ccms.model.contentspec.TranslatedCSNode dbEntity = entityManager.find(org.jboss.pressgang.ccms.model.contentspec.TranslatedCSNode.class, restEntity.getId()); if (dbEntity == null) throw new org.jboss.resteasy.spi.BadRequestException((\"No TranslatedCSNode entity was found with the primary key \" + (restEntity.getId()))); dbEntity.addTranslatedTopicData(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5040/buggy-version/src.main.java.org.jboss.pressgang.ccms.server.rest.v1.TranslatedTopicV1Factory.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.rest.v1.entities.contentspec.RESTTranslatedCSNodeV1.getId()", "org.jboss.pressgang.ccms.rest.v1.entities.contentspec.RESTTranslatedCSNodeV1.getId()", "org.jboss.pressgang.ccms.server.rest.v1.TranslatedTopicV1Factory.find(java.lang.Class,restEntity.getId())"], "Fixed commit": "fc6a3e49c439b660d460aab690dc5fc168e49480", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSREST", "Date": "2013-09-03T14:14:10Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (classname == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/512/buggy-version/de.schenk.jrtrace.helperlib.src.de.schenk.enginex.helper.EngineXMetadata.java", "BodyUseAPI": [], "Fixed commit": "f40997af3ad647e682c7e8fbc88d693e2c54e4c2", "Url": "https://api.github.com/repos/ChristianPSchenk/JRTrace", "Date": "2015-01-08T10:09:53Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hbase.mob.MobUtils.isMobRegionInfo(org.apache.hadoop.hbase.HRegionInfo)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isMobRegion) { tableDir = org.apache.hadoop.hbase.util.FSUtils.getTableDir(org.apache.hadoop.hbase.mob.MobUtils.getMobHome(conf), regionInfo.getTable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7504/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.snapshot.SnapshotManifest.java", "BodyUseAPI": [], "Fixed commit": "c0a2db7dcc422b161389ddc2941f238a8030afa9", "Url": "https://api.github.com/repos/JingchengDu/hbase", "Date": "2016-10-14T13:52:06Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cacheStarted(cacheId)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6807/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.java", "BodyUseAPI": [], "Fixed commit": "0adfd928b6b6ae6f8000232c2f82b8b51613560e", "Url": "https://api.github.com/repos/apache/ignite", "Date": "2015-12-23T13:51:12Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["by.gstu.interviewstreet.service.InterviewService.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (interview == null) { return \"error/404\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5512/buggy-version/src.main.java.by.gstu.interviewstreet.web.controller.action.StatisticsController.java", "BodyUseAPI": [], "Fixed commit": "8075d5a82b2a7d87314c9075336d9f91928fa3e1", "Url": "https://api.github.com/repos/gorych/Interview-Street", "Date": "2016-06-15T20:39:18Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["value.toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8218/buggy-version/lodmill-ld.src.main.java.org.lobid.lodmill.hadoop.NTriplesToJsonLd.java", "BodyUseAPI": [], "Fixed commit": "7aa68aa42a9ddc0ecdcd91737eddfd8b071c5793", "Url": "https://api.github.com/repos/lobid/lodmill", "Date": "2014-03-05T10:21:53Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.next()) { l_id = rs.getInt(\"l_id\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4375/buggy-version/src.com.dsms.servlet.GradeController.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(java.lang.String)"], "Fixed commit": "30b79243fa6161199eb81f5666bc2ec2b9b98914", "Url": "https://api.github.com/repos/skulai/DrivingSchoolManagementSystem", "Date": "2016-11-29T22:55:20Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (variable.startsWith(\"'\")) { java.lang.String parent_var_name = title; MainFrame.octavePanel.evaluate(jar_path); if (parent_var_name.equals(\"Variable View\")) { java.io.File f = new java.io.File(directory); java.lang.String f_name = f.getName(); java.lang.String name = f_name.substring(0, f_name.indexOf(\".dat\")); MainFrame.octavePanel.evaluate((((((((\"ob= javaObject(\" + (java.lang.Character.toString('\"'))) + \"ResultsFrame\") + (java.lang.Character.toString('\"'))) + \",\") + (java.lang.Character.toString('\"'))) + (java.lang.Character.toString('\"'))) + \");\")); MainFrame.octavePanel.evaluate(((\"ob.appendText(disp(\" + name) + \"));\")); }else { MainFrame.octavePanel.evaluate((((((((\"ob= javaObject(\" + (java.lang.Character.toString('\"'))) + \"ResultsFrame\") + (java.lang.Character.toString('\"'))) + \",\") + (java.lang.Character.toString('\"'))) + (java.lang.Character.toString('\"'))) + \");\")); MainFrame.octavePanel.evaluate(((\"ob.appendText(disp(\" + parent_var_name) + \"));\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8307/buggy-version/DomainMathIDE.src.org.domainmath.gui.dataview.DataViewPanel.java", "BodyUseAPI": [], "Fixed commit": "fea410d73a3b9cbc7756501d27a717f3868cc690", "Url": "https://api.github.com/repos/vinukn/domainmath-ide", "Date": "2013-05-02T13:03:29Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (notInvalidated) { l1Entry.setReadVersion(maxValidVersion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5015/buggy-version/core.src.main.java.org.infinispan.container.gmu.L1GMUContainer.java", "BodyUseAPI": [], "Fixed commit": "85f30e90b8a69ac6489f16a16d25027c19f90a82", "Url": "https://api.github.com/repos/hgpimentel/infinispan", "Date": "2013-05-09T14:40:15Z"},
{"Line": "=>1205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (match.contains(\"stop\")) { tts(\"Navigation has not yet started, please start navigation first\"); }else { sendDirectionRequest(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3782/buggy-version/app.src.main.java.com.example.adityajunnarkar.gbelt.VoiceModeActivity.java", "BodyUseAPI": [], "Fixed commit": "9034f8b5213d61304ea970eff02ee04ca06959c0", "Url": "https://api.github.com/repos/adijunnarkar/GBelt", "Date": "2017-03-15T14:10:44Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.GameTinyLeadersImpl.getCommanderCard(deck.getName(),<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((commander == null) || ((commander.getManaCost().convertedManaCost()) > 3)) { if (commander == null) { if ((deck.getName()) == null) { invalid.put(\"Leader\", (\"You have to save your deck with the leader card name entered to the DECK NAME field of the DECK EDITOR (top left) so that XMage knows your leader.\" + \"(You can use the \\\"Sultai\\\" for a UBG (2/2) default Commander.)\")); }else { invalid.put(\"Leader\", (((\"Leader [\" + (deck.getName())) + \"] not found. You have to enter the name of the leader card into the DECK NAME field of the DECK EDITOR (top left). Check your spelling \") + \"(use the \\\"Sultai\\\" for a UBG (2/2) default Commander)\")); } } if ((commander != null) && ((commander.getManaCost().convertedManaCost()) > 3)) { invalid.put(\"Leader\", \"Commanders converted mana cost is greater than 3\"); } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6896/buggy-version/Mage.Server.Plugins.Mage.Deck.Constructed.src.mage.deck.TinyLeaders.java", "BodyUseAPI": ["mage.cards.Card.getManaCost()", "commander.getManaCost().convertedManaCost()"], "Fixed commit": "10b7791cd22877f7b22fe8375cfff16c861a8e55", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2015-03-20T16:30:12Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.edu.sdu.cs.starry.taurus.factory.LongQueryWorkerFactory.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null != positionBytes) { positionS = new java.lang.String(positionBytes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/9148/buggy-version/core.src.main.java.cn.edu.sdu.cs.starry.taurus.factory.LongQueryWorkerFactory.java", "BodyUseAPI": [], "Fixed commit": "693f7182a8a2eed606bc1c3a368c33207f3709b1", "Url": "https://api.github.com/repos/grandland/taurus", "Date": "2014-05-16T02:28:52Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((builder.length()) > 0) builder.deleteCharAt(((builder.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/683/buggy-version/src.main.java.chanceCubes.util.HTTPUtil.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.deleteCharAt(int)"], "Fixed commit": "5501731609febf9a81ebaf352aeba8edd8f05c87", "Url": "https://api.github.com/repos/Turkey2349/ChanceCubes", "Date": "2017-05-05T00:38:00Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (len_ret <= 0) if ((this._ptr) >= (this._len)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2883/buggy-version/axk_v2.axk2-core-lib.src.impl.ananas.axk2.core.DefaultStanzaContext.java", "BodyUseAPI": [], "Fixed commit": "574c1b2902712559b456d527f2bca1ef7505d072", "Url": "https://api.github.com/repos/ananas-project/ananas-xmpp-kit", "Date": "2013-08-14T01:20:58Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expireTimes < 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3991/buggy-version/src.main.java.com.github.andyshaox.spring.lock.RedisDistributionLock.java", "BodyUseAPI": [], "Fixed commit": "ea1e665169960b83675f70a6d714241a4c5624c3", "Url": "https://api.github.com/repos/Andy-Shao/GearEE-Spring", "Date": "2017-04-18T02:51:44Z"},
{"Line": "=>1769", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cqframework.cql.cql2elm.Cql2ElmVisitor.parseTypeSpecifier(ctx.typeSpecifier())", "org.cqframework.cql.cql2elm.Cql2ElmVisitor.parseExpression(ctx.expression())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.cqframework.cql.cql2elm.DataTypes.equal(operand.getResultType(), targetType.getResultType()))) { org.cqframework.cql.cql2elm.Conversion conversion = libraryBuilder.findConversion(operand.getResultType(), targetType.getResultType(), false); if (conversion == null) { throw new java.lang.IllegalArgumentException(java.lang.String.format(\"Could not resolve conversion from type %s to type %s.\", operand.getResultType(), targetType.getResultType())); } return libraryBuilder.convertExpression(operand, conversion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/192/buggy-version/Src.java.cql-to-elm.src.main.java.org.cqframework.cql.cql2elm.Cql2ElmVisitor.java", "BodyUseAPI": ["org.cqframework.cql.cql2elm.Expression.getResultType()", "org.cqframework.cql.cql2elm.TypeSpecifier.getResultType()", "org.cqframework.cql.cql2elm.TypeSpecifier.getResultType()", "org.cqframework.cql.cql2elm.Expression.getResultType()", "org.cqframework.cql.cql2elm.LibraryBuilder.findConversion(operand.getResultType(),targetType.getResultType(),boolean)", "org.cqframework.cql.cql2elm.LibraryBuilder.convertExpression(org.cqframework.cql.cql2elm.Expression,org.cqframework.cql.cql2elm.Conversion)", "java.lang.String.format(java.lang.String,operand.getResultType(),targetType.getResultType())"], "Fixed commit": "14df2a0f239f72a25963449e16e8f4f10db09fcd", "Url": "https://api.github.com/repos/cqframework/clinical_quality_language", "Date": "2017-06-16T04:37:50Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(init(savedInstanceState))) return rootView;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/826/buggy-version/app.src.main.java.com.jrarama.spotifystreamer.app.fragment.ArtistTracksFragment.java", "BodyUseAPI": [], "Fixed commit": "979f8b6a6032dab1afaa954d8034808f26331e02", "Url": "https://api.github.com/repos/jrarama/spotify-streamer", "Date": "2015-07-13T15:36:47Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mDatabase.isOpen()) { mDatabase.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7876/buggy-version/src.org.digitalcampus.oppia.application.DatabaseManager.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.close()"], "Fixed commit": "3c4f5aa3f5396fb696fcffd87559449e42164793", "Url": "https://api.github.com/repos/jjoseba/oppia-mobile-android", "Date": "2016-01-24T08:43:45Z"},
{"Line": "=>986", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jobChainNode.hasAttribute(\"job_chain\")) { return 2; }else { return 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/764/buggy-version/jitl-jobs.src.main.java.com.sos.jitl.inventory.data.InventoryEventUpdateUtil.java", "BodyUseAPI": [], "Fixed commit": "5ee33de59ac90e2101b86e2291c0e30999149621", "Url": "https://api.github.com/repos/sos-berlin/jitl", "Date": "2017-01-16T11:13:54Z"},
{"Line": "=>630", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((jobName != null) && (!(jobName.isEmpty()))) { node.setJobName(jobName); }else { node.setJobName(DBLayer.DEFAULT_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/764/buggy-version/jitl-jobs.src.main.java.com.sos.jitl.inventory.data.InventoryEventUpdateUtil.java", "BodyUseAPI": ["com.sos.jitl.reporting.db.DBItemInventoryJobChainNode.setJobName(java.lang.String)"], "Fixed commit": "5ee33de59ac90e2101b86e2291c0e30999149621", "Url": "https://api.github.com/repos/sos-berlin/jitl", "Date": "2017-01-16T11:13:54Z"},
{"Line": "=>933", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(jobChain.getName()).getParent().resolve(job).normalize().toString().replace(char,char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((jobName != null) && (!(jobName.isEmpty()))) { nodeItem.setJobName(jobName); }else { nodeItem.setJobName(DBLayer.DEFAULT_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/764/buggy-version/jitl-jobs.src.main.java.com.sos.jitl.inventory.model.InventoryModel.java", "BodyUseAPI": ["com.sos.jitl.reporting.db.DBItemInventoryJobChainNode.setJobName(java.lang.String)"], "Fixed commit": "5ee33de59ac90e2101b86e2291c0e30999149621", "Url": "https://api.github.com/repos/sos-berlin/jitl", "Date": "2017-01-16T11:13:54Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (element.getKind().isField()) { return isUnderModulePackage(((com.sun.tools.javac.code.Symbol.VarSymbol) (element)).owner); }else if ((element.getKind().equals(javax.lang.model.element.ElementKind.METHOD)) || (element.getKind().equals(javax.lang.model.element.ElementKind.CONSTRUCTOR))) { return isUnderModulePackage(((com.sun.tools.javac.code.Symbol) (element)).getEnclosingElement()); }else if (element.getKind().equals(javax.lang.model.element.ElementKind.PARAMETER)) { return isUnderModulePackage(((com.sun.tools.javac.code.Symbol) (element)).getEnclosingElement().getEnclosingElement()); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3025/buggy-version/errai-common-apt.src.main.java.org.jboss.errai.common.apt.module.ErraiModule.java", "BodyUseAPI": ["javax.lang.model.element.Element.getKind()", "javax.lang.model.element.ElementKind.equals(javax.lang.model.element.ElementKind)", "javax.lang.model.element.ElementKind.equals(javax.lang.model.element.ElementKind)", "javax.lang.model.element.ElementKind.equals(javax.lang.model.element.ElementKind)", "javax.lang.model.element.Element.getKind()", "javax.lang.model.element.Element.getKind()"], "Fixed commit": "0ea9ebfa4fcb5a5f2ca0dc58ae6d30c52f62d829", "Url": "https://api.github.com/repos/tiagobento/errai", "Date": "2017-10-25T22:57:32Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hypercities.exporttoearth.KMZExporter.getAttributeField(java.lang.String[],com.hypercities.exporttoearth.AttributeModel)", "com.hypercities.exporttoearth.KMZExporter.getAttributeField(java.lang.String[],com.hypercities.exporttoearth.AttributeModel)", "e.getTarget().getAttributes()", "e.getSource().getAttributes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((source.getValue(latitudeName)) == null) || ((source.getValue(longitudeName)) == null)) || ((targe.getValue(latitudeName)) == null)) || ((targe.getValue(longitudeName)) == null)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7149/buggy-version/src.com.hypercities.exporttoearth.KMZExporter.java", "BodyUseAPI": [], "Fixed commit": "f866dd2c79d977c7d4932fac6a01a253a37a70f2", "Url": "https://api.github.com/repos/shepdl/Export-To-Earth", "Date": "2012-07-11T21:43:49Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gephi.graph.api.Edge.getAttributes()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((row.getValue(ac)) != null) { description += (((ac.getTitle()) + \": \") + (row.getValue(ac))) + \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7149/buggy-version/src.com.hypercities.exporttoearth.KMZExporter.java", "BodyUseAPI": ["com.hypercities.exporttoearth.AttributeRow.getValue(com.hypercities.exporttoearth.AttributeColumn)", "com.hypercities.exporttoearth.AttributeColumn.getTitle()"], "Fixed commit": "f866dd2c79d977c7d4932fac6a01a253a37a70f2", "Url": "https://api.github.com/repos/shepdl/Export-To-Earth", "Date": "2012-07-11T21:43:49Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["e.getTarget().getAttributes()", "e.getSource().getAttributes()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((source == null) || (targe == null)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7149/buggy-version/src.com.hypercities.exporttoearth.KMZExporter.java", "BodyUseAPI": [], "Fixed commit": "f866dd2c79d977c7d4932fac6a01a253a37a70f2", "Url": "https://api.github.com/repos/shepdl/Export-To-Earth", "Date": "2012-07-11T21:43:49Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((access.ordinal()) == 0) { access = com.griefcraft.model.Permission.Access.PLAYER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4180/buggy-version/src.main.java.com.griefcraft.model.Permission.java", "BodyUseAPI": [], "Fixed commit": "3aeb1d03337464bfe255d194100ccf6c1054f03a", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2011-12-25T14:38:26Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (validate(apartment)) { apartmentDao.update(apartment); }else { logger.warn(java.lang.String.format(\"Skipping not valid apartment: [immoId: %d]\", apartment.getImmoId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6056/buggy-version/src.main.java.com.junjie.sync.SyncApartmentService.java", "BodyUseAPI": ["com.junjie.dao.ApartmentDao.update(com.junjie.model.Apartment)", "java.lang.String.format(java.lang.String,apartment.getImmoId())", "org.apache.commons.logging.Log.warn(java.lang.String)", "com.junjie.model.Apartment.getImmoId()"], "Fixed commit": "f3eafaba9c8160beb483762ad48da36f9567c161", "Url": "https://api.github.com/repos/junjietang1985/i_research", "Date": "2016-07-19T12:19:42Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (validate(apartment)) { apartmentDao.save(apartment); }else { logger.warn(java.lang.String.format(\"Skipping not valid apartment: [immoId: %d]\", apartment.getImmoId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6056/buggy-version/src.main.java.com.junjie.sync.SyncApartmentService.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,apartment.getImmoId())", "com.junjie.dao.ApartmentDao.save(com.junjie.model.Apartment)", "org.apache.commons.logging.Log.warn(java.lang.String)", "com.junjie.model.Apartment.getImmoId()"], "Fixed commit": "f3eafaba9c8160beb483762ad48da36f9567c161", "Url": "https://api.github.com/repos/junjietang1985/i_research", "Date": "2016-07-19T12:19:42Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (harsh) { threadPolicyBuilder.penaltyDeath(); vmPolicyBuilder.penaltyDeath(); }else { threadPolicyBuilder.penaltyLog(); vmPolicyBuilder.penaltyLog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3450/buggy-version/src.main.java.com.kloudtek.util.AndroidUtils.java", "BodyUseAPI": [], "Fixed commit": "49c6e2ebe5da5fcfe8b4c1ef78b34de893c6438c", "Url": "https://api.github.com/repos/Kloudtek/ktutils", "Date": "2014-07-31T20:35:21Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hash == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5862/buggy-version/src.main.java.utils.Parser.java", "BodyUseAPI": [], "Fixed commit": "ccfa233dd9796886f0a31015e7ece97a633b0f43", "Url": "https://api.github.com/repos/wdavies973/TBA-API-V3", "Date": "2017-08-06T04:21:56Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.apiman.manager.api.core.IStorage.getRole(role.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (roleBean != null) { storage.updateRole(role); }else { storage.createRole(role); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8615/buggy-version/manager.api.export-import.src.main.java.io.apiman.manager.api.exportimport.manager.StorageImportDispatcher.java", "BodyUseAPI": [], "Fixed commit": "9e8328e6198fbbcae041f0f29faad8c18bac08d2", "Url": "https://api.github.com/repos/apiman/apiman", "Date": "2016-01-04T19:59:05Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.apiman.manager.api.core.IStorage.getGateway(gateway.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (gatewayBean != null) { storage.updateGateway(gateway); }else { storage.createGateway(gateway); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8615/buggy-version/manager.api.export-import.src.main.java.io.apiman.manager.api.exportimport.manager.StorageImportDispatcher.java", "BodyUseAPI": [], "Fixed commit": "9e8328e6198fbbcae041f0f29faad8c18bac08d2", "Url": "https://api.github.com/repos/apiman/apiman", "Date": "2016-01-04T19:59:05Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.apiman.manager.api.core.IStorage.getPolicyDefinition(policyDef.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (policyDefBean != null) { storage.updatePolicyDefinition(policyDef); }else { storage.createPolicyDefinition(policyDef); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8615/buggy-version/manager.api.export-import.src.main.java.io.apiman.manager.api.exportimport.manager.StorageImportDispatcher.java", "BodyUseAPI": [], "Fixed commit": "9e8328e6198fbbcae041f0f29faad8c18bac08d2", "Url": "https://api.github.com/repos/apiman/apiman", "Date": "2016-01-04T19:59:05Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.getDestinationLocation()) != null) { canvas.rotate(data.getDestinationBearing(), canvasCenterX, canvasCenterY); canvas.drawBitmap(pointerImage, null, cardRect, imagePaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6942/buggy-version/app.src.main.java.com.onettm.directions.CompassSurface.java", "BodyUseAPI": ["android.graphics.Canvas.rotate(data.getDestinationBearing(),float,float)", "com.onettm.directions.Data.getDestinationBearing()"], "Fixed commit": "f162294d5076b85d53ea2fdd940e24318bd86675", "Url": "https://api.github.com/repos/sintjuri/Directions", "Date": "2015-02-11T12:12:11Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hu.bme.sch.khongi.onlab.ui.todo.content.text.TextContentFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (args != null) { java.lang.String content = getArguments().getString(TodoConstants.Intent.TEXTCONTENT); if (content != null) { etTextContent.setText(content); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5659/buggy-version/app.src.main.java.hu.bme.sch.khongi.onlab.ui.todo.content.text.TextContentFragment.java", "BodyUseAPI": [], "Fixed commit": "bc2a4b982b3a69a3bdec6d9da8235f380a843b34", "Url": "https://api.github.com/repos/khongi/Onlab", "Date": "2016-04-25T18:03:06Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((timestamp) instanceof org.apache.flink.streaming.api.windowing.helper.SystemTimestamp) && ((otherTSW.timestamp) instanceof org.apache.flink.streaming.api.windowing.helper.SystemTimestamp)) { return true; }else { return ((startTime) == (otherTSW.startTime)) && ((timestamp.getClass()) == (otherTSW.timestamp.getClass())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6012/buggy-version/flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.helper.TimestampWrapper.java", "BodyUseAPI": ["org.apache.flink.streaming.api.windowing.helper.Timestamp<T>.getClass()"], "Fixed commit": "13d588825582615c8a5cbe6278243ef36a3d8858", "Url": "https://api.github.com/repos/mbalassi/flink", "Date": "2015-04-26T10:39:42Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(node.hasAttributes())) return image;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/455/buggy-version/src.SmithStuff.CreateFlowChart.java", "BodyUseAPI": [], "Fixed commit": "dfa4e9dc7a451a5e65aa13e842fbd4a8db894ffa", "Url": "https://api.github.com/repos/Endeavour-ICT-Systems/SMITH", "Date": "2017-05-24T03:18:54Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (x != null) persons.remove(x);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2161/buggy-version/src.main.java.com.amazone.peoplefarm.controllers.PersonController.java", "BodyUseAPI": ["java.util.List<com.amazone.peoplefarm.model.Person>.remove(com.amazone.peoplefarm.model.Person)"], "Fixed commit": "ede6838d3757dd1da4e914502d58872229b69a7b", "Url": "https://api.github.com/repos/judoka1000/PeopleFarm", "Date": "2017-11-06T09:42:55Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cpw.mods.fml.relauncher.RelaunchClassLoader.DEBUG_CLASSLOADING_FINER) { cpw.mods.fml.common.FMLLog.finest(\"Beginning transform of %s (%s) Start Length: %d\", name, transformedName, (basicClass == null ? 0 : basicClass.length)); for (cpw.mods.fml.relauncher.IClassTransformer transformer : transformers) { java.lang.String transName = transformer.getClass().getName(); cpw.mods.fml.common.FMLLog.finest(\"Before Transformer %s: %d\", transName, (basicClass == null ? 0 : basicClass.length)); basicClass = transformer.transform(name, transformedName, basicClass); cpw.mods.fml.common.FMLLog.finest(\"After Transformer %s: %d\", transName, (basicClass == null ? 0 : basicClass.length)); } cpw.mods.fml.common.FMLLog.finest(\"Ending transform of %s (%s) Start Length: %d\", name, transformedName, (basicClass == null ? 0 : basicClass.length)); }else { for (cpw.mods.fml.relauncher.IClassTransformer transformer : transformers) { basicClass = transformer.transform(name, transformedName, basicClass); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7392/buggy-version/common.cpw.mods.fml.relauncher.RelaunchClassLoader.java", "BodyUseAPI": [], "Fixed commit": "577b19c1cf12a354112e829fb5704c32fd6cd0a5", "Url": "https://api.github.com/repos/agaricusb/FML", "Date": "2013-03-17T18:54:26Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((line.toLowerCase().contains(\":\")) && (!(line.toLowerCase().contains(\"error\")))) && (!(line.toLowerCase().contains(\"warning\")))) { err = de.relaunch64.popelganda.util.Tools.getErrorLineFromLine(line, \":\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7183/buggy-version/src.de.relaunch64.popelganda.util.Tools.java", "BodyUseAPI": ["de.relaunch64.popelganda.util.Tools.getErrorLineFromLine(java.lang.String,java.lang.String)"], "Fixed commit": "ded1e6c33ef4cc891b3ea95b8a317b418b2eefc1", "Url": "https://api.github.com/repos/sjPlot/Relaunch64", "Date": "2014-05-04T08:35:42Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) == 1) { isOpened[0] = true; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1022/buggy-version/src.main.java.Percolation.java", "BodyUseAPI": [], "Fixed commit": "ff61c8efac1b5e7aca2c9baa745548d5b185c552", "Url": "https://api.github.com/repos/maiorovi/AlgorithmsAssignmentPart1", "Date": "2015-06-22T21:23:01Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) == 1) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1022/buggy-version/src.main.java.Percolation.java", "BodyUseAPI": [], "Fixed commit": "ff61c8efac1b5e7aca2c9baa745548d5b185c552", "Url": "https://api.github.com/repos/maiorovi/AlgorithmsAssignmentPart1", "Date": "2015-06-22T21:23:01Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nex.mobilegis.dataaccess.DBManager.execute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(rs.next())) { java.sql.ResultSet user = db.execute(((\"SELECT first_name, id FROM user WHERE username = '\" + username) + \"'\")); while (user.next()) { java.lang.String firstName = user.getString(\"first_name\"); int userId = user.getInt(\"id\"); db.insertPhone(mac, (firstName + \"'s Phone\"), java.lang.Boolean.TRUE, Authenticator.validAccountId, userId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1064/buggy-version/src.main.java.com.nex.mobilegis.logic.PhoneLoginManager.java", "BodyUseAPI": [], "Fixed commit": "df3e280e0f618ad9a18fe1775e64a6f31029329f", "Url": "https://api.github.com/repos/tjmeyer/mobileGIS", "Date": "2015-03-25T01:54:27Z"},
{"Line": "=>2094", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (revHistory != null) { historyCount = revHistory.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/974/buggy-version/CouchbaseLiteProject.CBLite.src.main.java.com.couchbase.cblite.CBLDatabase.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()"], "Fixed commit": "2f5de6ab6a0eb2bb38c2f1fde7ae076e726dc554", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-android", "Date": "2013-07-11T00:29:28Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element == null) { return elementValues; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8/buggy-version/src.com.bosch.xmltoexcel.Process.java", "BodyUseAPI": [], "Fixed commit": "0c6184533939b2055613b19c75344dc4df92ec3b", "Url": "https://api.github.com/repos/pavantiruppur/XMLToExcel", "Date": "2015-10-04T12:24:34Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mItem) == null) { getActivity().getFragmentManager().popBackStack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4837/buggy-version/app.src.main.java.kaka.android.dn.NewsItemDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "361c09e4f855652907128043a77136484a3f5863", "Url": "https://api.github.com/repos/kaka/dn-rss", "Date": "2014-10-17T17:34:26Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.oltu.oauth2.common.utils.JSONUtils.parseJSON(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(jsonObject.isEmpty())) { profile = org.apache.oltu.oauth2.common.utils.JSONUtils.parseJSON(jsonObject.entrySet().iterator().next().getValue().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/628/buggy-version/components.application-authenticators.org.wso2.carbon.identity.application.authenticator.social.src.main.java.org.wso2.carbon.identity.application.authenticator.social.yahoo.YahooOAuth2Authenticator.java", "BodyUseAPI": ["java.util.Set<java.util.Map.Entry<java.lang.String, java.lang.Object>>.iterator()", "org.apache.oltu.oauth2.common.utils.JSONUtils.parseJSON(java.lang.String)", "java.util.Iterator<java.util.Map.Entry<java.lang.String, java.lang.Object>>.next()", "java.util.Map<java.lang.String, java.lang.Object>.entrySet()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.lang.Object.toString()"], "Fixed commit": "c70da69e0a72d033f437c913460938dfb5e8c52a", "Url": "https://api.github.com/repos/Pushpalanka/carbon-identity", "Date": "2016-02-02T14:38:33Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enemyUnitIDs.size()) < 2) { unitActions.put(firstArcherID, archerAct); childNodes.add(new edu.cwru.sepia.agent.minimax.GameStateChild(unitActions, childState)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2776/buggy-version/src.edu.cwru.sepia.agent.minimax.GameState.java", "BodyUseAPI": [], "Fixed commit": "22b21cd58f9a4f41c107627c02f568fcb4146d83", "Url": "https://api.github.com/repos/scp44/AI_PA2", "Date": "2015-03-04T21:21:01Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getDisplayError()) { addFacesMessage(\"\", m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8705/buggy-version/domino.xsp.src.main.java.org.openntf.domino.xsp.XspOpenLogItem.java", "BodyUseAPI": [], "Fixed commit": "d95405025fbbdce371b6a3828c437693f918d768", "Url": "https://api.github.com/repos/OpenNTF/org.openntf.domino", "Date": "2016-05-19T21:49:05Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (false) { }else if (false) { }else if (tiger) { lastnum = 1; }else if (cow) { lastnum = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2271/buggy-version/src.com.mj.childrensapp.MyZoo.java", "BodyUseAPI": [], "Fixed commit": "62c4f68f1e2d00970e5e90b8c6d752e9b48d38aa", "Url": "https://api.github.com/repos/mjones2930/ChildrensApp", "Date": "2014-10-28T15:26:37Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (groupID == (-1)) { result = true; }else { org.openremote.controller.action.AdministratorController.groupService.getGroup(groupID); if ((org.openremote.controller.action.AdministratorController.groupService.getNumGroups()) == 1) { result = true; }else { result = false; errorString = \"Group ID is not valid: \" + groupID; } org.openremote.controller.action.AdministratorController.groupService.free(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/934/buggy-version/Product.Controller.src.org.openremote.controller.action.AdministratorController.java", "BodyUseAPI": ["org.openremote.controller.service.GroupService.getGroup(int)"], "Fixed commit": "d385f3b840f1fff382f615fa810351391793c6b4", "Url": "https://api.github.com/repos/DomoTop/DomoTop", "Date": "2012-05-03T14:42:23Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parent.equals(ObjectId.NULL)) || (geogit.getIndex().getDatabase().exists(parent))) { final java.util.Iterator<org.geogit.api.plumbing.diff.DiffEntry> diff = geogit.command(org.geogit.api.porcelain.DiffOp.class).setOldVersion(parent).setNewVersion(input.getId()).setFilter(pathFilter).call(); while (diff.hasNext()) { org.geogit.api.plumbing.diff.DiffEntry entry = diff.next(); if ((entry.changeType()) == (DiffEntry.ChangeType.ADDED)) { added++; }else if ((entry.changeType()) == (DiffEntry.ChangeType.MODIFIED)) { modified++; }else { removed++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4115/buggy-version/src.web.api.src.main.java.org.geogit.web.api.commands.Log.java", "BodyUseAPI": ["geogit.command(org.geogit.api.porcelain.DiffOp.class).setOldVersion(parent).setNewVersion(input.getId()).setFilter(java.lang.String)", "geogit.command(org.geogit.api.porcelain.DiffOp.class).setOldVersion(org.geogit.api.ObjectId)", "geogit.command(org.geogit.api.porcelain.DiffOp.class).setOldVersion(parent).setNewVersion(input.getId()).setFilter(pathFilter).call()", "geogit.command(org.geogit.api.porcelain.DiffOp.class).setOldVersion(parent).setNewVersion(input.getId())", "org.geogit.api.CommandLocator.command(java.lang.Class)"], "Fixed commit": "c975b07306e6f7a13b7353f4a76a9874af34b365", "Url": "https://api.github.com/repos/ROGUE-JCTD/GeoGit", "Date": "2014-03-27T13:57:27Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bei.m3c.helpers.M3SHelper.getAudioMessage(bei.m3c.commands.TPCStartAudioMessageCommand)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (audioMessage != null) { bei.m3c.players.MessagePlayer.getInstance().addAudioMessage(audioMessage); }else { android.util.Log.w(bei.m3c.jobs.PlayMessageJob.TAG, \"Audio message not found.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1413/buggy-version/app.src.main.java.bei.m3c.jobs.PlayMessageJob.java", "BodyUseAPI": ["bei.m3c.players.MessagePlayer.getInstance().addAudioMessage(bei.m3c.models.AudioMessage)"], "Fixed commit": "bde2b63be13d38d1c0e693fbac485b91afbeeaa3", "Url": "https://api.github.com/repos/stupidusername/M3C", "Date": "2016-09-30T19:22:56Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["KTH.getEvent(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((event.getType()) == (Event.Type.LECTURE)) { if ((event.getLecturer().getId()) == (lecturer.getId())) { numBookings++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5737/buggy-version/src.GA.java", "BodyUseAPI": ["event.getLecturer().getId()", "Event.getLecturer()"], "Fixed commit": "8db617164e373cea713dee24bb0d88f845c13953", "Url": "https://api.github.com/repos/hvy/kthscheduling", "Date": "2014-03-20T11:23:42Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (subQuery != null) { subQuery.where(builder.equal(userId, jobFilter.getUserId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7645/buggy-version/eureka-protempa-etl.src.main.java.edu.emory.cci.aiw.cvrg.eureka.etl.dao.JpaJobDao.java", "BodyUseAPI": ["edu.emory.cci.aiw.cvrg.eureka.etl.dao.Subquery<java.util.Date>.where(builder.equal(userId, jobFilter.getUserId()))"], "Fixed commit": "013cc7003197ace143f60c519fa0190c38a986fa", "Url": "https://api.github.com/repos/arpost/eureka", "Date": "2016-08-30T22:10:56Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (api == null) { for (java.lang.Class<?> i : resourceClass.getInterfaces()) { api = i.getAnnotation(com.wordnik.swagger.annotations.Api.class); if (api != null) { break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3453/buggy-version/modules.org.restlet.ext.apispark.src.org.restlet.ext.apispark.internal.introspection.helper.SwaggerAnnotationIntrospectionHelper.java", "BodyUseAPI": [], "Fixed commit": "ab880749f01e77a9aaf7ad73b706ef338169ffda", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2015-01-21T14:03:01Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((amountOfPassengers) != (booking.getPassengers().size())) { for (int i = 0; i < (amountOfPassengers); i++) { booking.addPassenger(new com.realdolmen.togethair.domain.Passenger()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7196/buggy-version/src.main.java.com.realdolmen.togethair.beans.BookingFlowBean.java", "BodyUseAPI": ["com.realdolmen.togethair.domain.Booking.addPassenger(com.realdolmen.togethair.domain.Passenger)"], "Fixed commit": "fc4a83e33c2f0c1bf6f7b18c02219b73a33eba35", "Url": "https://api.github.com/repos/tjen-dekker/TogethAir", "Date": "2017-11-09T13:16:15Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sword) == null) { nidhogglike.entities.Sword sword = ((nidhogglike.game.NidhoggUniverse) (data.getUniverse())).getFreeSword(); if (sword != null) { setSword(sword); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2612/buggy-version/src.main.java.nidhogglike.entities.Player.java", "BodyUseAPI": [], "Fixed commit": "580ae3401a1d296aa3da828b9d85fc6df3babe6f", "Url": "https://api.github.com/repos/Nesqwik/Nidhogg_like", "Date": "2016-01-26T18:10:04Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.openl.extension.xmlrules.parsing.TableGridBuilder.isDimension(parameter))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1802/buggy-version/STUDIO.org.openl.extension.xmlrules.src.org.openl.extension.xmlrules.parsing.TableGridBuilder.java", "BodyUseAPI": [], "Fixed commit": "aedaf752994ccfa6b63c777ec3c772110552f8a8", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2016-04-21T14:09:49Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pli.global_players.containsKey(p.getName())) { pli.global_players.get(p.getName()).spectate(p.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/550/buggy-version/API.src.main.java.com.comze_instancelabs.minigamesapi.ArenaListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.getName()", "pli.global_players.get(p.getName()).spectate(p.getName())", "org.bukkit.entity.Player.getName()", "pli.global_players.get(p.getName())"], "Fixed commit": "fb551616713f54c1cfc33c58dfb59d6e5403cc0a", "Url": "https://api.github.com/repos/instance01/MinigamesAPI", "Date": "2014-07-26T08:21:30Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (constructorObject != null) { methodCallAnalyzer.processArgumentsOfInternalMethodInvocation(classObject, constructorObject, classInstanceCreation.arguments(), methodBinding, variable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7516/buggy-version/src.gr.uom.java.ast.decomposition.cfg.PDGExpression.java", "BodyUseAPI": ["gr.uom.java.ast.decomposition.cfg.MethodCallAnalyzer.processArgumentsOfInternalMethodInvocation(gr.uom.java.ast.ClassObject,gr.uom.java.ast.ConstructorObject,classInstanceCreation.arguments(),org.eclipse.jdt.core.dom.IMethodBinding,gr.uom.java.ast.decomposition.cfg.AbstractVariable)"], "Fixed commit": "e94461021648e05fedc8a35ff3e79226cbf8d331", "Url": "https://api.github.com/repos/tsantalis/JDeodorant", "Date": "2015-10-26T21:36:14Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (constructorObject != null) { methodCallAnalyzer.processArgumentsOfInternalMethodInvocation(classObject, constructorObject, classInstanceCreation.arguments(), methodBinding, variable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7516/buggy-version/src.gr.uom.java.ast.decomposition.cfg.PDGNode.java", "BodyUseAPI": ["gr.uom.java.ast.decomposition.cfg.MethodCallAnalyzer.processArgumentsOfInternalMethodInvocation(gr.uom.java.ast.ClassObject,gr.uom.java.ast.ConstructorObject,classInstanceCreation.arguments(),org.eclipse.jdt.core.dom.IMethodBinding,gr.uom.java.ast.decomposition.cfg.AbstractVariable)"], "Fixed commit": "e94461021648e05fedc8a35ff3e79226cbf8d331", "Url": "https://api.github.com/repos/tsantalis/JDeodorant", "Date": "2015-10-26T21:36:14Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.size()) > 0) { for (int i = 0; i < n; i++) column[i][(j + 1)] = data.get(i).getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7812/buggy-version/energy2d.src.org.concord.energy2d.view.DataViewer.java", "BodyUseAPI": ["data.get(i).getValue()", "java.util.List<org.concord.energy2d.model.TimedData>.get(int)"], "Fixed commit": "fb42a5be4325530f63b7f21b1eec62c24ed0977f", "Url": "https://api.github.com/repos/charxie/energy2d", "Date": "2016-09-26T12:28:30Z"},
{"Line": "=>1061", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((skillUseInfo.getType()) == (cfvbaibai.cardfantasy.data.SkillType.\u65f6\u5149\u5012\u6d41)) { cfvbaibai.cardfantasy.engine.skill.TimeBack.apply(skillUseInfo, this, myField.getOwner(), opField.getOwner()); }else if ((skillUseInfo.getType()) == (cfvbaibai.cardfantasy.data.SkillType.\u732e\u796d)) { cfvbaibai.cardfantasy.engine.skill.Sacrifice.apply(this, skillUseInfo, card, reviver); }else if ((skillUseInfo.getType()) == (cfvbaibai.cardfantasy.data.SkillType.\u53cd\u566c)) { cfvbaibai.cardfantasy.engine.skill.CounterBite.apply(skillUseInfo, this, card); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8843/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.SkillResolver.java", "BodyUseAPI": ["cfvbaibai.cardfantasy.engine.skill.CounterBite.apply(cfvbaibai.cardfantasy.engine.SkillUseInfo,cfvbaibai.cardfantasy.engine.SkillResolver,cfvbaibai.cardfantasy.engine.CardInfo)", "cfvbaibai.cardfantasy.engine.SkillUseInfo.getType()", "cfvbaibai.cardfantasy.engine.skill.Sacrifice.apply(cfvbaibai.cardfantasy.engine.SkillResolver,cfvbaibai.cardfantasy.engine.SkillUseInfo,cfvbaibai.cardfantasy.engine.CardInfo,cfvbaibai.cardfantasy.engine.CardInfo)", "cfvbaibai.cardfantasy.engine.SkillUseInfo.getType()", "cfvbaibai.cardfantasy.engine.skill.TimeBack.apply(cfvbaibai.cardfantasy.engine.SkillUseInfo,cfvbaibai.cardfantasy.engine.SkillResolver,myField.getOwner(),opField.getOwner())"], "Fixed commit": "ef94c75a3abe16987c5835eadeaf1716d9c328e1", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2015-01-10T13:46:11Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.confluent.kafkarest.ProduceTask.getSchemaHolder()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((schemaHolder.getKeySchema()) != null) { keySchema = new org.apache.avro.Schema.Parser().parse(schemaHolder.getKeySchema()); if (schemaIdCache.containsKey(keySchema)) { keySchemaId = schemaIdCache.get(keySchema); }else { keySchemaId = keySerializer.register((topic + \"-key\"), keySchema); schemaIdCache.put(keySchema, keySchemaId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4822/buggy-version/src.main.java.io.confluent.kafkarest.AvroRestProducer.java", "BodyUseAPI": ["org.apache.avro.Schema.Parser.parse(schemaHolder.getKeySchema())", "io.confluent.kafkarest.entities.SchemaHolder.getKeySchema()"], "Fixed commit": "505e4a67d7bce0b5ab60034fc3625a7ed89c1422", "Url": "https://api.github.com/repos/jdehrlich/kafka-rest", "Date": "2016-07-13T23:18:42Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.confluent.kafkarest.ProduceTask.getSchemaHolder()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((schemaHolder.getValueSchema()) != null) { valueSchema = new org.apache.avro.Schema.Parser().parse(schemaHolder.getValueSchema()); if (schemaIdCache.containsKey(valueSchema)) { valueSchemaId = schemaIdCache.get(valueSchema); }else { valueSchemaId = valueSerializer.register((topic + \"-value\"), valueSchema); schemaIdCache.put(valueSchema, valueSchemaId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4822/buggy-version/src.main.java.io.confluent.kafkarest.AvroRestProducer.java", "BodyUseAPI": ["io.confluent.kafkarest.entities.SchemaHolder.getValueSchema()", "org.apache.avro.Schema.Parser.parse(schemaHolder.getValueSchema())"], "Fixed commit": "505e4a67d7bce0b5ab60034fc3625a7ed89c1422", "Url": "https://api.github.com/repos/jdehrlich/kafka-rest", "Date": "2016-07-13T23:18:42Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.contains(e.getMessage(), \"Unknown system variable\"))) { com.alibaba.otter.canal.parse.inbound.mysql.MysqlConnection.logger.warn(org.apache.commons.lang.exception.ExceptionUtils.getFullStackTrace(e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5738/buggy-version/parse.src.main.java.com.alibaba.otter.canal.parse.inbound.mysql.MysqlConnection.java", "BodyUseAPI": ["org.slf4j.Logger.warn(org.apache.commons.lang.exception.ExceptionUtils.getFullStackTrace(e))", "org.apache.commons.lang.exception.ExceptionUtils.getFullStackTrace(java.lang.Exception)"], "Fixed commit": "3f38ad6f4927e1d3bcf43faca8501df1e706405c", "Url": "https://api.github.com/repos/alibaba/canal", "Date": "2016-11-28T06:10:57Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.parse.ParseUser.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fileObject == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7148/buggy-version/WeMake.src.co.gov.wemake.wemakeapp.factory.FactoryUser.java", "BodyUseAPI": [], "Fixed commit": "af5d0e28049aefd932ee6755aa5ab6e6537e29bc", "Url": "https://api.github.com/repos/ReyesMagos/WeMakeApp", "Date": "2014-10-19T20:59:30Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(descriptor.onFloor)) { drawSignalPin(front.inverse(), new float[]{ 6.37F, 6.37F, 5.67F, 6.12F }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6460/buggy-version/src.main.java.mods.eln.sixnode.electricaldatalogger.ElectricalDataLoggerRender.java", "BodyUseAPI": [], "Fixed commit": "97e856a1f11ca828333d2cd119a872be2be8dc4b", "Url": "https://api.github.com/repos/Electrical-Age/ElectricalAge", "Date": "2015-04-09T21:41:42Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasUnsavedChanges()) { int result = generateConfirmationDialog(); switch (result) { case 1 : save(); case 0 : break; case 2 : return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2313/buggy-version/src.proj7ZhouRinkerSahChistolini.Controllers.FileMenuController.java", "BodyUseAPI": [], "Fixed commit": "7244238a1d8f5e1ecf09041a88fee89fa587885d", "Url": "https://api.github.com/repos/vksah32/CS361-ComposerApp", "Date": "2016-11-16T21:57:10Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentOpenFile) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2313/buggy-version/src.proj7ZhouRinkerSahChistolini.Controllers.FileMenuController.java", "BodyUseAPI": [], "Fixed commit": "7244238a1d8f5e1ecf09041a88fee89fa587885d", "Url": "https://api.github.com/repos/vksah32/CS361-ComposerApp", "Date": "2016-11-16T21:57:10Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentOpenFile) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2313/buggy-version/src.proj7ZhouRinkerSahChistolini.Controllers.FileMenuController.java", "BodyUseAPI": [], "Fixed commit": "7244238a1d8f5e1ecf09041a88fee89fa587885d", "Url": "https://api.github.com/repos/vksah32/CS361-ComposerApp", "Date": "2016-11-16T21:57:10Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.sagebionetworks.repo.manager.AttachmentManagerImpl.isPreviewType(token.getFileName()))) throw new java.lang.IllegalArgumentException(\"User profile attachment is not a recognized image type, please try a different file.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7803/buggy-version/services.repository.src.main.java.org.sagebionetworks.repo.manager.UserProfileManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "76bc751b680542c6afd28407da2bc5164ffc3759", "Url": "https://api.github.com/repos/jay-hodgson/Synapse-Repository-Services", "Date": "2012-07-09T22:02:35Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) == 1) { return top; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4645/buggy-version/src.main.java.org.magen.oj.leetcode.easy.s2.MinStackSolution1.java", "BodyUseAPI": [], "Fixed commit": "ed533b2e3e3e4545d98b6851039fb4b8b8408b80", "Url": "https://api.github.com/repos/shenzulun/leetcode", "Date": "2014-11-12T14:33:53Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"Not Found Error\".equals(error.optString(\"__type\"))) { json = null; }else { com.sciamlab.ckan4j.webapi.SocialLoginResource.logger.error(e.getMessage()); throw new com.sciamlab.common.exception.InternalServerErrorException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8553/buggy-version/src.main.java.com.sciamlab.ckan4j.webapi.SocialLoginResource.java", "BodyUseAPI": [], "Fixed commit": "2020302888f68355e4c6bf77605d6e9410929fb4", "Url": "https://api.github.com/repos/sciamlab/ckan4j-webapi", "Date": "2016-01-28T17:03:08Z"},
{"Line": "=>569", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.dialogs.MessageDialog.openConfirm(org.eclipse.swt.widgets.Display.getCurrent().getActiveShell(),org.talend.metadata.managment.ui.i18n.Messages.getString(\"MetadataTalendTypeEditor.confirmTitle\"),org.talend.metadata.managment.ui.i18n.Messages.getString(\"MetadataTalendTypeEditor.confirmMessage\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (confirm) { org.talend.core.ICoreService coreService = null; if (org.talend.core.GlobalServiceRegister.getDefault().isServiceRegistered(org.talend.core.ICoreService.class)) { coreService = ((org.talend.core.ICoreService) (org.talend.core.GlobalServiceRegister.getDefault().getService(org.talend.core.ICoreService.class))); coreService.syncMappingsFileFromSystemToProject(); tmpFileManager.reload(); coreService.synchronizeMapptingXML(); } super.load(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7070/buggy-version/main.plugins.org.talend.metadata.managment.ui.src.main.java.org.talend.metadata.managment.ui.editor.MetadataTalendTypeEditor.java", "BodyUseAPI": [], "Fixed commit": "f8f7d8df12ded36c7b596b91cab0d0e54bc5448b", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2016-08-18T07:14:02Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.itemInfo) != null) this.itemInfo.destroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5352/buggy-version/src.com.spellcastrpg.main.objects.gui.Inventory.java", "BodyUseAPI": [], "Fixed commit": "1dd39fa65b74d8872a11b2572daf8990644959b6", "Url": "https://api.github.com/repos/MCMastery/spellcast", "Date": "2016-05-20T21:15:32Z"},
{"Line": "=>669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((service.credentials) == null) || ((service.credentials.url) == null)) { throw new java.lang.IllegalArgumentException(\"Invalid VCAP_SERVICES services\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3578/buggy-version/cloudant-client.src.main.java.com.cloudant.client.api.ClientBuilder.java", "BodyUseAPI": [], "Fixed commit": "8a1adc80523f4d70a05a741f7ab282224cfef64a", "Url": "https://api.github.com/repos/cloudant/java-cloudant", "Date": "2016-12-09T13:42:11Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["view.AppointmentCreationView.getMinSeatCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((minSeatCountString.length()) > 0) { minSeatCount = java.lang.Integer.parseInt(minSeatCountString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/816/buggy-version/src.main.Controller.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "e793538de1fb1f1c83d5c90055dac355f1d9920c", "Url": "https://api.github.com/repos/thomahan/calendar", "Date": "2015-03-12T13:59:14Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedAppointment) != null) { if (selectedAppointment.isEditable()) { calendarView.setAppointmentStatus(\"Owned\"); }else { calendarView.setAppointmentStatus(selectedAppointment.getStatus()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/816/buggy-version/src.main.Controller.java", "BodyUseAPI": [], "Fixed commit": "e793538de1fb1f1c83d5c90055dac355f1d9920c", "Url": "https://api.github.com/repos/thomahan/calendar", "Date": "2015-03-12T13:59:14Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cloudfoundry.ide.eclipse.internal.server.ui.editor.ServerWizardValidator.getPreviousValidationStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((lastStatus == null) || ((lastStatus.getStatus().getSeverity()) != (org.eclipse.core.runtime.IStatus.ERROR))) { lastStatus = validator.validate(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3368/buggy-version/org.cloudfoundry.ide.eclipse.server.ui.src.org.cloudfoundry.ide.eclipse.internal.server.ui.wizards.CloudFoundryServerWizardFragment.java", "BodyUseAPI": [], "Fixed commit": "4c9d3ece0e17ca736b212dabc9dd534203a016e3", "Url": "https://api.github.com/repos/spring-projects/eclipse-integration-cloudfoundry", "Date": "2013-11-01T23:22:23Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.uber.tchannel.messages.EncodedResponse.isError()) { return com.uber.tchannel.messages.EncodedResponse.getError().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4685/buggy-version/tchannel-core.src.main.java.com.uber.tchannel.messages.EncodedResponse.java", "BodyUseAPI": [], "Fixed commit": "f4cd1a82ac976b92cbb67c04bff2a1a5e93770d7", "Url": "https://api.github.com/repos/uber/tchannel-java", "Date": "2015-12-01T01:13:18Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view != null) && ((mHeaderView) == null)) { mHeaderView = view; mGloriousAdapter.notifyItemInserted(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8160/buggy-version/gloriousrecyclerview.src.main.java.com.xpc.gloriousrecyclerview.GloriousRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "b3434393594756afce8bf0dcd79636749783a48f", "Url": "https://api.github.com/repos/titanchen2000/GloriousRecyclerView", "Date": "2017-03-02T02:35:23Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view != null) && ((mFooterView) == null)) { mFooterView = view; mGloriousAdapter.notifyItemInserted(((mGloriousAdapter.getItemCount()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8160/buggy-version/gloriousrecyclerview.src.main.java.com.xpc.gloriousrecyclerview.GloriousRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "b3434393594756afce8bf0dcd79636749783a48f", "Url": "https://api.github.com/repos/titanchen2000/GloriousRecyclerView", "Date": "2017-03-02T02:35:23Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (iType.equals(\"create\")) { blot.jordan.ellis.com.blot.ComposeActivity.photoPaths = new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5621/buggy-version/src.main.java.blot.jordan.ellis.com.blot.ComposeActivity.java", "BodyUseAPI": [], "Fixed commit": "aecc29e1010d10ae9ae49a2dc9120fa0cf7ca95f", "Url": "https://api.github.com/repos/jordaniellis/Blot", "Date": "2014-11-06T19:40:46Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (zType.equals(ZygosityType.hemizygote)) { expObservationsSet = experiment.getHemizygoteMutants(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3555/buggy-version/src.main.java.uk.ac.ebi.phenotype.stats.graphs.ScatterChartAndTableProvider.java", "BodyUseAPI": [], "Fixed commit": "1905704e9e5c7df8108be648060c42c74e980da6", "Url": "https://api.github.com/repos/mpi2/PhenotypeArchive", "Date": "2014-05-02T16:24:18Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (Flexo.isDev) { org.openflexo.rm.Resource sourceCodeResource = org.openflexo.rm.ResourceLocator.locateSourceCodeResource(getLocalizedDirectoryResource(), \".*flexolocalization.*\"); if (sourceCodeResource != null) { setLocalizedDirectoryResource(sourceCodeResource); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1877/buggy-version/flexo-ui.src.main.java.org.openflexo.FlexoMainLocalizer.java", "BodyUseAPI": [], "Fixed commit": "a9b1f8d7e12b219e02413e552b21828a5514cb0e", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2015-04-02T09:43:59Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(video.getYid().isEmpty())) video.setUrl(video.getYid());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3430/buggy-version/src.main.java.md.leonis.tivi.admin.utils.VideoUtils.java", "BodyUseAPI": ["md.leonis.tivi.admin.utils.Video.setUrl(video.getYid())", "md.leonis.tivi.admin.utils.Video.getYid()"], "Fixed commit": "a99db3624d5a0ccabf0fc35ccd00ce1350849cd4", "Url": "https://api.github.com/repos/LeonisX/tivi-admin", "Date": "2016-09-15T07:31:29Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Properties.importName.trim().equals(\"\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8325/buggy-version/src.jas.common.JustAnotherSpawner.java", "BodyUseAPI": [], "Fixed commit": "9a0d3876865f4cd05555d452bfa58862818aeb95", "Url": "https://api.github.com/repos/Crudedragos/JustAnotherSpawner", "Date": "2013-06-05T03:03:07Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ds < 1.0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4109/buggy-version/src.org.avuna.httpd.http.plugins.javaloader.security.JLSRequestFlood.java", "BodyUseAPI": [], "Fixed commit": "c2848b71acd5c4ae0371a9bb6c5f3cfbb28851e8", "Url": "https://api.github.com/repos/Protryon/AvunaHTTPD-Java", "Date": "2015-04-21T16:22:14Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lk.filetributed.client.rpc.Client.invokeSearch(entry.getIpAddress(),int,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (fileTable1 != null) { result = \"\"; for (lk.filetributed.client.rpc.FileTableEntry entry2 : fileTable1.getEntries()) { result += (entry2.toString()) + \";\"; } return new lk.filetributed.client.rpc.services.searchResponse(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4929/buggy-version/client.src.main.java.lk.filetributed.client.rpc.Client.java", "BodyUseAPI": ["lk.filetributed.client.rpc.FileTable.getEntries()"], "Fixed commit": "3b6c9e4135983067665c70f98c285c6d2eea909b", "Url": "https://api.github.com/repos/swsachith/Filetributed", "Date": "2015-04-07T18:51:49Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (genmodel.existGenModel(context)) { basePackage = genmodel.getBasePackage(context.genModelFile); if (basePackage != null) context.basePackage = new org.k3.language.ui.tools.ToolsString().generateListPackage(basePackage, ((byte) (46))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8598/buggy-version/eclipse.org.k3.language.ui.src.org.k3.language.ui.wizards.WizardNewProjectK3Plugin.java", "BodyUseAPI": ["org.k3.language.ui.tools.GenerateGenModelCode.getBasePackage(context.genModelFile)"], "Fixed commit": "1d6b92957372e096e08a4b88b3e2c24f6232b940", "Url": "https://api.github.com/repos/diverse-project/k3", "Date": "2013-10-04T08:58:27Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(st.hasMoreTokens())) { throw new java.lang.IllegalArgumentException(\"Attempting to scan invalid header\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1700/buggy-version/src.com.meterware.httpunit.HttpUnitUtils.java", "BodyUseAPI": [], "Fixed commit": "bdae969b19051fe2798244e36527ab2e5daf5cf8", "Url": "https://api.github.com/repos/emopers/httpunit", "Date": "2015-10-21T17:51:03Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((height < (heightTop)) && (height > (heightBottom))) lookFrom[1] = height;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2193/buggy-version/src.scrollthief.view.View.java", "BodyUseAPI": [], "Fixed commit": "b3c3f3f90a3e1042d92ad14c380c5f2b8a57eee9", "Url": "https://api.github.com/repos/MouaYing/ScrollThief", "Date": "2015-04-07T03:34:49Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((totalResults) < (mItemsPerPage)) { mItemsPerPage = totalResults; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7641/buggy-version/FindaMovie.app.src.main.java.com.robinkanatzar.findamovie.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fbde42a0287a8b92ebb585876d9312371f4f4a3a", "Url": "https://api.github.com/repos/robinckanatzar/find-a-movie", "Date": "2017-04-29T19:25:05Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (linearParent != null) { if (!(commit.getName().equals(linearParent))) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/759/buggy-version/src.main.java.com.gitblit.git.ReceiveHook.java", "BodyUseAPI": ["commit.getName().equals(java.lang.String)"], "Fixed commit": "d1dc77b4b1599f7089e3184eb622f51035728da4", "Url": "https://api.github.com/repos/gitblit/gitblit", "Date": "2013-07-02T20:46:52Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((commit.getParentCount()) == 0) { linearParent = null; }else { linearParent = commit.getParents()[0].getId().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/759/buggy-version/src.main.java.com.gitblit.git.ReceiveHook.java", "BodyUseAPI": ["commit.getParents()[0].getId().getName()", "org.eclipse.jgit.revwalk.RevCommit.getParents()", "commit.getParents()[0].getId()"], "Fixed commit": "d1dc77b4b1599f7089e3184eb622f51035728da4", "Url": "https://api.github.com/repos/gitblit/gitblit", "Date": "2013-07-02T20:46:52Z"},
{"Line": "=>866", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dorkbox.systemTray.SystemTray.DEBUG) { dorkbox.systemTray.SystemTray.logger.debug(\"Tray indicator image size: {}\", trayImageSize); dorkbox.systemTray.SystemTray.logger.debug(\"Tray menu image size: {}\", menuImageSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4606/buggy-version/src.dorkbox.systemTray.SystemTray.java", "BodyUseAPI": [], "Fixed commit": "428f39baf196e18cd112b2b57d06717f05c62492", "Url": "https://api.github.com/repos/dorkbox/SystemTray", "Date": "2017-09-03T12:53:02Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Constructor<? extends com.dumptruckman.minecraft.pluginbase.permission.PermFactory>.isAccessible()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!access) { com.dumptruckman.minecraft.pluginbase.permission.PermFactory.factory.setAccessible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3603/buggy-version/permissions.src.main.java.com.dumptruckman.minecraft.pluginbase.permission.PermFactory.java", "BodyUseAPI": [], "Fixed commit": "ea0c4b890828c0144644f6b729f9bfdb2866abe2", "Url": "https://api.github.com/repos/dumptruckman/PluginBase", "Date": "2013-02-25T22:34:41Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Constructor<? extends com.dumptruckman.minecraft.pluginbase.permission.PermFactory>.isAccessible()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!access) { com.dumptruckman.minecraft.pluginbase.permission.PermFactory.factory.setAccessible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3603/buggy-version/permissions.src.main.java.com.dumptruckman.minecraft.pluginbase.permission.PermFactory.java", "BodyUseAPI": [], "Fixed commit": "ea0c4b890828c0144644f6b729f9bfdb2866abe2", "Url": "https://api.github.com/repos/dumptruckman/PluginBase", "Date": "2013-02-25T22:34:41Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input.equals(\"\")) { return new java.lang.CharSequence[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7294/buggy-version/library.src.com.mobeta.android.dslv.DragSortListPreference.java", "BodyUseAPI": [], "Fixed commit": "445b5389846513dec0d0c33169c6ae1efbc674cf", "Url": "https://api.github.com/repos/kd7uiy/drag-sort-listview", "Date": "2014-08-09T20:16:04Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((CurrentClueImage) != null) { g.drawImage(CurrentClueImage, (((gc.getWidth()) / 2) - ((CurrentClueImage.getWidth()) / 2)), (((gc.getHeight()) / 2) - ((CurrentClueImage.getHeight()) / 2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8896/buggy-version/src.Clues.ClueDisplayer.java", "BodyUseAPI": [], "Fixed commit": "5cea19fedf4d16e26352f40c5685e30e22862d0c", "Url": "https://api.github.com/repos/jeansimoncollard/cs560project", "Date": "2017-02-27T01:57:11Z"},
{"Line": "=>765", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((firstrun == true) && ((starget) >= 0)) { int yourfloor = 3; if (targetnode < 234) { yourfloor = 2; } if (targetnode > 383) { yourfloor = 4; } int sfloor = 3; if ((starget) < 234) { yourfloor = 2; } if ((starget) > 383) { yourfloor = 4; } if (sfloor == yourfloor) { closestnode = starget; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8442/buggy-version/Navi.src.derricp1.apps.navi.LoadActivity.java", "BodyUseAPI": [], "Fixed commit": "1fbae3b0b0415d22b80177e7cd20276a2a690285", "Url": "https://api.github.com/repos/derricp1/navispace", "Date": "2014-05-15T15:06:35Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(proceed.get())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6520/buggy-version/jenetics.src.main.java.io.jenetics.internal.util.ConcatSpliterator.java", "BodyUseAPI": [], "Fixed commit": "54a5d4df6289065568f60c066194ccc6cf252c8b", "Url": "https://api.github.com/repos/jenetics/jenetics", "Date": "2017-11-26T18:34:39Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bitmapBefore) != null) { bitmapBefore.recycle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6365/buggy-version/app.src.main.java.com.project420.a.ecse420.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6954f54f70f3a8fe51b1d90ebac68dd5623c8d7e", "Url": "https://api.github.com/repos/ellxandra/ECSE420Project", "Date": "2016-12-10T01:16:06Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bitmapAfter) != null) { bitmapAfter.recycle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6365/buggy-version/app.src.main.java.com.project420.a.ecse420.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6954f54f70f3a8fe51b1d90ebac68dd5623c8d7e", "Url": "https://api.github.com/repos/ellxandra/ECSE420Project", "Date": "2016-12-10T01:16:06Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lblTurn.getText().endsWith(\"turn\")) { lblTurn.setText(((room.getUserOfCurrentTurn().getName()) + \" won!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/9227/buggy-version/Gomoku.src.gui.panels.RoomPanel.java", "BodyUseAPI": ["javax.swing.JLabel.setText(((room.getUserOfCurrentTurn().getName()) + \" won!\"))"], "Fixed commit": "90a30ac6acd47bf756418daebd51da06be2d3ac5", "Url": "https://api.github.com/repos/williamsentosa/Gomoku", "Date": "2015-12-04T13:32:09Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.openConnection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((httpURLConnection.getResponseCode()) == (httpURLConnection.HTTP_OK)) { parseRssFeed(httpURLConnection.getInputStream()); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3193/buggy-version/app.src.main.java.com.ntseng.cnn_top_headlines.service.XMLParserService.java", "BodyUseAPI": ["com.ntseng.cnn_top_headlines.service.XMLParserService.parseRssFeed(java.io.InputStream)", "java.net.HttpURLConnection.getInputStream()"], "Fixed commit": "d5cbfe42ab06afd08e9a0a16f34c0709b5020f96", "Url": "https://api.github.com/repos/NickTseng118/newsReader", "Date": "2015-07-09T05:05:57Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.app.AlertDialog.getWindow()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (window != null) { window.setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7297/buggy-version/app.src.main.java.ca.rmen.android.scrumchatter.dialog.InputDialogFragment.java", "BodyUseAPI": ["android.view.Window.setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE)"], "Fixed commit": "86b1a5a834e1f7db746b586b3fdb07339629dc3f", "Url": "https://api.github.com/repos/caarmen/scrumchatter", "Date": "2016-10-02T13:39:54Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jade.lang.acl.ACLMessage.getLanguage()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((language.compareTo(\"scenario\")) == 0) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/30/buggy-version/src.zone.ZoneBehaviour.java", "BodyUseAPI": [], "Fixed commit": "32dabe21efbbf71bd111f4be0f029518711db57a", "Url": "https://api.github.com/repos/jeanleonov/HPS", "Date": "2012-05-02T16:56:57Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (period == (org.jboss.logmanager.handlers.PeriodicRotatingFileHandler.Period.WEEK)) { calendar.set(java.util.Calendar.DAY_OF_WEEK, calendar.getFirstDayOfWeek()); }else { calendar.clear(java.util.Calendar.DAY_OF_WEEK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3838/buggy-version/src.main.java.org.jboss.logmanager.handlers.PeriodicRotatingFileHandler.java", "BodyUseAPI": [], "Fixed commit": "b4c7953e05e088b4ec61791c3c78fb4f1f1eacd7", "Url": "https://api.github.com/repos/kylape/jboss-logmanager", "Date": "2013-07-08T20:55:07Z"},
{"Line": "=>767", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(txtCustomKeyword.getText().trim().isEmpty())) { addItemToListModel(selCategoriesModel, txtCustomKeyword.getText().trim()); txtCustomKeyword.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3359/buggy-version/NewsdayMetadataMask.src.com.atex.h11.newsday.metadata.sp.MetadataPanel.java", "BodyUseAPI": ["java.lang.String.trim()", "com.atex.h11.newsday.metadata.sp.MetadataPanel.14.addItemToListModel(javax.swing.DefaultListModel,java.lang.String)", "javax.swing.JTextField.getText()", "javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "b2e9ffe00e7096f82a61da36db16673d2dff1673", "Url": "https://api.github.com/repos/AtexHermesCustom/Newsday-NewsdayMetadataMask", "Date": "2015-04-28T09:38:11Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shareFlags == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4094/buggy-version/Mvcs-java.src.main.java.com.heaven7.java.mvcs.StateGroup.java", "BodyUseAPI": [], "Fixed commit": "5866ba56bba40801fca81e3d1ee8213ef2a9780c", "Url": "https://api.github.com/repos/LightSun/Mvcs", "Date": "2017-05-02T14:36:26Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sammelbox.view.various.TextInputDialog.open(org.sammelbox.controller.i18n.Translator.toBeTranslated(\"Choose a separation character\"),org.sammelbox.controller.i18n.Translator.toBeTranslated(\"Please choose a separation character\"),CSVExporter.DEFAULT_SEPARATION_CHARACTER,org.sammelbox.controller.i18n.Translator.toBeTranslated(\"Export\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (separationCharacter == null) { separationCharacter = org.sammelbox.controller.filesystem.exporting.CSVExporter.DEFAULT_SEPARATION_CHARACTER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7453/buggy-version/Sammelbox-Desktop.src.org.sammelbox.controller.menu.SammelboxMenuItemListener.java", "BodyUseAPI": [], "Fixed commit": "d0df0ed094dfe98cc4115d94a879db8c8a15bf12", "Url": "https://api.github.com/repos/jeromewagener/Sammelbox", "Date": "2013-11-03T15:09:34Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spark.Request.headers(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((googleIdToken == null) || (googleIdToken.isEmpty())) { halt(401, \"Missing authorization token\"); }else { try { java.lang.String verifiedId = this.authenticator.verify(googleIdToken); java.lang.String pathAccountId = request.params(\"accountId\"); if (verifiedId != null) { if (!(verifiedId.equals(pathAccountId))) { halt(401, (((\"Authorization token for account: \" + verifiedId) + \" is valid, but does not grant access to account: \") + pathAccountId)); } }else { halt(401, \"Invalid authorization token\"); } } catch (java.lang.Exception e) { halt(500, (\"Unable to verify authorization token, error: \" + (e.getLocalizedMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6111/buggy-version/server.src.main.java.org.zakariya.mrdoodleserver.sync.SyncRouter.java", "BodyUseAPI": ["org.zakariya.mrdoodleserver.auth.Authenticator.verify(java.lang.String)"], "Fixed commit": "6c0a7672496034d9966039ef0c1e229f24303778", "Url": "https://api.github.com/repos/ShamylZakariya/MrDoodle", "Date": "2016-08-23T23:03:07Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["t.getView().findViewById(android.R.id.message)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tv != null) { tv.setGravity(Gravity.CENTER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4661/buggy-version/app.src.main.java.com.rafapps.simplenotes.SettingsActivity.java", "BodyUseAPI": ["android.widget.TextView.setGravity(Gravity.CENTER)"], "Fixed commit": "75fc3072995c4ca8a3352c9138f590c514294ccb", "Url": "https://api.github.com/repos/RafhaanShah/SimpleNotes", "Date": "2017-09-06T10:06:39Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (depth && (type == (org.terasology.logic.manager.DefaultRenderingProcess.FBOType.FBOT_NO_COLOR))) { org.terasology.logic.manager.GL11.glReadBuffer(GL11.GL_NONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7821/buggy-version/src.main.java.org.terasology.logic.manager.DefaultRenderingProcess.java", "BodyUseAPI": [], "Fixed commit": "aec1284edd2c5e456d6b50cb652a0b95c974ebe3", "Url": "https://api.github.com/repos/MrBarsack/Terasology", "Date": "2013-06-14T12:25:56Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.elasticsearch.common.settings.Settings.getAsSize(java.lang.String,settings.getAsSize(\"queue\", settings.getAsSize(\"queue_size\", defaultSettings.getAsSize(\"queue\", defaultSettings.getAsSize(\"queue_size\", null)))))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (capacity == null) { workQueue = new java.util.concurrent.LinkedTransferQueue<java.lang.Runnable>(); }else if (((int) (capacity.singles())) > 0) { if (\"linked\".equals(queueType)) { workQueue = new java.util.concurrent.LinkedBlockingQueue<java.lang.Runnable>(((int) (capacity.singles()))); }else if (\"array\".equals(queueType)) { workQueue = new java.util.concurrent.ArrayBlockingQueue<java.lang.Runnable>(((int) (capacity.singles()))); }else { throw new org.elasticsearch.ElasticSearchIllegalArgumentException(((\"illegal queue_type set to [\" + queueType) + \"], should be either linked or array\")); } }else { workQueue = new java.util.concurrent.SynchronousQueue<java.lang.Runnable>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8166/buggy-version/src.main.java.org.elasticsearch.threadpool.ThreadPool.java", "BodyUseAPI": ["org.elasticsearch.common.unit.SizeValue.singles()", "org.elasticsearch.common.unit.SizeValue.singles()", "org.elasticsearch.common.unit.SizeValue.singles()"], "Fixed commit": "5d93b2bfe96d698e78d6481ec6f527f98c891093", "Url": "https://api.github.com/repos/dakrone/elasticsearch", "Date": "2012-07-06T09:48:45Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.startsWith(value, separator)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/977/buggy-version/bundle.src.main.java.com.adobe.acs.commons.util.OsgiPropertyUtil.java", "BodyUseAPI": [], "Fixed commit": "70e52dc5c3c898705a32d94d47212591d9fd6175", "Url": "https://api.github.com/repos/schoudry/acs-aem-commons", "Date": "2013-12-30T00:23:57Z"},
{"Line": "=>1196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((taskCompleter != null) && (taskCompleter.isRollingBack())) { java.util.List<com.emc.storageos.db.client.model.Volume> volumes = _dbClient.queryObject(com.emc.storageos.db.client.model.Volume.class, taskCompleter.getIds()); _dbClient.markForDeletion(volumes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5111/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.block.BlockDeviceController.java", "BodyUseAPI": ["com.emc.storageos.volumecontroller.TaskCompleter.getIds()", "com.emc.storageos.db.client.DbClient.queryObject(java.lang.Class,taskCompleter.getIds())"], "Fixed commit": "1acab00a3e45e58b1750e6fb4e71b5098977e97d", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-07-06T19:22:22Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.System.getProperty(\"os.name\").toLowerCase().indexOf(\"windows\")) == (-1)) || ((java.lang.System.getProperty(\"os.name\").toLowerCase().indexOf(\"Windows\")) == (-1))) { fq = new java.io.File((\"export/\" + (fp.getName()))); }else { fq = new java.io.File((\"export\\\\\" + (fp.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/372/buggy-version/Script.TCsystem.java", "BodyUseAPI": [], "Fixed commit": "0a047f0193ee5861c713cfa7a16cd4dccf2afd26", "Url": "https://api.github.com/repos/nrokn-px/Tone-Converter", "Date": "2017-01-04T14:42:54Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.mcgill.cs.stg.jetuml.graph.ParentGraph.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parent == pNode) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7697/buggy-version/src.ca.mcgill.cs.stg.jetuml.graph.ParentGraph.java", "BodyUseAPI": [], "Fixed commit": "9a8a5118eaef17709c59da971b6e7fb21e6f60a0", "Url": "https://api.github.com/repos/prmr/JetUML", "Date": "2015-04-24T04:58:41Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.kyzderp.teutils.TEUtils.getServer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (servername.equals(\"login\")) { this.mod.setSchedulerActive(true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1163/buggy-version/java.io.github.kyzderp.teutils.task.GetServerTask.java", "BodyUseAPI": [], "Fixed commit": "330975a6932a3abb8c1f431adb352bd05fb16270", "Url": "https://api.github.com/repos/Kyzderp/TEUtils", "Date": "2016-03-27T18:31:35Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(itemConfig.contains(\"enchantments.armors\"))) { itemConfig.set(\"enchantments.armors.protection_fall\", 0.2); itemConfig.set(\"enchantments.armors.protection_projectile\", 0.2); itemConfig.set(\"enchantments.armors.protection_fire\", 0.2); save = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/247/buggy-version/src.main.java.se.lucasarnstrom.sgmultiverse2.managers.ChestManager.java", "BodyUseAPI": ["org.bukkit.configuration.file.FileConfiguration.set(java.lang.String,double)", "org.bukkit.configuration.file.FileConfiguration.set(java.lang.String,double)", "org.bukkit.configuration.file.FileConfiguration.set(java.lang.String,double)"], "Fixed commit": "1bf4280cbe31f61737b2e92b9b08e4aefbc38bad", "Url": "https://api.github.com/repos/Chilinot/SGMultiverse2", "Date": "2014-05-02T22:13:39Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(itemConfig.contains(\"enchantments.swords\"))) { itemConfig.set(\"enchantments.swords.fire_aspect\", 0.3); itemConfig.set(\"enchantments.swords.damage_all\", 0.3); itemConfig.set(\"enchantments.swords.knockback\", 0.3); itemConfig.set(\"enchantments.swords.damage_arthropods\", 0.3); itemConfig.set(\"enchantments.swords.damage_undead\", 0.3); save = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/247/buggy-version/src.main.java.se.lucasarnstrom.sgmultiverse2.managers.ChestManager.java", "BodyUseAPI": ["org.bukkit.configuration.file.FileConfiguration.set(java.lang.String,double)", "org.bukkit.configuration.file.FileConfiguration.set(java.lang.String,double)", "org.bukkit.configuration.file.FileConfiguration.set(java.lang.String,double)", "org.bukkit.configuration.file.FileConfiguration.set(java.lang.String,double)", "org.bukkit.configuration.file.FileConfiguration.set(java.lang.String,double)"], "Fixed commit": "1bf4280cbe31f61737b2e92b9b08e4aefbc38bad", "Url": "https://api.github.com/repos/Chilinot/SGMultiverse2", "Date": "2014-05-02T22:13:39Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.message.length) > 32) { BouncyBall.SERVER_INSTANCE.getLogger().error(\"Not correct DisconnectPacket received!\"); this.isCorrect = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2148/buggy-version/src.main.java.io.github.mrgenga.bouncyball.network.packet.DisconnectPacket.java", "BodyUseAPI": [], "Fixed commit": "e8b55c6405ca8960964c47c799d1cf96d22e30f3", "Url": "https://api.github.com/repos/Encritary/BouncyBall", "Date": "2016-03-04T02:42:54Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (leftTreeSize > 0) root.setLeft(constructTree(preorder, inorderMap, (pStart + 1), (pStart + leftTreeSize), iStart, (inorderPos - 1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4931/buggy-version/src.tree.TraversalTree2015.java", "BodyUseAPI": ["tree.TraversalTree2015.constructTree(int[],java.util.Map<java.lang.Integer, java.lang.Integer>,int,int,int,int)", "base.TreeNode.setLeft(base.TreeNode)"], "Fixed commit": "568b12e6b60f8788c30095a34afe270fc2f49a79", "Url": "https://api.github.com/repos/gany-c/DataStructures", "Date": "2016-01-01T04:02:13Z"},
{"Line": "=>2070", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != monitoringDevice) { closePreviousAlarmLogs(monitoringDevice); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2386/buggy-version/app.com.logistimo.services.DeviceService.java", "BodyUseAPI": ["com.logistimo.services.DeviceService.closePreviousAlarmLogs(com.logistimo.db.Device)"], "Fixed commit": "18c9a76e012e8fe5f5b60ea48dac14e1d0887a51", "Url": "https://api.github.com/repos/logistimo/asset-monitoring-service", "Date": "2017-10-11T09:22:45Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(resolveInfo.activityInfo.packageName.equals(context.getPackageName()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/752/buggy-version/android-sdk.src.main.java.com.sensorberg.sdk.presenter.ManifestParser.java", "BodyUseAPI": [], "Fixed commit": "f9688b4fbb770afa811f542899c8c78b372682c5", "Url": "https://api.github.com/repos/sensorberg-dev/android-sdk", "Date": "2017-01-27T09:46:38Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vonhof.babelshark.impl.SharkType<T, V>.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (clz.isArray()) { java.lang.Object array = java.lang.reflect.Array.newInstance(clz.getComponentType(), node.size()); for (int i = 0; i < (node.size()); i++) { java.lang.Object value = readAs(node.get(i), clz.getComponentType()); java.lang.reflect.Array.set(array, i, value); } return ((T) (array)); }else if (!(com.vonhof.babelshark.impl.ReflectUtils.isInstantiatable(clz))) { if (java.util.Set.class.isAssignableFrom(clz)) clz = java.util.HashSet.class; else if (java.util.List.class.isAssignableFrom(clz)) clz = java.util.ArrayList.class; else throw new com.vonhof.babelshark.exception.MappingException(java.lang.String.format(\"Unknown collection type: %s\", type)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7588/buggy-version/src.main.java.com.vonhof.babelshark.impl.DefaultNodeMapper.java", "BodyUseAPI": ["com.vonhof.babelshark.impl.ReflectUtils.isInstantiatable(java.lang.Class)", "java.lang.reflect.Array.newInstance(java.lang.Class,node.size())", "java.lang.Class.getComponentType()", "com.vonhof.babelshark.impl.DefaultNodeMapper.readAs(node.get(i),java.lang.Class)", "java.lang.Class.getComponentType()", "java.lang.Class.isAssignableFrom(java.lang.Class)"], "Fixed commit": "612e6df92d4a83909ab78495886eae29c7d4bd38", "Url": "https://api.github.com/repos/hofmeister/BabelShark", "Date": "2012-03-24T04:55:20Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (downloadThreadInfosLocal != null) { for (cn.woblog.android.downloader.simple.domain.MyDownloadThreadInfoLocal d : downloadThreadInfosLocal) { downloadThreadInfos.add(convertDownloadThreadInfo(d)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4833/buggy-version/samples.src.main.java.cn.woblog.android.downloader.simple.db.DBController.java", "BodyUseAPI": [], "Fixed commit": "be8c9d4a365158c457bf14a816218e694cfebf71", "Url": "https://api.github.com/repos/lifengsofts/AndroidDownloader", "Date": "2017-03-24T09:39:14Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.kbresearch.europeana_newspapers.NerAnnotator.TextElementsExtractor.lookupNextWord(org.w3c.dom.NodeList,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((((textLineElement != null) && ((textLineElement.getAttribute(\"CONTENT\")) != null)) && (nextElement != null)) && ((nextElement.getAttribute(\"CONTENT\")) != null)) { newBlock.add(nl.kbresearch.europeana_newspapers.NerAnnotator.TextElementsExtractor.getWordToLabel(textLineElement, ((textLineElement.getAttribute(\"CONTENT\")) + (nextElement.getAttribute(\"CONTENT\"))), nextElement)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5172/buggy-version/src.main.java.nl.kbresearch.europeana_newspapers.NerAnnotator.TextElementsExtractor.java", "BodyUseAPI": ["org.w3c.dom.Element.getAttribute(java.lang.String)", "java.util.List<edu.stanford.nlp.util.CoreMap>.add(edu.stanford.nlp.ling.CoreLabel)", "nl.kbresearch.europeana_newspapers.NerAnnotator.TextElementsExtractor.getWordToLabel(org.w3c.dom.Element,java.lang.String,org.w3c.dom.Element)", "org.w3c.dom.Element.getAttribute(java.lang.String)"], "Fixed commit": "561c7fafe2747efa9aaf643389d47dff784e975a", "Url": "https://api.github.com/repos/KBNLresearch/europeananp-ner", "Date": "2014-03-17T10:01:51Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cameraSource) != null) { cameraSource.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7883/buggy-version/app.src.main.java.com.kssivakumar.search2go.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "629995484b62a3e949d319bec5e79dcb057ccd76", "Url": "https://api.github.com/repos/kiran2s/Search2Go", "Date": "2017-08-19T22:35:34Z"},
{"Line": "=>1676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getChild().getRowType().equals(getRowType()))) { final net.hydromatic.optiq.impl.java.JavaTypeFactory typeFactory = ((net.hydromatic.optiq.impl.java.JavaTypeFactory) (getCluster().getTypeFactory())); net.hydromatic.optiq.rules.java.PhysType physType = net.hydromatic.optiq.rules.java.PhysTypeImpl.of(typeFactory, table.getRowType(), JavaRowFormat.CUSTOM); java.util.List<net.hydromatic.linq4j.expressions.Expression> expressionList = new java.util.ArrayList<net.hydromatic.linq4j.expressions.Expression>(); final net.hydromatic.optiq.rules.java.PhysType childPhysType = ((net.hydromatic.optiq.rules.java.EnumerableRel) (getChild())).getPhysType(); final net.hydromatic.optiq.rules.java.ParameterExpression o = net.hydromatic.optiq.rules.java.Expressions.parameter(childPhysType.getJavaRowType(), \"o\"); final int fieldCount = childPhysType.getRowType().getFieldCount(); for (int i = 0; i < fieldCount; i++) { expressionList.add(childPhysType.fieldReference(o, i)); } convertedChildExp = builder.append(\"convertedChild\", net.hydromatic.optiq.rules.java.Expressions.call(childExp, BuiltinMethod.SELECT.method, net.hydromatic.optiq.rules.java.Expressions.lambda(physType.record(expressionList), o))); }else { convertedChildExp = childExp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8909/buggy-version/src.main.java.net.hydromatic.optiq.rules.java.JavaRules.java", "BodyUseAPI": [], "Fixed commit": "64cd144f23155245f1ee742dbabc041425ae1491", "Url": "https://api.github.com/repos/julianhyde/optiq", "Date": "2013-05-08T22:32:51Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.InfinityRaider.AgriCraft.farming.CropPlantHandler.plantsToRegister) != null) { com.InfinityRaider.AgriCraft.farming.CropPlantHandler.plantsToRegister.add(plant); }else { com.InfinityRaider.AgriCraft.farming.CropPlantHandler.suppressedRegisterPlant(plant); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6984/buggy-version/src.main.java.com.InfinityRaider.AgriCraft.farming.CropPlantHandler.java", "BodyUseAPI": [], "Fixed commit": "ebb93950dd0a8d8ce80a8b64d45907e75d9398d3", "Url": "https://api.github.com/repos/AgriCraft/AgriCraft", "Date": "2016-01-16T12:12:52Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.montclairrobotics.sprocket.utils.Debug.DEBUG_MODE) Sprocket.debugger.debugNum(key, value); else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4733/buggy-version/src.org.montclairrobotics.sprocket.utils.Debug.java", "BodyUseAPI": [], "Fixed commit": "02e0001d8483bd8af36406a03a2e8f5a616b873f", "Url": "https://api.github.com/repos/MontclairRobotics/Sprocket", "Date": "2017-12-13T13:49:04Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.montclairrobotics.sprocket.utils.Debug.DEBUG_MODE) Sprocket.debugger.debugStr(key, value); else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4733/buggy-version/src.org.montclairrobotics.sprocket.utils.Debug.java", "BodyUseAPI": [], "Fixed commit": "02e0001d8483bd8af36406a03a2e8f5a616b873f", "Url": "https://api.github.com/repos/MontclairRobotics/Sprocket", "Date": "2017-12-13T13:49:04Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pair.length) == 1) result.put(java.net.URLDecoder.decode(pair[0], \"ISO-8859-1\"), \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1920/buggy-version/server.src.com.chiorichan.http.HttpRequest.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "8be7aaf4e211dc82707bf80a707b74f0ff916f47", "Url": "https://api.github.com/repos/ChioriGreene/ChioriWebServer", "Date": "2014-08-19T04:54:27Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outputFile.isDirectory()) { java.io.File outputDirectory = outputFile; outputFile = new java.io.File(outputDirectory, \"statistics.json\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8502/buggy-version/src.main.java.sk.styk.martin.bakalarka.utils.files.JsonUtils.java", "BodyUseAPI": [], "Fixed commit": "c199f735fb948924d4502ac7860ab536526225aa", "Url": "https://api.github.com/repos/MartinStyk/ApkAnalyzer", "Date": "2016-02-20T20:17:37Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (open) { MacroHardv2.actionResolver.sendReliable(new byte[]{ 2 }); }else { MacroHardv2.actionResolver.sendReliable(new byte[]{ -2 }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7835/buggy-version/core.src.com.mygdx.game.states.PlayState.java", "BodyUseAPI": [], "Fixed commit": "7f5113458a89196c02c6d0e668032eec2ab3e61e", "Url": "https://api.github.com/repos/Dansyuqri/MacroHardv2", "Date": "2016-04-04T05:36:55Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.isRaining()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isRaining) { return 0.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1555/buggy-version/src.main.java.starryskyline.teastory.block.Teapan.java", "BodyUseAPI": [], "Fixed commit": "745a57dc6d2926f0de8323bfa80573e9fc0e43e7", "Url": "https://api.github.com/repos/LuoXiao-Wing/TeaStory", "Date": "2017-02-19T02:36:46Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.security.sso.token.security.auth.TokenRetriever.getLoginToken(javax.servlet.http.HttpServletRequest,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNull(login)) { if (com.liferay.portal.security.sso.token.internal.auto.login.TokenAutoLogin._log.isInfoEnabled()) { com.liferay.portal.security.sso.token.internal.auto.login.TokenAutoLogin._log.info((\"No login found on: \" + tokenLocation)); } return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6198/buggy-version/modules.portal-security.portal-security-sso-token.src.main.java.com.liferay.portal.security.sso.token.internal.auto.login.TokenAutoLogin.java", "BodyUseAPI": [], "Fixed commit": "dbe9c1982f1ebafcbbf3fc0cfe553bacc7d7bee2", "Url": "https://api.github.com/repos/brianchandotcom/liferay-portal", "Date": "2016-01-05T17:27:51Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { refreshLayout.setProgressViewOffset(false, 0, 30); refreshLayout.setRefreshing(true); presenter.getExploreList(explore_type_id, offset, LiveAPI.LIMIT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2415/buggy-version/app.src.main.java.com.c9mj.platform.explore.ui.ExploreListFragment.java", "BodyUseAPI": [], "Fixed commit": "9b181aaaf52eb3ea08510cf9883ad21e3872fd55", "Url": "https://api.github.com/repos/452MJ/C9MJ", "Date": "2017-03-10T03:44:44Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstTimeLoad) { getLoaderManager().initLoader(1, null, this); firstTimeLoad = false; }else { getLoaderManager().restartLoader(1, null, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8343/buggy-version/app.src.main.java.com.assignment.binlix26.case_study_bmc.home.VisitorSigningFragment.java", "BodyUseAPI": [], "Fixed commit": "9d2bd7735404bbfbddf08ff950f295fb2015db18", "Url": "https://api.github.com/repos/DeliberateZero/Case_Study_BMC", "Date": "2017-06-16T01:47:40Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mTiebreakGame)) { serverPoint = ordinalToTennisPoint(serverPoint); secondPoint = ordinalToTennisPoint(secondPoint); if ((serverPoint == 4) && (secondPoint == 40)) return \"ADV - 40\"; else if ((serverPoint == 40) && (secondPoint == 4)) return \"40 - ADV\"; else if ((serverPoint == 4) || (secondPoint == 4)) return \"GAME\"; else return (serverPoint + \" - \") + secondPoint; }else return (serverPoint + \" - \") + secondPoint;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7378/buggy-version/src.proyecto_final.Game.java", "BodyUseAPI": [], "Fixed commit": "350d875feb5bb9c8478ea10497fc5f58a64f51bc", "Url": "https://api.github.com/repos/FabioFV/tecnicas-fundamentales", "Date": "2016-04-14T22:28:49Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!enabled) { showDialogGPS(); }else if (enabled && ((locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER)) != null)) { locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 400, 0, this); }else { android.widget.Toast.makeText(getApplicationContext(), \"GPS is loading. One moment please! - 3\", Toast.LENGTH_LONG).show(); locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 400, 0, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3160/buggy-version/app.src.main.java.com.efelnic.driveapp.TrackingActivity.java", "BodyUseAPI": [], "Fixed commit": "f3381a4bb37a1662f7a185a31954994146aaa56d", "Url": "https://api.github.com/repos/nrkfeller/driving_aid_app", "Date": "2016-03-27T16:26:25Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((aCall.getResult()) != null) { if (((aCall.getResult().getName()) == null) || ((aCall.getResult().getName().getName()) == null)) { throw new de.gebit.integrity.exceptions.ModelRuntimeLinkException(\"Failed to resolve call result name\", aCall.getResult(), modelSourceExplorer.determineSourceInformation(aCall.getResult())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3949/buggy-version/de.gebit.integrity.runner.src.de.gebit.integrity.runner.modelcheck.DefaultModelChecker.java", "BodyUseAPI": ["de.gebit.integrity.modelsource.ModelSourceExplorer.determineSourceInformation(aCall.getResult())", "de.gebit.integrity.dsl.Call.getResult()", "de.gebit.integrity.dsl.Call.getResult()", "aCall.getResult().getName().getName()", "aCall.getResult().getName()", "de.gebit.integrity.dsl.Call.getResult()", "aCall.getResult().getName()", "de.gebit.integrity.dsl.Call.getResult()"], "Fixed commit": "1aec8e637bdd16386d31216603adce6d028e316f", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2014-11-21T08:08:17Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.amr.arabic.ArabicUtilities.getWords(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i < ((words.length) - 1)) { reshapedText.append(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4641/buggy-version/src.org.amr.arabic.ArabicUtilities.java", "BodyUseAPI": [], "Fixed commit": "24dfa3e761668aa7a3094bbb5b57a848a823fe30", "Url": "https://api.github.com/repos/kamranzafar/Better-Arabic-Reshaper", "Date": "2011-08-25T18:41:59Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i < ((sentences.length) - 1)) { result.append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4641/buggy-version/src.org.amr.arabic.ArabicUtilities.java", "BodyUseAPI": [], "Fixed commit": "24dfa3e761668aa7a3094bbb5b57a848a823fe30", "Url": "https://api.github.com/repos/kamranzafar/Better-Arabic-Reshaper", "Date": "2011-08-25T18:41:59Z"},
{"Line": "=>548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((historicalbattlesimulatorbasic.GUI.moveCountPanel) != null) historicalbattlesimulatorbasic.GUI.moveCountPanel.setVisible(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7995/buggy-version/src.historicalbattlesimulatorbasic.GUI.java", "BodyUseAPI": [], "Fixed commit": "52c9d4bd5a5cf7f0cbad01ae6f52e8a1189669c5", "Url": "https://api.github.com/repos/doombunny911/hbs", "Date": "2014-04-23T19:53:30Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((server) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5108/buggy-version/web.src.main.java.com.graphhopper.http.GHServer.java", "BodyUseAPI": [], "Fixed commit": "e2e59220bf8074fef41678891f7987e1bcda2b9f", "Url": "https://api.github.com/repos/graphhopper/graphhopper", "Date": "2014-07-18T11:51:48Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < 0) index = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3762/buggy-version/src.org.usfirst.frc.team68.robot.PointPath.java", "BodyUseAPI": [], "Fixed commit": "e61a217db76a044258121e987418a90b5a7e76c8", "Url": "https://api.github.com/repos/FRC68/2016-Competition-Java", "Date": "2016-02-17T01:19:44Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t instanceof java.lang.Class) { java.lang.reflect.Type genericSuperclass = ((java.lang.Class) (t)).getGenericSuperclass(); if (genericSuperclass != null) { java.lang.Class ret = datatypeClassHandled(genericSuperclass); if (ret != null) { return ret; } } for (java.lang.reflect.Type candidate : ((java.lang.Class) (t)).getGenericInterfaces()) { java.lang.Class ret = datatypeClassHandled(candidate); if (ret != null) { return ret; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7433/buggy-version/api.src.main.java.org.openmrs.api.impl.DatatypeServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "a6ba9e44855eb860931d41ac540750b764dd2e75", "Url": "https://api.github.com/repos/wluyima/openmrs-core", "Date": "2016-01-21T19:54:58Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.addhen.smssync.Prefs.enableBlacklist)) { saveMessage(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4153/buggy-version/smssync.src.main.java.org.addhen.smssync.messages.ProcessMessage.java", "BodyUseAPI": [], "Fixed commit": "cf3c75b38f0bbb5c6c67409c1e8db4f41781c509", "Url": "https://api.github.com/repos/ushahidi/SMSSync", "Date": "2013-08-08T15:03:10Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.teamdev.students.calculator.intefaces.Operation<java.math.BigDecimal>.getResult(java.math.BigDecimal[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tempResult == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7890/buggy-version/Services.src.main.java.com.teamdev.students.calculator.implementation.CalculatorEvaluator.java", "BodyUseAPI": [], "Fixed commit": "7446105b7eae894e5e96dacf626741e6d467451f", "Url": "https://api.github.com/repos/kasianov/calculator", "Date": "2013-04-06T15:06:09Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arguments[0].compareTo(new java.math.BigDecimal(\"0\"))) < 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7890/buggy-version/Services.src.main.java.com.teamdev.students.calculator.implementation.operations.SqrtFunction.java", "BodyUseAPI": [], "Fixed commit": "7446105b7eae894e5e96dacf626741e6d467451f", "Url": "https://api.github.com/repos/kasianov/calculator", "Date": "2013-04-06T15:06:09Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mail.getMessage().size()) == 0) { mail.addMessage(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8997/buggy-version/src.main.java.org.bitbucket.ucchy.undine.MailManager.java", "BodyUseAPI": ["org.bitbucket.ucchy.undine.MailData.addMessage(java.lang.String)"], "Fixed commit": "0cdba1f992a9acefa630e314a64850c01b8d72be", "Url": "https://api.github.com/repos/ucchyocean/UndineMailer", "Date": "2015-08-01T13:56:41Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((category == null) || ((category.getNews()) == null)) || (category.getNews().isEmpty())) { recyclerView.setAdapter(new com.example.rent.zulicywiesciapp.adapters.NothingToLoadAdapter(com.example.rent.zulicywiesciapp.utils.NothingToDisplayMessage.NO_NEWS, this)); }else { adapter.setNewsList(category.getNews()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2373/buggy-version/app.src.main.java.com.example.rent.zulicywiesciapp.CategoryNewsListActivity.java", "BodyUseAPI": ["com.example.rent.zulicywiesciapp.model.Category.getNews()", "com.example.rent.zulicywiesciapp.adapters.NewsAdapter.setNewsList(category.getNews())"], "Fixed commit": "5a4ca334a11070a71f571be7b432d253c7ece5af", "Url": "https://api.github.com/repos/rejnowskimikolaj/WotSOnTheStreet", "Date": "2017-04-05T16:28:19Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jbei.ice.services.rest.PartResource.getUserIdFromSessionHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(controller.deleteTraceSequence(userId, partId, traceId))) return super.respond(Response.Status.UNAUTHORIZED);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7683/buggy-version/src.main.java.org.jbei.ice.services.rest.PartResource.java", "BodyUseAPI": [], "Fixed commit": "8c26341883839a0415fa0d9975d5b857b4cf4b6b", "Url": "https://api.github.com/repos/JBEI/ice", "Date": "2014-09-03T17:10:35Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(credentials.userId)) { callback.onMatrixError(new org.matrix.androidsdk.rest.model.MatrixError(org.matrix.androidsdk.rest.model.MatrixError.FORBIDDEN, \"No user id\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6451/buggy-version/vector.src.main.java.im.vector.LoginHandler.java", "BodyUseAPI": [], "Fixed commit": "05fd80c50ecab14dbb52d24368af268ade5a6db9", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2016-08-11T08:16:12Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tickets[type_to_index(edge.getType())]) == 0) continue; else { (tickets[type_to_index(edge.getType())])--; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7581/buggy-version/src.scotland.yard.Detective.java", "BodyUseAPI": ["scotland.yard.Detective.type_to_index(edge.getType())", "scotland.yard.Edge.getType()"], "Fixed commit": "555a252338147bdbf25a4e9c4e4e167364ad2e23", "Url": "https://api.github.com/repos/Rishabh2693/ScotlandYard", "Date": "2017-04-14T21:16:02Z"},
{"Line": "=>1125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cafe.image.tiff.IFD.getField(TiffTag.COMPRESSION.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tiffField != null) tiffCompression = tiffField.getDataAsLong()[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3276/buggy-version/src.cafe.image.tiff.TIFFTweaker.java", "BodyUseAPI": ["cafe.image.tiff.TiffField<?>.getDataAsLong()"], "Fixed commit": "e50f4590f2438421161d5945ae67f6aa90d23b7a", "Url": "https://api.github.com/repos/dragon66/icafe", "Date": "2014-11-07T21:44:50Z"},
{"Line": "=>3878", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soc.client.SOCClearTradeMsg.getPlayerNumber()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pn != (-1)) player = ga.getPlayer(pn);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3306/buggy-version/src.java.soc.client.SOCPlayerClient.java", "BodyUseAPI": ["soc.game.SOCGame.getPlayer(int)"], "Fixed commit": "06553cb8c02114250f449ead35ec9b36812385cf", "Url": "https://api.github.com/repos/lartkma/JSettlers2", "Date": "2013-01-14T03:17:18Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getAbsolutePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(f.getAbsolutePath().equals(path))) main.Helper.moveFile(f, dst);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3743/buggy-version/NameMemo.src.main.MainActivity.java", "BodyUseAPI": ["main.Helper.moveFile(java.io.File,java.io.File)"], "Fixed commit": "a03c3e25089e3af4b6fa6c81478462d1864dbb21", "Url": "https://api.github.com/repos/leletec/NameMemo", "Date": "2016-09-05T13:43:19Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.pm.PackageManager.getPackageArchiveInfo(java.lang.String,PackageManager.GET_ACTIVITIES)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (info == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7158/buggy-version/explorer.src.main.java.com.wfl.explorer.filetype.types.ApkType.java", "BodyUseAPI": [], "Fixed commit": "f22dbac5d68226e0ee25da2f6864dea634b71e5c", "Url": "https://api.github.com/repos/wflfei/ExplorerInner", "Date": "2017-05-16T07:26:33Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, byte[]>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dataBytes != null) { return dataBytes; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4581/buggy-version/sdk.mobile-center-crashes.src.main.java.com.microsoft.azure.mobile.crashes.WrapperSdkExceptionManager.java", "BodyUseAPI": [], "Fixed commit": "c7bc4b7cce9c06d69de305707bfbe3c9ff56c62f", "Url": "https://api.github.com/repos/Microsoft/AppCenter-SDK-Android", "Date": "2016-11-16T00:43:23Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.defaultValue) == null) { throw new java.lang.IllegalStateException(\"you need to specify a default value first\"); }else if (entriesNewestFirst.isEmpty()) { return defaultValue; }else { return entriesNewestFirst.get(0).getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1191/buggy-version/src.main.java.amidst.mojangapi.world.versionfeatures.ListVersionFeatureBuilder.java", "BodyUseAPI": [], "Fixed commit": "42df1feadc0f352a3b140266ff70d78989058ee7", "Url": "https://api.github.com/repos/toolbox4minecraft/amidst", "Date": "2016-01-12T23:22:33Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getDBConfig().getDatabaseDriver()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((dbDriver != null) && (dbDriver.contains(\"OracleDriver\"))) { java.lang.String queryString = \"SELECT t0.METADATA_VALUE_ID, t0.AUTHORITY, t0.CONFIDENCE, t0.DSPACE_OBJECT_ID, t0.METADATA_FIELD_ID, t0.PLACE, t0.TEXT_LANG, t0.TEXT_VALUE \\n\" + (\" FROM METADATAVALUE t0 \\n\" + \" WHERE (dbms_lob.substr(t0.text_value, 4000 , 1) = (SELECT MIN(dbms_lob.substr(t1.text_value, 4000 , 1)) FROM METADATAVALUE t1 WHERE (t1.METADATA_FIELD_ID = :metadata_field_id)))\"); query = createNativeQuery(context, queryString); }else { java.lang.String queryString = \"SELECT m FROM MetadataValue m where m.value = (SELECT min(a.value) FROM MetadataValue a WHERE a.metadataField.id = :metadata_field_id)\"; query = createQuery(context, queryString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7575/buggy-version/dspace-api.src.main.java.org.dspace.content.dao.impl.MetadataValueDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "df369c5a539272b103dde3d04d4f3e324faa7978", "Url": "https://api.github.com/repos/aimsdc/DSpace", "Date": "2017-03-23T07:09:01Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (teacher != null) teachers.add(teacher);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/692/buggy-version/parser.src.main.java.me.vertretungsplan.objects.Substitution.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "87bc22febe518ed12a45ef6d910e957dbde51f96", "Url": "https://api.github.com/repos/vertretungsplanme/substitution-schedule-parser", "Date": "2016-12-20T19:45:01Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (previousTeacher != null) previousTeachers.add(previousTeacher);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/692/buggy-version/parser.src.main.java.me.vertretungsplan.objects.Substitution.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "87bc22febe518ed12a45ef6d910e957dbde51f96", "Url": "https://api.github.com/repos/vertretungsplanme/substitution-schedule-parser", "Date": "2016-12-20T19:45:01Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startCluster == 0) { return new java.lang.Long[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2944/buggy-version/libaums.src.com.github.mjdev.libaums.fs.fat32.FAT.java", "BodyUseAPI": [], "Fixed commit": "36a3d3b3c43eeae6ae8e3f64845200cf3b55c4bb", "Url": "https://api.github.com/repos/magnusja/libaums", "Date": "2015-03-26T11:51:19Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tosecSubType.length()) > 0) { urlsb.append(tosecSubType).append(\"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3420/buggy-version/world-of-spectrum.src.main.java.dk.kolbeck.tosec.parser.TOSECReader.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "dde1c965d89c4aab9becc93381ea02c260d3f6f5", "Url": "https://api.github.com/repos/thomasheckmann/world-of-spectrum", "Date": "2016-10-07T21:14:53Z"},
{"Line": "=>1183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.model.typechecker.model.Declaration.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (name == null) { if ((isConstructor(dec)) && (dec.isClassMember())) { java.lang.Class c = ((java.lang.Class) (dec.getContainer())); return (\"default constructor of '\" + (c.getName())) + \"'\"; }else { return \"\"; } }else { return ((\"'\" + name) + \"'\") + (com.redhat.ceylon.compiler.typechecker.analyzer.AnalyzerUtil.messageQualifier(dec)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4207/buggy-version/typechecker.src.com.redhat.ceylon.compiler.typechecker.analyzer.AnalyzerUtil.java", "BodyUseAPI": [], "Fixed commit": "7ff814df3445b114492d4bd53dd98c470737bbd4", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2017-08-10T19:41:33Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentContact.getAddresses()) == null) { currentContact.setAddresses(new java.util.HashMap<java.lang.String, com.example.contactviewer.app.Address>()); }else { currentContact.getAddresses().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6105/buggy-version/app.src.main.java.com.example.contactviewer.app.EditContactActivity.java", "BodyUseAPI": ["com.example.contactviewer.app.Contact.getAddresses()", "currentContact.getAddresses().clear()", "com.example.contactviewer.app.Contact.setAddresses(java.util.HashMap<java.lang.String, com.example.contactviewer.app.Address>)"], "Fixed commit": "563b3e867121c4a5c5e1d5e985863eaefee8df50", "Url": "https://api.github.com/repos/udeebsdev/ContactViewerTeamFlyte", "Date": "2014-02-28T03:47:35Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentContact.getEmail()) == null) { currentContact.setEmail(new java.util.HashMap<java.lang.String, java.lang.String>()); }else { currentContact.getEmail().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6105/buggy-version/app.src.main.java.com.example.contactviewer.app.EditContactActivity.java", "BodyUseAPI": ["com.example.contactviewer.app.Contact.setEmail(java.util.HashMap<java.lang.String, java.lang.String>)", "currentContact.getEmail().clear()", "com.example.contactviewer.app.Contact.getEmail()"], "Fixed commit": "563b3e867121c4a5c5e1d5e985863eaefee8df50", "Url": "https://api.github.com/repos/udeebsdev/ContactViewerTeamFlyte", "Date": "2014-02-28T03:47:35Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentContact.getPhone()) == null) { currentContact.setPhone(new java.util.HashMap<java.lang.String, java.lang.String>()); }else { currentContact.getPhone().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6105/buggy-version/app.src.main.java.com.example.contactviewer.app.EditContactActivity.java", "BodyUseAPI": ["com.example.contactviewer.app.Contact.getPhone()", "currentContact.getPhone().clear()", "com.example.contactviewer.app.Contact.setPhone(java.util.HashMap<java.lang.String, java.lang.String>)"], "Fixed commit": "563b3e867121c4a5c5e1d5e985863eaefee8df50", "Url": "https://api.github.com/repos/udeebsdev/ContactViewerTeamFlyte", "Date": "2014-02-28T03:47:35Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (block != 0) blockmap.add(block);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2966/buggy-version/src.dblockcache.MyDBuffer.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.add(int)"], "Fixed commit": "51bfd5b58f0567c3dc9b4f45dd0cfe3e5fcd9c55", "Url": "https://api.github.com/repos/dl103/DefilerFinally", "Date": "2014-04-16T03:25:30Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orders) != null) { for (int f = 0; f < (orders.length); f++) { str.append(orders[f].toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1822/buggy-version/classes.com.sapienter.jbilling.server.invoice.InvoiceWS.java", "BodyUseAPI": [], "Fixed commit": "632483461a7dae5128c7d93e0822b6705ef550fb", "Url": "https://api.github.com/repos/p-maks/knx-jbilling2.2.0", "Date": "2013-01-14T14:35:55Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.AbstractBuild.getAction(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (action == null) { action = new hudson.model.ParametersAction(value); build.addAction(action); }else { java.util.List<hudson.model.ParameterValue> parameters = new java.util.ArrayList<hudson.model.ParameterValue>(action.getParameters()); parameters.add(value); action = new hudson.model.ParametersAction(parameters); build.replaceAction(action); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7624/buggy-version/src.main.java.se.diabol.jenkins.pipeline.PipelineVersionContributor.java", "BodyUseAPI": ["hudson.model.ParametersAction.getParameters()"], "Fixed commit": "09781196cc45f542d4ec2f7f06da039fe8fc8b09", "Url": "https://api.github.com/repos/patbos/delivery-pipeline-plugin", "Date": "2015-06-11T15:36:43Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getThumbnail()) != null) { newsItem.setThumbnail(item.getThumbnail().getUrl()); newsItem.setWidth(java.lang.Integer.parseInt(item.getThumbnail().getWidth())); newsItem.setHeight(java.lang.Integer.parseInt(item.getThumbnail().getHeight())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8996/buggy-version/app.src.main.java.com.adkdevelopment.rssreader.utils.Utilities.java", "BodyUseAPI": ["com.adkdevelopment.rssreader.data.remote.Item.getThumbnail()", "item.getThumbnail().getUrl()", "java.lang.Integer.parseInt(item.getThumbnail().getWidth())", "java.lang.Integer.parseInt(item.getThumbnail().getHeight())", "item.getThumbnail().getHeight()", "com.adkdevelopment.rssreader.data.local.NewsRealm.setThumbnail(item.getThumbnail().getUrl())", "com.adkdevelopment.rssreader.data.remote.Item.getThumbnail()", "item.getThumbnail().getWidth()", "com.adkdevelopment.rssreader.data.local.NewsRealm.setWidth(int)", "com.adkdevelopment.rssreader.data.remote.Item.getThumbnail()", "com.adkdevelopment.rssreader.data.local.NewsRealm.setHeight(int)"], "Fixed commit": "c2d474491d1c160f24c68f93451d6d19ecf14693", "Url": "https://api.github.com/repos/dmytroKarataiev/BbcReader", "Date": "2016-10-02T18:01:09Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (change) { c.uncacheEntity(wsItem); c.uncacheEntity(wfItem); c.uncacheEntity(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2622/buggy-version/dspace-api.src.main.java.org.dspace.app.bulkedit.MetadataImport.java", "BodyUseAPI": [], "Fixed commit": "769d3b590fda6f3ef58d11379bc2dcc19015afaf", "Url": "https://api.github.com/repos/tomdesair/DSpace", "Date": "2017-06-19T12:59:00Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.stage.FileChooser.showOpenMultipleDialog(interop.framework.Framework.getInstance().getWindow())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4646/buggy-version/src.interop.framework.controller.HomeController.java", "BodyUseAPI": [], "Fixed commit": "1a45d8e894762f5cab0b6daa7ea5b7b5613725c4", "Url": "https://api.github.com/repos/BDI-UFRGS/Interop-BDI", "Date": "2017-08-09T18:12:31Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cartesian.coordinate.CCSystem.validY(double)", "cartesian.coordinate.CCSystem.validY(double)", "cartesian.coordinate.CCSystem.validX(double)", "cartesian.coordinate.CCSystem.validX(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((v_minX && v_maxX) && v_minY) && v_maxY) { p2d1 = new java.awt.geom.Point2D.Double(minX, i_minX); p2d2 = new java.awt.geom.Point2D.Double(i_maxY, maxY); }else if (v_minX && v_minY) { p2d1 = new java.awt.geom.Point2D.Double(minX, i_minX); p2d2 = new java.awt.geom.Point2D.Double(i_minY, minY); }else if (v_minX && v_maxY) { p2d1 = new java.awt.geom.Point2D.Double(minX, i_minX); p2d2 = new java.awt.geom.Point2D.Double(i_maxY, maxY); }else if (v_minX && v_maxX) { p2d1 = new java.awt.geom.Point2D.Double(minX, i_minX); p2d2 = new java.awt.geom.Point2D.Double(maxX, i_maxX); }else if (v_minY && v_maxX) { p2d1 = new java.awt.geom.Point2D.Double(i_minY, minY); p2d2 = new java.awt.geom.Point2D.Double(maxX, i_maxX); }else if (v_minY && v_maxY) { p2d1 = new java.awt.geom.Point2D.Double(i_minY, minY); p2d2 = new java.awt.geom.Point2D.Double(i_maxY, maxY); }else if (v_maxX && v_maxY) { p2d1 = new java.awt.geom.Point2D.Double(maxX, i_maxX); p2d2 = new java.awt.geom.Point2D.Double(i_maxY, maxY); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/806/buggy-version/src.cartesian.coordinate.CCSystem.java", "BodyUseAPI": [], "Fixed commit": "af5a3440549d52c95b9de16180e93e003b51847d", "Url": "https://api.github.com/repos/andern/jcoolib", "Date": "2014-08-15T13:40:40Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGravitySensor) == null) { btnMeasurment.setEnabled(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3394/buggy-version/Hackathon[2014].src.li.itcc.hackathon2014.vaduztour.SculptureFragment.java", "BodyUseAPI": [], "Fixed commit": "f1bfb31e2adc9a2f619d5406e6cb68389f05bd4b", "Url": "https://api.github.com/repos/itcc-li/hackathon-2014-android", "Date": "2014-08-23T18:37:12Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.hardware.SensorManager.getSensorList(Sensor.TYPE_GRAVITY)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(list.isEmpty())) { mGravitySensor = mSensorManager.getSensorList(Sensor.TYPE_GRAVITY).get(0); }else { mGravitySensor = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3394/buggy-version/Hackathon[2014].src.li.itcc.hackathon2014.vaduztour.SculptureFragment.java", "BodyUseAPI": [], "Fixed commit": "f1bfb31e2adc9a2f619d5406e6cb68389f05bd4b", "Url": "https://api.github.com/repos/itcc-li/hackathon-2014-android", "Date": "2014-08-23T18:37:12Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (creature instanceof com.brackeen.javagamebook.tilegame.Stormtrooper) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/173/buggy-version/src.com.brackeen.javagamebook.tilegame.GameManager.java", "BodyUseAPI": [], "Fixed commit": "ae2ec188da0515df36b43084e73b85167f53ee23", "Url": "https://api.github.com/repos/burkeg/30862Proj", "Date": "2016-10-30T19:23:46Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.usfirst.frc4915.MecanumDrive.Robot.elevator) != null) { org.usfirst.frc4915.MecanumDrive.Robot.elevator.setHieghtToCurrentPosition(); org.usfirst.frc4915.MecanumDrive.subsystems.Elevator.minimumPotentiometerValue = org.usfirst.frc4915.MecanumDrive.Robot.preferences.getDouble(\"minimumPotentiometerValue\", 0); org.usfirst.frc4915.MecanumDrive.subsystems.Elevator.maximumPotentiometerValue = org.usfirst.frc4915.MecanumDrive.Robot.preferences.getDouble(\"maximumPotentiometerValue\", 1023); org.usfirst.frc4915.MecanumDrive.Robot.debugger.logError(LoggerNames.ELEVATOR, (\"MaximumPotentiometerValue = \" + (org.usfirst.frc4915.MecanumDrive.subsystems.Elevator.maximumPotentiometerValue))); org.usfirst.frc4915.MecanumDrive.Robot.debugger.logError(LoggerNames.ELEVATOR, (\"MinimumPotentiometerValue = \" + (org.usfirst.frc4915.MecanumDrive.subsystems.Elevator.minimumPotentiometerValue))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7836/buggy-version/RobotCode.MecanumDrive.src.org.usfirst.frc4915.MecanumDrive.Robot.java", "BodyUseAPI": [], "Fixed commit": "76c35ebb9c573cac3617698a0968afff4938d69b", "Url": "https://api.github.com/repos/Spartronics4915/2015-Recycle-Rush", "Date": "2015-02-17T00:56:08Z"},
{"Line": "=>940", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getJoinMap().isEmpty())) { for (de.bund.bfr.knime.gis.views.canvas.element.Edge<V> p : picked) { if (getJoinMap().containsKey(p)) { allPicked.addAll(getJoinMap().get(p)); } } }else { allPicked.addAll(picked); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3687/buggy-version/de.bund.bfr.knime.gis.views.canvas.src.de.bund.bfr.knime.gis.views.canvas.Canvas.java", "BodyUseAPI": [], "Fixed commit": "debc99f49cb30157d14a01b018b8f67b81b7d1c7", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2014-06-13T11:42:47Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == 2) { if (var.hasValue()) { obj = getObject(var.getValue().toString()); java.lang.System.out.println((\"OBJECT: \" + (var.getValue().toString()))); }else if (var.isAnonymous()) { obj = getObject(var.getName()); } }else { contexts.add(((org.openrdf.model.URI) (getContext(var.getName())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1915/buggy-version/src.main.java.nl.vu.datalayer.hbase.sail.HBaseSailConnection.java", "BodyUseAPI": [], "Fixed commit": "cfd24ebd6226dc72f9a0e3f760092287103c7d4b", "Url": "https://api.github.com/repos/pgroth/hbase-rdf", "Date": "2012-09-04T11:18:07Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.simplon.kif.core.service.UserService.findOneByUsername(auth.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (user != null) { model.addAttribute(\"user\", user); return new org.springframework.web.servlet.ModelAndView(\"users/profile\", model); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2549/buggy-version/src.main.java.co.simplon.kif.web.IndexController.java", "BodyUseAPI": ["org.springframework.ui.ModelMap.addAttribute(java.lang.String,co.simplon.kif.core.model.User)"], "Fixed commit": "abf8ba981597a76e41efbf9a804c46932764ab75", "Url": "https://api.github.com/repos/simplon-CQP-Java/kif", "Date": "2016-12-16T21:08:46Z"},
{"Line": "=>1405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"KO\".equals(series.getTagValue(TagW.Modality))) { org.weasis.core.api.media.data.MediaSeriesGroup patient = model.getParent(series, DicomModel.patient); koOpen.setVisible(org.weasis.dicom.explorer.DicomModel.hasSpecialElements(patient, org.weasis.dicom.codec.KOSpecialElement.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8007/buggy-version/weasis-dicom.weasis-dicom-explorer.src.main.java.org.weasis.dicom.explorer.DicomExplorer.java", "BodyUseAPI": ["org.weasis.dicom.explorer.DicomModel.getParent(org.weasis.core.api.media.data.Series,DicomModel.patient)"], "Fixed commit": "931e74794ee3a3cd3b3b802e74d3a7014ca535d2", "Url": "https://api.github.com/repos/mischwarz/Weasis", "Date": "2017-02-27T08:44:33Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.myles.ViaVersion.transformers.PacketUtil.readString(io.netty.buffer.ByteBuf)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((line == null) || (line.equalsIgnoreCase(\"null\"))) { line = \"{\\\"text\\\":\\\"\\\"}\"; }else { if ((!(line.startsWith(\"\\\"\"))) && (!(line.startsWith(\"{\")))) line = (\"\\\"\" + line) + \"\\\"\"; if (line.startsWith(\"\\\"\")) line = (\"{\\\"text\\\":\" + line) + \"}\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5527/buggy-version/src.main.java.us.myles.ViaVersion.transformers.OutgoingTransformer.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "6f605e8d6c46d3be24e5e5236488774e4f365f2e", "Url": "https://api.github.com/repos/Mystalion/ViaVersion", "Date": "2016-02-29T21:27:17Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((activity.getActivityDate()) == null) { activity.setActivityDate(new java.util.Date()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7917/buggy-version/acm_service.src.main.java.com.aegis.acm.service.impl.ActivityServiceImpl.java", "BodyUseAPI": ["com.aegis.acm.domain.Activity.setActivityDate(java.util.Date)"], "Fixed commit": "bb8a5e98e3e64bbd5c108094fd18eb3b3a0f768a", "Url": "https://api.github.com/repos/daegis/sshacm", "Date": "2017-09-05T13:41:30Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 24) { notificationBuilder.setCustomContentView(contentView); }else notificationBuilder.setContent(contentView);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2543/buggy-version/phoneProfiles.src.main.java.sk.henrichg.phoneprofiles.PhoneProfilesService.java", "BodyUseAPI": [], "Fixed commit": "78bf744c232f8b95c930e43044b549831e7b0b4e", "Url": "https://api.github.com/repos/henrichg/PhoneProfiles", "Date": "2017-09-23T08:53:55Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.address.model.task.Assignees.assign(java.util.ArrayList<seedu.address.commons.core.index.Index>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!atLeastOneAdded) { throw new seedu.address.model.task.exceptions.DuplicateTaskException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7567/buggy-version/src.main.java.seedu.address.model.ModelManager.java", "BodyUseAPI": [], "Fixed commit": "e0521002558113c2cdd04e860f2d16016681b924", "Url": "https://api.github.com/repos/CS2103AUG2017-W09-B2/main", "Date": "2017-11-12T05:10:29Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7246/buggy-version/code-generator.binding-data-codec.src.main.java.org.opendaylight.yangtools.binding.data.codec.util.AugmentableDispatchSerializer.java", "BodyUseAPI": [], "Fixed commit": "4651146f71c8d73d9c13bccf10a9b248d578cf55", "Url": "https://api.github.com/repos/opendaylight/yangtools", "Date": "2015-01-19T16:03:04Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getLocalizedMessage()) != null) android.util.Log.d(com.jaguarlandrover.rvi.ServerConnection.TAG, e.getLocalizedMessage());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3847/buggy-version/rvi.src.main.java.com.jaguarlandrover.rvi.ServerConnection.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)", "java.lang.Exception.getLocalizedMessage()"], "Fixed commit": "73bebe142f8accd31d451bc81b139d0136445890", "Url": "https://api.github.com/repos/lillialexis/rvi_mobile_unlock", "Date": "2016-11-18T01:03:05Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (packet == null) { if ((mListener) != null) mListener.nodeSendServiceInvocationFailed(this, null, error); }else if ((packet.getClass()) == (com.jaguarlandrover.rvi.DlinkReceivePacket.class)) { if ((mListener) != null) mListener.nodeSendServiceInvocationFailed(this, ((com.jaguarlandrover.rvi.DlinkReceivePacket) (packet)).getService().getServiceIdentifier(), error); }else if (((packet.getClass()) == (com.jaguarlandrover.rvi.DlinkPacket.class)) && ((packet.mCmd) == (DlinkPacket.Command.RECEIVE))) { if ((mListener) != null) mListener.nodeSendServiceInvocationFailed(this, null, error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3847/buggy-version/rvi.src.main.java.com.jaguarlandrover.rvi.RVIRemoteNode.java", "BodyUseAPI": ["com.jaguarlandrover.rvi.DlinkPacket.getClass()", "com.jaguarlandrover.rvi.DlinkPacket.getClass()"], "Fixed commit": "73bebe142f8accd31d451bc81b139d0136445890", "Url": "https://api.github.com/repos/lillialexis/rvi_mobile_unlock", "Date": "2016-11-18T01:03:05Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (caseid == 3) com.google.gwt.user.client.History.newItem(edu.cmu.square.client.ui.ChooseStepCase3.ChooseStepCase3Pilot.generateNavigationId(ChooseStepCase3Pilot.PageId.home));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5045/buggy-version/src.edu.cmu.square.client.ui.elicitSecurityRequirements.ElicitSecurityRequirementSummaryPane.java", "BodyUseAPI": [], "Fixed commit": "dfb99d50311fbdcb9bf947f2032ed7b24aa71049", "Url": "https://api.github.com/repos/deekay0/asquare", "Date": "2011-07-13T12:59:48Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (caseid == 1) com.google.gwt.user.client.History.newItem(edu.cmu.square.client.ui.ChooseStep.ChooseStepPilot.generateNavigationId(ChooseStepPilot.PageId.home));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5045/buggy-version/src.edu.cmu.square.client.ui.elicitSecurityRequirements.ElicitSecurityRequirementSummaryPane.java", "BodyUseAPI": [], "Fixed commit": "dfb99d50311fbdcb9bf947f2032ed7b24aa71049", "Url": "https://api.github.com/repos/deekay0/asquare", "Date": "2011-07-13T12:59:48Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(healthCheckService.getReportIds(healthServiceUID).isEmpty())) { healthCheckService.solveIssue(healthServiceUID, issueId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7868/buggy-version/repose-aggregator.core.core-lib.src.main.java.com.rackspace.papi.service.datastore.distributed.impl.distributed.jetty.DistributedDatastoreLauncherServiceImpl.java", "BodyUseAPI": ["com.rackspace.papi.service.healthcheck.HealthCheckService.solveIssue(java.lang.String,java.lang.String)"], "Fixed commit": "703369e803c8a2e51a866e97c5827d5216e6cbfa", "Url": "https://api.github.com/repos/rackerlabs/repose", "Date": "2014-02-12T19:58:13Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((account.getType()) != null) { node.setAttributeNS(null, \"type\", account.getType().name()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6211/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.local.ProfileWriter.java", "BodyUseAPI": ["account.getType().name()", "net.nikr.eve.jeveasset.data.MyAccount.getType()", "org.w3c.dom.Element.setAttributeNS(<nulltype>,java.lang.String,account.getType().name())"], "Fixed commit": "c8e6d88c97a437129ce3fac451bf171459a989d8", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2015-09-22T10:44:48Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MidletMain.mainFrame.buddyList.getBuddyItem(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((buddyItem.getInternalType()) == (BuddyItem.TYPE_ROOM_ITEM)) { com.tomclaw.utils.LogUtil.outMessage(\"Room nick name couldn't be set by this xmlns\"); }else { buddyItem.setNickName(nick); buddyItem.updateUi(); com.tomclaw.mandarin.core.MainFrame.repaintFrame(); com.tomclaw.mandarin.core.ChatFrame.repaintFrame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4843/buggy-version/src.com.tomclaw.mandarin.core.Handler.java", "BodyUseAPI": ["com.tomclaw.mandarin.core.BuddyItem.updateUi()", "com.tomclaw.mandarin.core.BuddyItem.setNickName(java.lang.String)"], "Fixed commit": "de211e27da9411d5f5403821bb4ad01b07bba165", "Url": "https://api.github.com/repos/solkin/mandarin-j2me", "Date": "2012-09-27T11:52:48Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (activity.isComment()) { if (!(activity.getTitleId().equals(\"forum.remove-poll\"))) { if (activity.getTitleId().equals(\"forum.add-poll\")) { return org.exoplatform.social.notification.LinkProviderUtils.getOpenLink(org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(activity)); }else { return templateParams.get(\"PostLink\"); } } }else { return (org.exoplatform.commons.utils.CommonsUtils.getCurrentDomain()) + (templateParams.get(\"TopicLink\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/139/buggy-version/component.notification.src.main.java.org.exoplatform.social.notification.LinkProviderUtils.java", "BodyUseAPI": ["activity.getTitleId().equals(java.lang.String)", "org.exoplatform.social.core.activity.model.ExoSocialActivity.getTitleId()", "org.exoplatform.social.notification.LinkProviderUtils.getOpenLink(org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(activity))", "activity.getTitleId().equals(java.lang.String)", "org.exoplatform.social.core.activity.model.ExoSocialActivity.getTitleId()", "org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(org.exoplatform.social.core.activity.model.ExoSocialActivity)"], "Fixed commit": "65a8275a4202bc3282b396f31b7096e1a23ef84e", "Url": "https://api.github.com/repos/exodev/social", "Date": "2016-08-24T11:33:45Z"},
{"Line": "=>720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((currentLocation != null) && (((currentLocation.getType()) == type) || (type == (Location.ANY_RECORD_TYPE)))) { result = currentLocation; }else if (currentLocation == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1402/buggy-version/src.main.java.journal.io.api.Journal.java", "BodyUseAPI": [], "Fixed commit": "16987177225fa90890432b1351f3b0ad45228c3f", "Url": "https://api.github.com/repos/sbtourist/Journal.IO", "Date": "2013-01-26T13:32:37Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((trueTokens.length) == 0) && ((predictTokens.length) == 0)) { result[0] = 1; return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/963/buggy-version/StackExchangTagger.src.org.h2t2.setagger.util.TagEvaluator.java", "BodyUseAPI": [], "Fixed commit": "43605d665007bc33e5bd01ad5127d512519191bb", "Url": "https://api.github.com/repos/galaxyh/stack-exchange-tagger", "Date": "2013-11-22T14:07:16Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(f1Score)) { return java.lang.Double.NaN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/963/buggy-version/StackExchangTagger.src.org.h2t2.setagger.util.FMeasure.java", "BodyUseAPI": [], "Fixed commit": "43605d665007bc33e5bd01ad5127d512519191bb", "Url": "https://api.github.com/repos/galaxyh/stack-exchange-tagger", "Date": "2013-11-22T14:07:16Z"},
{"Line": "=>989", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (focusPriority > (_maxPriority)) { _maxPriority = focusPriority; _result = view; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3634/buggy-version/xul.src.com.starcor.xul.XulArea.java", "BodyUseAPI": [], "Fixed commit": "6dd088e1afbdaa19ac24afdaf2b0d74b85e834cb", "Url": "https://api.github.com/repos/starcor-company/starcor.xul", "Date": "2017-12-22T09:47:18Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.Authentication.getPrincipal()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(com.stormpath.sdk.lang.Strings.hasText(username))) { throw new org.springframework.security.authentication.AuthenticationServiceException(\"must have username and password\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6457/buggy-version/extensions.spring.stormpath-spring-security.src.main.java.com.stormpath.spring.security.provider.StormpathAuthenticationProvider.java", "BodyUseAPI": [], "Fixed commit": "f7d93762ababa0ce970a85976b9d64918c9a3e14", "Url": "https://api.github.com/repos/stormpath/stormpath-sdk-java", "Date": "2016-03-04T16:40:01Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (recentLine == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3927/buggy-version/src.main.java.edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.java", "BodyUseAPI": [], "Fixed commit": "da73bc7e5f6d59c961cfc94ee6678f0e75b4eb19", "Url": "https://api.github.com/repos/forkunited/micro-mid", "Date": "2016-02-09T04:12:58Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dateParts.length) < 3) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3927/buggy-version/src.main.java.edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.java", "BodyUseAPI": [], "Fixed commit": "da73bc7e5f6d59c961cfc94ee6678f0e75b4eb19", "Url": "https://api.github.com/repos/forkunited/micro-mid", "Date": "2016-02-09T04:12:58Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(inBattleScene)) new game.FileWriter(game.getMaze(), player, game).save();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7798/buggy-version/project.project.src.game.Game.java", "BodyUseAPI": [], "Fixed commit": "def1bcecfe130193981ffb97484dee5ded3ad11c", "Url": "https://api.github.com/repos/eddyxq/233", "Date": "2017-11-20T19:50:38Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraftforge.fml.client.FMLClientHandler.instance().getSide()) == (net.minecraftforge.fml.relauncher.Side.SERVER)) { ga.scmc.network.NetworkHandler.sendToServer(new ga.scmc.network.message.MessageSetPlayerShieldServer(amount)); }else { ga.scmc.network.NetworkHandler.sendToClient(new ga.scmc.network.message.MessageSetPlayerShieldClient(amount)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2388/buggy-version/src.main.java.ga.scmc.api.CapabilityUtils.java", "BodyUseAPI": [], "Fixed commit": "5bfee78af0e247ed33189e888a76a36bc52e1420", "Url": "https://api.github.com/repos/SCMCMod/Starcraft-Mod", "Date": "2017-11-22T00:07:39Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(req.getParameter(\"pet\").isEmpty())) && (!(searchResult.isEmpty()))) { searchResult.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2746/buggy-version/pet-clinic-web.src.main.java.org.petclinic.servlets.SearchClientServlet.java", "BodyUseAPI": ["java.util.List<org.petclinic.petclinicapp.Client>.clear()"], "Fixed commit": "024b0a71a7e7ab4a0b5f9c285f55461b464c5569", "Url": "https://api.github.com/repos/FFKL/petclinicappweb", "Date": "2016-01-15T00:16:02Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5877/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "fd2a24203ea11254f1863e3461c7ad8af970714b", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-04-25T04:26:11Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<cn.momia.service.course.order.OrderPackage>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (orderService.isGiftExpired(orderPackage.getId())) return cn.momia.common.core.http.MomiaHttpResponse.SUCCESS(4);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6108/buggy-version/course.service-course.src.main.java.cn.momia.service.course.web.ctrl.OrderController.java", "BodyUseAPI": [], "Fixed commit": "787e67a8c8c5f4f704673abc0ac8cf597dcc088d", "Url": "https://api.github.com/repos/lovemomia/service", "Date": "2016-02-03T09:58:35Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.size()) == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5256/buggy-version/app.src.main.java.cbgm.de.listapi.handler.type.CBTouchType.java", "BodyUseAPI": [], "Fixed commit": "38dbceb0e34c0f703827ce9bfc2d72323474aa29", "Url": "https://api.github.com/repos/cbgm/ListAPI", "Date": "2017-12-14T11:58:10Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (factorDivision != ((int) (factorDivision))) { throw new java.lang.IllegalStateException(\"MaxValue needs to be divisible by factor without remainder\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5814/buggy-version/core.src.main.java.com.graphhopper.routing.util.EncodedDoubleValue.java", "BodyUseAPI": [], "Fixed commit": "6d770f8a864ec89509d696276da42936f1f92592", "Url": "https://api.github.com/repos/routexl/graphhopper", "Date": "2017-02-24T22:59:00Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Parser.Command.getCommandType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (Parser.CommandParser.hasIndexNumber(commandType)) { if (((taskStatement != null) && (!(taskStatement.isEmpty()))) && ((command.getIndexList()) == null)) { command.setIndexList(Parser.CommandParser.generateDefaultIntList()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3518/buggy-version/src.Parser.CommandParser.java", "BodyUseAPI": [], "Fixed commit": "baa3067dd36f733db4ca3a949a656aae0e7c9ec1", "Url": "https://api.github.com/repos/cs2103jan2016-t09-2j/main", "Date": "2016-04-11T07:42:45Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null == (medraBrowserDto.getScrollColumn())) { level = medraBrowserDto.getSearchLevel(); }else { level = medraBrowserDto.getScrollColumn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1525/buggy-version/src.main.java.com.deloitte.smt.service.SocHierarchyService.java", "BodyUseAPI": ["com.deloitte.smt.dto.MedraBrowserDTO.getSearchLevel()", "com.deloitte.smt.dto.MedraBrowserDTO.getScrollColumn()"], "Fixed commit": "c1da239ea6b5deffffda7b33bd00469939e2d5cc", "Url": "https://api.github.com/repos/srss-raju/stm", "Date": "2017-11-22T13:42:02Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isPageComplete()) && ((getWizard().getStartingPage()) != (getWizard().getContainer().getCurrentPage()))) { makeRegistration(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6200/buggy-version/WatchDogEclipsePlugin.WatchDog.src.nl.tudelft.watchdog.ui.wizards.userregistration.UserRegistrationPage.java", "BodyUseAPI": [], "Fixed commit": "2ecc00570c83d68806b7345b85a8542898c870d7", "Url": "https://api.github.com/repos/TestRoots/watchdog", "Date": "2015-03-02T17:15:48Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((gatewayApprovalStatus) == null) || (gatewayApprovalStatus.isEmpty())) gatewayApprovalStatus = GatewayApprovalStatus.APPROVED.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/3663/buggy-version/modules.registry.registry-core.src.main.java.org.apache.airavata.registry.core.experiment.catalog.resources.GatewayResource.java", "BodyUseAPI": [], "Fixed commit": "83a0bf8795730d712449653af1f484d9cf152d3f", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2016-09-22T16:54:39Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((i + 1) < (chs.length)) && ((chs[(i + 1)]) == 'i')) { continue; }else { sb.append(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5084/buggy-version/src.edu.ucla.cs.utils.InfixToPrefixConvertor.java", "BodyUseAPI": [], "Fixed commit": "89f32df2cf98978f6f837dc9d0e8ec15935329fb", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-20T06:18:32Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.LOLLIPOP)) { android.app.ActivityOptions options = android.app.ActivityOptions.makeSceneTransitionAnimation(this); android.content.Intent intent = new android.content.Intent(this, wtfisandroid.drinkinggamescollection.gui.game.pyramid.PyramidActivity.class); startActivity(intent, options.toBundle()); }else startActivity(new android.content.Intent(getApplicationContext(), wtfisandroid.drinkinggamescollection.gui.game.pyramid.PyramidActivity.class));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/667/buggy-version/DrinkingGamesCollection.app.src.main.java.wtfisandroid.drinkinggamescollection.gui.game.pyramid.PyramidActivity.java", "BodyUseAPI": [], "Fixed commit": "0907652de0043fe155350b07b41f0f48b4ce4697", "Url": "https://api.github.com/repos/Gertfreiberger/Trinkspielsammlung", "Date": "2016-06-11T20:03:19Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userType == 3) { setTitle(\"ENSYFI - Students\"); }else if (userType == 4) { setTitle(\"ENSYFI - Parents\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/846/buggy-version/app.src.main.java.com.palprotech.ensyfi.activity.parentsmodule.ParentDashBoardActivity.java", "BodyUseAPI": [], "Fixed commit": "0c4f517566b05e7d42a71c1c8c640d38ae5724b3", "Url": "https://api.github.com/repos/HappySanz/ENSYFI", "Date": "2017-07-04T09:13:41Z"},
{"Line": "=>1545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (loadedBitmap != null) imageView.setImageBitmap(org.inaturalist.android.ImageUtils.getRoundedCornerBitmap(loadedBitmap));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7963/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.ObservationEditor.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(org.inaturalist.android.ImageUtils.getRoundedCornerBitmap(loadedBitmap))", "org.inaturalist.android.ImageUtils.getRoundedCornerBitmap(android.graphics.Bitmap)"], "Fixed commit": "c404b4cdbb86bea40250639a3221ed050dbafbc5", "Url": "https://api.github.com/repos/budowski/iNaturalistAndroid", "Date": "2016-05-22T06:53:29Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["_critterToSpaceMap.get(infectingCritter).getAdjacentSpace(infectingCritter.getFacing())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(space.hasCritter())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5758/buggy-version/src.game.model.arena.Arena.java", "BodyUseAPI": [], "Fixed commit": "d71a384672fac84f36886e558e8e634503bf930e", "Url": "https://api.github.com/repos/robinsons/critter-remake", "Date": "2014-12-12T08:50:08Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((temp.length) < 2) { return -1; }else { return index; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/7677/buggy-version/src.speedo.Parser.java", "BodyUseAPI": [], "Fixed commit": "dd169526abdb48a03747b77a73f1c56fe9ff5515", "Url": "https://api.github.com/repos/cs2103aug2015-w14-4j/main", "Date": "2015-10-31T23:58:49Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((map) != null) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6133/buggy-version/Area.java", "BodyUseAPI": [], "Fixed commit": "cd46312449384e364576fd736602302fa20f6490", "Url": "https://api.github.com/repos/ventaquil/Blocky", "Date": "2016-05-08T17:05:52Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vaadin.ui.TreeTable.getChildren(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (itemIds == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4785/buggy-version/src.main.java.ch.bfh.bti7081.s2013.blue.ui.PatientDetailView.java", "BodyUseAPI": [], "Fixed commit": "90af72cef2d98ae5fbb14b43de37745c6e16167f", "Url": "https://api.github.com/repos/andef4/ch.bfh.bti7081.s2013.blue", "Date": "2013-06-14T16:06:26Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vaadin.ui.TreeTable.getChildren(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (timeIds == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4785/buggy-version/src.main.java.ch.bfh.bti7081.s2013.blue.ui.PatientDetailView.java", "BodyUseAPI": [], "Fixed commit": "90af72cef2d98ae5fbb14b43de37745c6e16167f", "Url": "https://api.github.com/repos/andef4/ch.bfh.bti7081.s2013.blue", "Date": "2013-06-14T16:06:26Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entry_type) == null) { entry_type = new java.util.ArrayList<>(); entry_type.add(MetadataSupport.XDSDocumentEntry_objectType_uuid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4808/buggy-version/validators-registry-message.src.main.java.gov.nist.toolkit.valregmsg.registry.storedquery.generic.GetSubmissionSetAndContents.java", "BodyUseAPI": [], "Fixed commit": "ed013c780209e13339ae8888d9448e25f5df9e36", "Url": "https://api.github.com/repos/usnistgov/iheos-toolkit2", "Date": "2017-01-09T16:05:39Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (listView instanceof android.widget.ListView) { ((android.widget.ListView) (listView)).setAdapter(adapter); }else if (listView instanceof android.widget.GridView) { ((android.widget.GridView) (listView)).setAdapter(adapter); }else { listView.setAdapter(adapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1564/buggy-version/src.main.java.fr.ybo.ybotv.android.activity.ListProgrammeManager.java", "BodyUseAPI": [], "Fixed commit": "3d824c451caf5831a352c5619c4d65001bb1d108", "Url": "https://api.github.com/repos/ybonnel/ybo-tv-android", "Date": "2012-12-09T21:41:13Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDetached()) { android.util.Log.e(\"NJW\", \"Fragment is detached, don't try to use resources or bind viewholder\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/8857/buggy-version/app.src.main.java.org.disciplestoday.disciplestoday.ArticleListFragment.java", "BodyUseAPI": [], "Fixed commit": "ae80e63474d9bf83f052d0214d526066b5809754", "Url": "https://api.github.com/repos/neiljaywarner/CapstoneProject", "Date": "2016-06-25T21:48:34Z"},
{"Line": "=>825", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.larvalabs.svgandroid.SVGParser.getStringAttr(java.lang.String,org.xml.sax.Attributes)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (v.endsWith(\"px\")) { v = v.substring(0, ((v.length()) - 2)); }else if (v.endsWith(\"pt\")) { v = v.substring(0, ((v.length()) - 2)); return ((java.lang.Float.parseFloat(v)) * (com.larvalabs.svgandroid.SVGParser.density)) + 0.5F; }else if (v.endsWith(\"%\")) { v = v.substring(0, ((v.length()) - 1)); return (java.lang.Float.parseFloat(v)) / 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4850/buggy-version/svgandroid.src.com.larvalabs.svgandroid.SVGParser.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "12e521039b82be5b03ebfc1a3ea151f0bddb5f29", "Url": "https://api.github.com/repos/Pixplicity/sharp", "Date": "2013-08-17T06:41:04Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (user == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/5839/buggy-version/src.main.java.com.lordmat.githubstream.api.GitHubAPI.java", "BodyUseAPI": [], "Fixed commit": "e7289811769ad75cf7af9c231f3e3112f6880cd9", "Url": "https://api.github.com/repos/lordmat0/githubstream", "Date": "2014-09-11T20:32:27Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(measurableUnitString.trim().isEmpty())) this.quantity = java.lang.Double.parseDouble(measurableUnitString.replaceAll(\"[A-Z,a-z, ]\", \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1000/buggy-version/src.com.customfit.ctg.model.Measurement.java", "BodyUseAPI": [], "Fixed commit": "d0eda2500961e2190f86fd6bbe9f07efd690c05a", "Url": "https://api.github.com/repos/daball/Cooking-to-Goal", "Date": "2011-04-25T12:01:23Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(eu.theunitry.fabula.graphics.UNWindow.DEBUG)) { this.frame.setUndecorated(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/1756/buggy-version/Fabula.src.eu.theunitry.fabula.graphics.UNWindow.java", "BodyUseAPI": [], "Fixed commit": "8376e52449b3bc5660847f0ace648460d8e6b358", "Url": "https://api.github.com/repos/The-Unitry/fabula", "Date": "2015-11-04T12:49:39Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((width == 0) || (height == 0)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/6288/buggy-version/Mobile.android.SecondLife.app.src.main.java.com.greensoft.secondlife.utils.ViewUtils.java", "BodyUseAPI": [], "Fixed commit": "a0055e8fbb3e085e4797669a177627226f171c01", "Url": "https://api.github.com/repos/robcio83/SecondLife", "Date": "2017-12-10T13:16:02Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.ServerSocket.accept()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(s.isClosed())) s.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/4909/buggy-version/src.at.yawk.util.httpserver.SocketHttpServer.java", "BodyUseAPI": ["java.net.Socket.close()"], "Fixed commit": "b876a8bfdf9f847c3d9bdfab8c653c975bc9397f", "Url": "https://api.github.com/repos/yawkat/FimFictionClient", "Date": "2012-12-13T20:00:18Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2405/buggy-version/library.src.main.java.com.eggheadgames.siren.SirenHelper.java", "BodyUseAPI": [], "Fixed commit": "902ac3fa1b3bcab07948c7c89649034e9d68a51b", "Url": "https://api.github.com/repos/eggheadgames/Siren", "Date": "2016-05-10T23:16:26Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activity == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V32/2405/buggy-version/library.src.main.java.com.eggheadgames.siren.SirenHelper.java", "BodyUseAPI": [], "Fixed commit": "902ac3fa1b3bcab07948c7c89649034e9d68a51b", "Url": "https://api.github.com/repos/eggheadgames/Siren", "Date": "2016-05-10T23:16:26Z"}]}
