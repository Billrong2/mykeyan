{"UNKNOWN to If":[{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (ret == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/188/buggy-version/src.main.java.org.tron.program.SolidityNode.java", "BodyUseAPI": [], "Fixed commit": "746aa557d1cc6683c272199eb5b45ad46a41b195", "Url": "https://api.github.com/repos/tronprotocol/java-tron", "Date": "2018-12-11T11:41:36Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pc.getOrder(wholeSet)) == null) { return new java.util.Vector<simpledb.LogicalJoinNode>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2660/buggy-version/src.java.simpledb.JoinOptimizer.java", "BodyUseAPI": [], "Fixed commit": "cde5e52bce1b9bcc12db451a1f123b92198b068e", "Url": "https://api.github.com/repos/cs6400-database/SimpleDB", "Date": "2018-12-03T02:14:54Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ov3rk1ll.kinocast.utils.Chain.request()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (request.url().isHttps()) c = (c.trim()) + \"; secure\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6665/buggy-version/app.src.main.java.com.ov3rk1ll.kinocast.utils.CloudflareDdosInterceptor.java", "BodyUseAPI": [], "Fixed commit": "847bbb6ac7d07af1a2a8274c6d2488bb21843178", "Url": "https://api.github.com/repos/werty1st/KinoCast", "Date": "2018-12-25T23:34:04Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serviceDesc.size()) == 0) { resMsg.put(\"SVCDesc\", null); }else { resMsg.put(\"SVCDesc\", serviceList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8375/buggy-version/DSP.src.com.kt.dataManager.JSONSerializerTo.java", "BodyUseAPI": [], "Fixed commit": "dbf08b457dd638684c38449cf674dc7126502d31", "Url": "https://api.github.com/repos/zenolim89/service-description-project", "Date": "2018-11-11T15:02:19Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stage.getActors().size) != 0) { stage.getActors().pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9469/buggy-version/core.src.com.jpv.Bugged.Niveles.Scenes.Hud.java", "BodyUseAPI": ["com.badlogic.gdx.scenes.scene2d.Stage.getActors()", "stage.getActors().pop()"], "Fixed commit": "bfadfb2c6e1d4b8ba3a107b5c2b4127e5c7ffeb9", "Url": "https://api.github.com/repos/ChuchoPV/Bugged", "Date": "2018-11-18T17:41:43Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { mFragmentManager.beginTransaction().replace(R.id.fragment_container, tech.joeyck.livefootball.ui.competition_detail.matches.MatchesFragment.newInstance(mViewModel.getCompetitionId(), mViewModel.getCompetitionName(), mViewModel.getMatchDay()), MatchesFragment.FRAGMENT_TAG).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9040/buggy-version/app.src.main.java.tech.joeyck.livefootball.ui.competition_detail.CompetitionActivity.java", "BodyUseAPI": [], "Fixed commit": "c28b30bcef1384151bf95ceec318c4b2e3be5bfd", "Url": "https://api.github.com/repos/s6joui/football-data-android-java", "Date": "2018-12-01T11:07:15Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newItem.contains(\"Necklace\")) { return \"Neck: \" + newItem; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3706/buggy-version/src.autoquest.Equipment.java", "BodyUseAPI": [], "Fixed commit": "b048c45ada46af4b107449faf64563f7c22b7d4c", "Url": "https://api.github.com/repos/joshgarde/AutoQuest", "Date": "2018-12-05T04:29:39Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (com.fenlan.spring.shop.controller.admin.Type.getByCode(type))) { switch (com.fenlan.spring.shop.controller.admin.Type.getByCode(type)) { case SHOP : { for (com.fenlan.spring.shop.controller.admin.BlackList item : items) { com.fenlan.spring.shop.controller.admin.BlackEntity entity = new com.fenlan.spring.shop.controller.admin.BlackEntity(); entity.setId(item.getId()); entity.setType(Type.SHOP); entity.setObject(shopService.finById(item.getEntityid())); list.add(entity); } } break; case SELLER : { for (com.fenlan.spring.shop.controller.admin.BlackList item : items) { com.fenlan.spring.shop.controller.admin.BlackEntity entity = new com.fenlan.spring.shop.controller.admin.BlackEntity(); entity.setId(item.getId()); entity.setType(Type.SELLER); entity.setObject(userService.findById(item.getEntityid())); list.add(entity); } } break; case CUSTOMER : { for (com.fenlan.spring.shop.controller.admin.BlackList item : items) { com.fenlan.spring.shop.controller.admin.BlackEntity entity = new com.fenlan.spring.shop.controller.admin.BlackEntity(); entity.setId(item.getId()); entity.setType(Type.CUSTOMER); entity.setObject(userService.findById(item.getEntityid())); list.add(entity); } } break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5659/buggy-version/src.main.java.com.fenlan.spring.shop.controller.admin.ManageSellerController.java", "BodyUseAPI": ["com.fenlan.spring.shop.controller.admin.Type.getByCode(java.lang.Integer)"], "Fixed commit": "ca0c0e46b2bd9586262beeb5e4f503a46e623da5", "Url": "https://api.github.com/repos/PMC6/online-store-back-end", "Date": "2018-12-11T06:42:37Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInterrupt) { isInterrupt = false; }else { int r = manager.abandonAudioFocus(this); hasAudioFocus = r != (android.media.AudioManager.AUDIOFOCUS_REQUEST_GRANTED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3627/buggy-version/android.src.main.java.guichaguri.trackplayer.logic.components.FocusManager.java", "BodyUseAPI": [], "Fixed commit": "bd2b51578984ee0dfa614ab4c421ab0f5698a3a7", "Url": "https://api.github.com/repos/radiospiritsapp/react-native-track-player", "Date": "2018-11-14T10:30:50Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.io.IOUtils.copy(java.io.FileInputStream,java.io.FileOutputStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (copyDockerfileRet < 0) { throw new java.lang.Exception(\"copy Dockerfile.properties template error!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9059/buggy-version/src.main.java.cn.ac.iie.proxy.controller.PushImageController.java", "BodyUseAPI": [], "Fixed commit": "021db48ce7d6d97828e34fdc3633f19b41425d75", "Url": "https://api.github.com/repos/fighterhit/data-preprocessing-executor", "Date": "2018-11-02T06:44:31Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1392/buggy-version/src.BinarySearchLibrary.java", "BodyUseAPI": [], "Fixed commit": "75fa05ae215aa488eae4bd12053db89ee16643ff", "Url": "https://api.github.com/repos/zhechengsheng/Autocomplete-fall18", "Date": "2018-11-16T05:45:17Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1392/buggy-version/src.BinarySearchLibrary.java", "BodyUseAPI": [], "Fixed commit": "75fa05ae215aa488eae4bd12053db89ee16643ff", "Url": "https://api.github.com/repos/zhechengsheng/Autocomplete-fall18", "Date": "2018-11-16T05:45:17Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gauntlet.ranger.isDead()) { gauntlet.gameState.setRangerDirection(GameState.Direction.STOP); gauntlet.ranger.setPosition(gauntlet.rangerSpawnX, gauntlet.rangerSpawnY); gauntlet.ranger.setHealth(100); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2637/buggy-version/src.gauntlet.GameStartUp.java", "BodyUseAPI": ["gauntlet.ranger.setHealth(int)", "gauntlet.ranger.setPosition(gauntlet.rangerSpawnX,gauntlet.rangerSpawnY)", "gauntlet.gameState.setRangerDirection(GameState.Direction.STOP)"], "Fixed commit": "48c24496fad6c99749deeabf7a83c5842c98e9ee", "Url": "https://api.github.com/repos/Chaycej/Gauntlet", "Date": "2018-12-08T03:00:36Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mixinConfig.equals(\"\"))) { org.spongepowered.asm.mixin.Mixins.addConfiguration(mixinConfig); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4213/buggy-version/src.main.java.club.thepufferfishproject.pml.mods.ModDiscoverer.java", "BodyUseAPI": ["org.spongepowered.asm.mixin.Mixins.addConfiguration(java.lang.String)"], "Fixed commit": "b5fc79ddee12f56c48b66e684f4325eb239499b5", "Url": "https://api.github.com/repos/ConorTheDev/PufferfishModLoader", "Date": "2018-10-30T09:22:36Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\u00a2 instanceof il.org.spartan.utils.Binary) throw new java.lang.IllegalArgumentException((\u00a2 + \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3757/buggy-version/src.main.java.il.org.spartan.utils.Binary.java", "BodyUseAPI": [], "Fixed commit": "f3822655d37337044f54e97346413591b1571f28", "Url": "https://api.github.com/repos/TechnionYP5779/team2", "Date": "2018-11-23T10:05:42Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getShip(i, j).getPosX()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((player.getShip(i, j).isHorizontal()) && ((player.getShip(i, j).getShipPart()[(i - x)]) == 1)) ((javax.swing.JLabel) (this.getComponent(((i * 10) + j)))).setIcon(new javax.swing.ImageIcon(java.awt.Toolkit.getDefaultToolkit().getImage(\"./img/ship_1_shot.png\"))); else if ((!(player.getShip(i, j).isHorizontal())) && ((player.getShip(i, j).getShipPart()[(y - j)]) == 1)) ((javax.swing.JLabel) (this.getComponent(((i * 10) + j)))).setIcon(new javax.swing.ImageIcon(java.awt.Toolkit.getDefaultToolkit().getImage(\"./img/ship_1_shot.png\"))); else ((javax.swing.JLabel) (this.getComponent(((i * 10) + j)))).setIcon(new javax.swing.ImageIcon(java.awt.Toolkit.getDefaultToolkit().getImage(\"./img/ship_1.png\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2647/buggy-version/src.view.VueCreaLaby.java", "BodyUseAPI": ["player.getShip(i, j).isHorizontal()", "model.players.Human.getShip(int,int)", "java.awt.Component.setIcon(javax.swing.ImageIcon)", "java.awt.Component.setIcon(javax.swing.ImageIcon)", "view.VueCreaLaby.getComponent(int)", "model.players.Human.getShip(int,int)", "view.VueCreaLaby.getComponent(int)", "view.VueCreaLaby.getComponent(int)", "player.getShip(i, j).getShipPart()", "java.awt.Component.setIcon(javax.swing.ImageIcon)"], "Fixed commit": "a3617e9e515b064e57928436093c3329c0f49a4c", "Url": "https://api.github.com/repos/giang2u/DP_2018_BlackPearl", "Date": "2018-12-22T20:13:34Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((valueType) == (gov.nist.toolkit.simcommon.client.config.SimulatorConfigElement.ValueType.SINGLE_SELECT_LIST)) && ((listValue) != null)) return listValue.get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2271/buggy-version/sim-common.src.main.java.gov.nist.toolkit.simcommon.client.config.SimulatorConfigElement.java", "BodyUseAPI": [], "Fixed commit": "f735cefcd7dd4e7d4b5dafc5c55af8bce0178166", "Url": "https://api.github.com/repos/usnistgov/iheos-toolkit2", "Date": "2018-11-14T17:43:32Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.mkdir()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!success) { no.siriuslabs.image.services.FileService.LOGGER.info(\"image directory creation at {} {}\", imagePath, (success ? \"successful\" : \"failed\")); throw new java.io.UncheckedIOException(new java.io.IOException(\"Creation of image directory failed.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9580/buggy-version/geoscience-image-classification.src.main.java.no.siriuslabs.image.services.FileService.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,java.lang.String,(success ? \"successful\" : \"failed\"))"], "Fixed commit": "ae72b28409a8ddf93b9b625849c6f440c950a1f7", "Url": "https://api.github.com/repos/Sirius-sfi/geoscience-image-classification", "Date": "2018-11-13T09:24:44Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((arguments.length) != 3) { throw new seedu.souschef.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.souschef.logic.parser.commandparser.MESSAGE_INVALID_COMMAND_FORMAT, PlanMealCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8243/buggy-version/src.main.java.seedu.souschef.logic.parser.commandparser.PlanMealCommandParser.java", "BodyUseAPI": [], "Fixed commit": "8a779cd814efff81f1beb38fdf64070ae94b30e7", "Url": "https://api.github.com/repos/BennTay/main", "Date": "2018-11-05T04:32:02Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ewp.crm.controllers.rest.ClientService.get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (client.isRepeated()) { client.addHistory(clientHistoryService.createHistory(userFromSession, client, ClientHistory.Type.DESCRIPTION)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8481/buggy-version/src.main.java.com.ewp.crm.controllers.rest.ClientRestController.java", "BodyUseAPI": ["com.ewp.crm.controllers.rest.Client.addHistory(clientHistoryService.createHistory(userFromSession, client, ClientHistory.Type.DESCRIPTION))", "com.ewp.crm.controllers.rest.ClientHistoryService.createHistory(com.ewp.crm.controllers.rest.User,com.ewp.crm.controllers.rest.Client,ClientHistory.Type.DESCRIPTION)"], "Fixed commit": "07a91d0992804643c6bb07645e5f3ffb705458c3", "Url": "https://api.github.com/repos/WebEducationPlatform/CRM", "Date": "2018-12-13T12:04:47Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mScreenBrightness) != (-1)) { org.arpnetwork.arpdevice.device.Adb adb = new org.arpnetwork.arpdevice.device.Adb(org.arpnetwork.arpdevice.stream.Touch.getInstance().getConnection()); adb.globalDimRestore(mScreenBrightnessMode, mScreenBrightness); mScreenBrightness = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3866/buggy-version/app.src.main.java.org.arpnetwork.arpdevice.app.AppManager.java", "BodyUseAPI": [], "Fixed commit": "392e5dce870e0ba4fa26cf21caa6bc31be4236d3", "Url": "https://api.github.com/repos/arpnetwork/arpdevice", "Date": "2018-10-23T03:37:34Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (driverManager == null) { org.apache.plc4x.java.opm.PlcEntityInterceptor.LOGGER.trace(\"Entity not connected, simply fowarding call\"); try { return callable.call(); } catch (java.lang.Exception e) { throw new org.apache.plc4x.java.opm.OPMException(\"Exception during forwarding call\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5242/buggy-version/plc4j.utils.opm.src.main.java.org.apache.plc4x.java.opm.PlcEntityInterceptor.java", "BodyUseAPI": [], "Fixed commit": "b16cc9ba356495fd73f3a823d94e4a28e92c3c4b", "Url": "https://api.github.com/repos/apache/incubator-plc4x", "Date": "2018-11-24T12:24:59Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dao.getDetail()) != null) { bean.setDetail(new java.lang.String(dao.getDetail().getBytes(\"ISO_8859_1\"), \"UTF-8\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4989/buggy-version/todolist.src.main.java.jp.co.h30.swdev.service.ListService.java", "BodyUseAPI": ["jp.co.h30.swdev.bean.ListBean.setDetail(java.lang.String)", "dao.getDetail().getBytes(java.lang.String)", "jp.co.h30.swdev.dao.TodoDao.getDetail()"], "Fixed commit": "e02e83dc8c70b7d3a0108923bb8e059e32f41d9a", "Url": "https://api.github.com/repos/topse-agile/todolist", "Date": "2018-12-20T09:33:49Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dao.getTitle()) != null) { bean.setTitle(new java.lang.String(dao.getTitle().getBytes(\"ISO_8859_1\"), \"UTF-8\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4989/buggy-version/todolist.src.main.java.jp.co.h30.swdev.service.ListService.java", "BodyUseAPI": ["jp.co.h30.swdev.bean.ListBean.setTitle(java.lang.String)", "dao.getTitle().getBytes(java.lang.String)", "jp.co.h30.swdev.dao.TodoDao.getTitle()"], "Fixed commit": "e02e83dc8c70b7d3a0108923bb8e059e32f41d9a", "Url": "https://api.github.com/repos/topse-agile/todolist", "Date": "2018-12-20T09:33:49Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (outputFile != null) sample.Main.writeResultToFile(result, outputFile);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5388/buggy-version/src.sample.Main.java", "BodyUseAPI": ["sample.Main.writeResultToFile(data_structure.Board,java.lang.String)"], "Fixed commit": "63148957292bc24b5374f42e9cdf2acab269e722", "Url": "https://api.github.com/repos/zetraxus/Kakuro", "Date": "2018-12-29T22:59:08Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((missionList.get(i).length()) > 13) { for (int j = (missionList.get(i).length()) - 1; j > ((missionList.get(i).length()) - 13); j--) { sb.deleteCharAt(j); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8918/buggy-version/src.combinedarms.gearscriptor.dataaccess.DirectoryManagement.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)", "java.lang.String.length()", "java.lang.String.length()"], "Fixed commit": "1b7c113908cd1e6ee901536a27259b2ca60683c3", "Url": "https://api.github.com/repos/CombinedArmsGaming/Gearscripter", "Date": "2018-12-20T23:23:11Z"},
{"Line": "=>654", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.schemarepo.zookeeper.ZooKeeperRepository.ZooKeeperSubject.getLatestSchemaId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (latestId == (-1)) { return null; }else { java.lang.String latestSchemaLiteral = readSchemaForId(latestId.toString()); if (latestSchemaLiteral == null) { return null; }else { return new org.schemarepo.SchemaEntry(latestId.toString(), latestSchemaLiteral); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4194/buggy-version/zookeeper.src.main.java.org.schemarepo.zookeeper.ZooKeeperRepository.java", "BodyUseAPI": ["java.lang.Integer.toString()", "org.schemarepo.zookeeper.ZooKeeperRepository.ZooKeeperSubject.readSchemaForId(java.lang.String)", "java.lang.Integer.toString()"], "Fixed commit": "50241bb85e1826cf86ee20a8f7ae6e52d0a7983b", "Url": "https://api.github.com/repos/chekore/schema-repo", "Date": "2018-11-22T07:01:40Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getAvatar()) != null) { fileResource = fileResourceService.getFileResource(user.getAvatar().getUid()); fileResource.setAssigned(true); fileResourceService.updateFileResource(fileResource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5101/buggy-version/dhis-2.dhis-services.dhis-service-dxf2.src.main.java.org.hisp.dhis.dxf2.metadata.objectbundle.hooks.UserObjectBundleHook.java", "BodyUseAPI": ["org.hisp.dhis.user.User.getAvatar()", "org.hisp.dhis.fileresource.FileResourceService.getFileResource(user.getAvatar().getUid())", "user.getAvatar().getUid()"], "Fixed commit": "923209d54efd54f10683742b1269abfa8f6b3369", "Url": "https://api.github.com/repos/msf-oca-his/dhis-core", "Date": "2018-11-13T08:17:41Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.block.state.IBlockState.getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (block instanceof com.ferreusveritas.dynamictrees.blocks.BlockSurfaceRoot) { return com.ferreusveritas.dynamictrees.blocks.BlockBranchThick.ReplaceableState.TREEPART; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5131/buggy-version/src.main.java.com.ferreusveritas.dynamictrees.blocks.BlockBranchThick.java", "BodyUseAPI": [], "Fixed commit": "23343c3b907d1da31c180c0e37a42366b3d4de84", "Url": "https://api.github.com/repos/OrionDevelopment/DynamicTrees", "Date": "2018-11-05T04:28:30Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["site.binghai.biz.entity.jdy.WxTplMsg.getUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((hasEmptyString(url)) || (!(url.contains(\"?\")))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7571/buggy-version/biz.src.main.java.site.binghai.biz.tasks.TurnGameTicketAddListener.java", "BodyUseAPI": [], "Fixed commit": "fb286a68f68a6f9973f30d96f75b2e73b0250827", "Url": "https://api.github.com/repos/IceSeaOnly/dayu", "Date": "2018-11-06T03:17:08Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(children.getKey().contains(\"-\"))) { }else { mpartyids.add(children.getKey()); android.util.Log.d(com.example.arturolopez.fete.MyPartiesActivity.TAG, (((childDataSnapshot.getKey()) + \": \") + (children.getKey()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8553/buggy-version/app.src.main.java.com.example.arturolopez.fete.MyPartiesActivity.java", "BodyUseAPI": ["com.google.firebase.database.DataSnapshot.getKey()", "android.util.Log.d(java.lang.String,(((childDataSnapshot.getKey()) + \": \") + (children.getKey())))", "java.util.ArrayList<java.lang.String>.add(children.getKey())", "com.google.firebase.database.DataSnapshot.getKey()"], "Fixed commit": "36569cbfe52984def62e8593001be00fbd6432eb", "Url": "https://api.github.com/repos/alopez96/fete", "Date": "2018-12-02T01:08:18Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mData) != null) { return mData.size(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2972/buggy-version/app.src.main.java.com.highbryds.shoppinglistforromania_mvvm.Adapters.ShoppingListAdapter.java", "BodyUseAPI": [], "Fixed commit": "009aa0d2f28b1a9dcdde0a7c50d8c3c0897a713f", "Url": "https://api.github.com/repos/smtrz/AndroidViewModel_ArchitecturalComponents", "Date": "2018-12-20T07:34:41Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.parseFloatIntoDecimal) && ((sb.length()) > 1)) { value = new java.math.BigDecimal(sb.toString(), this.mathContext); }else if ((sb.length()) == 1) { return new com.googlecode.aviator.lexer.token.CharToken('.', startIndex); }else { value = dval; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8756/buggy-version/src.main.java.com.googlecode.aviator.lexer.ExpressionLexer.java", "BodyUseAPI": ["java.lang.StringBuffer.length()", "java.lang.StringBuffer.toString()"], "Fixed commit": "ddd142141ace9db53bbb51bf760e367b2d2863c2", "Url": "https://api.github.com/repos/killme2008/aviator", "Date": "2018-11-19T09:51:26Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (counter < 3) { lengthOfThreeHyphens = (3 - counter) + (format[1][m].length()); if ((lengthOfColumn > 0) && (lengthOfColumn < lengthOfThreeHyphens)) lengthOfColumn = lengthOfThreeHyphens; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7826/buggy-version/src.main.java.table_formatter.PipeTableFormat.java", "BodyUseAPI": [], "Fixed commit": "2a92693cc4aa068623340de6f09c14eef05211d0", "Url": "https://api.github.com/repos/borisv13/GitHub-Flavored-Markdown-Eclipse-Plugin", "Date": "2018-11-28T03:14:36Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (i < (tokens.length)) tok += tokens[i];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8160/buggy-version/src.main.java.sample.Parse.java", "BodyUseAPI": [], "Fixed commit": "4e5bb4f1ddbf710af0cb57e19c94b62af8071182", "Url": "https://api.github.com/repos/alinapolei/Manoa", "Date": "2018-11-05T20:48:27Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMessenger) != null) mMessenger.cleanup();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2773/buggy-version/kas-mq-core.src.main.java.com.kas.mq.internal.MqConnection.java", "BodyUseAPI": [], "Fixed commit": "18d2b5f2569361cfd145d2a6ad56a7662e55e1c2", "Url": "https://api.github.com/repos/shyifrah/kas", "Date": "2018-12-23T17:40:04Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.Query.getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (users.isEmpty()) { return null; }else { return users.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6933/buggy-version/src.main.java.com.learnx.demo.repository.AppUserRepository.java", "BodyUseAPI": ["java.util.List<com.learnx.demo.entity.AppUser>.get(int)"], "Fixed commit": "b9d8a982325dfc2d731a2209054c03df6bbe5c08", "Url": "https://api.github.com/repos/MrMrEcho/CMPE_226_LearningX", "Date": "2018-11-29T00:24:29Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((itPATH) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7131/buggy-version/src.main.java.com.itPATH.backend.data.model.Reply.java", "BodyUseAPI": [], "Fixed commit": "79573d18258d1498e42bad9bc7a08e7f4db0098b", "Url": "https://api.github.com/repos/NJU-itPATH/back-end-java-server", "Date": "2018-11-21T02:47:23Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["abstractBuild.getWorkspace().getRemote()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (workSpace != null) { java.io.File katalonDir = com.katalon.jenkins.plugin.KatalonUtils.getKatalonPackage(buildListener, this.version); com.katalon.jenkins.plugin.LogUtils.log(buildListener, katalonDir.getAbsolutePath()); java.lang.String katalonExecutableFile = java.nio.file.Paths.get(katalonDir.getAbsolutePath(), \"katalon\").toAbsolutePath().toString(); executeKatalon(katalonExecutableFile, workSpace, buildListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5946/buggy-version/src.main.java.com.katalon.jenkins.plugin.ExecuteKatalonStudioTask.java", "BodyUseAPI": ["com.katalon.jenkins.plugin.ExecuteKatalonStudioTask.executeKatalon(java.lang.String,java.lang.String,hudson.model.BuildListener)"], "Fixed commit": "d92fa03998205168b47b4951341d4452f22fa165", "Url": "https://api.github.com/repos/jenkinsci/katalon-plugin", "Date": "2018-12-27T07:35:46Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<edu.upc.citm.android.speakerfeedback.Poll>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(poll.isOpen())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5815/buggy-version/app.src.main.java.edu.upc.citm.android.speakerfeedback.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4b7272a97306e0b970d1b140aa4eac872c6db201", "Url": "https://api.github.com/repos/TRWork/SpeakerFeedback", "Date": "2018-11-27T11:57:44Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, horle.fmsync.model.Tuple<java.lang.Integer, java.lang.Integer>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((t.getRight()) != 0) java.lang.System.out.println((((((t.getLeft()) + \", \") + (t.getRight())) + \"\\t\") + key));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/88/buggy-version/src.horle.fmsync.model.ImportOtherFM.java", "BodyUseAPI": ["horle.fmsync.model.Tuple<java.lang.Integer, java.lang.Integer>.getLeft()", "horle.fmsync.model.Tuple<java.lang.Integer, java.lang.Integer>.getRight()", "java.io.PrintStream.println((((((t.getLeft()) + \", \") + (t.getRight())) + \"\\t\") + key))"], "Fixed commit": "2005667ad283703724e72cfcc0c16567310a8f89", "Url": "https://api.github.com/repos/horle/fmsync", "Date": "2018-12-06T17:01:36Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(localStack.isEmpty())) { localStack.remove(((localStack.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4786/buggy-version/src.main.java.com.floragunn.searchguard.support.MapUtils.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.remove(int)"], "Fixed commit": "fab4441f769d2635023710a5dfc5bb5717176a3f", "Url": "https://api.github.com/repos/floragunncom/search-guard", "Date": "2018-12-15T17:06:10Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (textParams == null) { textParams = new com.mylhyl.circledialog.params.TextParams(); textParams.height = 0; textParams.padding = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4447/buggy-version/circledialog.src.main.java.com.mylhyl.circledialog.view.BodyTextView.java", "BodyUseAPI": [], "Fixed commit": "1f0776ebdd1aa65dc3ebefd4fc9411d0505d3884", "Url": "https://api.github.com/repos/mylhyl/Android-CircleDialog", "Date": "2018-12-13T01:43:30Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.java.cn.liubinbin.pan.experiment.cache.CacheManager.getByByteBuf(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value == null) { io.netty.handler.codec.http.FullHttpResponse response = new io.netty.handler.codec.http.DefaultFullHttpResponse(HTTP_1_1, NOT_FOUND); response.headers().set(main.java.cn.liubinbin.pan.server.cache.CacheServerHandler.CONTENT_TYPE, \"text/plain\"); if (!keepAlive) { ctx.write(response).addListener(ChannelFutureListener.CLOSE); }else { response.headers().set(main.java.cn.liubinbin.pan.server.cache.CacheServerHandler.CONNECTION, main.java.cn.liubinbin.pan.server.cache.CacheServerHandler.KEEP_ALIVE); ctx.write(response); } }else { io.netty.handler.codec.http.FullHttpResponse response = new io.netty.handler.codec.http.DefaultFullHttpResponse(HTTP_1_1, OK, value); response.headers().set(main.java.cn.liubinbin.pan.server.cache.CacheServerHandler.CONTENT_TYPE, \"text/plain\"); response.headers().setInt(main.java.cn.liubinbin.pan.server.cache.CacheServerHandler.CONTENT_LENGTH, response.content().readableBytes()); if (!keepAlive) { ctx.write(response).addListener(ChannelFutureListener.CLOSE); }else { response.headers().set(main.java.cn.liubinbin.pan.server.cache.CacheServerHandler.CONNECTION, main.java.cn.liubinbin.pan.server.cache.CacheServerHandler.KEEP_ALIVE); ctx.write(response); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4624/buggy-version/src.main.java.cn.liubinbin.pan.server.cache.CacheServerHandler.java", "BodyUseAPI": [], "Fixed commit": "e8c1e0e0b9fb4804dca5be3af7490a0bb0aad0c7", "Url": "https://api.github.com/repos/liubinbin/pan", "Date": "2018-12-11T15:52:23Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((session.getId()) != null) { builder.header(Header.Session, session.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1259/buggy-version/library.rtsp.src.main.java.com.google.android.exoplayer2.source.rtsp.RtspDefaultClient.java", "BodyUseAPI": ["Request.Builder.header(Header.Session,session.getId())", "com.google.android.exoplayer2.source.rtsp.RtspDefaultClient.getId()"], "Fixed commit": "854bcb3e7d708029438a25cb788c2c2fdaad9e0b", "Url": "https://api.github.com/repos/GlobalInvacomGroupLimited/ExoPlayer", "Date": "2018-12-13T21:57:12Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((session.getId()) != null) { builder.header(Header.Session, session.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1259/buggy-version/library.rtsp.src.main.java.com.google.android.exoplayer2.source.rtsp.RtspDefaultClient.java", "BodyUseAPI": ["com.google.android.exoplayer2.source.rtsp.RtspDefaultClient.getId()", "Request.Builder.header(Header.Session,session.getId())"], "Fixed commit": "854bcb3e7d708029438a25cb788c2c2fdaad9e0b", "Url": "https://api.github.com/repos/GlobalInvacomGroupLimited/ExoPlayer", "Date": "2018-12-13T21:57:12Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.isListWithContent(httpServer.getEcRTables())) { for (ec.net.httpserver.ecrtable.EcRenderTable et : httpServer.getEcRTables()) { if (et.getDefinitionFileUri().toUpperCase().endsWith(str.toUpperCase())) { return et; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7509/buggy-version/src.ec.net.httpserver.ClassServiceEngine.java", "BodyUseAPI": ["ec.net.httpserver.EcHttpServer.getEcRTables()"], "Fixed commit": "f729a3f964f31b9009dd3c88b06434b0c372accd", "Url": "https://api.github.com/repos/march1cat/EcDevelopeLib", "Date": "2018-12-24T09:02:36Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.grid[i][j].clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(field.isSet())) { sudokuGrid.freeFields.add(field); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2147/buggy-version/src.main.java.janbingemann.SudokuGrid.java", "BodyUseAPI": ["java.util.List<janbingemann.Field>.add(janbingemann.Field)"], "Fixed commit": "5cedc7a5cc0b0ff20c7f1a048ee03f852348a893", "Url": "https://api.github.com/repos/JanNB97/Sudoku", "Date": "2018-12-03T20:47:57Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (driverManager == null) { org.apache.plc4x.java.opm.PlcEntityInterceptor.LOGGER.trace(\"Entity not connected, simply fowarding call\"); try { return callable.call(); } catch (java.lang.Exception e) { throw new org.apache.plc4x.java.opm.OPMException(\"Exception during forwarding call\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2434/buggy-version/plc4j.utils.opm.src.main.java.org.apache.plc4x.java.opm.PlcEntityInterceptor.java", "BodyUseAPI": [], "Fixed commit": "90b7f109307389b8c052e13ad1c199c859393928", "Url": "https://api.github.com/repos/apache/incubator-plc4x", "Date": "2018-11-24T12:24:59Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (str.contains(\"?\")) str = str.replace(\"?\", \" \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1771/buggy-version/src.main.Command.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "31e02a6136c26419bb0de1dcbfa68081cf6887b5", "Url": "https://api.github.com/repos/MarkSlayer456/Cyrus", "Date": "2018-11-13T17:13:35Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (str.contains(\"!\")) str = str.replace(\"!\", \" \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1771/buggy-version/src.main.Command.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "31e02a6136c26419bb0de1dcbfa68081cf6887b5", "Url": "https://api.github.com/repos/MarkSlayer456/Cyrus", "Date": "2018-11-13T17:13:35Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (str.contains(\".\")) str = str.replace(\".\", \" \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1771/buggy-version/src.main.Command.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "31e02a6136c26419bb0de1dcbfa68081cf6887b5", "Url": "https://api.github.com/repos/MarkSlayer456/Cyrus", "Date": "2018-11-13T17:13:35Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (argSize > 1) { for (int i = 0; i < argSize; i++) { this.args.set(1, ((this.args.get(1)) + (this.args.get(i)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1771/buggy-version/src.main.Command.java", "BodyUseAPI": [], "Fixed commit": "31e02a6136c26419bb0de1dcbfa68081cf6887b5", "Url": "https://api.github.com/repos/MarkSlayer456/Cyrus", "Date": "2018-11-13T17:13:35Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (str.contains(\",\")) str = str.replace(\",\", \" \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1771/buggy-version/src.main.Command.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "31e02a6136c26419bb0de1dcbfa68081cf6887b5", "Url": "https://api.github.com/repos/MarkSlayer456/Cyrus", "Date": "2018-11-13T17:13:35Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (d != null) { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\"); java.lang.String strDate = sdf.format(d); return strDate; }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7584/buggy-version/src.main.java.com.blogspot.noteoneverything.chatboard.util.Utility.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(java.util.Date)"], "Fixed commit": "d873a7c8d837150eba7c86c9cd46c1d04f6df553", "Url": "https://api.github.com/repos/lechatthecat/JavaChatBoard", "Date": "2018-11-18T10:36:59Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((forecastWeatherRecyclerView.getVisibility()) == (android.view.View.GONE)) { forecastWeatherRecyclerView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/45/buggy-version/app.src.main.java.com.example.abhishek.weatherforecast.WeatherListFragment.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.setVisibility(View.VISIBLE)"], "Fixed commit": "f3db45285181379f6d25762b209a849ca676cd98", "Url": "https://api.github.com/repos/babai-abhishek/OpenWeatherApp", "Date": "2018-12-26T07:46:43Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((controller.Controller.getNodes()) != null) { for (controller.Node eachNode : controller.Controller.getNodes()) { nodeList.getItems().add(eachNode.getId().substring(1, ((eachNode.getId().length()) - 1))); } nodeList.getSelectionModel().selectFirst(); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8815/buggy-version/csTeamProject.src.application.AddApplicationController.java", "BodyUseAPI": [], "Fixed commit": "81520b39b83b2027f726a45201acdc65f07a6007", "Url": "https://api.github.com/repos/Kinshuk1993/teamProject", "Date": "2018-12-09T13:53:23Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((kind == (org.hillview.table.api.ContentsKind.Date)) || (kind == (org.hillview.table.api.ContentsKind.Duration))) kind = org.hillview.table.api.ContentsKind.Double;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3193/buggy-version/platform.src.main.java.org.hillview.table.rows.RowSnapshot.java", "BodyUseAPI": [], "Fixed commit": "fdcac9d5a2be164f88a7d4cba89680eb6d3bb425", "Url": "https://api.github.com/repos/SivaMaplelabs/hillview", "Date": "2018-12-14T23:21:47Z"},
{"Line": "=>551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hdfs.server.federation.store.records.MountTable.getDestinations()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((getClass()) == (org.apache.hadoop.hdfs.server.federation.resolver.MountTableResolver.class)) && ((dests.size()) > 1)) { throw new java.io.IOException((((\"Cannnot build location, \" + (getClass().getSimpleName())) + \" should not resolve multiple destinations for \") + path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3421/buggy-version/hadoop-hdfs-project.hadoop-hdfs-rbf.src.main.java.org.apache.hadoop.hdfs.server.federation.resolver.MountTableResolver.java", "BodyUseAPI": [], "Fixed commit": "97a6e6df8a54b02ed7afbe8b403f17e3ec360257", "Url": "https://api.github.com/repos/mapr/hadoop-common", "Date": "2018-10-30T05:51:08Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.userIcon) == null) userIcon = android.graphics.drawable.Icon.createWithResource(\"resources\", R.drawable.default_profile_icon);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4560/buggy-version/app.src.main.java.com.example.hamlet.mobileprogrammingclass_chat_project.classes.User.java", "BodyUseAPI": [], "Fixed commit": "d58ef4e9d17a3aa095bee4a391b040f3698ed9dc", "Url": "https://api.github.com/repos/GrayWizard12345/MobileProgrammingClass_Chat_project", "Date": "2018-12-19T21:08:46Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lichkin.application.apis.api10003.L.n00.I.getLocale()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(inLocale)) { sql.eq(SysDictionaryR.locale, inLocale); }else { if (!(LKFrameworkStatics.LichKin.equals(compId))) { sql.eq(SysDictionaryR.locale, locale); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4064/buggy-version/lichkin-projects-core-admin.src.main.java.com.lichkin.application.apis.api10003.L.n00.S.java", "BodyUseAPI": ["com.lichkin.framework.db.beans.QuerySQL.eq(SysDictionaryR.locale,java.lang.String)"], "Fixed commit": "efedfd43919ba48ce34b3ff4ef85a99a503c34f7", "Url": "https://api.github.com/repos/LichKinContributor/lichkin-projects-core", "Date": "2018-11-19T12:06:14Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.epfl.sweng.studdybuddy.activities.ChatActivity.3.findViewById(R.id.input)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((input.getText().toString().trim().length()) > 0) { ref.select(Messages.FirebaseNode.CHAT).select(groupID).push(new ch.epfl.sweng.studdybuddy.services.chat.ChatMessage(input.getText().toString(), com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getDisplayName(), downloadUri)); input.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2613/buggy-version/app.src.main.java.ch.epfl.sweng.studdybuddy.activities.ChatActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "android.widget.EditText.setText(java.lang.String)", "input.getText().toString()", "ref.select(Messages.FirebaseNode.CHAT).select(groupID).push(ch.epfl.sweng.studdybuddy.services.chat.ChatMessage)"], "Fixed commit": "c3f429f33209379291da2d7d5b67008084c6366c", "Url": "https://api.github.com/repos/geofot96/StudyBuddy", "Date": "2018-11-28T20:25:59Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (body.startsWith(\"Call Type:\")) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2481/buggy-version/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.DE.DEKentCountyBParser.java", "BodyUseAPI": [], "Fixed commit": "96f05aad976c81979f27c1f472fcaf34acefa91e", "Url": "https://api.github.com/repos/cadpage/cadpage-parsers", "Date": "2018-11-14T01:12:13Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit2.Response<com.bupocket.http.api.dto.resp.ApiResult<com.bupocket.http.api.dto.resp.GetMyTxsRespDto>>.body()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (respDto != null) { android.util.Log.d(\"GetMyTxsRespDto:\", com.alibaba.fastjson.JSON.toJSONString(respDto)); mEmptyView.show(null, null); if (isAdded()) { handleMyTxs(respDto.getData()); } }else { mEmptyView.show(getResources().getString(R.string.emptyView_mode_desc_fail_title), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/338/buggy-version/app.src.main.java.com.bupocket.fragment.BPAssetsDetailFragment.java", "BodyUseAPI": ["com.bupocket.fragment.BPAssetsDetailFragment.5.handleMyTxs(respDto.getData())", "android.util.Log.d(java.lang.String,com.alibaba.fastjson.JSON.toJSONString(respDto))", "com.bupocket.http.api.dto.resp.ApiResult<com.bupocket.http.api.dto.resp.GetMyTxsRespDto>.getData()", "com.alibaba.fastjson.JSON.toJSONString(com.bupocket.http.api.dto.resp.ApiResult<com.bupocket.http.api.dto.resp.GetMyTxsRespDto>)"], "Fixed commit": "af55b7f7c599d197841909dace4dd6ea78a9dbd8", "Url": "https://api.github.com/repos/bpio/bupocket-android", "Date": "2018-11-30T06:32:22Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkAmount(amount))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9797/buggy-version/Project1.src.main.java.revature.project1.services.ReimbursementService.java", "BodyUseAPI": [], "Fixed commit": "35f9845bf7a37ac27fad4bb495d8514c7958cad6", "Url": "https://api.github.com/repos/cabobmassey/caleb_shawn_project1", "Date": "2018-11-03T23:18:26Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gr.ekt.bte.core.MutableRecord.getValues(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (exValues == null) { exValues = new java.util.ArrayList<gr.ekt.bte.core.Value>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5705/buggy-version/dspace.modules.additions.src.main.java.org.dspace.submit.lookup.AuthorityLookupModifier.java", "BodyUseAPI": [], "Fixed commit": "a9ccc7c36fbd60dee24e53c1591f9d7909503707", "Url": "https://api.github.com/repos/4Science/DSpace", "Date": "2018-12-10T15:27:44Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastMoveJump) moveI = lastPiece;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4121/buggy-version/app.src.main.java.shaftware.funwithstrangers.CheckersLogic.java", "BodyUseAPI": [], "Fixed commit": "0de973ba5905840ee83ac3016d676faccaadd4d6", "Url": "https://api.github.com/repos/mstock98/FunWithStrangers", "Date": "2018-12-14T18:13:58Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(_exploded)) this.explode();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1998/buggy-version/src.uet.oop.bomberman.entities.bomb.Bomb.java", "BodyUseAPI": [], "Fixed commit": "2614b3cfe44b805b7b9ecc55bc09ee0839afb574", "Url": "https://api.github.com/repos/UET-INT2204-12-fall-18/assignment-2-bomberman-imu", "Date": "2018-11-12T10:54:48Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof uet.oop.bomberman.entities.bomb.Flame) { remove(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1998/buggy-version/src.uet.oop.bomberman.entities.tile.item.Item.java", "BodyUseAPI": [], "Fixed commit": "2614b3cfe44b805b7b9ecc55bc09ee0839afb574", "Url": "https://api.github.com/repos/UET-INT2204-12-fall-18/assignment-2-bomberman-imu", "Date": "2018-11-12T10:54:48Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getDomain().getLogHomeEnabled())) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1690/buggy-version/operator.src.main.java.oracle.kubernetes.operator.helpers.JobStepContext.java", "BodyUseAPI": [], "Fixed commit": "da529e6fc5e5d65171436efb34e10fad1624b0f1", "Url": "https://api.github.com/repos/oracle/weblogic-kubernetes-operator", "Date": "2018-12-17T02:11:53Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bestgame.maze.Ghost.getBounds()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mazeBounds.get(((com.bestgame.maze.PlayScreen.BOUNDS_COUNT) - 1)).contains(ghostBounds)) { isInside = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/489/buggy-version/Maze.core.src.com.bestgame.maze.PlayScreen.java", "BodyUseAPI": [], "Fixed commit": "e30cd9fc6dab761e84a34424f5cf849b93cf260c", "Url": "https://api.github.com/repos/FlyingZ/BestGame", "Date": "2018-12-29T16:43:02Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Driver.connect(java.lang.String,java.util.Properties)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (connection == null) { throw new org.flywaydb.core.api.FlywayException((\"Unable to connect to \" + (url))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/12/buggy-version/flyway-core.src.main.java.org.flywaydb.core.internal.jdbc.DriverDataSource.java", "BodyUseAPI": [], "Fixed commit": "7e4dca2276a6244129818985735c08aab8def486", "Url": "https://api.github.com/repos/flyway/flyway", "Date": "2018-11-29T22:38:44Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((clusters != null) && (!(done))) { int clusterNumber = 0; for (java.util.Collection<org.cytoscape.model.CyNode> nodes : clusters) { result.put(java.lang.String.valueOf((clusterNumber++)), nodes); } done = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3901/buggy-version/AutoAnnotate.src.main.java.org.baderlab.autoannotate.internal.task.RunClusterMakerResultObserver.java", "BodyUseAPI": [], "Fixed commit": "30fbe41c52cace572fba40f12ca5ed5167544962", "Url": "https://api.github.com/repos/BaderLab/AutoAnnotateApp", "Date": "2018-11-06T15:58:24Z"},
{"Line": "=>1548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((seekbarVolume) == null) { handleSeekbarVolume(progress); }else { setProgressSeekbar(seekbarVolume, progress); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8302/buggy-version/uizacoresdk.src.main.java.uizacoresdk.view.rl.video.UZVideo.java", "BodyUseAPI": [], "Fixed commit": "5614dc21a23ab5bff0a3dcb4e6d56511d1ab8a42", "Url": "https://api.github.com/repos/uizaio/uiza-android-sdk-player", "Date": "2018-11-07T02:19:30Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mSearchText.getText().toString().isEmpty())) { mSuggestionAdapter.setSuggestions(suggestions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2356/buggy-version/searchfragment.src.main.java.com.simplexorg.searchfragment.decorator.SearchSuggestionDecorator.java", "BodyUseAPI": [], "Fixed commit": "1f8ddfd61483fd2ed9df96c567b593f91e9a2807", "Url": "https://api.github.com/repos/JarvisAPI/SearchFragment", "Date": "2018-12-22T17:13:24Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ali.cs491.carbuds.ProfileFragment.user_type.equals(\"driver\")) { com.ali.cs491.carbuds.RouteManager.setUserType(RouteManager.DRIVER); }else { com.ali.cs491.carbuds.RouteManager.setUserType(RouteManager.HITCHHIKER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9620/buggy-version/app.src.main.java.com.ali.cs491.carbuds.ProfileFragment.java", "BodyUseAPI": [], "Fixed commit": "0f22bf8effad6a6a7bc696ea4af91b051fbae69d", "Url": "https://api.github.com/repos/aocet/carbudsAnd", "Date": "2018-12-20T01:54:09Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7335/buggy-version/dataquality-sampling.src.main.java.org.talend.dataquality.datamasking.functions.AbstractGenerateUniqueSsn.java", "BodyUseAPI": [], "Fixed commit": "1c9618038a52824f7b6fff4159e7c79286da0892", "Url": "https://api.github.com/repos/Talend/data-quality", "Date": "2018-10-25T16:16:48Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tdata.historicalWeatherData) == null) { showWeatherStations = false; btShowWeatherStation.setSelected(false); }else if ((showWeatherStations) == true) { showWeatherStations = false; ShowHideWeatherStations(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8864/buggy-version/src.course_generator.maps.JPanelMaps.java", "BodyUseAPI": [], "Fixed commit": "cbff2723cea2d4d8c662eb07cf64028cdc197efc", "Url": "https://api.github.com/repos/FJBDev/Course_Generator", "Date": "2018-11-29T05:47:56Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((response != null) && ((response.getException()) != null)) initCause(response.getException());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1055/buggy-version/src.main.java.net.dv8tion.jda.core.exceptions.ErrorResponseException.java", "BodyUseAPI": [], "Fixed commit": "bb1e38158ea2ca8e495e4c4c2a7045999db460af", "Url": "https://api.github.com/repos/DV8FromTheWorld/JDA", "Date": "2018-11-20T08:31:14Z"},
{"Line": "=>1833", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p1[b.getCurrentRound()]) == (p2[b.getCurrentRound()])) { switch (p1[b.getCurrentRound()]) { case 1 : roundResult = \"You Both Tied.\"; play1.getReplyWriter().println(\"You both chose Rock. The match is a tie!\\n\"); play2.getReplyWriter().println(\"You both chose Rock. The match is a tie!\\n\"); if (((((b.getCurrentRound()) + 1) == (b.getMaxRounds())) || ((b.getP1Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) || ((b.getP2Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) { java.lang.String result = ((b.getP1Score()) > (b.getP2Score())) ? b.getPlayer1() : (b.getP1Score()) == (b.getP2Score()) ? \"it was a tie, nobody\" : b.getPlayer2(); message = ((challenger + \" and \") + player2) + ((b.getMaxRounds()) == 1 ? java.text.MessageFormat.format(\" had a Rock Paper Scissors Battle, {0} won.\\n\", result) : java.text.MessageFormat.format(\" had a best {2} out of {0} Rock Paper Scissors Battle, {1} won.\\n\", b.getMaxRounds(), result, ((int) (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0)))))); this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); updateLeaderboard(b); writeLog(b); }else { java.lang.String broadcast = java.text.MessageFormat.format((\"\\nThat was round {0}, You have {1} more round(s) to go. Please choose \\'Rock\\' \\'Paper\\' or \\'Scissors\\' for the next round.\" + \"\\nOnce both of you have sent in your choices, the next round will be triggered.\"), ((b.getCurrentRound()) + 1), ((b.getMaxRounds()) - ((b.getCurrentRound()) + 1))); play1.getReplyWriter().println(broadcast); play2.getReplyWriter().println(broadcast); b.incrementRound(); } return; case 2 : play1.getReplyWriter().println(\"You both chose Paper. The match is a tie!\\n\"); play2.getReplyWriter().println(\"You both chose Paper. The match is a tie!\\n\"); if (((((b.getCurrentRound()) + 1) == (b.getMaxRounds())) || ((b.getP1Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) || ((b.getP2Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) { java.lang.String result = ((b.getP1Score()) > (b.getP2Score())) ? b.getPlayer1() : (b.getP1Score()) == (b.getP2Score()) ? \"it was a tie, nobody\" : b.getPlayer2(); message = ((challenger + \" and \") + player2) + ((b.getMaxRounds()) == 1 ? java.text.MessageFormat.format(\" had a Rock Paper Scissors Battle, {0} won.\\n\", result) : java.text.MessageFormat.format(\" had a best {2} out of {0} Rock Paper Scissors Battle, {1} won.\\n\", b.getMaxRounds(), result, ((int) (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0)))))); this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); updateLeaderboard(b); writeLog(b); }else { java.lang.String broadcast = java.text.MessageFormat.format((\"\\nThat was round {0}, You have {1} more round(s) to go. Please choose \\'Rock\\' \\'Paper\\' or \\'Scissors\\' for the next round.\" + \"\\nOnce both of you have sent in your choices, the next round will be triggered.\"), ((b.getCurrentRound()) + 1), ((b.getMaxRounds()) - ((b.getCurrentRound()) + 1))); play1.getReplyWriter().println(broadcast); play2.getReplyWriter().println(broadcast); b.incrementRound(); } return; case 3 : play1.getReplyWriter().println(\"You both chose Scissors. The match is a tie!\\n\"); play2.getReplyWriter().println(\"You both chose Scissors. The match is a tie!\\n\"); if (((((b.getCurrentRound()) + 1) == (b.getMaxRounds())) || ((b.getP1Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) || ((b.getP2Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) { java.lang.String result = ((b.getP1Score()) > (b.getP2Score())) ? b.getPlayer1() : (b.getP1Score()) == (b.getP2Score()) ? \"it was a tie, nobody\" : b.getPlayer2(); message = ((challenger + \" and \") + player2) + ((b.getMaxRounds()) == 1 ? java.text.MessageFormat.format(\" had a Rock Paper Scissors Battle, {0} won.\\n\", result) : java.text.MessageFormat.format(\" had a best {2} out of {0} Rock Paper Scissors Battle, {1} won.\\n\", b.getMaxRounds(), result, ((int) (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0)))))); this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); updateLeaderboard(b); writeLog(b); }else { java.lang.String broadcast = java.text.MessageFormat.format((\"\\nThat was round {0}, You have {1} more round(s) to go. Please choose \\'Rock\\' \\'Paper\\' or \\'Scissors\\' for the next round.\" + \"\\nOnce both of you have sent in your choices, the next round will be triggered.\"), ((b.getCurrentRound()) + 1), ((b.getMaxRounds()) - ((b.getCurrentRound()) + 1))); play1.getReplyWriter().println(broadcast); play2.getReplyWriter().println(broadcast); b.incrementRound(); } return; } }else if (((p1[b.getCurrentRound()]) == 1) && ((p2[b.getCurrentRound()]) == 2)) { play1.getReplyWriter().println(((\"You chose Rock. \" + player2) + \" chose Paper. \\nYou lose.\\n\")); play2.getReplyWriter().println(((\"You chose Paper. \" + challenger) + \" chose Rock. \\nYou win.\\n\")); this.leaderboard.incrementScore(play1.getName(), false); this.leaderboard.incrementScore(play2.getName(), true); b.incP2Score(); if (((((b.getCurrentRound()) + 1) == (b.getMaxRounds())) || ((b.getP1Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) || ((b.getP2Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) { java.lang.String result = ((b.getP1Score()) > (b.getP2Score())) ? b.getPlayer1() : (b.getP1Score()) == (b.getP2Score()) ? \"it was a tie, nobody\" : b.getPlayer2(); message = ((challenger + \" and \") + player2) + ((b.getMaxRounds()) == 1 ? java.text.MessageFormat.format(\" had a Rock Paper Scissors Battle, {0} won.\\n\", result) : java.text.MessageFormat.format(\" had a best {2} out of {0} Rock Paper Scissors Battle, {1} won.\\n\", b.getMaxRounds(), result, ((int) (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0)))))); this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); updateLeaderboard(b); writeLog(b); }else { java.lang.String broadcast = java.text.MessageFormat.format((\"\\nThat was round {0}, You have {1} more round(s) to go. Please choose \\'Rock\\' \\'Paper\\' or \\'Scissors\\' for the next round.\" + \"\\nOnce both of you have sent in your choices, the next round will be triggered.\"), ((b.getCurrentRound()) + 1), ((b.getMaxRounds()) - ((b.getCurrentRound()) + 1))); play1.getReplyWriter().println(broadcast); play2.getReplyWriter().println(broadcast); b.incrementRound(); } return; }else if (((p1[b.getCurrentRound()]) == 1) && ((p2[b.getCurrentRound()]) == 3)) { play1.getReplyWriter().println(((\"You chose Rock. \" + player2) + \" chose Scissors. \\nYou win.\\n\")); play2.getReplyWriter().println(((\"You chose Scissors. \" + challenger) + \" chose Rock. \\nYou lose.\\n\")); message = ((((challenger + \" and \") + player2) + \" had a Rock Paper Scissors Battle. \\n\") + challenger) + \" won.\\n\"; this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); writeLog(b); this.leaderboard.incrementScore(play1.getName(), true); this.leaderboard.incrementScore(play2.getName(), false); b.incP1Score(); if (((((b.getCurrentRound()) + 1) == (b.getMaxRounds())) || ((b.getP1Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) || ((b.getP2Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) { java.lang.String result = ((b.getP1Score()) > (b.getP2Score())) ? b.getPlayer1() : (b.getP1Score()) == (b.getP2Score()) ? \"it was a tie, nobody\" : b.getPlayer2(); message = ((challenger + \" and \") + player2) + ((b.getMaxRounds()) == 1 ? java.text.MessageFormat.format(\" had a Rock Paper Scissors Battle, {0} won.\\n\", result) : java.text.MessageFormat.format(\" had a best {2} out of {0} Rock Paper Scissors Battle, {1} won.\\n\", b.getMaxRounds(), result, ((int) (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0)))))); this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); updateLeaderboard(b); writeLog(b); }else { java.lang.String broadcast = java.text.MessageFormat.format((\"\\nThat was round {0}, You have {1} more round(s) to go. Please choose \\'Rock\\' \\'Paper\\' or \\'Scissors\\' for the next round.\" + \"\\nOnce both of you have sent in your choices, the next round will be triggered.\"), ((b.getCurrentRound()) + 1), ((b.getMaxRounds()) - ((b.getCurrentRound()) + 1))); play1.getReplyWriter().println(broadcast); play2.getReplyWriter().println(broadcast); b.incrementRound(); } return; }else if (((p1[b.getCurrentRound()]) == 2) && ((p2[b.getCurrentRound()]) == 1)) { play1.getReplyWriter().println(((\"You chose Paper. \" + player2) + \" chose Rock. \\nYou win.\\n\")); play2.getReplyWriter().println(((\"You chose Rock. \" + challenger) + \" chose Paper. \\nYou lose.\\n\")); message = ((((challenger + \" and \") + player2) + \" had a Rock Paper Scissors Battle. \\n\") + challenger) + \" won.\\n\"; this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); writeLog(b); this.leaderboard.incrementScore(play1.getName(), true); this.leaderboard.incrementScore(play2.getName(), false); b.incP1Score(); if (((((b.getCurrentRound()) + 1) == (b.getMaxRounds())) || ((b.getP1Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) || ((b.getP2Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) { java.lang.String result = ((b.getP1Score()) > (b.getP2Score())) ? b.getPlayer1() : (b.getP1Score()) == (b.getP2Score()) ? \"it was a tie, nobody\" : b.getPlayer2(); message = ((challenger + \" and \") + player2) + ((b.getMaxRounds()) == 1 ? java.text.MessageFormat.format(\" had a Rock Paper Scissors Battle, {0} won.\\n\", result) : java.text.MessageFormat.format(\" had a best {2} out of {0} Rock Paper Scissors Battle, {1} won.\\n\", b.getMaxRounds(), result, ((int) (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0)))))); this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); updateLeaderboard(b); writeLog(b); }else { java.lang.String broadcast = java.text.MessageFormat.format((\"\\nThat was round {0}, You have {1} more round(s) to go. Please choose \\'Rock\\' \\'Paper\\' or \\'Scissors\\' for the next round.\" + \"\\nOnce both of you have sent in your choices, the next round will be triggered.\"), ((b.getCurrentRound()) + 1), ((b.getMaxRounds()) - ((b.getCurrentRound()) + 1))); play1.getReplyWriter().println(broadcast); play2.getReplyWriter().println(broadcast); b.incrementRound(); } return; }else if (((p1[b.getCurrentRound()]) == 2) && ((p2[b.getCurrentRound()]) == 3)) { play1.getReplyWriter().println(((\"You chose Paper. \" + player2) + \" chose Scissors. \\nYou lose.\\n\")); play2.getReplyWriter().println(((\"You chose Scissors. \" + challenger) + \" chose Paper. \\nYou win.\\n\")); message = ((((challenger + \" and \") + player2) + \" had a Rock Paper Scissors Battle. \\n\") + player2) + \" won.\\n\"; this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); writeLog(b); this.leaderboard.incrementScore(play1.getName(), false); this.leaderboard.incrementScore(play2.getName(), true); b.incP2Score(); if (((((b.getCurrentRound()) + 1) == (b.getMaxRounds())) || ((b.getP1Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) || ((b.getP2Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) { java.lang.String result = ((b.getP1Score()) > (b.getP2Score())) ? b.getPlayer1() : (b.getP1Score()) == (b.getP2Score()) ? \"it was a tie, nobody\" : b.getPlayer2(); message = ((challenger + \" and \") + player2) + ((b.getMaxRounds()) == 1 ? java.text.MessageFormat.format(\" had a Rock Paper Scissors Battle, {0} won.\\n\", result) : java.text.MessageFormat.format(\" had a best {2} out of {0} Rock Paper Scissors Battle, {1} won.\\n\", b.getMaxRounds(), result, ((int) (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0)))))); this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); updateLeaderboard(b); writeLog(b); }else { java.lang.String broadcast = java.text.MessageFormat.format((\"\\nThat was round {0}, You have {1} more round(s) to go. Please choose \\'Rock\\' \\'Paper\\' or \\'Scissors\\' for the next round.\" + \"\\nOnce both of you have sent in your choices, the next round will be triggered.\"), ((b.getCurrentRound()) + 1), ((b.getMaxRounds()) - ((b.getCurrentRound()) + 1))); play1.getReplyWriter().println(broadcast); play2.getReplyWriter().println(broadcast); b.incrementRound(); } return; }else if (((p1[b.getCurrentRound()]) == 3) && ((p2[b.getCurrentRound()]) == 1)) { play1.getReplyWriter().println(((\"You chose Scissors. \" + player2) + \" chose Rock. \\nYou lose.\\n\")); play2.getReplyWriter().println(((\"You chose Rock. \" + challenger) + \" chose Scissors. \\nYou win.\\n\")); message = ((((challenger + \" and \") + player2) + \" had a Rock Paper Scissors Battle. \\n\") + player2) + \" won.\\n\"; this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); writeLog(b); this.leaderboard.incrementScore(play1.getName(), false); this.leaderboard.incrementScore(play2.getName(), true); b.incP2Score(); if (((((b.getCurrentRound()) + 1) == (b.getMaxRounds())) || ((b.getP1Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) || ((b.getP2Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) { java.lang.String result = ((b.getP1Score()) > (b.getP2Score())) ? b.getPlayer1() : (b.getP1Score()) == (b.getP2Score()) ? \"it was a tie, nobody\" : b.getPlayer2(); message = ((challenger + \" and \") + player2) + ((b.getMaxRounds()) == 1 ? java.text.MessageFormat.format(\" had a Rock Paper Scissors Battle, {0} won.\\n\", result) : java.text.MessageFormat.format(\" had a best {2} out of {0} Rock Paper Scissors Battle, {1} won.\\n\", b.getMaxRounds(), result, ((int) (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0)))))); this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); updateLeaderboard(b); writeLog(b); }else { java.lang.String broadcast = java.text.MessageFormat.format((\"\\nThat was round {0}, You have {1} more round(s) to go. Please choose \\'Rock\\' \\'Paper\\' or \\'Scissors\\' for the next round.\" + \"\\nOnce both of you have sent in your choices, the next round will be triggered.\"), ((b.getCurrentRound()) + 1), ((b.getMaxRounds()) - ((b.getCurrentRound()) + 1))); play1.getReplyWriter().println(broadcast); play2.getReplyWriter().println(broadcast); b.incrementRound(); } return; }else if (((p1[b.getCurrentRound()]) == 3) && ((p2[b.getCurrentRound()]) == 2)) { play1.getReplyWriter().println(((\"You chose Scissors. \" + player2) + \" chose Paper. \\nYou win.\\n\")); play2.getReplyWriter().println(((\"You chose Paper. \" + challenger) + \" chose Scissors. \\nYou lose.\\n\")); message = ((((challenger + \" and \") + player2) + \" had a Rock Paper Scissors Battle. \\n\") + challenger) + \" won.\\n\"; this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); writeLog(b); this.leaderboard.incrementScore(play1.getName(), true); this.leaderboard.incrementScore(play2.getName(), false); b.incP1Score(); if (((((b.getCurrentRound()) + 1) == (b.getMaxRounds())) || ((b.getP1Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) || ((b.getP2Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) { java.lang.String result = ((b.getP1Score()) > (b.getP2Score())) ? b.getPlayer1() : (b.getP1Score()) == (b.getP2Score()) ? \"it was a tie, nobody\" : b.getPlayer2(); message = ((challenger + \" and \") + player2) + ((b.getMaxRounds()) == 1 ? java.text.MessageFormat.format(\" had a Rock Paper Scissors Battle, {0} won.\\n\", result) : java.text.MessageFormat.format(\" had a best {2} out of {0} Rock Paper Scissors Battle, {1} won.\\n\", b.getMaxRounds(), result, ((int) (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0)))))); this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); updateLeaderboard(b); writeLog(b); }else { java.lang.String broadcast = java.text.MessageFormat.format((\"\\nThat was round {0}, You have {1} more round(s) to go. Please choose \\'Rock\\' \\'Paper\\' or \\'Scissors\\' for the next round.\" + \"\\nOnce both of you have sent in your choices, the next round will be triggered.\"), ((b.getCurrentRound()) + 1), ((b.getMaxRounds()) - ((b.getCurrentRound()) + 1))); play1.getReplyWriter().println(broadcast); play2.getReplyWriter().println(broadcast); b.incrementRound(); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/174/buggy-version/src.GameCore.java", "BodyUseAPI": ["GameCore.writeLog(Battle)", "Battle.getCurrentRound()", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.getMaxRounds()", "GameCore.writeLog(Battle)", "Battle.getMaxRounds()", "GameCore.writeLog(Battle)", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getPlayer1()", "Battle.getMaxRounds()", "GameCore.writeLog(Battle)", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "GameCore.updateLeaderboard(Battle)", "java.text.MessageFormat.format(java.lang.String,b.getMaxRounds(),java.lang.String,double)", "Battle.getP2Score()", "java.text.MessageFormat.format(java.lang.String,((b.getCurrentRound()) + 1),((b.getMaxRounds()) - ((b.getCurrentRound()) + 1)))", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "GameCore.writeLog(Battle)", "java.text.MessageFormat.format(java.lang.String,b.getMaxRounds(),java.lang.String,double)", "Battle.getP2Score()", "Battle.getMaxRounds()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "Battle.getPlayer2()", "Battle.getP2Score()", "Battle.getP1Score()", "java.text.MessageFormat.format(java.lang.String,((b.getCurrentRound()) + 1),((b.getMaxRounds()) - ((b.getCurrentRound()) + 1)))", "Battle.getP1Score()", "GameCore.writeLog(Battle)", "Battle.getMaxRounds()", "Battle.getP1Score()", "Battle.getP1Score()", "Battle.getCurrentRound()", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.getMaxRounds()", "Battle.getCurrentRound()", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "Battle.getP2Score()", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "Battle.getPlayer2()", "Battle.getP1Score()", "Battle.getMaxRounds()", "GameCore.updateLeaderboard(Battle)", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "Battle.getCurrentRound()", "Battle.getCurrentRound()", "Battle.getP1Score()", "Battle.getMaxRounds()", "Battle.incP1Score()", "Battle.getMaxRounds()", "Battle.getP1Score()", "GameCore.writeLog(Battle)", "Battle.incrementRound()", "Battle.getMaxRounds()", "Battle.getPlayer1()", "Battle.getMaxRounds()", "java.text.MessageFormat.format(java.lang.String,((b.getCurrentRound()) + 1),((b.getMaxRounds()) - ((b.getCurrentRound()) + 1)))", "Battle.getCurrentRound()", "Battle.incP2Score()", "Battle.getMaxRounds()", "Battle.getCurrentRound()", "GameCore.updateLeaderboard(Battle)", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.incP2Score()", "Battle.getMaxRounds()", "Battle.incP1Score()", "Battle.getP2Score()", "Battle.getMaxRounds()", "Battle.getCurrentRound()", "Battle.getP2Score()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getP1Score()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getP2Score()", "Battle.getMaxRounds()", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "java.text.MessageFormat.format(java.lang.String,b.getMaxRounds(),java.lang.String,double)", "Battle.getMaxRounds()", "Battle.getP1Score()", "Battle.getCurrentRound()", "GameCore.updateLeaderboard(Battle)", "Battle.getP1Score()", "GameCore.updateLeaderboard(Battle)", "Battle.getCurrentRound()", "Battle.getCurrentRound()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "java.text.MessageFormat.format(java.lang.String,((b.getCurrentRound()) + 1),((b.getMaxRounds()) - ((b.getCurrentRound()) + 1)))", "Battle.getCurrentRound()", "java.text.MessageFormat.format(java.lang.String,((b.getCurrentRound()) + 1),((b.getMaxRounds()) - ((b.getCurrentRound()) + 1)))", "Battle.getP1Score()", "Battle.incrementRound()", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.getCurrentRound()", "Battle.getP1Score()", "Battle.getCurrentRound()", "Battle.getP2Score()", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.incrementRound()", "Battle.getCurrentRound()", "Battle.getP2Score()", "Battle.getP1Score()", "Battle.getP2Score()", "Battle.getP1Score()", "java.text.MessageFormat.format(java.lang.String,((b.getCurrentRound()) + 1),((b.getMaxRounds()) - ((b.getCurrentRound()) + 1)))", "Battle.getP1Score()", "Battle.getMaxRounds()", "GameCore.writeLog(Battle)", "Battle.getP1Score()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getCurrentRound()", "Battle.getP1Score()", "Battle.getCurrentRound()", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.getCurrentRound()", "Battle.getP1Score()", "java.text.MessageFormat.format(java.lang.String,b.getMaxRounds(),java.lang.String,double)", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getMaxRounds()", "Battle.getP1Score()", "Battle.getP1Score()", "Battle.getCurrentRound()", "Battle.incrementRound()", "Battle.getMaxRounds()", "java.text.MessageFormat.format(java.lang.String,b.getMaxRounds(),java.lang.String,double)", "Battle.getP1Score()", "Battle.getMaxRounds()", "Battle.getCurrentRound()", "Battle.getPlayer1()", "Battle.getPlayer2()", "java.text.MessageFormat.format(java.lang.String,((b.getCurrentRound()) + 1),((b.getMaxRounds()) - ((b.getCurrentRound()) + 1)))", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.incrementRound()", "Battle.getP2Score()", "Battle.getP2Score()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getMaxRounds()", "Battle.getPlayer2()", "Battle.getCurrentRound()", "java.util.ArrayList<Battle>.remove(Battle)", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getMaxRounds()", "GameCore.updateLeaderboard(Battle)", "GameCore.updateLeaderboard(Battle)", "Battle.getCurrentRound()", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "GameCore.writeLog(Battle)", "Battle.getP2Score()", "Battle.getP2Score()", "Battle.getP1Score()", "Battle.incrementRound()", "Battle.getMaxRounds()", "Battle.getP1Score()", "Battle.getCurrentRound()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getP2Score()", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.getMaxRounds()", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.getCurrentRound()", "Battle.getMaxRounds()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.getP1Score()", "java.text.MessageFormat.format(java.lang.String,b.getMaxRounds(),java.lang.String,double)", "Battle.getPlayer1()", "GameCore.updateLeaderboard(Battle)", "Battle.getPlayer2()", "Battle.getP1Score()", "java.util.ArrayList<Battle>.remove(Battle)", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getCurrentRound()", "GameCore.writeLog(Battle)", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "GameCore.writeLog(Battle)", "java.text.MessageFormat.format(java.lang.String,((b.getCurrentRound()) + 1),((b.getMaxRounds()) - ((b.getCurrentRound()) + 1)))", "Battle.getMaxRounds()", "Battle.getP2Score()", "Battle.incP2Score()", "Battle.getMaxRounds()", "Battle.getP2Score()", "Battle.getMaxRounds()", "java.text.MessageFormat.format(java.lang.String,b.getMaxRounds(),java.lang.String,double)", "java.text.MessageFormat.format(java.lang.String,b.getMaxRounds(),java.lang.String,double)", "Battle.getCurrentRound()", "Battle.getPlayer2()", "Battle.getP1Score()", "java.util.ArrayList<Battle>.remove(Battle)", "java.text.MessageFormat.format(java.lang.String,((b.getCurrentRound()) + 1),((b.getMaxRounds()) - ((b.getCurrentRound()) + 1)))", "Battle.getCurrentRound()", "Battle.getP2Score()", "Battle.getP2Score()", "Battle.getCurrentRound()", "Battle.getPlayer1()", "Battle.getPlayer1()", "Battle.getP2Score()", "Battle.getPlayer2()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getPlayer1()", "Battle.getCurrentRound()", "Battle.getCurrentRound()", "Battle.getMaxRounds()", "Battle.getP1Score()", "GameCore.writeLog(Battle)", "java.text.MessageFormat.format(java.lang.String,b.getMaxRounds(),java.lang.String,double)", "Battle.getPlayer2()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getCurrentRound()", "GameCore.updateLeaderboard(Battle)", "Battle.getCurrentRound()", "Battle.getMaxRounds()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getPlayer2()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getPlayer1()", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "Battle.getP2Score()", "GameCore.writeLog(Battle)", "Battle.incrementRound()", "Battle.getCurrentRound()", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "Battle.getCurrentRound()", "Battle.getCurrentRound()", "Battle.getMaxRounds()", "Battle.getCurrentRound()", "Battle.getCurrentRound()", "Battle.getCurrentRound()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getP2Score()", "Battle.incrementRound()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getMaxRounds()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "Battle.incP1Score()", "Battle.incrementRound()", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getP2Score()", "Battle.getMaxRounds()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getCurrentRound()", "GameCore.writeLog(Battle)", "Battle.getPlayer1()", "Battle.getP2Score()", "Battle.getP2Score()", "Battle.getP2Score()", "Battle.getMaxRounds()", "Battle.getP2Score()", "Battle.getCurrentRound()"], "Fixed commit": "721310961c25f0dc95fcc6b7930d7442b746a4d9", "Url": "https://api.github.com/repos/KevinRickard/CS321-2018F-002", "Date": "2018-11-20T17:22:19Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (autoTimeout) { double speed = ((maxVelocity) * (worldUnitsPerTick)) / 0.1; timeout = targetPos / speed; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4559/buggy-version/src.frclib.FrcMotionMagicController.java", "BodyUseAPI": [], "Fixed commit": "ef28206e58460f45303f7a1c6f9371c3081d1540", "Url": "https://api.github.com/repos/coolioasjulio/Frc2018FirstPowerUp", "Date": "2018-12-16T07:56:20Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!apptFound) { throw new seedu.address.logic.commands.exceptions.CommandException(seedu.address.logic.commands.DeleteApptCommand.MESSAGE_APPT_NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/432/buggy-version/src.main.java.seedu.address.logic.commands.DeleteApptCommand.java", "BodyUseAPI": [], "Fixed commit": "306dcfeb86636f6b9dfd69525d78322e0702032b", "Url": "https://api.github.com/repos/brandonccm1996/T12-2_addressbook-level4", "Date": "2018-11-03T12:01:55Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.tasks.Task.getResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (currentLocation != null) { android.util.Log.i(com.example.avivmoyal.minsta.MapsActivity.TAG, (\"latlang\" + (new com.google.android.gms.maps.model.LatLng(currentLocation.getLatitude(), currentLocation.getLongitude()).toString()))); moveCamera(new com.google.android.gms.maps.model.LatLng(currentLocation.getLatitude(), currentLocation.getLongitude()), com.example.avivmoyal.minsta.MapsActivity.DEFAULT_ZOOM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3233/buggy-version/app.src.main.java.com.example.avivmoyal.minsta.MapsActivity.java", "BodyUseAPI": ["com.google.android.gms.maps.model.LatLng.toString()", "android.util.Log.i(java.lang.String,java.lang.String)", "android.location.Location.getLatitude()", "com.example.avivmoyal.minsta.MapsActivity.1.moveCamera(com.google.android.gms.maps.model.LatLng,float)", "android.location.Location.getLongitude()", "android.location.Location.getLatitude()", "android.location.Location.getLongitude()"], "Fixed commit": "51392285523f070ee0112d070e1c219e4201baf1", "Url": "https://api.github.com/repos/AvivMoyal/Minsta", "Date": "2018-11-29T13:20:23Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (variant.getMediaType().equals(MediaType.TEXT_PLAIN)) { net.idea.restnet.db.reporter.BucketCSVReporter cmpreporter = new net.idea.restnet.db.reporter.BucketCSVReporter(); cmpreporter.setDelimiter(\"\\t\"); return new net.idea.restnet.db.convertors.OutputWriterConvertor(cmpreporter, org.restlet.data.MediaType.TEXT_PLAIN); }else if (variant.getMediaType().equals(MediaType.APPLICATION_JAVASCRIPT)) { java.lang.String jsonpcallback = ambit2.rest.substance.study.SubstanceStudyTableResource.getParams().getFirstValue(\"jsonp\"); if (jsonpcallback == null) jsonpcallback = ambit2.rest.substance.study.SubstanceStudyTableResource.getParams().getFirstValue(\"callback\"); return new net.idea.restnet.db.convertors.OutputWriterConvertor(createJSONReporter(), org.restlet.data.MediaType.APPLICATION_JAVASCRIPT); }else { return new net.idea.restnet.db.convertors.OutputWriterConvertor(createJSONReporter(), org.restlet.data.MediaType.APPLICATION_JSON, filenamePrefix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/250/buggy-version/ambit2-all.ambit2-apps.ambit2-www.src.main.java.ambit2.rest.substance.study.SubstanceStudyTableResource.java", "BodyUseAPI": ["variant.getMediaType().equals(MediaType.APPLICATION_JAVASCRIPT)", "org.restlet.representation.Variant.getMediaType()"], "Fixed commit": "1c479ecfce7b6f866987ccf44aedeb6bc2e6e11e", "Url": "https://api.github.com/repos/ideaconsult/ambit-mirror", "Date": "2018-12-21T17:45:31Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s2.equalsIgnoreCase(\"null\")) { nameCapitalized = s1 + (categoryName.substring(1).toLowerCase()); }else { nameCapitalized = ((s1 + (categoryName.substring(1, (index + 1)).toLowerCase())) + s2) + (categoryName.substring((index + 2)).toLowerCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1406/buggy-version/src.main.java.org.upgrad.services.CategoryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "9f40fb5da513bcd2e1ecd65a88d3fe1edff32c21", "Url": "https://api.github.com/repos/Apoorva2405/food-ordering-backend", "Date": "2018-12-06T16:36:36Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (categoryName.contains(\" \")) { index = categoryName.indexOf(\" \"); s2 = categoryName.substring((index + 1), (index + 2)).toUpperCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1406/buggy-version/src.main.java.org.upgrad.services.CategoryServiceImpl.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.toUpperCase()", "java.lang.String.substring(int,int)"], "Fixed commit": "9f40fb5da513bcd2e1ecd65a88d3fe1edff32c21", "Url": "https://api.github.com/repos/Apoorva2405/food-ordering-backend", "Date": "2018-12-06T16:36:36Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anArrayTargetType == null) { if (isIntegrityType(tempResult.getClass().getComponentType())) { anArrayTargetType = java.lang.Object.class; }else { anArrayTargetType = tempResult.getClass().getComponentType(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8878/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.java", "BodyUseAPI": [], "Fixed commit": "877e37c5c9eb4543b5b96e172f6b90975aff5a5a", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2018-12-12T13:30:12Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((name != null) && (name.startsWith(\"com.tencent.tinker.loader.\"))) && (!(name.equals(SystemClassLoaderAdder.CHECK_DEX_CLASS)))) { return originClassLoader.loadClass(name); }else if ((name != null) && (name.startsWith(\"org.apache.http.\"))) { return originClassLoader.loadClass(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1594/buggy-version/tinker-android.tinker-android-loader.src.main.java.com.tencent.tinker.loader.AndroidNClassLoader.java", "BodyUseAPI": ["dalvik.system.PathClassLoader.loadClass(java.lang.String)", "dalvik.system.PathClassLoader.loadClass(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "edddb2564de4d3d616c4d41fb5cc620daf946dcf", "Url": "https://api.github.com/repos/Tencent/tinker", "Date": "2018-11-30T12:49:14Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((PressingSpace) == false) { if ((p.air) < (p.jumps)) { p.jumping = true; } (p.air)++; PressingSpace = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3747/buggy-version/src.Game.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "0380334ed9c475f9c7168a6a130c23f9831c8eba", "Url": "https://api.github.com/repos/Artinkim/Level2-Game", "Date": "2018-11-28T06:42:13Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_SPACE)) { PressingSpace = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3747/buggy-version/src.Game.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "0380334ed9c475f9c7168a6a130c23f9831c8eba", "Url": "https://api.github.com/repos/Artinkim/Level2-Game", "Date": "2018-11-28T06:42:13Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(mDate_EditText.getText().toString().trim()))) { java.util.Date alertDate = mHelper.getAdjustedDate(mDate_EditText.getText().toString().trim(), mReminderLength); noteUtil.generateAlarm(this, alertDate, com.example.kyle.c196_class_tracker.activities.AssessmentDetails.ALARM_NOTIFICATION_ID); android.widget.Toast.makeText(this, (\"Assessment Alert set for \" + (alertDate.toString())), Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(this, \"A data is required to create an alert\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8903/buggy-version/app.src.main.java.com.example.kyle.c196_class_tracker.activities.AssessmentDetails.java", "BodyUseAPI": ["mDate_EditText.getText().toString()", "mDate_EditText.getText().toString().trim()", "com.example.kyle.c196_class_tracker.utilities.Helper.getAdjustedDate(mDate_EditText.getText().toString().trim(),int)", "android.widget.EditText.getText()"], "Fixed commit": "021706f8d0a7564ad0baa77c1114813f3b02e523", "Url": "https://api.github.com/repos/kretherford0983/C196_Class_Tracker", "Date": "2018-12-18T03:56:10Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.contains(\"1\")) { value += (((((((\" \" + \"R\") + (java.lang.Integer.parseInt(code[2], 2))) + \", \") + \"R\") + (java.lang.Integer.parseInt(code[3], 2))) + \", \") + \"#\") + (java.lang.Integer.parseInt(code[1], 2)); }else { value = \"NOP\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6699/buggy-version/ecnu-kang.src.main.java.com.ecnu.kang.architecture.ProjectOne.java", "BodyUseAPI": [], "Fixed commit": "26e29d31dc409cb470e9e67fc32f665cbaea4ad4", "Url": "https://api.github.com/repos/kangwanqiang/passion-kang", "Date": "2018-11-22T11:57:35Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((info.flags) & (android.media.MediaCodec.BUFFER_FLAG_CODEC_CONFIG)) != 0) { info.size = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/959/buggy-version/sdl_android.src.main.java.com.smartdevicelink.encoder.VirtualDisplayEncoder.java", "BodyUseAPI": [], "Fixed commit": "0b908cdf711d7440bd2d01bc62492c631970a799", "Url": "https://api.github.com/repos/shiniwat/sdl_android-1", "Date": "2018-11-09T12:13:19Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.akybenko.company.service.UserService.findByEmail(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { return new org.springframework.http.ResponseEntity(false, org.springframework.http.HttpStatus.OK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6415/buggy-version/src.main.java.com.akybenko.company.controller.ApiController.java", "BodyUseAPI": [], "Fixed commit": "05d576abc429d2b381ad82072d49158905edc28e", "Url": "https://api.github.com/repos/endryu1994/company", "Date": "2018-11-21T15:19:01Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) != null) { java.lang.System.err.println(((((\"Error in running mod \" + (id)) + \" \") + (method.getName())) + \":\")); e.getCause().printStackTrace(); }else { java.lang.System.err.println((((\"Unknown error in running mod \" + (id)) + \" \") + (method.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2846/buggy-version/src.main.java.engine.modLoader.LoadedMod.java", "BodyUseAPI": ["java.lang.reflect.InvocationTargetException.getCause()", "java.lang.Throwable.printStackTrace()"], "Fixed commit": "8d6a93d9d172e46f68516c1d7a01353f84c73199", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2018-12-10T16:10:08Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.oxygenxml.cmis.core.urlhandler.CmisURLConnection.getCMISObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (document.isVersionable()) { document = document.getObjectOfLatestVersion(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5006/buggy-version/oxygen-cmis-protocol.src.main.java.com.oxygenxml.cmis.core.urlhandler.CmisURLConnection.java", "BodyUseAPI": ["org.apache.chemistry.opencmis.client.api.Document.getObjectOfLatestVersion(boolean)"], "Fixed commit": "41f9e4d82d0bae819a2100f10a430339e85d1df1", "Url": "https://api.github.com/repos/oxygenxml/oxygen-cmis-plugin", "Date": "2018-11-08T13:48:53Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9142/buggy-version/dataquality-sampling.src.main.java.org.talend.dataquality.datamasking.functions.AbstractGenerateUniqueSsn.java", "BodyUseAPI": [], "Fixed commit": "4380010a8ce2ac1292145e618dea49ec5bb9401f", "Url": "https://api.github.com/repos/Talend/data-quality", "Date": "2018-10-25T16:16:48Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (queryText.contains(\"'\")) { queryText = queryText.replaceAll(\"'\", \"''\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6589/buggy-version/app.src.main.java.edu.haverford.cs.zapotecdictionary.DBHelper.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "5caa897d1a09095594f218f2d47b239fc6a394db", "Url": "https://api.github.com/repos/zhanpengwang888/ZapotecDictionary", "Date": "2018-12-18T05:03:09Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult>.getException()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (e != null) { if ((e.getClass()) == (com.google.firebase.auth.FirebaseAuthWeakPasswordException.class)) { etPassword.setError(getString(R.string.error_weak_password)); etPassword.requestFocus(); }else if ((e.getClass()) == (com.google.firebase.auth.FirebaseAuthUserCollisionException.class)) { etEmail.setError(getString(R.string.error_email_taken)); etEmail.requestFocus(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5606/buggy-version/app.src.main.java.com.project.technion.appark.activities.RegisterActivity.java", "BodyUseAPI": ["java.lang.Exception.getClass()", "java.lang.Exception.getClass()"], "Fixed commit": "df90d13f22409c49b806cb0ccf84dd5c8f43016b", "Url": "https://api.github.com/repos/TechnionYP5779/team2-Appark", "Date": "2018-12-15T15:06:15Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((accountEvent.getStatus()) != null) { listAccount.add(accountEvent.getAccount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/682/buggy-version/src.main.java.dev.fcodeapi.controllers.EventDetailController.java", "BodyUseAPI": ["dev.fcodeapi.controllers.AccountEventEntity.getAccount()", "java.util.List<dev.fcodeapi.controllers.AccountEntity>.add(accountEvent.getAccount())"], "Fixed commit": "25a34434549b195d440b635fa60c1694821e4697", "Url": "https://api.github.com/repos/hungptse/fcode-api", "Date": "2018-12-09T18:54:46Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anArrayTargetType == null) { if (isIntegrityType(tempResult.getClass().getComponentType())) { anArrayTargetType = java.lang.Object.class; }else { anArrayTargetType = tempResult.getClass().getComponentType(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5530/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.java", "BodyUseAPI": [], "Fixed commit": "a1314eddb211ec07ae10dc8dae7ac28e63a8c5e8", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2018-12-12T13:32:42Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result != 0) { if (!topRight) { if (result != 0) { renderer.drawRightTriangle((px + 2), py, color.leftFace(result)); topRight = true; } } if (!right) { renderer.drawLeftTriangle((px + 2), (py - 2), color.leftFace(result)); right = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6118/buggy-version/src.main.java.warpwriter.view.SimpleDraw.java", "BodyUseAPI": ["warpwriter.view.ITriangleRenderer.drawLeftTriangle(int,int,color.leftFace(result))", "warpwriter.view.IVoxelColor.leftFace(byte)", "warpwriter.view.IVoxelColor.leftFace(byte)", "warpwriter.view.ITriangleRenderer.drawRightTriangle(int,int,color.leftFace(result))"], "Fixed commit": "5408d6fac60ef845839febc1ecdd98a54a11a8d4", "Url": "https://api.github.com/repos/tommyettinger/WarpWriter", "Date": "2018-11-26T03:01:46Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsonArray.getJSONArray(3).get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.alibaba.fastjson.JSONObject.class.isAssignableFrom(obj.getClass())) { com.alibaba.fastjson.JSONObject jsonObj = ((com.alibaba.fastjson.JSONObject) (obj)); obj = jsonObj.toJavaObject(callResult.getReturnType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3667/buggy-version/src.main.java.github.slimrpc.core.io.handler.ResultCommandHandler.java", "BodyUseAPI": [], "Fixed commit": "be21d5762847eec49c33e423b6b59d1596cbd810", "Url": "https://api.github.com/repos/lmxy1990/slimrpc", "Date": "2018-11-06T02:53:31Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isKeyLength) { for (char c : key.toCharArray()) { if ((!(CharSet.NUMERIC.isInCharSet(c))) && (!(java.lang.Character.isWhitespace(c)))) isKeyLength = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4714/buggy-version/DecrypterGUI.java", "BodyUseAPI": [], "Fixed commit": "87dbb8cfc31207c06799d5f483f4a48770a96630", "Url": "https://api.github.com/repos/Ivanov1ch/Decrypter", "Date": "2018-11-15T22:12:25Z"},
{"Line": "=>912", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!cacheWorked) { life.genny.utils.RulesUtils.println(\"LOADING ATTRIBUTES FROM API\"); java.lang.String jsonString = life.genny.qwandautils.QwandaUtils.apiGet(((life.genny.qwandautils.GennySettings.qwandaServiceUrl) + \"/qwanda/attributes\"), token); life.genny.utils.VertxUtils.writeCachedJson(\"attributes\", jsonString); life.genny.utils.RulesUtils.attributesMsg = life.genny.qwandautils.JsonUtils.fromJson(jsonString, life.genny.qwanda.message.QDataAttributeMessage.class); life.genny.qwanda.attribute.Attribute[] attributeArray = life.genny.utils.RulesUtils.attributesMsg.getItems(); for (life.genny.qwanda.attribute.Attribute attribute : attributeArray) { life.genny.utils.RulesUtils.attributeMap.put(attribute.getCode(), attribute); } life.genny.utils.RulesUtils.println(((\"All the attributes have been loaded from api in\" + (life.genny.utils.RulesUtils.attributeMap.size())) + \" attributes\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8831/buggy-version/src.main.java.life.genny.utils.RulesUtils.java", "BodyUseAPI": [], "Fixed commit": "1ca120c3d57aacc11b9242c554d2ae67b1849e85", "Url": "https://api.github.com/repos/genny-project/genny-verticle-rules", "Date": "2018-12-05T03:21:13Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.isFinishing()) || (this.isDestroyed())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6939/buggy-version/app.src.main.java.in.ngsc.sixty.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7f95fe5233d683729d64b8888af323fdb6641dce", "Url": "https://api.github.com/repos/yogesh2jadhav/Game2", "Date": "2018-12-15T09:06:16Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.hasErrors()) { return new org.springframework.http.ResponseEntity<java.lang.String>(\"Invalid Project\", org.springframework.http.HttpStatus.BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7604/buggy-version/project-management-server.src.main.java.com.aaroncarlson.projectmanagement.api.controller.ProjectController.java", "BodyUseAPI": [], "Fixed commit": "ba2d77fcf006368d6056c5ad6642346f2b79dff2", "Url": "https://api.github.com/repos/acarlson90/project-management", "Date": "2018-12-24T03:40:12Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameterMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pMap.containsKey((\"textquestion\" + questionid))) { java.lang.String tmpKey = \"textquestion\" + questionid; if (!(pMap.get(tmpKey)[0].isEmpty())) { answer.setTextChoice(1); answer.setTextChoiceContent(pMap.get((\"textquestion\" + questionid))[0]); } processedQuestionId.add(questionid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3127/buggy-version/hospital-wechat.src.main.java.com.hospital.action.surveyAction.java", "BodyUseAPI": ["com.hospital.action.Answer.setTextChoiceContent(java.lang.String)", "java.lang.String.isEmpty()", "java.util.Map<java.lang.String, java.lang.String[]>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String[]>.get(java.lang.String)", "java.util.Set<java.lang.Integer>.add(int)"], "Fixed commit": "449f1dc23d63a23807596227af5c3337ae41a469", "Url": "https://api.github.com/repos/lht142934/HospitalSystem", "Date": "2018-04-13T13:16:56Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedIndex) != (-1)) return ((T) (this.adapter.list.get(selectedIndex)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8428/buggy-version/module.label.src.main.java.com.hzc.label.LabelView.java", "BodyUseAPI": [], "Fixed commit": "99e59b5aa5da116a5d9effeb0f49a3fb75a46d82", "Url": "https://api.github.com/repos/15875641474/hzc.label", "Date": "2018-12-11T10:47:59Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.getUser().getPermissions()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (permissions == null) { attributesManager.setSessionAttributes(java.util.Collections.singletonMap(\"State\", GuideStates.GET_HOME_ADDR)); return guidelines.handlers.Setup.putTogether(\"Home Adresse\", SpeechStrings.NO_PERMISSION_DEVICE_GET_HOME).build(); }else { java.lang.String deviceAddressJson = getDeviceAddress(apiEndpoint, deviceId, apiAccessToken); if ((deviceAddressJson != null) && (!(deviceAddressJson.isEmpty()))) { persistentAttributes.put(\"HOME\", deviceAddressJson); attributesManager.savePersistentAttributes(); }else { attributesManager.setSessionAttributes(java.util.Collections.singletonMap(\"State\", GuideStates.GET_HOME_ADDR)); return guidelines.handlers.Setup.putTogether(\"Home Adresse\", SpeechStrings.NO_PERMISSION_DEVICE_GET_HOME).build(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6373/buggy-version/src.main.java.guidelines.handlers.Setup.java", "BodyUseAPI": [], "Fixed commit": "fcba9638b560954c52a58487fa33a5534061c84c", "Url": "https://api.github.com/repos/sweIhm-ws2018-19/skillproject-fr-31", "Date": "2018-12-19T17:44:23Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isbn.length()) != 13) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4978/buggy-version/src.main.java.ohtu.takarivi.lukuvinkit.forms.BookAddForm.java", "BodyUseAPI": [], "Fixed commit": "ba290db34a6e144527066b1531201befe02f59de", "Url": "https://api.github.com/repos/ohtu-takarivi/lukuvinkit", "Date": "2018-11-24T04:36:42Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((media) != null) { return media; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/274/buggy-version/app.src.main.java.brain_socket.com.dekaneh.network.model.Product.java", "BodyUseAPI": [], "Fixed commit": "00e7171642281f6e86bc86511f8f780b41688caa", "Url": "https://api.github.com/repos/molhamstein/DekanehAndroid", "Date": "2018-11-05T12:11:19Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (offset > 0) { sig = meth.substring(offset); meth = meth.substring(0, offset); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/727/buggy-version/src.panels.DatabaseTable.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "c4702bcc7afaf15c16006699fa5a2bd61c3e7fb8", "Url": "https://api.github.com/repos/dmcd2356/danlauncher", "Date": "2018-12-05T22:54:08Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (offset > 0) { cls = meth.substring(0, offset); meth = meth.substring((offset + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/727/buggy-version/src.panels.DatabaseTable.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int)"], "Fixed commit": "c4702bcc7afaf15c16006699fa5a2bd61c3e7fb8", "Url": "https://api.github.com/repos/dmcd2356/danlauncher", "Date": "2018-12-05T22:54:08Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userinfo[1].equals(\"default\")) { profileImage.setImageResource(R.mipmap.ic_launcher_round); }else { com.bumptech.glide.Glide.with(this).load((((neolabs.kok.retrofit.RetrofitExService.BASE_URL) + \"images/\") + (userinfo[1]))).apply(com.bumptech.glide.request.RequestOptions.circleCropTransform()).into(myViewHolder.profileImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7598/buggy-version/app.src.main.java.neolabs.kok.activity.KokCommentActivity.java", "BodyUseAPI": ["com.bumptech.glide.Glide.with(this).load((((neolabs.kok.retrofit.RetrofitExService.BASE_URL) + \"images/\") + (userinfo[1]))).apply(com.bumptech.glide.request.RequestOptions.circleCropTransform())", "com.bumptech.glide.Glide.with(this).load((((neolabs.kok.retrofit.RetrofitExService.BASE_URL) + \"images/\") + (userinfo[1]))).apply(com.bumptech.glide.request.RequestOptions.circleCropTransform()).into(android.widget.ImageView)", "com.bumptech.glide.Glide.with(this).load((((neolabs.kok.retrofit.RetrofitExService.BASE_URL) + \"images/\") + (userinfo[1])))"], "Fixed commit": "7a904b7051abe1145d33534c68427b7e0c678bf8", "Url": "https://api.github.com/repos/TaeUkKim/KokAndroid-New", "Date": "2018-12-24T11:10:19Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6796/buggy-version/dataquality-sampling.src.main.java.org.talend.dataquality.datamasking.functions.AbstractGenerateUniqueSsn.java", "BodyUseAPI": [], "Fixed commit": "5ec67474eb6d75caa6c5ae63509557f1287f4a7b", "Url": "https://api.github.com/repos/Talend/data-quality", "Date": "2018-10-25T16:16:48Z"},
{"Line": "=>1236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ramadda.repository.metadata.Request.responseAsJson()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (doJson) { sb.append(org.ramadda.util.Json.list(new java.util.ArrayList<java.lang.String>())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3149/buggy-version/src.org.ramadda.repository.metadata.MetadataManager.java", "BodyUseAPI": [], "Fixed commit": "6ef9fe8e5b63f4bccb8da1227206d81f4d5b9a20", "Url": "https://api.github.com/repos/geodesystems/ramadda", "Date": "2018-12-06T02:41:42Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (block.getType().toString().contains(\"WOOL\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6691/buggy-version/core.src.main.java.be.isach.ultracosmetics.cosmetics.gadgets.GadgetPaintballGun.java", "BodyUseAPI": [], "Fixed commit": "90675b81a26bc29fc06a16ad0914c069c6ea6f93", "Url": "https://api.github.com/repos/RadBuilder/UltraCosmetics", "Date": "2018-11-11T05:38:58Z"},
{"Line": "=>811", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((leftTypeCheckInfo.getCompoundTypes()) != null) || ((rightTypeCheckInfo.getCompoundTypes()) != null)) { }else { try { throw new com.ge.research.sadl.reasoner.TranslationException(\"Unexpected failure to find binary operation type checking type\"); } catch (com.ge.research.sadl.reasoner.TranslationException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/853/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelValidator.java", "BodyUseAPI": [], "Fixed commit": "37f2d70b31c64b0d3453bcb8c0823e998dcc7a46", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2018-11-27T14:08:05Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((filename != null) && (!(filename.equals(\"\")))) { java.lang.String filePath = (uploadPath + (java.io.File.separator)) + filename; java.lang.String[] fileInfo = new java.lang.String[]{ filename, com.study.util.Upload.getExtension(filename), filePath }; fileInfoList.add(fileInfo); java.io.File storeFile = new java.io.File(filePath); item.write(storeFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9303/buggy-version/src.com.study.util.Upload.java", "BodyUseAPI": ["com.study.util.Upload.getExtension(java.lang.String)"], "Fixed commit": "903e88fa28ab1812dd477d879dda69ca8cdaaa8f", "Url": "https://api.github.com/repos/XJTUITPM/ITPM", "Date": "2018-11-20T13:57:52Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(folder.isDirectory())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8010/buggy-version/inside-util-web.src.main.java.es.mpt.dsic.inside.service.impl.TemporalDataBusinessServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "abcc1b26155b9ba2f43b82d51c7a1510320a7a1c", "Url": "https://api.github.com/repos/carm-es/inside", "Date": "2018-11-08T09:41:43Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(response.body().string(),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (a.getRes().equals(\"sql_wrong\")) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7572/buggy-version/app.src.main.java.com.example.administrator.connect.ConnTool.java", "BodyUseAPI": [], "Fixed commit": "6f9e88c56d05f8f17e087e6b31447348e63051d5", "Url": "https://api.github.com/repos/unbelievablecj/Onestep", "Date": "2018-12-21T08:03:02Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serializedObject) == null) { cells = original; grid.setCells(cells); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7037/buggy-version/app.src.main.java.com.k.hilaris.alpha.views.sudoku.SudokuGridFragment.java", "BodyUseAPI": [], "Fixed commit": "bcc7e9b986970f6d7e552e13a008a8f90390de73", "Url": "https://api.github.com/repos/Listsene/alpha", "Date": "2018-11-25T16:26:31Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sunbird.systemsettings.dao.impl.SystemSettingDaoImpl.readByField(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (systemSetting != null) { userClient.esIsEmailUnique(java.lang.Boolean.parseBoolean(systemSetting.getValue()), java.lang.Boolean.parseBoolean(((java.lang.String) (req.get(JsonKey.VALUE))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7567/buggy-version/actors.systemsettings.src.main.java.org.sunbird.systemsettings.actors.SystemSettingsActor.java", "BodyUseAPI": ["org.sunbird.models.systemsetting.SystemSetting.getValue()", "org.sunbird.actorutil.user.UserClient.esIsEmailUnique(boolean,boolean)", "java.lang.Boolean.parseBoolean(systemSetting.getValue())"], "Fixed commit": "133a35ed6d65ba911d29fff26bda5ebc56b6de74", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-11-15T09:59:18Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sunbird.systemsettings.dao.impl.SystemSettingDaoImpl.readByField(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (systemSetting != null) { userClient.esIsPhoneUnique(java.lang.Boolean.parseBoolean(systemSetting.getValue()), java.lang.Boolean.parseBoolean(((java.lang.String) (req.get(JsonKey.VALUE))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7567/buggy-version/actors.systemsettings.src.main.java.org.sunbird.systemsettings.actors.SystemSettingsActor.java", "BodyUseAPI": ["org.sunbird.models.systemsetting.SystemSetting.getValue()", "java.lang.Boolean.parseBoolean(systemSetting.getValue())", "org.sunbird.actorutil.user.UserClient.esIsPhoneUnique(boolean,boolean)"], "Fixed commit": "133a35ed6d65ba911d29fff26bda5ebc56b6de74", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-11-15T09:59:18Z"},
{"Line": "=>1570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((io_in) == null) { throw new com.jcraft.jsch.JSchException(\"channel is down or not be connected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5607/buggy-version/src.main.java.com.jcraft.jsch.ChannelSftp.java", "BodyUseAPI": [], "Fixed commit": "b0857d72969e295efced95fffc46dd690e8458c8", "Url": "https://api.github.com/repos/guolianwei/jsch", "Date": "2018-11-12T06:34:41Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.nio.file.Files.exists(hasParent))) { org.apache.commons.io.FileUtils.forceMkdirParent(new java.io.File(uri, path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7868/buggy-version/scheduler.scheduler-node.src.main.java.org.ow2.proactive.scheduler.task.executors.InProcessTaskExecutor.java", "BodyUseAPI": [], "Fixed commit": "da70b0cc613072e4cff016c3656d60e747154416", "Url": "https://api.github.com/repos/amouhoub/scheduling", "Date": "2018-11-06T13:34:05Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (a != null) { images = ((java.lang.String[]) (a.getArray())); java.lang.System.out.println(\"got JAVA object array\"); java.lang.System.out.println(\"images: OK\"); }else { images = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/860/buggy-version/src.com.xmum.Post.PostServlet.java", "BodyUseAPI": ["java.sql.Array.getArray()"], "Fixed commit": "ced3b0a33be41453d7739b69d17b34a0078b7cc1", "Url": "https://api.github.com/repos/cheesuesien/xmum-facebook", "Date": "2018-12-31T14:21:13Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pieces.spaserver.mapper.user.UserMapper.getUserRoles(com.pieces.spaserver.model.user.User)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((roleList.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/422/buggy-version/src.main.java.com.pieces.spaserver.config.security.CustomUserDetailsServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "1b4ac33f5697c989d39a16d89425e4209dba831c", "Url": "https://api.github.com/repos/pieces1994212/Spa-Server", "Date": "2018-11-16T02:12:46Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == string) return mirror;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4843/buggy-version/src.main.java.tudelft.mirror.Mirror.java", "BodyUseAPI": [], "Fixed commit": "771bdbb5290b40add48e3afa74d0c452a56ad1cc", "Url": "https://api.github.com/repos/moiatgit/mooc-software-testing", "Date": "2018-11-30T10:31:05Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(me.RockinChaos.itemjoin.utils.sqlite.SQLData.hasFirstJoined(player, itemMap.getConfigName()))) && (!(me.RockinChaos.itemjoin.utils.sqlite.SQLData.hasIPLimited(player, itemMap.getConfigName())))) { me.RockinChaos.itemjoin.giveitems.utils.ItemUtilities.putFailCount(player, ((me.RockinChaos.itemjoin.giveitems.utils.ItemUtilities.getFailCount().get(player)) + 1)); me.RockinChaos.itemjoin.handlers.ServerHandler.sendDebugMessage((\"Failed to give; \" + (itemMap.getConfigName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5564/buggy-version/src.me.RockinChaos.itemjoin.giveitems.utils.ItemUtilities.java", "BodyUseAPI": ["me.RockinChaos.itemjoin.giveitems.utils.ItemMap.getConfigName()", "me.RockinChaos.itemjoin.giveitems.utils.ItemUtilities.putFailCount(org.bukkit.entity.Player,((me.RockinChaos.itemjoin.giveitems.utils.ItemUtilities.getFailCount().get(player)) + 1))", "java.util.HashMap<org.bukkit.entity.Player, java.lang.Integer>.get(org.bukkit.entity.Player)", "me.RockinChaos.itemjoin.handlers.ServerHandler.sendDebugMessage((\"Failed to give; \" + (itemMap.getConfigName())))"], "Fixed commit": "505a969239a0f23c35d4b81452502c3bb8668e2b", "Url": "https://api.github.com/repos/RockinChaos/ItemJoin", "Date": "2018-12-27T22:08:38Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (basename.startsWith(\"javassist.util.proxy.\")) return this.getClass(); else if (((superClass) != null) && ((superClass) != (javassist.util.proxy.ProxyFactory.OBJECT_TYPE))) return superClass; else if (((interfaces) != null) && ((interfaces.length) > 0)) return interfaces[0]; else return this.getClass();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9116/buggy-version/src.main.javassist.util.proxy.ProxyFactory.java", "BodyUseAPI": [], "Fixed commit": "a82e2d71bd3da248dab836f4e150ff08cc0e6915", "Url": "https://api.github.com/repos/NingZhang-e/javassist", "Date": "2018-12-04T15:19:56Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (b.isSelected()) { b.getParent().requestChildFocus(b, b); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2154/buggy-version/app.src.main.java.com.mkulesh.onpc.MediaFragment.java", "BodyUseAPI": ["android.support.v7.widget.AppCompatButton.getParent()", "b.getParent().requestChildFocus(android.support.v7.widget.AppCompatButton,android.support.v7.widget.AppCompatButton)"], "Fixed commit": "787a3814226ef1b4025d0338635541d9db0c638a", "Url": "https://api.github.com/repos/mkulesh/onpc", "Date": "2018-11-20T19:46:00Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.regex.Pattern.compile(\"^\\\\d{4}/\\\\d{2}/\\\\d{2}\\\\s+\\\\d{2}:\\\\d{2}:\\\\d{2}$\").matcher(dateStr).find()) { return entity.query.Datetime.parse(dateStr, \"yyyy/MM/dd HH:mm:ss\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1336/buggy-version/entity.queryable.src.entity.query.Datetime.java", "BodyUseAPI": ["entity.query.Datetime.parse(java.lang.String,java.lang.String)"], "Fixed commit": "5d68bc4d02a2944ef031c2b38e07842a38480afe", "Url": "https://api.github.com/repos/linlurui/entityQueryable", "Date": "2018-11-24T10:02:11Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.regex.Pattern.compile(\"^\\\\d{4}/\\\\d{2}/\\\\d{2}$\").matcher(dateStr).find()) { return entity.query.Datetime.parse(dateStr, \"yyyy/MM/dd\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1336/buggy-version/entity.queryable.src.entity.query.Datetime.java", "BodyUseAPI": ["entity.query.Datetime.parse(java.lang.String,java.lang.String)"], "Fixed commit": "5d68bc4d02a2944ef031c2b38e07842a38480afe", "Url": "https://api.github.com/repos/linlurui/entityQueryable", "Date": "2018-11-24T10:02:11Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.regex.Pattern.compile(\"^\\\\d{2}\\\\-\\\\d{2}\\\\-\\\\d{2}\\\\s+\\\\d{2}:\\\\d{2}:\\\\d{2}$\").matcher(dateStr).find()) { return entity.query.Datetime.parse(dateStr, \"yy-MM-dd HH:mm:ss\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1336/buggy-version/entity.queryable.src.entity.query.Datetime.java", "BodyUseAPI": ["entity.query.Datetime.parse(java.lang.String,java.lang.String)"], "Fixed commit": "5d68bc4d02a2944ef031c2b38e07842a38480afe", "Url": "https://api.github.com/repos/linlurui/entityQueryable", "Date": "2018-11-24T10:02:11Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.regex.Pattern.compile(\"^\\\\d{2}:\\\\d{2}:\\\\d{2}$\").matcher(dateStr).find()) { return entity.query.Datetime.parse(dateStr, \"HH:mm:ss\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1336/buggy-version/entity.queryable.src.entity.query.Datetime.java", "BodyUseAPI": ["entity.query.Datetime.parse(java.lang.String,java.lang.String)"], "Fixed commit": "5d68bc4d02a2944ef031c2b38e07842a38480afe", "Url": "https://api.github.com/repos/linlurui/entityQueryable", "Date": "2018-11-24T10:02:11Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.regex.Pattern.compile(\"^\\\\d{4}\\\\-\\\\d{2}\\\\-\\\\d{2}$\").matcher(dateStr).find()) { return entity.query.Datetime.parse(dateStr, \"yyyy-MM-dd\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1336/buggy-version/entity.queryable.src.entity.query.Datetime.java", "BodyUseAPI": ["entity.query.Datetime.parse(java.lang.String,java.lang.String)"], "Fixed commit": "5d68bc4d02a2944ef031c2b38e07842a38480afe", "Url": "https://api.github.com/repos/linlurui/entityQueryable", "Date": "2018-11-24T10:02:11Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.regex.Pattern.compile(\"^\\\\d{2}/\\\\d{2}/\\\\d{2}\\\\s+\\\\d{2}:\\\\d{2}:\\\\d{2}$\").matcher(dateStr).find()) { return entity.query.Datetime.parse(dateStr, \"yy/MM/dd HH:mm:ss\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1336/buggy-version/entity.queryable.src.entity.query.Datetime.java", "BodyUseAPI": ["entity.query.Datetime.parse(java.lang.String,java.lang.String)"], "Fixed commit": "5d68bc4d02a2944ef031c2b38e07842a38480afe", "Url": "https://api.github.com/repos/linlurui/entityQueryable", "Date": "2018-11-24T10:02:11Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (image == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5970/buggy-version/src.main.java.ca.team2706.vision.trackerboxreloaded.DisplayGui.java", "BodyUseAPI": [], "Fixed commit": "b439d8a8cfb6122db7849c25684a3f231a3f1551", "Url": "https://api.github.com/repos/FRC2706/TrackerboxReloaded", "Date": "2018-11-15T00:35:12Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((likedBooks) != null) { dest.writeInt(likedBooks.size()); for (java.util.Map.Entry<java.lang.String, java.util.List<java.lang.String>> entry : likedBooks.entrySet()) { dest.writeString(entry.getKey()); dest.writeStringList(entry.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1782/buggy-version/310.app.src.main.java.com.example.wijih.a310.model.User.java", "BodyUseAPI": [], "Fixed commit": "6d7ee0fe77f3b8bf666b5eb00009916797dee874", "Url": "https://api.github.com/repos/nthnzhang/kindler", "Date": "2018-11-16T23:30:47Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["talendJavaProject.getSrcFolder().getFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ShadowFileInputToDelimitedOutputFile.exists()) { org.talend.designer.runprocess.JobErrorsChecker.checkRoutinesCompilationError(ShadowFileInputToDelimitedOutputFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6889/buggy-version/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.shadow.ShadowProcess.java", "BodyUseAPI": ["org.talend.designer.runprocess.JobErrorsChecker.checkRoutinesCompilationError(org.eclipse.core.resources.IFile)"], "Fixed commit": "53e8c56600a4a1538d3ddc14b186093c2358a7c7", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2018-12-25T10:00:08Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) != null) setCollectionMetadata(data); else android.widget.Toast.makeText(this, \"Network error\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7810/buggy-version/app.src.main.java.com.agzuniverse.agz.opensalve.CollectionCentreScreen.java", "BodyUseAPI": [], "Fixed commit": "60d588ca358f4fa236263d99bab6b4253f167466", "Url": "https://api.github.com/repos/agzuniverse/OpenSalve-Android", "Date": "2018-11-25T12:07:59Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataSet.getGraphType()) != (com.sortagreg.graphview.GraphViewDataModel.STATE_LINE)) { dataSetMaxY = java.lang.Math.max(dataSetMaxY, dataPoint.y); dataSetMinY = java.lang.Math.min(dataSetMinY, dataPoint.y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7489/buggy-version/graphview.src.main.java.com.sortagreg.graphview.GraphView.java", "BodyUseAPI": [], "Fixed commit": "de97c625de41a19e24902f4ba81eaca27d9ae2ad", "Url": "https://api.github.com/repos/sortagreg/GraphView", "Date": "2018-12-11T00:07:12Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cls.isValidAttribute(ReactomeJavaConstants.hasEvent)) dba.loadInstanceAttributeValues(blackBoxEvents, cls.getAttribute(ReactomeJavaConstants.hasEvent));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7822/buggy-version/src.org.gk.database.EventTreeBuildHelper.java", "BodyUseAPI": ["org.gk.schema.SchemaClass.getAttribute(ReactomeJavaConstants.hasEvent)", "org.gk.persistence.MySQLAdaptor.loadInstanceAttributeValues(java.util.List,cls.getAttribute(ReactomeJavaConstants.hasEvent))"], "Fixed commit": "4421eef32b0747758475a11ec4893e5a6dc5c5c0", "Url": "https://api.github.com/repos/reactome/CuratorTool", "Date": "2018-11-08T04:51:47Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gk.schema.Schema.getClassByName(ReactomeJavaConstants.BlackBoxEvent)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (bbeCls.isValidAttribute(ReactomeJavaConstants.hasEvent)) { org.gk.schema.SchemaAttribute hasEventAtt = bbeCls.getAttribute(ReactomeJavaConstants.hasEvent); if (hasEventAtt != null) qr.add(dba.createReverseAttributeQueryRequest(eventCls, hasEventAtt, \"IS NULL\", null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7822/buggy-version/src.org.gk.database.EventTreeBuildHelper.java", "BodyUseAPI": ["org.gk.schema.SchemaClass.getAttribute(ReactomeJavaConstants.hasEvent)"], "Fixed commit": "4421eef32b0747758475a11ec4893e5a6dc5c5c0", "Url": "https://api.github.com/repos/reactome/CuratorTool", "Date": "2018-11-08T04:51:47Z"},
{"Line": "=>549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sourceDBA.getSchema().getClassByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cls == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7822/buggy-version/src.org.gk.slicing.SlicingEngine.java", "BodyUseAPI": [], "Fixed commit": "4421eef32b0747758475a11ec4893e5a6dc5c5c0", "Url": "https://api.github.com/repos/reactome/CuratorTool", "Date": "2018-11-08T04:51:47Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(qz.printer.status.StatusMonitor.clientPrinterConnections.containsKey(printerNames.getString(i)))) { qz.printer.status.StatusMonitor.clientPrinterConnections.add(printerNames.getString(i), connection); }else if (!(qz.printer.status.StatusMonitor.clientPrinterConnections.getValues(printerNames.getString(i)).contains(connection))) { qz.printer.status.StatusMonitor.clientPrinterConnections.add(printerNames.getString(i), connection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/985/buggy-version/src.qz.printer.status.StatusMonitor.java", "BodyUseAPI": ["org.eclipse.jetty.util.MultiMap<qz.ws.SocketConnection>.getValues(printerNames.getString(i))", "org.codehaus.jettison.json.JSONArray.getString(int)", "org.eclipse.jetty.util.MultiMap<qz.ws.SocketConnection>.add(printerNames.getString(i),qz.ws.SocketConnection)", "org.eclipse.jetty.util.MultiMap<qz.ws.SocketConnection>.add(printerNames.getString(i),qz.ws.SocketConnection)", "org.codehaus.jettison.json.JSONArray.getString(int)", "qz.printer.status.StatusMonitor.clientPrinterConnections.getValues(printerNames.getString(i)).contains(qz.ws.SocketConnection)", "org.codehaus.jettison.json.JSONArray.getString(int)"], "Fixed commit": "d5c6f4140f69530d58d034409c1f843470e90489", "Url": "https://api.github.com/repos/qzind/tray", "Date": "2018-12-15T19:33:22Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((table.getEditingRow()) != (-1)) { table.getCellEditor().stopCellEditing(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4017/buggy-version/src.university.UI.MarkingScreen.java", "BodyUseAPI": ["javax.swing.table.TableCellEditor.stopCellEditing()", "javax.swing.JTable.getCellEditor()"], "Fixed commit": "f943e3c3c33c78739e5bf7cf1343733a6089c711", "Url": "https://api.github.com/repos/CFAUSTINO-ARVELA/-Systems-Design-and-Security", "Date": "2018-12-03T10:30:34Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((table.getEditingRow()) != (-1)) { table.getCellEditor().stopCellEditing(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4017/buggy-version/src.university.UI.MarkingScreen.java", "BodyUseAPI": ["javax.swing.table.TableCellEditor.stopCellEditing()", "javax.swing.JTable.getCellEditor()"], "Fixed commit": "f943e3c3c33c78739e5bf7cf1343733a6089c711", "Url": "https://api.github.com/repos/CFAUSTINO-ARVELA/-Systems-Design-and-Security", "Date": "2018-12-03T10:30:34Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loocv) ns = d.getNumRows();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1730/buggy-version/tetrad-lib.src.main.java.edu.pitt.csb.Priors.runPriors.java", "BodyUseAPI": [], "Fixed commit": "3c2dc9bc3e38138c1c450066906dd27667c7f71b", "Url": "https://api.github.com/repos/vineet1992/tetrad-vineet", "Date": "2018-11-01T01:10:00Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loocv) subsamples = new edu.cmu.tetrad.data.DataSet[d.getNumRows()]; else subsamples = new edu.cmu.tetrad.data.DataSet[ns];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1730/buggy-version/tetrad-lib.src.main.java.edu.pitt.csb.Priors.runPriors.java", "BodyUseAPI": [], "Fixed commit": "3c2dc9bc3e38138c1c450066906dd27667c7f71b", "Url": "https://api.github.com/repos/vineet1992/tetrad-vineet", "Date": "2018-11-01T01:10:00Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loocv) { ns = d.getNumRows(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1730/buggy-version/tetrad-lib.src.main.java.edu.pitt.csb.Priors.runPriors.java", "BodyUseAPI": [], "Fixed commit": "3c2dc9bc3e38138c1c450066906dd27667c7f71b", "Url": "https://api.github.com/repos/vineet1992/tetrad-vineet", "Date": "2018-11-01T01:10:00Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((splitArgs.size()) == 0) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1505/buggy-version/src.main.java.seedu.address.logic.parser.GroupCommandParser.java", "BodyUseAPI": [], "Fixed commit": "18db1fe7340026d731d86516a6ddb0a608ce24d5", "Url": "https://api.github.com/repos/CS2103-AY1819S1-W13-3/main", "Date": "2018-11-12T10:58:29Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (authorizeInteractor.isAuthorized()) { navigator.applyCommands(new ru.terrakok.cicerone.commands.Command[]{ new ru.terrakok.cicerone.commands.Forward(im.adamant.android.Screens.WALLET_SCREEN, null) }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7333/buggy-version/app.src.main.java.im.adamant.android.ui.LoginScreen.java", "BodyUseAPI": [], "Fixed commit": "63610c094575acc92842d776a672dfb5b80536c5", "Url": "https://api.github.com/repos/Adamant-im/adamant-android", "Date": "2018-11-27T09:51:55Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initialized) { disposeGame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9228/buggy-version/core.src.com.github.kneelawk.hellogdx.ScreenGame.java", "BodyUseAPI": [], "Fixed commit": "9069942c8f409ed03c61e08684e1c40240cd91e1", "Url": "https://api.github.com/repos/Kneelawk/hello-gdx", "Date": "2018-12-15T19:41:16Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectStatement.getTables().isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3399/buggy-version/sharding-core.src.main.java.io.shardingsphere.core.routing.router.sharding.ParsingSQLRouter.java", "BodyUseAPI": [], "Fixed commit": "1045821fc765a1b7bc19272ca40c602e444abfc1", "Url": "https://api.github.com/repos/apache/incubator-shardingsphere", "Date": "2018-12-24T01:34:19Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (language.matches(\".+-\\\\d+\")) { language = language.substring(0, language.indexOf('-')); if (!(printedLanguageTagContainedDialect)) { javatools.administrative.Announce.warning(\"At least one language tag contained dialect suffix, which was ignored. (example: @es-419)\"); printedLanguageTagContainedDialect = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8009/buggy-version/src.main.java.basics.N4Reader.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int,int)"], "Fixed commit": "e0fa51dfc24a623f129a832d600ffc001dc8d589", "Url": "https://api.github.com/repos/yago-naga/basics3", "Date": "2018-11-16T14:51:13Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.item.ItemStack.getItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(gem.isCracked)) { gem.spawnGem(this.world, player, this.getPosition(), this.getItem()); }else { this.entityDropItem(this.getItem(), 0.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3385/buggy-version/src.main.java.mod.akrivus.amalgam.entity.EntityBubble.java", "BodyUseAPI": ["mod.akrivus.kagic.items.ItemGem.spawnGem(this.world,net.minecraft.entity.player.EntityPlayer,this.getPosition(),net.minecraft.item.ItemStack)"], "Fixed commit": "48a596932521e08db6976a25d668da882ae8583a", "Url": "https://api.github.com/repos/Akrivus/Amalgam", "Date": "2018-12-08T01:47:13Z"},
{"Line": "=>3256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentObject instanceof java.util.Collection) { return ((java.util.Collection) (currentObject)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5369/buggy-version/src.main.java.com.alibaba.fastjson.JSONPath.java", "BodyUseAPI": [], "Fixed commit": "7bf1df29fc249f369ede29f23ecd0fff34ee37d3", "Url": "https://api.github.com/repos/GulajavaMinistudio/fastjson", "Date": "2018-12-17T13:03:17Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.targetSecurityServer) != null) { marshaller.marshal(this.targetSecurityServer, soapHeaderResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6133/buggy-version/xroad-spring-core.src.main.java.kg.gov.tunduk.xroad.XRoadHeader.java", "BodyUseAPI": [], "Fixed commit": "b59f6bdd85f8ab54ef045bbfbf3fbfe8f8ac14e8", "Url": "https://api.github.com/repos/tunduk-gov-kg/xroad-spring", "Date": "2018-12-06T04:45:25Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.producer) != null) { marshaller.marshal(this.producer, soapHeaderResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6133/buggy-version/xroad-spring-core.src.main.java.kg.gov.tunduk.xroad.XRoadHeader.java", "BodyUseAPI": [], "Fixed commit": "b59f6bdd85f8ab54ef045bbfbf3fbfe8f8ac14e8", "Url": "https://api.github.com/repos/tunduk-gov-kg/xroad-spring", "Date": "2018-12-06T04:45:25Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getContextPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (contextPath == null) { contextPath = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2977/buggy-version/zoom-web.src.main.java.org.zoomdev.zoom.web.router.impl.ZoomRouter.java", "BodyUseAPI": [], "Fixed commit": "42dba31743d1436d55a6b665e90f0f368aaa7726", "Url": "https://api.github.com/repos/zoom-framework/zoom", "Date": "2018-11-28T08:45:03Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 3) { try { team = us.myles_selim.starota.EnumTeam.valueOf(args[3].toUpperCase()); } catch (java.lang.IllegalArgumentException e) { team = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5544/buggy-version/src.us.myles_selim.starota.profiles.commands.CommandSelfRegister.java", "BodyUseAPI": ["us.myles_selim.starota.EnumTeam.valueOf(java.lang.String)", "java.lang.String.toUpperCase()"], "Fixed commit": "d015edc440de1bd492be76abed31f88a1ddee9a6", "Url": "https://api.github.com/repos/Selim042/Starota", "Date": "2018-11-01T00:34:09Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((in.nextInt()) > 1) { x = in.nextInt(); }else { java.lang.System.out.println(\"Number of players must be greater than 1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4234/buggy-version/MonopolyCSA18.src.GameRun.java", "BodyUseAPI": ["java.util.Scanner.nextInt()"], "Fixed commit": "fe29dfefb6f7d03ec4ee78f1e83f8bf2bdc9c8af", "Url": "https://api.github.com/repos/RowSteg/MonopolyCSA18", "Date": "2018-12-13T19:59:57Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) == null) throw new java.lang.NullPointerException(\"ObservableObject value in BaseEvent null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8008/buggy-version/core-reference-impl.src.main.java.com.javando.collections.BaseEvent.java", "BodyUseAPI": [], "Fixed commit": "6633d8eee1694fccbe9e07481fb6255fc7ea8cbc", "Url": "https://api.github.com/repos/cyclonesword/observable-collections", "Date": "2018-12-16T11:25:13Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nom.length()) < nbLettersNom) { nbLettersNom = nom.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6126/buggy-version/src.main.java.geco.LoginGenerator.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "d261bb1092315e08fec7f7002c9066825ac7b5df", "Url": "https://api.github.com/repos/Olzindel/Login-generator", "Date": "2018-11-21T10:26:01Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResources().getConfiguration().orientation) == (android.content.res.Configuration.ORIENTATION_PORTRAIT)) transaction.replace(R.id.contact_list_layout, detailsFragment);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4770/buggy-version/app.src.main.java.example.bedilbek.contactapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "de0c1b917a5ced71eb66ce8e4eddd381d83f9d50", "Url": "https://api.github.com/repos/bedilbek/contactapp", "Date": "2018-11-25T18:38:52Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sensingkit.sensingkitlib.SKSensor.getRequiredPermission()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (permission != null) { if (!(org.sensingkit.sensingkitlib.SKUtilities.isPermissionGranted(permission, mApplicationContext))) { permissionsList.add(permission); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6517/buggy-version/SensingKitLib.src.main.java.org.sensingkit.sensingkitlib.SKSensorManager.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "org.sensingkit.sensingkitlib.SKUtilities.isPermissionGranted(java.lang.String,android.content.Context)"], "Fixed commit": "20a637bb02df4c40298b0de6afd3c1ec5d213232", "Url": "https://api.github.com/repos/SensingKit/SensingKit-Android", "Date": "2018-12-03T17:21:13Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (bundle != null) { movieId = bundle.getInt(com.grrigore.themoviedb.MOVIE_CLICKED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7766/buggy-version/app.src.main.java.com.grrigore.themoviedb.MovieDetailActivity.java", "BodyUseAPI": ["android.os.Bundle.getInt(com.grrigore.themoviedb.MOVIE_CLICKED)"], "Fixed commit": "7e813321096dc8493ae1f5bfb543daed06125f19", "Url": "https://api.github.com/repos/grrigore/TheMovieDB", "Date": "2018-11-10T16:46:40Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(intervalTimeMinutes.getText())", "java.lang.Integer.valueOf(intervalTimeHours.getText())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((hours < 0) || (minutes < 0)) { throw new java.lang.NumberFormatException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2007/buggy-version/src.main.java.com.mycompany.taskmanager.view.NotificationWindowController.java", "BodyUseAPI": [], "Fixed commit": "4358683d6cbec39cf0c5b05842ea15cea67d99e2", "Url": "https://api.github.com/repos/St1gven/TaskManager", "Date": "2018-12-14T13:19:54Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.getClient().getUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { user = new org.academiadecodigo.hashtronauts.server.users.User(1, \"Anonymous\", 123); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/271/buggy-version/src.org.academiadecodigo.hashtronauts.server.Server.java", "BodyUseAPI": [], "Fixed commit": "bd9b592dde05f115ed3fcfce490a3acc9fc78a6e", "Url": "https://api.github.com/repos/n20amaral/PromptToDo", "Date": "2018-11-05T10:58:22Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (returnPath) path.pop(length);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4969/buggy-version/src.javafuzzysearch.searchers.MultipleCutoffSearcher.java", "BodyUseAPI": [], "Fixed commit": "de6c93d5ab75af01b7ea881d600d012b3367f534", "Url": "https://api.github.com/repos/Daniel-Liu-c0deb0t/Java-Fuzzy-Search", "Date": "2018-11-22T01:50:43Z"},
{"Line": "=>793", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((longitude.equals(\"0.00\")) || (longitude.equals(\"0.0\"))) { return \"\"; }else { return longitude; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4498/buggy-version/NorthCountryWild.src.UploadWindow.java", "BodyUseAPI": [], "Fixed commit": "c8e965faa46cdcc26e7e317ee456836846527fd2", "Url": "https://api.github.com/repos/NatureUpNorth/North-Country-Wild", "Date": "2018-11-07T19:28:55Z"},
{"Line": "=>785", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((latitude.equals(\"0.00\")) || (latitude.equals(\"0.0\"))) { return \"\"; }else { return latitude; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4498/buggy-version/NorthCountryWild.src.UploadWindow.java", "BodyUseAPI": [], "Fixed commit": "c8e965faa46cdcc26e7e317ee456836846527fd2", "Url": "https://api.github.com/repos/NatureUpNorth/North-Country-Wild", "Date": "2018-11-07T19:28:55Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sbParams.length()) > 0) sbParams.deleteCharAt(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6427/buggy-version/src.main.java.ds.made.jdbc.easy.EasyCallForStoredProcedure.java", "BodyUseAPI": ["java.lang.StringBuilder.deleteCharAt(int)"], "Fixed commit": "33b7f1b81c1f1e5d80738dfcab6626c537c9b011", "Url": "https://api.github.com/repos/pikapokec/jdbc-made-easy", "Date": "2018-11-21T15:06:41Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anbang.qipai.agents.cqrs.q.service.AgentAuthQueryService.findAgentById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (junior == null) { vo.setSuccess(false); vo.setMsg(\"invalid receiver\"); return vo; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1284/buggy-version/src.main.java.com.anbang.qipai.agents.web.controller.AgentClubCardController.java", "BodyUseAPI": [], "Fixed commit": "31023684a9f954da16a405e23155122b5e2f458d", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_agents", "Date": "2018-12-05T02:01:32Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orderDetailsList) != null) { mAdapter = new com.example.mdjahirulislam.doobbi.controller.adapter.OrderDetailsAdapter(this, orderDetailsList); orderListRV.setAdapter(mAdapter); }else { android.widget.Toast.makeText(this, \"Something is wrong!!!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5330/buggy-version/app.src.main.java.com.example.mdjahirulislam.doobbi.view.order.OrderDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "34ff7d9d7a883db8f66231bd089ed1a79816ed38", "Url": "https://api.github.com/repos/JahirRemon/project18_10", "Date": "2018-12-12T08:06:26Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == (-1)) { this.solutions.add(0, s); solutionAdded = true; break; }else if ((this.solutions.get(i).totalCost) <= (s.totalCost)) { this.solutions.add((i + 1), s); solutionAdded = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5082/buggy-version/src.SolutionList.java", "BodyUseAPI": ["java.util.ArrayList<Solution>.add(int,Solution)", "java.util.ArrayList<Solution>.get(int)"], "Fixed commit": "7cca86af98d9d55fd1bd5309fcba02508ca76646", "Url": "https://api.github.com/repos/shonigmann/TerribleSoftware", "Date": "2018-11-13T15:21:51Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getItemId()) == (R.id.line_chart_item)) { startActivity(new android.content.Intent(this, wpi.jnpalmstrom.chartmyfinance.LineChartActivity.class)); }else if ((item.getItemId()) == (R.id.pie_chart_item)) { startActivity(new android.content.Intent(this, wpi.jnpalmstrom.chartmyfinance.PieChartActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9327/buggy-version/app.src.main.java.wpi.jnpalmstrom.chartmyfinance.LineChartActivity.java", "BodyUseAPI": ["android.view.MenuItem.getItemId()"], "Fixed commit": "2afdabfe112b4a5c8dab19befc49263b221fddd0", "Url": "https://api.github.com/repos/jnpalmstrom/ChartMyFinance", "Date": "2018-11-12T17:27:05Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getItemId()) == (R.id.line_chart_item)) { startActivity(new android.content.Intent(this, wpi.jnpalmstrom.chartmyfinance.LineChartActivity.class)); }else if ((item.getItemId()) == (R.id.pie_chart_item)) { startActivity(new android.content.Intent(this, wpi.jnpalmstrom.chartmyfinance.PieChartActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9327/buggy-version/app.src.main.java.wpi.jnpalmstrom.chartmyfinance.MainActivity.java", "BodyUseAPI": ["android.view.MenuItem.getItemId()"], "Fixed commit": "2afdabfe112b4a5c8dab19befc49263b221fddd0", "Url": "https://api.github.com/repos/jnpalmstrom/ChartMyFinance", "Date": "2018-11-12T17:27:05Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other instanceof com.rackspace.jenkins_nodepool.NodePool) { return getConnectionString().equalsIgnoreCase(((com.rackspace.jenkins_nodepool.NodePool) (other)).getConnectionString()); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8908/buggy-version/src.main.java.com.rackspace.jenkins_nodepool.NodePool.java", "BodyUseAPI": [], "Fixed commit": "996841ec608fa748303369bd146505bb74bc5601", "Url": "https://api.github.com/repos/dealako/nodepool-agents-plugin", "Date": "2018-11-21T17:11:13Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8908/buggy-version/src.main.java.com.rackspace.jenkins_nodepool.NodePool.java", "BodyUseAPI": [], "Fixed commit": "996841ec608fa748303369bd146505bb74bc5601", "Url": "https://api.github.com/repos/dealako/nodepool-agents-plugin", "Date": "2018-11-21T17:11:13Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((args.length) != (alibi.model.Alibi.NUMBER_OF_ATTRIBUTES)) { throw new java.lang.ArrayIndexOutOfBoundsException(((\"alibi needs \" + (alibi.model.Alibi.NUMBER_OF_ATTRIBUTES)) + \"attributes\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3263/buggy-version/src.main.java.alibi.model.Alibi.java", "BodyUseAPI": [], "Fixed commit": "d9799265e7fd5c864fe77ebbfb933f425e3e9404", "Url": "https://api.github.com/repos/sweIhm-ws2018-19/skillproject-do-4", "Date": "2018-12-07T11:58:19Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fieldmap[y][x].character) == '*') continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5949/buggy-version/ui.animations.ExplodeAnimation.java", "BodyUseAPI": [], "Fixed commit": "ba0eaca53d2647bac72c9314f70899c45a0d8dcc", "Url": "https://api.github.com/repos/shikibu9419/Minesweeper", "Date": "2018-12-28T09:54:59Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<android.view.View>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((changedIndex + 1) < size) { ajustLinkageViewItem(changedView, rate1, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7666/buggy-version/CardSlidePanel.cardslidepanel.src.main.java.com.stone.card.CardSlidePanel.java", "BodyUseAPI": [], "Fixed commit": "eebcf5b6397c4580d6079329c55f5b9649fc658a", "Url": "https://api.github.com/repos/Nstd/android-card-slide-panel", "Date": "2018-11-26T08:00:53Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!fillEventType) { exception.addValidation(\"RDA rules\", cz.cas.lib.proarc.common.object.ndk.RdaRules.ERR_NDK_RDA_EMPTYEVENTTYPE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9153/buggy-version/proarc-common.src.main.java.cz.cas.lib.proarc.common.object.ndk.RdaRules.java", "BodyUseAPI": [], "Fixed commit": "ea19129ff94f293f0b9309298cbc93742e074cf2", "Url": "https://api.github.com/repos/proarc/proarc", "Date": "2018-11-07T14:09:13Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentTask.isEmpty()) || ((this.currentTask) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2707/buggy-version/locationmadeeasy.src.main.java.leandro.soares.quevedo.locationmadeeasy.LocationHelper.java", "BodyUseAPI": [], "Fixed commit": "63e2ecc5b87f43f511f3ebb529eacdefe54bc394", "Url": "https://api.github.com/repos/LeandroSQ/location-made-easy", "Date": "2018-12-06T13:32:17Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(startDate.equals(\"N\"))) && (!(startDate.equals(\"n\")))) { output(\"Provide a interval in days?(e.g 15, 30, 60 / N/n)\\n\"); java.lang.String st = input(scan); if (isQuit(st)) { output(\"Quit.\\n\"); return; } try { interval = java.lang.Integer.parseInt(st); } catch (java.lang.IllegalArgumentException e) { throw new java.lang.IllegalArgumentException(\"Illegal number.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9154/buggy-version/src.controller.StockControllerImpl.java", "BodyUseAPI": [], "Fixed commit": "a4ef23c9ec37321b9f1c32e68f0892b8c9497934", "Url": "https://api.github.com/repos/simonwux/8", "Date": "2018-11-19T18:55:19Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loggingEnabled) { com.rohitawate.everest.server.mock.ServerLogger.logInfo(this.name, endpoint.responseCode, requestParser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4334/buggy-version/src.main.java.com.rohitawate.everest.server.mock.MockService.java", "BodyUseAPI": [], "Fixed commit": "806fedfe7caf3411be3b0c8e736d474e677e55f9", "Url": "https://api.github.com/repos/RohitAwate/Everest", "Date": "2018-11-09T08:19:52Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (path != null) { for (com.rohitawate.everest.server.mock.Endpoint endpoint : endpoints) { if ((path.equals(endpoint.path)) && (requestParser.getMethod().equals(endpoint.method))) { com.rohitawate.everest.server.mock.ResponseWriter.sendResponse(socket, endpoint); if (loggingEnabled) { com.rohitawate.everest.server.mock.ServerLogger.logInfo(this.name, endpoint.responseCode, requestParser); } return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4334/buggy-version/src.main.java.com.rohitawate.everest.server.mock.MockService.java", "BodyUseAPI": ["java.lang.String.equals(endpoint.path)"], "Fixed commit": "806fedfe7caf3411be3b0c8e736d474e677e55f9", "Url": "https://api.github.com/repos/RohitAwate/Everest", "Date": "2018-11-09T08:19:52Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loggingEnabled) { com.rohitawate.everest.server.mock.ServerLogger.logWarning(this.name, 404, requestParser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4334/buggy-version/src.main.java.com.rohitawate.everest.server.mock.MockService.java", "BodyUseAPI": [], "Fixed commit": "806fedfe7caf3411be3b0c8e736d474e677e55f9", "Url": "https://api.github.com/repos/RohitAwate/Everest", "Date": "2018-11-09T08:19:52Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["requestParser.getPath().startsWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (startsWithPrefix && (attachPrefix)) { path = stripPrefix(requestParser.getPath()); }else if (startsWithPrefix == (attachPrefix)) { path = requestParser.getPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4334/buggy-version/src.main.java.com.rohitawate.everest.server.mock.MockService.java", "BodyUseAPI": [], "Fixed commit": "806fedfe7caf3411be3b0c8e736d474e677e55f9", "Url": "https://api.github.com/repos/RohitAwate/Everest", "Date": "2018-11-09T08:19:52Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportFragmentManager().findFragmentById(R.id.fragment_container)) != null) { getSupportFragmentManager().beginTransaction().remove(getSupportFragmentManager().findFragmentById(R.id.fragment_container)).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7296/buggy-version/android.SymposiumCheckIn.app.src.main.java.com.hva.symposiumcheckin.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1dc4d08c5053ba6a7eb2cf43db041eb1daa6baf9", "Url": "https://api.github.com/repos/obin1000/StudentCheck", "Date": "2018-11-27T17:16:40Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unimi.dsi.fastutil.objects.Object2IntMap<org.apache.uima.cas.text.AnnotationFS>.get(idxTokenOffset.get(annotation.getBegin()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (begin < highestEndTokenPositionObserved) { de.tudarmstadt.ukp.inception.recommendation.imls.opennlp.ner.OpenNlpNerRecommender.LOG.debug(\"Skipping overlapping annotation: [{}-{}, {}]\", begin, (end + 1), label); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8781/buggy-version/inception-imls-opennlp.src.main.java.de.tudarmstadt.ukp.inception.recommendation.imls.opennlp.ner.OpenNlpNerRecommender.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,int,int,java.lang.String)"], "Fixed commit": "5ecd7b09e50de0b03b9a716ac2e825b01b058769", "Url": "https://api.github.com/repos/inception-project/inception", "Date": "2018-12-11T13:43:44Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Float.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value <= 0) { throw new seedu.divelog.logic.parser.exceptions.ParseException(seedu.divelog.logic.parser.ParserUtil.MESSAGE_INVALID_DEPTH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7329/buggy-version/src.main.java.seedu.divelog.logic.parser.ParserUtil.java", "BodyUseAPI": [], "Fixed commit": "c10d9543bdc150fd43f160eb3207f6a223a6a3ca", "Url": "https://api.github.com/repos/TTTaus/main", "Date": "2018-11-04T05:10:51Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((gene != null) && ((gene.length) > 0)) { geneIDs.add(gene[0].replace(\"\\\"\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2319/buggy-version/src.org.kkruse.webherv.upload.FileUploader.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "8b0b7151e8c9ba8a1aa3d8eea4ed4c2297fe3a74", "Url": "https://api.github.com/repos/etsnok/WebHERV", "Date": "2018-11-06T21:14:37Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((contraints.get(i).length()) > 0) query += \"\\t\" + (contraints.get(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/85/buggy-version/src.main.java.ru.lightsoff.database.builders.CreateQueryBuilder.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "47e181585c3f8f00835a3d92c1159ec884f98be4", "Url": "https://api.github.com/repos/LightsOffDAMT/LightsOff", "Date": "2018-11-11T11:03:07Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((com.thejokerstudios.mathpuzzles.datatype.AllLevels.getMath()) == (com.thejokerstudios.mathpuzzles.datatype.Level.EASY)) && ((com.thejokerstudios.mathpuzzles.datatype.AllLevels.getBoard()) == (com.thejokerstudios.mathpuzzles.datatype.Level.EASY))) && ((com.thejokerstudios.mathpuzzles.datatype.AllLevels.getTime()) == (com.thejokerstudios.mathpuzzles.datatype.Level.EASY))) listToChooseFrom = new java.util.ArrayList<>(easyImages.subList(0, 5)); else if ((com.thejokerstudios.mathpuzzles.datatype.AllLevels.getMath()) == (com.thejokerstudios.mathpuzzles.datatype.Level.EASY)) listToChooseFrom = easyImages; else if ((com.thejokerstudios.mathpuzzles.datatype.AllLevels.getMath()) == (com.thejokerstudios.mathpuzzles.datatype.Level.MEDIUM)) listToChooseFrom = mediumImages; else listToChooseFrom = hardImages;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6140/buggy-version/app.src.main.java.com.thejokerstudios.mathpuzzles.main.Puzzle.java", "BodyUseAPI": [], "Fixed commit": "34a76c55fc32951019dc85eb88f764968054cc34", "Url": "https://api.github.com/repos/bobostaykov/Math-Puzzles", "Date": "2018-11-06T21:42:03Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (keywords.containsKey(\"CompanyName\")) { return ((((((keywords.containsKey(\"CompanyName\")) && (keywords.get(\"CompanyName\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getCompanyName().value, keyword)))) && ((keywords.containsKey(\"Job\")) && (keywords.get(\"Job\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getJob().value, keyword))))) || ((keywords.containsKey(\"Age Range\")) && (keywords.get(\"Age Range\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getAgeRange().value, keyword))))) || ((keywords.containsKey(\"Education\")) && (keywords.get(\"Education\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getEducation().value, keyword))))) || ((keywords.containsKey(\"Salary\")) && (keywords.get(\"Salary\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getSalary().value, keyword))))) || ((keywords.containsKey(\"Gender\")) && (keywords.get(\"Gender\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getGender().value, keyword)))); }else { return ((((((keywords.containsKey(\"CompanyName\")) && (keywords.get(\"CompanyName\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getCompanyName().value, keyword)))) || ((keywords.containsKey(\"Job\")) && (keywords.get(\"Job\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getJob().value, keyword))))) || ((keywords.containsKey(\"Age Range\")) && (keywords.get(\"Age Range\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getAgeRange().value, keyword))))) || ((keywords.containsKey(\"Education\")) && (keywords.get(\"Education\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getEducation().value, keyword))))) || ((keywords.containsKey(\"Salary\")) && (keywords.get(\"Salary\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getSalary().value, keyword))))) || ((keywords.containsKey(\"Gender\")) && (keywords.get(\"Gender\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getGender().value, keyword)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1264/buggy-version/src.main.java.seedu.recruit.model.joboffer.JobOfferContainsKeywordsPredicate.java", "BodyUseAPI": ["java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.List<java.lang.String>.stream()", "java.util.List<java.lang.String>.stream()", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.List<java.lang.String>.stream()", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.List<java.lang.String>.stream()", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.List<java.lang.String>.stream()", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.List<java.lang.String>.stream()", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.List<java.lang.String>.stream()", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.List<java.lang.String>.stream()", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.List<java.lang.String>.stream()", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.List<java.lang.String>.stream()", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.List<java.lang.String>.stream()", "java.util.List<java.lang.String>.stream()", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)"], "Fixed commit": "a6b4d3d8a876dab9a93a76c1654f55e387c2d8f8", "Url": "https://api.github.com/repos/leerachel/RecruitBook", "Date": "2018-11-02T07:25:46Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hand.getCardSum()) == 21) { balance += (currentBet) * 2.5; }else balance += (currentBet) * 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5303/buggy-version/src.main.java.kr.ac.knu.lecture.game.blackjack.Player.java", "BodyUseAPI": [], "Fixed commit": "7466e99bf42be715eb5772ffbcecd2464c58f1a5", "Url": "https://api.github.com/repos/OhShinHyeok/knu-2018", "Date": "2018-12-20T01:15:09Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isLandscape())) { mStepImageView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6601/buggy-version/app.src.main.java.com.example.android.baker.RecipeStepFragment.java", "BodyUseAPI": [], "Fixed commit": "a7f232c7e8b9171447a65b4d75f89ab907a38d53", "Url": "https://api.github.com/repos/swaroop05/Baker", "Date": "2018-12-06T04:59:36Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isLandscape())) { mPlayerView.setVisibility(View.GONE); mStepImageView.setVisibility(View.VISIBLE); com.squareup.picasso.Picasso.with(getContext()).load(mStepImageUrl).into(mStepImageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6601/buggy-version/app.src.main.java.com.example.android.baker.RecipeStepFragment.java", "BodyUseAPI": [], "Fixed commit": "a7f232c7e8b9171447a65b4d75f89ab907a38d53", "Url": "https://api.github.com/repos/swaroop05/Baker", "Date": "2018-12-06T04:59:36Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isLandscape())) { mStepImageView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6601/buggy-version/app.src.main.java.com.example.android.baker.RecipeStepFragment.java", "BodyUseAPI": [], "Fixed commit": "a7f232c7e8b9171447a65b4d75f89ab907a38d53", "Url": "https://api.github.com/repos/swaroop05/Baker", "Date": "2018-12-06T04:59:36Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.epfl.sweng.SDP.utils.ImageSharer.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sharer != null) { ch.epfl.sweng.SDP.utils.ImageSharer.getInstance().setActivity(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6447/buggy-version/app.src.main.java.ch.epfl.sweng.SDP.game.VotingPageActivity.java", "BodyUseAPI": [], "Fixed commit": "b0bbe492d3cfff29851f6f74e185ec66544d5480", "Url": "https://api.github.com/repos/gyrodraw/GyroDraw", "Date": "2018-12-05T14:33:58Z"},
{"Line": "=>551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cdtpinto.readabilitychecker.logic.SourceCodeFileLogic.getCurrentlySelectedFileFromFilesList(org.cdtpinto.readabilitychecker.logic.SourceCodeFileLogic.getCurrentlyOpenedFile().getFile().getAbsolutePath(),java.util.List<org.cdtpinto.readabilitychecker.codeabstractionlevels.SourceCodeFile>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((currentlySelectedFile.getSres().getValue()) == 0.0) { jTFSres.setText(\"n/a\"); jTFSres.setToolTipText(((\"Readability value not calculated. Make sure \" + (currentlySelectedFile.getFile().getName())) + \" doesn't have any feature introduced after Java SE 5.\")); }else { jTFSres.setText(java.lang.String.valueOf(java.lang.String.valueOf(new java.text.DecimalFormat(\"#0.00\").format(currentlySelectedFile.getSres().getValue())))); jTFSres.setToolTipText(((currentlySelectedFile.getFile().getName()) + \" readability value\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8099/buggy-version/ReadabilityChecker.src.main.java.org.cdtpinto.readabilitychecker.main.ReadabilityFrame.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.String)", "currentlySelectedFile.getSres().getValue()", "org.cdtpinto.readabilitychecker.codeabstractionlevels.SourceCodeFile.getFile()", "javax.swing.JTextField.setText(java.lang.String)", "org.cdtpinto.readabilitychecker.codeabstractionlevels.SourceCodeFile.getFile()", "currentlySelectedFile.getFile().getName()", "java.text.DecimalFormat.format(currentlySelectedFile.getSres().getValue())", "javax.swing.JTextField.setToolTipText(((currentlySelectedFile.getFile().getName()) + \" readability value\"))", "currentlySelectedFile.getFile().getName()", "org.cdtpinto.readabilitychecker.codeabstractionlevels.SourceCodeFile.getSres()", "javax.swing.JTextField.setToolTipText(((\"Readability value not calculated. Make sure \" + (currentlySelectedFile.getFile().getName())) + \" doesn't have any feature introduced after Java SE 5.\"))", "java.lang.String.valueOf(java.lang.String)"], "Fixed commit": "871780c6da1a2ee6fbd0e417b9ff2f88827dddfa", "Url": "https://api.github.com/repos/cdtpinto/readabilitychecker", "Date": "2018-12-31T16:41:04Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (project.isDisposed()) { com.eastwood.tools.idea.VirtualFileManager.getInstance().removeVirtualFileListener(virtualFileListener); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9132/buggy-version/src.com.eastwood.tools.idea.MicroModuleService.java", "BodyUseAPI": [], "Fixed commit": "e21154dbf271b45d77a380a3c8e4f6770c076727", "Url": "https://api.github.com/repos/EastWoodYang/micro-module-idea-plugin", "Date": "2018-11-28T11:01:28Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((q1.isCorrectAnswer(cade)) == true) { java.lang.System.out.println(\"nice\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9872/buggy-version/Assignment.src.edu.unca.csci201.QuizTime.java", "BodyUseAPI": [], "Fixed commit": "7bf871e1230d4c2ec9e3a59e40fd3bad0d73ea9c", "Url": "https://api.github.com/repos/cadejs/201-final", "Date": "2018-11-27T21:46:22Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dk.aau.cs.ds302e18.app.service.LessonService.getAllLessons()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((lessonList.size()) >= 7) { for (int i = 0; i <= 6; i++) { if ((((((lessonList.get(i).getLessonDate()) != null) && (lessonList.get(i).getStudentList().contains(username))) && ((lessonList.get(i).getLessonDate().getYear()) == (currDate.getYear()))) && ((lessonList.get(i).getLessonDate().getMonth()) == (currDate.getMonth()))) && ((lessonList.get(i).getLessonDate().getDate()) == (currDate.getDate()))) { todaysLessonList.add(lessonList.get(i)); } } for (int i = 0; i <= 6; i++) { if (((lessonList.get(i).getLessonDate()) != null) && (lessonList.get(i).getStudentList().contains(username))) { upcomingLessonList.add(lessonList.get(i)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1647/buggy-version/lesson-app.src.main.java.dk.aau.cs.ds302e18.app.controllers.IndexController.java", "BodyUseAPI": ["java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.get(int)", "lessonList.get(i).getLessonDate().getMonth()", "lessonList.get(i).getLessonDate()", "lessonList.get(i).getLessonDate().getDate()", "java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.get(int)", "lessonList.get(i).getLessonDate()", "java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.add(lessonList.get(i))", "lessonList.get(i).getStudentList()", "java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.add(lessonList.get(i))", "java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.get(int)", "java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.get(int)", "lessonList.get(i).getLessonDate().getYear()", "java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.get(int)", "lessonList.get(i).getStudentList()", "java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.get(int)", "java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.get(int)", "java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.get(int)", "java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.get(int)", "lessonList.get(i).getLessonDate()", "lessonList.get(i).getStudentList().contains(java.lang.String)", "lessonList.get(i).getLessonDate()", "lessonList.get(i).getLessonDate()", "lessonList.get(i).getStudentList().contains(java.lang.String)"], "Fixed commit": "1c667a0ae09fe07626caad3e30207a9791d768b5", "Url": "https://api.github.com/repos/SW3-ds302e18-2018/DrivingSchoolApplication", "Date": "2018-11-15T10:14:26Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dk.aau.cs.ds302e18.app.service.LessonService.getAllLessons()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lessonList.size()) < 6) { for (dk.aau.cs.ds302e18.app.domain.Lesson lesson : lessonList) { if ((((((lesson.getLessonDate()) != null) && (lesson.getStudentList().contains(username))) && ((lesson.getLessonDate().getYear()) == (currDate.getYear()))) && ((lesson.getLessonDate().getMonth()) == (currDate.getMonth()))) && ((lesson.getLessonDate().getDate()) == (currDate.getDate()))) { todaysLessonList.add(lesson); } if (((lesson.getLessonDate()) != null) && (lesson.getStudentList().contains(username))) { upcomingLessonList.add(lesson); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1647/buggy-version/lesson-app.src.main.java.dk.aau.cs.ds302e18.app.controllers.IndexController.java", "BodyUseAPI": [], "Fixed commit": "1c667a0ae09fe07626caad3e30207a9791d768b5", "Url": "https://api.github.com/repos/SW3-ds302e18-2018/DrivingSchoolApplication", "Date": "2018-11-15T10:14:26Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.user) instanceof ems.Guest) { ems.EMS.PrintHeader(\"Only Members can review events!\"); }else { this.reviewEvent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1338/buggy-version/src.ems.UserFrontEnd.java", "BodyUseAPI": [], "Fixed commit": "b488e2a8492762c1babdaf20d605164217f4b273", "Url": "https://api.github.com/repos/Ironolife/CS3343_Project", "Date": "2018-11-11T09:45:21Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["synercys.rts.framework.Task.getPriority()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((getOneTaskByPriority(i)) != null) { outStr += (\"\\t\" + (getOneTaskByPriority(i).toString())) + \"\\r\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4027/buggy-version/src.main.java.synercys.rts.framework.TaskSet.java", "BodyUseAPI": ["synercys.rts.framework.Task.toString()", "synercys.rts.framework.TaskSet.getOneTaskByPriority(int)"], "Fixed commit": "f133961cc49f9fb105eb5c4f394c89ae36816582", "Url": "https://api.github.com/repos/cchen140/RTS-Schedule-Simulator", "Date": "2018-12-22T06:53:01Z"},
{"Line": "=>657", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((param.dataFormat) != null) { sb.append(param.dataType); }else { sb.append(moduleName); sb.append(\".Model.\"); sb.append(param.dataType); sb.append(\".t\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9617/buggy-version/modules.openapi-generator.src.main.java.org.openapitools.codegen.languages.ElixirClientCodegen.java", "BodyUseAPI": ["java.lang.StringBuilder.append(param.dataType)", "java.lang.StringBuilder.append(param.dataType)"], "Fixed commit": "d31fa4f7c45d21e4ddd20af67e819680f9c6dd3c", "Url": "https://api.github.com/repos/OpenAPITools/openapi-generator", "Date": "2018-11-27T13:34:54Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cse.osu.pickem.Profile.getEncodedProfilePicture()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (profilePic != null) { byte[] decodedByteArray = android.util.Base64.decode(profilePic, Base64.DEFAULT); profilePhoto = android.graphics.BitmapFactory.decodeByteArray(decodedByteArray, 0, decodedByteArray.length); profileImageView.setImageBitmap(profilePhoto); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8312/buggy-version/app.src.main.java.com.cse.osu.pickem.ProfileActivity.java", "BodyUseAPI": ["android.util.Base64.decode(java.lang.String,Base64.DEFAULT)"], "Fixed commit": "a561f6502aefb6d292c7eca17172c7454f3b5486", "Url": "https://api.github.com/repos/ToskinM/PickEm", "Date": "2018-11-21T23:17:21Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (qishouPlayerId == null) { qishouPlayerId = playerIdList.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1083/buggy-version/src.main.java.com.dml.shuangkou.preparedapai.zudui.HongxinbaHongxinjiuZuduiStrategy.java", "BodyUseAPI": [], "Fixed commit": "048f5503f9b72cf0ab5f383463555cd5e8e2d72a", "Url": "https://api.github.com/repos/zhengchengdong/shuangkou.dml", "Date": "2018-11-30T09:48:29Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (duijiaPlayerId == null) { qishouPlayerId = playerIdList.get(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1083/buggy-version/src.main.java.com.dml.shuangkou.preparedapai.zudui.HongxinbaHongxinjiuZuduiStrategy.java", "BodyUseAPI": [], "Fixed commit": "048f5503f9b72cf0ab5f383463555cd5e8e2d72a", "Url": "https://api.github.com/repos/zhengchengdong/shuangkou.dml", "Date": "2018-11-30T09:48:29Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!objectInjectionOverridden) { id = proxy.attachJavaObjectToJsObject(object, other); }else { id = name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/97/buggy-version/src.main.java.io.alicorn.v8.V8JavaAdapter.java", "BodyUseAPI": [], "Fixed commit": "f1fe9b11f6f5be2e1924bec4a9d927ae2be0df86", "Url": "https://api.github.com/repos/AlexTrotsenko/v8-adapter", "Date": "2018-11-14T14:00:45Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (memberLine[0].equals(\"\\\\N\")) { continue; }else { java.lang.System.out.printf(\"%s %s - %s rating / %s ELO.\\n\", memberLine[2], memberLine[3], memberLine[8], memberLine[9]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6311/buggy-version/src.team.TeamManage.java", "BodyUseAPI": ["java.io.PrintStream.printf(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "e1e696c4b7433c5a361fb71a1406b66545dbdd4f", "Url": "https://api.github.com/repos/Tobiasmidskards/SK41", "Date": "2018-12-07T01:36:32Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (similarNodes.isEmpty()) { ((de.ovgu.cide.fstgen.ast.FSTTerminal) (conflictNode)).setBody(oppositeSideNodeContent); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1643/buggy-version/src.main.java.br.ufpe.cin.mergers.handlers.singlerenaming.MergeMethodsSingleRenamingHandler.java", "BodyUseAPI": [], "Fixed commit": "a476aa0147efe6449019180cad27f5ba59b4687d", "Url": "https://api.github.com/repos/jvcoutinho/jFSTMerge", "Date": "2018-10-20T22:09:51Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cooshare.ip.dao.AuditDao.selectAuditBySubmitterContentType(com.cooshare.ip.service.impl.mobile.CHECK_INSTITUTION,java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == cooShareAudit) return UNEXPECTED_22024;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6121/buggy-version/src.main.java.com.cooshare.ip.service.impl.mobile.InstitutionServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "839585b73062551d2ee38469f8a96fe336fe772a", "Url": "https://api.github.com/repos/beckzl/ip", "Date": "2018-12-13T08:50:13Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((UI.HeadUpDisplay.shotsLeft) == 0) UI.HeadUpDisplay.hud_weapon = quickLoaderImage(\"player/weapon_right\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4895/buggy-version/Performance_Shooter.src.UI.HeadUpDisplay.java", "BodyUseAPI": [], "Fixed commit": "4a08d124e24ba9430f13ddb3bf00e78632a18ed9", "Url": "https://api.github.com/repos/JonasMaennle/StarWarsShooter", "Date": "2018-12-11T09:53:43Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cw.getHandle().getTileEntity(net.minecraft.server.v1_12_R1.BlockPosition)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (te != null) { te.load(nmsnbt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6341/buggy-version/src.net.jrbudda.builder.BuilderTrait.java", "BodyUseAPI": ["net.minecraft.server.v1_12_R1.TileEntity.load(net.minecraft.server.v1_12_R1.NBTTagCompound)"], "Fixed commit": "d1c4df99c09f281eebea66a7b79bf6769782ea68", "Url": "https://api.github.com/repos/Weefle/Builder_Reloaded", "Date": "2018-11-02T17:45:16Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sortOption) == 0) { java.util.Comparator<edu.calvin.cs262.wingdings.pigeonpoll.Question> comp = new java.util.Comparator<edu.calvin.cs262.wingdings.pigeonpoll.Question>() { @java.lang.Override public int compare(edu.calvin.cs262.wingdings.pigeonpoll.Question o1, edu.calvin.cs262.wingdings.pigeonpoll.Question o2) { return o1.timeStamp.compareTo(o1.timeStamp); } }; java.util.Collections.sort(downloadedQuestions, comp); }else { java.util.Comparator<edu.calvin.cs262.wingdings.pigeonpoll.Question> comp = new java.util.Comparator<edu.calvin.cs262.wingdings.pigeonpoll.Question>() { @java.lang.Override public int compare(edu.calvin.cs262.wingdings.pigeonpoll.Question o1, edu.calvin.cs262.wingdings.pigeonpoll.Question o2) { return (o1.downloads) - (o2.downloads); } }; java.util.Collections.sort(downloadedQuestions, comp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6246/buggy-version/app.src.main.java.edu.calvin.cs262.wingdings.pigeonpoll.DownloadQuestion.java", "BodyUseAPI": [], "Fixed commit": "da35128846bf6dc032126b6cfbc4169704b35e6a", "Url": "https://api.github.com/repos/CS-262wingdings/client", "Date": "2018-12-07T21:08:58Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (r.getPlayerName().equals(conquest.game.ConquestGame.Neutral)) { r.setPlayerName(player(turn).getId()); count += 1; if (count == (conquest.game.ConquestGame.nrOfStartingRegions)) break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7464/buggy-version/Conquest.src.conquest.game.ConquestGame.java", "BodyUseAPI": ["conquest.game.RegionData.setPlayerName(player(turn).getId())"], "Fixed commit": "8438900dd07a18bf66b627b8ba681cd356697eed", "Url": "https://api.github.com/repos/medovina/conquest-engine-gui", "Date": "2018-12-24T21:00:28Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bi.ls09efaa05a01.isChecked()) { if (!(validatorClass.EmptyRadioButton(this, bi.ls09efaa05b, bi.ls09efaa05b01, getString(R.string.ls09efaa05b)))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5902/buggy-version/app.src.main.java.com.example.hassannaqvi.leaps_scaleup.ui.Form09_part_2_Activity.java", "BodyUseAPI": ["com.example.hassannaqvi.leaps_scaleup.ui.Form09_part_2_Activity.EmptyRadioButton(com.example.hassannaqvi.leaps_scaleup.ui.Form09_part_2_Activity,bi.ls09efaa05b,bi.ls09efaa05b01,getString(R.string.ls09efaa05b))"], "Fixed commit": "19ea98b20bb1559786b9a961be7300dae6cf1b59", "Url": "https://api.github.com/repos/AliAzaz/LEAPS_ScaleUp", "Date": "2018-11-16T05:37:26Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((risk.Country.currentlySelected[1]) != null) risk.Country.currentlySelected[1].troopEncasementImage = java.awt.Toolkit.getDefaultToolkit().getImage(\"./Troop Counter Mark II Final.png\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9065/buggy-version/src.risk.Country.java", "BodyUseAPI": [], "Fixed commit": "84f7443962d283dc5dfee8387c63dad694a80a40", "Url": "https://api.github.com/repos/djwyates/Risk", "Date": "2018-11-27T21:02:39Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getHeight()) == 0) { return 50; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8463/buggy-version/virtualjoystick.src.main.java.io.github.controlwear.virtual.joystick.android.JoystickView.java", "BodyUseAPI": [], "Fixed commit": "409608fbc7cafe549d7000c04cfc587945ed85e4", "Url": "https://api.github.com/repos/controlwear/virtual-joystick-android", "Date": "2018-11-28T20:33:04Z"},
{"Line": "=>629", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getWidth()) == 0) { return 50; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8463/buggy-version/virtualjoystick.src.main.java.io.github.controlwear.virtual.joystick.android.JoystickView.java", "BodyUseAPI": [], "Fixed commit": "409608fbc7cafe549d7000c04cfc587945ed85e4", "Url": "https://api.github.com/repos/controlwear/virtual-joystick-android", "Date": "2018-11-28T20:33:04Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (textAppearanceId == (-1)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8623/buggy-version/calligraphy.src.main.java.uk.co.chrisjenx.calligraphy.CalligraphyUtils.java", "BodyUseAPI": [], "Fixed commit": "6102f67ec14bb6bba36eaac78a8492d058d5b4f9", "Url": "https://api.github.com/repos/stepstone-tech/Calligraphy", "Date": "2018-11-16T19:02:52Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_enabled) { process.init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2430/buggy-version/nodel-framework.src.main.java.org.nodel.toolkit.ManagedToolkit.java", "BodyUseAPI": [], "Fixed commit": "dc38078b9b3f61ae51153ce473fcb822c43d4588", "Url": "https://api.github.com/repos/justparking/nodel", "Date": "2018-07-27T04:24:35Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((hidef.getReportingEntity().getTin()) != null) && (!(hidef.getReportingEntity().getTin().isEmpty()))) { org.w3c.dom.Element tin = doc.createElement(\"cbc:TIN\"); if (!(org.springframework.util.StringUtils.isEmpty(hidef.getReportingEntity().getTinIssuedBy()))) { tin.setAttribute(\"TINType\", hidef.getReportingEntity().getTinIssuedBy()); } if (!(org.springframework.util.StringUtils.isEmpty(hidef.getReportingEntity().getTinType()))) { tin.setAttribute(\"issuedBy\", hidef.getReportingEntity().getTinType()); } tin.appendChild(doc.createTextNode(hidef.getReportingEntity().getTin())); cbcEntity.appendChild(tin); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2101/buggy-version/hidef-myfi.src.main.java.com.censof.myfi.hidefmyfi.serviceImpl.PackageGenerationServiceImpl.java", "BodyUseAPI": ["org.w3c.dom.Document.createTextNode(hidef.getReportingEntity().getTin())", "com.censof.myfi.hidefmyfi.vo.HidefVo.getReportingEntity()", "com.censof.myfi.hidefmyfi.vo.HidefVo.getReportingEntity()", "hidef.getReportingEntity().getTinIssuedBy()", "org.springframework.util.StringUtils.isEmpty(hidef.getReportingEntity().getTinIssuedBy())", "org.w3c.dom.Element.setAttribute(java.lang.String,hidef.getReportingEntity().getTinIssuedBy())", "org.springframework.util.StringUtils.isEmpty(hidef.getReportingEntity().getTinType())", "com.censof.myfi.hidefmyfi.vo.HidefVo.getReportingEntity()", "com.censof.myfi.hidefmyfi.vo.HidefVo.getReportingEntity()", "org.w3c.dom.Element.setAttribute(java.lang.String,hidef.getReportingEntity().getTinType())", "hidef.getReportingEntity().getTin()", "hidef.getReportingEntity().getTinType()", "hidef.getReportingEntity().getTinIssuedBy()", "hidef.getReportingEntity().getTinType()", "org.w3c.dom.Element.appendChild(org.w3c.dom.Text)", "com.censof.myfi.hidefmyfi.vo.HidefVo.getReportingEntity()"], "Fixed commit": "4f18d23a69ed7a57581358538c93a16d5b737d47", "Url": "https://api.github.com/repos/praveenkumar09/ctc", "Date": "2018-12-04T04:40:03Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getEntityType()) != (org.bukkit.entity.EntityType.PLAYER)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/75/buggy-version/src.me.ryanhamshire.GPFlags.FlagDef_AllowPvP.java", "BodyUseAPI": [], "Fixed commit": "73d5b0cb169ba979ac81e9d58d6d5f34221d8fc6", "Url": "https://api.github.com/repos/ShaneBeee/GriefPreventionFlags", "Date": "2018-11-20T12:07:05Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.joshatron.tak.server.database.AccountDAO.getUserFromUsername(auth.getUsername())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (user.getUserId().equalsIgnoreCase(other)) { throw new io.joshatron.tak.server.exceptions.GameServerException(io.joshatron.tak.server.exceptions.ErrorCode.REQUESTING_SELF); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8685/buggy-version/src.main.java.io.joshatron.tak.server.utils.SocialUtils.java", "BodyUseAPI": [], "Fixed commit": "ac0d0a15bc62ceb3314a49271f5621bf7b7302ad", "Url": "https://api.github.com/repos/joshatron/Tak-Server", "Date": "2018-12-23T22:51:12Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (button.formatVal().hasHour()) { generateTimeControl(writer, component, idJs, \"hour\", \"vhr\", \"hrup\", \"hrdown\", (currentValue == null), hourInt, com.quakearts.webapp.facelets.bootstrap.renderers.BootDateButtonRenderer.getDisplayType(button, context, \"hourType\"), componentDisabled); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/452/buggy-version/qa-boot.src.main.java.com.quakearts.webapp.facelets.bootstrap.renderers.BootDateButtonRenderer.java", "BodyUseAPI": ["com.quakearts.webapp.facelets.bootstrap.renderers.BootDateButtonRenderer.generateTimeControl(javax.faces.context.ResponseWriter,javax.faces.component.UIComponent,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.String,boolean)", "com.quakearts.webapp.facelets.bootstrap.renderers.BootDateButtonRenderer.getDisplayType(com.quakearts.webapp.facelets.bootstrap.components.BootDateButton,javax.faces.context.FacesContext,java.lang.String)"], "Fixed commit": "8efd37ebd7280fb2d39ca7c27291145fe9bc52f9", "Url": "https://api.github.com/repos/kwakutwumasi/Quakearts-Webtools", "Date": "2018-11-06T13:55:10Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (students != null) { for (java.lang.String key : students.keySet()) { if (key.equals(userID)) { for (c.group24.localcommunityservices.OpportunityListItem item : items) { if (item.title.equals(title)) { list.remove(item); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3346/buggy-version/app.src.main.java.c.group24.localcommunityservices.OpportunityFragment.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.keySet()"], "Fixed commit": "e72d07447db682f579df50efa95cc6a9f751a67c", "Url": "https://api.github.com/repos/aicancan0414/LocalCommunityServices", "Date": "2018-12-04T00:55:33Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((keyAction.get(e.getKeyCode())) != (rpg.api.listener.key.KeyboardSensor.PRESSED)) { rpg.api.listener.key.KeyboardListener.setState(e.getKeyCode(), KeyState.PRESSING); keyAction.put(e.getKeyCode(), rpg.api.listener.key.KeyboardSensor.PRESSED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2726/buggy-version/src.main.java.rpg.api.listener.key.KeyboardSensor.java", "BodyUseAPI": ["rpg.api.listener.key.KeyboardListener.setState(int,KeyState.PRESSING)", "java.util.HashMap<java.lang.Integer, java.lang.Byte>.put(int,byte)", "java.awt.event.KeyEvent.getKeyCode()", "java.awt.event.KeyEvent.getKeyCode()"], "Fixed commit": "0f7d1713d9e3d69aa4fd925895a6c4141b4a9fe7", "Url": "https://api.github.com/repos/neo-0815-organization/RPG", "Date": "2018-12-13T13:44:07Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((keyAction.get(e.getKeyCode())) != (rpg.api.listener.key.KeyboardSensor.RELEASED)) { rpg.api.listener.key.KeyboardListener.setState(e.getKeyCode(), KeyState.RELEASING); keyAction.put(e.getKeyCode(), rpg.api.listener.key.KeyboardSensor.RELEASED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2726/buggy-version/src.main.java.rpg.api.listener.key.KeyboardSensor.java", "BodyUseAPI": ["java.awt.event.KeyEvent.getKeyCode()", "java.awt.event.KeyEvent.getKeyCode()", "java.util.HashMap<java.lang.Integer, java.lang.Byte>.put(int,byte)", "rpg.api.listener.key.KeyboardListener.setState(int,KeyState.RELEASING)"], "Fixed commit": "0f7d1713d9e3d69aa4fd925895a6c4141b4a9fe7", "Url": "https://api.github.com/repos/neo-0815-organization/RPG", "Date": "2018-12-13T13:44:07Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userInput == null) { output = \"You've got a null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3573/buggy-version/src.chat.controller.ChatController.java", "BodyUseAPI": [], "Fixed commit": "6990b9966e49d9750cb13e3cecfb58bcd8b7cce1", "Url": "https://api.github.com/repos/hkno9012/Chatbot", "Date": "2018-11-06T19:14:25Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(player.world.isRemote)) nbt.setTag(\"stateManager\", stateManager.serializeNBT());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3942/buggy-version/src.main.java.me.fril.regeneration.common.capability.CapabilityRegeneration.java", "BodyUseAPI": [], "Fixed commit": "6271b4b7b241091ff5983e11a7dc85f839f743cf", "Url": "https://api.github.com/repos/Suffril/Regeneration", "Date": "2018-11-06T12:36:02Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (sequenceLength == 0) { ++(this.maxValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7446/buggy-version/src.main.java.se.de.hu_berlin.informatik.utils.compression.BufferedIntArraysToCompressedByteArrayProcessor.java", "BodyUseAPI": [], "Fixed commit": "b1ee65ef50408ec32bcf8cc70a58884a4532a527", "Url": "https://api.github.com/repos/hub-se/HUB-SE-framework", "Date": "2018-11-27T23:07:20Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.tasks.Task.getResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (currentLocation != null) { android.util.Log.i(com.example.avivmoyal.minsta.MapsActivity.TAG, (\"latlang\" + (new com.google.android.gms.maps.model.LatLng(currentLocation.getLatitude(), currentLocation.getLongitude()).toString()))); moveCamera(new com.google.android.gms.maps.model.LatLng(currentLocation.getLatitude(), currentLocation.getLongitude()), com.example.avivmoyal.minsta.MapsActivity.DEFAULT_ZOOM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1297/buggy-version/app.src.main.java.com.example.avivmoyal.minsta.MapsActivity.java", "BodyUseAPI": ["android.location.Location.getLatitude()", "android.util.Log.i(java.lang.String,java.lang.String)", "android.location.Location.getLongitude()", "com.example.avivmoyal.minsta.MapsActivity.1.moveCamera(com.google.android.gms.maps.model.LatLng,float)", "android.location.Location.getLatitude()", "android.location.Location.getLongitude()", "com.google.android.gms.maps.model.LatLng.toString()"], "Fixed commit": "9d1e13f1fa91d219c95a7b9aee461da5339a4d7c", "Url": "https://api.github.com/repos/AvivMoyal/Minsta", "Date": "2018-11-28T13:20:23Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((job.getVehicleId()) == (-1)) { long vehicleId = this.resourceManager.getOptimalCar(job.getStartId()); job.setVehicleId(vehicleId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2236/buggy-version/SmartRaceCar.Modules.racecarbackend.src.main.java.be.uantwerpen.fti.ds.sc.racecarbackend.JobDispatcher.java", "BodyUseAPI": ["be.uantwerpen.fti.ds.sc.racecarbackend.ResourceManager.getOptimalCar(job.getStartId())", "be.uantwerpen.fti.ds.sc.racecarbackend.Job.getStartId()", "be.uantwerpen.fti.ds.sc.racecarbackend.Job.setVehicleId(long)"], "Fixed commit": "0677050e43ab42494472cfc520006268f00693c8", "Url": "https://api.github.com/repos/SmartCity-UAntwerpen/SmartRaceCar", "Date": "2018-12-20T13:55:47Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checked == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9243/buggy-version/src.main.java.com.github.crashdemons.azbasics.utils.Positions.java", "BodyUseAPI": [], "Fixed commit": "7da7f795114e03e69997448fd20f40948ab027f4", "Url": "https://api.github.com/repos/crashdemons/AZBasics", "Date": "2018-11-22T02:20:11Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9243/buggy-version/src.main.java.com.github.crashdemons.azbasics.utils.Positions.java", "BodyUseAPI": [], "Fixed commit": "7da7f795114e03e69997448fd20f40948ab027f4", "Url": "https://api.github.com/repos/crashdemons/AZBasics", "Date": "2018-11-22T02:20:11Z"},
{"Line": "=>1287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((object_code.length()) < 3) { object_code = \"0\" + object_code; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6096/buggy-version/src.assembler_final.assembler.java", "BodyUseAPI": [], "Fixed commit": "101741d44db906582be295339c38e9a93152f2ba", "Url": "https://api.github.com/repos/karimayman/sic", "Date": "2018-12-06T00:10:04Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (x < 0) { int x1 = x - (2 * x); this.value = (x1 + \"\ufffd secolo \") + c; }else this.value = (x + \"\ufffd secolo \") + c;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3951/buggy-version/src.it.bibliotecadigitale.vo.Datazione.java", "BodyUseAPI": [], "Fixed commit": "c003bd0218cc75f7862a769cc7d6c0ebed972ed8", "Url": "https://api.github.com/repos/Lunatico9/OOSD2018", "Date": "2018-11-18T14:35:19Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x < 0) { int x1 = x - (2 * x); this.value = (x1 + \"\ufffd secolo \") + c; }else this.value = (x + \"\ufffd secolo \") + c;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3951/buggy-version/src.it.bibliotecadigitale.vo.Datazione.java", "BodyUseAPI": [], "Fixed commit": "c003bd0218cc75f7862a769cc7d6c0ebed972ed8", "Url": "https://api.github.com/repos/Lunatico9/OOSD2018", "Date": "2018-11-18T14:35:19Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (string.equals(\".stop\")) { }else if (!(string.equals(\".start\"))) { contr.receiveGuess(string); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4456/buggy-version/src.server.net.RequestHandler.java", "BodyUseAPI": ["server.controller.Controller.receiveGuess(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "be98c987438b4fe9d85d1c834fce2290689ccdc9", "Url": "https://api.github.com/repos/JoannaLilja/netpro-homework-5-hangdroidserver", "Date": "2018-12-28T17:33:15Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gamePlayedDateAndTime.minusMonths(6).minusYears(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.incode.eurocommercial.relatio.dom.event.AspectMapHelperFunctions.isValidDate(approximateDateOfBirth.toString())) { map.put(AspectType.ApproximateDateOfBirth, approximateDateOfBirth.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5853/buggy-version/dom.src.main.java.org.incode.eurocommercial.relatio.dom.event.EventSourceType.java", "BodyUseAPI": ["org.joda.time.LocalDate.toString()", "java.util.Map<org.incode.eurocommercial.relatio.dom.aspect.AspectType, java.lang.String>.put(AspectType.ApproximateDateOfBirth,approximateDateOfBirth.toString())"], "Fixed commit": "a8823dbb10bacd6d5f34aef66fa7804e76c5a726", "Url": "https://api.github.com/repos/incodehq/relatio", "Date": "2018-12-18T13:39:41Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ICONexApp.version.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((java.lang.Integer.parseInt(mVersion[1])) < (java.lang.Integer.parseInt(all[1]))) return foundation.icon.iconex.util.Utils.RES_VERSION.NEW; else if ((java.lang.Integer.parseInt(mVersion[2])) < (java.lang.Integer.parseInt(all[2]))) return foundation.icon.iconex.util.Utils.RES_VERSION.NEW;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6314/buggy-version/app.src.main.java.foundation.icon.iconex.util.Utils.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "4f6ab2611fe7eba2fb753d6c7f7135f789769218", "Url": "https://api.github.com/repos/icon-project/iconex_android", "Date": "2018-11-12T03:31:52Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (configuration.isHasToken()) { java.lang.System.out.println(((configuration.getNickname()) + \": Enviando o token.\")); configuration.setHasToken(false); sendMessageToClient(Server.TOKEN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/76/buggy-version/src.Server.java", "BodyUseAPI": ["java.io.PrintStream.println(((configuration.getNickname()) + \": Enviando o token.\"))", "Configuration.setHasToken(boolean)", "Configuration.getNickname()"], "Fixed commit": "8af18a2a9a79363362c35230da18bf5b81e77ab4", "Url": "https://api.github.com/repos/homerooliveira/trab2-Redes", "Date": "2018-11-05T20:56:33Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ylli.api.user.mapper.UserSettlementMapper.selectByUserId(auth.id)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (settlement != null) { info.chargeType = settlement.chargeType; info.chargeRate = settlement.chargeRate; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7618/buggy-version/src.main.java.com.ylli.api.user.service.UserManageService.java", "BodyUseAPI": [], "Fixed commit": "a149768c4632cb2f5e743880bcf5710c6c225875", "Url": "https://api.github.com/repos/cryS4tal/alianpay", "Date": "2018-12-04T15:03:55Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.isHidden())) { java.util.List<java.io.File> tempList = splitFile(file, MasterIndexUtil.maxRowOfChunk); fileChunks.addAll(tempList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5616/buggy-version/IndexingMaster.java", "BodyUseAPI": ["IndexingMaster.splitFile(java.io.File,MasterIndexUtil.maxRowOfChunk)"], "Fixed commit": "0b10d5e169bc3d5ee98101c7d3202c6c6955a461", "Url": "https://api.github.com/repos/andybug912/2018fall_OS_proj2_part1", "Date": "2018-12-07T02:10:35Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((level) == 1) { this.aliens.add(new SoEproj.Boss1Level(bgWidth, ((range) / 2), aliens)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2651/buggy-version/src.main.java.SoEproj.AlienGenerator.java", "BodyUseAPI": [], "Fixed commit": "12599b4455455a43cdec7ad2a6de6d10c9797b67", "Url": "https://api.github.com/repos/waelkarman/SoE-Voyager_on_the_edge_of_the_solar_system", "Date": "2018-12-13T10:21:56Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((level) == 3) { this.aliens.add(new SoEproj.Boss3Level(bgWidth, ((range) / 2), aliens)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2651/buggy-version/src.main.java.SoEproj.AlienGenerator.java", "BodyUseAPI": [], "Fixed commit": "12599b4455455a43cdec7ad2a6de6d10c9797b67", "Url": "https://api.github.com/repos/waelkarman/SoE-Voyager_on_the_edge_of_the_solar_system", "Date": "2018-12-13T10:21:56Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((level) == 2) { this.aliens.add(new SoEproj.Boss2Level(bgWidth, ((range) / 2), aliens)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2651/buggy-version/src.main.java.SoEproj.AlienGenerator.java", "BodyUseAPI": [], "Fixed commit": "12599b4455455a43cdec7ad2a6de6d10c9797b67", "Url": "https://api.github.com/repos/waelkarman/SoE-Voyager_on_the_edge_of_the_solar_system", "Date": "2018-12-13T10:21:56Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((answers.length) != 0) { teamAnswer.setText(answers[answerTracker].getAnswer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/229/buggy-version/src.app.app.src.main.java.me.lgbt.pubhub.fragments.GradingFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(answers[answerTracker].getAnswer())", "answers[answerTracker].getAnswer()"], "Fixed commit": "17fcbbc4848e04fee42c6a9545f27943beda6b13", "Url": "https://api.github.com/repos/gdblech/PubHub", "Date": "2018-12-01T00:05:04Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getSource()) == (edit)) { if (((int) (v.get(5))) == 0) { Edit(); dispose(); }else { new main.ErrWindow(\"\u8be5\u884c\u6587\u5df2\u53d1\u9001,\u4e0d\u53ef\u518d\u88ab\u7f16\u8f91\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2291/buggy-version/src.main.ArticleEditUI.java", "BodyUseAPI": [], "Fixed commit": "eeabc2b1bc3c702b74a8af9443be5c151fbca100", "Url": "https://api.github.com/repos/Liuhjhj/ManagerSystem", "Date": "2018-12-25T08:21:29Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nbPageTotal < 1L) nbPageTotal = 1L;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9248/buggy-version/src.main.java.com.excilys.cdb.model.PageInfo.java", "BodyUseAPI": [], "Fixed commit": "7457e79d4bb38ba3705df78739c6feae6f7a7476", "Url": "https://api.github.com/repos/samoGit/computer-database", "Date": "2018-11-07T09:37:12Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playing) mp.pause();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/558/buggy-version/app.src.main.java.com.example.justi.markthat.ViewRecording.java", "BodyUseAPI": [], "Fixed commit": "73b313c6bc47fbd45d5240125bbc075d339649f7", "Url": "https://api.github.com/repos/jstnzl/MarkThat", "Date": "2018-11-13T19:01:26Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playing) mp.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/558/buggy-version/app.src.main.java.com.example.justi.markthat.ViewRecording.java", "BodyUseAPI": [], "Fixed commit": "73b313c6bc47fbd45d5240125bbc075d339649f7", "Url": "https://api.github.com/repos/jstnzl/MarkThat", "Date": "2018-11-13T19:01:26Z"},
{"Line": "=>841", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getDate()) == 0) { event.setDate(new java.util.Date().getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6135/buggy-version/alien4cloud-yorc-plugin.src.main.java.org.ystia.yorc.alien4cloud.plugin.YorcPaaSProvider.java", "BodyUseAPI": ["org.ystia.yorc.alien4cloud.plugin.AbstractMonitorEvent.setDate(long)"], "Fixed commit": "afcc5f5af8afad3cdaa8234641a5d340db239a1d", "Url": "https://api.github.com/repos/ystia/yorc-a4c-plugin", "Date": "2018-12-04T15:55:55Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getFormat().getDataType().equals(Config.DataTypes.CAMSTAR)) { names = fileName.split(\"xls.\"); }else { java.lang.System.err.println((\"Fatal Error: bad Data Type found: \" + (this.getFormat().getDataType().toString()))); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2668/buggy-version/src.main.java.org.himalayas.filereader.reader.Reader.java", "BodyUseAPI": [], "Fixed commit": "b39b5033476ad39f5e569e5a64975f1bf640e2b5", "Url": "https://api.github.com/repos/rapsilen/TestFileReader", "Date": "2018-11-13T07:47:10Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anbang.qipai.fangpaomajiang.cqrs.q.service.MajiangPlayQueryService.findJuResultDbo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (juResultDbo != null) { com.anbang.qipai.fangpaomajiang.cqrs.q.dbo.MajiangGameDbo majiangGameDbo = majiangGameQueryService.findMajiangGameDboById(gameId); com.anbang.qipai.fangpaomajiang.msg.msjobj.MajiangHistoricalJuResult juResult = new com.anbang.qipai.fangpaomajiang.msg.msjobj.MajiangHistoricalJuResult(juResultDbo, majiangGameDbo); fangpaoMajiangResultMsgService.recordJuResult(juResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3057/buggy-version/src.main.java.com.anbang.qipai.fangpaomajiang.websocket.GamePlayWsController.java", "BodyUseAPI": [], "Fixed commit": "40c4c511d08914c80fa7dfd9c41a1384effae442", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_fangpaomajiang", "Date": "2018-12-05T01:53:46Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((majiangGameValueObject.getState().name().equals(FinishedByVote.name)) || (majiangGameValueObject.getState().name().equals(Canceled.name))) { gameMsgService.gameFinished(gameId); }else { gameMsgService.gamePlayerLeave(majiangGameValueObject, playerId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3057/buggy-version/src.main.java.com.anbang.qipai.fangpaomajiang.web.controller.GameController.java", "BodyUseAPI": ["com.anbang.qipai.fangpaomajiang.msg.service.FangpaoMajiangGameMsgService.gamePlayerLeave(com.anbang.qipai.fangpaomajiang.cqrs.c.domain.MajiangGameValueObject,java.lang.String)"], "Fixed commit": "40c4c511d08914c80fa7dfd9c41a1384effae442", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_fangpaomajiang", "Date": "2018-12-05T01:53:46Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anbang.qipai.fangpaomajiang.cqrs.q.service.MajiangPlayQueryService.findJuResultDbo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (juResultDbo != null) { com.anbang.qipai.fangpaomajiang.cqrs.q.dbo.MajiangGameDbo majiangGameDbo = majiangGameQueryService.findMajiangGameDboById(gameId); com.anbang.qipai.fangpaomajiang.msg.msjobj.MajiangHistoricalJuResult juResult = new com.anbang.qipai.fangpaomajiang.msg.msjobj.MajiangHistoricalJuResult(juResultDbo, majiangGameDbo); fangpaoMajiangResultMsgService.recordJuResult(juResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3057/buggy-version/src.main.java.com.anbang.qipai.fangpaomajiang.web.controller.GameController.java", "BodyUseAPI": [], "Fixed commit": "40c4c511d08914c80fa7dfd9c41a1384effae442", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_fangpaomajiang", "Date": "2018-12-05T01:53:46Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anbang.qipai.fangpaomajiang.cqrs.q.service.MajiangPlayQueryService.findJuResultDbo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (juResultDbo != null) { com.anbang.qipai.fangpaomajiang.cqrs.q.dbo.MajiangGameDbo majiangGameDbo = majiangGameQueryService.findMajiangGameDboById(gameId); com.anbang.qipai.fangpaomajiang.msg.msjobj.MajiangHistoricalJuResult juResult = new com.anbang.qipai.fangpaomajiang.msg.msjobj.MajiangHistoricalJuResult(juResultDbo, majiangGameDbo); fangpaoMajiangResultMsgService.recordJuResult(juResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3057/buggy-version/src.main.java.com.anbang.qipai.fangpaomajiang.web.controller.GameController.java", "BodyUseAPI": [], "Fixed commit": "40c4c511d08914c80fa7dfd9c41a1384effae442", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_fangpaomajiang", "Date": "2018-12-05T01:53:46Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((majiangGameValueObject.getState().name().equals(FinishedByVote.name)) || (majiangGameValueObject.getState().name().equals(Canceled.name))) { gameMsgService.gameFinished(gameId); }else { gameMsgService.gamePlayerLeave(majiangGameValueObject, playerId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3057/buggy-version/src.main.java.com.anbang.qipai.fangpaomajiang.web.controller.GameController.java", "BodyUseAPI": ["com.anbang.qipai.fangpaomajiang.msg.service.FangpaoMajiangGameMsgService.gamePlayerLeave(com.anbang.qipai.fangpaomajiang.cqrs.c.domain.MajiangGameValueObject,java.lang.String)"], "Fixed commit": "40c4c511d08914c80fa7dfd9c41a1384effae442", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_fangpaomajiang", "Date": "2018-12-05T01:53:46Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeUntil >= 0) ch.epfl.sweng.eventmanager.notifications.SchedulerHelper.scheduleNotification(context, event.getId(), notification, ((ch.epfl.sweng.eventmanager.notifications.SchedulerHelper.getTimeTo(event.getEndDateAsDate())) + (ch.epfl.sweng.eventmanager.notifications.JoinedEventFeedbackStrategy.ONE_DAY)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7154/buggy-version/app.src.main.java.ch.epfl.sweng.eventmanager.notifications.JoinedEventFeedbackStrategy.java", "BodyUseAPI": [], "Fixed commit": "843a5fd777ac6aadc1308434f0c6b203018ce8be", "Url": "https://api.github.com/repos/Susanfe/sdp-event-management", "Date": "2018-12-17T11:55:42Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 0) { java.lang.System.out.println((\"Input: \" + (args[0]))); java.lang.System.out.println((\"Minimized: \" + (info.tonyl.bf4j.lang.Minimizer.minimize(args[0])))); }else { java.lang.System.out.println(\"No input.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2204/buggy-version/src.main.java.info.tonyl.bf4j.Bf4jApp.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "info.tonyl.bf4j.lang.Minimizer.minimize(java.lang.String)", "java.io.PrintStream.println((\"Minimized: \" + (info.tonyl.bf4j.lang.Minimizer.minimize(args[0]))))"], "Fixed commit": "f47eea38211aa0b3d1e6cff0d9affb17859d605c", "Url": "https://api.github.com/repos/libardia/bf4j", "Date": "2018-11-04T22:14:08Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((query != null) && (!(query.isBlank()))) { java.lang.String[] pairs = query.split(\"&\"); for (java.lang.String pair : pairs) { if (pair.isBlank()) { continue; } int idx = pair.indexOf(\"=\"); if (idx < 0) { queryPairs.put(pair, \"\"); }else if (idx == 0) { queryPairs.put(\"\", java.net.URLDecoder.decode(pair.substring((idx + 1)), charset)); }else { queryPairs.put(java.net.URLDecoder.decode(pair.substring(0, idx), charset), java.net.URLDecoder.decode(pair.substring((idx + 1)), charset)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2859/buggy-version/connectors.gridgo-jetty-http.src.main.java.io.gridgo.connector.jetty.parser.AbstractHttpRequestParser.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "dfbd3efabe974f36a7d63330d2cdcf7cf7b77893", "Url": "https://api.github.com/repos/gridgo/gridgo-connector", "Date": "2018-11-26T19:09:13Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CommandLine.getOptionValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (outputFilePath != null) { new InstrumentationPretty(outputFilePath).processInsturmentationOutput(); }else { new InstrumentationPretty(\"\").processInsturmentationOutput(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9819/buggy-version/src.main.java.InstrumentationPretty.java", "BodyUseAPI": ["InstrumentationPretty.processInsturmentationOutput()"], "Fixed commit": "1b91ef9e7445891a116ab8600d2aa16c95fcab80", "Url": "https://api.github.com/repos/jamesknowsbest/Instrumentationpretty", "Date": "2018-12-23T21:56:39Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (startPoint.after(endPoint)) { throw new java.lang.IllegalArgumentException(new java.lang.StringBuilder().append(\"Date: \").append(endDate).append(\" before \").append(startPoint).append(\". Report for the past is not in the scope of this service.\").toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2990/buggy-version/WorkDays.src.main.java.workdays.DaysCountController.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.util.Date)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()"], "Fixed commit": "ed4aaf893a9be5c169e2f5a76fff6419801643f3", "Url": "https://api.github.com/repos/maplociennik/WorkDays", "Date": "2018-11-16T14:36:49Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.choerodon.gateway.helper.infra.mapper.PermissionMapper.projectEnabled(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((isEnabled != null) && (!isEnabled)) { context.response.setStatus(CheckState.PERMISSION_DISABLED_PROJECT); context.response.setMessage((\"The project has been disabled, projectId: \" + projectId)); }else if (sourceIds.stream().anyMatch(( t) -> t.equals(projectId))) { context.response.setStatus(CheckState.SUCCESS_PASS_PROJECT); context.response.setMessage((\"Have access to this 'project-level' interface, permission: \" + (context.getPermission()))); }else { context.response.setStatus(CheckState.PERMISSION_NOT_PASS_PROJECT); context.response.setMessage((\"No access to this this project, projectId: \" + projectId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3375/buggy-version/src.main.java.io.choerodon.gateway.helper.api.filter.CommonRequestCheckFilter.java", "BodyUseAPI": [], "Fixed commit": "86c019960ea187ef29d6f893718d9f1f930895a0", "Url": "https://api.github.com/repos/choerodon/gateway-helper", "Date": "2018-12-03T13:50:19Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.choerodon.gateway.helper.infra.mapper.PermissionMapper.organizationEnabled(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((isEnabled != null) && (!isEnabled)) { context.response.setStatus(CheckState.PERMISSION_DISABLED_ORG); context.response.setMessage((\"The organization has been disabled, organizationId: \" + orgId)); }else if (sourceIds.stream().anyMatch(( t) -> t.equals(orgId))) { context.response.setStatus(CheckState.SUCCESS_PASS_ORG); context.response.setMessage((\"Have access to this 'organization-level' interface, permission: \" + (context.getPermission()))); }else { context.response.setStatus(CheckState.PERMISSION_NOT_PASS_ORG); context.response.setMessage((\"No access to this this organization, organizationId: \" + orgId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3375/buggy-version/src.main.java.io.choerodon.gateway.helper.api.filter.CommonRequestCheckFilter.java", "BodyUseAPI": [], "Fixed commit": "86c019960ea187ef29d6f893718d9f1f930895a0", "Url": "https://api.github.com/repos/choerodon/gateway-helper", "Date": "2018-12-03T13:50:19Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((app.getStartTime()) == \"00:00\") && ((app.getFinishTime()) == \"00:00\")) { java.lang.System.out.println(\"Time is invalid\"); }else if (overlap(app)) { java.lang.System.out.println(\"Appointment Overlap\"); }else { java.lang.System.out.println(\"Appointment added\"); this.appointments.add(app); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6667/buggy-version/OOappointment.Day.java", "BodyUseAPI": ["Day.overlap(Appointment)", "java.util.ArrayList<Appointment>.add(Appointment)"], "Fixed commit": "f71f1a1d5a52a4d1e78059cc224abc5feff6eecd", "Url": "https://api.github.com/repos/Nohclu/ComparativeProgramming", "Date": "2018-11-22T16:01:44Z"},
{"Line": "=>1381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Hello.downloadMusicRMI(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (print.equals(\"tudo okay no download\")) { return \"Download complete.\"; }else { return \"Something went wrong.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/585/buggy-version/src.Client.java", "BodyUseAPI": [], "Fixed commit": "3e18e0e1b7e64bd2a5e797f92fb64bc207c09606", "Url": "https://api.github.com/repos/FabioGCordeiro/SD---Project", "Date": "2018-11-27T00:01:17Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (packet.getAddress().equals(java.net.InetAddress.getLocalHost())) { java.lang.System.out.println(\"Self\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/695/buggy-version/src.main.java.core.MessageListener.java", "BodyUseAPI": [], "Fixed commit": "c6fa3a8a14d93779cf7d7d0e04821c1f77d50c18", "Url": "https://api.github.com/repos/omkarspatil/CS536_P2P", "Date": "2018-11-21T22:35:12Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ar.getGameState()) != null) { session.sendString(jsonObj.toString()); }else { client.sendString(jsonObj.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4412/buggy-version/DozorGameServer.src.main.java.com.dozor.game.GameControllerAndParser.java", "BodyUseAPI": [], "Fixed commit": "7bc87f510bfdea6513d70dd76433626ed67bdefa", "Url": "https://api.github.com/repos/kachkovsky/dozorgame", "Date": "2018-11-24T08:07:39Z"},
{"Line": "=>881", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (promo.corP()) pecasP.add(promo); else pecasB.add(promo);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/132/buggy-version/1612734_1413019.src.tabuleiro.Tabuleiro.java", "BodyUseAPI": ["java.util.ArrayList<tabuleiro.Peca>.add(tabuleiro.Peca)", "java.util.ArrayList<tabuleiro.Peca>.add(tabuleiro.Peca)"], "Fixed commit": "e7d36bceab5b19109bdcd34a323e0ee81da2cbe2", "Url": "https://api.github.com/repos/NoggetGump/Xadrez-POO", "Date": "2018-11-06T20:54:31Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lineart.model.ILine2D.getIntersection(lineart.model.ILine2D)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (p != null) return this.getBoundingBox().contains(p) ? p : null; else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6196/buggy-version/src.lineart.model.LineSegment2D.java", "BodyUseAPI": ["lineart.model.Rectangle.contains(lineart.model.Point2D)"], "Fixed commit": "61ab23196b8202d7bcfd13bf8c63dd86ac10c1eb", "Url": "https://api.github.com/repos/noisedriver/lineart", "Date": "2018-11-16T19:43:24Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (casasPoints.containsKey(rest)) { int currPoints = casasPoints.get(rest); casasPoints.replace(rest, (currPoints + pointsToGive)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5823/buggy-version/src.OOP.Solution.CartelDeNachosImpl.java", "BodyUseAPI": ["java.util.HashMap<OOP.Provided.CasaDeBurrito, java.lang.Integer>.get(OOP.Provided.CasaDeBurrito)", "java.util.HashMap<OOP.Provided.CasaDeBurrito, java.lang.Integer>.replace(OOP.Provided.CasaDeBurrito,int)"], "Fixed commit": "d3df41ce88580458a6edd71f59669e9f91448b39", "Url": "https://api.github.com/repos/talperchuk/OOP", "Date": "2018-11-28T17:16:00Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (its_meow.betteranimalsplus.common.config.BetterAnimalsPlusConfig.spawnGoat) its_meow.betteranimalsplus.init.MobRegistry.regCre(its_meow.betteranimalsplus.common.entity.EntityGoat.class, \"Goat\", 16777215, 15658734, BetterAnimalsPlusConfig.goatWeight, 1, 4, net.minecraftforge.common.BiomeDictionary.getBiomes(Type.HILLS), net.minecraftforge.common.BiomeDictionary.getBiomes(Type.MOUNTAIN), net.minecraftforge.common.BiomeDictionary.getBiomes(Type.SAVANNA), net.minecraftforge.common.BiomeDictionary.getBiomes(Type.PLAINS), net.minecraftforge.common.BiomeDictionary.getBiomes(Type.FOREST));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2047/buggy-version/src.main.java.its_meow.betteranimalsplus.init.MobRegistry.java", "BodyUseAPI": [], "Fixed commit": "edd7522a9513dbaa8028bfb5e18447cd53896343", "Url": "https://api.github.com/repos/itsmeow/betteranimalsplus", "Date": "2018-11-08T21:33:03Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.lang.Character.toString(sumArg.charAt(((sumArg.length()) - 1))).equals(\")\"))) { sumArg.append(\")\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1701/buggy-version/src.ShuntingYard.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "e2f6da80ff8884ba93fc5f32423ff9febde6d98f", "Url": "https://api.github.com/repos/El-Team/Lab-Algo-3-Proyecto-3", "Date": "2018-12-18T02:37:28Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(net.md_5.bungee.BungeeCord.getInstance().config.getAllowedChannels().contains(pluginMessage.getTag()))) && (!(pluginMessage.getTag().startsWith(\"MC|\")))) { throw CancelSendSignal.INSTANCE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/612/buggy-version/proxy.src.main.java.net.md_5.bungee.connection.UpstreamBridge.java", "BodyUseAPI": [], "Fixed commit": "032447469fa77edb01e170181498cc7733a7713a", "Url": "https://api.github.com/repos/leaffyh/BungeeCord", "Date": "2018-11-26T20:31:19Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outputToken instanceof java.lang.String) { return !(((java.lang.String) (outputToken)).isEmpty()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7639/buggy-version/core.sdk-core.src.main.java.software.amazon.awssdk.core.util.PaginatorUtils.java", "BodyUseAPI": [], "Fixed commit": "be134e627419e3db49db52aaad35af0db3648740", "Url": "https://api.github.com/repos/aws/aws-sdk-java-v2", "Date": "2018-12-06T21:03:23Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((playerPiecesTaken.size()) > 0) || ((oponentPiecesTaken.size()) > 0)) { moveVariant.getComments().add(comment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7139/buggy-version/natural-language.src.main.java.fii.ai.natural.language.service.CommentVariantServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c3c340cec28cd6af4b78fcc1a9f931772fb3e022", "Url": "https://api.github.com/repos/stefan-adrian/ai-natural-language", "Date": "2018-12-15T10:14:19Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((playerChecks.size()) > 0) || ((oponentChecks.size()) > 0)) { moveVariant.getComments().add(comment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7139/buggy-version/natural-language.src.main.java.fii.ai.natural.language.service.CommentVariantServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c3c340cec28cd6af4b78fcc1a9f931772fb3e022", "Url": "https://api.github.com/repos/stefan-adrian/ai-natural-language", "Date": "2018-12-15T10:14:19Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t.toString().equals(\"java.net.SocketTimeoutException: timeout\")) android.widget.Toast.makeText(getActivity(), \"Sorry, this is taking too long. Ending process.\", Toast.LENGTH_SHORT).show(); else android.widget.Toast.makeText(getActivity(), \"Can't extract data\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/874/buggy-version/app.src.main.java.edu.temple.stegosaurus.ExtractFragment.java", "BodyUseAPI": [], "Fixed commit": "5bde6c024de88231b162f729a9b89e14206a5ba5", "Url": "https://api.github.com/repos/SnarkyShark/Stegosaurus", "Date": "2018-12-10T16:10:46Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(alreadyHit.contains(enemy))) { processHit(enemy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2107/buggy-version/Attack.java", "BodyUseAPI": ["Attack.processHit(Enemy)"], "Fixed commit": "b2ebeb048ce9dd945d57a6f06ccde574c97f7344", "Url": "https://api.github.com/repos/LukasDoubleU/StarPro-Molten-Heart", "Date": "2018-12-14T09:16:30Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((selection) == (Tinker.chess_game.view_controller.ChessGame.Click.SECOND)) && (secondSelectedTile.hasToken())) { java.lang.System.out.println((\"Second click - Tile has Token. WHOSETURN-------->\" + (whoseTurn))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3215/buggy-version/src.Tinker.chess_game.view_controller.ChessGame.java", "BodyUseAPI": [], "Fixed commit": "1212274de13283060fe84a251115127b6c7252e3", "Url": "https://api.github.com/repos/blindmice1o3/o-emouse", "Date": "2018-12-30T07:35:37Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (col.getSchemaName().equals(\"\")) { java.lang.String defaultSchema = meta.getDefaultSchema(); org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.String> searchKey = new org.apache.commons.lang3.tuple.ImmutablePair(defaultSchema, col.getTableSourceAlias()); if (tableInfoAndAlias.containsKey(searchKey)) { col.setTableSourceAlias(tableInfoAndAlias.get(searchKey)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6885/buggy-version/src.main.java.org.verdictdb.sqlreader.RelationStandardizer.java", "BodyUseAPI": ["org.verdictdb.core.sqlobject.BaseColumn.getTableSourceAlias()", "org.verdictdb.core.sqlobject.BaseColumn.setTableSourceAlias(tableInfoAndAlias.get(searchKey))"], "Fixed commit": "989791754b1919c11e4f18f72998bbfba4696f11", "Url": "https://api.github.com/repos/mozafari/verdictdb", "Date": "2018-11-24T17:02:35Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["som.interpreter.actors.SPromise.SResolver.getPromise()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((prom.getOwner()) == (sb.getOwner().getCurrentActor())) { if (!(sb.getRecord().containsObject(prom))) { som.interpreter.actors.SPromise.getPromiseClass().serialize(prom, sb); } sb.putLongAt(base, sb.getRecord().getObjectPointer(prom)); }else { tools.concurrency.TracingActors.TracingActor ta = ((tools.concurrency.TracingActors.TracingActor) (prom.getOwner())); if (!(ta.getSnapshotRecord().containsObject(ta))) { ta.getSnapshotRecord().farReference(prom, sb, base); }else { sb.putLongAt(base, ta.getSnapshotRecord().getObjectPointer(prom)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2423/buggy-version/src.tools.snapshot.nodes.PromiseSerializationNodes.java", "BodyUseAPI": ["som.interpreter.actors.SPromise.getPromiseClass().serialize(som.interpreter.actors.SPromise,tools.snapshot.SnapshotBuffer)", "tools.snapshot.SnapshotBuffer.putLongAt(int,ta.getSnapshotRecord().getObjectPointer(prom))", "sb.getRecord().containsObject(som.interpreter.actors.SPromise)", "som.interpreter.actors.SPromise.getOwner()", "ta.getSnapshotRecord().getObjectPointer(som.interpreter.actors.SPromise)", "tools.snapshot.SnapshotBuffer.putLongAt(int,sb.getRecord().getObjectPointer(prom))", "ta.getSnapshotRecord().farReference(som.interpreter.actors.SPromise,tools.snapshot.SnapshotBuffer,int)", "tools.snapshot.SnapshotBuffer.getRecord()", "tools.snapshot.SnapshotBuffer.getRecord()", "sb.getRecord().getObjectPointer(som.interpreter.actors.SPromise)"], "Fixed commit": "527eefee5f7f503c004e8127ea6de982ed3dab47", "Url": "https://api.github.com/repos/daumayr/SOMns", "Date": "2018-12-12T09:23:03Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((localParticipant) != null) { event.putString(\"participant\", localParticipant.getIdentity()); pushEvent(this, com.twiliorn.library.CustomTwilioVideoView.Events.ON_DISCONNECTED, event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5963/buggy-version/android.src.main.java.com.twiliorn.library.CustomTwilioVideoView.java", "BodyUseAPI": [], "Fixed commit": "ce865eafa723343db6c4434be48c80ef0467ef0f", "Url": "https://api.github.com/repos/VaruzhKhachatryan/react-native-twilio-video-webrtc", "Date": "2018-11-06T19:29:55Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (param.m_flag_coldstart) result_dim = 4;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9593/buggy-version/src.mains.ETBIRExecution.java", "BodyUseAPI": [], "Fixed commit": "75a73ad27009c67f6e788d597158a15984cb8ba6", "Url": "https://api.github.com/repos/Linda-sunshine/IR_Base", "Date": "2018-11-01T04:57:57Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.code()) == 401) { android.widget.Toast.makeText(this, \"Invalid Login Credentials\", Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(this, (\"HTTP Error code\" + (response.code())), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9473/buggy-version/app.src.main.java.com.android.mlpj.southerninvestments.LoginActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(com.android.mlpj.southerninvestments.LoginActivity,(\"HTTP Error code\" + (response.code())),Toast.LENGTH_LONG)", "android.widget.Toast.makeText(this, (\"HTTP Error code\" + (response.code())), Toast.LENGTH_LONG).show()", "retrofit2.Response<com.android.mlpj.southerninvestments.LoginResultPOJO>.code()"], "Fixed commit": "39be97e208d1b037dd7229fa53b9b3e605163110", "Url": "https://api.github.com/repos/LahiruJayasekara/SouthernInvestments-master", "Date": "2018-11-05T17:17:05Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((x.text().length()) > 0) { java.lang.String val = java.lang.Character.toString(x.text().charAt(0)); if (android.text.TextUtils.isDigitsOnly(val)) { quality.add(x.select(\"a[href]\").attr(\"href\")); quality_name.add(x.text()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/420/buggy-version/app.src.main.java.com.marcqtan.animobi.Utility.java", "BodyUseAPI": ["java.lang.Character.toString(x.text().charAt(0))", "org.jsoup.nodes.Element.text()", "org.jsoup.nodes.Element.select(java.lang.String)", "java.util.List<java.lang.String>.add(x.text())", "org.jsoup.nodes.Element.text()", "x.text().charAt(int)", "java.util.List<java.lang.String>.add(x.select(\"a[href]\").attr(\"href\"))", "x.select(\"a[href]\").attr(java.lang.String)"], "Fixed commit": "6f208cb66d01d793c94533b62dd1e5c790eabbb7", "Url": "https://api.github.com/repos/marctan/Animobi", "Date": "2018-11-24T05:15:15Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((quality.size()) == 1) { java.util.List<java.lang.String> directLink = new java.util.ArrayList<>(); directLink.add(doc3.select(\"video#videojs\").select(\"source[src]\").attr(\"src\")); return directLink; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/420/buggy-version/app.src.main.java.com.marcqtan.animobi.Utility.java", "BodyUseAPI": [], "Fixed commit": "6f208cb66d01d793c94533b62dd1e5c790eabbb7", "Url": "https://api.github.com/repos/marctan/Animobi", "Date": "2018-11-24T05:15:15Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(VDCConfig.misc.gameRuleName.isEmpty())) { definitions.put(VDCConfig.misc.gameRuleName, new net.minecraft.world.GameRules.ValueDefinition(java.lang.Boolean.toString(VDCConfig.misc.gameRuleDefaultValue), GameRules.ValueType.BOOLEAN_VALUE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6715/buggy-version/src.main.java.com.therandomlabs.vanilladeathchest.listener.VDCGameRuleAdder.java", "BodyUseAPI": [], "Fixed commit": "d132f6489c5877a41ea9971f7625e70f88ca050a", "Url": "https://api.github.com/repos/TheRandomLabs/VanillaDeathChest", "Date": "2018-12-14T13:43:31Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.vertx.core.json.JsonObject.getJsonArray(java.lang.String,fr.wseduc.webutils.collections.JsonArray)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ids.contains(user.getUserId())) unread = \"true\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9036/buggy-version/conversation.src.main.java.org.entcore.conversation.service.impl.SqlConversationService.java", "BodyUseAPI": [], "Fixed commit": "a72e7f318ea383037fb6c55a739ee711719c6077", "Url": "https://api.github.com/repos/opendigitaleducation/entcore", "Date": "2018-11-15T15:55:00Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (principal != null) { return monServ.index(principal.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1609/buggy-version/FinalREST.src.main.java.com.skilldistillery.dmtool.controllers.MonsterController.java", "BodyUseAPI": ["com.skilldistillery.dmtool.services.MonsterService.index(java.lang.String)", "java.security.Principal.getName()"], "Fixed commit": "f22115f9114b23b73ef6402b4328ce845fd93716", "Url": "https://api.github.com/repos/JRBotta/DMTool", "Date": "2018-12-10T20:58:08Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((escapeChars) != null) { if ((openingQuote) != null) { needToBeEscaped = ( i) -> (isRawEscapeChar(sb.charAt(i))) || (java.lang.String.valueOf(sb.charAt(i)).equals(openingQuote)); }else { needToBeEscaped = ( i) -> ((isDelimiterChar(sb, i)) || (isRawEscapeChar(sb.charAt(i)))) || (isRawQuoteChar(sb.charAt(i))); } for (int i = 0; i < (sb.length()); i++) { if (needToBeEscaped.test(i)) { sb.insert((i++), escapeChars[0]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9162/buggy-version/reader.src.main.java.org.jline.reader.impl.DefaultParser.java", "BodyUseAPI": [], "Fixed commit": "d92d5bff5ad1d65fe753724d5827aabf5e87298b", "Url": "https://api.github.com/repos/snuyanzin/jline3", "Date": "2018-11-11T18:01:35Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connection == null) { throw new com.alibaba.otter.canal.parse.exception.CanalParseException(\"illegal connection is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8483/buggy-version/parse.src.main.java.com.alibaba.otter.canal.parse.inbound.mysql.MysqlEventParser.java", "BodyUseAPI": [], "Fixed commit": "4e9e3f5abe243ea6a85fbb438fdf7c90adb6abf2", "Url": "https://api.github.com/repos/rewerma/canal", "Date": "2018-11-25T13:17:34Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((checkedAdditives) == null) { checkedAdditives = new java.util.HashSet<>(); checkedAdditives.addAll(additiveNames); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6352/buggy-version/app.src.main.java.me.anon.grow.fragment.StatisticsFragment.java", "BodyUseAPI": [], "Fixed commit": "49b2e4453bc91bea87d29ba0ffc018e0fab52372", "Url": "https://api.github.com/repos/7LPdWcaW/GrowTracker-Android", "Date": "2018-12-23T19:11:57Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nbPageTotal < 1L) nbPageTotal = 1L;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9018/buggy-version/src.main.java.com.excilys.cdb.model.PageInfo.java", "BodyUseAPI": [], "Fixed commit": "e42c6aa5c55d732512ddd16cdc1ea45258ec74fb", "Url": "https://api.github.com/repos/samoGit/computer-database", "Date": "2018-11-07T09:46:44Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((minecrafttransportsimulator.systems.PackParserSystem.getSign(definition).general.textLines) != null) { for (byte i = 0; i < (minecrafttransportsimulator.systems.PackParserSystem.getSign(definition).general.textLines.length); ++i) { net.minecraftforge.fml.common.network.ByteBufUtils.writeUTF8String(buf, text.get(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3316/buggy-version/main.java.minecrafttransportsimulator.packets.tileentities.PacketSignChange.java", "BodyUseAPI": ["minecrafttransportsimulator.systems.PackParserSystem.getSign(java.lang.String)"], "Fixed commit": "37c78ee559986f24b40e56b3f4b8f398d3043985", "Url": "https://api.github.com/repos/DonBruce64/MinecraftTransportSimulator", "Date": "2018-11-01T03:06:41Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((minecrafttransportsimulator.systems.PackParserSystem.getSign(definition).general.textLines) != null) { for (byte i = 0; i < (minecrafttransportsimulator.systems.PackParserSystem.getSign(definition).general.textLines.length); ++i) { this.text.add(net.minecraftforge.fml.common.network.ByteBufUtils.readUTF8String(buf)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3316/buggy-version/main.java.minecrafttransportsimulator.packets.tileentities.PacketSignChange.java", "BodyUseAPI": ["minecrafttransportsimulator.systems.PackParserSystem.getSign(java.lang.String)"], "Fixed commit": "37c78ee559986f24b40e56b3f4b8f398d3043985", "Url": "https://api.github.com/repos/DonBruce64/MinecraftTransportSimulator", "Date": "2018-11-01T03:06:41Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tuples.isEmpty()) { this.fails(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4880/buggy-version/src.main.java.org.chocosolver.solver.constraints.extension.nary.PropTableStr2.java", "BodyUseAPI": [], "Fixed commit": "4d77a1d7237f6dcb974ae796e85ea9a6c8756c88", "Url": "https://api.github.com/repos/kaktus40/choco3", "Date": "2018-11-07T10:01:06Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(out.isPresent())) { java.lang.Class<?> superclass; while ((superclass = clazz.getSuperclass()) != (java.lang.Object.class)) { out = getField(annotation, superclass, object); if (out.isPresent()) { break; } clazz = clazz.getSuperclass(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4254/buggy-version/src.main.java.io.github.bonigarcia.AnnotationsReader.java", "BodyUseAPI": [], "Fixed commit": "24b904094c7f3e3fba627a8318316da8623060eb", "Url": "https://api.github.com/repos/thc202/selenium-jupiter", "Date": "2018-12-18T11:54:24Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.okclouder.ovc.frag.article.ArticleFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((activity != null) && (!(android.text.TextUtils.isEmpty(tips)))) { android.widget.Toast.makeText(activity, tips, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7256/buggy-version/app.src.main.java.cn.okclouder.ovc.frag.article.ArticleFragment.java", "BodyUseAPI": ["android.widget.Toast.makeText(android.support.v4.app.FragmentActivity,java.lang.String,Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(activity, tips, Toast.LENGTH_SHORT).show()"], "Fixed commit": "95cee8c76a2233890d9bc3dda5d56fa10d18d66d", "Url": "https://api.github.com/repos/caoshen/agg", "Date": "2018-04-30T08:51:59Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((signal) == 0) { mDiary.save(); }else { android.content.ContentValues values = new android.content.ContentValues(); values.put(\"time\", mDiary.getTime().toString()); org.litepal.crud.DataSupport.updateAll(android.mainactivity.diary.class, values, \"content=?\", diaryContent); values.put(\"content\", mDiary.getContent().toString()); org.litepal.crud.DataSupport.updateAll(android.mainactivity.diary.class, values, \"content=?\", diaryContent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4046/buggy-version/app.src.main.java.android.editactivity.EditActivity.java", "BodyUseAPI": [], "Fixed commit": "aaa4720acec2f4853c57e9e4cf9c7d62d45746e4", "Url": "https://api.github.com/repos/guojinzyq/Diary", "Date": "2018-12-23T14:40:39Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.joshatron.tak.server.database.AccountDAO.getUserFromUsername(auth.getUsername())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (socialDAO.isBlocked(user.getUserId(), other)) { throw new io.joshatron.tak.server.exceptions.GameServerException(io.joshatron.tak.server.exceptions.ErrorCode.BLOCKED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/668/buggy-version/src.main.java.io.joshatron.tak.server.utils.SocialUtils.java", "BodyUseAPI": [], "Fixed commit": "253dd518c43d6f54ed389793deb8e6b699b98b64", "Url": "https://api.github.com/repos/joshatron/Tak-Server", "Date": "2018-12-24T20:31:07Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (frac == 1.0) { region.setBackground(originalBackground); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/844/buggy-version/src.main.java.seedu.address.ui.UiPart.java", "BodyUseAPI": [], "Fixed commit": "fca38e15840a82ec1cbd3932206f8a84a9b440a0", "Url": "https://api.github.com/repos/CS2103-AY1819S1-W12-3/main", "Date": "2018-11-01T14:38:23Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recommendations.size()) == 0) { model.put(\"recommendationsMsg\", \"Indiquez vos pr\u00e9f\u00e9rences dans votre profil pour recevoir des recommandations :)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4130/buggy-version/GirlsFlix.src.main.java.com.gfx.controller.IndexController.java", "BodyUseAPI": [], "Fixed commit": "4643fb520253ac01955d0f0e2f0021724beb0512", "Url": "https://api.github.com/repos/dlphn/girlsflix", "Date": "2018-11-08T21:51:09Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (wave >= 0) { java.util.LinkedList<java.lang.String> zombieTypes = spawns.get(wave); if (zombieTypes == null) { zombieTypes = new java.util.LinkedList<java.lang.String>(); } zombieTypes.add(zombieType); setSpawn(wave, zombieTypes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9111/buggy-version/src.mainPackage.Level.java", "BodyUseAPI": ["java.util.TreeMap<java.lang.Integer, java.util.LinkedList<java.lang.String>>.get(int)", "mainPackage.Level.setSpawn(int,java.util.LinkedList<java.lang.String>)"], "Fixed commit": "72665f8ca933e8b798cee9c55fd62c93b1195591", "Url": "https://api.github.com/repos/DeltaF1/SYSC-3110-Project", "Date": "2018-12-07T23:30:16Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File(\"/etc/fssl/providers/\").exists())) { encrypted = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6908/buggy-version/src.org.thatmadhacker.fssl.lib.Connection.java", "BodyUseAPI": [], "Fixed commit": "d5f405ef41134faf26039b1f709d13ef0ccff210", "Url": "https://api.github.com/repos/thatmadhacker/FinlaySSL", "Date": "2018-12-30T23:03:53Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataContainer.getIds().contains(DataObjects.NUMBER_OF_CATEGORIES)) dataContainer.getDataObject(DataObjects.NUMBER_OF_CATEGORIES).addValue((\"\" + categories));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4067/buggy-version/src.main.java.org.dice_research.opal.civet.access.OpalAccessor.java", "BodyUseAPI": ["dataContainer.getDataObject(DataObjects.NUMBER_OF_CATEGORIES).addValue(java.lang.String)", "org.dice_research.opal.civet.data.DataContainer.getDataObject(DataObjects.NUMBER_OF_CATEGORIES)"], "Fixed commit": "1ca80c0abbf7a41d0b12f7e5511c0f2497403d07", "Url": "https://api.github.com/repos/projekt-opal/civet", "Date": "2018-12-05T21:40:50Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.flink.core.memory.DataInputView.readByte()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isNull == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2341/buggy-version/flink-libraries.flink-cep.src.main.java.org.apache.flink.cep.nfa.sharedbuffer.NodeId.java", "BodyUseAPI": [], "Fixed commit": "be133078aec17047d86b3c4c0d9fda1fcec60afb", "Url": "https://api.github.com/repos/StephanEwen/incubator-flink", "Date": "2018-11-22T21:04:47Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userInput.charAt(position)) == '/') { input.append(userInput.charAt((position - 1))); input.append(userInput.charAt(position)); java.lang.String inputCheck = input.toString(); if (seedu.saveit.ui.CommandHighlightManager.isParameter(inputCheck)) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1048/buggy-version/src.main.java.seedu.saveit.ui.CommandHighlightManager.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.StringBuilder.append(char)"], "Fixed commit": "e26c0be25e079014b41975a9fa0724d2e90a21ae", "Url": "https://api.github.com/repos/jasonvank/main", "Date": "2018-11-06T12:07:41Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (term instanceof com.sun.mail.imap.protocol.XMailboxTerm) return xMailbox(((com.sun.mail.imap.protocol.XMailboxTerm) (term)), charset); else throw new com.sun.mail.imap.protocol.SearchException((\"Search too complex. Cannot handle term: \" + (term.getClass().getName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/701/buggy-version/javax.mail.src.com.sun.mail.imap.protocol.SearchSequence.java", "BodyUseAPI": ["com.sun.mail.imap.protocol.SearchTerm.getClass()", "term.getClass().getName()"], "Fixed commit": "4fb8819dd6d184961f871324075e8cb2d9de7f1b", "Url": "https://api.github.com/repos/open-xchange/appsuite-middleware", "Date": "2018-11-12T09:12:21Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((thermostat.getProgramMode()) != null) && ((thermostat.getProgramMode().getPrograms()) != null)) { foundThermostat.setProgramMode(thermostat.getProgramMode()); for (giuseppe.graziano.thermostat.service.Program program : foundThermostat.getProgramMode().getPrograms()) { program.setProgramMode(foundThermostat.getProgramMode()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/329/buggy-version/src.main.java.giuseppe.graziano.thermostat.service.ThermostatService.java", "BodyUseAPI": ["giuseppe.graziano.thermostat.service.Thermostat.setProgramMode(thermostat.getProgramMode())", "giuseppe.graziano.thermostat.service.Thermostat.getProgramMode()"], "Fixed commit": "62586c024bf3d44c566d59f2c6caeb6246f27057", "Url": "https://api.github.com/repos/peps14/graziano-thermostat-backend", "Date": "2018-11-21T12:28:38Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(MAPPINGS_TINY_BASE.exists())) { project.getLogger().lifecycle((\":extracting \" + (mappingsJar.getName()))); try (java.nio.file.FileSystem fileSystem = java.nio.file.FileSystems.newFileSystem(mappingsJar.toPath(), null)) { java.nio.file.Path fileToExtract = fileSystem.getPath(\"mappings/mappings.tiny\"); java.nio.file.Files.copy(fileToExtract, MAPPINGS_TINY_BASE.toPath()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/474/buggy-version/src.main.java.net.fabricmc.loom.providers.PomfProvider.java", "BodyUseAPI": ["java.nio.file.Files.copy(java.nio.file.Path,java.nio.file.Path)", "java.io.File.toPath()"], "Fixed commit": "e0972e53498d8d6f5df3c57c1d845f610c6b88cb", "Url": "https://api.github.com/repos/FabricMC/fabric-loom", "Date": "2018-11-21T17:33:25Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (MAPPINGS_TINY.exists()) { MAPPINGS_TINY.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/474/buggy-version/src.main.java.net.fabricmc.loom.providers.PomfProvider.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "e0972e53498d8d6f5df3c57c1d845f610c6b88cb", "Url": "https://api.github.com/repos/FabricMC/fabric-loom", "Date": "2018-11-21T17:33:25Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { android.app.NotificationChannel nc = new android.app.NotificationChannel(\"molde_channel\", title, android.app.NotificationManager.IMPORTANCE_DEFAULT); nc.setDescription(message); nc.enableLights(true); nc.setLightColor(Color.GREEN); mNotificationManager.createNotificationChannel(nc); }else { android.support.v4.app.NotificationCompat.Builder mBuilder = createNotification(title, message); mBuilder.setContentIntent(createGoFeedPendingIntent(feedId)); mNotificationManager.notify(1, mBuilder.build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7701/buggy-version/app.src.main.java.com.limefriends.molde.common.fcm.MoldeFirebaseMessagingService.java", "BodyUseAPI": [], "Fixed commit": "bd5fb15abc1e4e1318880c9ba0de745a09456580", "Url": "https://api.github.com/repos/goifproject/molde_android", "Date": "2018-11-22T09:34:28Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLive()) { for (; ts != null; ts = ts.next) { if ((ts.head) == (this)) { int i = 0; do { ts = ts.next; i++; } while (ts != null ); return \"t\" + (i - 1); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7213/buggy-version/src.mil.Temp.java", "BodyUseAPI": [], "Fixed commit": "4660862178900d50a5dd05a33c9b650fb8ebec27", "Url": "https://api.github.com/repos/habit-lang/mil-tools", "Date": "2018-12-25T04:13:09Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.uid) != null) getAppointments(this.uid);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7955/buggy-version/app.src.main.java.ch.epfl.sweng.vanjel.DoctorAppointmentsList.java", "BodyUseAPI": [], "Fixed commit": "0441dc340d20e47667d4b74e1e28aa28af768159", "Url": "https://api.github.com/repos/ElCabrino/SDPProject", "Date": "2018-11-12T17:49:25Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkGreyAndDrive()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3396/buggy-version/HelloWorld.src.edu.kit.lego02.Threads.LineFollowing.GapState.java", "BodyUseAPI": [], "Fixed commit": "ca19b41caa6944e4e80ec4d7e65b90efca11c396", "Url": "https://api.github.com/repos/Benkler/LegoMindstorm", "Date": "2018-11-24T17:08:14Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkGreyAndDrive()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3396/buggy-version/HelloWorld.src.edu.kit.lego02.Threads.LineFollowing.GapState.java", "BodyUseAPI": [], "Fixed commit": "ca19b41caa6944e4e80ec4d7e65b90efca11c396", "Url": "https://api.github.com/repos/Benkler/LegoMindstorm", "Date": "2018-11-24T17:08:14Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1038/buggy-version/src.main.java.net.fabricmc.fabric.impl.client.model.RenderCacheHelperImpl.java", "BodyUseAPI": [], "Fixed commit": "018f9e954f4195a581cb2e7e1a87e46f7e0720a0", "Url": "https://api.github.com/repos/asiekierka/fabric", "Date": "2018-12-31T16:46:55Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bytesRead < (buff.length)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2488/buggy-version/AllatOnce.app.src.main.java.com.vub.sebel.allatonce.ClientThread.java", "BodyUseAPI": [], "Fixed commit": "09a24836a1fd754c923c4e02cff400e78eaf43e3", "Url": "https://api.github.com/repos/Sebbe095/VUB-Multimedia-project", "Date": "2018-11-24T15:47:14Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (html != null) { html = html.replace(\"\\\"\", \"\\\\\\\"\"); html = html.replaceAll(\">\", \"&gt;\"); html = html.replace(\"<\", \"&lt;\"); html = html.replaceAll(\"\\\\r?\\\\n\", \"<br />\"); return html; }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7530/buggy-version/src.application.controllers.EmailController.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "6223aa495a8242545183014f2f507c0bbafb6caf", "Url": "https://api.github.com/repos/travispessetto/OrigamiGUI", "Date": "2018-12-05T00:13:22Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (seenPendingPackets.contains(pendingPacket)) { _dismissPacket(pendingPacket); }else seenPendingPackets.add(pendingPacket);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1908/buggy-version/app.src.main.java.com.gilmaimon.israelposttracker.PacketsBalance.DynamicPostPacketsBalance.java", "BodyUseAPI": ["com.gilmaimon.israelposttracker.PacketsBalance.DynamicPostPacketsBalance._dismissPacket(com.gilmaimon.israelposttracker.Packets.PendingPacket)", "java.util.Set<com.gilmaimon.israelposttracker.Packets.PendingPacket>.add(com.gilmaimon.israelposttracker.Packets.PendingPacket)"], "Fixed commit": "adbced720b969bfa66a1bda588c5f9cfb1e73e8b", "Url": "https://api.github.com/repos/gilmaimon/IsraelPost-Tracker", "Date": "2018-11-27T08:05:53Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.address.logic.parser.ArgumentTokenizer.tokenize(java.lang.String,seedu.address.logic.parser.CliSyntax.PREFIX_TWENTY_FIVE,seedu.address.logic.parser.CliSyntax.PREFIX_SEVENTY_FIVE,seedu.address.logic.parser.CliSyntax.PREFIX_HIGHEST,seedu.address.logic.parser.CliSyntax.PREFIX_MEAN,seedu.address.logic.parser.CliSyntax.PREFIX_MEDIAN,seedu.address.logic.parser.CliSyntax.PREFIX_TEST_NAME,seedu.address.logic.parser.CliSyntax.PREFIX_LOWEST)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((((!(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_TWENTY_FIVE).isPresent())) && (!(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_SEVENTY_FIVE).isPresent()))) && (!(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_MEAN).isPresent()))) && (!(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_MEDIAN).isPresent()))) && (!(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_HIGHEST).isPresent()))) && (!(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_LOWEST).isPresent()))) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9776/buggy-version/src.main.java.seedu.address.logic.parser.GradeSummaryCommandParser.java", "BodyUseAPI": [], "Fixed commit": "b937286e0f50c1676378efac4ab58dae769043db", "Url": "https://api.github.com/repos/CS2113-AY1819S1-T13-4/main", "Date": "2018-11-06T06:04:09Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((hashAndSalt.length) > 1) { java.lang.String hashedDB = hashAndSalt[0]; java.lang.String salt = hashAndSalt[1]; isValid = validatePassword(password, hashedDB, salt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5675/buggy-version/GLO18_WebService.src.WebService.Persistance.DBManager.java", "BodyUseAPI": [], "Fixed commit": "4ab788b718a1d0e918831fd64b6ca89e7a469010", "Url": "https://api.github.com/repos/GLO18-Group10/GLO18_Web-service", "Date": "2018-11-30T09:33:00Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSqlMapClientTemplate().queryForObject(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (null == (allCountB.getALL_AMOUNT())) allCountB.setALL_AMOUNT(new java.math.BigDecimal(\"0.00\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8315/buggy-version/src.com.cn.tbps.dao.impl.AuditDaoImpl.java", "BodyUseAPI": ["com.cn.tbps.dto.AuditStatCostDetailDto.setALL_AMOUNT(java.math.BigDecimal)"], "Fixed commit": "5c91b1062aad4ad0043781556aa81edbf1a81806", "Url": "https://api.github.com/repos/koubai/tbps_0812", "Date": "2018-12-16T14:25:43Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (value != null) com.highmobility.utils.ByteUtils.setBytes(bytes, value, 3);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9587/buggy-version/src.main.java.com.highmobility.autoapi.property.Property.java", "BodyUseAPI": [], "Fixed commit": "9b99bce5b6fea2a585b4db90319a17e9fc47a963", "Url": "https://api.github.com/repos/highmobility/hm-java-auto-api", "Date": "2018-11-07T02:40:02Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (textInputEditTextFancyName.equals(\"\")) { return; }else { if (data.child(\"fancyName\").getValue().toString().equals(textInputEditTextFancyName.getText().toString())) { android.widget.Toast.makeText(this, \"Fancy Name already exists\", Toast.LENGTH_SHORT).show(); }else { refToSpecificUser.child(\"fancyName\").setValue(textInputEditTextFancyName.getText().toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9478/buggy-version/app.src.main.java.com.lequiz.practice.EditProfile.java", "BodyUseAPI": ["android.support.design.widget.TextInputEditText.getText()", "data.child(\"fancyName\").getValue().toString().equals(textInputEditTextFancyName.getText().toString())", "textInputEditTextFancyName.getText().toString()", "refToSpecificUser.child(\"fancyName\").setValue(textInputEditTextFancyName.getText().toString())", "android.support.design.widget.TextInputEditText.getText()", "textInputEditTextFancyName.getText().toString()"], "Fixed commit": "4425f9a3e19aa595988fa831ff6885975c23621b", "Url": "https://api.github.com/repos/ramshekrana/Practice", "Date": "2018-11-27T01:19:06Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mViewPager) != null) { mViewPager.setCurrentItem(0, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4878/buggy-version/multilayout.src.main.java.com.iPATHow.multilayout.MultiLayout.java", "BodyUseAPI": [], "Fixed commit": "83d8fc86367ea42bfdd09f6bb5914e907da8eeb3", "Url": "https://api.github.com/repos/iPATHow/multilayout", "Date": "2018-11-10T10:19:11Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(table.isExpanded())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3834/buggy-version/app.src.main.java.de.rub.pherbers.behindthetables.adapter.RandomTableListAdapter.java", "BodyUseAPI": [], "Fixed commit": "db364fff3f15c16baf6938aab4a08f4312e3d5d2", "Url": "https://api.github.com/repos/pherbers/BehindTheTablesApp", "Date": "2018-12-26T11:01:12Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(filteredUuidList.isEmpty())) { if (((sqs.returnType) == (gov.nist.toolkit.valregmsg.registry.storedquery.generic.QueryReturnType.LEAFCLASS)) || ((sqs.returnType) == (gov.nist.toolkit.valregmsg.registry.storedquery.generic.QueryReturnType.LEAFCLASSWITHDOCUMENT))) { m = mc.loadRo(filteredUuidList); }else { m.mkObjectRefs(filteredUuidList); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7863/buggy-version/simulators.src.main.java.gov.nist.toolkit.fhir.simulators.sim.reg.sq.GetDocumentsSim.java", "BodyUseAPI": ["gov.nist.toolkit.registrymetadata.Metadata.mkObjectRefs(java.util.List<java.lang.String>)", "gov.nist.toolkit.fhir.simulators.sim.reg.store.MetadataCollection.loadRo(java.util.List<java.lang.String>)"], "Fixed commit": "4db863dbf78b230e09fa3a3b0bf67474609aee1c", "Url": "https://api.github.com/repos/usnistgov/iheos-toolkit2", "Date": "2018-12-20T23:42:04Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.http.client.methods.CloseableHttpResponse.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (entity != null) { responseString = org.apache.http.util.EntityUtils.toString(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4530/buggy-version/src.main.java.jenkins.plugins.slack.StandardSlackService.java", "BodyUseAPI": ["org.apache.http.util.EntityUtils.toString(org.apache.http.HttpEntity)"], "Fixed commit": "477f353804bcc953f0c2c7e68d0011e8243eeb8d", "Url": "https://api.github.com/repos/steven-foster/slack-plugin", "Date": "2018-12-04T11:45:19Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) instanceof java.nio.channels.ClosedChannelException) { org.apache.james.protocols.netty.BasicChannelUpstreamHandler.LOGGER.info(\"Unable to process request\", e.getCause()); }else { org.apache.james.protocols.netty.BasicChannelUpstreamHandler.LOGGER.error(\"Unable to process request\", e.getCause()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/588/buggy-version/protocols.netty.src.main.java.org.apache.james.protocols.netty.BasicChannelUpstreamHandler.java", "BodyUseAPI": ["org.jboss.netty.channel.ExceptionEvent.getCause()", "org.slf4j.Logger.error(java.lang.String,e.getCause())", "org.jboss.netty.channel.ExceptionEvent.getCause()", "org.slf4j.Logger.info(java.lang.String,e.getCause())"], "Fixed commit": "c9a2ebfb5f55439e963a56ded6703a4fceb4e6f5", "Url": "https://api.github.com/repos/aduprat/james-project", "Date": "2018-12-11T13:32:32Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == (wumpus.getX())) && (j == (wumpus.getY()))) { n.setWumpus(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7136/buggy-version/assignment3.src.wumpusWorld.Maze.java", "BodyUseAPI": [], "Fixed commit": "736d45955aef84d5cec0ea05349b2d845250e6c4", "Url": "https://api.github.com/repos/Matt3697/CSCI-446", "Date": "2018-12-03T01:46:27Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == (gold.getX())) && (j == (gold.getY()))) { n.setGold(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7136/buggy-version/assignment3.src.wumpusWorld.Maze.java", "BodyUseAPI": [], "Fixed commit": "736d45955aef84d5cec0ea05349b2d845250e6c4", "Url": "https://api.github.com/repos/Matt3697/CSCI-446", "Date": "2018-12-03T01:46:27Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (declarations.right.right.left.value.equals(\"identifier\")) pointsTo = declarations.right.right.left.left.value; else pointsTo = declarations.right.right.left.value;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2662/buggy-version/src.homework1.java", "BodyUseAPI": [], "Fixed commit": "721476d0fdfd482a9b3c92cd4a54ab131e58f1d3", "Url": "https://api.github.com/repos/AmitPeled/compilers_course_2018_a", "Date": "2018-11-17T16:32:32Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) != (Build.VERSION_CODES.O)) { setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4677/buggy-version/app.src.main.java.com.example.hy.recruitnew.LaunchActivity.java", "BodyUseAPI": [], "Fixed commit": "56b8ebf27071f60a742b631f33443afa25fd19fe", "Url": "https://api.github.com/repos/rain9155/RecruitNew", "Date": "2018-11-18T07:11:15Z"},
{"Line": "=>770", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sender) != null) && (sender.isRunning())) { token.internalTok.waitUntilSent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8776/buggy-version/org.eclipse.paho.client.mqttv3.src.main.java-templates.org.eclipse.paho.client.mqttv3.internal.ClientComms.java", "BodyUseAPI": [], "Fixed commit": "7e13cdff4a769b92e9270621abc6fe9270b3b4ab", "Url": "https://api.github.com/repos/eclipse/paho.mqtt.java", "Date": "2018-12-21T09:53:29Z"},
{"Line": "=>778", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sender) == null) || (!(sender.isRunning()))) { token.internalTok.notifyComplete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8776/buggy-version/org.eclipse.paho.client.mqttv3.src.main.java-templates.org.eclipse.paho.client.mqttv3.internal.ClientComms.java", "BodyUseAPI": [], "Fixed commit": "7e13cdff4a769b92e9270621abc6fe9270b3b4ab", "Url": "https://api.github.com/repos/eclipse/paho.mqtt.java", "Date": "2018-12-21T09:53:29Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((packages) == null) { valuePackage = 0.0; }else { valuePackage = packages.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/114/buggy-version/Warehouse.java", "BodyUseAPI": [], "Fixed commit": "c64b5ad01cdb981f43c781f41afda2fe6a447ae3", "Url": "https://api.github.com/repos/MonikaSzucs/Assignment3", "Date": "2018-12-03T18:30:37Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.ItemStack.getItemMeta()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(meta.hasLore())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6707/buggy-version/NeoProfessions.src.me.Neoblade298.NeoProfessions.Utilities.BlacksmithUtils.java", "BodyUseAPI": [], "Fixed commit": "d177712264ae66ead043a5f67ed4a699fdb257e2", "Url": "https://api.github.com/repos/Alexz1008/MLMCPlugins", "Date": "2018-12-29T21:17:34Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((boxDatabase.get(orderID)) != null) { for (int i = 0; i < (boxDatabase.get(orderID).length()); i++) { boxes.put(boxDatabase.get(orderID).getJSONObject(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2981/buggy-version/src.main.java.org.commitment_issues.delivery_agents.LoadingBayAgent.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, org.json.JSONArray>.get(java.lang.String)", "boxDatabase.get(orderID).length()", "org.json.JSONArray.put(boxDatabase.get(orderID).getJSONObject(i))", "java.util.HashMap<java.lang.String, org.json.JSONArray>.get(java.lang.String)", "boxDatabase.get(orderID).getJSONObject(int)"], "Fixed commit": "73681ac96305c2eebc926ba9366ba08855d7ebb2", "Url": "https://api.github.com/repos/HBRS-MAAS/ws18-project-commitment_issues", "Date": "2018-12-10T19:21:52Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mHightlightFixed)) { mEditText.setHint(mHightlightText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6339/buggy-version/app.src.main.java.com.mgcoco.hightlightedittext.HightLightEditText.java", "BodyUseAPI": [], "Fixed commit": "03428fc60df179e46ac72bf05f05eb144b8a13c0", "Url": "https://api.github.com/repos/mgcoco/HightLightEditText", "Date": "2018-11-28T05:54:50Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unimi.dsi.fastutil.objects.Object2IntMap<org.apache.uima.cas.text.AnnotationFS>.get(idxTokenOffset.get(annotation.getBegin()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (begin < highestEndTokenPositionObserved) { de.tudarmstadt.ukp.inception.recommendation.imls.opennlp.ner.OpenNlpNerRecommender.LOG.debug(\"Skipping overlapping annotation: [{}-{}, {}]\", begin, (end + 1), label); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2750/buggy-version/inception-imls-opennlp.src.main.java.de.tudarmstadt.ukp.inception.recommendation.imls.opennlp.ner.OpenNlpNerRecommender.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,int,int,java.lang.String)"], "Fixed commit": "52845bd89de6df17ca35a75db25d4cfdd7d9c107", "Url": "https://api.github.com/repos/inception-project/inception", "Date": "2018-12-11T13:40:17Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.components.api.properties.ComponentProperties.getProperties(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ps == null) { org.talend.daikon.properties.Properties conn = pros.getProperties(\"connection\"); if (conn != null) { ps = conn.getProperties(\"referencedComponent\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4817/buggy-version/main.plugins.org.talend.designer.core.generic.src.main.java.org.talend.designer.core.generic.service.GenericService.java", "BodyUseAPI": [], "Fixed commit": "a1f3efac71ea4f7b34539f17d0beea90ab621e42", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2018-11-30T03:20:41Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.ownHost.equals(queryRequest.getRequesterHost())) && ((this.ownPort) == (queryRequest.getGetRequesterPort()))) { lk.uom.cse14.dsd.query.QueryTask qt = this.queryTasks.get(queryRequest.getRequestID()); if (qt != null) { qt.setQueryResult(queryResponse.getQueryResultSet()); } }else { lk.uom.cse14.dsd.comm.request.Request oldRequest = oldRequestMap.get(response.getUuid()); if (oldRequest != null) { lk.uom.cse14.dsd.comm.response.QueryResponse response1 = new lk.uom.cse14.dsd.comm.response.QueryResponse(ownHost, ownPort, oldRequest.getSource(), oldRequest.getSourcePort()); response1.setUuid(oldRequest.getUuid()); response1.setHopCount(oldRequest.getHopCount()); scheduler.schedule(response1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5334/buggy-version/src.main.java.lk.uom.cse14.dsd.msghandler.QueryHandler.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, lk.uom.cse14.dsd.query.QueryTask>.get(queryRequest.getRequestID())", "lk.uom.cse14.dsd.comm.request.QueryRequest.getRequestID()"], "Fixed commit": "14abb71452ea809cc397cd428a4f399b3cceefa7", "Url": "https://api.github.com/repos/umstek/dsd", "Date": "2018-11-30T10:42:49Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((DAO.getProduct(name)) != null) { order.addToBasket(DAO.getProduct(name), amount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/731/buggy-version/src.main.java.Customer.java", "BodyUseAPI": ["Order.addToBasket(DAO.getProduct(name),int)", "DAO.getProduct(java.lang.String)"], "Fixed commit": "cd4c4cd224f3451dc26d62eb3ec79874a8b7eead", "Url": "https://api.github.com/repos/kamilBrodziak/onlineshop", "Date": "2018-11-13T08:43:37Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.next()) { string_results = rs.getString(\"comment\"); return string_results; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/245/buggy-version/MyWorld.src.application.DataConnection.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "a919eacc6a999bc14b533f265680131d72afdbd9", "Url": "https://api.github.com/repos/francescacallejas/MyPlace_ASE", "Date": "2018-12-15T04:31:40Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(handler instanceof org.springframework.web.method.HandlerMethod)) { return super.preHandle(request, response, handler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/921/buggy-version/emcoo-restful.src.main.java.com.emcoo.ef.restful.interceptor.TenantResolveInterceptor.java", "BodyUseAPI": ["org.springframework.web.servlet.handler.HandlerInterceptorAdapter.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object)"], "Fixed commit": "6c80e77450d198bd1dcd8714b9fd4e61b7c7eb9c", "Url": "https://api.github.com/repos/emcoo/emcoo-core", "Date": "2018-12-12T03:02:52Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (userDTO == null) { userDTO = requestUserInfo(token); if (userDTO != null) { com.me.user.client.LoginFilter.cache.put(token, userDTO); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5223/buggy-version/user-edge-service-client.src.main.java.com.me.user.client.LoginFilter.java", "BodyUseAPI": [], "Fixed commit": "4a7bbd733703d14390710263400cd742ff5fe033", "Url": "https://api.github.com/repos/SavorTheFlavor/microservice", "Date": "2018-12-21T13:08:31Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonNode.isBigDecimal()) { if ((schema == null) || ((schema.getType()) == (Schema.Type.DOUBLE))) { return jsonNode.asDouble(); }else if ((schema.getType()) == (Schema.Type.FLOAT)) { return ((float) (jsonNode.asDouble())); } }else if (jsonNode.isDouble()) { if ((schema == null) || ((schema.getType()) == (Schema.Type.DOUBLE))) { return jsonNode.asDouble(); }else if ((schema.getType()) == (Schema.Type.FLOAT)) { return ((float) (jsonNode.asDouble())); } }else if (jsonNode.isTextual()) { if (((schema == null) || ((schema.getType()) == (Schema.Type.STRING))) || ((schema.getType()) == (Schema.Type.ENUM))) { return jsonNode.asText(); }else if ((schema.getType()) == (Schema.Type.BYTES)) { return jsonNode.getTextValue().getBytes(org.apache.avro.util.internal.JacksonUtils.BYTES_CHARSET); }else if ((schema.getType()) == (Schema.Type.FIXED)) { return new org.apache.avro.generic.GenericData.Fixed(schema, jsonNode.getTextValue().getBytes(org.apache.avro.util.internal.JacksonUtils.BYTES_CHARSET)); } }else if (jsonNode.isArray()) { java.util.List l = new java.util.ArrayList(jsonNode.size()); for (org.codehaus.jackson.JsonNode node : jsonNode) { l.add(org.apache.avro.util.internal.JacksonUtils.toObject(node, (schema == null ? null : schema.getElementType()))); } return l; }else if (jsonNode.isObject()) { java.util.Map m = com.google.common.collect.Maps.newLinkedHashMapWithExpectedSize(jsonNode.size()); for (java.util.Iterator<java.lang.String> it = jsonNode.getFieldNames(); it.hasNext();) { java.lang.String key = it.next(); org.apache.avro.Schema s = null; if (schema == null) { s = null; }else if ((schema.getType()) == (Schema.Type.MAP)) { s = schema.getValueType(); }else if ((schema.getType()) == (Schema.Type.RECORD)) { s = schema.getField(key).schema(); } java.lang.Object value = org.apache.avro.util.internal.JacksonUtils.toObject(jsonNode.get(key), s); m.put(key, value); } return m; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2860/buggy-version/lang.java.avro.src.main.java.org.apache.avro.util.internal.JacksonUtils.java", "BodyUseAPI": ["com.google.common.collect.Maps.newLinkedHashMapWithExpectedSize(jsonNode.size())", "org.codehaus.jackson.JsonNode.isArray()", "org.codehaus.jackson.JsonNode.asDouble()", "org.codehaus.jackson.JsonNode.getTextValue()", "org.codehaus.jackson.JsonNode.asDouble()", "org.codehaus.jackson.JsonNode.asText()", "org.apache.avro.util.internal.JacksonUtils.toObject(jsonNode.get(key),org.apache.avro.Schema)", "org.codehaus.jackson.JsonNode.asDouble()", "org.codehaus.jackson.JsonNode.asDouble()", "org.codehaus.jackson.JsonNode.size()", "org.codehaus.jackson.JsonNode.isTextual()", "org.codehaus.jackson.JsonNode.isDouble()", "org.codehaus.jackson.JsonNode.getFieldNames()", "jsonNode.getTextValue().getBytes(java.nio.charset.Charset)", "org.codehaus.jackson.JsonNode.isObject()", "org.codehaus.jackson.JsonNode.get(java.lang.String)", "jsonNode.getTextValue().getBytes(java.nio.charset.Charset)", "org.codehaus.jackson.JsonNode.size()", "org.codehaus.jackson.JsonNode.getTextValue()"], "Fixed commit": "cbdc9cdff38ea44fe9c8fd02d1e28d5421c39ed2", "Url": "https://api.github.com/repos/zolyfarkas/avro", "Date": "2018-11-11T14:31:09Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonNode.isBoolean()) { return jsonNode.asBoolean(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2860/buggy-version/lang.java.avro.src.main.java.org.apache.avro.util.internal.JacksonUtils.java", "BodyUseAPI": ["org.codehaus.jackson.JsonNode.asBoolean()"], "Fixed commit": "cbdc9cdff38ea44fe9c8fd02d1e28d5421c39ed2", "Url": "https://api.github.com/repos/zolyfarkas/avro", "Date": "2018-11-11T14:31:09Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jsonNode.isNull()) { return org.apache.avro.JsonProperties.NULL_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2860/buggy-version/lang.java.avro.src.main.java.org.apache.avro.util.internal.JacksonUtils.java", "BodyUseAPI": [], "Fixed commit": "cbdc9cdff38ea44fe9c8fd02d1e28d5421c39ed2", "Url": "https://api.github.com/repos/zolyfarkas/avro", "Date": "2018-11-11T14:31:09Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.address.logic.parser.ArgumentTokenizer.tokenize(java.lang.String,seedu.address.logic.parser.CliSyntax.PREFIX_NAME,seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION,seedu.address.logic.parser.CliSyntax.PREFIX_DATE,seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE,seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE,seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION).isPresent()) { editEventDescriptor.setDescription(seedu.address.logic.parser.ParserUtil.parseDescription(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION).get())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5407/buggy-version/src.main.java.seedu.address.logic.parser.EditEventCommandParser.java", "BodyUseAPI": ["argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION).get()", "seedu.address.logic.commands.EditEventCommand.EditEventDescriptor.setDescription(seedu.address.logic.parser.ParserUtil.parseDescription(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION).get()))", "seedu.address.logic.parser.ArgumentMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION)", "seedu.address.logic.parser.ParserUtil.parseDescription(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION).get())"], "Fixed commit": "66328ef53515ac856afb30bdf02636122d46d888", "Url": "https://api.github.com/repos/CS2113-AY1819S1-T16-2/main", "Date": "2018-11-01T11:03:26Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mWifiRttManager) != null) { android.net.wifi.rtt.RangingRequest rangingRequest = new android.net.wifi.rtt.RangingRequest.Builder().addAccessPoints(mcScanResults).build(); mWifiRttManager.startRanging(rangingRequest, getApplication().getMainExecutor(), mRttRangingResultCallback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3818/buggy-version/Application.src.main.java.com.example.android.wifirttscan.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8c5e4b9db72a9a201876f507b1c22fbd5ce31be4", "Url": "https://api.github.com/repos/hywook4/android-WifiRttScan", "Date": "2018-12-30T15:18:58Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (goodSave) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1420/buggy-version/app.src.main.java.com.example.markqueltaylor.macinventoryapp.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "4d0aa5ba301d26c155d2a9fc6cfc2342ab912d18", "Url": "https://api.github.com/repos/TheLegendMac/MacInventoryApp", "Date": "2018-11-11T05:42:55Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (itemCheckBox.isChecked()) { mDeleteItems.add(current); mClickListener.onItemClick(mDeleteItems); }else { mDeleteItems.remove(current); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6519/buggy-version/app.src.main.java.com.poc.android.myhospitals.todolist.TaskItemAdapter.java", "BodyUseAPI": [], "Fixed commit": "c4a802991fcfce9e8814bbc801e751d5d11d4ecf", "Url": "https://api.github.com/repos/kitomiyu/practice-hospitalList", "Date": "2018-12-25T16:03:55Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p.getFinanciador().length()) == 0) throw new framework.model.BadAttributeException(\"Contato de financiador incompleto\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5437/buggy-version/Framework.src.main.java.com.lab.data.service.ProjetoGeologiaService.java", "BodyUseAPI": [], "Fixed commit": "808943dd9efba5cbb0235432462744bf136e4f48", "Url": "https://api.github.com/repos/victoragnez/DataLAE", "Date": "2018-11-29T03:48:36Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isCancelled()) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6396/buggy-version/app.src.main.java.com.example.semin.cooklock.CookingTask.java", "BodyUseAPI": [], "Fixed commit": "2f45b499c4787a75ce00c23413b72c14af83960b", "Url": "https://api.github.com/repos/hero526/cooklock", "Date": "2018-11-23T12:53:52Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player1Turn) { app.gui.Print.actionMessage((((player1Card.getName()) + \" HAS ATTACKED \") + (player2Card.getName()))); }else { app.gui.Print.actionMessage((((player2Card.getName()) + \" HAS ATTACKED \") + (player1Card.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1096/buggy-version/src.main.java.app.controllers.Game.java", "BodyUseAPI": [], "Fixed commit": "3b671640175a42ce9c4f862282d36df2937e0fbf", "Url": "https://api.github.com/repos/Schonis86/cardGame", "Date": "2018-11-05T12:03:33Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((productModel.getBase64ImageString()) != null) { imageByte = org.apache.tomcat.util.codec.binary.Base64.decodeBase64(productModel.getBase64ImageString()); productModel.setImage(imageByte); }else { productModel.setImage(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8392/buggy-version/src.main.java.response.soft.services.ProductService.java", "BodyUseAPI": ["response.soft.model.ProductModel.setImage(<nulltype>)", "org.apache.tomcat.util.codec.binary.Base64.decodeBase64(productModel.getBase64ImageString())", "response.soft.model.ProductModel.setImage(byte[])", "response.soft.model.ProductModel.getBase64ImageString()"], "Fixed commit": "02bea5a5c662d0378894753458e7ac4af361e851", "Url": "https://api.github.com/repos/rocky-bgta/response-inventory-system", "Date": "2018-12-10T17:42:25Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((productModel.getBase64ImageString()) != null) && ((productModel.getBase64ImageString().length()) > 0)) { imageByte = org.apache.tomcat.util.codec.binary.Base64.decodeBase64(productModel.getBase64ImageString()); productModel.setImage(imageByte); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8392/buggy-version/src.main.java.response.soft.services.ProductService.java", "BodyUseAPI": ["response.soft.model.ProductModel.getBase64ImageString()", "response.soft.model.ProductModel.setImage(byte[])", "org.apache.tomcat.util.codec.binary.Base64.decodeBase64(productModel.getBase64ImageString())"], "Fixed commit": "02bea5a5c662d0378894753458e7ac4af361e851", "Url": "https://api.github.com/repos/rocky-bgta/response-inventory-system", "Date": "2018-12-10T17:42:25Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((g.V()) < 1) || ((g.E()) < 2)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7600/buggy-version/code.EulerianCycle.java", "BodyUseAPI": [], "Fixed commit": "4dc255a695b6a380dc72b99409cbbaa5b542a071", "Url": "https://api.github.com/repos/YangXiaoHei/Algorithms", "Date": "2018-11-02T02:44:07Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.zzt93.syncer.config.consumer.input.Repo.getTableRow(data.getRepo(),data.getEntity())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tableRow == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3704/buggy-version/syncer-core.src.main.java.com.github.zzt93.syncer.producer.dispatch.mongo.JsonKeyFilter.java", "BodyUseAPI": [], "Fixed commit": "f3e9b8d64dffed696149e2f35d7a0699c438438e", "Url": "https://api.github.com/repos/zzt93/syncer", "Date": "2018-12-10T09:12:40Z"},
{"Line": "=>641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((row) != 1) && ((column) != 1)) { gameInProgress = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5912/buggy-version/src.SpinController.java", "BodyUseAPI": [], "Fixed commit": "a22c0e4b7eca43b59e5da5d67a329cd04858764e", "Url": "https://api.github.com/repos/dolszewski/SpinPossible", "Date": "2018-12-05T07:55:43Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) != null) { me.RockinChaos.itemjoin.handlers.ServerHandler.sendDebugMessage(\"[SQLITE] Failed to close database connection.\"); if (me.RockinChaos.itemjoin.handlers.ServerHandler.hasDebuggingMode()) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2052/buggy-version/src.me.RockinChaos.itemjoin.utils.sqlite.Database.java", "BodyUseAPI": ["java.lang.Exception.printStackTrace()"], "Fixed commit": "6cebd0c54703b7b69c28983e6153c6454bd5e93f", "Url": "https://api.github.com/repos/RockinChaos/ItemJoin", "Date": "2018-12-15T09:07:33Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["janbingemann.SudokuGrid.setField(field.getX(),field.getY(),int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!success) { java.util.logging.Logger.getGlobal().severe(\"Internal error\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8301/buggy-version/src.main.java.janbingemann.SudokuSolver.java", "BodyUseAPI": [], "Fixed commit": "c3cd8eb10e48fd12db0db74c86cdb8bc470ad183", "Url": "https://api.github.com/repos/JanNB97/Sudoku", "Date": "2018-12-03T20:48:26Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p != null) return new lombok.javac.apt.Javac9BaseFileObjectWrapper(fileManager, p, fileObject);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8271/buggy-version/src.core.lombok.javac.apt.LombokFileObjects.java", "BodyUseAPI": [], "Fixed commit": "2c0ec9315577cbc8d406aca2b3f3b6ad233f4f35", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2018-11-05T20:40:30Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.springframework.util.StringUtils.isEmpty(java.lang.System.getProperties().getProperty(SentinelDataSourceConstants.NACOS_DATASOURCE_ENDPOINT)))) { if (dataSourceName.contains(SentinelConstants.FLOW_DATASOURCE_NAME)) { com.alibaba.csp.sentinel.slots.block.flow.FlowRuleManager.register2Property(newDataSource.getProperty()); }else if (dataSourceName.contains(SentinelConstants.DEGRADE_DATASOURCE_NAME)) { com.alibaba.csp.sentinel.slots.block.degrade.DegradeRuleManager.register2Property(newDataSource.getProperty()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7544/buggy-version/spring-cloud-alibaba-sentinel.src.main.java.org.springframework.cloud.alibaba.sentinel.custom.SentinelDataSourceHandler.java", "BodyUseAPI": [], "Fixed commit": "7e2b312fdd6f5d2858832c7d3aaa0a0ef1c3f15c", "Url": "https://api.github.com/repos/fangjian0423/spring-cloud-alibaba", "Date": "2018-12-19T15:46:12Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((this.openDeck[(o - 1)]) == null)) { this.openDeck[o] = this.openDeck[(o - 1)]; java.lang.System.out.println(o); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3935/buggy-version/src.leberkaes.commonClasses.GameBoard.java", "BodyUseAPI": ["java.io.PrintStream.println(int)"], "Fixed commit": "800fa7b6c62db5ef8183cd91e3f2f61175f17004", "Url": "https://api.github.com/repos/dominikholliger/majesty", "Date": "2018-12-15T14:09:14Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.scenes.game.entities.CarrotBullet.getBlockSet()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b.get(currentMap.mapAccess(currentMap.atX(((transform.x) + (box.x))), currentMap.atY((((transform.y) + (box.y)) + (box.height))))).solid) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4914/buggy-version/src.game.scenes.game.entities.CarrotBullet.java", "BodyUseAPI": [], "Fixed commit": "4951343ca94c09ba5642ae2bb7e235a5b553c921", "Url": "https://api.github.com/repos/gatcuddy/LD43---Melon-Squad", "Date": "2018-12-03T02:59:43Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.scenes.game.entities.CarrotBullet.getBlockSet()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b.get(currentMap.mapAccess(currentMap.atX((((transform.x) + (box.x)) + (box.width))), currentMap.atY(((transform.y) + (box.y))))).solid) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4914/buggy-version/src.game.scenes.game.entities.CarrotBullet.java", "BodyUseAPI": [], "Fixed commit": "4951343ca94c09ba5642ae2bb7e235a5b553c921", "Url": "https://api.github.com/repos/gatcuddy/LD43---Melon-Squad", "Date": "2018-12-03T02:59:43Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.scenes.game.entities.CarrotBullet.getBlockSet()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b.get(currentMap.mapAccess(currentMap.atX((((transform.x) + (box.x)) + (box.width))), currentMap.atY((((transform.y) + (box.y)) + (box.height))))).solid) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4914/buggy-version/src.game.scenes.game.entities.CarrotBullet.java", "BodyUseAPI": [], "Fixed commit": "4951343ca94c09ba5642ae2bb7e235a5b553c921", "Url": "https://api.github.com/repos/gatcuddy/LD43---Melon-Squad", "Date": "2018-12-03T02:59:43Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fenlan.spring.shop.DAO.RequestDAO.getOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (null != (shopService.findByUserId(request.getUser().getId()))) { throw new java.lang.Exception(\"this person has a shop\"); }else return requestDAO.save(request);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5120/buggy-version/src.main.java.com.fenlan.spring.shop.service.RequestService.java", "BodyUseAPI": ["com.fenlan.spring.shop.DAO.RequestDAO.save(com.fenlan.spring.shop.service.Request)"], "Fixed commit": "ab0ca9c20c0d4dfdcdcf425fa567b1749b30807e", "Url": "https://api.github.com/repos/PMC6/online-store-back-end", "Date": "2018-12-11T06:16:55Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Map.findRoom(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (room != null) { allRoomIds.add(room.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3319/buggy-version/src.RoomConnectivityVerifier.java", "BodyUseAPI": ["Room.getId()", "java.util.HashSet<java.lang.Integer>.add(room.getId())"], "Fixed commit": "01f041029a5accb5849cb0d0e92340934d098676", "Url": "https://api.github.com/repos/cubangeorge/CS321-2018F-004", "Date": "2018-11-13T15:58:01Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.jovenpableo.friendtag.ProfileActivity.getSupportActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (actionBar != null) actionBar.hide();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3863/buggy-version/app.src.main.java.com.github.jovenpableo.friendtag.ProfileActivity.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.hide()"], "Fixed commit": "d7ebc810450605e5dffae2ce3d165311cc427ecf", "Url": "https://api.github.com/repos/jpableo688/Tag", "Date": "2018-12-06T17:45:49Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.getStackTrace()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (stackElement == (stackElements[0])) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/470/buggy-version/src.main.java.io.github.vhoyon.vramework.Framework.java", "BodyUseAPI": [], "Fixed commit": "718a1b4ec3f86bca8d2cf4219a6e77ac9efd96e6", "Url": "https://api.github.com/repos/Vhoyon/Vramework", "Date": "2018-12-08T04:29:16Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldLoadDefaultModules) { allErrors.addAll(defaultModuleErrors); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/470/buggy-version/src.main.java.io.github.vhoyon.vramework.Framework.java", "BodyUseAPI": [], "Fixed commit": "718a1b4ec3f86bca8d2cf4219a6e77ac9efd96e6", "Url": "https://api.github.com/repos/Vhoyon/Vramework", "Date": "2018-12-08T04:29:16Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (line.contains(\"comic-title-name\")) { java.util.regex.Matcher m = com.mareksebera.simpledilbert.utilities.FindUrls.title_match_pattern.matcher(line); if (m.matches()) { foundTitle = m.group(1); hasFoundTitle = true; } }else if ((!hasFoundTitle) && (line.contains(\"twitter:title\"))) { java.util.regex.Matcher m = com.mareksebera.simpledilbert.utilities.FindUrls.twitter_title_match_pattern.matcher(line); if (m.matches()) { foundTitle = m.group(1); hasFoundTitle = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1226/buggy-version/src.main.java.com.mareksebera.simpledilbert.utilities.FindUrls.java", "BodyUseAPI": ["java.util.regex.Pattern.matcher(java.lang.String)", "java.util.regex.Pattern.matcher(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "1246c1e7de0fdf9092c93df7affce414fe2ed541", "Url": "https://api.github.com/repos/smarek/Simple-Dilbert", "Date": "2018-12-18T11:08:23Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nutrients.containsKey(name)) { return nutrients.get(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5850/buggy-version/FoodItem.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Double>.get(java.lang.String)"], "Fixed commit": "4ac96ccb7474cbe3cfae21b5ed063cae79c7c672", "Url": "https://api.github.com/repos/bhclarke/Food-Truck", "Date": "2018-11-22T23:53:59Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (name != null) { nutrients.put(name, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5850/buggy-version/FoodItem.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Double>.put(java.lang.String,double)"], "Fixed commit": "4ac96ccb7474cbe3cfae21b5ed063cae79c7c672", "Url": "https://api.github.com/repos/bhclarke/Food-Truck", "Date": "2018-11-22T23:53:59Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((((name == null) || (location == null)) || (value == null)) || (date == null)) || (description == null)) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8097/buggy-version/app.src.main.java.com.length6array.donationtracker2.Donation.java", "BodyUseAPI": [], "Fixed commit": "7b34b8662394fc3570e7a4da8e3c4c1c29f920f7", "Url": "https://api.github.com/repos/Length6Array/DonationTracker2", "Date": "2018-11-15T04:39:47Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (invalidLocation) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8097/buggy-version/app.src.main.java.com.length6array.donationtracker2.Donation.java", "BodyUseAPI": [], "Fixed commit": "7b34b8662394fc3570e7a4da8e3c4c1c29f920f7", "Url": "https://api.github.com/repos/Length6Array/DonationTracker2", "Date": "2018-11-15T04:39:47Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((documentSnapshot.exists()) && ((documentSnapshot.getData()) != null)) { friends = ((java.util.ArrayList) (documentSnapshot.getData().get(\"followed\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3526/buggy-version/app.src.main.java.com.example.a15862.mytraveldiary.MomentsActivity.java", "BodyUseAPI": ["com.google.firebase.firestore.DocumentSnapshot.getData()", "documentSnapshot.getData().get(java.lang.String)"], "Fixed commit": "09b1ef92802b1c1e6d06316f3587e33606c23a38", "Url": "https://api.github.com/repos/dozzzy/MyTravelDiary", "Date": "2018-12-10T21:40:19Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (response.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5890/buggy-version/src.main.java.com.liambeckman.removemywaste.centers.java", "BodyUseAPI": [], "Fixed commit": "9d032fd2f954131e5e4529ce01924aef9f1ac42b", "Url": "https://api.github.com/repos/cs361-group24/RemoveMyWaste-android", "Date": "2018-11-22T06:58:57Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cacheKey) != null) { com.crescentflare.bitletsynchronizer.cache.BitletCacheEntry<java.lang.Object> cacheEntry = bitletSynchronizer.getCacheEntry(cacheKey, java.lang.Object.class); skipsLoading = ((!(forced)) && ((cacheEntry.getBitletData()) != null)) && (!(cacheEntry.isExpired())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3441/buggy-version/BitletSynchronizerAndroid.BitletSynchronizerLib.src.main.java.com.crescentflare.bitletsynchronizer.operation.BitletOperationLoadItem.java", "BodyUseAPI": [], "Fixed commit": "817a9a18bcb94d35054560ca4af9d62988452089", "Url": "https://api.github.com/repos/crescentflare/BitletSynchronizer", "Date": "2018-11-05T20:56:07Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAutoCompleteList) != null) { android.widget.ArrayAdapter<?> adapter = new com.romanpulov.violetnote.view.AutoCompleteArrayAdapter(mInputEditText.getContext(), R.layout.dropdown_button_item, mAutoCompleteList.toArray(new java.lang.String[0]), this); mInputEditText.setAdapter(adapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4341/buggy-version/app.src.main.java.com.romanpulov.violetnote.view.helper.InputActionHelper.java", "BodyUseAPI": [], "Fixed commit": "ebc8f84188f74b6750b5645ba2c58efe030f5cb5", "Url": "https://api.github.com/repos/MrZeRo2000/violetnote-android", "Date": "2018-12-26T15:33:25Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(m_eos)) { m_eos = true; m_cause = cause; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4881/buggy-version/src.main.java.marmot.protobuf.ChunkInputStream.java", "BodyUseAPI": [], "Fixed commit": "c32fc12a0c131cc925026fd21dbf4300aadd69de", "Url": "https://api.github.com/repos/kwlee0220/marmot.common", "Date": "2018-12-05T07:05:55Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.res.Resources.getIdentifier(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dictId == 0) { try { dictId = ri.activityInfo.metaData.getInt(com.voraindustries.hackerskeyboardneon.PluginManager.SOFTKEYBOARD_DICT_RESOURCE_METADATA_NAME); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9699/buggy-version/app.src.main.java.com.voraindustries.hackerskeyboardneon.PluginManager.java", "BodyUseAPI": [], "Fixed commit": "31bc273d8ff5be03ccee5d1abec4dec1e3d04d76", "Url": "https://api.github.com/repos/TheRealPSV/hackerskeyboard", "Date": "2018-12-18T11:18:21Z"},
{"Line": "=>742", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!skipVHDL) { if (!(guiDRC())) { return false; } double frequency = GetTickfrequency(); if (!(guiMapDesign(CircuitName))) { return false; } if (!(writeHDL(circuitsList.getSelectedItem().toString(), frequency))) { return false; } if (!(MapPannel.isDoneAssignment())) { com.cburch.logisim.fpga.fpgagui.MyReporter.AddError(\"Download to board canceled\"); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1140/buggy-version/src.main.java.com.cburch.logisim.fpga.fpgagui.FPGACommanderGui.java", "BodyUseAPI": [], "Fixed commit": "42d10854f60f8b889b918fa47500bd0875022fda", "Url": "https://api.github.com/repos/BFH-ktt1/logisim-evolution", "Date": "2018-12-24T12:08:49Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (desc.endsWith(\"\\r\")) { desc = desc.substring(0, ((desc.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9233/buggy-version/src.main.java.com.sunil.workutils.controller.DsrGenerator.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "81e097144d75d48a47b3494ce4da7e5273598aa4", "Url": "https://api.github.com/repos/sunilkumarsahu/work-utils", "Date": "2018-11-22T14:51:49Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cl.endsWith(\"\\r\")) { cl = cl.substring(0, ((cl.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9233/buggy-version/src.main.java.com.sunil.workutils.controller.DsrGenerator.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "81e097144d75d48a47b3494ce4da7e5273598aa4", "Url": "https://api.github.com/repos/sunilkumarsahu/work-utils", "Date": "2018-11-22T14:51:49Z"},
{"Line": "=>1505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((getListOfFilesFragment().getNoOfItems()) == 2) || (result.isException())) { showSnackMessage(com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.getResultMessage(result, operation, getResources())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/51/buggy-version/app.src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.getResultMessage(com.owncloud.android.lib.common.operations.RemoteOperationResult,com.owncloud.android.operations.RemoveFileOperation,getResources())", "com.owncloud.android.ui.activity.FileDisplayActivity.showSnackMessage(com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.getResultMessage(result, operation, getResources()))"], "Fixed commit": "916c4cba25ebd48d0ebc5feba35fcb0fc84742e0", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-11-18T04:51:52Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["love.wangqi.context.ContextUtil.getRequestHolder(io.netty.channel.Channel)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (requestHolder != null) { love.wangqi.filter.SendErrorFilter.logger.error((((((\"Route Id: \" + (requestHolder.route.getId())) + \" Route Url: \") + (requestHolder.route.getMapUrl())) + \" \") + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9724/buggy-version/src.main.java.love.wangqi.filter.SendErrorFilter.java", "BodyUseAPI": ["requestHolder.route.getId()", "org.slf4j.Logger.error((((((\"Route Id: \" + (requestHolder.route.getId())) + \" Route Url: \") + (requestHolder.route.getMapUrl())) + \" \") + (e.getMessage())),java.lang.Exception)", "requestHolder.route.getMapUrl()"], "Fixed commit": "20b34c75db357024613886662df8291c4ae45379", "Url": "https://api.github.com/repos/wangqifox/api-gateway-core", "Date": "2018-12-04T08:34:38Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getDeclaredField(name)) != null) { field = c.getDeclaredField(name); me.bradleysteele.commons.util.reflect.Reflection.setAccessible(field, true); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7532/buggy-version/src.main.java.me.bradleysteele.commons.util.reflect.Reflection.java", "BodyUseAPI": ["java.lang.Class<?>.getDeclaredField(java.lang.String)"], "Fixed commit": "6e01063838ba03686478b690b81a3decdd92c150", "Url": "https://api.github.com/repos/BradleySteele/BCommons", "Date": "2018-11-06T22:06:06Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ProfileIO.addNewProfile(Profile)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!unique) { javax.swing.JOptionPane.showMessageDialog(rootPane, \"That profile already exists, please choose another name\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5257/buggy-version/src.main.java.mainGUI.java", "BodyUseAPI": [], "Fixed commit": "675f614483e9765622baef5e6fb64e1d7ae99cdb", "Url": "https://api.github.com/repos/JohnMoen90/BrassObelisk", "Date": "2018-12-18T06:43:26Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.app.x206397.DoxSupport.AWS.OnCallData.OnCallScheduleActivity.3.findViewById(R.id.sundayProgressBar)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (load != null) { load.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4149/buggy-version/app.DoxSupport.src.main.java.com.app.x206397.DoxSupport.AWS.OnCallData.OnCallScheduleActivity.java", "BodyUseAPI": ["android.widget.ProgressBar.setVisibility(View.GONE)"], "Fixed commit": "b1022074df6dc3d79d05a7429c888a9e52c83b40", "Url": "https://api.github.com/repos/Ktawde/DoxSupport", "Date": "2018-11-22T16:05:30Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.app.x206397.DoxSupport.AWS.OnCallData.OnCallScheduleActivity.3.findViewById(R.id.saturdayProgressBar)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (load != null) { load.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4149/buggy-version/app.DoxSupport.src.main.java.com.app.x206397.DoxSupport.AWS.OnCallData.OnCallScheduleActivity.java", "BodyUseAPI": ["android.widget.ProgressBar.setVisibility(View.GONE)"], "Fixed commit": "b1022074df6dc3d79d05a7429c888a9e52c83b40", "Url": "https://api.github.com/repos/Ktawde/DoxSupport", "Date": "2018-11-22T16:05:30Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkWin(0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2927/buggy-version/eclipse-workspace.BTSGames.Games.TicTacToe.TicTacToeGame.java", "BodyUseAPI": [], "Fixed commit": "eca07c978da70ec43348f49d9b202409923106ee", "Url": "https://api.github.com/repos/NicholasZidel/Team-Software-Project", "Date": "2018-11-12T19:10:41Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkWin(1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2927/buggy-version/eclipse-workspace.BTSGames.Games.TicTacToe.TicTacToeGame.java", "BodyUseAPI": [], "Fixed commit": "eca07c978da70ec43348f49d9b202409923106ee", "Url": "https://api.github.com/repos/NicholasZidel/Team-Software-Project", "Date": "2018-11-12T19:10:41Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFragmentManager().findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (prev != null) { ft.remove(prev); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2417/buggy-version/app.src.main.java.com.project.uberauto.MapFragment.java", "BodyUseAPI": ["android.support.v4.app.FragmentTransaction.remove(android.support.v4.app.Fragment)"], "Fixed commit": "0832185f84fc36d76aa00cd993c35eeef4c6c500", "Url": "https://api.github.com/repos/maheshmnj/Project-Uber-Auto", "Date": "2018-11-22T15:52:59Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(spacesMatch.matches())) { data = new java.lang.StringBuilder(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7053/buggy-version/ConfigLib-Core.src.main.java.de.exlll.configlib.configs.yaml.YamlSource.java", "BodyUseAPI": [], "Fixed commit": "6f84150b297a168051d7ecb48971062cd9909092", "Url": "https://api.github.com/repos/Draww/ConfigLib", "Date": "2018-12-03T13:44:10Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.springframework.util.StringUtils.isEmpty(recordQueryVO.getOpenId())) { return responseJson; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3566/buggy-version/src.main.java.cn.PATHoyanol.sticker.controller.StickerController.java", "BodyUseAPI": [], "Fixed commit": "edbcddc5c89deb4580c493c00d70ddb79615fab4", "Url": "https://api.github.com/repos/yanfeng9507/sticker", "Date": "2018-11-02T09:13:06Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirst) { refCache.put(field, ref); idCache.put(field, new java.util.HashSet<java.lang.String>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9619/buggy-version/statistics.src.main.java.com.yonyou.iuap.baseservice.statistics.util.SearchParamUtil.java", "BodyUseAPI": [], "Fixed commit": "b49fb8a59205ec1a9f3e6bf354b723e3bc5ced6d", "Url": "https://api.github.com/repos/yonyou-iuap/iuap-pap-baseservice", "Date": "2018-12-05T08:33:25Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (timeAndDate[0].contains(\"-\")) splitBy = \"-\"; else splitBy = \"/\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7108/buggy-version/src.GIS.MetaData.java", "BodyUseAPI": [], "Fixed commit": "4c211fbd533404d1fa323ea2af4436dfd1a76801", "Url": "https://api.github.com/repos/EvgenyVendrov/OOP_Assignment2", "Date": "2018-12-02T09:16:56Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getColor()) != null) csd.addPolygon(polygon, c.getThickness(), c.getColor(), false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8251/buggy-version/src.main.java.de.neemann.digital.draw.shapes.custom.svg.SvgImporter.java", "BodyUseAPI": ["de.neemann.digital.draw.shapes.custom.svg.Context.getColor()", "de.neemann.digital.draw.shapes.custom.svg.Context.getThickness()", "de.neemann.digital.draw.shapes.custom.CustomShapeDescription.addPolygon(de.neemann.digital.draw.shapes.custom.svg.Polygon,c.getThickness(),c.getColor(),boolean)"], "Fixed commit": "caf8f6c2d39b230e60112b1611f32247eadde55c", "Url": "https://api.github.com/repos/hneemann/Digital", "Date": "2018-11-30T19:59:04Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getFilled()) != null) csd.addPolygon(polygon, c.getThickness(), c.getFilled(), true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8251/buggy-version/src.main.java.de.neemann.digital.draw.shapes.custom.svg.SvgImporter.java", "BodyUseAPI": ["de.neemann.digital.draw.shapes.custom.CustomShapeDescription.addPolygon(de.neemann.digital.draw.shapes.custom.svg.Polygon,c.getThickness(),c.getFilled(),boolean)", "de.neemann.digital.draw.shapes.custom.svg.Context.getThickness()", "de.neemann.digital.draw.shapes.custom.svg.Context.getFilled()"], "Fixed commit": "caf8f6c2d39b230e60112b1611f32247eadde55c", "Url": "https://api.github.com/repos/hneemann/Digital", "Date": "2018-11-30T19:59:04Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputValue instanceof java.util.UUID) { result = inputValue; }else { id = new java.lang.String(((java.lang.String) (inputValue))); id = id.substring(1, ((id.length()) - 1)); result = java.util.UUID.fromString(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2589/buggy-version/src.main.java.response.soft.Utils.AppUtils.java", "BodyUseAPI": [], "Fixed commit": "6df1c1857ff68863f504c781112853b85e1305e2", "Url": "https://api.github.com/repos/rocky-bgta/response-inventory-system", "Date": "2018-12-14T14:12:14Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gFeatures.getInstance().getProxyServer().getServer(mgs).isPresent())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3570/buggy-version/src.main.java.net.estinet.gFeatures.Feature.MinigameAssister.SendAll.java", "BodyUseAPI": [], "Fixed commit": "c296aeb02326cff06fbd4fddb290e024a3c68fe5", "Url": "https://api.github.com/repos/EstiNet/gFeaturesBungee", "Date": "2018-12-09T23:02:18Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end) sample.SorryClient.sentThisTurn = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8195/buggy-version/src.sample.SorryClient.java", "BodyUseAPI": [], "Fixed commit": "60cb3450b22c7c755adb8f1eb3c3d95c0debe1ec", "Url": "https://api.github.com/repos/logankarney/Sorry", "Date": "2018-12-07T01:50:32Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sample.SorryClient.sentThisTurn)) { sample.SorryClient.controller.updateClient(updates); sample.SorryClient.sentThisTurn = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8195/buggy-version/src.sample.SorryClient.java", "BodyUseAPI": [], "Fixed commit": "60cb3450b22c7c755adb8f1eb3c3d95c0debe1ec", "Url": "https://api.github.com/repos/logankarney/Sorry", "Date": "2018-12-07T01:50:32Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player1Turn) { app.gui.Print.actionMessage((((player1Card.getName()) + \" HAS ATTACKED \") + (player2Card.getName()))); }else { app.gui.Print.actionMessage((((player2Card.getName()) + \" HAS ATTACKED \") + (player1Card.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/747/buggy-version/src.main.java.app.controllers.Game.java", "BodyUseAPI": [], "Fixed commit": "14d8bfbb423e577f9226bb301e635ed4508d8b7d", "Url": "https://api.github.com/repos/Schonis86/cardGame", "Date": "2018-11-05T12:08:05Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeStamp == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/507/buggy-version/src.main.java.com.today.eventbus.utils.CommonUtil.java", "BodyUseAPI": [], "Fixed commit": "8e77716b3796c1c342d27e5b67d06f8925351f98", "Url": "https://api.github.com/repos/dapeng-soa/dapeng-event-bus", "Date": "2018-11-29T09:53:17Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (distance == (java.lang.Float.MAX_VALUE)) return ((float) (300));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/112/buggy-version/app.src.main.java.com.example.shashank_pc.trial.classes.Algorithm.java", "BodyUseAPI": [], "Fixed commit": "035efb39a7bdee6682dd75b4e69b776ffd89bc94", "Url": "https://api.github.com/repos/ShashankAnantharam/HelloWorldTrial", "Date": "2018-11-16T17:43:22Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (object instanceof java.lang.String) { result = new org.openmrs.module.webservices.rest.SimpleObject().add(\"uuid\", object); }else if (object != null) { org.openmrs.module.sync2.api.model.enums.CategoryEnum cat = org.openmrs.module.sync2.api.model.enums.CategoryEnum.getByCategory(category); if (SyncConstants.FHIR_CLIENT.equals(clientName)) { org.openmrs.module.fhir.api.helper.FHIRClientHelper helper = new org.openmrs.module.fhir.api.helper.FHIRClientHelper(); result = helper.convertToOpenMrsObject(object, category); result = org.openmrs.module.webservices.rest.web.ConversionUtil.convertToRepresentation(result, Representation.FULL); }else if (org.openmrs.module.sync2.api.model.audit.AuditMessage.class.isAssignableFrom(cat.getClazz())) { result = org.openmrs.module.webservices.rest.web.ConversionUtil.convertToRepresentation(object, Representation.FULL); }else { throw new javax.transaction.NotSupportedException(java.lang.String.format(\"Category %s not supported.\", category)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5500/buggy-version/api.src.main.java.org.openmrs.module.sync2.api.service.impl.UnifyServiceImpl.java", "BodyUseAPI": ["org.openmrs.module.webservices.rest.web.ConversionUtil.convertToRepresentation(java.lang.Object,Representation.FULL)", "org.openmrs.module.fhir.api.helper.FHIRClientHelper.convertToOpenMrsObject(java.lang.Object,java.lang.String)", "org.openmrs.module.webservices.rest.SimpleObject.add(java.lang.String,java.lang.Object)"], "Fixed commit": "2d839a27175fa585eb0efefa843b0447ee91fc98", "Url": "https://api.github.com/repos/openmrs/openmrs-module-sync2", "Date": "2018-12-06T15:36:02Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(activity.isFinishing())) { if (receivedFile == null) new androidx.appcompat.app.AlertDialog.Builder(activity).setTitle(R.string.text_error).setMessage(R.string.mesg_somethingWentWrong).setNegativeButton(R.string.butn_close, null).setPositiveButton(R.string.butn_retry, new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { runReceiveTask(activity, sharedPreferences, device, connection); } }).show(); else new androidx.appcompat.app.AlertDialog.Builder(activity).setTitle(R.string.text_taskCompleted).setMessage(R.string.mesg_updateDownloadComplete).setNegativeButton(R.string.butn_close, null).setPositiveButton(R.string.butn_open, new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { com.genonbeta.TrebleShot.app.EditableListFragment.openUri(activity, receivedFile.getUri(), activity.getString(R.string.text_fileOpenAppChoose)); } }).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1939/buggy-version/app.src.main.java.com.genonbeta.TrebleShot.dialog.DeviceInfoDialog.java", "BodyUseAPI": ["new androidx.appcompat.app.AlertDialog.Builder(activity).setTitle(R.string.text_error).setMessage(R.string.mesg_somethingWentWrong).setNegativeButton(R.string.butn_close, null).setPositiveButton(R.string.butn_retry,android.content.DialogInterface.OnClickListener)", "new androidx.appcompat.app.AlertDialog.Builder(activity).setTitle(R.string.text_taskCompleted).setMessage(R.string.mesg_updateDownloadComplete).setNegativeButton(R.string.butn_close, null).setPositiveButton(R.string.butn_open,android.content.DialogInterface.OnClickListener)", "new androidx.appcompat.app.AlertDialog.Builder(activity).setTitle(R.string.text_error).setMessage(R.string.mesg_somethingWentWrong).setNegativeButton(R.string.butn_close,<nulltype>)", "com.genonbeta.TrebleShot.app.EditableListFragment.openUri(android.app.Activity,receivedFile.getUri(),activity.getString(R.string.text_fileOpenAppChoose))", "androidx.appcompat.app.AlertDialog.Builder.setTitle(R.string.text_error)", "android.app.Activity.getString(R.string.text_fileOpenAppChoose)", "androidx.appcompat.app.AlertDialog.Builder.setTitle(R.string.text_taskCompleted)", "new androidx.appcompat.app.AlertDialog.Builder(activity).setTitle(R.string.text_taskCompleted).setMessage(R.string.mesg_updateDownloadComplete)", "new androidx.appcompat.app.AlertDialog.Builder(activity).setTitle(R.string.text_error).setMessage(R.string.mesg_somethingWentWrong).setNegativeButton(R.string.butn_close, null).setPositiveButton(R.string.butn_retry, new android.content.DialogInterface.OnClickListener() {\n    @java.lang.Override\n    public void onClick(android.content.DialogInterface dialog, int which) {\n        runReceiveTask(activity, sharedPreferences, device, connection);\n    }\n}).show()", "new androidx.appcompat.app.AlertDialog.Builder(activity).setTitle(R.string.text_error).setMessage(R.string.mesg_somethingWentWrong)", "new androidx.appcompat.app.AlertDialog.Builder(activity).setTitle(R.string.text_taskCompleted).setMessage(R.string.mesg_updateDownloadComplete).setNegativeButton(R.string.butn_close,<nulltype>)", "new androidx.appcompat.app.AlertDialog.Builder(activity).setTitle(R.string.text_taskCompleted).setMessage(R.string.mesg_updateDownloadComplete).setNegativeButton(R.string.butn_close, null).setPositiveButton(R.string.butn_open, new android.content.DialogInterface.OnClickListener() {\n    @java.lang.Override\n    public void onClick(android.content.DialogInterface dialog, int which) {\n        com.genonbeta.TrebleShot.app.EditableListFragment.openUri(activity, receivedFile.getUri(), activity.getString(R.string.text_fileOpenAppChoose));\n    }\n}).show()", "1.runReceiveTask(android.app.Activity,android.content.SharedPreferences,com.genonbeta.TrebleShot.object.NetworkDevice,NetworkDevice.Connection)"], "Fixed commit": "4a9bcb45fdec218ecd3299bed5b089de956537e7", "Url": "https://api.github.com/repos/genonbeta/TrebleShot", "Date": "2018-12-29T16:54:29Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (id <= 0) { mess.toPlayer(p, \"Ung\u00fcltige ID\", Messages.IMPORTANT); }else { fex.signs.signs.CommandTransformer.getInstance().getInfo(id, p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4946/buggy-version/Signs.src.fex.signs.signs.Main.java", "BodyUseAPI": ["fex.signs.signs.CommandTransformer.getInstance().getInfo(int,org.bukkit.entity.Player)"], "Fixed commit": "e0c3786190a627eee1c0428b56b26c27183cb229", "Url": "https://api.github.com/repos/fex594/signs", "Date": "2018-11-13T20:26:57Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (moveCamera) { mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLng(latLng)); mMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.zoomTo(getResources().getInteger(R.integer.zoom_default))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4402/buggy-version/app.src.main.java.re.sourcecode.android.wattsnearby.MainMapActivity.java", "BodyUseAPI": [], "Fixed commit": "2da598c7a08338806df3d9acfe0de508955cfde6", "Url": "https://api.github.com/repos/sourcecodere/WattsNearby", "Date": "2017-04-21T10:35:24Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cocktailJson == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1069/buggy-version/src.main.java.alkolexa.model.API.java", "BodyUseAPI": [], "Fixed commit": "90412a7bf8a7ef1b55b3f1d4f1dc325eea347176", "Url": "https://api.github.com/repos/sweIhm-ws2018-19/Alkolexa-DI2", "Date": "2018-12-27T11:09:16Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (ret == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/188/buggy-version/src.main.java.org.tron.program.SolidityNode.java", "BodyUseAPI": [], "Fixed commit": "746aa557d1cc6683c272199eb5b45ad46a41b195", "Url": "https://api.github.com/repos/tronprotocol/java-tron", "Date": "2018-12-11T11:41:36Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pc.getOrder(wholeSet)) == null) { return new java.util.Vector<simpledb.LogicalJoinNode>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2660/buggy-version/src.java.simpledb.JoinOptimizer.java", "BodyUseAPI": [], "Fixed commit": "cde5e52bce1b9bcc12db451a1f123b92198b068e", "Url": "https://api.github.com/repos/cs6400-database/SimpleDB", "Date": "2018-12-03T02:14:54Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ov3rk1ll.kinocast.utils.Chain.request()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (request.url().isHttps()) c = (c.trim()) + \"; secure\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6665/buggy-version/app.src.main.java.com.ov3rk1ll.kinocast.utils.CloudflareDdosInterceptor.java", "BodyUseAPI": [], "Fixed commit": "847bbb6ac7d07af1a2a8274c6d2488bb21843178", "Url": "https://api.github.com/repos/werty1st/KinoCast", "Date": "2018-12-25T23:34:04Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serviceDesc.size()) == 0) { resMsg.put(\"SVCDesc\", null); }else { resMsg.put(\"SVCDesc\", serviceList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8375/buggy-version/DSP.src.com.kt.dataManager.JSONSerializerTo.java", "BodyUseAPI": [], "Fixed commit": "dbf08b457dd638684c38449cf674dc7126502d31", "Url": "https://api.github.com/repos/zenolim89/service-description-project", "Date": "2018-11-11T15:02:19Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stage.getActors().size) != 0) { stage.getActors().pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9469/buggy-version/core.src.com.jpv.Bugged.Niveles.Scenes.Hud.java", "BodyUseAPI": ["com.badlogic.gdx.scenes.scene2d.Stage.getActors()", "stage.getActors().pop()"], "Fixed commit": "bfadfb2c6e1d4b8ba3a107b5c2b4127e5c7ffeb9", "Url": "https://api.github.com/repos/ChuchoPV/Bugged", "Date": "2018-11-18T17:41:43Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { mFragmentManager.beginTransaction().replace(R.id.fragment_container, tech.joeyck.livefootball.ui.competition_detail.matches.MatchesFragment.newInstance(mViewModel.getCompetitionId(), mViewModel.getCompetitionName(), mViewModel.getMatchDay()), MatchesFragment.FRAGMENT_TAG).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9040/buggy-version/app.src.main.java.tech.joeyck.livefootball.ui.competition_detail.CompetitionActivity.java", "BodyUseAPI": [], "Fixed commit": "c28b30bcef1384151bf95ceec318c4b2e3be5bfd", "Url": "https://api.github.com/repos/s6joui/football-data-android-java", "Date": "2018-12-01T11:07:15Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newItem.contains(\"Necklace\")) { return \"Neck: \" + newItem; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3706/buggy-version/src.autoquest.Equipment.java", "BodyUseAPI": [], "Fixed commit": "b048c45ada46af4b107449faf64563f7c22b7d4c", "Url": "https://api.github.com/repos/joshgarde/AutoQuest", "Date": "2018-12-05T04:29:39Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (com.fenlan.spring.shop.controller.admin.Type.getByCode(type))) { switch (com.fenlan.spring.shop.controller.admin.Type.getByCode(type)) { case SHOP : { for (com.fenlan.spring.shop.controller.admin.BlackList item : items) { com.fenlan.spring.shop.controller.admin.BlackEntity entity = new com.fenlan.spring.shop.controller.admin.BlackEntity(); entity.setId(item.getId()); entity.setType(Type.SHOP); entity.setObject(shopService.finById(item.getEntityid())); list.add(entity); } } break; case SELLER : { for (com.fenlan.spring.shop.controller.admin.BlackList item : items) { com.fenlan.spring.shop.controller.admin.BlackEntity entity = new com.fenlan.spring.shop.controller.admin.BlackEntity(); entity.setId(item.getId()); entity.setType(Type.SELLER); entity.setObject(userService.findById(item.getEntityid())); list.add(entity); } } break; case CUSTOMER : { for (com.fenlan.spring.shop.controller.admin.BlackList item : items) { com.fenlan.spring.shop.controller.admin.BlackEntity entity = new com.fenlan.spring.shop.controller.admin.BlackEntity(); entity.setId(item.getId()); entity.setType(Type.CUSTOMER); entity.setObject(userService.findById(item.getEntityid())); list.add(entity); } } break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5659/buggy-version/src.main.java.com.fenlan.spring.shop.controller.admin.ManageSellerController.java", "BodyUseAPI": ["com.fenlan.spring.shop.controller.admin.Type.getByCode(java.lang.Integer)"], "Fixed commit": "ca0c0e46b2bd9586262beeb5e4f503a46e623da5", "Url": "https://api.github.com/repos/PMC6/online-store-back-end", "Date": "2018-12-11T06:42:37Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInterrupt) { isInterrupt = false; }else { int r = manager.abandonAudioFocus(this); hasAudioFocus = r != (android.media.AudioManager.AUDIOFOCUS_REQUEST_GRANTED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3627/buggy-version/android.src.main.java.guichaguri.trackplayer.logic.components.FocusManager.java", "BodyUseAPI": [], "Fixed commit": "bd2b51578984ee0dfa614ab4c421ab0f5698a3a7", "Url": "https://api.github.com/repos/radiospiritsapp/react-native-track-player", "Date": "2018-11-14T10:30:50Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.io.IOUtils.copy(java.io.FileInputStream,java.io.FileOutputStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (copyDockerfileRet < 0) { throw new java.lang.Exception(\"copy Dockerfile.properties template error!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9059/buggy-version/src.main.java.cn.ac.iie.proxy.controller.PushImageController.java", "BodyUseAPI": [], "Fixed commit": "021db48ce7d6d97828e34fdc3633f19b41425d75", "Url": "https://api.github.com/repos/fighterhit/data-preprocessing-executor", "Date": "2018-11-02T06:44:31Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1392/buggy-version/src.BinarySearchLibrary.java", "BodyUseAPI": [], "Fixed commit": "75fa05ae215aa488eae4bd12053db89ee16643ff", "Url": "https://api.github.com/repos/zhechengsheng/Autocomplete-fall18", "Date": "2018-11-16T05:45:17Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1392/buggy-version/src.BinarySearchLibrary.java", "BodyUseAPI": [], "Fixed commit": "75fa05ae215aa488eae4bd12053db89ee16643ff", "Url": "https://api.github.com/repos/zhechengsheng/Autocomplete-fall18", "Date": "2018-11-16T05:45:17Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gauntlet.ranger.isDead()) { gauntlet.gameState.setRangerDirection(GameState.Direction.STOP); gauntlet.ranger.setPosition(gauntlet.rangerSpawnX, gauntlet.rangerSpawnY); gauntlet.ranger.setHealth(100); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2637/buggy-version/src.gauntlet.GameStartUp.java", "BodyUseAPI": ["gauntlet.ranger.setHealth(int)", "gauntlet.ranger.setPosition(gauntlet.rangerSpawnX,gauntlet.rangerSpawnY)", "gauntlet.gameState.setRangerDirection(GameState.Direction.STOP)"], "Fixed commit": "48c24496fad6c99749deeabf7a83c5842c98e9ee", "Url": "https://api.github.com/repos/Chaycej/Gauntlet", "Date": "2018-12-08T03:00:36Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mixinConfig.equals(\"\"))) { org.spongepowered.asm.mixin.Mixins.addConfiguration(mixinConfig); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4213/buggy-version/src.main.java.club.thepufferfishproject.pml.mods.ModDiscoverer.java", "BodyUseAPI": ["org.spongepowered.asm.mixin.Mixins.addConfiguration(java.lang.String)"], "Fixed commit": "b5fc79ddee12f56c48b66e684f4325eb239499b5", "Url": "https://api.github.com/repos/ConorTheDev/PufferfishModLoader", "Date": "2018-10-30T09:22:36Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\u00a2 instanceof il.org.spartan.utils.Binary) throw new java.lang.IllegalArgumentException((\u00a2 + \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3757/buggy-version/src.main.java.il.org.spartan.utils.Binary.java", "BodyUseAPI": [], "Fixed commit": "f3822655d37337044f54e97346413591b1571f28", "Url": "https://api.github.com/repos/TechnionYP5779/team2", "Date": "2018-11-23T10:05:42Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getShip(i, j).getPosX()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((player.getShip(i, j).isHorizontal()) && ((player.getShip(i, j).getShipPart()[(i - x)]) == 1)) ((javax.swing.JLabel) (this.getComponent(((i * 10) + j)))).setIcon(new javax.swing.ImageIcon(java.awt.Toolkit.getDefaultToolkit().getImage(\"./img/ship_1_shot.png\"))); else if ((!(player.getShip(i, j).isHorizontal())) && ((player.getShip(i, j).getShipPart()[(y - j)]) == 1)) ((javax.swing.JLabel) (this.getComponent(((i * 10) + j)))).setIcon(new javax.swing.ImageIcon(java.awt.Toolkit.getDefaultToolkit().getImage(\"./img/ship_1_shot.png\"))); else ((javax.swing.JLabel) (this.getComponent(((i * 10) + j)))).setIcon(new javax.swing.ImageIcon(java.awt.Toolkit.getDefaultToolkit().getImage(\"./img/ship_1.png\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2647/buggy-version/src.view.VueCreaLaby.java", "BodyUseAPI": ["player.getShip(i, j).isHorizontal()", "model.players.Human.getShip(int,int)", "java.awt.Component.setIcon(javax.swing.ImageIcon)", "java.awt.Component.setIcon(javax.swing.ImageIcon)", "view.VueCreaLaby.getComponent(int)", "model.players.Human.getShip(int,int)", "view.VueCreaLaby.getComponent(int)", "view.VueCreaLaby.getComponent(int)", "player.getShip(i, j).getShipPart()", "java.awt.Component.setIcon(javax.swing.ImageIcon)"], "Fixed commit": "a3617e9e515b064e57928436093c3329c0f49a4c", "Url": "https://api.github.com/repos/giang2u/DP_2018_BlackPearl", "Date": "2018-12-22T20:13:34Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((valueType) == (gov.nist.toolkit.simcommon.client.config.SimulatorConfigElement.ValueType.SINGLE_SELECT_LIST)) && ((listValue) != null)) return listValue.get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2271/buggy-version/sim-common.src.main.java.gov.nist.toolkit.simcommon.client.config.SimulatorConfigElement.java", "BodyUseAPI": [], "Fixed commit": "f735cefcd7dd4e7d4b5dafc5c55af8bce0178166", "Url": "https://api.github.com/repos/usnistgov/iheos-toolkit2", "Date": "2018-11-14T17:43:32Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.mkdir()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!success) { no.siriuslabs.image.services.FileService.LOGGER.info(\"image directory creation at {} {}\", imagePath, (success ? \"successful\" : \"failed\")); throw new java.io.UncheckedIOException(new java.io.IOException(\"Creation of image directory failed.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9580/buggy-version/geoscience-image-classification.src.main.java.no.siriuslabs.image.services.FileService.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,java.lang.String,(success ? \"successful\" : \"failed\"))"], "Fixed commit": "ae72b28409a8ddf93b9b625849c6f440c950a1f7", "Url": "https://api.github.com/repos/Sirius-sfi/geoscience-image-classification", "Date": "2018-11-13T09:24:44Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((arguments.length) != 3) { throw new seedu.souschef.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.souschef.logic.parser.commandparser.MESSAGE_INVALID_COMMAND_FORMAT, PlanMealCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8243/buggy-version/src.main.java.seedu.souschef.logic.parser.commandparser.PlanMealCommandParser.java", "BodyUseAPI": [], "Fixed commit": "8a779cd814efff81f1beb38fdf64070ae94b30e7", "Url": "https://api.github.com/repos/BennTay/main", "Date": "2018-11-05T04:32:02Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ewp.crm.controllers.rest.ClientService.get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (client.isRepeated()) { client.addHistory(clientHistoryService.createHistory(userFromSession, client, ClientHistory.Type.DESCRIPTION)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8481/buggy-version/src.main.java.com.ewp.crm.controllers.rest.ClientRestController.java", "BodyUseAPI": ["com.ewp.crm.controllers.rest.Client.addHistory(clientHistoryService.createHistory(userFromSession, client, ClientHistory.Type.DESCRIPTION))", "com.ewp.crm.controllers.rest.ClientHistoryService.createHistory(com.ewp.crm.controllers.rest.User,com.ewp.crm.controllers.rest.Client,ClientHistory.Type.DESCRIPTION)"], "Fixed commit": "07a91d0992804643c6bb07645e5f3ffb705458c3", "Url": "https://api.github.com/repos/WebEducationPlatform/CRM", "Date": "2018-12-13T12:04:47Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mScreenBrightness) != (-1)) { org.arpnetwork.arpdevice.device.Adb adb = new org.arpnetwork.arpdevice.device.Adb(org.arpnetwork.arpdevice.stream.Touch.getInstance().getConnection()); adb.globalDimRestore(mScreenBrightnessMode, mScreenBrightness); mScreenBrightness = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3866/buggy-version/app.src.main.java.org.arpnetwork.arpdevice.app.AppManager.java", "BodyUseAPI": [], "Fixed commit": "392e5dce870e0ba4fa26cf21caa6bc31be4236d3", "Url": "https://api.github.com/repos/arpnetwork/arpdevice", "Date": "2018-10-23T03:37:34Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (driverManager == null) { org.apache.plc4x.java.opm.PlcEntityInterceptor.LOGGER.trace(\"Entity not connected, simply fowarding call\"); try { return callable.call(); } catch (java.lang.Exception e) { throw new org.apache.plc4x.java.opm.OPMException(\"Exception during forwarding call\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5242/buggy-version/plc4j.utils.opm.src.main.java.org.apache.plc4x.java.opm.PlcEntityInterceptor.java", "BodyUseAPI": [], "Fixed commit": "b16cc9ba356495fd73f3a823d94e4a28e92c3c4b", "Url": "https://api.github.com/repos/apache/incubator-plc4x", "Date": "2018-11-24T12:24:59Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dao.getDetail()) != null) { bean.setDetail(new java.lang.String(dao.getDetail().getBytes(\"ISO_8859_1\"), \"UTF-8\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4989/buggy-version/todolist.src.main.java.jp.co.h30.swdev.service.ListService.java", "BodyUseAPI": ["jp.co.h30.swdev.bean.ListBean.setDetail(java.lang.String)", "dao.getDetail().getBytes(java.lang.String)", "jp.co.h30.swdev.dao.TodoDao.getDetail()"], "Fixed commit": "e02e83dc8c70b7d3a0108923bb8e059e32f41d9a", "Url": "https://api.github.com/repos/topse-agile/todolist", "Date": "2018-12-20T09:33:49Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dao.getTitle()) != null) { bean.setTitle(new java.lang.String(dao.getTitle().getBytes(\"ISO_8859_1\"), \"UTF-8\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4989/buggy-version/todolist.src.main.java.jp.co.h30.swdev.service.ListService.java", "BodyUseAPI": ["jp.co.h30.swdev.bean.ListBean.setTitle(java.lang.String)", "dao.getTitle().getBytes(java.lang.String)", "jp.co.h30.swdev.dao.TodoDao.getTitle()"], "Fixed commit": "e02e83dc8c70b7d3a0108923bb8e059e32f41d9a", "Url": "https://api.github.com/repos/topse-agile/todolist", "Date": "2018-12-20T09:33:49Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (outputFile != null) sample.Main.writeResultToFile(result, outputFile);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5388/buggy-version/src.sample.Main.java", "BodyUseAPI": ["sample.Main.writeResultToFile(data_structure.Board,java.lang.String)"], "Fixed commit": "63148957292bc24b5374f42e9cdf2acab269e722", "Url": "https://api.github.com/repos/zetraxus/Kakuro", "Date": "2018-12-29T22:59:08Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((missionList.get(i).length()) > 13) { for (int j = (missionList.get(i).length()) - 1; j > ((missionList.get(i).length()) - 13); j--) { sb.deleteCharAt(j); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8918/buggy-version/src.combinedarms.gearscriptor.dataaccess.DirectoryManagement.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)", "java.lang.String.length()", "java.lang.String.length()"], "Fixed commit": "1b7c113908cd1e6ee901536a27259b2ca60683c3", "Url": "https://api.github.com/repos/CombinedArmsGaming/Gearscripter", "Date": "2018-12-20T23:23:11Z"},
{"Line": "=>654", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.schemarepo.zookeeper.ZooKeeperRepository.ZooKeeperSubject.getLatestSchemaId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (latestId == (-1)) { return null; }else { java.lang.String latestSchemaLiteral = readSchemaForId(latestId.toString()); if (latestSchemaLiteral == null) { return null; }else { return new org.schemarepo.SchemaEntry(latestId.toString(), latestSchemaLiteral); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4194/buggy-version/zookeeper.src.main.java.org.schemarepo.zookeeper.ZooKeeperRepository.java", "BodyUseAPI": ["java.lang.Integer.toString()", "org.schemarepo.zookeeper.ZooKeeperRepository.ZooKeeperSubject.readSchemaForId(java.lang.String)", "java.lang.Integer.toString()"], "Fixed commit": "50241bb85e1826cf86ee20a8f7ae6e52d0a7983b", "Url": "https://api.github.com/repos/chekore/schema-repo", "Date": "2018-11-22T07:01:40Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getAvatar()) != null) { fileResource = fileResourceService.getFileResource(user.getAvatar().getUid()); fileResource.setAssigned(true); fileResourceService.updateFileResource(fileResource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5101/buggy-version/dhis-2.dhis-services.dhis-service-dxf2.src.main.java.org.hisp.dhis.dxf2.metadata.objectbundle.hooks.UserObjectBundleHook.java", "BodyUseAPI": ["org.hisp.dhis.user.User.getAvatar()", "org.hisp.dhis.fileresource.FileResourceService.getFileResource(user.getAvatar().getUid())", "user.getAvatar().getUid()"], "Fixed commit": "923209d54efd54f10683742b1269abfa8f6b3369", "Url": "https://api.github.com/repos/msf-oca-his/dhis-core", "Date": "2018-11-13T08:17:41Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.block.state.IBlockState.getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (block instanceof com.ferreusveritas.dynamictrees.blocks.BlockSurfaceRoot) { return com.ferreusveritas.dynamictrees.blocks.BlockBranchThick.ReplaceableState.TREEPART; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5131/buggy-version/src.main.java.com.ferreusveritas.dynamictrees.blocks.BlockBranchThick.java", "BodyUseAPI": [], "Fixed commit": "23343c3b907d1da31c180c0e37a42366b3d4de84", "Url": "https://api.github.com/repos/OrionDevelopment/DynamicTrees", "Date": "2018-11-05T04:28:30Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["site.binghai.biz.entity.jdy.WxTplMsg.getUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((hasEmptyString(url)) || (!(url.contains(\"?\")))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7571/buggy-version/biz.src.main.java.site.binghai.biz.tasks.TurnGameTicketAddListener.java", "BodyUseAPI": [], "Fixed commit": "fb286a68f68a6f9973f30d96f75b2e73b0250827", "Url": "https://api.github.com/repos/IceSeaOnly/dayu", "Date": "2018-11-06T03:17:08Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(children.getKey().contains(\"-\"))) { }else { mpartyids.add(children.getKey()); android.util.Log.d(com.example.arturolopez.fete.MyPartiesActivity.TAG, (((childDataSnapshot.getKey()) + \": \") + (children.getKey()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8553/buggy-version/app.src.main.java.com.example.arturolopez.fete.MyPartiesActivity.java", "BodyUseAPI": ["com.google.firebase.database.DataSnapshot.getKey()", "android.util.Log.d(java.lang.String,(((childDataSnapshot.getKey()) + \": \") + (children.getKey())))", "java.util.ArrayList<java.lang.String>.add(children.getKey())", "com.google.firebase.database.DataSnapshot.getKey()"], "Fixed commit": "36569cbfe52984def62e8593001be00fbd6432eb", "Url": "https://api.github.com/repos/alopez96/fete", "Date": "2018-12-02T01:08:18Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mData) != null) { return mData.size(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2972/buggy-version/app.src.main.java.com.highbryds.shoppinglistforromania_mvvm.Adapters.ShoppingListAdapter.java", "BodyUseAPI": [], "Fixed commit": "009aa0d2f28b1a9dcdde0a7c50d8c3c0897a713f", "Url": "https://api.github.com/repos/smtrz/AndroidViewModel_ArchitecturalComponents", "Date": "2018-12-20T07:34:41Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.parseFloatIntoDecimal) && ((sb.length()) > 1)) { value = new java.math.BigDecimal(sb.toString(), this.mathContext); }else if ((sb.length()) == 1) { return new com.googlecode.aviator.lexer.token.CharToken('.', startIndex); }else { value = dval; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8756/buggy-version/src.main.java.com.googlecode.aviator.lexer.ExpressionLexer.java", "BodyUseAPI": ["java.lang.StringBuffer.length()", "java.lang.StringBuffer.toString()"], "Fixed commit": "ddd142141ace9db53bbb51bf760e367b2d2863c2", "Url": "https://api.github.com/repos/killme2008/aviator", "Date": "2018-11-19T09:51:26Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (counter < 3) { lengthOfThreeHyphens = (3 - counter) + (format[1][m].length()); if ((lengthOfColumn > 0) && (lengthOfColumn < lengthOfThreeHyphens)) lengthOfColumn = lengthOfThreeHyphens; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7826/buggy-version/src.main.java.table_formatter.PipeTableFormat.java", "BodyUseAPI": [], "Fixed commit": "2a92693cc4aa068623340de6f09c14eef05211d0", "Url": "https://api.github.com/repos/borisv13/GitHub-Flavored-Markdown-Eclipse-Plugin", "Date": "2018-11-28T03:14:36Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (i < (tokens.length)) tok += tokens[i];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8160/buggy-version/src.main.java.sample.Parse.java", "BodyUseAPI": [], "Fixed commit": "4e5bb4f1ddbf710af0cb57e19c94b62af8071182", "Url": "https://api.github.com/repos/alinapolei/Manoa", "Date": "2018-11-05T20:48:27Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMessenger) != null) mMessenger.cleanup();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2773/buggy-version/kas-mq-core.src.main.java.com.kas.mq.internal.MqConnection.java", "BodyUseAPI": [], "Fixed commit": "18d2b5f2569361cfd145d2a6ad56a7662e55e1c2", "Url": "https://api.github.com/repos/shyifrah/kas", "Date": "2018-12-23T17:40:04Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.Query.getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (users.isEmpty()) { return null; }else { return users.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6933/buggy-version/src.main.java.com.learnx.demo.repository.AppUserRepository.java", "BodyUseAPI": ["java.util.List<com.learnx.demo.entity.AppUser>.get(int)"], "Fixed commit": "b9d8a982325dfc2d731a2209054c03df6bbe5c08", "Url": "https://api.github.com/repos/MrMrEcho/CMPE_226_LearningX", "Date": "2018-11-29T00:24:29Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((itPATH) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7131/buggy-version/src.main.java.com.itPATH.backend.data.model.Reply.java", "BodyUseAPI": [], "Fixed commit": "79573d18258d1498e42bad9bc7a08e7f4db0098b", "Url": "https://api.github.com/repos/NJU-itPATH/back-end-java-server", "Date": "2018-11-21T02:47:23Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["abstractBuild.getWorkspace().getRemote()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (workSpace != null) { java.io.File katalonDir = com.katalon.jenkins.plugin.KatalonUtils.getKatalonPackage(buildListener, this.version); com.katalon.jenkins.plugin.LogUtils.log(buildListener, katalonDir.getAbsolutePath()); java.lang.String katalonExecutableFile = java.nio.file.Paths.get(katalonDir.getAbsolutePath(), \"katalon\").toAbsolutePath().toString(); executeKatalon(katalonExecutableFile, workSpace, buildListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5946/buggy-version/src.main.java.com.katalon.jenkins.plugin.ExecuteKatalonStudioTask.java", "BodyUseAPI": ["com.katalon.jenkins.plugin.ExecuteKatalonStudioTask.executeKatalon(java.lang.String,java.lang.String,hudson.model.BuildListener)"], "Fixed commit": "d92fa03998205168b47b4951341d4452f22fa165", "Url": "https://api.github.com/repos/jenkinsci/katalon-plugin", "Date": "2018-12-27T07:35:46Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<edu.upc.citm.android.speakerfeedback.Poll>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(poll.isOpen())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5815/buggy-version/app.src.main.java.edu.upc.citm.android.speakerfeedback.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4b7272a97306e0b970d1b140aa4eac872c6db201", "Url": "https://api.github.com/repos/TRWork/SpeakerFeedback", "Date": "2018-11-27T11:57:44Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, horle.fmsync.model.Tuple<java.lang.Integer, java.lang.Integer>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((t.getRight()) != 0) java.lang.System.out.println((((((t.getLeft()) + \", \") + (t.getRight())) + \"\\t\") + key));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/88/buggy-version/src.horle.fmsync.model.ImportOtherFM.java", "BodyUseAPI": ["horle.fmsync.model.Tuple<java.lang.Integer, java.lang.Integer>.getLeft()", "horle.fmsync.model.Tuple<java.lang.Integer, java.lang.Integer>.getRight()", "java.io.PrintStream.println((((((t.getLeft()) + \", \") + (t.getRight())) + \"\\t\") + key))"], "Fixed commit": "2005667ad283703724e72cfcc0c16567310a8f89", "Url": "https://api.github.com/repos/horle/fmsync", "Date": "2018-12-06T17:01:36Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(localStack.isEmpty())) { localStack.remove(((localStack.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4786/buggy-version/src.main.java.com.floragunn.searchguard.support.MapUtils.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.remove(int)"], "Fixed commit": "fab4441f769d2635023710a5dfc5bb5717176a3f", "Url": "https://api.github.com/repos/floragunncom/search-guard", "Date": "2018-12-15T17:06:10Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (textParams == null) { textParams = new com.mylhyl.circledialog.params.TextParams(); textParams.height = 0; textParams.padding = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4447/buggy-version/circledialog.src.main.java.com.mylhyl.circledialog.view.BodyTextView.java", "BodyUseAPI": [], "Fixed commit": "1f0776ebdd1aa65dc3ebefd4fc9411d0505d3884", "Url": "https://api.github.com/repos/mylhyl/Android-CircleDialog", "Date": "2018-12-13T01:43:30Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.java.cn.liubinbin.pan.experiment.cache.CacheManager.getByByteBuf(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value == null) { io.netty.handler.codec.http.FullHttpResponse response = new io.netty.handler.codec.http.DefaultFullHttpResponse(HTTP_1_1, NOT_FOUND); response.headers().set(main.java.cn.liubinbin.pan.server.cache.CacheServerHandler.CONTENT_TYPE, \"text/plain\"); if (!keepAlive) { ctx.write(response).addListener(ChannelFutureListener.CLOSE); }else { response.headers().set(main.java.cn.liubinbin.pan.server.cache.CacheServerHandler.CONNECTION, main.java.cn.liubinbin.pan.server.cache.CacheServerHandler.KEEP_ALIVE); ctx.write(response); } }else { io.netty.handler.codec.http.FullHttpResponse response = new io.netty.handler.codec.http.DefaultFullHttpResponse(HTTP_1_1, OK, value); response.headers().set(main.java.cn.liubinbin.pan.server.cache.CacheServerHandler.CONTENT_TYPE, \"text/plain\"); response.headers().setInt(main.java.cn.liubinbin.pan.server.cache.CacheServerHandler.CONTENT_LENGTH, response.content().readableBytes()); if (!keepAlive) { ctx.write(response).addListener(ChannelFutureListener.CLOSE); }else { response.headers().set(main.java.cn.liubinbin.pan.server.cache.CacheServerHandler.CONNECTION, main.java.cn.liubinbin.pan.server.cache.CacheServerHandler.KEEP_ALIVE); ctx.write(response); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4624/buggy-version/src.main.java.cn.liubinbin.pan.server.cache.CacheServerHandler.java", "BodyUseAPI": [], "Fixed commit": "e8c1e0e0b9fb4804dca5be3af7490a0bb0aad0c7", "Url": "https://api.github.com/repos/liubinbin/pan", "Date": "2018-12-11T15:52:23Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((session.getId()) != null) { builder.header(Header.Session, session.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1259/buggy-version/library.rtsp.src.main.java.com.google.android.exoplayer2.source.rtsp.RtspDefaultClient.java", "BodyUseAPI": ["Request.Builder.header(Header.Session,session.getId())", "com.google.android.exoplayer2.source.rtsp.RtspDefaultClient.getId()"], "Fixed commit": "854bcb3e7d708029438a25cb788c2c2fdaad9e0b", "Url": "https://api.github.com/repos/GlobalInvacomGroupLimited/ExoPlayer", "Date": "2018-12-13T21:57:12Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((session.getId()) != null) { builder.header(Header.Session, session.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1259/buggy-version/library.rtsp.src.main.java.com.google.android.exoplayer2.source.rtsp.RtspDefaultClient.java", "BodyUseAPI": ["com.google.android.exoplayer2.source.rtsp.RtspDefaultClient.getId()", "Request.Builder.header(Header.Session,session.getId())"], "Fixed commit": "854bcb3e7d708029438a25cb788c2c2fdaad9e0b", "Url": "https://api.github.com/repos/GlobalInvacomGroupLimited/ExoPlayer", "Date": "2018-12-13T21:57:12Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.isListWithContent(httpServer.getEcRTables())) { for (ec.net.httpserver.ecrtable.EcRenderTable et : httpServer.getEcRTables()) { if (et.getDefinitionFileUri().toUpperCase().endsWith(str.toUpperCase())) { return et; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7509/buggy-version/src.ec.net.httpserver.ClassServiceEngine.java", "BodyUseAPI": ["ec.net.httpserver.EcHttpServer.getEcRTables()"], "Fixed commit": "f729a3f964f31b9009dd3c88b06434b0c372accd", "Url": "https://api.github.com/repos/march1cat/EcDevelopeLib", "Date": "2018-12-24T09:02:36Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.grid[i][j].clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(field.isSet())) { sudokuGrid.freeFields.add(field); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2147/buggy-version/src.main.java.janbingemann.SudokuGrid.java", "BodyUseAPI": ["java.util.List<janbingemann.Field>.add(janbingemann.Field)"], "Fixed commit": "5cedc7a5cc0b0ff20c7f1a048ee03f852348a893", "Url": "https://api.github.com/repos/JanNB97/Sudoku", "Date": "2018-12-03T20:47:57Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (driverManager == null) { org.apache.plc4x.java.opm.PlcEntityInterceptor.LOGGER.trace(\"Entity not connected, simply fowarding call\"); try { return callable.call(); } catch (java.lang.Exception e) { throw new org.apache.plc4x.java.opm.OPMException(\"Exception during forwarding call\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2434/buggy-version/plc4j.utils.opm.src.main.java.org.apache.plc4x.java.opm.PlcEntityInterceptor.java", "BodyUseAPI": [], "Fixed commit": "90b7f109307389b8c052e13ad1c199c859393928", "Url": "https://api.github.com/repos/apache/incubator-plc4x", "Date": "2018-11-24T12:24:59Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (str.contains(\"?\")) str = str.replace(\"?\", \" \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1771/buggy-version/src.main.Command.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "31e02a6136c26419bb0de1dcbfa68081cf6887b5", "Url": "https://api.github.com/repos/MarkSlayer456/Cyrus", "Date": "2018-11-13T17:13:35Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (str.contains(\"!\")) str = str.replace(\"!\", \" \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1771/buggy-version/src.main.Command.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "31e02a6136c26419bb0de1dcbfa68081cf6887b5", "Url": "https://api.github.com/repos/MarkSlayer456/Cyrus", "Date": "2018-11-13T17:13:35Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (str.contains(\".\")) str = str.replace(\".\", \" \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1771/buggy-version/src.main.Command.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "31e02a6136c26419bb0de1dcbfa68081cf6887b5", "Url": "https://api.github.com/repos/MarkSlayer456/Cyrus", "Date": "2018-11-13T17:13:35Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (argSize > 1) { for (int i = 0; i < argSize; i++) { this.args.set(1, ((this.args.get(1)) + (this.args.get(i)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1771/buggy-version/src.main.Command.java", "BodyUseAPI": [], "Fixed commit": "31e02a6136c26419bb0de1dcbfa68081cf6887b5", "Url": "https://api.github.com/repos/MarkSlayer456/Cyrus", "Date": "2018-11-13T17:13:35Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (str.contains(\",\")) str = str.replace(\",\", \" \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1771/buggy-version/src.main.Command.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "31e02a6136c26419bb0de1dcbfa68081cf6887b5", "Url": "https://api.github.com/repos/MarkSlayer456/Cyrus", "Date": "2018-11-13T17:13:35Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (d != null) { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\"); java.lang.String strDate = sdf.format(d); return strDate; }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7584/buggy-version/src.main.java.com.blogspot.noteoneverything.chatboard.util.Utility.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(java.util.Date)"], "Fixed commit": "d873a7c8d837150eba7c86c9cd46c1d04f6df553", "Url": "https://api.github.com/repos/lechatthecat/JavaChatBoard", "Date": "2018-11-18T10:36:59Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((forecastWeatherRecyclerView.getVisibility()) == (android.view.View.GONE)) { forecastWeatherRecyclerView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/45/buggy-version/app.src.main.java.com.example.abhishek.weatherforecast.WeatherListFragment.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.setVisibility(View.VISIBLE)"], "Fixed commit": "f3db45285181379f6d25762b209a849ca676cd98", "Url": "https://api.github.com/repos/babai-abhishek/OpenWeatherApp", "Date": "2018-12-26T07:46:43Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((controller.Controller.getNodes()) != null) { for (controller.Node eachNode : controller.Controller.getNodes()) { nodeList.getItems().add(eachNode.getId().substring(1, ((eachNode.getId().length()) - 1))); } nodeList.getSelectionModel().selectFirst(); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8815/buggy-version/csTeamProject.src.application.AddApplicationController.java", "BodyUseAPI": [], "Fixed commit": "81520b39b83b2027f726a45201acdc65f07a6007", "Url": "https://api.github.com/repos/Kinshuk1993/teamProject", "Date": "2018-12-09T13:53:23Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((kind == (org.hillview.table.api.ContentsKind.Date)) || (kind == (org.hillview.table.api.ContentsKind.Duration))) kind = org.hillview.table.api.ContentsKind.Double;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3193/buggy-version/platform.src.main.java.org.hillview.table.rows.RowSnapshot.java", "BodyUseAPI": [], "Fixed commit": "fdcac9d5a2be164f88a7d4cba89680eb6d3bb425", "Url": "https://api.github.com/repos/SivaMaplelabs/hillview", "Date": "2018-12-14T23:21:47Z"},
{"Line": "=>551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hdfs.server.federation.store.records.MountTable.getDestinations()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((getClass()) == (org.apache.hadoop.hdfs.server.federation.resolver.MountTableResolver.class)) && ((dests.size()) > 1)) { throw new java.io.IOException((((\"Cannnot build location, \" + (getClass().getSimpleName())) + \" should not resolve multiple destinations for \") + path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3421/buggy-version/hadoop-hdfs-project.hadoop-hdfs-rbf.src.main.java.org.apache.hadoop.hdfs.server.federation.resolver.MountTableResolver.java", "BodyUseAPI": [], "Fixed commit": "97a6e6df8a54b02ed7afbe8b403f17e3ec360257", "Url": "https://api.github.com/repos/mapr/hadoop-common", "Date": "2018-10-30T05:51:08Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.userIcon) == null) userIcon = android.graphics.drawable.Icon.createWithResource(\"resources\", R.drawable.default_profile_icon);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4560/buggy-version/app.src.main.java.com.example.hamlet.mobileprogrammingclass_chat_project.classes.User.java", "BodyUseAPI": [], "Fixed commit": "d58ef4e9d17a3aa095bee4a391b040f3698ed9dc", "Url": "https://api.github.com/repos/GrayWizard12345/MobileProgrammingClass_Chat_project", "Date": "2018-12-19T21:08:46Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lichkin.application.apis.api10003.L.n00.I.getLocale()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(inLocale)) { sql.eq(SysDictionaryR.locale, inLocale); }else { if (!(LKFrameworkStatics.LichKin.equals(compId))) { sql.eq(SysDictionaryR.locale, locale); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4064/buggy-version/lichkin-projects-core-admin.src.main.java.com.lichkin.application.apis.api10003.L.n00.S.java", "BodyUseAPI": ["com.lichkin.framework.db.beans.QuerySQL.eq(SysDictionaryR.locale,java.lang.String)"], "Fixed commit": "efedfd43919ba48ce34b3ff4ef85a99a503c34f7", "Url": "https://api.github.com/repos/LichKinContributor/lichkin-projects-core", "Date": "2018-11-19T12:06:14Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.epfl.sweng.studdybuddy.activities.ChatActivity.3.findViewById(R.id.input)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((input.getText().toString().trim().length()) > 0) { ref.select(Messages.FirebaseNode.CHAT).select(groupID).push(new ch.epfl.sweng.studdybuddy.services.chat.ChatMessage(input.getText().toString(), com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getDisplayName(), downloadUri)); input.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2613/buggy-version/app.src.main.java.ch.epfl.sweng.studdybuddy.activities.ChatActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "android.widget.EditText.setText(java.lang.String)", "input.getText().toString()", "ref.select(Messages.FirebaseNode.CHAT).select(groupID).push(ch.epfl.sweng.studdybuddy.services.chat.ChatMessage)"], "Fixed commit": "c3f429f33209379291da2d7d5b67008084c6366c", "Url": "https://api.github.com/repos/geofot96/StudyBuddy", "Date": "2018-11-28T20:25:59Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (body.startsWith(\"Call Type:\")) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2481/buggy-version/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.DE.DEKentCountyBParser.java", "BodyUseAPI": [], "Fixed commit": "96f05aad976c81979f27c1f472fcaf34acefa91e", "Url": "https://api.github.com/repos/cadpage/cadpage-parsers", "Date": "2018-11-14T01:12:13Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit2.Response<com.bupocket.http.api.dto.resp.ApiResult<com.bupocket.http.api.dto.resp.GetMyTxsRespDto>>.body()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (respDto != null) { android.util.Log.d(\"GetMyTxsRespDto:\", com.alibaba.fastjson.JSON.toJSONString(respDto)); mEmptyView.show(null, null); if (isAdded()) { handleMyTxs(respDto.getData()); } }else { mEmptyView.show(getResources().getString(R.string.emptyView_mode_desc_fail_title), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/338/buggy-version/app.src.main.java.com.bupocket.fragment.BPAssetsDetailFragment.java", "BodyUseAPI": ["com.bupocket.fragment.BPAssetsDetailFragment.5.handleMyTxs(respDto.getData())", "android.util.Log.d(java.lang.String,com.alibaba.fastjson.JSON.toJSONString(respDto))", "com.bupocket.http.api.dto.resp.ApiResult<com.bupocket.http.api.dto.resp.GetMyTxsRespDto>.getData()", "com.alibaba.fastjson.JSON.toJSONString(com.bupocket.http.api.dto.resp.ApiResult<com.bupocket.http.api.dto.resp.GetMyTxsRespDto>)"], "Fixed commit": "af55b7f7c599d197841909dace4dd6ea78a9dbd8", "Url": "https://api.github.com/repos/bpio/bupocket-android", "Date": "2018-11-30T06:32:22Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkAmount(amount))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9797/buggy-version/Project1.src.main.java.revature.project1.services.ReimbursementService.java", "BodyUseAPI": [], "Fixed commit": "35f9845bf7a37ac27fad4bb495d8514c7958cad6", "Url": "https://api.github.com/repos/cabobmassey/caleb_shawn_project1", "Date": "2018-11-03T23:18:26Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gr.ekt.bte.core.MutableRecord.getValues(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (exValues == null) { exValues = new java.util.ArrayList<gr.ekt.bte.core.Value>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5705/buggy-version/dspace.modules.additions.src.main.java.org.dspace.submit.lookup.AuthorityLookupModifier.java", "BodyUseAPI": [], "Fixed commit": "a9ccc7c36fbd60dee24e53c1591f9d7909503707", "Url": "https://api.github.com/repos/4Science/DSpace", "Date": "2018-12-10T15:27:44Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastMoveJump) moveI = lastPiece;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4121/buggy-version/app.src.main.java.shaftware.funwithstrangers.CheckersLogic.java", "BodyUseAPI": [], "Fixed commit": "0de973ba5905840ee83ac3016d676faccaadd4d6", "Url": "https://api.github.com/repos/mstock98/FunWithStrangers", "Date": "2018-12-14T18:13:58Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(_exploded)) this.explode();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1998/buggy-version/src.uet.oop.bomberman.entities.bomb.Bomb.java", "BodyUseAPI": [], "Fixed commit": "2614b3cfe44b805b7b9ecc55bc09ee0839afb574", "Url": "https://api.github.com/repos/UET-INT2204-12-fall-18/assignment-2-bomberman-imu", "Date": "2018-11-12T10:54:48Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof uet.oop.bomberman.entities.bomb.Flame) { remove(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1998/buggy-version/src.uet.oop.bomberman.entities.tile.item.Item.java", "BodyUseAPI": [], "Fixed commit": "2614b3cfe44b805b7b9ecc55bc09ee0839afb574", "Url": "https://api.github.com/repos/UET-INT2204-12-fall-18/assignment-2-bomberman-imu", "Date": "2018-11-12T10:54:48Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getDomain().getLogHomeEnabled())) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1690/buggy-version/operator.src.main.java.oracle.kubernetes.operator.helpers.JobStepContext.java", "BodyUseAPI": [], "Fixed commit": "da529e6fc5e5d65171436efb34e10fad1624b0f1", "Url": "https://api.github.com/repos/oracle/weblogic-kubernetes-operator", "Date": "2018-12-17T02:11:53Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bestgame.maze.Ghost.getBounds()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mazeBounds.get(((com.bestgame.maze.PlayScreen.BOUNDS_COUNT) - 1)).contains(ghostBounds)) { isInside = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/489/buggy-version/Maze.core.src.com.bestgame.maze.PlayScreen.java", "BodyUseAPI": [], "Fixed commit": "e30cd9fc6dab761e84a34424f5cf849b93cf260c", "Url": "https://api.github.com/repos/FlyingZ/BestGame", "Date": "2018-12-29T16:43:02Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Driver.connect(java.lang.String,java.util.Properties)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (connection == null) { throw new org.flywaydb.core.api.FlywayException((\"Unable to connect to \" + (url))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/12/buggy-version/flyway-core.src.main.java.org.flywaydb.core.internal.jdbc.DriverDataSource.java", "BodyUseAPI": [], "Fixed commit": "7e4dca2276a6244129818985735c08aab8def486", "Url": "https://api.github.com/repos/flyway/flyway", "Date": "2018-11-29T22:38:44Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((clusters != null) && (!(done))) { int clusterNumber = 0; for (java.util.Collection<org.cytoscape.model.CyNode> nodes : clusters) { result.put(java.lang.String.valueOf((clusterNumber++)), nodes); } done = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3901/buggy-version/AutoAnnotate.src.main.java.org.baderlab.autoannotate.internal.task.RunClusterMakerResultObserver.java", "BodyUseAPI": [], "Fixed commit": "30fbe41c52cace572fba40f12ca5ed5167544962", "Url": "https://api.github.com/repos/BaderLab/AutoAnnotateApp", "Date": "2018-11-06T15:58:24Z"},
{"Line": "=>1548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((seekbarVolume) == null) { handleSeekbarVolume(progress); }else { setProgressSeekbar(seekbarVolume, progress); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8302/buggy-version/uizacoresdk.src.main.java.uizacoresdk.view.rl.video.UZVideo.java", "BodyUseAPI": [], "Fixed commit": "5614dc21a23ab5bff0a3dcb4e6d56511d1ab8a42", "Url": "https://api.github.com/repos/uizaio/uiza-android-sdk-player", "Date": "2018-11-07T02:19:30Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mSearchText.getText().toString().isEmpty())) { mSuggestionAdapter.setSuggestions(suggestions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2356/buggy-version/searchfragment.src.main.java.com.simplexorg.searchfragment.decorator.SearchSuggestionDecorator.java", "BodyUseAPI": [], "Fixed commit": "1f8ddfd61483fd2ed9df96c567b593f91e9a2807", "Url": "https://api.github.com/repos/JarvisAPI/SearchFragment", "Date": "2018-12-22T17:13:24Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ali.cs491.carbuds.ProfileFragment.user_type.equals(\"driver\")) { com.ali.cs491.carbuds.RouteManager.setUserType(RouteManager.DRIVER); }else { com.ali.cs491.carbuds.RouteManager.setUserType(RouteManager.HITCHHIKER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9620/buggy-version/app.src.main.java.com.ali.cs491.carbuds.ProfileFragment.java", "BodyUseAPI": [], "Fixed commit": "0f22bf8effad6a6a7bc696ea4af91b051fbae69d", "Url": "https://api.github.com/repos/aocet/carbudsAnd", "Date": "2018-12-20T01:54:09Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7335/buggy-version/dataquality-sampling.src.main.java.org.talend.dataquality.datamasking.functions.AbstractGenerateUniqueSsn.java", "BodyUseAPI": [], "Fixed commit": "1c9618038a52824f7b6fff4159e7c79286da0892", "Url": "https://api.github.com/repos/Talend/data-quality", "Date": "2018-10-25T16:16:48Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tdata.historicalWeatherData) == null) { showWeatherStations = false; btShowWeatherStation.setSelected(false); }else if ((showWeatherStations) == true) { showWeatherStations = false; ShowHideWeatherStations(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8864/buggy-version/src.course_generator.maps.JPanelMaps.java", "BodyUseAPI": [], "Fixed commit": "cbff2723cea2d4d8c662eb07cf64028cdc197efc", "Url": "https://api.github.com/repos/FJBDev/Course_Generator", "Date": "2018-11-29T05:47:56Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((response != null) && ((response.getException()) != null)) initCause(response.getException());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1055/buggy-version/src.main.java.net.dv8tion.jda.core.exceptions.ErrorResponseException.java", "BodyUseAPI": [], "Fixed commit": "bb1e38158ea2ca8e495e4c4c2a7045999db460af", "Url": "https://api.github.com/repos/DV8FromTheWorld/JDA", "Date": "2018-11-20T08:31:14Z"},
{"Line": "=>1833", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p1[b.getCurrentRound()]) == (p2[b.getCurrentRound()])) { switch (p1[b.getCurrentRound()]) { case 1 : roundResult = \"You Both Tied.\"; play1.getReplyWriter().println(\"You both chose Rock. The match is a tie!\\n\"); play2.getReplyWriter().println(\"You both chose Rock. The match is a tie!\\n\"); if (((((b.getCurrentRound()) + 1) == (b.getMaxRounds())) || ((b.getP1Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) || ((b.getP2Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) { java.lang.String result = ((b.getP1Score()) > (b.getP2Score())) ? b.getPlayer1() : (b.getP1Score()) == (b.getP2Score()) ? \"it was a tie, nobody\" : b.getPlayer2(); message = ((challenger + \" and \") + player2) + ((b.getMaxRounds()) == 1 ? java.text.MessageFormat.format(\" had a Rock Paper Scissors Battle, {0} won.\\n\", result) : java.text.MessageFormat.format(\" had a best {2} out of {0} Rock Paper Scissors Battle, {1} won.\\n\", b.getMaxRounds(), result, ((int) (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0)))))); this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); updateLeaderboard(b); writeLog(b); }else { java.lang.String broadcast = java.text.MessageFormat.format((\"\\nThat was round {0}, You have {1} more round(s) to go. Please choose \\'Rock\\' \\'Paper\\' or \\'Scissors\\' for the next round.\" + \"\\nOnce both of you have sent in your choices, the next round will be triggered.\"), ((b.getCurrentRound()) + 1), ((b.getMaxRounds()) - ((b.getCurrentRound()) + 1))); play1.getReplyWriter().println(broadcast); play2.getReplyWriter().println(broadcast); b.incrementRound(); } return; case 2 : play1.getReplyWriter().println(\"You both chose Paper. The match is a tie!\\n\"); play2.getReplyWriter().println(\"You both chose Paper. The match is a tie!\\n\"); if (((((b.getCurrentRound()) + 1) == (b.getMaxRounds())) || ((b.getP1Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) || ((b.getP2Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) { java.lang.String result = ((b.getP1Score()) > (b.getP2Score())) ? b.getPlayer1() : (b.getP1Score()) == (b.getP2Score()) ? \"it was a tie, nobody\" : b.getPlayer2(); message = ((challenger + \" and \") + player2) + ((b.getMaxRounds()) == 1 ? java.text.MessageFormat.format(\" had a Rock Paper Scissors Battle, {0} won.\\n\", result) : java.text.MessageFormat.format(\" had a best {2} out of {0} Rock Paper Scissors Battle, {1} won.\\n\", b.getMaxRounds(), result, ((int) (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0)))))); this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); updateLeaderboard(b); writeLog(b); }else { java.lang.String broadcast = java.text.MessageFormat.format((\"\\nThat was round {0}, You have {1} more round(s) to go. Please choose \\'Rock\\' \\'Paper\\' or \\'Scissors\\' for the next round.\" + \"\\nOnce both of you have sent in your choices, the next round will be triggered.\"), ((b.getCurrentRound()) + 1), ((b.getMaxRounds()) - ((b.getCurrentRound()) + 1))); play1.getReplyWriter().println(broadcast); play2.getReplyWriter().println(broadcast); b.incrementRound(); } return; case 3 : play1.getReplyWriter().println(\"You both chose Scissors. The match is a tie!\\n\"); play2.getReplyWriter().println(\"You both chose Scissors. The match is a tie!\\n\"); if (((((b.getCurrentRound()) + 1) == (b.getMaxRounds())) || ((b.getP1Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) || ((b.getP2Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) { java.lang.String result = ((b.getP1Score()) > (b.getP2Score())) ? b.getPlayer1() : (b.getP1Score()) == (b.getP2Score()) ? \"it was a tie, nobody\" : b.getPlayer2(); message = ((challenger + \" and \") + player2) + ((b.getMaxRounds()) == 1 ? java.text.MessageFormat.format(\" had a Rock Paper Scissors Battle, {0} won.\\n\", result) : java.text.MessageFormat.format(\" had a best {2} out of {0} Rock Paper Scissors Battle, {1} won.\\n\", b.getMaxRounds(), result, ((int) (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0)))))); this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); updateLeaderboard(b); writeLog(b); }else { java.lang.String broadcast = java.text.MessageFormat.format((\"\\nThat was round {0}, You have {1} more round(s) to go. Please choose \\'Rock\\' \\'Paper\\' or \\'Scissors\\' for the next round.\" + \"\\nOnce both of you have sent in your choices, the next round will be triggered.\"), ((b.getCurrentRound()) + 1), ((b.getMaxRounds()) - ((b.getCurrentRound()) + 1))); play1.getReplyWriter().println(broadcast); play2.getReplyWriter().println(broadcast); b.incrementRound(); } return; } }else if (((p1[b.getCurrentRound()]) == 1) && ((p2[b.getCurrentRound()]) == 2)) { play1.getReplyWriter().println(((\"You chose Rock. \" + player2) + \" chose Paper. \\nYou lose.\\n\")); play2.getReplyWriter().println(((\"You chose Paper. \" + challenger) + \" chose Rock. \\nYou win.\\n\")); this.leaderboard.incrementScore(play1.getName(), false); this.leaderboard.incrementScore(play2.getName(), true); b.incP2Score(); if (((((b.getCurrentRound()) + 1) == (b.getMaxRounds())) || ((b.getP1Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) || ((b.getP2Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) { java.lang.String result = ((b.getP1Score()) > (b.getP2Score())) ? b.getPlayer1() : (b.getP1Score()) == (b.getP2Score()) ? \"it was a tie, nobody\" : b.getPlayer2(); message = ((challenger + \" and \") + player2) + ((b.getMaxRounds()) == 1 ? java.text.MessageFormat.format(\" had a Rock Paper Scissors Battle, {0} won.\\n\", result) : java.text.MessageFormat.format(\" had a best {2} out of {0} Rock Paper Scissors Battle, {1} won.\\n\", b.getMaxRounds(), result, ((int) (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0)))))); this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); updateLeaderboard(b); writeLog(b); }else { java.lang.String broadcast = java.text.MessageFormat.format((\"\\nThat was round {0}, You have {1} more round(s) to go. Please choose \\'Rock\\' \\'Paper\\' or \\'Scissors\\' for the next round.\" + \"\\nOnce both of you have sent in your choices, the next round will be triggered.\"), ((b.getCurrentRound()) + 1), ((b.getMaxRounds()) - ((b.getCurrentRound()) + 1))); play1.getReplyWriter().println(broadcast); play2.getReplyWriter().println(broadcast); b.incrementRound(); } return; }else if (((p1[b.getCurrentRound()]) == 1) && ((p2[b.getCurrentRound()]) == 3)) { play1.getReplyWriter().println(((\"You chose Rock. \" + player2) + \" chose Scissors. \\nYou win.\\n\")); play2.getReplyWriter().println(((\"You chose Scissors. \" + challenger) + \" chose Rock. \\nYou lose.\\n\")); message = ((((challenger + \" and \") + player2) + \" had a Rock Paper Scissors Battle. \\n\") + challenger) + \" won.\\n\"; this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); writeLog(b); this.leaderboard.incrementScore(play1.getName(), true); this.leaderboard.incrementScore(play2.getName(), false); b.incP1Score(); if (((((b.getCurrentRound()) + 1) == (b.getMaxRounds())) || ((b.getP1Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) || ((b.getP2Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) { java.lang.String result = ((b.getP1Score()) > (b.getP2Score())) ? b.getPlayer1() : (b.getP1Score()) == (b.getP2Score()) ? \"it was a tie, nobody\" : b.getPlayer2(); message = ((challenger + \" and \") + player2) + ((b.getMaxRounds()) == 1 ? java.text.MessageFormat.format(\" had a Rock Paper Scissors Battle, {0} won.\\n\", result) : java.text.MessageFormat.format(\" had a best {2} out of {0} Rock Paper Scissors Battle, {1} won.\\n\", b.getMaxRounds(), result, ((int) (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0)))))); this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); updateLeaderboard(b); writeLog(b); }else { java.lang.String broadcast = java.text.MessageFormat.format((\"\\nThat was round {0}, You have {1} more round(s) to go. Please choose \\'Rock\\' \\'Paper\\' or \\'Scissors\\' for the next round.\" + \"\\nOnce both of you have sent in your choices, the next round will be triggered.\"), ((b.getCurrentRound()) + 1), ((b.getMaxRounds()) - ((b.getCurrentRound()) + 1))); play1.getReplyWriter().println(broadcast); play2.getReplyWriter().println(broadcast); b.incrementRound(); } return; }else if (((p1[b.getCurrentRound()]) == 2) && ((p2[b.getCurrentRound()]) == 1)) { play1.getReplyWriter().println(((\"You chose Paper. \" + player2) + \" chose Rock. \\nYou win.\\n\")); play2.getReplyWriter().println(((\"You chose Rock. \" + challenger) + \" chose Paper. \\nYou lose.\\n\")); message = ((((challenger + \" and \") + player2) + \" had a Rock Paper Scissors Battle. \\n\") + challenger) + \" won.\\n\"; this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); writeLog(b); this.leaderboard.incrementScore(play1.getName(), true); this.leaderboard.incrementScore(play2.getName(), false); b.incP1Score(); if (((((b.getCurrentRound()) + 1) == (b.getMaxRounds())) || ((b.getP1Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) || ((b.getP2Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) { java.lang.String result = ((b.getP1Score()) > (b.getP2Score())) ? b.getPlayer1() : (b.getP1Score()) == (b.getP2Score()) ? \"it was a tie, nobody\" : b.getPlayer2(); message = ((challenger + \" and \") + player2) + ((b.getMaxRounds()) == 1 ? java.text.MessageFormat.format(\" had a Rock Paper Scissors Battle, {0} won.\\n\", result) : java.text.MessageFormat.format(\" had a best {2} out of {0} Rock Paper Scissors Battle, {1} won.\\n\", b.getMaxRounds(), result, ((int) (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0)))))); this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); updateLeaderboard(b); writeLog(b); }else { java.lang.String broadcast = java.text.MessageFormat.format((\"\\nThat was round {0}, You have {1} more round(s) to go. Please choose \\'Rock\\' \\'Paper\\' or \\'Scissors\\' for the next round.\" + \"\\nOnce both of you have sent in your choices, the next round will be triggered.\"), ((b.getCurrentRound()) + 1), ((b.getMaxRounds()) - ((b.getCurrentRound()) + 1))); play1.getReplyWriter().println(broadcast); play2.getReplyWriter().println(broadcast); b.incrementRound(); } return; }else if (((p1[b.getCurrentRound()]) == 2) && ((p2[b.getCurrentRound()]) == 3)) { play1.getReplyWriter().println(((\"You chose Paper. \" + player2) + \" chose Scissors. \\nYou lose.\\n\")); play2.getReplyWriter().println(((\"You chose Scissors. \" + challenger) + \" chose Paper. \\nYou win.\\n\")); message = ((((challenger + \" and \") + player2) + \" had a Rock Paper Scissors Battle. \\n\") + player2) + \" won.\\n\"; this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); writeLog(b); this.leaderboard.incrementScore(play1.getName(), false); this.leaderboard.incrementScore(play2.getName(), true); b.incP2Score(); if (((((b.getCurrentRound()) + 1) == (b.getMaxRounds())) || ((b.getP1Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) || ((b.getP2Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) { java.lang.String result = ((b.getP1Score()) > (b.getP2Score())) ? b.getPlayer1() : (b.getP1Score()) == (b.getP2Score()) ? \"it was a tie, nobody\" : b.getPlayer2(); message = ((challenger + \" and \") + player2) + ((b.getMaxRounds()) == 1 ? java.text.MessageFormat.format(\" had a Rock Paper Scissors Battle, {0} won.\\n\", result) : java.text.MessageFormat.format(\" had a best {2} out of {0} Rock Paper Scissors Battle, {1} won.\\n\", b.getMaxRounds(), result, ((int) (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0)))))); this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); updateLeaderboard(b); writeLog(b); }else { java.lang.String broadcast = java.text.MessageFormat.format((\"\\nThat was round {0}, You have {1} more round(s) to go. Please choose \\'Rock\\' \\'Paper\\' or \\'Scissors\\' for the next round.\" + \"\\nOnce both of you have sent in your choices, the next round will be triggered.\"), ((b.getCurrentRound()) + 1), ((b.getMaxRounds()) - ((b.getCurrentRound()) + 1))); play1.getReplyWriter().println(broadcast); play2.getReplyWriter().println(broadcast); b.incrementRound(); } return; }else if (((p1[b.getCurrentRound()]) == 3) && ((p2[b.getCurrentRound()]) == 1)) { play1.getReplyWriter().println(((\"You chose Scissors. \" + player2) + \" chose Rock. \\nYou lose.\\n\")); play2.getReplyWriter().println(((\"You chose Rock. \" + challenger) + \" chose Scissors. \\nYou win.\\n\")); message = ((((challenger + \" and \") + player2) + \" had a Rock Paper Scissors Battle. \\n\") + player2) + \" won.\\n\"; this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); writeLog(b); this.leaderboard.incrementScore(play1.getName(), false); this.leaderboard.incrementScore(play2.getName(), true); b.incP2Score(); if (((((b.getCurrentRound()) + 1) == (b.getMaxRounds())) || ((b.getP1Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) || ((b.getP2Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) { java.lang.String result = ((b.getP1Score()) > (b.getP2Score())) ? b.getPlayer1() : (b.getP1Score()) == (b.getP2Score()) ? \"it was a tie, nobody\" : b.getPlayer2(); message = ((challenger + \" and \") + player2) + ((b.getMaxRounds()) == 1 ? java.text.MessageFormat.format(\" had a Rock Paper Scissors Battle, {0} won.\\n\", result) : java.text.MessageFormat.format(\" had a best {2} out of {0} Rock Paper Scissors Battle, {1} won.\\n\", b.getMaxRounds(), result, ((int) (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0)))))); this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); updateLeaderboard(b); writeLog(b); }else { java.lang.String broadcast = java.text.MessageFormat.format((\"\\nThat was round {0}, You have {1} more round(s) to go. Please choose \\'Rock\\' \\'Paper\\' or \\'Scissors\\' for the next round.\" + \"\\nOnce both of you have sent in your choices, the next round will be triggered.\"), ((b.getCurrentRound()) + 1), ((b.getMaxRounds()) - ((b.getCurrentRound()) + 1))); play1.getReplyWriter().println(broadcast); play2.getReplyWriter().println(broadcast); b.incrementRound(); } return; }else if (((p1[b.getCurrentRound()]) == 3) && ((p2[b.getCurrentRound()]) == 2)) { play1.getReplyWriter().println(((\"You chose Scissors. \" + player2) + \" chose Paper. \\nYou win.\\n\")); play2.getReplyWriter().println(((\"You chose Paper. \" + challenger) + \" chose Scissors. \\nYou lose.\\n\")); message = ((((challenger + \" and \") + player2) + \" had a Rock Paper Scissors Battle. \\n\") + challenger) + \" won.\\n\"; this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); writeLog(b); this.leaderboard.incrementScore(play1.getName(), true); this.leaderboard.incrementScore(play2.getName(), false); b.incP1Score(); if (((((b.getCurrentRound()) + 1) == (b.getMaxRounds())) || ((b.getP1Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) || ((b.getP2Score()) >= (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))))) { java.lang.String result = ((b.getP1Score()) > (b.getP2Score())) ? b.getPlayer1() : (b.getP1Score()) == (b.getP2Score()) ? \"it was a tie, nobody\" : b.getPlayer2(); message = ((challenger + \" and \") + player2) + ((b.getMaxRounds()) == 1 ? java.text.MessageFormat.format(\" had a Rock Paper Scissors Battle, {0} won.\\n\", result) : java.text.MessageFormat.format(\" had a best {2} out of {0} Rock Paper Scissors Battle, {1} won.\\n\", b.getMaxRounds(), result, ((int) (java.lang.Math.ceil(((b.getMaxRounds()) / 2.0)))))); this.broadcast(map.findRoom(play1.getCurrentRoom()), message); activeBattles.remove(b); updateLeaderboard(b); writeLog(b); }else { java.lang.String broadcast = java.text.MessageFormat.format((\"\\nThat was round {0}, You have {1} more round(s) to go. Please choose \\'Rock\\' \\'Paper\\' or \\'Scissors\\' for the next round.\" + \"\\nOnce both of you have sent in your choices, the next round will be triggered.\"), ((b.getCurrentRound()) + 1), ((b.getMaxRounds()) - ((b.getCurrentRound()) + 1))); play1.getReplyWriter().println(broadcast); play2.getReplyWriter().println(broadcast); b.incrementRound(); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/174/buggy-version/src.GameCore.java", "BodyUseAPI": ["GameCore.writeLog(Battle)", "Battle.getCurrentRound()", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.getMaxRounds()", "GameCore.writeLog(Battle)", "Battle.getMaxRounds()", "GameCore.writeLog(Battle)", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getPlayer1()", "Battle.getMaxRounds()", "GameCore.writeLog(Battle)", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "GameCore.updateLeaderboard(Battle)", "java.text.MessageFormat.format(java.lang.String,b.getMaxRounds(),java.lang.String,double)", "Battle.getP2Score()", "java.text.MessageFormat.format(java.lang.String,((b.getCurrentRound()) + 1),((b.getMaxRounds()) - ((b.getCurrentRound()) + 1)))", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "GameCore.writeLog(Battle)", "java.text.MessageFormat.format(java.lang.String,b.getMaxRounds(),java.lang.String,double)", "Battle.getP2Score()", "Battle.getMaxRounds()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "Battle.getPlayer2()", "Battle.getP2Score()", "Battle.getP1Score()", "java.text.MessageFormat.format(java.lang.String,((b.getCurrentRound()) + 1),((b.getMaxRounds()) - ((b.getCurrentRound()) + 1)))", "Battle.getP1Score()", "GameCore.writeLog(Battle)", "Battle.getMaxRounds()", "Battle.getP1Score()", "Battle.getP1Score()", "Battle.getCurrentRound()", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.getMaxRounds()", "Battle.getCurrentRound()", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "Battle.getP2Score()", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "Battle.getPlayer2()", "Battle.getP1Score()", "Battle.getMaxRounds()", "GameCore.updateLeaderboard(Battle)", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "Battle.getCurrentRound()", "Battle.getCurrentRound()", "Battle.getP1Score()", "Battle.getMaxRounds()", "Battle.incP1Score()", "Battle.getMaxRounds()", "Battle.getP1Score()", "GameCore.writeLog(Battle)", "Battle.incrementRound()", "Battle.getMaxRounds()", "Battle.getPlayer1()", "Battle.getMaxRounds()", "java.text.MessageFormat.format(java.lang.String,((b.getCurrentRound()) + 1),((b.getMaxRounds()) - ((b.getCurrentRound()) + 1)))", "Battle.getCurrentRound()", "Battle.incP2Score()", "Battle.getMaxRounds()", "Battle.getCurrentRound()", "GameCore.updateLeaderboard(Battle)", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.incP2Score()", "Battle.getMaxRounds()", "Battle.incP1Score()", "Battle.getP2Score()", "Battle.getMaxRounds()", "Battle.getCurrentRound()", "Battle.getP2Score()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getP1Score()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getP2Score()", "Battle.getMaxRounds()", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "java.text.MessageFormat.format(java.lang.String,b.getMaxRounds(),java.lang.String,double)", "Battle.getMaxRounds()", "Battle.getP1Score()", "Battle.getCurrentRound()", "GameCore.updateLeaderboard(Battle)", "Battle.getP1Score()", "GameCore.updateLeaderboard(Battle)", "Battle.getCurrentRound()", "Battle.getCurrentRound()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "java.text.MessageFormat.format(java.lang.String,((b.getCurrentRound()) + 1),((b.getMaxRounds()) - ((b.getCurrentRound()) + 1)))", "Battle.getCurrentRound()", "java.text.MessageFormat.format(java.lang.String,((b.getCurrentRound()) + 1),((b.getMaxRounds()) - ((b.getCurrentRound()) + 1)))", "Battle.getP1Score()", "Battle.incrementRound()", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.getCurrentRound()", "Battle.getP1Score()", "Battle.getCurrentRound()", "Battle.getP2Score()", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.incrementRound()", "Battle.getCurrentRound()", "Battle.getP2Score()", "Battle.getP1Score()", "Battle.getP2Score()", "Battle.getP1Score()", "java.text.MessageFormat.format(java.lang.String,((b.getCurrentRound()) + 1),((b.getMaxRounds()) - ((b.getCurrentRound()) + 1)))", "Battle.getP1Score()", "Battle.getMaxRounds()", "GameCore.writeLog(Battle)", "Battle.getP1Score()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getCurrentRound()", "Battle.getP1Score()", "Battle.getCurrentRound()", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.getCurrentRound()", "Battle.getP1Score()", "java.text.MessageFormat.format(java.lang.String,b.getMaxRounds(),java.lang.String,double)", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getMaxRounds()", "Battle.getP1Score()", "Battle.getP1Score()", "Battle.getCurrentRound()", "Battle.incrementRound()", "Battle.getMaxRounds()", "java.text.MessageFormat.format(java.lang.String,b.getMaxRounds(),java.lang.String,double)", "Battle.getP1Score()", "Battle.getMaxRounds()", "Battle.getCurrentRound()", "Battle.getPlayer1()", "Battle.getPlayer2()", "java.text.MessageFormat.format(java.lang.String,((b.getCurrentRound()) + 1),((b.getMaxRounds()) - ((b.getCurrentRound()) + 1)))", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.incrementRound()", "Battle.getP2Score()", "Battle.getP2Score()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getMaxRounds()", "Battle.getPlayer2()", "Battle.getCurrentRound()", "java.util.ArrayList<Battle>.remove(Battle)", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getMaxRounds()", "GameCore.updateLeaderboard(Battle)", "GameCore.updateLeaderboard(Battle)", "Battle.getCurrentRound()", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "GameCore.writeLog(Battle)", "Battle.getP2Score()", "Battle.getP2Score()", "Battle.getP1Score()", "Battle.incrementRound()", "Battle.getMaxRounds()", "Battle.getP1Score()", "Battle.getCurrentRound()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getP2Score()", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.getMaxRounds()", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.getCurrentRound()", "Battle.getMaxRounds()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.getP1Score()", "java.text.MessageFormat.format(java.lang.String,b.getMaxRounds(),java.lang.String,double)", "Battle.getPlayer1()", "GameCore.updateLeaderboard(Battle)", "Battle.getPlayer2()", "Battle.getP1Score()", "java.util.ArrayList<Battle>.remove(Battle)", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getCurrentRound()", "GameCore.writeLog(Battle)", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "GameCore.writeLog(Battle)", "java.text.MessageFormat.format(java.lang.String,((b.getCurrentRound()) + 1),((b.getMaxRounds()) - ((b.getCurrentRound()) + 1)))", "Battle.getMaxRounds()", "Battle.getP2Score()", "Battle.incP2Score()", "Battle.getMaxRounds()", "Battle.getP2Score()", "Battle.getMaxRounds()", "java.text.MessageFormat.format(java.lang.String,b.getMaxRounds(),java.lang.String,double)", "java.text.MessageFormat.format(java.lang.String,b.getMaxRounds(),java.lang.String,double)", "Battle.getCurrentRound()", "Battle.getPlayer2()", "Battle.getP1Score()", "java.util.ArrayList<Battle>.remove(Battle)", "java.text.MessageFormat.format(java.lang.String,((b.getCurrentRound()) + 1),((b.getMaxRounds()) - ((b.getCurrentRound()) + 1)))", "Battle.getCurrentRound()", "Battle.getP2Score()", "Battle.getP2Score()", "Battle.getCurrentRound()", "Battle.getPlayer1()", "Battle.getPlayer1()", "Battle.getP2Score()", "Battle.getPlayer2()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getPlayer1()", "Battle.getCurrentRound()", "Battle.getCurrentRound()", "Battle.getMaxRounds()", "Battle.getP1Score()", "GameCore.writeLog(Battle)", "java.text.MessageFormat.format(java.lang.String,b.getMaxRounds(),java.lang.String,double)", "Battle.getPlayer2()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getCurrentRound()", "GameCore.updateLeaderboard(Battle)", "Battle.getCurrentRound()", "Battle.getMaxRounds()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getPlayer2()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getPlayer1()", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "Battle.getP2Score()", "GameCore.writeLog(Battle)", "Battle.incrementRound()", "Battle.getCurrentRound()", "java.util.ArrayList<Battle>.remove(Battle)", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "Battle.getCurrentRound()", "Battle.getCurrentRound()", "Battle.getMaxRounds()", "Battle.getCurrentRound()", "Battle.getCurrentRound()", "Battle.getCurrentRound()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getP2Score()", "Battle.incrementRound()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getMaxRounds()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "Battle.incP1Score()", "Battle.incrementRound()", "Battle.getMaxRounds()", "Battle.getMaxRounds()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getP2Score()", "Battle.getMaxRounds()", "java.lang.Math.ceil(((b.getMaxRounds()) / 2.0))", "Battle.getCurrentRound()", "GameCore.writeLog(Battle)", "Battle.getPlayer1()", "Battle.getP2Score()", "Battle.getP2Score()", "Battle.getP2Score()", "Battle.getMaxRounds()", "Battle.getP2Score()", "Battle.getCurrentRound()"], "Fixed commit": "721310961c25f0dc95fcc6b7930d7442b746a4d9", "Url": "https://api.github.com/repos/KevinRickard/CS321-2018F-002", "Date": "2018-11-20T17:22:19Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (autoTimeout) { double speed = ((maxVelocity) * (worldUnitsPerTick)) / 0.1; timeout = targetPos / speed; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4559/buggy-version/src.frclib.FrcMotionMagicController.java", "BodyUseAPI": [], "Fixed commit": "ef28206e58460f45303f7a1c6f9371c3081d1540", "Url": "https://api.github.com/repos/coolioasjulio/Frc2018FirstPowerUp", "Date": "2018-12-16T07:56:20Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!apptFound) { throw new seedu.address.logic.commands.exceptions.CommandException(seedu.address.logic.commands.DeleteApptCommand.MESSAGE_APPT_NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/432/buggy-version/src.main.java.seedu.address.logic.commands.DeleteApptCommand.java", "BodyUseAPI": [], "Fixed commit": "306dcfeb86636f6b9dfd69525d78322e0702032b", "Url": "https://api.github.com/repos/brandonccm1996/T12-2_addressbook-level4", "Date": "2018-11-03T12:01:55Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.tasks.Task.getResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (currentLocation != null) { android.util.Log.i(com.example.avivmoyal.minsta.MapsActivity.TAG, (\"latlang\" + (new com.google.android.gms.maps.model.LatLng(currentLocation.getLatitude(), currentLocation.getLongitude()).toString()))); moveCamera(new com.google.android.gms.maps.model.LatLng(currentLocation.getLatitude(), currentLocation.getLongitude()), com.example.avivmoyal.minsta.MapsActivity.DEFAULT_ZOOM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3233/buggy-version/app.src.main.java.com.example.avivmoyal.minsta.MapsActivity.java", "BodyUseAPI": ["com.google.android.gms.maps.model.LatLng.toString()", "android.util.Log.i(java.lang.String,java.lang.String)", "android.location.Location.getLatitude()", "com.example.avivmoyal.minsta.MapsActivity.1.moveCamera(com.google.android.gms.maps.model.LatLng,float)", "android.location.Location.getLongitude()", "android.location.Location.getLatitude()", "android.location.Location.getLongitude()"], "Fixed commit": "51392285523f070ee0112d070e1c219e4201baf1", "Url": "https://api.github.com/repos/AvivMoyal/Minsta", "Date": "2018-11-29T13:20:23Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (variant.getMediaType().equals(MediaType.TEXT_PLAIN)) { net.idea.restnet.db.reporter.BucketCSVReporter cmpreporter = new net.idea.restnet.db.reporter.BucketCSVReporter(); cmpreporter.setDelimiter(\"\\t\"); return new net.idea.restnet.db.convertors.OutputWriterConvertor(cmpreporter, org.restlet.data.MediaType.TEXT_PLAIN); }else if (variant.getMediaType().equals(MediaType.APPLICATION_JAVASCRIPT)) { java.lang.String jsonpcallback = ambit2.rest.substance.study.SubstanceStudyTableResource.getParams().getFirstValue(\"jsonp\"); if (jsonpcallback == null) jsonpcallback = ambit2.rest.substance.study.SubstanceStudyTableResource.getParams().getFirstValue(\"callback\"); return new net.idea.restnet.db.convertors.OutputWriterConvertor(createJSONReporter(), org.restlet.data.MediaType.APPLICATION_JAVASCRIPT); }else { return new net.idea.restnet.db.convertors.OutputWriterConvertor(createJSONReporter(), org.restlet.data.MediaType.APPLICATION_JSON, filenamePrefix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/250/buggy-version/ambit2-all.ambit2-apps.ambit2-www.src.main.java.ambit2.rest.substance.study.SubstanceStudyTableResource.java", "BodyUseAPI": ["variant.getMediaType().equals(MediaType.APPLICATION_JAVASCRIPT)", "org.restlet.representation.Variant.getMediaType()"], "Fixed commit": "1c479ecfce7b6f866987ccf44aedeb6bc2e6e11e", "Url": "https://api.github.com/repos/ideaconsult/ambit-mirror", "Date": "2018-12-21T17:45:31Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s2.equalsIgnoreCase(\"null\")) { nameCapitalized = s1 + (categoryName.substring(1).toLowerCase()); }else { nameCapitalized = ((s1 + (categoryName.substring(1, (index + 1)).toLowerCase())) + s2) + (categoryName.substring((index + 2)).toLowerCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1406/buggy-version/src.main.java.org.upgrad.services.CategoryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "9f40fb5da513bcd2e1ecd65a88d3fe1edff32c21", "Url": "https://api.github.com/repos/Apoorva2405/food-ordering-backend", "Date": "2018-12-06T16:36:36Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (categoryName.contains(\" \")) { index = categoryName.indexOf(\" \"); s2 = categoryName.substring((index + 1), (index + 2)).toUpperCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1406/buggy-version/src.main.java.org.upgrad.services.CategoryServiceImpl.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.toUpperCase()", "java.lang.String.substring(int,int)"], "Fixed commit": "9f40fb5da513bcd2e1ecd65a88d3fe1edff32c21", "Url": "https://api.github.com/repos/Apoorva2405/food-ordering-backend", "Date": "2018-12-06T16:36:36Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anArrayTargetType == null) { if (isIntegrityType(tempResult.getClass().getComponentType())) { anArrayTargetType = java.lang.Object.class; }else { anArrayTargetType = tempResult.getClass().getComponentType(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8878/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.java", "BodyUseAPI": [], "Fixed commit": "877e37c5c9eb4543b5b96e172f6b90975aff5a5a", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2018-12-12T13:30:12Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((name != null) && (name.startsWith(\"com.tencent.tinker.loader.\"))) && (!(name.equals(SystemClassLoaderAdder.CHECK_DEX_CLASS)))) { return originClassLoader.loadClass(name); }else if ((name != null) && (name.startsWith(\"org.apache.http.\"))) { return originClassLoader.loadClass(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1594/buggy-version/tinker-android.tinker-android-loader.src.main.java.com.tencent.tinker.loader.AndroidNClassLoader.java", "BodyUseAPI": ["dalvik.system.PathClassLoader.loadClass(java.lang.String)", "dalvik.system.PathClassLoader.loadClass(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "edddb2564de4d3d616c4d41fb5cc620daf946dcf", "Url": "https://api.github.com/repos/Tencent/tinker", "Date": "2018-11-30T12:49:14Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((PressingSpace) == false) { if ((p.air) < (p.jumps)) { p.jumping = true; } (p.air)++; PressingSpace = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3747/buggy-version/src.Game.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "0380334ed9c475f9c7168a6a130c23f9831c8eba", "Url": "https://api.github.com/repos/Artinkim/Level2-Game", "Date": "2018-11-28T06:42:13Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_SPACE)) { PressingSpace = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3747/buggy-version/src.Game.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "0380334ed9c475f9c7168a6a130c23f9831c8eba", "Url": "https://api.github.com/repos/Artinkim/Level2-Game", "Date": "2018-11-28T06:42:13Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(mDate_EditText.getText().toString().trim()))) { java.util.Date alertDate = mHelper.getAdjustedDate(mDate_EditText.getText().toString().trim(), mReminderLength); noteUtil.generateAlarm(this, alertDate, com.example.kyle.c196_class_tracker.activities.AssessmentDetails.ALARM_NOTIFICATION_ID); android.widget.Toast.makeText(this, (\"Assessment Alert set for \" + (alertDate.toString())), Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(this, \"A data is required to create an alert\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8903/buggy-version/app.src.main.java.com.example.kyle.c196_class_tracker.activities.AssessmentDetails.java", "BodyUseAPI": ["mDate_EditText.getText().toString()", "mDate_EditText.getText().toString().trim()", "com.example.kyle.c196_class_tracker.utilities.Helper.getAdjustedDate(mDate_EditText.getText().toString().trim(),int)", "android.widget.EditText.getText()"], "Fixed commit": "021706f8d0a7564ad0baa77c1114813f3b02e523", "Url": "https://api.github.com/repos/kretherford0983/C196_Class_Tracker", "Date": "2018-12-18T03:56:10Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.contains(\"1\")) { value += (((((((\" \" + \"R\") + (java.lang.Integer.parseInt(code[2], 2))) + \", \") + \"R\") + (java.lang.Integer.parseInt(code[3], 2))) + \", \") + \"#\") + (java.lang.Integer.parseInt(code[1], 2)); }else { value = \"NOP\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6699/buggy-version/ecnu-kang.src.main.java.com.ecnu.kang.architecture.ProjectOne.java", "BodyUseAPI": [], "Fixed commit": "26e29d31dc409cb470e9e67fc32f665cbaea4ad4", "Url": "https://api.github.com/repos/kangwanqiang/passion-kang", "Date": "2018-11-22T11:57:35Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((info.flags) & (android.media.MediaCodec.BUFFER_FLAG_CODEC_CONFIG)) != 0) { info.size = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/959/buggy-version/sdl_android.src.main.java.com.smartdevicelink.encoder.VirtualDisplayEncoder.java", "BodyUseAPI": [], "Fixed commit": "0b908cdf711d7440bd2d01bc62492c631970a799", "Url": "https://api.github.com/repos/shiniwat/sdl_android-1", "Date": "2018-11-09T12:13:19Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.akybenko.company.service.UserService.findByEmail(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { return new org.springframework.http.ResponseEntity(false, org.springframework.http.HttpStatus.OK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6415/buggy-version/src.main.java.com.akybenko.company.controller.ApiController.java", "BodyUseAPI": [], "Fixed commit": "05d576abc429d2b381ad82072d49158905edc28e", "Url": "https://api.github.com/repos/endryu1994/company", "Date": "2018-11-21T15:19:01Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) != null) { java.lang.System.err.println(((((\"Error in running mod \" + (id)) + \" \") + (method.getName())) + \":\")); e.getCause().printStackTrace(); }else { java.lang.System.err.println((((\"Unknown error in running mod \" + (id)) + \" \") + (method.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2846/buggy-version/src.main.java.engine.modLoader.LoadedMod.java", "BodyUseAPI": ["java.lang.reflect.InvocationTargetException.getCause()", "java.lang.Throwable.printStackTrace()"], "Fixed commit": "8d6a93d9d172e46f68516c1d7a01353f84c73199", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2018-12-10T16:10:08Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.oxygenxml.cmis.core.urlhandler.CmisURLConnection.getCMISObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (document.isVersionable()) { document = document.getObjectOfLatestVersion(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5006/buggy-version/oxygen-cmis-protocol.src.main.java.com.oxygenxml.cmis.core.urlhandler.CmisURLConnection.java", "BodyUseAPI": ["org.apache.chemistry.opencmis.client.api.Document.getObjectOfLatestVersion(boolean)"], "Fixed commit": "41f9e4d82d0bae819a2100f10a430339e85d1df1", "Url": "https://api.github.com/repos/oxygenxml/oxygen-cmis-plugin", "Date": "2018-11-08T13:48:53Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9142/buggy-version/dataquality-sampling.src.main.java.org.talend.dataquality.datamasking.functions.AbstractGenerateUniqueSsn.java", "BodyUseAPI": [], "Fixed commit": "4380010a8ce2ac1292145e618dea49ec5bb9401f", "Url": "https://api.github.com/repos/Talend/data-quality", "Date": "2018-10-25T16:16:48Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (queryText.contains(\"'\")) { queryText = queryText.replaceAll(\"'\", \"''\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6589/buggy-version/app.src.main.java.edu.haverford.cs.zapotecdictionary.DBHelper.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "5caa897d1a09095594f218f2d47b239fc6a394db", "Url": "https://api.github.com/repos/zhanpengwang888/ZapotecDictionary", "Date": "2018-12-18T05:03:09Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult>.getException()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (e != null) { if ((e.getClass()) == (com.google.firebase.auth.FirebaseAuthWeakPasswordException.class)) { etPassword.setError(getString(R.string.error_weak_password)); etPassword.requestFocus(); }else if ((e.getClass()) == (com.google.firebase.auth.FirebaseAuthUserCollisionException.class)) { etEmail.setError(getString(R.string.error_email_taken)); etEmail.requestFocus(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5606/buggy-version/app.src.main.java.com.project.technion.appark.activities.RegisterActivity.java", "BodyUseAPI": ["java.lang.Exception.getClass()", "java.lang.Exception.getClass()"], "Fixed commit": "df90d13f22409c49b806cb0ccf84dd5c8f43016b", "Url": "https://api.github.com/repos/TechnionYP5779/team2-Appark", "Date": "2018-12-15T15:06:15Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((accountEvent.getStatus()) != null) { listAccount.add(accountEvent.getAccount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/682/buggy-version/src.main.java.dev.fcodeapi.controllers.EventDetailController.java", "BodyUseAPI": ["dev.fcodeapi.controllers.AccountEventEntity.getAccount()", "java.util.List<dev.fcodeapi.controllers.AccountEntity>.add(accountEvent.getAccount())"], "Fixed commit": "25a34434549b195d440b635fa60c1694821e4697", "Url": "https://api.github.com/repos/hungptse/fcode-api", "Date": "2018-12-09T18:54:46Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anArrayTargetType == null) { if (isIntegrityType(tempResult.getClass().getComponentType())) { anArrayTargetType = java.lang.Object.class; }else { anArrayTargetType = tempResult.getClass().getComponentType(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5530/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.java", "BodyUseAPI": [], "Fixed commit": "a1314eddb211ec07ae10dc8dae7ac28e63a8c5e8", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2018-12-12T13:32:42Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result != 0) { if (!topRight) { if (result != 0) { renderer.drawRightTriangle((px + 2), py, color.leftFace(result)); topRight = true; } } if (!right) { renderer.drawLeftTriangle((px + 2), (py - 2), color.leftFace(result)); right = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6118/buggy-version/src.main.java.warpwriter.view.SimpleDraw.java", "BodyUseAPI": ["warpwriter.view.ITriangleRenderer.drawLeftTriangle(int,int,color.leftFace(result))", "warpwriter.view.IVoxelColor.leftFace(byte)", "warpwriter.view.IVoxelColor.leftFace(byte)", "warpwriter.view.ITriangleRenderer.drawRightTriangle(int,int,color.leftFace(result))"], "Fixed commit": "5408d6fac60ef845839febc1ecdd98a54a11a8d4", "Url": "https://api.github.com/repos/tommyettinger/WarpWriter", "Date": "2018-11-26T03:01:46Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsonArray.getJSONArray(3).get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.alibaba.fastjson.JSONObject.class.isAssignableFrom(obj.getClass())) { com.alibaba.fastjson.JSONObject jsonObj = ((com.alibaba.fastjson.JSONObject) (obj)); obj = jsonObj.toJavaObject(callResult.getReturnType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3667/buggy-version/src.main.java.github.slimrpc.core.io.handler.ResultCommandHandler.java", "BodyUseAPI": [], "Fixed commit": "be21d5762847eec49c33e423b6b59d1596cbd810", "Url": "https://api.github.com/repos/lmxy1990/slimrpc", "Date": "2018-11-06T02:53:31Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isKeyLength) { for (char c : key.toCharArray()) { if ((!(CharSet.NUMERIC.isInCharSet(c))) && (!(java.lang.Character.isWhitespace(c)))) isKeyLength = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4714/buggy-version/DecrypterGUI.java", "BodyUseAPI": [], "Fixed commit": "87dbb8cfc31207c06799d5f483f4a48770a96630", "Url": "https://api.github.com/repos/Ivanov1ch/Decrypter", "Date": "2018-11-15T22:12:25Z"},
{"Line": "=>912", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!cacheWorked) { life.genny.utils.RulesUtils.println(\"LOADING ATTRIBUTES FROM API\"); java.lang.String jsonString = life.genny.qwandautils.QwandaUtils.apiGet(((life.genny.qwandautils.GennySettings.qwandaServiceUrl) + \"/qwanda/attributes\"), token); life.genny.utils.VertxUtils.writeCachedJson(\"attributes\", jsonString); life.genny.utils.RulesUtils.attributesMsg = life.genny.qwandautils.JsonUtils.fromJson(jsonString, life.genny.qwanda.message.QDataAttributeMessage.class); life.genny.qwanda.attribute.Attribute[] attributeArray = life.genny.utils.RulesUtils.attributesMsg.getItems(); for (life.genny.qwanda.attribute.Attribute attribute : attributeArray) { life.genny.utils.RulesUtils.attributeMap.put(attribute.getCode(), attribute); } life.genny.utils.RulesUtils.println(((\"All the attributes have been loaded from api in\" + (life.genny.utils.RulesUtils.attributeMap.size())) + \" attributes\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8831/buggy-version/src.main.java.life.genny.utils.RulesUtils.java", "BodyUseAPI": [], "Fixed commit": "1ca120c3d57aacc11b9242c554d2ae67b1849e85", "Url": "https://api.github.com/repos/genny-project/genny-verticle-rules", "Date": "2018-12-05T03:21:13Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.isFinishing()) || (this.isDestroyed())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6939/buggy-version/app.src.main.java.in.ngsc.sixty.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7f95fe5233d683729d64b8888af323fdb6641dce", "Url": "https://api.github.com/repos/yogesh2jadhav/Game2", "Date": "2018-12-15T09:06:16Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.hasErrors()) { return new org.springframework.http.ResponseEntity<java.lang.String>(\"Invalid Project\", org.springframework.http.HttpStatus.BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7604/buggy-version/project-management-server.src.main.java.com.aaroncarlson.projectmanagement.api.controller.ProjectController.java", "BodyUseAPI": [], "Fixed commit": "ba2d77fcf006368d6056c5ad6642346f2b79dff2", "Url": "https://api.github.com/repos/acarlson90/project-management", "Date": "2018-12-24T03:40:12Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameterMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pMap.containsKey((\"textquestion\" + questionid))) { java.lang.String tmpKey = \"textquestion\" + questionid; if (!(pMap.get(tmpKey)[0].isEmpty())) { answer.setTextChoice(1); answer.setTextChoiceContent(pMap.get((\"textquestion\" + questionid))[0]); } processedQuestionId.add(questionid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3127/buggy-version/hospital-wechat.src.main.java.com.hospital.action.surveyAction.java", "BodyUseAPI": ["com.hospital.action.Answer.setTextChoiceContent(java.lang.String)", "java.lang.String.isEmpty()", "java.util.Map<java.lang.String, java.lang.String[]>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String[]>.get(java.lang.String)", "java.util.Set<java.lang.Integer>.add(int)"], "Fixed commit": "449f1dc23d63a23807596227af5c3337ae41a469", "Url": "https://api.github.com/repos/lht142934/HospitalSystem", "Date": "2018-04-13T13:16:56Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedIndex) != (-1)) return ((T) (this.adapter.list.get(selectedIndex)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8428/buggy-version/module.label.src.main.java.com.hzc.label.LabelView.java", "BodyUseAPI": [], "Fixed commit": "99e59b5aa5da116a5d9effeb0f49a3fb75a46d82", "Url": "https://api.github.com/repos/15875641474/hzc.label", "Date": "2018-12-11T10:47:59Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.getUser().getPermissions()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (permissions == null) { attributesManager.setSessionAttributes(java.util.Collections.singletonMap(\"State\", GuideStates.GET_HOME_ADDR)); return guidelines.handlers.Setup.putTogether(\"Home Adresse\", SpeechStrings.NO_PERMISSION_DEVICE_GET_HOME).build(); }else { java.lang.String deviceAddressJson = getDeviceAddress(apiEndpoint, deviceId, apiAccessToken); if ((deviceAddressJson != null) && (!(deviceAddressJson.isEmpty()))) { persistentAttributes.put(\"HOME\", deviceAddressJson); attributesManager.savePersistentAttributes(); }else { attributesManager.setSessionAttributes(java.util.Collections.singletonMap(\"State\", GuideStates.GET_HOME_ADDR)); return guidelines.handlers.Setup.putTogether(\"Home Adresse\", SpeechStrings.NO_PERMISSION_DEVICE_GET_HOME).build(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6373/buggy-version/src.main.java.guidelines.handlers.Setup.java", "BodyUseAPI": [], "Fixed commit": "fcba9638b560954c52a58487fa33a5534061c84c", "Url": "https://api.github.com/repos/sweIhm-ws2018-19/skillproject-fr-31", "Date": "2018-12-19T17:44:23Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isbn.length()) != 13) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4978/buggy-version/src.main.java.ohtu.takarivi.lukuvinkit.forms.BookAddForm.java", "BodyUseAPI": [], "Fixed commit": "ba290db34a6e144527066b1531201befe02f59de", "Url": "https://api.github.com/repos/ohtu-takarivi/lukuvinkit", "Date": "2018-11-24T04:36:42Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((media) != null) { return media; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/274/buggy-version/app.src.main.java.brain_socket.com.dekaneh.network.model.Product.java", "BodyUseAPI": [], "Fixed commit": "00e7171642281f6e86bc86511f8f780b41688caa", "Url": "https://api.github.com/repos/molhamstein/DekanehAndroid", "Date": "2018-11-05T12:11:19Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (offset > 0) { sig = meth.substring(offset); meth = meth.substring(0, offset); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/727/buggy-version/src.panels.DatabaseTable.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "c4702bcc7afaf15c16006699fa5a2bd61c3e7fb8", "Url": "https://api.github.com/repos/dmcd2356/danlauncher", "Date": "2018-12-05T22:54:08Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (offset > 0) { cls = meth.substring(0, offset); meth = meth.substring((offset + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/727/buggy-version/src.panels.DatabaseTable.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int)"], "Fixed commit": "c4702bcc7afaf15c16006699fa5a2bd61c3e7fb8", "Url": "https://api.github.com/repos/dmcd2356/danlauncher", "Date": "2018-12-05T22:54:08Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userinfo[1].equals(\"default\")) { profileImage.setImageResource(R.mipmap.ic_launcher_round); }else { com.bumptech.glide.Glide.with(this).load((((neolabs.kok.retrofit.RetrofitExService.BASE_URL) + \"images/\") + (userinfo[1]))).apply(com.bumptech.glide.request.RequestOptions.circleCropTransform()).into(myViewHolder.profileImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7598/buggy-version/app.src.main.java.neolabs.kok.activity.KokCommentActivity.java", "BodyUseAPI": ["com.bumptech.glide.Glide.with(this).load((((neolabs.kok.retrofit.RetrofitExService.BASE_URL) + \"images/\") + (userinfo[1]))).apply(com.bumptech.glide.request.RequestOptions.circleCropTransform())", "com.bumptech.glide.Glide.with(this).load((((neolabs.kok.retrofit.RetrofitExService.BASE_URL) + \"images/\") + (userinfo[1]))).apply(com.bumptech.glide.request.RequestOptions.circleCropTransform()).into(android.widget.ImageView)", "com.bumptech.glide.Glide.with(this).load((((neolabs.kok.retrofit.RetrofitExService.BASE_URL) + \"images/\") + (userinfo[1])))"], "Fixed commit": "7a904b7051abe1145d33534c68427b7e0c678bf8", "Url": "https://api.github.com/repos/TaeUkKim/KokAndroid-New", "Date": "2018-12-24T11:10:19Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6796/buggy-version/dataquality-sampling.src.main.java.org.talend.dataquality.datamasking.functions.AbstractGenerateUniqueSsn.java", "BodyUseAPI": [], "Fixed commit": "5ec67474eb6d75caa6c5ae63509557f1287f4a7b", "Url": "https://api.github.com/repos/Talend/data-quality", "Date": "2018-10-25T16:16:48Z"},
{"Line": "=>1236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ramadda.repository.metadata.Request.responseAsJson()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (doJson) { sb.append(org.ramadda.util.Json.list(new java.util.ArrayList<java.lang.String>())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3149/buggy-version/src.org.ramadda.repository.metadata.MetadataManager.java", "BodyUseAPI": [], "Fixed commit": "6ef9fe8e5b63f4bccb8da1227206d81f4d5b9a20", "Url": "https://api.github.com/repos/geodesystems/ramadda", "Date": "2018-12-06T02:41:42Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (block.getType().toString().contains(\"WOOL\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6691/buggy-version/core.src.main.java.be.isach.ultracosmetics.cosmetics.gadgets.GadgetPaintballGun.java", "BodyUseAPI": [], "Fixed commit": "90675b81a26bc29fc06a16ad0914c069c6ea6f93", "Url": "https://api.github.com/repos/RadBuilder/UltraCosmetics", "Date": "2018-11-11T05:38:58Z"},
{"Line": "=>811", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((leftTypeCheckInfo.getCompoundTypes()) != null) || ((rightTypeCheckInfo.getCompoundTypes()) != null)) { }else { try { throw new com.ge.research.sadl.reasoner.TranslationException(\"Unexpected failure to find binary operation type checking type\"); } catch (com.ge.research.sadl.reasoner.TranslationException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/853/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelValidator.java", "BodyUseAPI": [], "Fixed commit": "37f2d70b31c64b0d3453bcb8c0823e998dcc7a46", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2018-11-27T14:08:05Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((filename != null) && (!(filename.equals(\"\")))) { java.lang.String filePath = (uploadPath + (java.io.File.separator)) + filename; java.lang.String[] fileInfo = new java.lang.String[]{ filename, com.study.util.Upload.getExtension(filename), filePath }; fileInfoList.add(fileInfo); java.io.File storeFile = new java.io.File(filePath); item.write(storeFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9303/buggy-version/src.com.study.util.Upload.java", "BodyUseAPI": ["com.study.util.Upload.getExtension(java.lang.String)"], "Fixed commit": "903e88fa28ab1812dd477d879dda69ca8cdaaa8f", "Url": "https://api.github.com/repos/XJTUITPM/ITPM", "Date": "2018-11-20T13:57:52Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(folder.isDirectory())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8010/buggy-version/inside-util-web.src.main.java.es.mpt.dsic.inside.service.impl.TemporalDataBusinessServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "abcc1b26155b9ba2f43b82d51c7a1510320a7a1c", "Url": "https://api.github.com/repos/carm-es/inside", "Date": "2018-11-08T09:41:43Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(response.body().string(),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (a.getRes().equals(\"sql_wrong\")) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7572/buggy-version/app.src.main.java.com.example.administrator.connect.ConnTool.java", "BodyUseAPI": [], "Fixed commit": "6f9e88c56d05f8f17e087e6b31447348e63051d5", "Url": "https://api.github.com/repos/unbelievablecj/Onestep", "Date": "2018-12-21T08:03:02Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serializedObject) == null) { cells = original; grid.setCells(cells); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7037/buggy-version/app.src.main.java.com.k.hilaris.alpha.views.sudoku.SudokuGridFragment.java", "BodyUseAPI": [], "Fixed commit": "bcc7e9b986970f6d7e552e13a008a8f90390de73", "Url": "https://api.github.com/repos/Listsene/alpha", "Date": "2018-11-25T16:26:31Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sunbird.systemsettings.dao.impl.SystemSettingDaoImpl.readByField(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (systemSetting != null) { userClient.esIsEmailUnique(java.lang.Boolean.parseBoolean(systemSetting.getValue()), java.lang.Boolean.parseBoolean(((java.lang.String) (req.get(JsonKey.VALUE))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7567/buggy-version/actors.systemsettings.src.main.java.org.sunbird.systemsettings.actors.SystemSettingsActor.java", "BodyUseAPI": ["org.sunbird.models.systemsetting.SystemSetting.getValue()", "org.sunbird.actorutil.user.UserClient.esIsEmailUnique(boolean,boolean)", "java.lang.Boolean.parseBoolean(systemSetting.getValue())"], "Fixed commit": "133a35ed6d65ba911d29fff26bda5ebc56b6de74", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-11-15T09:59:18Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sunbird.systemsettings.dao.impl.SystemSettingDaoImpl.readByField(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (systemSetting != null) { userClient.esIsPhoneUnique(java.lang.Boolean.parseBoolean(systemSetting.getValue()), java.lang.Boolean.parseBoolean(((java.lang.String) (req.get(JsonKey.VALUE))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7567/buggy-version/actors.systemsettings.src.main.java.org.sunbird.systemsettings.actors.SystemSettingsActor.java", "BodyUseAPI": ["org.sunbird.models.systemsetting.SystemSetting.getValue()", "java.lang.Boolean.parseBoolean(systemSetting.getValue())", "org.sunbird.actorutil.user.UserClient.esIsPhoneUnique(boolean,boolean)"], "Fixed commit": "133a35ed6d65ba911d29fff26bda5ebc56b6de74", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-11-15T09:59:18Z"},
{"Line": "=>1570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((io_in) == null) { throw new com.jcraft.jsch.JSchException(\"channel is down or not be connected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5607/buggy-version/src.main.java.com.jcraft.jsch.ChannelSftp.java", "BodyUseAPI": [], "Fixed commit": "b0857d72969e295efced95fffc46dd690e8458c8", "Url": "https://api.github.com/repos/guolianwei/jsch", "Date": "2018-11-12T06:34:41Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.nio.file.Files.exists(hasParent))) { org.apache.commons.io.FileUtils.forceMkdirParent(new java.io.File(uri, path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7868/buggy-version/scheduler.scheduler-node.src.main.java.org.ow2.proactive.scheduler.task.executors.InProcessTaskExecutor.java", "BodyUseAPI": [], "Fixed commit": "da70b0cc613072e4cff016c3656d60e747154416", "Url": "https://api.github.com/repos/amouhoub/scheduling", "Date": "2018-11-06T13:34:05Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (a != null) { images = ((java.lang.String[]) (a.getArray())); java.lang.System.out.println(\"got JAVA object array\"); java.lang.System.out.println(\"images: OK\"); }else { images = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/860/buggy-version/src.com.xmum.Post.PostServlet.java", "BodyUseAPI": ["java.sql.Array.getArray()"], "Fixed commit": "ced3b0a33be41453d7739b69d17b34a0078b7cc1", "Url": "https://api.github.com/repos/cheesuesien/xmum-facebook", "Date": "2018-12-31T14:21:13Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pieces.spaserver.mapper.user.UserMapper.getUserRoles(com.pieces.spaserver.model.user.User)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((roleList.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/422/buggy-version/src.main.java.com.pieces.spaserver.config.security.CustomUserDetailsServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "1b4ac33f5697c989d39a16d89425e4209dba831c", "Url": "https://api.github.com/repos/pieces1994212/Spa-Server", "Date": "2018-11-16T02:12:46Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == string) return mirror;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4843/buggy-version/src.main.java.tudelft.mirror.Mirror.java", "BodyUseAPI": [], "Fixed commit": "771bdbb5290b40add48e3afa74d0c452a56ad1cc", "Url": "https://api.github.com/repos/moiatgit/mooc-software-testing", "Date": "2018-11-30T10:31:05Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(me.RockinChaos.itemjoin.utils.sqlite.SQLData.hasFirstJoined(player, itemMap.getConfigName()))) && (!(me.RockinChaos.itemjoin.utils.sqlite.SQLData.hasIPLimited(player, itemMap.getConfigName())))) { me.RockinChaos.itemjoin.giveitems.utils.ItemUtilities.putFailCount(player, ((me.RockinChaos.itemjoin.giveitems.utils.ItemUtilities.getFailCount().get(player)) + 1)); me.RockinChaos.itemjoin.handlers.ServerHandler.sendDebugMessage((\"Failed to give; \" + (itemMap.getConfigName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5564/buggy-version/src.me.RockinChaos.itemjoin.giveitems.utils.ItemUtilities.java", "BodyUseAPI": ["me.RockinChaos.itemjoin.giveitems.utils.ItemMap.getConfigName()", "me.RockinChaos.itemjoin.giveitems.utils.ItemUtilities.putFailCount(org.bukkit.entity.Player,((me.RockinChaos.itemjoin.giveitems.utils.ItemUtilities.getFailCount().get(player)) + 1))", "java.util.HashMap<org.bukkit.entity.Player, java.lang.Integer>.get(org.bukkit.entity.Player)", "me.RockinChaos.itemjoin.handlers.ServerHandler.sendDebugMessage((\"Failed to give; \" + (itemMap.getConfigName())))"], "Fixed commit": "505a969239a0f23c35d4b81452502c3bb8668e2b", "Url": "https://api.github.com/repos/RockinChaos/ItemJoin", "Date": "2018-12-27T22:08:38Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (basename.startsWith(\"javassist.util.proxy.\")) return this.getClass(); else if (((superClass) != null) && ((superClass) != (javassist.util.proxy.ProxyFactory.OBJECT_TYPE))) return superClass; else if (((interfaces) != null) && ((interfaces.length) > 0)) return interfaces[0]; else return this.getClass();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9116/buggy-version/src.main.javassist.util.proxy.ProxyFactory.java", "BodyUseAPI": [], "Fixed commit": "a82e2d71bd3da248dab836f4e150ff08cc0e6915", "Url": "https://api.github.com/repos/NingZhang-e/javassist", "Date": "2018-12-04T15:19:56Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (b.isSelected()) { b.getParent().requestChildFocus(b, b); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2154/buggy-version/app.src.main.java.com.mkulesh.onpc.MediaFragment.java", "BodyUseAPI": ["android.support.v7.widget.AppCompatButton.getParent()", "b.getParent().requestChildFocus(android.support.v7.widget.AppCompatButton,android.support.v7.widget.AppCompatButton)"], "Fixed commit": "787a3814226ef1b4025d0338635541d9db0c638a", "Url": "https://api.github.com/repos/mkulesh/onpc", "Date": "2018-11-20T19:46:00Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.regex.Pattern.compile(\"^\\\\d{4}/\\\\d{2}/\\\\d{2}\\\\s+\\\\d{2}:\\\\d{2}:\\\\d{2}$\").matcher(dateStr).find()) { return entity.query.Datetime.parse(dateStr, \"yyyy/MM/dd HH:mm:ss\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1336/buggy-version/entity.queryable.src.entity.query.Datetime.java", "BodyUseAPI": ["entity.query.Datetime.parse(java.lang.String,java.lang.String)"], "Fixed commit": "5d68bc4d02a2944ef031c2b38e07842a38480afe", "Url": "https://api.github.com/repos/linlurui/entityQueryable", "Date": "2018-11-24T10:02:11Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.regex.Pattern.compile(\"^\\\\d{4}/\\\\d{2}/\\\\d{2}$\").matcher(dateStr).find()) { return entity.query.Datetime.parse(dateStr, \"yyyy/MM/dd\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1336/buggy-version/entity.queryable.src.entity.query.Datetime.java", "BodyUseAPI": ["entity.query.Datetime.parse(java.lang.String,java.lang.String)"], "Fixed commit": "5d68bc4d02a2944ef031c2b38e07842a38480afe", "Url": "https://api.github.com/repos/linlurui/entityQueryable", "Date": "2018-11-24T10:02:11Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.regex.Pattern.compile(\"^\\\\d{2}\\\\-\\\\d{2}\\\\-\\\\d{2}\\\\s+\\\\d{2}:\\\\d{2}:\\\\d{2}$\").matcher(dateStr).find()) { return entity.query.Datetime.parse(dateStr, \"yy-MM-dd HH:mm:ss\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1336/buggy-version/entity.queryable.src.entity.query.Datetime.java", "BodyUseAPI": ["entity.query.Datetime.parse(java.lang.String,java.lang.String)"], "Fixed commit": "5d68bc4d02a2944ef031c2b38e07842a38480afe", "Url": "https://api.github.com/repos/linlurui/entityQueryable", "Date": "2018-11-24T10:02:11Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.regex.Pattern.compile(\"^\\\\d{2}:\\\\d{2}:\\\\d{2}$\").matcher(dateStr).find()) { return entity.query.Datetime.parse(dateStr, \"HH:mm:ss\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1336/buggy-version/entity.queryable.src.entity.query.Datetime.java", "BodyUseAPI": ["entity.query.Datetime.parse(java.lang.String,java.lang.String)"], "Fixed commit": "5d68bc4d02a2944ef031c2b38e07842a38480afe", "Url": "https://api.github.com/repos/linlurui/entityQueryable", "Date": "2018-11-24T10:02:11Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.regex.Pattern.compile(\"^\\\\d{4}\\\\-\\\\d{2}\\\\-\\\\d{2}$\").matcher(dateStr).find()) { return entity.query.Datetime.parse(dateStr, \"yyyy-MM-dd\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1336/buggy-version/entity.queryable.src.entity.query.Datetime.java", "BodyUseAPI": ["entity.query.Datetime.parse(java.lang.String,java.lang.String)"], "Fixed commit": "5d68bc4d02a2944ef031c2b38e07842a38480afe", "Url": "https://api.github.com/repos/linlurui/entityQueryable", "Date": "2018-11-24T10:02:11Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.regex.Pattern.compile(\"^\\\\d{2}/\\\\d{2}/\\\\d{2}\\\\s+\\\\d{2}:\\\\d{2}:\\\\d{2}$\").matcher(dateStr).find()) { return entity.query.Datetime.parse(dateStr, \"yy/MM/dd HH:mm:ss\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1336/buggy-version/entity.queryable.src.entity.query.Datetime.java", "BodyUseAPI": ["entity.query.Datetime.parse(java.lang.String,java.lang.String)"], "Fixed commit": "5d68bc4d02a2944ef031c2b38e07842a38480afe", "Url": "https://api.github.com/repos/linlurui/entityQueryable", "Date": "2018-11-24T10:02:11Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (image == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5970/buggy-version/src.main.java.ca.team2706.vision.trackerboxreloaded.DisplayGui.java", "BodyUseAPI": [], "Fixed commit": "b439d8a8cfb6122db7849c25684a3f231a3f1551", "Url": "https://api.github.com/repos/FRC2706/TrackerboxReloaded", "Date": "2018-11-15T00:35:12Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((likedBooks) != null) { dest.writeInt(likedBooks.size()); for (java.util.Map.Entry<java.lang.String, java.util.List<java.lang.String>> entry : likedBooks.entrySet()) { dest.writeString(entry.getKey()); dest.writeStringList(entry.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1782/buggy-version/310.app.src.main.java.com.example.wijih.a310.model.User.java", "BodyUseAPI": [], "Fixed commit": "6d7ee0fe77f3b8bf666b5eb00009916797dee874", "Url": "https://api.github.com/repos/nthnzhang/kindler", "Date": "2018-11-16T23:30:47Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["talendJavaProject.getSrcFolder().getFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ShadowFileInputToDelimitedOutputFile.exists()) { org.talend.designer.runprocess.JobErrorsChecker.checkRoutinesCompilationError(ShadowFileInputToDelimitedOutputFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6889/buggy-version/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.shadow.ShadowProcess.java", "BodyUseAPI": ["org.talend.designer.runprocess.JobErrorsChecker.checkRoutinesCompilationError(org.eclipse.core.resources.IFile)"], "Fixed commit": "53e8c56600a4a1538d3ddc14b186093c2358a7c7", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2018-12-25T10:00:08Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) != null) setCollectionMetadata(data); else android.widget.Toast.makeText(this, \"Network error\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7810/buggy-version/app.src.main.java.com.agzuniverse.agz.opensalve.CollectionCentreScreen.java", "BodyUseAPI": [], "Fixed commit": "60d588ca358f4fa236263d99bab6b4253f167466", "Url": "https://api.github.com/repos/agzuniverse/OpenSalve-Android", "Date": "2018-11-25T12:07:59Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataSet.getGraphType()) != (com.sortagreg.graphview.GraphViewDataModel.STATE_LINE)) { dataSetMaxY = java.lang.Math.max(dataSetMaxY, dataPoint.y); dataSetMinY = java.lang.Math.min(dataSetMinY, dataPoint.y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7489/buggy-version/graphview.src.main.java.com.sortagreg.graphview.GraphView.java", "BodyUseAPI": [], "Fixed commit": "de97c625de41a19e24902f4ba81eaca27d9ae2ad", "Url": "https://api.github.com/repos/sortagreg/GraphView", "Date": "2018-12-11T00:07:12Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cls.isValidAttribute(ReactomeJavaConstants.hasEvent)) dba.loadInstanceAttributeValues(blackBoxEvents, cls.getAttribute(ReactomeJavaConstants.hasEvent));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7822/buggy-version/src.org.gk.database.EventTreeBuildHelper.java", "BodyUseAPI": ["org.gk.schema.SchemaClass.getAttribute(ReactomeJavaConstants.hasEvent)", "org.gk.persistence.MySQLAdaptor.loadInstanceAttributeValues(java.util.List,cls.getAttribute(ReactomeJavaConstants.hasEvent))"], "Fixed commit": "4421eef32b0747758475a11ec4893e5a6dc5c5c0", "Url": "https://api.github.com/repos/reactome/CuratorTool", "Date": "2018-11-08T04:51:47Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gk.schema.Schema.getClassByName(ReactomeJavaConstants.BlackBoxEvent)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (bbeCls.isValidAttribute(ReactomeJavaConstants.hasEvent)) { org.gk.schema.SchemaAttribute hasEventAtt = bbeCls.getAttribute(ReactomeJavaConstants.hasEvent); if (hasEventAtt != null) qr.add(dba.createReverseAttributeQueryRequest(eventCls, hasEventAtt, \"IS NULL\", null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7822/buggy-version/src.org.gk.database.EventTreeBuildHelper.java", "BodyUseAPI": ["org.gk.schema.SchemaClass.getAttribute(ReactomeJavaConstants.hasEvent)"], "Fixed commit": "4421eef32b0747758475a11ec4893e5a6dc5c5c0", "Url": "https://api.github.com/repos/reactome/CuratorTool", "Date": "2018-11-08T04:51:47Z"},
{"Line": "=>549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sourceDBA.getSchema().getClassByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cls == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7822/buggy-version/src.org.gk.slicing.SlicingEngine.java", "BodyUseAPI": [], "Fixed commit": "4421eef32b0747758475a11ec4893e5a6dc5c5c0", "Url": "https://api.github.com/repos/reactome/CuratorTool", "Date": "2018-11-08T04:51:47Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(qz.printer.status.StatusMonitor.clientPrinterConnections.containsKey(printerNames.getString(i)))) { qz.printer.status.StatusMonitor.clientPrinterConnections.add(printerNames.getString(i), connection); }else if (!(qz.printer.status.StatusMonitor.clientPrinterConnections.getValues(printerNames.getString(i)).contains(connection))) { qz.printer.status.StatusMonitor.clientPrinterConnections.add(printerNames.getString(i), connection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/985/buggy-version/src.qz.printer.status.StatusMonitor.java", "BodyUseAPI": ["org.eclipse.jetty.util.MultiMap<qz.ws.SocketConnection>.getValues(printerNames.getString(i))", "org.codehaus.jettison.json.JSONArray.getString(int)", "org.eclipse.jetty.util.MultiMap<qz.ws.SocketConnection>.add(printerNames.getString(i),qz.ws.SocketConnection)", "org.eclipse.jetty.util.MultiMap<qz.ws.SocketConnection>.add(printerNames.getString(i),qz.ws.SocketConnection)", "org.codehaus.jettison.json.JSONArray.getString(int)", "qz.printer.status.StatusMonitor.clientPrinterConnections.getValues(printerNames.getString(i)).contains(qz.ws.SocketConnection)", "org.codehaus.jettison.json.JSONArray.getString(int)"], "Fixed commit": "d5c6f4140f69530d58d034409c1f843470e90489", "Url": "https://api.github.com/repos/qzind/tray", "Date": "2018-12-15T19:33:22Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((table.getEditingRow()) != (-1)) { table.getCellEditor().stopCellEditing(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4017/buggy-version/src.university.UI.MarkingScreen.java", "BodyUseAPI": ["javax.swing.table.TableCellEditor.stopCellEditing()", "javax.swing.JTable.getCellEditor()"], "Fixed commit": "f943e3c3c33c78739e5bf7cf1343733a6089c711", "Url": "https://api.github.com/repos/CFAUSTINO-ARVELA/-Systems-Design-and-Security", "Date": "2018-12-03T10:30:34Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((table.getEditingRow()) != (-1)) { table.getCellEditor().stopCellEditing(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4017/buggy-version/src.university.UI.MarkingScreen.java", "BodyUseAPI": ["javax.swing.table.TableCellEditor.stopCellEditing()", "javax.swing.JTable.getCellEditor()"], "Fixed commit": "f943e3c3c33c78739e5bf7cf1343733a6089c711", "Url": "https://api.github.com/repos/CFAUSTINO-ARVELA/-Systems-Design-and-Security", "Date": "2018-12-03T10:30:34Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loocv) ns = d.getNumRows();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1730/buggy-version/tetrad-lib.src.main.java.edu.pitt.csb.Priors.runPriors.java", "BodyUseAPI": [], "Fixed commit": "3c2dc9bc3e38138c1c450066906dd27667c7f71b", "Url": "https://api.github.com/repos/vineet1992/tetrad-vineet", "Date": "2018-11-01T01:10:00Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loocv) subsamples = new edu.cmu.tetrad.data.DataSet[d.getNumRows()]; else subsamples = new edu.cmu.tetrad.data.DataSet[ns];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1730/buggy-version/tetrad-lib.src.main.java.edu.pitt.csb.Priors.runPriors.java", "BodyUseAPI": [], "Fixed commit": "3c2dc9bc3e38138c1c450066906dd27667c7f71b", "Url": "https://api.github.com/repos/vineet1992/tetrad-vineet", "Date": "2018-11-01T01:10:00Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loocv) { ns = d.getNumRows(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1730/buggy-version/tetrad-lib.src.main.java.edu.pitt.csb.Priors.runPriors.java", "BodyUseAPI": [], "Fixed commit": "3c2dc9bc3e38138c1c450066906dd27667c7f71b", "Url": "https://api.github.com/repos/vineet1992/tetrad-vineet", "Date": "2018-11-01T01:10:00Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((splitArgs.size()) == 0) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1505/buggy-version/src.main.java.seedu.address.logic.parser.GroupCommandParser.java", "BodyUseAPI": [], "Fixed commit": "18db1fe7340026d731d86516a6ddb0a608ce24d5", "Url": "https://api.github.com/repos/CS2103-AY1819S1-W13-3/main", "Date": "2018-11-12T10:58:29Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (authorizeInteractor.isAuthorized()) { navigator.applyCommands(new ru.terrakok.cicerone.commands.Command[]{ new ru.terrakok.cicerone.commands.Forward(im.adamant.android.Screens.WALLET_SCREEN, null) }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7333/buggy-version/app.src.main.java.im.adamant.android.ui.LoginScreen.java", "BodyUseAPI": [], "Fixed commit": "63610c094575acc92842d776a672dfb5b80536c5", "Url": "https://api.github.com/repos/Adamant-im/adamant-android", "Date": "2018-11-27T09:51:55Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initialized) { disposeGame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9228/buggy-version/core.src.com.github.kneelawk.hellogdx.ScreenGame.java", "BodyUseAPI": [], "Fixed commit": "9069942c8f409ed03c61e08684e1c40240cd91e1", "Url": "https://api.github.com/repos/Kneelawk/hello-gdx", "Date": "2018-12-15T19:41:16Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectStatement.getTables().isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3399/buggy-version/sharding-core.src.main.java.io.shardingsphere.core.routing.router.sharding.ParsingSQLRouter.java", "BodyUseAPI": [], "Fixed commit": "1045821fc765a1b7bc19272ca40c602e444abfc1", "Url": "https://api.github.com/repos/apache/incubator-shardingsphere", "Date": "2018-12-24T01:34:19Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (language.matches(\".+-\\\\d+\")) { language = language.substring(0, language.indexOf('-')); if (!(printedLanguageTagContainedDialect)) { javatools.administrative.Announce.warning(\"At least one language tag contained dialect suffix, which was ignored. (example: @es-419)\"); printedLanguageTagContainedDialect = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8009/buggy-version/src.main.java.basics.N4Reader.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int,int)"], "Fixed commit": "e0fa51dfc24a623f129a832d600ffc001dc8d589", "Url": "https://api.github.com/repos/yago-naga/basics3", "Date": "2018-11-16T14:51:13Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.item.ItemStack.getItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(gem.isCracked)) { gem.spawnGem(this.world, player, this.getPosition(), this.getItem()); }else { this.entityDropItem(this.getItem(), 0.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3385/buggy-version/src.main.java.mod.akrivus.amalgam.entity.EntityBubble.java", "BodyUseAPI": ["mod.akrivus.kagic.items.ItemGem.spawnGem(this.world,net.minecraft.entity.player.EntityPlayer,this.getPosition(),net.minecraft.item.ItemStack)"], "Fixed commit": "48a596932521e08db6976a25d668da882ae8583a", "Url": "https://api.github.com/repos/Akrivus/Amalgam", "Date": "2018-12-08T01:47:13Z"},
{"Line": "=>3256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentObject instanceof java.util.Collection) { return ((java.util.Collection) (currentObject)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5369/buggy-version/src.main.java.com.alibaba.fastjson.JSONPath.java", "BodyUseAPI": [], "Fixed commit": "7bf1df29fc249f369ede29f23ecd0fff34ee37d3", "Url": "https://api.github.com/repos/GulajavaMinistudio/fastjson", "Date": "2018-12-17T13:03:17Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.targetSecurityServer) != null) { marshaller.marshal(this.targetSecurityServer, soapHeaderResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6133/buggy-version/xroad-spring-core.src.main.java.kg.gov.tunduk.xroad.XRoadHeader.java", "BodyUseAPI": [], "Fixed commit": "b59f6bdd85f8ab54ef045bbfbf3fbfe8f8ac14e8", "Url": "https://api.github.com/repos/tunduk-gov-kg/xroad-spring", "Date": "2018-12-06T04:45:25Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.producer) != null) { marshaller.marshal(this.producer, soapHeaderResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6133/buggy-version/xroad-spring-core.src.main.java.kg.gov.tunduk.xroad.XRoadHeader.java", "BodyUseAPI": [], "Fixed commit": "b59f6bdd85f8ab54ef045bbfbf3fbfe8f8ac14e8", "Url": "https://api.github.com/repos/tunduk-gov-kg/xroad-spring", "Date": "2018-12-06T04:45:25Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getContextPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (contextPath == null) { contextPath = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2977/buggy-version/zoom-web.src.main.java.org.zoomdev.zoom.web.router.impl.ZoomRouter.java", "BodyUseAPI": [], "Fixed commit": "42dba31743d1436d55a6b665e90f0f368aaa7726", "Url": "https://api.github.com/repos/zoom-framework/zoom", "Date": "2018-11-28T08:45:03Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 3) { try { team = us.myles_selim.starota.EnumTeam.valueOf(args[3].toUpperCase()); } catch (java.lang.IllegalArgumentException e) { team = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5544/buggy-version/src.us.myles_selim.starota.profiles.commands.CommandSelfRegister.java", "BodyUseAPI": ["us.myles_selim.starota.EnumTeam.valueOf(java.lang.String)", "java.lang.String.toUpperCase()"], "Fixed commit": "d015edc440de1bd492be76abed31f88a1ddee9a6", "Url": "https://api.github.com/repos/Selim042/Starota", "Date": "2018-11-01T00:34:09Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((in.nextInt()) > 1) { x = in.nextInt(); }else { java.lang.System.out.println(\"Number of players must be greater than 1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4234/buggy-version/MonopolyCSA18.src.GameRun.java", "BodyUseAPI": ["java.util.Scanner.nextInt()"], "Fixed commit": "fe29dfefb6f7d03ec4ee78f1e83f8bf2bdc9c8af", "Url": "https://api.github.com/repos/RowSteg/MonopolyCSA18", "Date": "2018-12-13T19:59:57Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) == null) throw new java.lang.NullPointerException(\"ObservableObject value in BaseEvent null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8008/buggy-version/core-reference-impl.src.main.java.com.javando.collections.BaseEvent.java", "BodyUseAPI": [], "Fixed commit": "6633d8eee1694fccbe9e07481fb6255fc7ea8cbc", "Url": "https://api.github.com/repos/cyclonesword/observable-collections", "Date": "2018-12-16T11:25:13Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nom.length()) < nbLettersNom) { nbLettersNom = nom.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6126/buggy-version/src.main.java.geco.LoginGenerator.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "d261bb1092315e08fec7f7002c9066825ac7b5df", "Url": "https://api.github.com/repos/Olzindel/Login-generator", "Date": "2018-11-21T10:26:01Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResources().getConfiguration().orientation) == (android.content.res.Configuration.ORIENTATION_PORTRAIT)) transaction.replace(R.id.contact_list_layout, detailsFragment);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4770/buggy-version/app.src.main.java.example.bedilbek.contactapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "de0c1b917a5ced71eb66ce8e4eddd381d83f9d50", "Url": "https://api.github.com/repos/bedilbek/contactapp", "Date": "2018-11-25T18:38:52Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sensingkit.sensingkitlib.SKSensor.getRequiredPermission()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (permission != null) { if (!(org.sensingkit.sensingkitlib.SKUtilities.isPermissionGranted(permission, mApplicationContext))) { permissionsList.add(permission); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6517/buggy-version/SensingKitLib.src.main.java.org.sensingkit.sensingkitlib.SKSensorManager.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "org.sensingkit.sensingkitlib.SKUtilities.isPermissionGranted(java.lang.String,android.content.Context)"], "Fixed commit": "20a637bb02df4c40298b0de6afd3c1ec5d213232", "Url": "https://api.github.com/repos/SensingKit/SensingKit-Android", "Date": "2018-12-03T17:21:13Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (bundle != null) { movieId = bundle.getInt(com.grrigore.themoviedb.MOVIE_CLICKED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7766/buggy-version/app.src.main.java.com.grrigore.themoviedb.MovieDetailActivity.java", "BodyUseAPI": ["android.os.Bundle.getInt(com.grrigore.themoviedb.MOVIE_CLICKED)"], "Fixed commit": "7e813321096dc8493ae1f5bfb543daed06125f19", "Url": "https://api.github.com/repos/grrigore/TheMovieDB", "Date": "2018-11-10T16:46:40Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(intervalTimeMinutes.getText())", "java.lang.Integer.valueOf(intervalTimeHours.getText())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((hours < 0) || (minutes < 0)) { throw new java.lang.NumberFormatException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2007/buggy-version/src.main.java.com.mycompany.taskmanager.view.NotificationWindowController.java", "BodyUseAPI": [], "Fixed commit": "4358683d6cbec39cf0c5b05842ea15cea67d99e2", "Url": "https://api.github.com/repos/St1gven/TaskManager", "Date": "2018-12-14T13:19:54Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.getClient().getUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { user = new org.academiadecodigo.hashtronauts.server.users.User(1, \"Anonymous\", 123); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/271/buggy-version/src.org.academiadecodigo.hashtronauts.server.Server.java", "BodyUseAPI": [], "Fixed commit": "bd9b592dde05f115ed3fcfce490a3acc9fc78a6e", "Url": "https://api.github.com/repos/n20amaral/PromptToDo", "Date": "2018-11-05T10:58:22Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (returnPath) path.pop(length);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4969/buggy-version/src.javafuzzysearch.searchers.MultipleCutoffSearcher.java", "BodyUseAPI": [], "Fixed commit": "de6c93d5ab75af01b7ea881d600d012b3367f534", "Url": "https://api.github.com/repos/Daniel-Liu-c0deb0t/Java-Fuzzy-Search", "Date": "2018-11-22T01:50:43Z"},
{"Line": "=>793", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((longitude.equals(\"0.00\")) || (longitude.equals(\"0.0\"))) { return \"\"; }else { return longitude; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4498/buggy-version/NorthCountryWild.src.UploadWindow.java", "BodyUseAPI": [], "Fixed commit": "c8e965faa46cdcc26e7e317ee456836846527fd2", "Url": "https://api.github.com/repos/NatureUpNorth/North-Country-Wild", "Date": "2018-11-07T19:28:55Z"},
{"Line": "=>785", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((latitude.equals(\"0.00\")) || (latitude.equals(\"0.0\"))) { return \"\"; }else { return latitude; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4498/buggy-version/NorthCountryWild.src.UploadWindow.java", "BodyUseAPI": [], "Fixed commit": "c8e965faa46cdcc26e7e317ee456836846527fd2", "Url": "https://api.github.com/repos/NatureUpNorth/North-Country-Wild", "Date": "2018-11-07T19:28:55Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sbParams.length()) > 0) sbParams.deleteCharAt(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6427/buggy-version/src.main.java.ds.made.jdbc.easy.EasyCallForStoredProcedure.java", "BodyUseAPI": ["java.lang.StringBuilder.deleteCharAt(int)"], "Fixed commit": "33b7f1b81c1f1e5d80738dfcab6626c537c9b011", "Url": "https://api.github.com/repos/pikapokec/jdbc-made-easy", "Date": "2018-11-21T15:06:41Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anbang.qipai.agents.cqrs.q.service.AgentAuthQueryService.findAgentById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (junior == null) { vo.setSuccess(false); vo.setMsg(\"invalid receiver\"); return vo; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1284/buggy-version/src.main.java.com.anbang.qipai.agents.web.controller.AgentClubCardController.java", "BodyUseAPI": [], "Fixed commit": "31023684a9f954da16a405e23155122b5e2f458d", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_agents", "Date": "2018-12-05T02:01:32Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orderDetailsList) != null) { mAdapter = new com.example.mdjahirulislam.doobbi.controller.adapter.OrderDetailsAdapter(this, orderDetailsList); orderListRV.setAdapter(mAdapter); }else { android.widget.Toast.makeText(this, \"Something is wrong!!!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5330/buggy-version/app.src.main.java.com.example.mdjahirulislam.doobbi.view.order.OrderDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "34ff7d9d7a883db8f66231bd089ed1a79816ed38", "Url": "https://api.github.com/repos/JahirRemon/project18_10", "Date": "2018-12-12T08:06:26Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == (-1)) { this.solutions.add(0, s); solutionAdded = true; break; }else if ((this.solutions.get(i).totalCost) <= (s.totalCost)) { this.solutions.add((i + 1), s); solutionAdded = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5082/buggy-version/src.SolutionList.java", "BodyUseAPI": ["java.util.ArrayList<Solution>.add(int,Solution)", "java.util.ArrayList<Solution>.get(int)"], "Fixed commit": "7cca86af98d9d55fd1bd5309fcba02508ca76646", "Url": "https://api.github.com/repos/shonigmann/TerribleSoftware", "Date": "2018-11-13T15:21:51Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getItemId()) == (R.id.line_chart_item)) { startActivity(new android.content.Intent(this, wpi.jnpalmstrom.chartmyfinance.LineChartActivity.class)); }else if ((item.getItemId()) == (R.id.pie_chart_item)) { startActivity(new android.content.Intent(this, wpi.jnpalmstrom.chartmyfinance.PieChartActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9327/buggy-version/app.src.main.java.wpi.jnpalmstrom.chartmyfinance.LineChartActivity.java", "BodyUseAPI": ["android.view.MenuItem.getItemId()"], "Fixed commit": "2afdabfe112b4a5c8dab19befc49263b221fddd0", "Url": "https://api.github.com/repos/jnpalmstrom/ChartMyFinance", "Date": "2018-11-12T17:27:05Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getItemId()) == (R.id.line_chart_item)) { startActivity(new android.content.Intent(this, wpi.jnpalmstrom.chartmyfinance.LineChartActivity.class)); }else if ((item.getItemId()) == (R.id.pie_chart_item)) { startActivity(new android.content.Intent(this, wpi.jnpalmstrom.chartmyfinance.PieChartActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9327/buggy-version/app.src.main.java.wpi.jnpalmstrom.chartmyfinance.MainActivity.java", "BodyUseAPI": ["android.view.MenuItem.getItemId()"], "Fixed commit": "2afdabfe112b4a5c8dab19befc49263b221fddd0", "Url": "https://api.github.com/repos/jnpalmstrom/ChartMyFinance", "Date": "2018-11-12T17:27:05Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other instanceof com.rackspace.jenkins_nodepool.NodePool) { return getConnectionString().equalsIgnoreCase(((com.rackspace.jenkins_nodepool.NodePool) (other)).getConnectionString()); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8908/buggy-version/src.main.java.com.rackspace.jenkins_nodepool.NodePool.java", "BodyUseAPI": [], "Fixed commit": "996841ec608fa748303369bd146505bb74bc5601", "Url": "https://api.github.com/repos/dealako/nodepool-agents-plugin", "Date": "2018-11-21T17:11:13Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8908/buggy-version/src.main.java.com.rackspace.jenkins_nodepool.NodePool.java", "BodyUseAPI": [], "Fixed commit": "996841ec608fa748303369bd146505bb74bc5601", "Url": "https://api.github.com/repos/dealako/nodepool-agents-plugin", "Date": "2018-11-21T17:11:13Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((args.length) != (alibi.model.Alibi.NUMBER_OF_ATTRIBUTES)) { throw new java.lang.ArrayIndexOutOfBoundsException(((\"alibi needs \" + (alibi.model.Alibi.NUMBER_OF_ATTRIBUTES)) + \"attributes\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3263/buggy-version/src.main.java.alibi.model.Alibi.java", "BodyUseAPI": [], "Fixed commit": "d9799265e7fd5c864fe77ebbfb933f425e3e9404", "Url": "https://api.github.com/repos/sweIhm-ws2018-19/skillproject-do-4", "Date": "2018-12-07T11:58:19Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fieldmap[y][x].character) == '*') continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5949/buggy-version/ui.animations.ExplodeAnimation.java", "BodyUseAPI": [], "Fixed commit": "ba0eaca53d2647bac72c9314f70899c45a0d8dcc", "Url": "https://api.github.com/repos/shikibu9419/Minesweeper", "Date": "2018-12-28T09:54:59Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<android.view.View>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((changedIndex + 1) < size) { ajustLinkageViewItem(changedView, rate1, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7666/buggy-version/CardSlidePanel.cardslidepanel.src.main.java.com.stone.card.CardSlidePanel.java", "BodyUseAPI": [], "Fixed commit": "eebcf5b6397c4580d6079329c55f5b9649fc658a", "Url": "https://api.github.com/repos/Nstd/android-card-slide-panel", "Date": "2018-11-26T08:00:53Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!fillEventType) { exception.addValidation(\"RDA rules\", cz.cas.lib.proarc.common.object.ndk.RdaRules.ERR_NDK_RDA_EMPTYEVENTTYPE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9153/buggy-version/proarc-common.src.main.java.cz.cas.lib.proarc.common.object.ndk.RdaRules.java", "BodyUseAPI": [], "Fixed commit": "ea19129ff94f293f0b9309298cbc93742e074cf2", "Url": "https://api.github.com/repos/proarc/proarc", "Date": "2018-11-07T14:09:13Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentTask.isEmpty()) || ((this.currentTask) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2707/buggy-version/locationmadeeasy.src.main.java.leandro.soares.quevedo.locationmadeeasy.LocationHelper.java", "BodyUseAPI": [], "Fixed commit": "63e2ecc5b87f43f511f3ebb529eacdefe54bc394", "Url": "https://api.github.com/repos/LeandroSQ/location-made-easy", "Date": "2018-12-06T13:32:17Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(startDate.equals(\"N\"))) && (!(startDate.equals(\"n\")))) { output(\"Provide a interval in days?(e.g 15, 30, 60 / N/n)\\n\"); java.lang.String st = input(scan); if (isQuit(st)) { output(\"Quit.\\n\"); return; } try { interval = java.lang.Integer.parseInt(st); } catch (java.lang.IllegalArgumentException e) { throw new java.lang.IllegalArgumentException(\"Illegal number.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9154/buggy-version/src.controller.StockControllerImpl.java", "BodyUseAPI": [], "Fixed commit": "a4ef23c9ec37321b9f1c32e68f0892b8c9497934", "Url": "https://api.github.com/repos/simonwux/8", "Date": "2018-11-19T18:55:19Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loggingEnabled) { com.rohitawate.everest.server.mock.ServerLogger.logInfo(this.name, endpoint.responseCode, requestParser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4334/buggy-version/src.main.java.com.rohitawate.everest.server.mock.MockService.java", "BodyUseAPI": [], "Fixed commit": "806fedfe7caf3411be3b0c8e736d474e677e55f9", "Url": "https://api.github.com/repos/RohitAwate/Everest", "Date": "2018-11-09T08:19:52Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (path != null) { for (com.rohitawate.everest.server.mock.Endpoint endpoint : endpoints) { if ((path.equals(endpoint.path)) && (requestParser.getMethod().equals(endpoint.method))) { com.rohitawate.everest.server.mock.ResponseWriter.sendResponse(socket, endpoint); if (loggingEnabled) { com.rohitawate.everest.server.mock.ServerLogger.logInfo(this.name, endpoint.responseCode, requestParser); } return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4334/buggy-version/src.main.java.com.rohitawate.everest.server.mock.MockService.java", "BodyUseAPI": ["java.lang.String.equals(endpoint.path)"], "Fixed commit": "806fedfe7caf3411be3b0c8e736d474e677e55f9", "Url": "https://api.github.com/repos/RohitAwate/Everest", "Date": "2018-11-09T08:19:52Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loggingEnabled) { com.rohitawate.everest.server.mock.ServerLogger.logWarning(this.name, 404, requestParser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4334/buggy-version/src.main.java.com.rohitawate.everest.server.mock.MockService.java", "BodyUseAPI": [], "Fixed commit": "806fedfe7caf3411be3b0c8e736d474e677e55f9", "Url": "https://api.github.com/repos/RohitAwate/Everest", "Date": "2018-11-09T08:19:52Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["requestParser.getPath().startsWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (startsWithPrefix && (attachPrefix)) { path = stripPrefix(requestParser.getPath()); }else if (startsWithPrefix == (attachPrefix)) { path = requestParser.getPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4334/buggy-version/src.main.java.com.rohitawate.everest.server.mock.MockService.java", "BodyUseAPI": [], "Fixed commit": "806fedfe7caf3411be3b0c8e736d474e677e55f9", "Url": "https://api.github.com/repos/RohitAwate/Everest", "Date": "2018-11-09T08:19:52Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportFragmentManager().findFragmentById(R.id.fragment_container)) != null) { getSupportFragmentManager().beginTransaction().remove(getSupportFragmentManager().findFragmentById(R.id.fragment_container)).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7296/buggy-version/android.SymposiumCheckIn.app.src.main.java.com.hva.symposiumcheckin.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1dc4d08c5053ba6a7eb2cf43db041eb1daa6baf9", "Url": "https://api.github.com/repos/obin1000/StudentCheck", "Date": "2018-11-27T17:16:40Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unimi.dsi.fastutil.objects.Object2IntMap<org.apache.uima.cas.text.AnnotationFS>.get(idxTokenOffset.get(annotation.getBegin()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (begin < highestEndTokenPositionObserved) { de.tudarmstadt.ukp.inception.recommendation.imls.opennlp.ner.OpenNlpNerRecommender.LOG.debug(\"Skipping overlapping annotation: [{}-{}, {}]\", begin, (end + 1), label); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8781/buggy-version/inception-imls-opennlp.src.main.java.de.tudarmstadt.ukp.inception.recommendation.imls.opennlp.ner.OpenNlpNerRecommender.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,int,int,java.lang.String)"], "Fixed commit": "5ecd7b09e50de0b03b9a716ac2e825b01b058769", "Url": "https://api.github.com/repos/inception-project/inception", "Date": "2018-12-11T13:43:44Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Float.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value <= 0) { throw new seedu.divelog.logic.parser.exceptions.ParseException(seedu.divelog.logic.parser.ParserUtil.MESSAGE_INVALID_DEPTH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7329/buggy-version/src.main.java.seedu.divelog.logic.parser.ParserUtil.java", "BodyUseAPI": [], "Fixed commit": "c10d9543bdc150fd43f160eb3207f6a223a6a3ca", "Url": "https://api.github.com/repos/TTTaus/main", "Date": "2018-11-04T05:10:51Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((gene != null) && ((gene.length) > 0)) { geneIDs.add(gene[0].replace(\"\\\"\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2319/buggy-version/src.org.kkruse.webherv.upload.FileUploader.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "8b0b7151e8c9ba8a1aa3d8eea4ed4c2297fe3a74", "Url": "https://api.github.com/repos/etsnok/WebHERV", "Date": "2018-11-06T21:14:37Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((contraints.get(i).length()) > 0) query += \"\\t\" + (contraints.get(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/85/buggy-version/src.main.java.ru.lightsoff.database.builders.CreateQueryBuilder.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "47e181585c3f8f00835a3d92c1159ec884f98be4", "Url": "https://api.github.com/repos/LightsOffDAMT/LightsOff", "Date": "2018-11-11T11:03:07Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((com.thejokerstudios.mathpuzzles.datatype.AllLevels.getMath()) == (com.thejokerstudios.mathpuzzles.datatype.Level.EASY)) && ((com.thejokerstudios.mathpuzzles.datatype.AllLevels.getBoard()) == (com.thejokerstudios.mathpuzzles.datatype.Level.EASY))) && ((com.thejokerstudios.mathpuzzles.datatype.AllLevels.getTime()) == (com.thejokerstudios.mathpuzzles.datatype.Level.EASY))) listToChooseFrom = new java.util.ArrayList<>(easyImages.subList(0, 5)); else if ((com.thejokerstudios.mathpuzzles.datatype.AllLevels.getMath()) == (com.thejokerstudios.mathpuzzles.datatype.Level.EASY)) listToChooseFrom = easyImages; else if ((com.thejokerstudios.mathpuzzles.datatype.AllLevels.getMath()) == (com.thejokerstudios.mathpuzzles.datatype.Level.MEDIUM)) listToChooseFrom = mediumImages; else listToChooseFrom = hardImages;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6140/buggy-version/app.src.main.java.com.thejokerstudios.mathpuzzles.main.Puzzle.java", "BodyUseAPI": [], "Fixed commit": "34a76c55fc32951019dc85eb88f764968054cc34", "Url": "https://api.github.com/repos/bobostaykov/Math-Puzzles", "Date": "2018-11-06T21:42:03Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (keywords.containsKey(\"CompanyName\")) { return ((((((keywords.containsKey(\"CompanyName\")) && (keywords.get(\"CompanyName\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getCompanyName().value, keyword)))) && ((keywords.containsKey(\"Job\")) && (keywords.get(\"Job\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getJob().value, keyword))))) || ((keywords.containsKey(\"Age Range\")) && (keywords.get(\"Age Range\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getAgeRange().value, keyword))))) || ((keywords.containsKey(\"Education\")) && (keywords.get(\"Education\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getEducation().value, keyword))))) || ((keywords.containsKey(\"Salary\")) && (keywords.get(\"Salary\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getSalary().value, keyword))))) || ((keywords.containsKey(\"Gender\")) && (keywords.get(\"Gender\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getGender().value, keyword)))); }else { return ((((((keywords.containsKey(\"CompanyName\")) && (keywords.get(\"CompanyName\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getCompanyName().value, keyword)))) || ((keywords.containsKey(\"Job\")) && (keywords.get(\"Job\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getJob().value, keyword))))) || ((keywords.containsKey(\"Age Range\")) && (keywords.get(\"Age Range\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getAgeRange().value, keyword))))) || ((keywords.containsKey(\"Education\")) && (keywords.get(\"Education\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getEducation().value, keyword))))) || ((keywords.containsKey(\"Salary\")) && (keywords.get(\"Salary\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getSalary().value, keyword))))) || ((keywords.containsKey(\"Gender\")) && (keywords.get(\"Gender\").stream().anyMatch(( keyword) -> seedu.recruit.commons.util.StringUtil.containsWordIgnoreCase(jobOffer.getGender().value, keyword)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1264/buggy-version/src.main.java.seedu.recruit.model.joboffer.JobOfferContainsKeywordsPredicate.java", "BodyUseAPI": ["java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.List<java.lang.String>.stream()", "java.util.List<java.lang.String>.stream()", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.List<java.lang.String>.stream()", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.List<java.lang.String>.stream()", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.List<java.lang.String>.stream()", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.List<java.lang.String>.stream()", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.List<java.lang.String>.stream()", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.List<java.lang.String>.stream()", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.List<java.lang.String>.stream()", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.List<java.lang.String>.stream()", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)", "java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.List<java.lang.String>.stream()", "java.util.List<java.lang.String>.stream()", "java.util.HashMap<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)"], "Fixed commit": "a6b4d3d8a876dab9a93a76c1654f55e387c2d8f8", "Url": "https://api.github.com/repos/leerachel/RecruitBook", "Date": "2018-11-02T07:25:46Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hand.getCardSum()) == 21) { balance += (currentBet) * 2.5; }else balance += (currentBet) * 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5303/buggy-version/src.main.java.kr.ac.knu.lecture.game.blackjack.Player.java", "BodyUseAPI": [], "Fixed commit": "7466e99bf42be715eb5772ffbcecd2464c58f1a5", "Url": "https://api.github.com/repos/OhShinHyeok/knu-2018", "Date": "2018-12-20T01:15:09Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isLandscape())) { mStepImageView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6601/buggy-version/app.src.main.java.com.example.android.baker.RecipeStepFragment.java", "BodyUseAPI": [], "Fixed commit": "a7f232c7e8b9171447a65b4d75f89ab907a38d53", "Url": "https://api.github.com/repos/swaroop05/Baker", "Date": "2018-12-06T04:59:36Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isLandscape())) { mPlayerView.setVisibility(View.GONE); mStepImageView.setVisibility(View.VISIBLE); com.squareup.picasso.Picasso.with(getContext()).load(mStepImageUrl).into(mStepImageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6601/buggy-version/app.src.main.java.com.example.android.baker.RecipeStepFragment.java", "BodyUseAPI": [], "Fixed commit": "a7f232c7e8b9171447a65b4d75f89ab907a38d53", "Url": "https://api.github.com/repos/swaroop05/Baker", "Date": "2018-12-06T04:59:36Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isLandscape())) { mStepImageView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6601/buggy-version/app.src.main.java.com.example.android.baker.RecipeStepFragment.java", "BodyUseAPI": [], "Fixed commit": "a7f232c7e8b9171447a65b4d75f89ab907a38d53", "Url": "https://api.github.com/repos/swaroop05/Baker", "Date": "2018-12-06T04:59:36Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.epfl.sweng.SDP.utils.ImageSharer.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sharer != null) { ch.epfl.sweng.SDP.utils.ImageSharer.getInstance().setActivity(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6447/buggy-version/app.src.main.java.ch.epfl.sweng.SDP.game.VotingPageActivity.java", "BodyUseAPI": [], "Fixed commit": "b0bbe492d3cfff29851f6f74e185ec66544d5480", "Url": "https://api.github.com/repos/gyrodraw/GyroDraw", "Date": "2018-12-05T14:33:58Z"},
{"Line": "=>551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cdtpinto.readabilitychecker.logic.SourceCodeFileLogic.getCurrentlySelectedFileFromFilesList(org.cdtpinto.readabilitychecker.logic.SourceCodeFileLogic.getCurrentlyOpenedFile().getFile().getAbsolutePath(),java.util.List<org.cdtpinto.readabilitychecker.codeabstractionlevels.SourceCodeFile>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((currentlySelectedFile.getSres().getValue()) == 0.0) { jTFSres.setText(\"n/a\"); jTFSres.setToolTipText(((\"Readability value not calculated. Make sure \" + (currentlySelectedFile.getFile().getName())) + \" doesn't have any feature introduced after Java SE 5.\")); }else { jTFSres.setText(java.lang.String.valueOf(java.lang.String.valueOf(new java.text.DecimalFormat(\"#0.00\").format(currentlySelectedFile.getSres().getValue())))); jTFSres.setToolTipText(((currentlySelectedFile.getFile().getName()) + \" readability value\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8099/buggy-version/ReadabilityChecker.src.main.java.org.cdtpinto.readabilitychecker.main.ReadabilityFrame.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.String)", "currentlySelectedFile.getSres().getValue()", "org.cdtpinto.readabilitychecker.codeabstractionlevels.SourceCodeFile.getFile()", "javax.swing.JTextField.setText(java.lang.String)", "org.cdtpinto.readabilitychecker.codeabstractionlevels.SourceCodeFile.getFile()", "currentlySelectedFile.getFile().getName()", "java.text.DecimalFormat.format(currentlySelectedFile.getSres().getValue())", "javax.swing.JTextField.setToolTipText(((currentlySelectedFile.getFile().getName()) + \" readability value\"))", "currentlySelectedFile.getFile().getName()", "org.cdtpinto.readabilitychecker.codeabstractionlevels.SourceCodeFile.getSres()", "javax.swing.JTextField.setToolTipText(((\"Readability value not calculated. Make sure \" + (currentlySelectedFile.getFile().getName())) + \" doesn't have any feature introduced after Java SE 5.\"))", "java.lang.String.valueOf(java.lang.String)"], "Fixed commit": "871780c6da1a2ee6fbd0e417b9ff2f88827dddfa", "Url": "https://api.github.com/repos/cdtpinto/readabilitychecker", "Date": "2018-12-31T16:41:04Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (project.isDisposed()) { com.eastwood.tools.idea.VirtualFileManager.getInstance().removeVirtualFileListener(virtualFileListener); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9132/buggy-version/src.com.eastwood.tools.idea.MicroModuleService.java", "BodyUseAPI": [], "Fixed commit": "e21154dbf271b45d77a380a3c8e4f6770c076727", "Url": "https://api.github.com/repos/EastWoodYang/micro-module-idea-plugin", "Date": "2018-11-28T11:01:28Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((q1.isCorrectAnswer(cade)) == true) { java.lang.System.out.println(\"nice\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9872/buggy-version/Assignment.src.edu.unca.csci201.QuizTime.java", "BodyUseAPI": [], "Fixed commit": "7bf871e1230d4c2ec9e3a59e40fd3bad0d73ea9c", "Url": "https://api.github.com/repos/cadejs/201-final", "Date": "2018-11-27T21:46:22Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dk.aau.cs.ds302e18.app.service.LessonService.getAllLessons()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((lessonList.size()) >= 7) { for (int i = 0; i <= 6; i++) { if ((((((lessonList.get(i).getLessonDate()) != null) && (lessonList.get(i).getStudentList().contains(username))) && ((lessonList.get(i).getLessonDate().getYear()) == (currDate.getYear()))) && ((lessonList.get(i).getLessonDate().getMonth()) == (currDate.getMonth()))) && ((lessonList.get(i).getLessonDate().getDate()) == (currDate.getDate()))) { todaysLessonList.add(lessonList.get(i)); } } for (int i = 0; i <= 6; i++) { if (((lessonList.get(i).getLessonDate()) != null) && (lessonList.get(i).getStudentList().contains(username))) { upcomingLessonList.add(lessonList.get(i)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1647/buggy-version/lesson-app.src.main.java.dk.aau.cs.ds302e18.app.controllers.IndexController.java", "BodyUseAPI": ["java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.get(int)", "lessonList.get(i).getLessonDate().getMonth()", "lessonList.get(i).getLessonDate()", "lessonList.get(i).getLessonDate().getDate()", "java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.get(int)", "lessonList.get(i).getLessonDate()", "java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.add(lessonList.get(i))", "lessonList.get(i).getStudentList()", "java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.add(lessonList.get(i))", "java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.get(int)", "java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.get(int)", "lessonList.get(i).getLessonDate().getYear()", "java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.get(int)", "lessonList.get(i).getStudentList()", "java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.get(int)", "java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.get(int)", "java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.get(int)", "java.util.List<dk.aau.cs.ds302e18.app.domain.Lesson>.get(int)", "lessonList.get(i).getLessonDate()", "lessonList.get(i).getStudentList().contains(java.lang.String)", "lessonList.get(i).getLessonDate()", "lessonList.get(i).getLessonDate()", "lessonList.get(i).getStudentList().contains(java.lang.String)"], "Fixed commit": "1c667a0ae09fe07626caad3e30207a9791d768b5", "Url": "https://api.github.com/repos/SW3-ds302e18-2018/DrivingSchoolApplication", "Date": "2018-11-15T10:14:26Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dk.aau.cs.ds302e18.app.service.LessonService.getAllLessons()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lessonList.size()) < 6) { for (dk.aau.cs.ds302e18.app.domain.Lesson lesson : lessonList) { if ((((((lesson.getLessonDate()) != null) && (lesson.getStudentList().contains(username))) && ((lesson.getLessonDate().getYear()) == (currDate.getYear()))) && ((lesson.getLessonDate().getMonth()) == (currDate.getMonth()))) && ((lesson.getLessonDate().getDate()) == (currDate.getDate()))) { todaysLessonList.add(lesson); } if (((lesson.getLessonDate()) != null) && (lesson.getStudentList().contains(username))) { upcomingLessonList.add(lesson); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1647/buggy-version/lesson-app.src.main.java.dk.aau.cs.ds302e18.app.controllers.IndexController.java", "BodyUseAPI": [], "Fixed commit": "1c667a0ae09fe07626caad3e30207a9791d768b5", "Url": "https://api.github.com/repos/SW3-ds302e18-2018/DrivingSchoolApplication", "Date": "2018-11-15T10:14:26Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.user) instanceof ems.Guest) { ems.EMS.PrintHeader(\"Only Members can review events!\"); }else { this.reviewEvent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1338/buggy-version/src.ems.UserFrontEnd.java", "BodyUseAPI": [], "Fixed commit": "b488e2a8492762c1babdaf20d605164217f4b273", "Url": "https://api.github.com/repos/Ironolife/CS3343_Project", "Date": "2018-11-11T09:45:21Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["synercys.rts.framework.Task.getPriority()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((getOneTaskByPriority(i)) != null) { outStr += (\"\\t\" + (getOneTaskByPriority(i).toString())) + \"\\r\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4027/buggy-version/src.main.java.synercys.rts.framework.TaskSet.java", "BodyUseAPI": ["synercys.rts.framework.Task.toString()", "synercys.rts.framework.TaskSet.getOneTaskByPriority(int)"], "Fixed commit": "f133961cc49f9fb105eb5c4f394c89ae36816582", "Url": "https://api.github.com/repos/cchen140/RTS-Schedule-Simulator", "Date": "2018-12-22T06:53:01Z"},
{"Line": "=>657", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((param.dataFormat) != null) { sb.append(param.dataType); }else { sb.append(moduleName); sb.append(\".Model.\"); sb.append(param.dataType); sb.append(\".t\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9617/buggy-version/modules.openapi-generator.src.main.java.org.openapitools.codegen.languages.ElixirClientCodegen.java", "BodyUseAPI": ["java.lang.StringBuilder.append(param.dataType)", "java.lang.StringBuilder.append(param.dataType)"], "Fixed commit": "d31fa4f7c45d21e4ddd20af67e819680f9c6dd3c", "Url": "https://api.github.com/repos/OpenAPITools/openapi-generator", "Date": "2018-11-27T13:34:54Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cse.osu.pickem.Profile.getEncodedProfilePicture()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (profilePic != null) { byte[] decodedByteArray = android.util.Base64.decode(profilePic, Base64.DEFAULT); profilePhoto = android.graphics.BitmapFactory.decodeByteArray(decodedByteArray, 0, decodedByteArray.length); profileImageView.setImageBitmap(profilePhoto); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8312/buggy-version/app.src.main.java.com.cse.osu.pickem.ProfileActivity.java", "BodyUseAPI": ["android.util.Base64.decode(java.lang.String,Base64.DEFAULT)"], "Fixed commit": "a561f6502aefb6d292c7eca17172c7454f3b5486", "Url": "https://api.github.com/repos/ToskinM/PickEm", "Date": "2018-11-21T23:17:21Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (qishouPlayerId == null) { qishouPlayerId = playerIdList.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1083/buggy-version/src.main.java.com.dml.shuangkou.preparedapai.zudui.HongxinbaHongxinjiuZuduiStrategy.java", "BodyUseAPI": [], "Fixed commit": "048f5503f9b72cf0ab5f383463555cd5e8e2d72a", "Url": "https://api.github.com/repos/zhengchengdong/shuangkou.dml", "Date": "2018-11-30T09:48:29Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (duijiaPlayerId == null) { qishouPlayerId = playerIdList.get(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1083/buggy-version/src.main.java.com.dml.shuangkou.preparedapai.zudui.HongxinbaHongxinjiuZuduiStrategy.java", "BodyUseAPI": [], "Fixed commit": "048f5503f9b72cf0ab5f383463555cd5e8e2d72a", "Url": "https://api.github.com/repos/zhengchengdong/shuangkou.dml", "Date": "2018-11-30T09:48:29Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!objectInjectionOverridden) { id = proxy.attachJavaObjectToJsObject(object, other); }else { id = name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/97/buggy-version/src.main.java.io.alicorn.v8.V8JavaAdapter.java", "BodyUseAPI": [], "Fixed commit": "f1fe9b11f6f5be2e1924bec4a9d927ae2be0df86", "Url": "https://api.github.com/repos/AlexTrotsenko/v8-adapter", "Date": "2018-11-14T14:00:45Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (memberLine[0].equals(\"\\\\N\")) { continue; }else { java.lang.System.out.printf(\"%s %s - %s rating / %s ELO.\\n\", memberLine[2], memberLine[3], memberLine[8], memberLine[9]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6311/buggy-version/src.team.TeamManage.java", "BodyUseAPI": ["java.io.PrintStream.printf(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "e1e696c4b7433c5a361fb71a1406b66545dbdd4f", "Url": "https://api.github.com/repos/Tobiasmidskards/SK41", "Date": "2018-12-07T01:36:32Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (similarNodes.isEmpty()) { ((de.ovgu.cide.fstgen.ast.FSTTerminal) (conflictNode)).setBody(oppositeSideNodeContent); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1643/buggy-version/src.main.java.br.ufpe.cin.mergers.handlers.singlerenaming.MergeMethodsSingleRenamingHandler.java", "BodyUseAPI": [], "Fixed commit": "a476aa0147efe6449019180cad27f5ba59b4687d", "Url": "https://api.github.com/repos/jvcoutinho/jFSTMerge", "Date": "2018-10-20T22:09:51Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cooshare.ip.dao.AuditDao.selectAuditBySubmitterContentType(com.cooshare.ip.service.impl.mobile.CHECK_INSTITUTION,java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == cooShareAudit) return UNEXPECTED_22024;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6121/buggy-version/src.main.java.com.cooshare.ip.service.impl.mobile.InstitutionServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "839585b73062551d2ee38469f8a96fe336fe772a", "Url": "https://api.github.com/repos/beckzl/ip", "Date": "2018-12-13T08:50:13Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((UI.HeadUpDisplay.shotsLeft) == 0) UI.HeadUpDisplay.hud_weapon = quickLoaderImage(\"player/weapon_right\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4895/buggy-version/Performance_Shooter.src.UI.HeadUpDisplay.java", "BodyUseAPI": [], "Fixed commit": "4a08d124e24ba9430f13ddb3bf00e78632a18ed9", "Url": "https://api.github.com/repos/JonasMaennle/StarWarsShooter", "Date": "2018-12-11T09:53:43Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cw.getHandle().getTileEntity(net.minecraft.server.v1_12_R1.BlockPosition)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (te != null) { te.load(nmsnbt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6341/buggy-version/src.net.jrbudda.builder.BuilderTrait.java", "BodyUseAPI": ["net.minecraft.server.v1_12_R1.TileEntity.load(net.minecraft.server.v1_12_R1.NBTTagCompound)"], "Fixed commit": "d1c4df99c09f281eebea66a7b79bf6769782ea68", "Url": "https://api.github.com/repos/Weefle/Builder_Reloaded", "Date": "2018-11-02T17:45:16Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sortOption) == 0) { java.util.Comparator<edu.calvin.cs262.wingdings.pigeonpoll.Question> comp = new java.util.Comparator<edu.calvin.cs262.wingdings.pigeonpoll.Question>() { @java.lang.Override public int compare(edu.calvin.cs262.wingdings.pigeonpoll.Question o1, edu.calvin.cs262.wingdings.pigeonpoll.Question o2) { return o1.timeStamp.compareTo(o1.timeStamp); } }; java.util.Collections.sort(downloadedQuestions, comp); }else { java.util.Comparator<edu.calvin.cs262.wingdings.pigeonpoll.Question> comp = new java.util.Comparator<edu.calvin.cs262.wingdings.pigeonpoll.Question>() { @java.lang.Override public int compare(edu.calvin.cs262.wingdings.pigeonpoll.Question o1, edu.calvin.cs262.wingdings.pigeonpoll.Question o2) { return (o1.downloads) - (o2.downloads); } }; java.util.Collections.sort(downloadedQuestions, comp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6246/buggy-version/app.src.main.java.edu.calvin.cs262.wingdings.pigeonpoll.DownloadQuestion.java", "BodyUseAPI": [], "Fixed commit": "da35128846bf6dc032126b6cfbc4169704b35e6a", "Url": "https://api.github.com/repos/CS-262wingdings/client", "Date": "2018-12-07T21:08:58Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (r.getPlayerName().equals(conquest.game.ConquestGame.Neutral)) { r.setPlayerName(player(turn).getId()); count += 1; if (count == (conquest.game.ConquestGame.nrOfStartingRegions)) break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7464/buggy-version/Conquest.src.conquest.game.ConquestGame.java", "BodyUseAPI": ["conquest.game.RegionData.setPlayerName(player(turn).getId())"], "Fixed commit": "8438900dd07a18bf66b627b8ba681cd356697eed", "Url": "https://api.github.com/repos/medovina/conquest-engine-gui", "Date": "2018-12-24T21:00:28Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bi.ls09efaa05a01.isChecked()) { if (!(validatorClass.EmptyRadioButton(this, bi.ls09efaa05b, bi.ls09efaa05b01, getString(R.string.ls09efaa05b)))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5902/buggy-version/app.src.main.java.com.example.hassannaqvi.leaps_scaleup.ui.Form09_part_2_Activity.java", "BodyUseAPI": ["com.example.hassannaqvi.leaps_scaleup.ui.Form09_part_2_Activity.EmptyRadioButton(com.example.hassannaqvi.leaps_scaleup.ui.Form09_part_2_Activity,bi.ls09efaa05b,bi.ls09efaa05b01,getString(R.string.ls09efaa05b))"], "Fixed commit": "19ea98b20bb1559786b9a961be7300dae6cf1b59", "Url": "https://api.github.com/repos/AliAzaz/LEAPS_ScaleUp", "Date": "2018-11-16T05:37:26Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((risk.Country.currentlySelected[1]) != null) risk.Country.currentlySelected[1].troopEncasementImage = java.awt.Toolkit.getDefaultToolkit().getImage(\"./Troop Counter Mark II Final.png\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9065/buggy-version/src.risk.Country.java", "BodyUseAPI": [], "Fixed commit": "84f7443962d283dc5dfee8387c63dad694a80a40", "Url": "https://api.github.com/repos/djwyates/Risk", "Date": "2018-11-27T21:02:39Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getHeight()) == 0) { return 50; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8463/buggy-version/virtualjoystick.src.main.java.io.github.controlwear.virtual.joystick.android.JoystickView.java", "BodyUseAPI": [], "Fixed commit": "409608fbc7cafe549d7000c04cfc587945ed85e4", "Url": "https://api.github.com/repos/controlwear/virtual-joystick-android", "Date": "2018-11-28T20:33:04Z"},
{"Line": "=>629", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getWidth()) == 0) { return 50; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8463/buggy-version/virtualjoystick.src.main.java.io.github.controlwear.virtual.joystick.android.JoystickView.java", "BodyUseAPI": [], "Fixed commit": "409608fbc7cafe549d7000c04cfc587945ed85e4", "Url": "https://api.github.com/repos/controlwear/virtual-joystick-android", "Date": "2018-11-28T20:33:04Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (textAppearanceId == (-1)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8623/buggy-version/calligraphy.src.main.java.uk.co.chrisjenx.calligraphy.CalligraphyUtils.java", "BodyUseAPI": [], "Fixed commit": "6102f67ec14bb6bba36eaac78a8492d058d5b4f9", "Url": "https://api.github.com/repos/stepstone-tech/Calligraphy", "Date": "2018-11-16T19:02:52Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_enabled) { process.init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2430/buggy-version/nodel-framework.src.main.java.org.nodel.toolkit.ManagedToolkit.java", "BodyUseAPI": [], "Fixed commit": "dc38078b9b3f61ae51153ce473fcb822c43d4588", "Url": "https://api.github.com/repos/justparking/nodel", "Date": "2018-07-27T04:24:35Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((hidef.getReportingEntity().getTin()) != null) && (!(hidef.getReportingEntity().getTin().isEmpty()))) { org.w3c.dom.Element tin = doc.createElement(\"cbc:TIN\"); if (!(org.springframework.util.StringUtils.isEmpty(hidef.getReportingEntity().getTinIssuedBy()))) { tin.setAttribute(\"TINType\", hidef.getReportingEntity().getTinIssuedBy()); } if (!(org.springframework.util.StringUtils.isEmpty(hidef.getReportingEntity().getTinType()))) { tin.setAttribute(\"issuedBy\", hidef.getReportingEntity().getTinType()); } tin.appendChild(doc.createTextNode(hidef.getReportingEntity().getTin())); cbcEntity.appendChild(tin); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2101/buggy-version/hidef-myfi.src.main.java.com.censof.myfi.hidefmyfi.serviceImpl.PackageGenerationServiceImpl.java", "BodyUseAPI": ["org.w3c.dom.Document.createTextNode(hidef.getReportingEntity().getTin())", "com.censof.myfi.hidefmyfi.vo.HidefVo.getReportingEntity()", "com.censof.myfi.hidefmyfi.vo.HidefVo.getReportingEntity()", "hidef.getReportingEntity().getTinIssuedBy()", "org.springframework.util.StringUtils.isEmpty(hidef.getReportingEntity().getTinIssuedBy())", "org.w3c.dom.Element.setAttribute(java.lang.String,hidef.getReportingEntity().getTinIssuedBy())", "org.springframework.util.StringUtils.isEmpty(hidef.getReportingEntity().getTinType())", "com.censof.myfi.hidefmyfi.vo.HidefVo.getReportingEntity()", "com.censof.myfi.hidefmyfi.vo.HidefVo.getReportingEntity()", "org.w3c.dom.Element.setAttribute(java.lang.String,hidef.getReportingEntity().getTinType())", "hidef.getReportingEntity().getTin()", "hidef.getReportingEntity().getTinType()", "hidef.getReportingEntity().getTinIssuedBy()", "hidef.getReportingEntity().getTinType()", "org.w3c.dom.Element.appendChild(org.w3c.dom.Text)", "com.censof.myfi.hidefmyfi.vo.HidefVo.getReportingEntity()"], "Fixed commit": "4f18d23a69ed7a57581358538c93a16d5b737d47", "Url": "https://api.github.com/repos/praveenkumar09/ctc", "Date": "2018-12-04T04:40:03Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getEntityType()) != (org.bukkit.entity.EntityType.PLAYER)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/75/buggy-version/src.me.ryanhamshire.GPFlags.FlagDef_AllowPvP.java", "BodyUseAPI": [], "Fixed commit": "73d5b0cb169ba979ac81e9d58d6d5f34221d8fc6", "Url": "https://api.github.com/repos/ShaneBeee/GriefPreventionFlags", "Date": "2018-11-20T12:07:05Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.joshatron.tak.server.database.AccountDAO.getUserFromUsername(auth.getUsername())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (user.getUserId().equalsIgnoreCase(other)) { throw new io.joshatron.tak.server.exceptions.GameServerException(io.joshatron.tak.server.exceptions.ErrorCode.REQUESTING_SELF); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8685/buggy-version/src.main.java.io.joshatron.tak.server.utils.SocialUtils.java", "BodyUseAPI": [], "Fixed commit": "ac0d0a15bc62ceb3314a49271f5621bf7b7302ad", "Url": "https://api.github.com/repos/joshatron/Tak-Server", "Date": "2018-12-23T22:51:12Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (button.formatVal().hasHour()) { generateTimeControl(writer, component, idJs, \"hour\", \"vhr\", \"hrup\", \"hrdown\", (currentValue == null), hourInt, com.quakearts.webapp.facelets.bootstrap.renderers.BootDateButtonRenderer.getDisplayType(button, context, \"hourType\"), componentDisabled); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/452/buggy-version/qa-boot.src.main.java.com.quakearts.webapp.facelets.bootstrap.renderers.BootDateButtonRenderer.java", "BodyUseAPI": ["com.quakearts.webapp.facelets.bootstrap.renderers.BootDateButtonRenderer.generateTimeControl(javax.faces.context.ResponseWriter,javax.faces.component.UIComponent,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.String,boolean)", "com.quakearts.webapp.facelets.bootstrap.renderers.BootDateButtonRenderer.getDisplayType(com.quakearts.webapp.facelets.bootstrap.components.BootDateButton,javax.faces.context.FacesContext,java.lang.String)"], "Fixed commit": "8efd37ebd7280fb2d39ca7c27291145fe9bc52f9", "Url": "https://api.github.com/repos/kwakutwumasi/Quakearts-Webtools", "Date": "2018-11-06T13:55:10Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (students != null) { for (java.lang.String key : students.keySet()) { if (key.equals(userID)) { for (c.group24.localcommunityservices.OpportunityListItem item : items) { if (item.title.equals(title)) { list.remove(item); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3346/buggy-version/app.src.main.java.c.group24.localcommunityservices.OpportunityFragment.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.keySet()"], "Fixed commit": "e72d07447db682f579df50efa95cc6a9f751a67c", "Url": "https://api.github.com/repos/aicancan0414/LocalCommunityServices", "Date": "2018-12-04T00:55:33Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((keyAction.get(e.getKeyCode())) != (rpg.api.listener.key.KeyboardSensor.PRESSED)) { rpg.api.listener.key.KeyboardListener.setState(e.getKeyCode(), KeyState.PRESSING); keyAction.put(e.getKeyCode(), rpg.api.listener.key.KeyboardSensor.PRESSED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2726/buggy-version/src.main.java.rpg.api.listener.key.KeyboardSensor.java", "BodyUseAPI": ["rpg.api.listener.key.KeyboardListener.setState(int,KeyState.PRESSING)", "java.util.HashMap<java.lang.Integer, java.lang.Byte>.put(int,byte)", "java.awt.event.KeyEvent.getKeyCode()", "java.awt.event.KeyEvent.getKeyCode()"], "Fixed commit": "0f7d1713d9e3d69aa4fd925895a6c4141b4a9fe7", "Url": "https://api.github.com/repos/neo-0815-organization/RPG", "Date": "2018-12-13T13:44:07Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((keyAction.get(e.getKeyCode())) != (rpg.api.listener.key.KeyboardSensor.RELEASED)) { rpg.api.listener.key.KeyboardListener.setState(e.getKeyCode(), KeyState.RELEASING); keyAction.put(e.getKeyCode(), rpg.api.listener.key.KeyboardSensor.RELEASED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2726/buggy-version/src.main.java.rpg.api.listener.key.KeyboardSensor.java", "BodyUseAPI": ["java.awt.event.KeyEvent.getKeyCode()", "java.awt.event.KeyEvent.getKeyCode()", "java.util.HashMap<java.lang.Integer, java.lang.Byte>.put(int,byte)", "rpg.api.listener.key.KeyboardListener.setState(int,KeyState.RELEASING)"], "Fixed commit": "0f7d1713d9e3d69aa4fd925895a6c4141b4a9fe7", "Url": "https://api.github.com/repos/neo-0815-organization/RPG", "Date": "2018-12-13T13:44:07Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userInput == null) { output = \"You've got a null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3573/buggy-version/src.chat.controller.ChatController.java", "BodyUseAPI": [], "Fixed commit": "6990b9966e49d9750cb13e3cecfb58bcd8b7cce1", "Url": "https://api.github.com/repos/hkno9012/Chatbot", "Date": "2018-11-06T19:14:25Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(player.world.isRemote)) nbt.setTag(\"stateManager\", stateManager.serializeNBT());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3942/buggy-version/src.main.java.me.fril.regeneration.common.capability.CapabilityRegeneration.java", "BodyUseAPI": [], "Fixed commit": "6271b4b7b241091ff5983e11a7dc85f839f743cf", "Url": "https://api.github.com/repos/Suffril/Regeneration", "Date": "2018-11-06T12:36:02Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (sequenceLength == 0) { ++(this.maxValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7446/buggy-version/src.main.java.se.de.hu_berlin.informatik.utils.compression.BufferedIntArraysToCompressedByteArrayProcessor.java", "BodyUseAPI": [], "Fixed commit": "b1ee65ef50408ec32bcf8cc70a58884a4532a527", "Url": "https://api.github.com/repos/hub-se/HUB-SE-framework", "Date": "2018-11-27T23:07:20Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.tasks.Task.getResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (currentLocation != null) { android.util.Log.i(com.example.avivmoyal.minsta.MapsActivity.TAG, (\"latlang\" + (new com.google.android.gms.maps.model.LatLng(currentLocation.getLatitude(), currentLocation.getLongitude()).toString()))); moveCamera(new com.google.android.gms.maps.model.LatLng(currentLocation.getLatitude(), currentLocation.getLongitude()), com.example.avivmoyal.minsta.MapsActivity.DEFAULT_ZOOM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1297/buggy-version/app.src.main.java.com.example.avivmoyal.minsta.MapsActivity.java", "BodyUseAPI": ["android.location.Location.getLatitude()", "android.util.Log.i(java.lang.String,java.lang.String)", "android.location.Location.getLongitude()", "com.example.avivmoyal.minsta.MapsActivity.1.moveCamera(com.google.android.gms.maps.model.LatLng,float)", "android.location.Location.getLatitude()", "android.location.Location.getLongitude()", "com.google.android.gms.maps.model.LatLng.toString()"], "Fixed commit": "9d1e13f1fa91d219c95a7b9aee461da5339a4d7c", "Url": "https://api.github.com/repos/AvivMoyal/Minsta", "Date": "2018-11-28T13:20:23Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((job.getVehicleId()) == (-1)) { long vehicleId = this.resourceManager.getOptimalCar(job.getStartId()); job.setVehicleId(vehicleId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2236/buggy-version/SmartRaceCar.Modules.racecarbackend.src.main.java.be.uantwerpen.fti.ds.sc.racecarbackend.JobDispatcher.java", "BodyUseAPI": ["be.uantwerpen.fti.ds.sc.racecarbackend.ResourceManager.getOptimalCar(job.getStartId())", "be.uantwerpen.fti.ds.sc.racecarbackend.Job.getStartId()", "be.uantwerpen.fti.ds.sc.racecarbackend.Job.setVehicleId(long)"], "Fixed commit": "0677050e43ab42494472cfc520006268f00693c8", "Url": "https://api.github.com/repos/SmartCity-UAntwerpen/SmartRaceCar", "Date": "2018-12-20T13:55:47Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checked == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9243/buggy-version/src.main.java.com.github.crashdemons.azbasics.utils.Positions.java", "BodyUseAPI": [], "Fixed commit": "7da7f795114e03e69997448fd20f40948ab027f4", "Url": "https://api.github.com/repos/crashdemons/AZBasics", "Date": "2018-11-22T02:20:11Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9243/buggy-version/src.main.java.com.github.crashdemons.azbasics.utils.Positions.java", "BodyUseAPI": [], "Fixed commit": "7da7f795114e03e69997448fd20f40948ab027f4", "Url": "https://api.github.com/repos/crashdemons/AZBasics", "Date": "2018-11-22T02:20:11Z"},
{"Line": "=>1287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((object_code.length()) < 3) { object_code = \"0\" + object_code; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6096/buggy-version/src.assembler_final.assembler.java", "BodyUseAPI": [], "Fixed commit": "101741d44db906582be295339c38e9a93152f2ba", "Url": "https://api.github.com/repos/karimayman/sic", "Date": "2018-12-06T00:10:04Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (x < 0) { int x1 = x - (2 * x); this.value = (x1 + \"\ufffd secolo \") + c; }else this.value = (x + \"\ufffd secolo \") + c;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3951/buggy-version/src.it.bibliotecadigitale.vo.Datazione.java", "BodyUseAPI": [], "Fixed commit": "c003bd0218cc75f7862a769cc7d6c0ebed972ed8", "Url": "https://api.github.com/repos/Lunatico9/OOSD2018", "Date": "2018-11-18T14:35:19Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x < 0) { int x1 = x - (2 * x); this.value = (x1 + \"\ufffd secolo \") + c; }else this.value = (x + \"\ufffd secolo \") + c;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3951/buggy-version/src.it.bibliotecadigitale.vo.Datazione.java", "BodyUseAPI": [], "Fixed commit": "c003bd0218cc75f7862a769cc7d6c0ebed972ed8", "Url": "https://api.github.com/repos/Lunatico9/OOSD2018", "Date": "2018-11-18T14:35:19Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (string.equals(\".stop\")) { }else if (!(string.equals(\".start\"))) { contr.receiveGuess(string); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4456/buggy-version/src.server.net.RequestHandler.java", "BodyUseAPI": ["server.controller.Controller.receiveGuess(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "be98c987438b4fe9d85d1c834fce2290689ccdc9", "Url": "https://api.github.com/repos/JoannaLilja/netpro-homework-5-hangdroidserver", "Date": "2018-12-28T17:33:15Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gamePlayedDateAndTime.minusMonths(6).minusYears(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.incode.eurocommercial.relatio.dom.event.AspectMapHelperFunctions.isValidDate(approximateDateOfBirth.toString())) { map.put(AspectType.ApproximateDateOfBirth, approximateDateOfBirth.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5853/buggy-version/dom.src.main.java.org.incode.eurocommercial.relatio.dom.event.EventSourceType.java", "BodyUseAPI": ["org.joda.time.LocalDate.toString()", "java.util.Map<org.incode.eurocommercial.relatio.dom.aspect.AspectType, java.lang.String>.put(AspectType.ApproximateDateOfBirth,approximateDateOfBirth.toString())"], "Fixed commit": "a8823dbb10bacd6d5f34aef66fa7804e76c5a726", "Url": "https://api.github.com/repos/incodehq/relatio", "Date": "2018-12-18T13:39:41Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ICONexApp.version.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((java.lang.Integer.parseInt(mVersion[1])) < (java.lang.Integer.parseInt(all[1]))) return foundation.icon.iconex.util.Utils.RES_VERSION.NEW; else if ((java.lang.Integer.parseInt(mVersion[2])) < (java.lang.Integer.parseInt(all[2]))) return foundation.icon.iconex.util.Utils.RES_VERSION.NEW;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6314/buggy-version/app.src.main.java.foundation.icon.iconex.util.Utils.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "4f6ab2611fe7eba2fb753d6c7f7135f789769218", "Url": "https://api.github.com/repos/icon-project/iconex_android", "Date": "2018-11-12T03:31:52Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (configuration.isHasToken()) { java.lang.System.out.println(((configuration.getNickname()) + \": Enviando o token.\")); configuration.setHasToken(false); sendMessageToClient(Server.TOKEN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/76/buggy-version/src.Server.java", "BodyUseAPI": ["java.io.PrintStream.println(((configuration.getNickname()) + \": Enviando o token.\"))", "Configuration.setHasToken(boolean)", "Configuration.getNickname()"], "Fixed commit": "8af18a2a9a79363362c35230da18bf5b81e77ab4", "Url": "https://api.github.com/repos/homerooliveira/trab2-Redes", "Date": "2018-11-05T20:56:33Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ylli.api.user.mapper.UserSettlementMapper.selectByUserId(auth.id)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (settlement != null) { info.chargeType = settlement.chargeType; info.chargeRate = settlement.chargeRate; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7618/buggy-version/src.main.java.com.ylli.api.user.service.UserManageService.java", "BodyUseAPI": [], "Fixed commit": "a149768c4632cb2f5e743880bcf5710c6c225875", "Url": "https://api.github.com/repos/cryS4tal/alianpay", "Date": "2018-12-04T15:03:55Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.isHidden())) { java.util.List<java.io.File> tempList = splitFile(file, MasterIndexUtil.maxRowOfChunk); fileChunks.addAll(tempList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5616/buggy-version/IndexingMaster.java", "BodyUseAPI": ["IndexingMaster.splitFile(java.io.File,MasterIndexUtil.maxRowOfChunk)"], "Fixed commit": "0b10d5e169bc3d5ee98101c7d3202c6c6955a461", "Url": "https://api.github.com/repos/andybug912/2018fall_OS_proj2_part1", "Date": "2018-12-07T02:10:35Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((level) == 1) { this.aliens.add(new SoEproj.Boss1Level(bgWidth, ((range) / 2), aliens)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2651/buggy-version/src.main.java.SoEproj.AlienGenerator.java", "BodyUseAPI": [], "Fixed commit": "12599b4455455a43cdec7ad2a6de6d10c9797b67", "Url": "https://api.github.com/repos/waelkarman/SoE-Voyager_on_the_edge_of_the_solar_system", "Date": "2018-12-13T10:21:56Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((level) == 3) { this.aliens.add(new SoEproj.Boss3Level(bgWidth, ((range) / 2), aliens)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2651/buggy-version/src.main.java.SoEproj.AlienGenerator.java", "BodyUseAPI": [], "Fixed commit": "12599b4455455a43cdec7ad2a6de6d10c9797b67", "Url": "https://api.github.com/repos/waelkarman/SoE-Voyager_on_the_edge_of_the_solar_system", "Date": "2018-12-13T10:21:56Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((level) == 2) { this.aliens.add(new SoEproj.Boss2Level(bgWidth, ((range) / 2), aliens)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2651/buggy-version/src.main.java.SoEproj.AlienGenerator.java", "BodyUseAPI": [], "Fixed commit": "12599b4455455a43cdec7ad2a6de6d10c9797b67", "Url": "https://api.github.com/repos/waelkarman/SoE-Voyager_on_the_edge_of_the_solar_system", "Date": "2018-12-13T10:21:56Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((answers.length) != 0) { teamAnswer.setText(answers[answerTracker].getAnswer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/229/buggy-version/src.app.app.src.main.java.me.lgbt.pubhub.fragments.GradingFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(answers[answerTracker].getAnswer())", "answers[answerTracker].getAnswer()"], "Fixed commit": "17fcbbc4848e04fee42c6a9545f27943beda6b13", "Url": "https://api.github.com/repos/gdblech/PubHub", "Date": "2018-12-01T00:05:04Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getSource()) == (edit)) { if (((int) (v.get(5))) == 0) { Edit(); dispose(); }else { new main.ErrWindow(\"\u8be5\u884c\u6587\u5df2\u53d1\u9001,\u4e0d\u53ef\u518d\u88ab\u7f16\u8f91\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2291/buggy-version/src.main.ArticleEditUI.java", "BodyUseAPI": [], "Fixed commit": "eeabc2b1bc3c702b74a8af9443be5c151fbca100", "Url": "https://api.github.com/repos/Liuhjhj/ManagerSystem", "Date": "2018-12-25T08:21:29Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nbPageTotal < 1L) nbPageTotal = 1L;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9248/buggy-version/src.main.java.com.excilys.cdb.model.PageInfo.java", "BodyUseAPI": [], "Fixed commit": "7457e79d4bb38ba3705df78739c6feae6f7a7476", "Url": "https://api.github.com/repos/samoGit/computer-database", "Date": "2018-11-07T09:37:12Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playing) mp.pause();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/558/buggy-version/app.src.main.java.com.example.justi.markthat.ViewRecording.java", "BodyUseAPI": [], "Fixed commit": "73b313c6bc47fbd45d5240125bbc075d339649f7", "Url": "https://api.github.com/repos/jstnzl/MarkThat", "Date": "2018-11-13T19:01:26Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playing) mp.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/558/buggy-version/app.src.main.java.com.example.justi.markthat.ViewRecording.java", "BodyUseAPI": [], "Fixed commit": "73b313c6bc47fbd45d5240125bbc075d339649f7", "Url": "https://api.github.com/repos/jstnzl/MarkThat", "Date": "2018-11-13T19:01:26Z"},
{"Line": "=>841", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getDate()) == 0) { event.setDate(new java.util.Date().getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6135/buggy-version/alien4cloud-yorc-plugin.src.main.java.org.ystia.yorc.alien4cloud.plugin.YorcPaaSProvider.java", "BodyUseAPI": ["org.ystia.yorc.alien4cloud.plugin.AbstractMonitorEvent.setDate(long)"], "Fixed commit": "afcc5f5af8afad3cdaa8234641a5d340db239a1d", "Url": "https://api.github.com/repos/ystia/yorc-a4c-plugin", "Date": "2018-12-04T15:55:55Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getFormat().getDataType().equals(Config.DataTypes.CAMSTAR)) { names = fileName.split(\"xls.\"); }else { java.lang.System.err.println((\"Fatal Error: bad Data Type found: \" + (this.getFormat().getDataType().toString()))); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2668/buggy-version/src.main.java.org.himalayas.filereader.reader.Reader.java", "BodyUseAPI": [], "Fixed commit": "b39b5033476ad39f5e569e5a64975f1bf640e2b5", "Url": "https://api.github.com/repos/rapsilen/TestFileReader", "Date": "2018-11-13T07:47:10Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anbang.qipai.fangpaomajiang.cqrs.q.service.MajiangPlayQueryService.findJuResultDbo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (juResultDbo != null) { com.anbang.qipai.fangpaomajiang.cqrs.q.dbo.MajiangGameDbo majiangGameDbo = majiangGameQueryService.findMajiangGameDboById(gameId); com.anbang.qipai.fangpaomajiang.msg.msjobj.MajiangHistoricalJuResult juResult = new com.anbang.qipai.fangpaomajiang.msg.msjobj.MajiangHistoricalJuResult(juResultDbo, majiangGameDbo); fangpaoMajiangResultMsgService.recordJuResult(juResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3057/buggy-version/src.main.java.com.anbang.qipai.fangpaomajiang.websocket.GamePlayWsController.java", "BodyUseAPI": [], "Fixed commit": "40c4c511d08914c80fa7dfd9c41a1384effae442", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_fangpaomajiang", "Date": "2018-12-05T01:53:46Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((majiangGameValueObject.getState().name().equals(FinishedByVote.name)) || (majiangGameValueObject.getState().name().equals(Canceled.name))) { gameMsgService.gameFinished(gameId); }else { gameMsgService.gamePlayerLeave(majiangGameValueObject, playerId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3057/buggy-version/src.main.java.com.anbang.qipai.fangpaomajiang.web.controller.GameController.java", "BodyUseAPI": ["com.anbang.qipai.fangpaomajiang.msg.service.FangpaoMajiangGameMsgService.gamePlayerLeave(com.anbang.qipai.fangpaomajiang.cqrs.c.domain.MajiangGameValueObject,java.lang.String)"], "Fixed commit": "40c4c511d08914c80fa7dfd9c41a1384effae442", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_fangpaomajiang", "Date": "2018-12-05T01:53:46Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anbang.qipai.fangpaomajiang.cqrs.q.service.MajiangPlayQueryService.findJuResultDbo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (juResultDbo != null) { com.anbang.qipai.fangpaomajiang.cqrs.q.dbo.MajiangGameDbo majiangGameDbo = majiangGameQueryService.findMajiangGameDboById(gameId); com.anbang.qipai.fangpaomajiang.msg.msjobj.MajiangHistoricalJuResult juResult = new com.anbang.qipai.fangpaomajiang.msg.msjobj.MajiangHistoricalJuResult(juResultDbo, majiangGameDbo); fangpaoMajiangResultMsgService.recordJuResult(juResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3057/buggy-version/src.main.java.com.anbang.qipai.fangpaomajiang.web.controller.GameController.java", "BodyUseAPI": [], "Fixed commit": "40c4c511d08914c80fa7dfd9c41a1384effae442", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_fangpaomajiang", "Date": "2018-12-05T01:53:46Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anbang.qipai.fangpaomajiang.cqrs.q.service.MajiangPlayQueryService.findJuResultDbo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (juResultDbo != null) { com.anbang.qipai.fangpaomajiang.cqrs.q.dbo.MajiangGameDbo majiangGameDbo = majiangGameQueryService.findMajiangGameDboById(gameId); com.anbang.qipai.fangpaomajiang.msg.msjobj.MajiangHistoricalJuResult juResult = new com.anbang.qipai.fangpaomajiang.msg.msjobj.MajiangHistoricalJuResult(juResultDbo, majiangGameDbo); fangpaoMajiangResultMsgService.recordJuResult(juResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3057/buggy-version/src.main.java.com.anbang.qipai.fangpaomajiang.web.controller.GameController.java", "BodyUseAPI": [], "Fixed commit": "40c4c511d08914c80fa7dfd9c41a1384effae442", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_fangpaomajiang", "Date": "2018-12-05T01:53:46Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((majiangGameValueObject.getState().name().equals(FinishedByVote.name)) || (majiangGameValueObject.getState().name().equals(Canceled.name))) { gameMsgService.gameFinished(gameId); }else { gameMsgService.gamePlayerLeave(majiangGameValueObject, playerId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3057/buggy-version/src.main.java.com.anbang.qipai.fangpaomajiang.web.controller.GameController.java", "BodyUseAPI": ["com.anbang.qipai.fangpaomajiang.msg.service.FangpaoMajiangGameMsgService.gamePlayerLeave(com.anbang.qipai.fangpaomajiang.cqrs.c.domain.MajiangGameValueObject,java.lang.String)"], "Fixed commit": "40c4c511d08914c80fa7dfd9c41a1384effae442", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_fangpaomajiang", "Date": "2018-12-05T01:53:46Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeUntil >= 0) ch.epfl.sweng.eventmanager.notifications.SchedulerHelper.scheduleNotification(context, event.getId(), notification, ((ch.epfl.sweng.eventmanager.notifications.SchedulerHelper.getTimeTo(event.getEndDateAsDate())) + (ch.epfl.sweng.eventmanager.notifications.JoinedEventFeedbackStrategy.ONE_DAY)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7154/buggy-version/app.src.main.java.ch.epfl.sweng.eventmanager.notifications.JoinedEventFeedbackStrategy.java", "BodyUseAPI": [], "Fixed commit": "843a5fd777ac6aadc1308434f0c6b203018ce8be", "Url": "https://api.github.com/repos/Susanfe/sdp-event-management", "Date": "2018-12-17T11:55:42Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 0) { java.lang.System.out.println((\"Input: \" + (args[0]))); java.lang.System.out.println((\"Minimized: \" + (info.tonyl.bf4j.lang.Minimizer.minimize(args[0])))); }else { java.lang.System.out.println(\"No input.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2204/buggy-version/src.main.java.info.tonyl.bf4j.Bf4jApp.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "info.tonyl.bf4j.lang.Minimizer.minimize(java.lang.String)", "java.io.PrintStream.println((\"Minimized: \" + (info.tonyl.bf4j.lang.Minimizer.minimize(args[0]))))"], "Fixed commit": "f47eea38211aa0b3d1e6cff0d9affb17859d605c", "Url": "https://api.github.com/repos/libardia/bf4j", "Date": "2018-11-04T22:14:08Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((query != null) && (!(query.isBlank()))) { java.lang.String[] pairs = query.split(\"&\"); for (java.lang.String pair : pairs) { if (pair.isBlank()) { continue; } int idx = pair.indexOf(\"=\"); if (idx < 0) { queryPairs.put(pair, \"\"); }else if (idx == 0) { queryPairs.put(\"\", java.net.URLDecoder.decode(pair.substring((idx + 1)), charset)); }else { queryPairs.put(java.net.URLDecoder.decode(pair.substring(0, idx), charset), java.net.URLDecoder.decode(pair.substring((idx + 1)), charset)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2859/buggy-version/connectors.gridgo-jetty-http.src.main.java.io.gridgo.connector.jetty.parser.AbstractHttpRequestParser.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "dfbd3efabe974f36a7d63330d2cdcf7cf7b77893", "Url": "https://api.github.com/repos/gridgo/gridgo-connector", "Date": "2018-11-26T19:09:13Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CommandLine.getOptionValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (outputFilePath != null) { new InstrumentationPretty(outputFilePath).processInsturmentationOutput(); }else { new InstrumentationPretty(\"\").processInsturmentationOutput(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9819/buggy-version/src.main.java.InstrumentationPretty.java", "BodyUseAPI": ["InstrumentationPretty.processInsturmentationOutput()"], "Fixed commit": "1b91ef9e7445891a116ab8600d2aa16c95fcab80", "Url": "https://api.github.com/repos/jamesknowsbest/Instrumentationpretty", "Date": "2018-12-23T21:56:39Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (startPoint.after(endPoint)) { throw new java.lang.IllegalArgumentException(new java.lang.StringBuilder().append(\"Date: \").append(endDate).append(\" before \").append(startPoint).append(\". Report for the past is not in the scope of this service.\").toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2990/buggy-version/WorkDays.src.main.java.workdays.DaysCountController.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.util.Date)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()"], "Fixed commit": "ed4aaf893a9be5c169e2f5a76fff6419801643f3", "Url": "https://api.github.com/repos/maplociennik/WorkDays", "Date": "2018-11-16T14:36:49Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.choerodon.gateway.helper.infra.mapper.PermissionMapper.projectEnabled(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((isEnabled != null) && (!isEnabled)) { context.response.setStatus(CheckState.PERMISSION_DISABLED_PROJECT); context.response.setMessage((\"The project has been disabled, projectId: \" + projectId)); }else if (sourceIds.stream().anyMatch(( t) -> t.equals(projectId))) { context.response.setStatus(CheckState.SUCCESS_PASS_PROJECT); context.response.setMessage((\"Have access to this 'project-level' interface, permission: \" + (context.getPermission()))); }else { context.response.setStatus(CheckState.PERMISSION_NOT_PASS_PROJECT); context.response.setMessage((\"No access to this this project, projectId: \" + projectId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3375/buggy-version/src.main.java.io.choerodon.gateway.helper.api.filter.CommonRequestCheckFilter.java", "BodyUseAPI": [], "Fixed commit": "86c019960ea187ef29d6f893718d9f1f930895a0", "Url": "https://api.github.com/repos/choerodon/gateway-helper", "Date": "2018-12-03T13:50:19Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.choerodon.gateway.helper.infra.mapper.PermissionMapper.organizationEnabled(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((isEnabled != null) && (!isEnabled)) { context.response.setStatus(CheckState.PERMISSION_DISABLED_ORG); context.response.setMessage((\"The organization has been disabled, organizationId: \" + orgId)); }else if (sourceIds.stream().anyMatch(( t) -> t.equals(orgId))) { context.response.setStatus(CheckState.SUCCESS_PASS_ORG); context.response.setMessage((\"Have access to this 'organization-level' interface, permission: \" + (context.getPermission()))); }else { context.response.setStatus(CheckState.PERMISSION_NOT_PASS_ORG); context.response.setMessage((\"No access to this this organization, organizationId: \" + orgId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3375/buggy-version/src.main.java.io.choerodon.gateway.helper.api.filter.CommonRequestCheckFilter.java", "BodyUseAPI": [], "Fixed commit": "86c019960ea187ef29d6f893718d9f1f930895a0", "Url": "https://api.github.com/repos/choerodon/gateway-helper", "Date": "2018-12-03T13:50:19Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((app.getStartTime()) == \"00:00\") && ((app.getFinishTime()) == \"00:00\")) { java.lang.System.out.println(\"Time is invalid\"); }else if (overlap(app)) { java.lang.System.out.println(\"Appointment Overlap\"); }else { java.lang.System.out.println(\"Appointment added\"); this.appointments.add(app); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6667/buggy-version/OOappointment.Day.java", "BodyUseAPI": ["Day.overlap(Appointment)", "java.util.ArrayList<Appointment>.add(Appointment)"], "Fixed commit": "f71f1a1d5a52a4d1e78059cc224abc5feff6eecd", "Url": "https://api.github.com/repos/Nohclu/ComparativeProgramming", "Date": "2018-11-22T16:01:44Z"},
{"Line": "=>1381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Hello.downloadMusicRMI(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (print.equals(\"tudo okay no download\")) { return \"Download complete.\"; }else { return \"Something went wrong.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/585/buggy-version/src.Client.java", "BodyUseAPI": [], "Fixed commit": "3e18e0e1b7e64bd2a5e797f92fb64bc207c09606", "Url": "https://api.github.com/repos/FabioGCordeiro/SD---Project", "Date": "2018-11-27T00:01:17Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (packet.getAddress().equals(java.net.InetAddress.getLocalHost())) { java.lang.System.out.println(\"Self\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/695/buggy-version/src.main.java.core.MessageListener.java", "BodyUseAPI": [], "Fixed commit": "c6fa3a8a14d93779cf7d7d0e04821c1f77d50c18", "Url": "https://api.github.com/repos/omkarspatil/CS536_P2P", "Date": "2018-11-21T22:35:12Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ar.getGameState()) != null) { session.sendString(jsonObj.toString()); }else { client.sendString(jsonObj.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4412/buggy-version/DozorGameServer.src.main.java.com.dozor.game.GameControllerAndParser.java", "BodyUseAPI": [], "Fixed commit": "7bc87f510bfdea6513d70dd76433626ed67bdefa", "Url": "https://api.github.com/repos/kachkovsky/dozorgame", "Date": "2018-11-24T08:07:39Z"},
{"Line": "=>881", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (promo.corP()) pecasP.add(promo); else pecasB.add(promo);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/132/buggy-version/1612734_1413019.src.tabuleiro.Tabuleiro.java", "BodyUseAPI": ["java.util.ArrayList<tabuleiro.Peca>.add(tabuleiro.Peca)", "java.util.ArrayList<tabuleiro.Peca>.add(tabuleiro.Peca)"], "Fixed commit": "e7d36bceab5b19109bdcd34a323e0ee81da2cbe2", "Url": "https://api.github.com/repos/NoggetGump/Xadrez-POO", "Date": "2018-11-06T20:54:31Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lineart.model.ILine2D.getIntersection(lineart.model.ILine2D)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (p != null) return this.getBoundingBox().contains(p) ? p : null; else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6196/buggy-version/src.lineart.model.LineSegment2D.java", "BodyUseAPI": ["lineart.model.Rectangle.contains(lineart.model.Point2D)"], "Fixed commit": "61ab23196b8202d7bcfd13bf8c63dd86ac10c1eb", "Url": "https://api.github.com/repos/noisedriver/lineart", "Date": "2018-11-16T19:43:24Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (casasPoints.containsKey(rest)) { int currPoints = casasPoints.get(rest); casasPoints.replace(rest, (currPoints + pointsToGive)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5823/buggy-version/src.OOP.Solution.CartelDeNachosImpl.java", "BodyUseAPI": ["java.util.HashMap<OOP.Provided.CasaDeBurrito, java.lang.Integer>.get(OOP.Provided.CasaDeBurrito)", "java.util.HashMap<OOP.Provided.CasaDeBurrito, java.lang.Integer>.replace(OOP.Provided.CasaDeBurrito,int)"], "Fixed commit": "d3df41ce88580458a6edd71f59669e9f91448b39", "Url": "https://api.github.com/repos/talperchuk/OOP", "Date": "2018-11-28T17:16:00Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (its_meow.betteranimalsplus.common.config.BetterAnimalsPlusConfig.spawnGoat) its_meow.betteranimalsplus.init.MobRegistry.regCre(its_meow.betteranimalsplus.common.entity.EntityGoat.class, \"Goat\", 16777215, 15658734, BetterAnimalsPlusConfig.goatWeight, 1, 4, net.minecraftforge.common.BiomeDictionary.getBiomes(Type.HILLS), net.minecraftforge.common.BiomeDictionary.getBiomes(Type.MOUNTAIN), net.minecraftforge.common.BiomeDictionary.getBiomes(Type.SAVANNA), net.minecraftforge.common.BiomeDictionary.getBiomes(Type.PLAINS), net.minecraftforge.common.BiomeDictionary.getBiomes(Type.FOREST));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2047/buggy-version/src.main.java.its_meow.betteranimalsplus.init.MobRegistry.java", "BodyUseAPI": [], "Fixed commit": "edd7522a9513dbaa8028bfb5e18447cd53896343", "Url": "https://api.github.com/repos/itsmeow/betteranimalsplus", "Date": "2018-11-08T21:33:03Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.lang.Character.toString(sumArg.charAt(((sumArg.length()) - 1))).equals(\")\"))) { sumArg.append(\")\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1701/buggy-version/src.ShuntingYard.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "e2f6da80ff8884ba93fc5f32423ff9febde6d98f", "Url": "https://api.github.com/repos/El-Team/Lab-Algo-3-Proyecto-3", "Date": "2018-12-18T02:37:28Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(net.md_5.bungee.BungeeCord.getInstance().config.getAllowedChannels().contains(pluginMessage.getTag()))) && (!(pluginMessage.getTag().startsWith(\"MC|\")))) { throw CancelSendSignal.INSTANCE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/612/buggy-version/proxy.src.main.java.net.md_5.bungee.connection.UpstreamBridge.java", "BodyUseAPI": [], "Fixed commit": "032447469fa77edb01e170181498cc7733a7713a", "Url": "https://api.github.com/repos/leaffyh/BungeeCord", "Date": "2018-11-26T20:31:19Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outputToken instanceof java.lang.String) { return !(((java.lang.String) (outputToken)).isEmpty()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7639/buggy-version/core.sdk-core.src.main.java.software.amazon.awssdk.core.util.PaginatorUtils.java", "BodyUseAPI": [], "Fixed commit": "be134e627419e3db49db52aaad35af0db3648740", "Url": "https://api.github.com/repos/aws/aws-sdk-java-v2", "Date": "2018-12-06T21:03:23Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((playerPiecesTaken.size()) > 0) || ((oponentPiecesTaken.size()) > 0)) { moveVariant.getComments().add(comment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7139/buggy-version/natural-language.src.main.java.fii.ai.natural.language.service.CommentVariantServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c3c340cec28cd6af4b78fcc1a9f931772fb3e022", "Url": "https://api.github.com/repos/stefan-adrian/ai-natural-language", "Date": "2018-12-15T10:14:19Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((playerChecks.size()) > 0) || ((oponentChecks.size()) > 0)) { moveVariant.getComments().add(comment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7139/buggy-version/natural-language.src.main.java.fii.ai.natural.language.service.CommentVariantServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c3c340cec28cd6af4b78fcc1a9f931772fb3e022", "Url": "https://api.github.com/repos/stefan-adrian/ai-natural-language", "Date": "2018-12-15T10:14:19Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t.toString().equals(\"java.net.SocketTimeoutException: timeout\")) android.widget.Toast.makeText(getActivity(), \"Sorry, this is taking too long. Ending process.\", Toast.LENGTH_SHORT).show(); else android.widget.Toast.makeText(getActivity(), \"Can't extract data\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/874/buggy-version/app.src.main.java.edu.temple.stegosaurus.ExtractFragment.java", "BodyUseAPI": [], "Fixed commit": "5bde6c024de88231b162f729a9b89e14206a5ba5", "Url": "https://api.github.com/repos/SnarkyShark/Stegosaurus", "Date": "2018-12-10T16:10:46Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(alreadyHit.contains(enemy))) { processHit(enemy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2107/buggy-version/Attack.java", "BodyUseAPI": ["Attack.processHit(Enemy)"], "Fixed commit": "b2ebeb048ce9dd945d57a6f06ccde574c97f7344", "Url": "https://api.github.com/repos/LukasDoubleU/StarPro-Molten-Heart", "Date": "2018-12-14T09:16:30Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((selection) == (Tinker.chess_game.view_controller.ChessGame.Click.SECOND)) && (secondSelectedTile.hasToken())) { java.lang.System.out.println((\"Second click - Tile has Token. WHOSETURN-------->\" + (whoseTurn))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3215/buggy-version/src.Tinker.chess_game.view_controller.ChessGame.java", "BodyUseAPI": [], "Fixed commit": "1212274de13283060fe84a251115127b6c7252e3", "Url": "https://api.github.com/repos/blindmice1o3/o-emouse", "Date": "2018-12-30T07:35:37Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (col.getSchemaName().equals(\"\")) { java.lang.String defaultSchema = meta.getDefaultSchema(); org.apache.commons.lang3.tuple.Pair<java.lang.String, java.lang.String> searchKey = new org.apache.commons.lang3.tuple.ImmutablePair(defaultSchema, col.getTableSourceAlias()); if (tableInfoAndAlias.containsKey(searchKey)) { col.setTableSourceAlias(tableInfoAndAlias.get(searchKey)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6885/buggy-version/src.main.java.org.verdictdb.sqlreader.RelationStandardizer.java", "BodyUseAPI": ["org.verdictdb.core.sqlobject.BaseColumn.getTableSourceAlias()", "org.verdictdb.core.sqlobject.BaseColumn.setTableSourceAlias(tableInfoAndAlias.get(searchKey))"], "Fixed commit": "989791754b1919c11e4f18f72998bbfba4696f11", "Url": "https://api.github.com/repos/mozafari/verdictdb", "Date": "2018-11-24T17:02:35Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["som.interpreter.actors.SPromise.SResolver.getPromise()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((prom.getOwner()) == (sb.getOwner().getCurrentActor())) { if (!(sb.getRecord().containsObject(prom))) { som.interpreter.actors.SPromise.getPromiseClass().serialize(prom, sb); } sb.putLongAt(base, sb.getRecord().getObjectPointer(prom)); }else { tools.concurrency.TracingActors.TracingActor ta = ((tools.concurrency.TracingActors.TracingActor) (prom.getOwner())); if (!(ta.getSnapshotRecord().containsObject(ta))) { ta.getSnapshotRecord().farReference(prom, sb, base); }else { sb.putLongAt(base, ta.getSnapshotRecord().getObjectPointer(prom)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/2423/buggy-version/src.tools.snapshot.nodes.PromiseSerializationNodes.java", "BodyUseAPI": ["som.interpreter.actors.SPromise.getPromiseClass().serialize(som.interpreter.actors.SPromise,tools.snapshot.SnapshotBuffer)", "tools.snapshot.SnapshotBuffer.putLongAt(int,ta.getSnapshotRecord().getObjectPointer(prom))", "sb.getRecord().containsObject(som.interpreter.actors.SPromise)", "som.interpreter.actors.SPromise.getOwner()", "ta.getSnapshotRecord().getObjectPointer(som.interpreter.actors.SPromise)", "tools.snapshot.SnapshotBuffer.putLongAt(int,sb.getRecord().getObjectPointer(prom))", "ta.getSnapshotRecord().farReference(som.interpreter.actors.SPromise,tools.snapshot.SnapshotBuffer,int)", "tools.snapshot.SnapshotBuffer.getRecord()", "tools.snapshot.SnapshotBuffer.getRecord()", "sb.getRecord().getObjectPointer(som.interpreter.actors.SPromise)"], "Fixed commit": "527eefee5f7f503c004e8127ea6de982ed3dab47", "Url": "https://api.github.com/repos/daumayr/SOMns", "Date": "2018-12-12T09:23:03Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((localParticipant) != null) { event.putString(\"participant\", localParticipant.getIdentity()); pushEvent(this, com.twiliorn.library.CustomTwilioVideoView.Events.ON_DISCONNECTED, event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/5963/buggy-version/android.src.main.java.com.twiliorn.library.CustomTwilioVideoView.java", "BodyUseAPI": [], "Fixed commit": "ce865eafa723343db6c4434be48c80ef0467ef0f", "Url": "https://api.github.com/repos/VaruzhKhachatryan/react-native-twilio-video-webrtc", "Date": "2018-11-06T19:29:55Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (param.m_flag_coldstart) result_dim = 4;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9593/buggy-version/src.mains.ETBIRExecution.java", "BodyUseAPI": [], "Fixed commit": "75a73ad27009c67f6e788d597158a15984cb8ba6", "Url": "https://api.github.com/repos/Linda-sunshine/IR_Base", "Date": "2018-11-01T04:57:57Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.code()) == 401) { android.widget.Toast.makeText(this, \"Invalid Login Credentials\", Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(this, (\"HTTP Error code\" + (response.code())), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9473/buggy-version/app.src.main.java.com.android.mlpj.southerninvestments.LoginActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(com.android.mlpj.southerninvestments.LoginActivity,(\"HTTP Error code\" + (response.code())),Toast.LENGTH_LONG)", "android.widget.Toast.makeText(this, (\"HTTP Error code\" + (response.code())), Toast.LENGTH_LONG).show()", "retrofit2.Response<com.android.mlpj.southerninvestments.LoginResultPOJO>.code()"], "Fixed commit": "39be97e208d1b037dd7229fa53b9b3e605163110", "Url": "https://api.github.com/repos/LahiruJayasekara/SouthernInvestments-master", "Date": "2018-11-05T17:17:05Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((x.text().length()) > 0) { java.lang.String val = java.lang.Character.toString(x.text().charAt(0)); if (android.text.TextUtils.isDigitsOnly(val)) { quality.add(x.select(\"a[href]\").attr(\"href\")); quality_name.add(x.text()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/420/buggy-version/app.src.main.java.com.marcqtan.animobi.Utility.java", "BodyUseAPI": ["java.lang.Character.toString(x.text().charAt(0))", "org.jsoup.nodes.Element.text()", "org.jsoup.nodes.Element.select(java.lang.String)", "java.util.List<java.lang.String>.add(x.text())", "org.jsoup.nodes.Element.text()", "x.text().charAt(int)", "java.util.List<java.lang.String>.add(x.select(\"a[href]\").attr(\"href\"))", "x.select(\"a[href]\").attr(java.lang.String)"], "Fixed commit": "6f208cb66d01d793c94533b62dd1e5c790eabbb7", "Url": "https://api.github.com/repos/marctan/Animobi", "Date": "2018-11-24T05:15:15Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((quality.size()) == 1) { java.util.List<java.lang.String> directLink = new java.util.ArrayList<>(); directLink.add(doc3.select(\"video#videojs\").select(\"source[src]\").attr(\"src\")); return directLink; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/420/buggy-version/app.src.main.java.com.marcqtan.animobi.Utility.java", "BodyUseAPI": [], "Fixed commit": "6f208cb66d01d793c94533b62dd1e5c790eabbb7", "Url": "https://api.github.com/repos/marctan/Animobi", "Date": "2018-11-24T05:15:15Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(VDCConfig.misc.gameRuleName.isEmpty())) { definitions.put(VDCConfig.misc.gameRuleName, new net.minecraft.world.GameRules.ValueDefinition(java.lang.Boolean.toString(VDCConfig.misc.gameRuleDefaultValue), GameRules.ValueType.BOOLEAN_VALUE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6715/buggy-version/src.main.java.com.therandomlabs.vanilladeathchest.listener.VDCGameRuleAdder.java", "BodyUseAPI": [], "Fixed commit": "d132f6489c5877a41ea9971f7625e70f88ca050a", "Url": "https://api.github.com/repos/TheRandomLabs/VanillaDeathChest", "Date": "2018-12-14T13:43:31Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.vertx.core.json.JsonObject.getJsonArray(java.lang.String,fr.wseduc.webutils.collections.JsonArray)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ids.contains(user.getUserId())) unread = \"true\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9036/buggy-version/conversation.src.main.java.org.entcore.conversation.service.impl.SqlConversationService.java", "BodyUseAPI": [], "Fixed commit": "a72e7f318ea383037fb6c55a739ee711719c6077", "Url": "https://api.github.com/repos/opendigitaleducation/entcore", "Date": "2018-11-15T15:55:00Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (principal != null) { return monServ.index(principal.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/1609/buggy-version/FinalREST.src.main.java.com.skilldistillery.dmtool.controllers.MonsterController.java", "BodyUseAPI": ["com.skilldistillery.dmtool.services.MonsterService.index(java.lang.String)", "java.security.Principal.getName()"], "Fixed commit": "f22115f9114b23b73ef6402b4328ce845fd93716", "Url": "https://api.github.com/repos/JRBotta/DMTool", "Date": "2018-12-10T20:58:08Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((escapeChars) != null) { if ((openingQuote) != null) { needToBeEscaped = ( i) -> (isRawEscapeChar(sb.charAt(i))) || (java.lang.String.valueOf(sb.charAt(i)).equals(openingQuote)); }else { needToBeEscaped = ( i) -> ((isDelimiterChar(sb, i)) || (isRawEscapeChar(sb.charAt(i)))) || (isRawQuoteChar(sb.charAt(i))); } for (int i = 0; i < (sb.length()); i++) { if (needToBeEscaped.test(i)) { sb.insert((i++), escapeChars[0]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9162/buggy-version/reader.src.main.java.org.jline.reader.impl.DefaultParser.java", "BodyUseAPI": [], "Fixed commit": "d92d5bff5ad1d65fe753724d5827aabf5e87298b", "Url": "https://api.github.com/repos/snuyanzin/jline3", "Date": "2018-11-11T18:01:35Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connection == null) { throw new com.alibaba.otter.canal.parse.exception.CanalParseException(\"illegal connection is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/8483/buggy-version/parse.src.main.java.com.alibaba.otter.canal.parse.inbound.mysql.MysqlEventParser.java", "BodyUseAPI": [], "Fixed commit": "4e9e3f5abe243ea6a85fbb438fdf7c90adb6abf2", "Url": "https://api.github.com/repos/rewerma/canal", "Date": "2018-11-25T13:17:34Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((checkedAdditives) == null) { checkedAdditives = new java.util.HashSet<>(); checkedAdditives.addAll(additiveNames); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/6352/buggy-version/app.src.main.java.me.anon.grow.fragment.StatisticsFragment.java", "BodyUseAPI": [], "Fixed commit": "49b2e4453bc91bea87d29ba0ffc018e0fab52372", "Url": "https://api.github.com/repos/7LPdWcaW/GrowTracker-Android", "Date": "2018-12-23T19:11:57Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nbPageTotal < 1L) nbPageTotal = 1L;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/9018/buggy-version/src.main.java.com.excilys.cdb.model.PageInfo.java", "BodyUseAPI": [], "Fixed commit": "e42c6aa5c55d732512ddd16cdc1ea45258ec74fb", "Url": "https://api.github.com/repos/samoGit/computer-database", "Date": "2018-11-07T09:46:44Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((minecrafttransportsimulator.systems.PackParserSystem.getSign(definition).general.textLines) != null) { for (byte i = 0; i < (minecrafttransportsimulator.systems.PackParserSystem.getSign(definition).general.textLines.length); ++i) { net.minecraftforge.fml.common.network.ByteBufUtils.writeUTF8String(buf, text.get(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3316/buggy-version/main.java.minecrafttransportsimulator.packets.tileentities.PacketSignChange.java", "BodyUseAPI": ["minecrafttransportsimulator.systems.PackParserSystem.getSign(java.lang.String)"], "Fixed commit": "37c78ee559986f24b40e56b3f4b8f398d3043985", "Url": "https://api.github.com/repos/DonBruce64/MinecraftTransportSimulator", "Date": "2018-11-01T03:06:41Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((minecrafttransportsimulator.systems.PackParserSystem.getSign(definition).general.textLines) != null) { for (byte i = 0; i < (minecrafttransportsimulator.systems.PackParserSystem.getSign(definition).general.textLines.length); ++i) { this.text.add(net.minecraftforge.fml.common.network.ByteBufUtils.readUTF8String(buf)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/3316/buggy-version/main.java.minecrafttransportsimulator.packets.tileentities.PacketSignChange.java", "BodyUseAPI": ["minecrafttransportsimulator.systems.PackParserSystem.getSign(java.lang.String)"], "Fixed commit": "37c78ee559986f24b40e56b3f4b8f398d3043985", "Url": "https://api.github.com/repos/DonBruce64/MinecraftTransportSimulator", "Date": "2018-11-01T03:06:41Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tuples.isEmpty()) { this.fails(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4880/buggy-version/src.main.java.org.chocosolver.solver.constraints.extension.nary.PropTableStr2.java", "BodyUseAPI": [], "Fixed commit": "4d77a1d7237f6dcb974ae796e85ea9a6c8756c88", "Url": "https://api.github.com/repos/kaktus40/choco3", "Date": "2018-11-07T10:01:06Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(out.isPresent())) { java.lang.Class<?> superclass; while ((superclass = clazz.getSuperclass()) != (java.lang.Object.class)) { out = getField(annotation, superclass, object); if (out.isPresent()) { break; } clazz = clazz.getSuperclass(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4254/buggy-version/src.main.java.io.github.bonigarcia.AnnotationsReader.java", "BodyUseAPI": [], "Fixed commit": "24b904094c7f3e3fba627a8318316da8623060eb", "Url": "https://api.github.com/repos/thc202/selenium-jupiter", "Date": "2018-12-18T11:54:24Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.okclouder.ovc.frag.article.ArticleFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((activity != null) && (!(android.text.TextUtils.isEmpty(tips)))) { android.widget.Toast.makeText(activity, tips, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/7256/buggy-version/app.src.main.java.cn.okclouder.ovc.frag.article.ArticleFragment.java", "BodyUseAPI": ["android.widget.Toast.makeText(android.support.v4.app.FragmentActivity,java.lang.String,Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(activity, tips, Toast.LENGTH_SHORT).show()"], "Fixed commit": "95cee8c76a2233890d9bc3dda5d56fa10d18d66d", "Url": "https://api.github.com/repos/caoshen/agg", "Date": "2018-04-30T08:51:59Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((signal) == 0) { mDiary.save(); }else { android.content.ContentValues values = new android.content.ContentValues(); values.put(\"time\", mDiary.getTime().toString()); org.litepal.crud.DataSupport.updateAll(android.mainactivity.diary.class, values, \"content=?\", diaryContent); values.put(\"content\", mDiary.getContent().toString()); org.litepal.crud.DataSupport.updateAll(android.mainactivity.diary.class, values, \"content=?\", diaryContent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/4046/buggy-version/app.src.main.java.android.editactivity.EditActivity.java", "BodyUseAPI": [], "Fixed commit": "aaa4720acec2f4853c57e9e4cf9c7d62d45746e4", "Url": "https://api.github.com/repos/guojinzyq/Diary", "Date": "2018-12-23T14:40:39Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.joshatron.tak.server.database.AccountDAO.getUserFromUsername(auth.getUsername())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (socialDAO.isBlocked(user.getUserId(), other)) { throw new io.joshatron.tak.server.exceptions.GameServerException(io.joshatron.tak.server.exceptions.ErrorCode.BLOCKED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/668/buggy-version/src.main.java.io.joshatron.tak.server.utils.SocialUtils.java", "BodyUseAPI": [], "Fixed commit": "253dd518c43d6f54ed389793deb8e6b699b98b64", "Url": "https://api.github.com/repos/joshatron/Tak-Server", "Date": "2018-12-24T20:31:07Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (frac == 1.0) { region.setBackground(originalBackground); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V171/844/buggy-version/src.main.java.seedu.address.ui.UiPart.java", "BodyUseAPI": [], "Fixed commit": "fca38e15840a82ec1cbd3932206f8a84a9b440a0", "Url": "https://api.github.com/repos/CS2103-AY1819S1-W12-3/main", "Date": "2018-11-01T14:38:23Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (string == null) { throw new java.lang.IllegalArgumentException(tudelft.mirror.Mirror.INVALID_INPUT_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3247/buggy-version/src.main.java.tudelft.mirror.Mirror.java", "BodyUseAPI": [], "Fixed commit": "f2d59191474f563dc317230fe4778b459b69332b", "Url": "https://api.github.com/repos/pbmchc/mooc-software-testing", "Date": "2018-11-20T20:09:57Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(application.model.UndirectedNonWeightedGraph.isAdjacent(v, u))) { super.getAdjacencyList().get(application.model.UndirectedNonWeightedGraph.returnVertex(v)).add(application.model.UndirectedNonWeightedGraph.returnVertex(u)); super.getAdjacencyList().get(application.model.UndirectedNonWeightedGraph.returnVertex(u)).add(application.model.UndirectedNonWeightedGraph.returnVertex(v)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7559/buggy-version/src.application.model.UndirectedNonWeightedGraph.java", "BodyUseAPI": ["application.model.UndirectedNonWeightedGraph.returnVertex(T)", "application.model.UndirectedNonWeightedGraph.returnVertex(T)", "super.getAdjacencyList().get(application.model.UndirectedNonWeightedGraph.returnVertex(u))", "super.getAdjacencyList().get(application.model.UndirectedNonWeightedGraph.returnVertex(v))", "super.getAdjacencyList().get(application.model.UndirectedNonWeightedGraph.returnVertex(v)).add(application.model.UndirectedNonWeightedGraph.returnVertex(u))", "super.getAdjacencyList().get(application.model.UndirectedNonWeightedGraph.returnVertex(u)).add(application.model.UndirectedNonWeightedGraph.returnVertex(v))", "application.model.UndirectedNonWeightedGraph.returnVertex(T)", "application.model.UndirectedNonWeightedGraph.returnVertex(T)"], "Fixed commit": "98f13c1235e5148204674cad4755e6d74789cb4a", "Url": "https://api.github.com/repos/JamanSalique/Visualisation-Toolkit-for-Graph-Algorithms", "Date": "2018-11-01T22:28:32Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(application.model.UndirectedWeightedGraph.isAdjacent(v, u))) { super.getAdjacencyList().get(application.model.UndirectedWeightedGraph.returnVertex(v)).add(new javafx.util.Pair<application.model.Vertex<T>, java.lang.Integer>(application.model.UndirectedWeightedGraph.returnVertex(u), w)); super.getAdjacencyList().get(application.model.UndirectedWeightedGraph.returnVertex(u)).add(new javafx.util.Pair<application.model.Vertex<T>, java.lang.Integer>(application.model.UndirectedWeightedGraph.returnVertex(v), w)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7559/buggy-version/src.application.model.UndirectedWeightedGraph.java", "BodyUseAPI": ["application.model.UndirectedWeightedGraph.returnVertex(T)", "application.model.UndirectedWeightedGraph.returnVertex(T)", "super.getAdjacencyList().get(application.model.UndirectedWeightedGraph.returnVertex(v)).add(javafx.util.Pair<application.model.Vertex<T>, java.lang.Integer>)", "application.model.UndirectedWeightedGraph.returnVertex(T)", "super.getAdjacencyList().get(application.model.UndirectedWeightedGraph.returnVertex(u)).add(javafx.util.Pair<application.model.Vertex<T>, java.lang.Integer>)", "super.getAdjacencyList().get(application.model.UndirectedWeightedGraph.returnVertex(v))", "super.getAdjacencyList().get(application.model.UndirectedWeightedGraph.returnVertex(u))", "application.model.UndirectedWeightedGraph.returnVertex(T)"], "Fixed commit": "98f13c1235e5148204674cad4755e6d74789cb4a", "Url": "https://api.github.com/repos/JamanSalique/Visualisation-Toolkit-for-Graph-Algorithms", "Date": "2018-11-01T22:28:32Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enemyTime) <= 0) { com.afyber.bolt.entities.ScrollingEnemy newEnemy = new com.afyber.bolt.entities.ScrollingEnemy(\"drone1.png\", (12 + (((int) (((java.lang.Math.random()) * ((com.afyber.bolt.Bolt.screenWidth) - 64)) / 64)) * 64)), 64, 64, 150.0F); if ((newEnemy.x) > (com.afyber.bolt.Bolt.screenWidth)) { newEnemy.x = (com.afyber.bolt.Bolt.screenWidth) - 76; } enemies.add(newEnemy); enemyTime = 30 + ((int) ((java.lang.Math.random()) * 75)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/74/buggy-version/core.src.com.afyber.bolt.Bolt.java", "BodyUseAPI": [], "Fixed commit": "ebc84fb91a170c9289d71ee5da2c9b1a3790f664", "Url": "https://api.github.com/repos/africalinguist/bolt-game", "Date": "2018-11-04T12:21:12Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getData().getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (str.isEmpty()) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6728/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.User.java", "BodyUseAPI": [], "Fixed commit": "fc9f55ead8a72e38b4e1eab737b5607ea9cd3240", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2018-12-17T21:47:19Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clock == null) { java.lang.System.err.println((\"NULL CLOCK: \" + message)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3189/buggy-version/src.GlobalLogger.java", "BodyUseAPI": [], "Fixed commit": "8253bc9381e5bad223bb021fe72b56837663b2b5", "Url": "https://api.github.com/repos/Shadowbomb/OS-Project-3", "Date": "2018-12-05T00:56:11Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clock == null) { java.lang.System.err.println((\"NULL CLOCK: \" + message)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3189/buggy-version/src.GlobalLogger.java", "BodyUseAPI": [], "Fixed commit": "8253bc9381e5bad223bb021fe72b56837663b2b5", "Url": "https://api.github.com/repos/Shadowbomb/OS-Project-3", "Date": "2018-12-05T00:56:11Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.IBlockAccess.getTileEntity(net.minecraft.util.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tileEntity instanceof com.mjr.planetprogression.tileEntities.TileEntityTelescopeFake) { net.minecraft.util.BlockPos mainBlockPosition = ((com.mjr.planetprogression.tileEntities.TileEntityTelescopeFake) (tileEntity)).mainBlockPosition; if (mainBlockPosition != null) { return world.getBlockState(pos).getBlock().getBedDirection(world, mainBlockPosition); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7004/buggy-version/src.main.java.com.mjr.planetprogression.blocks.BlockTelescopeFake.java", "BodyUseAPI": [], "Fixed commit": "80ebeec222bbac18ff65661b34e03c44cbf25072", "Url": "https://api.github.com/repos/MJRLegends/Planet-Progression", "Date": "2018-11-16T08:52:16Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.IBlockAccess.getTileEntity(net.minecraft.util.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tileEntity instanceof com.mjr.planetprogression.tileEntities.TileEntityTelescopeFake) { net.minecraft.util.BlockPos mainBlockPosition = ((com.mjr.planetprogression.tileEntities.TileEntityTelescopeFake) (tileEntity)).mainBlockPosition; if (mainBlockPosition != null) { return world.getBlockState(pos).getBlock().isBed(world, mainBlockPosition, player); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7004/buggy-version/src.main.java.com.mjr.planetprogression.blocks.BlockTelescopeFake.java", "BodyUseAPI": [], "Fixed commit": "80ebeec222bbac18ff65661b34e03c44cbf25072", "Url": "https://api.github.com/repos/MJRLegends/Planet-Progression", "Date": "2018-11-16T08:52:16Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.leshan.server.californium.impl.InMemoryRegistrationStore.getRegistration(update.getRegistrationId())", "org.eclipse.leshan.server.registration.RegistrationUpdate.update(org.eclipse.leshan.server.registration.Registration)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(registration.getSocketAddress().equals(updatedRegistration.getSocketAddress()))) { removeFromMap(regsByAddr, registration.getSocketAddress(), registration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2892/buggy-version/leshan-server-cf.src.main.java.org.eclipse.leshan.server.californium.impl.InMemoryRegistrationStore.java", "BodyUseAPI": ["org.eclipse.leshan.server.registration.Registration.getSocketAddress()", "org.eclipse.leshan.server.californium.impl.InMemoryRegistrationStore.removeFromMap(java.util.Map<java.net.InetSocketAddress, org.eclipse.leshan.server.registration.Registration>,registration.getSocketAddress(),org.eclipse.leshan.server.registration.Registration)"], "Fixed commit": "4ad71b1dc90f626cccc642dc4673867e4a267721", "Url": "https://api.github.com/repos/cavenaghi9/leshan", "Date": "2018-12-04T14:45:05Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.eclipse.leshan.server.registration.Registration>.put(registration.getEndpoint(),org.eclipse.leshan.server.registration.Registration)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(registrationRemoved.getSocketAddress().equals(registration.getSocketAddress()))) { removeFromMap(regsByAddr, registrationRemoved.getSocketAddress(), registrationRemoved); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2892/buggy-version/leshan-server-cf.src.main.java.org.eclipse.leshan.server.californium.impl.InMemoryRegistrationStore.java", "BodyUseAPI": ["org.eclipse.leshan.server.registration.Registration.getSocketAddress()", "org.eclipse.leshan.server.californium.impl.InMemoryRegistrationStore.removeFromMap(java.util.Map<java.net.InetSocketAddress, org.eclipse.leshan.server.registration.Registration>,registrationRemoved.getSocketAddress(),org.eclipse.leshan.server.registration.Registration)"], "Fixed commit": "4ad71b1dc90f626cccc642dc4673867e4a267721", "Url": "https://api.github.com/repos/cavenaghi9/leshan", "Date": "2018-12-04T14:45:05Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.eclipse.leshan.server.registration.Registration>.put(registration.getEndpoint(),org.eclipse.leshan.server.registration.Registration)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(registrationRemoved.getId().equals(registration.getId()))) { removeFromMap(regsByRegId, registrationRemoved.getId(), registrationRemoved); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2892/buggy-version/leshan-server-cf.src.main.java.org.eclipse.leshan.server.californium.impl.InMemoryRegistrationStore.java", "BodyUseAPI": ["org.eclipse.leshan.server.californium.impl.InMemoryRegistrationStore.removeFromMap(java.util.Map<java.lang.String, org.eclipse.leshan.server.registration.Registration>,registrationRemoved.getId(),org.eclipse.leshan.server.registration.Registration)", "org.eclipse.leshan.server.registration.Registration.getId()"], "Fixed commit": "4ad71b1dc90f626cccc642dc4673867e4a267721", "Url": "https://api.github.com/repos/cavenaghi9/leshan", "Date": "2018-12-04T14:45:05Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modificationType) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1045/buggy-version/src.main.java.com.compomics.util.experiment.biology.modifications.Modification.java", "BodyUseAPI": [], "Fixed commit": "a0c770335bb8146fb53a380382ad7800a22819fd", "Url": "https://api.github.com/repos/compomics/compomics-utilities", "Date": "2018-11-20T17:06:48Z"},
{"Line": "=>1205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["modificationFactory.getModification(name).getModificationType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (modificationType != null) { return modificationType.index; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1045/buggy-version/src.main.java.com.compomics.util.gui.modification.ModificationsDialog.java", "BodyUseAPI": [], "Fixed commit": "a0c770335bb8146fb53a380382ad7800a22819fd", "Url": "https://api.github.com/repos/compomics/compomics-utilities", "Date": "2018-11-20T17:06:48Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(item.hasSubMenu())) { createListView(item.getItemId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1947/buggy-version/app.src.main.java.com.ulicae.cinelog.android.activities.fragments.ListFragment.java", "BodyUseAPI": ["android.view.MenuItem.getItemId()", "com.ulicae.cinelog.android.activities.fragments.ListFragment.createListView(item.getItemId())"], "Fixed commit": "67f002442d6191ba6820ef415115c45929067fd3", "Url": "https://api.github.com/repos/Alcidauk/CineLog", "Date": "2018-11-28T14:15:30Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (myApplication.getHideBalance()) { txt_holding_bal.setText(java.lang.String.format(\"%.4f\", \"***\")); }else { txt_holding_bal.setText(java.lang.String.format(\"%.4f\", airdropWalletlist.get(0).getDbl_data_ad_balance())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9710/buggy-version/app.src.main.java.com.cryptowallet.deviantx.UI.Fragments.AirDropFragment.java", "BodyUseAPI": [], "Fixed commit": "375ce9000f55290c30aea4012084003f294c50cc", "Url": "https://api.github.com/repos/saudagarsulaiman/DeviantX", "Date": "2018-12-07T13:39:25Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cleaningTask) == null) { org.eclipse.leshan.core.californium.CoapAsyncRequestObserver.LOG.trace(\"Schedule Cleaning Task for {}\", coapRequest); cleaningTask = getExecutor().schedule(new java.lang.Runnable() { @java.lang.Override public void run() { responseTimedOut.set(true); coapRequest.cancel(); } }, timeoutInMs, java.util.concurrent.TimeUnit.MILLISECONDS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9507/buggy-version/leshan-core-cf.src.main.java.org.eclipse.leshan.core.californium.CoapAsyncRequestObserver.java", "BodyUseAPI": [], "Fixed commit": "9b497b2b8baec9b3527be4d38a13ba69b93a111e", "Url": "https://api.github.com/repos/cavenaghi9/leshan", "Date": "2018-12-03T16:32:19Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (play.ai.dragonrealm.geiloutils.config.ConfigurationManager.getDiscordConfig().isEnabled()) { GeiloBot.channelIRC.sendMessage(((event.player.getDisplayNameString()) + \" joined the game\")).queue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7132/buggy-version/src.main.java.play.ai.dragonrealm.geiloutils.events.EventHandlerPlayer.java", "BodyUseAPI": [], "Fixed commit": "f024bac95087b734aa6bb9bb3ad781dc5171d305", "Url": "https://api.github.com/repos/Geilokowski/GeiloUtils", "Date": "2018-11-11T01:52:49Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.AbstractBuild<?, ?>.getWorkspace()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (workspace != null) { java.lang.String workspaceLocation = workspace.getRemote(); if (workspaceLocation != null) { java.io.File katalonDir = com.katalon.jenkins.plugin.KatalonUtils.getKatalonPackage(buildListener, this.version); com.katalon.jenkins.plugin.LogUtils.log(buildListener, katalonDir.getAbsolutePath()); java.lang.String katalonExecutableFile = java.nio.file.Paths.get(katalonDir.getAbsolutePath(), \"katalon\").toAbsolutePath().toString(); executeKatalon(katalonExecutableFile, workspaceLocation, buildListener); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8901/buggy-version/src.main.java.com.katalon.jenkins.plugin.ExecuteKatalonStudioTask.java", "BodyUseAPI": ["hudson.FilePath.getRemote()"], "Fixed commit": "7492a5ea4204bc277d60c3dabef644feb1aaeb9e", "Url": "https://api.github.com/repos/jenkinsci/katalon-plugin", "Date": "2018-12-27T07:41:54Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputHashtags.isEmpty()) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4007/buggy-version/app.src.main.java.edu.illinois.cs465.cs465project.Event.java", "BodyUseAPI": [], "Fixed commit": "e87ac316f1f84d028949f23a6091bfa9d485c6e0", "Url": "https://api.github.com/repos/BoyangXu95/CS465Project", "Date": "2018-11-29T17:03:10Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (formVariables != null) { if ((variables) == null) { variables = new java.util.HashMap<>(); } variables.putAll(formVariables); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1852/buggy-version/modules.flowable-engine.src.main.java.org.flowable.engine.impl.cmd.StartProcessInstanceCmd.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.putAll(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "67b27297152739934426161e7107647eec004850", "Url": "https://api.github.com/repos/flowable/flowable-engine", "Date": "2018-12-21T11:03:52Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shutdown) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8686/buggy-version/monitor.src.main.java.bisq.monitor.metric.Metric.java", "BodyUseAPI": [], "Fixed commit": "0573113369b3ae2b08d3f3b973a9d3e8e8685e32", "Url": "https://api.github.com/repos/freimair/bisq", "Date": "2018-12-18T14:03:25Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (vmport == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9759/buggy-version/webservice.src.main.java.edu.indiana.d2i.sloan.vm.PortsPool.java", "BodyUseAPI": [], "Fixed commit": "7179babc1f3e42bee4da1993d51abb1b95cf5c86", "Url": "https://api.github.com/repos/htrc/HTRC-DataCapsules", "Date": "2018-12-26T01:31:15Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((edu.colostate.cs.cs414.StringCheese.src.King) (king)).isUnderAttack())) { return moves; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/55/buggy-version/edu.colostate.cs.cs414.StringCheese.src.ChessBoard.java", "BodyUseAPI": [], "Fixed commit": "7f3c452e7db534286c620be112ee01cb53d4f5c1", "Url": "https://api.github.com/repos/Chris-Schaffer/cs414-f18-001-stringCheese", "Date": "2018-12-04T06:40:20Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(newValue.isEmpty())) { writing.getKanjiWritings().add(newValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/288/buggy-version/src.com.kanji.list.listElementPropertyManagers.KanjiWritingChecker.java", "BodyUseAPI": ["writing.getKanjiWritings().add(java.lang.String)"], "Fixed commit": "0b4f151d0fee021d4264c157adc16b147f77296c", "Url": "https://api.github.com/repos/matpie33/JapaneseLearningApp", "Date": "2018-12-13T18:34:45Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((wishListDetail.getWishes()) != null) && ((wishListDetail.getWishes().size()) > 0)) { this.wishes = wishListDetail.getWishes().stream().map(WishDTO::new).collect(java.util.stream.Collectors.toList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3194/buggy-version/src.main.java.com.github.abigail830.wishlist.domainv1.WishListDTO.java", "BodyUseAPI": [], "Fixed commit": "a94ad71eef63a9aac8f577b32eb2eb46a48fc276", "Url": "https://api.github.com/repos/abigail830/wish-list", "Date": "2018-12-06T21:40:53Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (refDataCache.containsKey(field)) { refDataCache.get(field).addAll(refFieldData); }else { refDataCache.put(field, refFieldData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6836/buggy-version/statistics.src.main.java.com.yonyou.iuap.baseservice.statistics.util.SearchParamUtil.java", "BodyUseAPI": ["java.util.Map<java.lang.reflect.Field, java.util.List<java.util.Map<java.lang.String, java.lang.Object>>>.get(java.lang.reflect.Field)", "java.util.Map<java.lang.reflect.Field, java.util.List<java.util.Map<java.lang.String, java.lang.Object>>>.put(java.lang.reflect.Field,java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)", "java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.addAll(java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)"], "Fixed commit": "e0d7017760e8d4e75021677aad799d2bad4a86e0", "Url": "https://api.github.com/repos/yonyou-iuap/iuap-pap-baseservice", "Date": "2018-12-13T14:03:13Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tblStatus) == (TableStatus.NO_DATABASE)) return \"Rooms table is missing.\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5485/buggy-version/Project.src.ReservationSystem.java", "BodyUseAPI": [], "Fixed commit": "de3c97365adb7813f3955a17315dba42471d8f94", "Url": "https://api.github.com/repos/stbradle/csc365Labs", "Date": "2018-12-07T23:22:04Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tblStatus) == (TableStatus.NO_DATABASE)) return \"Reservation table is missing.\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5485/buggy-version/Project.src.ReservationSystem.java", "BodyUseAPI": [], "Fixed commit": "de3c97365adb7813f3955a17315dba42471d8f94", "Url": "https://api.github.com/repos/stbradle/csc365Labs", "Date": "2018-12-07T23:22:04Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zylear.publish.web.service.passcheck.UserAccountService.findByAccount(request.getAccount())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (newUserAccount == null) { newUserAccount = userAccount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/478/buggy-version/publishsvc.publish-web.src.main.java.com.zylear.publish.web.controller.admin.AdminPassCheckController.java", "BodyUseAPI": [], "Fixed commit": "60346791271fd62072b9e784c2fe0ce04de35928", "Url": "https://api.github.com/repos/zyLear/publish-web", "Date": "2018-11-18T04:20:32Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((student.get_id()) != 0) _values.put(TableStudents.COLUMN_ID, student.get_id());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3915/buggy-version/app.src.main.java.nz.park.kenneth.wintecdm.database.DBHelper.java", "BodyUseAPI": ["android.content.ContentValues.put(TableStudents.COLUMN_ID,student.get_id())", "nz.park.kenneth.wintecdm.database.Structure.TableStudents.get_id()"], "Fixed commit": "80369a1aaf687da1cf353abfd564b4f059432ff2", "Url": "https://api.github.com/repos/youpar96/WintecDPM", "Date": "2018-11-20T10:34:36Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameView.game) != null) { timer.cancel(); pacTimer.cancel(); saveHiscore(); game.state = Game.FINISHED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1169/buggy-version/app.src.main.java.ai.brothersinarms.pacman.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c7cbe1349c9e77588f0c147cbf2d341e0bb39011", "Url": "https://api.github.com/repos/nielswadsholt/Pacman", "Date": "2018-11-03T23:56:49Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((myClueNumber[(count + 1)]) == (-1)) CrosswordPanel.cellText[(count + 2)].requestFocus(); else CrosswordPanel.cellText[(count + 1)].requestFocus();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4437/buggy-version/src.CrosswordPanel.java", "BodyUseAPI": ["javax.swing.JTextField.requestFocus()", "javax.swing.JTextField.requestFocus()"], "Fixed commit": "16d281e778eb75c5b2b1e63985d850ba761bb6bb", "Url": "https://api.github.com/repos/onur-elbirlik/sasha", "Date": "2018-11-02T10:46:09Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((quester.getQuestData(quest)) != null) { quester.getQuestData(quest).delayOver = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4849/buggy-version/src.main.java.me.blackvein.quests.StageTimer.java", "BodyUseAPI": ["me.blackvein.quests.Quester.getQuestData(me.blackvein.quests.Quest)"], "Fixed commit": "d715de35e905ad7c286597074288ea9575d80b99", "Url": "https://api.github.com/repos/PikaMug/Quests", "Date": "2018-12-19T07:38:58Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nnn2 < 10) { result.append(\"00\"); }else if (nnn2 < 100) { result.append(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2786/buggy-version/dataquality-sampling.src.main.java.org.talend.dataquality.datamasking.functions.GenerateSsnFr.java", "BodyUseAPI": [], "Fixed commit": "ff9dedcc241111ac2576daa0b5dfa024286566e3", "Url": "https://api.github.com/repos/Talend/data-quality", "Date": "2018-10-23T15:46:20Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nnn1 < 10) { result.append(\"00\"); }else if (nnn1 < 100) { result.append(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2786/buggy-version/dataquality-sampling.src.main.java.org.talend.dataquality.datamasking.functions.GenerateSsnFr.java", "BodyUseAPI": [], "Fixed commit": "ff9dedcc241111ac2576daa0b5dfa024286566e3", "Url": "https://api.github.com/repos/Talend/data-quality", "Date": "2018-10-23T15:46:20Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCalendar) == null) { mCalendar = dc.getTodayNepaliDate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6031/buggy-version/library.src.main.java.com.hornet.dateconverter.DatePicker.DatePickerDialog.java", "BodyUseAPI": [], "Fixed commit": "7d0080ac88b0c0b14b91a96018caef60bb42e65d", "Url": "https://api.github.com/repos/keyrunHORNET/date_picker_converter", "Date": "2018-11-16T06:18:10Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOriginalTitle) != null) { return mOriginalTitle.equals(newTitle); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/415/buggy-version/app.src.main.java.io.keinix.yamapchallenge.details.DetailsViewModel.java", "BodyUseAPI": [], "Fixed commit": "07cfc1e5948ea6366c4e34a75f2a5e2a2da177b8", "Url": "https://api.github.com/repos/keinix/YAMAP-challenge", "Date": "2018-12-02T14:04:04Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (preambleId != null) meetingMOM = councilMeetingService.findByResolutionNumberAndPreamble(resolutionNumber, preambleId); else meetingMOM = councilMeetingService.findByResolutionNumber(resolutionNumber);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1789/buggy-version/egov.egov-councilweb.src.main.java.org.egov.council.web.controller.CouncilDataEntryController.java", "BodyUseAPI": ["org.egov.council.service.CouncilMeetingService.findByResolutionNumberAndPreamble(java.lang.String,java.lang.Long)"], "Fixed commit": "a08903d2c8089aa09e92f4dcd95705b0a9e3bed0", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2018-12-10T07:38:13Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.length) == 0) { return \"[]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1534/buggy-version/SuperArray.java", "BodyUseAPI": [], "Fixed commit": "07ab930f5808004c3f9596d1b9c36b73e79a674b", "Url": "https://api.github.com/repos/jacksonzou123/MKS21X-SuperArray", "Date": "2018-11-06T23:01:01Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anArrayTargetType == null) { if (isIntegrityType(tempResult.getClass().getComponentType())) { anArrayTargetType = java.lang.Object.class; }else { anArrayTargetType = tempResult.getClass().getComponentType(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7112/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.java", "BodyUseAPI": [], "Fixed commit": "13c8f41bba9ecde39b53e1e9fde3b2ab876ab0a1", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2018-12-12T13:32:51Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((number == 0) || (number == 1)) return result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9092/buggy-version/src.main.java.examples.chaitanya.Utility.MathUtil.java", "BodyUseAPI": [], "Fixed commit": "d4be4235a982e99e5446dbbcaebd1402726151a5", "Url": "https://api.github.com/repos/ChaitanyaBhole/MyProject", "Date": "2018-11-19T19:01:43Z"},
{"Line": "=>497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mytemp.equals(\"NA\"))) { double finaltemp = java.lang.Math.ceil(java.lang.Double.valueOf(mytemp)); mytemp = finaltemp + \"\u00b0F\"; android.util.Log.i(own.ownwatchfaceleds.Main.TAG, (\"got finaltemp: \" + (mytemp))); }else { mytemp = \"NA\u00b0F\"; android.util.Log.i(own.ownwatchfaceleds.Main.TAG, (\"mytemp is NA: \" + (mytemp))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1044/buggy-version/mobile.src.main.java.own.ownwatchfaceleds.Main.java", "BodyUseAPI": ["java.lang.Math.ceil(java.lang.Double)", "java.lang.Double.valueOf(java.lang.String)"], "Fixed commit": "28f2016fc6cb1f20c070357af6555551b43844de", "Url": "https://api.github.com/repos/ELY3M/Own-watchface-LEDs", "Date": "2018-11-05T15:47:46Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.iabako.shared.tools.GenericTools.isEmpty(description.getValue()))) { searchForm.addCriteria(ExpenseColumnEnum.description, QueryOperatorEnum.LIKE, description.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/379/buggy-version/src.main.java.org.iabako.client.ui.form.business.expense.ExpenseSearchForm.java", "BodyUseAPI": ["org.iabako.client.ui.form.business.expense.ExpenseSearchForm.addCriteria(ExpenseColumnEnum.description,QueryOperatorEnum.LIKE,description.getValue())", "org.iabako.client.ui.form.business.expense.InputText.getValue()"], "Fixed commit": "4378e2b529bec66c2bb6ea74733245c5df0da5e2", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2018-11-30T15:06:27Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((savedInstanceState != null) && (com.sunrain.timetablev4.ui.fragment.SettingsFragment.class.getSimpleName().equals(mFragmentChanger.getLastFragmentName()))) { mArrow.startArrowAnim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/127/buggy-version/app.src.main.java.com.sunrain.timetablev4.ui.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1501d4ed7dbef44e5c092acd0ddd75127a69c9de", "Url": "https://api.github.com/repos/GuJin/TimeTable", "Date": "2018-11-27T17:01:49Z"},
{"Line": "=>605", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.getSelectedRow()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (row != (-1)) { orderManager.removeBox(row); javax.swing.table.DefaultTableModel model = ((javax.swing.table.DefaultTableModel) (tbl_boxOrders.getModel())); model.removeRow(row); updateValues(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2281/buggy-version/src.Order.BoxUI2.java", "BodyUseAPI": ["javax.swing.table.DefaultTableModel.removeRow(int)", "Order.OrderManager.removeBox(int)"], "Fixed commit": "8097987a4f5dd05b71f6ee1f35ce294427aef418", "Url": "https://api.github.com/repos/magic-cal/BoxOrdering", "Date": "2018-12-06T00:06:54Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonElement.getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (object.get(\"PerkName\").getAsString().toLowerCase().equalsIgnoreCase(\"Barbecue & Chili\")) { object.addProperty(\"PerkName\", KillerPerks.BARBECUE_AND_CHILLI.NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3106/buggy-version/src.main.java.com.github.drsmugleaf.deadbydaylight.dennisreep.KillerPerk.java", "BodyUseAPI": ["com.google.gson.JsonObject.addProperty(java.lang.String,KillerPerks.BARBECUE_AND_CHILLI.NAME)"], "Fixed commit": "09ec801e23f4b7126757155c100c826407eff410", "Url": "https://api.github.com/repos/DrSmugleaf/Banter-Bot4J", "Date": "2018-11-07T11:36:28Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == (com.mjr.MJRBot.BotType.Twitch)) { java.lang.String result = com.mjr.util.HTTPConnect.GetResponsefrom((((\"https://api.twitch.tv/kraken/streams/\" + (channelName)) + \"?client_id=\") + (com.mjr.MJRBot.CLIENT_ID))); if (result.contains(\"created_at\")) streaming = true; }else { streaming = com.mjr.MJRBot.getMixerBotByChannelName(channelName).isStreaming(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5413/buggy-version/src.main.java.com.mjr.threads.AnnouncementsThread.java", "BodyUseAPI": [], "Fixed commit": "51b737077994133c9a91fcbd135f4cf5685c55a7", "Url": "https://api.github.com/repos/MJRLegends/MJRBot-Server", "Date": "2018-12-10T03:16:13Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstx > 0) { for (int i = firstx; i <= lastx; i++) { gr[i][j] = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8983/buggy-version/tugas-2.app.src.main.java.com.example.martin.tugas2_pengcit.FaceDetector.java", "BodyUseAPI": [], "Fixed commit": "d4d18ea529101e2f6689a2a7a2414a8259468dcb", "Url": "https://api.github.com/repos/dewitast/image-processing", "Date": "2018-12-02T12:55:41Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.upgrad.services.UserAuthTokenService.getUserId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (null == (addressService.getPermAddress(userId))) { message = \"No permanent address found!\"; httpStatus = org.springframework.http.HttpStatus.BAD_REQUEST; }else { return new org.springframework.http.ResponseEntity(addressService.getPermAddress(userId), org.springframework.http.HttpStatus.OK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3649/buggy-version/src.main.java.org.upgrad.controllers.AddressController.java", "BodyUseAPI": ["org.upgrad.services.AddressService.getPermAddress(java.lang.Integer)"], "Fixed commit": "6c52948f39c316991e9992d9299cf06599335859", "Url": "https://api.github.com/repos/Apoorva2405/food-ordering-backend", "Date": "2018-12-08T06:35:39Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ylli.api.yfbpay.mapper.YfbBillMapper.getTodayDetail(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sumAndCount.total) == null) { sumAndCount.total = 0L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/626/buggy-version/src.main.java.com.ylli.api.yfbpay.service.YfbService.java", "BodyUseAPI": [], "Fixed commit": "14845d959a183f155aaf9ea52ef99e61b3a19a39", "Url": "https://api.github.com/repos/cryS4tal/alianpay", "Date": "2018-12-02T08:49:48Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((analytiker.besuchtAnalysieren) != null) { besucher.add(analytiker.besuchtAnalysieren.name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7692/buggy-version/root.Persona.Rollen.Bonusrollen.Spurenleser.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(analytiker.besuchtAnalysieren.name)"], "Fixed commit": "f9a8ef73cfc71e99f88f399114958762b39f528e", "Url": "https://api.github.com/repos/VanillaEgirl/Werwolf", "Date": "2018-12-06T17:55:47Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mList.get(getAdapterPosition()).getInvolvedPersonsNames()) != null) && (!(mList.get(getAdapterPosition()).getInvolvedPersonsNames().equals(\"you\")))) { mListener.onClick(view, mList.get(getAdapterPosition())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2713/buggy-version/app.src.main.java.com.example.admin_linux.csdevproject.adapters.CropStreamAdapter.java", "BodyUseAPI": ["java.util.List<com.example.admin_linux.csdevproject.data.CropStreamMessage>.get(getAdapterPosition())", "com.example.admin_linux.csdevproject.adapters.CropStreamClickListener.onClick(android.view.View,mList.get(getAdapterPosition()))"], "Fixed commit": "9ac305e0783546b8b4a2aeb277458ed166eca837", "Url": "https://api.github.com/repos/ukhanyov/CSDEVproject", "Date": "2018-11-01T16:39:24Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(notidate.before(java.util.Calendar.getInstance()))) { new com.pax.tk.annapp.Util().setAlarm(getContext(), eventText, subject.getName(), id, notidate.getTimeInMillis()); new com.pax.tk.annapp.Notification.NotificationStorage(getContext()).saveNotification(new com.pax.tk.annapp.Notification.Notification(eventText, subject.getName(), id, notidate.getTimeInMillis())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2572/buggy-version/app.src.main.java.com.pax.tk.annapp.Fragments.TasksFragment.java", "BodyUseAPI": ["java.util.Calendar.getTimeInMillis()", "com.pax.tk.annapp.Util.setAlarm(getContext(),java.lang.String,subject.getName(),int,long)", "com.pax.tk.annapp.Notification.NotificationStorage.saveNotification(com.pax.tk.annapp.Notification.Notification)", "java.util.Calendar.getTimeInMillis()"], "Fixed commit": "fd2c84b1eb653a8ddc37acaf6b419f97a0a7f3e0", "Url": "https://api.github.com/repos/AnnApp-GbSA/AnnApp", "Date": "2018-12-07T17:08:58Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (responseBodyIsJson) { return (!(bodyJsonArray.toString().isEmpty())) || ((bodyJsonArray.toString().length()) != 2); }else return (!(bodyString.isEmpty())) || ((bodyString.length()) != 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9690/buggy-version/app.src.main.java.com.githubsample.tools.okhttp.OKHTTPResponse.java", "BodyUseAPI": [], "Fixed commit": "1da6e1da500dfa1d947283af1e81e952751c286b", "Url": "https://api.github.com/repos/xsfjx/GitHub-Sample", "Date": "2018-11-21T05:24:56Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((customLayer) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8723/buggy-version/PocketMaps.app.src.main.java.com.junjunguo.pocketmaps.map.MapHandler.java", "BodyUseAPI": [], "Fixed commit": "8fee2daf9f1ba09acbd9f184e4cb5022564a0753", "Url": "https://api.github.com/repos/junjunguo/PocketMaps", "Date": "2018-12-29T01:05:27Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((equation.get(((equation.size()) - 1)).getClass()) == (kylehoobler.agc.FactorialOperation.class)) { equation.add(new kylehoobler.agc.Operation(MULT)); equation.add(new java.lang.Number(0.0)); equation.add(e); }else if ((equation.get(((equation.size()) - 1)).getClass()) == (kylehoobler.agc.StartParenthesis.class)) { if (((kylehoobler.agc.StartParenthesis) (equation.get(((equation.size()) - 1)))).hasEndParen()) { equation.add(new kylehoobler.agc.Operation(MULT)); equation.add(new java.lang.Number(0.0)); equation.add(e); }else { ((kylehoobler.agc.StartParenthesis) (equation.get(((equation.size()) - 1)))).getEq().addItem(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5280/buggy-version/app.src.main.java.kylehoobler.agc.Equation.java", "BodyUseAPI": ["java.util.ArrayList<kylehoobler.agc.EquationPart>.size()", "java.util.ArrayList<kylehoobler.agc.EquationPart>.add(java.lang.Number)", "java.util.ArrayList<kylehoobler.agc.EquationPart>.get(((equation.size()) - 1))", "((kylehoobler.agc.StartParenthesis) (equation.get(((equation.size()) - 1)))).hasEndParen()", "java.util.ArrayList<kylehoobler.agc.EquationPart>.add(kylehoobler.agc.EquationPart)", "((kylehoobler.agc.StartParenthesis) (equation.get(((equation.size()) - 1)))).getEq()", "java.util.ArrayList<kylehoobler.agc.EquationPart>.get(((equation.size()) - 1))", "java.util.ArrayList<kylehoobler.agc.EquationPart>.add(java.lang.Number)", "java.util.ArrayList<kylehoobler.agc.EquationPart>.size()", "java.util.ArrayList<kylehoobler.agc.EquationPart>.add(kylehoobler.agc.Operation)", "java.util.ArrayList<kylehoobler.agc.EquationPart>.add(kylehoobler.agc.EquationPart)", "equation.get(((equation.size()) - 1)).getClass()", "java.util.ArrayList<kylehoobler.agc.EquationPart>.size()", "((kylehoobler.agc.StartParenthesis) (equation.get(((equation.size()) - 1)))).getEq().addItem(kylehoobler.agc.EquationPart)", "java.util.ArrayList<kylehoobler.agc.EquationPart>.get(((equation.size()) - 1))", "java.util.ArrayList<kylehoobler.agc.EquationPart>.add(kylehoobler.agc.Operation)"], "Fixed commit": "57acfa8d7e3597765f27abc9d4bfb485c0eb7009", "Url": "https://api.github.com/repos/KyleHoobler/Android-Graphing-Calculator", "Date": "2018-11-24T16:05:14Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((field.getIcon()) != null) { (bombsLeft)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6148/buggy-version/Minesweeper.src.Board.java", "BodyUseAPI": [], "Fixed commit": "7e684c0274f2131f336aa3fe7a45d297605460ac", "Url": "https://api.github.com/repos/Kilian1997/Minesweeper", "Date": "2018-11-06T21:22:37Z"},
{"Line": "=>976", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Main.classHeaderDictionary.get(this._ident).QuackMethodToCMethod.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (callConstructor == null) { callConstructor = \"new_\" + (this._ident); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6177/buggy-version/Expression.java", "BodyUseAPI": [], "Fixed commit": "72ae9519af36a72d589aba8f71953953f5243a0f", "Url": "https://api.github.com/repos/sgerendasy/561CodeGeneration", "Date": "2018-11-30T17:48:15Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(last.equals(\"{}\"))) result.append(last.charAt(1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7439/buggy-version/src.main.java.cc.moecraft.logger.utils.FormatUtils.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)", "java.lang.String.charAt(int)"], "Fixed commit": "185249ada09a2583503516ec99be663f75127057", "Url": "https://api.github.com/repos/HyDevelop/HyLogger", "Date": "2018-12-25T19:50:57Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(petBreed)) { petBreed = context.getString(R.string.unknown_breed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7648/buggy-version/app.src.main.java.com.example.android.pets.PetCursorAdapter.java", "BodyUseAPI": [], "Fixed commit": "be9a7c3b0cfe84520223ef1a68073334aa8d4b9d", "Url": "https://api.github.com/repos/jerrychong25/PetsApp", "Date": "2018-11-18T15:19:33Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.glassfish.grizzly.http.HttpContent.getContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (contentBuffer.hasRemaining()) { return org.glassfish.grizzly.http.ajp.AjpMessageUtils.appendContentAndTrim(memoryManager, encodedBuffer, contentBuffer); }else if (encodedBuffer == null) { encodedBuffer = org.glassfish.grizzly.memory.Buffers.EMPTY_BUFFER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/465/buggy-version/modules.http-ajp.src.main.java.org.glassfish.grizzly.http.ajp.AjpHandlerFilter.java", "BodyUseAPI": ["org.glassfish.grizzly.http.ajp.AjpMessageUtils.appendContentAndTrim(org.glassfish.grizzly.memory.MemoryManager,org.glassfish.grizzly.Buffer,org.glassfish.grizzly.Buffer)"], "Fixed commit": "2f2534e8cbca3229f879aec6bcdd229762b45825", "Url": "https://api.github.com/repos/MattGill98/grizzly", "Date": "2018-06-20T14:51:00Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((sort) != null) && (!(sort.isEmpty()))) { queryOptions.put(org.opencb.cellbase.server.ws.SORT, sort); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7417/buggy-version/cellbase-server.src.main.java.org.opencb.cellbase.server.ws.GenericRestWSServer.java", "BodyUseAPI": ["org.opencb.cellbase.server.ws.QueryOptions.put(org.opencb.cellbase.server.ws.SORT,java.lang.String)"], "Fixed commit": "f06dec5daf02f3018346535787373bbae4931198", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2018-12-05T15:18:51Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((successfulImports) > 0) { model.commitAddressBook(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4673/buggy-version/src.main.java.seedu.address.logic.commands.ImportCommand.java", "BodyUseAPI": [], "Fixed commit": "f0eb8cc4a48a9d5aefffda2b551308d15126073b", "Url": "https://api.github.com/repos/aaryamNUS/Invites-OOP-Java-Project", "Date": "2018-11-11T15:07:51Z"},
{"Line": "=>652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4146/buggy-version/wear.src.main.java.com.krisdb.wearcasts.DBUtilities.java", "BodyUseAPI": [], "Fixed commit": "ba5c3a8caabc4281cca1bf489b6c261c83919af6", "Url": "https://api.github.com/repos/krisdb/WhereCasts", "Date": "2018-12-26T22:56:41Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t < (mSelectedClockOutTimes.size())) { long time2 = mSelectedClockOutTimes.get(t); addTextInputEditText(time2, false, t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9812/buggy-version/mobile.src.main.java.com.trevorwiebe.timeclock.EditCurrentShiftActivity.java", "BodyUseAPI": ["com.trevorwiebe.timeclock.EditCurrentShiftActivity.addTextInputEditText(long,boolean,int)", "java.util.ArrayList<java.lang.Long>.get(int)"], "Fixed commit": "9649871053ed93465ae5a436834f6cd9ef75f317", "Url": "https://api.github.com/repos/trevorwiebe/timeClock", "Date": "2018-11-23T20:54:18Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((urlArray.size()) != 0) { fragment2.setData(urlArray, comment, app_introduction, other_lan); }else { android.content.Intent i = new android.content.Intent(getContext(), com.example.qpdjg.all_for.Activity.Non_DB_Activity.class); startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1090/buggy-version/app.src.main.java.com.example.qpdjg.all_for.Fragment.ViewAppFragment.java", "BodyUseAPI": ["com.example.qpdjg.all_for.Fragment.ListFragment.setData(java.util.ArrayList<java.lang.String>,java.util.ArrayList<com.example.qpdjg.all_for.Item.CommentItem>,java.lang.String,java.lang.String)"], "Fixed commit": "f7c0f63e8ad5423ffef212628c30915cc8d3d0cb", "Url": "https://api.github.com/repos/JeonHyungJin/K-Hack", "Date": "2018-12-06T08:06:25Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((carsParkedCount) > 0) { (carsParkedCount)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/516/buggy-version/src.main.java.com.future.laboratories.ticket.dao.impl.TicketDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "3dc9019c23c776839286202e2d13131f495f3052", "Url": "https://api.github.com/repos/bockgareth/ParkingLot", "Date": "2018-11-23T07:23:16Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.lucko.luckperms.common.event.gen.GeneratedEventSpec.GET_EVENT_TYPE_METHOD.equals(method)) { return this.eventClass; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6476/buggy-version/common.src.main.java.me.lucko.luckperms.common.event.gen.GeneratedEventSpec.java", "BodyUseAPI": [], "Fixed commit": "2ccffc6e6d1308e4c19b34cad604bd9acf05d073", "Url": "https://api.github.com/repos/lucko/LuckPerms", "Date": "2018-12-22T17:03:51Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.eebrian123tw.kable2580.selfhealth.dao.HealthDataDao.getDailyData(org.threeten.bp.LocalDate.now(),org.threeten.bp.LocalDate.now())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dailyDataModelList.size()) == 0) { dailyDataModel = new com.eebrian123tw.kable2580.selfhealth.service.entity.DailyDataModel(); dailyDataModel.setDataDate(org.threeten.bp.LocalDate.now().toString()); healthDataDao.saveDailyData(dailyDataModel); }else { dailyDataModel = dailyDataModelList.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7/buggy-version/android.app.src.main.java.com.eebrian123tw.kable2580.selfhealth.MainActivity.java", "BodyUseAPI": ["java.util.List<com.eebrian123tw.kable2580.selfhealth.service.entity.DailyDataModel>.get(int)"], "Fixed commit": "d4b1463d0b600e5e5daa1ffd949a8b6e43d907d3", "Url": "https://api.github.com/repos/kable2580/SelfHealth", "Date": "2018-12-09T17:37:20Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty) resultDecl.modifiers |= java.lang.reflect.Modifier.FINAL;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1206/buggy-version/src.core.lombok.eclipse.handlers.HandleEqualsAndHashCode.java", "BodyUseAPI": [], "Fixed commit": "db19327cb4b9f5a08665b85d4cb953118ce69c13", "Url": "https://api.github.com/repos/PKRoma/lombok", "Date": "2018-11-08T14:51:08Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(_exploded)) this.explode();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2554/buggy-version/src.uet.oop.bomberman.entities.bomb.Bomb.java", "BodyUseAPI": [], "Fixed commit": "91d4009ae2f2b9489f2ec1794c13ba4dc7aabb97", "Url": "https://api.github.com/repos/UET-INT2204-12-fall-18/assignment-2-bomberman-imu", "Date": "2018-11-11T10:30:10Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof uet.oop.bomberman.entities.bomb.Flame) { remove(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2554/buggy-version/src.uet.oop.bomberman.entities.tile.item.Item.java", "BodyUseAPI": [], "Fixed commit": "91d4009ae2f2b9489f2ec1794c13ba4dc7aabb97", "Url": "https://api.github.com/repos/UET-INT2204-12-fall-18/assignment-2-bomberman-imu", "Date": "2018-11-11T10:30:10Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((plugin.getArenaManager().getGameStates()) == (com.isnakebuzz.meetup.Utils.Enums.GameStates.LOBBY)) || ((plugin.getArenaManager().getGameStates()) == (com.isnakebuzz.meetup.Utils.Enums.GameStates.STARTING))) { e.allow(); }else { e.disallow(PlayerLoginEvent.Result.KICK_OTHER, \"\u00a7cIn Game\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5690/buggy-version/src.main.java.com.isnakebuzz.meetup.EventsManager.Events.EventLogin.java", "BodyUseAPI": [], "Fixed commit": "69bbee5b4b17513931e46e6c44315d215ac2f497", "Url": "https://api.github.com/repos/iSnakeBuzz/UHCMeetup", "Date": "2018-12-20T00:59:39Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_extraInfo) == null) _extraInfo = new java.util.ArrayList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3033/buggy-version/openrouteservice.src.main.java.heigit.ors.routing.RouteResult.java", "BodyUseAPI": [], "Fixed commit": "5918f89fb84ca67915a80390688456d6be1df752", "Url": "https://api.github.com/repos/GIScience/openrouteservice", "Date": "2018-11-20T13:55:50Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_extraInfo) == null) _extraInfo = new java.util.ArrayList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3033/buggy-version/openrouteservice.src.main.java.heigit.ors.routing.RouteResult.java", "BodyUseAPI": [], "Fixed commit": "5918f89fb84ca67915a80390688456d6be1df752", "Url": "https://api.github.com/repos/GIScience/openrouteservice", "Date": "2018-11-20T13:55:50Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (windowFrameDefinition != null) { this.windowFrameDefinition = windowFrameDefinition; }else { this.windowFrameDefinition = io.crate.analyze.WindowDefinition.DEFAULT_WINDOW_FRAME; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5760/buggy-version/sql.src.main.java.io.crate.analyze.WindowDefinition.java", "BodyUseAPI": [], "Fixed commit": "b1cbffa7b7ea1ba089ab3df975c7be9b1044732f", "Url": "https://api.github.com/repos/crate/crate", "Date": "2018-12-16T23:13:41Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(drawReads)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8271/buggy-version/uk.ac.babraham.SeqMonk.Displays.ChromosomeViewer.ChromosomeDataTrack.java", "BodyUseAPI": [], "Fixed commit": "416c7253f936a2f176ffdf0c2d2413e43560f629", "Url": "https://api.github.com/repos/s-andrews/SeqMonk", "Date": "2018-12-04T12:14:18Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((circuit.getResidualCapacity()) > retract) { retractInThisCirc = retract; }else { retractInThisCirc = circuit.getResidualCapacity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7544/buggy-version/src.main.java.grmlsa.trafficGrooming.MultihopGroomingSRNP.java", "BodyUseAPI": ["network.Circuit.getResidualCapacity()"], "Fixed commit": "47438ec145cf2d4c33c3940969994e7aab20431e", "Url": "https://api.github.com/repos/iallengabio/SNetS", "Date": "2018-11-28T17:11:27Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3796/buggy-version/app.src.main.java.fr.free.nrw.commons.utils.NetworkUtils.java", "BodyUseAPI": [], "Fixed commit": "4b58f165573d1de48b9cd6973d3e692315efdbf5", "Url": "https://api.github.com/repos/JasonObeid/apps-android-commons", "Date": "2018-12-20T12:55:21Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gpsLocation) != null) { gpsLocation.stopLocationUpdates(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6163/buggy-version/src.android.KatSini.java", "BodyUseAPI": [], "Fixed commit": "32813d82d20c2a7d1addaf8dcc26a8df4deba271", "Url": "https://api.github.com/repos/muhdfauzan93/KatSini", "Date": "2018-11-29T08:03:11Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cityData == null) cityData = citiesDictionary.get(city.toLowerCase());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1612/buggy-version/src.main.java.model.Searcher.java", "BodyUseAPI": [], "Fixed commit": "54f7f1b481560a5ccff93b0c051c162c7942de71", "Url": "https://api.github.com/repos/yifatmakias/SearchEngine", "Date": "2018-12-25T12:10:48Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cityData.size()) == 1) cityPointer = java.lang.Integer.valueOf(cityData.get(0)); else cityPointer = java.lang.Integer.valueOf(cityData.get(3));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1612/buggy-version/src.main.java.model.Searcher.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "54f7f1b481560a5ccff93b0c051c162c7942de71", "Url": "https://api.github.com/repos/yifatmakias/SearchEngine", "Date": "2018-12-25T12:10:48Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastPokers) != null) { org.nico.ratel.landlords.print.SimplePrinter.printNotice(((((lastSellClientNickname) + \"[\") + (lastSellClientType)) + \"] played:\")); org.nico.ratel.landlords.print.SimplePrinter.printPokers(lastPokers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8035/buggy-version/landlords-client.src.main.java.org.nico.ratel.landlords.client.event.ClientEventListener_CODE_GAME_POKER_PLAY.java", "BodyUseAPI": [], "Fixed commit": "f1be744d021f4802bd17d04b2a63a14bb020e82d", "Url": "https://api.github.com/repos/ainilili/ratel", "Date": "2018-11-17T07:29:08Z"},
{"Line": "=>1433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.Ben12345rocks.VotingPlugin.Config.Config.getInstance().isCommandsUseGUITopVoter())) { int page = 1; java.lang.String str = com.Ben12345rocks.VotingPlugin.Config.Config.getInstance().getVoteTopDefault(); if (str.equalsIgnoreCase(\"monthly\")) { if (sender instanceof org.bukkit.entity.Player) { com.Ben12345rocks.VotingPlugin.Objects.User user = com.Ben12345rocks.VotingPlugin.UserManager.UserManager.getInstance().getVotingPluginUser(((org.bukkit.entity.Player) (sender))); user.sendMessage(com.Ben12345rocks.VotingPlugin.TopVoter.TopVoterHandler.getInstance().topVoterMonthly(page)); org.bukkit.Bukkit.getScheduler().runTask(com.Ben12345rocks.VotingPlugin.Commands.CommandLoader.plugin, new java.lang.Runnable() { @java.lang.Override public void run() { com.Ben12345rocks.VotingPlugin.Commands.Commands.getInstance().sendTopVoterMonthlyScoreBoard(((org.bukkit.entity.Player) (sender)), page); } }); }else { sender.sendMessage(com.Ben12345rocks.VotingPlugin.TopVoter.TopVoterHandler.getInstance().topVoterMonthly(page)); } }else if (str.equalsIgnoreCase(\"weekly\")) { if (sender instanceof org.bukkit.entity.Player) { com.Ben12345rocks.VotingPlugin.Objects.User user = com.Ben12345rocks.VotingPlugin.UserManager.UserManager.getInstance().getVotingPluginUser(((org.bukkit.entity.Player) (sender))); user.sendMessage(com.Ben12345rocks.VotingPlugin.TopVoter.TopVoterHandler.getInstance().topVoterWeekly(page)); org.bukkit.Bukkit.getScheduler().runTask(com.Ben12345rocks.VotingPlugin.Commands.CommandLoader.plugin, new java.lang.Runnable() { @java.lang.Override public void run() { com.Ben12345rocks.VotingPlugin.Commands.Commands.getInstance().sendTopVoterWeeklyScoreBoard(((org.bukkit.entity.Player) (sender)), page); } }); }else { sender.sendMessage(com.Ben12345rocks.VotingPlugin.TopVoter.TopVoterHandler.getInstance().topVoterWeekly(page)); } }else if (str.equalsIgnoreCase(\"daily\")) { if (sender instanceof org.bukkit.entity.Player) { com.Ben12345rocks.VotingPlugin.Objects.User user = com.Ben12345rocks.VotingPlugin.UserManager.UserManager.getInstance().getVotingPluginUser(((org.bukkit.entity.Player) (sender))); user.sendMessage(com.Ben12345rocks.VotingPlugin.TopVoter.TopVoterHandler.getInstance().topVoterDaily(page)); org.bukkit.Bukkit.getScheduler().runTask(com.Ben12345rocks.VotingPlugin.Commands.CommandLoader.plugin, new java.lang.Runnable() { @java.lang.Override public void run() { com.Ben12345rocks.VotingPlugin.Commands.Commands.getInstance().sendTopVoterDailyScoreBoard(((org.bukkit.entity.Player) (sender)), page); } }); }else { sender.sendMessage(com.Ben12345rocks.VotingPlugin.TopVoter.TopVoterHandler.getInstance().topVoterDaily(page)); } }else if (str.equalsIgnoreCase(\"all\")) { if (sender instanceof org.bukkit.entity.Player) { com.Ben12345rocks.VotingPlugin.Objects.User user = com.Ben12345rocks.VotingPlugin.UserManager.UserManager.getInstance().getVotingPluginUser(((org.bukkit.entity.Player) (sender))); user.sendMessage(com.Ben12345rocks.VotingPlugin.TopVoter.TopVoterHandler.getInstance().topVoterAllTime(page)); org.bukkit.Bukkit.getScheduler().runTask(com.Ben12345rocks.VotingPlugin.Commands.CommandLoader.plugin, new java.lang.Runnable() { @java.lang.Override public void run() { com.Ben12345rocks.VotingPlugin.Commands.Commands.getInstance().sendTopVoterAllTimeScoreBoard(((org.bukkit.entity.Player) (sender)), page); } }); }else { sender.sendMessage(com.Ben12345rocks.VotingPlugin.TopVoter.TopVoterHandler.getInstance().topVoterAllTime(page)); } } }else if (sender instanceof org.bukkit.entity.Player) { com.Ben12345rocks.VotingPlugin.Commands.GUI.PlayerGUIs.getInstance().openVoteTop(((org.bukkit.entity.Player) (sender)), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4481/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Commands.CommandLoader.java", "BodyUseAPI": [], "Fixed commit": "1cfed8aa980c67b06b30ab5c3ff5fb2d38e3f569", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2018-11-22T23:31:59Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(scrame.manager.RecordManager.validateRegisterStudentCourse(matric, courseName))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5127/buggy-version/source.scrame.manager.RecordManager.java", "BodyUseAPI": [], "Fixed commit": "4ed7397a0c298adf85bfbbce36e0327c0c87ed9a", "Url": "https://api.github.com/repos/maggiekoesno/CZ2002_Project", "Date": "2018-11-05T18:51:40Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(scrame.manager.RecordManager.validateRegisterStudentCourse(matric, courseName))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5127/buggy-version/source.scrame.manager.RecordManager.java", "BodyUseAPI": [], "Fixed commit": "4ed7397a0c298adf85bfbbce36e0327c0c87ed9a", "Url": "https://api.github.com/repos/maggiekoesno/CZ2002_Project", "Date": "2018-11-05T18:51:40Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()", "java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(scrame.manager.RecordManager.validateRegisterStudentCourse(matric, courseName))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5127/buggy-version/source.scrame.manager.RecordManager.java", "BodyUseAPI": [], "Fixed commit": "4ed7397a0c298adf85bfbbce36e0327c0c87ed9a", "Url": "https://api.github.com/repos/maggiekoesno/CZ2002_Project", "Date": "2018-11-05T18:51:40Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataset.count()) == 0) { de.viadee.ki.sparkimporter.util.SparkImporterLogger.getInstance().writeInfo(\"Filtering resulted in zero lines of data. Aborting. Please check your filter query.\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8743/buggy-version/spark-importer.src.main.java.de.viadee.ki.sparkimporter.processing.steps.userconfig.DataFilterStep.java", "BodyUseAPI": [], "Fixed commit": "5e7ee3ae8bfef474208d12ef71849e7130cc41a5", "Url": "https://api.github.com/repos/viadee/bpmn.ai", "Date": "2018-11-20T07:55:15Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rollNumber.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((temp.length()) < 4) { final android.app.AlertDialog alertDialog = new android.app.AlertDialog.Builder(this, R.style.AppTheme_Dark_Dialog).setTitle(getString(R.string.error)).setMessage(\"Invalid roll number\").create(); alertDialog.setButton(DialogInterface.BUTTON_POSITIVE, getString(R.string.ok), new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialogInterface, int i) { alertDialog.hide(); } }); alertDialog.show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6540/buggy-version/app.src.main.java.coding.quizzaciously.nitpchanakyaunofficial.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "dbe38716bc1e81c7034f402a1d7d8efd809799be", "Url": "https://api.github.com/repos/RishiRaj22/MarksAaya", "Date": "2018-10-31T10:41:04Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p2 < 0) p2 = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1875/buggy-version/src.firefly.java.edu.caltech.ipac.visualize.plot.plotdata.Wavelength.java", "BodyUseAPI": [], "Fixed commit": "8e0ae45914d97c6ba5dc9944cc2cb103ef7d1380", "Url": "https://api.github.com/repos/Caltech-IPAC/firefly", "Date": "2018-12-05T22:38:43Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mybatis.generator.api.IntrospectedTable.getColumn(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (deletedColumn.isStringColumn()) { sb.append(\" set \").append(column).append(\"=\").append(\"'\").append(deletedValue).append(\"'\"); }else if ((deletedColumn.isIntegerColumn()) || (deletedColumn.isByteColumn())) { sb.append(\" set \").append(column).append(\"=\").append(deletedValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4253/buggy-version/core.mybatis-generator-core.src.main.java.com.pocketdigi.generator.plugins.LogicallyDeletePlugin.java", "BodyUseAPI": ["org.mybatis.generator.api.IntrospectedColumn.isByteColumn()", "org.mybatis.generator.api.IntrospectedColumn.isIntegerColumn()"], "Fixed commit": "3513e2f9938f507ae73f5f205e3f12951c346c90", "Url": "https://api.github.com/repos/pocketdigi/mybatis-generator", "Date": "2018-11-20T07:53:13Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mybatis.generator.api.IntrospectedTable.getColumn(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (deletedColumn.isStringColumn()) { sb.append(\" set \").append(column).append(\"=\").append(\"'\").append(deletedValue).append(\"'\"); }else if ((deletedColumn.isIntegerColumn()) || (deletedColumn.isByteColumn())) { sb.append(\" set \").append(column).append(\"=\").append(deletedValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4253/buggy-version/core.mybatis-generator-core.src.main.java.com.pocketdigi.generator.plugins.LogicallyDeletePlugin.java", "BodyUseAPI": ["org.mybatis.generator.api.IntrospectedColumn.isIntegerColumn()", "org.mybatis.generator.api.IntrospectedColumn.isByteColumn()"], "Fixed commit": "3513e2f9938f507ae73f5f205e3f12951c346c90", "Url": "https://api.github.com/repos/pocketdigi/mybatis-generator", "Date": "2018-11-20T07:53:13Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { enableForegroundNotif.setVisibility(View.VISIBLE); }else { enableForegroundNotif.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1967/buggy-version/app.src.main.java.com.missilelauncher.missilelauncher.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "474e4456c1f02766a8b9de9afe4ec6f02ba40ab7", "Url": "https://api.github.com/repos/missing333/MissileLauncherApp", "Date": "2018-11-07T18:03:13Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tries == 0) { wordTries--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1943/buggy-version/WordSearch.java", "BodyUseAPI": [], "Fixed commit": "d6a5335595b55bfc66e3694b2cd60b2f43d0c783", "Url": "https://api.github.com/repos/jlin03/MKS21X-WordSearch", "Date": "2018-11-13T21:21:30Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((schemaName) != null) { return resultSet.next(); }else { while (resultSet.next()) { java.lang.String tableSchemaName = resultSet.getString(\"TABLE_SCHEM\"); return ((tableSchemaName.equals(\"public\")) || (tableSchemaName.equals(\"\"))) || (tableSchemaName == null); } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1015/buggy-version/src.main.java.org.polyjdbc.core.schema.SchemaInspectorImpl.java", "BodyUseAPI": [], "Fixed commit": "42357e9cfc4c4c889a8d1125bfe908fb6dd24c11", "Url": "https://api.github.com/repos/polyjdbc/polyjdbc", "Date": "2018-12-14T20:11:50Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.status) == (ACTIVE)) && ((this.endOfStream) || (this.sslEngine.isInboundDone()))) { this.status = CLOSING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3815/buggy-version/httpcore-nio.src.main.java.org.apache.http.nio.reactor.ssl.SSLIOSession.java", "BodyUseAPI": [], "Fixed commit": "08d9c3c30d57def4963d0807bce5f3023f5fcb35", "Url": "https://api.github.com/repos/apache/httpcomponents-core", "Date": "2018-12-07T15:27:18Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentState) == (edu.wit.mobileapp.earsharp.game.EarGame.GameStates.Finished)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9502/buggy-version/app.src.main.java.edu.wit.mobileapp.earsharp.game.EarGame.java", "BodyUseAPI": [], "Fixed commit": "ebb9024aeadd9599d407ef9a950dd8d2ac989095", "Url": "https://api.github.com/repos/Scherflinge/Ear_Sharp", "Date": "2018-12-03T03:11:45Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxID) == 0) maxID = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1033/buggy-version/Signs.src.fex.signs.signs.CommandTransformer.java", "BodyUseAPI": [], "Fixed commit": "e3e7dcfebb7af116996f61c4d3964812dcbafb11", "Url": "https://api.github.com/repos/fex594/signs", "Date": "2018-11-14T20:02:33Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((subNum.getText().toString()) == \"0\") { android.widget.Toast.makeText(this, \"There can be no subject 0\", Toast.LENGTH_SHORT).show(); }else { int subjectNum = java.lang.Integer.parseInt(subNum.getText().toString()); java.lang.System.out.println(subjectNum); android.content.Intent intent = new android.content.Intent(this, my.own.FakeTinderApp.MainActivity.class); intent.putExtra(\"subjectNum\", subjectNum); prevSub = subjectNum; startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2042/buggy-version/app.src.main.java.my.own.FakeTinderApp.StartSubject.java", "BodyUseAPI": ["android.widget.EditText.getText()", "subNum.getText().toString()", "java.lang.Integer.parseInt(subNum.getText().toString())"], "Fixed commit": "e9b2ae23053a2c28894738b94b1adface41c7def", "Url": "https://api.github.com/repos/TyrellR7872/FakeTinderApp", "Date": "2018-11-22T20:47:20Z"},
{"Line": "=>5106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((entry.def) != def) && (entry.def.equalsOrExtends(def))) { canto.runtime.Definition entryDefOwner = entry.def.getOwner(); if (entryDefOwner != null) { ownerDef = entryDefOwner; } }else if (isSite && ((entry.link) == null)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9233/buggy-version/src.canto.runtime.Context.java", "BodyUseAPI": ["canto.runtime.Definition.getOwner()"], "Fixed commit": "fba66a941b0e1acab20c3908d151d7858faf2415", "Url": "https://api.github.com/repos/CantoLang/canto", "Date": "2018-12-15T21:05:42Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((MOUSE_X == 0) && (MOUSE_Y == 0))) org.lwjgl.input.Mouse.setCursorPosition(((MainWindow.WindowsWidth) / 2), ((MainWindow.WindowsHeight) / 2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/387/buggy-version/src.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "d95e5ad71ee621539e24c1d7ef7524f6a56e75ad", "Url": "https://api.github.com/repos/amaothree/MY_CG_Project", "Date": "2018-12-31T09:15:50Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.hhu.bsinfo.dxmem.core.Heap.getSize(de.hhu.bsinfo.dxmem.core.CIDTableChunkEntry)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (p_newSize < oldSize) { copySize = p_newSize; }else { copySize = oldSize; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9670/buggy-version/src.main.java.de.hhu.bsinfo.dxmem.core.Heap.java", "BodyUseAPI": [], "Fixed commit": "414e90c34e751c29553bb3773e13987de4dcf8eb", "Url": "https://api.github.com/repos/hhu-bsinfo/dxmem", "Date": "2018-11-08T17:53:21Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parameter instanceof io.github.swagger2markup.internal.utils.HeaderParameter) { example = (((parameter.getName()) + \":\\\"\") + (((io.github.swagger2markup.internal.utils.HeaderParameter) (parameter)).getType())) + \"\\\"\"; }else if (parameter instanceof io.github.swagger2markup.internal.utils.PathParameter) { java.lang.String pathExample = ((java.lang.String) (examples.get(\"path\"))); pathExample = pathExample.replace((('{' + (parameter.getName())) + '}'), io.github.swagger2markup.internal.utils.ExamplesUtil.encodeExampleForUrl(abstractSerializableParameterExample)); example = pathExample; }else if (parameter instanceof io.github.swagger2markup.internal.utils.QueryParameter) { if (parameter.getRequired()) { java.lang.String path = ((java.lang.String) (examples.get(\"path\"))); java.lang.String separator = (path.contains(\"?\")) ? \"&\" : \"?\"; java.lang.String pathExample = (((path + separator) + (parameter.getName())) + \"=\") + (io.github.swagger2markup.internal.utils.ExamplesUtil.encodeExampleForUrl(abstractSerializableParameterExample)); examples.put(\"path\", pathExample); } }else { example = abstractSerializableParameterExample; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5774/buggy-version/src.main.java.io.github.swagger2markup.internal.utils.ExamplesUtil.java", "BodyUseAPI": ["io.github.swagger2markup.internal.utils.Parameter.getName()", "java.lang.String.replace((('{' + (parameter.getName())) + '}'),java.lang.String)", "io.github.swagger2markup.internal.utils.Parameter.getName()", "io.github.swagger2markup.internal.utils.Parameter.getName()", "io.github.swagger2markup.internal.utils.Parameter.getRequired()"], "Fixed commit": "2ee7bf005fce9df4246031d30f743af928e4bb38", "Url": "https://api.github.com/repos/parrrot/swagger2markup", "Date": "2018-12-10T08:13:38Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getMessage().isEmpty()) || ((e.getCause()) instanceof java.net.ConnectException)) { builder.message(\"Unable to connect to NiFi.\"); }else { builder.message(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7721/buggy-version/services.service-app.src.main.java.com.thinkbiganalytics.rest.exception.nifi.NifiConnectionExceptionMapper.java", "BodyUseAPI": ["RestResponseStatus.ResponseStatusBuilder.message(e.getMessage())", "com.thinkbiganalytics.nifi.rest.client.NifiConnectionException.getMessage()"], "Fixed commit": "d343951a5b38d5a402906df8fc4751ece93086dd", "Url": "https://api.github.com/repos/Teradata/kylo", "Date": "2018-12-11T01:38:55Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jcarklin.co.za.bakingrecipes.repository.db.BakingAppDao.clearShoppingList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (count > 0) { jcarklin.co.za.bakingrecipes.service.WidgetUpdateService.startActionRefreshShoppingList(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7397/buggy-version/app.src.main.java.jcarklin.co.za.bakingrecipes.repository.BakingAppRepository.java", "BodyUseAPI": [], "Fixed commit": "d4886bbc5bd6158a09d5d87d0b96e5526c7be3eb", "Url": "https://api.github.com/repos/jcarklin/baking-app", "Date": "2018-11-17T21:40:46Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (text != null) { scoresLoad(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6903/buggy-version/app.src.main.java.com.mccarty.marc.readspeed.MainActivity.java", "BodyUseAPI": ["com.mccarty.marc.readspeed.MainActivity.scoresLoad(java.lang.String[])"], "Fixed commit": "9499c301a6eb36bcf0702ae8f3263bacdf9f1305", "Url": "https://api.github.com/repos/marcmccarty/ReadSpeed", "Date": "2018-11-19T19:45:59Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((pivotGap.length()) > 0) { nodeB.setPhysicsLocation(nodeB.getPhysicsLocation().addLocal(pivotGap)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8799/buggy-version/jme3-bullet.src.main.java.com.jme3.bullet.joints.PhysicsJoint.java", "BodyUseAPI": [], "Fixed commit": "3b1e46f9c12a51942114de88b9537db17e6a9bb0", "Url": "https://api.github.com/repos/riccardobl/jmonkeyengine", "Date": "2018-08-24T15:16:32Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jdbcTemplate) == null) { return routes; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5465/buggy-version/zhacker-gateway-route.src.main.java.top.zhacker.gateway.resource.route.CustomRouteLocator.java", "BodyUseAPI": [], "Fixed commit": "ec594e0717a5b1cb3fabd7d62e8b5868d019d5ef", "Url": "https://api.github.com/repos/fancyyawn/zhacker-gateway", "Date": "2018-11-04T08:33:46Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 0) { mHaveFavorite = model.Habit.getHaveFavorite(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2190/buggy-version/app.src.main.java.no.hiof.andrekar.badhabits.MyFavoriteAdapter.java", "BodyUseAPI": [], "Fixed commit": "53f0aa68335b32b739590a68aa4b639b33223537", "Url": "https://api.github.com/repos/wxsh/BadHabits", "Date": "2018-11-17T16:25:22Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.mlove.sopranote.MainActivity.determineFreq(float)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((index > 0) && (index < 7)) { note.setText(notes[(index % 7)]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2403/buggy-version/app.src.main.java.com.example.mlove.sopranote.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "2601242a2665009422523a8417c153e9b06dedf4", "Url": "https://api.github.com/repos/MrCheesy21/Sopranote", "Date": "2018-11-04T05:44:44Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((LobbyNum < 0) || (LobbyNum >= (GameManager.MAX_LOBBIES))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4689/buggy-version/src.main.java.com.kinglogic.dah.ResourceManager.java", "BodyUseAPI": [], "Fixed commit": "99420491a56ab513a0c3c7cb1d0e4a1b7a2fe821", "Url": "https://api.github.com/repos/cking20/DrawingsAlterHumility", "Date": "2018-12-05T02:17:08Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((BookletNum < 0) || (PageNum < 0)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4689/buggy-version/src.main.java.com.kinglogic.dah.ResourceManager.java", "BodyUseAPI": [], "Fixed commit": "99420491a56ab513a0c3c7cb1d0e4a1b7a2fe821", "Url": "https://api.github.com/repos/cking20/DrawingsAlterHumility", "Date": "2018-12-05T02:17:08Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!anon) { message = \"List was successfully deleted\"; session.setAttribute(\"successMessage\", message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8044/buggy-version/Progetto.ShoppingLesto.src.main.java.it.unitn.shoppinglesto.servlet.lists.DeleteListServlet.java", "BodyUseAPI": [], "Fixed commit": "9b265d0a3e4544d01d5327e54d339ac56f75c66c", "Url": "https://api.github.com/repos/ImGere/programmazioneweb18", "Date": "2018-11-24T17:30:06Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ss[0]) == \"\") { for (int i = 0; i < ((ss.length) - 1); i++) { ss[i] = ss[(i + 1)]; } count--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9627/buggy-version/src.worker.SplitString.java", "BodyUseAPI": [], "Fixed commit": "897bdfd4ae41abacb893037f73bfebda7e2e336d", "Url": "https://api.github.com/repos/sheazds/3D-HP-Protein-Folding", "Date": "2018-11-20T23:14:56Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ss[i].charAt(0)) == 'h') { for (int j = 0; j < (ss[i].length()); j++) { myLinkList.addNode(0, j, ss[i].substring(j)); } myList.add(myLinkList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9627/buggy-version/src.worker.SplitString.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int)", "worker.LinkList.addNode(int,int,java.lang.String)"], "Fixed commit": "897bdfd4ae41abacb893037f73bfebda7e2e336d", "Url": "https://api.github.com/repos/sheazds/3D-HP-Protein-Folding", "Date": "2018-11-20T23:14:56Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (outputFile != null) sample.Main.writeResultToFile(result, outputFile);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7870/buggy-version/src.sample.Main.java", "BodyUseAPI": ["sample.Main.writeResultToFile(data_structure.Board,java.lang.String)"], "Fixed commit": "9f22cf6ff7d94a0a89efd57c090c34fb2d166f50", "Url": "https://api.github.com/repos/zetraxus/Kakuro", "Date": "2018-12-29T22:06:33Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currentEmailPassword.equalsIgnoreCase(userEntry.getEmail()))) { if (this.repository.findByEmail(userEntry.getEmail()).isPresent()) { throw new edu.cooking.recipes.application.users.exceptions.UserAlreadyRegisteredException(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7224/buggy-version/src.main.java.edu.cooking.recipes.application.users.UserServiceImpl.java", "BodyUseAPI": ["edu.cooking.recipes.persistence.users.UserRepository.findByEmail(userEntry.getEmail())", "edu.cooking.recipes.application.users.UserEntry.getEmail()", "this.repository.findByEmail(userEntry.getEmail()).isPresent()"], "Fixed commit": "400e451fcfc1c255948f310a112c462173cb5cd7", "Url": "https://api.github.com/repos/robertop87/cooking-recipes", "Date": "2018-11-27T12:15:15Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Objects.equals(m_value, value)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5785/buggy-version/to.etc.domui.src.main.java.to.etc.domui.component.ace.AceEditor.java", "BodyUseAPI": [], "Fixed commit": "5862d5431fbf1a4e9b945df22cc212bf86f75c85", "Url": "https://api.github.com/repos/fjalvingh/domui", "Date": "2018-11-06T12:08:48Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((um == null) || ((um.isUserUnlocked()) == false)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3660/buggy-version/src.android.notification.receiver.AbstractRestoreReceiver.java", "BodyUseAPI": [], "Fixed commit": "3f1cda28152e81547906262f298098e04b08af54", "Url": "https://api.github.com/repos/richmoh/cordova-plugin-local-notifications", "Date": "2018-12-30T09:31:10Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type1.matches(Classes.GuiMainMenu.getRuntimeInternalName())) return Classes.GuiScreen.getRuntimeInternalName(); else return \"java/lang/Object\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5415/buggy-version/src.main.java.com.matt.forgehax.asm.ForgeHaxTransformer.java", "BodyUseAPI": [], "Fixed commit": "dd0a1730b746e673845be6e0f87f80f07687a3aa", "Url": "https://api.github.com/repos/fr1kin/ForgeHax", "Date": "2018-11-01T03:53:53Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getIntent().getFlags()) & (android.content.Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT)) != 0) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2603/buggy-version/app.src.main.java.net.hobbitsoft.android.sailingbuddy.SplashActivity.java", "BodyUseAPI": [], "Fixed commit": "298d89230937b008811a2268cd094f1dfd5c5625", "Url": "https://api.github.com/repos/KevinHeathHigh/Sailing-Buddy", "Date": "2018-11-29T06:53:54Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((firstErrorTokenIndex) == (-1)) { firstErrorTokenIndex = errIndex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7926/buggy-version/src.main.java.org.karaffe.compiler.KaraffeParseErrorStrategy.java", "BodyUseAPI": [], "Fixed commit": "565924952fc627e1dae67f3d40e74247838f890b", "Url": "https://api.github.com/repos/nokok/Karaffe", "Date": "2018-12-23T17:34:22Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (textToBeCleaned != null) textToBeCleaned = textToBeCleaned.replaceAll(gov.nih.nci.cadsr.service.validator.ValidatorService.regex_nbsp_space, \" \"); else textToBeCleaned = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6355/buggy-version/alsvalidator.src.main.java.gov.nih.nci.cadsr.service.validator.ValidatorService.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "2fd68a8a97f6cf154291706a16aae9522d952f4b", "Url": "https://api.github.com/repos/CBIIT/cadsr-services", "Date": "2018-11-20T20:56:36Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (rdDocText != null) rdDocTextList.add(gov.nih.nci.cadsr.service.validator.ValidatorService.cleanStringforNbsp(rdDocText));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6355/buggy-version/alsvalidator.src.main.java.gov.nih.nci.cadsr.service.validator.ValidatorService.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "gov.nih.nci.cadsr.service.validator.ValidatorService.cleanStringforNbsp(java.lang.String)"], "Fixed commit": "2fd68a8a97f6cf154291706a16aae9522d952f4b", "Url": "https://api.github.com/repos/CBIIT/cadsr-services", "Date": "2018-11-20T20:56:36Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mFriendEmail.equals(mUser.getEmail()))) { for (com.google.firebase.firestore.QueryDocumentSnapshot snapshot : task.getResult()) { java.lang.String uid = snapshot.getString(Constants.UID); java.lang.String name = snapshot.getString(Constants.NAME); java.lang.String image = snapshot.getString(Constants.IMAGE); addFriend(mUser.getUid(), uid, name, image); } }else { android.widget.Toast.makeText(mDialogContext, \"\u4e0d\u80fd\u52a0\u81ea\u5df1\u70ba\u597d\u53cb\u5566~\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2305/buggy-version/app.src.main.java.com.ruby.splitmoney.split.SplitPresenter.java", "BodyUseAPI": ["com.google.firebase.auth.FirebaseUser.getUid()", "com.ruby.splitmoney.split.SplitPresenter.1.addFriend(mUser.getUid(),java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "1660a164d03fd26ac239e34a2ee09ab26b1e9c82", "Url": "https://api.github.com/repos/rubysun137/Split-It", "Date": "2018-10-31T07:46:34Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.util.List<zipkin2.Span>>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (traceCount <= 1) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7512/buggy-version/zipkin.src.main.java.zipkin2.storage.StrictTraceId.java", "BodyUseAPI": [], "Fixed commit": "5be505078357dd8fcbe27891f5db339f839778c5", "Url": "https://api.github.com/repos/openzipkin/zipkin", "Date": "2018-11-21T04:18:24Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["parameter.get(key).getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (wdlDataType.startsWith(\"Int\")) { taskContent.append(java.lang.Integer.parseInt(defaultValue.toString())); }else if (wdlDataType.startsWith(\"Float\")) taskContent.append(java.lang.Float.parseFloat(defaultValue.toString())); else if (wdlDataType.startsWith(\"Boolean\")) taskContent.append(java.lang.Boolean.parseBoolean(defaultValue.toString())); else taskContent.append(java.lang.String.valueOf(defaultValue));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5698/buggy-version/src.main.java.org.bgi.flexlab.automation.task.TaskWdlBuilder.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "ff25ac28f7d51e05f0ed50b8235c962076f062d7", "Url": "https://api.github.com/repos/BGI-flexlab/automation", "Date": "2018-11-23T07:01:18Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new net.dv8tion.jda.core.EmbedBuilder().setTitle(normal).setFooter((\"ID: \" + (role.getId())), null).setColor(io.github.jroy.happybot.util.C.randomColour())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((embed.getFields().size()) == 0) { embed.setDescription(\"This role has no themed names.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6002/buggy-version/src.main.java.io.github.jroy.happybot.commands.RoleInfoCommand.java", "BodyUseAPI": ["net.dv8tion.jda.core.EmbedBuilder.setDescription(java.lang.String)"], "Fixed commit": "174016010314a704f2057fd5d549eb38b2c7e690", "Url": "https://api.github.com/repos/JRoy/happybot", "Date": "2018-12-01T20:09:31Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (normal == null) { normal = role.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6002/buggy-version/src.main.java.io.github.jroy.happybot.commands.RoleInfoCommand.java", "BodyUseAPI": [], "Fixed commit": "174016010314a704f2057fd5d549eb38b2c7e690", "Url": "https://api.github.com/repos/JRoy/happybot", "Date": "2018-12-01T20:09:31Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Resources.ZombieSpawner.getCurrentDifficulty()) == 10) { Resources.Game.World = new Screens.MenuVictory(); }else Resources.Game.World = new Screens.MenuLevelComplete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/910/buggy-version/PlantsVsZombies.src.Resources.Game.java", "BodyUseAPI": [], "Fixed commit": "f98e7f2827498ad957e4f86fbac2e37d8abc1a72", "Url": "https://api.github.com/repos/Ilkalys/PlantVsZombie", "Date": "2018-12-16T12:19:40Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (user != null) { userInfo.putString(\"name\", user.getDisplayName()); userInfo.putString(\"email\", user.getEmail()); if ((user.getPhotoUrl()) != null) userInfo.putString(\"profile_pic\", user.getPhotoUrl().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5069/buggy-version/app.src.main.java.edu.radford.cerj.ketofinder.LoginActivity.java", "BodyUseAPI": ["com.google.firebase.auth.FirebaseUser.getEmail()", "android.os.Bundle.putString(java.lang.String,user.getDisplayName())", "android.os.Bundle.putString(java.lang.String,user.getEmail())", "user.getPhotoUrl().toString()", "com.google.firebase.auth.FirebaseUser.getPhotoUrl()", "android.os.Bundle.putString(java.lang.String,user.getPhotoUrl().toString())", "com.google.firebase.auth.FirebaseUser.getPhotoUrl()", "com.google.firebase.auth.FirebaseUser.getDisplayName()"], "Fixed commit": "4266d951ae63807ea6fb292e6227b86d138a87b4", "Url": "https://api.github.com/repos/rgladfelter/KetoFinder", "Date": "2018-12-05T04:09:38Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gameMode == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3627/buggy-version/src.main.java.net.glowstone.command.GameModeUtils.java", "BodyUseAPI": [], "Fixed commit": "934283f54160e945f28669e2109775b56539745e", "Url": "https://api.github.com/repos/GlowstoneMC/Glowstone", "Date": "2018-12-26T00:08:54Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (locale == null) { locale = java.util.Locale.getDefault(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3627/buggy-version/src.main.java.net.glowstone.command.GameModeUtils.java", "BodyUseAPI": [], "Fixed commit": "934283f54160e945f28669e2109775b56539745e", "Url": "https://api.github.com/repos/GlowstoneMC/Glowstone", "Date": "2018-12-26T00:08:54Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.addressBookForTest) != null) { for (seedu.addressbook.data.person.ReadOnlyPerson person : addressBookForTest.getAllPersons().immutableListView()) { if (person.getNric().getIdentificationNumber().equals(nric)) { screeningHistory = addressBook.readDatabase(nric, SCREENING_DATABASE); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9347/buggy-version/src.seedu.addressbook.commands.CheckCommand.java", "BodyUseAPI": [], "Fixed commit": "daea0de26be0ed0334d3fb404d8a5dccef68b097", "Url": "https://api.github.com/repos/ShreyasKp/Main", "Date": "2018-11-09T02:44:55Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.ObjectStreamClass.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((name.length()) > 2) { int index = name.lastIndexOf('['); if (index != (-1)) { name = name.substring((index + 1)); } if ((((name.length()) > 2) && ((name.charAt(0)) == 'L')) && ((name.charAt(((name.length()) - 1))) == ';')) { name = name.substring(1, ((name.length()) - 1)); } ParserConfig.global.checkAutoType(name, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4480/buggy-version/src.main.java.com.alibaba.fastjson.JSONObject.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.lastIndexOf(char)"], "Fixed commit": "6a5adc9050ccc163deba02233460e1222fcbb41c", "Url": "https://api.github.com/repos/GulajavaMinistudio/fastjson", "Date": "2018-11-20T03:31:45Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEmpty(endDate))) { for (int i = 0; i < (urls.length); i++) { urls[i] += endDate; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5050/buggy-version/src.main.java.dsy.web.service.FinanceAnalysisService.java", "BodyUseAPI": [], "Fixed commit": "8b68ebed9e7f136a8e2c82a32b88ddcf796546b2", "Url": "https://api.github.com/repos/imlinux/stock", "Date": "2018-12-01T11:30:38Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (idJogoPesquisado == (-1)) { java.lang.System.out.println(\"Este jogo foi removido\"); }else { java.lang.System.out.println(mlex.Repositorio.listaJogosObj.get(idJogoPesquisado)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9066/buggy-version/src.mlex.Repositorio.java", "BodyUseAPI": ["java.util.List<mlex.Jogo>.get(int)", "java.io.PrintStream.println(mlex.Repositorio.listaJogosObj.get(idJogoPesquisado))"], "Fixed commit": "a176727426d066eb79038a77552f558919718adc", "Url": "https://api.github.com/repos/birromer/mlex", "Date": "2018-11-18T20:40:31Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((name.contains(\"{\")) || ((name.indexOf('\"')) > (-1))) { com.kimpflerze.Main.println(name.trim()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6382/buggy-version/src.com.kimpflerze.Parser.java", "BodyUseAPI": ["com.kimpflerze.Main.println(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "6cb384b1d6e77debeef7897bf28c103e2dab7e0a", "Url": "https://api.github.com/repos/kimpflerze/CMSC618-Project", "Date": "2018-12-02T03:15:53Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type) == (other.type)) { if ((itemForm) && ((other.blockValues) != null)) return other.blockValues.isDefault(); if ((other.itemForm) && ((blockValues) != null)) return blockValues.isDefault(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4168/buggy-version/src.main.java.ch.njol.skript.aliases.ItemData.java", "BodyUseAPI": ["ch.njol.skript.bukkitutil.block.BlockValues.isDefault()"], "Fixed commit": "8f4a089c424bf66879742b8da0e9ff80194dfae2", "Url": "https://api.github.com/repos/SkriptLang/Skript", "Date": "2018-12-23T17:24:48Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.text.TextUtils.isEmpty(java.lang.String)", "android.text.TextUtils.isEmpty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (emptyEtEmail || emptyEtPassword) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3386/buggy-version/app.src.main.java.com.project.technion.appark.activities.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "162b428f8bd0b20562f44686f816013627c9583f", "Url": "https://api.github.com/repos/TechnionYP5779/team2-Appark", "Date": "2018-12-17T15:02:31Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR1)) { if ((((android.app.Activity) (context)).isFinishing()) || (((android.app.Activity) (context)).isDestroyed())) { return; } }else { if (((android.app.Activity) (context)).isFinishing()) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/117/buggy-version/library.src.main.java.cc.shinichi.library.ImagePreview.java", "BodyUseAPI": [], "Fixed commit": "a5e2e304087e55d9e97abb7fb674d76270bcfbe8", "Url": "https://api.github.com/repos/SherlockGougou/BigImageViewPager", "Date": "2018-11-06T10:02:07Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((context) instanceof android.app.Activity)) { throw new java.lang.IllegalArgumentException(\"context must be a Activity!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/117/buggy-version/library.src.main.java.cc.shinichi.library.ImagePreview.java", "BodyUseAPI": [], "Fixed commit": "a5e2e304087e55d9e97abb7fb674d76270bcfbe8", "Url": "https://api.github.com/repos/SherlockGougou/BigImageViewPager", "Date": "2018-11-06T10:02:07Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends org.unidal.helper.Scanners.ResourceScanner>.getClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (classLoader != null) { java.util.Enumeration<java.net.URL> e1 = classLoader.getResources(resourceBase); while (e1.hasMoreElements()) { scan(done, urls, e1.nextElement(), resourceBase, matcher); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2075/buggy-version/foundation-service.src.main.java.org.unidal.helper.Scanners.java", "BodyUseAPI": ["java.lang.ClassLoader.getResources(java.lang.String)"], "Fixed commit": "ef260cf44e3407ac516e066d9db5418809fcd5b3", "Url": "https://api.github.com/repos/unidal/foundation", "Date": "2018-11-28T14:08:52Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getText()) != \"Z\") { c.setEnabled(b); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/128/buggy-version/PlantsVsZombies.src.View.View.java", "BodyUseAPI": ["javax.swing.JButton.setEnabled(boolean)"], "Fixed commit": "fe20582f92f64bfccea355f0e3db43eb9cd22615", "Url": "https://api.github.com/repos/ahmedk1996/PlantsVsZombies", "Date": "2018-11-11T15:35:42Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeAfterEntrance == 0) { agendas[0] = agenda; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9134/buggy-version/src.Student.java", "BodyUseAPI": [], "Fixed commit": "aa13e5e7f55059da65635fc1197d2805d8004b39", "Url": "https://api.github.com/repos/AlexandreMG32/ScholarAgenda", "Date": "2018-12-20T08:34:26Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isVibrateInThisSession)) { final android.os.Vibrator vibrator = ((android.os.Vibrator) (getContext().getSystemService(Context.VIBRATOR_SERVICE))); vibrator.vibrate(com.txusballesteros.bubbles.BubbleTrashLayout.VIBRATION_DURATION_IN_MS); isVibrateInThisSession = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2555/buggy-version/bubbles.src.main.java.com.txusballesteros.bubbles.BubbleTrashLayout.java", "BodyUseAPI": [], "Fixed commit": "63220e0ada72e53e1e2e1e7905f52f31bae95040", "Url": "https://api.github.com/repos/LazarRistic/bubbles-for-android", "Date": "2018-12-10T10:11:53Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["business.PropertyPictureBusinessLayer.getAllPictures()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pictureList.size()) > 0) pindex = pictureList.get(((pictureList.size()) - 1)).getPictureID();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7075/buggy-version/src.java.view.RoomPostingView.java", "BodyUseAPI": ["pictureList.get(((pictureList.size()) - 1)).getPictureID()", "java.util.List<transferobjects.PropertyPicture>.size()", "java.util.List<transferobjects.PropertyPicture>.get(((pictureList.size()) - 1))"], "Fixed commit": "7605cc956142a09ccac606dd8c493d58848b984f", "Url": "https://api.github.com/repos/LilianDu/AHometoShare", "Date": "2018-11-25T16:23:42Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (view)) { view = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6548/buggy-version/app.src.main.java.com.yongxingg.mydemo.mvp.LoginPresenter.java", "BodyUseAPI": [], "Fixed commit": "4669772f2429e5af6860399187b5a4960310608b", "Url": "https://api.github.com/repos/robin12210325/androidTestDemo", "Date": "2018-11-16T07:48:37Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.dytanic.cloudnet.api.CloudAPI.getInstance().getPermissionPool()) != null) { for (de.dytanic.cloudnet.lib.player.permission.GroupEntityData entityData : cloudPlayer.getPermissionEntity().getGroups()) { de.dytanic.cloudnet.lib.player.permission.PermissionGroup permissionGroup = de.dytanic.cloudnet.api.CloudAPI.getInstance().getPermissionGroup(entityData.getGroup()); if (permissionGroup != null) { if ((permissionGroup.getJoinPower()) >= joinPower) acceptLogin = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8561/buggy-version/cloudnet-api.cloudnet-api-bridge.src.main.java.de.dytanic.cloudnet.bridge.internal.listener.bukkit.BukkitListener.java", "BodyUseAPI": [], "Fixed commit": "5cc0664d2d3c306c71ce34ea09b38d744e456764", "Url": "https://api.github.com/repos/CloudNetService/CloudNet", "Date": "2018-12-02T20:35:00Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (crs != null) geom.setSrsName(crs);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9772/buggy-version/swe-common-om.src.main.java.org.vast.ogc.gml.GeoJsonBindings.java", "BodyUseAPI": ["net.opengis.gml.v32.AbstractGeometry.setSrsName(java.lang.String)"], "Fixed commit": "997bb0fc37502a50ab614f09b5daaa8c9fde6443", "Url": "https://api.github.com/repos/sensiasoft/lib-swe-common", "Date": "2018-12-07T15:48:40Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (recordStorage.containsKey(problem.getUID())) { recordStorage.remove(problem.getUID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9274/buggy-version/app.src.main.java.com.example.cmput301f18t26.icare.Controllers.DataController.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<com.example.cmput301f18t26.icare.Models.Record>>.remove(problem.getUID())", "com.example.cmput301f18t26.icare.Models.Problem.getUID()"], "Fixed commit": "fc144faf34feaf6876c603c50d042b46a265c850", "Url": "https://api.github.com/repos/CMPUT301F18T26/iCare", "Date": "2018-11-22T15:57:12Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p instanceof asteroids.participants.Asteroid) { asteroids.game.Participant.expire(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9824/buggy-version/src.asteroids.participants.Bullets.java", "BodyUseAPI": [], "Fixed commit": "f715bc49edc300f7c238890d0378df93536a2c57", "Url": "https://api.github.com/repos/peren717/PS11_shared", "Date": "2018-11-23T23:56:53Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((m_pattern) != null) && ((m_pattern.size()) > 0)) { int currentCorrect = m_pattern.get(m_position); if (selectedPosition != currentCorrect) { triggerIncorrectAction(); return; } triggerCorrectAction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5473/buggy-version/app.src.main.java.com.haas.memory.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.get(int)"], "Fixed commit": "d062a2eb917e9c8f2b0e4321fbaa2c852c1e4eca", "Url": "https://api.github.com/repos/HaasBarnard/Memory", "Date": "2018-12-20T11:03:58Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Lithp.LithpValue.getCells()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cells.size()) == 1) return cells.get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4440/buggy-version/src.Lithp.LithpEvaluator.java", "BodyUseAPI": ["java.util.List<Lithp.LithpValue>.get(int)"], "Fixed commit": "1c97ce884f36ecdcb10c6e959decefdd80dd7eb0", "Url": "https://api.github.com/repos/JKTKops/Lithp", "Date": "2018-11-24T03:43:10Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(previewSource.hasCommentHeader())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/98/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.source.editors.text.TextEditingTargetSqlHelper.java", "BodyUseAPI": [], "Fixed commit": "6445df68b11f241e4372f5cba710590f0c242834", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2018-11-08T23:04:14Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(previewSource.hasCommentHeader())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/98/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.source.editors.text.TextEditingTargetJSHelper.java", "BodyUseAPI": [], "Fixed commit": "6445df68b11f241e4372f5cba710590f0c242834", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2018-11-08T23:04:14Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((signalPlan.getOffset()) > (shrinkStart + secondsToBeRemoved)) { signalPlan.setOffset(((signalPlan.getOffset()) - secondsToBeRemoved)); }else if ((signalPlan.getOffset()) > shrinkStart) { signalPlan.setOffset(shrinkStart); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2929/buggy-version/contribs.signals.src.main.java.org.matsim.contrib.signals.controller.sylvia.SylviaPreprocessData.java", "BodyUseAPI": ["org.matsim.contrib.signals.data.signalgroups.v20.SignalPlanData.getOffset()", "org.matsim.contrib.signals.data.signalgroups.v20.SignalPlanData.setOffset(int)", "org.matsim.contrib.signals.data.signalgroups.v20.SignalPlanData.setOffset(((signalPlan.getOffset()) - secondsToBeRemoved))", "org.matsim.contrib.signals.data.signalgroups.v20.SignalPlanData.getOffset()"], "Fixed commit": "93809f0fe5bd6ee77fa572ac5e9e8021c07a45db", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2018-11-12T16:11:15Z"},
{"Line": "=>551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hdfs.server.federation.store.records.MountTable.getDestinations()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((getClass()) == (org.apache.hadoop.hdfs.server.federation.resolver.MountTableResolver.class)) && ((dests.size()) > 1)) { throw new java.io.IOException((((\"Cannnot build location, \" + (getClass().getSimpleName())) + \" should not resolve multiple destinations for \") + path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6346/buggy-version/hadoop-hdfs-project.hadoop-hdfs-rbf.src.main.java.org.apache.hadoop.hdfs.server.federation.resolver.MountTableResolver.java", "BodyUseAPI": [], "Fixed commit": "80ba2baf6fd130fb1ce2dcf75b7653c4660096ea", "Url": "https://api.github.com/repos/apache/hadoop", "Date": "2018-10-30T05:51:08Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((remainingTime) > 0) { java.util.TimerTask decrement = new java.util.TimerTask() { @java.lang.Override public void run() { remainingTime = (remainingTime) - 1000; } }; timer.schedule(decrement, 50, 1000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8253/buggy-version/src.ColorFlood.Countdown.java", "BodyUseAPI": [], "Fixed commit": "cbded6943165d01bcdf3bfadd0ae37d6d6e73a24", "Url": "https://api.github.com/repos/cdruk/ColorFlood", "Date": "2018-12-31T23:30:56Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startingTimeInMilliseconds) > 0) { mProgressBar.setMax(((int) (startingTimeInMilliseconds))); mProgressBar.setProgress(((int) (startingTimeInMilliseconds))); StartTimer(); }else { android.widget.Toast.makeText(getContext(), \"Timer length must be longer than 0 seconds\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2345/buggy-version/app.src.main.java.edu.osu.recipe_app.ui.Timer.TimerFragment.java", "BodyUseAPI": [], "Fixed commit": "3620dcd4641735d90ec670cff4ca115b68a70318", "Url": "https://api.github.com/repos/pdevenpo/recipes_app", "Date": "2018-11-03T19:36:38Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m_outputArray[0]) != null) { m_outputPushables[0].push(m_outputArray[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1801/buggy-version/Core.src.ca.uqac.lif.cep.UniformProcessor.java", "BodyUseAPI": ["m_outputPushables[0].push(java.lang.Object)"], "Fixed commit": "179765831d0d42873e469d47865c24db9a44e089", "Url": "https://api.github.com/repos/liflab/beepbeep-3", "Date": "2018-11-05T13:02:49Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.main.retrace.retrace.supportClasses.Folder>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (folder != null) { if ((folder.getColor()) != null) { holder.mLayout.setBackgroundColor(android.graphics.Color.parseColor(folder.getColor())); } holder.mTextViewTitle.setText(folder.getTitle()); if ((folder.getLocation().getPlace()) != null) { holder.mTextPlace.setText(folder.getLocation().getPlace()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9704/buggy-version/app.src.main.java.com.main.retrace.retrace.supportClasses.FolderAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(folder.getTitle())", "com.main.retrace.retrace.supportClasses.Folder.getLocation()", "com.main.retrace.retrace.supportClasses.Folder.getTitle()", "android.graphics.Color.parseColor(folder.getColor())", "com.main.retrace.retrace.supportClasses.Folder.getColor()", "folder.getLocation().getPlace()", "android.widget.RelativeLayout.setBackgroundColor(android.graphics.Color.parseColor(folder.getColor()))", "com.main.retrace.retrace.supportClasses.Folder.getLocation()", "folder.getLocation().getPlace()", "com.main.retrace.retrace.supportClasses.Folder.getColor()", "android.widget.TextView.setText(folder.getLocation().getPlace())"], "Fixed commit": "f41705f8ccc4a06a897c6bfd7a5e3a90c057ac23", "Url": "https://api.github.com/repos/antontortosa/Retrace_555", "Date": "2018-12-06T04:47:30Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jetbrick.util.JdkUtils.IS_AT_LEAST_JAVA_9) { encoder = new jetbrick.template.parser.ast.AstText.Jdk9CharArrayEncoder(text); }else if (jetbrick.util.JdkUtils.IS_AT_LEAST_JAVA_7) { encoder = new jetbrick.template.parser.ast.AstText.Jdk7CharArrayEncoder(text); }else { encoder = new jetbrick.template.parser.ast.AstText.Jdk6CharArrayEncoder(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8132/buggy-version/jetbrick-template.src.main.java.jetbrick.template.parser.ast.AstText.java", "BodyUseAPI": [], "Fixed commit": "2d77e9fa653e34214df5a847fcb7fd824c90353b", "Url": "https://api.github.com/repos/subchen/jetbrick-template-2x", "Date": "2018-11-07T06:52:24Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((variableTree.type().firstToken()) == null) { treeToReportOn = variableTree; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2547/buggy-version/java-checks.src.main.java.org.sonar.java.checks.ReplaceGuavaWithJava8Check.java", "BodyUseAPI": [], "Fixed commit": "22a31698ff4cd5e82d43839bfb22fa25d4a8c5d7", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2018-11-26T11:16:37Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (condition == 3) { Wumpus.complete = 1; break; }else if ((condition == 1) && ((tiles[pos].visited) == 0)) { if (((tiles[pos].br) != 1) && ((tiles[(pos + 1)].safe) != 1)) tiles[(pos + 1)].doubt_pit += 1; if ((((tiles[pos].bu) != 1) && ((pos - (size)) >= 1)) && ((tiles[(pos - (size))].safe) != 1)) tiles[(pos - (size))].doubt_pit += 1; if (((tiles[pos].bl) != 1) && ((tiles[(pos - 1)].safe) != 1)) tiles[(pos - 1)].doubt_pit += 1; if ((((tiles[pos].bd) != 1) && ((pos + (size)) <= ((size) * (size)))) && ((tiles[(pos + (size))].safe) != 1)) tiles[(pos + (size))].doubt_pit += 1; tiles[pos].safe = 1; }else if ((condition == 2) && ((tiles[pos].visited) == 0)) { if (((tiles[pos].br) != 1) && ((tiles[(pos + 1)].safe) != 1)) { tiles[(pos + 1)].doubt_wumpus += 1; } if ((((tiles[pos].bu) != 1) && ((pos - (size)) >= 1)) && ((tiles[(pos - (size))].safe) != 1)) { tiles[(pos - (size))].doubt_wumpus += 1; } if (((tiles[pos].bl) != 1) && ((tiles[(pos - 1)].safe) != 1)) { tiles[(pos - 1)].doubt_wumpus += 1; } if ((((tiles[pos].bd) != 1) && ((pos + (size)) <= ((size) * (size)))) && ((tiles[(pos + (size))].safe) != 1)) { tiles[(pos + (size))].doubt_wumpus += 1; } tiles[pos].safe = 1; }else if (condition == 0) { tiles[pos].safe = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1633/buggy-version/src.Wumpus.java", "BodyUseAPI": [], "Fixed commit": "66311ce4b11ad478f20f89c94d35457b4026331d", "Url": "https://api.github.com/repos/PLUM-FAM/Assignment3", "Date": "2018-12-03T16:46:43Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location.equals(\"\")) { endingLocation = \"No moves made.\"; }else { endingLocation = (\"You finished in \" + (location)) + \".\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6801/buggy-version/app.src.main.java.com.example.chris.maze_game.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "62837b4428daacd7fa289d0b70e968c5ddb68e9c", "Url": "https://api.github.com/repos/jclement92/Easter-Bunny-Egg-Hunt-Mobile", "Date": "2018-12-15T01:14:48Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((queueEntryDate.compareTo(java.time.ZonedDateTime.now())) > 0) { throw new java.lang.IllegalArgumentException(java.lang.String.format(\"Date in the future is not allowed.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7534/buggy-version/src.main.java.com.workorder.assignments.workorders.entities.WorkOrder.java", "BodyUseAPI": [], "Fixed commit": "1b5f327bf680ceaa59dcdce213f653c936c28f3c", "Url": "https://api.github.com/repos/sbrownless/workorders", "Date": "2018-11-29T18:06:12Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shardingConditions.isAlwaysFalse()) { routingEngine = new io.shardingsphere.core.routing.type.unicast.UnicastRoutingEngine(shardingRule, tableNames); }else if (sqlStatement instanceof io.shardingsphere.core.parsing.parser.sql.dal.DALStatement) { routingEngine = new io.shardingsphere.core.routing.type.unicast.UnicastRoutingEngine(shardingRule, tableNames); }else if ((tableNames.isEmpty()) && (sqlStatement instanceof io.shardingsphere.core.parsing.parser.sql.dql.select.SelectStatement)) { routingEngine = new io.shardingsphere.core.routing.type.unicast.UnicastRoutingEngine(shardingRule, tableNames); }else if (tableNames.isEmpty()) { routingEngine = new io.shardingsphere.core.routing.type.broadcast.DatabaseBroadcastRoutingEngine(shardingRule); }else if ((1 == (tableNames.size())) || (shardingRule.isAllBindingTables(tableNames))) { routingEngine = new io.shardingsphere.core.routing.type.standard.StandardRoutingEngine(shardingRule, tableNames.iterator().next(), shardingConditions); }else { routingEngine = new io.shardingsphere.core.routing.type.complex.ComplexRoutingEngine(shardingRule, tableNames, shardingConditions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7427/buggy-version/sharding-core.src.main.java.io.shardingsphere.core.routing.router.sharding.ParsingSQLRouter.java", "BodyUseAPI": [], "Fixed commit": "14b97b98449dae4e9c5d9278723266385c8f3da8", "Url": "https://api.github.com/repos/apache/incubator-shardingsphere", "Date": "2018-11-03T09:20:33Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (shardingCondition.getDataNodes().isEmpty()) { expressions.add(shardingCondition.getInsertValueExpression()); parameters.addAll(shardingCondition.getParameters()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7427/buggy-version/sharding-core.src.main.java.io.shardingsphere.core.rewrite.SQLBuilder.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(shardingCondition.getInsertValueExpression())", "java.util.List<java.lang.Object>.addAll(shardingCondition.getParameters())", "io.shardingsphere.core.optimizer.insert.InsertShardingCondition.getInsertValueExpression()", "io.shardingsphere.core.optimizer.insert.InsertShardingCondition.getParameters()"], "Fixed commit": "14b97b98449dae4e9c5d9278723266385c8f3da8", "Url": "https://api.github.com/repos/apache/incubator-shardingsphere", "Date": "2018-11-03T09:20:33Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (shardingRule.isAllInDefaultDataSource(logicTables)) { java.util.List<io.shardingsphere.core.routing.type.RoutingTable> routingTables = new java.util.ArrayList<>(logicTables.size()); for (java.lang.String each : logicTables) { routingTables.add(new io.shardingsphere.core.routing.type.RoutingTable(each, each)); } io.shardingsphere.core.routing.type.TableUnit tableUnit = new io.shardingsphere.core.routing.type.TableUnit(shardingRule.getShardingDataSourceNames().getDefaultDataSourceName()); tableUnit.getRoutingTables().addAll(routingTables); result.getTableUnits().getTableUnits().add(tableUnit); }else if (logicTables.isEmpty()) { result.getTableUnits().getTableUnits().add(new io.shardingsphere.core.routing.type.TableUnit(shardingRule.getShardingDataSourceNames().getDataSourceNames().iterator().next())); }else if (1 == (logicTables.size())) { java.lang.String logicTableName = logicTables.iterator().next(); io.shardingsphere.core.rule.DataNode dataNode = shardingRule.findDataNode(logicTableName); io.shardingsphere.core.routing.type.TableUnit tableUnit = new io.shardingsphere.core.routing.type.TableUnit(dataNode.getDataSourceName()); tableUnit.getRoutingTables().add(new io.shardingsphere.core.routing.type.RoutingTable(logicTableName, dataNode.getTableName())); result.getTableUnits().getTableUnits().add(tableUnit); }else { java.lang.String dataSourceName = null; java.util.List<io.shardingsphere.core.routing.type.RoutingTable> routingTables = new java.util.ArrayList<>(logicTables.size()); for (java.lang.String each : logicTables) { io.shardingsphere.core.rule.DataNode dataNode = shardingRule.findDataNode(dataSourceName, each); routingTables.add(new io.shardingsphere.core.routing.type.RoutingTable(each, dataNode.getTableName())); if (null == dataSourceName) { dataSourceName = dataNode.getDataSourceName(); } } io.shardingsphere.core.routing.type.TableUnit tableUnit = new io.shardingsphere.core.routing.type.TableUnit(dataSourceName); tableUnit.getRoutingTables().addAll(routingTables); result.getTableUnits().getTableUnits().add(tableUnit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7427/buggy-version/sharding-core.src.main.java.io.shardingsphere.core.routing.type.unicast.UnicastRoutingEngine.java", "BodyUseAPI": ["shardingRule.getShardingDataSourceNames().getDefaultDataSourceName()", "io.shardingsphere.core.rule.ShardingRule.findDataNode(java.lang.String)", "io.shardingsphere.core.rule.ShardingRule.findDataNode(java.lang.String,java.lang.String)", "shardingRule.getShardingDataSourceNames().getDataSourceNames().iterator().next()", "shardingRule.getShardingDataSourceNames().getDataSourceNames().iterator()", "java.util.Iterator<java.lang.String>.next()", "java.util.Collection<java.lang.String>.iterator()", "result.getTableUnits().getTableUnits().add(io.shardingsphere.core.routing.type.TableUnit)", "io.shardingsphere.core.rule.ShardingRule.getShardingDataSourceNames()", "shardingRule.getShardingDataSourceNames().getDataSourceNames()", "java.util.Collection<java.lang.String>.isEmpty()", "java.util.Collection<java.lang.String>.size()", "java.util.Collection<java.lang.String>.size()", "io.shardingsphere.core.rule.ShardingRule.getShardingDataSourceNames()", "java.util.Collection<java.lang.String>.size()"], "Fixed commit": "14b97b98449dae4e9c5d9278723266385c8f3da8", "Url": "https://api.github.com/repos/apache/incubator-shardingsphere", "Date": "2018-11-03T09:20:33Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (morseLetter.equals(\"\")) { continue; }else { builder.append(org.crabcraft.MorseTrans.getKeyFromValue(org.crabcraft.MorseTrans.morse, morseLetter)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2080/buggy-version/src.org.crabcraft.MorseTrans.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "org.crabcraft.MorseTrans.getKeyFromValue(java.util.HashMap<java.lang.String, java.lang.String>,java.lang.String)"], "Fixed commit": "cc4bc9ce479ef1d90024dec9a80c0797a94c3908", "Url": "https://api.github.com/repos/AlekseiFox/Morse-Translator", "Date": "2018-12-06T13:31:35Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.mn.state.health.lims.common.services.TestService.getPossibleTestResults()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang.math.NumberUtils.isNumber(testResults.get(0).getSignificantDigits())) { testItem.setSignificantDigits(java.lang.Integer.parseInt(testResults.get(0).getSignificantDigits())); }else { testItem.setSignificantDigits(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3362/buggy-version/app.src.us.mn.state.health.lims.result.action.util.ResultsLoadUtility.java", "BodyUseAPI": ["java.util.List<us.mn.state.health.lims.testresult.valueholder.TestResult>.get(int)", "testResults.get(0).getSignificantDigits()", "us.mn.state.health.lims.test.beanItems.TestResultItem.setSignificantDigits(int)", "java.lang.Integer.parseInt(testResults.get(0).getSignificantDigits())"], "Fixed commit": "583e5f25f61c48e61d388d0b86eaa682e1eae214", "Url": "https://api.github.com/repos/openelisglobal/openelisglobal-core", "Date": "2018-12-17T22:40:14Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Node.getFirstChild()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (contentNode.getAttribute(\"contenthandler\").equals(\"resource/x-bb-externallink\")) { android.content.Intent browserIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(contentNode.getAttribute(\"viewUrl\"))); startActivity(browserIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1209/buggy-version/app.src.main.java.edu_cn.pku.course.activities.ContentViewActivity.java", "BodyUseAPI": ["org.w3c.dom.Element.getAttribute(java.lang.String)", "android.net.Uri.parse(java.lang.String)"], "Fixed commit": "3f6ace81aba6deef6d96f4f5f794a29da749cb5d", "Url": "https://api.github.com/repos/cbwang2016/PKUCourses", "Date": "2018-11-30T11:56:54Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < 20) { path.add(new com.google.android.gms.maps.model.LatLng(monument.getLatitude(), monument.getLongitude())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6428/buggy-version/Columbus.app.src.main.java.navi.com.columbus.View.GpsActivity.java", "BodyUseAPI": [], "Fixed commit": "90402a507f27050436b076dda47ed1a9ba502551", "Url": "https://api.github.com/repos/Patrick265/Columbus", "Date": "2018-12-13T14:56:13Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((baiDuJson.getTrans_result().size()) > 0) { thProp = baiDuJson.getTrans_result().get(0).getDst(); }else { thProp = prop; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/503/buggy-version/app.src.main.java.com.alitoyou.Tools.Prop.java", "BodyUseAPI": ["baiDuJson.getTrans_result().get(0).getDst()", "baiDuJson.getTrans_result().get(int)", "com.alitoyou.HELP.BaiDuJson.getTrans_result()"], "Fixed commit": "c7084222e2196179d46578e230759320185c5dba", "Url": "https://api.github.com/repos/singtolee/ALITOYOUANDROID", "Date": "2018-12-06T10:00:17Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((baiDuJson.getTrans_result().size()) > 0) { setThName(baiDuJson.getTrans_result().get(0).getDst()); }else { setThName(com.alitoyou.HELP.Gongju.cleanPrdName(name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/503/buggy-version/app.src.main.java.com.alitoyou.Product.java", "BodyUseAPI": ["com.alitoyou.HELP.BaiDuJson.getTrans_result()", "baiDuJson.getTrans_result().get(0).getDst()", "com.alitoyou.Product.2.setThName(baiDuJson.getTrans_result().get(0).getDst())", "baiDuJson.getTrans_result().get(int)"], "Fixed commit": "c7084222e2196179d46578e230759320185c5dba", "Url": "https://api.github.com/repos/singtolee/ALITOYOUANDROID", "Date": "2018-12-06T10:00:17Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((baiDuJson.getTrans_result().size()) > 0) { thName = baiDuJson.getTrans_result().get(0).getDst(); }else { thName = name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/503/buggy-version/app.src.main.java.com.alitoyou.Tools.Value.java", "BodyUseAPI": ["baiDuJson.getTrans_result().get(0).getDst()", "com.alitoyou.HELP.BaiDuJson.getTrans_result()", "baiDuJson.getTrans_result().get(int)"], "Fixed commit": "c7084222e2196179d46578e230759320185c5dba", "Url": "https://api.github.com/repos/singtolee/ALITOYOUANDROID", "Date": "2018-12-06T10:00:17Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((baiDuJson.getTrans_result().size()) > 0) { builDesktopUrl(baiDuJson.getTrans_result().get(0).getDst(), kw); }else { builDesktopUrl(kw, kw); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/503/buggy-version/app.src.main.java.com.alitoyou.Search.SearchActivity.java", "BodyUseAPI": ["com.alitoyou.HELP.BaiDuJson.getTrans_result()", "baiDuJson.getTrans_result().get(int)", "baiDuJson.getTrans_result().get(0).getDst()", "com.alitoyou.Search.SearchActivity.2.builDesktopUrl(baiDuJson.getTrans_result().get(0).getDst(),java.lang.String)"], "Fixed commit": "c7084222e2196179d46578e230759320185c5dba", "Url": "https://api.github.com/repos/singtolee/ALITOYOUANDROID", "Date": "2018-12-06T10:00:17Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((words.contains(\"}\")) && (words.contains(\";\"))) { changeInSemicolons = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9884/buggy-version/src.main.java.CSQuizGrader.JavaFile.java", "BodyUseAPI": [], "Fixed commit": "b3d4e7904d595092549a40a5f262c72fc0f0fc58", "Url": "https://api.github.com/repos/roshanprabhakar/CSQuizGrader", "Date": "2018-11-18T09:11:47Z"},
{"Line": "=>1219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.com.fanrenlee.service.CostAccountFentanService.getLoginUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(\"admin\".equals(loginUser))) { java.lang.Integer orgId = userMgrService.getByLoginName(loginUser).getOrgId(); sb.append(\" AND u.org_id = ? \"); values.add(orgId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4447/buggy-version/src.main.java.cn.com.fanrenlee.service.CostAccountFentanService.java", "BodyUseAPI": ["cn.com.fanrenlee.auth.usermgr.serivce.UserMgrService.getByLoginName(java.lang.String)", "userMgrService.getByLoginName(loginUser).getOrgId()"], "Fixed commit": "df6d0c069d671fff8ce6835fe99a8e3e1d18cd6d", "Url": "https://api.github.com/repos/qq379673328/costaccount", "Date": "2018-11-04T11:35:59Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anArrayTargetType == null) { if (isIntegrityType(tempResult.getClass().getComponentType())) { anArrayTargetType = java.lang.Object.class; }else { anArrayTargetType = tempResult.getClass().getComponentType(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5689/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.java", "BodyUseAPI": [], "Fixed commit": "962f169360141ffe02520706992a0969e5211e98", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2018-12-12T13:30:12Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keysPressed.contains(\"a\")) { moveX--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8786/buggy-version/src.composantsmap.Map.java", "BodyUseAPI": [], "Fixed commit": "dd14d8d48caff49d4a6d77576243ed23d383e979", "Url": "https://api.github.com/repos/AyoubBouisri/StickQuibble", "Date": "2018-12-27T03:42:31Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keysPressed.contains(\"s\")) { moveY++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8786/buggy-version/src.composantsmap.Map.java", "BodyUseAPI": [], "Fixed commit": "dd14d8d48caff49d4a6d77576243ed23d383e979", "Url": "https://api.github.com/repos/AyoubBouisri/StickQuibble", "Date": "2018-12-27T03:42:31Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (getLevelOfStudy(student).equals(\"4\")) { if ((creditsAchieved(student)) == 180) { return initialResult; }else if ((creditsAchieved(student)) >= 165) { return getMasterResult(getWeightedMean(student)); }else { if ((creditsAchieved(student)) >= 120) { return postgradResult(student); }else { return \"Fail\"; } } }else { if ((creditsAchieved(student)) == 120) { return initialResult; }else if (((creditsAchieved(student)) <= 100) && ((modulesPassed(student)) == ((numberOfModules(student)) - 1))) { int minGrade = allGrades.indexOf(java.util.Collections.min(allGrades)); if (minGrade > 29.5) { return \"Conceded Pass\"; } }else { return \"Fail\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8695/buggy-version/src.sql.controller.TeacherController.java", "BodyUseAPI": ["src.sql.controller.TeacherController.creditsAchieved(java.lang.String)", "src.sql.controller.TeacherController.creditsAchieved(java.lang.String)", "src.sql.controller.TeacherController.postgradResult(java.lang.String)", "src.sql.controller.TeacherController.getMasterResult(double)", "src.sql.controller.TeacherController.creditsAchieved(java.lang.String)", "src.sql.controller.TeacherController.numberOfModules(java.lang.String)", "src.sql.controller.TeacherController.creditsAchieved(java.lang.String)", "src.sql.controller.TeacherController.creditsAchieved(java.lang.String)", "src.sql.controller.TeacherController.getWeightedMean(java.lang.String)", "src.sql.controller.TeacherController.modulesPassed(java.lang.String)"], "Fixed commit": "bf5c74e33d7568fb698d1ba8854269f8bb4570f9", "Url": "https://api.github.com/repos/JZafar1/Systems-Design-Security-Assignment", "Date": "2018-12-03T12:07:44Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (searchTerm == null) { if ((tmAPI.citySearchEvents(searchCity).get_embedded()) == null) { return new org.springframework.web.servlet.ModelAndView(\"tmAPI\", \"CityMessage\", \"Please enter a valid city name.\"); } pr = tmAPI.citySearchEvents(searchCity); }else if (searchCity == null) { pr = tmAPI.searchEvents(searchTerm); }else { if ((tmAPI.citySearchEvents(searchCity).get_embedded()) == null) { return new org.springframework.web.servlet.ModelAndView(\"tmAPI\", \"CityMessage\", \"Please enter a valid city name.\"); } pr = tmAPI.searchEvents(searchTerm, searchCity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8664/buggy-version/src.main.java.co.grandcircus.RideHard.RideController.java", "BodyUseAPI": ["co.grandcircus.RideHard.TicketMaster.TicketMasterAPIService.searchEvents(java.lang.String)", "co.grandcircus.RideHard.TicketMaster.TicketMasterAPIService.searchEvents(java.lang.String,java.lang.String)"], "Fixed commit": "10e9d7a80824c06665e27f154a443f9e040c833c", "Url": "https://api.github.com/repos/EasyDanger/GoTo", "Date": "2018-12-11T16:02:02Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((current.Img) != null) if ((!(current.Img.equals(\"\"))) && (!(current.Img.equals(\"null\")))) com.bumptech.glide.Glide.with(context).load(((com.technologygroup.rayannoor.yoga.Classes.App.imgAddr) + (current.Img))).asBitmap().diskCacheStrategy(DiskCacheStrategy.SOURCE).into(imgCoach);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/513/buggy-version/app.src.main.java.com.technologygroup.rayannoor.yoga.adapters.GymCoachesAdapter.java", "BodyUseAPI": ["current.Img.equals(java.lang.String)", "com.bumptech.glide.Glide.with(context).load(((com.technologygroup.rayannoor.yoga.Classes.App.imgAddr) + (current.Img))).asBitmap().diskCacheStrategy(DiskCacheStrategy.SOURCE).into(android.widget.ImageView)", "current.Img.equals(java.lang.String)", "com.bumptech.glide.Glide.with(context).load(((com.technologygroup.rayannoor.yoga.Classes.App.imgAddr) + (current.Img))).asBitmap()", "com.bumptech.glide.Glide.with(context).load(((com.technologygroup.rayannoor.yoga.Classes.App.imgAddr) + (current.Img)))", "com.bumptech.glide.Glide.with(context).load(((com.technologygroup.rayannoor.yoga.Classes.App.imgAddr) + (current.Img))).asBitmap().diskCacheStrategy(DiskCacheStrategy.SOURCE)"], "Fixed commit": "32066f031e9e6e0e233d33bd34b9041393947625", "Url": "https://api.github.com/repos/mhmasdar/yoga88", "Date": "2018-11-12T10:53:25Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.sbtqa.tag.pagefactory.PageManager.getPageClass(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pageClass == null) { throw new ru.sbtqa.tag.qautils.errors.AutotestError(((\"Page object with title '\" + title) + \"' is not registered\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4124/buggy-version/page-factory-core.src.main.java.ru.sbtqa.tag.pagefactory.PageManager.java", "BodyUseAPI": [], "Fixed commit": "3487b153dd14dcda2b5a67099c8a2761d8f7b7e7", "Url": "https://api.github.com/repos/sbtqa/page-factory-2", "Date": "2018-12-17T02:38:17Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.right_brothers.agents.OvenManager.UnbakedProductsServer.getProductWithSameGuid(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (p != null) { up.setGuid(p.getGuid()); up.setBakingTemp(p.getRecipe().getBakingTemp()); up.setBreadsPerOven(p.getBatch().getBreadsPerOven()); java.util.Vector<org.right_brothers.data.models.Step> steps = new java.util.Vector<org.right_brothers.data.models.Step>(); boolean addStep = false; for (org.right_brothers.data.models.Step s : p.getRecipe().getSteps()) { if (s.getAction().equals(\"baking\")) { up.setBakingDuration(s.getDuration()); addStep = true; continue; } if (s.getAction().equals(\"cooling\")) { up.setCoolingDuration(s.getDuration()); addStep = false; break; } if (addStep) { steps.add(s); } } up.setIntermediateSteps(steps); return up; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2598/buggy-version/src.main.java.org.right_brothers.agents.OvenManager.java", "BodyUseAPI": ["org.right_brothers.bakery_objects.UnbakedProduct.setBakingTemp(p.getRecipe().getBakingTemp())", "p.getRecipe().getSteps()", "org.right_brothers.bakery_objects.UnbakedProduct.setGuid(p.getGuid())", "org.right_brothers.bakery_objects.UnbakedProduct.setBreadsPerOven(p.getBatch().getBreadsPerOven())", "org.right_brothers.data.models.Product.getRecipe()", "p.getBatch().getBreadsPerOven()", "org.right_brothers.data.models.Product.getBatch()", "org.right_brothers.data.models.Product.getGuid()", "org.right_brothers.data.models.Product.getRecipe()", "p.getRecipe().getBakingTemp()"], "Fixed commit": "8688c8bedfd70e38110b4f197ec0c001c1939e5f", "Url": "https://api.github.com/repos/HBRS-MAAS/ws18-project-right-brothers", "Date": "2018-12-22T19:18:44Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.right_brothers.agents.OvenManager.UnbakedProductsServer.getUnbakedProductFromProductName(unbakedProductMessage.getProductType())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (up != null) { int newQuantity = this.getTotalQuantity(unbakedProductMessage.getProductQuantities()); this.iterativelyAddUnbakedProducts(newQuantity, up); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2598/buggy-version/src.main.java.org.right_brothers.agents.OvenManager.java", "BodyUseAPI": ["org.right_brothers.agents.OvenManager.UnbakedProductsServer.iterativelyAddUnbakedProducts(int,org.right_brothers.bakery_objects.UnbakedProduct)"], "Fixed commit": "8688c8bedfd70e38110b4f197ec0c001c1939e5f", "Url": "https://api.github.com/repos/HBRS-MAAS/ws18-project-right-brothers", "Date": "2018-12-22T19:18:44Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lsfusion.server.logics.property.actions.integration.importing.hierarchy.json.JSONReader.toJSONObject(java.lang.Object,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (jsonObject == null) { assert !convertValue; return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1591/buggy-version/server.src.main.java.lsfusion.server.logics.property.actions.integration.hierarchy.json.JSONNode.java", "BodyUseAPI": [], "Fixed commit": "8d84fecd6c834dbf347d1c4e42adbc947078403e", "Url": "https://api.github.com/repos/lsfusion/platform", "Date": "2018-12-10T06:59:14Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!convertValue) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1591/buggy-version/server.src.main.java.lsfusion.server.logics.property.actions.integration.importing.hierarchy.json.JSONReader.java", "BodyUseAPI": [], "Fixed commit": "8d84fecd6c834dbf347d1c4e42adbc947078403e", "Url": "https://api.github.com/repos/lsfusion/platform", "Date": "2018-12-10T06:59:14Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkWiFiConnection(this))) { }else { inputMessage.setText(\"\"); socketThread.sendMessage(message); if ((myName) == null) { myName = message; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9830/buggy-version/Android.app.src.main.java.com.example.duskpiper.projjieyang_wifi_chatroom.ChatActivity.java", "BodyUseAPI": [], "Fixed commit": "89ccfd441a41888e388975436bf1b98c42a63ed0", "Url": "https://api.github.com/repos/DuskPiper/ProjJieyang-WiFi-Chat-Room", "Date": "2018-12-13T20:59:41Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.address.model.Model.getFilteredExpenditureList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((targetIndex.getZeroBased()) >= (lastShownList.size())) { throw new seedu.address.logic.commands.exceptions.CommandException(seedu.address.commons.core.Messages.MESSAGE_INVALID_EXPENDITURE_DISPLAYED_INDEX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3492/buggy-version/src.main.java.seedu.address.logic.commands.DeleteExpenditureCommand.java", "BodyUseAPI": [], "Fixed commit": "37c3cb2d6ee3b85885cbeebd9eec61d836ab2c89", "Url": "https://api.github.com/repos/feijunzi/main", "Date": "2018-11-05T08:19:40Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((--n) > 0) { s.request(n); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4239/buggy-version/reactor-core.src.main.java.reactor.core.publisher.FluxSwitchOnFirst.java", "BodyUseAPI": [], "Fixed commit": "efc1a6129ec9fd52af16673e0271ede7cc44cefb", "Url": "https://api.github.com/repos/OlegDokuka/reactor-core", "Date": "2018-12-14T06:57:36Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((--n) > 0) { s.request(n); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4239/buggy-version/reactor-core.src.main.java.reactor.core.publisher.FluxSwitchOnFirst.java", "BodyUseAPI": [], "Fixed commit": "efc1a6129ec9fd52af16673e0271ede7cc44cefb", "Url": "https://api.github.com/repos/OlegDokuka/reactor-core", "Date": "2018-12-14T06:57:36Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCallingActivity()) != null) { intent = new android.content.Intent(this, com.liam.ihmapp.ProfileActivity.class); }else { intent = new android.content.Intent(this, com.liam.ihmapp.HomePageActivity.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7453/buggy-version/app.src.main.java.com.liam.ihmapp.ObjectCategoryActivity.java", "BodyUseAPI": [], "Fixed commit": "fbdbdec0f55a34f67212cdab8934101c1aef7fc2", "Url": "https://api.github.com/repos/Gangalic/Campus_landing", "Date": "2018-12-27T12:31:31Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (a == 0) a = 7;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9849/buggy-version/App.app.src.main.java.dhbwpros.budgetlist.OverViewFragment.java", "BodyUseAPI": [], "Fixed commit": "2d112a05f4076a8d4360165e6fcbf88639d850fa", "Url": "https://api.github.com/repos/stuttgart-dhbw/com.dhbw.team5", "Date": "2018-11-12T21:00:59Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((prefixes.size()) != (suffixes.size())) && ((prefixes.size()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5671/buggy-version/NewHonor-Bukkit.src.main.java.com.github.euonmyoji.newhonor.task.DisplayHonorTask.java", "BodyUseAPI": [], "Fixed commit": "2048fe6e628d8e0f37cf312c2470325e9080b32e", "Url": "https://api.github.com/repos/euOnmyoji/NewHonor", "Date": "2018-11-07T08:08:31Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((route.getSensitiveHeaders()) != null) && (!(route.getSensitiveHeaders().isEmpty()))) { zuulRoute.setSensitiveHeaders(route.getSensitiveHeaders()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3136/buggy-version/choerodon-starter-config-client.src.main.java.org.springframework.cloud.config.client.ConfigServicePropertySourceLocator.java", "BodyUseAPI": ["org.springframework.cloud.config.client.ZuulRoute.getSensitiveHeaders()", "ZuulProperties.ZuulRoute.setSensitiveHeaders(route.getSensitiveHeaders())"], "Fixed commit": "f06d854b96f27ecd5d175c54a63c774f3774afe0", "Url": "https://api.github.com/repos/choerodon/choerodon-starters", "Date": "2018-12-24T02:18:05Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Typarray.length) > 10) { for (int x = 0; x < 9; x++) { returnArray[x] = Typarray[x]; } return returnArray; }else { return Typarray; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4275/buggy-version/BehaviorAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "6a5d6d89aa223dda9d70910ef27f8bbb34f49a84", "Url": "https://api.github.com/repos/infokurs-gaw/T-Shirt-Shop", "Date": "2018-11-26T09:34:35Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(JsonKey.LEAF_NODE_COUNT)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (0 == leafNodeCount) { updateDb.put(JsonKey.STATUS, ProjectUtil.ProgressStatus.STARTED.getValue()); }else { if (leafNodeCount > courseProgress) { updateDb.put(JsonKey.STATUS, ProgressStatus.STARTED.getValue()); }else { if ((ProgressStatus.COMPLETED.getValue()) != ((java.lang.Integer) (course.get(JsonKey.STATUS)))) { updateDb.put(JsonKey.COMPLETED_ON, new java.sql.Timestamp(new java.util.Date().getTime())); } updateDb.put(JsonKey.STATUS, ProgressStatus.COMPLETED.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5341/buggy-version/actors.common.src.main.java.org.sunbird.learner.actors.LeanerStateUpdateBackGroundActor.java", "BodyUseAPI": [], "Fixed commit": "d8736646369177df6af56abd668c1309ea4f9fa1", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-11-09T11:27:10Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((file) != null) { ClientGUI.progressBar.setValue(0); Client.send(file); ClientGUI.progressBar.setValue(100); }else { java.lang.System.out.println(\"File not Selected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3928/buggy-version/ClientGUI.java", "BodyUseAPI": [], "Fixed commit": "0431912d751dea119e07a6f2196abdfed31efbb8", "Url": "https://api.github.com/repos/kalpaj12/Direct-Connext", "Date": "2018-12-07T09:42:38Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentMemento) < 2) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9866/buggy-version/src.frontend.src.authoringInterface.editor.menuBarView.EditorMenuBarView.java", "BodyUseAPI": [], "Fixed commit": "b19994a2d6fd609e2b9daa5a90b91924dd86ca7f", "Url": "https://api.github.com/repos/Jaxonwht/voogasalad", "Date": "2018-11-18T04:17:33Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6152/buggy-version/src.main.java.net.sattler22.crowdtwist.Pixel.java", "BodyUseAPI": [], "Fixed commit": "c47c0c2a353c8b08f2a2ef2607fc9d4770b8d042", "Url": "https://api.github.com/repos/peter-sattler/crowdtwist", "Date": "2018-12-09T16:46:13Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(gameID.equals(log.getGameID()))) { currentPoint = currentPoint + 1; }else { currentPoint = (currentPoint + (listGameID.size())) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5705/buggy-version/src.task.WorkerLogLogin.java", "BodyUseAPI": [], "Fixed commit": "a8f7342d784d905eacf304c3f0d9141638df6959", "Url": "https://api.github.com/repos/k3v1n1k88/OrderListGame", "Date": "2018-12-04T13:29:42Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (sinkcount == 1) { if ((ptnet.getIncoming(((nl.rug.ds.bpm.petrinet.ptnet.element.Place) (sinkplace))).size()) > 1) { nl.rug.ds.bpm.petrinet.interfaces.element.T artificialEnd = new nl.rug.ds.bpm.petrinet.ptnet.element.Transition(\"artificial_end\", \"silentEnd\"); nl.rug.ds.bpm.petrinet.interfaces.element.P artificialSink = new nl.rug.ds.bpm.petrinet.ptnet.element.Place(\"artificial_sink\", \"artificialSink\"); ptnet.addTransition(((nl.rug.ds.bpm.petrinet.ptnet.element.Transition) (artificialEnd))); ptnet.addPlace(((nl.rug.ds.bpm.petrinet.ptnet.element.Place) (artificialSink))); ptnet.addArc(((nl.rug.ds.bpm.petrinet.ptnet.element.Place) (sinkplace)), ((nl.rug.ds.bpm.petrinet.ptnet.element.Transition) (artificialEnd))); ptnet.addArc(((nl.rug.ds.bpm.petrinet.ptnet.element.Transition) (artificialEnd)), ((nl.rug.ds.bpm.petrinet.ptnet.element.Place) (artificialSink))); } buildPES(ptnet, globalconditions, silentPrefix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8185/buggy-version/src.nl.rug.ds.bpm.eventstructure.PESPrefixUnfolding.java", "BodyUseAPI": [], "Fixed commit": "8ba87c553503f891bb2e88d2a5d10dbdfbbf3a32", "Url": "https://api.github.com/repos/rug-ds-lab/BPMPetriNet", "Date": "2018-11-02T03:30:19Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (correctProfessor.toString().equals(\"Dr. Bernstein\")) { if ((chosen) == (correct)) { clip = initClip(correctProfessor.getAudioNameCorrect()); (score)++; }else { clip = initClip(correctProfessor.getAudioNameIncorrect()); } }else { clip = initClip(correctProfessor.getGenericAudio()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/752/buggy-version/NTCSP.src.game.NTCSP.java", "BodyUseAPI": ["game.NTCSP.initClip(correctProfessor.getAudioNameIncorrect())", "game.Professor.getGenericAudio()", "game.NTCSP.initClip(correctProfessor.getAudioNameCorrect())", "game.Professor.getAudioNameIncorrect()", "game.Professor.getAudioNameCorrect()", "game.NTCSP.initClip(correctProfessor.getGenericAudio())"], "Fixed commit": "3c14f4b19ce8e47d81657363425129ef9ad2b3d1", "Url": "https://api.github.com/repos/devinaustin112/Name-That-CS-Professor", "Date": "2018-11-28T19:14:57Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.pivotal.web.config.AuthorityAssigningOidcUserService.mapAuthorities(userRequest.getAccessToken().getScopes())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isEmpty(authorities)) { authorities = new java.util.HashSet(); authorities.add(new org.springframework.security.core.authority.SimpleGrantedAuthority(\"ROLE_PIVOTAL_BANK\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/141/buggy-version/src.main.java.io.pivotal.web.config.AuthorityAssigningOidcUserService.java", "BodyUseAPI": [], "Fixed commit": "ed32cf467e7b1b76ba2ae11e1c3ebeafeb75d722", "Url": "https://api.github.com/repos/simonrowe-pivotal/web-ui", "Date": "2018-11-22T17:11:12Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldFirst != null) { oldFirst.prev = newFirst; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9064/buggy-version/CourseraAlgorithms1.src.Deque.java", "BodyUseAPI": [], "Fixed commit": "49ad0834b23668af01d4f282da142d931839d708", "Url": "https://api.github.com/repos/milliondolla/Hello-World", "Date": "2018-12-07T06:52:01Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((exprList.args.size()) == 0) { if (op == (BinaryExpression.Op.AND)) { return new edu.uiowa.alloy2smt.translators.BooleanConstant(true); } if (op == (BinaryExpression.Op.OR)) { return new edu.uiowa.alloy2smt.translators.BooleanConstant(false); } throw new java.lang.UnsupportedOperationException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5172/buggy-version/src.main.java.edu.uiowa.alloy2smt.translators.ExprTranslator.java", "BodyUseAPI": [], "Fixed commit": "495721b2ea4e83f9d1b659753d5891a52756a149", "Url": "https://api.github.com/repos/mudathirmahgoub/alloy2smt", "Date": "2018-12-31T08:19:30Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.aitp.web.common.service.utils.HttpUtil.doPutJson(java.lang.String,com.aitp.web.common.service.dto.WechatUserDTO)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(resultData)) { return com.alibaba.fastjson.JSONObject.parseObject(resultData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8356/buggy-version/aitpfront.src.main.java.com.aitp.web.common.service.UserServiceImp.java", "BodyUseAPI": ["com.alibaba.fastjson.JSONObject.parseObject(java.lang.String)"], "Fixed commit": "e86863d52621f388acf120dfd3c5b2d759277d8d", "Url": "https://api.github.com/repos/aitp2/dlife", "Date": "2018-12-26T06:37:49Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (password.matches(\"[a-zA-Z0-9@]{8,50}\")) return true; else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3352/buggy-version/src.com.mcams.service.ValidationService.java", "BodyUseAPI": [], "Fixed commit": "d3302a95a014a0d1875b98d3b363ba2194f7f8f5", "Url": "https://api.github.com/repos/yogeshchacherkar/MCAMS", "Date": "2018-11-29T09:10:07Z"},
{"Line": "=>585", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (width > 0) { if (((((size) + (promptLength())) % width) == 0) && (deltaChangedAtEndOfBuffer)) { builder.append(new int[]{ 32, 13 }); } if (!(deltaChangedAtEndOfBuffer)) { if (((((size) + (promptLength())) % width) == 0) && (org.aesh.utils.Config.isOSPOSIXCompatible())) { builder.append(syncCursorWhenBufferIsAtTerminalEdge(((size) + (promptLength())), ((cursor) + (promptLength())), width)); }else builder.append(syncCursor(((size) + (promptLength())), ((cursor) + (promptLength())), width)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5881/buggy-version/readline.src.main.java.org.aesh.readline.Buffer.java", "BodyUseAPI": ["org.aesh.readline.Buffer.syncCursorWhenBufferIsAtTerminalEdge(int,int,int)", "org.aesh.readline.util.IntArrayBuilder.append(int[])", "org.aesh.readline.util.IntArrayBuilder.append(int[])", "org.aesh.readline.Buffer.syncCursor(int,int,int)"], "Fixed commit": "6761de5e06eefa6e6ef41a8068b08b90c6040346", "Url": "https://api.github.com/repos/aeshell/aesh-readline", "Date": "2018-12-05T13:35:41Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (object == null) return null; else return supplier.apply(object);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1274/buggy-version/src.main.java.com.databasesandlife.util.wicket.LambdaDisplayValueChoiceRenderer.java", "BodyUseAPI": ["org.danekja.java.util.function.serializable.SerializableFunction<T, java.lang.String>.apply(T)"], "Fixed commit": "849cd5748125dea69088bf2ecfa71d9db200a3af", "Url": "https://api.github.com/repos/adrianmsmith/databasesandlife-java-common", "Date": "2018-11-14T11:49:53Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkinsApi.crumbIssuerApi().crumb()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (null != crumb) { final java.lang.Boolean isRNFE = (crumb.errors().isEmpty()) ? true : crumb.errors().get(0).exceptionName().endsWith(org.jclouds.rest.ResourceNotFoundException.class.getSimpleName()); com.cdancy.jenkins.rest.filters.JenkinsAuthenticationFilter.crumbPair = crumbValueInit = new com.cdancy.jenkins.rest.filters.JenkinsAuthenticationFilter.Pair(crumb, isRNFE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6173/buggy-version/src.main.java.com.cdancy.jenkins.rest.filters.JenkinsAuthenticationFilter.java", "BodyUseAPI": ["crumb.errors().isEmpty()", "crumb.errors().get(int)", "crumb.errors().get(0).exceptionName()", "crumb.errors().get(0).exceptionName().endsWith(java.lang.String)", "com.cdancy.jenkins.rest.domain.crumb.Crumb.errors()", "com.cdancy.jenkins.rest.domain.crumb.Crumb.errors()"], "Fixed commit": "160935b97cc7d9d97a028d03a1a09cdf58a2384a", "Url": "https://api.github.com/repos/hcray/jenkins-rest", "Date": "2018-11-08T07:42:19Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jclouds.http.HttpResponse.getStatusCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (statusCode == 404) { return null; }else { throw new java.lang.RuntimeException(input.getStatusLine()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6173/buggy-version/src.main.java.com.cdancy.jenkins.rest.parsers.CrumbParser.java", "BodyUseAPI": [], "Fixed commit": "160935b97cc7d9d97a028d03a1a09cdf58a2384a", "Url": "https://api.github.com/repos/hcray/jenkins-rest", "Date": "2018-11-08T07:42:19Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(a instanceof net.runelite.api.NPC)) { return damageDealt; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9629/buggy-version/runelite-client.src.main.java.net.runelite.client.plugins.performancetracker.PerformanceTrackerPlugin.java", "BodyUseAPI": [], "Fixed commit": "afda24c31b23ba11f144d273657d72a942a256dc", "Url": "https://api.github.com/repos/TheStonedTurtle/runelite", "Date": "2018-11-15T22:31:03Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((calendar.get(java.util.Calendar.DAY_OF_MONTH)) <= 20) { calendar.add(java.util.Calendar.MONTH, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2724/buggy-version/modules.report.src.main.java.org.openlmis.report.generator.AbstractDrugReportGenerator.java", "BodyUseAPI": ["java.util.Calendar.add(int,int)"], "Fixed commit": "dd19d142faf49ad573e89aabbf1611c99d589f4a", "Url": "https://api.github.com/repos/SIGLUS/open-lmis", "Date": "2018-11-14T08:39:35Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((calendar.get(java.util.Calendar.DAY_OF_MONTH)) > 20) { calendar.add(java.util.Calendar.MONTH, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2724/buggy-version/modules.report.src.main.java.org.openlmis.report.generator.AbstractDrugReportGenerator.java", "BodyUseAPI": ["java.util.Calendar.add(int,int)"], "Fixed commit": "dd19d142faf49ad573e89aabbf1611c99d589f4a", "Url": "https://api.github.com/repos/SIGLUS/open-lmis", "Date": "2018-11-14T08:39:35Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((author.getId()) instanceof java.lang.Number) { return authorDao.loadAuthorById(java.lang.Long.parseLong(((java.lang.String) (source)))); }else { return author; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4068/buggy-version/src.main.java.pl.coderslab.app.AuthorConverter.java", "BodyUseAPI": [], "Fixed commit": "0ae55f201152691d82e0a7da150dd34d4f960ccd", "Url": "https://api.github.com/repos/Krzysiekkwiatkowski/SpringHibernate", "Date": "2018-11-29T21:59:50Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((publisher.getId()) instanceof java.lang.Number) { return publisherDao.loadPublisherById(java.lang.Long.parseLong(((java.lang.String) (source)))); }else { return publisher; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4068/buggy-version/src.main.java.pl.coderslab.app.PublisherConverter.java", "BodyUseAPI": [], "Fixed commit": "0ae55f201152691d82e0a7da150dd34d4f960ccd", "Url": "https://api.github.com/repos/Krzysiekkwiatkowski/SpringHibernate", "Date": "2018-11-29T21:59:50Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (addWord(wordsToAdd.get(i), row, col, rowInc, colInc)) { wordsAdded.add(wordsToAdd.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5794/buggy-version/WordSearch.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "6ab44c7d03c9f6e2ebf7046ae248ded535eb753c", "Url": "https://api.github.com/repos/gojimilove/MKS21X-WordSearch", "Date": "2018-11-16T15:16:30Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFallback) { return new com.google.android.cameraview.SurfaceViewPreview(context, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4287/buggy-version/library.src.main.java.com.google.android.cameraview.CameraView.java", "BodyUseAPI": [], "Fixed commit": "ea2b562ab3092349b23d3fb475a4d79fb48d486b", "Url": "https://api.github.com/repos/SebastianPickl/cameraview", "Date": "2018-12-11T08:31:17Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.grammar) != null) && ((this.grammar.length) > 0)) { json.put(\"grammar\", grammar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6675/buggy-version/swedisch-vocab-app.src.main.java.de.isah.vocabtrainer.dictionary.word.Word.java", "BodyUseAPI": [], "Fixed commit": "3a7e318ecf2c3ffc59b2aae9302c62f3743aaf72", "Url": "https://api.github.com/repos/iheinze/my-first-repository", "Date": "2018-11-23T20:20:56Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.remark) != null) && ((this.remark.length()) > 0)) { json.put(\"remark\", this.remark); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6675/buggy-version/swedisch-vocab-app.src.main.java.de.isah.vocabtrainer.dictionary.word.Word.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "3a7e318ecf2c3ffc59b2aae9302c62f3743aaf72", "Url": "https://api.github.com/repos/iheinze/my-first-repository", "Date": "2018-11-23T20:20:56Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wwttr.database.DatabaseFacade.getCardsByGameId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cards.size()) < limit) { throw new java.lang.IllegalArgumentException(((((\"only \" + (cards.size())) + \" cards in deck, \") + limit) + \" requested\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4559/buggy-version/src.main.java.com.wwttr.database.DatabaseFacade.java", "BodyUseAPI": ["java.util.ArrayList<com.wwttr.database.DestinationCard>.size()"], "Fixed commit": "5d6a6d7c02bca652215cd6c2e9088a04ff83f489", "Url": "https://api.github.com/repos/woodfields-warriors/server", "Date": "2018-11-01T03:55:13Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wwttr.database.DatabaseFacade.getCardsByGameId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cards.size()) == 0) { throw new com.wwttr.api.NotFoundException(((\"Cards for id \" + gameId) + \" not found\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4559/buggy-version/src.main.java.com.wwttr.database.DatabaseFacade.java", "BodyUseAPI": [], "Fixed commit": "5d6a6d7c02bca652215cd6c2e9088a04ff83f489", "Url": "https://api.github.com/repos/woodfields-warriors/server", "Date": "2018-11-01T03:55:13Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!newCardsToSend) { return listToReturn; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4559/buggy-version/src.main.java.com.wwttr.database.DatabaseFacade.java", "BodyUseAPI": [], "Fixed commit": "5d6a6d7c02bca652215cd6c2e9088a04ff83f489", "Url": "https://api.github.com/repos/woodfields-warriors/server", "Date": "2018-11-01T03:55:13Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sortResult[index]) == null) { return -128; }else { return sortResult[index].level; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2461/buggy-version/app.src.main.java.jp.ac.oit.is.lab261.sotsuken.model.network.WifiScanner.java", "BodyUseAPI": [], "Fixed commit": "28d262543566c4e1830a36807cc0701040c27d7f", "Url": "https://api.github.com/repos/tacchan33/sotsuken", "Date": "2018-12-06T05:55:45Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sortResult[index]) == null) { return \"\"; }else { return sortResult[index].BSSID; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2461/buggy-version/app.src.main.java.jp.ac.oit.is.lab261.sotsuken.model.network.WifiScanner.java", "BodyUseAPI": [], "Fixed commit": "28d262543566c4e1830a36807cc0701040c27d7f", "Url": "https://api.github.com/repos/tacchan33/sotsuken", "Date": "2018-12-06T05:55:45Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sortResult[index]) == null) { return \"\"; }else { return sortResult[index].SSID; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2461/buggy-version/app.src.main.java.jp.ac.oit.is.lab261.sotsuken.model.network.WifiScanner.java", "BodyUseAPI": [], "Fixed commit": "28d262543566c4e1830a36807cc0701040c27d7f", "Url": "https://api.github.com/repos/tacchan33/sotsuken", "Date": "2018-12-06T05:55:45Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["network.Receiver.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (message == null) { actionHandler.handle(actionType, this); }else { actionHandler.handle(message, actionType, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6983/buggy-version/src.main.java.network.Connector.java", "BodyUseAPI": ["network.ActionHandler.handle(java.lang.String,network.ActionType,network.Connector)"], "Fixed commit": "6570ca8c515584a2518cd3d29575c890da66df89", "Url": "https://api.github.com/repos/WilliamC07/Photoshop", "Date": "2018-12-29T03:40:59Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(usuarioLogueado.getIsRoot())) { puntosDeRetiro = crearListaDeNombresDePR(vendedorService.obtenerPuntosDeRetiroDeVendedor(usuarioLogueado.getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2226/buggy-version/src.main.java.chasqui.view.composer.HistorialPedidosColectivosComposer.java", "BodyUseAPI": ["chasqui.model.Vendedor.getId()", "chasqui.services.interfaces.VendedorService.obtenerPuntosDeRetiroDeVendedor(usuarioLogueado.getId())", "chasqui.view.composer.HistorialPedidosColectivosComposer.crearListaDeNombresDePR(vendedorService.obtenerPuntosDeRetiroDeVendedor(usuarioLogueado.getId()))"], "Fixed commit": "002ceedee52b9709f5241764033d0b336366aeb3", "Url": "https://api.github.com/repos/Proyecto-Chasqui/chasqui-backend", "Date": "2018-12-10T17:01:56Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentEvent.equals(target)) { currentEvent = editedEvent; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3160/buggy-version/src.main.java.seedu.address.model.ModelManager.java", "BodyUseAPI": [], "Fixed commit": "0f95503c3091b4c33391f2f6d736b6a18e1aa3ac", "Url": "https://api.github.com/repos/adeeldb/main", "Date": "2018-11-12T03:49:01Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((year >= 1900) && (year < 2000)) { exercises.main.step3 = yearvalues[((year / 10) % 10)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9515/buggy-version/src.exercises.main.java", "BodyUseAPI": [], "Fixed commit": "74b4b0ed0e1d5c19a929f1575f1f355eb8feb6b1", "Url": "https://api.github.com/repos/fRedelaar/Exer", "Date": "2018-12-06T14:34:36Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((year >= 2000) && (year < 2010)) { exercises.main.step3 = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9515/buggy-version/src.exercises.main.java", "BodyUseAPI": [], "Fixed commit": "74b4b0ed0e1d5c19a929f1575f1f355eb8feb6b1", "Url": "https://api.github.com/repos/fRedelaar/Exer", "Date": "2018-12-06T14:34:36Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.value) == null) { this.strValue = null; }else { try { this.strValue = new java.lang.String(this.value, \"UTF-8\"); } catch (java.io.UnsupportedEncodingException ex) { this.strValue = null; com.deem.zkui.vo.LeafBean.logger.error(java.util.Arrays.toString(ex.getStackTrace())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1474/buggy-version/src.main.java.com.deem.zkui.vo.LeafBean.java", "BodyUseAPI": [], "Fixed commit": "0d2fa20f1d3e22d6835107e79d3b760c9d386ad2", "Url": "https://api.github.com/repos/neohope/zkuiboot", "Date": "2018-12-18T02:48:03Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fpt.capstone.wcs.service.Experience.PageOption.getPages()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pages.size()) == 0) { com.fpt.capstone.wcs.service.Experience.Page page = new com.fpt.capstone.wcs.service.Experience.Page(); page.setUrl(userWebsite.getWebsite().getUrl()); page.setType(1); pages.add(page); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9377/buggy-version/src.src.main.java.com.fpt.capstone.wcs.service.Experience.ExperienceImpl.java", "BodyUseAPI": ["java.util.List<com.fpt.capstone.wcs.service.Experience.Page>.add(com.fpt.capstone.wcs.service.Experience.Page)"], "Fixed commit": "01e8abee24fcc3ed84fdd328b1a60125881d10d0", "Url": "https://api.github.com/repos/WolfCanCode/website-checker-system", "Date": "2018-11-22T08:06:48Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (month == maand) { if ((dag - 1) == i) { place = enrolls[j].place; if ((enrolls[j].type) == (Enrolment.ENROLMENT_TYPE.SPORT)) { name = enrolls[j].sport.name; }else { name = enrolls[j].event.naam; } final java.lang.String n = name; session = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3042/buggy-version/HighFid.src.HighFid.Screens.Calendar.CalendarController.java", "BodyUseAPI": [], "Fixed commit": "33fd5ae9aaf6eba569e80b9e655c486caaa7ebff", "Url": "https://api.github.com/repos/BramKel/UCSE_HIFI", "Date": "2018-12-16T22:56:47Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["enrolls[j].day.getDate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dag - 1) == i) { if ((enrolls[j].type) == (Enrolment.ENROLMENT_TYPE.SPORT)) { r = Enrolment.ENROLMENT_TYPE.SPORT; name = enrolls[j].sport.name; }else { r = Enrolment.ENROLMENT_TYPE.EVENT; name = enrolls[j].event.naam; } place = enrolls[j].place; final java.lang.String n = name; session = true; btnDetails.setOnMouseClicked(new javafx.event.EventHandler<javafx.scene.input.MouseEvent>() { @java.lang.Override public void handle(javafx.scene.input.MouseEvent mouseEvent) { _controller.ShowSportDetail(n); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3042/buggy-version/HighFid.src.HighFid.Screens.Calendar.CalendarController.java", "BodyUseAPI": [], "Fixed commit": "33fd5ae9aaf6eba569e80b9e655c486caaa7ebff", "Url": "https://api.github.com/repos/BramKel/UCSE_HIFI", "Date": "2018-12-16T22:56:47Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (en == (Enrolment.ENROLMENT_TYPE.SPORT)) { _controller.ShowSportDetail(n); }else { _controller.ShowEventDetail(n); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3042/buggy-version/HighFid.src.HighFid.Screens.Calendar.CalendarController.java", "BodyUseAPI": [], "Fixed commit": "33fd5ae9aaf6eba569e80b9e655c486caaa7ebff", "Url": "https://api.github.com/repos/BramKel/UCSE_HIFI", "Date": "2018-12-16T22:56:47Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Optional<com.uber.cadence.HistoryEvent>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((event.getEventType()) != (com.uber.cadence.EventType.StartChildWorkflowExecutionInitiated)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2641/buggy-version/src.main.java.com.uber.cadence.internal.replay.DecisionsHelper.java", "BodyUseAPI": [], "Fixed commit": "f443905e4c7dfcd43fc159db625e0950b8ef5adb", "Url": "https://api.github.com/repos/mfateev/uber-java-cadence-client", "Date": "2018-11-27T00:16:05Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastItem) != null) lastItem.getThumbnail().setImageReadyListener(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5006/buggy-version/src.main.java.menagerie.gui.grid.ImageGridCell.java", "BodyUseAPI": [], "Fixed commit": "7afbacff9ba2033d8f792e5959666a8bac6181ec", "Url": "https://api.github.com/repos/iguanastin/menagerie", "Date": "2018-11-20T02:34:04Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tron.protos.Contract.AssetIssueContract.getPrecision()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((precision != 0) && (dbManager.getForkController().pass(ForkBlockVersionConsts.ENERGY_LIMIT))) { assetIssueCapsule.setPrecision(assetIssueContract.getPrecision()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1324/buggy-version/src.main.java.org.tron.core.actuator.AssetIssueActuator.java", "BodyUseAPI": [], "Fixed commit": "157b0c0af4a67fbcc43bf03fbf59f161ac08f454", "Url": "https://api.github.com/repos/tronprotocol/java-tron", "Date": "2018-11-23T03:38:08Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target == null) { target = new org.ballerinalang.model.values.BValueArray(type); for (int i = 0; i < (array.size()); i++) { target.add(i, ((org.ballerinalang.model.values.BRefType<?>) (bValueDeserializer.deserialize(array.getRefValue(i), null)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2409/buggy-version/bvm.ballerina-core.src.main.java.org.ballerinalang.model.util.serializer.providers.bvalue.BValueArrayBValueProvider.java", "BodyUseAPI": [], "Fixed commit": "9943ebcbad2735b97790be174900a5b9857d2caa", "Url": "https://api.github.com/repos/pranavan15/ballerina-lang", "Date": "2018-12-01T10:14:09Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (budgetOptions.equals(\"\")) budgetOptions = \"1,2,3,4\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3404/buggy-version/app.src.main.java.com.just.pickaplace.GetBudget.java", "BodyUseAPI": [], "Fixed commit": "6184fb6716e9f86a91984a4a6b38aa68a9d8b361", "Url": "https://api.github.com/repos/keithatan/PickAPlace", "Date": "2018-12-10T04:38:51Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cuisines.equals(\"\")) cuisines = \"restaurants\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3404/buggy-version/app.src.main.java.com.just.pickaplace.GetBudget.java", "BodyUseAPI": [], "Fixed commit": "6184fb6716e9f86a91984a4a6b38aa68a9d8b361", "Url": "https://api.github.com/repos/keithatan/PickAPlace", "Date": "2018-12-10T04:38:51Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ca.ualberta.t04.medicaltracker.Controller.DataController.getPatient().getProblemList().getProblem(problem_index).getRecordList().getRecord(recordIndex).getLocation()) == null) { android.widget.Toast.makeText(this, \"This record has no location\", Toast.LENGTH_SHORT).show(); }else { android.content.Intent intent = new android.content.Intent(this, ca.ualberta.t04.medicaltracker.Activity.MapViewActivity.class); intent.putExtra(\"problem_index\", problem_index); intent.putExtra(\"record_index\", recordIndex); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4809/buggy-version/app.src.main.java.ca.ualberta.t04.medicaltracker.Activity.Patient.RecordDetailActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,int)", "android.content.Intent.putExtra(java.lang.String,int)"], "Fixed commit": "3ed7e61bae88e2e794025b4a5e83659d518c6afc", "Url": "https://api.github.com/repos/CMPUT301F18T04/MedicalTracker", "Date": "2018-11-28T21:55:45Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTabbedPane.getSelectedIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idx == (-1)) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2251/buggy-version/src.main.java.io.IOAgent.java", "BodyUseAPI": [], "Fixed commit": "cb78b3ed4ba18d66d709413974ab51814fa65f55", "Url": "https://api.github.com/repos/PauloJaime/ser515asu", "Date": "2018-11-28T04:15:18Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTabbedPane.getSelectedIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idx == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2251/buggy-version/src.main.java.io.IOAgent.java", "BodyUseAPI": [], "Fixed commit": "cb78b3ed4ba18d66d709413974ab51814fa65f55", "Url": "https://api.github.com/repos/PauloJaime/ser515asu", "Date": "2018-11-28T04:15:18Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["maud.Maud.getModel().getTarget().getJoint()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (joint.isSelected()) { nameA = joint.endName(JointEnd.A); nameB = joint.endName(JointEnd.B); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8632/buggy-version/src.main.java.maud.tool.JointTool.java", "BodyUseAPI": ["maud.model.cgm.SelectedJoint.endName(JointEnd.B)", "maud.model.cgm.SelectedJoint.endName(JointEnd.A)"], "Fixed commit": "f4a0353ad8da9d72e1de2856f16ddd7d218b8be3", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2018-11-14T17:41:08Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.devadmin.vicky.service.SlackWebhookService.findMentionedUsernameListInTheComment(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mentionedUsernameListInTheComment.size()) > 0) { for (java.lang.String username : mentionedUsernameListInTheComment) { java.lang.String replacedMessage = message.replace(((\"[~\" + username) + \"]\"), (\"@\" + username)); vickyBot.sendDirectMessageToBot(replacedMessage, username); if (!(\"Unassigned\".equals(assignedTo))) { vickyBot.sendDirectMessageToBot(replacedMessage, assignedTo); } } }else { if (!(\"Unassigned\".equals(assignedTo))) { vickyBot.sendDirectMessageToBot(message, assignedTo); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7491/buggy-version/vicky.src.main.java.com.devadmin.vicky.service.SlackWebhookService.java", "BodyUseAPI": [], "Fixed commit": "173b08891db08c4d7a4b149668931f6700cc4727", "Url": "https://api.github.com/repos/devadmin-com/vicky", "Date": "2018-11-22T08:12:12Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"Unassigned\".equals(assignedTo))) { vickyBot.sendDirectMessageToBot(replacedMessage, assignedTo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7491/buggy-version/vicky.src.main.java.com.devadmin.vicky.service.SlackWebhookService.java", "BodyUseAPI": ["com.devadmin.vicky.bot.VickyBot.sendDirectMessageToBot(java.lang.String,java.lang.String)"], "Fixed commit": "173b08891db08c4d7a4b149668931f6700cc4727", "Url": "https://api.github.com/repos/devadmin-com/vicky", "Date": "2018-11-22T08:12:12Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (msg.getData().getBoolean(GroupDataRepository.SUCCESS, false)) { java.util.List<android.example.com.split.data.entity.Group> groups = ((java.util.List<android.example.com.split.data.entity.Group>) (msg.getData().getSerializable(GroupDataRepository.GROUP_LIST))); getRecyclerAdapter().getDataset().addAll(groups); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7844/buggy-version/app.src.main.java.android.example.com.split.ui.tabfragment.GroupsTabFragment.java", "BodyUseAPI": ["android.os.Message.getData()", "msg.getData().getSerializable(GroupDataRepository.GROUP_LIST)"], "Fixed commit": "2424cdb4392a51b7866e8309191851f8f45d09e3", "Url": "https://api.github.com/repos/fongv1/Split", "Date": "2018-11-28T22:08:32Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.fiveguys.cs2340.drackr.UserAuthenticator.preferences) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2332/buggy-version/app.src.main.java.com.fiveguys.cs2340.drackr.UserAuthenticator.java", "BodyUseAPI": [], "Fixed commit": "43621e4428d968c023a537ba598a097d82c77a8b", "Url": "https://api.github.com/repos/JValldejuli/drackr", "Date": "2018-11-07T19:33:43Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Gradebook.convertStringToDate(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (classEndDate.after(new java.util.Date())) { Gradebook.tabbedPane.addTab(className, null, Gradebook.createCurrentClassTab(className, classId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3667/buggy-version/src.Gradebook.java", "BodyUseAPI": [], "Fixed commit": "06ad4c32f8850dca6c0dd0469f938a32816af812", "Url": "https://api.github.com/repos/rdeprey/cmsc495-gradebook", "Date": "2018-11-25T23:31:11Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game.Level.getPlayer().getShotgun()) == false) { if ((shotgun) == null) shotgun = new game.powerUp.Shotgun(new engine.core.Transform(getTransform().getPosition()), false); shotgun.update(delta); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8734/buggy-version/cheetah1.src.game.enemies.NaziSergeant.java", "BodyUseAPI": [], "Fixed commit": "29d32d3ce116fb16186ff613b319bbc21aba23b4", "Url": "https://api.github.com/repos/CMario210/cheetah-engine", "Date": "2018-12-05T17:54:00Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game.Level.getPlayer().getShotgun()) == false) shotgun.render(shader, renderingEngine);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8734/buggy-version/cheetah1.src.game.enemies.NaziSergeant.java", "BodyUseAPI": [], "Fixed commit": "29d32d3ce116fb16186ff613b319bbc21aba23b4", "Url": "https://api.github.com/repos/CMario210/cheetah-engine", "Date": "2018-12-05T17:54:00Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game.Level.getPlayer().getMachinegun()) == false) machineGun.render(shader, renderingEngine);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8734/buggy-version/cheetah1.src.game.enemies.SsSoldier.java", "BodyUseAPI": [], "Fixed commit": "29d32d3ce116fb16186ff613b319bbc21aba23b4", "Url": "https://api.github.com/repos/CMario210/cheetah-engine", "Date": "2018-12-05T17:54:00Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game.Level.getPlayer().getMachinegun()) == false) { if ((machineGun) == null) machineGun = new game.powerUp.Machinegun(new engine.core.Transform(getTransform().getPosition()), false); machineGun.update(delta); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8734/buggy-version/cheetah1.src.game.enemies.SsSoldier.java", "BodyUseAPI": [], "Fixed commit": "29d32d3ce116fb16186ff613b319bbc21aba23b4", "Url": "https://api.github.com/repos/CMario210/cheetah-engine", "Date": "2018-12-05T17:54:00Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((keysPressed.contains(\"a\")) && (keysPressed.contains(\"d\"))) { if ((keysPressed.indexOf(\"a\")) < (keysPressed.indexOf(\"d\"))) { player1.moveX(false); }else { player1.moveX(true); } }else { if (keysPressed.contains(\"a\")) { player1.moveX(true); java.lang.System.out.println(\"left\"); }else if (keysPressed.contains(\"d\")) { player1.moveX(false); }else { player1.speed.setX(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8082/buggy-version/src.composantsmap.Map.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.indexOf(java.lang.String)", "java.util.ArrayList<java.lang.String>.contains(java.lang.String)", "java.util.ArrayList<java.lang.String>.indexOf(java.lang.String)", "java.util.ArrayList<java.lang.String>.contains(java.lang.String)"], "Fixed commit": "6b4faed5ef35a5c97c25dae417040acc1e039c34", "Url": "https://api.github.com/repos/AyoubBouisri/StickQuibble", "Date": "2018-12-29T03:38:43Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isValid(block.getType()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7393/buggy-version/src.main.java.com.griefcraft.modules.doors.DoorsModule.java", "BodyUseAPI": [], "Fixed commit": "64e8a41f02f769dfbf6ecd969a2a09ba14c4dd23", "Url": "https://api.github.com/repos/Brokkonaut/LWCEntityLocking", "Date": "2018-11-16T18:01:03Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((createUpdateEventRequest.getFinalTimeId()) != null) { event.setFinalTime(timeDAO.findTimeById(createUpdateEventRequest.getFinalTimeId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2817/buggy-version/src.main.java.rest.resources.manager.EventManager.java", "BodyUseAPI": ["rest.request.CreateUpdateEventRequest.getFinalTimeId()", "rest.resources.manager.Event.setFinalTime(timeDAO.findTimeById(createUpdateEventRequest.getFinalTimeId()))", "rest.resources.manager.ITimeDAO.findTimeById(createUpdateEventRequest.getFinalTimeId())"], "Fixed commit": "fa755d02ce9c95c4739ea4b2c004ecfc8db42fc7", "Url": "https://api.github.com/repos/sahil-here/lunchon-rest", "Date": "2018-12-10T05:58:34Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((createUpdateEventRequest.getFinalRestaurantId()) != null) { event.setFinalRestaurant(restaurantDAO.findRestautantById(createUpdateEventRequest.getFinalRestaurantId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2817/buggy-version/src.main.java.rest.resources.manager.EventManager.java", "BodyUseAPI": ["rest.request.CreateUpdateEventRequest.getFinalRestaurantId()", "rest.resources.manager.Event.setFinalRestaurant(restaurantDAO.findRestautantById(createUpdateEventRequest.getFinalRestaurantId()))", "rest.resources.manager.IRestaurantDAO.findRestautantById(createUpdateEventRequest.getFinalRestaurantId())"], "Fixed commit": "fa755d02ce9c95c4739ea4b2c004ecfc8db42fc7", "Url": "https://api.github.com/repos/sahil-here/lunchon-rest", "Date": "2018-12-10T05:58:34Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((createUpdateEventRequest.getFinalCuisineId()) != null) { event.setFinalCuisine(cuisineDAO.findCuisineById(createUpdateEventRequest.getFinalCuisineId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2817/buggy-version/src.main.java.rest.resources.manager.EventManager.java", "BodyUseAPI": ["rest.resources.manager.Event.setFinalCuisine(cuisineDAO.findCuisineById(createUpdateEventRequest.getFinalCuisineId()))", "rest.request.CreateUpdateEventRequest.getFinalCuisineId()", "rest.resources.manager.ICuisineDAO.findCuisineById(createUpdateEventRequest.getFinalCuisineId())"], "Fixed commit": "fa755d02ce9c95c4739ea4b2c004ecfc8db42fc7", "Url": "https://api.github.com/repos/sahil-here/lunchon-rest", "Date": "2018-12-10T05:58:34Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vitalypanov.phototracker.utils.Utils.isNull(context)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7909/buggy-version/app.src.main.java.vitalypanov.phototracker.utils.MediaScannerUtils.java", "BodyUseAPI": [], "Fixed commit": "385100bc77c7b3272410bcc642e30015a6ac4b63", "Url": "https://api.github.com/repos/panovvitalik/PhotoTracker", "Date": "2018-11-05T18:14:28Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (passwordMap.get(user).equals(getPasswordHash(password))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/563/buggy-version/week6.dictionaryattack.DictionaryAttack.java", "BodyUseAPI": [], "Fixed commit": "a6fa4b1a75aec57f7d74cdbb23f73d07ea63f313", "Url": "https://api.github.com/repos/kmeurink/software-systems", "Date": "2018-12-20T10:56:41Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((toks.length) < 2) java.lang.System.out.println(\"Usage: (D)ata [(c)ounts | (d)ays | (r)evenue]\"); else viewData(toks[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6257/buggy-version/Project.src.Owner.java", "BodyUseAPI": ["Owner.viewData(java.lang.String)"], "Fixed commit": "2453a9cc863bf3b589209ed4cc61d564eccacc0c", "Url": "https://api.github.com/repos/stbradle/csc365Labs", "Date": "2018-12-09T02:38:04Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enable) { if (options.hasKey(\"when\")) { if (\"always\".equals(options.getString(\"when\"))) { this.notificationClose = notificationClose.ALWAYS; }else if (\"paused\".equals(options.getString(\"when\"))) { this.notificationClose = notificationClose.PAUSED; }else { this.notificationClose = notificationClose.NEVER; } } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5175/buggy-version/android.src.main.java.com.tanguyantoine.react.MusicControlModule.java", "BodyUseAPI": [], "Fixed commit": "bf70b02c68e702e2d08957e77ea9527968ff67ff", "Url": "https://api.github.com/repos/tanguyantoine/react-native-music-control", "Date": "2018-12-06T11:51:52Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasCachedData) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2849/buggy-version/iotdb.src.main.java.cn.edu.tsinghua.iotdb.queryV2.reader.sequence.SealedTsFilesReader.java", "BodyUseAPI": [], "Fixed commit": "bca33fc26c0f61f07bb64c9169f394ee9effd66c", "Url": "https://api.github.com/repos/thulab/iotdb", "Date": "2018-12-18T13:21:54Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((soleilManquant) >= 1) typePrio = Ressource.type.SOLEIL; else typePrio = Ressource.type.OR;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9873/buggy-version/src.main.java.bot.AubotV2.src.AubotV2.java", "BodyUseAPI": [], "Fixed commit": "b3238e51dfabc17c894ac2554674f99ae5db628c", "Url": "https://api.github.com/repos/LucasAubron/PS5-18-19-DiceForge-EquipeC", "Date": "2018-12-10T14:30:54Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) { for (int i = 0; i < (data.length); i++) { payload.pushInt(data[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4052/buggy-version/android.RCTChirpConnectModule.java", "BodyUseAPI": ["com.facebook.react.bridge.WritableArray.pushInt(byte)"], "Fixed commit": "670164bff13a24c788630ceb70f550519c05cb1c", "Url": "https://api.github.com/repos/chirp/chirp-react-native", "Date": "2018-11-01T11:02:53Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStickyHeaderLayoutParams) == null) { addView(mStickyViewHolder.itemView, (i + 1)); }else { addView(mStickyViewHolder.itemView, (i + 1), mStickyHeaderLayoutParams); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3420/buggy-version/indexablerecyclerview.src.main.java.me.yokeyword.indexablerv.IndexableLayout.java", "BodyUseAPI": [], "Fixed commit": "917d4c02c3711bafa246c1b503c8a7cda333fe5f", "Url": "https://api.github.com/repos/luckyandyzhang/IndexableRecyclerView", "Date": "2018-12-04T09:15:09Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fsryan.forsuredb.migration.MigrationSet.findTableByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (table == null) { throw new java.lang.IllegalStateException((((\"Table '\" + (tableName)) + \"' not found; db_version: \") + (currentMigrationSet.dbVersion()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6105/buggy-version/forsuredbapi.src.main.java.com.fsryan.forsuredb.api.staticdata.ParseHandler.java", "BodyUseAPI": [], "Fixed commit": "8bd1b0a3fa48fcbc3894a9484b7726db85207367", "Url": "https://api.github.com/repos/ryansgot/forsuredbcompiler", "Date": "2018-12-01T20:58:03Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeThread) != null) timeThread.interrupt();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3059/buggy-version/app.src.main.java.tw.org.cic.tracking_mobile.TrackingService.java", "BodyUseAPI": [], "Fixed commit": "9eaa47647bd46af237c17529b5a4dc7681bfdf15", "Url": "https://api.github.com/repos/IoTtalk/Mobile_Morsensor", "Date": "2018-11-26T09:13:17Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nucleus.shader.ShaderType.getFromType(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((t.index) >= (source.length)) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1228/buggy-version/graphics-by-opengl-j2se.src.main.java.com.nucleus.shader.GenericShaderProgram.java", "BodyUseAPI": [], "Fixed commit": "40f308e7f482d3fe7225255f510dfbb429ee5f7a", "Url": "https://api.github.com/repos/rsahlin/graphics-by-opengl", "Date": "2018-12-06T12:01:03Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { button.setTextColor(getResources().getColor(R.color.negro)); button.setBackgroundColor(getResources().getColor(R.color.blanco)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8563/buggy-version/app.src.main.java.es.uniovi.interactive_cubes.fragments.RankingFragment.java", "BodyUseAPI": [], "Fixed commit": "3914394272edd5181ed24d837556e129560a37ab", "Url": "https://api.github.com/repos/saritagrimal2/interactive-cubes", "Date": "2018-12-10T12:30:57Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (currentGene.length())) { flag = false; mutateCount = -1; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2012/buggy-version/MinimumMutations.src.com.revature.mutations.MinimumMutations.java", "BodyUseAPI": [], "Fixed commit": "01265e3b1d62942727c31ec4c8724c74feb0837d", "Url": "https://api.github.com/repos/1810Oct29SPARK/exercise-submissions", "Date": "2018-12-03T17:26:57Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.contains(\"Zpomaleni: \")) { s = net.md_5.bungee.api.ChatColor.stripColor(s); s = s.replace(\"Zpomaleni: \", \"\"); s = s.replace(\"%\", \"\"); int pos = java.lang.Integer.parseInt(s); pos += (new java.util.Random().nextInt(2)) - (java.lang.Math.floor(new java.util.Random().nextDouble())); lore.set(index, (((((net.md_5.bungee.api.ChatColor.RED) + \"Zpomaleni: \") + (net.md_5.bungee.api.ChatColor.WHITE)) + pos) + \"%\")); applied = true; org.bukkit.inventory.meta.ItemMeta m = e.getCurrentItem().getItemMeta(); m.setLore(lore); e.getCurrentItem().setItemMeta(m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5886/buggy-version/Miniplugin.src.me.Logaaan.mini.Main.java", "BodyUseAPI": ["net.md_5.bungee.api.ChatColor.stripColor(java.lang.String)"], "Fixed commit": "c2ed31f89d8fbd8f4ebcf8ce95d5b09b11b6a2c1", "Url": "https://api.github.com/repos/LoganTheOverlord/Miniplugin", "Date": "2018-11-28T11:37:59Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.contains(\"Zapaleni: \")) { s = net.md_5.bungee.api.ChatColor.stripColor(s); s = s.replace(\"Zapaleni: \", \"\"); s = s.replace(\"%\", \"\"); int pos = java.lang.Integer.parseInt(s); pos += (new java.util.Random().nextInt(2)) - (java.lang.Math.floor(new java.util.Random().nextDouble())); lore.set(index, (((((net.md_5.bungee.api.ChatColor.RED) + \"Zapaleni: \") + (net.md_5.bungee.api.ChatColor.WHITE)) + pos) + \"%\")); applied = true; org.bukkit.inventory.meta.ItemMeta m = e.getCurrentItem().getItemMeta(); m.setLore(lore); e.getCurrentItem().setItemMeta(m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5886/buggy-version/Miniplugin.src.me.Logaaan.mini.Main.java", "BodyUseAPI": ["net.md_5.bungee.api.ChatColor.stripColor(java.lang.String)"], "Fixed commit": "c2ed31f89d8fbd8f4ebcf8ce95d5b09b11b6a2c1", "Url": "https://api.github.com/repos/LoganTheOverlord/Miniplugin", "Date": "2018-11-28T11:37:59Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((gameSpan) - (time)) < (bank.getMaturity())) { javax.swing.JLabel sorry = new javax.swing.JLabel(\"*** Too close to maturity to borrow capital! ***\"); contentPane.add(new javax.swing.JLabel(\"\\n\")); contentPane.add(sorry); }else { javax.swing.JLabel capital = new javax.swing.JLabel((((\"\\t\\t*** Your Capital:\" + (currency)) + (player.getCapital())) + \" ***\")); javax.swing.JLabel title = new javax.swing.JLabel(\"\\t\\t*** Bank Loan Terms ***\"); javax.swing.JLabel terms = new javax.swing.JLabel(((((((\"\\t\\tInterest Rate: \" + (100 * (bank.getRate()))) + \"%, Maturity: \") + (bank.getMaturity())) + \" years. Each bond is \") + (currency)) + \"1000.\")); javax.swing.JTextField quantity = new javax.swing.JTextField(\"1\"); quantity.setMaximumSize(new java.awt.Dimension(300, 30)); javax.swing.JButton borrow = new javax.swing.JButton(\"Borrow\"); borrow.addActionListener(new java.awt.event.ActionListener() { @java.lang.Override public void actionPerformed(java.awt.event.ActionEvent e) { int quant = 0; try { quant = java.lang.Integer.parseInt(quantity.getText()); } catch (java.lang.Exception x) { } if (quant < 1) { javax.swing.JOptionPane.showMessageDialog(null, \"Invalid quantity.\"); }else { player.setCapital(((player.getCapital()) + (1000 * quant))); bank.addPayment(((time) + (bank.getMaturity())), bank.computePayment((1000 * quant))); uiopen = false; ui.dispatchEvent(new java.awt.event.WindowEvent(ui, java.awt.event.WindowEvent.WINDOW_CLOSING)); bankUI(); } } }); contentPane.add(new javax.swing.JLabel(\"\\n\")); contentPane.add(capital); contentPane.add(title); contentPane.add(terms); contentPane.add(quantity); contentPane.add(borrow); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5151/buggy-version/game.src.FullGame.java", "BodyUseAPI": ["javax.swing.JButton.addActionListener(java.awt.event.ActionListener)", "Bank.computePayment(int)", "Bank.getRate()", "Bank.getMaturity()", "Bank.addPayment(((time) + (bank.getMaturity())),bank.computePayment((1000 * quant)))", "Bank.getMaturity()"], "Fixed commit": "f9764079ca77d57dbdd899d2b5a48f034d411b12", "Url": "https://api.github.com/repos/ama291/EnergyFarm", "Date": "2018-12-02T22:01:18Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (de.exceptionflug.protocolize.ProtocolizePlugin.isExceptionCausedByProtocolize(cause)) { net.md_5.bungee.api.ProxyServer.getInstance().getLogger().log(java.util.logging.Level.SEVERE, \"[Protocolize] Exception caught in encoder.\", cause); }else { super.exceptionCaught(ctx, cause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1352/buggy-version/protocolize-plugin.src.main.java.de.exceptionflug.protocolize.netty.ProtocolizeEncoderChannelHandler.java", "BodyUseAPI": ["io.netty.handler.codec.MessageToMessageEncoder<net.md_5.bungee.protocol.DefinedPacket>.exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)", "net.md_5.bungee.api.ProxyServer.getInstance().getLogger().log(java.util.logging.Level,java.lang.String,java.lang.Throwable)"], "Fixed commit": "931a37233619857479f7c86a6cb358494e98e429", "Url": "https://api.github.com/repos/Exceptionflug/protocolize", "Date": "2018-11-07T18:00:07Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kongla.storeapp.OrderIdMar.getOrderStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (Orderstatus.matches(\"none\")) { key.add(d.getKey()); productID.add(m.productID); farmID.add(m.getFarmID()); buyerID.add(m.getBuyerID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2017/buggy-version/app.src.main.java.com.kongla.storeapp.basketPrePro.java", "BodyUseAPI": [], "Fixed commit": "310a1186524a22371312589111d87dba828d0a1d", "Url": "https://api.github.com/repos/Vinitchavat/farmerstore", "Date": "2018-11-24T15:44:16Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.GetFlagInstanceAtLocation(lastLocation, player)) != null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9735/buggy-version/src.me.ryanhamshire.GPFlags.FlagDef_AllowPvP.java", "BodyUseAPI": [], "Fixed commit": "a2026e8cd4a45591e1478d5cf28b11faf6b565f9", "Url": "https://api.github.com/repos/arboriginal/GriefPreventionFlags", "Date": "2018-11-26T00:01:44Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (descriptionPathRoot == null) { java.lang.System.err.println(\"returning null descriptionPathRoot\"); }else { java.lang.System.err.println((\"returning \" + (descriptionPathRoot.toPathString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/547/buggy-version/src.tailor.editor.DescriptionTreeView.java", "BodyUseAPI": ["java.io.PrintStream.println((\"returning \" + (descriptionPathRoot.toPathString())))", "tailor.description.Description.toPathString()"], "Fixed commit": "b496d322f88ac0b319b0a117bc4392644ef7b559", "Url": "https://api.github.com/repos/gilleain/tailor", "Date": "2018-11-16T01:20:45Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (path == null) { java.lang.System.err.println(((\"adding path \" + name) + \" null\")); }else { java.lang.System.err.println((((\"adding path \" + name) + \" \") + (path.toPathString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/547/buggy-version/src.tailor.datasource.xml.PathXmlHandler.java", "BodyUseAPI": ["java.io.PrintStream.println((((\"adding path \" + name) + \" \") + (path.toPathString())))", "tailor.description.Description.toPathString()"], "Fixed commit": "b496d322f88ac0b319b0a117bc4392644ef7b559", "Url": "https://api.github.com/repos/gilleain/tailor", "Date": "2018-11-16T01:20:45Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tailor.editor.ResidueDiagram.reverseLookup(tailor.description.AtomDescription)", "tailor.editor.ResidueDiagram.reverseLookup(tailor.description.AtomDescription)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((donor == null) || (acceptor == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/547/buggy-version/src.tailor.editor.ResidueDiagram.java", "BodyUseAPI": [], "Fixed commit": "b496d322f88ac0b319b0a117bc4392644ef7b559", "Url": "https://api.github.com/repos/gilleain/tailor", "Date": "2018-11-16T01:20:45Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item == null) { throw new java.lang.IllegalArgumentException(\"Argument can not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3155/buggy-version/src.SAP.java", "BodyUseAPI": [], "Fixed commit": "d3443c0aac75f842abaac1b8bbac1b7a5433ff03", "Url": "https://api.github.com/repos/GargoyleLizy/Coursera_Algorithm", "Date": "2018-11-28T13:46:23Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (list == null) { userArrayList = list.getUsers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6938/buggy-version/app.src.main.java.com.example.loggerdoc.UserList.java", "BodyUseAPI": ["com.example.loggerdoc.UserList.getUsers()"], "Fixed commit": "a4ea7837fde5bacf71914ccd8d2115e78e1017d4", "Url": "https://api.github.com/repos/MultiTrackDrifting/LoggerDoc", "Date": "2018-11-18T22:50:10Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openpaas.ieda.deploy.web.information.manifest.dao.ManifestDAO.selectManifestInfoByDeployName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (vo != null) { if (vo.getIaas().equals(request.getParameter(\"iaas\"))) { throw new org.openpaas.ieda.common.exception.CommonException(\"conflict.manifest.exception\", \"\ud574\ub2f9 Manifest\uc758 \ubc30\ud3ec\uba85\uc740 \uc774\ubbf8 \uc874\uc7ac\ud569\ub2c8\ub2e4. \ud655\uc778\ud574\uc8fc\uc138\uc694.\", org.springframework.http.HttpStatus.CONFLICT); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7264/buggy-version/OPENPAAS-IEDA-DEPLOY-SERVICE.src.main.java.org.openpaas.ieda.deploy.web.information.manifest.service.ManifestService.java", "BodyUseAPI": ["vo.getIaas().equals(request.getParameter(\"iaas\"))", "org.openpaas.ieda.deploy.web.information.manifest.dao.ManifestVO.getIaas()"], "Fixed commit": "8b35dbfd5798ce76a74762718deb50a2da7dec0b", "Url": "https://api.github.com/repos/PaaS-TA/OPENPAAS-IEDA-WEB-v4.0", "Date": "2018-04-23T08:19:30Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (answer.startsWith(\"0_\")) { answer = \"0\"; }else if ((answer.indexOf(\"_0\")) == 1) { answer = java.lang.Integer.toString(((intFrac[0]) / (intFrac[1]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8540/buggy-version/FracCalc.src.fracCalc.FracCalc.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "d9ccd0e69660ea386d5477d74fdd5aa2e8c96d03", "Url": "https://api.github.com/repos/nicoleleleleon/FracCalc", "Date": "2018-11-29T17:49:48Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((num1 < 0) || (num2 < 0)) { answer *= -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8540/buggy-version/FracCalc.src.fracCalc.FracCalc.java", "BodyUseAPI": [], "Fixed commit": "d9ccd0e69660ea386d5477d74fdd5aa2e8c96d03", "Url": "https://api.github.com/repos/nicoleleleleon/FracCalc", "Date": "2018-11-29T17:49:48Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < (data.size())) { models.MailStatisticsJson newEntry = new models.MailStatisticsJson(); newEntry.id = i; newEntry.droppedCount = data.get(i).getDropCount(); newEntry.forwardedCount = data.get(i).getForwardCount(); newEntry.fromDomain = data.get(i).getKey().getFromDomain(); jsonData.add(newEntry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9621/buggy-version/xcmailr-webapp.src.main.java.controllers.AdminHandler.java", "BodyUseAPI": ["java.util.List<models.MailStatistics>.get(int)", "java.util.List<models.MailStatistics>.get(int)", "data.get(i).getKey().getFromDomain()", "java.util.List<models.MailStatistics>.get(int)", "data.get(i).getKey()", "data.get(i).getForwardCount()", "data.get(i).getDropCount()"], "Fixed commit": "63d6ffcdc3f31900f6f476db072d156dfb428e78", "Url": "https://api.github.com/repos/Xceptance/XCMailr", "Date": "2018-12-19T13:33:30Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((properties.getDefaultLabel()) != null) { repository.setDefaultLabel(properties.getDefaultLabel()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3009/buggy-version/spring-cloud-config-server.src.main.java.org.springframework.cloud.config.server.environment.NativeEnvironmentRepositoryFactory.java", "BodyUseAPI": ["org.springframework.cloud.config.server.config.ConfigServerProperties.getDefaultLabel()", "org.springframework.cloud.config.server.environment.NativeEnvironmentRepository.setDefaultLabel(properties.getDefaultLabel())"], "Fixed commit": "cabc55469b49a0d1c852b3437ad99f947610f3f2", "Url": "https://api.github.com/repos/spring-cloud/spring-cloud-config", "Date": "2018-11-12T17:22:22Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.stage.FileChooser.showOpenDialog(javafx.stage.Stage)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (f != null) { try { javafx.scene.image.Image img = new javafx.scene.image.Image(new java.io.FileInputStream(f)); images.add(img); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); } catch (java.lang.SecurityException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7529/buggy-version/src.main.java.view.main.MapView.java", "BodyUseAPI": [], "Fixed commit": "d2e280728a6c64756cc0acef3c8947a8b84ddea9", "Url": "https://api.github.com/repos/MrEMU/MidgardSupportSoftware", "Date": "2018-11-20T20:11:09Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.util.ParamUtil.getLong(javax.portlet.RenderRequest,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (lectureseriesId > 0) portletURL.setParameter(\"lectureseriesId\", lectureseriesId.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4414/buggy-version/de.uhh.l2g.plugins.admin.videos.src.main.java.de.uhh.l2g.plugins.admin.videos.portlet.AdminVideoManagementPortlet.java", "BodyUseAPI": ["javax.portlet.PortletURL.setParameter(java.lang.String,java.lang.String)", "java.lang.Long.toString()"], "Fixed commit": "17c1db81c743f8a6edea962c849ca023e18f4c61", "Url": "https://api.github.com/repos/isturm/modules", "Date": "2018-11-19T15:05:59Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.util.ParamUtil.getLong(javax.portlet.RenderRequest,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (producerId > 0) portletURL.setParameter(\"producerId\", producerId.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4414/buggy-version/de.uhh.l2g.plugins.admin.videos.src.main.java.de.uhh.l2g.plugins.admin.videos.portlet.AdminVideoManagementPortlet.java", "BodyUseAPI": ["javax.portlet.PortletURL.setParameter(java.lang.String,java.lang.String)", "java.lang.Long.toString()"], "Fixed commit": "17c1db81c743f8a6edea962c849ca023e18f4c61", "Url": "https://api.github.com/repos/isturm/modules", "Date": "2018-11-19T15:05:59Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (coordinatorId > 0) portletURL.setParameter(\"coordinatorId\", coordinatorId.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4414/buggy-version/de.uhh.l2g.plugins.admin.videos.src.main.java.de.uhh.l2g.plugins.admin.videos.portlet.AdminVideoManagementPortlet.java", "BodyUseAPI": ["java.lang.Long.toString()", "javax.portlet.PortletURL.setParameter(java.lang.String,java.lang.String)"], "Fixed commit": "17c1db81c743f8a6edea962c849ca023e18f4c61", "Url": "https://api.github.com/repos/isturm/modules", "Date": "2018-11-19T15:05:59Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ref.hasKey(\"junction\")) && ((ref.get(\"junction\")) == \"roundabout\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5546/buggy-version/src.com.kaartgroup.kaartvalidator.validation.NameRefConsistency.java", "BodyUseAPI": [], "Fixed commit": "b585b882b42d4dff936c3e19b184fa17b3db5d55", "Url": "https://api.github.com/repos/taylorsmock/KaartValidatorPlugin", "Date": "2018-12-13T17:21:42Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rs.getObject(i)) != null) { val = rs.getObject(i).toString(); tmp.append(val); }else { val = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1442/buggy-version/src.main.java.supersql.db.SQLManager.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.sql.ResultSet.getObject(int)"], "Fixed commit": "2a190cebcde964a24b4a213692c805fe3f36cd2d", "Url": "https://api.github.com/repos/ToyamaLab/NewSSQL", "Date": "2018-12-19T04:41:52Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.zeppelin.rest.message.SchedulerConfigRequest.fromJson(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((request.getPoolSize()) != null) { try { org.apache.zeppelin.service.AdminService.setSchedulerThreadPoolSize(schedulerId, request.getPoolSize()); } catch (org.quartz.SchedulerException e) { throw new javax.ws.rs.BadRequestException(e.getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2621/buggy-version/zeppelin-server.src.main.java.org.apache.zeppelin.rest.AdminRestApi.java", "BodyUseAPI": ["org.apache.zeppelin.rest.message.SchedulerConfigRequest.getPoolSize()", "org.apache.zeppelin.service.AdminService.setSchedulerThreadPoolSize(java.lang.String,request.getPoolSize())"], "Fixed commit": "889a86acab8bccee9666f89108493c6794acad14", "Url": "https://api.github.com/repos/TinkoffCreditSystems/zeppelin", "Date": "2018-12-15T14:15:43Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resource.getResourceType().equalsIgnoreCase(\"patient\")) { org.endeavourhealth.transform.pcr.FhirToPcrCsvTransformer.LOG.info((((\"Patient \" + (resource.getResourceId())) + \" found when looking for \") + (resourceType.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6900/buggy-version/src.main.java.org.endeavourhealth.transform.pcr.FhirToPcrCsvTransformer.java", "BodyUseAPI": ["org.endeavourhealth.core.database.dal.ehr.models.ResourceWrapper.getResourceId()", "org.slf4j.Logger.info((((\"Patient \" + (resource.getResourceId())) + \" found when looking for \") + (resourceType.toString())))"], "Fixed commit": "7aa11dd5a6b903e84df3ebb1ec8dd319bb5e0168", "Url": "https://api.github.com/repos/endeavourhealth/Transforms", "Date": "2018-11-28T08:01:40Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((byteSize) <= 0) { byteSize = valueToByteArray(value).length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7321/buggy-version/TairaLib.src.main.java.com.gotokeep.keep.taira.ByteArrayNode.java", "BodyUseAPI": [], "Fixed commit": "f464d22273df7af0000aacf5db87d34765420c61", "Url": "https://api.github.com/repos/Keep-Tech/Taira", "Date": "2018-11-15T09:34:36Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.johnnyzen.user.UserService.loginCheck(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (loginState == 4) { message = \"\u64cd\u4f5c\u5931\u8d25\uff0c\u8be5\u8d26\u6237\u88ab\u9501\u5b9a\u6216\u8005\u672a\u6fc0\u6d3b\u3002]\"; }else if (loginState == 5) { message = \"\u64cd\u4f5c\u5931\u8d25\uff0c\u56e0\u767b\u9646\u5df2\u8d85\u6709\u6548\u65f6\u95f4\u800c\u5931\u6548\u3002]\"; }else { message = \"\u64cd\u4f5c\u5931\u8d25\uff0c\u539f\u56e0\u672a\u77e5\u3002]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3637/buggy-version/src.main.java.cn.johnnyzen.user.filter.LoginFilter.java", "BodyUseAPI": [], "Fixed commit": "31dbfe4353678bb21f0f26c79dc860d6cee7487f", "Url": "https://api.github.com/repos/Johnny-ZTSD/forgetWordsNoteBook-Server", "Date": "2018-11-06T14:36:52Z"},
{"Line": "=>687", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCamera) != null) { mCamera.setPreviewCallbackWithBuffer(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9355/buggy-version/cameraview.src.main.java.com.otaliastudios.cameraview.Camera1.java", "BodyUseAPI": [], "Fixed commit": "1360f7fa667ad941c933f50ce226e8914ac26461", "Url": "https://api.github.com/repos/derohimat/CameraView", "Date": "2018-10-29T13:46:53Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(input.isEnd())) { while (isBlank(input.readCh())) input.next(); if (isIdAlphabet(input.readCh())) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7711/buggy-version/Interpreter.src.main.Analysis.java", "BodyUseAPI": ["main.Analysis.isBlank(input.readCh())", "main.Input.next()", "main.Analysis.isIdAlphabet(input.readCh())", "main.Input.readCh()", "main.Input.readCh()"], "Fixed commit": "829041652051053e4d066f7d4e573457392ed1a1", "Url": "https://api.github.com/repos/HarryCheng365/CalculatorLexicalAnalysis", "Date": "2018-11-06T13:52:42Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input.isEnd()) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7711/buggy-version/Interpreter.src.main.Analysis.java", "BodyUseAPI": [], "Fixed commit": "829041652051053e4d066f7d4e573457392ed1a1", "Url": "https://api.github.com/repos/HarryCheng365/CalculatorLexicalAnalysis", "Date": "2018-11-06T13:52:42Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (closed) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9888/buggy-version/foundations.foundation-vertx.src.main.java.org.apache.servicecomb.foundation.vertx.stream.InputStreamToReadStream.java", "BodyUseAPI": [], "Fixed commit": "86c125647328771bc7176987d9ca96ee2ffdd57b", "Url": "https://api.github.com/repos/wujimin/java-chassis", "Date": "2018-10-30T18:56:58Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inner) != null) { android.util.Log.d(\"test\", (\"Inner inject success = \" + (inner.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9844/buggy-version/app.src.main.java.com.trend.lazyinject.demo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "876aa0f4ac9a0eca70ffcd056aacfe35ea6d9d2f", "Url": "https://api.github.com/repos/ganyao114/lazyInject", "Date": "2018-12-26T09:31:10Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((httpResponse.getStatusCode()) == (org.springframework.http.HttpStatus.UNAUTHORIZED)) { throw new bttc.app.exception.AppException(java.lang.String.format(\"User unauthorized: %s\", inputStringBuilder.toString())); }else if ((httpResponse.getStatusCode()) == (org.springframework.http.HttpStatus.BAD_REQUEST)) { throw new bttc.app.exception.AppException(inputStringBuilder.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7387/buggy-version/src.main.java.bttc.app.exception.RestTemplateResponseErrorHandler.java", "BodyUseAPI": ["org.springframework.http.client.ClientHttpResponse.getStatusCode()"], "Fixed commit": "3057ca3b5514efc346ef35c020c0a84de63e949a", "Url": "https://api.github.com/repos/tmokhele/vibeville", "Date": "2018-11-14T11:52:49Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (size > 0) { array = new int[size]; }else { throw new java.lang.RuntimeException(\"Invalid size\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4551/buggy-version/src.main.java.com.hany.tutorials.datastructures.arraylist.ArrayList.java", "BodyUseAPI": [], "Fixed commit": "7302fff4be4f8e0020139831884633243b18383a", "Url": "https://api.github.com/repos/hanmanthreddygurrala/tutorials", "Date": "2018-12-24T03:57:13Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.isFile()) { if (file.getName().equals(fileName)) searched = file; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5166/buggy-version/Utils.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.io.File.getName()"], "Fixed commit": "90d044bd8a2611fa14762f1b6e5a0325ab5bcb06", "Url": "https://api.github.com/repos/UET-INT2204-10-fall-18/lab09-hoangkhoi-uet", "Date": "2018-11-16T15:10:34Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (transaction.getTokenType().equalsIgnoreCase(\"ETH\")) { addEthWithdrawOrder(result, nonceMap, tokenMap, hot, cold, transaction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9271/buggy-version/console.src.main.java.com.mvc.cryptovault.console.service.CommonAddressService.java", "BodyUseAPI": ["com.mvc.cryptovault.console.service.CommonAddressService.addEthWithdrawOrder(java.util.List<com.mvc.cryptovault.console.service.ExportOrders>,java.util.Map<java.lang.String, java.math.BigInteger>,java.util.Map<java.math.BigInteger, com.mvc.cryptovault.console.service.CommonToken>,com.mvc.cryptovault.console.service.AdminWallet,com.mvc.cryptovault.console.service.AdminWallet,com.mvc.cryptovault.console.service.BlockTransaction)"], "Fixed commit": "466c42fb1da60ab3b8be870d58b1295e3178679f", "Url": "https://api.github.com/repos/mvchain/cryptovault-service", "Date": "2018-12-10T08:21:53Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lotInfo.getStockOnHandOfLot()) > 0) { lotinfo = new org.openlmis.report.service.LotInfo(lotInfo.getLotNumber(), lotInfo.getExpiryDate(), lotInfo.getStockOnHandOfLot()); if (overStockProductDtoMap.containsKey(key)) { overStockProductDtoMap.get(key).getLotList().add(lotinfo); }else { org.openlmis.report.service.OverStockProductDto dto = org.openlmis.report.service.OverStockProductDto.of(lotInfo); dto.getLotList().add(lotinfo); overStockProductDtoMap.put(key, dto); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6057/buggy-version/modules.report.src.main.java.org.openlmis.report.service.SimpleTableService.java", "BodyUseAPI": ["org.openlmis.report.service.ProductLotInfo.getLotNumber()", "org.openlmis.report.service.OverStockProductDto.of(org.openlmis.report.service.ProductLotInfo)", "org.openlmis.report.service.ProductLotInfo.getExpiryDate()", "org.openlmis.report.service.ProductLotInfo.getStockOnHandOfLot()"], "Fixed commit": "58fc1fe0abe9b3053198af37b88b569a1445fdde", "Url": "https://api.github.com/repos/SIGLUS/open-lmis", "Date": "2018-11-09T09:41:13Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((word == null) || ((word.length()) < 1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8857/buggy-version/10-Trie.05-Trie-and-Pattern-Match.src.main.java.Dictionary.java", "BodyUseAPI": [], "Fixed commit": "78ea253da2954a8d8727ee8ed51cd4327e8a631f", "Url": "https://api.github.com/repos/gyoomi/Learning-Data-Structures", "Date": "2018-11-09T07:03:36Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (genre != null) { genreFilter = new java.lang.String(genre).replaceAll(\"and\", \"&\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8661/buggy-version/GirlsFlix.src.main.java.com.gfx.controller.IndexController.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "2641785967e02d1d3feb7a7190411d3a9d2f1632", "Url": "https://api.github.com/repos/dlphn/girlsflix", "Date": "2018-11-04T18:41:52Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) < 0) { java.rmi.server.UnicastRemoteObject.unexportObject(clientRemote, true); throw new java.rmi.NotBoundException(\"Erreur \u00e0 la connexion\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8093/buggy-version/src.client.Client.java", "BodyUseAPI": [], "Fixed commit": "de775563b5cbbb376a9c69a4543fd244a28e1f01", "Url": "https://api.github.com/repos/FlashbakDev/ACS_projet", "Date": "2018-11-30T16:49:23Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((u.getUser_mail()) == null) || (u.getUser_mail().equals(\"\"))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9579/buggy-version/app.src.main.java.com.example.administrator.connect.ConnTool.java", "BodyUseAPI": [], "Fixed commit": "a8aabab7958aea573d7a8faf25a620824227b6d5", "Url": "https://api.github.com/repos/unbelievablecj/Onestep", "Date": "2018-12-19T17:44:24Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(qTable.contains(currentState))) { qTable.setQValue(currentState, qTable.problem.randomAction(currentState), 0.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6472/buggy-version/algorithms.qlearning.QLearning.java", "BodyUseAPI": ["qTable.problem.randomAction(algorithms.qlearning.State)", "algorithms.qlearning.QTable.setQValue(algorithms.qlearning.State,qTable.problem.randomAction(currentState),double)"], "Fixed commit": "508f52c1d452b678b49b7294777f4dfc13dc473b", "Url": "https://api.github.com/repos/PatoCodes/Assignment2IS", "Date": "2018-11-29T23:31:18Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.getListType().equals(DeviceStatusNotifyEvent.ListType.DEVICES_LIST)) { deviceVo.setFunctionValuesMap(com.d9lab.ati.whatiesdk.ehome.EHome.getInstance().getmDeviceVos().get(event.getIndex()).getFunctionValuesMap()); }else if (event.getListType().equals(DeviceStatusNotifyEvent.ListType.SHARED_DEVICES_LIST)) { deviceVo.setFunctionValuesMap(com.d9lab.ati.whatiesdk.ehome.EHome.getInstance().getmSharedDeviceVos().get(event.getIndex()).getFunctionValuesMap()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9047/buggy-version/Whatie-Demo-With-Tuya.app.src.main.java.com.whatie.ati.androiddemo.views.DeviceDetailActivity.java", "BodyUseAPI": ["com.d9lab.ati.whatiesdk.ehome.EHome.getInstance().getmDeviceVos().get(event.getIndex()).getFunctionValuesMap()", "event.getListType().equals(DeviceStatusNotifyEvent.ListType.SHARED_DEVICES_LIST)", "com.d9lab.ati.whatiesdk.event.DeviceStatusNotifyEvent.getListType()", "com.d9lab.ati.whatiesdk.ehome.EHome.getInstance().getmSharedDeviceVos().get(event.getIndex())", "com.d9lab.ati.whatiesdk.bean.DeviceVo.setFunctionValuesMap(com.d9lab.ati.whatiesdk.ehome.EHome.getInstance().getmSharedDeviceVos().get(event.getIndex()).getFunctionValuesMap())", "com.d9lab.ati.whatiesdk.bean.DeviceVo.setFunctionValuesMap(com.d9lab.ati.whatiesdk.ehome.EHome.getInstance().getmDeviceVos().get(event.getIndex()).getFunctionValuesMap())", "com.d9lab.ati.whatiesdk.event.DeviceStatusNotifyEvent.getIndex()", "com.d9lab.ati.whatiesdk.ehome.EHome.getInstance().getmDeviceVos().get(event.getIndex())", "com.d9lab.ati.whatiesdk.event.DeviceStatusNotifyEvent.getIndex()", "com.d9lab.ati.whatiesdk.ehome.EHome.getInstance().getmSharedDeviceVos().get(event.getIndex()).getFunctionValuesMap()"], "Fixed commit": "96de671d36ddad53e8742e3e5e492b7ba945bbe3", "Url": "https://api.github.com/repos/ATI-Wuhan/WhatieSDKDemo_Android_with_Tuya", "Date": "2018-11-05T05:16:26Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.getListType().equals(DeviceStatusNotifyEvent.ListType.DEVICES_LIST)) { mDeviceVo.setFunctionValuesMap(com.d9lab.ati.whatiesdk.ehome.EHome.getInstance().getmDeviceVos().get(event.getIndex()).getFunctionValuesMap()); }else if (event.getListType().equals(DeviceStatusNotifyEvent.ListType.SHARED_DEVICES_LIST)) { mDeviceVo.setFunctionValuesMap(com.d9lab.ati.whatiesdk.ehome.EHome.getInstance().getmSharedDeviceVos().get(event.getIndex()).getFunctionValuesMap()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9047/buggy-version/Whatie-Demo-With-Tuya.app.src.main.java.com.whatie.ati.androiddemo.views.FlowColorDetailActivity.java", "BodyUseAPI": ["com.d9lab.ati.whatiesdk.ehome.EHome.getInstance().getmDeviceVos().get(event.getIndex())", "com.d9lab.ati.whatiesdk.event.DeviceStatusNotifyEvent.getIndex()", "com.d9lab.ati.whatiesdk.ehome.EHome.getInstance().getmDeviceVos().get(event.getIndex()).getFunctionValuesMap()", "com.d9lab.ati.whatiesdk.ehome.EHome.getInstance().getmSharedDeviceVos().get(event.getIndex()).getFunctionValuesMap()", "com.d9lab.ati.whatiesdk.event.DeviceStatusNotifyEvent.getIndex()", "com.d9lab.ati.whatiesdk.bean.DeviceVo.setFunctionValuesMap(com.d9lab.ati.whatiesdk.ehome.EHome.getInstance().getmSharedDeviceVos().get(event.getIndex()).getFunctionValuesMap())", "com.d9lab.ati.whatiesdk.ehome.EHome.getInstance().getmSharedDeviceVos().get(event.getIndex())", "com.d9lab.ati.whatiesdk.bean.DeviceVo.setFunctionValuesMap(com.d9lab.ati.whatiesdk.ehome.EHome.getInstance().getmDeviceVos().get(event.getIndex()).getFunctionValuesMap())", "com.d9lab.ati.whatiesdk.event.DeviceStatusNotifyEvent.getListType()", "event.getListType().equals(DeviceStatusNotifyEvent.ListType.SHARED_DEVICES_LIST)"], "Fixed commit": "96de671d36ddad53e8742e3e5e492b7ba945bbe3", "Url": "https://api.github.com/repos/ATI-Wuhan/WhatieSDKDemo_Android_with_Tuya", "Date": "2018-11-05T05:16:26Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Integer.parseInt(mDeviceVo.getFunctionValuesMap().get(Code.FUNCTION_MAP_LOCAL_LIGHTMODE))) == (com.d9lab.ati.whatiesdk.util.Code.LIGHT_MODE_FLOW)) { mHandler.removeCallbacks(mRunnable); btnFlowDetailApply.setClickable(true); com.whatie.ati.androiddemo.utils.ToastUtil.showShort(mContext, R.string.set_flow_success); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9047/buggy-version/Whatie-Demo-With-Tuya.app.src.main.java.com.whatie.ati.androiddemo.views.FlowColorDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "96de671d36ddad53e8742e3e5e492b7ba945bbe3", "Url": "https://api.github.com/repos/ATI-Wuhan/WhatieSDKDemo_Android_with_Tuya", "Date": "2018-11-05T05:16:26Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Class<? extends com.dexels.navajo.parser.FunctionInterface>, java.lang.String>.get(java.lang.Class<? extends com.dexels.navajo.parser.FunctionInterface>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((type == null) || (type.equals(\"any\"))) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7100/buggy-version/core.com.dexels.navajo.core.src.com.dexels.navajo.parser.FunctionInterface.java", "BodyUseAPI": [], "Fixed commit": "649d839d0632c8fe41c24b1f84feea76f195ff51", "Url": "https://api.github.com/repos/Dexels/navajo", "Date": "2018-12-06T12:50:22Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (loginUser != null) avatar = loginUser.getAvatar();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6632/buggy-version/app.src.main.java.app.killddl.killddl.MainActivity.java", "BodyUseAPI": ["app.killddl.killddl.User.getAvatar()"], "Fixed commit": "7d61df33e669bf00d349b46ad74021b3c05866f3", "Url": "https://api.github.com/repos/linrunwei/KillDDL", "Date": "2018-11-20T06:14:17Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (worldIn.isRemote) { player.sendMessage(new net.minecraft.util.text.TextComponentTranslation(\"text.scroll.incorrect_poison\")); com.helion3.darkmythos.Curses.applyMinorPoisonCurse(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3558/buggy-version/src.main.java.com.helion3.darkmythos.items.scrolls.ItemScrollOfBotanicMaturity.java", "BodyUseAPI": [], "Fixed commit": "c205bec53da32e4e70789ed99df1ca4ffbc17b79", "Url": "https://api.github.com/repos/viveleroi/DarkMythos", "Date": "2018-12-14T23:11:17Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Object>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((attendanceModel.getReason()) != null) { vh1.getReason().setText((\"Reason: \" + (attendanceModel.getReason()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/515/buggy-version/app.src.main.java.com.school.edsense_lite.attendance.AttendanceRecyclerViewAdapter.java", "BodyUseAPI": ["com.school.edsense_lite.attendance.GetUserResponseModel.getReason()", "android.widget.TextView.setText((\"Reason: \" + (attendanceModel.getReason())))"], "Fixed commit": "f4433445ab57745099ca2037c8f3a5895a8a986e", "Url": "https://api.github.com/repos/shamsundhar/EdsensLite", "Date": "2018-12-12T18:20:16Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unimi.dsi.fastutil.objects.Object2IntMap<org.apache.uima.cas.text.AnnotationFS>.get(idxTokenOffset.get(annotation.getBegin()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (begin < highestEndTokenPositionObserved) { de.tudarmstadt.ukp.inception.recommendation.imls.opennlp.ner.OpenNlpNerRecommender.LOG.debug(\"Skipping overlapping annotation: [{}-{}, {}]\", begin, (end + 1), label); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/536/buggy-version/inception-imls-opennlp.src.main.java.de.tudarmstadt.ukp.inception.recommendation.imls.opennlp.ner.OpenNlpNerRecommender.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,int,int,java.lang.String)"], "Fixed commit": "d0965d65fbbd57bece95c12d11295ca6d35516af", "Url": "https://api.github.com/repos/inception-project/inception", "Date": "2018-12-11T13:43:58Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((grantTypeCharsWithGo.size()) == maxTypes) { adder.accept(new cz.startnet.utils.pgdiff.loader.jdbc.Privilege(grantee, java.util.Arrays.asList(\"ALL\"), true, false)); }else if (((grantTypeCharsWithoutGo.size()) < maxTypes) && ((grantTypeCharsWithGo.size()) < maxTypes)) { cz.startnet.utils.pgdiff.loader.jdbc.JdbcAclParser.addAllGrants(false, grantTypeCharsWithoutGo, grantee, adder); cz.startnet.utils.pgdiff.loader.jdbc.JdbcAclParser.addAllGrants(true, grantTypeCharsWithGo, grantee, adder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3478/buggy-version/apgdiff.src.main.java.cz.startnet.utils.pgdiff.loader.jdbc.JdbcAclParser.java", "BodyUseAPI": ["cz.startnet.utils.pgdiff.loader.jdbc.JdbcAclParser.addAllGrants(boolean,java.util.List<java.lang.Character>,java.lang.String,java.util.function.Consumer<cz.startnet.utils.pgdiff.loader.jdbc.Privilege>)", "java.util.List<java.lang.Character>.size()"], "Fixed commit": "4c4053c0d43d2f785e4723e6d797bddfa485e393", "Url": "https://api.github.com/repos/pgcodekeeper/pgcodekeeper", "Date": "2018-10-31T09:03:26Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nom.length()) >= 3) { n = deAccent(nom.substring(0, 3).toUpperCase()); }else { n = deAccent(nom.substring(0, 2).toUpperCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2593/buggy-version/src.main.java.geco.LoginGenerator.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "java.lang.String.substring(int,int)", "java.lang.String.toUpperCase()", "geco.LoginGenerator.deAccent(java.lang.String)", "java.lang.String.substring(int,int)", "geco.LoginGenerator.deAccent(java.lang.String)"], "Fixed commit": "fec47671cddc1f226efe07c4d1e533426d84687b", "Url": "https://api.github.com/repos/Josh3456/login-generator", "Date": "2018-11-28T15:21:25Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (m2.find()) { strValue = java.lang.String.format(\"'%s'\", m.group().replace(\"'\", \"\").replace(java.lang.String.format(\"#{%s}\", fieldName), m2.group(1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4201/buggy-version/entity.queryable.src.entity.query.core.SqlParserBase.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String)"], "Fixed commit": "f4cca0cfe66910f03b10f83c71e2c8ae13c32030", "Url": "https://api.github.com/repos/linlurui/entityQueryable", "Date": "2018-11-06T17:55:30Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (productIterator.hasNext()) { return productIterator.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/108/buggy-version/server.openstorefront.openstorefront-plugin.aerospaceimport.src.main.java.edu.usu.sdl.spoon.aerospace.importer.AerospaceReader.java", "BodyUseAPI": ["java.util.Iterator<edu.usu.sdl.spoon.aerospace.importer.model.Product>.next()"], "Fixed commit": "513e31990b71ee7923bbcea63063363d5e733323", "Url": "https://api.github.com/repos/di2e/openstorefront", "Date": "2018-12-10T22:18:15Z"},
{"Line": "=>726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((paging) != null) pgIndex = (row >= 0) ? row % (paging.getPageSize()) : 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/703/buggy-version/zkwebui.WEB-INF.src.org.adempiere.webui.component.GridTabRowRenderer.java", "BodyUseAPI": [], "Fixed commit": "9ee2319f51d2fb517ebca9f4b5639b9b0897e5ab", "Url": "https://api.github.com/repos/SusanneCalderon/adempiereSusanne", "Date": "2018-08-30T17:46:59Z"},
{"Line": "=>952", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((windowPanel.getToolbar().getCurrentPanel()) != null) windowPanel.getToolbar().getCurrentPanel().afterSave(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/703/buggy-version/zkwebui.WEB-INF.src.org.adempiere.webui.component.GridPanel.java", "BodyUseAPI": ["windowPanel.getToolbar().getCurrentPanel()", "org.adempiere.webui.panel.AbstractADWindowPanel.getToolbar()", "windowPanel.getToolbar().getCurrentPanel().afterSave(boolean)"], "Fixed commit": "9ee2319f51d2fb517ebca9f4b5639b9b0897e5ab", "Url": "https://api.github.com/repos/SusanneCalderon/adempiereSusanne", "Date": "2018-08-30T17:46:59Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (JsonKey.ORGANISATION.equalsIgnoreCase(((java.lang.String) (map.get(JsonKey.OBJECT_TYPE))))) { req.setOperation(BulkUploadActorOperation.ORG_BULK_UPLOAD_BACKGROUND_JOB.getValue()); }else if (JsonKey.USER.equals(((java.lang.String) (map.get(JsonKey.OBJECT_TYPE))))) { req.setOperation(BulkUploadActorOperation.USER_BULK_UPLOAD_BACKGROUND_JOB.getValue()); }else { req.setOperation(ActorOperations.PROCESS_BULK_UPLOAD.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4686/buggy-version/actors.common.src.main.java.org.sunbird.learner.actors.SchedularActor.java", "BodyUseAPI": ["JsonKey.USER.equals(java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.get(JsonKey.OBJECT_TYPE)"], "Fixed commit": "e9547f5492bae70bafd006b59928ea4c01e7bb1b", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-10-31T06:23:24Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (map.containsKey((\"0\" + day1))) { rain1 = map.get((\"0\" + day1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1620/buggy-version/app.src.main.java.com.example.ashi.irrigatedmanager.Level2_4_3_rain3.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "b99231e595c7554c1c3333da8af6c357701df6ad", "Url": "https://api.github.com/repos/AlanShiai/IrrigatedManager", "Date": "2018-12-17T14:15:22Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (map.containsKey((\"0\" + day2))) { rain2 = map.get((\"0\" + day2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1620/buggy-version/app.src.main.java.com.example.ashi.irrigatedmanager.Level2_4_3_rain3.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "b99231e595c7554c1c3333da8af6c357701df6ad", "Url": "https://api.github.com/repos/AlanShiai/IrrigatedManager", "Date": "2018-12-17T14:15:22Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((((baseOrder.mchId) == null) || (com.google.common.base.Strings.isNullOrEmpty(baseOrder.mchOrderId))) || ((baseOrder.money) == null)) || (com.google.common.base.Strings.isNullOrEmpty(baseOrder.payType))) || (com.google.common.base.Strings.isNullOrEmpty(baseOrder.sign))) { return new com.ylli.api.pay.model.Response(\"Invalid arguments\", \"\u53c2\u6570\u4e3a\u7a7a\", baseOrder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6613/buggy-version/src.main.java.com.ylli.api.pay.service.PayService.java", "BodyUseAPI": [], "Fixed commit": "925ff8fccc3dc2c36368f0fb8f3bfa639da301e5", "Url": "https://api.github.com/repos/cryS4tal/alianpay", "Date": "2018-11-30T09:32:45Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (result >= 0) { this.alcohol = a; }else { this.alcohol = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7287/buggy-version/Application.src.main.java.Drink.java", "BodyUseAPI": [], "Fixed commit": "df31b074b51543ea0a2242f1883e19bd17d0b995", "Url": "https://api.github.com/repos/ChristopheSim/Barathon", "Date": "2018-11-18T18:17:07Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tm.getAllCellInfo().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (info instanceof android.telephony.CellInfoGsm) { final android.telephony.CellIdentityGsm identityGsm = ((android.telephony.CellInfoGsm) (info)).getCellIdentity(); LAC = java.lang.String.valueOf(identityGsm.getLac()); cellID = identityGsm.getCid(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2707/buggy-version/app.src.main.java.com.dstewart.telecomproject4.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c621207aeabdc1627396c762480c4cef7ee0cdcd", "Url": "https://api.github.com/repos/pilot538/Telecoms", "Date": "2018-12-11T03:14:28Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tm.getAllCellInfo().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (info instanceof android.telephony.CellInfoLte) { final android.telephony.CellIdentityLte identityLte = ((android.telephony.CellInfoLte) (info)).getCellIdentity(); LAC = \"LTE has no LAC\"; cellID = identityLte.getCi(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2707/buggy-version/app.src.main.java.com.dstewart.telecomproject4.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c621207aeabdc1627396c762480c4cef7ee0cdcd", "Url": "https://api.github.com/repos/pilot538/Telecoms", "Date": "2018-12-11T03:14:28Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tm.getAllCellInfo().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (info instanceof android.telephony.CellInfoCdma) { final android.telephony.CellIdentityCdma identityCdma = ((android.telephony.CellInfoCdma) (info)).getCellIdentity(); LAC = java.lang.String.valueOf(identityCdma.getNetworkId()); cellID = identityCdma.getBasestationId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2707/buggy-version/app.src.main.java.com.dstewart.telecomproject4.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c621207aeabdc1627396c762480c4cef7ee0cdcd", "Url": "https://api.github.com/repos/pilot538/Telecoms", "Date": "2018-12-11T03:14:28Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.zwickau.whz.tweetback.repositories.QuestionRepository.getOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (question != null) { return this.questionRepository.getOne(id); }else { throw new java.lang.RuntimeException(java.lang.String.format(\"The question with ID = %d is not found\", id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8350/buggy-version/src.main.java.de.zwickau.whz.tweetback.servieces.QuestionServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c123f0cea086660fae9b59b63d33dfe1aefe7d6e", "Url": "https://api.github.com/repos/MuratRuslan/hackathon-zwickau", "Date": "2018-11-09T12:48:27Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((vpNew.getRefPrime().getNoRubr().equals(VentilationPrimeService.INDEMNITE_TRAVAIL_NUIT)) || (vpNew.getRefPrime().getNoRubr().equals(VentilationPrimeService.INDEMNITE_TRAVAIL_DJF))) { this.quantite = hS.formatMinutesToStringForEVP((((vpNew.getQuantite().intValue()) * 60) - (vpOld != null ? (vpOld.getQuantite().intValue()) * 60 : 0))); }else this.quantite = hS.formatMinutesToStringForEVP(((vpNew.getQuantite().intValue()) - (vpOld != null ? vpOld.getQuantite().intValue() : 0)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9572/buggy-version/src.main.java.nc.noumea.mairie.ptg.dto.etatsPayeur.PrimesEtatPayeurDto.java", "BodyUseAPI": [], "Fixed commit": "3c1c94e24afa965493cf0f3a65848eb186039f29", "Url": "https://api.github.com/repos/DSI-Ville-Noumea/sirh-ptg-ws", "Date": "2018-12-04T22:34:03Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentValue()) == null) { setCurrentValue(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2997/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.EditGUI.EditGUIButton.java", "BodyUseAPI": [], "Fixed commit": "c83796c029ea8c0f131741dc83b0cba8e2f11d9a", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-12-09T02:16:57Z"},
{"Line": "=>665", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.industry.printer.hardware.LRADCBattery.getPower()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (power >= 33) { mPowerStat.setImageResource(R.drawable.battery0); }else if (power >= 20) { mPowerStat.setImageResource(R.drawable.battery0); }else { mPowerStat.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6733/buggy-version/app.src.main.java.com.industry.printer.ControlTabActivity.java", "BodyUseAPI": [], "Fixed commit": "32b40555e2354ad5a5fe6bae4a5216162981f36c", "Url": "https://api.github.com/repos/kevin-zhaotk/Printer-AS", "Date": "2018-11-19T15:00:26Z"},
{"Line": "=>729", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCamera) != null) { mCamera.setPreviewCallbackWithBuffer(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2001/buggy-version/cameraview.src.main.java.com.otaliastudios.cameraview.Camera1.java", "BodyUseAPI": [], "Fixed commit": "e0c590d0af3ae947a77f3b8fb074f60523ac3318", "Url": "https://api.github.com/repos/derohimat/CameraView", "Date": "2018-11-07T03:52:51Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 16) { newDb.disableWriteAheadLogging(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9313/buggy-version/core.src.main.java.de.danoeh.antennapod.core.storage.PodDBAdapter.java", "BodyUseAPI": [], "Fixed commit": "2ca9b190fc07f295812e3267e4a50187695ab091", "Url": "https://api.github.com/repos/abendebury/AntennaPod", "Date": "2018-12-25T23:33:19Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["claw.ClawX2T.processCommandArgs(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cmd.hasOption(\"ap\")) { xcodeml.util.XmOption.setAddPar(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7219/buggy-version/cx2t.src.claw.ClawX2T.java", "BodyUseAPI": [], "Fixed commit": "ac136eeb376ebae25e41bd522523c5fee5bbc310", "Url": "https://api.github.com/repos/clementval/claw-compiler", "Date": "2018-11-19T13:11:15Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.Field.getXCord()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (xSelected != ((WIDTH) - 1)) { highlightField(this.getNode((ySelected - 1), (xSelected + 1))); highlightField(this.getNode((ySelected + 1), (xSelected + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1279/buggy-version/src.main.java.game.Board.java", "BodyUseAPI": ["game.Board.highlightField(game.Field)", "game.Board.highlightField(game.Field)", "game.Board.getNode(int,int)", "game.Board.getNode(int,int)"], "Fixed commit": "d06c315b9daf073ec2d8124d095ee325a3dfdc98", "Url": "https://api.github.com/repos/MarJack8/ChineseCheckers", "Date": "2018-12-29T21:46:46Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.Field.getXCord()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (xSelected != ((WIDTH) - 1)) { highlightField(this.getNode(ySelected, (xSelected + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1279/buggy-version/src.main.java.game.Board.java", "BodyUseAPI": ["game.Board.getNode(int,int)", "game.Board.highlightField(game.Field)"], "Fixed commit": "d06c315b9daf073ec2d8124d095ee325a3dfdc98", "Url": "https://api.github.com/repos/MarJack8/ChineseCheckers", "Date": "2018-12-29T21:46:46Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dm) != null) dm.dbFinalize();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5445/buggy-version/src.com.Jessy1237.DwarfCraft.DwarfCraft.java", "BodyUseAPI": [], "Fixed commit": "68c496ece6d975daa566892bd4f9ced4ef861a3d", "Url": "https://api.github.com/repos/Jessy1237/DwarfCraft", "Date": "2018-12-20T13:55:05Z"},
{"Line": "=>1040", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isEmpty(obj.getNgayHieulucTu()))) { agreement.setInceptionDate(com.baoviet.agency.utils.DateUtils.str2Date(obj.getNgayHieulucTu())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/320/buggy-version/agency-src.com.baoviet.agency.service.impl.AgreementServiceImpl.java", "BodyUseAPI": ["com.baoviet.agency.web.rest.vm.AgreementYcbhOfflineVM.getNgayHieulucTu()", "com.baoviet.agency.dto.AgreementDTO.setInceptionDate(com.baoviet.agency.utils.DateUtils.str2Date(obj.getNgayHieulucTu()))", "com.baoviet.agency.utils.DateUtils.str2Date(obj.getNgayHieulucTu())"], "Fixed commit": "3faab42b17ecfbc8a75720c9bd6c80f4c2b7a186", "Url": "https://api.github.com/repos/caf3sua/agency-service", "Date": "2018-11-19T07:59:41Z"},
{"Line": "=>1210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((obj.getExpiredDate()) != null) { offline.setNgayHieulucDen(com.baoviet.agency.utils.DateUtils.date2Str(obj.getExpiredDate())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/320/buggy-version/agency-src.com.baoviet.agency.service.impl.AgreementServiceImpl.java", "BodyUseAPI": ["com.baoviet.agency.dto.AgreementDTO.getExpiredDate()", "com.baoviet.agency.web.rest.vm.AgreementYcbhOfflineVM.setNgayHieulucDen(com.baoviet.agency.utils.DateUtils.date2Str(obj.getExpiredDate()))", "com.baoviet.agency.utils.DateUtils.date2Str(obj.getExpiredDate())"], "Fixed commit": "3faab42b17ecfbc8a75720c9bd6c80f4c2b7a186", "Url": "https://api.github.com/repos/caf3sua/agency-service", "Date": "2018-11-19T07:59:41Z"},
{"Line": "=>1043", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isEmpty(obj.getNgayHieulucDen()))) { agreement.setExpiredDate(com.baoviet.agency.utils.DateUtils.str2Date(obj.getNgayHieulucDen())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/320/buggy-version/agency-src.com.baoviet.agency.service.impl.AgreementServiceImpl.java", "BodyUseAPI": ["com.baoviet.agency.utils.DateUtils.str2Date(obj.getNgayHieulucDen())", "com.baoviet.agency.web.rest.vm.AgreementYcbhOfflineVM.getNgayHieulucDen()", "com.baoviet.agency.dto.AgreementDTO.setExpiredDate(com.baoviet.agency.utils.DateUtils.str2Date(obj.getNgayHieulucDen()))"], "Fixed commit": "3faab42b17ecfbc8a75720c9bd6c80f4c2b7a186", "Url": "https://api.github.com/repos/caf3sua/agency-service", "Date": "2018-11-19T07:59:41Z"},
{"Line": "=>1207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((obj.getInceptionDate()) != null) { offline.setNgayHieulucTu(com.baoviet.agency.utils.DateUtils.date2Str(obj.getInceptionDate())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/320/buggy-version/agency-src.com.baoviet.agency.service.impl.AgreementServiceImpl.java", "BodyUseAPI": ["com.baoviet.agency.dto.AgreementDTO.getInceptionDate()", "com.baoviet.agency.web.rest.vm.AgreementYcbhOfflineVM.setNgayHieulucTu(com.baoviet.agency.utils.DateUtils.date2Str(obj.getInceptionDate()))", "com.baoviet.agency.utils.DateUtils.date2Str(obj.getInceptionDate())"], "Fixed commit": "3faab42b17ecfbc8a75720c9bd6c80f4c2b7a186", "Url": "https://api.github.com/repos/caf3sua/agency-service", "Date": "2018-11-19T07:59:41Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (age.isOnOrAfter(mOwnerStartAge)) { age = mOwnerStartAge; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/291/buggy-version/data.src.main.java.com.intelliviz.data.SocialSecurityRules.java", "BodyUseAPI": [], "Fixed commit": "80637971f3d9943251ec9e74fb609799dddfec90", "Url": "https://api.github.com/repos/emuhlestein/RetirementHelper", "Date": "2018-11-14T01:33:02Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target.startsWith(\"/websocket\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6240/buggy-version/jpress.jpress-web-core.src.main.java.io.jpress.core.JHandler.java", "BodyUseAPI": [], "Fixed commit": "7baa0f221a6748dd6cea5842c6b6e1152c690eda", "Url": "https://api.github.com/repos/itsccn/jpress", "Date": "2016-11-07T07:57:43Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (matcher.matches()) { imports.add(matcher.group(1)); }else { pattern = java.util.regex.Pattern.compile(\"Rule\\\\sCompilation\\\\serror\\\\s(\\\\S+)\\\\s+cannot be resolved to a type\"); matcher = pattern.matcher(line); if (matcher.matches()) { imports.add(matcher.group(1)); }else { pattern = java.util.regex.Pattern.compile(\"Unable\\\\sto\\\\sresolve\\\\sObjectType\\\\s\\\\\\'(\\\\S+)\\\\\\'\"); matcher = pattern.matcher(line); if (matcher.matches()) { imports.add(matcher.group(1)); }else { pattern = java.util.regex.Pattern.compile(\"Rule\\\\sCompilation\\\\serror\\\\s(\\\\S+)\\\\s+cannot be resolved\"); matcher = pattern.matcher(line); if (matcher.matches()) { imports.add(matcher.group(1)); }else { pattern = java.util.regex.Pattern.compile(\"(\\\\w+)\\\\s+cannot be resolved\"); matcher = pattern.matcher(line); if (matcher.matches()) { imports.add(matcher.group(1)); }else { pattern = java.util.regex.Pattern.compile(\"Rule\\\\sCompilation\\\\serror\\\\sThe\\\\smethod\\\\sfilter\\\\(Predicate\\\\<\\\\?\\\\ssuper\\\\s(\\\\S+)\\\\>\\\\)\\\\sin\\\\sthe\\\\stype\\\\sStream\\\\<(\\\\S+)\\\\>\\\\s+is\\\\snot\\\\sapplicable.*\"); matcher = pattern.matcher(line); if (matcher.matches()) { imports.add(matcher.group(1)); }else { if (line.contains(\"is not applicable for the arguments\")) { life.genny.App.log.error(line); ruleok = true; } } } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9318/buggy-version/src.main.java.life.genny.App.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "d8a5d7e6fa18e3115cd2621e606d047ad79b1c47", "Url": "https://api.github.com/repos/genny-project/checkrules", "Date": "2018-11-29T03:14:55Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.trim().isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9290/buggy-version/Main.java", "BodyUseAPI": [], "Fixed commit": "5941b0c70f12b05163d0a3cfa2d73633784a029a", "Url": "https://api.github.com/repos/UET-INT2204-11-fall-18/lab10-nguyenlinh-uet", "Date": "2018-11-12T10:46:36Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (role.equals(Role.CUSTOMER)) { return Constants.INDEX; }else { return \"admin\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6813/buggy-version/src.main.java.controller.SessionController.java", "BodyUseAPI": [], "Fixed commit": "e0e656f7c2b2fd360146de2338325076bc669358", "Url": "https://api.github.com/repos/OivindBirk/TechnologyStudyG15", "Date": "2018-11-19T13:05:51Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (categoryFromURL.equals(productCategories.get(i))) { context.setVariable(\"category\", productCategoryDataStore.find((i + 1))); context.setVariable(\"products\", productDataStore.getBy(productCategoryDataStore.find((i + 1)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5297/buggy-version/src.main.java.com.codecool.shop.controller.ProductController.java", "BodyUseAPI": ["com.codecool.shop.dao.ProductCategoryDao.find(int)", "com.codecool.shop.dao.ProductCategoryDao.find(int)", "org.thymeleaf.context.WebContext.setVariable(java.lang.String,productDataStore.getBy(productCategoryDataStore.find((i + 1))))", "org.thymeleaf.context.WebContext.setVariable(java.lang.String,productCategoryDataStore.find((i + 1)))", "com.codecool.shop.dao.ProductDao.getBy(productCategoryDataStore.find((i + 1)))"], "Fixed commit": "5645c3e6473ebbe12e40a030ec6015dcd39e2016", "Url": "https://api.github.com/repos/CodecoolBPoop/oop-java-codecool-shop-peterek", "Date": "2018-11-12T14:58:28Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tile < 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8523/buggy-version/game.GameController.java", "BodyUseAPI": [], "Fixed commit": "bc139bec2b383dec6b7fe857f969e89a5c01ab1f", "Url": "https://api.github.com/repos/Reithger/Mr.Jack", "Date": "2018-12-01T23:41:15Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (session == null) { response.sendRedirect(request.getContextPath()); }else { java.lang.Integer groupId = ((java.lang.Integer) (session.getAttribute(\"groupId\"))); if (groupId == 1) { request.getRequestDispatcher(\"UserController\").forward(request, response); }else if (groupId == 2) { java.lang.Integer suggestionId = java.lang.Integer.parseInt(request.getParameter(\"suggestionId\")); com.jhiltunen.entity.SuggestionBean suggestion = databaseHandler.fetchSuggestionById(suggestionId); request.setAttribute(\"suggestion\", suggestion); request.getRequestDispatcher(\"/WEB-INF/controlgroup/addsuggestionprocedure.jsp\").forward(request, response); }else if (groupId == 3) { request.getRequestDispatcher(\"AdminController\").forward(request, response); }else { response.sendRedirect(request.getContextPath()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/522/buggy-version/SuggestionBox.src.main.java.com.jhiltunen.servlets.ProcedureController.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Fixed commit": "9e1c7f32b068207afbad9ceb085b93691a89db17", "Url": "https://api.github.com/repos/JHiltunen/SuggestionBox", "Date": "2018-11-05T07:03:30Z"},
{"Line": "=>578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (replenishs.isEmpty()) replenishs = getReplenishWithoutBP(\"M_WarehouseSource_ID IS NULL\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8127/buggy-version/base.src.org.compiere.process.ReplenishReport.java", "BodyUseAPI": [], "Fixed commit": "08260907914b0b0c91a6681d2e08d1d1d45b10d8", "Url": "https://api.github.com/repos/erpcya/adempiere", "Date": "2018-11-19T21:32:08Z"},
{"Line": "=>941", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(rural.isSelected())) && (!(sub.isSelected()))) && (!(urban.isSelected()))) { ur = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1861/buggy-version/NorthCountryWild.src.UploadWindow.java", "BodyUseAPI": [], "Fixed commit": "7ef30d77c2fe09e34d4e41eaca2ad6fc5226f984", "Url": "https://api.github.com/repos/NatureUpNorth/North-Country-Wild", "Date": "2018-11-07T20:18:28Z"},
{"Line": "=>934", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((((((!(one.isSelected())) && (!(two.isSelected()))) && (!(three.isSelected()))) && (!(four.isSelected()))) && (!(five.isSelected()))) && (!(six.isSelected()))) && (!(seven.isSelected()))) && (!(eight.isSelected()))) && (!(nine.isSelected()))) { hab = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1861/buggy-version/NorthCountryWild.src.UploadWindow.java", "BodyUseAPI": [], "Fixed commit": "7ef30d77c2fe09e34d4e41eaca2ad6fc5226f984", "Url": "https://api.github.com/repos/NatureUpNorth/North-Country-Wild", "Date": "2018-11-07T20:18:28Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page.contains(\"notfound\")) { page = getFirstMatchDefault(\"src=\\\"([^\\\\s]+issu[^\\\\s]+)\\\"\", data, \"notfound\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1338/buggy-version/app.src.main.java.ar.rulosoft.mimanganu.servers.VerComicsCom.java", "BodyUseAPI": [], "Fixed commit": "f753e400660a6557ef95f0401e9ccb739cc6d439", "Url": "https://api.github.com/repos/raulhaag/MiMangaNu", "Date": "2018-11-23T02:00:00Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["designAnalyzer.inputParser.NetlistParser.retrieveNet(currentLine[1],boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(currentNet.getIsClocknNet())) { currentNet.setSource(currentBlock); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8090/buggy-version/task_1.src.designAnalyzer.inputParser.NetlistParser.java", "BodyUseAPI": ["designAnalyzer.structures.Net.setSource(designAnalyzer.structures.pathElements.blocks.NetlistBlock)"], "Fixed commit": "d5e3f08a761da1f6d31ad5164230f220de1d4ff8", "Url": "https://api.github.com/repos/011000101101/ACE", "Date": "2018-11-28T20:04:11Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(n.getIsClocknNet())) { checkAtLeastOneSource(n); checkAtLeastOneSink(n); if (routingFileProvided) { checkAllSinksRouted(n); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8090/buggy-version/task_1.src.designAnalyzer.consistencyChecker.ConsistencyChecker.java", "BodyUseAPI": ["designAnalyzer.consistencyChecker.ConsistencyChecker.checkAllSinksRouted(designAnalyzer.structures.Net)", "designAnalyzer.consistencyChecker.ConsistencyChecker.checkAtLeastOneSource(designAnalyzer.structures.Net)", "designAnalyzer.consistencyChecker.ConsistencyChecker.checkAtLeastOneSink(designAnalyzer.structures.Net)"], "Fixed commit": "d5e3f08a761da1f6d31ad5164230f220de1d4ff8", "Url": "https://api.github.com/repos/011000101101/ACE", "Date": "2018-11-28T20:04:11Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (categories != null) { for (java.lang.String c : categories) { this.categories.add(c); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4238/buggy-version/BuzzTracker.app.src.main.java.com.example.gourn.buzztracker.Model.LocationEmployee.java", "BodyUseAPI": [], "Fixed commit": "bf641f6efe69bc53e5d6fa01c2079d4550b241f0", "Url": "https://api.github.com/repos/peteherman/cs2340", "Date": "2018-11-09T19:34:38Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.wahlzeit.model.PhotoManager.instance) == null) { org.wahlzeit.model.PhotoManager.instance = new org.wahlzeit.model.PhotoManager(org.wahlzeit.model.PhotoFactory.getInstance()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8566/buggy-version/src.main.java.org.wahlzeit.model.PhotoManager.java", "BodyUseAPI": [], "Fixed commit": "a6804ef2f2a8f24d59225b9fdd91dd527fc5e470", "Url": "https://api.github.com/repos/lunedis/wahlzeit", "Date": "2018-11-12T10:13:28Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item == null) { return javax.ws.rs.core.Response.status(400).entity(\"Error: please specify priority for this search\").build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6572/buggy-version/src.com.youtube.rest.inventory.V2_inventory.java", "BodyUseAPI": [], "Fixed commit": "674b81e642109e4f602d8b2a21bddcf6835da027", "Url": "https://api.github.com/repos/stuartlewis06/com.youtube.rest", "Date": "2018-12-06T13:49:37Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JList.getSelectedValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (p != null) url = new java.io.File(p.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2900/buggy-version/src.main.java.com.fundacionjala.convertor.view.ListFileView.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "636b4f2449bdd8a7d902e3502dc848bcaa603cd4", "Url": "https://api.github.com/repos/jorgeflores742/Convertor-AT08-A", "Date": "2018-11-17T02:49:44Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((infoAsset.getTypeFile()) == null) { }else if (infoAsset.getTypeFile().contains(\"Video\")) { v.getConverting().setTxtName(infoAsset.getNameFile().substring(((infoAsset.getNameFile().lastIndexOf(':')) + 2), infoAsset.getNameFile().lastIndexOf('.'))); dataFiles.getDefaultList().addElement(infoAsset.getTypeFile()); com.fundacionjala.convertor.model.VideoAsset video = new com.fundacionjala.convertor.model.VideoAsset(); video = ((com.fundacionjala.convertor.model.VideoAsset) (infoAsset)); dataFiles.getDefaultList().addElement(video.getFps()); dataFiles.getDefaultList().addElement(video.getAspectRatio()); dataFiles.getDefaultList().addElement(video.getResolution()); dataFiles.getDefaultList().addElement(video.getDuration()); dataFiles.getDefaultList().addElement(video.getVideoCodec()); dataFiles.getDefaultList().addElement(video.getAudioCodec()); }else if (infoAsset.getTypeFile().contains(\"Audio\")) { v.getConverting().setTxtName(infoAsset.getNameFile().substring(((infoAsset.getNameFile().lastIndexOf(':')) + 2), infoAsset.getNameFile().lastIndexOf('.'))); dataFiles.getDefaultList().addElement(infoAsset.getTypeFile()); com.fundacionjala.convertor.model.AudioAsset audio = new com.fundacionjala.convertor.model.AudioAsset(); audio = ((com.fundacionjala.convertor.model.AudioAsset) (infoAsset)); dataFiles.getDefaultList().addElement(audio.getChannels()); dataFiles.getDefaultList().addElement(audio.getAudioCodec()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2900/buggy-version/src.main.java.com.fundacionjala.convertor.controller.SearchController.java", "BodyUseAPI": ["infoAsset.getNameFile().substring(((infoAsset.getNameFile().lastIndexOf(':')) + 2),infoAsset.getNameFile().lastIndexOf('.'))", "infoAsset.getNameFile().lastIndexOf(char)", "infoAsset.getNameFile().lastIndexOf(char)", "com.fundacionjala.convertor.model.Asset.getNameFile()", "com.fundacionjala.convertor.model.Asset.getNameFile()", "com.fundacionjala.convertor.model.Asset.getTypeFile()", "infoAsset.getTypeFile().contains(java.lang.String)", "v.getConverting().setTxtName(infoAsset.getNameFile().substring(((infoAsset.getNameFile().lastIndexOf(':')) + 2), infoAsset.getNameFile().lastIndexOf('.')))", "com.fundacionjala.convertor.model.Asset.getTypeFile()", "dataFiles.getDefaultList().addElement(infoAsset.getTypeFile())", "infoAsset.getNameFile().substring(((infoAsset.getNameFile().lastIndexOf(':')) + 2),infoAsset.getNameFile().lastIndexOf('.'))", "com.fundacionjala.convertor.model.Asset.getNameFile()", "dataFiles.getDefaultList().addElement(infoAsset.getTypeFile())", "com.fundacionjala.convertor.model.Asset.getTypeFile()", "infoAsset.getNameFile().lastIndexOf(char)", "infoAsset.getTypeFile().contains(java.lang.String)", "com.fundacionjala.convertor.model.Asset.getNameFile()", "infoAsset.getNameFile().lastIndexOf(char)", "v.getConverting().setTxtName(infoAsset.getNameFile().substring(((infoAsset.getNameFile().lastIndexOf(':')) + 2), infoAsset.getNameFile().lastIndexOf('.')))", "com.fundacionjala.convertor.model.Asset.getNameFile()", "com.fundacionjala.convertor.model.Asset.getNameFile()", "com.fundacionjala.convertor.model.Asset.getTypeFile()"], "Fixed commit": "636b4f2449bdd8a7d902e3502dc848bcaa603cd4", "Url": "https://api.github.com/repos/jorgeflores742/Convertor-AT08-A", "Date": "2018-11-17T02:49:44Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lobbyid.isPresent()) { it.unical.asde.battleship.game.Lobby current = lobbyService.getLobby(lobbyid.get()); if (((current.getWhoPlays()) != null) && (current.getWhoPlays().equals(user.getUsername()))) { return java.util.Collections.singletonMap(\"turn\", true); }else { return java.util.Collections.singletonMap(\"turn\", false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6923/buggy-version/BattleShip.src.it.unical.asde.battleship.components.controllers.GameController.java", "BodyUseAPI": ["it.unical.asde.battleship.components.services.LobbyService.getLobby(java.lang.Integer)", "java.util.Optional<java.lang.Integer>.get()"], "Fixed commit": "11fc1a3537aefe20f71543184e7a0264a6a56c07", "Url": "https://api.github.com/repos/DenniSpe/BattleShip", "Date": "2018-11-28T09:54:47Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(sub.isSolid)) || ((other.hitbox) == null)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4193/buggy-version/src.Framework.GameObject2.java", "BodyUseAPI": [], "Fixed commit": "b194a56c4cfde887e9fa19f141ff22f24539b06d", "Url": "https://api.github.com/repos/joey101937/JEngine", "Date": "2018-12-24T02:41:36Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (d != null) { d.updateUserObject(u); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3177/buggy-version/server.src.main.java.edu.colostate.cs.cs414.f18.the_other_alex.model.Invite.java", "BodyUseAPI": ["edu.colostate.cs.cs414.f18.the_other_alex.model.Database.updateUserObject(edu.colostate.cs.cs414.f18.the_other_alex.model.User)"], "Fixed commit": "2e0d76a53b373f88c998476641af140b9951138f", "Url": "https://api.github.com/repos/cs414glaad/cs414-f18-001-the-other-alex", "Date": "2018-12-10T02:23:55Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.equals(o)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6477/buggy-version/src.com.mycompany.a3.GameObject.java", "BodyUseAPI": [], "Fixed commit": "fac9c8d903e1a5f3f0648b940473ba06f7a47f63", "Url": "https://api.github.com/repos/RyanSwear/csc133", "Date": "2018-11-26T01:51:51Z"},
{"Line": "=>938", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3069/buggy-version/bytes.src.main.java.net.consensys.cava.bytes.Bytes.java", "BodyUseAPI": [], "Fixed commit": "6f468e1adaae68c606913bc462556d44e4f6aad5", "Url": "https://api.github.com/repos/ConsenSys/cava", "Date": "2018-12-04T02:04:48Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (success) { android.util.Log.v(\"Serializing\", \"Wrote model to file successfully\"); }else { android.util.Log.v(\"Serializing\", \"Failed to write model to file, aborting\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4886/buggy-version/app.src.main.java.kantwonskids.donationtrackerg14b.model.Model.java", "BodyUseAPI": [], "Fixed commit": "fe31857f97027f1d6862cc02220e899c82eaeac4", "Url": "https://api.github.com/repos/KantwonsKids/DonationTracker", "Date": "2018-11-15T22:38:20Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cid == null) || (\"\".equals(cid))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3036/buggy-version/rumo_web.src.main.java.cn.rumoss.web.controller.FmController.java", "BodyUseAPI": [], "Fixed commit": "e6de9115226403e60e79e9dc9ea5de4d2129280f", "Url": "https://api.github.com/repos/Tanijia/rumo_blog", "Date": "2018-11-06T02:49:08Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) != 2) { java.lang.System.out.println(\"USAGE: 1st argument is path to directory that contains MyEBirdData.csv file (e.g. downloads/ebird). 2nd argument is your flickr username.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/299/buggy-version/FlickrDownloader.java", "BodyUseAPI": [], "Fixed commit": "a71bf6874239c1fb2ba0c64a5759ec425c6dd24c", "Url": "https://api.github.com/repos/seabamirum/ebird-flickr-downloader", "Date": "2018-11-06T16:47:36Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"OPTIONS\".equals(((javax.servlet.http.HttpServletRequest) (servletRequest)).getMethod())) { filterChain.doFilter(servletRequest, servletResponse); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8504/buggy-version/src.main.java.com.hnu.softwarecollege.infocenter.filter.impl.AuthFilter.java", "BodyUseAPI": [], "Fixed commit": "5bf919a6b6fd071cc047215f2091ae6c03c354ef", "Url": "https://api.github.com/repos/yuxinyang123/information_center", "Date": "2018-12-17T01:33:09Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.startsWith(\"file:\")) { return com.netflix.iceberg.Files.localInput(new java.io.File(file.replaceFirst(\"file:\", \"\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5432/buggy-version/api.src.main.java.com.netflix.iceberg.Files.java", "BodyUseAPI": ["com.netflix.iceberg.Files.localInput(java.io.File)", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "4872924927bfc080968260cb5d158b9cbaa227f4", "Url": "https://api.github.com/repos/apache/incubator-iceberg", "Date": "2018-12-20T20:05:31Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.qaprosoft.carina.core.foundation.webdriver.core.capability.impl.desktop.ChromeCapabilities.setupProxy()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (proxy != null) { options.setProxy(proxy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/486/buggy-version/carina-webdriver.src.main.java.com.qaprosoft.carina.core.foundation.webdriver.core.capability.impl.desktop.ChromeCapabilities.java", "BodyUseAPI": ["org.openqa.selenium.chrome.ChromeOptions.setProxy(org.openqa.selenium.Proxy)"], "Fixed commit": "14eab6d21570982284f606233a4f444f89d05f92", "Url": "https://api.github.com/repos/qaprosoft/carina", "Date": "2018-11-09T17:15:00Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mQuantityEditText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(quantityText))) { quantity = java.lang.Integer.parseInt(quantityText); if (quantity > 0) { quantity--; mQuantityEditText.setText(java.lang.String.valueOf(quantity)); } }else { mQuantityEditText.setText(java.lang.String.valueOf(quantity)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8623/buggy-version/app.src.main.java.com.example.android.products.EditorActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "b12ce3b0a26de9a697c027cc36b4744887de6013", "Url": "https://api.github.com/repos/danielstanojevic/BookInventory", "Date": "2018-11-13T14:45:59Z"},
{"Line": "=>998", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (toString.toString().equals(\"\")) { toString.append(num); }else { if (!((num.equals(\"0\")) && ((java.lang.Integer.parseInt(toString.toString())) == 0))) { toString.append(num); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8633/buggy-version/src.Solution.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "8b9f18c1c3638adeac9a187454960847eba719fc", "Url": "https://api.github.com/repos/tuanma123/Leetcode", "Date": "2018-11-20T20:43:28Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.skydoves.colorpickerview.ColorPickerView.getColorARGB(envelope.getColor())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.util.Arrays.equals(ARGB, newARGB)) == true) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3397/buggy-version/app.src.main.java.com.example.android.wificon.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7c1ad65ae214c8b53455520084763e442aa925f9", "Url": "https://api.github.com/repos/LinSijie/wifiCon", "Date": "2018-11-07T15:40:44Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yellowbite.movienewsreminder2.fragments.ToolbarFragment.getAddedFragment()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentFragment.onOptionsItemSelected(item)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/241/buggy-version/app.src.main.java.com.yellowbite.movienewsreminder2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "51a812969c82a65b809343cd19a8dad660d22863", "Url": "https://api.github.com/repos/JanNB97/MovieNewsReminder2", "Date": "2018-11-17T16:50:09Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Float>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((str_label_Pie.size()) != temp_size) { for (int i = 0; i < ((str_label_Pie.size()) - temp_size); i++) { arr_plan.add(0.0F); } }else { if ((str_label_Pie.size()) == 0) { arr_plan.add(100.0F); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2101/buggy-version/app.src.main.java.com.prj666_183a06.xbudget.ReportFragment.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "8e24ab6eda325a3793be25a48d71636045070f0e", "Url": "https://api.github.com/repos/PRJ666-BUDGET/xBudget_android", "Date": "2018-11-21T05:14:21Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getBooleanExtra(ExoPlayerFragment.BUTTON_SUGGESTIONS,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!suggestionsClicked) mManager.onClose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5290/buggy-version/smartyoutubetv.src.main.java.com.liskovsoft.smartyoutubetv.flavors.exoplayer.interceptors.ExoInterceptor.java", "BodyUseAPI": [], "Fixed commit": "624fe099000eec2b13d5232032a389d8399234df", "Url": "https://api.github.com/repos/yuliskov/SmartYouTubeTV", "Date": "2018-11-05T21:52:29Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getNumberOfIncorrectPasswordWithin72hrs()) >= 3) { this.setBlocked(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7580/buggy-version/src.main.java.br.ufsc.model.Card.java", "BodyUseAPI": [], "Fixed commit": "6b07b09e55e6272b96016354a647f3a632c005aa", "Url": "https://api.github.com/repos/ernanics/bankapp-FitNesse", "Date": "2018-12-17T19:04:21Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((line[0]) != null) { java.lang.System.out.println((\"Core: \" + (line[0]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2943/buggy-version/RobotSim.src.main.java.be.uantwerpen.sc.models.sim.SimCore.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "e61cfff5c25e2f1320b2e97267474df6cae8521b", "Url": "https://api.github.com/repos/SmartCity-UAntwerpen/RobotSim", "Date": "2018-12-20T10:42:40Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debugResourceWriter == null) { debugResourceWriter = this.debugResourceWriter; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9087/buggy-version/eyes.common.java.src.main.java.com.applitools.eyes.visualGridClient.services.RenderingGridManager.java", "BodyUseAPI": [], "Fixed commit": "8ff174f53ecec7428851bd585fba139a3debd688", "Url": "https://api.github.com/repos/applitools/eyes.sdk.java3", "Date": "2018-12-16T19:13:17Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7280/buggy-version/app.src.main.java.cn.okclouder.ovc.base.NetworkUtils.java", "BodyUseAPI": [], "Fixed commit": "045c9b2c4185462854e436eecb68996d987ef8f7", "Url": "https://api.github.com/repos/caoshen/agg", "Date": "2018-05-01T05:28:25Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mWrapAdapter.getInnerAdapter().getItemCount()) == (mPageSize)) { isCritical = true; }else { isCritical = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3510/buggy-version/LRecyclerview_library.src.main.java.com.github.jdsjlzx.recyclerview.LuRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "357192ae1086eed33141f3b6c2b258890ccd323a", "Url": "https://api.github.com/repos/jdsjlzx/LRecyclerView", "Date": "2018-11-16T08:04:46Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.exist.util.ExistSAXParserFactory.LOG.isDebugEnabled()) { org.exist.util.ExistSAXParserFactory.LOG.debug((\"Could not create instance of SAXParserFactory: \" + (result.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3330/buggy-version/src.org.exist.util.ExistSAXParserFactory.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "489dda6aa83b2a0aa6bba309bbbddb26a6bb5047", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2018-11-07T16:38:50Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.exist.util.ExistSAXParserFactory.LOG.isDebugEnabled()) { org.exist.util.ExistSAXParserFactory.LOG.debug(((className + \": \") + (ex.getMessage())), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3330/buggy-version/src.org.exist.util.ExistSAXParserFactory.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.debug(java.lang.String,java.lang.ClassNotFoundException)"], "Fixed commit": "489dda6aa83b2a0aa6bba309bbbddb26a6bb5047", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2018-11-07T16:38:50Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.exist.util.ExistSAXParserFactory.LOG.isDebugEnabled()) { org.exist.util.ExistSAXParserFactory.LOG.debug(((\"Could not invoke method \" + className) + \".newInstance.\"), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3330/buggy-version/src.org.exist.util.ExistSAXParserFactory.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.debug(java.lang.String,java.lang.ReflectiveOperationException)"], "Fixed commit": "489dda6aa83b2a0aa6bba309bbbddb26a6bb5047", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2018-11-07T16:38:50Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.exist.util.ExistSAXParserFactory.LOG.isDebugEnabled()) { org.exist.util.ExistSAXParserFactory.LOG.debug(java.lang.String.format(\"Using default SAXParserFactory '%s'\", factory.getClass().getCanonicalName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3330/buggy-version/src.org.exist.util.ExistSAXParserFactory.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "489dda6aa83b2a0aa6bba309bbbddb26a6bb5047", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2018-11-07T16:38:50Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.exist.util.ExistSAXParserFactory.LOG.isDebugEnabled()) { org.exist.util.ExistSAXParserFactory.LOG.debug(((\"Method \" + className) + \".newInstance not found.\"), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3330/buggy-version/src.org.exist.util.ExistSAXParserFactory.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.debug(java.lang.String,java.lang.Exception)"], "Fixed commit": "489dda6aa83b2a0aa6bba309bbbddb26a6bb5047", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2018-11-07T16:38:50Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ju) != null) { ju.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5800/buggy-version/src.main.java.com.anbang.qipai.dianpaomajiang.cqrs.c.domain.MajiangGame.java", "BodyUseAPI": [], "Fixed commit": "0a1dbc977883ef0dfb4014562ce5932ffbc220b5", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_dianpaomajiang", "Date": "2018-11-29T07:57:31Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(((uk.gov.gchq.gaffer.operation.OperationChain) (operation)).getOperations().isEmpty())) { final uk.gov.gchq.gaffer.operation.Operation firstOp = ((uk.gov.gchq.gaffer.operation.Operation) (((uk.gov.gchq.gaffer.operation.OperationChain) (operation)).getOperations().get(0))); if (firstOp instanceof uk.gov.gchq.gaffer.operation.io.Input) { uk.gov.gchq.gaffer.store.operation.handler.util.OperationHandlerUtil.setOperationInput(((uk.gov.gchq.gaffer.operation.io.Input) (firstOp)), input); }else if (firstOp instanceof uk.gov.gchq.gaffer.operation.OperationChain) { uk.gov.gchq.gaffer.store.operation.handler.util.OperationHandlerUtil.updateOperationInput(firstOp, input); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1149/buggy-version/core.store.src.main.java.uk.gov.gchq.gaffer.store.operation.handler.util.OperationHandlerUtil.java", "BodyUseAPI": ["((uk.gov.gchq.gaffer.operation.OperationChain) (operation)).getOperations().get(int)", "uk.gov.gchq.gaffer.operation.Operation.getOperations()"], "Fixed commit": "df2fcda403affc79178147126e97a63dfd156d1d", "Url": "https://api.github.com/repos/gchq/Gaffer", "Date": "2018-12-11T17:15:46Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Map.findRoom(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (room != null) { allRoomIds.add(room.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4743/buggy-version/src.RoomConnectivityVerifier.java", "BodyUseAPI": ["java.util.HashSet<java.lang.Integer>.add(room.getId())", "Room.getId()"], "Fixed commit": "25b07549e0573d2513ec4c7f8a2e890852eea0e8", "Url": "https://api.github.com/repos/pschemer/CS321-2018F-004", "Date": "2018-11-12T14:43:25Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, java.util.List<com.example.eptay.byteMeCalendar.Event>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (repeatingEvents == null) { m_repeatingEvents.put(dayOfWeek, new java.util.ArrayList<com.example.eptay.byteMeCalendar.Event>()); repeatingEvents = m_repeatingEvents.get(dayOfWeek); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2116/buggy-version/byteMeCalendar.app.src.main.java.com.example.eptay.byteMeCalendar.EventCache.java", "BodyUseAPI": [], "Fixed commit": "7992dbcb9f7254804dcd6eeecfe5ec137e14cece", "Url": "https://api.github.com/repos/weruder/3354-ByteMe", "Date": "2018-11-27T17:03:52Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FileFilter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4710/buggy-version/app.src.main.java.com.matvey.perelman.notepad.data.DataManager.java", "BodyUseAPI": [], "Fixed commit": "57ec380845377bedd3881bef663cb388ecbf8942", "Url": "https://api.github.com/repos/Matvey24/NotePad", "Date": "2018-11-07T04:30:42Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.isBookingNumberInSystem(bookingNumber)) { com.fasterxml.jackson.databind.ObjectMapper objectMapper = new com.fasterxml.jackson.databind.ObjectMapper(); try { java.lang.Object flight = objectMapper.readValue(bookingMap.get(bookingNumber), java.lang.Object.class); return flight.toString(); } catch (java.io.IOException e) { java.lang.Object notFoundMessage = \"Unable to located booking info.\"; return notFoundMessage; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1207/buggy-version/src.main.java.Database.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readValue(java.io.File,java.lang.Class)", "java.util.Map<java.lang.String, java.io.File>.get(java.lang.String)"], "Fixed commit": "df3e302e8405073751c2696b358afcd53d77191c", "Url": "https://api.github.com/repos/Marlon-Urena/travel-booking-application", "Date": "2018-12-17T19:52:56Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((route.getClaimedBy()) != null) { return \"This route has already been claimed\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2018/buggy-version/app.src.main.java.model.ModelFacade.java", "BodyUseAPI": [], "Fixed commit": "d45a5fda678f71dc8733400cf03486e8e541500f", "Url": "https://api.github.com/repos/SponJ2000/TTR_Phase1b", "Date": "2018-11-26T19:12:51Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ioResult instanceof com.orientechnologies.orient.core.sql.executor.OResult) { com.orientechnologies.orient.core.sql.executor.OResult res = ((com.orientechnologies.orient.core.sql.executor.OResult) (ioResult)); return res.getPropertyNames(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1639/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.method.misc.OSQLMethodKeys.java", "BodyUseAPI": [], "Fixed commit": "dbf81a4cc8ad0b4ce0d2485ec12bd40cfd566200", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2018-12-21T14:14:25Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Float.parseFloat(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (useMe <= (this.value)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1481/buggy-version/zaj1.src.value.FloatValue.java", "BodyUseAPI": [], "Fixed commit": "62a9ac0e5955dfb934a4d0b573229add5f1a5435", "Url": "https://api.github.com/repos/mw1213/Java", "Date": "2018-11-15T23:07:06Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.ist.fenixedu.parking.domain.ParkingParty.getParty()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((person.getSocialSecurityNumber()) == null) { this.getLogger().warn(\"{} ({}) has no Social Security Number. Skipping.\", person.getUsername(), person.getName()); taskLog(\"%s (%s) has no Social Security Number. Skipping.\\n\", person.getUsername(), person.getName()); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2276/buggy-version/fenixedu-ist-parking.src.main.java.pt.ist.fenixedu.parking.tasks.ExportParkingDataToJson.java", "BodyUseAPI": ["org.fenixedu.academic.domain.Person.getName()", "pt.ist.fenixedu.parking.tasks.ExportParkingDataToJson.taskLog(java.lang.String,person.getUsername(),person.getName())", "org.fenixedu.academic.domain.Person.getUsername()", "org.fenixedu.academic.domain.Person.getUsername()", "org.fenixedu.academic.domain.Person.getName()", "this.getLogger().warn(java.lang.String,person.getUsername(),person.getName())"], "Fixed commit": "5ad0dcf36ce4620845c52973d632ac7959ecacf4", "Url": "https://api.github.com/repos/JSMCAG/fenixedu-ist", "Date": "2018-11-16T10:01:17Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.ist.fenixedu.parking.tasks.ExportParkingDataToJson.parkingPartyToJson(pt.ist.fenixedu.parking.domain.ParkingParty)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (parkingPartyData != null) { parkingPartiesData.add(parkingPartyData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2276/buggy-version/fenixedu-ist-parking.src.main.java.pt.ist.fenixedu.parking.tasks.ExportParkingDataToJson.java", "BodyUseAPI": ["com.google.gson.JsonArray.add(com.google.gson.JsonObject)"], "Fixed commit": "5ad0dcf36ce4620845c52973d632ac7959ecacf4", "Url": "https://api.github.com/repos/JSMCAG/fenixedu-ist", "Date": "2018-11-16T10:01:17Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Number.doubleValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (dValue < 0) { final double max = java.lang.Double.max(java.lang.Math.abs(dValue), java.lang.Math.abs(me.kroeker.alex.anchor.jserver.anchor.h2o.NoValueHandler.MIN)); final double min = java.lang.Double.min(java.lang.Math.abs(dValue), java.lang.Math.abs(me.kroeker.alex.anchor.jserver.anchor.h2o.NoValueHandler.MIN)); dif = max - min; }else { dif = dValue - (me.kroeker.alex.anchor.jserver.anchor.h2o.NoValueHandler.MIN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8311/buggy-version/j-server-anchor-h2o.src.main.java.me.kroeker.alex.anchor.jserver.anchor.h2o.NoValueHandler.java", "BodyUseAPI": ["java.lang.Double.max(double,int)", "java.lang.Math.abs(double)", "java.lang.Double.min(double,int)", "java.lang.Math.abs(double)"], "Fixed commit": "30c466e06137d063e706dce3d1394ebf3a552585", "Url": "https://api.github.com/repos/viadee/javaAnchorServer", "Date": "2018-11-26T21:40:32Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPosition) != null) { result = (31 * result) + (mPosition.hashCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9279/buggy-version/src.main.java.de.dfki.vsm.model.flow.BasicNode.java", "BodyUseAPI": [], "Fixed commit": "69e7b4f9283ef93c6f3c07c9c785f837d24f7676", "Url": "https://api.github.com/repos/bkiefer/GraVE", "Date": "2018-11-29T14:10:08Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.getActionCommand().equals(\"Confirm\")) { try { calendarWindow.showAddWorkoutDialog(); } catch (java.lang.Exception e1) { e1.printStackTrace(); } }else if (e.getActionCommand().equals(\"Plan Workout\")) { java.lang.System.out.println(\"Planning Workout\"); }else { java.lang.System.err.println((\"Unhandled Action Command: \" + (e.getActionCommand()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3070/buggy-version/currentIteration.FitLifeApp-proj-2.src.main.java.edu.baylor.ecs.Listeners.CalendarListener.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.awt.event.ActionEvent.getActionCommand()", "java.awt.event.ActionEvent.getActionCommand()"], "Fixed commit": "397fc70da538cfd31356dbace9e94fad0b89e6db", "Url": "https://api.github.com/repos/FitLifeApp/FitLifeApp.github.io", "Date": "2018-11-24T03:53:02Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((conn) != null) && (conn.isClosed())) reCreateConnection = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/229/buggy-version/src.main.java.akka.cluster.seed.postgres.ConnectionProvider.java", "BodyUseAPI": [], "Fixed commit": "258c084f93d2b03d3bc2d6667d6c4f1b4a2449f7", "Url": "https://api.github.com/repos/ckaratzas/akka-postgres-cluster-seed", "Date": "2018-11-01T09:51:36Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.oracle.truffle.api.source.TextMap.lineColumnToOffset(int,int)", "com.oracle.truffle.api.source.TextMap.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((length == 1) && ((charIndex + length) > sourceLength)) { length = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2816/buggy-version/truffle.src.com.oracle.truffle.api.src.com.oracle.truffle.api.source.Source.java", "BodyUseAPI": [], "Fixed commit": "c4702b037d6a29889fa267097d1024a797ac298c", "Url": "https://api.github.com/repos/oracle/graal", "Date": "2018-12-02T21:21:06Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!clearError) { error = c4document.getError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4763/buggy-version/shared.src.main.java.com.couchbase.lite.AbstractReplicator.java", "BodyUseAPI": [], "Fixed commit": "583b54ce56bb9089fe551107e54bda663e8be5c4", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-android", "Date": "2018-12-21T07:08:32Z"},
{"Line": "=>1328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.olingo.server.core.uri.parser.ExpressionParser.getType(org.apache.olingo.server.api.uri.queryoption.expression.Expression)", "org.apache.olingo.server.core.uri.parser.ExpressionParser.getType(org.apache.olingo.server.api.uri.queryoption.expression.Expression)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((leftType.equals(odata.createPrimitiveTypeInstance(EdmPrimitiveTypeKind.Any))) || (rightType.equals(odata.createPrimitiveTypeInstance(EdmPrimitiveTypeKind.Any)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6490/buggy-version/lib.server-core.src.main.java.org.apache.olingo.server.core.uri.parser.ExpressionParser.java", "BodyUseAPI": [], "Fixed commit": "968ea529e5db90d1c15864be19104d8699de40f2", "Url": "https://api.github.com/repos/SpeckiJ/olingo-odata4", "Date": "2018-11-27T18:30:06Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((split.length) != 1) { timeParser.internalValueOfString(split[1], isNullable, maxLength, precision, scale, isUnicode, java.sql.Timestamp.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6490/buggy-version/lib.commons-core.src.main.java.org.apache.olingo.commons.core.edm.primitivetype.EdmTimespan.java", "BodyUseAPI": ["org.apache.olingo.commons.core.edm.primitivetype.EdmDateTimeOffset.internalValueOfString(java.lang.String,java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Boolean,java.lang.Class)"], "Fixed commit": "968ea529e5db90d1c15864be19104d8699de40f2", "Url": "https://api.github.com/repos/SpeckiJ/olingo-odata4", "Date": "2018-11-27T18:30:06Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (quantity > (getAmount())) { quantity = getAmount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1189/buggy-version/interface.src.com.agentecon.goods.SubStock.java", "BodyUseAPI": [], "Fixed commit": "b6c5f392e754b1b24cbd17a3efa873796c015be5", "Url": "https://api.github.com/repos/meisser/course2018", "Date": "2018-12-04T15:48:46Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.onetwo.common.utils.StringUtils.isBlank(token)) { throw new java.lang.IllegalArgumentException(\"token cant not be blank\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5365/buggy-version/core.modules.boot.src.main.java.org.onetwo.boot.module.oauth2.util.OAuth2Utils.java", "BodyUseAPI": [], "Fixed commit": "d8cfbffac170d8e200c9242d9c8336e8d389465c", "Url": "https://api.github.com/repos/wayshall/onetwo", "Date": "2018-12-12T02:36:14Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clientDetail == null) { throw new java.lang.IllegalArgumentException(\"clientDetail cant not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5365/buggy-version/core.modules.boot.src.main.java.org.onetwo.boot.module.oauth2.util.OAuth2Utils.java", "BodyUseAPI": [], "Fixed commit": "d8cfbffac170d8e200c9242d9c8336e8d389465c", "Url": "https://api.github.com/repos/wayshall/onetwo", "Date": "2018-12-12T02:36:14Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (totalAmount > 0) { percentageStr = df.format(((values[i]) / totalAmount)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2204/buggy-version/src.main.java.com.fyr.talend.components.util.Jenks.java", "BodyUseAPI": ["java.text.DecimalFormat.format(double)"], "Fixed commit": "0f48144e5a5e33952dd9e56eca849d7262c44421", "Url": "https://api.github.com/repos/fyrz/talendStatisticsComponent", "Date": "2018-12-16T15:53:28Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((comboB.getValue()) != null) { int mode = comboB.getSelectionModel().getSelectedIndex(); Display.CanvasGraphics.drawDebugImage(debugCanvas, terrain, mode); java.lang.System.out.println(comboB.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/856/buggy-version/src.Display.MainWindow.java", "BodyUseAPI": ["comboB.getSelectionModel().getSelectedIndex()", "javafx.scene.control.ComboBox.getSelectionModel()", "javafx.scene.control.ComboBox.getValue()", "java.io.PrintStream.println(comboB.getValue())"], "Fixed commit": "55a6277b2f5660fd6925941aa6e233ecf55e593f", "Url": "https://api.github.com/repos/kezif/Ecologic", "Date": "2018-11-01T19:36:27Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.conf.Configuration.get(java.lang.String)", "org.apache.hadoop.conf.Configuration.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((columnNamesConf == null) || (expectedNDVsConf == null)) { return kv; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5715/buggy-version/parquet-hadoop.src.main.java.org.apache.parquet.hadoop.ParquetOutputFormat.java", "BodyUseAPI": [], "Fixed commit": "5e4647fddfacb50e278757f13f5496f60e24549b", "Url": "https://api.github.com/repos/cjjnjust/parquet-mr", "Date": "2018-12-24T08:16:06Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (userAgent == null) { return \"null User-Agent\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1484/buggy-version/Gatekeeper.src.edu.lternet.pasta.gatekeeper.BotMatcher.java", "BodyUseAPI": [], "Fixed commit": "66757fc4aa61771cc493bca91231094be7e6105b", "Url": "https://api.github.com/repos/PASTAplus/PASTA", "Date": "2018-11-30T17:32:34Z"},
{"Line": "=>1564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.collectiveone.modules.initiatives.repositories.InitiativeRepositoryIf.findByTopLevelSectionId(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (initiativeId != null) { java.util.List<org.collectiveone.modules.activity.Subscriber> initSubscribers = subscriberRepository.findByElementId(initiativeId); for (org.collectiveone.modules.activity.Subscriber subscriber : initSubscribers) { if (!(subscribersMap.containsKey(subscriber.getUser().getC1Id()))) { subscribersMap.put(subscriber.getUser().getC1Id(), subscriber); }else { if ((subscriber.getInheritConfig()) == (org.collectiveone.modules.activity.enums.SubscriberInheritConfig.CUSTOM)) { org.collectiveone.modules.activity.Subscriber existingSubscriber = subscribersMap.get(subscriber.getUser().getC1Id()); if ((existingSubscriber.getInheritConfig()) == (org.collectiveone.modules.activity.enums.SubscriberInheritConfig.INHERIT)) { subscribersMap.put(subscriber.getUser().getC1Id(), subscriber); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5123/buggy-version/backend.src.main.java.org.collectiveone.modules.activity.ActivityService.java", "BodyUseAPI": ["org.collectiveone.modules.activity.repositories.SubscriberRepositoryIf.findByElementId(java.util.UUID)"], "Fixed commit": "4784266aabc8b39d71e8c000cd943d392e686fa5", "Url": "https://api.github.com/repos/CollectiveOne/CollectiveOneWebapp", "Date": "2018-11-12T12:02:03Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["repository.LocationRepository.findById(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(optLocation.isPresent())) throw new graphql.GraphQLException(\"Could not find locationId\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8657/buggy-version/src.main.java.graphql.Mutation.java", "BodyUseAPI": [], "Fixed commit": "4d4c8f358cfec67f9500b4dd1a9a921a786789e8", "Url": "https://api.github.com/repos/Groep1113/spring-wms", "Date": "2018-12-13T13:16:36Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.crossoverjie.cim.common.util.StringUtil.isEmpty(msg)) { com.crossoverjie.cim.client.scanner.Scan.LOGGER.warn(\"\u4e0d\u80fd\u53d1\u9001\u7a7a\u6d88\u606f\uff01\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1426/buggy-version/cim-client.src.main.java.com.crossoverjie.cim.client.scanner.Scan.java", "BodyUseAPI": [], "Fixed commit": "3f1508bd387ee2149c7bf446bb0b29f3b7706c19", "Url": "https://api.github.com/repos/crossoverJie/cim", "Date": "2018-12-25T07:16:39Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (command.getAction().equals(\"dht\")) { }else { java.lang.System.out.println(\"command not supported\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6805/buggy-version/src.dht.rush.client.java", "BodyUseAPI": [], "Fixed commit": "3ce7fd0c457d67377ae063075669cc3cc2b2ab1c", "Url": "https://api.github.com/repos/yfliu92/cs6343TeamProject", "Date": "2018-11-19T18:50:00Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gittner.osmbugs.api.MapdustApi.mOkHttpClient.newCall(request).execute()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((response.code()) == 204) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8341/buggy-version/app.src.main.java.org.gittner.osmbugs.api.MapdustApi.java", "BodyUseAPI": [], "Fixed commit": "d67f22435609669e6c310f0958816e15091e201a", "Url": "https://api.github.com/repos/ChristopherGittner/OSMBugs", "Date": "2018-11-20T18:21:32Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextChoreNum) > 1) { continueIfTimeArrived(); }else { (nextChoreNum)++; chooseNextActivity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/7884/buggy-version/app.src.main.java.il.ac.pddailycogresearch.pddailycog.activities.AirplaneModeRequestActivity.java", "BodyUseAPI": [], "Fixed commit": "7072018438149c417df165e42821f6d21c635395", "Url": "https://api.github.com/repos/PDDailyCogResearch/PDDailyCog", "Date": "2018-11-28T23:06:52Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedPart) == null) { recordsToDisplay = recordController.selectedProblemRecords; }else { for (com.cybersix.markme.RecordModel r : recordController.selectedProblemRecords) { if (r.getBodyLocation().getBodyPart().equals(selectedPart)) { recordsToDisplay.add(r); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9762/buggy-version/app.src.main.java.com.cybersix.markme.RecordListFragment.java", "BodyUseAPI": [], "Fixed commit": "7d0f11ce530b4cd9c8ccd6875a280510a837640b", "Url": "https://api.github.com/repos/CMPUT301F18T24/Mark-Me", "Date": "2018-11-20T19:15:13Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((circle) != null) circle.remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3098/buggy-version/app.src.main.java.com.example.cs408_app.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "d34504c2e6e1e0ec8e642d3af6bb19b224ae3670", "Url": "https://api.github.com/repos/KAIST-CS408E/CS4CS_App", "Date": "2018-11-18T07:53:07Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mdNode.getBody()) != null) { bodyString = mdNode.getBody().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1701/buggy-version/src.simpleASTParser.JavaASTTokenizer.java", "BodyUseAPI": ["org.eclipse.jdt.core.dom.MethodDeclaration.getBody()", "mdNode.getBody().toString()"], "Fixed commit": "11f4706b19683b51ab26022ed0b2ad31da2c027c", "Url": "https://api.github.com/repos/saikat107/Tokenizer", "Date": "2018-11-14T17:34:53Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((scheduledTick) - (this.ticks)) > 0) this.schedule.get(scheduledTick).remove(this); else java.lang.System.err.println(\"WARNING: Cancelling already completed action\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3907/buggy-version/src.main.java.me.fril.regeneration.util.Scheduler.java", "BodyUseAPI": [], "Fixed commit": "c5cf5fc3340ddeb0685ad53d909c13b6aaa414a2", "Url": "https://api.github.com/repos/Suffril/Regeneration", "Date": "2018-11-05T12:33:28Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["PlayerInteractEvent.LeftClickBlock.getEntityPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(player.world.isRemote)) me.fril.regeneration.common.capability.CapabilityRegeneration.getForPlayer(player).getStateManager().onPunchBlock();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3907/buggy-version/src.main.java.me.fril.regeneration.RegenEventHandler.java", "BodyUseAPI": ["me.fril.regeneration.common.capability.CapabilityRegeneration.getForPlayer(player).getStateManager()", "me.fril.regeneration.common.capability.CapabilityRegeneration.getForPlayer(player).getStateManager().onPunchBlock()", "me.fril.regeneration.common.capability.CapabilityRegeneration.getForPlayer(net.minecraft.entity.player.EntityPlayer)"], "Fixed commit": "c5cf5fc3340ddeb0685ad53d909c13b6aaa414a2", "Url": "https://api.github.com/repos/Suffril/Regeneration", "Date": "2018-11-05T12:33:28Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == (STORAGE_PERMISSION_REQUEST_CODE)) { if (((grantResults.length) > 0) && ((grantResults[0]) == (android.content.pm.PackageManager.PERMISSION_GRANTED))) { StoragePermissionsGranted(); }else { android.widget.Toast.makeText(this, \"App must have Storage permissions\", Toast.LENGTH_LONG).show(); finish(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/943/buggy-version/app.src.main.java.com.gil.smsexporter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "206cbdf7b4483fee827ea34ada567b4423a34eef", "Url": "https://api.github.com/repos/gilmaimon/SMS-Exporter", "Date": "2018-11-16T11:12:38Z"},
{"Line": "=>609", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recurrence == null) { values.put(Events.DTEND, (endTime + (java.util.TimeZone.getDefault().getOffset(endTime)))); }else { values.put(Events.DURATION, ((\"P\" + ((endTime - startTime) / ((24 * 60) * 60000))) + \"D\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8085/buggy-version/src.android.nl.xservices.plugins.accessor.AbstractCalendarAccessor.java", "BodyUseAPI": [], "Fixed commit": "6bf5276f2a4b28b65a068cd2da1e8d6fa5d0f281", "Url": "https://api.github.com/repos/x1y9/Calendar-PhoneGap-Plugin", "Date": "2018-11-08T03:07:20Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recurrence == null) { values.put(Events.DTEND, endTime); }else { values.put(Events.DURATION, ((\"P\" + ((endTime - startTime) / 60000)) + \"M\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8085/buggy-version/src.android.nl.xservices.plugins.accessor.AbstractCalendarAccessor.java", "BodyUseAPI": [], "Fixed commit": "6bf5276f2a4b28b65a068cd2da1e8d6fa5d0f281", "Url": "https://api.github.com/repos/x1y9/Calendar-PhoneGap-Plugin", "Date": "2018-11-08T03:07:20Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null == (com.star.sud.web.controller.StarMapContoller.apiKey)) || (com.star.sud.web.controller.StarMapContoller.apiKey.isEmpty())) { location = \"Please enable/give your api key in the class StarMapContoller to access to the current location\"; }else { location = com.star.sud.GoogleMapLocation.getLocationAddress(lattitude, longitude, com.star.sud.web.controller.StarMapContoller.apiKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4655/buggy-version/src.main.java.com.star.sud.web.controller.StarMapContoller.java", "BodyUseAPI": ["com.star.sud.GoogleMapLocation.getLocationAddress(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "a25454bf36fd6d2322df195241d1ee09604818a8", "Url": "https://api.github.com/repos/Sudarshan-Gowda/Spring-Mvc-ClientLocationTracking", "Date": "2018-11-04T02:58:40Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.cas.lib.proarc.mods.ModsDefinition.getOriginInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((originInfoDefinitions.size()) == 0) { fillEventType = true; }else { for (cz.cas.lib.proarc.mods.OriginInfoDefinition oi : originInfoDefinitions) { if ((ModsConstants.VALUE_ORIGININFO_EVENTTYPE_PUBLICATION.equals(oi.getEventType())) || (ModsConstants.VALUE_ORIGININFO_EVENTTYPE_PRODUCTION.equals(oi.getEventType()))) { fillEventType = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/63/buggy-version/proarc-common.src.main.java.cz.cas.lib.proarc.common.object.ndk.RdaRules.java", "BodyUseAPI": [], "Fixed commit": "f26bf9ad9319e06490ccc4a9ed6b8533ba0b8393", "Url": "https://api.github.com/repos/proarc/proarc", "Date": "2018-11-07T15:53:29Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dataflow.sample.ProcessContext.element()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((o.getCorrelationId()) != null) && (!(o.getCorrelationId().isEmpty()))) { o.setCorrelationId(com.dataflow.sample.Utils.mask(o.getCorrelationId(), '#')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6846/buggy-version/com.dataflow.sample.src.main.java.com.dataflow.sample.App.java", "BodyUseAPI": ["com.dataflow.sample.Utils.mask(o.getCorrelationId(),char)", "com.dataflow.sample.MasterOrder.setCorrelationId(com.dataflow.sample.Utils.mask(o.getCorrelationId(), '#'))", "com.dataflow.sample.MasterOrder.getCorrelationId()"], "Fixed commit": "dca238fa0fd1871a14db6503a17a54defcec1fab", "Url": "https://api.github.com/repos/daishisystems/data-flow", "Date": "2018-11-22T11:59:11Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dataflow.sample.ProcessContext.element()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((o.getFingerprintId()) != null) && (!(o.getFingerprintId().isEmpty()))) { o.setFingerprintId(com.dataflow.sample.Utils.mask(o.getFingerprintId(), '#')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6846/buggy-version/com.dataflow.sample.src.main.java.com.dataflow.sample.App.java", "BodyUseAPI": ["com.dataflow.sample.MasterOrder.setFingerprintId(com.dataflow.sample.Utils.mask(o.getFingerprintId(), '#'))", "com.dataflow.sample.MasterOrder.getFingerprintId()", "com.dataflow.sample.Utils.mask(o.getFingerprintId(),char)"], "Fixed commit": "dca238fa0fd1871a14db6503a17a54defcec1fab", "Url": "https://api.github.com/repos/daishisystems/data-flow", "Date": "2018-11-22T11:59:11Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (caught instanceof lsfusion.gwt.shared.exceptions.AppServerNotAvailableException) maxTries = 30;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4651/buggy-version/web-client.src.main.java.lsfusion.gwt.client.dispatch.DispatchAsyncWrapper.java", "BodyUseAPI": [], "Fixed commit": "07029037aef0bac26f30e3dbaa659f47eaf51a32", "Url": "https://api.github.com/repos/lsfusion/platform", "Date": "2018-12-12T14:00:53Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lsfusion.gwt.client.ErrorHandlingCallback.getMaxTries(caught)) > (-1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/4651/buggy-version/web-client.src.main.java.lsfusion.gwt.client.ErrorHandlingCallback.java", "BodyUseAPI": [], "Fixed commit": "07029037aef0bac26f30e3dbaa659f47eaf51a32", "Url": "https://api.github.com/repos/lsfusion/platform", "Date": "2018-12-12T14:00:53Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rblclientDatValidation.getCategory()) != null) { if (rblclientDatValidation.getCategory().equalsIgnoreCase(\"SMALL FARMER\")) { category = \"1\"; } if (rblclientDatValidation.getCategory().equalsIgnoreCase(\"FARMER\")) { category = \"2\"; } if (rblclientDatValidation.getCategory().equalsIgnoreCase(\"Unemployed\")) { category = \"4\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5595/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.rblvalidation.service.RblLosFileGenerationServiceImpl.java", "BodyUseAPI": ["rblclientDatValidation.getCategory().equalsIgnoreCase(java.lang.String)", "rblclientDatValidation.getCategory().equalsIgnoreCase(java.lang.String)", "org.mifosplatform.portfolio.rblvalidation.data.RblclientDatValidation.getCategory()", "org.mifosplatform.portfolio.rblvalidation.data.RblclientDatValidation.getCategory()", "org.mifosplatform.portfolio.rblvalidation.data.RblclientDatValidation.getCategory()", "rblclientDatValidation.getCategory().equalsIgnoreCase(java.lang.String)"], "Fixed commit": "9af9f330856abacf7cce4fbbe454442b168f1a8f", "Url": "https://api.github.com/repos/keshavkumarmishra/mifosx-2", "Date": "2018-11-01T17:25:49Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mifosplatform.portfolio.rblvalidation.service.RblDataReadplatformService.readRblLoanData(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((rblloanDatas.size()) < 0) || (rblloanDatas == null)) { fr.write((\"*************** Loan Application Is Not Created for All Client Please Create it***************\" + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5595/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.rblvalidation.service.RblDataValidatorServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "9af9f330856abacf7cce4fbbe454442b168f1a8f", "Url": "https://api.github.com/repos/keshavkumarmishra/mifosx-2", "Date": "2018-11-01T17:25:49Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mifosplatform.portfolio.rblvalidation.service.RblDataReadplatformService.readRblSavingData(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((rblsavingsDatas.size()) < 0) || (rblsavingsDatas == null)) { fr.write((\"*************** RBL Savings Application Is Not Created for All Client Please Create it***************\" + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5595/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.rblvalidation.service.RblDataValidatorServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "9af9f330856abacf7cce4fbbe454442b168f1a8f", "Url": "https://api.github.com/repos/keshavkumarmishra/mifosx-2", "Date": "2018-11-01T17:25:49Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((front) == null) { rear = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2274/buggy-version/src.main.java.stacksandqueues.Queue.java", "BodyUseAPI": [], "Fixed commit": "ed2ca47f78305f74f3f42457cb7787c68a3e6de6", "Url": "https://api.github.com/repos/jeffborda/data-structures-and-algorithms", "Date": "2018-12-10T22:47:00Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (connection != null) { connection.out.writeBytes(((node.toString()) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8866/buggy-version/db.src.main.java.com.sonicbase.logger.Logger.java", "BodyUseAPI": ["java.io.DataOutputStream.writeBytes(((node.toString()) + \"\\n\"))"], "Fixed commit": "ace3259536176d961f3806049a3b06b475b69400", "Url": "https://api.github.com/repos/lowrydale/sonicbase", "Date": "2018-11-08T03:44:13Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (connection != null) { connection.out.writeBytes(((node.toString()) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/8866/buggy-version/db.src.main.java.com.sonicbase.logger.Logger.java", "BodyUseAPI": ["java.io.DataOutputStream.writeBytes(((node.toString()) + \"\\n\"))"], "Fixed commit": "ace3259536176d961f3806049a3b06b475b69400", "Url": "https://api.github.com/repos/lowrydale/sonicbase", "Date": "2018-11-08T03:44:13Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((factor) < (1.0 / (routing.SNWAdaptiveRouterVec2.numLayers))) factor = 1.0 / (routing.SNWAdaptiveRouterVec2.numLayers);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6631/buggy-version/src.routing.SNWAdaptiveRouterVec2.java", "BodyUseAPI": [], "Fixed commit": "915c4b8774bf50f16f60d659a02ddd1790a76590", "Url": "https://api.github.com/repos/swifiic/the-one", "Date": "2018-11-26T08:24:30Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((++(layerPrintCount)) < 32) || (((layerPrintCount) % 50) == 0)) { java.lang.System.out.println((((((((((\"adaptLL \" + (layerPrintCount)) + \" factor=\") + (factor)) + \" layerLast=\") + (layerLast)) + \" ackCount=\") + ackCount) + \" maxCount=\") + maxCount)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6631/buggy-version/src.routing.SNWAdaptiveRouterVec2.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "915c4b8774bf50f16f60d659a02ddd1790a76590", "Url": "https://api.github.com/repos/swifiic/the-one", "Date": "2018-11-26T08:24:30Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hasFocus()) && ((secondsLeft) > 0)) (secondsLeft)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1710/buggy-version/src.mathsnake.SnakeBoard.java", "BodyUseAPI": [], "Fixed commit": "25b8ee3765830dca18487bf7589b7dd3797b84c4", "Url": "https://api.github.com/repos/AndreaMaione32/MathSnake", "Date": "2018-12-06T09:03:47Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((startMovieDetailsIntent.resolveActivity(getPackageManager())) != null) { startActivity(startMovieDetailsIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9298/buggy-version/app.src.main.java.com.jhbb.android.filmesfamosos.view.ui.MainActivity.java", "BodyUseAPI": ["com.jhbb.android.filmesfamosos.view.ui.MainActivity.startActivity(android.content.Intent)"], "Fixed commit": "ca75f7adf1a0b1a3c29b81571219fdf2fb6958e0", "Url": "https://api.github.com/repos/J-Henrique/filmes-famosos", "Date": "2018-11-27T14:48:53Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((java.lang.Number) (equation.get(((equation.size()) - 1)))).getValue().doubleValue()) > 0) equation.set(((equation.size()) - 1), new java.lang.Number(((java.lang.Number) (equation.get(((equation.size()) - 1)))).getValue().multiply(new java.math.BigDecimal(10)).add(val.getValue()))); else { equation.set(((equation.size()) - 1), new java.lang.Number(((java.lang.Number) (equation.get(((equation.size()) - 1)))).getValue().multiply(new java.math.BigDecimal(10)).subtract(val.getValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2826/buggy-version/app.src.main.java.kylehoobler.agc.Equation.java", "BodyUseAPI": ["((java.lang.Number) (equation.get(((equation.size()) - 1)))).getValue()", "((java.lang.Number) (equation.get(((equation.size()) - 1)))).getValue().multiply(java.math.BigDecimal)", "java.util.ArrayList<kylehoobler.agc.EquationPart>.set(((equation.size()) - 1),java.lang.Number)", "((java.lang.Number) (equation.get(((equation.size()) - 1)))).getValue().multiply(new java.math.BigDecimal(10)).add(val.getValue())", "java.util.ArrayList<kylehoobler.agc.EquationPart>.get(((equation.size()) - 1))", "((java.lang.Number) (equation.get(((equation.size()) - 1)))).getValue().multiply(new java.math.BigDecimal(10)).subtract(val.getValue())", "java.util.ArrayList<kylehoobler.agc.EquationPart>.size()", "java.util.ArrayList<kylehoobler.agc.EquationPart>.size()", "((java.lang.Number) (equation.get(((equation.size()) - 1)))).getValue().multiply(java.math.BigDecimal)", "((java.lang.Number) (equation.get(((equation.size()) - 1)))).getValue()", "java.util.ArrayList<kylehoobler.agc.EquationPart>.set(((equation.size()) - 1),java.lang.Number)", "java.util.ArrayList<kylehoobler.agc.EquationPart>.get(((equation.size()) - 1))", "java.util.ArrayList<kylehoobler.agc.EquationPart>.size()", "java.util.ArrayList<kylehoobler.agc.EquationPart>.size()"], "Fixed commit": "687290862e8dfb8b5d45b3383a43fd56c73bd3fb", "Url": "https://api.github.com/repos/KyleHoobler/Android-Graphing-Calculator", "Date": "2018-11-23T23:40:17Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((val.getValue().intValue()) != 0) { java.math.BigDecimal dec = decimalGenerator(decimalCount, val.getValue()); if ((((java.lang.Number) (equation.get(((equation.size()) - 1)))).getValue().doubleValue()) > 0) equation.set(((equation.size()) - 1), new java.lang.Number(((java.lang.Number) (equation.get(((equation.size()) - 1)))).getValue().add(dec))); else equation.set(((equation.size()) - 1), new java.lang.Number(((java.lang.Number) (equation.get(((equation.size()) - 1)))).getValue().subtract(dec))); }else { equation.get(((equation.size()) - 1)).setDisplayItem(((equation.get(((equation.size()) - 1)).getDisplayItem()) + \"0\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2826/buggy-version/app.src.main.java.kylehoobler.agc.Equation.java", "BodyUseAPI": ["java.lang.Number.getValue()", "kylehoobler.agc.Equation.decimalGenerator(int,val.getValue())"], "Fixed commit": "687290862e8dfb8b5d45b3383a43fd56c73bd3fb", "Url": "https://api.github.com/repos/KyleHoobler/Android-Graphing-Calculator", "Date": "2018-11-23T23:40:17Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((val.getValue().intValue()) != 0) { java.math.BigDecimal dec = decimalGenerator(decimalCount, val.getValue()); if ((((java.lang.Number) (equation.get(((equation.size()) - 1)))).getValue().doubleValue()) > 0) equation.set(((equation.size()) - 1), new java.lang.Number(((java.lang.Number) (equation.get(((equation.size()) - 1)))).getValue().add(dec))); else equation.set(((equation.size()) - 1), new java.lang.Number(((java.lang.Number) (equation.get(((equation.size()) - 1)))).getValue().subtract(dec))); }else { equation.get(((equation.size()) - 1)).setDisplayItem(equation.get(((equation.size()) - 1)).getDisplayItem()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2826/buggy-version/app.src.main.java.kylehoobler.agc.Equation.java", "BodyUseAPI": ["kylehoobler.agc.Equation.decimalGenerator(int,val.getValue())", "java.lang.Number.getValue()"], "Fixed commit": "687290862e8dfb8b5d45b3383a43fd56c73bd3fb", "Url": "https://api.github.com/repos/KyleHoobler/Android-Graphing-Calculator", "Date": "2018-11-23T23:40:17Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.angcyo.rtbs.RTbs.DEBUG) { com.angcyo.uiview.less.utils.RUtils.saveToSDCard(\"webview.log\", log); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3208/buggy-version/src.main.java.com.angcyo.rtbs.RTbs.java", "BodyUseAPI": [], "Fixed commit": "eedaa4412cd0e29e560737486de2c45491421d7b", "Url": "https://api.github.com/repos/angcyo/RTbs", "Date": "2018-12-28T07:54:29Z"},
{"Line": "=>1313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((decos.charAt(((decos.length()) - 1))) == '}') { decos = decos.substring(2, ((decos.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5991/buggy-version/src.main.java.supersql.codegenerator.CodeGenerator.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "aea177760cb317e1abee3b91d7504a8c6357a1b4", "Url": "https://api.github.com/repos/ToyamaLab/NewSSQL", "Date": "2018-12-06T08:14:09Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dml.majiang.pan.frame.PanActionFrame.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (action.getType().equals(MajiangPlayerActionType.peng)) { if (player.getActionCandidates().isEmpty()) { player.generateDaActions(); } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9789/buggy-version/src.main.java.com.anbang.qipai.fangpaomajiang.cqrs.c.domain.FangpaoMajiangGuoActionUpdater.java", "BodyUseAPI": [], "Fixed commit": "251edf7b4775556f85f3da3236951f2b6074c14f", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_fangpaomajiang", "Date": "2018-11-30T09:50:37Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6417/buggy-version/app.src.main.java.net.studymongolian.chimee.FileUtils.java", "BodyUseAPI": [], "Fixed commit": "aeacf6e70bd7c3a7bcb18be986080b2e76db653d", "Url": "https://api.github.com/repos/suragch/Chimee", "Date": "2018-11-17T23:14:17Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Object>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (attendanceModel.getIsEarlyOut().equals(\"true\")) { status = \"Early-out\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3934/buggy-version/app.src.main.java.com.school.edsense_lite.attendance.AttendanceRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "adea0af15bc3c4740dd1f59f8360d51c03b2d741", "Url": "https://api.github.com/repos/shamsundhar/EdsensLite", "Date": "2018-12-13T00:53:58Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (documentSnapshot != null) user = ua.safetynet.user.User.fromMap(documentSnapshot.getData());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5086/buggy-version/app.src.main.java.ua.safetynet.Database.java", "BodyUseAPI": ["ua.safetynet.user.User.fromMap(documentSnapshot.getData())", "com.google.firebase.firestore.DocumentSnapshot.getData()"], "Fixed commit": "d7ee4a78aea45d3a78aae37dc60c1fdcaf88ad0b", "Url": "https://api.github.com/repos/CS495FinancialApp/SafetyNet", "Date": "2018-12-05T04:05:25Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (map == null) return new ua.safetynet.user.User();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5086/buggy-version/app.src.main.java.ua.safetynet.user.User.java", "BodyUseAPI": [], "Fixed commit": "d7ee4a78aea45d3a78aae37dc60c1fdcaf88ad0b", "Url": "https://api.github.com/repos/CS495FinancialApp/SafetyNet", "Date": "2018-12-05T04:05:25Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (segmentStart < 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3894/buggy-version/src.main.java.unikl.disco.PseudoPeriodicFunction.java", "BodyUseAPI": [], "Fixed commit": "01f99e0728bee72fc69a559f25760cdecb117ce2", "Url": "https://api.github.com/repos/NetCal/GSI_Input", "Date": "2017-08-12T15:36:59Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (prevDeliveryMan < (map.getDeliveryMen().size())) selectDeliveryMan(prevDeliveryMan);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/812/buggy-version/src.main.java.fr.insa.lyon.pld.agile.view.MapViewTextual.java", "BodyUseAPI": ["fr.insa.lyon.pld.agile.view.MapViewTextual.selectDeliveryMan(int)"], "Fixed commit": "8f78ed2293496f0a5d8c549d6f11c296ef45abe2", "Url": "https://api.github.com/repos/cheah96/PLD-Agile-H4402", "Date": "2018-12-12T08:27:01Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deliveryManIndex >= (map.getDeliveryMen().size())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/812/buggy-version/src.main.java.fr.insa.lyon.pld.agile.view.MapViewTextual.java", "BodyUseAPI": [], "Fixed commit": "8f78ed2293496f0a5d8c549d6f11c296ef45abe2", "Url": "https://api.github.com/repos/cheah96/PLD-Agile-H4402", "Date": "2018-12-12T08:27:01Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(routingTable.isEmpty())) { lk.uom.cse14.dsd.msghandler.RoutingEntry tempEntry = routingTable.get((((int) ((java.lang.Math.random()) * 100)) % (routingTable.size()))); if ((tempEntry.getStatus()) == (RoutingEntry.Status.ONLINE)) { destinationEntry = tempEntry; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/774/buggy-version/src.main.java.lk.uom.cse14.dsd.msghandler.QueryHandler.java", "BodyUseAPI": ["java.util.ArrayList<lk.uom.cse14.dsd.msghandler.RoutingEntry>.size()", "java.util.ArrayList<lk.uom.cse14.dsd.msghandler.RoutingEntry>.get((((int) ((java.lang.Math.random()) * 100)) % (routingTable.size())))"], "Fixed commit": "05cbe7f8d77c2ccff032308fd1fe0cabebb237af", "Url": "https://api.github.com/repos/umstek/dsd", "Date": "2018-11-29T21:47:01Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ofbiz.entity.GenericValue.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (paperCategoryKNCId != null) if (ok && (paperCategoryKNCId.equals(\"SCOPUS\"))) isiPapers.add(p);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6352/buggy-version/ofbiz-release12.04.hot-deploy.bkeuniv.src.org.ofbiz.bkeuniv.paperdeclaration.PaperDeclarationUtil.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "43e7789a34a9111fc5641aeff7fb5ca91a9358e5", "Url": "https://api.github.com/repos/dungkhmt/bkofbiz", "Date": "2018-12-18T16:37:14Z"},
{"Line": "=>6372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ofbiz.entity.Delegator.findByPrimaryKey(java.lang.String,org.ofbiz.base.util.UtilMisc.toMap(\"facultyId\", facultyId))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (faculty != null) facultyName = ((java.lang.String) (faculty.get(\"facultyName\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6352/buggy-version/ofbiz-release12.04.hot-deploy.bkeuniv.src.org.ofbiz.bkeuniv.paperdeclaration.PaperDeclarationUtil.java", "BodyUseAPI": ["org.ofbiz.entity.GenericValue.get(java.lang.String)"], "Fixed commit": "43e7789a34a9111fc5641aeff7fb5ca91a9358e5", "Url": "https://api.github.com/repos/dungkhmt/bkofbiz", "Date": "2018-12-18T16:37:14Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (character.getClassName().equals(\"Elf\")) { java.lang.System.out.println(\"Elfs don`t fight with each other. First sacrifices himself in the name of the Queen\"); character.setHp(0); }else if ((this.getPower()) > (character.getPower())) { java.lang.System.out.println((\"Elf kills \" + (character.getClassName()))); character.setHp(0); }else { java.lang.System.out.println(((\"Elf is to weak, power of \" + (character.getClassName())) + \" is decreased\")); character.setPower(((character.getPower()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6473/buggy-version/src.main.java.characters.Elf.java", "BodyUseAPI": ["java.lang.Character.getClassName()", "java.lang.Character.setHp(int)", "java.lang.Character.getPower()", "java.io.PrintStream.println(((\"Elf is to weak, power of \" + (character.getClassName())) + \" is decreased\"))", "java.lang.Character.getPower()", "java.lang.Character.setHp(int)", "java.lang.Character.setPower(((character.getPower()) - 1))", "java.io.PrintStream.println((\"Elf kills \" + (character.getClassName())))", "java.lang.Character.getClassName()"], "Fixed commit": "c7e3d9fc4876d6f2b9e4a2ca58991b2b339b684b", "Url": "https://api.github.com/repos/sashkopotapov/HeroesGame", "Date": "2018-12-14T22:53:57Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (character.getClassName().equals(\"Hobbit\")) { java.lang.System.out.println(\"Hobbits make deal and first pretends to be dead\"); character.setHp(0); }else { toCry(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/6473/buggy-version/src.main.java.characters.Hobbit.java", "BodyUseAPI": ["java.lang.Character.setHp(int)"], "Fixed commit": "c7e3d9fc4876d6f2b9e4a2ca58991b2b339b684b", "Url": "https://api.github.com/repos/sashkopotapov/HeroesGame", "Date": "2018-12-14T22:53:57Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(item.getParentUserID().equals(User.instance.getUid()))) { intent = new android.content.Intent(getContext(), ch.epfl.sweng.runpharaa.user.otherProfile.OtherUsersProfileActivity.class); }else { intent = new android.content.Intent(getContext(), ch.epfl.sweng.runpharaa.user.myProfile.UsersProfileActivity.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9659/buggy-version/app.src.main.java.ch.epfl.sweng.runpharaa.FragmentFollowing.java", "BodyUseAPI": [], "Fixed commit": "a567a447f5cb38b6fe2b95a14c37146899487965", "Url": "https://api.github.com/repos/somecookie/runPHARAA", "Date": "2018-11-26T18:04:46Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ad) == null) || ((ad.creative) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1544/buggy-version/superawesome-base.src.main.java.tv.superawesome.sdk.publisher.SABannerAd.java", "BodyUseAPI": [], "Fixed commit": "3c79f2377c3ab9dd687215f7d6d7f58de682c6f7", "Url": "https://api.github.com/repos/SuperAwesomeLTD/sa-mobile-sdk-android", "Date": "2018-11-21T15:14:35Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.game.GameState.getInstance().loadMapFromFile(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result) { views.game.StateView.getInstance().showPlayerView(); }else { javax.swing.JOptionPane.showMessageDialog(null, \"Not a valid map!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9205/buggy-version/src.controllers.game.PlayerSetupController.java", "BodyUseAPI": [], "Fixed commit": "a0719072e00ec0ccad54a6e7da5f85f92652d374", "Url": "https://api.github.com/repos/xwang1109/SOEN6441-22", "Date": "2018-11-29T20:56:49Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (column == null) parsedInput.setInputType(com.drop_token.game_utils.InputParser.InputType.GET);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2946/buggy-version/src.com.drop_token.game_utils.InputParser.java", "BodyUseAPI": [], "Fixed commit": "d79689c03480733e71981e933a61e6fbb647c3cc", "Url": "https://api.github.com/repos/BassamAMansour/Drop_Token", "Date": "2018-12-24T15:15:59Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (column == null) parsedInput.setInputType(com.drop_token.game_utils.InputParser.InputType.BOARD);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2946/buggy-version/src.com.drop_token.game_utils.InputParser.java", "BodyUseAPI": [], "Fixed commit": "d79689c03480733e71981e933a61e6fbb647c3cc", "Url": "https://api.github.com/repos/BassamAMansour/Drop_Token", "Date": "2018-12-24T15:15:59Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (column == null) parsedInput.setInputType(com.drop_token.game_utils.InputParser.InputType.EXIT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/2946/buggy-version/src.com.drop_token.game_utils.InputParser.java", "BodyUseAPI": [], "Fixed commit": "d79689c03480733e71981e933a61e6fbb647c3cc", "Url": "https://api.github.com/repos/BassamAMansour/Drop_Token", "Date": "2018-12-24T15:15:59Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (thing == null) { throw new java.lang.IllegalArgumentException(\"no null values\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1157/buggy-version/OrderedArrayList.java", "BodyUseAPI": [], "Fixed commit": "15c5a07d55740f0f0dc36d4deae3c0ab744bdba8", "Url": "https://api.github.com/repos/mchan5205/MKS21X-OrderedArrayList", "Date": "2018-11-05T04:12:46Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.Jsoup.parse(rootNodeStr).getElementById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (list != null) { org.jsoup.select.Elements nList = list.children(); for (int temp = 0; temp < (nList.size()); temp++) { org.jsoup.nodes.Element n = nList.get(temp); announcement_list.add(new edu_cn.pku.course.fragments.AnnouncementListFragment.AnnouncementInfo(n)); } adapter.updateList(announcement_list); if (showAnimation) mRecyclerView.scheduleLayoutAnimation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3618/buggy-version/app.src.main.java.edu_cn.pku.course.fragments.AnnouncementListFragment.java", "BodyUseAPI": ["org.jsoup.nodes.Element.children()"], "Fixed commit": "8ebc8d0d51c18b9464eac39e490fcc4850451751", "Url": "https://api.github.com/repos/cbwang2016/PKUCourses", "Date": "2018-12-10T03:40:30Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (elasticsearchController.isConnected()) { elasticsearchController.pull(); localStorageController.push(); }else { localStorageController.loadData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1091/buggy-version/app.src.main.java.com.example.mdbook.DataManager.java", "BodyUseAPI": ["com.example.mdbook.ElasticsearchController.pull()"], "Fixed commit": "d18c64260d6f1f0bc8113008282960edf7fe2409", "Url": "https://api.github.com/repos/CMPUT301F18T01/MDBook", "Date": "2018-11-30T05:16:34Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hidden && ((cardList.size()) > 0)) { java.lang.String FormatCard = \" %-24s \"; java.lang.String BlankCardLine = \"| %-21s | \"; printSpaceBetweenCardsAndBoard(cardList); for (int i = 0; i < (cardList.size()); i++) { java.lang.System.out.printf(FormatCard, \"-----------------------\"); } for (int i = 0; i < 7; i++) { java.lang.System.out.println(); printSpaceBetweenHiddenCardsAndBoard(cardList); for (int j = 0; j < (cardList.size()); j++) { if (i == 3) { java.lang.System.out.printf(BlankCardLine, (\" Card \" + (j + 1))); }else { java.lang.System.out.printf(BlankCardLine, \"\"); } } } printSpaceBetweenCardsAndBoard(cardList); for (int i = 0; i < (cardList.size()); i++) { java.lang.System.out.printf(FormatCard, \"-----------------------\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/3954/buggy-version/src.main.java.GUI.java", "BodyUseAPI": ["GUI.printSpaceBetweenHiddenCardsAndBoard(java.util.ArrayList<cards.Card>)", "java.util.ArrayList<cards.Card>.size()", "java.util.ArrayList<cards.Card>.size()", "java.util.ArrayList<cards.Card>.size()", "GUI.printSpaceBetweenCardsAndBoard(java.util.ArrayList<cards.Card>)", "GUI.printSpaceBetweenCardsAndBoard(java.util.ArrayList<cards.Card>)"], "Fixed commit": "c56c07758164a30ea4cd6af811c961603ce16f70", "Url": "https://api.github.com/repos/fransstrom/grimestone", "Date": "2018-11-22T17:09:13Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (project.isDisposed()) { com.eastwood.tools.idea.VirtualFileManager.getInstance().removeVirtualFileListener(virtualFileListener); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/984/buggy-version/src.com.eastwood.tools.idea.MicroModuleService.java", "BodyUseAPI": [], "Fixed commit": "06ad5e3d6613f984a646aeffb9d8b4f85cf74621", "Url": "https://api.github.com/repos/EastWoodYang/micro-module-idea-plugin", "Date": "2018-11-28T11:02:26Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(p.isAusente1())) && (!(p.isAusente2()))) pe++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/5874/buggy-version/ArbitroMetro.src.arbitrometro.Liga.java", "BodyUseAPI": [], "Fixed commit": "a0a3fdb97db00efcd11a1c0193f8e6ec35869573", "Url": "https://api.github.com/repos/chelunike/ArbitroMetro", "Date": "2018-11-04T11:51:56Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ju) != null) { ju.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1817/buggy-version/src.main.java.com.anbang.qipai.fangpaomajiang.cqrs.c.domain.MajiangGame.java", "BodyUseAPI": [], "Fixed commit": "1efdfc80bfe6cae590dba73d9a5d3f2fa424a54a", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_fangpaomajiang", "Date": "2018-11-29T07:57:14Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nodeArray[fileReader.CSVReader.findLink(csvArray[i][3])]) != null) { nodeArray[i].setRight(nodeArray[fileReader.CSVReader.findLink(csvArray[i][3])]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1349/buggy-version/src.fileReader.CSVReader.java", "BodyUseAPI": ["nodeArray[i].setRight(nodeArray[fileReader.CSVReader.findLink(csvArray[i][3])])", "fileReader.CSVReader.findLink(java.lang.String)"], "Fixed commit": "763fe9200c0cc0320bb012404d64c3e4a5f4949f", "Url": "https://api.github.com/repos/CSCI2082Veteranbenifits/FinalProject", "Date": "2018-11-04T20:55:22Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((csvArray[i][2]) != null) { nodeArray[i].setLeft(nodeArray[fileReader.CSVReader.findLink(csvArray[i][2])]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/1349/buggy-version/src.fileReader.CSVReader.java", "BodyUseAPI": ["nodeArray[i].setLeft(nodeArray[fileReader.CSVReader.findLink(csvArray[i][2])])", "fileReader.CSVReader.findLink(java.lang.String)"], "Fixed commit": "763fe9200c0cc0320bb012404d64c3e4a5f4949f", "Url": "https://api.github.com/repos/CSCI2082Veteranbenifits/FinalProject", "Date": "2018-11-04T20:55:22Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mActiveDialog.isShowing()) { mActiveDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V172/9203/buggy-version/browser.src.main.java.org.xwalk.core.MyXWalkDialogManager.java", "BodyUseAPI": ["android.app.Dialog.dismiss()"], "Fixed commit": "402962ac5d754e2577ea8fe38c61fbd34fdb3f17", "Url": "https://api.github.com/repos/yuliskov/SmartYouTubeTV", "Date": "2018-12-07T05:25:26Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isValidCaseData(ccdRequest))) { return new org.springframework.http.ResponseEntity(\"Missing case data from CCD request.\", org.springframework.http.HttpStatus.BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3026/buggy-version/src.main.java.uk.gov.hmcts.reform.finrem.caseorchestration.controllers.FeePaymentController.java", "BodyUseAPI": [], "Fixed commit": "19b56f8d3d4977abacae0cb142525172e5542d06", "Url": "https://api.github.com/repos/hmcts/finrem-case-orchestration-service", "Date": "2018-11-19T11:45:28Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cornellappdev.android.eatery.model.DiningHallModel.getIntervalByDateAndType(org.threeten.bp.LocalDate,com.cornellappdev.android.eatery.model.enums.MealType)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (interval == null) { interval = dm.getIntervalByDateAndType(date, com.cornellappdev.android.eatery.BRUNCH); mealType = BRUNCH; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5859/buggy-version/app.src.main.java.com.cornellappdev.android.eatery.ExpandableListAdapter.java", "BodyUseAPI": [], "Fixed commit": "23b7497334559b82dddc22f70e57cdc1ff78aae1", "Url": "https://api.github.com/repos/cuappdev/eatery-android", "Date": "2018-11-04T21:01:04Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == (org.json.JSONObject.NULL)) { value = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1787/buggy-version/actors.common.src.main.java.org.sunbird.learner.util.ContentSearchUtil.java", "BodyUseAPI": [], "Fixed commit": "4abcf79fd344bd356d103af44234b110da6dbe8b", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-12-29T13:20:52Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tok.hasMoreTokens()) round = tok.nextToken().trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9685/buggy-version/src.main.java.de.sandkastenliga.resultserver.services.sportsinfosource.kicker.KickerSportsInfoSource.java", "BodyUseAPI": ["java.lang.String.trim()", "java.util.StringTokenizer.nextToken()"], "Fixed commit": "bbedb4f7e837125fac10f2fd1ffd96a5eb8402fd", "Url": "https://api.github.com/repos/glaures/resultserver", "Date": "2018-12-26T15:39:19Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((slotAfter.getLayer()) != null) { taskMappersController.unassignTasksForLayer(slotAfter.getLayer()); slotAfter.setLayer(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4145/buggy-version/backend.src.main.java.controllers.delegates.HquartersDelegate.java", "BodyUseAPI": ["controllers.delegates.Slot.setLayer(<nulltype>)", "controllers.delegates.Slot.getLayer()", "controllers.delegates.TaskMappersController.unassignTasksForLayer(slotAfter.getLayer())"], "Fixed commit": "4e6c5c8a8276935683259ede9f3d05b8e87ef56d", "Url": "https://api.github.com/repos/lxdi/planner-server", "Date": "2018-12-19T15:06:11Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { context.startForegroundService(intent); }else { context.startService(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2186/buggy-version/framemonitor-android.src.main.java.com.vip001.monitor.services.IPCBinder.java", "BodyUseAPI": [], "Fixed commit": "ca6ba6a6ff6deff0ac101140ed2f135db977d065", "Url": "https://api.github.com/repos/vip001/framemonitor", "Date": "2018-12-25T03:46:22Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((drawPile.size()) < 10) { java.util.Collections.shuffle(discardPile); drawPile.addAll(discardPile); discardPile.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/318/buggy-version/app.src.main.java.com.example.jameswilliams.nu_deal.nu_deal_game.GameState.java", "BodyUseAPI": ["java.util.ArrayList<com.example.jameswilliams.nu_deal.nu_deal_game.Card>.addAll(java.util.ArrayList<com.example.jameswilliams.nu_deal.nu_deal_game.Card>)"], "Fixed commit": "4de09b2f5fc4d211ac715ca650561664441442a4", "Url": "https://api.github.com/repos/mseckykoebel/NUDeal", "Date": "2018-12-17T01:57:33Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (windowFrameDefinition != null) { this.windowFrameDefinition = windowFrameDefinition; }else { this.windowFrameDefinition = io.crate.analyze.WindowDefinition.DEFAULT_WINDOW_FRAME; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1281/buggy-version/sql.src.main.java.io.crate.analyze.WindowDefinition.java", "BodyUseAPI": [], "Fixed commit": "ede0d2a8d563b669c82ef9968d906c21aa3cc1c6", "Url": "https://api.github.com/repos/crate/crate", "Date": "2018-12-16T22:49:01Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((joueur1.vie) <= 0) { java.lang.System.out.println(\"Le joueur 1 a perdu !\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4965/buggy-version/src.com.lelaboratoiredespossibles.Main.java", "BodyUseAPI": [], "Fixed commit": "7b01d85b82b81d7f156d2cfdcae0b3f89f9990b0", "Url": "https://api.github.com/repos/colinfaivre/MagiWorld", "Date": "2018-12-13T10:19:24Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((joueur2.vie) <= 0) { java.lang.System.out.println(\"Le joueur 2 a perdu !\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4965/buggy-version/src.com.lelaboratoiredespossibles.Main.java", "BodyUseAPI": [], "Fixed commit": "7b01d85b82b81d7f156d2cfdcae0b3f89f9990b0", "Url": "https://api.github.com/repos/colinfaivre/MagiWorld", "Date": "2018-12-13T10:19:24Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chessPiece.get(i).getPlayer()) == (turn)) { java.lang.System.out.println(\"1\"); canKillKing = canKillKing || (chessPiece.get(i).canKillKing()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2364/buggy-version/src.scene.Game.java", "BodyUseAPI": ["java.util.ArrayList<chessPiece.ChessPiece>.get(int)", "chessPiece.get(i).canKillKing()"], "Fixed commit": "c4a9f540a03ab4e7ca3b778997eaa2291b3403f1", "Url": "https://api.github.com/repos/focusjk/Indychess", "Date": "2018-12-06T19:12:25Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!isWin1) && isWin2) { isEnd = true; timer.stop(); player1.stopThread(); player2.stopThread(); getChildren().add(new scene.CongratModal(player2.getName(), \"winner\")); }else { boolean canMove = false; boolean canKillKing = false; for (int i = 0; i < (chessPiece.size()); i++) { if ((chessPiece.get(i).getPlayer()) == (turn)) { java.lang.System.out.println(\"1\"); canKillKing = canKillKing || (chessPiece.get(i).canKillKing()); } if (((chessPiece.get(i).getPlayer()) == (turn)) && (chessPiece.get(i).isMovable())) { canMove = true; } } if (canKillKing) { if ((turn) == 1) { isEnd = true; timer.stop(); player1.stopThread(); player2.stopThread(); getChildren().add(new scene.CongratModal(player1.getName(), \"winner\")); }else if ((turn) == 2) { isEnd = true; timer.stop(); player1.stopThread(); player2.stopThread(); getChildren().add(new scene.CongratModal(player2.getName(), \"winner\")); } }else if (!canMove) { isEnd = true; timer.stop(); player1.stopThread(); player2.stopThread(); getChildren().add(new scene.CongratModal((((player1.getName()) + \"\\n & \\n\") + (player2.getName())), \"draw\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2364/buggy-version/src.scene.Game.java", "BodyUseAPI": [], "Fixed commit": "c4a9f540a03ab4e7ca3b778997eaa2291b3403f1", "Url": "https://api.github.com/repos/focusjk/Indychess", "Date": "2018-12-06T19:12:25Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (b.getType().contains(\"Frame\")) { g.setColor(java.awt.Color.WHITE); for (int i = 0; i < (b.getBuildItemsRequired().size()); i++) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6348/buggy-version/Display.java", "BodyUseAPI": ["Building.getBuildItemsRequired()", "b.getBuildItemsRequired().size()"], "Fixed commit": "48e31406f84963c035b56612c94e67c0ea4a8867", "Url": "https://api.github.com/repos/Kryptikz/Civility", "Date": "2018-11-25T16:14:11Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((player.getHotbar()[player.getHotBarItemSelected()]) != null) && ((player.getHotbar()[player.getHotBarItemSelected()].getQuantity()) <= 0)) { player.getHotbar()[player.getHotBarItemSelected()] = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6348/buggy-version/Display.java", "BodyUseAPI": ["Player.getHotbar()", "Player.getHotBarItemSelected()"], "Fixed commit": "48e31406f84963c035b56612c94e67c0ea4a8867", "Url": "https://api.github.com/repos/Kryptikz/Civility", "Date": "2018-11-25T16:14:11Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["playlistView.getSelectionModel().getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (chosenPlaylist != null) { playlistSongsView.setItems(mtmodel.getPlaylistSongs(chosenPlaylist)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2892/buggy-version/src.mytunes.gui.controller.MyTunesController.java", "BodyUseAPI": ["mytunes.gui.model.MTModel.getPlaylistSongs(mytunes.be.Playlist)", "javafx.scene.control.ListView<mytunes.be.Song>.setItems(mtmodel.getPlaylistSongs(chosenPlaylist))"], "Fixed commit": "ee3bc8daf175003d589781bfcf713dcd1c61effe", "Url": "https://api.github.com/repos/PhilipVJ/myTunesHCPC", "Date": "2018-11-30T11:50:05Z"},
{"Line": "=>766", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isName()) { if (!(attr.equals(\"\"))) { attr += \", \"; } attr += maybeItalics(\"name\", isHtml); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2893/buggy-version/app.src.main.java.org.tlhInganHol.android.klingonassistant.KlingonContentProvider.java", "BodyUseAPI": [], "Fixed commit": "a158d190ac939ddb6ab6ac993712ef84c85f6b7a", "Url": "https://api.github.com/repos/De7vID/klingon-assistant-android", "Date": "2018-11-18T23:15:54Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["util.ParseWhere.splitWhere(net.sf.jsqlparser.expression.Expression)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((exps.size()) == 0) Method = util.Catalog.BNLJ;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6004/buggy-version/Project4.src.visitor.PhysicalPlanBuilder.java", "BodyUseAPI": [], "Fixed commit": "9ad4700bb10ff740dc5b77fe344bd472c5df594d", "Url": "https://api.github.com/repos/hp394/CS4321-Project", "Date": "2018-11-29T02:19:04Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.math.BigDecimal.scale()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (scale == 0) { if ((((outText.length()) >= 16) && (com.alibaba.fastjson.serializer.SerializerFeature.isEnabled(features, out.features, SerializerFeature.BrowserCompatible))) && (((val.compareTo(com.alibaba.fastjson.serializer.BigDecimalCodec.LOW)) < 0) || ((val.compareTo(com.alibaba.fastjson.serializer.BigDecimalCodec.HIGH)) > 0))) { out.writeString(outText); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4158/buggy-version/src.main.java.com.alibaba.fastjson.serializer.BigDecimalCodec.java", "BodyUseAPI": [], "Fixed commit": "e8c0498d3d11b67544e9c9df2ee59412b680c10c", "Url": "https://api.github.com/repos/GulajavaMinistudio/fastjson", "Date": "2018-12-09T13:20:23Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Main.bookWritten) == false) { java.lang.System.out.println(\"\\\"The Autobiography of...\\\" with the rest of the title empty.\"); }else { java.lang.System.out.println(\"\\\"The Autobiography of Pranav Kalra\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/689/buggy-version/Main.java", "BodyUseAPI": [], "Fixed commit": "569da05d28e9ccbc3ea6eed2201b206402c9c7f2", "Url": "https://api.github.com/repos/pranav-kalra/Escape", "Date": "2018-12-03T23:40:46Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.hospitalcore.PatientQueueService.getOpdPatientQueueById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (opdPatientQueue != null) { model.addAttribute(\"visitStatus\", opdPatientQueue.getReferralConceptName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3392/buggy-version/omod.src.main.java.org.openmrs.module.patientdashboard.web.controller.MainController.java", "BodyUseAPI": ["org.springframework.ui.Model.addAttribute(java.lang.String,opdPatientQueue.getReferralConceptName())", "org.openmrs.module.hospitalcore.model.OpdPatientQueue.getReferralConceptName()"], "Fixed commit": "e41141fb623dcad4cdeaa300321791f284e3924d", "Url": "https://api.github.com/repos/hispindia/his-patient-dashboard", "Date": "2018-11-01T09:07:05Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Thread.currentThread().isInterrupted()) { java.lang.Thread.currentThread().interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1882/buggy-version/chapter_005.src.main.java.pool.ThreadPool.java", "BodyUseAPI": [], "Fixed commit": "2cda69dc94d86bfb8dbb4941b8cdcea832d2713d", "Url": "https://api.github.com/repos/IBryt/job4j", "Date": "2018-12-21T18:31:17Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Thread.currentThread().isInterrupted()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1882/buggy-version/chapter_005.src.main.java.pool.ThreadPool.java", "BodyUseAPI": [], "Fixed commit": "2cda69dc94d86bfb8dbb4941b8cdcea832d2713d", "Url": "https://api.github.com/repos/IBryt/job4j", "Date": "2018-12-21T18:31:17Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((render) != null) render = findClientIds(render, component, context);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2957/buggy-version/qa-boot.src.main.java.com.quakearts.webapp.facelets.bootstrap.behaviour.AutoCompleteBehavior.java", "BodyUseAPI": [], "Fixed commit": "2103b39685475fecbec040a87f988b0500188111", "Url": "https://api.github.com/repos/kwakutwumasi/Quakearts-Webtools", "Date": "2018-11-10T19:19:14Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((execute) != null) execute = findClientIds(render, component, context);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2957/buggy-version/qa-boot.src.main.java.com.quakearts.webapp.facelets.bootstrap.behaviour.AutoCompleteBehavior.java", "BodyUseAPI": [], "Fixed commit": "2103b39685475fecbec040a87f988b0500188111", "Url": "https://api.github.com/repos/kwakutwumasi/Quakearts-Webtools", "Date": "2018-11-10T19:19:14Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.compare(float,float)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result != 0) return result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8232/buggy-version/app.src.main.java.edu.ucsb.cs184.moments.moments.Post.java", "BodyUseAPI": [], "Fixed commit": "b821f5f9a963842fd66c3bb176988ad96a9556d6", "Url": "https://api.github.com/repos/DennisZZH/Moments", "Date": "2018-12-10T20:29:35Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.util.Arrays.equals(exchangeCapsule.getFirstTokenId(), \"_\".getBytes()))) { exchangeCapsule.setFirstTokenId(assetNameToIdMap.get(org.tron.common.utils.ByteArray.toStr(exchangeCapsule.getFirstTokenId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/761/buggy-version/src.main.java.org.tron.core.db.api.AssetUpdateHelper.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, byte[]>.get(org.tron.common.utils.ByteArray.toStr(exchangeCapsule.getFirstTokenId()))", "org.tron.common.utils.ByteArray.toStr(exchangeCapsule.getFirstTokenId())", "org.tron.core.capsule.ExchangeCapsule.setFirstTokenId(byte[])", "org.tron.core.capsule.ExchangeCapsule.getFirstTokenId()"], "Fixed commit": "6b3305d3bdfe2359328fc229c2f0ac0cc291cbd9", "Url": "https://api.github.com/repos/tronprotocol/java-tron", "Date": "2018-11-14T06:48:12Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.util.Arrays.equals(exchangeCapsule.getSecondTokenId(), \"_\".getBytes()))) { exchangeCapsule.setSecondTokenId(assetNameToIdMap.get(org.tron.common.utils.ByteArray.toStr(exchangeCapsule.getSecondTokenId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/761/buggy-version/src.main.java.org.tron.core.db.api.AssetUpdateHelper.java", "BodyUseAPI": ["org.tron.core.capsule.ExchangeCapsule.getSecondTokenId()", "org.tron.core.capsule.ExchangeCapsule.setSecondTokenId(byte[])", "java.util.HashMap<java.lang.String, byte[]>.get(org.tron.common.utils.ByteArray.toStr(exchangeCapsule.getSecondTokenId()))", "org.tron.common.utils.ByteArray.toStr(exchangeCapsule.getSecondTokenId())"], "Fixed commit": "6b3305d3bdfe2359328fc229c2f0ac0cc291cbd9", "Url": "https://api.github.com/repos/tronprotocol/java-tron", "Date": "2018-11-14T06:48:12Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.thatsmusic99.headsplus.HeadsPlus.getNMS()", "org.bukkit.event.inventory.InventoryClickEvent.getCursor()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ist.getType().equals(nms.getSkullMaterial(1).getType())) { io.github.thatsmusic99.headsplus.config.HeadsPlusConfigHeads hpch = hp.getHeadsConfig(); java.lang.String s = nms.getType(ist).toLowerCase(); if (((hpch.mHeads.contains(s)) || (hpch.uHeads.contains(s))) || (s.equalsIgnoreCase(\"player\"))) { io.github.thatsmusic99.headsplus.api.HPPlayer pl = io.github.thatsmusic99.headsplus.api.HPPlayer.getHPPlayer(((org.bukkit.OfflinePlayer) (e.getWhoClicked()))); pl.addMask(s); io.github.thatsmusic99.headsplus.events.MaskEvent.maskMonitors.put(((org.bukkit.entity.Player) (e.getWhoClicked())), new org.bukkit.scheduler.BukkitRunnable() { @java.lang.Override public void run() { if ((e.getWhoClicked().getInventory().getItem(39)) == null) { io.github.thatsmusic99.headsplus.api.HPPlayer pl = io.github.thatsmusic99.headsplus.api.HPPlayer.getHPPlayer(((org.bukkit.OfflinePlayer) (e.getWhoClicked()))); pl.clearMask(); io.github.thatsmusic99.headsplus.events.MaskEvent.maskMonitors.remove(e.getWhoClicked()); cancel(); } } }); io.github.thatsmusic99.headsplus.events.MaskEvent.maskMonitors.get(e.getWhoClicked()).runTaskTimer(io.github.thatsmusic99.headsplus.HeadsPlus.getInstance(), 20, 40); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2658/buggy-version/main.java.io.github.thatsmusic99.headsplus.events.MaskEvent.java", "BodyUseAPI": ["nms.getType(ist).toLowerCase()", "io.github.thatsmusic99.headsplus.nms.NMSManager.getType(org.bukkit.inventory.ItemStack)"], "Fixed commit": "b4b03c60e8fa7621fa7450cda66d106d03680bdc", "Url": "https://api.github.com/repos/Thatsmusic99/HeadsPlus", "Date": "2018-11-19T17:06:36Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mappers.UserMapper.getInstance(\"pu\").getUserStockList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((userStockList.size()) > 0) { return sf.multiBatchFetch(userStockList); }else { return javax.ws.rs.core.Response.ok(gson.toJson(\"You are not following any stocks\")).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8929/buggy-version/src.main.java.rest.UserResource.java", "BodyUseAPI": ["rest.StockFetcher.multiBatchFetch(java.util.List<entity.Stocks>)"], "Fixed commit": "9972af40fdc9c5201191679a9d4f5a30e5277c3b", "Url": "https://api.github.com/repos/RasmusLumholdt/YDB-StockTrackerBackend", "Date": "2018-12-01T20:10:31Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((smeId.longValue()) < 0) smeId = new java.lang.Long((-(smeId.longValue())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8162/buggy-version/src.server.repository.RepositoryChecker.java", "BodyUseAPI": ["java.lang.Long.longValue()"], "Fixed commit": "f67585e8bce47beab4fc3ebc4a9ed0f52257af20", "Url": "https://api.github.com/repos/schedulix/schedulix", "Date": "2018-12-19T12:58:51Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (checker.checkCommandDistance(commandWordInput).equals(0)) { seedu.addressbook.autocorrect.AutoCorrect correction = new seedu.addressbook.autocorrect.AutoCorrect(); java.lang.String displayCommand = correction.checkCommand(commandWordInput); java.lang.String output = checker.checkDistance(commandWordInput); clearScreen(); if (!(output.equals(\"none\"))) { display(java.lang.String.format(dict.getCommandErrorMessage(), output)); display(displayCommand); }else { boolean isHQPFlag = password.isHQPUser(); if (isHQPFlag) { displayCommand = new seedu.addressbook.ui.IncorrectCommand(java.lang.String.format(seedu.addressbook.ui.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_ALL_USAGES)).feedbackToUser; }else { displayCommand = new seedu.addressbook.ui.IncorrectCommand(java.lang.String.format(seedu.addressbook.ui.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_PO_USAGES)).feedbackToUser; } display(displayCommand); } }else { clearScreen(); seedu.addressbook.ui.CommandResult result = logic.execute(userCommandText); displayResult(result); clearCommandInput(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8369/buggy-version/src.seedu.addressbook.ui.MainWindow.java", "BodyUseAPI": ["seedu.addressbook.autocorrect.AutoCorrect.checkCommand(java.lang.String)", "seedu.addressbook.autocorrect.CheckDistance.checkDistance(java.lang.String)"], "Fixed commit": "5e0b0a3931a83f917fe2e47ff0d51b8025e26bef", "Url": "https://api.github.com/repos/ShreyasKp/Main", "Date": "2018-11-01T13:34:41Z"},
{"Line": "=>1608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (listName == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/210/buggy-version/PerfectPantryApp.src.PerfectPantryApp.PerfectPantryGUI.java", "BodyUseAPI": [], "Fixed commit": "756fb941c8e271747e53de5a72cd106dade6c698", "Url": "https://api.github.com/repos/JGugel/Meal-Team-Six", "Date": "2018-12-09T05:58:22Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (adjustedVAF > 0) { adjustedVAFCorrect = adjustedVAF; }else { adjustedVAFCorrect = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5053/buggy-version/patient-reporter.src.main.java.com.hartwig.hmftools.patientreporter.report.util.PatientReportFormat.java", "BodyUseAPI": [], "Fixed commit": "35908c0352bf929d630b55d89776899e51334bc5", "Url": "https://api.github.com/repos/hartwigmedical/hmftools", "Date": "2018-12-21T11:34:55Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node != null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8268/buggy-version/untitled1.src.game.queue.Queue.java", "BodyUseAPI": [], "Fixed commit": "750dc31742811ccbbfcd41ceff283c6b3d28a078", "Url": "https://api.github.com/repos/SimasZ/Checkers-Design-Patterns-", "Date": "2018-12-04T16:24:20Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.toString()", "org.apache.axis2.context.MessageContext.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((HTTPConstants.HTTP_METHOD_POST.equals(httpMethod)) && ((java.lang.Integer.parseInt(contentLength)) != 0)) { contentType = PassThroughConstants.APPLICATION_OCTET_STREAM; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9034/buggy-version/modules.transports.core.nhttp.src.main.java.org.apache.synapse.transport.passthru.ServerWorker.java", "BodyUseAPI": [], "Fixed commit": "e125de1945539b33680ee379dd5ac3dd010ad357", "Url": "https://api.github.com/repos/vithu30/wso2-synapse-1", "Date": "2018-11-07T06:30:36Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expenseDate.after(currentDate)) { reoccurringExpensesTotalAmount += reoccurringExpenses.get(i).getReoccurringExpenseAmount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2334/buggy-version/app.src.main.java.com.felinewar.mymonies.AccountActivity.java", "BodyUseAPI": [], "Fixed commit": "723c1019932d3589b1f82ce68debc773af3d8765", "Url": "https://api.github.com/repos/roboticapostle/MyMonies", "Date": "2018-12-13T17:46:04Z"},
{"Line": "=>1011", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hasTextualContent(contentType)) { if ((captureJavascriptContent) && ((contentType.startsWith(\"application/javascript\")) || (contentType.startsWith(\"application/x-javascript\")))) { setTextOfEntry(entry, copy, contentType); }else if ((!(contentType.startsWith(\"application/javascript\"))) && (!(contentType.startsWith(\"application/x-javascript\")))) { setTextOfEntry(entry, copy, contentType); } }else if (captureBinaryContent) { setBinaryContentOfEntry(entry, copy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4437/buggy-version/browsermob-legacy.src.main.java.net.lightbody.bmp.proxy.http.BrowserMobHttpClient.java", "BodyUseAPI": ["net.lightbody.bmp.proxy.http.BrowserMobHttpClient.setTextOfEntry(net.lightbody.bmp.core.har.HarEntry,java.io.ByteArrayOutputStream,java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "net.lightbody.bmp.proxy.http.BrowserMobHttpClient.setTextOfEntry(net.lightbody.bmp.core.har.HarEntry,java.io.ByteArrayOutputStream,java.lang.String)"], "Fixed commit": "81ebc16f73a85e45999a4f5e37c26713df488a84", "Url": "https://api.github.com/repos/dlowless/browsermob-proxy", "Date": "2018-11-21T15:36:24Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sourceRegister2.startsWith(\"R\")) { sourceOperand2 = registerValue[registerCursor.get(sourceRegister2)]; }else { sourceOperand2 = java.lang.Integer.parseInt(sourceRegister2.replace(\"#\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5106/buggy-version/ecnu-kang.src.main.java.com.ecnu.kang.architecture.ProjectOne.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "530e9a2167c681c3b49407becc3c9fc115ad800a", "Url": "https://api.github.com/repos/kangwanqiang/passion-kang", "Date": "2018-11-21T15:48:01Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((recordList.size()) < 5) size = recordList.size(); else size = 5;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7136/buggy-version/app.src.main.java.org.isoron.uhabits.activities.achievements.DetailsController.java", "BodyUseAPI": ["java.util.ArrayList<org.isoron.uhabits.activities.achievements.Record>.size()"], "Fixed commit": "9c736471175427bfdc4e1dc69d46c50ab633e684", "Url": "https://api.github.com/repos/SyntaxError031/uhabits", "Date": "2018-11-06T07:26:29Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getTranslationY()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((type == (android.support.v4.view.ViewCompat.TYPE_NON_TOUCH)) && (translationY > (getLoadingMaxOffsetY()))) { consumed[1] = dy; ((android.support.v7.widget.RecyclerView) (target)).stopScroll(); android.util.Log.d(com.lsjwzh.widget.PullToRefreshContainer.TAG, \" onNestedPreScroll stop fling\"); }else if ((type == (android.support.v4.view.ViewCompat.TYPE_TOUCH)) && (translationY > 0)) { tryConsume(dyUnconsumed); consumed[1] = dy; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/52/buggy-version/widget.pulltorefresh.src.main.java.com.lsjwzh.widget.PullToRefreshContainer.java", "BodyUseAPI": [], "Fixed commit": "303c6d9817045bc73b2df2303161092514faf3be", "Url": "https://api.github.com/repos/lsjwzh/PowerfulScrollView", "Date": "2018-11-27T19:17:04Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mStacks[previousStack].getFirstCard()) != null) { mStacks[previousStack].getFirstCard().setCanMove(false); }else { int innerStackId = findInnerStack(previousStack); if (innerStackId != 99) { mStacks[innerStackId].getLastCard().setCanMove(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3717/buggy-version/app.src.main.java.com.example.judyy.grandnapoleonsolitairegame.Recorder.java", "BodyUseAPI": ["mStacks[previousStack].getFirstCard().setCanMove(boolean)", "mStacks[previousStack].getFirstCard()", "mStacks[innerStackId].getLastCard().setCanMove(boolean)", "com.example.judyy.grandnapoleonsolitairegame.Recorder.OneStep.findInnerStack(int)", "mStacks[innerStackId].getLastCard()"], "Fixed commit": "bce652323df74abcf3c5de41335bca89c7001acd", "Url": "https://api.github.com/repos/judyyes/2018_GNS", "Date": "2018-11-17T02:25:45Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.judyy.grandnapoleonsolitairegame.Card.getCurrentStackID()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((mStacks[removeStackId].getLastCard()) != null) { mStacks[removeStackId].getLastCard().setCanMove(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3717/buggy-version/app.src.main.java.com.example.judyy.grandnapoleonsolitairegame.Recorder.java", "BodyUseAPI": ["mStacks[removeStackId].getLastCard()", "mStacks[removeStackId].getLastCard().setCanMove(boolean)"], "Fixed commit": "bce652323df74abcf3c5de41335bca89c7001acd", "Url": "https://api.github.com/repos/judyyes/2018_GNS", "Date": "2018-11-17T02:25:45Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.next()) { return generatVehicleFromResultSet(rs); }else { return new dao.Vehicle(\"-1\", \"-1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5267/buggy-version/src.dao.VehicleManagerImpl.java", "BodyUseAPI": ["dao.VehicleManagerImpl.generatVehicleFromResultSet(java.sql.ResultSet)"], "Fixed commit": "46e0bf26aac5ee90a523986e256ca85c241b08be", "Url": "https://api.github.com/repos/wangzi6147/INFO5100-final-project-groupA", "Date": "2018-12-11T22:19:51Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (driverIdStr != null) { arrivalTime = java.sql.Timestamp.valueOf(arrivalStr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2836/buggy-version/src.java.model.BookingManager.java", "BodyUseAPI": [], "Fixed commit": "61ef305e40fdfa186fa176de6e63fac395a90945", "Url": "https://api.github.com/repos/SamPG96/AlphaCabs", "Date": "2018-11-26T14:33:17Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.anuke.mindustry.world.blocks.power.PowerGraph.getPowerNeeded()", "io.anuke.mindustry.world.blocks.power.PowerGraph.getPowerProduced()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((java.lang.Math.abs((powerNeeded - powerProduced))) > 1.0E-4F) { if (powerNeeded > powerProduced) { powerProduced += useBatteries((powerNeeded - powerProduced)); }else if (powerProduced > powerNeeded) { powerProduced -= chargeBatteries((powerProduced - powerNeeded)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4244/buggy-version/core.src.io.anuke.mindustry.world.blocks.power.PowerGraph.java", "BodyUseAPI": ["io.anuke.mindustry.world.blocks.power.PowerGraph.chargeBatteries(float)", "io.anuke.mindustry.world.blocks.power.PowerGraph.useBatteries(float)"], "Fixed commit": "558c89cc30b74a368066710fed94b88577146dae", "Url": "https://api.github.com/repos/Timmeey86/Mindustry", "Date": "2018-11-20T23:04:26Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["c1.getRoutes().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (r1 == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/464/buggy-version/app.src.main.java.ttr.up.edu.tickettoride.TTR_GameState.java", "BodyUseAPI": [], "Fixed commit": "a50ffc300ba1bbb640be7aa6780bd2d02941db99", "Url": "https://api.github.com/repos/Lexden12/TicketToRideGame", "Date": "2018-11-27T19:10:38Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cutoff > (arr.length)) java.lang.System.out.println(sb.substring(1)); else java.lang.System.out.println(sb.substring(1, cutoff));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1098/buggy-version/src.SortingAlgorithms.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.lang.StringBuilder.substring(int,int)"], "Fixed commit": "58803725cc628b23af52617e3372e48c7fe393d8", "Url": "https://api.github.com/repos/KarwaiKang/SortAMania", "Date": "2018-11-30T16:28:13Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cutoff > (arr.length)) java.lang.System.out.println(sb.substring(1)); else java.lang.System.out.println(sb.substring(1, cutoff));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1098/buggy-version/src.SortingAlgorithms.java", "BodyUseAPI": ["java.lang.StringBuilder.substring(int,int)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "58803725cc628b23af52617e3372e48c7fe393d8", "Url": "https://api.github.com/repos/KarwaiKang/SortAMania", "Date": "2018-11-30T16:28:13Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cutoff > (arr.length)) java.lang.System.out.println(sb.substring(1)); else java.lang.System.out.println(sb.substring(1, cutoff));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1098/buggy-version/src.SortingAlgorithms.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.lang.StringBuilder.substring(int,int)"], "Fixed commit": "58803725cc628b23af52617e3372e48c7fe393d8", "Url": "https://api.github.com/repos/KarwaiKang/SortAMania", "Date": "2018-11-30T16:28:13Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cutoff > (arr.length)) java.lang.System.out.println(sb.substring(1)); else java.lang.System.out.println(sb.substring(1, cutoff));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1098/buggy-version/src.SortingAlgorithms.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.lang.StringBuilder.substring(int,int)"], "Fixed commit": "58803725cc628b23af52617e3372e48c7fe393d8", "Url": "https://api.github.com/repos/KarwaiKang/SortAMania", "Date": "2018-11-30T16:28:13Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((j < ((lastPath.size()) - 1)) || (!(currentFieldMulti))) { closeArrayAndOrObject(lastPath.get(j), (j < ((lastPath.size()) - 1)), lastPath.get(j).contains(\"[\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3916/buggy-version/ldproxy-wfs3-geojson.src.main.java.de.ii.ldproxy.target.geojson.FeatureTransformerGeoJson.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.get(int)", "de.ii.ldproxy.target.geojson.FeatureTransformerGeoJson.closeArrayAndOrObject(java.lang.String,boolean,boolean)"], "Fixed commit": "4c53e152f172f7158d8d3fefa537479d2263359e", "Url": "https://api.github.com/repos/interactive-instruments/ldproxy", "Date": "2018-11-13T15:11:28Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (username.isEmpty()) { progressDialog.dismiss(); es.dmoral.toasty.Toasty.error(this, \"Please enter username.\", Toast.LENGTH_SHORT).show(); }else if (password.isEmpty()) { progressDialog.dismiss(); es.dmoral.toasty.Toasty.error(this, \"Please enter password.\", Toast.LENGTH_SHORT).show(); }else { firebaseAuth.signInWithEmailAndPassword(username, password).addOnCompleteListener(new com.google.android.gms.tasks.OnCompleteListener<com.google.firebase.auth.AuthResult>() { @java.lang.Override public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult> task) { if (task.isSuccessful()) { progressDialog.dismiss(); startActivity(new android.content.Intent(com.example.abhishektiwari.gpacalculator.LoginActivity.this, com.example.abhishektiwari.gpacalculator.GPAcalculator.class)); es.dmoral.toasty.Toasty.success(com.example.abhishektiwari.gpacalculator.LoginActivity.this, \"Login Successful\", Toast.LENGTH_SHORT).show(); }else { progressDialog.dismiss(); es.dmoral.toasty.Toasty.error(com.example.abhishektiwari.gpacalculator.LoginActivity.this, \"Login Failed\", Toast.LENGTH_SHORT).show(); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8480/buggy-version/app.src.main.java.com.example.abhishektiwari.gpacalculator.LoginActivity.java", "BodyUseAPI": ["firebaseAuth.signInWithEmailAndPassword(username, password).addOnCompleteListener(com.google.android.gms.tasks.OnCompleteListener<com.google.firebase.auth.AuthResult>)", "com.google.firebase.auth.FirebaseAuth.signInWithEmailAndPassword(java.lang.String,java.lang.String)"], "Fixed commit": "f28213747c0c4c2f676c694bcfee6d5c65ad8c62", "Url": "https://api.github.com/repos/zeus0789/GPA-Calculator", "Date": "2018-11-21T05:05:24Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (params.isSingleMetricExecution()) { weights = net.ssehub.kernel_haven.metric_haven.metric_components.weights.CachedWeightFactory.createVariabilityWeight(varModel, sdContainer, fdContainer, params); }else { weights = net.ssehub.kernel_haven.metric_haven.metric_components.weights.CachedWeightFactory.createAllCombinations(varModel, sdContainer, fdContainer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7906/buggy-version/src.net.ssehub.kernel_haven.metric_haven.code_metrics.MetricFactory.java", "BodyUseAPI": ["net.ssehub.kernel_haven.metric_haven.metric_components.weights.CachedWeightFactory.createVariabilityWeight(net.ssehub.kernel_haven.variability_model.VariabilityModel,net.ssehub.kernel_haven.metric_haven.filter_components.scattering_degree.ScatteringDegreeContainer,net.ssehub.kernel_haven.metric_haven.filter_components.feature_size.FeatureSizeContainer,net.ssehub.kernel_haven.metric_haven.code_metrics.MetricFactory.MetricCreationParameters)"], "Fixed commit": "7fe6523a0493420f38c29de0a75b8c341f1000b9", "Url": "https://api.github.com/repos/KernelHaven/MetricHaven", "Date": "2018-12-11T10:44:31Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m.find()) { func_name = m.group(1); }else { funcNamePattern = com.google.code.regexp.Pattern.compile(\"\\\\bc\\\\s*&&\\\\s*d\\\\.set\\\\([^,]+\\\\s*,\\\\s*\\\\([^)]*\\\\)\\\\s*\\\\(\\\\s*([a-zA-Z0-9$]+)\\\\(\"); m = funcNamePattern.matcher(response); if (m.find()) { func_name = m.group(1); }else { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2428/buggy-version/app.src.main.java.me.harshithgoka.youtubedl.YoutubeDL.Extractor.java", "BodyUseAPI": ["com.google.code.regexp.Matcher.group(int)"], "Fixed commit": "3102e0cbafbce335a4d182c9e694c1ce33ffed4e", "Url": "https://api.github.com/repos/tastelessjolt/youtube-dl-android", "Date": "2018-11-09T16:43:42Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(task.toString(),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(task1.isCompleted())) { alltasks.add(task1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9048/buggy-version/app.src.main.java.com.midterm.rose.whitebears_capstone.DashboardActivity.java", "BodyUseAPI": ["java.util.ArrayList<com.midterm.rose.whitebears_capstone.Task>.add(com.midterm.rose.whitebears_capstone.Task)"], "Fixed commit": "c35ed2fd11410bd0335268dddc1b105f61808e78", "Url": "https://api.github.com/repos/rosekal/WhiteBears-MobileDashboard", "Date": "2018-12-03T14:24:41Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.samue.facultyblueprint.Login.User.accessToken) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3294/buggy-version/app.src.main.java.com.example.samue.facultyblueprint.Maps.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "e4b96fab75cf2da1d729e53bcdb980912159052b", "Url": "https://api.github.com/repos/sammy9867/FacultyBluePrint", "Date": "2018-12-13T23:29:51Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ClassStuff.Subject.getSubject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sbj.students.indexOf(this)) == (-1)) sbj.addStudent(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3065/buggy-version/src.People.CollegeStudent.java", "BodyUseAPI": ["ClassStuff.Subject.addStudent(People.CollegeStudent)"], "Fixed commit": "2f633569af3ef292c8c94278f5a7b45f7559408a", "Url": "https://api.github.com/repos/Psiphonc/StudentManagementSystem", "Date": "2018-11-26T10:55:10Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.common.api.GoogleApiClient.blockingConnect()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (connectionResult.isSuccess()) { com.google.android.gms.common.api.OptionalPendingResult<com.google.android.gms.auth.api.signin.GoogleSignInResult> pendingResult = Auth.GoogleSignInApi.silentSignIn(edu.cnm.deepdive.mobilepunch.controller.FrontendApplication.instance.refreshClient); com.google.android.gms.auth.api.signin.GoogleSignInResult result = null; if (pendingResult.isDone()) { result = pendingResult.get(); }else { result = pendingResult.await(); } edu.cnm.deepdive.mobilepunch.controller.FrontendApplication.instance.account = result.getSignInAccount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6138/buggy-version/app.src.main.java.edu.cnm.deepdive.mobilepunch.controller.FrontendApplication.java", "BodyUseAPI": [], "Fixed commit": "73fe9a08a8f64696974cd194bcefd9a1c0f5ebfa", "Url": "https://api.github.com/repos/project-khronos/MobilePunch-FrontEnd", "Date": "2018-12-06T14:59:39Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMultiLayoutWidth) == 0) { mMultiLayoutWidth = getMeasuredWidth(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4512/buggy-version/multilayout.src.main.java.com.iPATHow.multilayout.MultiLayout.java", "BodyUseAPI": [], "Fixed commit": "36674d23a35072513d5415fd173720059ca654e3", "Url": "https://api.github.com/repos/iPATHow/multilayout", "Date": "2018-11-10T10:49:23Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (originalLimit.getLimitMoneyFlow().equals(limit.getLimitMoneyFlow())) { throw new seedu.planner.logic.commands.exceptions.CommandException(seedu.planner.logic.commands.EditLimitCommand.MESSAGE_SAME_LIMIT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9518/buggy-version/src.main.java.seedu.planner.logic.commands.EditLimitCommand.java", "BodyUseAPI": [], "Fixed commit": "0e105af7006afc52c78bf194945c1d94f8656144", "Url": "https://api.github.com/repos/nguyenngoclinhchi/addressbook-level4", "Date": "2018-11-10T15:51:25Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (existingEntry != null) { entry = existingEntry.get(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/371/buggy-version/src.concurrentHashTables.LockFreeRobinHoodHashing.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicReference<concurrentHashTables.LockFreeRobinHoodHashing.Node>.get()"], "Fixed commit": "0233ecacacd42c01ba9467bb265abbd0172a4c6e", "Url": "https://api.github.com/repos/JCai2017/ConcurrentHashTable", "Date": "2018-11-05T21:02:16Z"},
{"Line": "=>746", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((obj) instanceof org.structr.core.GraphObjectMap) { return ((org.structr.core.GraphObjectMap) (obj)).toMap().keySet().toArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3434/buggy-version/structr-core.src.main.java.org.structr.core.script.StructrScriptable.java", "BodyUseAPI": [], "Fixed commit": "ae648d6ee96efda2332be67bf11bd77d3f08f3d0", "Url": "https://api.github.com/repos/ckramp/structr", "Date": "2018-12-13T12:45:05Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((main.getDatabase().getDatabaseType()) != (com.morkaz.moxlibrary.database.sql.SQLDatabaseType.SQLITE)) { resultSet.deleteRow(); }else { java.util.List<java.lang.String> query2 = com.morkaz.moxlibrary.api.QueryUtils.constructQuerySingleValueSet(main.TABLE, main.ID_COLUMN, playerID, main.LAST_TITLE_COLUMN, \"NULL\", true, main.getDatabase().getDatabaseType()); query2.forEach(( q) -> main.getDatabase().updateAsync(q)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5368/buggy-version/src.main.java.com.morkaz.moxchattitles.managers.DataManager.java", "BodyUseAPI": ["main.getDatabase().updateAsync(java.lang.String)", "com.morkaz.moxchattitles.MoxChatTitles.getDatabase()", "java.util.List<java.lang.String>.forEach(java.util.function.Consumer<? super java.lang.String>)", "main.getDatabase().getDatabaseType()", "com.morkaz.moxchattitles.MoxChatTitles.getDatabase()", "com.morkaz.moxlibrary.api.QueryUtils.constructQuerySingleValueSet(main.TABLE,main.ID_COLUMN,java.lang.String,main.LAST_TITLE_COLUMN,java.lang.String,boolean,main.getDatabase().getDatabaseType())"], "Fixed commit": "3d1b538b6e3271fcda8b43d582455cff5624d4c9", "Url": "https://api.github.com/repos/GC2Network/MoxChatTitles", "Date": "2018-12-09T19:46:18Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chatTitle.getGuiItemStack()) != null) { guiItemStack = new org.bukkit.inventory.ItemStack(chatTitle.getGuiItemStack()); }else { org.bukkit.Bukkit.getLogger().warning((((\"[MoxChatTitles] \" + \"Gui item from chattitle: \\\"\") + (chatTitle.getTitleIndex())) + \"\\\" is null. Probably it has not loaded propetly on plugin start. Fix configuration and do /cht reload.\")); guiItemStack = new org.bukkit.inventory.ItemStack(org.bukkit.Material.NETHER_STAR, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5368/buggy-version/src.main.java.com.morkaz.moxchattitles.managers.GUIManager.java", "BodyUseAPI": ["com.morkaz.moxchattitles.data.ChatTitle.getGuiItemStack()", "com.morkaz.moxchattitles.data.ChatTitle.getTitleIndex()", "org.bukkit.Bukkit.getLogger().warning((((\"[MoxChatTitles] \" + \"Gui item from chattitle: \\\"\") + (chatTitle.getTitleIndex())) + \"\\\" is null. Probably it has not loaded propetly on plugin start. Fix configuration and do /cht reload.\"))"], "Fixed commit": "3d1b538b6e3271fcda8b43d582455cff5624d4c9", "Url": "https://api.github.com/repos/GC2Network/MoxChatTitles", "Date": "2018-12-09T19:46:18Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.ItemStack.getItemMeta()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((itemMeta.getLore()) != null) { java.lang.String lore = replacePlaceholders(player, playerData, chatTitle, java.lang.String.join(\"||\", itemMeta.getLore())); guiItemStack = com.morkaz.moxlibrary.api.ItemUtils.setItemLore(guiItemStack, lore); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5368/buggy-version/src.main.java.com.morkaz.moxchattitles.managers.GUIManager.java", "BodyUseAPI": ["com.morkaz.moxchattitles.managers.GUIManager.replacePlaceholders(org.bukkit.entity.Player,com.morkaz.moxchattitles.data.PlayerData,com.morkaz.moxchattitles.data.ChatTitle,java.lang.String)", "org.bukkit.inventory.meta.ItemMeta.getLore()", "java.lang.String.join(java.lang.String,itemMeta.getLore())"], "Fixed commit": "3d1b538b6e3271fcda8b43d582455cff5624d4c9", "Url": "https://api.github.com/repos/GC2Network/MoxChatTitles", "Date": "2018-12-09T19:46:18Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(is2D())) { mWidth = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3707/buggy-version/app.src.main.java.com.industry.printer.object.BarcodeObject.java", "BodyUseAPI": [], "Fixed commit": "2db099579c24c1fa64716c71c70b636747bcda50", "Url": "https://api.github.com/repos/kevin-zhaotk/Printer-AS", "Date": "2018-12-14T06:48:40Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tSwooshButton.getSelection()) { handleTSwooshButtonSelection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6438/buggy-version/main.plugins.org.talend.dataquality.record.linkage.ui.src.org.talend.dataquality.record.linkage.ui.section.SelectAlgorithmSection.java", "BodyUseAPI": [], "Fixed commit": "7bead21b05906ec22344a4ec190c3ab05df165d0", "Url": "https://api.github.com/repos/Talend/tdq-studio-se", "Date": "2018-11-09T04:20:14Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vsrButton.getSelection()) { handleVSRButtonSelection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6438/buggy-version/main.plugins.org.talend.dataquality.record.linkage.ui.src.org.talend.dataquality.record.linkage.ui.section.SelectAlgorithmSection.java", "BodyUseAPI": [], "Fixed commit": "7bead21b05906ec22344a4ec190c3ab05df165d0", "Url": "https://api.github.com/repos/Talend/tdq-studio-se", "Date": "2018-11-09T04:20:14Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.jpress.JPressOptions.getAsBool(java.lang.String)", "io.jpress.service.UserService.save(io.jpress.model.User)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (saveOk && emailValidate) { io.jpress.web.commons.UserEmailSender.sendEmailForUserRegisterActivate(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/948/buggy-version/jpress-web.src.main.java.io.jpress.web.front.UserController.java", "BodyUseAPI": [], "Fixed commit": "1b566267b43e4ded8fe1b68482e5baeb42851bfc", "Url": "https://api.github.com/repos/JpressProjects/jpress", "Date": "2018-12-07T07:07:54Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(seedu.address.commons.util.FileUtil.isDirectoryExists(directory))) { return folderNames; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7959/buggy-version/src.main.java.seedu.address.commons.util.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "4409cfb47428af504262c4c1c53fde832639415b", "Url": "https://api.github.com/repos/auskure/main", "Date": "2018-11-06T11:04:54Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.getGuild().getSelfMember().hasPermission(event.getMember().getVoiceState().getChannel(), Permission.VOICE_CONNECT)) { event.getGuild().getAudioManager().openAudioConnection(event.getMember().getVoiceState().getChannel()); event.reply(\"I have been summoned to your channel\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8775/buggy-version/src.main.java.me.melijn.jda.commands.music.SummonCommand.java", "BodyUseAPI": ["event.getGuild().getAudioManager()", "event.getGuild().getAudioManager().openAudioConnection(event.getMember().getVoiceState().getChannel())", "event.getMember().getVoiceState().getChannel()", "me.melijn.jda.blub.CommandEvent.reply(java.lang.String)", "me.melijn.jda.blub.CommandEvent.getGuild()", "me.melijn.jda.blub.CommandEvent.getMember()", "event.getMember().getVoiceState()"], "Fixed commit": "c857b52c8de8f56d807cfeb3c87ebfde97a8b7a1", "Url": "https://api.github.com/repos/ToxicMushroom/Melijn", "Date": "2018-11-04T20:29:05Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((ps != null) && ((ele.getAsJsonObject().get(\"query\")) instanceof com.google.gson.JsonObject)) { com.google.gson.JsonObject product = ele.getAsJsonObject().get(\"query\").getAsJsonObject(); ps.setName(product.get(\"value\").getAsString()); productprices.add(ps); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7239/buggy-version/src.main.java.apiService.backend.getProductName.java", "BodyUseAPI": ["ele.getAsJsonObject().get(java.lang.String)", "java.util.List<apiService.backend.ProductPrices>.add(apiService.backend.ProductPrices)", "apiService.backend.ProductPrices.setName(product.get(\"value\").getAsString())", "ele.getAsJsonObject().get(\"query\").getAsJsonObject()", "com.google.gson.JsonElement.getAsJsonObject()"], "Fixed commit": "a02b9b88e220d6d61a04015129581b18e988b6ba", "Url": "https://api.github.com/repos/GHERSASofiane/wastless", "Date": "2018-11-14T18:44:08Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (id != null) { upsertDoc.put(sdoc.getIdColumns()[0], id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6106/buggy-version/src.main.java.com.sunnysuperman.repository.serialize.Serializer.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(sdoc.getIdColumns()[0],java.lang.Object)"], "Fixed commit": "d01d8ead3262bf390ef54a43e1733817e9bb6d88", "Url": "https://api.github.com/repos/sunnysuperman/ss-repository", "Date": "2018-12-02T13:50:38Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mProgressBar) != null) && ((mProgressBar.getVisibility()) == (android.view.View.VISIBLE))) { mProgressBar.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3796/buggy-version/app.src.main.java.dabkick.com.basicsampleapp.HomePageActivity.java", "BodyUseAPI": ["android.widget.ProgressBar.setVisibility(View.GONE)"], "Fixed commit": "9024da5f4d5eed9de98bffa0754293dadd112e9c", "Url": "https://api.github.com/repos/ashwinisawanth412/BasicSampleApp2", "Date": "2018-12-19T09:18:15Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name) != null) { if ((name) != (proj_name)) { _project = org.nrg.xdat.om.XnatProjectdata.getProjectByIDorAlias(name, user, false); } }else { _project = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3863/buggy-version/src.main.java.org.nrg.dcm.id.MQDicomProjectIdentifier.java", "BodyUseAPI": [], "Fixed commit": "5d5e3f043a4e7ecdec21204179e907eb95c1d15f", "Url": "https://api.github.com/repos/monkeyman192/XNAT-dicom-router", "Date": "2018-11-27T05:08:36Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (expiryObj instanceof java.util.Date) { expiry = ((java.util.Date) (expiryObj)); }else if (expiryObj instanceof java.lang.String) { try { expiry = java.text.DateFormat.getDateInstance().parse(((java.lang.String) (expiryObj))); } catch (java.text.ParseException ex) { io.kubernetes.client.util.authenticators.GCPAuthenticator.log.error(((\"Error parsing date: \" + (expiryObj.toString())) + \"(ex)\")); } }else { throw new java.lang.RuntimeException((\"Unexpected object type: \" + (expiryObj.getClass()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1367/buggy-version/util.src.main.java.io.kubernetes.client.util.authenticators.GCPAuthenticator.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.Object.getClass()", "org.slf4j.Logger.error(java.lang.String)"], "Fixed commit": "f3bcf07e5d604e2031d69818192254623540b985", "Url": "https://api.github.com/repos/brendandburns/java", "Date": "2018-12-14T06:33:49Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.ist.expenditureTrackingSystem.ui.ConfigureAcquisitonController.isOn(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (allowRAPID) { searchProcessValues.add(SearchProcessValues.RAPID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7270/buggy-version/expenditure-tracking.src.main.java.pt.ist.expenditureTrackingSystem.ui.ConfigureAcquisitonController.java", "BodyUseAPI": [], "Fixed commit": "45fc458946cc723bd107dca7e8d92056652411f5", "Url": "https://api.github.com/repos/AngelaFrancisca/expenditures", "Date": "2018-12-03T15:41:44Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (tenderNumber != null) { android.util.Log.i(kg.kloop.android.openbudgetapp.fragments.AllTendersFragment.TAG, (\"onChanged: tenderNum - \" + tenderNumber)); loadTender(tenderNumber); viewModel.getTenderNum().setValue(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6553/buggy-version/app.src.main.java.kg.kloop.android.openbudgetapp.fragments.AllTendersFragment.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,java.lang.String)", "kg.kloop.android.openbudgetapp.fragments.AllTendersFragment.2.loadTender(java.lang.String)"], "Fixed commit": "412b7f0803be9ca017066cc9b403e0bc56742f7e", "Url": "https://api.github.com/repos/AlexWalker28/OpenBudgetApp", "Date": "2018-11-24T10:46:39Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIndeterminate) { refreshDrawableState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2560/buggy-version/library.src.main.java.com.buildware.widget.indeterm.IndeterminateCheckBox.java", "BodyUseAPI": [], "Fixed commit": "302802135408b793c61482a5915eef2b4af8cd5c", "Url": "https://api.github.com/repos/codepiex/indeterminate-checkbox", "Date": "2018-11-28T10:17:17Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (date == null) { return null; }else { return sdf.format(date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7658/buggy-version/app.src.main.java.com.foreverflightlogs.foreverflightlogs.FlightDbHelper.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(java.util.Date)"], "Fixed commit": "82d08c62cc24aec10e6d62a01f64b674561437eb", "Url": "https://api.github.com/repos/MatthewJN/ForeverFlightLogsAndroid", "Date": "2018-11-24T00:08:30Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((n.colour) > kCols) kCols = n.colour;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1081/buggy-version/SumColouring.JavaBacktracker.SumColour.java", "BodyUseAPI": [], "Fixed commit": "2e5a71ee795b91af2207fdf95f75d2f2a6fda8b0", "Url": "https://api.github.com/repos/C4Parker/GraphColouring", "Date": "2018-11-26T03:48:34Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.ss.usermodel.Row.getCell(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (cell != null) { java.lang.reflect.Field field = instant.getClass().getDeclaredField(headers.get(k)); xls.type.TypeFieldWriter typeW = xls.type.TypeWriterFactory.<java.lang.Class<T>>getTypeWriterBy(field); typeW.write(field, cell, instant); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7018/buggy-version/src.main.java.xls.format.XlsFormatParser.java", "BodyUseAPI": ["xls.type.TypeFieldWriter.write(java.lang.reflect.Field,org.apache.poi.ss.usermodel.Cell,T)"], "Fixed commit": "b617241f07b85b691b30d7d7c19694b35d9791eb", "Url": "https://api.github.com/repos/Khodanovich/XlsParser", "Date": "2018-12-04T17:29:30Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.ss.usermodel.Row.getCell(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (cell != null) { java.lang.reflect.Field field = instant.getClass().getDeclaredField(headers.get(k)); xls.type.TypeFieldWriter typeW = xls.type.TypeWriterFactory.<java.lang.Class<T>>getTypeWriterBy(field); typeW.write(field, cell, instant); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7018/buggy-version/src.main.java.xls.format.XlsxFormatParser.java", "BodyUseAPI": ["xls.type.TypeFieldWriter.write(java.lang.reflect.Field,org.apache.poi.ss.usermodel.Cell,T)"], "Fixed commit": "b617241f07b85b691b30d7d7c19694b35d9791eb", "Url": "https://api.github.com/repos/Khodanovich/XlsParser", "Date": "2018-12-04T17:29:30Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (maxValueTrigger != null) this.maxValueTrigger = maxValueTrigger; else this.maxValueTrigger = 999999;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6237/buggy-version/app.src.main.java.com.diogox.simpleweather.Api.Models.Database.Alerts.Alert.java", "BodyUseAPI": [], "Fixed commit": "4abb46668fb3e9185f2c22cf4c02a735cfc618aa", "Url": "https://api.github.com/repos/diogox/simple-weather", "Date": "2018-12-24T21:01:48Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (minValueTrigger != null) this.minValueTrigger = minValueTrigger; else this.minValueTrigger = -999999;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6237/buggy-version/app.src.main.java.com.diogox.simpleweather.Api.Models.Database.Alerts.Alert.java", "BodyUseAPI": [], "Fixed commit": "4abb46668fb3e9185f2c22cf4c02a735cfc618aa", "Url": "https://api.github.com/repos/diogox/simple-weather", "Date": "2018-12-24T21:01:48Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (authentication != null) { name = authentication.getName(); }else { name = \"anonymous\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1651/buggy-version/src.main.java.com.upickem.config.AuditingConfig.java", "BodyUseAPI": ["org.springframework.security.core.Authentication.getName()"], "Fixed commit": "1bb8036d2b524f3e4830d5a6adc58231b6628ffe", "Url": "https://api.github.com/repos/kmikus/upickem", "Date": "2018-12-24T02:20:26Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sinceStateStart > 0) { stateMachine.updateState(nextState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5304/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.autonomous.DropOff5.java", "BodyUseAPI": [], "Fixed commit": "f75b23af0514ff9f903bf8b74b415ce8816ec4ba", "Url": "https://api.github.com/repos/CheetahRobotics/ftc_app", "Date": "2018-12-15T18:09:24Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["politechnika.lodzka.qrcode.service.FormService.findByCode(java.lang.String)", "userRepository.getUserByEmail(to).orElseThrow(() -> new politechnika.lodzka.qrcode.exception.UserNotFoundException(\"Could not find user\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (user != (form.getGroup().getModerator())) { throw new politechnika.lodzka.qrcode.exception.NotOwnerException(user, form.getGroup().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7721/buggy-version/src.main.java.politechnika.lodzka.qrcode.service.Impl.MailSenderServiceImpl.java", "BodyUseAPI": ["politechnika.lodzka.qrcode.model.Form.getGroup()", "form.getGroup().toString()"], "Fixed commit": "9cebd52ec15c966a0f953263db53cfbd2b9f8796", "Url": "https://api.github.com/repos/RycerzeZahira/back", "Date": "2018-11-25T00:48:19Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.wrap(getRootInActiveWindow())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rootInActiveWindow == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9282/buggy-version/circles.src.main.java.space.harbour.jonathan.circles.services.WhatsappAccessibilityService.java", "BodyUseAPI": [], "Fixed commit": "42902875981f313ee4542330b3ed62ff37534027", "Url": "https://api.github.com/repos/jonathanhar/Circles", "Date": "2018-11-25T14:47:51Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((transl.bounds()) instanceof kodkod.instance.PardinusBounds) && (((kodkod.instance.PardinusBounds) (transl.bounds())).integrated)) && (!(((kodkod.instance.PardinusBounds) (transl.bounds())).trivial_config))) return nextNonTrivialSolution();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2210/buggy-version/src.main.java.kodkod.engine.ExtendedSolver.java", "BodyUseAPI": [], "Fixed commit": "8a50d6d60cb88fc4f39793feef50d2af36987d20", "Url": "https://api.github.com/repos/haslab/Pardinus", "Date": "2018-12-11T19:36:30Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allowGuests) { json.put(\"guest_pin\", guestPin); }else { if (!(com.google.common.base.Strings.isNullOrEmpty(pexipRoomSetting.getGuestPin()))) { cz.cesnet.shongo.connector.device.PexipConnector.logger.error(\"Guest pin cannot be set if guests are not allowed!\"); } json.put(\"guest_pin\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4856/buggy-version/shongo-connector.src.main.java.cz.cesnet.shongo.connector.device.PexipConnector.java", "BodyUseAPI": [], "Fixed commit": "93d4d870d680bf929a2274a33afa5ec739af1abe", "Url": "https://api.github.com/repos/shongo/shongo", "Date": "2018-11-19T10:36:48Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((statement.equals(\"exit\")) || (statement.equals(\"Exit\"))) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7474/buggy-version/StorageManagerJavaLINUX.Main.java", "BodyUseAPI": [], "Fixed commit": "b992e435c923e456255eb6b37f65a782da1fd051", "Url": "https://api.github.com/repos/hquan212/TinySQL", "Date": "2018-11-29T22:06:21Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.silas.meditacao.adapters.TabAdapter.getMeditacao(mViewPager.getCurrentItem())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (meditacao == null) meditacao = meditacoes.get(mViewPager.getCurrentItem());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3880/buggy-version/app.src.main.java.com.silas.meditacao.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "38af0f94f4263ae157fc7f40757091d99d2e45e6", "Url": "https://api.github.com/repos/splhead/GuiaES", "Date": "2018-11-09T15:16:45Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.faces.context.FacesContext.getCurrentInstance().getMessageList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (isNotNewEntity && ((msgs == null) || (msgs.isEmpty()))) { org.primefaces.PrimeFaces.current().executeScript(\"PF('payroll-dlg').hide()\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1172/buggy-version/src.com.movill.jsf.managedbeans.PayrollFormBean.java", "BodyUseAPI": [], "Fixed commit": "999dd899aa889954e6e4bc302e9bbed18a9619a0", "Url": "https://api.github.com/repos/wlsnchen/Movill-Books", "Date": "2018-12-16T01:38:04Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sourceStrArray[i].equals(\"\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7659/buggy-version/hospital-service.src.main.java.com.hospital.service.impl.DeliveryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "7af066c80ab909b57411f62503b11b055505641d", "Url": "https://api.github.com/repos/lht142934/HospitalSystem", "Date": "2018-11-04T05:13:29Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (output == 0) { while (output == 0) { randomNumber = ((int) (java.lang.Math.round((((java.lang.Math.random()) * 9) + 1)))); randomNum = randomNumber; java.lang.System.out.println((\"The Number is \" + randomNum)); output = 1; } randomNumber = ((int) (java.lang.Math.round((((java.lang.Math.random()) * 9) + 1)))); }else { randomNum = randomNumber; randomNumber = higherlowersummative.HigherLowerSummative.creatingRandomNumber(randomNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/831/buggy-version/src.higherlowersummative.HigherLowerSummative.java", "BodyUseAPI": [], "Fixed commit": "167d6c3949563cbab619a9030214262fa711adc7", "Url": "https://api.github.com/repos/PeterHorne-Deus/HigherLowerSummative", "Date": "2018-11-23T17:35:19Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.constellio.app.modules.rm.wrappers.RetentionRule.getSecondaryCopy()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (copyRetentionRule == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2883/buggy-version/app.src.com.constellio.app.modules.rm.reports.model.administration.plan.ConservationRulesReportPresenter.java", "BodyUseAPI": [], "Fixed commit": "eb7d3cf60f76675c80d48ccc25a3c0588267e820", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2018-12-09T23:08:41Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(frontBackHashMap.values().contains(true))) || (!(frontBackHashMap.values().contains(false)))) { android.widget.Toast.makeText(this, R.string.add_record_toast_photo2, Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6575/buggy-version/app.src.main.java.ca.ualberta.t04.medicaltracker.Activity.Patient.AddRecordActivity.java", "BodyUseAPI": [], "Fixed commit": "b15a5a01e87958550ec3ccc0d15e996b5206c0c0", "Url": "https://api.github.com/repos/CMPUT301F18T04/MedicalTracker", "Date": "2018-12-02T07:07:29Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["User.choiceModeGame()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (letterChoiceMode == 'S') { playerMode = \"onePlayer\"; }else { playerMode = \"playerTwo\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7615/buggy-version/HangMan.java", "BodyUseAPI": [], "Fixed commit": "a2b9ef7b11c8a1e524611253b3144fdf0a70062b", "Url": "https://api.github.com/repos/GorcePierre/hangMan-LPS3", "Date": "2018-11-01T16:31:56Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gamepad2.right_stick_x) < 0) { rightServo.setPosition((((-(gamepad2.right_stick_x)) - 1) * 0.5)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1321/buggy-version/App.TeamCode.src.main.java.org.firstinspires.ftc.teamcode.organizedImplementation.Robot.Opmodes.TeleOp.NewControlTeleOp.java", "BodyUseAPI": ["com.qualcomm.robotcore.hardware.Servo.setPosition((((-(gamepad2.right_stick_x)) - 1) * 0.5))"], "Fixed commit": "1d2b79d3e4395e0e9272e8e6e8aa986b135a8e3e", "Url": "https://api.github.com/repos/PranavEranki/FTC7610-2018-19", "Date": "2018-12-12T04:39:18Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gamepad2.right_stick_x) > 0) { rightServo.setPosition(gamepad2.right_stick_x); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1321/buggy-version/App.TeamCode.src.main.java.org.firstinspires.ftc.teamcode.organizedImplementation.Robot.Opmodes.TeleOp.NewControlTeleOp.java", "BodyUseAPI": [], "Fixed commit": "1d2b79d3e4395e0e9272e8e6e8aa986b135a8e3e", "Url": "https://api.github.com/repos/PranavEranki/FTC7610-2018-19", "Date": "2018-12-12T04:39:18Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gamepad2.left_stick_x) > 0) { leftServo.setPosition(gamepad2.left_stick_x); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1321/buggy-version/App.TeamCode.src.main.java.org.firstinspires.ftc.teamcode.organizedImplementation.Robot.Opmodes.TeleOp.NewControlTeleOp.java", "BodyUseAPI": [], "Fixed commit": "1d2b79d3e4395e0e9272e8e6e8aa986b135a8e3e", "Url": "https://api.github.com/repos/PranavEranki/FTC7610-2018-19", "Date": "2018-12-12T04:39:18Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gamepad2.left_stick_x) < 0) { leftServo.setPosition((((gamepad2.left_stick_x) + 1) * 0.5)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1321/buggy-version/App.TeamCode.src.main.java.org.firstinspires.ftc.teamcode.organizedImplementation.Robot.Opmodes.TeleOp.NewControlTeleOp.java", "BodyUseAPI": ["com.qualcomm.robotcore.hardware.Servo.setPosition((((gamepad2.left_stick_x) + 1) * 0.5))"], "Fixed commit": "1d2b79d3e4395e0e9272e8e6e8aa986b135a8e3e", "Url": "https://api.github.com/repos/PranavEranki/FTC7610-2018-19", "Date": "2018-12-12T04:39:18Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wordsAdded.size()) > 0) { words += wordsAdded.get(((wordsAdded.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5511/buggy-version/WordSearch.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "c00645e53684957f99911980f314ee0430303196", "Url": "https://api.github.com/repos/qtgeo1248/MKS21X-WordSearch", "Date": "2018-11-14T19:41:11Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentAPI()) == null) return new com.peterwitt.spotyfm.RadioAPI.Song[]{ };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8885/buggy-version/app.src.main.java.com.peterwitt.spotyfm.RadioAPI.RadioAPIManager.java", "BodyUseAPI": [], "Fixed commit": "1c35751bb65e0b981a88034cf26d5518ad623b18", "Url": "https://api.github.com/repos/peter-witt/SpotyFM", "Date": "2018-12-25T12:35:00Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.epfl.sweng.studdybuddy.activities.ChatActivity.1.findViewById(R.id.input)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((input.getText().toString().trim().length()) > 0) { ref.select(Messages.FirebaseNode.CHAT).select(groupID).push(new ch.epfl.sweng.studdybuddy.services.chat.ChatMessage(input.getText().toString(), com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getDisplayName())); input.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8073/buggy-version/app.src.main.java.ch.epfl.sweng.studdybuddy.activities.ChatActivity.java", "BodyUseAPI": ["ref.select(Messages.FirebaseNode.CHAT).select(groupID).push(ch.epfl.sweng.studdybuddy.services.chat.ChatMessage)", "input.getText().toString()", "android.widget.EditText.setText(java.lang.String)", "android.widget.EditText.getText()"], "Fixed commit": "f707e1921399a6d7817bfa088d9aad228218675e", "Url": "https://api.github.com/repos/geofot96/StudyBuddy", "Date": "2018-11-28T18:07:20Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (vehicle != null) { getLane().getStreet().getStartingGrid().addVehicle(vehicle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6056/buggy-version/src.main.java.de.superdudes.traffit.dto.Cell.java", "BodyUseAPI": ["getLane().getStreet().getStartingGrid().addVehicle(de.superdudes.traffit.dto.Vehicle)"], "Fixed commit": "107c3a1fd758675069e51f9c43096c1ebc3b26a3", "Url": "https://api.github.com/repos/ledidious/TraffIT", "Date": "2018-12-21T11:52:00Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((shift.getEndTime()) < 10) && ((shift.getEndTime()) > 5)) { hoursBefore10 = shift.calculateTotalHours(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2013/buggy-version/src.main.java.com.pillar.FamilyB.java", "BodyUseAPI": ["com.pillar.Shift.calculateTotalHours()"], "Fixed commit": "1245a4d3c46ce06f45d82559c3ab5bb8b655d257", "Url": "https://api.github.com/repos/JakeScheuer/pillarKata", "Date": "2018-12-07T02:46:42Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION_CODES.M) >= 23) colorRes = getResources().getColor(colorResourceName, this.getTheme()); else colorRes = android.support.v4.content.ContextCompat.getColor(this, colorResourceName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3678/buggy-version/HelloCompat.app.src.main.java.com.example.volk1.hellocompat.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "bc807525fae44a2dcef1fc4c9e127ebfbbbe6024", "Url": "https://api.github.com/repos/Hiercy/Android-course", "Date": "2018-12-02T20:01:16Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (isLogin == null) { return \"LoginSystem/LoginForm\"; }else { return \"redirect:/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9543/buggy-version/src.main.java.conn.controller.MemberController.java", "BodyUseAPI": [], "Fixed commit": "e93e5391adbba4c97099fd30a0ccd02baf6eb2da", "Url": "https://api.github.com/repos/rwggad/spring-common-web", "Date": "2018-12-18T07:56:02Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((bo.getName()) != null) && ((bo.getCompetenceDescription()) != null)) { if ((bo.getName().toLowerCase().contains(query)) || (bo.getCompetenceDescription().toLowerCase().contains(query))) { newResults.add(bo); } }else if (((bo.getName()) != null) && ((bo.getCompetenceDescription()) == null)) { if (bo.getName().toLowerCase().contains(query)) { newResults.add(bo); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7292/buggy-version/PCRS-war.src.main.java.colruyt.pcrs.views.RespSurveyDefinitionView.java", "BodyUseAPI": ["bo.getCompetenceDescription().toLowerCase()", "bo.getName().toLowerCase()", "bo.getName().toLowerCase().contains(java.lang.String)", "bo.getCompetenceDescription().toLowerCase().contains(java.lang.String)", "java.util.List<colruyt.pcrsejb.bo.competence.CompetenceBo>.add(colruyt.pcrsejb.bo.competence.CompetenceBo)", "colruyt.pcrsejb.bo.competence.CompetenceBo.getName()", "bo.getName().toLowerCase().contains(java.lang.String)", "colruyt.pcrsejb.bo.competence.CompetenceBo.getName()", "colruyt.pcrsejb.bo.competence.CompetenceBo.getName()", "bo.getName().toLowerCase()", "java.util.List<colruyt.pcrsejb.bo.competence.CompetenceBo>.add(colruyt.pcrsejb.bo.competence.CompetenceBo)", "colruyt.pcrsejb.bo.competence.CompetenceBo.getCompetenceDescription()", "colruyt.pcrsejb.bo.competence.CompetenceBo.getCompetenceDescription()"], "Fixed commit": "004c6d5e39c5353587c939129c19a97fcc6cda9d", "Url": "https://api.github.com/repos/Jenson3210/PCRS.ejb", "Date": "2018-12-21T07:59:48Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.exists()) { com.google.firebase.database.DataSnapshot ds2 = dataSnapshot.child(\"users\").child(mAuth.getCurrentUser().getUid()).child(\"groups\"); for (com.google.firebase.database.DataSnapshot snap : ds2.getChildren()) { java.lang.String s = snap.getKey(); groups.setText((((groups.getText()) + \"\\n\") + s)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2152/buggy-version/app.src.main.java.com.example.matt.backtrack.GroupViewActivity.java", "BodyUseAPI": ["com.google.firebase.database.DataSnapshot.child(java.lang.String)", "dataSnapshot.child(\"users\").child(mAuth.getCurrentUser().getUid())", "dataSnapshot.child(\"users\").child(mAuth.getCurrentUser().getUid()).child(java.lang.String)"], "Fixed commit": "c181e0378fb68d2a1a435c3976d137bf202b5ea8", "Url": "https://api.github.com/repos/swerdog/BackTrack", "Date": "2018-11-28T07:12:32Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userDTO.getId()) == 0) { userDTO.setPassword(userDTO.getPassword().replaceFirst(\".$\", \"\")); userService.create(userDTO); }else userService.update(userDTO);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7796/buggy-version/MainApp.src.main.java.com.tsystems.mrc.controllers.AdminController.java", "BodyUseAPI": ["userDTO.getPassword().replaceFirst(java.lang.String,java.lang.String)", "com.tsystems.mrc.services.api.UserService.update(com.tsystems.mrc.dto.UserDTO)", "com.tsystems.mrc.services.api.UserService.create(com.tsystems.mrc.dto.UserDTO)", "com.tsystems.mrc.dto.UserDTO.getPassword()", "com.tsystems.mrc.dto.UserDTO.setPassword(userDTO.getPassword().replaceFirst(\".$\", \"\"))"], "Fixed commit": "1753410cb05c425bea73f2c3f5d36c68b5884f8a", "Url": "https://api.github.com/repos/nikita-butko/java-school", "Date": "2018-12-06T10:22:00Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userDAO.getByLogin(login)) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7796/buggy-version/MainApp.src.main.java.com.tsystems.mrc.services.UserServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "1753410cb05c425bea73f2c3f5d36c68b5884f8a", "Url": "https://api.github.com/repos/nikita-butko/java-school", "Date": "2018-12-06T10:22:00Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anbang.qipai.ruianmajiang.cqrs.q.service.MajiangPlayQueryService.findJuResultDbo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (juResultDbo != null) { com.anbang.qipai.ruianmajiang.cqrs.q.dbo.MajiangGameDbo majiangGameDbo = majiangGameQueryService.findMajiangGameDboById(gameId); com.anbang.qipai.ruianmajiang.msg.msjobj.MajiangHistoricalJuResult juResult = new com.anbang.qipai.ruianmajiang.msg.msjobj.MajiangHistoricalJuResult(juResultDbo, majiangGameDbo); ruianMajiangResultMsgService.recordJuResult(juResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9831/buggy-version/src.main.java.com.anbang.qipai.ruianmajiang.websocket.GamePlayWsController.java", "BodyUseAPI": [], "Fixed commit": "7f0e83fd3bf196961821c9925e5f0dcf3c06550d", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_ruianmajiang", "Date": "2018-12-05T01:55:13Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anbang.qipai.ruianmajiang.cqrs.q.service.MajiangPlayQueryService.findJuResultDbo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (juResultDbo != null) { com.anbang.qipai.ruianmajiang.cqrs.q.dbo.MajiangGameDbo majiangGameDbo = majiangGameQueryService.findMajiangGameDboById(gameId); com.anbang.qipai.ruianmajiang.msg.msjobj.MajiangHistoricalJuResult juResult = new com.anbang.qipai.ruianmajiang.msg.msjobj.MajiangHistoricalJuResult(juResultDbo, majiangGameDbo); ruianMajiangResultMsgService.recordJuResult(juResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9831/buggy-version/src.main.java.com.anbang.qipai.ruianmajiang.web.controller.GameController.java", "BodyUseAPI": [], "Fixed commit": "7f0e83fd3bf196961821c9925e5f0dcf3c06550d", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_ruianmajiang", "Date": "2018-12-05T01:55:13Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((majiangGameValueObject.getState().name().equals(FinishedByVote.name)) || (majiangGameValueObject.getState().name().equals(Canceled.name))) { gameMsgService.gameFinished(gameId); }else { gameMsgService.gamePlayerLeave(majiangGameValueObject, playerId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9831/buggy-version/src.main.java.com.anbang.qipai.ruianmajiang.web.controller.GameController.java", "BodyUseAPI": ["com.anbang.qipai.ruianmajiang.msg.service.RuianMajiangGameMsgService.gamePlayerLeave(com.anbang.qipai.ruianmajiang.cqrs.c.domain.MajiangGameValueObject,java.lang.String)"], "Fixed commit": "7f0e83fd3bf196961821c9925e5f0dcf3c06550d", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_ruianmajiang", "Date": "2018-12-05T01:55:13Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((majiangGameValueObject.getState().name().equals(FinishedByVote.name)) || (majiangGameValueObject.getState().name().equals(Canceled.name))) { gameMsgService.gameFinished(gameId); }else { gameMsgService.gamePlayerLeave(majiangGameValueObject, playerId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9831/buggy-version/src.main.java.com.anbang.qipai.ruianmajiang.web.controller.GameController.java", "BodyUseAPI": ["com.anbang.qipai.ruianmajiang.msg.service.RuianMajiangGameMsgService.gamePlayerLeave(com.anbang.qipai.ruianmajiang.cqrs.c.domain.MajiangGameValueObject,java.lang.String)"], "Fixed commit": "7f0e83fd3bf196961821c9925e5f0dcf3c06550d", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_ruianmajiang", "Date": "2018-12-05T01:55:13Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anbang.qipai.ruianmajiang.cqrs.q.service.MajiangPlayQueryService.findJuResultDbo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (juResultDbo != null) { com.anbang.qipai.ruianmajiang.cqrs.q.dbo.MajiangGameDbo majiangGameDbo = majiangGameQueryService.findMajiangGameDboById(gameId); com.anbang.qipai.ruianmajiang.msg.msjobj.MajiangHistoricalJuResult juResult = new com.anbang.qipai.ruianmajiang.msg.msjobj.MajiangHistoricalJuResult(juResultDbo, majiangGameDbo); ruianMajiangResultMsgService.recordJuResult(juResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9831/buggy-version/src.main.java.com.anbang.qipai.ruianmajiang.web.controller.GameController.java", "BodyUseAPI": [], "Fixed commit": "7f0e83fd3bf196961821c9925e5f0dcf3c06550d", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_ruianmajiang", "Date": "2018-12-05T01:55:13Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.clientKeytabFileName) != null) { config.setKeytab(this.clientKeytabFileName.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4475/buggy-version/src.main.java.fr.cnes.jspnego.GSSClient.java", "BodyUseAPI": [], "Fixed commit": "b3e173f85592df9257e285dee8ab306f5a4be6ff", "Url": "https://api.github.com/repos/CNES/JSPNego", "Date": "2018-11-29T11:56:32Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.ticketCacheFileName) != null) { config.setTicketCache(this.ticketCacheFileName.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4475/buggy-version/src.main.java.fr.cnes.jspnego.GSSClient.java", "BodyUseAPI": [], "Fixed commit": "b3e173f85592df9257e285dee8ab306f5a4be6ff", "Url": "https://api.github.com/repos/CNES/JSPNego", "Date": "2018-11-29T11:56:32Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isDuplicate) { storage[size] = r; (size)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/710/buggy-version/src.ArrayStorage.java", "BodyUseAPI": [], "Fixed commit": "5c0dbb87196b64c9f9691cd4fb957389ab0a99f2", "Url": "https://api.github.com/repos/EnlistedDig001/basejava", "Date": "2018-11-21T15:29:02Z"},
{"Line": "=>819", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (downList) { offset = (nextChild.getHeight()) + additionalOffset; }else { offset = -((nextChild.getHeight()) + additionalOffset); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5457/buggy-version/library.src.main.java.com.jmedeisis.draglinearlayout.DragLinearLayout.java", "BodyUseAPI": [], "Fixed commit": "59f26b01070e7d4fa30b022860e0d5269d96cb43", "Url": "https://api.github.com/repos/nick2425/DragLinearLayout", "Date": "2018-11-19T23:13:21Z"},
{"Line": "=>727", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { if ((getActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { showPermissionDialog(getActivity(), Manifest.permission.WRITE_EXTERNAL_STORAGE, org.helpapaw.helpapaw.signalsmap.SignalsMapFragment.WRITE_EXTERNAL_STORAGE_FOR_CLOUDE); } try { android.os.ParcelFileDescriptor parcelFileDesc = getActivity().getContentResolver().openFileDescriptor(fileUri, \"r\"); java.io.FileDescriptor fileDesc = parcelFileDesc.getFileDescriptor(); android.graphics.Bitmap photo = android.graphics.BitmapFactory.decodeFileDescriptor(fileDesc); path = MediaStore.Images.Media.insertImage(getContext().getContentResolver(), photo, \"temp\", null); parcelFileDesc.close(); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); } catch (java.io.IOException e) { e.printStackTrace(); } photoFile = org.helpapaw.helpapaw.utils.images.ImageUtils.getInstance().getFromMediaUri(getContext(), getContext().getContentResolver(), android.net.Uri.parse(path)); }else { photoFile = org.helpapaw.helpapaw.utils.images.ImageUtils.getInstance().getFromMediaUri(getContext(), getContext().getContentResolver(), data.getData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9324/buggy-version/app.src.main.java.org.helpapaw.helpapaw.signalsmap.SignalsMapFragment.java", "BodyUseAPI": [], "Fixed commit": "74f0cb5cf6d28bffae52f75cbf456c53028753b6", "Url": "https://api.github.com/repos/eludelogixter/Android", "Date": "2018-11-20T20:35:03Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(seedu.address.logic.parser.CliSyntax.PREFIX_PRODUCT.toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((productList.length) == 0) { throw new seedu.address.logic.parser.exceptions.ParseException(\"Transaction entered has no products!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6530/buggy-version/src.main.java.seedu.address.logic.parser.AddTransactionCommandParser.java", "BodyUseAPI": [], "Fixed commit": "4697c1d660d21f5cf20c4c67b1e6a39ed0100b84", "Url": "https://api.github.com/repos/amirulmaricar/main", "Date": "2018-11-07T03:43:21Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config.getUseSignatures()) == 1) { timeoutMsg.serializedMessageSignature = bftsmart.tom.util.TOMUtil.signMessage(controller.getStaticConf().getPrivateKey(), data); timeoutMsg.signed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4665/buggy-version/src.bftsmart.tom.server.defaultservices.blockchain.WeakBlockchainRecoverable.java", "BodyUseAPI": [], "Fixed commit": "ef40762d4e62537648199256990073a3bc3db3ad", "Url": "https://api.github.com/repos/jcs47/smartchain", "Date": "2018-11-30T18:04:37Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config.getUseSignatures()) == 1) { timeoutMsg.serializedMessageSignature = bftsmart.tom.util.TOMUtil.signMessage(controller.getStaticConf().getPrivateKey(), data); timeoutMsg.signed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4665/buggy-version/src.bftsmart.tom.server.defaultservices.blockchain.StrongBlockchainRecoverable.java", "BodyUseAPI": [], "Fixed commit": "ef40762d4e62537648199256990073a3bc3db3ad", "Url": "https://api.github.com/repos/jcs47/smartchain", "Date": "2018-11-30T18:04:37Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.student.workoutprogram.models.Model.getWorkouts()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((workoutList.size()) == 0) { return new java.util.ArrayList<com.example.student.workoutprogram.models.WorkoutSet>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7102/buggy-version/app.src.main.java.com.example.student.workoutprogram.models.Model.java", "BodyUseAPI": [], "Fixed commit": "8a086460fb1b161c1132c8b70cce56579c9c408c", "Url": "https://api.github.com/repos/kydy11/WorkoutProgram", "Date": "2018-12-26T05:57:27Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teavm.classlib.impl.reflection.JSClass.getMethods()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (jsMethods == null) { jsMethods = org.teavm.jso.core.JSArray.create(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4989/buggy-version/classlib.src.main.java.org.teavm.classlib.java.lang.TClass.java", "BodyUseAPI": [], "Fixed commit": "522bcae4bb638b0f546d003b78d9cf1c9591a115", "Url": "https://api.github.com/repos/danko-david/teavm", "Date": "2018-11-23T17:02:46Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teavm.classlib.impl.reflection.JSClass.getFields()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (jsFields == null) { jsFields = org.teavm.jso.core.JSArray.create(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4989/buggy-version/classlib.src.main.java.org.teavm.classlib.java.lang.TClass.java", "BodyUseAPI": [], "Fixed commit": "522bcae4bb638b0f546d003b78d9cf1c9591a115", "Url": "https://api.github.com/repos/danko-david/teavm", "Date": "2018-11-23T17:02:46Z"},
{"Line": "=>1057", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (io.github.biezhi.anima.utils.AnimaUtils.isBasicType(type)) { return query.executeScalar(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1277/buggy-version/src.main.java.io.github.biezhi.anima.core.AnimaQuery.java", "BodyUseAPI": ["org.sql2o.Query.executeScalar(java.lang.Class<S>)"], "Fixed commit": "07f27bc986e8f4e0ebc60326801a876bcc7b92bc", "Url": "https://api.github.com/repos/biezhi/anima", "Date": "2018-12-08T10:48:46Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dateStr.length()) == 10) { entity.query.Datetime.parse(dateStr, \"yyyy-MM-dd\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7516/buggy-version/entity.queryable.src.entity.query.Datetime.java", "BodyUseAPI": ["entity.query.Datetime.parse(java.lang.String,java.lang.String)"], "Fixed commit": "f109480c3b8e75c7004c41c258556b49cdd679aa", "Url": "https://api.github.com/repos/linlurui/entityQueryable", "Date": "2018-11-24T09:37:47Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dateStr.length()) == 8) { entity.query.Datetime.parse(dateStr, \"HH:mm:ss\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7516/buggy-version/entity.queryable.src.entity.query.Datetime.java", "BodyUseAPI": ["entity.query.Datetime.parse(java.lang.String,java.lang.String)"], "Fixed commit": "f109480c3b8e75c7004c41c258556b49cdd679aa", "Url": "https://api.github.com/repos/linlurui/entityQueryable", "Date": "2018-11-24T09:37:47Z"},
{"Line": "=>709", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getHeaderField(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(validLocations.contains(loc))) { throw new java.io.IOException(\"Invalid location\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9519/buggy-version/api.src.main.java.org.openmrs.module.ModuleUtil.java", "BodyUseAPI": [], "Fixed commit": "01eb9f2129e2077c76c76586154d20dc1f53d7dd", "Url": "https://api.github.com/repos/DexterousMe/openmrs-core", "Date": "2018-11-15T22:01:28Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (muteDurationInput == null) { de.nikos410.discordBot.util.discord.DiscordIO.sendMessage(message.getChannel(), \"Fehler! Es muss eine Mute-Dauer angegeben werden.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3849/buggy-version/src.main.java.de.nikos410.discordBot.modules.ModStuff.java", "BodyUseAPI": [], "Fixed commit": "0f360494aa0adad3c8da850d98da77c44510a706", "Url": "https://api.github.com/repos/DACH-Discord/de-DiscordBot", "Date": "2018-11-21T21:11:56Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((message == null) || (userParameter == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3849/buggy-version/src.main.java.de.nikos410.discordBot.util.discord.UserUtils.java", "BodyUseAPI": [], "Fixed commit": "0f360494aa0adad3c8da850d98da77c44510a706", "Url": "https://api.github.com/repos/DACH-Discord/de-DiscordBot", "Date": "2018-11-21T21:11:56Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apereo.cas.couchdb.services.RegisteredServiceCouchDbRepository.queryView(createQuery(\"size\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (r.isEmpty()) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3665/buggy-version/support.cas-server-support-couchdb-service-registry.src.main.java.org.apereo.cas.couchdb.services.RegisteredServiceCouchDbRepository.java", "BodyUseAPI": [], "Fixed commit": "dc71e1c89253aa38edf4dde52d8355134ce20000", "Url": "https://api.github.com/repos/apereo/cas", "Date": "2018-11-14T19:59:24Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.KITKAT)) || (mSpareClassroomsSwipeContainer.isAttachedToWindow())) android.support.design.widget.Snackbar.make(mSpareClassroomsSwipeContainer, session, Snackbar.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4594/buggy-version/app.src.main.java.edu_cn.pku.course.fragments.SpareClassroomsFragment.java", "BodyUseAPI": ["android.support.design.widget.Snackbar.make(mSpareClassroomsSwipeContainer, session, Snackbar.LENGTH_SHORT).show()", "android.support.design.widget.Snackbar.make(android.support.v4.widget.SwipeRefreshLayout,java.lang.String,Snackbar.LENGTH_SHORT)"], "Fixed commit": "c42a413733c289aae7b9ff01cf3749e73283ea61", "Url": "https://api.github.com/repos/cbwang2016/PKUCourses", "Date": "2018-12-07T12:43:16Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modelFieldsToolWindow) != null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1904/buggy-version/src.kg.akoikelov.intellij.rms.model.ui.ShowModelFieldsButton.java", "BodyUseAPI": [], "Fixed commit": "55ec3857d1d6feb436293bb59927e9c04101ff10", "Url": "https://api.github.com/repos/akoikelov/rm-rails-model-shadow", "Date": "2018-12-22T17:56:00Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modelFieldsToolWindow) == null) { modelFieldsToolWindow = toolWindowManager.getToolWindow(ModelFieldsToolWindowFactory.ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1904/buggy-version/src.kg.akoikelov.intellij.rms.model.ModelFileManager.java", "BodyUseAPI": [], "Fixed commit": "55ec3857d1d6feb436293bb59927e9c04101ff10", "Url": "https://api.github.com/repos/akoikelov/rm-rails-model-shadow", "Date": "2018-12-22T17:56:00Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (App.settings.getExpandLatestYearInListByDefault()) { this.viewModel.contentRecyclerViewAdapter.expandParent(de.juliusawen.coastercreditcounter.data.orphanElements.YearHeader.getLatestYearHeader(sortedYearHeaders)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9658/buggy-version/app.src.main.java.de.juliusawen.coastercreditcounter.presentation.visits.ShowVisitsFragment.java", "BodyUseAPI": [], "Fixed commit": "8af7343a0a1fbaeca9e40e2c9be7c601d9dbe5e3", "Url": "https://api.github.com/repos/JuliusAwen/CoasterCreditCounter", "Date": "2018-11-02T15:40:30Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (choice == 10) { java.lang.System.out.println(toc.GameUI.tr.getAllChallenges()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5608/buggy-version/src.toc.GameUI.java", "BodyUseAPI": [], "Fixed commit": "bdd1e1665294ce0907cf7a8fb09cf50d1ec870f9", "Url": "https://api.github.com/repos/Shadowrs/toc-cli-game", "Date": "2018-12-02T17:33:06Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loopPoints.size()) < 2) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5586/buggy-version/JAICore.jaicore-ml.src.jaicore.ml.clustering.GMeans.java", "BodyUseAPI": [], "Fixed commit": "97fc0b94b5920b7b9a4667fc96e59115b5be66b0", "Url": "https://api.github.com/repos/fweiland8/AILibs", "Date": "2018-12-20T16:02:04Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.adorsys.psd2.xs2a.exception.MessageError.getTppMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(tppMessage.getText())) { tppMessage.setText(messageService.getMessage(tppMessage.getMessageErrorCode().name())); error.setTppMessages(java.util.Collections.singleton(tppMessage)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9422/buggy-version/xs2a-impl.src.main.java.de.adorsys.psd2.xs2a.web.aspect.AbstractLinkAspect.java", "BodyUseAPI": ["de.adorsys.psd2.xs2a.domain.TppMessageInformation.setText(messageService.getMessage(tppMessage.getMessageErrorCode().name()))", "de.adorsys.psd2.xs2a.service.message.MessageService.getMessage(tppMessage.getMessageErrorCode().name())", "de.adorsys.psd2.xs2a.domain.TppMessageInformation.getMessageErrorCode()", "java.util.Collections.singleton(de.adorsys.psd2.xs2a.domain.TppMessageInformation)", "tppMessage.getMessageErrorCode().name()", "de.adorsys.psd2.xs2a.exception.MessageError.setTppMessages(java.util.Set)"], "Fixed commit": "f4e10f39d4c82a7a842d2663b06a051a59361ae9", "Url": "https://api.github.com/repos/adorsys/xs2a", "Date": "2018-11-28T13:07:25Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sx.blah.discord.handle.impl.events.guild.channel.message.MessageReceivedEvent.getAuthor()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (author.isBot()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3532/buggy-version/src.main.java.com.oopsjpeg.gacha.handler.QuestHandler.java", "BodyUseAPI": [], "Fixed commit": "96a9bc50c08b4114958ae9d127a29405dba8aa2e", "Url": "https://api.github.com/repos/oopsjpeg/Gacha", "Date": "2018-12-02T22:59:10Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(other instanceof edu.gatech.cs2340.group75.donationtracker.controller.ActivityClasses)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6644/buggy-version/app.src.main.java.edu.gatech.cs2340.group75.donationtracker.controller.ActivityClasses.java", "BodyUseAPI": [], "Fixed commit": "48b707407dc6399ff67af6f38a83158b837bfac6", "Url": "https://api.github.com/repos/gatech-cs2340-fall2018-group75/nonprofitDonationTrackerApp", "Date": "2018-11-13T04:05:02Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other == (this)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6644/buggy-version/app.src.main.java.edu.gatech.cs2340.group75.donationtracker.controller.ActivityClasses.java", "BodyUseAPI": [], "Fixed commit": "48b707407dc6399ff67af6f38a83158b837bfac6", "Url": "https://api.github.com/repos/gatech-cs2340-fall2018-group75/nonprofitDonationTrackerApp", "Date": "2018-11-13T04:05:02Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((additive) == null) { android.view.inputmethod.InputMethodManager systemService = ((android.view.inputmethod.InputMethodManager) (getActivity().getSystemService(Context.INPUT_METHOD_SERVICE))); systemService.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0); description.requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6833/buggy-version/app.src.main.java.me.anon.grow.fragment.AddAdditiveDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "e9dcdde7b6bb2bc8d28b489d26790721f7763891", "Url": "https://api.github.com/repos/7LPdWcaW/GrowTracker-Android", "Date": "2018-12-22T19:59:15Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (readyForNextTask) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7877/buggy-version/lib.src.main.java.com.ittianyu.relight.widget.stateful.state.task.CacheAsyncTask.java", "BodyUseAPI": [], "Fixed commit": "10fae3b68646248c4c6a97b9e850c663bf3af819", "Url": "https://api.github.com/repos/ittianyu/relight", "Date": "2018-12-15T13:40:59Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) != null) { if (dataSnapshot1.getValue(com.example.guanghuili.checkesandchess.Checkers.Player.class).getUsername().equals(user.getDisplayName())) { player = dataSnapshot1.getValue(com.example.guanghuili.checkesandchess.Checkers.Player.class); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6309/buggy-version/app.src.main.java.com.example.guanghuili.checkesandchess.CheckerRoomActivity.java", "BodyUseAPI": [], "Fixed commit": "fc018070ffa36e8b21145a1bffa4260528719f48", "Url": "https://api.github.com/repos/Guanghui-Li/Checkers-and-Chess", "Date": "2018-11-18T03:13:17Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(assignedDeliveryman.canAccommodate(ordersToAdd))) { throw new seedu.address.logic.commands.exceptions.CommandException(seedu.address.commons.core.Messages.MESSAGE_ORDERS_LIMIT_EXCEEDED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4225/buggy-version/src.main.java.seedu.address.logic.commands.AssignCommand.java", "BodyUseAPI": [], "Fixed commit": "7c4396e490b16800eb00d2f9898bf341d7815eb5", "Url": "https://api.github.com/repos/rrtheonlyone/main", "Date": "2018-11-12T03:23:32Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) != null) if (!(id.equalsIgnoreCase(\"\"))) fillField(id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7062/buggy-version/atma-client.src.main.java.tgwofficial.atma.client.activity.nativeform.FormAddIbuActivity.java", "BodyUseAPI": [], "Fixed commit": "2d4af90c6b85c1220aa238afdf304aea71923770", "Url": "https://api.github.com/repos/tgwofficial/client", "Date": "2018-11-07T06:03:00Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((t.getV()) < ((set.getSize()) / 2)) { }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5639/buggy-version/BA.algorithm.BatAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "e2ed8861ab41d90f7c9d06ea8b0408a622c293ee", "Url": "https://api.github.com/repos/DonnyLee/MasterProjekt_BA", "Date": "2018-11-05T17:44:57Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.charles.im.user.repository.UserRepository.getUser(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == user) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7583/buggy-version/im.src.main.java.com.charles.im.user.service.UserService.java", "BodyUseAPI": [], "Fixed commit": "5c3bd82f26403efde0d2322e4a7b991ae14c80c6", "Url": "https://api.github.com/repos/Charles-Zeng/im", "Date": "2018-12-17T13:36:55Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { android.support.v4.app.FragmentManager fragmentManager = getChildFragmentManager(); int count = fragmentManager.getBackStackEntryCount(); if (count > 0) { android.support.v4.app.FragmentManager.BackStackEntry backStackEntry = fragmentManager.getBackStackEntryAt(0); return ((me.listenzz.navigation.AwesomeFragment) (fragmentManager.findFragmentByTag(backStackEntry.getName()))); } return null; }else { return rootFragment; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7607/buggy-version/navigation.src.main.java.me.listenzz.navigation.NavigationFragment.java", "BodyUseAPI": [], "Fixed commit": "2597f9c43e7b59d6f848440131247e4797d944d8", "Url": "https://api.github.com/repos/listenzz/AndroidNavigation", "Date": "2018-12-26T11:46:12Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sms == null) { throw new java.lang.IllegalArgumentException(\"The sms cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6458/buggy-version/devicelayer.src.main.java.com.jiahaoliuliu.chutoro.devicelayer.smsparser.SmsParserHelper.java", "BodyUseAPI": [], "Fixed commit": "44d09e2af2c25b9276c332efd9bda366e2f8c663", "Url": "https://api.github.com/repos/jiahaoliuliu/chutoro", "Date": "2018-12-18T09:11:02Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (smsParserParametersList == null) { throw new java.lang.IllegalArgumentException(\"The sms parameters list cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6458/buggy-version/devicelayer.src.main.java.com.jiahaoliuliu.chutoro.devicelayer.smsparser.SmsParserHelper.java", "BodyUseAPI": [], "Fixed commit": "44d09e2af2c25b9276c332efd9bda366e2f8c663", "Url": "https://api.github.com/repos/jiahaoliuliu/chutoro", "Date": "2018-12-18T09:11:02Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sms == null) { throw new java.lang.IllegalArgumentException(\"The sms cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6458/buggy-version/devicelayer.src.main.java.com.jiahaoliuliu.chutoro.devicelayer.smsparser.SmsParserHelper.java", "BodyUseAPI": [], "Fixed commit": "44d09e2af2c25b9276c332efd9bda366e2f8c663", "Url": "https://api.github.com/repos/jiahaoliuliu/chutoro", "Date": "2018-12-18T09:11:02Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.voltdb.expressions.OperatorExpression.getExpressionType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type == (org.voltdb.types.ExpressionType.OPERATOR_UNARY_MINUS)) { return (\"(-\" + (m_left.explain(impliedTableName))) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9409/buggy-version/src.frontend.org.voltdb.expressions.OperatorExpression.java", "BodyUseAPI": [], "Fixed commit": "ab10c281e611342a59b41122854154a66164e8d5", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2018-11-19T16:12:41Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user.equals(arouter.dawn.zju.edu.lib_net.bean.User.getCurrentUser(arouter.dawn.zju.edu.lib_net.bean.User.class))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3640/buggy-version/module_forum.src.main.java.arouter.dawn.zju.edu.module_forum.ui.user_information.ForumUserInformationPresenter.java", "BodyUseAPI": [], "Fixed commit": "92cc9c97c570123859093fd14992ba8c09e435ba", "Url": "https://api.github.com/repos/DeIaube/YiXing", "Date": "2018-11-27T11:50:29Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.monster.EntityIronGolem.getVillage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (village == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2193/buggy-version/src.main.java.com.fantasticsource.dynamicstealth.ai.AIDefendVillageEdit.java", "BodyUseAPI": [], "Fixed commit": "b0441c60d69628fcab12d089330572008327ce56", "Url": "https://api.github.com/repos/Laike-Endaril/Dynamic-Stealth", "Date": "2018-12-24T09:56:09Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (size > 0) { array = new int[size]; }else { throw new java.lang.RuntimeException(\"Invalid size\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/546/buggy-version/src.main.java.com.hany.gittutorials.ds.arraylist.ArrayList.java", "BodyUseAPI": [], "Fixed commit": "28f397b05192f0ba8e32ce095543ca1b074492db", "Url": "https://api.github.com/repos/hanmanthreddygurrala/gittutorials", "Date": "2018-12-24T05:25:40Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (total != (lastTotal)) { total = lastTotal; remoteControlClient.editMetadata(false).putLong(MediaMetadataRetriever.METADATA_KEY_DURATION, total).apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2784/buggy-version/app.src.main.java.com.panni.mymusicplayer2.controller.audio.RemoteControlClientPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "c5f13bcf6a45094b908162d24835f1588470288f", "Url": "https://api.github.com/repos/Marco9412/MyMusicPlayer2", "Date": "2018-12-20T21:36:03Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.isCrowned()) { p.setIcon(RedCrownIcon); java.lang.System.out.println(\"feh Crown henaa ya3m \"); }else { p.setIcon(RedIcon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4818/buggy-version/src.checkers.Board.java", "BodyUseAPI": ["checkers.Piece.setIcon(javax.swing.ImageIcon)", "checkers.Piece.setIcon(javax.swing.ImageIcon)"], "Fixed commit": "2ec2e292417dcfe5bd32217828a1537e5238e613", "Url": "https://api.github.com/repos/Even-CSE325-2018/DesktopCheckers", "Date": "2018-12-21T16:34:51Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.isCrowned()) { p.setIcon(WhiteCrownIcon); java.lang.System.out.println(\"feh Crown henaa ya3m \"); }else { p.setIcon(WhiteIcon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4818/buggy-version/src.checkers.Board.java", "BodyUseAPI": ["checkers.Piece.setIcon(javax.swing.ImageIcon)", "checkers.Piece.setIcon(javax.swing.ImageIcon)"], "Fixed commit": "2ec2e292417dcfe5bd32217828a1537e5238e613", "Url": "https://api.github.com/repos/Even-CSE325-2018/DesktopCheckers", "Date": "2018-12-21T16:34:51Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tempname.length()) >= 2) { if ((((((tempname.contains(\"(\")) || (tempname.contains(\")\"))) || (tempname.contains(\"[\"))) || (tempname.contains(\"]\"))) || (tempname.contains(\"{\"))) || (tempname.contains(\"}\"))) { name.setText(\"\"); javax.swing.JOptionPane pane = new javax.swing.JOptionPane(\"Brackets in Name\"); javax.swing.JDialog namedialog = pane.createDialog(\"Wrong Name\"); namedialog.setModal(false); namedialog.setVisible(true); new javax.swing.Timer(2000, ( e) -> namedialog.setVisible(false)).start(); }else { this.setVisible(false); saveListener.actionPerformed(new java.awt.event.ActionEvent(this, 0, \"\")); } }else { name.setText(\"\"); name.setText(\"\"); javax.swing.JOptionPane pane = new javax.swing.JOptionPane(\"Name to short\"); javax.swing.JDialog namedialog = pane.createDialog(\"Wrong Name\"); namedialog.setModal(false); namedialog.setVisible(true); new javax.swing.Timer(2000, ( e) -> namedialog.setVisible(false)).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9118/buggy-version/src.InputWindow.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "9bb6eac37241f1e0eaa555c93b2196c9e1dc9575", "Url": "https://api.github.com/repos/lgrillnb/16Buttons", "Date": "2018-12-18T15:38:31Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((suggestedHey) > (maxHey)) suggestedHey = maxHey;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3594/buggy-version/HowrseApi.HowrseApi.src.api.horse.task.Feed.java", "BodyUseAPI": [], "Fixed commit": "d5fed623f93d7a42df119c5e1d97e53900a016c0", "Url": "https://api.github.com/repos/lolsalat1/HowrseApi", "Date": "2018-12-02T17:09:21Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((suggestedOats) > (maxOats)) suggestedOats = maxOats;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3594/buggy-version/HowrseApi.HowrseApi.src.api.horse.task.Feed.java", "BodyUseAPI": [], "Fixed commit": "d5fed623f93d7a42df119c5e1d97e53900a016c0", "Url": "https://api.github.com/repos/lolsalat1/HowrseApi", "Date": "2018-12-02T17:09:21Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((car.getNumBlocksBeforeTurning()) == 0) { turnDirection = car.getTurningDirection(); }else { turnDirection = TrafficTesterView.NEVER_TURN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7558/buggy-version/Implementation.Intersection.java", "BodyUseAPI": ["Car.getTurningDirection()"], "Fixed commit": "11eaf6c2aa329000564b2868ecc28ffb252a0217", "Url": "https://api.github.com/repos/melissa-gu/cs322", "Date": "2018-11-30T18:06:04Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.giswater.dao.PropertiesDao.prop.get(\"LANGUAGE\", \"en\").toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (language.equals(\"pt_br\")) { language = \"pt\"; country = \"br\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8596/buggy-version/src.org.giswater.dao.PropertiesDao.java", "BodyUseAPI": [], "Fixed commit": "c4a0b3cd71de9ecafebe995b21e5892e5636bf4a", "Url": "https://api.github.com/repos/Giswater/giswater", "Date": "2018-11-29T21:59:00Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((--(size)) == 0) { head = tail = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9104/buggy-version/src.main.java.palm.util.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "1cf1867255ab9a89eff8f3eef16686f511ffc3ba", "Url": "https://api.github.com/repos/cpalmer19/data-structures-practice", "Date": "2018-11-24T09:01:34Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (person != null) { person.setUid(mUser.getUid()); personFullname.setValue(person.getFullname()); personEmail.setValue(person.getEmail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9045/buggy-version/app.src.main.java.ch.hevs.a6452.grp2.autostop.autostop.ViewModels.MainActivityViewModel.java", "BodyUseAPI": ["ch.hevs.a6452.grp2.autostop.autostop.Entites.PersonEntity.getEmail()", "ch.hevs.a6452.grp2.autostop.autostop.Entites.PersonEntity.setUid(mUser.getUid())", "android.arch.lifecycle.MutableLiveData<java.lang.String>.setValue(person.getFullname())", "android.arch.lifecycle.MutableLiveData<java.lang.String>.setValue(person.getEmail())", "ch.hevs.a6452.grp2.autostop.autostop.Entites.PersonEntity.getFullname()"], "Fixed commit": "dffdf987db9aca446f98ce3ed99de370c252c165", "Url": "https://api.github.com/repos/rohsyl/auto-stop", "Date": "2018-11-30T12:12:36Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mDatabase.isOpen())) { open(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8018/buggy-version/app.src.main.java.com.matthewcannefax.menuplanner.utils.database.DataSource.java", "BodyUseAPI": [], "Fixed commit": "e5ca8afed2d7aa939fc01a1f325dd8229f3a1443", "Url": "https://api.github.com/repos/MatthewCannefax/MenuPlanner", "Date": "2018-12-25T05:56:29Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) != null) adapter.getFilter().filter(query);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1619/buggy-version/NYTimesSample.app.src.main.java.com.mvp.nytimes.view.MostPopularActivity.java", "BodyUseAPI": [], "Fixed commit": "98de1dbc99a59db6daa32b945fdec98adcd4bf8d", "Url": "https://api.github.com/repos/syed-zakriya/NYTimesMostPopularMVP", "Date": "2018-11-21T08:48:40Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) != null) adapter.getFilter().filter(newText);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1619/buggy-version/NYTimesSample.app.src.main.java.com.mvp.nytimes.view.MostPopularActivity.java", "BodyUseAPI": [], "Fixed commit": "98de1dbc99a59db6daa32b945fdec98adcd4bf8d", "Url": "https://api.github.com/repos/syed-zakriya/NYTimesMostPopularMVP", "Date": "2018-11-21T08:48:40Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (deltaX != 0) { angle = java.lang.Math.atan((deltaY / deltaX)); }else { angle = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8973/buggy-version/chaosSimulator.src.chaosSimulator.Logic.java", "BodyUseAPI": ["java.lang.Math.atan(double)"], "Fixed commit": "eb6c44c062d2c130285f5325fcd9e3f274c0591f", "Url": "https://api.github.com/repos/metr0man/chaosSimulator", "Date": "2018-11-09T20:51:03Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((((((operator == (llvm.ARMMoveCode.Operator.MOVEQ)) || (operator == (llvm.ARMMoveCode.Operator.MOVLT))) || (operator == (llvm.ARMMoveCode.Operator.MOVGT))) || (operator == (llvm.ARMMoveCode.Operator.MOVNE))) || (operator == (llvm.ARMMoveCode.Operator.MOVGE))) || (operator == (llvm.ARMMoveCode.Operator.MOVLE))) { addUse(resReg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2854/buggy-version/llvm.ARMMoveCode.java", "BodyUseAPI": [], "Fixed commit": "2e5421fcbe7236330237b5994cada16a6d3002d6", "Url": "https://api.github.com/repos/zuoyuanh/cpe431", "Date": "2018-12-10T10:31:10Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i.getQuantity()) <= ((getRequiredQuantityOf(i.getType())) - (getHasQuantityOf(i.getType())))) { for (int a = 0; a < (buildItemsRequired.size()); a++) { if (buildItemsRequired.get(a).getType().equals(i.getType())) { buildItemsHas.get(a).changeQuantity(i.getQuantity()); } } return i.getQuantity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5093/buggy-version/Building.java", "BodyUseAPI": ["buildItemsRequired.get(a).getType().equals(i.getType())", "Item.getQuantity()", "buildItemsHas.get(a).changeQuantity(i.getQuantity())", "Item.getType()", "Item.getQuantity()"], "Fixed commit": "3961b70ecc2f52215e8030b216d84c6912bafd3b", "Url": "https://api.github.com/repos/Kryptikz/Civility", "Date": "2018-12-02T23:48:19Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(p.getFileName().toString().equals(\"restore\"))) { files.add(p); folderSize += p.toFile().length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4379/buggy-version/src.main.java.com.vandendaelen.openbackup.helpers.BackupHelper.java", "BodyUseAPI": ["java.util.List<java.nio.file.Path>.add(java.nio.file.Path)", "java.nio.file.Path.toFile()", "java.io.File.length()"], "Fixed commit": "376f2d2c512b36f06c38a9e175578cb95c8f0b19", "Url": "https://api.github.com/repos/LotuxPunk/OpenBackup", "Date": "2018-12-06T14:31:55Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((formatPage.getComponentClassNames().length) != 0) { format += ru.runa.gpd.lang.model.Variable.FORMAT_COMPONENT_TYPE_START; for (int i = 0; i < (formatPage.getComponentClassNames().length); i++) { if (i != 0) { format += ru.runa.gpd.lang.model.Variable.FORMAT_COMPONENT_TYPE_CONCAT; } format += formatPage.getComponentClassNames()[i]; } format += ru.runa.gpd.lang.model.Variable.FORMAT_COMPONENT_TYPE_END; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9454/buggy-version/plugins.ru.runa.gpd.src.ru.runa.gpd.ui.wizard.VariableRestrictionsPage.java", "BodyUseAPI": ["ru.runa.gpd.ui.wizard.VariableFormatPage.getComponentClassNames()", "ru.runa.gpd.ui.wizard.VariableFormatPage.getComponentClassNames()"], "Fixed commit": "63cce58bdfcf3fdf849a85f48e5912776bdf797d", "Url": "https://api.github.com/repos/9-yards/runawfe-devstudio", "Date": "2018-11-30T08:54:47Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(variable.getFormat().contains(\"usertype\"))) && (!(format.contains(\"usertype\")))) { variable.setFormat(format); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9454/buggy-version/plugins.ru.runa.gpd.src.ru.runa.gpd.ui.wizard.VariableRestrictionsPage.java", "BodyUseAPI": ["ru.runa.gpd.lang.model.Variable.setFormat(java.lang.String)"], "Fixed commit": "63cce58bdfcf3fdf849a85f48e5912776bdf797d", "Url": "https://api.github.com/repos/9-yards/runawfe-devstudio", "Date": "2018-11-30T08:54:47Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 2) { throw new java.lang.IllegalArgumentException(\"Please provide <Input file> <output folder>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1591/buggy-version/src.main.java.master2018.flink.Optimized.java", "BodyUseAPI": [], "Fixed commit": "7344fd70c5c050e5a6da4887171c033eed30326c", "Url": "https://api.github.com/repos/MikeGongolidis/CCFlink", "Date": "2018-11-10T08:52:38Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.getWriteCallback()) == null) { response.setError(HttpServletResponse.SC_NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1634/buggy-version/orienteer-core.src.main.java.org.orienteer.core.resource.OContentShareResource.java", "BodyUseAPI": ["org.orienteer.core.resource.ResourceResponse.setError(HttpServletResponse.SC_NOT_FOUND)"], "Fixed commit": "a46ce2612f08ea32ccf09adbb4217fd6d5fd53ef", "Url": "https://api.github.com/repos/WeaxMe/Orienteer", "Date": "2018-11-24T11:18:17Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.otter.canal.protocol.CanalEntry.RowChange.parseFrom(entry.getStoreValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rowChange.getRowDatasCount()) > 0) { loopback = checkCompatibleLoopback(pipeline, rowChange.getRowDatas(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4342/buggy-version/node.etl.src.main.java.com.alibaba.otter.node.etl.select.selector.MessageParser.java", "BodyUseAPI": ["com.alibaba.otter.node.etl.select.selector.MessageParser.checkCompatibleLoopback(com.alibaba.otter.shared.common.model.config.pipeline.Pipeline,rowChange.getRowDatas(0))", "com.alibaba.otter.canal.protocol.CanalEntry.RowChange.getRowDatas(int)"], "Fixed commit": "322b4de8e52c4d48993cfb4dd6f4dab000912a9c", "Url": "https://api.github.com/repos/alibaba/otter", "Date": "2018-12-08T09:43:08Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.otter.canal.protocol.CanalEntry.RowChange.parseFrom(entry.getStoreValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rowChange.getRowDatasCount()) > 0) { loopback = checkLoopback(pipeline, rowChange.getRowDatas(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4342/buggy-version/node.etl.src.main.java.com.alibaba.otter.node.etl.select.selector.MessageParser.java", "BodyUseAPI": ["com.alibaba.otter.canal.protocol.CanalEntry.RowChange.getRowDatas(int)", "com.alibaba.otter.node.etl.select.selector.MessageParser.checkLoopback(com.alibaba.otter.shared.common.model.config.pipeline.Pipeline,rowChange.getRowDatas(0))"], "Fixed commit": "322b4de8e52c4d48993cfb4dd6f4dab000912a9c", "Url": "https://api.github.com/repos/alibaba/otter", "Date": "2018-12-08T09:43:08Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cookies != null) { for (javax.servlet.http.Cookie c : cookies) { java.lang.System.out.println((((\"Cookie - Name: \" + (c.getName())) + \" Value: \") + (c.getValue()))); if (c.getName().equals(\"visits\")) { visits = java.lang.Integer.parseInt(c.getValue()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1543/buggy-version/Servlets.src.main.java.servlets.CookieServlet.java", "BodyUseAPI": [], "Fixed commit": "3f9d964a10181a766ec1b4e504f41b053bda1dc3", "Url": "https://api.github.com/repos/CS601-F18/code-examples", "Date": "2018-11-05T21:03:06Z"},
{"Line": "=>663", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((project.getCondaEnv()) == false) { if ((project.getPythonVersion().compareToIgnoreCase(\"2.7\")) == 0) { envName = \"python27\"; }else if ((project.getPythonVersion().compareToIgnoreCase(\"3.6\")) == 0) { envName = \"python36\"; }else { throw new java.lang.IllegalArgumentException(\"Error. Python has not been enabled for this project.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3361/buggy-version/hopsworks-api.src.main.java.io.hops.hopsworks.api.pythonDeps.PythonDepsService.java", "BodyUseAPI": ["io.hops.hopsworks.common.dao.project.Project.getPythonVersion()", "project.getPythonVersion().compareToIgnoreCase(java.lang.String)", "io.hops.hopsworks.common.dao.project.Project.getPythonVersion()", "project.getPythonVersion().compareToIgnoreCase(java.lang.String)"], "Fixed commit": "c4e69e87e28407f44be069d95b91b119e490a8ad", "Url": "https://api.github.com/repos/jimdowling/hopsworks", "Date": "2018-11-15T05:08:23Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.cerc.jbean.form.IForm.execute()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (page == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2227/buggy-version/src.main.java.cn.cerc.jmis.core.StartForm.java", "BodyUseAPI": [], "Fixed commit": "23f1f76fac121aa8f37fb3fd0924e0de1fdc9ed7", "Url": "https://api.github.com/repos/cn-cerc/summer-mis", "Date": "2018-12-01T02:46:58Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((holder.getAdapterPosition()) != (-1)) { int isCheckedInt; if (isChecked) { isCheckedInt = 1; }else { isCheckedInt = 0; } items.get(holder.getAdapterPosition()).setCheck(isChecked); myDb.updateItemCheck(items.get(holder.getAdapterPosition()).getId(), isCheckedInt); if (!(onBind)) { parentActivity.sort(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5579/buggy-version/app.src.main.java.smg.adapters.ItemsAdapter.java", "BodyUseAPI": ["java.util.ArrayList<smg.models.Item>.get(holder.getAdapterPosition())", "items.get(holder.getAdapterPosition()).getId()", "smg.adapters.ItemsAdapter.CustomViewHolder.getAdapterPosition()", "smg.databasehelpers.DatabaseHelper.updateItemCheck(items.get(holder.getAdapterPosition()).getId(),int)", "smg.adapters.ItemsAdapter.CustomViewHolder.getAdapterPosition()", "items.get(holder.getAdapterPosition()).setCheck(boolean)", "java.util.ArrayList<smg.models.Item>.get(holder.getAdapterPosition())"], "Fixed commit": "971572fcb411ae918e678477013a98927e391fbe", "Url": "https://api.github.com/repos/XgleadX/ShoppingListAndroid", "Date": "2018-12-14T12:01:27Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anbang.qipai.wenzhoumajiang.cqrs.q.service.MajiangPlayQueryService.findJuResultDbo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (juResultDbo != null) { com.anbang.qipai.wenzhoumajiang.cqrs.q.dbo.MajiangGameDbo majiangGameDbo = majiangGameQueryService.findMajiangGameDboById(gameId); com.anbang.qipai.wenzhoumajiang.msg.msjobj.MajiangHistoricalJuResult juResult = new com.anbang.qipai.wenzhoumajiang.msg.msjobj.MajiangHistoricalJuResult(juResultDbo, majiangGameDbo); wenzhouMajiangResultMsgService.recordJuResult(juResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5032/buggy-version/src.main.java.com.anbang.qipai.wenzhoumajiang.web.controller.GameController.java", "BodyUseAPI": [], "Fixed commit": "dd93c0d504d4353f1b6666c1efb131e4c185f06d", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_wenzhoumajiang", "Date": "2018-12-05T01:56:03Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anbang.qipai.wenzhoumajiang.cqrs.q.service.MajiangPlayQueryService.findJuResultDbo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (juResultDbo != null) { com.anbang.qipai.wenzhoumajiang.cqrs.q.dbo.MajiangGameDbo majiangGameDbo = majiangGameQueryService.findMajiangGameDboById(gameId); com.anbang.qipai.wenzhoumajiang.msg.msjobj.MajiangHistoricalJuResult juResult = new com.anbang.qipai.wenzhoumajiang.msg.msjobj.MajiangHistoricalJuResult(juResultDbo, majiangGameDbo); wenzhouMajiangResultMsgService.recordJuResult(juResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5032/buggy-version/src.main.java.com.anbang.qipai.wenzhoumajiang.web.controller.GameController.java", "BodyUseAPI": [], "Fixed commit": "dd93c0d504d4353f1b6666c1efb131e4c185f06d", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_wenzhoumajiang", "Date": "2018-12-05T01:56:03Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((majiangGameValueObject.getState().name().equals(FinishedByVote.name)) || (majiangGameValueObject.getState().name().equals(Canceled.name))) { gameMsgService.gameFinished(gameId); }else { gameMsgService.gamePlayerLeave(majiangGameValueObject, playerId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5032/buggy-version/src.main.java.com.anbang.qipai.wenzhoumajiang.web.controller.GameController.java", "BodyUseAPI": ["com.anbang.qipai.wenzhoumajiang.msg.service.WenzhouMajiangGameMsgService.gamePlayerLeave(com.anbang.qipai.wenzhoumajiang.cqrs.c.domain.MajiangGameValueObject,java.lang.String)"], "Fixed commit": "dd93c0d504d4353f1b6666c1efb131e4c185f06d", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_wenzhoumajiang", "Date": "2018-12-05T01:56:03Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((majiangGameValueObject.getState().name().equals(FinishedByVote.name)) || (majiangGameValueObject.getState().name().equals(Canceled.name))) { gameMsgService.gameFinished(gameId); }else { gameMsgService.gamePlayerLeave(majiangGameValueObject, playerId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5032/buggy-version/src.main.java.com.anbang.qipai.wenzhoumajiang.web.controller.GameController.java", "BodyUseAPI": ["com.anbang.qipai.wenzhoumajiang.msg.service.WenzhouMajiangGameMsgService.gamePlayerLeave(com.anbang.qipai.wenzhoumajiang.cqrs.c.domain.MajiangGameValueObject,java.lang.String)"], "Fixed commit": "dd93c0d504d4353f1b6666c1efb131e4c185f06d", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_wenzhoumajiang", "Date": "2018-12-05T01:56:03Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anbang.qipai.wenzhoumajiang.cqrs.q.service.MajiangPlayQueryService.findJuResultDbo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (juResultDbo != null) { com.anbang.qipai.wenzhoumajiang.cqrs.q.dbo.MajiangGameDbo majiangGameDbo = majiangGameQueryService.findMajiangGameDboById(gameId); com.anbang.qipai.wenzhoumajiang.msg.msjobj.MajiangHistoricalJuResult juResult = new com.anbang.qipai.wenzhoumajiang.msg.msjobj.MajiangHistoricalJuResult(juResultDbo, majiangGameDbo); wenzhouMajiangResultMsgService.recordJuResult(juResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5032/buggy-version/src.main.java.com.anbang.qipai.wenzhoumajiang.websocket.GamePlayWsController.java", "BodyUseAPI": [], "Fixed commit": "dd93c0d504d4353f1b6666c1efb131e4c185f06d", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_wenzhoumajiang", "Date": "2018-12-05T01:56:03Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lukas.sivickas.uninote.AssignmentsFragment.mDbHelper.getAllModules().size()) != 0) { android.content.Intent intent = new android.content.Intent(getContext(), lukas.sivickas.uninote.forms.AssignmentForm.class); startActivity(intent); }else { android.widget.Toast.makeText(this.getContext(), \"Add modules, before adding assignments\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5462/buggy-version/app.src.main.java.lukas.sivickas.uninote.AssignmentsFragment.java", "BodyUseAPI": [], "Fixed commit": "662f003df0939556890ade69bf25b8eab2191efd", "Url": "https://api.github.com/repos/luksiv/uninote-android-app", "Date": "2018-11-06T14:40:28Z"},
{"Line": "=>569", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(destinationFile.getParentFile().exists())) { if (!(destinationFile.getParentFile().mkdirs())) { this.logIoErrorToES(\"FailMkDIR\"); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5627/buggy-version/src.main.java.org.himalayas.filereader.reader.Reader.java", "BodyUseAPI": ["java.io.File.mkdirs()", "java.io.File.getParentFile()"], "Fixed commit": "d36fd954f3342f2d9139a7f3007b4c80fb55a51e", "Url": "https://api.github.com/repos/zcjsz/TestFileReader", "Date": "2018-11-20T03:29:27Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ids.contains(foodItem.getID()))) { foodItemList.add(foodItem); ids.add(foodItem.getID()); for (Nutrients n : Nutrients.values()) { indexes.get(n.toString()).insert(foodItem.getNutrientValue(n.toString()), foodItem); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2790/buggy-version/FoodData.java", "BodyUseAPI": ["FoodItem.getID()", "indexes.get(n.toString()).insert(foodItem.getNutrientValue(n.toString()),FoodItem)", "FoodItem.getNutrientValue(n.toString())", "java.util.TreeSet<FoodItem>.add(FoodItem)", "java.util.HashSet<java.lang.String>.add(foodItem.getID())"], "Fixed commit": "694aca5c5f80c1a0de90853c30a93e51d390b5d8", "Url": "https://api.github.com/repos/smorison725/CS400-Project", "Date": "2018-12-09T17:17:42Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((health) <= 0) { this.health = 0; return this.health; }else { return health; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8166/buggy-version/Java-Jam.src.main.java.net.jerickson.javajam.combatant.classes.Fighter.java", "BodyUseAPI": [], "Fixed commit": "3d1f1b24bbc29454b215734536fbffd0f9510adf", "Url": "https://api.github.com/repos/hmdoor/JavaJam_PrincessEdition", "Date": "2018-12-16T17:54:39Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((words.length) != (pattern.length())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4133/buggy-version/LeetCode.src.main.java.leetCode.WordPattern.java", "BodyUseAPI": [], "Fixed commit": "7a5eeb68fb0f30e205cef09bef3ca7e9245bfa95", "Url": "https://api.github.com/repos/Linda256/LeetCode_Java", "Date": "2018-12-19T04:04:55Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.tasks.Task.getResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (currentLocation != null) { android.util.Log.i(com.example.avivmoyal.minsta.MapsActivity.TAG, (\"latlang\" + (new com.google.android.gms.maps.model.LatLng(currentLocation.getLatitude(), currentLocation.getLongitude()).toString()))); moveCamera(new com.google.android.gms.maps.model.LatLng(currentLocation.getLatitude(), currentLocation.getLongitude()), com.example.avivmoyal.minsta.MapsActivity.DEFAULT_ZOOM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5648/buggy-version/app.src.main.java.com.example.avivmoyal.minsta.MapsActivity.java", "BodyUseAPI": ["android.location.Location.getLongitude()", "android.location.Location.getLatitude()", "com.example.avivmoyal.minsta.MapsActivity.1.moveCamera(com.google.android.gms.maps.model.LatLng,float)", "android.util.Log.i(java.lang.String,java.lang.String)", "android.location.Location.getLongitude()", "com.google.android.gms.maps.model.LatLng.toString()", "android.location.Location.getLatitude()"], "Fixed commit": "37901d2b5ae916a47c03a9190641834bfd8b93d8", "Url": "https://api.github.com/repos/AvivMoyal/Minsta", "Date": "2018-11-27T13:20:23Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allNews) != null) { return allNews.size(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4045/buggy-version/app.src.main.java.com.example.rkjc.news_app_2.NewsAdapter.java", "BodyUseAPI": [], "Fixed commit": "4e3d896d30def124d1c922b3e58fab625f92be51", "Url": "https://api.github.com/repos/PranilDahal/HW1-NewsRecyclerView-Skeleton", "Date": "2018-11-30T04:19:29Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<jaicore.search.algorithms.andor.AndORBottomUpFilter<N, A, V>.EvaluatedGraph>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (subsolution != null) bestSubSolutionsOfThisChild.add(subsolution);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9508/buggy-version/JAICore.jaicore-search.src.jaicore.search.algorithms.andor.AndORBottomUpFilter.java", "BodyUseAPI": ["java.util.List<jaicore.search.algorithms.andor.AndORBottomUpFilter<N, A, V>.EvaluatedGraph>.add(jaicore.search.algorithms.andor.AndORBottomUpFilter<N, A, V>.EvaluatedGraph)"], "Fixed commit": "592caa5c4d5d857a14d3b0e72d8481421e9217cd", "Url": "https://api.github.com/repos/fmohr/AILibs", "Date": "2018-12-13T13:36:27Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((interim.length) == 2) { getAll(interim[1]); }else { out.println(\"Invalid amount of arguments passed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2386/buggy-version/Cs4125Server.src.cs4125server.doComms.java", "BodyUseAPI": ["cs4125server.doComms.getAll(java.lang.String)"], "Fixed commit": "0a45b87979686465f4f836fa50b56e39858ae462", "Url": "https://api.github.com/repos/dodelathon/Cs4125-BoatyMacBoatFace", "Date": "2018-11-09T20:09:21Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(task.isTypeAutomatic())) { user = getCurrentUser(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9366/buggy-version/Kitodo.src.main.java.org.kitodo.services.workflow.WorkflowControllerService.java", "BodyUseAPI": [], "Fixed commit": "4679f1e9a991ce04f559966f6339bf1cddae6455", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2018-12-19T12:12:12Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((departure.line.product) != null) data.setProduct(departure.line.product.toString()); else data.setProduct(\"Unknown\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7885/buggy-version/src.main.java.com.ems.publictransport.rest.DepartureController.java", "BodyUseAPI": ["com.ems.publictransport.rest.resource.DepartureData.setProduct(departure.line.product.toString())", "departure.line.product.toString()"], "Fixed commit": "2d83bb1e2b9b2143435a04c22b818b38e2e18c52", "Url": "https://api.github.com/repos/sbiermann/public-transport-web-api-javaee", "Date": "2018-11-19T21:14:31Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.io.IOException) { returnException = new com.scienceminer.lookup.exception.ServiceException(500, \"Cannot connect to Elasticsearch\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8909/buggy-version/lookup.src.main.java.com.scienceminer.lookup.storage.lookup.async.ESClientWrapper.java", "BodyUseAPI": [], "Fixed commit": "134d11f56901b92f8577183aa10dde1824fa8a71", "Url": "https://api.github.com/repos/kermitt2/biblio-glutton", "Date": "2018-12-28T09:35:31Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getEnclosure()) != null) getImageFromUrl(enclosureIV, item.getEnclosure().getUrl());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5866/buggy-version/app.src.main.java.ir.malv.detfgit.view.ItemAdapter.java", "BodyUseAPI": ["item.getEnclosure().getUrl()", "ir.malv.detfgit.network.model.Item.getEnclosure()", "ir.malv.detfgit.view.ItemAdapter.ViewHolder.getImageFromUrl(android.widget.ImageView,item.getEnclosure().getUrl())"], "Fixed commit": "32e1a552bffff3d2d1a2beee1817fdd1038b0d04", "Url": "https://api.github.com/repos/seyedalian/DetfGit", "Date": "2018-11-04T08:59:15Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chosenAspect) != null) compound.setString(\"containing\", this.chosenAspect.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9620/buggy-version/src.main.java.com.valeriotor.BTV.tileEntities.TileFumeSpreader.java", "BodyUseAPI": [], "Fixed commit": "39ffcaf268309ac73b87c6e80799bad3c8c92037", "Url": "https://api.github.com/repos/valeriotor/Beyond-The-Veil", "Date": "2018-12-01T21:43:19Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rss == null) { android.widget.Toast.makeText(getContext(), \"Source is not valid rss\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5161/buggy-version/app.src.main.java.com.example.kek.labs.Fragment.NewsFragment.java", "BodyUseAPI": [], "Fixed commit": "f39deb92c200beba8e09688085c59c6f4754218e", "Url": "https://api.github.com/repos/andrew-kulikov/android-labs", "Date": "2018-12-17T06:14:06Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (context != null) inflater = android.view.LayoutInflater.from(context);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5161/buggy-version/app.src.main.java.com.example.kek.labs.Adapters.RssNewsAdapter.java", "BodyUseAPI": [], "Fixed commit": "f39deb92c200beba8e09688085c59c6f4754218e", "Url": "https://api.github.com/repos/andrew-kulikov/android-labs", "Date": "2018-12-17T06:14:06Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inflater) != null) card = inflater.inflate(R.layout.rss_card, parent, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5161/buggy-version/app.src.main.java.com.example.kek.labs.Adapters.RssNewsAdapter.java", "BodyUseAPI": [], "Fixed commit": "f39deb92c200beba8e09688085c59c6f4754218e", "Url": "https://api.github.com/repos/andrew-kulikov/android-labs", "Date": "2018-12-17T06:14:06Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (word.contains(\"-\")) { if (((word.indexOf('-')) + 1) < (word.length())) if ((word.charAt(((word.indexOf('-')) + 1))) == '-') { negetiveSecond = true; char test = word.charAt(word.indexOf(\"-\")); word = (word.substring(0, ((word.indexOf('-')) + 1))) + (word.substring(((word.indexOf('-')) + 2))); } java.lang.String[] tempTokens = word.split(\"-\"); if ((tempTokens.length) >= 2) { if (negetiveFirst) { tempTokens[0] = \"-\" + (tempTokens[0]); } if (negetiveSecond) tempTokens[1] = \"-\" + (tempTokens[1]); } tokens[tNum] = null; for (int i = 0; i < (tempTokens.length); i++) { if (((tempTokens[i]) != null) && (!(tempTokens[i].equals(\"\")))) addTerm(tokenToTerm(tempTokens[i], (tNum - 1))); } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7335/buggy-version/src.Model.Parse.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(char)", "java.lang.String.substring(int)", "java.lang.String.indexOf(char)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.length()", "java.lang.String.indexOf(char)", "java.lang.String.indexOf(char)"], "Fixed commit": "8e5fc679d4836428eadc685413c493bfe46640c0", "Url": "https://api.github.com/repos/yleedon/searchEngine", "Date": "2018-11-02T16:13:56Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(word.toUpperCase().equals(word))) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7335/buggy-version/src.Model.Parse.java", "BodyUseAPI": [], "Fixed commit": "8e5fc679d4836428eadc685413c493bfe46640c0", "Url": "https://api.github.com/repos/yleedon/searchEngine", "Date": "2018-11-02T16:13:56Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(seedu.address.logic.LoginManager.getIsPresident())) { throw new seedu.address.logic.parser.exceptions.ParseException(\"You must log in as president in order to create a new account!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/136/buggy-version/src.main.java.seedu.address.logic.parser.AddressBookParser.java", "BodyUseAPI": [], "Fixed commit": "edf4918fc386ce454b1a19be63b5356d518c060b", "Url": "https://api.github.com/repos/Boon-Jun/addressbook-level4", "Date": "2018-11-02T01:16:16Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.tiles.size()) > 0) { int baseX = 10; int baseY = this.getTile(0).getImage().getY(); for (int j = 0; j < (this.getSize()); j++) { this.getTile(j).getImage().setPosition((baseX + (26 * j)), baseY); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1329/buggy-version/src.main.java.common.Hand.java", "BodyUseAPI": [], "Fixed commit": "07d2bfc76020ff6bbc4b57ba22c8b45b9e6a0b90", "Url": "https://api.github.com/repos/SafelyFast/COMP3004RummyProject", "Date": "2018-11-05T03:22:04Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (time > 0) { leaderboardData.insertNewResult(selectedWord, difficulty, time); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8649/buggy-version/client.src.main.java.edu.wofford.wordoff.ModelessDialog.java", "BodyUseAPI": [], "Fixed commit": "6db9f9888172a8a85bc926bf60bfd980482d55a5", "Url": "https://api.github.com/repos/WoffordCollege-COSC410/project-goto-statement", "Date": "2018-11-16T00:42:15Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["p.getFriends().stream().sorted().collect(java.util.stream.Collector<java.lang.Object, ?, java.util.List<java.lang.Object>>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((friends.size()) > 0) { r_str.replace(((r_str.length()) - 2), r_str.length(), \"].\"); }else { r_str.append(\"].\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8751/buggy-version/src.OOP.Solution.CartelDeNachosImpl.java", "BodyUseAPI": [], "Fixed commit": "d4371547a961ecdfad5971557cfd69033d59d77b", "Url": "https://api.github.com/repos/talperchuk/OOP", "Date": "2018-11-27T22:04:00Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (resultBound == null) { resultBound = new com.jme3.bounding.BoundingBox(getWorldTranslation(), 0.0F, 0.0F, 0.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2412/buggy-version/jme3-core.src.main.java.com.jme3.scene.Node.java", "BodyUseAPI": [], "Fixed commit": "68ea05eaa63b3f30e0d32ba0446f316c80115ed0", "Url": "https://api.github.com/repos/Toboi/jmonkeyengine", "Date": "2018-11-21T07:40:19Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Main.lcm(cation.getCharge(),anion.getCharge())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (commonMultiple < 0) { commonMultiple *= -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7703/buggy-version/Main.java", "BodyUseAPI": [], "Fixed commit": "bb55bff1220fbfc5ae68b1339f8544b6b61ae1f4", "Url": "https://api.github.com/repos/x64-bit/Ionic-Compound-Generator", "Date": "2018-12-10T16:19:30Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 1) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5978/buggy-version/src.main.java.ProjectEuler.helpers.MathHelpers.java", "BodyUseAPI": [], "Fixed commit": "ce7520aada64e319425d678340b1673ae2d8f568", "Url": "https://api.github.com/repos/nbetts/ProjectEuler", "Date": "2018-12-23T01:09:46Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (counter == 2) { org.mapsforge.map.model.IMapViewPosition mvp = mapView.getModel().mapViewPosition; mvp.setMapPosition(new org.mapsforge.core.model.MapPosition(new org.mapsforge.core.model.LatLong(minLat, maxLng), ((byte) (zoom)))); }else { org.mapsforge.map.model.IMapViewPosition mvp = mapView.getModel().mapViewPosition; mvp.setMapLimit(new org.mapsforge.core.model.BoundingBox(minLat, minLng, maxLat, maxLng)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/526/buggy-version/Android.app.src.main.java.catglo.com.deliverydroid.homeScreen.HomeScreen_MapFragmentActivity.java", "BodyUseAPI": [], "Fixed commit": "8391aae08f3672d1c489a2e4cc6d41ebc6194def", "Url": "https://api.github.com/repos/marchold/DeliveryDroid_v3", "Date": "2018-11-17T05:39:30Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((direction == (de.slash._2048.model.Direction.LEFT)) || (direction == (de.slash._2048.model.Direction.UP))) { for (int i = 0; i < (values.size()); i++) { if (values.get(i).equals(lastValue)) { mergedValues.removeLast(); mergedValues.add(((values.get(i)) * 2)); lastValue = null; }else { mergedValues.addLast(values.get(i)); lastValue = values.get(i); } } }else if ((direction == (de.slash._2048.model.Direction.RIGHT)) || (direction == (de.slash._2048.model.Direction.DOWN))) { for (int i = (values.size()) - 1; i > (-1); i--) { if (values.get(i).equals(lastValue)) { mergedValues.removeFirst(); mergedValues.addFirst(((values.get(i)) * 2)); lastValue = null; }else { mergedValues.addFirst(values.get(i)); lastValue = values.get(i); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5461/buggy-version/service.src.main.java.de.slash._2048.service.GameBoardService.java", "BodyUseAPI": [], "Fixed commit": "451cfdd82765cfdddb03f62c50ab22e58fb0a787", "Url": "https://api.github.com/repos/xxSlashxx/2048", "Date": "2018-11-19T16:42:28Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((duration) < timestamp) duration = timestamp;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7762/buggy-version/src.main.java.Olivia.extended.overlays.EfficientAnimatedOverlay.java", "BodyUseAPI": [], "Fixed commit": "bf6d40ee62e02ec870f6d39635b9e48b6d95c682", "Url": "https://api.github.com/repos/citiususc/olivia", "Date": "2018-12-17T10:31:53Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.evosuite.graphs.GraphPool.getRawCFGs(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (methodsGraphs != null) { for (java.util.Map.Entry<java.lang.String, org.evosuite.graphs.cfg.RawControlFlowGraph> entry : methodsGraphs.entrySet()) { java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<eu.stamp.botsing_model_generation.call_sequence.MethodCall>>> collectedCallSequencesForCurrentMethod = analyseMethod(clazz, entry.getKey(), entry.getValue()); savingMethodCallSequences(collectedCallSequencesForCurrentMethod); } }else { eu.stamp.botsing_model_generation.analysis.sourcecode.StaticAnalyser.LOG.warn(\"The generated control flow graphs for class {} was empty. We cannot execute manual analysis withour the control flow graph.\", clazz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1594/buggy-version/botsing-model-generation.src.main.java.eu.stamp.botsing_model_generation.analysis.sourcecode.StaticAnalyser.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.evosuite.graphs.cfg.RawControlFlowGraph>.entrySet()"], "Fixed commit": "ebe60b870bbf98acf311d1a258201045ce6317b6", "Url": "https://api.github.com/repos/STAMP-project/botsing", "Date": "2018-11-09T15:53:56Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (flights != null) { javafx.collections.ObservableList<Model.Flight> observableFlights = javafx.collections.FXCollections.observableArrayList(flights); return observableFlights; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8903/buggy-version/src.main.java.Model.Query.java", "BodyUseAPI": ["javafx.collections.FXCollections.observableArrayList(java.util.List<Model.Flight>)"], "Fixed commit": "b719877ef0e52d3c8105c76bbe68dff2efcd504f", "Url": "https://api.github.com/repos/droru/EveryVaction4U", "Date": "2018-12-10T18:24:43Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.hasCustomName()) frogItem.setStackDisplayName(this.getCustomNameTag());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3964/buggy-version/src.com.mraof.minestuck.entity.EntityFrog.java", "BodyUseAPI": [], "Fixed commit": "d92e2b3eb3ca45839f7c3607bee2176ec4efe971", "Url": "https://api.github.com/repos/Cibernet83/Minestuck", "Date": "2018-12-05T20:52:16Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pa.lastIndexOf(java.io.File.separator)) == (-1)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4010/buggy-version/loguno-processor.src.main.java.org.loguno.processor.configuration.ConfigurationImpl.java", "BodyUseAPI": [], "Fixed commit": "58e6625caf40ac52949127b25ea8b5c8400608be", "Url": "https://api.github.com/repos/dimpon/loguno", "Date": "2018-11-17T17:15:09Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((extra) != null) { config.putAll(extra); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4807/buggy-version/src.main.java.io.zeebe.exporter.kafka.KafkaExporterConfiguration.java", "BodyUseAPI": [], "Fixed commit": "56857ee3b3a5b175099df4e83104bc124aaeca32", "Url": "https://api.github.com/repos/zeebe-io/zeebe-kafka-exporter", "Date": "2018-12-20T11:01:34Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((geoLocation) == null) { geoLocation = new ca.klapstein.baudit.data.GeoLocation(address, latitude, longitude); }else { geoLocation.setAddress(address); geoLocation.setLat(latitude); geoLocation.setLon(longitude); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8730/buggy-version/app.src.main.java.ca.klapstein.baudit.activities.RecordActivity.java", "BodyUseAPI": [], "Fixed commit": "ec6998d94c0d0531f07804dd88ff343fa84c3542", "Url": "https://api.github.com/repos/CMPUT301F18T16/Baudit", "Date": "2018-12-03T03:34:40Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((record.getBlPhotoList().size()) == 2) { record.getBlPhotoList().remove(record.getBlPhotoList().getPhoto(1)); }else if ((record.getBlPhotoList().size()) == 1) { record.getBlPhotoList().remove(record.getBlPhotoList().getPhoto(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9158/buggy-version/app.src.main.java.com.example.loggerdoc.ActivityViewRecord.java", "BodyUseAPI": ["record.getBlPhotoList().getPhoto(int)", "com.example.loggerdoc.Record.getBlPhotoList()", "record.getBlPhotoList().getPhoto(int)", "record.getBlPhotoList().remove(record.getBlPhotoList().getPhoto(1))", "com.example.loggerdoc.Record.getBlPhotoList()", "record.getBlPhotoList().size()", "record.getBlPhotoList().remove(record.getBlPhotoList().getPhoto(0))", "com.example.loggerdoc.Record.getBlPhotoList()", "com.example.loggerdoc.Record.getBlPhotoList()", "com.example.loggerdoc.Record.getBlPhotoList()"], "Fixed commit": "98217dcc31362a0ec5436661c5a80dee84c4c1b4", "Url": "https://api.github.com/repos/CMPUT301F18T03/LoggerDoc", "Date": "2018-12-02T00:13:35Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ageET.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((ageEdited != null) && (!(ageEdited.isEmpty()))) { int age = 0; try { age = java.lang.Integer.valueOf(ageEdited); } catch (java.lang.Exception e) { android.util.Log.e(TAG, e.toString()); } if (age < 1) { android.widget.Toast.makeText(getActivity(), \"Age cannot be less than 1\", Toast.LENGTH_LONG).show(); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5133/buggy-version/app.src.main.java.com.randyperrone.randyperrone.positivityshare.Controller.Fragments.EditDetailsFragment.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "29dfe2def480a6146569bb6b5b73925d9cfc0858", "Url": "https://api.github.com/repos/randyperrone/PositivityShare", "Date": "2018-11-19T23:13:42Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isSquare(matrix))) throw new EasyMatrix.MatrixIsNotSquare();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2373/buggy-version/EasyMatrix.Matrix.java", "BodyUseAPI": [], "Fixed commit": "515f5e0418fbe40c6536e46f9489f2b2c6566280", "Url": "https://api.github.com/repos/MohammadNik/EasyMatrix", "Date": "2018-12-04T16:38:00Z"},
{"Line": "=>7413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!finishedAll) { throw new java.io.IOException((((((((((((\"ERROR DB RECORD LENGTH VIOLATION was \" + (newFp - fp)) + \" should be \") + cmdLength) + \" fp=\") + fp) + \" length=\") + fileLength) + \" opcode=\") + opcode) + \" typecode=\") + typecode)); }else if ((dbErrorsLogged) < (sage.Wizard.MAX_DB_ERRORS_TO_LOG)) { (dbErrorsLogged)++; if (Sage.DBG) java.lang.System.out.println((((((((((((\"ERROR DB RECORD LENGTH VIOLATION was \" + (newFp - fp)) + \" should be \") + cmdLength) + \" fp=\") + fp) + \" length=\") + fileLength) + \" opcode=\") + opcode) + \" typecode=\") + typecode)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2441/buggy-version/java.sage.Wizard.java", "BodyUseAPI": [], "Fixed commit": "f3a5bf9e13555d6c9de2fe4c7df38c79df2784ba", "Url": "https://api.github.com/repos/JREkiwi/sagetv", "Date": "2015-07-07T21:29:34Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (context.getResources().getConfiguration().locale.getLanguage().equals(\"en\")) { mPreferredDigits = Constants.ARABIC_DIGITS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7795/buggy-version/persiancalendar.src.main.java.ir.mirrajabi.persiancalendar.core.PersianCalendarHandler.java", "BodyUseAPI": [], "Fixed commit": "c38ff068a3a528544fa9b03981d363f9c0269a0f", "Url": "https://api.github.com/repos/moeindev/persian-calendar-view", "Date": "2018-11-24T13:08:13Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONArray.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (itr.hasNext()) { itr.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1566/buggy-version/app.src.main.java.API.Utilities.java", "BodyUseAPI": ["java.util.Iterator.next()"], "Fixed commit": "5e935002d9b8bb844413dbd92473396bd7721c38", "Url": "https://api.github.com/repos/FeedMe-app/Feed-Me", "Date": "2018-12-23T11:19:15Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["API.Utilities.findRecipe(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((recipe.get(\"labels\")) != null) { java.util.List<java.util.Map.Entry> labels = API.Utilities.getJSONArray(((org.json.simple.JSONArray) (recipe.get(\"labels\")))); java.util.Iterator<java.util.Map.Entry> itr = labels.iterator(); while (itr.hasNext()) { java.util.Map.Entry<java.lang.String, java.lang.String> tmp = itr.next(); Models.Label label = new Models.Label(tmp.getKey(), tmp.getValue()); recipeObject.getLabels().add(label); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1566/buggy-version/app.src.main.java.API.Utilities.java", "BodyUseAPI": ["API.Utilities.getJSONArray(((org.json.simple.JSONArray) (recipe.get(\"labels\"))))", "org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "5e935002d9b8bb844413dbd92473396bd7721c38", "Url": "https://api.github.com/repos/FeedMe-app/Feed-Me", "Date": "2018-12-23T11:19:15Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.demilich.metastone.game.GameContext.getTriggersAssociatedWith(target.getReference())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (triggers.isEmpty()) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3276/buggy-version/game.src.main.java.net.demilich.metastone.game.spells.desc.valueprovider.SpellstoneValueProvider.java", "BodyUseAPI": [], "Fixed commit": "693c6bc6f9e43ea0ab852d597c665c08641cc8c5", "Url": "https://api.github.com/repos/hiddenswitch/Spellsource-Server", "Date": "2018-11-25T02:15:35Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3276/buggy-version/game.src.main.java.net.demilich.metastone.game.spells.desc.valueprovider.SpellstoneValueProvider.java", "BodyUseAPI": [], "Fixed commit": "693c6bc6f9e43ea0ab852d597c665c08641cc8c5", "Url": "https://api.github.com/repos/hiddenswitch/Spellsource-Server", "Date": "2018-11-25T02:15:35Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.demilich.metastone.game.GameContext.getTriggersAssociatedWith(target.getReference())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((triggers.get(0)) instanceof net.demilich.metastone.game.spells.trigger.Enchantment)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3276/buggy-version/game.src.main.java.net.demilich.metastone.game.spells.desc.valueprovider.SpellstoneValueProvider.java", "BodyUseAPI": [], "Fixed commit": "693c6bc6f9e43ea0ab852d597c665c08641cc8c5", "Url": "https://api.github.com/repos/hiddenswitch/Spellsource-Server", "Date": "2018-11-25T02:15:35Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (type != null) return org.springframework.http.ResponseEntity.ok(type);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3712/buggy-version/src.main.java.com.yhtart.controller.ProductTypeController.java", "BodyUseAPI": ["org.springframework.http.ResponseEntity.ok(com.yhtart.model.ProductType)"], "Fixed commit": "425e4ffdc781de53872fdf8cc3c68b81a31ac664", "Url": "https://api.github.com/repos/luyahui/YHTStoreAPI", "Date": "2018-12-25T06:35:19Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(chatRoom.getName().isEmpty())) { chatRoom.setName(formatChatRoomName(chatRoom.getName())); if ((!(databaseChatRoom.getName().equals(chatRoom.getName()))) && ((chatRoom.getName()) != null)) { if (userRoomRightLevel != (pl.abbl.reactchat.definitions.enums.RoomRightLevel.OWNER)) { return new pl.abbl.reactchat.callbacks.ChatRoomCallback(pl.abbl.reactchat.callbacks.ChatRoomCallback.INSUFFICIENT_RIGHTS); }else { if ((chatRoomRepository.findByName(chatRoom.getName())) != null) { return new pl.abbl.reactchat.callbacks.ChatRoomCallback(pl.abbl.reactchat.callbacks.ChatRoomCallback.CHAT_ROOM_NAME_TAKEN); } databaseChatRoom.setName(chatRoom.getName()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5703/buggy-version/src.main.java.pl.abbl.reactchat.services.impl.ChatRoomServiceImpl.java", "BodyUseAPI": ["pl.abbl.reactchat.models.ChatRoom.getName()", "pl.abbl.reactchat.models.ChatRoom.setName(java.lang.String)", "databaseChatRoom.getName().equals(chatRoom.getName())", "pl.abbl.reactchat.models.ChatRoom.getName()", "pl.abbl.reactchat.models.ChatRoom.getName()", "pl.abbl.reactchat.services.impl.ChatRoomServiceImpl.formatChatRoomName(chatRoom.getName())", "pl.abbl.reactchat.repositories.ChatRoomRepository.findByName(chatRoom.getName())", "pl.abbl.reactchat.models.ChatRoom.getName()", "pl.abbl.reactchat.models.ChatRoom.getName()", "pl.abbl.reactchat.models.ChatRoom.setName(chatRoom.getName())"], "Fixed commit": "7f9d4c2cebb8c10bb3ae8df455c569b9cd91992d", "Url": "https://api.github.com/repos/abbl/ReactChat-backend", "Date": "2018-12-03T19:40:48Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((str.length()) % 2) == 1) { return target.equals(str.substring((((str.length()) / 2) - 1), (((str.length()) / 2) + 2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5141/buggy-version/src.ProblemSet4.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "67a1a0e1a17879ecb78dac499e113c0726ac44e8", "Url": "https://api.github.com/repos/sean-hough/problem-set-4", "Date": "2018-11-06T04:51:56Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((com.blockprobe.main.activities.BlockProbeLandingActivity.selectedBlockProbe.getInvestigationGraph()) != null) && ((actionTab) != null)) { actionTab.setAllEntities(com.blockprobe.main.activities.BlockProbeLandingActivity.selectedBlockProbe.getInvestigationGraph().getGraphEntitiesDisplay()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1343/buggy-version/app.src.main.java.com.blockprobe.main.activities.BlockProbeLandingActivity.java", "BodyUseAPI": ["com.blockprobe.main.fragments.BP_ActionTab.setAllEntities(com.blockprobe.main.activities.BlockProbeLandingActivity.selectedBlockProbe.getInvestigationGraph().getGraphEntitiesDisplay())", "com.blockprobe.main.classes.BlockProbe.getInvestigationGraph()", "com.blockprobe.main.activities.BlockProbeLandingActivity.selectedBlockProbe.getInvestigationGraph().getGraphEntitiesDisplay()"], "Fixed commit": "c1941884fbd3923ee24ed5c8ee9261088ffe46f3", "Url": "https://api.github.com/repos/ShashankAnantharam/GGWP", "Date": "2018-12-16T07:17:26Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mediaPlayer.isPlaying()) { mediaPlayer.pause(); mediaPlayer.seekTo(progress2); }else { mediaPlayer.seekTo(progress2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4461/buggy-version/app.src.main.java.com.giovannimartinus.sounddemo.MainActivity.java", "BodyUseAPI": ["android.media.MediaPlayer.pause()", "android.media.MediaPlayer.seekTo(int)", "android.media.MediaPlayer.seekTo(int)"], "Fixed commit": "fd17ef00c9c80cb83556bd88f22a810f21e72ede", "Url": "https://api.github.com/repos/Giovanni21M/SoundBoard", "Date": "2018-12-07T14:43:38Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gameOver) { double remainingDebt = bank.clearDebt(); if (remainingDebt != 0) { player.setCapital(((player.getCapital()) - remainingDebt)); } double remainingEnergy = player.getEnergyStored(); double liquidatedEnergy = remainingEnergy * 35; player.setCapital(((player.getCapital()) + liquidatedEnergy)); player.setEnergyStored(0); writeHiscore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/847/buggy-version/game.src.FullGame.java", "BodyUseAPI": [], "Fixed commit": "d11bb1928dae023c78ec23d4fb373fea6f5adf7b", "Url": "https://api.github.com/repos/ama291/EnergyFarm", "Date": "2018-12-03T02:03:20Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Character.toString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (current.contentEquals(\"\\n\")) { java.lang.String savedDate = dataArray.get(0); java.lang.String savedBlock = dataArray.get(1); java.lang.String savedFloor = dataArray.get(2); java.lang.String savedTime = dataArray.get(3); java.lang.String savedPlate = dataArray.get(4); java.lang.String savedVehicle = dataArray.get(5); java.lang.String savedVelocity = dataArray.get(6); java.lang.String savedColor = dataArray.get(7); java.lang.String savedBelt = dataArray.get(8); java.lang.String savedOffender = dataArray.get(9); java.lang.String savedResp = dataArray.get(10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7834/buggy-version/app.src.main.java.com.example.wishikawa.aferevelocidade.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e3f8eb973c521d72b3e1aea0d01e76f5297dbcbb", "Url": "https://api.github.com/repos/WagnerNKI/afereVelocidade", "Date": "2018-11-14T20:10:46Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Character.toString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (current.contentEquals(\";\")) { dataArray.add(temp); temp = \"\"; java.lang.System.out.println(\"Line read\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7834/buggy-version/app.src.main.java.com.example.wishikawa.aferevelocidade.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e3f8eb973c521d72b3e1aea0d01e76f5297dbcbb", "Url": "https://api.github.com/repos/WagnerNKI/afereVelocidade", "Date": "2018-11-14T20:10:46Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(strDrinkThumb.contains(com.dimowner.tastycocktails.data.model.Drink.HTTPS))) { this.strDrinkThumb = (com.dimowner.tastycocktails.data.model.Drink.HTTPS) + strDrinkThumb; }else { this.strDrinkThumb = strDrinkThumb; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2063/buggy-version/app.src.main.java.com.dimowner.tastycocktails.data.model.Drink.java", "BodyUseAPI": [], "Fixed commit": "1a557e23e3d2ac4183e7b0848b23613cf76d1e93", "Url": "https://api.github.com/repos/Dimowner/TastyCocktails", "Date": "2018-02-21T23:11:24Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tt.next()) != (org.jhotdraw8.css.CssTokenType.TT_COMMA)) { tt.pushBack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2999/buggy-version/jhotdraw8.src.main.java.org.jhotdraw8.css.text.CssStrokeConverter.java", "BodyUseAPI": ["org.jhotdraw8.css.CssTokenizer.pushBack()"], "Fixed commit": "304ad8dcffc7fa777ecfdf22d3ba9f56a95846d3", "Url": "https://api.github.com/repos/wrandelshofer/jhotdraw", "Date": "2018-11-10T17:02:41Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mContentLength) == 0) { writeHead(); com.koushikdutta.async.util.StreamUtility.closeQuietly(inputStream); onEnd(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3273/buggy-version/AndroidAsync.src.com.koushikdutta.async.http.server.AsyncHttpServerResponseImpl.java", "BodyUseAPI": [], "Fixed commit": "dee6e531c76e7ed9c3d640d7ce7a636b01502b46", "Url": "https://api.github.com/repos/Swordsman-Inaction/AndroidAsync", "Date": "2018-11-29T13:54:16Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rawPriorityValue.length()) > 9) { rawPriorityValue = \"1000000000\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/62/buggy-version/src.main.java.seedu.address.model.game.PriorityMode.java", "BodyUseAPI": [], "Fixed commit": "295743dc217b14584f6bfb702a399d93890bbbe9", "Url": "https://api.github.com/repos/CS2103-AY1819S1-F11-3/main", "Date": "2018-11-11T02:58:54Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (project.containsKey(\"room\")) params.add(project.getString(\"room\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5009/buggy-version/src.main.java.fr.openent.lystore.service.impl.DefaultProjectService.java", "BodyUseAPI": ["io.vertx.core.json.JsonObject.getString(java.lang.String)", "io.vertx.core.json.JsonArray.add(project.getString(\"room\"))"], "Fixed commit": "7b7c53c92dd9ca460bb7c01a75efe9fc8525402a", "Url": "https://api.github.com/repos/OPEN-ENT-NG/lystore", "Date": "2018-12-10T15:56:18Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (project.containsKey(\"stair\")) params.add(project.getInteger(\"stair\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5009/buggy-version/src.main.java.fr.openent.lystore.service.impl.DefaultProjectService.java", "BodyUseAPI": ["io.vertx.core.json.JsonArray.add(project.getInteger(\"stair\"))", "io.vertx.core.json.JsonObject.getInteger(java.lang.String)"], "Fixed commit": "7b7c53c92dd9ca460bb7c01a75efe9fc8525402a", "Url": "https://api.github.com/repos/OPEN-ENT-NG/lystore", "Date": "2018-12-10T15:56:18Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (project.containsKey(\"site\")) params.add(project.getString(\"site\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5009/buggy-version/src.main.java.fr.openent.lystore.service.impl.DefaultProjectService.java", "BodyUseAPI": ["io.vertx.core.json.JsonObject.getString(java.lang.String)", "io.vertx.core.json.JsonArray.add(project.getString(\"site\"))"], "Fixed commit": "7b7c53c92dd9ca460bb7c01a75efe9fc8525402a", "Url": "https://api.github.com/repos/OPEN-ENT-NG/lystore", "Date": "2018-12-10T15:56:18Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (project.containsKey(\"building\")) params.add(project.getString(\"building\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5009/buggy-version/src.main.java.fr.openent.lystore.service.impl.DefaultProjectService.java", "BodyUseAPI": ["io.vertx.core.json.JsonObject.getString(java.lang.String)", "io.vertx.core.json.JsonArray.add(project.getString(\"building\"))"], "Fixed commit": "7b7c53c92dd9ca460bb7c01a75efe9fc8525402a", "Url": "https://api.github.com/repos/OPEN-ENT-NG/lystore", "Date": "2018-12-10T15:56:18Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (project.containsKey(\"description\")) params.add(project.getString(\"description\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5009/buggy-version/src.main.java.fr.openent.lystore.service.impl.DefaultProjectService.java", "BodyUseAPI": ["io.vertx.core.json.JsonArray.add(project.getString(\"description\"))", "io.vertx.core.json.JsonObject.getString(java.lang.String)"], "Fixed commit": "7b7c53c92dd9ca460bb7c01a75efe9fc8525402a", "Url": "https://api.github.com/repos/OPEN-ENT-NG/lystore", "Date": "2018-12-10T15:56:18Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (noargs) { theCommand = za.co.knonchalant.candogram.handlers.BaseMessage.NO_ARGS_COMMAND; text += \" \"; }else theCommand = za.co.knonchalant.candogram.handlers.BaseMessage.COMMAND;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4322/buggy-version/src.main.java.za.co.knonchalant.candogram.handlers.BaseMessage.java", "BodyUseAPI": [], "Fixed commit": "db016a9efadd33531cb168633f64179d499c47e5", "Url": "https://api.github.com/repos/EvanKnowles/CanDoGram", "Date": "2018-12-08T07:36:18Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((matrix[i][n]) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6284/buggy-version/src.main.java.com.LeetCode.Problems.P221MaximalSquare.SolutionDynamicProgramming.java", "BodyUseAPI": [], "Fixed commit": "383e54ba15a2e8a2409c44ca2dddbeefd9d085d0", "Url": "https://api.github.com/repos/aohorodnyk/algorithms-data-structures-java", "Date": "2018-09-10T21:54:35Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((i - 1) >= 0) && ((n - 1) >= 0)) { min = java.lang.Math.min(cache[(i - 1)][(n - 1)], java.lang.Math.min(cache[(i - 1)][n], cache[i][(n - 1)])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6284/buggy-version/src.main.java.com.LeetCode.Problems.P221MaximalSquare.SolutionDynamicProgramming.java", "BodyUseAPI": ["java.lang.Math.min(byte,byte)", "java.lang.Math.min(byte,int)"], "Fixed commit": "383e54ba15a2e8a2409c44ca2dddbeefd9d085d0", "Url": "https://api.github.com/repos/aohorodnyk/algorithms-data-structures-java", "Date": "2018-09-10T21:54:35Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request.getParameterMap().containsKey(\"admin\")) { isAdmin = ((java.lang.Boolean) (request.getSession().getAttribute(\"admin\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4108/buggy-version/code.src.main.java.ch.heigvd.gamification.presentation.UsersServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getSession()", "request.getSession().getAttribute(java.lang.String)"], "Fixed commit": "26a5abe93f09c1791509be8c523158f12a79c233", "Url": "https://api.github.com/repos/Yolocto/Teaching-HEIGVD-AMT-2018-Project", "Date": "2018-11-14T10:32:17Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdmin) { getUsersList(request); request.getRequestDispatcher(\"/WEB-INF/pages/users.jsp\").forward(request, response); }else { request.getRequestDispatcher(\"/WEB-INF/pages/home.jsp\").forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4108/buggy-version/code.src.main.java.ch.heigvd.gamification.presentation.UsersServlet.java", "BodyUseAPI": [], "Fixed commit": "26a5abe93f09c1791509be8c523158f12a79c233", "Url": "https://api.github.com/repos/Yolocto/Teaching-HEIGVD-AMT-2018-Project", "Date": "2018-11-14T10:32:17Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world.findTopLevelValue(name)) != null) { context.et.addAPIError(java.lang.String.format(\"top-level var '%s' already exists\", name)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5397/buggy-version/src.main.java.org.dnal.api.impl.TransactionImpl.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)", "context.et.addAPIError(java.lang.String)"], "Fixed commit": "b2ac50466626ebc9daa803a95d32263fef5306cb", "Url": "https://api.github.com/repos/ianrae/dnal-lang", "Date": "2018-11-21T14:30:00Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.getPlayerJFugue().isFinished()) { iconeASerTrocado.setGlyphName(\"PLAY\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7156/buggy-version/Gerar_Musica.src.controllers.ControlePlayerThread.java", "BodyUseAPI": [], "Fixed commit": "6560303da9bd343d4d40db6afd816958422d4323", "Url": "https://api.github.com/repos/julianealves/tcp_projeto_musica", "Date": "2018-11-30T01:09:38Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((firstTaskDone) && (!(secondTaskDone))) && (((nextTaskNo) + 1) == (taskList.size()))) { android.util.Log.i(com.example.homeuser.taskmanager.services.LOG_TAG, \"All tasks done\"); taskList.clear(); nextTaskNo = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8007/buggy-version/app.src.main.java.com.example.homeuser.taskmanager.services.TaskManagerService.java", "BodyUseAPI": ["java.util.List<com.example.homeuser.taskmanager.models.Task>.clear()"], "Fixed commit": "51b155b0ed3073320168acbcdd2701ef919f4378", "Url": "https://api.github.com/repos/andmyr/TaskManager", "Date": "2018-11-16T14:51:13Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == 0) { result = java.lang.Integer.compare(this.vertex, other.vertex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4524/buggy-version/lab5.UndirectedGraph.src.main.java.by.bsu.likhanova.entity.AdjacentVertex.java", "BodyUseAPI": [], "Fixed commit": "8a76dbbad2fde67f9a67fcf27ecc21e0f772f115", "Url": "https://api.github.com/repos/kseniyalikhanova/Algorithms", "Date": "2018-11-08T14:42:06Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(rs.isBeforeFirst())) { maleCount = 0; }else { maleCount = rs.getInt(\"total\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/923/buggy-version/src.Data.DBConnect.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(java.lang.String)"], "Fixed commit": "5c5f54d0b4650d87c749d0715da4001b6a48c060", "Url": "https://api.github.com/repos/jeffdavidcrockett/Cattle-Tracker", "Date": "2018-12-22T20:06:49Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(rs.isBeforeFirst())) { numOfCows = 0; }else { numOfCows = rs.getInt(\"total\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/923/buggy-version/src.Data.DBConnect.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(java.lang.String)"], "Fixed commit": "5c5f54d0b4650d87c749d0715da4001b6a48c060", "Url": "https://api.github.com/repos/jeffdavidcrockett/Cattle-Tracker", "Date": "2018-12-22T20:06:49Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (referentialIntegrity) { stmt.execute(\"SET REFERENTIAL_INTEGRITY FALSE\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9589/buggy-version/celesta-unit.src.main.java.ru.curs.celestaunit.CelestaUnitExtension.java", "BodyUseAPI": [], "Fixed commit": "60c9be45c04a9ed054e1365a5c335ddbe6fbd5b8", "Url": "https://api.github.com/repos/CourseOrchestra/celesta", "Date": "2018-11-07T13:45:25Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.getTasks().length) == 0) { throw new java.lang.RuntimeException(\"There is no activity in the flow\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3173/buggy-version/src.main.java.com.tibco.dovetail.core.runtime.compilers.FlowCompiler.java", "BodyUseAPI": [], "Fixed commit": "d61af9267091a8341d99bad84805161adbcffb89", "Url": "https://api.github.com/repos/mwenyan/dovetail-java-lib-1", "Date": "2018-11-30T22:01:11Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fieldRef.pathElements().size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (subElementsSize > 0) { for (int i = 0; i < (subElementsSize - 1); i++) { java.lang.String subElement = fieldRef.pathElements().get(i).name().name().name(); if (!(subElement.matches(com.exxeta.iss.sonar.esql.check.SubElementNameCheck.UPPERCASE_FORMAT))) { addIssue(tree, com.exxeta.iss.sonar.esql.check.SubElementNameCheck.MESSAGE); } } java.lang.String lastElement = fieldRef.pathElements().get((subElementsSize - 1)).name().name().name(); if (!(lastElement.matches(com.exxeta.iss.sonar.esql.check.SubElementNameCheck.LOWERCASE_FORMAT))) { addIssue(tree, com.exxeta.iss.sonar.esql.check.SubElementNameCheck.MESSAGE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1823/buggy-version/esql-checks.src.main.java.com.exxeta.iss.sonar.esql.check.SubElementNameCheck.java", "BodyUseAPI": ["fieldRef.pathElements().get((subElementsSize - 1)).name().name()", "fieldRef.pathElements().get((subElementsSize - 1)).name().name().name()", "fieldRef.pathElements().get((subElementsSize - 1)).name()", "fieldRef.pathElements().get(int)"], "Fixed commit": "05f92a1c6d5bbf0e16df00db9a4a3cc1a0206a64", "Url": "https://api.github.com/repos/SergeyPugachyov/sonar-esql-plugin", "Date": "2018-11-20T11:56:53Z"},
{"Line": "=>1505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((getListOfFilesFragment().getNoOfItems()) == 2) || (result.isException())) { showSnackMessage(com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.getResultMessage(result, operation, getResources())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6803/buggy-version/src.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.activity.FileDisplayActivity.showSnackMessage(com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.getResultMessage(result, operation, getResources()))", "com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.getResultMessage(com.owncloud.android.lib.common.operations.RemoteOperationResult,com.owncloud.android.operations.RemoveFileOperation,getResources())"], "Fixed commit": "594e48cfcf196626b13813a4429e931888a967a4", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-11-18T04:51:52Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((this) instanceof com.github.lhrb.nemo.actors.Section)) { new com.github.lhrb.nemo.actors.ActorPrefab(getX(), getY(), getStage()).setAnimation(com.github.lhrb.nemo.util.AnimationLoader.get().animation(\"explosion.png\", 6, 6, 0.05F, false)); }else { new com.github.lhrb.nemo.actors.ActorPrefab(((getParent().getX()) + ((getParent().getWidth()) / 2)), getParent().getY(), getStage()).setAnimation(com.github.lhrb.nemo.util.AnimationLoader.get().animation(\"explosion.png\", 6, 6, 0.05F, false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1479/buggy-version/core.src.com.github.lhrb.nemo.actors.EnemyActor.java", "BodyUseAPI": [], "Fixed commit": "d6a4a680e4a33916a5dbae2f2207d5918afbd60d", "Url": "https://api.github.com/repos/lhrb/swec8", "Date": "2018-12-18T13:44:47Z"},
{"Line": "=>694", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userUploadVideoList.size()) > 0) { if (userUploadVideoList.get(0).contains(document.getId())) { UserUploadVideoId.add(document.toObject(com.hitstreamr.hitstreamrbeta.Video.class)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9537/buggy-version/app.src.main.java.com.hitstreamr.hitstreamrbeta.Profile.java", "BodyUseAPI": ["java.lang.String.contains(document.getId())", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "5b0e5244e34a6eb4f102554880bab37f4d0a1b7b", "Url": "https://api.github.com/repos/HitStreamr/BETA-app", "Date": "2018-12-01T02:00:34Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((httpConnectorFactory) != null) { try { httpConnectorFactory.shutdown(); httpConnectorFactory = null; } catch (java.lang.InterruptedException e) { org.wso2.extension.siddhi.io.http.sink.HttpSink.log.info((\"Failed to shutdown the http connection factory while shutting down the siddhi app \" + (siddhiAppContext))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6720/buggy-version/component.src.main.java.org.wso2.extension.siddhi.io.http.sink.HttpSink.java", "BodyUseAPI": [], "Fixed commit": "c1a0797919947139590f12cee815ca97587328c3", "Url": "https://api.github.com/repos/minudika/siddhi-io-http", "Date": "2018-11-17T11:31:56Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.EntityManager.find(java.lang.Class,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (confEntry != null) { return confEntry.getValue(); }else { return s.getDefaultValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9814/buggy-version/hopsworks-ca.src.main.java.io.hops.hopsworks.ca.controllers.CAConf.java", "BodyUseAPI": ["io.hops.hopsworks.ca.dao.ConfEntry.getValue()"], "Fixed commit": "182b6cfaee389196d7737ea547f89054ebdc99da", "Url": "https://api.github.com/repos/SirOibaf/hopsworks", "Date": "2018-12-05T16:48:18Z"},
{"Line": "=>4", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) != 0) { path = args[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1614/buggy-version/src.Solver.java", "BodyUseAPI": [], "Fixed commit": "286fd4e4ae464986afbaa7ac1cc185e7ccedc362", "Url": "https://api.github.com/repos/hliejun/SAT-Solver", "Date": "2018-01-29T08:36:06Z"},
{"Line": "=>773", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((endpos.returno()) > (startpos.returno())) { turn(((float) ((endpos.returno()) - (startpos.returno()))), org.firstinspires.ftc.teamcode.Control.Rover.turnside.ccw, 0.5, org.firstinspires.ftc.teamcode.Control.Rover.axis.center); }else if ((endpos.returno()) < (startpos.returno())) { turn(((float) (java.lang.Math.abs(((endpos.returno()) - (startpos.returno()))))), org.firstinspires.ftc.teamcode.Control.Rover.turnside.cw, 0.5, org.firstinspires.ftc.teamcode.Control.Rover.axis.center); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4284/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.Control.Rover.java", "BodyUseAPI": ["org.firstinspires.ftc.teamcode.Control.Rover.Position.returno()", "org.firstinspires.ftc.teamcode.Control.Rover.Position.returno()", "org.firstinspires.ftc.teamcode.Control.Rover.Position.returno()", "org.firstinspires.ftc.teamcode.Control.Rover.Position.returno()", "org.firstinspires.ftc.teamcode.Control.Rover.turn(double,org.firstinspires.ftc.teamcode.Control.Rover.turnside,double,org.firstinspires.ftc.teamcode.Control.Rover.axis)", "org.firstinspires.ftc.teamcode.Control.Rover.Position.returno()", "org.firstinspires.ftc.teamcode.Control.Rover.Position.returno()", "org.firstinspires.ftc.teamcode.Control.Rover.turn(double,org.firstinspires.ftc.teamcode.Control.Rover.turnside,double,org.firstinspires.ftc.teamcode.Control.Rover.axis)", "java.lang.Math.abs(double)"], "Fixed commit": "2e540f2d60de64b4a2bcce5ba5fe7445115537fc", "Url": "https://api.github.com/repos/VivenPuthenpurayil/RidgeRobotics2019", "Date": "2018-12-09T05:18:52Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.github.dapeng.core.helper.SoaSystemEnvProperties.SOA_MONITOR_ENABLE) { this.COUNTER_CLIENT = new com.github.dapeng.basic.api.counter.CounterServiceAsyncClient(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6859/buggy-version/dapeng-counter.dapeng-counter-api.src.main.java.com.github.dapeng.trace.TraceReportHandler.java", "BodyUseAPI": [], "Fixed commit": "049057bfcc5ea99022437e080a5c0eaada7a51a4", "Url": "https://api.github.com/repos/dapeng-soa/dapeng-soa", "Date": "2018-12-29T01:35:25Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (actionSelected) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6183/buggy-version/app.src.main.java.gamePresenters.GamePresenter.java", "BodyUseAPI": [], "Fixed commit": "bf389ea30b5ae5207acc08fc7589caf062befd10", "Url": "https://api.github.com/repos/SponJ2000/TTR_Phase1b", "Date": "2018-11-30T01:38:02Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (actionSelected) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6183/buggy-version/app.src.main.java.gamePresenters.GamePresenter.java", "BodyUseAPI": [], "Fixed commit": "bf389ea30b5ae5207acc08fc7589caf062befd10", "Url": "https://api.github.com/repos/SponJ2000/TTR_Phase1b", "Date": "2018-11-30T01:38:02Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (route.getTarget())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8478/buggy-version/src.main.java.com.blade.mvc.RouteContext.java", "BodyUseAPI": [], "Fixed commit": "ed96519e23bc271b03e4ab1bc1be7a6013b0323c", "Url": "https://api.github.com/repos/psh686868/blade", "Date": "2018-11-30T06:15:02Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.philosophers.contains(index))) { this.philosophers.add(index); this.philosophersPickedUp = this.philosophers.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/17/buggy-version/src.Waiter.java", "BodyUseAPI": ["java.util.ArrayList.add(int)", "java.util.ArrayList.size()"], "Fixed commit": "d531be2f47b054e007b065c4ab3c72968748c1b1", "Url": "https://api.github.com/repos/coldman11/dining-philosophers-problem", "Date": "2018-11-12T16:53:34Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.future.repository.EmployeeRepository.findByUsername(request.getUsername())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (employeeDataUsername == null) { a.setSuccess(false); return a; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3832/buggy-version/future.src.main.java.com.future.controller.LoginController.java", "BodyUseAPI": [], "Fixed commit": "1fc85863c232b01eb1715ca2c07f73eef17653db", "Url": "https://api.github.com/repos/robin071196/project-1-robin-habib", "Date": "2018-12-28T17:33:29Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((countMinus > 1) || (countUnderscore > 1)) || (countSlash > 1)) { return \"ERROR: Input is in an invalid format\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4251/buggy-version/FracCalc.src.fracCalc.FracCalc.java", "BodyUseAPI": [], "Fixed commit": "b496958549ea3002ae0b2b5c7a862367ba3a5d0a", "Url": "https://api.github.com/repos/Auroric/AaronY-APCSA-2018", "Date": "2018-11-22T01:04:53Z"},
{"Line": "=>823", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value_10 < value) { matchStat = NOT_MATCH; return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2914/buggy-version/src.main.java.com.alibaba.fastjson.parser.JSONScanner.java", "BodyUseAPI": [], "Fixed commit": "af521ab3ea00bbb2de1d5421050e6eb675617f7c", "Url": "https://api.github.com/repos/GulajavaMinistudio/fastjson", "Date": "2018-12-09T15:22:28Z"},
{"Line": "=>1661", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value_10 < value) { throw new com.alibaba.fastjson.JSONException((\"parseInt error : \" + (subString(mark, (offset - 1))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2914/buggy-version/src.main.java.com.alibaba.fastjson.parser.JSONScanner.java", "BodyUseAPI": [], "Fixed commit": "af521ab3ea00bbb2de1d5421050e6eb675617f7c", "Url": "https://api.github.com/repos/GulajavaMinistudio/fastjson", "Date": "2018-12-09T15:22:28Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldName != null) { message += \", field : \" + fieldName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2914/buggy-version/src.main.java.com.alibaba.fastjson.serializer.IntegerCodec.java", "BodyUseAPI": [], "Fixed commit": "af521ab3ea00bbb2de1d5421050e6eb675617f7c", "Url": "https://api.github.com/repos/GulajavaMinistudio/fastjson", "Date": "2018-12-09T15:22:28Z"},
{"Line": "=>1720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectForUpdate) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7937/buggy-version/modules.indexing.src.main.java.org.apache.ignite.internal.processors.query.h2.sql.GridSqlQueryParser.java", "BodyUseAPI": [], "Fixed commit": "febb0cc96a24501ac608caf5fa6f4830cfaf0a08", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2018-11-14T12:04:33Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.megacrit.cardcrawl.dungeons.AbstractDungeon.getCurrMapNode()) != null) && ((com.megacrit.cardcrawl.dungeons.AbstractDungeon.getCurrRoom()) != null)) { for (infinitespire.abstracts.Quest quest : infinitespire.InfiniteSpire.questLog) { if ((((!(quest.isCompleted())) && (quest instanceof infinitespire.quests.PickUpCardQuest)) && ((((infinitespire.quests.PickUpCardQuest) (quest)).cardID) != null)) && (((infinitespire.quests.PickUpCardQuest) (quest)).cardID.equals(card.cardID))) { if (infinitespire.patches.AbstractCardPatch.RenderPatch.shouldRenderQuestIcon()) { sb.draw(infinitespire.util.TextureLoader.getTexture(\"img/infinitespire/ui/topPanel/questLogIcon.png\"), ((card.current_x) + (((320.0F * (card.drawScale)) / 3.0F) * (com.megacrit.cardcrawl.core.Settings.scale))), ((card.current_y) + (((480.0F * (card.drawScale)) / 3.0F) * (com.megacrit.cardcrawl.core.Settings.scale))), 32.0F, 32.0F, 64.0F, 64.0F, ((card.drawScale) * (com.megacrit.cardcrawl.core.Settings.scale)), ((card.drawScale) * (com.megacrit.cardcrawl.core.Settings.scale)), 0.0F, 0, 0, 64, 64, false, false); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1524/buggy-version/src.main.java.infinitespire.patches.AbstractCardPatch.java", "BodyUseAPI": [], "Fixed commit": "5a3898041e0f8da7463459680436c325150e20e0", "Url": "https://api.github.com/repos/GraysonnG/InfiniteSpire", "Date": "2018-11-17T00:52:15Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tag.text().split(\" \").length) >= 2) { module.writeln(); module.writeln(Utils.split(tag.text())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/255/buggy-version/src.main.java.ScriptFunction.java", "BodyUseAPI": ["com.sun.javadoc.Tag.text()", "java.lang.Module.writeln(Utils.split(tag.text()))", "Utils.split(java.lang.String)"], "Fixed commit": "efa957f51880b58551c9b524f449fcc66406ca8b", "Url": "https://api.github.com/repos/Atherys-Horizons/AtherysDoclet", "Date": "2018-12-03T01:58:47Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (info.type.equals(TokenType.id_identifier)) { java.lang.String _id = \"\"; try { _id = s.split(\" \")[0]; } catch (java.lang.Exception e) { } if (!(_id.isEmpty())) { if (isExistID(info.regex.toString(), _id)) { if (m.find()) { match = true; java.lang.String tok = m.group().trim(); s = m.replaceFirst(\"\").trim(); tokens.add(new iotwearable.gen.comanalyzer.Token(info.type, tok)); break; } } } }else if (m.find()) { match = true; java.lang.String tok = m.group().trim(); s = m.replaceFirst(\"\").trim(); tokens.add(new iotwearable.gen.comanalyzer.Token(info.type, tok)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8766/buggy-version/iotwearable.gen.src.iotwearable.gen.comanalyzer.Tokenizer.java", "BodyUseAPI": ["java.util.LinkedList<iotwearable.gen.comanalyzer.Token>.add(iotwearable.gen.comanalyzer.Token)", "java.util.LinkedList<iotwearable.gen.comanalyzer.Token>.add(iotwearable.gen.comanalyzer.Token)", "iotwearable.gen.comanalyzer.Tokenizer.isExistID(java.lang.String,java.lang.String)", "java.util.regex.Pattern.toString()"], "Fixed commit": "c3a13c5b734e9e7a805cf06a4edae40526348e88", "Url": "https://api.github.com/repos/esp-lab/DSL4Wearable", "Date": "2018-12-17T17:07:58Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) listener.onClose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/942/buggy-version/slidemenu.src.main.java.com.bebeep.slidemenu.DoubleSlideMenu.java", "BodyUseAPI": [], "Fixed commit": "a672f3d666fdaa423ae967594c3f265607b9be2a", "Url": "https://api.github.com/repos/bebeep/DoubleSlideMenu", "Date": "2018-11-19T03:47:08Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) listener.onOpen();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/942/buggy-version/slidemenu.src.main.java.com.bebeep.slidemenu.DoubleSlideMenu.java", "BodyUseAPI": [], "Fixed commit": "a672f3d666fdaa423ae967594c3f265607b9be2a", "Url": "https://api.github.com/repos/bebeep/DoubleSlideMenu", "Date": "2018-11-19T03:47:08Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) listener.onOpen();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/942/buggy-version/slidemenu.src.main.java.com.bebeep.slidemenu.DoubleSlideMenu.java", "BodyUseAPI": [], "Fixed commit": "a672f3d666fdaa423ae967594c3f265607b9be2a", "Url": "https://api.github.com/repos/bebeep/DoubleSlideMenu", "Date": "2018-11-19T03:47:08Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) listener.onClose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/942/buggy-version/slidemenu.src.main.java.com.bebeep.slidemenu.DoubleSlideMenu.java", "BodyUseAPI": [], "Fixed commit": "a672f3d666fdaa423ae967594c3f265607b9be2a", "Url": "https://api.github.com/repos/bebeep/DoubleSlideMenu", "Date": "2018-11-19T03:47:08Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1377/buggy-version/app.src.main.java.com.android.zls.demos.proxy.ActivityStartProxy.java", "BodyUseAPI": [], "Fixed commit": "597e30114dd99f3f1caf8ae9ba726fe533ab2957", "Url": "https://api.github.com/repos/lion0116/AndroidDemos", "Date": "2018-12-23T11:33:56Z"},
{"Line": "=>3460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((token.kind) == (com.sun.tools.javac.parser.Tokens.TokenKind.LPAREN)) { if (com.sun.tools.javac.parser.JmlOption.isOption(context, JmlOption.STRICT)) { log.warning(pos, \"jml.not.strict\", \"functional form of lbl expression\"); } nextToken(); com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree.JCExpression> args = parseExpressionList(); if ((token.kind) != (com.sun.tools.javac.parser.Tokens.TokenKind.RPAREN)) { log.error(pos(), \"jml.message\", \"Expected a right parenthesis here\"); }else if ((args.length()) != 2) { log.error(labelPos, \"jml.message\", \"Expected two arguments to a lbl experession\"); }else if (!((args.get(0)) instanceof com.sun.tools.javac.tree.JCTree.JCIdent)) { log.error(args.get(0).pos, \"jml.message\", \"The first argument of a lbl expression must be an identifier\"); }else { nextToken(); com.sun.tools.javac.util.Name id = ((com.sun.tools.javac.tree.JCTree.JCIdent) (args.get(0))).name; return toP(jmlF.at(pos).JmlLblExpression(args.get(0).pos, jmlToken, id, args.get(1))); } return toP(jmlF.at(labelPos).Erroneous()); }else { com.sun.tools.javac.util.Name n = ident(); com.sun.tools.javac.tree.JCTree.JCExpression e = parseExpression(); if ((jmlToken == (JmlTokenKind.BSLBLANY)) && (com.sun.tools.javac.parser.JmlOption.isOption(context, JmlOption.STRICT))) { log.warning(pos, \"jml.not.strict\", \"\\\\lbl\"); } return toP(jmlF.at(pos).JmlLblExpression(labelPos, jmlToken, n, e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8683/buggy-version/OpenJML.src.com.sun.tools.javac.parser.JmlParser.java", "BodyUseAPI": [], "Fixed commit": "23eb9fca96fdfa003170acd4b7185f96ab67e716", "Url": "https://api.github.com/repos/OpenJML/OpenJML", "Date": "2018-12-19T19:20:34Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tokensVal.length) > 5) { url = tokensVal[5]; }else { url = tokensVal[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1756/buggy-version/mangaLookUpLine.java", "BodyUseAPI": [], "Fixed commit": "98480f74e518f54160fce0a2df131b900ea7bd8d", "Url": "https://api.github.com/repos/BurningCole/MngaLkUp", "Date": "2018-11-14T02:44:57Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (opponentCard == null) { opponentPlayer.removeHp(currentPlayerAttack); }else { int damage = currentPlayerAttack - opponentPlayerAttack; damage = java.lang.Math.abs(damage); if (currentPlayerAttack > opponentPlayerAttack) { opponentCard.removeHp(damage); if (isCardKilled(opponentCard)) { opponentPlayer.sendToGraveyard(opponentCard); } }else if (currentPlayerAttack < opponentPlayerAttack) currentPlayerCard.removeHp(damage); if (isCardKilled(currentPlayerCard)) { currentPlayer.sendToGraveyard(currentPlayerCard); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5327/buggy-version/src.main.java.models.GameEngine.java", "BodyUseAPI": ["models.GameEngine.isCardKilled(models.Card)", "models.Player.sendToGraveyard(models.Card)", "models.Card.removeHp(int)"], "Fixed commit": "671aa254a6c8f7aa011b36bca80f2ec05214e481", "Url": "https://api.github.com/repos/mohammedalmahfoodh/group3", "Date": "2018-11-03T22:01:04Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.Card.attack()", "models.Card.attack()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentPlayerAttack > opponentPlayerAttack) { int amountOfAttack = currentPlayerAttack - opponentPlayerAttack; java.lang.System.out.println(((\"Player 1 gets to attack Player 2 with: \" + amountOfAttack) + \" dmg\")); }else { int amountOfAttack = opponentPlayerAttack - currentPlayerAttack; java.lang.System.out.println(((\"Player 2 gets to attack Player 1 with : \" + amountOfAttack) + \" dmg\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5327/buggy-version/src.main.java.models.GameEngine.java", "BodyUseAPI": [], "Fixed commit": "671aa254a6c8f7aa011b36bca80f2ec05214e481", "Url": "https://api.github.com/repos/mohammedalmahfoodh/group3", "Date": "2018-11-03T22:01:04Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gauntlet.Skeleton.getColumn()", "gauntlet.Skeleton.getRow()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((row < 0) || (col < 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4664/buggy-version/src.gauntlet.Skeleton.java", "BodyUseAPI": [], "Fixed commit": "7369334e5a4f818b8f0850170d25aea292164516", "Url": "https://api.github.com/repos/Chaycej/Gauntlet", "Date": "2018-11-26T19:29:51Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(njRoot.equals(upgmaRoot.label))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6130/buggy-version/src.pl.edu.pg.eti.biocomp.math.IsIsomorphic.java", "BodyUseAPI": [], "Fixed commit": "156c3801a08e798c775ed8dd8b744cd4a1921e4f", "Url": "https://api.github.com/repos/memnonic/biocomp1", "Date": "2018-12-20T11:17:12Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (euc_sum > 0) { total = java.lang.Math.sqrt(quotes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9434/buggy-version/src.core.Ranking.java", "BodyUseAPI": [], "Fixed commit": "2ba21cf455ca793399ba81da7cd6ae5afb88db35", "Url": "https://api.github.com/repos/Tweeagle/TweeagleCore", "Date": "2018-11-25T11:12:25Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((views) == null) views = new java.util.HashMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6826/buggy-version/impl.src.main.java.com.linsh.protocol.impl.ui.view.FuncViewProtocolImpl.java", "BodyUseAPI": [], "Fixed commit": "edf8c7b8abecde071d924261713654b67ffd3cb2", "Url": "https://api.github.com/repos/SenhLinsh/LshApp-protocol-impl", "Date": "2018-12-02T14:46:07Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((rows < 0) || (cols < 0)) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9327/buggy-version/WordSearch.java", "BodyUseAPI": [], "Fixed commit": "d0591445629570699a835ea6ceebca3d3468251e", "Url": "https://api.github.com/repos/qionghuang6/MKS21X-WordSearch", "Date": "2018-11-08T04:07:23Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (field == null) { if (lookupParameterNames == null) { if (kotlin) { lookupParameterNames = com.alibaba.fastjson.util.TypeUtils.getKoltinConstructorParameters(clazz); }else { lookupParameterNames = com.alibaba.fastjson.util.ASMUtils.lookupParameterNames(creatorConstructor); } } if ((lookupParameterNames.length) > i) { java.lang.String parameterName = lookupParameterNames[i]; field = com.alibaba.fastjson.util.TypeUtils.getField(clazz, parameterName, declaredFields); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6739/buggy-version/src.main.java.com.alibaba.fastjson.util.JavaBeanInfo.java", "BodyUseAPI": [], "Fixed commit": "cd908b713015d00e10bc123e2879fd7643890a11", "Url": "https://api.github.com/repos/GulajavaMinistudio/fastjson", "Date": "2018-12-03T07:08:07Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xipki.util.Base64.decode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ocspReq == null) { org.xipki.ocsp.servlet.OcspServlet.sendError(resp, HttpServletResponse.SC_BAD_REQUEST); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/987/buggy-version/ocsp-servlet.src.main.java.org.xipki.ocsp.servlet.OcspServlet.java", "BodyUseAPI": [], "Fixed commit": "7226b229c43686681a8a399ecd5fcb8066b8be72", "Url": "https://api.github.com/repos/xipki/xipki", "Date": "2018-11-07T22:02:59Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clearScore) { playerScore = 0; rivalScore = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6425/buggy-version/core.src.com.mygdx.game.AirHockeyGame.java", "BodyUseAPI": [], "Fixed commit": "e5cb3b7e06e937d03aec407c940418ac54a1c927", "Url": "https://api.github.com/repos/coosigma/AirHockey", "Date": "2018-11-19T12:59:44Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.code()) != 400) { groupList.remove(position); notifyItemRemoved(position); notifyItemRangeChanged(position, groupList.size()); android.widget.Toast.makeText(context, \"Usuni\u0119to grup\u0119\", Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(context, \"Nie mo\u017cna usun\u0105\u0107 grupy\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3944/buggy-version/app.src.main.java.lodzka.politechnika.qrcode.adapter.GroupsAdapter.java", "BodyUseAPI": [], "Fixed commit": "f7fdaa07c3488ae654067ecf84dba3b68094fdae", "Url": "https://api.github.com/repos/RycerzeZahira/front", "Date": "2018-11-27T18:15:21Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xyz.proteanbear.template.excel.PbPOIExcelTemplate.valueOf(row.getCell(index))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4217/buggy-version/src.main.java.xyz.proteanbear.template.excel.PbPOIExcelTemplate.java", "BodyUseAPI": [], "Fixed commit": "348e80e04afc0950f582f080f445977e5b6ea502", "Url": "https://api.github.com/repos/ProteanBear/PbPOITemplate", "Date": "2018-09-30T07:46:25Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.isDirectory()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8491/buggy-version/src.main.java.com.frostphyr.kin.Launcher.java", "BodyUseAPI": [], "Fixed commit": "aa58d976cfb3a645f3b98e23d198d934ef9c6b23", "Url": "https://api.github.com/repos/Frostphyr/KIN-Event-Keyer", "Date": "2018-12-11T23:18:06Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["realm.where(com.xabber.android.data.database.realm.CrowdfundingMessage.class).findAllSorted(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((messages != null) && (!(messages.isEmpty()))) return messages.last(); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5521/buggy-version/xabber.src.main.java.com.xabber.android.data.http.CrowdfundingManager.java", "BodyUseAPI": ["io.realm.RealmResults<com.xabber.android.data.database.realm.CrowdfundingMessage>.last()"], "Fixed commit": "8e52e4c016381c738af11694570e3984bb0f1d0c", "Url": "https://api.github.com/repos/redsolution/xabber-android", "Date": "2018-11-30T14:36:35Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xabber.android.data.http.CrowdfundingManager.getInstance().getLastMessageFromRealm()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (message != null) { com.xabber.android.presentation.ui.contactlist.viewobjects.CrowdfundingChatVO crowdfundingChat = com.xabber.android.presentation.ui.contactlist.viewobjects.CrowdfundingChatVO.convert(message, unreadCount); items.add(crowdfundingChat); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5521/buggy-version/xabber.src.main.java.com.xabber.android.presentation.mvp.contactlist.ContactListPresenter.java", "BodyUseAPI": ["com.xabber.android.presentation.ui.contactlist.viewobjects.CrowdfundingChatVO.convert(com.xabber.android.data.database.realm.CrowdfundingMessage,int)"], "Fixed commit": "8e52e4c016381c738af11694570e3984bb0f1d0c", "Url": "https://api.github.com/repos/redsolution/xabber-android", "Date": "2018-11-30T14:36:35Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(validateFossURL(edtSelfHosted.getText().toString()))) && ((edtSelfHosted.getText().toString()) != \"\")) { java.lang.String fullURL = (\"http://\" + (edtSelfHosted.getText())) + \".erp.foss.ua\"; edtSelfHosted.setText(fullURL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4675/buggy-version/app.src.main.java.com.odoo.core.account.OdooLogin.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)", "android.widget.EditText.getText()"], "Fixed commit": "e1c00c048becc9ecf21eb52c02603908ad939e94", "Url": "https://api.github.com/repos/dilavus/SaleFoss", "Date": "2018-11-07T16:54:57Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.IBlockAccess.getTileEntity(net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tileEntity instanceof com.mjr.planetprogression.tileEntities.TileEntityTelescopeFake) { net.minecraft.util.math.BlockPos mainBlockPosition = ((com.mjr.planetprogression.tileEntities.TileEntityTelescopeFake) (tileEntity)).mainBlockPosition; if (mainBlockPosition != null) { return world.getBlockState(pos).getBlock().getBedDirection(world.getBlockState(mainBlockPosition), world, mainBlockPosition); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7853/buggy-version/src.main.java.com.mjr.planetprogression.blocks.BlockTelescopeFake.java", "BodyUseAPI": [], "Fixed commit": "56834f687bd05f2e541bc864cb319144f7f6b7e3", "Url": "https://api.github.com/repos/MJRLegends/Planet-Progression", "Date": "2018-11-16T08:52:16Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentGame) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8771/buggy-version/src.main.java.client.presenter.ChadPresenter.java", "BodyUseAPI": [], "Fixed commit": "7c1b41bbcb191912040349902fbfc783dffd8291", "Url": "https://api.github.com/repos/CSU-CS414-WareWolves/cs414-f18-001-WareWolves", "Date": "2018-12-04T20:24:23Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((intern) != null) { intern.init(strings, strings2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3038/buggy-version/src.main.java.de.uros.citlab.errorrate.htr.end2end.PathFilterBaselineMatch.java", "BodyUseAPI": [], "Fixed commit": "4b71eeca6c5a920789320aac47e959e2232b4250", "Url": "https://api.github.com/repos/CITlabRostock/CITlabErrorRate", "Date": "2018-11-15T11:41:27Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(assignedDeliveryman.canAccommodate(ordersToAdd))) { throw new seedu.address.logic.commands.exceptions.CommandException(seedu.address.commons.core.Messages.MESSAGE_ORDERS_LIMIT_EXCEEDED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3047/buggy-version/src.main.java.seedu.address.logic.commands.AssignCommand.java", "BodyUseAPI": [], "Fixed commit": "2c830d14a78dc8c6337d146ff177bb5c6f9f7b63", "Url": "https://api.github.com/repos/juxd/main", "Date": "2018-11-12T03:23:32Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.hkxj.platform.pojo.RoomTimeTable.getCourseTimeTable()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.util.Objects.isNull(timeTable)) { sb.append(\"\u4eca\u5929\u6ca1\u8bfe\"); return new java.lang.String(sb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5570/buggy-version/src.main.java.cn.hkxj.platform.service.wechat.handler.messageHandler.EmptyRoomHandler.java", "BodyUseAPI": [], "Fixed commit": "b358def383b1cac7c5464c89e0da53f1dcce0133", "Url": "https://api.github.com/repos/JR--Chen/hkxj", "Date": "2018-11-06T13:47:50Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (permissionsServices.checkAndRequestLocationPermissions(getActivity(), getContext())) travelConnection.setEndLocationTravel(((ch.hes.it.higiv.Travel.TravelActivity) (getActivity())).getCurrentLocation(), ((ch.hes.it.higiv.Travel.TravelActivity) (getActivity())).getidTravel());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2624/buggy-version/app.src.main.java.ch.hes.it.higiv.Travel.TravelSafeFinished.java", "BodyUseAPI": [], "Fixed commit": "184b1be66646bbd30f68971693966069205346c5", "Url": "https://api.github.com/repos/Idylx/Higiv-Android-App", "Date": "2018-12-18T15:03:18Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (permissionsServices.checkAndRequestLocationPermissions(getActivity(), getContext())) travelConnection.setBeginLocationTravel(((ch.hes.it.higiv.Travel.TravelActivity) (getActivity())).getCurrentLocation(), travelID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2624/buggy-version/app.src.main.java.ch.hes.it.higiv.Travel.TravelCreateFragment.java", "BodyUseAPI": [], "Fixed commit": "184b1be66646bbd30f68971693966069205346c5", "Url": "https://api.github.com/repos/Idylx/Higiv-Android-App", "Date": "2018-12-18T15:03:18Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (totalPrice.equals(\"\")) { android.widget.Toast.makeText(this, \"Total price is empty\", Toast.LENGTH_LONG).show(); }else { intent.putExtra(\"totalPrice\", totalPrice); startActivity(intent); this.overridePendingTransition(android.R.anim.fade_in, android.R.anim.fade_out); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5409/buggy-version/app.src.main.java.com.example.thomas.penjuallpay.TransaksiActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,java.lang.String)"], "Fixed commit": "d173795512e8864f2ec0c9dfdf697c6e3f7cdf36", "Url": "https://api.github.com/repos/thomaswb12/PenjualLPay", "Date": "2018-11-23T09:44:23Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((postType) == 1) { convertView = inflater.inflate(R.layout.lv3_item_filter, parent, false); }else { convertView = inflater.inflate(R.layout.lv_item_filter, parent, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5744/buggy-version/common_base.src.main.java.com.wb.baselib.adapter.Simple1TextAdapter.java", "BodyUseAPI": [], "Fixed commit": "8142e9531bc45348021f302b44ea44a9a6a67e10", "Url": "https://api.github.com/repos/w513209188/BaseLib", "Date": "2018-11-12T03:30:22Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.wso2.sample.identity.oauth2.SessionIdStore.sessionMap.get(sid)) != null) { org.wso2.sample.identity.oauth2.SessionIdStore.log.info((((\"Retrieving session: \" + (org.wso2.sample.identity.oauth2.SessionIdStore.sessionMap.get(sid).getId())) + \" for the sid: \") + sid)); }else { org.wso2.sample.identity.oauth2.SessionIdStore.log.error((\"No session found for the sid: \" + sid)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3886/buggy-version/modules.samples.oauth2.playground2.src.main.org.wso2.sample.identity.oauth2.SessionIdStore.java", "BodyUseAPI": ["org.apache.commons.logging.Log.info((((\"Retrieving session: \" + (org.wso2.sample.identity.oauth2.SessionIdStore.sessionMap.get(sid).getId())) + \" for the sid: \") + sid))", "org.wso2.sample.identity.oauth2.SessionIdStore.sessionMap.get(sid).getId()", "java.util.Map<java.lang.String, javax.servlet.http.HttpSession>.get(java.lang.String)", "org.apache.commons.logging.Log.error(java.lang.String)"], "Fixed commit": "9e2f926d3f750383ef0c41d51056ea1ee401e5cf", "Url": "https://api.github.com/repos/omindu/product-is", "Date": "2018-12-05T08:52:38Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == (java.lang.Integer.MIN_VALUE)) value++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6936/buggy-version/src.ai.AI.java", "BodyUseAPI": [], "Fixed commit": "41fd91cff3418ee1e702ef802f6647ff98babd2a", "Url": "https://api.github.com/repos/rituraj2847/ChessAI", "Date": "2018-11-21T18:19:30Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (status.isResitting()) { outcome += \"Year failed twice, degree failed\"; currentResult = new university.PeriodResult(student.getRegistrationNumber(), level, period, weightedmean, false); currentResult.createPeriodResult(); degreeResult = new university.DegreeResult(student.getRegistrationNumber(), false, \"fail\"); degreeResult.createDegreeResult(); status.setGraduated(); return outcome; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7329/buggy-version/src.university.Student.java", "BodyUseAPI": ["university.StudentStatus.setGraduated()"], "Fixed commit": "63ec60310be31cdd8b74da63fdd85cfa653b2acd", "Url": "https://api.github.com/repos/CFAUSTINO-ARVELA/-Systems-Design-and-Security", "Date": "2018-11-29T10:37:20Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (c != null) { com.dke.game.Models.DataStructs.Coordinate center = getCellCenter(c); renderer.circle(center.getX(), center.getY(), ((com.dke.game.Models.DataStructs.Cell.CELL_SIZE) / 20)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8032/buggy-version/core.src.com.dke.game.Models.GraphicalModels.UIOverlaySquare.java", "BodyUseAPI": ["com.dke.game.Models.GraphicalModels.UIOverlaySquare.getCellCenter(com.dke.game.Models.DataStructs.Cell)"], "Fixed commit": "0cab1d2e92932af7887111cd6e8cee92cd39e85b", "Url": "https://api.github.com/repos/Lucsparidans/GameOfAmazons", "Date": "2018-11-21T09:45:54Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(event instanceof org.apache.camel.management.event.ExchangeFailedEvent)) && (!(event instanceof org.apache.camel.management.event.ExchangeCompletedEvent))) && (!(event instanceof org.apache.camel.management.event.ExchangeSentEvent))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3867/buggy-version/sleuth-camel-core.src.main.java.com.playtika.sleuth.camel.SentEventNotifier.java", "BodyUseAPI": [], "Fixed commit": "0c7924b93967aa5e2d0240fd28cc8e3b9a4a9ebf", "Url": "https://api.github.com/repos/Playtika/sleuth-camel", "Date": "2018-12-06T13:18:07Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.random()) < mutationRate) { code[getAbsPos(i, j)] = ((byte) ((java.lang.Math.random()) * (Genes.moveChunkRange[j]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1887/buggy-version/src.Genes.java", "BodyUseAPI": [], "Fixed commit": "7ed0b8c5bf1d91758c6aa9376f4c1c3e1605d01d", "Url": "https://api.github.com/repos/tweber2021/animal-sim", "Date": "2018-12-19T13:29:53Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.arend.naming.reference.GlobalReferable, org.arend.util.Pair<org.arend.typechecking.visitor.CheckTypeVisitor, java.lang.Boolean>>.remove(unit.getDefinition().getData())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pair == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1813/buggy-version/src.main.java.org.arend.typechecking.order.listener.TypecheckingOrderingListener.java", "BodyUseAPI": [], "Fixed commit": "9b3ccf577a24d5792c1d9834ff700adcea6bf209", "Url": "https://api.github.com/repos/JetBrains/Arend", "Date": "2018-12-06T21:31:43Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.CharSequence.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((input != null) || ((input.trim().length()) > 0)) { try { preferences.edit().putFloat(\"max_time\", java.lang.Float.parseFloat(input.trim())).apply(); nextButton.setEnabled(true); } catch (final java.lang.NumberFormatException e) { android.util.Log.d(\"MAXIMON_HEALTH\", \"Was unable to parse number!\"); } }else { nextButton.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4410/buggy-version/app.src.main.java.edu.wit.maximon.setup.DefaultSettingsFragment.java", "BodyUseAPI": ["java.lang.String.trim()", "preferences.edit().putFloat(\"max_time\", java.lang.Float.parseFloat(input.trim())).apply()", "java.lang.Float.parseFloat(java.lang.String)", "preferences.edit().putFloat(java.lang.String,float)"], "Fixed commit": "b5bf0acf19d5c5767bb9a8acc264653e674fd5b5", "Url": "https://api.github.com/repos/maximonhealth/main_application", "Date": "2018-12-04T05:02:52Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((org.linqs.psl.model.atom.Atom) (filterFormula)).getPredicate()) instanceof org.linqs.psl.model.predicate.GroundingOnlyPredicate) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4967/buggy-version/psl-core.src.main.java.org.linqs.psl.model.rule.arithmetic.AbstractArithmeticRule.java", "BodyUseAPI": [], "Fixed commit": "d7989e7ca44d91ab7ac50526fccf8443fbf5e0a3", "Url": "https://api.github.com/repos/eriq-augustine/psl", "Date": "2018-12-06T07:11:46Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dbURL.startsWith(\"jdbc:hive2\"))) { statement.setQueryTimeout(queryTimeOut); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2985/buggy-version/flinkx-rdb.src.main.java.com.dtstack.flinkx.rdb.inputformat.JdbcInputFormat.java", "BodyUseAPI": [], "Fixed commit": "7bb4c63ff9a102216a0a8aaf2d04ca249b6a95e4", "Url": "https://api.github.com/repos/DTStack/flinkx", "Date": "2018-11-03T08:54:21Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.alexhyisen.foobar.service.RegisterInfo.getUsername()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (accountRepository.existsByUsername(username)) { throw new net.alexhyisen.foobar.service.UsernameExistsException(); }else { return mainRepository.addUser(username, info.getPassword(), getNextUid(), info.getNickname()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2699/buggy-version/src.main.java.net.alexhyisen.foobar.service.MainService.java", "BodyUseAPI": ["net.alexhyisen.foobar.repository.MainRepository.addUser(net.alexhyisen.foobar.service.var,info.getPassword(),long,info.getNickname())"], "Fixed commit": "9fc287f96f4e79ed9599b83f73d30eb5cade8361", "Url": "https://api.github.com/repos/HYisen/foobar", "Date": "2018-12-20T13:37:39Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (destinationParentPath != null) { java.nio.file.Files.createDirectories(destinationParentPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6641/buggy-version/modules.sdk.gradle-util.src.main.java.com.liferay.gradle.util.FileUtil.java", "BodyUseAPI": ["java.nio.file.Files.createDirectories(java.nio.file.Path)"], "Fixed commit": "d6b509b10e38080b4ffd7b8e2e318fb369f3a795", "Url": "https://api.github.com/repos/Hanlf/liferay-portal", "Date": "2018-12-27T23:07:50Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((zooKeeperHelper) != null) { return zooKeeperHelper.isDeregisteredWithZooKeeper(); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2445/buggy-version/service.src.java.org.apache.hive.service.server.HiveServer2.java", "BodyUseAPI": [], "Fixed commit": "fde403e60cb80cb26f068d44d688d4ba9ffc4069", "Url": "https://api.github.com/repos/ashutosh-bapat/hive", "Date": "2018-11-16T16:17:32Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((model.getPictureURL()) != null) { storageRef.child(model.getPictureURL()).getDownloadUrl().addOnSuccessListener(new com.google.android.gms.tasks.OnSuccessListener<android.net.Uri>() { @java.lang.Override public void onSuccess(android.net.Uri uri) { com.bumptech.glide.Glide.with(context).asBitmap().load(uri).into(copy.image); } }).addOnFailureListener(new com.google.android.gms.tasks.OnFailureListener() { @java.lang.Override public void onFailure(@android.support.annotation.NonNull java.lang.Exception exception) { } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9872/buggy-version/app.src.main.java.secapstone.helper.ArtisanAdapter.java", "BodyUseAPI": ["storageRef.child(model.getPictureURL()).getDownloadUrl()", "storageRef.child(model.getPictureURL()).getDownloadUrl().addOnSuccessListener(com.google.android.gms.tasks.OnSuccessListener<android.net.Uri>)", "secapstone.helper.Artisan.getPictureURL()", "storageRef.child(model.getPictureURL()).getDownloadUrl().addOnSuccessListener(new com.google.android.gms.tasks.OnSuccessListener<android.net.Uri>() {\n    @java.lang.Override\n    public void onSuccess(android.net.Uri uri) {\n        com.bumptech.glide.Glide.with(context).asBitmap().load(uri).into(copy.image);\n    }\n}).addOnFailureListener(com.google.android.gms.tasks.OnFailureListener)", "com.google.firebase.storage.StorageReference.child(model.getPictureURL())"], "Fixed commit": "42a0c83e9b32a6401ca2b469c3e3fa403c293600", "Url": "https://api.github.com/repos/syd-baroya/CommunityHelperHandmade", "Date": "2018-12-06T07:39:08Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((w <= 0) || (h <= 0)) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8279/buggy-version/src.main.java.com.bergerkiller.bukkit.common.map.MapCanvas.java", "BodyUseAPI": [], "Fixed commit": "e6d6ec3b98478419cb64ce301074e0ab5c915c5e", "Url": "https://api.github.com/repos/bergerhealer/BKCommonLib", "Date": "2018-11-17T19:08:58Z"},
{"Line": "=>938", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((w <= 0) || (h <= 0)) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8279/buggy-version/src.main.java.com.bergerkiller.bukkit.common.map.MapDisplay.java", "BodyUseAPI": [], "Fixed commit": "e6d6ec3b98478419cb64ce301074e0ab5c915c5e", "Url": "https://api.github.com/repos/bergerhealer/BKCommonLib", "Date": "2018-11-17T19:08:58Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.RecyclerView.findChildViewUnder(motionEvent.getX(),motionEvent.getY())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (child != null) { int position = recyclerView.getChildAdapterPosition(child); if ((motionEvent.getAction()) == (android.view.MotionEvent.ACTION_DOWN)) { com.adam.app.demoset.Utils.inFo(this, \"Start long click timer\"); mFuture = mService.schedule(new com.adam.app.demoset.database.MyTouchItemListener.LongClickTask(position), 2L, java.util.concurrent.TimeUnit.SECONDS); }else if ((motionEvent.getAction()) == (android.view.MotionEvent.ACTION_UP)) { com.adam.app.demoset.Utils.inFo(this, \"cancel long click timer\"); mFuture.cancel(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5094/buggy-version/app.src.main.java.com.adam.app.demoset.database.MyTouchItemListener.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.getChildAdapterPosition(android.view.View)"], "Fixed commit": "27d2fac0479b314c7f423971a2d36f8d80c26dbd", "Url": "https://api.github.com/repos/doremichen/demo_set", "Date": "2018-11-12T00:57:42Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.elmorabit.demo.dao.RoleRepository.findByRoleName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (role == null) { role = new com.elmorabit.demo.entities.AppRole(null, roleName); roleRepository.save(role); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7024/buggy-version/src.main.java.com.elmorabit.demo.services.AccountServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "0407d231db97238ec477a717ba4db2fe3a5b6b10", "Url": "https://api.github.com/repos/ELMORABITYounes/ChallengeBackEnd", "Date": "2018-12-11T22:03:06Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cb) != null) { cb.called(obj); unSubscribeTx(signed.hash.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2098/buggy-version/chainsql.src.main.java.com.peersafe.chainsql.core.Submit.java", "BodyUseAPI": [], "Fixed commit": "3ee6c6dc77aa3c5468f0fce38d6318c24c7a2f81", "Url": "https://api.github.com/repos/ChainSQL/java-chainsql-api", "Date": "2018-12-06T03:52:09Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.currentTimeMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.example.shashank_pc.trial.Helper.BasicHelper.compareDates(currTime, lastTime)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8228/buggy-version/app.src.main.java.com.example.shashank_pc.trial.Helper.AlertHelper.java", "BodyUseAPI": [], "Fixed commit": "c0e3d9106b2d88524a78c4bba414961b4c7aac18", "Url": "https://api.github.com/repos/ShashankAnantharam/HelloWorldTrial", "Date": "2018-11-24T07:37:38Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.citicup.dao.UserMapper.selectByPrimaryKey(java.lang.String)", "com.citicup.dao.UserMapper.selectByPrimaryKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userAuthor.getUid().equals(userMotivator.getUid())) { return new com.alibaba.fastjson.JSONObject() { { put(\"retmessage\", \"\u4e0d\u80fd\u7ed9\u6253\u8d4f\u81ea\u5df1\"); } }.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4144/buggy-version/src.main.java.com.citicup.controller.ArticleController.java", "BodyUseAPI": [], "Fixed commit": "b2cb6b021c1da37c9f989603beb446a89f25e54b", "Url": "https://api.github.com/repos/CitiCupBricksCarrier/CitiCup", "Date": "2018-11-01T08:54:23Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getAvatar()) != null) { fileResource = fileResourceService.getFileResource(user.getAvatar().getUid()); fileResource.setAssigned(true); fileResourceService.updateFileResource(fileResource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5164/buggy-version/dhis-2.dhis-services.dhis-service-dxf2.src.main.java.org.hisp.dhis.dxf2.metadata.objectbundle.hooks.UserObjectBundleHook.java", "BodyUseAPI": ["org.hisp.dhis.fileresource.FileResourceService.getFileResource(user.getAvatar().getUid())", "user.getAvatar().getUid()", "org.hisp.dhis.user.User.getAvatar()"], "Fixed commit": "206fa2d011103ca6aacd03a71b15e36240d90293", "Url": "https://api.github.com/repos/dhis2/dhis2-core", "Date": "2018-11-19T09:49:29Z"},
{"Line": "=>2089", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (boundType instanceof java.lang.Class) { return ((java.lang.Class) (boundType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/298/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": [], "Fixed commit": "8f7ab53bad4fa3c8e8b2d08ebc683d75b90c47ec", "Url": "https://api.github.com/repos/VictorZeng/fastjson", "Date": "2018-11-29T03:11:07Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.IBlockAccess.getTileEntity(net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tileEntity instanceof com.mjr.extraplanets.tileEntities.blocks.TileEntityBasicDecontaminationUnitFake) { net.minecraft.util.math.BlockPos mainBlockPosition = ((com.mjr.extraplanets.tileEntities.blocks.TileEntityBasicDecontaminationUnitFake) (tileEntity)).mainBlockPosition; if (mainBlockPosition != null) { return world.getBlockState(pos).getBlock().getBedDirection(world.getBlockState(mainBlockPosition), world, mainBlockPosition); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8396/buggy-version/src.main.java.com.mjr.extraplanets.blocks.BlockDecontaminationUnitFake.java", "BodyUseAPI": [], "Fixed commit": "e68261442b96bc959c70973337c8a263b28e2087", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-11-10T01:17:27Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.IBlockAccess.getTileEntity(net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tileEntity instanceof com.mjr.extraplanets.tileEntities.blocks.TileEntityBasicDecontaminationUnitFake) { net.minecraft.util.math.BlockPos mainBlockPosition = ((com.mjr.extraplanets.tileEntities.blocks.TileEntityBasicDecontaminationUnitFake) (tileEntity)).mainBlockPosition; if (mainBlockPosition != null) { return world.getBlockState(pos).getBlock().isBed(world.getBlockState(mainBlockPosition), world, mainBlockPosition, player); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8396/buggy-version/src.main.java.com.mjr.extraplanets.blocks.BlockDecontaminationUnitFake.java", "BodyUseAPI": [], "Fixed commit": "e68261442b96bc959c70973337c8a263b28e2087", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-11-10T01:17:27Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFavDisplayed) { event_adapter = new ch.epfl.sweng.zuluzulu.Adapters.EventArrayAdapter(getContext(), event_fav, mListener, user); }else { event_adapter = new ch.epfl.sweng.zuluzulu.Adapters.EventArrayAdapter(getContext(), event_all, mListener, user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2009/buggy-version/app.src.main.java.ch.epfl.sweng.zuluzulu.Fragments.EventFragment.java", "BodyUseAPI": [], "Fixed commit": "489fa0700bc41829178e0a649e301ed4e7fbb734", "Url": "https://api.github.com/repos/njomeau/EPFLife", "Date": "2018-11-26T16:21:20Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetQuest instanceof de.iani.cubequest.quests.InteractorQuest) { ((de.iani.cubequest.quests.InteractorQuest) (targetQuest)).setConfirmationMessage(((de.iani.cubequest.quests.InteractorQuest) (targetQuest)).getConfirmationMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4586/buggy-version/src.main.java.de.iani.cubequest.util.Util.java", "BodyUseAPI": [], "Fixed commit": "22dd90d41b46240f9868889fa8bae0a58be4f2e9", "Url": "https://api.github.com/repos/Brokkonaut/CubeQuest", "Date": "2018-12-30T00:15:24Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mission_counter) >= (mission.length)) mission_counter = (mission.length) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2239/buggy-version/app.src.main.java.jogi.de.mygps.LocationListenerImpl.java", "BodyUseAPI": [], "Fixed commit": "82a33f3f96f2049f6c63888a57d694ba69675bd3", "Url": "https://api.github.com/repos/jogi19/MyGPS", "Date": "2018-12-11T20:54:51Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mToDoItem) != null) { mToDoItem.setPriority(radioGroup.indexOfChild(checkedButton)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4155/buggy-version/app.src.main.java.com.gameaholix.coinops.toDo.ToDoAddEditFragment.java", "BodyUseAPI": [], "Fixed commit": "0962881c7c8f7a3e01a741934aa9e26e920cf1be", "Url": "https://api.github.com/repos/mkillewald/GwG2018_Capstone", "Date": "2018-12-29T17:55:13Z"},
{"Line": "=>1053", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(e.getAsJsonObject().get(\"properties(to)\").getAsJsonObject(),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((note.getNoteType()) == (org.ocmc.ioc.liturgical.schemas.constants.NOTE_TYPES.SUPPLEMENTAL_NOTE)) { this.supplementalList.add(note); }else { tempTopicsList.add(note); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7338/buggy-version/src.main.java.net.ages.alwb.utils.transformers.adapters.TextInformationToPdf.java", "BodyUseAPI": ["java.util.List<org.ocmc.ioc.liturgical.schemas.models.db.docs.notes.TextualNote>.add(org.ocmc.ioc.liturgical.schemas.models.db.docs.notes.TextualNote)", "java.util.List<org.ocmc.ioc.liturgical.schemas.models.db.docs.notes.TextualNote>.add(org.ocmc.ioc.liturgical.schemas.models.db.docs.notes.TextualNote)"], "Fixed commit": "f1e4573fecaa27a1cead7ccd5575485a045a4f11", "Url": "https://api.github.com/repos/OCMC-Translation-Projects/ioc-liturgical-ws", "Date": "2018-12-26T21:29:52Z"},
{"Line": "=>1203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.attr(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((dataValue == null) || ((dataValue.length()) == 0)) { try { dataValue = anchor.attr(\"href\").split(\"~\")[2]; } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7338/buggy-version/src.main.java.net.ages.alwb.utils.transformers.adapters.TextInformationToPdf.java", "BodyUseAPI": [], "Fixed commit": "f1e4573fecaa27a1cead7ccd5575485a045a4f11", "Url": "https://api.github.com/repos/OCMC-Translation-Projects/ioc-liturgical-ws", "Date": "2018-12-26T21:29:52Z"},
{"Line": "=>793", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.supplementalList.size()) > 0) { sb.append(\"\\n\\\\subsection{Supplemental Notes}\\n\"); for (org.ocmc.ioc.liturgical.schemas.models.db.docs.notes.TextualNote note : this.supplementalList) { sb.append(this.getNoteAsLatexForNonRef(note, true)); sb.append(\"\\n\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7338/buggy-version/src.main.java.net.ages.alwb.utils.transformers.adapters.TextInformationToPdf.java", "BodyUseAPI": [], "Fixed commit": "f1e4573fecaa27a1cead7ccd5575485a045a4f11", "Url": "https://api.github.com/repos/OCMC-Translation-Projects/ioc-liturgical-ws", "Date": "2018-12-26T21:29:52Z"},
{"Line": "=>1391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["o.get(\"library\").getAsString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((library.equals(tfmLibrary)) || (library.equals(dedesLibrary))) { transSb.append(libraryLatex); transSb.append(\" & \"); transSb.append(value); transSb.append(\" \\\\\\\\ \"); transSb.append(\"\\n\\\\hline\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7338/buggy-version/src.main.java.net.ages.alwb.utils.transformers.adapters.TextInformationToPdf.java", "BodyUseAPI": [], "Fixed commit": "f1e4573fecaa27a1cead7ccd5575485a045a4f11", "Url": "https://api.github.com/repos/OCMC-Translation-Projects/ioc-liturgical-ws", "Date": "2018-12-26T21:29:52Z"},
{"Line": "=>1399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["o.get(\"library\").getAsString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((((library.equals(greekLibrary)) || (library.equals(gevSotLibrary))) || (library.equals(gevMotLibrary))) || (library.equals(gevLibrary))) || (library.equals(tfmLibrary))) || (library.equals(dedesLibrary))) { if (!(this.usedAbbreviations.containsKey(libraryLatex))) { java.lang.String description = \"\"; if (this.domainMap.containsKey(idManager.getLibrary())) { description = this.domainMap.get(idManager.getLibrary()); if (idManager.getId().equals(description)) { description = \"\"; } }else { description = \"\"; } if (description.contains(\"_\")) { description = \"(description unavailable)\"; } this.usedAbbreviations.put(libraryLatex, description); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7338/buggy-version/src.main.java.net.ages.alwb.utils.transformers.adapters.TextInformationToPdf.java", "BodyUseAPI": [], "Fixed commit": "f1e4573fecaa27a1cead7ccd5575485a045a4f11", "Url": "https://api.github.com/repos/OCMC-Translation-Projects/ioc-liturgical-ws", "Date": "2018-12-26T21:29:52Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (metricClass)) { metricSpecificValue = net.ssehub.kernel_haven.metric_haven.code_metrics.MetricFactory.configureAndReadMetricSpecificSetting(config, notNull(metricClass)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3454/buggy-version/src.net.ssehub.kernel_haven.metric_haven.metric_components.CodeMetricsRunner.java", "BodyUseAPI": [], "Fixed commit": "bb59e3479acf3f75e1d9541610f794a6a62fcd49", "Url": "https://api.github.com/repos/KernelHaven/MetricHaven", "Date": "2018-12-11T10:18:01Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mNDBCWaveDataGrid.getChildCount()) == 1) { mNDBCWaveDataGrid.setColumnCount(1); }else { mNDBCWaveDataGrid.setColumnCount(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9806/buggy-version/app.src.main.java.com.fahadaltimimi.divethesite.view.fragment.DiveSiteFullMapFragment.java", "BodyUseAPI": ["android.support.v7.widget.GridLayout.setColumnCount(int)", "android.support.v7.widget.GridLayout.setColumnCount(int)"], "Fixed commit": "e292677a8b4346c60f921028d0bb1207ff7d8e7d", "Url": "https://api.github.com/repos/fahadaltimimi/DiveTheSite", "Date": "2018-12-01T23:31:09Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mNDBCMeteorologicalDataGrid.getChildCount()) == 1) { mNDBCMeteorologicalDataGrid.setColumnCount(1); }else { mNDBCMeteorologicalDataGrid.setColumnCount(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9806/buggy-version/app.src.main.java.com.fahadaltimimi.divethesite.view.fragment.DiveSiteFullMapFragment.java", "BodyUseAPI": ["android.support.v7.widget.GridLayout.setColumnCount(int)", "android.support.v7.widget.GridLayout.setColumnCount(int)"], "Fixed commit": "e292677a8b4346c60f921028d0bb1207ff7d8e7d", "Url": "https://api.github.com/repos/fahadaltimimi/DiveTheSite", "Date": "2018-12-01T23:31:09Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(params.containsKey(input.getId()))) { if (props.containsKey(input.getId())) { if ((input.getTypeAsEnum()) == (cloudgene.mapred.wdl.WdlParameterInputType.CHECKBOX)) { params.put(input.getId(), input.getValues().get(\"true\")); }else { params.put(input.getId(), props.get(input.getId())); } }else { if (((input.getTypeAsEnum()) == (cloudgene.mapred.wdl.WdlParameterInputType.CHECKBOX)) && (input.isVisible())) { params.put(input.getId(), input.getValues().get(\"false\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1374/buggy-version/src.main.java.cloudgene.mapred.api.v2.jobs.SubmitJob.java", "BodyUseAPI": ["input.getValues().get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(input.getId(),input.getValues().get(\"true\"))", "java.util.Map<java.lang.String, java.lang.String>.get(input.getId())", "cloudgene.mapred.wdl.WdlParameterInput.getValues()", "cloudgene.mapred.wdl.WdlParameterInput.getId()", "cloudgene.mapred.wdl.WdlParameterInput.getTypeAsEnum()", "cloudgene.mapred.wdl.WdlParameterInput.getTypeAsEnum()", "java.util.Map<java.lang.String, java.lang.String>.put(input.getId(),input.getValues().get(\"false\"))", "cloudgene.mapred.wdl.WdlParameterInput.getId()", "cloudgene.mapred.wdl.WdlParameterInput.getValues()", "java.util.Map<java.lang.String, java.lang.String>.containsKey(input.getId())", "cloudgene.mapred.wdl.WdlParameterInput.isVisible()", "cloudgene.mapred.wdl.WdlParameterInput.getId()", "cloudgene.mapred.wdl.WdlParameterInput.getId()", "cloudgene.mapred.wdl.WdlParameterInput.getId()", "input.getValues().get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(input.getId(),java.lang.String)"], "Fixed commit": "05d007a880d2350555680d9b7d1eb2db13849d15", "Url": "https://api.github.com/repos/genepi/cloudgene", "Date": "2018-11-20T11:44:02Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getException().getClass()) == (com.google.firebase.auth.FirebaseAuthInvalidUserException.class)) { android.util.Log.i(TAG, \"signInWithEmail: The user does not exist.\", task.getException()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9335/buggy-version/app.src.main.java.dk.tennarasmussen.thedinnerclub.LoginActivity.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,java.lang.String,task.getException())", "com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult>.getException()"], "Fixed commit": "5647ba9ad87c763d2b56615cb006d0798ff0d68b", "Url": "https://api.github.com/repos/15aber/android-project-the-dinner-club", "Date": "2018-12-03T15:10:12Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blinkingAlpha > 0.0F) { if (((getBlinkSpeed()) > 0) && (!(breakAnimation.equals(BreakAnimationType.ALPHA)))) blinkingAlpha *= ((float) (java.lang.Math.abs(java.lang.Math.sin((((java.lang.System.currentTimeMillis()) / 100.0) * (getBlinkSpeed())))))); drawNewBlinkingBlock(shape, ((blockPos.getX()) - d0), ((blockPos.getY()) - d1), ((blockPos.getZ()) - d2), red, green, blue, blinkingAlpha); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7255/buggy-version/src.main.java.me.shedaniel.mixin.MixinWorldRenderer.java", "BodyUseAPI": [], "Fixed commit": "dd949824baa11d3b9500f0b6aac7537853203cdf", "Url": "https://api.github.com/repos/shedaniel/CustomSelectionBox-New", "Date": "2018-12-29T02:18:34Z"},
{"Line": "=>732", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.helpapaw.helpapaw.utils.images.ImageUtils.getInstance().getFromMediaUri(getContext(),getContext().getContentResolver(),android.net.Uri.parse(path))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (photoFile != null) { actionsListener.onSignalPhotoSelected(android.net.Uri.fromFile(photoFile).getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6804/buggy-version/app.src.main.java.org.helpapaw.helpapaw.signalsmap.SignalsMapFragment.java", "BodyUseAPI": ["android.net.Uri.fromFile(photoFile).getPath()", "SignalsMapContract.UserActionsListener.onSignalPhotoSelected(android.net.Uri.fromFile(photoFile).getPath())", "android.net.Uri.fromFile(java.io.File)"], "Fixed commit": "67f826e8ffa9520e18043c96f09c02a842b79925", "Url": "https://api.github.com/repos/eludelogixter/Android", "Date": "2018-11-14T14:01:32Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((countOfPlayedTurns) > 0) { avgNumOfFlips = (totalNumOfFlips) / (countOfPlayedTurns); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/486/buggy-version/GameEngine.src.GameEngine.Player.java", "BodyUseAPI": [], "Fixed commit": "c903c942174d63ccc59ddf94f32e6f33d16de735", "Url": "https://api.github.com/repos/superduperteam/reversi", "Date": "2018-11-14T12:04:31Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getUser().getPenalties()) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/221/buggy-version/app.src.main.java.utn.proy2k18.vantrack.viewModels.UsersViewModel.java", "BodyUseAPI": [], "Fixed commit": "1dea1edb6d5920ddd899d4be48542551f7e25f45", "Url": "https://api.github.com/repos/JuanPabloNicosanti/VanTrackAndroid", "Date": "2018-11-25T20:42:29Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasAStored6) { }else if (((roll) == 6) && (!(hasUsedExtraMove))) { }else roll = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/241/buggy-version/src.main.LudoGame.java", "BodyUseAPI": [], "Fixed commit": "d818f309abf58e8f2b88d1ffe71197d40644bd9b", "Url": "https://api.github.com/repos/matheuscaldasrj/inf1636-ludo-game", "Date": "2018-12-09T15:35:20Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { getActivity().runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { new org.example.movieapp.Fragments.RandomMovieFragment.getRandomMovie().execute(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8439/buggy-version/app.src.main.java.org.example.movieapp.Fragments.RandomMovieFragment.java", "BodyUseAPI": [], "Fixed commit": "e7c3f382ec65c034b57aa3c73e95839e49cb7650", "Url": "https://api.github.com/repos/Zfigas/MovieApp", "Date": "2018-12-17T02:56:21Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.example.movieapp.CheckInternet.CheckNetwork.isInternetAvailable(getContext())) { if (!(loading_data)) { loading_data = true; (pageCount)++; new org.example.movieapp.Fragments.MovieFragment.getMovies().execute(); adapter.notifyDataSetChanged(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8439/buggy-version/app.src.main.java.org.example.movieapp.Fragments.MovieFragment.java", "BodyUseAPI": [], "Fixed commit": "e7c3f382ec65c034b57aa3c73e95839e49cb7650", "Url": "https://api.github.com/repos/Zfigas/MovieApp", "Date": "2018-12-17T02:56:21Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((oldTriple.modulePath) != null) || (finalI != (path.size()))) { return oldTriple; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3753/buggy-version/src.main.java.org.arend.naming.scope.ImportedScope.java", "BodyUseAPI": [], "Fixed commit": "625304fa212f70db53dca55bb418c1eacf42c74c", "Url": "https://api.github.com/repos/JetBrains/Arend", "Date": "2018-11-06T14:45:44Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldTriple == null) { return new org.arend.naming.scope.ImportedScope.Triple(new org.arend.naming.reference.ModuleReferable(modulePath), (finalI == (path.size()) ? modulePath : null), new org.arend.naming.scope.ImportedScope.Tree(), (finalI == (path.size()) ? myProvider.forModule(modulePath) : EmptyScope.INSTANCE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3753/buggy-version/src.main.java.org.arend.naming.scope.ImportedScope.java", "BodyUseAPI": [], "Fixed commit": "625304fa212f70db53dca55bb418c1eacf42c74c", "Url": "https://api.github.com/repos/JetBrains/Arend", "Date": "2018-11-06T14:45:44Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(aniObjToBeRemoved.contains(aniObj))) { this.aniObjToBeRemoved.add(aniObj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2568/buggy-version/GameFolder.core.src.dk.amminiti.world.GameMap.java", "BodyUseAPI": ["java.util.ArrayList<dk.amminiti.world.AnimatedObject>.add(dk.amminiti.world.AnimatedObject)"], "Fixed commit": "b7f7b6ba39a10f83c9218d6fea99367234613c32", "Url": "https://api.github.com/repos/judo347/CreateJamFall2018", "Date": "2018-11-17T19:29:08Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useTextureView != (this.useTextureView)) { this.useTextureView = useTextureView; updateSurfaceView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4188/buggy-version/android-exoplayer.src.main.java.com.brentvatne.exoplayer.ExoPlayerView.java", "BodyUseAPI": [], "Fixed commit": "5a053a74694c5e0a0f1dde5119a88379ebfcfe93", "Url": "https://api.github.com/repos/a-koka/react-native-video", "Date": "2018-12-13T18:05:09Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (f != null) { net.sf.mzmine.datamodel.impl.SimplePeakIdentity newIdentity = new net.sf.mzmine.datamodel.impl.SimplePeakIdentity(f.getFormulaAsString()); row.addPeakIdentity(newIdentity, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2459/buggy-version/src.main.java.net.sf.mzmine.modules.peaklistmethods.identification.formulapredictionpeaklist.FormulaPredictionPeakListTask.java", "BodyUseAPI": ["net.sf.mzmine.modules.peaklistmethods.identification.formulaprediction.ResultFormula.getFormulaAsString()"], "Fixed commit": "0d52eeac9c630223d2bde3929fe50680b80776a3", "Url": "https://api.github.com/repos/Annexhc/mzmine2", "Date": "2018-11-29T12:36:48Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((shooterShotTimer) != null) && (shooterShotTimer.isRunning())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8634/buggy-version/src.main.java.spaceinvaders.GameBoard.java", "BodyUseAPI": [], "Fixed commit": "986bbea2ca42a23e885125837faba4f6f7bbd397", "Url": "https://api.github.com/repos/cdruk/SpaceInvaders2.0", "Date": "2018-11-30T01:46:01Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { mFragmentManager.beginTransaction().replace(R.id.fragment_container, tech.joeyck.livefootball.ui.competition_detail.matches.MatchesFragment.newInstance(mViewModel.getCompetitionId(), mViewModel.getCompetitionName(), mViewModel.getMatchDay()), MatchesFragment.FRAGMENT_TAG).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9086/buggy-version/app.src.main.java.tech.joeyck.livefootball.ui.competition_detail.CompetitionActivity.java", "BodyUseAPI": [], "Fixed commit": "1b61cc549a557740c494fcff4f2a4fe2a8a0e91e", "Url": "https://api.github.com/repos/s6joui/football-data-android-java", "Date": "2018-12-01T11:07:15Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sun.security.x509.X509CertImpl.getSubjectAlternativeNames()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (sANsCollection != null) { sANs = new java.lang.String[sANsCollection.size()]; i = 0; for (java.util.Iterator iterator = sANsCollection.iterator(); iterator.hasNext();) { java.util.List<java.lang.Object> nameTypePair = ((java.util.List<java.lang.Object>) (iterator.next())); java.lang.Integer typeOfAlternativeName = ((java.lang.Integer) (nameTypePair.get(0))); java.lang.String alternativeName = ((java.lang.String) (nameTypePair.get(1))); sANs[(i++)] = alternativeName; } }else { sANs = new java.lang.String[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6384/buggy-version/src.util.X509Utils.java", "BodyUseAPI": ["java.util.Collection.size()", "java.util.Collection.iterator()"], "Fixed commit": "36e18d67b4837349e3a3d9b9805e1917f19dbc6e", "Url": "https://api.github.com/repos/obabovic/x.509_certificate", "Date": "2017-05-18T10:55:44Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scanner.hasNextLine()) { line = scanner.nextLine(); if (line.isEmpty()) continue; }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7672/buggy-version/client.src.main.java.com.gianlu.pluggableserver.client.Main.java", "BodyUseAPI": ["java.util.Scanner.nextLine()"], "Fixed commit": "117f4c8c0cd877347b26e61bff0025bf8d13a13a", "Url": "https://api.github.com/repos/devgianlu/PluggableServer", "Date": "2018-12-12T18:07:02Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((choice != 1) && (choice != 2)) { java.lang.System.out.println(\"i said either 1 or 2 doofus\"); input.nextLine(); choice = input.nextInt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5289/buggy-version/Game.java", "BodyUseAPI": [], "Fixed commit": "37cfff1cd951f4fd8f7cd54037e09d9401997114", "Url": "https://api.github.com/repos/Prep-IntroToProgramming/java-card-game-m-2-pengwing", "Date": "2018-12-06T01:14:05Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(input.hasNextInt())) { java.lang.System.out.println(\"that's not an integer. try again\"); input.nextLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5289/buggy-version/Game.java", "BodyUseAPI": ["java.util.Scanner.nextLine()"], "Fixed commit": "37cfff1cd951f4fd8f7cd54037e09d9401997114", "Url": "https://api.github.com/repos/Prep-IntroToProgramming/java-card-game-m-2-pengwing", "Date": "2018-12-06T01:14:05Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.ualberta.t04.medicaltracker.Controller.ElasticSearchController.searchRecordComment(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (comments != null) setComments(comments);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6095/buggy-version/app.src.main.java.ca.ualberta.t04.medicaltracker.Model.Record.java", "BodyUseAPI": ["ca.ualberta.t04.medicaltracker.Model.Record.setComments(java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>>)"], "Fixed commit": "217d7e11fe023b4c0998877715d6b0d06910b4de", "Url": "https://api.github.com/repos/CMPUT301F18T04/MedicalTracker", "Date": "2018-12-03T21:57:32Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((BestBuyReceiptMain.menu()) == \"2428\") { StoreItem item = new StoreItem(\"2428\", \"Anker External Battery (20,000mAh)\", \"$49.99\"); items.addItem(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6437/buggy-version/src.BestBuyReceiptMain.java", "BodyUseAPI": [], "Fixed commit": "5db9fe4a7dd870dcf72cadf117006e40a5d04a32", "Url": "https://api.github.com/repos/jpugs1527/Best-Buy-Receipt", "Date": "2018-11-27T19:34:13Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gdl2.expression.LongExpression.nextOperandPairByPrecedence(java.util.List<org.gdl2.expression.LongExpression.OperandPair>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((items.get((next + 1)).expressionItem) instanceof org.gdl2.expression.LongExpression) { right = ((org.gdl2.expression.LongExpression) (items.get((next + 1)).expressionItem)).toBinaryExpression(); }else { right = items.get((next + 1)).expressionItem; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3942/buggy-version/src.main.java.org.gdl2.expression.LongExpression.java", "BodyUseAPI": ["java.util.List<org.gdl2.expression.LongExpression.OperandPair>.get(int)", "org.gdl2.expression.ExpressionItem.toBinaryExpression()", "java.util.List<org.gdl2.expression.LongExpression.OperandPair>.get(int)"], "Fixed commit": "5df0e58ea17b056dcef12cbb1e22e557ddce2b65", "Url": "https://api.github.com/repos/gdl-lang/gdl2", "Date": "2018-11-20T12:54:05Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.gdl2.expression.LongExpression.OperandPair>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((operandPair.expressionItem) instanceof org.gdl2.expression.LongExpression) { left = ((org.gdl2.expression.LongExpression) (operandPair.expressionItem)).toBinaryExpression(); }else { left = operandPair.expressionItem; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3942/buggy-version/src.main.java.org.gdl2.expression.LongExpression.java", "BodyUseAPI": ["org.gdl2.expression.ExpressionItem.toBinaryExpression()"], "Fixed commit": "5df0e58ea17b056dcef12cbb1e22e557ddce2b65", "Url": "https://api.github.com/repos/gdl-lang/gdl2", "Date": "2018-11-20T12:54:05Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPlayer1Turn()) { if ((player1.getCardsOnHand().size()) < 5) { player1.drawCard(); } }else { if ((player2.getCardsOnHand().size()) < 5) { player2.drawCard(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4887/buggy-version/src.main.java.app.controllers.Game.java", "BodyUseAPI": [], "Fixed commit": "1d8a9c7968c8d78e5ef00ac43806ddb16d4c710b", "Url": "https://api.github.com/repos/Schonis86/cardGame", "Date": "2018-11-02T14:28:13Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (ed != null) edDir = new java.io.File(mainDir, ed.getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4310/buggy-version/src.main.java.org.magic.api.pictures.impl.PersonalSetPicturesProvider.java", "BodyUseAPI": ["org.magic.api.beans.MagicEdition.getId()"], "Fixed commit": "9cf599df6c9044db0ea2bbaa2ffd806a509bdb95", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-11-05T17:09:15Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"Unassigned\".equals(assignedTo))) { vickyBot.sendDirectMessageToBot(replacedMessage, assignedTo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3485/buggy-version/vicky.src.main.java.com.devadmin.vicky.service.SlackWebhookService.java", "BodyUseAPI": ["com.devadmin.vicky.bot.VickyBot.sendDirectMessageToBot(java.lang.String,java.lang.String)"], "Fixed commit": "1b7c1a88ea1cba08fbe9dfb5eed67c71e4aafcf1", "Url": "https://api.github.com/repos/devadmin-com/vicky", "Date": "2018-11-22T08:12:12Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.devadmin.vicky.service.SlackWebhookService.findMentionedUsernameListInTheComment(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mentionedUsernameListInTheComment.size()) > 0) { for (java.lang.String username : mentionedUsernameListInTheComment) { java.lang.String replacedMessage = message.replace(((\"[~\" + username) + \"]\"), (\"@\" + username)); vickyBot.sendDirectMessageToBot(replacedMessage, username); if (!(\"Unassigned\".equals(assignedTo))) { vickyBot.sendDirectMessageToBot(replacedMessage, assignedTo); } } }else { if (!(\"Unassigned\".equals(assignedTo))) { vickyBot.sendDirectMessageToBot(message, assignedTo); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3485/buggy-version/vicky.src.main.java.com.devadmin.vicky.service.SlackWebhookService.java", "BodyUseAPI": [], "Fixed commit": "1b7c1a88ea1cba08fbe9dfb5eed67c71e4aafcf1", "Url": "https://api.github.com/repos/devadmin-com/vicky", "Date": "2018-11-22T08:12:12Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.length) < 32) { int diff = 32 - (data.length); byte[] prefix = new byte[diff]; for (int i = 0; i < diff; i++) { prefix[i] = 0; } data = com.dappley.java.core.util.ByteUtil.concat(prefix, data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/675/buggy-version/java.DappleyJavaCore.java-core.src.main.java.com.dappley.java.core.util.ByteUtil.java", "BodyUseAPI": ["com.dappley.java.core.util.ByteUtil.concat(byte[],byte[])"], "Fixed commit": "16673ef683f7b7cf469187f3d9a5185aa97eb1bd", "Url": "https://api.github.com/repos/dappley/dappley-java", "Date": "2018-12-24T03:04:34Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.firstinspires.ftc.teamcode.RoverRuckus.Auto.SuperiorSampling.position) == 2) { goldLoc = GoldPosition.RIGHT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6096/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.RoverRuckus.Auto.SuperiorSampling.java", "BodyUseAPI": [], "Fixed commit": "6e3688999a97368d3acd1ae7bd363695d1b32907", "Url": "https://api.github.com/repos/EastsidePreparatorySchool/ftc_app", "Date": "2018-12-10T06:36:17Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isStopRequested()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6096/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.RoverRuckus.Auto.SuperiorSampling.java", "BodyUseAPI": [], "Fixed commit": "6e3688999a97368d3acd1ae7bd363695d1b32907", "Url": "https://api.github.com/repos/EastsidePreparatorySchool/ftc_app", "Date": "2018-12-10T06:36:17Z"},
{"Line": "=>700", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.entity) != null) { this.entity = null; if (this.entity.worldObj.isRemote) { this.renderer = null; this.triedHands = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9816/buggy-version/src.main.java.mchorse.metamorph.api.morphs.EntityMorph.java", "BodyUseAPI": [], "Fixed commit": "79d770bbad4cc9b24d122d8ceb842abc6045c8f7", "Url": "https://api.github.com/repos/mchorse/metamorph", "Date": "2018-11-11T08:57:30Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(((now.Y) - prey))) > 1.0) res += \"\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3243/buggy-version/src.PDFTextExtract.java", "BodyUseAPI": [], "Fixed commit": "6d882fadf1fbf913d9cc231c384eb2db2259fa2b", "Url": "https://api.github.com/repos/hzk123/PDFextract", "Date": "2018-11-01T02:38:31Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) != null) { if ((e.getCause()) instanceof org.stop_lang.runtime.StopRuntimeErrorException) { org.stop_lang.runtime.StopRuntimeErrorException runtimeErrorException = ((org.stop_lang.runtime.StopRuntimeErrorException) (e.getCause())); throw runtimeErrorException; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8988/buggy-version/src.main.java.org.stop_lang.runtime.StopRuntime.java", "BodyUseAPI": ["java.util.concurrent.ExecutionException.getCause()", "java.util.concurrent.ExecutionException.getCause()"], "Fixed commit": "3a988c9e34c84be06d7bad15166c65b25eed76b9", "Url": "https://api.github.com/repos/pocketlabs/stop", "Date": "2018-12-21T02:42:15Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.issart.alice.exchange.service.IExchangeCommandHandleService.handle(com.issart.alice.exchange.command.ExchangeCommand,com.issart.alice.exchange.type.Exchange)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((info.getDiff()) < 0.0F) { diff = diff.replaceAll(\"\u043d\u043e\u043b\u044c \u0440\u0443\u0431\u043b\u0435\u0439\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1767/buggy-version/src.main.java.com.issart.alice.exchange.ExchangeApplication.java", "BodyUseAPI": [], "Fixed commit": "85f09c22cfc61fe1ae6e82b62b1f9e18690f5493", "Url": "https://api.github.com/repos/artemgolubnichenko/alice", "Date": "2018-12-10T12:57:17Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(row.getBody().isEmpty())) { nbCol = findCol(row, rowsList, compteRows); compteRows++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8574/buggy-version/src.main.java.pdl_2018.groupeSMKS1.Wikitext.java", "BodyUseAPI": ["pdl_2018.groupeSMKS1.Wikitext.findCol(pdl_2018.groupeSMKS1.WtTableRow,java.util.List<java.lang.String>,int)"], "Fixed commit": "dc51cd342e3d752c78eee4c4ba0d10e7266c2865", "Url": "https://api.github.com/repos/SulliDai/PDL_2018-2019_GR1", "Date": "2018-12-02T10:54:54Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pdl_2018.groupeSMKS1.WtTableHeader.getBody()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((headerBody.get(comp)) instanceof pdl_2018.groupeSMKS1.WtUnorderedList) { pdl_2018.groupeSMKS1.WtUnorderedList titre = ((pdl_2018.groupeSMKS1.WtUnorderedList) (headerBody.get(comp))); titreHeader = getTextWtUnorderedList(titre); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8574/buggy-version/src.main.java.pdl_2018.groupeSMKS1.Wikitext.java", "BodyUseAPI": ["pdl_2018.groupeSMKS1.WtBody.get(int)"], "Fixed commit": "dc51cd342e3d752c78eee4c4ba0d10e7266c2865", "Url": "https://api.github.com/repos/SulliDai/PDL_2018-2019_GR1", "Date": "2018-12-02T10:54:54Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(objectName.getText().toString().isEmpty())) { showOtherDialog(); videoObject.setVideoName(objectName.getText().toString()); videoObjectViewModel.insert(videoObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3615/buggy-version/app.src.main.java.com.example.aksha.measureup.ObjectSaveDialog.java", "BodyUseAPI": ["android.widget.EditText.getText()", "objectName.getText().toString()", "com.example.aksha.DataBase.VideoObject.setVideoName(objectName.getText().toString())"], "Fixed commit": "792355a9d9c90d27f321dfc0b8c14455ce481f00", "Url": "https://api.github.com/repos/CS506-MeasureUp/MeasureUp", "Date": "2018-12-07T22:00:20Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.equals(timelineEvent.eventId, event.eventId)) { eventFoundInTimeline = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1468/buggy-version/matrix-sdk.src.main.java.org.matrix.androidsdk.data.timeline.TimelineJoinRoomSyncHandler.java", "BodyUseAPI": [], "Fixed commit": "82a150329e05145baf509b57cf6facdc972d3c3d", "Url": "https://api.github.com/repos/matrix-org/matrix-android-sdk", "Date": "2018-11-28T16:58:20Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.blog.njw1204.studypartner.CUtils.IsEmpty(Edit_Time.getText().toString())) { android.widget.Toast.makeText(getApplicationContext(), \"\uc2dc\uac04\uc744 \uc9c0\uc815\ud574\uc8fc\uc138\uc694.\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5762/buggy-version/app.src.main.java.me.blog.njw1204.studypartner.AddScheduleActivity.java", "BodyUseAPI": [], "Fixed commit": "9b6f237bf4e5dfd762439797184447c14d1cef82", "Url": "https://api.github.com/repos/njw1204/study-partner", "Date": "2018-11-10T03:49:32Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parent.isVisibleInHierarchy()) { ajaxUpdateEvent.getTarget().add(parent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1745/buggy-version/amp.WEB-INF.src.org.dgfoundation.amp.onepager.events.UpdateEventBehavior.java", "BodyUseAPI": ["ajaxUpdateEvent.getTarget().add(org.apache.wicket.Component)"], "Fixed commit": "a7f1ffc8d3eb8741e9b27ed3a6e76cbe186ad1b5", "Url": "https://api.github.com/repos/devgateway/amp", "Date": "2018-10-30T15:46:25Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (regionalFundingFeature.isVisibleInHierarchy()) { target.add(regionalFundingFeature); target.appendJavaScript(org.dgfoundation.amp.onepager.OnePagerUtil.getToggleChildrenJS(regionalFundingFeature)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1745/buggy-version/amp.WEB-INF.src.org.dgfoundation.amp.onepager.components.features.tables.AmpLocationFormTableFeature.java", "BodyUseAPI": ["org.apache.wicket.ajax.AjaxRequestTarget.add(org.dgfoundation.amp.onepager.components.features.sections.AmpRegionalFundingFormSectionFeature)", "org.apache.wicket.ajax.AjaxRequestTarget.appendJavaScript(org.dgfoundation.amp.onepager.OnePagerUtil.getToggleChildrenJS(regionalFundingFeature))", "org.dgfoundation.amp.onepager.OnePagerUtil.getToggleChildrenJS(org.dgfoundation.amp.onepager.components.features.sections.AmpRegionalFundingFormSectionFeature)"], "Fixed commit": "a7f1ffc8d3eb8741e9b27ed3a6e76cbe186ad1b5", "Url": "https://api.github.com/repos/devgateway/amp", "Date": "2018-10-30T15:46:25Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (webLink.isVisibleInHierarchy()) { target.add(webLink); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1745/buggy-version/amp.WEB-INF.src.org.dgfoundation.amp.onepager.components.fields.AmpNewResourceFieldPanel.java", "BodyUseAPI": ["org.apache.wicket.ajax.AjaxRequestTarget.add(org.dgfoundation.amp.onepager.components.fields.AmpTextFieldPanel<java.lang.String>)"], "Fixed commit": "a7f1ffc8d3eb8741e9b27ed3a6e76cbe186ad1b5", "Url": "https://api.github.com/repos/devgateway/amp", "Date": "2018-10-30T15:46:25Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { postToDatabase(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4930/buggy-version/app.src.main.java.teamb.cs262.calvin.edu.quest.fragments.QRCodeFragment.java", "BodyUseAPI": [], "Fixed commit": "bb20efadc06fb091a3d71a79f4f73195a3d5a647", "Url": "https://api.github.com/repos/OperationBrokenWaterfall/Quest", "Date": "2018-12-13T06:45:21Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parameterSet.containsKey(name)) parameterSet.get(name).clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1843/buggy-version/src.net.xqhs.flash.core.util.TreeParameterSet.java", "BodyUseAPI": ["net.xqhs.flash.core.util.TreeParameterSet.get(java.lang.String)", "parameterSet.get(name).clear()"], "Fixed commit": "235e90aac07b85ccb3d1676fc564d54ef5586e3c", "Url": "https://api.github.com/repos/andreiolaru-ro/FLASH-MAS", "Date": "2018-11-29T15:29:54Z"},
{"Line": "=>12610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ucar.unidata.idv.control.DataSelection.getGeoSelection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (gs == null) gs = new ucar.unidata.idv.control.GeoSelection();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6971/buggy-version/src.ucar.unidata.idv.control.DisplayControlImpl.java", "BodyUseAPI": [], "Fixed commit": "f2cd6201c52ca5e79cf1d0c5c9583935f83e7e47", "Url": "https://api.github.com/repos/Unidata/IDV", "Date": "2018-11-09T21:53:37Z"},
{"Line": "=>12607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataSelection) == null) getDataSelection();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6971/buggy-version/src.ucar.unidata.idv.control.DisplayControlImpl.java", "BodyUseAPI": [], "Fixed commit": "f2cd6201c52ca5e79cf1d0c5c9583935f83e7e47", "Url": "https://api.github.com/repos/Unidata/IDV", "Date": "2018-11-09T21:53:37Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["market.getMarketStatistics().getLatestPrice(com.agentecon.firm.Ticker)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.lang.Double.isFinite(value)) { com.agentecon.exercise9.HistoricalMarketData.HistoricalStockData data = trackedStocks.get(ticker); if (data == null) { data = new com.agentecon.exercise9.HistoricalMarketData.HistoricalStockData(); trackedStocks.put(ticker, data); } data.update(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/363/buggy-version/exercises.src.com.agentecon.exercise9.HistoricalMarketData.java", "BodyUseAPI": ["com.agentecon.exercise9.HistoricalMarketData.HistoricalStockData.update(double)"], "Fixed commit": "6338bfc833d069ed076eeaee76605d22c7cf3f91", "Url": "https://api.github.com/repos/meisser/course2018", "Date": "2018-12-04T15:31:48Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (iterator.hasNext()) java.lang.System.out.println(iterator.next()); else { iterator = list.iterator(); java.lang.System.out.println(iterator.next()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8473/buggy-version/src.com.company.Task2.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.Integer)", "java.util.Iterator<java.lang.Integer>.next()"], "Fixed commit": "0df24f30520f0482ecaaa0aa0792025aea09d1ae", "Url": "https://api.github.com/repos/HyperDenton/AlgoSem2", "Date": "2018-12-11T20:31:33Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.team7.cmput301.android.theirisproject.activity.SplashActivity.taskCount) >= 2) && ((com.team7.cmput301.android.theirisproject.activity.SplashActivity.startActivity) != null)) { finish(); if ((com.team7.cmput301.android.theirisproject.activity.SplashActivity.startActivity) == (com.team7.cmput301.android.theirisproject.activity.LoginActivity.class)) { startActivity(new android.content.Intent(this, com.team7.cmput301.android.theirisproject.activity.SplashActivity.startActivity)); }else { startUserActivity(com.team7.cmput301.android.theirisproject.activity.SplashActivity.startActivity); } com.team7.cmput301.android.theirisproject.activity.SplashActivity.startActivity = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1429/buggy-version/app.src.main.java.com.team7.cmput301.android.theirisproject.activity.SplashActivity.java", "BodyUseAPI": [], "Fixed commit": "41b3c7cb28ff3ddff2e2730ef4f6dcf0dab167cf", "Url": "https://api.github.com/repos/CMPUT301F18T07/TheIrisProject", "Date": "2018-12-03T16:56:30Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.sslEngine.isInboundDone()) { this.endOfStream = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3300/buggy-version/httpcore-nio.src.main.java.org.apache.http.nio.reactor.ssl.SSLIOSession.java", "BodyUseAPI": [], "Fixed commit": "01f3d30cfa3b1bf643a8ea5733fdd3bde8c56abd", "Url": "https://api.github.com/repos/apache/httpcomponents-core", "Date": "2018-12-07T15:23:50Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["RenderPlayerEvent.Post.getEntityPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((player.isPotionActive(Main.GROWTH)) || (player.isPotionActive(Main.SHRINKING))) { net.minecraft.client.renderer.GlStateManager.popMatrix(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2201/buggy-version/src.main.java.com.camellias.resizer.potions.handler.PotionHandler.java", "BodyUseAPI": [], "Fixed commit": "a652bff40b1f02c410c8949a9db7e76a5a50f82c", "Url": "https://api.github.com/repos/CammiePone/Resize-Potion", "Date": "2018-12-01T00:39:29Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["RenderPlayerEvent.Pre.getEntityPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((player.isPotionActive(Main.GROWTH)) || (player.isPotionActive(Main.SHRINKING))) { float scale = (player.height) / 1.8F; net.minecraft.client.renderer.GlStateManager.pushMatrix(); net.minecraft.client.renderer.GlStateManager.scale(scale, scale, scale); net.minecraft.client.renderer.GlStateManager.translate((((event.getX()) / scale) - (event.getX())), (((event.getY()) / scale) - (event.getY())), (((event.getZ()) / scale) - (event.getZ()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2201/buggy-version/src.main.java.com.camellias.resizer.potions.handler.PotionHandler.java", "BodyUseAPI": [], "Fixed commit": "a652bff40b1f02c410c8949a9db7e76a5a50f82c", "Url": "https://api.github.com/repos/CammiePone/Resize-Potion", "Date": "2018-12-01T00:39:29Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.marcinmazur.portfolio.dao.AccessCodeDao.getAccessCodeByValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (theAccessCode != null) { pl.marcinmazur.portfolio.entity.Notification theNotification = notificationUtils.createNotificationAfterFirstCodeUsage(theAccessCode); notificationDao.saveNotification(theNotification); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6274/buggy-version/src.main.java.pl.marcinmazur.portfolio.service.NotificationServiceImpl.java", "BodyUseAPI": ["pl.marcinmazur.portfolio.utils.NotificationUtils.createNotificationAfterFirstCodeUsage(pl.marcinmazur.portfolio.entity.AccessCode)"], "Fixed commit": "dc89abef146a9c691e1766d26ff38ace24bd0f31", "Url": "https://api.github.com/repos/mmazur658/Marcin-Mazur-Portfolio", "Date": "2018-12-11T15:53:55Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.animation.AnimationUtils.loadAnimation(cf.flymengo.milionaire_attempt2.splash_screen,R.anim.fadeout)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(anim.hasStarted())) || (anim.hasEnded())) { lbl.startAnimation(anim); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6576/buggy-version/app.src.main.java.cf.flymengo.milionaire_attempt2.splash_screen.java", "BodyUseAPI": ["android.widget.TextView.startAnimation(android.view.animation.Animation)"], "Fixed commit": "cdde84d33fc210e3dc5c2c4342dd9502b24a83be", "Url": "https://api.github.com/repos/Vlad-Andres/milionaire_2.0", "Date": "2018-11-26T22:15:54Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)", "java.lang.reflect.Field.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((csvLine.length) < ((column.index()) + 1)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1611/buggy-version/src.main.java.io.github.biezhi.excel.plus.reader.ReaderWithCSV.java", "BodyUseAPI": [], "Fixed commit": "a6458a2357e5e43e07d565beb77f3c001d2b466e", "Url": "https://api.github.com/repos/biezhi/excel-plus", "Date": "2018-12-19T09:40:58Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((publicationData.size()) <= 1) { authorsNames.add(exampleAuthor); com.koczy.kurek.mizera.thesisbrowser.downloader.Scraper.AGHLibraryScraper.logger.warning(((\"Couldn't find Authors for \" + title) + \" using example author\")); }else { authorsNames = new java.util.ArrayList<>(java.util.Arrays.asList(publicationData.get(1).split(\", \"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3998/buggy-version/src.main.java.com.koczy.kurek.mizera.thesisbrowser.downloader.Scraper.AGHLibraryScraper.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.String[])", "java.util.ArrayList<java.lang.String>.get(int)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "10d76a362fe6e5c25e69b7ead8cc3b77eb961d52", "Url": "https://api.github.com/repos/Lony13/thesis-browser-server", "Date": "2018-11-09T22:37:18Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (splitTime[1].endsWith(\"PM\")) { hour += 12; }else if (splitTime[1].endsWith(\"AM\")) { if (hour == 12) hour = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5677/buggy-version/app.src.main.java.com.manveerbasra.ontime.AddAlarmActivity.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "8f38edfceaa8615e4a71cc13c36717056570789b", "Url": "https://api.github.com/repos/ManveerBasra/OnTime", "Date": "2018-12-20T22:15:23Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gumtree.spoon.diff.operations.Operation.getSrcNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (srcNode instanceof spoon.reflect.declaration.CtMethod) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4054/buggy-version/src.main.java.add.features.detector.repairpatterns.MissingNullCheckDetector.java", "BodyUseAPI": [], "Fixed commit": "c91f6b4e8e1cddeb2c503d723a33fc9f0ee1046e", "Url": "https://api.github.com/repos/kth-tcs/ppd-ext", "Date": "2018-11-30T09:54:05Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tencent.angel.worker.storage.DataBlock<?>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (predRes instanceof com.tencent.angel.ml.core.graphsubmit.GraphPredictResult) { loss += lossFunc.loss(predRes.proba(), labels[i]); }else if (predRes instanceof com.tencent.angel.ml.core.graphsubmit.SoftmaxPredictResult) { loss += lossFunc.loss(((com.tencent.angel.ml.core.graphsubmit.SoftmaxPredictResult) (predRes)).trueProba(), labels[i]); }else { throw new com.tencent.angel.exception.AngelException(\"PredictResult Error!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5296/buggy-version/angel-ps.mllib.src.main.scala.com.tencent.angel.ml.core.utils.ValidationUtils.java", "BodyUseAPI": ["com.tencent.angel.ml.predict.PredictResult.proba()", "com.tencent.angel.ml.core.optimizer.loss.LossFunc.loss(predRes.proba(),double)"], "Fixed commit": "6744285c08395cfb5b39cac0270ee0a8ce5be52c", "Url": "https://api.github.com/repos/leleyu/angel", "Date": "2018-11-05T07:05:10Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((line.charAt((firstColon + 1))) == ' ') { lineNum = -2; }else { lineNum = java.lang.Integer.parseInt(line.substring((firstColon + 1), j)); lineNum -= 1; assert lineNum < countAllNL : \"unexpected lineNum\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4592/buggy-version/src.il.co.codeguru.corewars8086.gui.asm_parsers.GasListParser.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "5a6f0d15e3180c689e527eca88718500b0c4bdb6", "Url": "https://api.github.com/repos/westerndigitalcorporation/corewars-risc-v", "Date": "2018-12-21T20:58:46Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.reactome.server.analysis.core.model.resource.ResourceFactory.getResource(it.getDatabaseName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resource instanceof org.reactome.server.analysis.core.model.resource.MainResource) { org.reactome.server.analysis.core.model.resource.MainResource mr = ((org.reactome.server.analysis.core.model.resource.MainResource) (resource)); org.reactome.server.analysis.core.importer.AnalysisIdentifier ai = new org.reactome.server.analysis.core.importer.AnalysisIdentifier(it.getIdentifier()); org.reactome.server.analysis.core.model.identifier.MainIdentifier interactsWith = new org.reactome.server.analysis.core.model.identifier.MainIdentifier(mr, ai); if (entities.getNodes(interactsWith).isEmpty()) org.reactome.server.analysis.core.importer.InteractorsBuilder.logger.error((((interactsWith + \" hasn't been previously created for '\") + (species.getName())) + \"'.\")); compressedResult.add(interactsWith, it.getPathwayReactions()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8136/buggy-version/src.main.java.org.reactome.server.analysis.core.importer.InteractorsBuilder.java", "BodyUseAPI": [], "Fixed commit": "52388111bb4d376e3dcd7169ee7b960b98373794", "Url": "https://api.github.com/repos/reactome/analysis-core", "Date": "2018-12-14T15:32:39Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (command.getMethodName().equals(\"createGame\")) { command.set_methodName(\"joinGame\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7851/buggy-version/server.src.main.java.com.thePollerServer.utilities.PersistenceProvider.java", "BodyUseAPI": ["com.shared.models.Command.set_methodName(java.lang.String)"], "Fixed commit": "26ea00bb5b6fcbe3c8e2ba0a050d9d7658ca45ea", "Url": "https://api.github.com/repos/JOTworks/pollerexpress", "Date": "2018-12-12T23:04:40Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alert instanceof com.example.shashank_pc.trial.classes.Lookout) { createdBy = ((com.example.shashank_pc.trial.classes.Lookout) (alert)).getCreatedBy(); }else if (alert instanceof com.example.shashank_pc.trial.classes.Task) { createdBy = ((com.example.shashank_pc.trial.classes.Task) (alert)).getCreatedBy().getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3907/buggy-version/app.src.main.java.com.example.shashank_pc.trial.Helper.AlertHelper.java", "BodyUseAPI": [], "Fixed commit": "d9f962cf55b23eb5893028df2cec66c410c47642", "Url": "https://api.github.com/repos/ShashankAnantharam/HelloWorldTrial", "Date": "2018-11-29T19:07:47Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(profile.getName()))) { ((android.widget.TextView) (findViewById(R.id.name))).setText(profile.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5488/buggy-version/app.src.main.java.live.noxbox.menu.profile.ProfileActivity.java", "BodyUseAPI": ["live.noxbox.model.Profile.getName()", "((android.widget.TextView) (findViewById(R.id.name))).setText(profile.getName())"], "Fixed commit": "a70099592ebf8b6052bf2c868b514f1aabbb9772", "Url": "https://api.github.com/repos/Lipnevich/noxbox", "Date": "2018-12-05T23:57:17Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.twoguysonepanda.itfest2018.repository.UserRepository.findByEmail(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((user.getReservation()) != null) { return user.getReservation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7238/buggy-version/src.main.java.com.twoguysonepanda.itfest2018.service.ReservationService.java", "BodyUseAPI": ["com.twoguysonepanda.itfest2018.entities.User.getReservation()"], "Fixed commit": "063a48c7fa609d8369565ccb743b95daa7b3832e", "Url": "https://api.github.com/repos/ParaschivGeorge/itfest2018", "Date": "2018-11-10T17:34:03Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.huaweicloud.dis.core.util.StringUtils.isNullOrEmpty(partition.getSequenceNumberRange()))) { java.lang.String last = partition.getSequenceNumberRange().split(\":\")[1].trim(); if (!(\"-1\".equals(last))) { total += java.lang.Long.valueOf(last.substring(0, ((last.length()) - 1))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5064/buggy-version/src.main.java.com.bigdata.dis.sdk.demo.manager.DescribeStream.java", "BodyUseAPI": ["com.huaweicloud.dis.iface.stream.response.PartitionResult.getSequenceNumberRange()", "partition.getSequenceNumberRange().split(\":\")[1].trim()", "partition.getSequenceNumberRange().split(java.lang.String)"], "Fixed commit": "679265cd2ad54e49113ad3faaf24252d6abc8274", "Url": "https://api.github.com/repos/ihaolau/dis-perf", "Date": "2018-12-15T07:39:54Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((zooKeeperHelper) != null) { return zooKeeperHelper.isDeregisteredWithZooKeeper(); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7444/buggy-version/service.src.java.org.apache.hive.service.server.HiveServer2.java", "BodyUseAPI": [], "Fixed commit": "3ba92880d0989c49cc860e3a871da527029bc0c4", "Url": "https://api.github.com/repos/ashutosh-bapat/hive", "Date": "2018-11-16T16:17:32Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getButton()) != 1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9310/buggy-version/src.main.java.client.gui.swing.ChadGameBoard.java", "BodyUseAPI": [], "Fixed commit": "8dbc37b063cce933d4373e6d12a5f90cf61e8967", "Url": "https://api.github.com/repos/CSU-CS414-WareWolves/cs414-f18-001-WareWolves", "Date": "2018-11-29T16:50:57Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getButton()) != 1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9310/buggy-version/src.main.java.client.gui.swing.ChadGameBoard.java", "BodyUseAPI": [], "Fixed commit": "8dbc37b063cce933d4373e6d12a5f90cf61e8967", "Url": "https://api.github.com/repos/CSU-CS414-WareWolves/cs414-f18-001-WareWolves", "Date": "2018-11-29T16:50:57Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (word.startsWith(\"https://\")) word = word.substring(8); else if (word.startsWith(\"http://\")) word = word.substring(7); else word = word.substring(4);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4388/buggy-version/src.Model.Parse.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.substring(int)"], "Fixed commit": "2e37d0bfe6a89d8376cca8be28a3ac11b46e8d7b", "Url": "https://api.github.com/repos/yleedon/searchEngine", "Date": "2018-11-04T15:16:10Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bound <= 0) { throw new java.lang.IllegalArgumentException((((((\"start value \" + start) + \" and end value \") + end) + \" have invalid bound of \") + bound)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7523/buggy-version/src.main.java.org.marpunk.infra.SystemRandom.java", "BodyUseAPI": [], "Fixed commit": "cd2b4742a7bcab00907b4cee74ffd24aaa46519b", "Url": "https://api.github.com/repos/cafetux/markov-chain", "Date": "2018-11-02T22:17:00Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(list.isEmpty())) { mProvider = new com.google.maps.android.heatmaps.HeatmapTileProvider.Builder().data(list).build(); mOverlay = mMap.addTileOverlay(new com.google.android.gms.maps.model.TileOverlayOptions().tileProvider(mProvider)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4162/buggy-version/app.src.main.java.com.felinewar.mymonies.ExpensesHeatMap.java", "BodyUseAPI": ["com.google.maps.android.heatmaps.HeatmapTileProvider.Builder.data(java.util.List<com.google.android.gms.maps.model.LatLng>)", "new com.google.maps.android.heatmaps.HeatmapTileProvider.Builder().data(list).build()"], "Fixed commit": "8766aa6d040a22656d09ce3bfae8d64b3efb04aa", "Url": "https://api.github.com/repos/roboticapostle/MyMonies", "Date": "2018-12-08T03:36:45Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Collection.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((it.hasNext()) && (!((it.next()) instanceof org.structr.core.GraphObject))) { isPrimitiveArray = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6648/buggy-version/structr-modules.structr-api-builder-module.src.main.java.org.structr.flow.servlet.FlowServlet.java", "BodyUseAPI": [], "Fixed commit": "0b171909496c822bff35fa9b4ddea7410610517d", "Url": "https://api.github.com/repos/ckramp/structr", "Date": "2018-11-01T12:24:58Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((meal_type) == (DINNER)) { url = new java.net.URL((((\"http://\" + (ipserver)) + \"/api/resources/recipes/getDinnerDish/?username=\") + (settings.getString(\"UserMail\", \"\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2597/buggy-version/app.src.main.java.com.example.mrg20.menuing_android.activities.MealDetails.java", "BodyUseAPI": [], "Fixed commit": "713dca62be3f821a50cb73e7739b42605d74dd88", "Url": "https://api.github.com/repos/Menuing/menuing-android", "Date": "2018-12-28T23:40:16Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vega.automation.repository.TaskStepRepository.findAllTestStepsAssociatedWithTask(taskMaster.getTaskid())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.collections4.CollectionUtils.isNotEmpty(list)) { for (com.vega.automation.entity.TaskStep step : list) { if ((null != step) && (null != (step.getObjectid()))) { java.util.List<com.vega.automation.entity.ObjectHierarchy> objList = objectHierarchyService.getObjectHierarchyById(step.getObjectid()); if ((org.apache.commons.collections4.CollectionUtils.isNotEmpty(objList)) && (null != (objList.get(0)))) { step.setObjectname(objList.get(0).getObjectname()); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1483/buggy-version/src.main.java.com.vega.automation.service.impl.TaskStepServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "1121f492c78d4b6d7c64ff653ed16d27dad09673", "Url": "https://api.github.com/repos/anandCG/vegaAutomation", "Date": "2018-11-16T08:12:42Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (commando.getCommandoType().equals(\"UNLOCK\")) { deTile.setDisable(false); }else { java.lang.System.out.println(\"fout in verwerkCommando's: SpelViewGui.java\"); java.lang.System.out.println(\"fout in verwerking, instructie was niet FLIP of UNFLIP\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2107/buggy-version/Client.src.client.Controllers.SpelViewGui.java", "BodyUseAPI": [], "Fixed commit": "f5c18c658796d651242b66f0fa71e5c4b7c0edcc", "Url": "https://api.github.com/repos/aaronhallaert/DS_Project", "Date": "2018-11-12T14:20:23Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (profileImage.equals(\"default\")) { profileImage.setImageResource(R.mipmap.ic_launcher_round); }else { com.bumptech.glide.Glide.with(this).load((((neolabs.kok.retrofit.RetrofitExService.BASE_URL) + \"images/\") + profilelink)).apply(com.bumptech.glide.request.RequestOptions.circleCropTransform()).into(profileImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1131/buggy-version/app.src.main.java.neolabs.kok.activity.ProfileActivity.java", "BodyUseAPI": ["com.bumptech.glide.Glide.with(this).load((((neolabs.kok.retrofit.RetrofitExService.BASE_URL) + \"images/\") + profilelink)).apply(com.bumptech.glide.request.RequestOptions.circleCropTransform()).into(android.widget.ImageView)", "android.widget.ImageView.setImageResource(R.mipmap.ic_launcher_round)"], "Fixed commit": "c0439721d18c50199c9d062ac51f5c7849e16ec8", "Url": "https://api.github.com/repos/TaeUkKim/KokAndroid-New", "Date": "2018-12-24T11:04:58Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (indexSuper == (creationOrder.size())) { creationOrder.add(dependents[i]); }else { creationOrder.add((indexSuper + 1), dependents[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8526/buggy-version/common.src.main.java.com.espertech.esper.common.internal.event.eventtyperepo.EventTypeRepositoryUtil.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(int,java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "432e4e42cd4e3c29144a1d82395451cd5b84bd76", "Url": "https://api.github.com/repos/espertechinc/esper", "Date": "2018-11-12T21:08:38Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_G)) { this.map = mg.getRandomMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/1709/buggy-version/Demo1.src.demo1.GameLogic.java", "BodyUseAPI": [], "Fixed commit": "324b1ae05f6cfc0af465b1309bebfb4a5672979e", "Url": "https://api.github.com/repos/Crys-K/PrivateSE", "Date": "2018-12-10T09:53:32Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liskovsoft.smartyoutubetv.flavors.exoplayer.player.PlayerCoreFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (context != null) { new android.os.Handler(context.getMainLooper()).post(new java.lang.Runnable() { @java.lang.Override public void run() { updateButtonVisibilities(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6976/buggy-version/exoplayeractivity.src.main.java.com.liskovsoft.smartyoutubetv.flavors.exoplayer.player.PlayerCoreFragment.java", "BodyUseAPI": ["android.content.Context.getMainLooper()", "android.os.Handler.post(java.lang.Runnable)"], "Fixed commit": "fced33ffa242a19ae3e5bbbc1126dec71a23feb5", "Url": "https://api.github.com/repos/yuliskov/SmartYouTubeTV", "Date": "2018-12-22T17:42:48Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.exoplayer2.trackselection.DefaultTrackSelector.getCurrentMappedTrackInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (info == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6976/buggy-version/exoplayeractivity.src.main.java.com.liskovsoft.smartyoutubetv.flavors.exoplayer.player.addons.PlayerStateManager2.java", "BodyUseAPI": [], "Fixed commit": "fced33ffa242a19ae3e5bbbc1126dec71a23feb5", "Url": "https://api.github.com/repos/yuliskov/SmartYouTubeTV", "Date": "2018-12-22T17:42:48Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (authentication.getAuthorities().contains(net.alexhyisen.foobar.security.Guard.ADMIN_AUTHORITY)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5597/buggy-version/src.main.java.net.alexhyisen.foobar.security.Guard.java", "BodyUseAPI": [], "Fixed commit": "104c69276909f642941b3706c769c0f5e02bdcd4", "Url": "https://api.github.com/repos/HYisen/foobar", "Date": "2018-12-25T16:14:56Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (pairOccurrences == null) { return 0; }else { return pairOccurrences; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2246/buggy-version/src.main.java.nl.esciencecenter.wordembedding.data.WordPairs.java", "BodyUseAPI": [], "Fixed commit": "791d07dd5eadec920aa4eaa4103ecf7e88d86ea7", "Url": "https://api.github.com/repos/ManyCore-NLeSC/WordEmbedding-cashmere", "Date": "2018-11-06T09:46:46Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (formVariables != null) { if ((variables) == null) { variables = new java.util.HashMap<>(); } variables.putAll(formVariables); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3495/buggy-version/modules.flowable-engine.src.main.java.org.flowable.engine.impl.cmd.StartProcessInstanceCmd.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.putAll(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "71e91ea04083dd71feaacbb3ac161930c76c1409", "Url": "https://api.github.com/repos/flowable/flowable-engine", "Date": "2018-12-21T11:03:52Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextPane.getDocument()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((background == (java.awt.Color.darkGray)) && ((doc.mode) == (SyntaxAwareDocument.MODE.dark))) || ((background == (java.awt.Color.white)) && ((doc.mode) == (SyntaxAwareDocument.MODE.bright)))) { }else { doc.switchMode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7514/buggy-version/src.main.java.ui.TextEditorUI.java", "BodyUseAPI": ["highlight.SyntaxAwareDocument.switchMode()"], "Fixed commit": "1c10e2733de73f363c36207bad1e3bb668acc93e", "Url": "https://api.github.com/repos/PauloJaime/ser515asu", "Date": "2018-11-19T21:29:26Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resourcesToTransform.isEmpty()) { org.endeavourhealth.transform.pcr.FhirToPcrCsvTransformer.LOG.info(((\"resource type \" + (resourceType.name())) + \" has no records after trimming\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/122/buggy-version/src.main.java.org.endeavourhealth.transform.pcr.FhirToPcrCsvTransformer.java", "BodyUseAPI": [], "Fixed commit": "636dbdccdc436faf8786f0b65e011e747097b663", "Url": "https://api.github.com/repos/endeavourhealth/Transforms", "Date": "2018-11-27T16:00:30Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resourceType.name().equalsIgnoreCase(\"patient\")) { org.endeavourhealth.transform.pcr.FhirToPcrCsvTransformer.LOG.info((\"Processing patients count after trim : \" + (resources.size()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/122/buggy-version/src.main.java.org.endeavourhealth.transform.pcr.FhirToPcrCsvTransformer.java", "BodyUseAPI": [], "Fixed commit": "636dbdccdc436faf8786f0b65e011e747097b663", "Url": "https://api.github.com/repos/endeavourhealth/Transforms", "Date": "2018-11-27T16:00:30Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smartplanner.OptimalityCalculator.extractEntriesForSpecifiedDay(java.util.ArrayList<com.smartplanner.TimetableEntry>,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((specifiedDayTimetable.size()) == 0) return calculateMinutesBetweenTwoTimePoints(optimizedActivity.getOpensAt(), optimizedActivity.getClosesAt());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5614/buggy-version/Back-end.src.com.smartplanner.OptimalityCalculator.java", "BodyUseAPI": [], "Fixed commit": "3d3a7492d071e8a20a620b2d1fb5e482a4069f2a", "Url": "https://api.github.com/repos/kucharzyk-sebastian/SmartPlanner", "Date": "2018-12-06T15:21:11Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (actionName.equals(\"Clear Worklists and Checklists\")) { removeOldWorklistsChecklists(); }else if (actionName.equals(\"Fix Duplicate PDQ Mapping Attributes\")) { fixDuplicatePDQMappingAttributes(); }else { throw new java.lang.Exception(\"Valid Action Name not specified.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5716/buggy-version/jpa-services.src.main.java.com.wci.umls.server.jpa.algo.maint.AdHocAlgorithm.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "a51841f3f1409693eccc9bcf97c300a21b75f450", "Url": "https://api.github.com/repos/WestCoastInformatics/UMLS-Terminology-Server", "Date": "2018-11-29T22:20:53Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nameFilter.isEmpty()) { throw new com.konovalov.hello.exceptions.BadRequestException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/7227/buggy-version/src.main.java.com.konovalov.hello.controller.ContactsController.java", "BodyUseAPI": [], "Fixed commit": "0614f1311c23941d09aecf96a112e246e4d53f4b", "Url": "https://api.github.com/repos/tohak/hello", "Date": "2018-12-06T13:16:15Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(namePredictions.contains(itemAttributes[0]))) { myDb.addNamePrediction(itemAttributes[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9887/buggy-version/app.src.main.java.smg.shoppinglistapp.EditItemActivity.java", "BodyUseAPI": ["smg.databasehelpers.DatabaseHelper.addNamePrediction(java.lang.String)"], "Fixed commit": "a19b2cc20780ca92831776f0396107e494c214b5", "Url": "https://api.github.com/repos/XgleadX/ShoppingListAndroid", "Date": "2018-12-16T18:38:21Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!val) { android.widget.Toast.makeText(this, \"Couldn't delete patient\", Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(this, \"Success!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/4787/buggy-version/SymptoLoggerApp.app.src.main.java.com.example.symptologger.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2da8910b0211e138c24ba787702e1e5e97bf95ad", "Url": "https://api.github.com/repos/CMPUT301F18T02/SymptoLogger", "Date": "2018-12-01T18:21:56Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.ImmutableMap<java.lang.Object, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (name != null) { embed.addField(name, entry.getValue(), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3549/buggy-version/src.main.java.io.github.jroy.happybot.commands.RoleInfoCommand.java", "BodyUseAPI": ["net.dv8tion.jda.core.EmbedBuilder.addField(java.lang.String,java.lang.String,boolean)"], "Fixed commit": "d3cdb233c83251fa9ff89704064de2d9e4ba1fb3", "Url": "https://api.github.com/repos/JRoy/happybot", "Date": "2018-12-01T20:04:46Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((com.networknt.consul.client.ConsulClientImpl.config.getWait()) != null) && ((com.networknt.consul.client.ConsulClientImpl.config.getWait().length()) > 2)) wait = com.networknt.consul.client.ConsulClientImpl.config.getWait();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/892/buggy-version/consul.src.main.java.com.networknt.consul.client.ConsulClientImpl.java", "BodyUseAPI": [], "Fixed commit": "ee1f70f186860e1a589dab9da27712e7f68af003", "Url": "https://api.github.com/repos/networknt/light-4j", "Date": "2018-12-20T19:33:21Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mainComponent) != null) { mainComponent.setState(state); mainComponent.init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6607/buggy-version/src.nl.knokko.gui.window.GuiWindow.java", "BodyUseAPI": [], "Fixed commit": "c7cc8de7460e0d4fcf9a7e08a5362e5752d13334", "Url": "https://api.github.com/repos/knokko/Gui", "Date": "2018-11-25T18:51:35Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonObject.getAsJsonArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (jsonArray != null) { for (com.google.gson.JsonElement jsonElement : jsonArray) { errors.add(context.deserialize(jsonElement, com.yakindu.solidity.compiler.result.CompileError.class)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/9380/buggy-version/plugins.com.yakindu.solidity.compiler.src.com.yakindu.solidity.compiler.builder.processor.OutputParser.java", "BodyUseAPI": [], "Fixed commit": "72bc60c70ed2dea1d62a92108bbecc22d47eadbb", "Url": "https://api.github.com/repos/Yakindu/solidity-ide", "Date": "2018-12-20T14:28:29Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (marketPlace != null) { stringBuilder.append(\"\\nMarketPlace=\").append(marketPlace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6294/buggy-version/frontend.server.src.main.java.com.amazonaws.ml.mms.util.logging.QLogLayout.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "27e2df937181cac0d52c3e04249e1bf50ac599d9", "Url": "https://api.github.com/repos/vrakesh/mxnet-model-server", "Date": "2018-11-13T18:40:05Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getNewDate()) == null) { calendar.setSelectedDate(java.time.LocalDate.of(track.StartTime.getYear(), track.StartTime.getMonthOfYear(), track.StartTime.getDayOfMonth())); }else if (!(newSelectedDate.equals(event.getNewDate()))) { newSelectedDate = event.getNewDate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/984/buggy-version/src.course_generator.dialogs.frmTrackSettings.java", "BodyUseAPI": ["com.github.lgooddatepicker.zinternaltools.CalendarSelectionEvent.getNewDate()", "com.github.lgooddatepicker.zinternaltools.CalendarSelectionEvent.getNewDate()", "java.time.LocalDate.equals(event.getNewDate())"], "Fixed commit": "64f76fec1d26ce6c3a3d7f9af8feb3d7f987eb62", "Url": "https://api.github.com/repos/FJBDev/Course_Generator", "Date": "2018-12-10T14:37:00Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showConfirmDialog(<nulltype>,java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dialogResult == (javax.swing.JOptionPane.YES_OPTION)) { java.lang.System.out.println(\"delete Student\"); frame.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/6647/buggy-version/Albert_Sze.Grade_A.GradeA.src.gui.StudentProfile.java", "BodyUseAPI": [], "Fixed commit": "711e3eaae87ef0ba2977472d782d20e56daec66d", "Url": "https://api.github.com/repos/ivorine85/gradeA", "Date": "2018-11-29T16:18:13Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.eclipse.leshan.server.registration.Registration>.put(registration.getEndpoint(),org.eclipse.leshan.server.registration.Registration)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(registration.getSocketAddress().equals(registrationRemoved.getSocketAddress()))) { removeFromMap(regsByAddr, registrationRemoved.getSocketAddress(), registrationRemoved); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3539/buggy-version/leshan-server-cf.src.main.java.org.eclipse.leshan.server.californium.impl.InMemoryRegistrationStore.java", "BodyUseAPI": ["org.eclipse.leshan.server.californium.impl.InMemoryRegistrationStore.removeFromMap(java.util.Map<java.net.InetSocketAddress, org.eclipse.leshan.server.registration.Registration>,registrationRemoved.getSocketAddress(),org.eclipse.leshan.server.registration.Registration)", "org.eclipse.leshan.server.registration.Registration.getSocketAddress()"], "Fixed commit": "67c4c48e1695608b6f09163c1c571a927af8ce7f", "Url": "https://api.github.com/repos/KL3Answer/leshan_gt", "Date": "2018-12-21T12:20:58Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.leshan.server.registration.RegistrationUpdate.update(org.eclipse.leshan.server.registration.Registration)", "org.eclipse.leshan.server.californium.impl.InMemoryRegistrationStore.getRegistration(update.getRegistrationId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(registration.getSocketAddress().equals(updatedRegistration.getSocketAddress()))) { removeFromMap(regsByAddr, registration.getSocketAddress(), registration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3539/buggy-version/leshan-server-cf.src.main.java.org.eclipse.leshan.server.californium.impl.InMemoryRegistrationStore.java", "BodyUseAPI": ["org.eclipse.leshan.server.californium.impl.InMemoryRegistrationStore.removeFromMap(java.util.Map<java.net.InetSocketAddress, org.eclipse.leshan.server.registration.Registration>,registration.getSocketAddress(),org.eclipse.leshan.server.registration.Registration)", "org.eclipse.leshan.server.registration.Registration.getSocketAddress()"], "Fixed commit": "67c4c48e1695608b6f09163c1c571a927af8ce7f", "Url": "https://api.github.com/repos/KL3Answer/leshan_gt", "Date": "2018-12-21T12:20:58Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.eclipse.leshan.server.registration.Registration>.put(registration.getEndpoint(),org.eclipse.leshan.server.registration.Registration)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(registration.getId().equals(registrationRemoved.getId()))) { removeFromMap(regsByRegId, registrationRemoved.getId(), registrationRemoved); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3539/buggy-version/leshan-server-cf.src.main.java.org.eclipse.leshan.server.californium.impl.InMemoryRegistrationStore.java", "BodyUseAPI": ["org.eclipse.leshan.server.californium.impl.InMemoryRegistrationStore.removeFromMap(java.util.Map<java.lang.String, org.eclipse.leshan.server.registration.Registration>,registrationRemoved.getId(),org.eclipse.leshan.server.registration.Registration)", "org.eclipse.leshan.server.registration.Registration.getId()"], "Fixed commit": "67c4c48e1695608b6f09163c1c571a927af8ce7f", "Url": "https://api.github.com/repos/KL3Answer/leshan_gt", "Date": "2018-12-21T12:20:58Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.edot.models.LinearViewModel.renderChildMap(java.util.HashMap<java.lang.String, java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (view != null) { linearLayout.addView(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/8612/buggy-version/app.src.main.java.com.edot.models.LinearViewModel.java", "BodyUseAPI": ["android.widget.LinearLayout.addView(android.view.View)"], "Fixed commit": "aaccb5bc6a10e39a4e6b0234d33009af175e817d", "Url": "https://api.github.com/repos/RajaGopalPalaraman/FRAMEWORK", "Date": "2018-12-29T17:29:26Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.taggedWith(XCSG.ControlFlowSwitchCondition)) { edu.iastate.structured.core.Structured.map_subgraphs.put(node, edu.iastate.structured.core.Structured.getSwitchBlock(cfg, node)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/5492/buggy-version/edu.iastate.structured.src.edu.iastate.structured.core.Structured.java", "BodyUseAPI": ["java.util.Map<com.ensoftcorp.atlas.core.db.graph.Node, java.util.List<com.ensoftcorp.atlas.core.db.set.AtlasSet<com.ensoftcorp.atlas.core.db.graph.Node>>>.put(com.ensoftcorp.atlas.core.db.graph.Node,java.util.List<com.ensoftcorp.atlas.core.db.set.AtlasSet<com.ensoftcorp.atlas.core.db.graph.Node>>)", "edu.iastate.structured.core.Structured.getSwitchBlock(com.ensoftcorp.atlas.core.db.graph.Graph,com.ensoftcorp.atlas.core.db.graph.Node)"], "Fixed commit": "8bd6899b1e09f32ff9c2015532e2ca323d81a78f", "Url": "https://api.github.com/repos/lezhangisu/structured-program-toolbox", "Date": "2018-12-28T01:33:20Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.block.BlockBreakEvent.getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((block.getBlockData()) instanceof org.bukkit.block.data.Waterlogged) && (((org.bukkit.block.data.Waterlogged) (block.getBlockData())).isWaterlogged())) { org.bukkit.Location blockLoc = block.getLocation(); org.bukkit.Bukkit.getScheduler().runTaskLater(SafeBuckets.PLUGIN, () -> { org.bukkit.block.Block blockNextTick = blockLoc.getWorld().getBlockAt(blockLoc); if ((blockNextTick.getType()) == Material.WATER) { nu.nerd.SafeBuckets.SafeBuckets.setSafe(blockNextTick, true); } }, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2659/buggy-version/src.nu.nerd.SafeBuckets.SafeBucketsListener.java", "BodyUseAPI": ["org.bukkit.block.Block.getLocation()"], "Fixed commit": "79f7883b6b9d23d8d52c9291b29de8ecceaf4606", "Url": "https://api.github.com/repos/NerdNu/SafeBuckets", "Date": "2018-12-26T03:31:34Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Block.getRelative(event.getBlockFace())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((relativeBlock.getType()) == (org.bukkit.Material.SIGN)) || ((relativeBlock.getType()) == (org.bukkit.Material.WALL_SIGN))) { nu.nerd.SafeBuckets.SafeBuckets.setSafe(relativeBlock, true); }else if ((relativeBlock.getType()) == (org.bukkit.Material.AIR)) { nu.nerd.SafeBuckets.SafeBuckets.setSafe(relativeBlock, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/2659/buggy-version/src.nu.nerd.SafeBuckets.SafeBucketsListener.java", "BodyUseAPI": ["org.bukkit.block.Block.getType()", "nu.nerd.SafeBuckets.SafeBuckets.setSafe(org.bukkit.block.Block,boolean)", "nu.nerd.SafeBuckets.SafeBuckets.setSafe(org.bukkit.block.Block,boolean)"], "Fixed commit": "79f7883b6b9d23d8d52c9291b29de8ecceaf4606", "Url": "https://api.github.com/repos/NerdNu/SafeBuckets", "Date": "2018-12-26T03:31:34Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nom.length()) < max_nom) { max_nom = nom.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/802/buggy-version/src.main.java.geco.LoginGenerator.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "b0787ebbf835347022c4f25147aa5d17f4770326", "Url": "https://api.github.com/repos/xamey/login-generator", "Date": "2018-11-22T14:29:30Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ioResult instanceof com.orientechnologies.orient.core.sql.executor.OResult) { com.orientechnologies.orient.core.sql.executor.OResult res = ((com.orientechnologies.orient.core.sql.executor.OResult) (ioResult)); return res.getPropertyNames(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V173/3222/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.method.misc.OSQLMethodKeys.java", "BodyUseAPI": [], "Fixed commit": "ea1c3dd2a1385c6a311b779da39fd8ed4a4de849", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2018-12-21T14:14:25Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.tags.size()) == 0) { return tags; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2282/buggy-version/app.src.main.java.com.amebas.ref_u_store.Model.Document.java", "BodyUseAPI": [], "Fixed commit": "91407ef3c6686acb7564cc269aa41e4302d79847", "Url": "https://api.github.com/repos/BranSeal/HealthPort", "Date": "2018-11-09T21:12:52Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MessageType.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (MessageType.ROOM.equals(messageType)) { customMessage.setRoom(split[1]); customMessage.setNickname(split[2]); }else { customMessage.setNickname(split[1]); if ((split.length) >= 3) { customMessage.setMessageBody(MessageParser.getAllFrom(split, 2)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4625/buggy-version/src.MessageParser.java", "BodyUseAPI": [], "Fixed commit": "3cbd005a3f5f115f1d92416be9adf5d391a13c75", "Url": "https://api.github.com/repos/ancalentari/ps", "Date": "2018-12-09T10:30:05Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temporaryCounter == 0) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7630/buggy-version/src.main.java.Chapter_05_Bit_Manipulation.NextNumber.java", "BodyUseAPI": [], "Fixed commit": "a5a5e2de1ae3d7ae0f908e65af2826b5084b2e15", "Url": "https://api.github.com/repos/nemethakos/CrackingTheCodingInterview", "Date": "2018-11-21T21:34:42Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temporaryCounter == 0) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7630/buggy-version/src.main.java.Chapter_05_Bit_Manipulation.NextNumber.java", "BodyUseAPI": [], "Fixed commit": "a5a5e2de1ae3d7ae0f908e65af2826b5084b2e15", "Url": "https://api.github.com/repos/nemethakos/CrackingTheCodingInterview", "Date": "2018-11-21T21:34:42Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((action.getUpdatedDescription()) == null) || (action.getUpdatedDescription().isEmpty())) { throw new com.perforce.p4java.exception.P4JavaException(\"Change description missing. You must enter one.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/318/buggy-version/idea-p4server.impl.src.main.java.net.groboclown.p4.server.impl.connection.operations.SubmitChangelist.java", "BodyUseAPI": [], "Fixed commit": "9cc99290b03f904dd1b5270b9c549e928aea1c63", "Url": "https://api.github.com/repos/groboclown/p4ic4idea", "Date": "2018-11-29T02:10:57Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHost) != null) { mHostnameView.setText(mHost); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1281/buggy-version/app.src.main.java.com.obfuscation.ttr_phase1b.activity.LobbyFragment.java", "BodyUseAPI": [], "Fixed commit": "f558b89cce428c6d18703e51301aede9d77f331c", "Url": "https://api.github.com/repos/SponJ2000/TTR_Phase1b", "Date": "2018-11-30T22:06:54Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (args[0].equals(\"author\")) { java.lang.System.out.println(args[0]); java.lang.System.out.println(Quote.searchAuthor(quotes, args[1])); }else if (args[0].equals(\"contains\")) { java.lang.System.out.println(Quote.searchContains(quotes, args[1])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6504/buggy-version/src.main.java.App.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "Quote.searchAuthor(Quote[],java.lang.String)", "Quote.searchContains(Quote[],java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(Quote.searchAuthor(quotes, args[1]))", "java.io.PrintStream.println(Quote.searchContains(quotes, args[1]))"], "Fixed commit": "c5f125cbafe1a62d8aec49dfd89c068e8d9d35ab", "Url": "https://api.github.com/repos/JessLovell/java-quotes", "Date": "2018-12-06T22:12:24Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (oldConfigFile.exists()) { boolean result = oldConfigFile.renameTo(newConfigFile); if (!result) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2630/buggy-version/modules.application.src.main.java.com.sldeditor.common.property.PropertyFileFolder.java", "BodyUseAPI": ["java.io.File.renameTo(java.io.File)"], "Fixed commit": "c08fb772dcdb3a875926f07f76510f9030132055", "Url": "https://api.github.com/repos/robward-scisys/sldeditor", "Date": "2018-12-06T17:57:33Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((total) != null) { if ((pageNum) > (total)) { pageNum = (total) - 1; }else if ((pageNum) > (pageCount)) { pageNum = pageCount; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9796/buggy-version/src.main.java.com.flowingsun.common.utils.PageQueryBean.java", "BodyUseAPI": [], "Fixed commit": "98db560a2f311324db378d6d73aa6fc937eb209e", "Url": "https://api.github.com/repos/Flowingsun007/LyonBlog", "Date": "2018-11-03T06:19:16Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isAngelShieldActive) == false) { getHealth().setInvulnerable(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6420/buggy-version/core.src.com.gameoff.game.objects.Player.java", "BodyUseAPI": [], "Fixed commit": "89391d47eaa82fb01b34f9e0165e2ce908ddb2bb", "Url": "https://api.github.com/repos/kyperbelt/GameOff2018", "Date": "2018-12-01T11:31:25Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ej.getEjer()) == null) { ejer = \"Ingen ejer endnu\"; }else { ejer = ej.getEjer().getNavn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8782/buggy-version/src.main.java.BaundaryView.TUI.TUI.java", "BodyUseAPI": ["BaundaryView.TUI.Ejendom.getEjer()", "ej.getEjer().getNavn()"], "Fixed commit": "83d5c0382e1b5e2f014c2f33f5964cbb040547ab", "Url": "https://api.github.com/repos/claeslindhardt/Gruppe31CDIOMatador", "Date": "2018-11-19T12:52:41Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edu.uga.cs.cs4060.stocksimulator.User.UserAccount.portflio.holdings.size()) == 0) { listener.onTaskCompleted(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2570/buggy-version/app.src.main.java.edu.uga.cs.cs4060.stocksimulator.User.UserAccount.java", "BodyUseAPI": [], "Fixed commit": "789292694c36b012f0a280c9728d4beb4c20e6d6", "Url": "https://api.github.com/repos/olveryu/android-app-stock-simulator", "Date": "2018-12-03T16:58:12Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(application.AssistantController.message.equals(\"\"))) { java.lang.String command = application.Command.commandTerm(application.AssistantController.message); tfInput.setText(command); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3200/buggy-version/src.application.AssistantController.java", "BodyUseAPI": ["application.Command.commandTerm(java.lang.String)"], "Fixed commit": "d82d5fa7de47e3d1a344c570dfe5fc8934f2e563", "Url": "https://api.github.com/repos/Telkh/WITAssistant", "Date": "2018-12-07T00:53:51Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 29) stringBuilder.append('1'); else if (i == 36) stringBuilder.append('1'); else if (i == 37) stringBuilder.append('0'); else stringBuilder.append(\" \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5212/buggy-version/src.main.java.scorekeep.Rolit.java", "BodyUseAPI": [], "Fixed commit": "f879a7a134af3a17cdd0b199cf958e6d24678648", "Url": "https://api.github.com/repos/AlmazSamatov/eb-java-scorekeep", "Date": "2018-11-05T20:05:02Z"},
{"Line": "=>781", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.String.valueOf(mOldDataTag).contains((\"\" + (com.scorg.dms.util.DMSConstants.TASK_RAISE_REQUEST_CONFIDENTIAL)))) { com.scorg.dms.model.dms_models.requestmodel.archive.UnlockRequestResponseBaseModel unlockRequestResponseBaseMode = ((com.scorg.dms.model.dms_models.requestmodel.archive.UnlockRequestResponseBaseModel) (customResponse)); if (unlockRequestResponseBaseMode.getCommon().getStatusCode().equals(DMSConstants.SUCCESS)) { java.lang.String msg = unlockRequestResponseBaseMode.getCommon().getStatusMessage(); com.scorg.dms.util.CommonMethods.showErrorDialog(msg, mContext, false, new com.scorg.dms.interfaces.ErrorDialogCallback() { @java.lang.Override public void ok() { } @java.lang.Override public void retry() { } }); } if (((dialogRaiseRequest) != null) && (dialogRaiseRequest.isShowing())) dialogRaiseRequest.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6003/buggy-version/app.src.main.java.com.scorg.dms.ui.activities.dms_patient_list.FileTypeViewerActivity.java", "BodyUseAPI": [], "Fixed commit": "07d0d4c35e266fd94eee6f5082505a86a7f696e2", "Url": "https://api.github.com/repos/sandeepbahalkar123/DMS_EMRD_repo", "Date": "2018-12-06T20:32:05Z"},
{"Line": "=>1440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mPreviousClickedTreeElement.containsKey(java.lang.String.valueOf(clickedLstDocTypeElement.getRecordDetailId()))) { com.scorg.dms.util.CommonMethods.showErrorDialog(\"Can not compare same PDFs\", this, false, new com.scorg.dms.interfaces.ErrorDialogCallback() { @java.lang.Override public void ok() { } @java.lang.Override public void retry() { } }); }else { mPreviousClickedTreeElement.put(java.lang.String.valueOf(clickedLstDocTypeElement.getRecordDetailId()), clickedLstDocTypeElement.getTypeName().trim()); mGetEncryptedPDFRequestModelList.add(getEncryptedPDFRequestModel); java.util.ArrayList<java.lang.String> tempClickedElements = new java.util.ArrayList<>(mPreviousClickedTreeElement.values()); expandCompareDialog(); switch (mGetEncryptedPDFRequestModelList.size()) { case 1 : mFileOnePatientID.setText(((getString(R.string.patient_id)) + (respectivePatientID))); mFileOneFileName.setText(((getString(R.string.file)) + (tempClickedElements.get(0)))); mFirstFileTypeProgressDialogLayout.setVisibility(View.VISIBLE); labelFirstPdf.setText(tempClickedElements.get(0)); mFileOneIcon.setImageDrawable(android.support.v4.content.ContextCompat.getDrawable(mContext, R.drawable.ic_selected_document)); break; case 2 : mFileOnePatientID.setText(((getString(R.string.patient_id)) + (respectivePatientID))); mFileOneFileName.setText(((getString(R.string.file)) + (tempClickedElements.get(0)))); mFirstFileTypeProgressDialogLayout.setVisibility(View.VISIBLE); labelFirstPdf.setText(tempClickedElements.get(0)); mFileTwoPatientID.setText(((getString(R.string.patient_id)) + (respectivePatientID))); mFileTwoFileName.setText(((getString(R.string.file)) + (tempClickedElements.get(1)))); mSecondFileTypePdfViewLayout.setVisibility(View.VISIBLE); mSecondFileTypeProgressDialogLayout.setVisibility(View.VISIBLE); labelSecondPdf.setText(tempClickedElements.get(1)); mFileOneIcon.setImageDrawable(android.support.v4.content.ContextCompat.getDrawable(mContext, R.drawable.ic_selected_document)); mFileTwoIcon.setImageDrawable(android.support.v4.content.ContextCompat.getDrawable(mContext, R.drawable.ic_selected_document)); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6003/buggy-version/app.src.main.java.com.scorg.dms.ui.activities.dms_patient_list.FileTypeViewerActivity.java", "BodyUseAPI": ["com.scorg.dms.model.dms_models.responsemodel.filetreeresponsemodel.LstDocType.getRecordDetailId()", "java.util.LinkedHashMap<java.lang.String, java.lang.String>.put(java.lang.String,clickedLstDocTypeElement.getTypeName().trim())", "java.lang.String.valueOf(clickedLstDocTypeElement.getRecordDetailId())", "java.util.LinkedHashMap<java.lang.String, java.lang.String>.values()", "clickedLstDocTypeElement.getTypeName().trim()", "com.scorg.dms.model.dms_models.responsemodel.filetreeresponsemodel.LstDocType.getTypeName()"], "Fixed commit": "07d0d4c35e266fd94eee6f5082505a86a7f696e2", "Url": "https://api.github.com/repos/sandeepbahalkar123/DMS_EMRD_repo", "Date": "2018-12-06T20:32:05Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fileName.indexOf(\".\")) > 0) fileName = fileName.substring(0, fileName.lastIndexOf(\".\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2234/buggy-version/client.Client.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "f4548b989fa7b357cefab46500a5043c431de72f", "Url": "https://api.github.com/repos/UnknownMurders/CompProblemSolving", "Date": "2018-12-11T02:44:07Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(rowDiff)) == 2) { moved_2_spaces = jaysc.example.com.chess.Activities.GameActivity.turnCount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1913/buggy-version/app.src.main.java.jaysc.example.com.chess.Pieces.Pawn.java", "BodyUseAPI": [], "Fixed commit": "9708db609addbc14432f0d5576e53567a323150c", "Url": "https://api.github.com/repos/Solecist287/AndroidChess", "Date": "2018-12-23T05:56:14Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v.blade.player.PlayerMediaPlayer.context) != null) android.widget.Toast.makeText(v.blade.player.PlayerMediaPlayer.context, v.blade.player.PlayerMediaPlayer.context.getString(R.string.playback_error), Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8146/buggy-version/app.src.main.java.v.blade.player.PlayerMediaPlayer.java", "BodyUseAPI": [], "Fixed commit": "3ee6959b94549c01cce106a15c274a08b20361f6", "Url": "https://api.github.com/repos/Valou3433/blade-player", "Date": "2018-11-11T15:58:57Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((params[0]) == null) { return org.springframework.cache.interceptor.SimpleKey.EMPTY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4051/buggy-version/cloud-common.src.main.java.com.sequenceiq.cloudbreak.cache.CachingConfig.java", "BodyUseAPI": [], "Fixed commit": "cc86cfc8a21498b0b1b6a19e6717b1d4d3480c5f", "Url": "https://api.github.com/repos/hortonworks/cloudbreak", "Date": "2018-11-07T09:28:22Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(seedu.address.model.medicalhistory.Diagnosis.isValidDiagnosis(trimmedDiagnosis))) { throw new seedu.address.logic.parser.exceptions.ParseException(seedu.address.model.medicalhistory.Diagnosis.MESSAGE_NAME_CONSTRAINT_DIAGNOSIS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/308/buggy-version/src.main.java.seedu.address.logic.parser.ParserUtil.java", "BodyUseAPI": [], "Fixed commit": "4b7c421e2e8379c7c84bdeb6904ef22e5bf085d0", "Url": "https://api.github.com/repos/lingzhiyu/main", "Date": "2018-11-05T08:56:02Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (databaseError != null) { throw databaseError.toException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6083/buggy-version/app.src.main.java.ch.epfl.sweng.SDP.firebase.FbDatabase.java", "BodyUseAPI": ["com.google.firebase.database.DatabaseError.toException()"], "Fixed commit": "94ba94133e7140307c48c3805817e5762ff93cdf", "Url": "https://api.github.com/repos/gyrodraw/GyroDraw", "Date": "2018-12-19T10:14:55Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userCashCoupon.getUsed()) { usedCashCouponList.add(userCashCoupon); }else { effectiveCashCouponList.add(userCashCoupon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5817/buggy-version/module_order.src.main.java.arouter.dawn.zju.edu.module_order.ui.cash_coupon.CashCouponPresenter.java", "BodyUseAPI": ["java.util.List<arouter.dawn.zju.edu.lib_net.bean.order.UserCashCoupon>.add(arouter.dawn.zju.edu.lib_net.bean.order.UserCashCoupon)", "java.util.List<arouter.dawn.zju.edu.lib_net.bean.order.UserCashCoupon>.add(arouter.dawn.zju.edu.lib_net.bean.order.UserCashCoupon)"], "Fixed commit": "3b37a1088ac30e5dbe238cd06eaa351e09b3df26", "Url": "https://api.github.com/repos/DeIaube/YiXing", "Date": "2018-11-21T06:12:03Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (javaArgumentType.isInterface()) { java.lang.reflect.Method[] interfaceMethods = javaArgumentType.getMethods(); java.lang.reflect.Method[] objectMethods = java.lang.Object.class.getMethods(); for (int i = 0; i < (interfaceMethods.length); i++) { boolean isDefault = false; try { java.lang.reflect.Method isDefaultCall = interfaceMethods[i].getClass().getMethod(\"isDefault\"); if (interfaceMethods[i].isDefault()) { isDefault = true; } } catch (java.lang.Exception e) { } if (!isDefault) { Breakable : { for (int j = 0; j < (objectMethods.length); j++) { if (objectMethods[j].equals(interfaceMethods[i])) { break Breakable; } } methodsCount++; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6734/buggy-version/src.main.java.io.alicorn.v8.V8JavaObjectUtils.java", "BodyUseAPI": ["java.lang.Class<?>.getMethods()"], "Fixed commit": "5c410354190679ceecadefd300322a02b6067775", "Url": "https://api.github.com/repos/JamesSmall/v8-adapter", "Date": "2018-12-25T07:47:11Z"},
{"Line": "=>735", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (loader != null) { return java.lang.reflect.Proxy.newProxyInstance(loader, new java.lang.Class[]{ javaArgumentType, io.alicorn.v8.Releasable.class }, handler); }else { return java.lang.reflect.Proxy.newProxyInstance(loader, new java.lang.Class[]{ javaArgumentType }, handler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6734/buggy-version/src.main.java.io.alicorn.v8.V8JavaObjectUtils.java", "BodyUseAPI": ["java.lang.reflect.Proxy.newProxyInstance(java.lang.ClassLoader,java.lang.Class[],io.alicorn.v8.V8JavaObjectUtils.V8CallBackFunctionInvocationHandler)", "java.lang.reflect.Proxy.newProxyInstance(java.lang.ClassLoader,java.lang.Class[],io.alicorn.v8.V8JavaObjectUtils.V8CallBackFunctionInvocationHandler)"], "Fixed commit": "5c410354190679ceecadefd300322a02b6067775", "Url": "https://api.github.com/repos/JamesSmall/v8-adapter", "Date": "2018-12-25T07:47:11Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.PATHoji.util.CommonMethods.checkMySqlReservedWords(inDto.getUserId())) { outDto.setCode(ResultCode.NULL_UUID); logger.debug(\"[\u9a8c\u8bc1\u5931\u8d25]\uff1a\u7528\u6237ID\u4e0d\u53ef\u4e3a\u7a7a\"); return outDto; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1942/buggy-version/TimeBack.src.main.java.com.PATHoji.gtd.controller.AuthController.java", "BodyUseAPI": [], "Fixed commit": "dafc94265987445e207ad6a5286724a988ba7085", "Url": "https://api.github.com/repos/XJ-GTD/GTD2", "Date": "2018-12-03T14:06:09Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.PATHoji.util.CommonMethods.checkMySqlReservedWords(inDto.getDeviceId())) { outDto.setCode(ResultCode.NULL_UUID); logger.debug(\"[\u9a8c\u8bc1\u5931\u8d25]\uff1a\u7528\u6237ID\u4e0d\u53ef\u4e3a\u7a7a\"); return outDto; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1942/buggy-version/TimeBack.src.main.java.com.PATHoji.gtd.controller.AuthController.java", "BodyUseAPI": [], "Fixed commit": "dafc94265987445e207ad6a5286724a988ba7085", "Url": "https://api.github.com/repos/XJ-GTD/GTD2", "Date": "2018-12-03T14:06:09Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.apimgt.impl.APIManagerConfiguration.getFirstProperty(APIConstants.API_STORE_GROUP_EXTRACTOR_CLAIM_URI)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(claim)) { claim = \"http://wso2.org/claims/organization\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2269/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.DefaultGroupIDExtractorImpl.java", "BodyUseAPI": [], "Fixed commit": "ad5efee89b032ef9ce674ed41b2fd7d87d0720a9", "Url": "https://api.github.com/repos/wso2/carbon-apimgt", "Date": "2018-12-07T04:51:54Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.apimgt.impl.APIManagerConfiguration.getFirstProperty(APIConstants.API_STORE_GROUP_EXTRACTOR_CLAIM_URI)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(claim)) { claim = \"http://wso2.org/claims/organization\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2269/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.DefaultGroupIDExtractorImpl.java", "BodyUseAPI": [], "Fixed commit": "ad5efee89b032ef9ce674ed41b2fd7d87d0720a9", "Url": "https://api.github.com/repos/wso2/carbon-apimgt", "Date": "2018-12-07T04:51:54Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.level.player) == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9571/buggy-version/src.main.java.roguelike.domain.Zombie.java", "BodyUseAPI": [], "Fixed commit": "79415a4bc3d1ed42173a3736f3b604ca3a9b0ca1", "Url": "https://api.github.com/repos/Zentryn/ot-harjoitustyo", "Date": "2018-12-11T20:09:40Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedRoute) != null) { selectedRoute.clearPredictions(Direction.INBOUND); selectedRoute.clearPredictions(Direction.OUTBOUND); selectedRoute.clearServiceAlerts(); refreshPredictions(true); refreshServiceAlerts(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7164/buggy-version/app.src.main.java.jackwtat.simplembta.fragments.ManualSearchFragment.java", "BodyUseAPI": [], "Fixed commit": "a34018927c2b6f27bbb89b2a7f9187c2944171a2", "Url": "https://api.github.com/repos/jackwtat/SimpleMBTA", "Date": "2018-12-14T18:07:44Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((left.records[0]) == null) { Main.directory.add((\"1\" + (code))); left.localDepth = (left.localDepth) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2753/buggy-version/src.Bucket.java", "BodyUseAPI": [], "Fixed commit": "0c415edf79a888498843c6bfae9066b1d4d1b3fd", "Url": "https://api.github.com/repos/ecameron545/Extendible-Hashing", "Date": "2018-12-15T23:15:53Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((right.records[0]) == null) { Main.directory.add((\"1\" + (code))); right.localDepth = (right.localDepth) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2753/buggy-version/src.Bucket.java", "BodyUseAPI": [], "Fixed commit": "0c415edf79a888498843c6bfae9066b1d4d1b3fd", "Url": "https://api.github.com/repos/ecameron545/Extendible-Hashing", "Date": "2018-12-15T23:15:53Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((in.readByte()) == 0) { time = null; }else { time = in.readLong(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3462/buggy-version/app.src.main.java.edu.ucsb.cs184.moments.moments.Post.java", "BodyUseAPI": [], "Fixed commit": "6ded4a92e29348b8e20e2c210b224773296f8d41", "Url": "https://api.github.com/repos/SeakyLuo/Moments", "Date": "2018-12-08T07:01:47Z"},
{"Line": "=>569", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.connectionCallback) != null) this.connectionCallback.hasActiveConnection(hasActiveConnection);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6534/buggy-version/library.app.src.main.java.am.appwise.components.ni.NoInternetDialog.java", "BodyUseAPI": [], "Fixed commit": "ce8fa40faa887cc14472a60c65cad84e265ee13b", "Url": "https://api.github.com/repos/kolllor33/NoInternetDialog", "Date": "2018-11-19T18:03:25Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (myDataset == null) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/921/buggy-version/app.src.main.java.android.example.com.split.ui.recycleradapter.BaseRecyclerAdapter.java", "BodyUseAPI": [], "Fixed commit": "d0f82c32a5c8447e93ba3a3158433ed4c40df2f4", "Url": "https://api.github.com/repos/fongv1/Split", "Date": "2018-12-02T22:44:41Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (msg.getData().getBoolean(GroupDataRepository.SUCCESS, false)) { groups = ((java.util.List<android.example.com.split.data.entity.Group>) (msg.getData().getSerializable(GroupDataRepository.GROUP_LIST))); }else { groups = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/921/buggy-version/app.src.main.java.android.example.com.split.ui.tabfragment.GroupsTabFragment.java", "BodyUseAPI": ["android.os.Message.getData()", "msg.getData().getSerializable(GroupDataRepository.GROUP_LIST)"], "Fixed commit": "d0f82c32a5c8447e93ba3a3158433ed4c40df2f4", "Url": "https://api.github.com/repos/fongv1/Split", "Date": "2018-12-02T22:44:41Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!canMove) { if (key != null) { switch (key) { case \"up\" : return Action.FORWARD; case \"left\" : return Action.TURN_LEFT; case \"right\" : return Action.TURN_RIGHT; case \"space\" : return Action.CLEAN; case \"escape\" : return Action.TURN_OFF; } } }else { if (key != null) { switch (key) { case \"left\" : return Action.TURN_LEFT; case \"right\" : return Action.TURN_RIGHT; case \"space\" : return Action.CLEAN; case \"escape\" : return Action.TURN_OFF; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2781/buggy-version/src.main.java.cz.mendelu.vui2.agents.HumanAgent.java", "BodyUseAPI": [], "Fixed commit": "72602371941c81079a0770af9d9518755510c3a2", "Url": "https://api.github.com/repos/allchanzi/VUI2-agents", "Date": "2018-12-24T11:38:18Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hasCusBg || hasCusCorner) || hasCusBorder) { hasCustom = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9375/buggy-version/library.src.main.java.com.ruffian.library.widget.helper.RBaseHelper.java", "BodyUseAPI": [], "Fixed commit": "72e87b0604fdd87c258dd5496ffb7e80f27fa6c0", "Url": "https://api.github.com/repos/RuffianZhong/RWidgetHelper", "Date": "2018-11-09T02:56:18Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((((((mBorderDashWidth) != 0) || ((mBorderDashGap) != 0)) || ((mBorderWidthNormal) != 0)) || ((mBorderWidthPressed) != 0)) || ((mBorderWidthUnable) != 0)) || ((mBorderColorNormal) != 0)) || ((mBorderColorPressed) != 0)) || ((mBorderColorUnable) != 0)) { hasCusBorder = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9375/buggy-version/library.src.main.java.com.ruffian.library.widget.helper.RBaseHelper.java", "BodyUseAPI": [], "Fixed commit": "72e87b0604fdd87c258dd5496ffb7e80f27fa6c0", "Url": "https://api.github.com/repos/RuffianZhong/RWidgetHelper", "Date": "2018-11-09T02:56:18Z"},
{"Line": "=>560", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((((mCornerRadius) != 0) || ((mCornerRadiusTopLeft) != 0)) || ((mCornerRadiusTopRight) != 0)) || ((mCornerRadiusBottomLeft) != 0)) || ((mCornerRadiusBottomRight) != 0)) { hasCusCorner = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9375/buggy-version/library.src.main.java.com.ruffian.library.widget.helper.RBaseHelper.java", "BodyUseAPI": [], "Fixed commit": "72e87b0604fdd87c258dd5496ffb7e80f27fa6c0", "Url": "https://api.github.com/repos/RuffianZhong/RWidgetHelper", "Date": "2018-11-09T02:56:18Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((h == 0) && (v == 0)) { h = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4071/buggy-version/WordSearch.java", "BodyUseAPI": [], "Fixed commit": "9632c22732d110998df2c2ecc7555625fb050b58", "Url": "https://api.github.com/repos/jacksonzou123/MKS21X-WordSearch", "Date": "2018-11-13T16:05:44Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ui.chatfrag.chatOpen())) { player.isShooting = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7010/buggy-version/core.src.io.anuke.mindustry.input.DesktopInput.java", "BodyUseAPI": [], "Fixed commit": "271dcd46bcfb341f2011b4a3ea115ac7ca3752e0", "Url": "https://api.github.com/repos/Anuken/Mindustry", "Date": "2018-12-10T15:38:09Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isChecked) { for (final com.valkryst.VTerminal.Tile tile : super.tiles.getRow(0)) { tile.setBackgroundColor(backgroundColor_pressed); tile.setForegroundColor(foregroundColor_pressed); } }else { for (final com.valkryst.VTerminal.Tile tile : super.tiles.getRow(0)) { tile.setBackgroundColor(backgroundColor_normal); tile.setForegroundColor(foregroundColor_normal); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6177/buggy-version/src.com.valkryst.VTerminal.component.RadioButton.java", "BodyUseAPI": [], "Fixed commit": "d21146352835f831649eec0281d4d4d64f970078", "Url": "https://api.github.com/repos/Valkryst/VTerminal", "Date": "2018-12-22T02:04:11Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CheckTypeVisitor.TResult.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(resultArgs.isEmpty())) { order = order.subList(resultArgs.size(), order.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3720/buggy-version/src.main.java.org.arend.typechecking.implicitargs.StdImplicitArgsInference.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.subList(int,int)", "java.util.List<? extends org.arend.typechecking.implicitargs.Expression>.size()"], "Fixed commit": "a34dd5b8f89f415241d099f742714431707c317d", "Url": "https://api.github.com/repos/JetBrains/Arend", "Date": "2018-11-20T16:27:31Z"},
{"Line": "=>843", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getPanel().equals(panel)) { rows.clear(); }else { columnPanelCreator.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1302/buggy-version/src.com.guimaker.panels.MainPanel.java", "BodyUseAPI": [], "Fixed commit": "91073b1fa050ec263a259c3517cfeb07286b3bad", "Url": "https://api.github.com/repos/matpie33/GuiMaker", "Date": "2018-11-18T20:40:14Z"},
{"Line": "=>815", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.openexchange.mailaccount.MailAccounts.isGuest(session)) { com.openexchange.push.impl.PushManagerRegistry.LOG.debug(\"Denied registration of a push listener for client {} from user {} in context {}: Guest user.\", session.getClient(), I(session.getUserId()), I(session.getContextId())); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8091/buggy-version/com.openexchange.push.impl.src.com.openexchange.push.impl.PushManagerRegistry.java", "BodyUseAPI": ["com.openexchange.session.Session.getClient()", "com.openexchange.push.impl.PushManagerRegistry.I(session.getContextId())", "com.openexchange.push.impl.PushManagerRegistry.I(session.getUserId())", "com.openexchange.session.Session.getUserId()", "com.openexchange.session.Session.getContextId()", "org.slf4j.Logger.debug(java.lang.String,session.getClient(),I(session.getUserId()),I(session.getContextId()))"], "Fixed commit": "7f65e5a5c911161e8d835baf6700d02a87a0a590", "Url": "https://api.github.com/repos/open-xchange/appsuite-middleware", "Date": "2018-11-28T08:45:53Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.openexchange.mailaccount.MailAccounts.isGuest(session)) { com.openexchange.push.impl.PushManagerRegistry.LOG.debug(\"Denied registration of a permanent push listener for client {} from user {} in context {}: Guest user.\", session.getClient(), I(session.getUserId()), I(session.getContextId())); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8091/buggy-version/com.openexchange.push.impl.src.com.openexchange.push.impl.PushManagerRegistry.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,session.getClient(),I(session.getUserId()),I(session.getContextId()))", "com.openexchange.session.Session.getClient()", "com.openexchange.session.Session.getUserId()", "com.openexchange.session.Session.getContextId()", "com.openexchange.push.impl.PushManagerRegistry.I(session.getUserId())", "com.openexchange.push.impl.PushManagerRegistry.I(session.getContextId())"], "Fixed commit": "7f65e5a5c911161e8d835baf6700d02a87a0a590", "Url": "https://api.github.com/repos/open-xchange/appsuite-middleware", "Date": "2018-11-28T08:45:53Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.IBlockAccess.getTileEntity(net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tileEntity instanceof com.mjr.planetprogression.tileEntities.TileEntityTelescopeFake) { net.minecraft.util.math.BlockPos mainBlockPosition = ((com.mjr.planetprogression.tileEntities.TileEntityTelescopeFake) (tileEntity)).mainBlockPosition; if (mainBlockPosition != null) { return world.getBlockState(pos).getBlock().getBedDirection(world.getBlockState(mainBlockPosition), world, mainBlockPosition); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7418/buggy-version/src.main.java.com.mjr.planetprogression.blocks.BlockTelescopeFake.java", "BodyUseAPI": [], "Fixed commit": "14e273396f111c3eec4115a48f15abd7cd1ec8ac", "Url": "https://api.github.com/repos/MJRLegends/Planet-Progression", "Date": "2018-11-16T08:52:16Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["util.Numeric.operandCompose(int,int,int,int)", "util.Numeric.operandCompose(int,int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((high - low) + 1) > 0) { i--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6438/buggy-version/src.main.java.serializer.MethodObjectSerializer.java", "BodyUseAPI": [], "Fixed commit": "ca7430c40ffb365b0edcb2656bdb3111a39b05da", "Url": "https://api.github.com/repos/racaljk/bc2json", "Date": "2018-11-19T03:28:31Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["util.Numeric.operandCompose(int,int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (npair > 0) { i--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6438/buggy-version/src.main.java.serializer.MethodObjectSerializer.java", "BodyUseAPI": [], "Fixed commit": "ca7430c40ffb365b0edcb2656bdb3111a39b05da", "Url": "https://api.github.com/repos/racaljk/bc2json", "Date": "2018-11-19T03:28:31Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9109/buggy-version/app.src.main.java.nottheory.donationtracker.Model.LocationCollection.java", "BodyUseAPI": [], "Fixed commit": "6450f11a87ab783f254b2346684e8173996ceffe", "Url": "https://api.github.com/repos/quantumelf/Not-Theory-Donation-Tracker-Project", "Date": "2018-11-15T19:39:18Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.gameframe) != null) this.gameframe.setVisible(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5690/buggy-version/src.edu.colostate.cs.cs414.betterbytes.p4.client.ui.UI.java", "BodyUseAPI": [], "Fixed commit": "ce08ca89949aa2df22a267a2f6f0f610a3bc629a", "Url": "https://api.github.com/repos/dcdennis/cs414-f18-001-BetterBytes", "Date": "2018-12-04T20:23:04Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Node.getFirstChild()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (contentNode.getAttribute(\"contenthandler\").equals(\"resource/x-bb-assignment\")) { android.content.Intent intent = new android.content.Intent(this, edu_cn.pku.course.activities.WebViewActivity.class); intent.putExtra(\"Title\", contentNode.getAttribute(\"title\")); intent.putExtra(\"WebViewUrl\", contentNode.getAttribute(\"viewUrl\")); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3012/buggy-version/app.src.main.java.edu_cn.pku.course.activities.ContentViewActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,java.lang.String)", "org.w3c.dom.Element.getAttribute(java.lang.String)", "android.content.Intent.putExtra(java.lang.String,java.lang.String)", "org.w3c.dom.Element.getAttribute(java.lang.String)"], "Fixed commit": "4401e88d5738536cd33a800a873ed0e4f875d772", "Url": "https://api.github.com/repos/cbwang2016/PKUCourses", "Date": "2018-12-03T10:01:13Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, discord.bot.utils.audio.AudioServerManager>.get(event.getGuild().getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (currAudioServerManager != null) { currAudioServerManager.reverseTrackLoop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4902/buggy-version/src.main.java.discord.bot.command.aliases.SoundLoopCommand.java", "BodyUseAPI": ["discord.bot.utils.audio.AudioServerManager.reverseTrackLoop()"], "Fixed commit": "39ca1876ea9e9363fe3a7170466b43f994feb065", "Url": "https://api.github.com/repos/Minipasglop/BotDiscord", "Date": "2018-10-23T22:12:29Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.vision.face.FaceDetector.detect(com.google.android.gms.vision.Frame)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((faces.size()) == 0) { android.widget.Toast.makeText(context, \"No faces detected in bitmap.\", Toast.LENGTH_SHORT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4506/buggy-version/app.src.main.java.com.example.android.emojify.Emojifier.java", "BodyUseAPI": [], "Fixed commit": "a22f3450a5f4132c05333f88349be54f74716929", "Url": "https://api.github.com/repos/jhlink/AdvancedAndroid_Emojify", "Date": "2018-11-01T13:13:43Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["singleSnapshot.getValue(com.cafemanager.muse.Model.UserAccountSettings.class).getProfile_photo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((profileImageUrl.equals(\"\")) || ((profileImageUrl.length()) == 0)) { }else { com.squareup.picasso.Picasso.get().load(profileImageUrl).into(profileImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8732/buggy-version/app.src.main.java.com.cafemanager.muse.Utils.SearchUsersAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.get().load(java.lang.String)", "com.squareup.picasso.Picasso.get().load(profileImageUrl).into(de.hdodenhof.circleimageview.CircleImageView)"], "Fixed commit": "472b41a43d64aaf898036ef9cd535ad42b874235", "Url": "https://api.github.com/repos/EmilyPascua/Muse", "Date": "2018-12-13T22:41:03Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) { listener.onImageReady(drawable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3083/buggy-version/blurry.src.main.java.jp.wasabeef.blurry.Blurry.java", "BodyUseAPI": [], "Fixed commit": "f4861b63fcf499083dd4a15cffc559aff907c362", "Url": "https://api.github.com/repos/wasabeef/Blurry", "Date": "2018-11-19T02:52:18Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.Ben12345rocks.VotingPlugin.Config.Config.getInstance().isVotePartyGiveOffline()) { giveReward(user); }else { giveReward(user, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6714/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.VoteParty.VoteParty.java", "BodyUseAPI": [], "Fixed commit": "18c6ee66146828cd39438153915b5ca13c1674c4", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2018-11-13T21:53:08Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.Ben12345rocks.VotingPlugin.Config.Config.getInstance().isVotePartyGiveOffline()) { giveReward(user); }else { giveReward(user, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6714/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.VoteParty.VoteParty.java", "BodyUseAPI": [], "Fixed commit": "18c6ee66146828cd39438153915b5ca13c1674c4", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2018-11-13T21:53:08Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.optio.backend.repositories.IdealWeightRepository.findByNic(idealweight.getNic())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (newIdealWeight != null) { newIdealWeight.setWeight(idealweight.getWeight()); idealWeightRepository.save(newIdealWeight); return newIdealWeight.getId(); }else { idealWeightRepository.save(idealweight); return idealweight.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4/buggy-version/src.main.java.com.optio.backend.controllers.IdealWeightController.java", "BodyUseAPI": ["com.optio.backend.repositories.IdealWeightRepository.save(com.optio.backend.models.IdealWeight)", "com.optio.backend.models.IdealWeight.setWeight(idealweight.getWeight())", "com.optio.backend.models.IdealWeight.getId()"], "Fixed commit": "1e38d5bbe175ce29141cc63190f4b52a61079093", "Url": "https://api.github.com/repos/Anuthara-Attigala/Optio-Backend", "Date": "2018-11-11T06:22:49Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (levelOver) { android.content.SharedPreferences.Editor pref_ed = this.getSharedPreferences(edu.stlawu.final_project.MainFragment.SIGNUP_ENABLE, Context.MODE_PRIVATE).edit(); pref_ed.putBoolean(edu.stlawu.final_project.MainFragment.SIGNUP_ENABLE, true).apply(); pref_ed.putInt(\"Time\", ctr.count).apply(); android.content.Intent intent = new android.content.Intent(this, edu.stlawu.final_project.HighScoreActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9450/buggy-version/app.src.main.java.edu.stlawu.final_project.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "0bc392a08f438dfa9be9a3e9c7e319f20423746d", "Url": "https://api.github.com/repos/SamWiseLouis/CS450_Final_project", "Date": "2018-12-18T05:03:33Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (is_card_active) { java.lang.System.out.println((((((\"Reinforcement =>player : \" + (current_player.name)) + \"- Armies left: \") + (current_player.reinforcements)) + \"\\n countries :\") + (current_player.owned_territories.keySet().toString()))); java.lang.System.out.println((((((\"Cards Available: \\n Infantry: \" + (current_player.cards.infantry)) + \", Cavalry: \") + (current_player.cards.cavalry)) + \", Artillery: \") + (current_player.cards.artillery))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/758/buggy-version/src.views.Console_View.java", "BodyUseAPI": [], "Fixed commit": "0f1b34e3c3ced1477d68978654fe8481ed10d212", "Url": "https://api.github.com/repos/hr-gith/risk_game", "Date": "2018-12-01T16:12:27Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (condition == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/362/buggy-version/foundation-jpa.src.main.java.com.andlinks.foundation.service.impl.BaseServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c76436c5a1b52de01f0115499d81bcdfae3a3a8c", "Url": "https://api.github.com/repos/WangKB/foundation", "Date": "2018-11-18T04:16:57Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((attributeType) == null) { return org.apache.directory.api.util.Strings.utf8ToString(value.getBytes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2886/buggy-version/ldap.model.src.main.java.org.apache.directory.api.ldap.model.entry.DefaultAttribute.java", "BodyUseAPI": [], "Fixed commit": "6f9b6506290a76b82825079fe198245136821011", "Url": "https://api.github.com/repos/apache/directory-ldap-api", "Date": "2018-11-10T08:05:37Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jsonObject) != null) { setupViews(); initialGameRefresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5012/buggy-version/app.src.main.java.com.ralo.nbascoreboard.Fragments.BoxscoreFragment.java", "BodyUseAPI": [], "Fixed commit": "94815dff095fa2f166b2cdded8472a1ae36d9ca0", "Url": "https://api.github.com/repos/ralo50/NBAScoreboard", "Date": "2018-12-16T15:39:37Z"},
{"Line": "=>2096", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (w.options.total) { w.append(\"(0\"); }else { w.append(\"(\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3176/buggy-version/src.spins.promela.compiler.ltsmin.LTSminPrinter.java", "BodyUseAPI": ["spins.util.StringWriter.append(java.lang.String)", "spins.util.StringWriter.append(java.lang.String)"], "Fixed commit": "8d8f1727250a7c7af5fade30392086cabec27d51", "Url": "https://api.github.com/repos/utwente-fmt/spins", "Date": "2018-11-21T14:26:36Z"},
{"Line": "=>1829", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (w.options.total) { w.append(\" || \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3176/buggy-version/src.spins.promela.compiler.ltsmin.LTSminPrinter.java", "BodyUseAPI": ["spins.util.StringWriter.append(java.lang.String)"], "Fixed commit": "8d8f1727250a7c7af5fade30392086cabec27d51", "Url": "https://api.github.com/repos/utwente-fmt/spins", "Date": "2018-11-21T14:26:36Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.address.logic.parser.ArgumentTokenizer.tokenize(java.lang.String,seedu.address.logic.parser.CliSyntax.PREFIX_NAME,seedu.address.logic.parser.CliSyntax.PREFIX_PHONE,seedu.address.logic.parser.CliSyntax.PREFIX_PASSWORD,seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL,seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS,seedu.address.logic.parser.CliSyntax.PREFIX_INTEREST,seedu.address.logic.parser.CliSyntax.PREFIX_TAG,seedu.address.logic.parser.CliSyntax.PREFIX_TIMETABLE,seedu.address.logic.parser.CliSyntax.PREFIX_SCHEDULE_UPDATE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_PASSWORD).isPresent()) { editPersonDescriptor.setPassword(seedu.address.logic.parser.ParserUtil.parsePassword(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_PASSWORD).get())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4436/buggy-version/src.main.java.seedu.address.logic.parser.EditUserCommandParser.java", "BodyUseAPI": ["seedu.address.logic.commands.personcommands.EditUserCommand.EditPersonDescriptor.setPassword(seedu.address.logic.parser.ParserUtil.parsePassword(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_PASSWORD).get()))", "seedu.address.logic.parser.ParserUtil.parsePassword(argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_PASSWORD).get())", "argMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_PASSWORD).get()", "seedu.address.logic.parser.ArgumentMultimap.getValue(seedu.address.logic.parser.CliSyntax.PREFIX_PASSWORD)"], "Fixed commit": "d161aff320f2acd2544f579cd63fc3f2bb2e0836", "Url": "https://api.github.com/repos/adjscent/main", "Date": "2018-11-10T11:53:41Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getCurrentRoom()) > 100000) { player.setCurrentRoom(dormCountId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6342/buggy-version/src.GameCore.java", "BodyUseAPI": ["Player.setCurrentRoom(int)"], "Fixed commit": "3f3bb50f95fada31a8a3edea6a0545c2e03ad418", "Url": "https://api.github.com/repos/pschemer/CS321-2018F-004", "Date": "2018-11-06T17:42:04Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isHeritedFromBlockHandler) { return mv; }else { return mv == null ? null : new com.quinn.hunter.plugin.timing.bytecode.com.quinn.hunter.plugin.timing.bytecode.TimingMethodAdapter((((className) + (java.io.File.separator)) + name), access, desc, mv); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5395/buggy-version/hunter-timing-plugin.src.main.groovy.com.quinn.hunter.plugin.timing.bytecode.TimingClassAdapter.java", "BodyUseAPI": [], "Fixed commit": "c8cbbe509d1d31ff9ff59877288ccbffe2ac6f4d", "Url": "https://api.github.com/repos/Leaking/Hunter", "Date": "2018-11-19T05:51:12Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value()) > 21) { onTurn = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6794/buggy-version/Player.java", "BodyUseAPI": [], "Fixed commit": "6c8263ae7ad618279e148f04d3cf257a474c06de", "Url": "https://api.github.com/repos/Prep-IntroToProgramming/java-card-game-multi-gang", "Date": "2018-12-03T19:11:13Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedImage) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/625/buggy-version/app.src.main.java.skku.fit4you_android.activity.RegisterActivity.java", "BodyUseAPI": [], "Fixed commit": "f5abe4301889f01289609d897f08c9c7a7fd6fb3", "Url": "https://api.github.com/repos/kuk941025/Fit4YouAndroid", "Date": "2018-12-09T08:39:08Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Collections.disjoint(hashSet1, TetrisMain.fixedObjects)) { TetrisMain.currentObject.moveLeft(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1088/buggy-version/src.TetrisMain.java", "BodyUseAPI": [], "Fixed commit": "f8b19f3316f6e10ec0b6ab2776d372c0ee5dd447", "Url": "https://api.github.com/repos/marcelgaedke/TetrisGame_JavaFX", "Date": "2018-11-20T20:19:20Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Collections.disjoint(hashSet1, TetrisMain.fixedObjects)) { TetrisMain.currentObject.moveRight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1088/buggy-version/src.TetrisMain.java", "BodyUseAPI": [], "Fixed commit": "f8b19f3316f6e10ec0b6ab2776d372c0ee5dd447", "Url": "https://api.github.com/repos/marcelgaedke/TetrisGame_JavaFX", "Date": "2018-11-20T20:19:20Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((testIds) == null) return mute;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6162/buggy-version/ignite-tc-helper-web.src.main.java.org.apache.ignite.ci.tcmodel.mute.MuteInfoCompacted.java", "BodyUseAPI": [], "Fixed commit": "fa7746e46d7cab7e790491eef12103f7634e3b41", "Url": "https://api.github.com/repos/SomeFire/ignite-teamcity-bot", "Date": "2018-12-07T11:14:21Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nonJokerTiles.size()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2940/buggy-version/src.main.java.naya.Meld.java", "BodyUseAPI": [], "Fixed commit": "84cd4d95a6e648d11f7319c17ef30b08caa63d9d", "Url": "https://api.github.com/repos/nguyandy/naya", "Date": "2018-12-05T13:51:38Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.ArrayList<tools.DataReciever>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (recs == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1673/buggy-version/src.tools.DataHandler.java", "BodyUseAPI": [], "Fixed commit": "d62b717c6d0535d961075fd2e208a1cca59559cc", "Url": "https://api.github.com/repos/SunRover/RoverTools", "Date": "2018-12-13T16:47:25Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.refactoringBot.model.configuration.GitConfiguration.getRepoApiLink()", "de.refactoringBot.model.configuration.GitConfiguration.getForkApiLink()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (originalRepo.equals(forkRepo)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9250/buggy-version/src.main.java.de.refactoringBot.api.github.GithubDataGrabber.java", "BodyUseAPI": [], "Fixed commit": "82fea4bb0cc73b445431ead3e63bc3020692b37f", "Url": "https://api.github.com/repos/LHommeDeBat/Refactoring-Bot", "Date": "2018-12-10T17:31:30Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((rowIncrement < (-1)) || (colIncrement < (-1))) || (rowIncrement > 2)) || (colIncrement > 2)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8239/buggy-version/WordSearch.java", "BodyUseAPI": [], "Fixed commit": "d9bfeb2ec5dbed872f142deb607db21604646212", "Url": "https://api.github.com/repos/minjun0622/MKS21X-WordSearch", "Date": "2018-11-19T04:04:33Z"},
{"Line": "=>645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dao.getLoginCredential(user).checkPassword(oldPassword))) { throw new org.openmrs.api.APIException(\"old.password.not.correct\", ((java.lang.Object[]) (null))); }else if (!(dao.getLoginCredential(user).changePassword(oldPassword))) { throw new org.openmrs.api.APIException(\"New Password cannot be same as old Password\", ((java.lang.Object[]) (null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3880/buggy-version/api.src.main.java.org.openmrs.api.impl.UserServiceImpl.java", "BodyUseAPI": ["org.openmrs.api.db.UserDAO.getLoginCredential(org.openmrs.User)", "dao.getLoginCredential(user).changePassword(java.lang.String)"], "Fixed commit": "a0e6b2002dd1eb6644863becc32158930ac77c71", "Url": "https://api.github.com/repos/AarohGala/openmrs-core", "Date": "2018-11-15T05:59:06Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.lang.Double.isNaN(npc.getHitBox().x))) { if (com.badlogic.gdx.math.Intersector.overlaps(spell.getHitBox(), npc.getHitBox())) { npc.damage(spell.getDamage()); spell.setCanDispose(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3062/buggy-version/core.src.com.adventuresof.game.world.GameWorld.java", "BodyUseAPI": ["com.adventuresof.game.character.NPC.damage(spell.getDamage())", "com.badlogic.gdx.math.Intersector.overlaps(spell.getHitBox(),npc.getHitBox())", "com.adventuresof.game.character.NPC.getHitBox()"], "Fixed commit": "423338455e9034a2b7d974ae6d30d4cdf9748d92", "Url": "https://api.github.com/repos/HarvellJ/AdventuresOf", "Date": "2018-11-15T13:18:38Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (longestString == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2708/buggy-version/src.main.java.io.falcon.assignment.Payload.java", "BodyUseAPI": [], "Fixed commit": "19d012cbb674b5ead0f7ff8f6a987d1bb1a950f5", "Url": "https://api.github.com/repos/jennyferpinto/falcon", "Date": "2018-11-19T11:42:41Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.quelea.windows.main.QueleaApp.get().getMainWindow().getMainPanel().getLivePanel().getDisplayable()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (d instanceof org.quelea.data.displayable.PresentationDisplayable) numberOfFiles = ((org.quelea.data.displayable.PresentationDisplayable) (d)).getPresentation().getSlides().length; else if (d instanceof org.quelea.data.displayable.PdfDisplayable) numberOfFiles = ((org.quelea.data.displayable.PdfDisplayable) (d)).getPresentation().getSlides().length; else numberOfFiles = ((org.quelea.data.displayable.ImageGroupDisplayable) (d)).getPresentation().getSlides().length;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7659/buggy-version/Quelea.src.main.java.org.quelea.server.RCHandler.java", "BodyUseAPI": [], "Fixed commit": "f2b96c59226bcd79b7b5fbc20e4c030eb2aed0f2", "Url": "https://api.github.com/repos/supagu/Quelea", "Date": "2018-11-05T22:42:18Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value.equals(\"admin: stop\")) { sendToAllConnections(\"Server was stopped by admin\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9023/buggy-version/server.src.ru.nerdyfeed.chat.server.ChatServer.java", "BodyUseAPI": [], "Fixed commit": "88d556b48ab84a5e35ea9e75218d543a6b31b069", "Url": "https://api.github.com/repos/nerdyfeed/Chat", "Date": "2018-11-21T10:18:40Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3884/buggy-version/src.main.java.org.tron.common.runtime.vm.program.Stack.java", "BodyUseAPI": [], "Fixed commit": "d0540356920b3900034e2de3103defe021338315", "Url": "https://api.github.com/repos/tronprotocol/java-tron", "Date": "2018-11-06T09:38:14Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (updatedUserOauthDO != null) { updatedUserOauthDO.setDdUnionId(userVO.getOuterUnionId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5997/buggy-version/service.src.main.java.com.workbei.manager.user.impl.AccountManagerImpl.java", "BodyUseAPI": ["com.workbei.model.domain.user.WbUserOauthDO.setDdUnionId(userVO.getOuterUnionId())"], "Fixed commit": "25171674a4c3177450556d650361b116c97f4115", "Url": "https://api.github.com/repos/WallaceMao/workbei-main", "Date": "2018-12-11T19:14:27Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((b.v) == (-1)) && ((a.v) == (-2))) throw new java.lang.IllegalArgumentException(\"cannot divide minint by -1\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8670/buggy-version/src.main.java.nom.bdezonia.zorbage.type.data.int2.SignedInt2Group.java", "BodyUseAPI": [], "Fixed commit": "2e8dbe16ebf3a883ea1f8a7b6ba17d4761f5eb8c", "Url": "https://api.github.com/repos/bdezonia/zorbage", "Date": "2018-11-22T04:12:45Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!empty_tile) threatened.setXYcoord(x, y);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/448/buggy-version/src.Board.Board.java", "BodyUseAPI": [], "Fixed commit": "52bb12bc3351b34d190333ba5ace2cd2c298690a", "Url": "https://api.github.com/repos/vitusik/Chess", "Date": "2018-12-20T15:52:39Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(isDuplicate(device))) { mDeviceList.add(device); if ((mOnBleDiscoveryFinishedListener) != null) mOnBleDiscoveryFinishedListener.onFinished(mDeviceList, false); java.lang.System.out.println((\"aaadevice:\" + (device.getAddress()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/192/buggy-version/app.src.main.java.printservice.tscprinters.com.tsc_printservice.Controller.BleController.java", "BodyUseAPI": ["java.util.List<android.bluetooth.BluetoothDevice>.add(android.bluetooth.BluetoothDevice)", "android.bluetooth.BluetoothDevice.getAddress()", "java.io.PrintStream.println((\"aaadevice:\" + (device.getAddress())))"], "Fixed commit": "69e3adde5a068bb50b3db9ec6a3f38288cdcfcca", "Url": "https://api.github.com/repos/MarcusLiu1990/TSC_WebPrinter", "Date": "2018-12-11T12:06:18Z"},
{"Line": "=>759", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mPopup.isShowing()) mPopup.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4841/buggy-version/library.src.main.java.it.sephiroth.android.library.tooltip.Tooltip.java", "BodyUseAPI": ["android.widget.PopupWindow.dismiss()"], "Fixed commit": "a32f3fa075e7366d8072509c6d92b2457d583e81", "Url": "https://api.github.com/repos/MFlisar/android-target-tooltip", "Date": "2018-11-02T22:08:13Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cb != null) { cb.called(obj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5852/buggy-version/chainsql.src.main.java.com.peersafe.chainsql.manager.EventManager.java", "BodyUseAPI": ["com.peersafe.base.client.pubsub.Publisher.Callback<org.json.JSONObject>.called(org.json.JSONObject)"], "Fixed commit": "e9c1340005c20906b3c899e210ec475273d2dc21", "Url": "https://api.github.com/repos/ChainSQL/java-chainsql-api", "Date": "2018-12-06T03:49:13Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.has(\"transaction\")) && (data.getJSONObject(\"transaction\").has(\"TransactionType\"))) { org.json.JSONObject tx = data.getJSONObject(\"transaction\"); com.peersafe.base.core.serialized.enums.TransactionType type = com.peersafe.base.core.serialized.enums.TransactionType.valueOf(tx.getString(\"TransactionType\")); if (com.peersafe.chainsql.util.Util.isChainsqlType(type)) { if (!(\"validate_success\".equals(data.getString(\"status\")))) { mapCache.remove(key); } }else { mapCache.remove(key); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5852/buggy-version/chainsql.src.main.java.com.peersafe.chainsql.manager.EventManager.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)", "java.lang.String.equals(data.getString(\"status\"))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "e9c1340005c20906b3c899e210ec475273d2dc21", "Url": "https://api.github.com/repos/ChainSQL/java-chainsql-api", "Date": "2018-12-06T03:49:13Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (pictureBmp != null) { java.io.ByteArrayOutputStream stream = new java.io.ByteArrayOutputStream(); pictureBmp.compress(Bitmap.CompressFormat.PNG, 100, stream); return stream.toByteArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/364/buggy-version/app.src.main.java.ch.hevs.a6452.grp2.autostop.autostop.Entites.PlateEntity.java", "BodyUseAPI": ["android.graphics.Bitmap.compress(Bitmap.CompressFormat.PNG,int,java.io.ByteArrayOutputStream)"], "Fixed commit": "899dda93201717b100344e871697b5a1ba5bd206", "Url": "https://api.github.com/repos/rohsyl/auto-stop", "Date": "2018-12-07T13:57:52Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tag instanceof com.sun.javadoc.ParamTag) { com.sun.javadoc.ParamTag paramTag = ((com.sun.javadoc.ParamTag) (tag)); return paramTag.parameterComment(); }else if (tag.name().equals(\"Text\")) { return tag.text(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5865/buggy-version/src.main.java.org.iota.mddoclet.Util.java", "BodyUseAPI": ["com.sun.javadoc.Tag.text()", "java.lang.String.equals(java.lang.String)", "com.sun.javadoc.Tag.name()"], "Fixed commit": "cb8b8c7099637c3ace43098aa2a8f69f8a4e7909", "Url": "https://api.github.com/repos/iotaledger/java-md-doclet", "Date": "2018-11-21T19:12:07Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.elytradev.thermionics.data.MachineRecipes.getPotStill(com.elytradev.concrete.inventory.ConcreteFluidTank)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (recipe.consumeIngredients(inputTank)) { outputTank.fillInternal(output, true); heat.extractHeat(com.elytradev.thermionics.tileentity.TileEntityPotStill.HEAT_REQUIRED, false); }else { org.jline.utils.Log.warn(\"Unable to deduct ingredients!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5246/buggy-version/src.main.java.com.elytradev.thermionics.tileentity.TileEntityPotStill.java", "BodyUseAPI": [], "Fixed commit": "99d454ea667688d554cae6893a8f870082c4004e", "Url": "https://api.github.com/repos/elytra/Thermionics", "Date": "2018-11-02T21:33:54Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.utils.conf.AppConfig.getInstance().isAutoBackUp()) { com.backend.scan.BackendScanner.getInstance().scheduleOneBackupTask(); com.service.listener.SpecialListener.lastBackUpDay = java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_YEAR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5188/buggy-version/photoweb.src.main.java.com.service.listener.SpecialListener.java", "BodyUseAPI": [], "Fixed commit": "a53d9f4318b3bf6b92e3dd2ab1ceffa57716bc8e", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2018-12-02T14:02:17Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (android.app.Activity.RESULT_OK)) { android.support.design.widget.Snackbar.make(findViewById(android.R.id.content), R.string.request_sent, Snackbar.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7104/buggy-version/place_zabaw.app.src.main.java.czernik.osada.placezabaw.PlaygroundDetailsScreen.java", "BodyUseAPI": [], "Fixed commit": "17dc5656c477d22317d9830f3750657f75118397", "Url": "https://api.github.com/repos/krymeer/pdu", "Date": "2018-12-20T08:32:13Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (android.app.Activity.RESULT_OK)) { android.support.design.widget.Snackbar.make(findViewById(android.R.id.content), R.string.request_sent, Snackbar.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7104/buggy-version/place_zabaw.app.src.main.java.czernik.osada.placezabaw.MainScreen.java", "BodyUseAPI": [], "Fixed commit": "17dc5656c477d22317d9830f3750657f75118397", "Url": "https://api.github.com/repos/krymeer/pdu", "Date": "2018-12-20T08:32:13Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["questionRepository.findById(userWatchQuestion.getQuestionId()).orElse(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (question == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3862/buggy-version/src.main.java.edu.nju.network.campusqa.web.wrapper.Question2QuestionVOWrapper.java", "BodyUseAPI": [], "Fixed commit": "ae6846e59aaa0b43679b369cbe0e6d12a66576c4", "Url": "https://api.github.com/repos/DmuMenDuo/campusqa", "Date": "2018-12-19T02:37:03Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((moze_intel.projecte.utils.EMCHelper.getEmcValue(stack.toItemStack())) > (moze_intel.projecte.utils.EMCHelper.getEmcValue(moze_intel.projecte.emc.FuelMapper.getFuelUpgrade(stack.toItemStack())))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5052/buggy-version/src.main.java.moze_intel.projecte.emc.FuelMapper.java", "BodyUseAPI": [], "Fixed commit": "089d26b17ef6333a20c4ed4f09093b8404851b41", "Url": "https://api.github.com/repos/Lilylicious/ProjectE", "Date": "2018-11-26T09:49:12Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.neema.storyboard.FlashCardsFragment.1.createCard(com.google.firebase.database.DataSnapshot)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(cards.contains(card))) cards.add(card);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1323/buggy-version/app.src.main.java.com.example.neema.storyboard.FlashCardsFragment.java", "BodyUseAPI": ["java.util.List<com.example.neema.storyboard.Card>.add(com.example.neema.storyboard.Card)"], "Fixed commit": "28374bd4723b37e2cd947d27f08e9ebb77bac326", "Url": "https://api.github.com/repos/nvalizad/Storyboard", "Date": "2018-11-27T18:42:24Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataModel.getCancellingTask().getValue()) { if ((browser) != null) browser.quit(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3706/buggy-version/src.main.java.com.lamonzo.pbb.tasks.SubmitLightningBallot.java", "BodyUseAPI": [], "Fixed commit": "6979a7fd34aaa3251d3fe3609a30f1d36d8265f6", "Url": "https://api.github.com/repos/Oznomal/PBB", "Date": "2018-12-13T02:12:34Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((browser) != null) browser.quit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3706/buggy-version/src.main.java.com.lamonzo.pbb.tasks.SubmitLightningBallot.java", "BodyUseAPI": [], "Fixed commit": "6979a7fd34aaa3251d3fe3609a30f1d36d8265f6", "Url": "https://api.github.com/repos/Oznomal/PBB", "Date": "2018-12-13T02:12:34Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.address.model.classroom.ClassroomManager.findAttendanceForClass(seedu.address.model.classroom.Classroom,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (attendance == null) { attendance = new seedu.address.model.classroom.Attendance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7179/buggy-version/src.main.java.seedu.address.logic.commands.ClassAddStudentAttendanceCommand.java", "BodyUseAPI": [], "Fixed commit": "ad01d6f57877d719122d0cd20c1680ca2b3ec154", "Url": "https://api.github.com/repos/CS2113-AY1819S1-T16-1/main", "Date": "2018-11-12T07:03:51Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (levelMax.equals(\"\")) levelMax = \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7415/buggy-version/climb-consumer.src.main.java.org.example.demo.climb.consumer.impl.SpotDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "ff79e5af9a85fd3a23a47de992d92f8e30eb8c68", "Url": "https://api.github.com/repos/xbreizh/climb", "Date": "2018-12-10T16:35:43Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (levelMin.equals(\"\")) levelMin = \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7415/buggy-version/climb-consumer.src.main.java.org.example.demo.climb.consumer.impl.SpotDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "ff79e5af9a85fd3a23a47de992d92f8e30eb8c68", "Url": "https://api.github.com/repos/xbreizh/climb", "Date": "2018-12-10T16:35:43Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { mFragmentManager.beginTransaction().replace(R.id.fragment_container, tech.joeyck.livefootball.ui.competition_detail.matches.MatchesFragment.newInstance(mViewModel.getCompetitionId(), mViewModel.getCompetitionName(), mViewModel.getMatchDay()), MatchesFragment.FRAGMENT_TAG).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1936/buggy-version/app.src.main.java.tech.joeyck.livefootball.ui.competition_detail.CompetitionActivity.java", "BodyUseAPI": [], "Fixed commit": "1755d430c529fa240dcd8fba7f18008a34e3d668", "Url": "https://api.github.com/repos/s6joui/football-data-android-java", "Date": "2018-12-01T11:07:15Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.dspace.app.xmlui.aspect.workflow.Submissions.datePriority) != null) { dateFields = org.dspace.app.xmlui.aspect.workflow.Submissions.datePriority.split(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7409/buggy-version/dspace.modules.xmlui.src.main.java.org.dspace.app.xmlui.aspect.workflow.Submissions.java", "BodyUseAPI": [], "Fixed commit": "7f0df6d367d6a17b323239f5ec724f9238013b48", "Url": "https://api.github.com/repos/kshepherd/DSpace", "Date": "2018-12-13T20:59:23Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.dspace.app.xmlui.aspect.workflow.Submissions.datePriority) != null) { dateFields = org.dspace.app.xmlui.aspect.workflow.Submissions.datePriority.split(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7409/buggy-version/dspace.modules.xmlui.src.main.java.org.dspace.app.xmlui.aspect.workflow.Submissions.java", "BodyUseAPI": [], "Fixed commit": "7f0df6d367d6a17b323239f5ec724f9238013b48", "Url": "https://api.github.com/repos/kshepherd/DSpace", "Date": "2018-12-13T20:59:23Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(imageurl.isEmpty())) { com.squareup.picasso.Picasso.get().load(imageurl).into(imageView); }else { imageView.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2792/buggy-version/app.src.main.java.com.example.arturolopez.fete.SpecificEventActivity.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.get().load(imageurl).into(android.widget.ImageView)", "com.squareup.picasso.Picasso.get().load(java.lang.String)"], "Fixed commit": "3470fb2ea76a083be43fb9d2c179322fd3b27b0b", "Url": "https://api.github.com/repos/alopez96/fete", "Date": "2018-12-01T03:06:58Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.searchbox.client.JestClient.execute(io.searchbox.core.Search)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(result.isSucceeded())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2200/buggy-version/app.src.main.java.ca.ualberta.t04.medicaltracker.Controller.ElasticSearchController.java", "BodyUseAPI": [], "Fixed commit": "39bcbf91e354ab3cbad8cc524fc4a1637368a269", "Url": "https://api.github.com/repos/CMPUT301F18T04/MedicalTracker", "Date": "2018-11-30T01:08:41Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.searchbox.client.JestClient.execute(io.searchbox.core.Get)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(result.isSucceeded())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2200/buggy-version/app.src.main.java.ca.ualberta.t04.medicaltracker.Controller.ElasticSearchController.java", "BodyUseAPI": [], "Fixed commit": "39bcbf91e354ab3cbad8cc524fc4a1637368a269", "Url": "https://api.github.com/repos/CMPUT301F18T04/MedicalTracker", "Date": "2018-11-30T01:08:41Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.getKey().equals(key)) return e.getValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/710/buggy-version/src.main.java.space.harbour.java.hw3.MyHashMap.java", "BodyUseAPI": ["space.harbour.java.hw3.Element<K, V>.getValue()"], "Fixed commit": "1a213564c571a5406f8e8c0e9375e7c937620b7e", "Url": "https://api.github.com/repos/evolushann/hs-java-programming", "Date": "2018-11-07T23:58:38Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hp) > 0) this.guns.peek().fireGun(owner, position, this.heading);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5174/buggy-version/src.main.java.starship.model.solids.Ship.java", "BodyUseAPI": [], "Fixed commit": "a9cf4c5aaf904fff7aa8034296122c3b8959062e", "Url": "https://api.github.com/repos/lautaropaske/starships", "Date": "2018-11-20T02:40:18Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hp) > 0) collisionable.accept(this.visitor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5174/buggy-version/src.main.java.starship.model.solids.Ship.java", "BodyUseAPI": [], "Fixed commit": "a9cf4c5aaf904fff7aa8034296122c3b8959062e", "Url": "https://api.github.com/repos/lautaropaske/starships", "Date": "2018-11-20T02:40:18Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hp) > 0) visitor.visit(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5174/buggy-version/src.main.java.starship.model.solids.Ship.java", "BodyUseAPI": [], "Fixed commit": "a9cf4c5aaf904fff7aa8034296122c3b8959062e", "Url": "https://api.github.com/repos/lautaropaske/starships", "Date": "2018-11-20T02:40:18Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<seedu.address.model.account.Account>.get(index.getZeroBased())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (accountToEdit.getUsername().toString().equals(model.getLoggedInUser())) { model.setLoggedInUser(editedAccount.getUsername()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5242/buggy-version/src.main.java.seedu.address.logic.commands.EditAccountCommand.java", "BodyUseAPI": ["seedu.address.model.Model.setLoggedInUser(editedAccount.getUsername())"], "Fixed commit": "0db72ec41c953e8c27e4a7433908c3dda78633c0", "Url": "https://api.github.com/repos/CS2113-AY1819S1-T12-3/main", "Date": "2018-11-11T13:57:42Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.quartz.CronExpression.getNextValidTimeAfter(java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (nextDate == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8991/buggy-version/commons.commons-util.src.main.java.com.thinkbiganalytics.scheduler.util.CronExpressionUtil.java", "BodyUseAPI": [], "Fixed commit": "f6d2405c0ed3a0c6128c0248f63b90f6fb98a77e", "Url": "https://api.github.com/repos/Teradata/kylo", "Date": "2018-11-01T23:45:28Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (errors.hasErrors()) { model.addAttribute(\"title\", \"We Have Errors\"); model.addAttribute(\"jobForm\", jobForm); return \"new-job\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5340/buggy-version/src.main.java.org.launchcode.controllers.JobController.java", "BodyUseAPI": [], "Fixed commit": "be3811ded2994a9134cd71b03b19d9b74bb72ec7", "Url": "https://api.github.com/repos/wecongo/techjobs-oo", "Date": "2018-12-06T00:07:53Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(event.isCanceled())) { net.minecraft.tileentity.TileEntity tile = world.getTileEntity(pos); net.minecraft.block.Block block = oldState.getBlock(); if (block.removedByPlayer(oldState, world, pos, playerMP, true)) { block.onPlayerDestroy(world, pos, oldState); block.harvestBlock(world, playerMP, pos, oldState, tile, null); }else world.setBlockToAir(pos); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4822/buggy-version/src.main.java.com.teamwizardry.wizardry.api.util.BlockUtils.java", "BodyUseAPI": [], "Fixed commit": "21e2a3ec7a7e252b171f47328b047b2d54b0c82b", "Url": "https://api.github.com/repos/TeamWizardry/Wizardry", "Date": "2018-12-23T22:46:14Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((partner) != null) { partner.chatMembers.put(currUser.getUid(), chatId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3592/buggy-version/app.src.main.java.cs407.socialkarmaapp.ChatMessagesActivity.java", "BodyUseAPI": [], "Fixed commit": "7faefa30d4da6cad126dbd766471ab9ae78f0103", "Url": "https://api.github.com/repos/jackielwu/SocialKarma", "Date": "2018-12-06T02:19:41Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.smith.cs.csc212.p8.CharTrie.Node.getLinkIndex(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (link == (-1)) { throw new java.lang.RuntimeException((\"Bad Character: \" + c)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4090/buggy-version/src.main.java.edu.smith.cs.csc212.p8.CharTrie.java", "BodyUseAPI": [], "Fixed commit": "6b67c8d2bae06b27a32b717065d5df1d2a810ec3", "Url": "https://api.github.com/repos/jjfiv/CSC212P8", "Date": "2018-11-12T21:00:43Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.smith.cs.csc212.p8.CharTrie.Node.getLinkIndex(java.lang.Character)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (link == (-1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4090/buggy-version/src.main.java.edu.smith.cs.csc212.p8.CharTrie.java", "BodyUseAPI": [], "Fixed commit": "6b67c8d2bae06b27a32b717065d5df1d2a810ec3", "Url": "https://api.github.com/repos/jjfiv/CSC212P8", "Date": "2018-11-12T21:00:43Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((day == 30) && (month == 2)) && ((year % 4) == 0)) { month += 1; day = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3729/buggy-version/Q10-20.EulerQ19.java", "BodyUseAPI": [], "Fixed commit": "c6214ae912446ebfdd771b33e6211309008fac0e", "Url": "https://api.github.com/repos/PeterGlass/ProjectEuler", "Date": "2018-12-19T08:05:23Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((day == 29) && (month == 2)) && ((year % 4) != 0)) { month += 1; day = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3729/buggy-version/Q10-20.EulerQ19.java", "BodyUseAPI": [], "Fixed commit": "c6214ae912446ebfdd771b33e6211309008fac0e", "Url": "https://api.github.com/repos/PeterGlass/ProjectEuler", "Date": "2018-12-19T08:05:23Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.colostate.cs.cs414.StringCheese.src.ChessBoard.getInnerRing()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((index - offset) == (innerRing.size())) { legalMoves.add(innerRing.get(0)); }else { legalMoves.add(innerRing.get((index - offset))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8648/buggy-version/edu.colostate.cs.cs414.StringCheese.src.ChessPiece.java", "BodyUseAPI": ["java.util.HashSet<java.lang.String>.add(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.HashSet<java.lang.String>.add(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "927a59b6e26660431f808e65cc631be30d2f42b2", "Url": "https://api.github.com/repos/Chris-Schaffer/cs414-f18-001-stringCheese", "Date": "2018-11-06T23:52:05Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (events != null) { items = events.getItems(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/674/buggy-version/Server.src.main.java.tobbit.movieproject.service.CalendarService.java", "BodyUseAPI": ["tobbit.movieproject.service.Events.getItems()"], "Fixed commit": "97faa352235b28a81b085cf167165cd2b5369344", "Url": "https://api.github.com/repos/KENUBBE/MovieProject", "Date": "2018-12-21T03:42:21Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((kinoDto.getTmdbKinoId()) != null) { tmdbKinoRepository.createOrUpdate(localKino.getKino()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5131/buggy-version/app.src.main.java.com.ulicae.cinelog.data.KinoService.java", "BodyUseAPI": [], "Fixed commit": "6c1a37d6145dc2348947ce1ecc59689069e21901", "Url": "https://api.github.com/repos/Alcidauk/CineLog", "Date": "2018-11-29T17:02:45Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((conversation) == null) { showToast(\"\u804a\u5929\u521d\u59cb\u5316\u5931\u8d25\"); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3286/buggy-version/app.src.main.java.com.mean.meanchateasemobapi.ChatActivity.java", "BodyUseAPI": [], "Fixed commit": "82abedef09739c878815719ef6ba95fd8de47811", "Url": "https://api.github.com/repos/meanfan/MeanChatAndroid-use3rdAPI", "Date": "2018-12-21T11:29:54Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFavDisplayed) { event_adapter = new ch.epfl.sweng.zuluzulu.Adapters.EventArrayAdapter(getContext(), event_fav, mListener, user); }else { event_adapter = new ch.epfl.sweng.zuluzulu.Adapters.EventArrayAdapter(getContext(), event_all, mListener, user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5087/buggy-version/app.src.main.java.ch.epfl.sweng.zuluzulu.Fragments.EventFragment.java", "BodyUseAPI": [], "Fixed commit": "de522abf608de57c139266021162ccd0272238e6", "Url": "https://api.github.com/repos/njomeau/EPFLife", "Date": "2018-11-26T16:21:43Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (customNatureCollector.isEmpty()) { for (int i = (Nature.begin.ordinal()) + 1; i < (com.hankcs.hanlp.corpus.tag.Nature.values().length); ++i) { customNatureCollector.add(com.hankcs.hanlp.corpus.tag.Nature.values()[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/997/buggy-version/src.main.java.com.hankcs.hanlp.dictionary.CustomDictionary.java", "BodyUseAPI": ["java.util.LinkedHashSet<com.hankcs.hanlp.corpus.tag.Nature>.add(com.hankcs.hanlp.corpus.tag.Nature.values()[i])"], "Fixed commit": "9acb8c4a427847264fa04964cfb8fdae4db1bfd8", "Url": "https://api.github.com/repos/hankcs/HanLP", "Date": "2018-11-24T17:18:24Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.anbang.qipai.dianpaomajiang.cqrs.c.domain.DianpaoMajiangJiesuanCalculator.isValid(shoupaiPaiXing, true))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1649/buggy-version/src.main.java.com.anbang.qipai.dianpaomajiang.cqrs.c.domain.DianpaoMajiangJiesuanCalculator.java", "BodyUseAPI": [], "Fixed commit": "51fe3e1e4c2813f239409ccf41cbda5ad7ea1f78", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_dianpaomajiang", "Date": "2018-11-10T07:40:20Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((first) == (items.length)) { first = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1912/buggy-version/proj1a.ArrayDeque.java", "BodyUseAPI": [], "Fixed commit": "20a0a497ef176f7d08427639b00fcb896c5d20cf", "Url": "https://api.github.com/repos/stevefarra/cs61b", "Date": "2018-11-16T17:34:26Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ij.plugin.frame.Recorder.getInstance()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5999/buggy-version/src.main.java.net.haesleinhuepf.imagej.macro.AbstractCLIJPlugin.java", "BodyUseAPI": [], "Fixed commit": "e902a6640b87a25886992522a78891fa63e79139", "Url": "https://api.github.com/repos/haesleinhuepf/clearclij", "Date": "2018-12-23T23:02:55Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(select.isReady())) java.lang.System.exit(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/807/buggy-version/src.logic.Main.java", "BodyUseAPI": [], "Fixed commit": "183a3411ce02ee5876023e2f185040869d1bb3d2", "Url": "https://api.github.com/repos/sprkzoff/game-proj", "Date": "2018-11-25T10:52:12Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (question != null) { questionView.setText(question.getQuestion()); answerView.setVisibility(View.INVISIBLE); answerView.setText(question.getAnswer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9704/buggy-version/app.src.main.java.com.dglapps.fiestadelarbol.fragments.CategoryFragment.java", "BodyUseAPI": ["com.dglapps.fiestadelarbol.domain.Question.getAnswer()", "com.dglapps.fiestadelarbol.domain.Question.getQuestion()", "android.widget.TextView.setText(question.getQuestion())", "android.widget.TextView.setText(question.getAnswer())"], "Fixed commit": "92eb617e2a86bad3eb6ca98d8d33b214ded201ea", "Url": "https://api.github.com/repos/dann41/FiestaDelArbol", "Date": "2018-12-26T20:03:23Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((postType) == 1) { convertView = inflater.inflate(R.layout.lv_item_filter, parent, false); }else { convertView = inflater.inflate(R.layout.lv3_item_filter, parent, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/434/buggy-version/common_base.src.main.java.com.wb.baselib.adapter.SimpleTextAdapter.java", "BodyUseAPI": [], "Fixed commit": "29e9ed33e90dc9f10105de7fa2479ab695f24937", "Url": "https://api.github.com/repos/w513209188/BaseLib", "Date": "2018-11-12T03:45:39Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((fieldClass.length()) < 2) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2027/buggy-version/plugin.src.main.java.com.sbrf.meta.plugin.dto.api.Dto.java", "BodyUseAPI": [], "Fixed commit": "b2e1b93e5b7980e9278d2258bf35b69191dbccf8", "Url": "https://api.github.com/repos/intet/meta-plugin", "Date": "2018-10-02T11:50:52Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.powsybl.iidm.network.impl.VariantManagerImpl.LOGGER.isTraceEnabled()) { com.powsybl.iidm.network.impl.VariantManagerImpl.LOGGER.trace(\"Recycling variant array indexes {}\", java.util.Arrays.toString(indexes)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/603/buggy-version/iidm.iidm-impl.src.main.java.com.powsybl.iidm.network.impl.VariantManagerImpl.java", "BodyUseAPI": ["org.slf4j.Logger.trace(java.lang.String,java.lang.String)"], "Fixed commit": "c426376fbc73e85abcbbd26561450be8c2e6e003", "Url": "https://api.github.com/repos/powsybl/powsybl-core", "Date": "2018-12-04T14:20:18Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (length < 0.1) { this.calculateLengthFromGeometry(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7628/buggy-version/src.main.java.org.opentripplanner.routing.edgetype.StreetWithElevationEdge.java", "BodyUseAPI": [], "Fixed commit": "1818955669c2f35e8dab12d6ab1957e9ee21fba4", "Url": "https://api.github.com/repos/HSLdevcom/OpenTripPlanner", "Date": "2018-11-09T14:31:25Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<java.lang.Integer>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(values.isEmpty())) && ((values.peek()) != curr)) { valueMap.remove(curr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4373/buggy-version/src.com.allenanker.niuke_advanced_lesson.ClosestBigger.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.util.ArrayList<java.lang.Integer>>.remove(int)"], "Fixed commit": "49fd3153a5d82c1ff3fbc02d041426a54353e089", "Url": "https://api.github.com/repos/TheAllenAnker/ForOffers", "Date": "2018-11-25T14:13:01Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request) != null) { request.post(map); request = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7427/buggy-version/QQPermission.src.main.java.com.gengqiquan.permission.QQFragment.java", "BodyUseAPI": [], "Fixed commit": "c757d51dd5973094add05a84cc3a780b8f7ca9ea", "Url": "https://api.github.com/repos/gengqiquan/QQPermission", "Date": "2018-11-21T08:18:28Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.vertx.core.json.JsonObject.getJsonArray(java.lang.String,fr.wseduc.webutils.collections.JsonArray)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ids.contains(user.getUserId())) unread = \"true\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4340/buggy-version/conversation.src.main.java.org.entcore.conversation.service.impl.SqlConversationService.java", "BodyUseAPI": [], "Fixed commit": "fa4c127891ba295bdc00d68c77aa1c893a56896d", "Url": "https://api.github.com/repos/opendigitaleducation/entcore", "Date": "2018-11-15T15:55:00Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((smeId.longValue()) < 0) smeId = new java.lang.Long((-(smeId.longValue())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6293/buggy-version/src.server.repository.RepositoryChecker.java", "BodyUseAPI": ["java.lang.Long.longValue()"], "Fixed commit": "3c5b2217da25f13a2ae87a4c093c7989eb58fc00", "Url": "https://api.github.com/repos/schedulix/schedulix", "Date": "2018-12-19T12:59:18Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!actedThisTurn) { if (temp.equals(\"rehearse\")) { return temp; }else if (temp.equals(\"act\")) { return temp; }else { java.lang.System.out.printf(\"%s is unable to %s%n\", name, temp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/129/buggy-version/GameManager.java", "BodyUseAPI": [], "Fixed commit": "00c21721abcd20adaf768ac399149e950c5187a6", "Url": "https://api.github.com/repos/mfadaie/CSCI-345", "Date": "2018-11-17T03:10:04Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.IExtensionHelpers.indexOf(byte[],byte[],boolean,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (headersEnd == (-1)) { headersEnd = request.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1317/buggy-version/src.model.SentinelHttpRequest.java", "BodyUseAPI": [], "Fixed commit": "59f06b9c8ab00cf8224c085b7b64fdd01a311207", "Url": "https://api.github.com/repos/skirge/BurpSentinel", "Date": "2018-11-14T22:14:55Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, org.zkoss.poi.ss.formula.FormulaComputationStatusManager.FormulaComputationStatus>.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (formulaComputationStatus != null) { formulaComputationStatus.currentCells = currentCells; while ((formulaComputationStatus.priority) > (org.zkoss.poi.ss.formula.FormulaComputationStatusManager.minPriority)) { try { java.lang.System.out.println(((java.lang.Thread.currentThread().getId()) + \" Waiting \")); wait(); java.lang.System.out.println(((java.lang.Thread.currentThread().getId()) + \" Waiting over \")); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6230/buggy-version/zpoi.src.org.zkoss.poi.ss.formula.FormulaComputationStatusManager.java", "BodyUseAPI": [], "Fixed commit": "a927aabbac555823544f1efca1b04f516f49bdd0", "Url": "https://api.github.com/repos/dataspread/dataspread-web", "Date": "2018-12-15T14:22:14Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(hasFocus)) && (!(android.text.TextUtils.isEmpty(s)))) { startAnimator(1, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5523/buggy-version/library.src.main.java.com.james602152002.floatinglabeledittext.FloatingLabelEditText.java", "BodyUseAPI": [], "Fixed commit": "ffbd0f026cd051cfc63db6e5a372a0a2aa59a6ad", "Url": "https://api.github.com/repos/james602152002/FloatingLabelEditText", "Date": "2018-11-06T02:18:56Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shutdown) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7735/buggy-version/monitor.src.main.java.bisq.monitor.metric.Metric.java", "BodyUseAPI": [], "Fixed commit": "084e04912aaa44aa271574770d7e5587ad0d5829", "Url": "https://api.github.com/repos/freimair/bisq", "Date": "2018-12-18T14:03:25Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.current.getName().equals(\"cave\")) && ((this.current.mob) != null)) this.current.hasEnemy = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/653/buggy-version/src.com.labc.Vermellion.Character.java", "BodyUseAPI": [], "Fixed commit": "1252c7785fa2b08aa7ae8ad29040d2fdbd91ddc5", "Url": "https://api.github.com/repos/Nleovidia1514/Vermellion", "Date": "2018-11-25T20:32:48Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diff == null) { return code; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/277/buggy-version/src.main.java.cn.edu.pku.sei.intellide.graph.qa.code_trace.CommitSearch.java", "BodyUseAPI": [], "Fixed commit": "1b23ba42f13d83b8266b9cb1c6ce0c85088afbb5", "Url": "https://api.github.com/repos/pkupxl/intellide-graph", "Date": "2018-12-24T10:11:12Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nottheory.donationtracker.Model.Account.sqlAllInfo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sqlAllInfo == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2635/buggy-version/app.src.main.java.nottheory.donationtracker.Model.LoginManager.java", "BodyUseAPI": [], "Fixed commit": "1f31248e11a9f9a81d3f1b7d90ebfce3c2f8ee9c", "Url": "https://api.github.com/repos/quantumelf/Not-Theory-Donation-Tracker-Project", "Date": "2018-11-15T04:41:35Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(oi.stick.getRawAxis(ROTATION_AXIS))) < 0.1) { rotationInput = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6109/buggy-version/src.com.frc3322.commands.DriveControl.java", "BodyUseAPI": [], "Fixed commit": "d59c63f6a0eaa5d6aa3b05a6e52cba2674b4fe4a", "Url": "https://api.github.com/repos/frc3322/WAPUR-2018", "Date": "2018-12-01T20:52:19Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(oi.stick.getRawAxis(VERTICAL_AXIS))) < 0.1) { verticalInput = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6109/buggy-version/src.com.frc3322.commands.DriveControl.java", "BodyUseAPI": [], "Fixed commit": "d59c63f6a0eaa5d6aa3b05a6e52cba2674b4fe4a", "Url": "https://api.github.com/repos/frc3322/WAPUR-2018", "Date": "2018-12-01T20:52:19Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(oi.stick.getRawAxis(HORIZONTAL_AXIS))) < 0.1) { horizontalInput = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6109/buggy-version/src.com.frc3322.commands.DriveControl.java", "BodyUseAPI": [], "Fixed commit": "d59c63f6a0eaa5d6aa3b05a6e52cba2674b4fe4a", "Url": "https://api.github.com/repos/frc3322/WAPUR-2018", "Date": "2018-12-01T20:52:19Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((whiteSpaceIndexInList + 1) == (listOfWordsOnPage.size())) { wordToBeReplaced += \" \"; }else { wordToBeReplaced += \" \" + (listOfWordsOnPage.get((whiteSpaceIndexInList + 1))); listOfWordsOnPage.remove((whiteSpaceIndexInList + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7342/buggy-version/pencil-durability-pillar.src.main.java.com.main.Paper.java", "BodyUseAPI": ["java.util.List<java.lang.String>.remove(int)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "0839699b6c4e12bd1311c15b252cd656284f506f", "Url": "https://api.github.com/repos/awhite6/pillar-kata", "Date": "2018-12-10T01:00:09Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((playerConfig.getString(p.getUniqueId().toString())) == \"\") { displayName = p.getName(); }else { displayName = playerConfig.getString(p.getUniqueId().toString(), \", \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6310/buggy-version/src.main.java.me.senroht.bdn.Main.java", "BodyUseAPI": ["net.md_5.bungee.api.connection.ProxiedPlayer.getUniqueId()", "net.md_5.bungee.config.Configuration.getString(p.getUniqueId().toString(),java.lang.String)", "net.md_5.bungee.api.connection.ProxiedPlayer.getName()", "p.getUniqueId().toString()"], "Fixed commit": "4074760cf1396b7ebf5eda1a2fa6ed9345b03d73", "Url": "https://api.github.com/repos/Nesroht/BungeeDisplayName", "Date": "2018-12-17T15:22:08Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((main.playerConfig.get(e.getPlayer().getUniqueId().toString())) != \"null\") { main.getLogger().info((((\"Player (\" + (e.getPlayer())) + \") logged in with display name of: \") + (main.playerConfig.get(e.getPlayer().getUniqueId().toString())))); }else { main.getLogger().info(((\"Player (\" + (e.getPlayer())) + \") logged in with no set display name\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6310/buggy-version/src.main.java.me.senroht.bdn.Listener.java", "BodyUseAPI": ["e.getPlayer().getUniqueId().toString()", "e.getPlayer().getUniqueId()", "main.getLogger().info((((\"Player (\" + (e.getPlayer())) + \") logged in with display name of: \") + (main.playerConfig.get(e.getPlayer().getUniqueId().toString()))))", "me.senroht.bdn.Main.getLogger()", "net.md_5.bungee.api.event.ServerConnectedEvent.getPlayer()", "me.senroht.bdn.Main.getLogger()", "main.playerConfig.get(e.getPlayer().getUniqueId().toString())", "net.md_5.bungee.api.event.ServerConnectedEvent.getPlayer()", "main.getLogger().info(((\"Player (\" + (e.getPlayer())) + \") logged in with no set display name\"))", "net.md_5.bungee.api.event.ServerConnectedEvent.getPlayer()"], "Fixed commit": "4074760cf1396b7ebf5eda1a2fa6ed9345b03d73", "Url": "https://api.github.com/repos/Nesroht/BungeeDisplayName", "Date": "2018-12-17T15:22:08Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hciadk.apartmenthunters.apartments.ApartmentEditActivity.findViewById(R.id.price_text_edit)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(priceField.getText().toString().equals(\"\"))) { java.lang.String priceTyped = priceField.getText().toString(); int price = java.lang.Integer.valueOf(priceTyped); android.util.Log.d(\"price\", (price + \"\")); editor.putInt(\"price\", price); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7949/buggy-version/app.src.main.java.hciadk.apartmenthunters.apartments.ApartmentEditActivity.java", "BodyUseAPI": ["android.support.design.widget.TextInputEditText.getText()", "priceField.getText().toString()"], "Fixed commit": "45d92ce394b78613c381b7cfb88d90ca1cb973ac", "Url": "https://api.github.com/repos/dorothysyu/apartmentHunters", "Date": "2018-11-29T07:54:16Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((y) > 185) && (!(died))) { MarioWorldState.world.stopMusic(); Game.gamepanel.gsm.setState(GameStateManager.MARIOWORLD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/270/buggy-version/ArcadeDesktop.src.SuperMarioBros.Player.java", "BodyUseAPI": [], "Fixed commit": "dce077cad33cab882fd7e350aff25411e0f0c14e", "Url": "https://api.github.com/repos/TomDiekmann/ArcadeProject", "Date": "2018-12-11T21:50:02Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (util.Catalog.buildIndex) { if ((java.lang.Integer.valueOf(fi[2])) == 1) { util.Tools.sortByIndex(fi[0]); } int index = util.Catalog.schema_map.get(fi[0]).indexOf(fi[1]); util.IndexBuilder ib = new util.IndexBuilder(util.Catalog.getTableFiles(fi[0]), index, java.lang.Integer.valueOf(fi[3])); ib.leafNodes(); ib.IndexNodes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4616/buggy-version/Project3.src.util.Catalog.java", "BodyUseAPI": [], "Fixed commit": "01b074b2222502e87b2f76819bf34633aab0f1db", "Url": "https://api.github.com/repos/Alexcyx/CS4321-Project", "Date": "2018-11-06T21:12:10Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEncrypted) { this.password = password; }else { this.password = ecommerce.tools.Utils.encryptPassword(password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9217/buggy-version/src.java.ecommerce.struts.LoginAction.java", "BodyUseAPI": [], "Fixed commit": "4e1ff6fb56c214f2ad30e9fec99257c4687133b7", "Url": "https://api.github.com/repos/dinhphu951998/ECommerce", "Date": "2018-12-05T06:28:14Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mediaPlayer) != null) { mediaPlayer.seekTo(0); mediaPlayer.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1702/buggy-version/app.src.main.java.com.example.es1294.airmusic.musicPlayer.java", "BodyUseAPI": [], "Fixed commit": "eab2b05a904b9d01b163462a25e77bc1342ec7f8", "Url": "https://api.github.com/repos/es1294/AirMusic", "Date": "2018-12-03T17:52:45Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nuxeo.ecm.automation.core.util.Paginable<?>.getActiveQuickFilters()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (qfs == null) { qfs = java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4133/buggy-version/nuxeo-core.nuxeo-core-io.src.main.java.org.nuxeo.ecm.core.io.marshallers.json.DefaultListJsonWriter.java", "BodyUseAPI": [], "Fixed commit": "7011a4f8b6abbca114e90efdebeb2192127680cc", "Url": "https://api.github.com/repos/nuxeo/nuxeo", "Date": "2018-12-21T15:49:12Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchString == null) || (Constants.EMPTY.equals(searchString))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/372/buggy-version/app.src.main.java.com.bothsunny.dictionary.domain.dictionary.TextDictionary.java", "BodyUseAPI": [], "Fixed commit": "871df25c39c383e7c7b69828ba16234a7e6376da", "Url": "https://api.github.com/repos/bothsunny/KDictionary", "Date": "2018-12-15T12:09:29Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state.equals(org.metafacture.biblio.marc21.Marc21Encoder.State.IN_FIELD_ENTITY)) { builder.endDataField(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6701/buggy-version/metafacture-biblio.src.main.java.org.metafacture.biblio.marc21.Marc21Encoder.java", "BodyUseAPI": [], "Fixed commit": "4d0df2229a4e573ffc5ce81ac281859ce1e1c59c", "Url": "https://api.github.com/repos/metafacture/metafacture-core", "Date": "2018-12-19T13:03:54Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"December\".equalsIgnoreCase(billMonth)) { billYear = java.lang.String.valueOf(((java.lang.Integer.parseInt(billYear)) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2452/buggy-version/src.main.java.com.primetime.util.BillingUtils.java", "BodyUseAPI": [], "Fixed commit": "c0c0788388955e6bb072e02d58b00c85915cc0e1", "Url": "https://api.github.com/repos/ramanimukesh/backend", "Date": "2018-12-29T01:47:01Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fieldType.equals(java.sql.Timestamp.class.getName())) { tmpFieldsType[i] = java.sql.Types.TIMESTAMP; }else if (fieldType.equals(java.math.BigDecimal.class.getName())) { tmpFieldsType[i] = java.sql.Types.DECIMAL; }else { throw new java.lang.RuntimeException((\"no support field type for sql. the input type:\" + fieldType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9828/buggy-version/mysql.mysql-sink.src.main.java.com.dtstack.flink.sql.sink.mysql.DBSink.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "86af0ec838569446699f5a209be60de2d33b54a9", "Url": "https://api.github.com/repos/DTStack/flinkStreamSQL", "Date": "2018-11-23T13:31:32Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (remainingPeople > 0) { shortestPaths = EncontrarAgua.getShortestPathsToBathroomsFor(caseGraph, origin); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9567/buggy-version/src.EncontrarAgua.java", "BodyUseAPI": [], "Fixed commit": "073ae49aed4dcb4328476dab0623e5d735a36e8e", "Url": "https://api.github.com/repos/El-Team/Lab-Algo-3-Proyecto-2", "Date": "2018-11-21T15:58:33Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.lucene.search.TopDocs.getMaxScore()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((scoreDoc.score) / maxscore) > 0.5) { java.lang.String filename = doc.get(\"filename\"); filelist.add(filename); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8356/buggy-version/src.quaryService.Searcher.java", "BodyUseAPI": [], "Fixed commit": "d1f7048d95e49cdaa05f15ebe0951f4097d1dfe7", "Url": "https://api.github.com/repos/Sword-holder/queryService", "Date": "2018-11-04T02:42:46Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(NavigationApplication.instance.clearHostOnActivityDestroy())) { this.moveTaskToBack(true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2458/buggy-version/android.app.src.main.java.com.reactnativenavigation.controllers.NavigationActivity.java", "BodyUseAPI": [], "Fixed commit": "a1980e8eac9356576fee7aa73b8d40c14d44e6cf", "Url": "https://api.github.com/repos/xvonabur/react-native-navigation", "Date": "2018-04-20T08:32:31Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (layout.onBackPressed()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2458/buggy-version/android.app.src.main.java.com.reactnativenavigation.controllers.NavigationActivity.java", "BodyUseAPI": [], "Fixed commit": "a1980e8eac9356576fee7aa73b8d40c14d44e6cf", "Url": "https://api.github.com/repos/xvonabur/react-native-navigation", "Date": "2018-04-20T08:32:31Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(NavigationApplication.instance.clearHostOnActivityDestroy())) { this.moveTaskToBack(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2458/buggy-version/android.app.src.main.java.com.reactnativenavigation.controllers.NavigationActivity.java", "BodyUseAPI": [], "Fixed commit": "a1980e8eac9356576fee7aa73b8d40c14d44e6cf", "Url": "https://api.github.com/repos/xvonabur/react-native-navigation", "Date": "2018-04-20T08:32:31Z"},
{"Line": "=>785", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof com.archimatetool.model.IDiagramModelArchimateObject) model = ((com.archimatetool.model.IDiagramModelArchimateObject) (obj)).getArchimateConcept().getArchimateModel(); else if (obj instanceof com.archimatetool.model.IArchimateModelObject) model = ((com.archimatetool.model.IArchimateModelObject) (obj)).getArchimateModel(); else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4605/buggy-version/sources.src.org.archicontribs.specialization.SpecializationPlugin.java", "BodyUseAPI": [], "Fixed commit": "920ed5d4fc38082c6df532bc022cdae9af9a4123", "Url": "https://api.github.com/repos/audreykoz/specialization-plugin", "Date": "2018-10-23T21:23:40Z"},
{"Line": "=>1073", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof com.archimatetool.model.IDiagramModelArchimateObject) model = ((com.archimatetool.model.IDiagramModelArchimateObject) (obj)).getArchimateConcept().getArchimateModel(); else if (obj instanceof com.archimatetool.model.IArchimateModelObject) model = ((com.archimatetool.model.IArchimateModelObject) (obj)).getArchimateModel(); else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4605/buggy-version/sources.src.org.archicontribs.specialization.SpecializationPlugin.java", "BodyUseAPI": [], "Fixed commit": "920ed5d4fc38082c6df532bc022cdae9af9a4123", "Url": "https://api.github.com/repos/audreykoz/specialization-plugin", "Date": "2018-10-23T21:23:40Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonResult instanceof org.json.JSONObject) { write(jsonResult.toString()); }else { write(gson.toJson(jsonResult)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7737/buggy-version/src.main.java.net.reflxction.simplejson.json.JsonWriter.java", "BodyUseAPI": ["net.reflxction.simplejson.json.JsonWriter.write(java.lang.String)", "java.lang.Object.toString()", "net.reflxction.simplejson.json.JsonWriter.write(gson.toJson(jsonResult))", "com.google.gson.Gson.toJson(java.lang.Object)"], "Fixed commit": "27bce8548e5d8d3ff958b091de709e91bd4e22fb", "Url": "https://api.github.com/repos/ReflxctionDev/SimpleJSON", "Date": "2018-11-17T19:42:02Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["theme.getValue().getThemeRoleData().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (name != null) { names.put(theme.getKey(), name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2628/buggy-version/src.main.java.io.github.jroy.happybot.theme.DiscordThemerImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(theme.getKey(),java.lang.String)"], "Fixed commit": "80b60149941bb9c1f6502579b2b7a0a8d2d1b2f5", "Url": "https://api.github.com/repos/JRoy/happybot", "Date": "2018-12-01T20:11:46Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (imageDir == null) { image = null; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8868/buggy-version/src.Vehicle.Vehicle.java", "BodyUseAPI": [], "Fixed commit": "8604c779615a63f68838d422f789bac825989d6f", "Url": "https://api.github.com/repos/theowiik/TDA552_Labb5", "Date": "2018-12-12T15:15:13Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.nju.network.campusqa.service.QuestionService.queryQuestionDetails(entity.getQuestionId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (question != null) { myAllAnswerVO.setQuestionTitle(question.getTitle()); edu.nju.network.campusqa.entity.UserInfo userInfo = userService.findUserInfoByOwnerId(entity.getOwnerId()); myAllAnswerVO.setNickName(userInfo.getNickName()); myAllAnswerVO.setAvatarUrl(userInfo.getAvatarUrl()); myAllAnswerVO.setCreatedDate(entity.getCreatedDate().toString(\"yyyy-MM-dd HH:mm:ss\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5461/buggy-version/src.main.java.edu.nju.network.campusqa.web.wrapper.Answer2AnswerVOWrapper.java", "BodyUseAPI": ["edu.nju.network.campusqa.entity.Question.getTitle()", "edu.nju.network.campusqa.web.vo.MyAllAnswerVO.setQuestionTitle(question.getTitle())"], "Fixed commit": "2b2655af50b8596e3751a5f9d8f2623f0b0f48cb", "Url": "https://api.github.com/repos/DmuMenDuo/campusqa", "Date": "2018-12-18T01:09:25Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()", "java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (alarm.before(now)) alarm.add(java.util.Calendar.DAY_OF_MONTH, 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8128/buggy-version/app.src.main.java.com.example.adityakhairari.alarm.MainActivity.java", "BodyUseAPI": ["java.util.Calendar.add(int,int)"], "Fixed commit": "4128b1b418c0ed99996cba6de95f18c06536efed", "Url": "https://api.github.com/repos/AdityaKhairari/get_woke", "Date": "2018-12-10T15:50:01Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!checkFile) { com.taobao.arthas.common.AnsiLog.error(\"cannot create directory {}: Permission denied\", com.taobao.arthas.boot.Bootstrap.ARTHAS_LIB_DIR.getAbsolutePath()); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8250/buggy-version/boot.src.main.java.com.taobao.arthas.boot.Bootstrap.java", "BodyUseAPI": [], "Fixed commit": "69fd1ce0546121f5b490e03f34d8a02c5e3a0328", "Url": "https://api.github.com/repos/garenchan/arthas", "Date": "2018-12-20T09:37:42Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state.getBlock()) != (net.minecraft.block.Block.getBlockFromItem(ic2.api.item.IC2Items.getItem(\"rubber_wood\").getItem()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4031/buggy-version/src.main.java.techreborn.compatmod.ic2.IC2Module.java", "BodyUseAPI": [], "Fixed commit": "5ad8a06abe83c44514f24c93c78dd96c98ac2a73", "Url": "https://api.github.com/repos/TechReborn/TechReborn-ModCompatibility", "Date": "2018-12-20T11:12:20Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activePlayers.contains(player)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5180/buggy-version/src.online.fireflower.server_tours.ServerTourInfo.java", "BodyUseAPI": [], "Fixed commit": "2a640c349981ffe5c0162f8f21cb8c6ad6d3f006", "Url": "https://api.github.com/repos/Exeton/ServerTours", "Date": "2018-12-12T05:31:28Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 0) commandSender.sendMessage(\"Usage /ST <tourName> start Notch\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5180/buggy-version/src.online.fireflower.server_tours.commands.tourCommands.STStartTour.java", "BodyUseAPI": [], "Fixed commit": "2a640c349981ffe5c0162f8f21cb8c6ad6d3f006", "Url": "https://api.github.com/repos/Exeton/ServerTours", "Date": "2018-12-12T05:31:28Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((queryTokens[((queryTokens.length) - 1)].length()) >= 4) { queryString.append(\"*\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2591/buggy-version/inception-concept-linking.src.main.java.de.tudarmstadt.ukp.inception.conceptlinking.util.QueryUtil.java", "BodyUseAPI": [], "Fixed commit": "ce6f5373afd6646f211171ffbd633d305f9bb29e", "Url": "https://api.github.com/repos/inception-project/inception", "Date": "2018-11-23T09:54:17Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Float.parseFloat(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((deposited_amount.floatValue()) > 0) { Users[current_user_index].balance = (Users[current_user_index].balance.floatValue()) + (deposited_amount.floatValue()); dos.writeUTF(((\"your new balance is: \" + (Users[current_user_index].balance)) + \" \\n press enter to continue.\")); }else { dos.writeUTF(\"ERROR: You entered a negative number or a zero. \\n press enter to continue.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/824/buggy-version/echoserver_ds.src.echoserver_ds.clientHandler.java", "BodyUseAPI": ["java.lang.Number.floatValue()"], "Fixed commit": "b59d4288aa7c1791a3bf837d7051f153611c4bfc", "Url": "https://api.github.com/repos/BestJavaTeam2018/paymentsystem", "Date": "2018-11-08T06:50:20Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Float.parseFloat(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((withdrawn_amount.floatValue()) > 0) { if ((withdrawn_amount.floatValue()) <= (Users[current_user_index].balance.floatValue())) { Users[current_user_index].balance = (Users[current_user_index].balance.floatValue()) - (withdrawn_amount.floatValue()); dos.writeUTF(((\"your new balance is: \" + (Users[current_user_index].balance)) + \" \\n press enter to continue.\")); }else { dos.writeUTF(\"ERROR: Withdrawn amount is bigger than the current balance. \\n press enter to continue.\"); } }else { dos.writeUTF(\"ERROR: You entered a negative number or a zero. \\n press enter to continue.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/824/buggy-version/echoserver_ds.src.echoserver_ds.clientHandler.java", "BodyUseAPI": ["java.lang.Number.floatValue()", "java.lang.Number.floatValue()"], "Fixed commit": "b59d4288aa7c1791a3bf837d7051f153611c4bfc", "Url": "https://api.github.com/repos/BestJavaTeam2018/paymentsystem", "Date": "2018-11-08T06:50:20Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (notifyEvent != null) sk.henrichg.phoneprofilesplus.PPApplication.logE(\"$$$ EventsHandler.handleEvents\", (\"notifyEventStart=\" + (notifyEvent.notifyEventStart(context))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1886/buggy-version/phoneProfilesPlus.src.main.java.sk.henrichg.phoneprofilesplus.EventsHandler.java", "BodyUseAPI": ["sk.henrichg.phoneprofilesplus.Event.notifyEventStart(android.content.Context)", "sk.henrichg.phoneprofilesplus.PPApplication.logE(java.lang.String,(\"notifyEventStart=\" + (notifyEvent.notifyEventStart(context))))"], "Fixed commit": "c1d72245b1279a743a366aef6504faa119c14460", "Url": "https://api.github.com/repos/henrichg/PhoneProfilesPlus", "Date": "2018-11-08T11:17:26Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getID()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userExists(id)) throw new java.lang.IllegalStateException(\"The specified user already exists!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6539/buggy-version/src.model.HotelSystem.java", "BodyUseAPI": [], "Fixed commit": "4b3002a58eb20297f241c00c1442379b6580783c", "Url": "https://api.github.com/repos/aaronsjsu/CS151-Project", "Date": "2018-12-09T05:18:14Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((citizen.getDesiredActivity()) == (com.minecolonies.api.entity.ai.DesiredActivity.SLEEP)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1330/buggy-version/src.main.java.com.minecolonies.coremod.entity.ai.minimal.EntityAIEatTask.java", "BodyUseAPI": [], "Fixed commit": "138852eabde23774f68ff0bd58645b3d10019674", "Url": "https://api.github.com/repos/ldtteam/minecolonies", "Date": "2018-11-03T14:49:07Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dice != 6) { takeTurn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/864/buggy-version/Trouble.TroubleGUI.java", "BodyUseAPI": [], "Fixed commit": "24d51e7dcd361fcb6e196ee13e5af3c3e8127e05", "Url": "https://api.github.com/repos/BrandonQue/Trouble", "Date": "2018-11-20T06:08:17Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.rich07.www.nimomusicplayer.Media.Songs.checkInit) { com.rich07.www.nimomusicplayer.Media.Songs.initSongsList(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8833/buggy-version/app.src.main.java.com.rich07.www.nimomusicplayer.Media.Songs.java", "BodyUseAPI": [], "Fixed commit": "f2647b4cdd451f98982e8455c6cd8ae5a9bc7b86", "Url": "https://api.github.com/repos/akku9908/NimoMusicPlayer", "Date": "2018-11-26T18:14:06Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)", "android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(com.rich07.www.nimomusicplayer.Media.Songs.listOfSongs.contains(new com.rich07.www.nimomusicplayer.Media.Songs.InSong(currentSongTitle, currentSongArtist).toString()))) { com.rich07.www.nimomusicplayer.Media.Songs.listOfSongs.add(new com.rich07.www.nimomusicplayer.Media.Songs.InSong(currentSongTitle, currentSongArtist).toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8833/buggy-version/app.src.main.java.com.rich07.www.nimomusicplayer.Media.Songs.java", "BodyUseAPI": ["com.rich07.www.nimomusicplayer.Media.Songs.InSong.toString()", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "f2647b4cdd451f98982e8455c6cd8ae5a9bc7b86", "Url": "https://api.github.com/repos/akku9908/NimoMusicPlayer", "Date": "2018-11-26T18:14:06Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.String.valueOf(foundCharacters).indexOf(guess)) == (-1)) { for (int i = word.indexOf(guess); i >= 0; i = word.indexOf(guess, (i + 1))) { foundCharacters[i] = word.charAt(i); gaps--; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2324/buggy-version/src.de.fhws.aufgabenblatt10.Aufgabe3.java", "BodyUseAPI": ["java.lang.String.indexOf(char,int)", "java.lang.String.indexOf(char)"], "Fixed commit": "b1716129d745814a2c82aa2b2b40b570008ee355", "Url": "https://api.github.com/repos/njester/Java1", "Date": "2018-12-17T11:03:45Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (playerNumber == (this.playerIndexToShow)) { melds.replace(imageViewBeingSelected, meldIndex, tileIndex); melds.add(imageViewBeingSelected); drop(); }else { otherPlayers.get(this.getOtherPlayerIndex(playerNumber)).remove(); javafx.scene.image.ImageView temp = this.newImageView(t); temp.setOnMouseClicked(null); melds.add(temp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3923/buggy-version/src.main.java.gui.TablePane.java", "BodyUseAPI": ["gui.TablePane.getOtherPlayerIndex(int)", "otherPlayers.get(this.getOtherPlayerIndex(playerNumber)).remove()", "java.util.ArrayList<gui.OtherPlayerPane>.get(int)"], "Fixed commit": "6194961a87c20d84ae96519c586b40a7474874ce", "Url": "https://api.github.com/repos/DishySun/RRRummy", "Date": "2018-12-07T05:06:09Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progressBar) != null) { progressBar.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7185/buggy-version/app.DoxSupport.src.main.java.com.example.x206397.DoxSupport.Activities.OnCallScheduleActivity.java", "BodyUseAPI": [], "Fixed commit": "9d450561b246d71e63e150407bd75241184f758c", "Url": "https://api.github.com/repos/Ktawde/DoxSupport", "Date": "2018-11-08T22:16:36Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == obj) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1566/buggy-version/tehreer-android.src.main.java.com.mta.tehreer.sfnt.tables.NameTable.java", "BodyUseAPI": [], "Fixed commit": "8ff79930131a256dd1a5f3a2348f89685f05cb4d", "Url": "https://api.github.com/repos/Tehreer/Tehreer-Android", "Date": "2018-12-02T16:34:06Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (arr != null) { for (int i = 0; i < ((arr.length) - 1); i++) { for (int j = i + 1; j < (arr.length); j++) { if ((arr[i].compareTo(arr[j])) > 0) { T temp = arr[i]; arr[i] = arr[j]; arr[j] = temp; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6841/buggy-version/Cau1.java", "BodyUseAPI": ["T.compareTo(T)"], "Fixed commit": "ff3800e2e92ae4eeb61eb6c191e355a15d90522e", "Url": "https://api.github.com/repos/UET-INT2204-10-fall-18/lab11-hoangkhoi-uet", "Date": "2018-11-23T05:07:24Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (arr != null) { max = arr[0]; for (int i = 1; i < (arr.length); i++) { if ((max.compareTo(arr[i])) < 0) max = arr[i]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6841/buggy-version/Cau2.java", "BodyUseAPI": ["T.compareTo(T)"], "Fixed commit": "ff3800e2e92ae4eeb61eb6c191e355a15d90522e", "Url": "https://api.github.com/repos/UET-INT2204-10-fall-18/lab11-hoangkhoi-uet", "Date": "2018-11-23T05:07:24Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.IBlockAccess.getTileEntity(net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tileEntity instanceof com.mjr.extraplanets.tileEntities.blocks.TileEntityBasicDecontaminationUnitFake) { net.minecraft.util.math.BlockPos mainBlockPosition = ((com.mjr.extraplanets.tileEntities.blocks.TileEntityBasicDecontaminationUnitFake) (tileEntity)).mainBlockPosition; if (mainBlockPosition != null) { return world.getBlockState(pos).getBlock().getBedDirection(world.getBlockState(mainBlockPosition), world, mainBlockPosition); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3697/buggy-version/src.main.java.com.mjr.extraplanets.blocks.BlockDecontaminationUnitFake.java", "BodyUseAPI": [], "Fixed commit": "4addd9c862ba1b294e7523b72eaeffa9fe5ce4ed", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-11-10T01:17:27Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.IBlockAccess.getTileEntity(net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tileEntity instanceof com.mjr.extraplanets.tileEntities.blocks.TileEntityBasicDecontaminationUnitFake) { net.minecraft.util.math.BlockPos mainBlockPosition = ((com.mjr.extraplanets.tileEntities.blocks.TileEntityBasicDecontaminationUnitFake) (tileEntity)).mainBlockPosition; if (mainBlockPosition != null) { return world.getBlockState(pos).getBlock().isBed(world.getBlockState(mainBlockPosition), world, mainBlockPosition, player); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3697/buggy-version/src.main.java.com.mjr.extraplanets.blocks.BlockDecontaminationUnitFake.java", "BodyUseAPI": [], "Fixed commit": "4addd9c862ba1b294e7523b72eaeffa9fe5ce4ed", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-11-10T01:17:27Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == ((columns.size()) - 1)) query += \"\\n\"; else query += \",\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7990/buggy-version/src.main.java.ru.lightsoff.database.builders.CreateQueryBuilder.java", "BodyUseAPI": [], "Fixed commit": "7fbf8083bb70a102cde34dfb1ebff05ba5bf5512", "Url": "https://api.github.com/repos/LightsOffDAMT/LightsOff", "Date": "2018-11-11T10:39:23Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((seenSchemas != null) && (seenSchemas.contains(type))) { recursiveType.add(type); }else { typeInfos.add(org.apache.hadoop.hive.serde2.avro.SchemaToTypeInfo.generateTypeInfo(type, seenSchemas)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1603/buggy-version/serde.src.java.org.apache.hadoop.hive.serde2.avro.SchemaToTypeInfo.java", "BodyUseAPI": ["java.util.List<org.apache.hadoop.hive.serde2.typeinfo.TypeInfo>.add(org.apache.hadoop.hive.serde2.typeinfo.TypeInfo)", "org.apache.hadoop.hive.serde2.avro.SchemaToTypeInfo.generateTypeInfo(org.apache.avro.Schema,java.util.Set<org.apache.avro.Schema>)", "java.util.List<org.apache.avro.Schema>.add(org.apache.avro.Schema)"], "Fixed commit": "5d5ce8bf56f47049eaab3ba49df58bd8f06a0eff", "Url": "https://api.github.com/repos/vamsi360/hive", "Date": "2018-11-16T06:10:05Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recursiveType.size()) > 0) { java.util.List<org.apache.hadoop.hive.serde2.typeinfo.TypeInfo> allUnionObjectTypeInfos = unionTypeInfo.getAllUnionObjectTypeInfos(); java.util.ArrayList<org.apache.hadoop.hive.serde2.typeinfo.TypeInfo> newTypeInfos = new java.util.ArrayList(allUnionObjectTypeInfos); for (org.apache.avro.Schema type : recursiveType) { newTypeInfos.add(unionTypeInfo); } org.apache.hadoop.hive.serde2.typeinfo.UnionTypeInfo unionTypeInfo2 = ((org.apache.hadoop.hive.serde2.typeinfo.UnionTypeInfo) (org.apache.hadoop.hive.serde2.typeinfo.TypeInfoFactory.getUnionTypeInfo(newTypeInfos))); java.util.ArrayList<org.apache.hadoop.hive.serde2.typeinfo.TypeInfo> newTypeInfos2 = new java.util.ArrayList(newTypeInfos); for (org.apache.hadoop.hive.serde2.typeinfo.TypeInfo typeInfo : newTypeInfos) { if (typeInfo.equals(unionTypeInfo)) { newTypeInfos2.add(unionTypeInfo2); }else { newTypeInfos2.add(typeInfo); } } return org.apache.hadoop.hive.serde2.typeinfo.TypeInfoFactory.getUnionTypeInfo(newTypeInfos2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1603/buggy-version/serde.src.java.org.apache.hadoop.hive.serde2.avro.SchemaToTypeInfo.java", "BodyUseAPI": [], "Fixed commit": "5d5ce8bf56f47049eaab3ba49df58bd8f06a0eff", "Url": "https://api.github.com/repos/vamsi360/hive", "Date": "2018-11-16T06:10:05Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentChar == ' ') { sb.append(currentChar); }else { if ((currentChar > 'z') || (currentChar < 'a')) { return \"invalid\"; }else if (((char) (currentChar + shift)) > 'z') { currentChar = ((char) (currentChar - 26)); }else if (((char) (currentChar + shift)) < 'a') { currentChar = ((char) (currentChar + 26)); } sb.append(((char) (currentChar + shift))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3569/buggy-version/src.main.java.tudelft.caesarshift.CaesarShiftCipher.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)"], "Fixed commit": "86e5619b9e92d235ade2ba1f04d54295acfc6f0b", "Url": "https://api.github.com/repos/jm1981/mooc-software-testing", "Date": "2018-11-11T08:37:52Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mbsc) != null) mbsc.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1840/buggy-version/jmxremote-nio.src.java.org.jppf.jmxremote.JPPFJMXConnector.java", "BodyUseAPI": [], "Fixed commit": "4e0d63e4707ef84a7cea8048e4ba6c35d0d14c4f", "Url": "https://api.github.com/repos/jppf-grid/JPPF", "Date": "2018-12-18T07:36:05Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (a == null) { throw new java.lang.IllegalStateException(\"Root is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1353/buggy-version/src.main.java.org.example.custom.algorithms.struct.AbstractTree.java", "BodyUseAPI": [], "Fixed commit": "ae49b680fefab4cd1ea45f0aacd6b75ad132ddfc", "Url": "https://api.github.com/repos/dnikiforov1967/custom-algorithms", "Date": "2018-11-28T16:10:16Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (a == null) { throw new java.lang.IllegalStateException(\"Root is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1353/buggy-version/src.main.java.org.example.custom.algorithms.struct.AbstractTree.java", "BodyUseAPI": [], "Fixed commit": "ae49b680fefab4cd1ea45f0aacd6b75ad132ddfc", "Url": "https://api.github.com/repos/dnikiforov1967/custom-algorithms", "Date": "2018-11-28T16:10:16Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uniandes.tsdl.mutapk.helper.ASTHelper.getFirstBrotherNamedOfType(smaliParser.I_STATEMENT_FORMAT21c_TYPE,java.lang.String,org.antlr.runtime.tree.CommonTree)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (cast != null) { varName = cast.getChild(1).toString(); }else { org.antlr.runtime.tree.CommonTree moveResultObject = uniandes.tsdl.mutapk.helper.ASTHelper.getFirstBrotherNamedOfType(smaliParser.I_STATEMENT_FORMAT11x, \"move-result-object\", parent); varName = moveResultObject.getChild(1).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9338/buggy-version/src.uniandes.tsdl.mutapk.operators.gui.android.FindViewByIdReturnsNull.java", "BodyUseAPI": ["org.antlr.runtime.tree.CommonTree.getChild(int)", "cast.getChild(1).toString()"], "Fixed commit": "5cf7d59a3dab5e738d5dcfa51e99eac6b610e479", "Url": "https://api.github.com/repos/TheSoftwareDesignLab/MutAPK", "Date": "2018-12-27T14:17:11Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getLeft().evaluate(io.sapl.interpreter.EvaluationContext,boolean,com.fasterxml.jackson.databind.JsonNode)", "getRight().evaluate(io.sapl.interpreter.EvaluationContext,boolean,com.fasterxml.jackson.databind.JsonNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((left.isNumber()) && (right.isNumber())) { return io.sapl.grammar.sapl.impl.JSON.booleanNode(left.decimalValue().equals(right.decimalValue())); }else { return io.sapl.grammar.sapl.impl.JSON.booleanNode(left.equals(right)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4760/buggy-version/sapl-core.src.main.java.io.sapl.grammar.sapl.impl.EqualsImplCustom.java", "BodyUseAPI": ["io.sapl.grammar.sapl.impl.JSON.booleanNode(left.decimalValue().equals(right.decimalValue()))", "io.sapl.grammar.sapl.impl.JSON.booleanNode(left.equals(right))", "com.fasterxml.jackson.databind.JsonNode.decimalValue()", "com.fasterxml.jackson.databind.JsonNode.equals(com.fasterxml.jackson.databind.JsonNode)", "left.decimalValue().equals(right.decimalValue())", "com.fasterxml.jackson.databind.JsonNode.decimalValue()"], "Fixed commit": "880d37ffbe7c177634cff0d3fbb380fbc9beaae8", "Url": "https://api.github.com/repos/heutelbeck/sapl-policy-engine", "Date": "2018-11-23T20:50:45Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (id != (-1)) { if (fex.signs.signs.CommandTransformer.getInstance().commentSign(id, s)) { mess.toPlayer(p, \"Schild erfolgreich aktualisiert\", Messages.NORMAL); }else { mess.toPlayer(p, \"Fehler beim Aktualisieren des Schildes\", Messages.IMPORTANT); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9212/buggy-version/Signs.src.fex.signs.signs.Main.java", "BodyUseAPI": ["fex.signs.signs.CommandTransformer.getInstance().commentSign(int,java.lang.String)"], "Fixed commit": "edd97f7b58efa6b79025fc902a1e67c64fc46067", "Url": "https://api.github.com/repos/fex594/signs", "Date": "2018-11-15T18:07:16Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(matcher.find())) { fko.FrankyEngine.Franky.Move.LOG.warn(\"Could not match a SAN move in this string: {}\", sanMove); return fko.FrankyEngine.Franky.Move.NOMOVE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5148/buggy-version/src.main.java.fko.FrankyEngine.Franky.Move.java", "BodyUseAPI": [], "Fixed commit": "35cc5ff543d8fde897d0200d0273fc33811a0ca6", "Url": "https://api.github.com/repos/frankkopp/FrankyUCIChessEngine", "Date": "2018-12-24T10:35:21Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(newPosition.isValid())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2106/buggy-version/src.main.java.com.chesstama.util.GameUtil.java", "BodyUseAPI": [], "Fixed commit": "f03ea16e2ccaa8eab9a0604dd5baaeaf6da0218f", "Url": "https://api.github.com/repos/ravikiranj/chess-tama", "Date": "2018-11-15T19:31:19Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["server.tool.Row.getCell(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (c == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6915/buggy-version/src.main.java.server.tool.ExcelImport.java", "BodyUseAPI": [], "Fixed commit": "a0b495cfa8977a767207db879e26beea569a9977", "Url": "https://api.github.com/repos/MissThee/springboot-mybatis-shiro-jwt-restful", "Date": "2018-12-27T04:16:01Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["currentMatch.getScore().getWinner()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (winner.equals(ScoreEntity.AWAY_TEAM_WINNER)) { viewHolder.homeTeamNameText.setTypeface(null, Typeface.NORMAL); viewHolder.awayTeamNameText.setTypeface(null, Typeface.BOLD); viewHolder.homeTeamScoreText.setTypeface(null, Typeface.NORMAL); viewHolder.awayTeamScoreText.setTypeface(null, Typeface.BOLD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2950/buggy-version/app.src.main.java.tech.joeyck.livefootball.ui.competition_detail.matches.MatchesAdapter.java", "BodyUseAPI": [], "Fixed commit": "6deafa6cfa826f0a3c5811d05af7cae650b1522c", "Url": "https://api.github.com/repos/s6joui/football-data-android-java", "Date": "2018-12-01T13:05:44Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.ist.expenditureTrackingSystem.ui.ConfigureAcquisitonController.isOn(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (allowRAPID) { searchProcessValues.add(SearchProcessValues.RAPID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5573/buggy-version/expenditure-tracking.src.main.java.pt.ist.expenditureTrackingSystem.ui.ConfigureAcquisitonController.java", "BodyUseAPI": [], "Fixed commit": "846e1eaa8f464dae665989fa588d7f71b31f10e5", "Url": "https://api.github.com/repos/ist-dsi/expenditures", "Date": "2018-12-10T11:12:02Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (permission != null) { writer.startNode(\"permission\"); writer.setValue(permission.getId()); writer.endNode(); }else throw new java.lang.NullPointerException(\"Cannot process the permissions as they have been incorrectly configured in the script\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2936/buggy-version/src.main.java.com.michelin.cio.hudson.plugins.rolestrategy.RoleBasedAuthorizationStrategy.java", "BodyUseAPI": ["hudson.security.Permission.getId()", "com.thoughtworks.xstream.io.HierarchicalStreamWriter.setValue(permission.getId())"], "Fixed commit": "9b8a25ab0a1921466c0dabe5719c9db988b2836c", "Url": "https://api.github.com/repos/deepanshnagaria/role-strategy-plugin", "Date": "2018-12-26T09:57:32Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.sqlite.SQLiteDatabase.query(java.lang.String,<nulltype>,java.lang.String,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cursor.getString(indexPhoto)) != null) { rc.setPhotoUri(cursor.getString(indexPhoto)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2498/buggy-version/app.src.main.java.de.mktz.mst.contactsgrill.database.DB_Handler.java", "BodyUseAPI": ["de.mktz.mst.contactsgrill.database.DB_Contact.setPhotoUri(cursor.getString(indexPhoto))", "android.database.Cursor.getString(int)"], "Fixed commit": "9e6e05c26d1247d997f0666855840d2cca0e0921", "Url": "https://api.github.com/repos/Morgulisan/ContactsGrill", "Date": "2018-11-10T13:43:01Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(java.lang.String,<nulltype>,<nulltype>,<nulltype>,<nulltype>,<nulltype>,<nulltype>)", "android.database.Cursor.getColumnIndex(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cursor.getString(indexPhoto)) != null) { rc.setPhotoUri(cursor.getString(indexPhoto)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2498/buggy-version/app.src.main.java.de.mktz.mst.contactsgrill.database.DB_Handler.java", "BodyUseAPI": ["android.database.Cursor.getString(int)", "de.mktz.mst.contactsgrill.database.DB_Contact.setPhotoUri(cursor.getString(indexPhoto))"], "Fixed commit": "9e6e05c26d1247d997f0666855840d2cca0e0921", "Url": "https://api.github.com/repos/Morgulisan/ContactsGrill", "Date": "2018-11-10T13:43:01Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.mktz.mst.contactsgrill.CustomAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dataModel.getPhotoUri()) != null) viewHolder.contactImageView.setImageURI(android.net.Uri.parse(dataModel.getPhotoUri()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2498/buggy-version/app.src.main.java.de.mktz.mst.contactsgrill.CustomAdapter.java", "BodyUseAPI": ["android.net.Uri.parse(dataModel.getPhotoUri())", "de.mktz.mst.contactsgrill.database.DB_Contact.getPhotoUri()", "android.widget.ImageView.setImageURI(android.net.Uri.parse(dataModel.getPhotoUri()))"], "Fixed commit": "9e6e05c26d1247d997f0666855840d2cca0e0921", "Url": "https://api.github.com/repos/Morgulisan/ContactsGrill", "Date": "2018-11-10T13:43:01Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (x != null) { affichage += x.getQuantite(); affichage += x + \" +\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3331/buggy-version/src.main.java.diceForge.Face.java", "BodyUseAPI": ["diceForge.Ressource.getQuantite()"], "Fixed commit": "a50ef0df39707c20c72bc9ddff8e6ddd74125c4c", "Url": "https://api.github.com/repos/LucasAubron/PS5-18-19-DiceForge-EquipeC", "Date": "2018-11-11T23:58:52Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lastChar.equals(\" \")) || (lastChar.equals(\"\\n\"))) { onTagClicked(etTags.getText().toString()); etTags.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4179/buggy-version/app.src.main.java.org.ole.planet.myplanet.library.MyLibraryFragment.java", "BodyUseAPI": [], "Fixed commit": "cd95164eed5859165b5bc0517490c62484238d55", "Url": "https://api.github.com/repos/open-learning-exchange/myplanet", "Date": "2018-11-01T03:27:33Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request.getParameter(\"tbl\").equals(\"ViewDailyReport\")) { request.getRequestDispatcher(\"/WEB-INF/viewDailyReport.jsp\").forward(request, response); }else if (request.getParameter(\"tbl\").equals(\"CreateCustomerInvoice\")) { java.lang.String msg = \"No journeys\"; try { msg = admin.retrieve(qry7); } catch (java.sql.SQLException ex) { java.util.logging.Logger.getLogger(pages.AdminsHomepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } request.setAttribute(\"query\", msg); request.getRequestDispatcher(\"/WEB-INF/generateInvoice.jsp\").forward(request, response); }else if (request.getParameter(\"tbl\").equals(\"ChangeJourneyPrice\")) { java.lang.String msg = \"No journeys\"; try { msg = admin.retrieve(qry6); } catch (java.sql.SQLException ex) { java.util.logging.Logger.getLogger(pages.AdminsHomepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } request.setAttribute(\"query\", msg); request.getRequestDispatcher(\"/WEB-INF/changePriceOfJourney.jsp\").forward(request, response); }else if (request.getParameter(\"tbl\").equals(\"ChangePriceShortDistances\")) { request.getRequestDispatcher(\"/WEB-INF/increasePrice.jsp\").forward(request, response); }else if (request.getParameter(\"tbl\").equals(\"NewUser\")) { request.getRequestDispatcher(\"/WEB-INF/user.jsp\").forward(request, response); }else if (request.getParameter(\"tbl\").equals(\"Update\")) { request.getRequestDispatcher(\"/WEB-INF/passwdChange.jsp\").forward(request, response); }else if (request.getParameter(\"tbl\").equals(\"RegisterDriver\")) { request.getRequestDispatcher(\"/WEB-INF/registerDriver.jsp\").forward(request, response); }else if (request.getParameter(\"tbl\").equals(\"Delete\")) { request.getRequestDispatcher(\"/WEB-INF/deleteUser.jsp\").forward(request, response); }else { request.getRequestDispatcher(\"/WEB-INF/administratorHomepage.jsp\").forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2406/buggy-version/src.java.pages.AdminsHomepage.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "request.getRequestDispatcher(\"/WEB-INF/generateInvoice.jsp\").forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "request.getParameter(\"tbl\").equals(java.lang.String)", "request.getParameter(\"tbl\").equals(java.lang.String)", "request.getRequestDispatcher(\"/WEB-INF/viewDailyReport.jsp\").forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.lang.String)", "request.getParameter(\"tbl\").equals(java.lang.String)", "request.getRequestDispatcher(\"/WEB-INF/increasePrice.jsp\").forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "request.getParameter(\"tbl\").equals(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "request.getRequestDispatcher(\"/WEB-INF/user.jsp\").forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "request.getRequestDispatcher(\"/WEB-INF/administratorHomepage.jsp\").forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "request.getParameter(\"tbl\").equals(java.lang.String)", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "request.getParameter(\"tbl\").equals(java.lang.String)", "request.getParameter(\"tbl\").equals(java.lang.String)", "request.getRequestDispatcher(\"/WEB-INF/registerDriver.jsp\").forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "request.getRequestDispatcher(\"/WEB-INF/changePriceOfJourney.jsp\").forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "request.getRequestDispatcher(\"/WEB-INF/passwdChange.jsp\").forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "request.getRequestDispatcher(\"/WEB-INF/deleteUser.jsp\").forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "ef64a47da577c97708fb06e3c69f2ff01d77b918", "Url": "https://api.github.com/repos/Yousef-Eleshy/Alphacab", "Date": "2018-12-06T10:53:04Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lastDirectory.exists()) { chooser.setInitialDirectory(lastDirectory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4478/buggy-version/src.main.java.ch.buhls.billmanager.gui.framework.GUIFramework.java", "BodyUseAPI": ["javafx.stage.FileChooser.setInitialDirectory(java.io.File)"], "Fixed commit": "228d7fdfe6d08106349e1a4aab6559327eeb01af", "Url": "https://api.github.com/repos/sdbuehlmann/BillManager", "Date": "2018-12-30T14:05:19Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (approveSwitch.isChecked()) { transactionResponseBuilder.approve(); transactionResponseBuilder.withOutcomeMessage(\"Card presented\"); transactionResponseBuilder.withCard(card); }else { transactionResponseBuilder.decline(\"Card declined\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7014/buggy-version/PaymentServiceSample.src.main.java.com.aevi.sdk.pos.flow.paymentservicesample.ui.PaymentCardReadingActivity.java", "BodyUseAPI": [], "Fixed commit": "8324ca744701f31198cdcd9a6c9d7bc9a13f17fc", "Url": "https://api.github.com/repos/AEVI-AppFlow/pos-android-sdk", "Date": "2018-11-26T14:22:02Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(flowResponse.hasAugmentedData())) { setNoData(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7014/buggy-version/sample-commons.src.main.java.com.aevi.sdk.pos.flow.sample.ui.ModelDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "8324ca744701f31198cdcd9a6c9d7bc9a13f17fc", "Url": "https://api.github.com/repos/AEVI-AppFlow/pos-android-sdk", "Date": "2018-11-26T14:22:02Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (flowResponse.shouldCancelTransaction()) { responseInfo.add(com.aevi.sdk.pos.flow.sample.ui.ModelDetailsFragment.getStringPair(R.string.cancel_requested, flowResponse.shouldCancelTransaction())); adapter.addSection(new com.aevi.sdk.pos.flow.sample.ui.RecyclerViewSection(getActivity(), R.string.overview, responseInfo, true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7014/buggy-version/sample-commons.src.main.java.com.aevi.sdk.pos.flow.sample.ui.ModelDetailsFragment.java", "BodyUseAPI": ["com.aevi.sdk.pos.flow.sample.ui.ModelDetailsFragment.getStringPair(R.string.cancel_requested,flowResponse.shouldCancelTransaction())", "com.aevi.sdk.pos.flow.sample.ui.FlowResponse.shouldCancelTransaction()", "java.util.List<android.util.Pair<java.lang.String, java.lang.String>>.add(android.util.Pair<java.lang.String, java.lang.String>)"], "Fixed commit": "8324ca744701f31198cdcd9a6c9d7bc9a13f17fc", "Url": "https://api.github.com/repos/AEVI-AppFlow/pos-android-sdk", "Date": "2018-11-26T14:22:02Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item.getQuantityLabel().isEmpty()) item.setQuantity(new java.math.BigDecimal(newQuantity));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7218/buggy-version/app.src.main.java.mse.ch.tsm_mobop_app.details.DetailsFragment.java", "BodyUseAPI": ["mse.ch.tsm_mobop_app.cart.CartItem.setQuantity(java.math.BigDecimal)"], "Fixed commit": "b0aa3818be1d3a53e8bd86a34c466162ee06e264", "Url": "https://api.github.com/repos/MarcKloter/TSM_MobOp", "Date": "2018-11-11T10:29:40Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item.getQuantityLabel().isEmpty()) { setQuantityInformation(); setupControlButtons(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7218/buggy-version/app.src.main.java.mse.ch.tsm_mobop_app.details.DetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "b0aa3818be1d3a53e8bd86a34c466162ee06e264", "Url": "https://api.github.com/repos/MarcKloter/TSM_MobOp", "Date": "2018-11-11T10:29:40Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (exists(id)) { log.info(\"deleting widget with id {}\", id); repository.deleteById(id); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5721/buggy-version/src.main.java.uk.co.mruoc.function.DefaultWidgetService.java", "BodyUseAPI": ["uk.co.mruoc.function.DefaultWidgetService.info(java.lang.String,java.util.UUID)", "uk.co.mruoc.repository.WidgetRepository.deleteById(java.util.UUID)"], "Fixed commit": "e53f45f6b744412feafc1f15404884fe2c251430", "Url": "https://api.github.com/repos/michaelruocco/spring-cloud-function", "Date": "2018-11-04T01:29:31Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getLayoutId()) != 0) { rootView = inflater.inflate(getLayoutId(), container, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7264/buggy-version/android.app.src.main.java.com.rn.base.BaseFragment.java", "BodyUseAPI": [], "Fixed commit": "e08012ff0c610f874aabe9e3b9298cea189360f9", "Url": "https://api.github.com/repos/1280103995/RN-Android-iOS", "Date": "2018-12-04T08:19:41Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["engine.getListUtil().toStringArray(java.util.Set<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((keys.length) == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2530/buggy-version/source.java.src.lucee.extension.io.cache.redis.AbstractRedisCache.java", "BodyUseAPI": [], "Fixed commit": "ee34217d4c5a04558c6cb7036eed4c4a4db41ec7", "Url": "https://api.github.com/repos/lucee/extension-redis", "Date": "2018-12-12T10:50:20Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((toBeCopied.getPersonList().size()) == 0) { setSelf(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3145/buggy-version/src.main.java.seedu.address.model.AddressBook.java", "BodyUseAPI": [], "Fixed commit": "bb2aefb3a07ba4ee380e01b1837209e1e5f48fa5", "Url": "https://api.github.com/repos/E0201942/main_old_AB-4", "Date": "2018-11-10T14:37:13Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gauntlet.GameState.getWarriorDirection()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (direction == (GameState.Direction.LEFT)) { if ((this.gameState.getWarriorX()) > 40) { this.gameState.setWarriorMovement(true); }else { this.gameState.setWarriorMovement(false); } }else if (direction == (GameState.Direction.RIGHT)) { if ((this.gameState.getWarriorX()) < ((24 * 32) - 29)) { this.gameState.setWarriorMovement(true); }else { this.gameState.setWarriorMovement(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8456/buggy-version/src.gauntlet.GameThread.java", "BodyUseAPI": [], "Fixed commit": "cf670a236c5aa55d2219f9bc75e970a75a114776", "Url": "https://api.github.com/repos/Chaycej/Gauntlet", "Date": "2018-11-19T21:43:05Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shutdown) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8034/buggy-version/monitor.src.main.java.bisq.monitor.metric.Metric.java", "BodyUseAPI": [], "Fixed commit": "49c3238a3da57b1dc4850ef57f0682d96468ea45", "Url": "https://api.github.com/repos/freimair/bisq", "Date": "2018-12-18T14:03:25Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (defaultValue != null) { java.lang.String key = f.get(this).toString(); configDefaults.put(key, defaultValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6889/buggy-version/FROST-Server.Core.src.main.java.de.fraunhofer.iosb.ilt.sta.settings.ConfigDefaults.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "ed71d6126df21850c5460278269e45ddab9451ea", "Url": "https://api.github.com/repos/selimnairb/FROST-Server", "Date": "2018-11-27T02:42:40Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((returnType) instanceof type.VoidType)) srvCalls.append(\"srv\\n\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6325/buggy-version/src.ast.FunNode.java", "BodyUseAPI": [], "Fixed commit": "edf4d86235edf5b01abdfcba40ed9a045242094e", "Url": "https://api.github.com/repos/giusdp/FOOLC", "Date": "2018-11-13T13:04:47Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != map) { for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : map.entrySet()) { formparams.add(new org.apache.http.message.BasicNameValuePair(entry.getKey(), entry.getValue())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8835/buggy-version/src.main.java.com.smallhk.toolkit.HttpClientProxy.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.entrySet()"], "Fixed commit": "8901d5ef1e0d65f13090219506bb701b781125fd", "Url": "https://api.github.com/repos/duangduangda/toolkit", "Date": "2018-11-15T06:28:24Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(javax.swing.JLayeredPane,java.lang.String,java.lang.String,int,<nulltype>,java.lang.String[],java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (moneyType != null) { java.lang.Integer[] LEVELS = actionController.getLevels(moneyType).toArray(new java.lang.Integer[0]); if ((LEVELS.length) != 0) { java.lang.Integer level = ((java.lang.Integer) (javax.swing.JOptionPane.showInputDialog(guiView.boardWindow, \"What level do you want to upgrade to?\", \"Level Number\", javax.swing.JOptionPane.QUESTION_MESSAGE, null, LEVELS, LEVELS[0]))); if (level != null) { actionController.upgradePhase(moneyType, level); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/190/buggy-version/view.guiView.java", "BodyUseAPI": ["PlayerActionController.getLevels(java.lang.String)", "actionController.getLevels(moneyType).toArray(java.lang.Integer[])", "PlayerActionController.upgradePhase(java.lang.String,java.lang.Integer)"], "Fixed commit": "4dd8bd19e45d6b3974b82ce1220b69ecf50c3c9c", "Url": "https://api.github.com/repos/MichaelAlbert98/Deadwood-Csci-345", "Date": "2018-12-06T22:29:09Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (rSet != null) { rSet.last(); entries = rSet.getRow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5560/buggy-version/src.backend.database.DatabaseEntity.java", "BodyUseAPI": ["java.sql.ResultSet.last()", "java.sql.ResultSet.getRow()"], "Fixed commit": "4428d0e139090a3ae2af851202ca5ffcbda1bcbd", "Url": "https://api.github.com/repos/jimmywctruong/publication-management-system", "Date": "2018-11-25T18:19:42Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.springframework.util.StringUtils.hasText(annotation.browserType())) { builder.browserType(annotation.browserType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6229/buggy-version/modules.citrus-selenium.src.main.java.com.consol.citrus.selenium.config.annotation.SeleniumBrowserConfigParser.java", "BodyUseAPI": ["com.consol.citrus.selenium.endpoint.SeleniumBrowserBuilder.browserType(annotation.browserType())", "com.consol.citrus.selenium.config.annotation.SeleniumBrowserConfig.browserType()"], "Fixed commit": "a32246d2ff41d9c48616152633a4dbbe0a4e97f9", "Url": "https://api.github.com/repos/citrusframework/citrus", "Date": "2018-12-11T08:45:59Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clazz.getPackage()) == null) { throw new top.crossoverjie.cicada.server.exception.CicadaException(top.crossoverjie.cicada.server.enums.StatusEnum.NULL_PACKAGE, (((\"[\" + (clazz.getName())) + \".java]:\") + (StatusEnum.NULL_PACKAGE.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6174/buggy-version/cicada-core.src.main.java.top.crossoverjie.cicada.server.config.AppConfig.java", "BodyUseAPI": ["java.lang.Class<?>.getName()"], "Fixed commit": "c302f7a77d624e4408c805cbe1f2ea6ee82dd8af", "Url": "https://api.github.com/repos/chosenboy/cicada", "Date": "2018-11-14T06:32:57Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stgo.taostyle.web.TaoDbUtil.reqeustImageContentFromServer(java.lang.String,java.lang.String,person.getName(),instance.getContentType())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (content != null) { instance.setContent(content); instance.setPerson(person); instance.setId(null); instance.persist(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2151/buggy-version/src.main.java.com.stgo.taostyle.web.TaoDbUtil.java", "BodyUseAPI": ["com.stgo.taostyle.domain.MediaUpload.setContent(byte[])"], "Fixed commit": "8541355a4fad75baf646d15eec9bff69e0870658", "Url": "https://api.github.com/repos/casproteus/taostyle", "Date": "2018-12-23T04:04:31Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((areaNames.length) > 0) { selectedArea = areaNames[clientAreasSpinner.getSelectedItemPosition()]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7209/buggy-version/app.src.main.java.staff.dekaneh.brain_socket.com.dekanehstaff.activity.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a8e600615afbb5aab0fda5656ca220bb1ea36d9a", "Url": "https://api.github.com/repos/molhamstein/DekanehStaffAndroidApp", "Date": "2018-11-11T11:47:20Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["src.Hero.getObjectsAtOffset(int,int,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tiles.isEmpty()) { isClimbing = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9557/buggy-version/src.Hero.java", "BodyUseAPI": [], "Fixed commit": "b7de3197872b063f4409e3d54f5572b8716972bf", "Url": "https://api.github.com/repos/ROCMondriaanTIN/project-greenfoot-game-JustDylan23", "Date": "2018-12-01T20:07:54Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tfod) != null) { tfod.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7711/buggy-version/ftc_app.TeamCode.src.main.java.org.firstinspires.ftc.teamcode.Hardware.Sensors.TFWrapper.java", "BodyUseAPI": [], "Fixed commit": "1ba994c48411581d7a30419985928f7fcc2bff09", "Url": "https://api.github.com/repos/Dwight-Englewood/0207-Rover-Ruckus", "Date": "2018-11-04T22:49:38Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isCorrectVersion()) { worldGuardCompat = new uk.antiperson.stackmob.compat.hooks.WorldGuardCompat(sm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1539/buggy-version/src.main.java.uk.antiperson.stackmob.compat.hooks.WorldGuardHook.java", "BodyUseAPI": [], "Fixed commit": "95962f1536d5215aa311160761e8ea71a0fd89e5", "Url": "https://api.github.com/repos/Nathat23/StackMob-3", "Date": "2018-12-16T14:39:16Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (angle < 0.0) { java.lang.System.out.println((\"Angle < 0: \" + angle)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5856/buggy-version/src.main.java.com.mountainbranch.cars.SimulationGameState.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "88525c973ee6a8252c9aee6212ff64f723f271c3", "Url": "https://api.github.com/repos/andersberggren/SelfDrivingCars", "Date": "2018-12-05T19:42:40Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(mEvent.get(\"textcode\"))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (errorMessage == null) errorMessage = ((java.lang.String) (mEvent.get(\"desc\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3020/buggy-version/core.src.main.java.org.evergreen_ils.Result.java", "BodyUseAPI": [], "Fixed commit": "31384976bb4745309c6ef38fb53e90e3140b3b66", "Url": "https://api.github.com/repos/kenstir/hemlock", "Date": "2018-11-04T01:57:14Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((components.length) >= 4) { userHSName = components[((components.length) - 4)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/803/buggy-version/vector.src.main.java.fr.gouv.tchap.util.DinsicUtils.java", "BodyUseAPI": [], "Fixed commit": "fef73881d81d92bb4622dabbe2626bb4bb20d70d", "Url": "https://api.github.com/repos/dinsic-pim/tchap-android", "Date": "2018-12-07T23:25:57Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (len > ((net.Constants.PACKET_SIZE) - (4 * 2))) throw new java.io.IOException(\"Message size cannot exceed PACKET_SIZE - 8B\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4672/buggy-version/src.net.lib.Socket.java", "BodyUseAPI": [], "Fixed commit": "9d5e5a48d86b3fdd633aba0ea5f778aac094f855", "Url": "https://api.github.com/repos/sotheanith/SpotyMusic", "Date": "2018-11-28T22:12:45Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((PMDPath) == null) || ((PMDPath) == \"\")) getDefaultPMDPath();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2242/buggy-version/src.com.tools.pmd.PMD_Report_Builder.java", "BodyUseAPI": [], "Fixed commit": "bd9e22b560b1d9f4bb3141ade2e6c1641e6bb246", "Url": "https://api.github.com/repos/tgolnoft/BlueJ-Quality-Assessment-Tools", "Date": "2018-12-01T19:05:23Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["swftool.Instruction.getOperand(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((name.getQualifiers()) != null) { for (swftool.Namespace ns : name.getQualifiers()) { if (\"Object\".equals(ns.getName())) { nomixMap2.add(name.getBaseName()); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8939/buggy-version/src.swftool.Mixer.java", "BodyUseAPI": ["swftool.Name.getBaseName()", "swftool.Name.getQualifiers()", "java.util.Set<java.lang.String>.add(name.getBaseName())"], "Fixed commit": "ede244f471d51e0452761b7aff8066b1a2b945a5", "Url": "https://api.github.com/repos/matrix3d/flashmixer", "Date": "2018-12-27T07:19:04Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((red > 0) && (blue > 0)) && (yellow > 0)) { return new net.minecraft.potion.PotionEffect(PotionRegistry.POTION_SLOWFALL, duration); }else { while ((com.mowmaster.dust.effects.EffectGetter.instance().hasPotionEffect(com.mowmaster.dust.effects.EffectPicker.colorToRecipe)) == false) { com.mowmaster.dust.effects.EffectPicker.findNextColorForEffect(); com.mowmaster.dust.effects.EffectPicker.getColor(white, black, com.mowmaster.dust.effects.EffectPicker.percentRed, com.mowmaster.dust.effects.EffectPicker.percentBlue, com.mowmaster.dust.effects.EffectPicker.percentYellow); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7776/buggy-version/src.main.java.com.mowmaster.dust.effects.EffectPicker.java", "BodyUseAPI": [], "Fixed commit": "5cb7f2cd88aa3066e1b92f3901b68ef0852178bf", "Url": "https://api.github.com/repos/Mowmaster/Dust", "Date": "2018-11-12T05:17:44Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.xipki.util.StringUtil.isNumber(text)) { return java.lang.Integer.parseInt(text); }else { return org.xipki.ca.mgmt.api.PermissionConstants.textCodeMap.get(text.toLowerCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7469/buggy-version/ca-api.src.main.java.org.xipki.ca.mgmt.api.PermissionConstants.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "13d0e0bc86132fa6fe1a356fd9051d69db31b6a3", "Url": "https://api.github.com/repos/xipki/xipki", "Date": "2018-12-01T15:29:41Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (detonator == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4430/buggy-version/src.main.java.roguelike.domain.Level.java", "BodyUseAPI": [], "Fixed commit": "81c8dba51e7f35a21a09e997baf2a936cb851283", "Url": "https://api.github.com/repos/Zentryn/ot-harjoitustyo", "Date": "2018-12-04T21:03:39Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(myEventData.contains(eventInterested))) { myEventData.add(eventInterested); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9271/buggy-version/app.src.main.java.edu.calvin.cs262.cs262d.eventconnect.data.MockDatabase.java", "BodyUseAPI": ["java.util.ArrayList<edu.calvin.cs262.cs262d.eventconnect.data.Event>.add(edu.calvin.cs262.cs262d.eventconnect.data.Event)"], "Fixed commit": "bcb8ca6388a4ad1e46c0a6da4c8d0ca88a2249c4", "Url": "https://api.github.com/repos/cs262dFA2018/EventConnect", "Date": "2018-12-07T20:19:37Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String,message.getHeader(),message.getBody(),java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rowsAffected <= 0) { throw new org.forum.api.exception.DataNotFoundException(org.forum.api.commons.ErrorUtility.getDataNotFoundExceptionMessage(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1564/buggy-version/src.main.java.org.forum.api.jdbc.dao.MessageDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "871406c9404edbce732fb2c863384cae87750f70", "Url": "https://api.github.com/repos/muradbax/forum-rest-api", "Date": "2018-04-14T19:27:54Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String,java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rowsAffected <= 0) { throw new org.forum.api.exception.DataNotFoundException(org.forum.api.commons.ErrorUtility.getDataNotFoundExceptionMessage(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1564/buggy-version/src.main.java.org.forum.api.jdbc.dao.MessageDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "871406c9404edbce732fb2c863384cae87750f70", "Url": "https://api.github.com/repos/muradbax/forum-rest-api", "Date": "2018-04-14T19:27:54Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((experiment) != null) { experiment.getSnippedDetails(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6203/buggy-version/src.main.java.portal.api.model.DeploymentDescriptor.java", "BodyUseAPI": [], "Fixed commit": "7b1fc511669c8b87b43573ce8537d7db468dcfdb", "Url": "https://api.github.com/repos/5GinFIRE/eu.5ginfire.portal.api", "Date": "2018-11-21T11:43:28Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (complete != (io.joshatron.tak.server.request.Complete.BOTH)) { if (complete == (io.joshatron.tak.server.request.Complete.COMPLETE)) { getGames.append(\" AND done = 1\"); }else { getGames.append(\" AND done = 0\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4831/buggy-version/src.main.java.io.joshatron.tak.server.database.GameDAOSqlite.java", "BodyUseAPI": [], "Fixed commit": "821bce488bb0153b0c106f9d885180db0b4d8bd7", "Url": "https://api.github.com/repos/joshatron/Tak-Server", "Date": "2018-12-12T03:13:44Z"},
{"Line": "=>627", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end != null) { getGames.append(\" AND time < ?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4831/buggy-version/src.main.java.io.joshatron.tak.server.database.GameDAOSqlite.java", "BodyUseAPI": [], "Fixed commit": "821bce488bb0153b0c106f9d885180db0b4d8bd7", "Url": "https://api.github.com/repos/joshatron/Tak-Server", "Date": "2018-12-12T03:13:44Z"},
{"Line": "=>623", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start != null) { getGames.append(\" AND time > ?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4831/buggy-version/src.main.java.io.joshatron.tak.server.database.GameDAOSqlite.java", "BodyUseAPI": [], "Fixed commit": "821bce488bb0153b0c106f9d885180db0b4d8bd7", "Url": "https://api.github.com/repos/joshatron/Tak-Server", "Date": "2018-12-12T03:13:44Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sizes != null) && ((sizes.length) > 0)) { getGames.append(\" AND (\"); boolean first = true; for (int i = 0; i < (sizes.length); i++) { if (first) { getGames.append(\"size = ?\"); first = false; }else { getGames.append(\" OR size = ?\"); } } getGames.append(\")\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4831/buggy-version/src.main.java.io.joshatron.tak.server.database.GameDAOSqlite.java", "BodyUseAPI": [], "Fixed commit": "821bce488bb0153b0c106f9d885180db0b4d8bd7", "Url": "https://api.github.com/repos/joshatron/Tak-Server", "Date": "2018-12-12T03:13:44Z"},
{"Line": "=>639", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pending != (io.joshatron.tak.server.request.Pending.BOTH)) { if (pending == (io.joshatron.tak.server.request.Pending.PENDING)) { getGames.append(\" AND ((white = ? AND current = 'WHITE') OR (black = ? AND current = 'BLACK'))\"); }else { getGames.append(\" AND ((white = ? AND current = 'BLACK') OR (black = ? AND current = 'WHITE'))\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4831/buggy-version/src.main.java.io.joshatron.tak.server.database.GameDAOSqlite.java", "BodyUseAPI": [], "Fixed commit": "821bce488bb0153b0c106f9d885180db0b4d8bd7", "Url": "https://api.github.com/repos/joshatron/Tak-Server", "Date": "2018-12-12T03:13:44Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((opponents != null) && ((opponents.length) > 0)) { getGames.append(\" AND (\"); boolean first = true; for (int i = 0; i < (opponents.length); i++) { if (first) { if (color == (io.joshatron.tak.engine.game.Player.WHITE)) { getGames.append(\"black = ? \"); }else if (color == (io.joshatron.tak.engine.game.Player.BLACK)) { getGames.append(\"white = ? \"); }else { getGames.append(\"(white = ? OR black = ?)\"); } first = false; }else { if (color == (io.joshatron.tak.engine.game.Player.WHITE)) { getGames.append(\" OR black = ?\"); }else if (color == (io.joshatron.tak.engine.game.Player.BLACK)) { getGames.append(\" OR white = ?\"); }else { getGames.append(\" OR (white = ? OR black = ?)\"); } } } getGames.append(\")\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4831/buggy-version/src.main.java.io.joshatron.tak.server.database.GameDAOSqlite.java", "BodyUseAPI": [], "Fixed commit": "821bce488bb0153b0c106f9d885180db0b4d8bd7", "Url": "https://api.github.com/repos/joshatron/Tak-Server", "Date": "2018-12-12T03:13:44Z"},
{"Line": "=>662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (winner != (io.joshatron.tak.engine.game.Player.NONE)) { if (winner == (io.joshatron.tak.engine.game.Player.WHITE)) { getGames.append(\" AND winner = 'WHITE'\"); }else { getGames.append(\" AND winner = 'BLACK'\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4831/buggy-version/src.main.java.io.joshatron.tak.server.database.GameDAOSqlite.java", "BodyUseAPI": [], "Fixed commit": "821bce488bb0153b0c106f9d885180db0b4d8bd7", "Url": "https://api.github.com/repos/joshatron/Tak-Server", "Date": "2018-12-12T03:13:44Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.winterhaven_mc.deathcompass.listeners.InventoryClickEvent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((action.equals(InventoryAction.SWAP_WITH_CURSOR)) && ((com.winterhaven_mc.deathcompass.storage.DeathCompass.isDeathCompass(event.getCursor())) || (com.winterhaven_mc.deathcompass.storage.DeathCompass.isDeathCompass(event.getCurrentItem())))) { if ((event.getRawSlot()) < (inventory.getSize())) { event.setCancelled(true); plugin.messageManager.sendMessage(event.getWhoClicked(), MessageId.ACTION_INVENTORY_DENY_TRANSFER); plugin.soundConfig.playSound(event.getWhoClicked(), SoundId.INVENTORY_DENY_TRANSFER); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7211/buggy-version/SavageDeathCompass.src.main.java.com.winterhaven_mc.deathcompass.listeners.InventoryEventListener.java", "BodyUseAPI": ["com.winterhaven_mc.deathcompass.listeners.InventoryClickEvent.setCancelled(boolean)", "com.winterhaven_mc.deathcompass.listeners.InventoryClickEvent.getWhoClicked()", "com.winterhaven_mc.deathcompass.listeners.InventoryClickEvent.getWhoClicked()", "plugin.soundConfig.playSound(event.getWhoClicked(),SoundId.INVENTORY_DENY_TRANSFER)", "com.winterhaven_mc.deathcompass.listeners.InventoryClickEvent.getRawSlot()", "plugin.messageManager.sendMessage(event.getWhoClicked(),MessageId.ACTION_INVENTORY_DENY_TRANSFER)"], "Fixed commit": "1af58512080121450a39b98e073c5b1d4a33c301", "Url": "https://api.github.com/repos/tim-savage/SavageDeathCompass", "Date": "2018-12-13T00:17:35Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.target) != null) { this.target.spawn(); startShooting(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2173/buggy-version/src.com.mcidlegame.plugin.data.RoomData.java", "BodyUseAPI": [], "Fixed commit": "b6141c33846cf6a1a2d4a242faf67df1eeec212d", "Url": "https://api.github.com/repos/MNuessing/MCIdleGame", "Date": "2018-11-06T02:09:19Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defenseCountry.getNumOfArmies()) == 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9073/buggy-version/src.models.game.Aggressive.java", "BodyUseAPI": [], "Fixed commit": "a7a8b842b9dae42231e8c896519483bc43725f1e", "Url": "https://api.github.com/repos/xwang1109/SOEN6441-22", "Date": "2018-11-28T04:43:47Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.game.Aggressive.getStrongestCountry(models.game.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((country.getNumOfArmies()) <= 1) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9073/buggy-version/src.models.game.Aggressive.java", "BodyUseAPI": [], "Fixed commit": "a7a8b842b9dae42231e8c896519483bc43725f1e", "Url": "https://api.github.com/repos/xwang1109/SOEN6441-22", "Date": "2018-11-28T04:43:47Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9583/buggy-version/magpie-source.src.main.java.me.mingshan.logger.async.source.collector.c1.aspect.LoggerAspect.java", "BodyUseAPI": [], "Fixed commit": "2b16022c85e9662a89e1f66d9481cb5acbfe1061", "Url": "https://api.github.com/repos/mstao/Magpie", "Date": "2018-11-19T01:50:38Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((registryData != null) && ((registryData.get(\"email\")) != null)) { logger.info(\"Mail sent to {} with submission reference {}\", registryData.get(\"email\").asText(), submissionReference); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/792/buggy-version/src.main.java.uk.gov.hmcts.probate.services.submit.clients.MailClient.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,registryData.get(\"email\").asText(),java.lang.String)", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "registryData.get(\"email\").asText()"], "Fixed commit": "e29020e8b990ac1fc9145823bfc8105f872d8089", "Url": "https://api.github.com/repos/hmcts/probate-submit-service", "Date": "2018-11-14T17:13:26Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { x += w; }else { x += \" \" + w; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5330/buggy-version/src.main.java.com.example.projectio.Translator.java", "BodyUseAPI": [], "Fixed commit": "067fe0f1b32bad324c0028ad70f8278666252896", "Url": "https://api.github.com/repos/DominikKossinski/Projekt-Inzynieria-Oprogramowania", "Date": "2018-11-07T11:05:56Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((options.outWidth) > reqWidth) || ((options.outHeight) > reqHeight)) { double widthRatio = ((double) (reqWidth)) / (options.outWidth); double heightRatio = ((double) (reqHeight)) / (options.outHeight); double ratio = (widthRatio < heightRatio) ? widthRatio : heightRatio; matrix.postScale(((float) (ratio)), ((float) (ratio))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3478/buggy-version/compressor.src.main.java.id.zelory.compressor.ImageUtil.java", "BodyUseAPI": [], "Fixed commit": "3bc134ca61e0445b3cf6ca8c68a6cb2ba8533630", "Url": "https://api.github.com/repos/Quasix/Compressor", "Date": "2018-12-31T06:04:07Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (rooms != null) { for (edu.rice.comp504.model.obj.ChatRoom room : rooms) { this.availableRoomIds.add(room.getId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7182/buggy-version/src.main.java.edu.rice.comp504.model.obj.User.java", "BodyUseAPI": [], "Fixed commit": "109e83557a2653e34146bb6b89c267021a9b91a4", "Url": "https://api.github.com/repos/Gene-He/NullSleepChatApp2", "Date": "2018-11-27T05:42:15Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((results.size()) != 0) { matchingCareProvider = results.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7778/buggy-version/app.src.main.java.ca.ualberta.cs.cmput301f18t19.hada.hada.manager.ESUserManager.java", "BodyUseAPI": ["java.util.List<ca.ualberta.cs.cmput301f18t19.hada.hada.model.CareProvider>.get(int)"], "Fixed commit": "b63c5684557ce5977f2a9dfbc2da569f5dd090a5", "Url": "https://api.github.com/repos/CMPUT301F18T19/HADA", "Date": "2018-11-24T22:10:08Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((results.size()) != 0) { matchingPatient = results.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7778/buggy-version/app.src.main.java.ca.ualberta.cs.cmput301f18t19.hada.hada.manager.ESUserManager.java", "BodyUseAPI": ["java.util.List<ca.ualberta.cs.cmput301f18t19.hada.hada.model.Patient>.get(int)"], "Fixed commit": "b63c5684557ce5977f2a9dfbc2da569f5dd090a5", "Url": "https://api.github.com/repos/CMPUT301F18T19/HADA", "Date": "2018-11-24T22:10:08Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["expense_amount.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((exp.length()) == 0) || ((java.lang.Double.parseDouble(exp)) < 0)) { android.widget.Toast.makeText(getActivity(), \"Enter correct amount!\", Toast.LENGTH_SHORT).show(); }else if (((expense_date) == null) || ((expense_date) == \"\")) { android.widget.Toast.makeText(getActivity(), \"Enter correct date!\", Toast.LENGTH_SHORT).show(); }else { application.android.com.expencestracker.Model.Expense expenserecord = new application.android.com.expencestracker.Model.Expense(java.lang.Double.parseDouble(exp), expense_category, application.android.com.expencestracker.Model.DateUtil.createDate(expense_date), java.lang.Integer.parseInt(user_id)); expensedata.add(expenserecord); spinner.setSelection(0); android.widget.Toast.makeText(getActivity(), \"Expense added\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9689/buggy-version/app.src.main.java.application.android.com.expencestracker.ExpensesFragment.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "2bdfa47265a5cefd6cd4304ec84bf97df049a9ed", "Url": "https://api.github.com/repos/Seif-Abedsslem/ExpenseTracker", "Date": "2018-11-23T13:10:08Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Object>.get(int)", "org.apache.dubbo.common.utils.ReflectUtils.getBoxedClass(java.lang.Class<?>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (boxedType != (arg.getClass())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7193/buggy-version/dubbo-rpc.dubbo-rpc-dubbo.src.main.java.org.apache.dubbo.rpc.protocol.dubbo.telnet.InvokeTelnetHandler.java", "BodyUseAPI": [], "Fixed commit": "6f6ef6c9f2100e6d9a69c0337601d766f5587dea", "Url": "https://api.github.com/repos/yuweihn/dubbo", "Date": "2018-12-11T07:02:18Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((agreement.getGycbhId()) != null) { com.baoviet.agency.domain.Moto moto = motoRepository.findOne(agreement.getGycbhId()); if (moto != null) { totalPremium = (agreement.getNetPremium()) - (((agreement.getNetPremium()) - (moto.getTndsBbPhi())) * ((checkGiftCodePercent(promotionBanks, config, agreement.getLineId(), bankCode)) / 100)); } }else { totalPremium = (agreement.getNetPremium()) - ((agreement.getNetPremium()) * ((checkGiftCodePercent(promotionBanks, config, agreement.getLineId(), bankCode)) / 100)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7400/buggy-version/agency-src.com.baoviet.agency.payment.gateway.AbstractPaymentGateway.java", "BodyUseAPI": ["com.baoviet.agency.payment.gateway.AbstractPaymentGateway.checkGiftCodePercent(java.util.List<com.baoviet.agency.domain.PromotionBank>,com.baoviet.agency.config.PaymentConfig,agreement.getLineId(),java.lang.String)", "com.baoviet.agency.domain.Agreement.getNetPremium()", "com.baoviet.agency.domain.Agreement.getGycbhId()", "com.baoviet.agency.domain.Agreement.getLineId()", "com.baoviet.agency.domain.Agreement.getNetPremium()", "com.baoviet.agency.domain.Agreement.getNetPremium()", "com.baoviet.agency.repository.MotoRepository.findOne(agreement.getGycbhId())", "com.baoviet.agency.domain.Agreement.getNetPremium()", "com.baoviet.agency.payment.gateway.AbstractPaymentGateway.checkGiftCodePercent(java.util.List<com.baoviet.agency.domain.PromotionBank>,com.baoviet.agency.config.PaymentConfig,agreement.getLineId(),java.lang.String)", "com.baoviet.agency.domain.Agreement.getLineId()"], "Fixed commit": "83ce09ad7b6afa2d29f371d060014cc9cdd2d59f", "Url": "https://api.github.com/repos/caf3sua/agency-service", "Date": "2018-11-27T02:34:45Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.baoviet.agency.repository.CarRepository.findOne(agreement.getGycbhId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (car != null) { totalPremium = (agreement.getNetPremium()) - ((car.getPhysicalDamagePremium()) * ((checkGiftCodePercent(promotionBanks, config, agreement.getLineId(), bankCode)) / 100)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7400/buggy-version/agency-src.com.baoviet.agency.payment.gateway.AbstractPaymentGateway.java", "BodyUseAPI": ["com.baoviet.agency.domain.Car.getPhysicalDamagePremium()"], "Fixed commit": "83ce09ad7b6afa2d29f371d060014cc9cdd2d59f", "Url": "https://api.github.com/repos/caf3sua/agency-service", "Date": "2018-11-27T02:34:45Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.example.kenzo.da.MainActivity.firstTime) { android.content.Intent intent = new android.content.Intent(this, com.example.kenzo.da.Welcome.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7389/buggy-version/app.src.main.java.com.example.kenzo.da.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "26219c0251ce0823e8b7126ed10d00ec721bb744", "Url": "https://api.github.com/repos/MahdiGHM/DA", "Date": "2018-12-03T22:54:37Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (serviceDiscovery) { if ((zooKeeperHelper) != null) { return zooKeeperHelper.isDeregisteredWithZooKeeper(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4453/buggy-version/service.src.java.org.apache.hive.service.server.HiveServer2.java", "BodyUseAPI": [], "Fixed commit": "4f9064167fda519ff341ad69f665e5501e5f2eb9", "Url": "https://api.github.com/repos/ashutosh-bapat/hive", "Date": "2018-11-26T11:56:39Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bouncycastle.asn1.x509.BasicConstraints.getInstance(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (basicConstraints.isCA()) { access.setPathLen(basicConstraints.getPathLenConstraint().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3339/buggy-version/src.util.UIUtils.java", "BodyUseAPI": ["x509.v3.GuiV3.setPathLen(basicConstraints.getPathLenConstraint().toString())", "org.bouncycastle.asn1.x509.BasicConstraints.getPathLenConstraint()", "basicConstraints.getPathLenConstraint().toString()"], "Fixed commit": "bba8181296cd36fae22a68c4bf192634006341cb", "Url": "https://api.github.com/repos/obabovic/x.509_certificate", "Date": "2017-05-16T11:23:37Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, editor.core.screen.elements.DialogueLine>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentDrag != null) currentDrags.remove(pointer);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5602/buggy-version/core.src.editor.core.control.DialogInputProccesser.java", "BodyUseAPI": [], "Fixed commit": "0b8538f129e1d23ff892e43b9eed85b65eed26fe", "Url": "https://api.github.com/repos/AbgarSim/TachyonEditor", "Date": "2018-12-27T12:06:26Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletResponse.getWriter()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(profile.getOneProfile(out, userID).getUserIsTeacher())) { printProgressbarForm(out, userID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3767/buggy-version/LearningEnhancementSystem.src.java.Servlets.Profile.java", "BodyUseAPI": ["Servlets.Profile.printProgressbarForm(java.io.PrintWriter,java.lang.String)"], "Fixed commit": "556514f4873428dbf4a98a12d737f684609610b9", "Url": "https://api.github.com/repos/vegardalvsaker/BrukerfeilLES", "Date": "2018-11-27T21:36:53Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iter instanceof com.graphhopper.util.CHEdgeIterator) if (((com.graphhopper.util.CHEdgeIterator) (iter)).isShortcut()) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8543/buggy-version/openrouteservice.src.main.java.heigit.ors.routing.graphhopper.extensions.edgefilters.core.AvoidBordersCoreEdgeFilter.java", "BodyUseAPI": [], "Fixed commit": "c3ae54cebb54385fe33d750fd14ff846eedf7b3c", "Url": "https://api.github.com/repos/GIScience/openrouteservice", "Date": "2018-12-21T14:30:06Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.epfl.sweng.favors.location.LocationHandler.distanceTo(com.google.firebase.firestore.GeoPoint)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (distance == 0) { return \"Near you\"; }else output = (java.lang.String.format(java.util.Locale.getDefault(), \"%.0f\", distance)) + \" m\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8031/buggy-version/app.src.main.java.ch.epfl.sweng.favors.location.LocationHandler.java", "BodyUseAPI": ["java.lang.String.format(java.util.Locale,java.lang.String,float)"], "Fixed commit": "399b1816e5c98aebdbe868435e21c8e290d129b8", "Url": "https://api.github.com/repos/basbeu/theSofties", "Date": "2018-11-21T18:03:11Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(argumentName.equals(\"\"))) { argumentsList.add(new pt.iscte.pidesco.codegenerator.wrappers.Field(\"Object\", argumentName.trim())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/913/buggy-version/pt.iscte.pidesco.codegenerator.src.pt.iscte.pidesco.codegenerator.internal.CodeGeneratorModel.java", "BodyUseAPI": ["java.lang.String.trim()", "java.util.List<pt.iscte.pidesco.codegenerator.wrappers.Field>.add(pt.iscte.pidesco.codegenerator.wrappers.Field)"], "Fixed commit": "c83af8fe054b6297f7b86f61d93d88f47addff16", "Url": "https://api.github.com/repos/JDSM01/pa-iscde-jdsma1", "Date": "2018-12-15T15:52:35Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selection.equals(\"\")) { return new pt.iscte.pidesco.codegenerator.wrappers.SimpleMethod(\"defaultMethod\", java.util.Collections.emptyList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/913/buggy-version/pt.iscte.pidesco.codegenerator.src.pt.iscte.pidesco.codegenerator.internal.CodeGeneratorModel.java", "BodyUseAPI": [], "Fixed commit": "c83af8fe054b6297f7b86f61d93d88f47addff16", "Url": "https://api.github.com/repos/JDSM01/pa-iscde-jdsma1", "Date": "2018-12-15T15:52:35Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(arguments.isEmpty())) { method = method.substring(0, ((method.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/913/buggy-version/pt.iscte.pidesco.codegenerator.src.pt.iscte.pidesco.codegenerator.internal.CodeGeneratorController.java", "BodyUseAPI": [], "Fixed commit": "c83af8fe054b6297f7b86f61d93d88f47addff16", "Url": "https://api.github.com/repos/JDSM01/pa-iscde-jdsma1", "Date": "2018-12-15T15:52:35Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((OPT_TARGET_PREVAL_SEL) != null) { resLength = 0; for (boolean sel : OPT_TARGET_PREVAL_SEL) { resLength += (sel) ? 1 : 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7282/buggy-version/src.opt.Opt_ResFunc_IntroInfection.java", "BodyUseAPI": [], "Fixed commit": "94ec73959301574ab0a60c2a6eff1e119c4700fc", "Url": "https://api.github.com/repos/bbcbh/Package_ACCEPtPlus", "Date": "2018-10-25T00:41:47Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mediaNode.get(\"edge_media_to_caption\").get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((edgesArray.isArray()) && ((edgesArray.size()) > 0)) { text = edgesArray.get(0).get(\"node\").get(\"text\").asText(); }else { text = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2495/buggy-version/src.main.java.org.mytoptag.model.deserializer.InstagramProfileDeserializer.java", "BodyUseAPI": ["edgesArray.get(0).get(\"node\").get(\"text\").asText()", "com.fasterxml.jackson.databind.JsonNode.get(int)", "edgesArray.get(0).get(java.lang.String)", "edgesArray.get(0).get(\"node\").get(java.lang.String)"], "Fixed commit": "dae019b54e26acfe6a78e5bbd1153ff70d16e9b6", "Url": "https://api.github.com/repos/smyachenkov/mytoptag", "Date": "2018-11-27T21:40:56Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fromType) == 1) { com.app.watermeter.manager.UserManager.getInstance().checkSmsCode(((countryCode) + (phoneNumber)), CommonParams.BUSS_REGISTER_TYPE, code); }else { com.app.watermeter.manager.UserManager.getInstance().checkSmsCode(((countryCode) + (phoneNumber)), CommonParams.BUSS_RESET_TYPE, code); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3103/buggy-version/app.src.main.java.com.app.watermeter.view.activity.RegisterCodeActivity.java", "BodyUseAPI": [], "Fixed commit": "86cd638d33fdee473cbe6a53c2e14b23847b4707", "Url": "https://api.github.com/repos/kotnekai/WaterGasMeter", "Date": "2018-12-07T07:00:04Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fromType) == 1) { com.app.watermeter.manager.UserManager.getInstance().sendSmsToCheck((countryCode + phoneNumber), CommonParams.BUSS_REGISTER_TYPE); }else { com.app.watermeter.manager.UserManager.getInstance().sendSmsToCheck((countryCode + phoneNumber), CommonParams.BUSS_RESET_TYPE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3103/buggy-version/app.src.main.java.com.app.watermeter.view.activity.RegisterPhoneActivity.java", "BodyUseAPI": [], "Fixed commit": "86cd638d33fdee473cbe6a53c2e14b23847b4707", "Url": "https://api.github.com/repos/kotnekai/WaterGasMeter", "Date": "2018-12-07T07:00:04Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.Ben12345rocks.VotingPlugin.Config.Config.getInstance().getVotePartyUserVotesRequired()) > 0) { if ((user.getVotePartyVotes()) < (com.Ben12345rocks.VotingPlugin.Config.Config.getInstance().getVotePartyUserVotesRequired())) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9011/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.VoteParty.VoteParty.java", "BodyUseAPI": [], "Fixed commit": "b7c73902f22b8cada770de236cd284a8126c0b52", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2018-12-02T17:57:28Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.price.finance_recorder_rest.persistence.MySQLDAO.read_user(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (entity == null) throw new com.price.finance_recorder_rest.exceptions.NoRecordFoundException(ExceptionType.NO_RECORD_FOUND.name());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1833/buggy-version/finance_recorder_rest.src.main.java.com.price.finance_recorder_rest.service.UserService.java", "BodyUseAPI": [], "Fixed commit": "3a9c7ff9d4bd2fdad6b48c7f398646976d4d7299", "Url": "https://api.github.com/repos/Everett6802/finance_recorder", "Date": "2018-12-07T09:29:55Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.google.android.gms.maps.model.Marker, android.animation.ValueAnimator>.get(com.google.android.gms.maps.model.Marker)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((valueAnimator.isRunning()) && (!(isTrippedVibrationSensor(sensorData)))) valueAnimator.pause();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8558/buggy-version/app.src.main.java.com.cs495.battleelite.battleelite.MapsActivity.java", "BodyUseAPI": ["android.animation.ValueAnimator.pause()"], "Fixed commit": "dc8c4da0637fa665b2a627a8314e51f04216be6e", "Url": "https://api.github.com/repos/BattleConnect/app", "Date": "2018-12-03T01:24:38Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.google.android.gms.maps.model.Marker, android.animation.ValueAnimator>.get(com.google.android.gms.maps.model.Marker)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((valueAnimator.isPaused()) && (isTrippedVibrationSensor(sensorData))) valueAnimator.resume();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8558/buggy-version/app.src.main.java.com.cs495.battleelite.battleelite.MapsActivity.java", "BodyUseAPI": ["android.animation.ValueAnimator.resume()"], "Fixed commit": "dc8c4da0637fa665b2a627a8314e51f04216be6e", "Url": "https://api.github.com/repos/BattleConnect/app", "Date": "2018-12-03T01:24:38Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.getName().endsWith(\".class\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2455/buggy-version/src.mujava.app.Core.java", "BodyUseAPI": [], "Fixed commit": "18d6d0a8a4578889a40dbebfcee2b5d2d185e75e", "Url": "https://api.github.com/repos/saiema/MuJava", "Date": "2018-12-14T17:36:15Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (positionMs > 0) { int skip = java.lang.Math.round((((audioIn.available()) / ((float) (duration))) * positionMs)); long skipped = audioIn.skip(skip); if (skip != skipped) throw new java.io.IOException(java.lang.String.format(\"Failed seeking, skip: %d, skipped: %d\", skip, skipped)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4336/buggy-version/core.src.main.java.org.librespot.spotify.player.PlayerRunner.java", "BodyUseAPI": ["java.lang.Math.round(float)"], "Fixed commit": "aebab4cd6d5d3f2a0ba7cd00da14f7be5bab7f21", "Url": "https://api.github.com/repos/librespot-org/librespot-java", "Date": "2018-11-19T20:34:31Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (panda.lang.Strings.isEmpty(key)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7146/buggy-version/panda-demo.src.main.java.panda.demo.action.pet.PetSearchAction.java", "BodyUseAPI": [], "Fixed commit": "0edd477ec51602b7fbba78e3d6729cadf0206e4d", "Url": "https://api.github.com/repos/pandafw/panda", "Date": "2018-06-06T13:22:15Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.maxgamer.quickshop.Listeners.PlayerInteractEvent.getClickedBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(org.maxgamer.quickshop.Util.Util.canBeShop(b, null, true))) && ((b.getType()) != (Material.WALL_SIGN))) { org.maxgamer.quickshop.Util.Util.debugLog(\"No shop block\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2294/buggy-version/src.main.java.org.maxgamer.quickshop.Listeners.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "92f2d0a96a29019f629159c5159e794b1835c84e", "Url": "https://api.github.com/repos/Ghost-chu/QuickShop-Reremake", "Date": "2018-12-30T07:35:36Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFirstVisibleViewPosition) > ((getItemCount()) - 1)) { mFirstVisibleViewPosition = 0; mOffset = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/501/buggy-version/presentation.src.main.java.com.mobdev.ivanovnv.spaceanalytix.customComponents.LaunchLayoutManager.java", "BodyUseAPI": [], "Fixed commit": "00f6569137b554108af96c78735f84185bfcb925", "Url": "https://api.github.com/repos/alien190/SpaceX", "Date": "2018-12-12T03:44:41Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (namePart.getValue().contains(\", \")) { sbName.append(namePart.getValue()); }else { sbName.append(namePart.getValue()).append(' '); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3749/buggy-version/proarc-common.src.main.java.cz.cas.lib.proarc.common.mods.ndk.MapperUtils.java", "BodyUseAPI": ["cz.cas.lib.proarc.mods.NamePartDefinition.getValue()", "cz.cas.lib.proarc.mods.NamePartDefinition.getValue()", "java.lang.StringBuilder.append(namePart.getValue())", "java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(namePart.getValue())"], "Fixed commit": "de445bd3fa7714fe3590c6de947271e61f9b9220", "Url": "https://api.github.com/repos/proarc/proarc", "Date": "2018-11-03T20:25:39Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.workbei.util.StringUtil.isEmpty(userVO.getAvatar())) { userVO.setAvatar(WbConstant.USER_DEFAULT_USER_AVATAR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7170/buggy-version/service.src.main.java.com.workbei.manager.user.impl.AccountManagerImpl.java", "BodyUseAPI": ["com.workbei.model.view.autocreate.AutoCreateUserVO.setAvatar(WbConstant.USER_DEFAULT_USER_AVATAR)"], "Fixed commit": "75177335faa6c7f493979142a869bf5a92b12d8f", "Url": "https://api.github.com/repos/WallaceMao/workbei-main", "Date": "2018-12-13T16:38:30Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((word.length()) == cursor) { longestPrefix = word; }else { longestPrefix = currString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4477/buggy-version/src.LambdaNFA.java", "BodyUseAPI": [], "Fixed commit": "3b275e042b711323dc8f65b5112d007174eeeab6", "Url": "https://api.github.com/repos/matthiasmoke/LambdaNFA", "Date": "2018-11-23T13:58:27Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getSource()) == (query)) { this.dispose(); new main.QueryArtUI(connectMysql); }else if ((e.getSource()) == (help)) { this.dispose(); new main.AlterPass(connectMysql); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9328/buggy-version/src.main.MainMenuUI.java", "BodyUseAPI": ["java.awt.event.ActionEvent.getSource()"], "Fixed commit": "df057cb320c35c965463013fb3acd598bc0e1986", "Url": "https://api.github.com/repos/Liuhjhj/ManagerSystem", "Date": "2018-12-21T09:16:01Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (root == null) return 0; else { int depth = 0; for (int i = 0; i < (root.children.size()); i++) { depth = java.lang.Math.max(depth, maxDepth(root.children.get(i))); } return depth + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1136/buggy-version/src.main.java.ink.lichen.leecode.tree.nt.MaxDepth.java", "BodyUseAPI": ["root.children.size()", "java.lang.Math.max(int,int)", "ink.lichen.leecode.tree.nt.MaxDepth.maxDepth(root.children.get(i))", "root.children.get(int)"], "Fixed commit": "c27c5af3e28f0b74671e312a22080e163ad24221", "Url": "https://api.github.com/repos/lllichen/leecode", "Date": "2018-12-17T01:13:26Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.length()) != (seq.length())) { return (this.length()) - (seq.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2085/buggy-version/MyString.java", "BodyUseAPI": ["java.lang.CharSequence.length()"], "Fixed commit": "883dba06a5c88cfb08f882bc3e61188a1e5a24b2", "Url": "https://api.github.com/repos/vsofat/MKS21X-MyString", "Date": "2018-11-27T03:59:58Z"},
{"Line": "=>726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value.isEmpty()) { numberOfAssignmentsError.setText(\"Please enter the number of assignments.\"); numberOfAssignmentsError.setVisible(true); isValid.put(\"numberOfAssignments\", false); Gradebook.enableButton(createNewClassBtn, isValid); }else { numberOfAssignmentsError.setVisible(false); isValid.put(\"numberOfAssignments\", true); Gradebook.enableButton(createNewClassBtn, isValid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2774/buggy-version/src.Gradebook.java", "BodyUseAPI": [], "Fixed commit": "a083eb184522a139e45702c48bda973f3c064714", "Url": "https://api.github.com/repos/rdeprey/cmsc495-gradebook", "Date": "2018-12-08T16:40:47Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotEmpty(humanTask.getDueDate())) { xtw.writeAttribute(org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_PREFIX, org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_NAMESPACE, org.flowable.cmmn.converter.export.ATTRIBUTE_DUE_DATE, humanTask.getDueDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6730/buggy-version/modules.flowable-cmmn-converter.src.main.java.org.flowable.cmmn.converter.export.HumanTaskExport.java", "BodyUseAPI": ["org.flowable.cmmn.model.HumanTask.getDueDate()", "javax.xml.stream.XMLStreamWriter.writeAttribute(org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_PREFIX,org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_NAMESPACE,org.flowable.cmmn.converter.export.ATTRIBUTE_DUE_DATE,humanTask.getDueDate())"], "Fixed commit": "27ac0129e0b1acbfe69c6c94c50f944b0ffc134d", "Url": "https://api.github.com/repos/flowable/flowable-engine", "Date": "2018-12-05T14:28:22Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotEmpty(humanTask.getCategory())) { xtw.writeAttribute(org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_PREFIX, org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_NAMESPACE, org.flowable.cmmn.converter.export.ATTRIBUTE_CATEGORY, humanTask.getCategory()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6730/buggy-version/modules.flowable-cmmn-converter.src.main.java.org.flowable.cmmn.converter.export.HumanTaskExport.java", "BodyUseAPI": ["javax.xml.stream.XMLStreamWriter.writeAttribute(org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_PREFIX,org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_NAMESPACE,org.flowable.cmmn.converter.export.ATTRIBUTE_CATEGORY,humanTask.getCategory())", "org.flowable.cmmn.model.HumanTask.getCategory()"], "Fixed commit": "27ac0129e0b1acbfe69c6c94c50f944b0ffc134d", "Url": "https://api.github.com/repos/flowable/flowable-engine", "Date": "2018-12-05T14:28:22Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotEmpty(humanTask.getPriority())) { xtw.writeAttribute(org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_PREFIX, org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_NAMESPACE, org.flowable.cmmn.converter.export.ATTRIBUTE_PRIORITY, humanTask.getPriority()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6730/buggy-version/modules.flowable-cmmn-converter.src.main.java.org.flowable.cmmn.converter.export.HumanTaskExport.java", "BodyUseAPI": ["org.flowable.cmmn.model.HumanTask.getPriority()", "javax.xml.stream.XMLStreamWriter.writeAttribute(org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_PREFIX,org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_NAMESPACE,org.flowable.cmmn.converter.export.ATTRIBUTE_PRIORITY,humanTask.getPriority())"], "Fixed commit": "27ac0129e0b1acbfe69c6c94c50f944b0ffc134d", "Url": "https://api.github.com/repos/flowable/flowable-engine", "Date": "2018-12-05T14:28:22Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.worshipsongs.parser.ICommitMessageParser.getShaKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((shaKey == null) || (shaKey.isEmpty())) { bundle.putString(CommonConstants.TITLE_KEY, context.getString(R.string.warning)); bundle.putString(CommonConstants.MESSAGE_KEY, \"Error occurred while checking song updates\"); org.worshipsongs.fragment.AlertDialogFragment alertDialogFragment = org.worshipsongs.fragment.AlertDialogFragment.newInstance(bundle); alertDialogFragment.setCancelable(false); alertDialogFragment.setVisibleNegativeButton(false); alertDialogFragment.setDialogListener(this); alertDialogFragment.show(context.getFragmentManager(), \"MessageUpdateFragment\"); }else if (existingShaKey.equalsIgnoreCase(shaKey)) { bundle.putString(CommonConstants.MESSAGE_KEY, context.getString(R.string.message_no_update)); org.worshipsongs.fragment.AlertDialogFragment alertDialogFragment = org.worshipsongs.fragment.AlertDialogFragment.newInstance(bundle); alertDialogFragment.setCancelable(false); alertDialogFragment.setVisibleNegativeButton(false); alertDialogFragment.setDialogListener(this); alertDialogFragment.show(context.getFragmentManager(), \"NoUpdateFragment\"); }else { bundle.putString(CommonConstants.MESSAGE_KEY, context.getString(R.string.message_update_available)); org.worshipsongs.fragment.AlertDialogFragment alertDialogFragment = org.worshipsongs.fragment.AlertDialogFragment.newInstance(bundle); alertDialogFragment.setCancelable(false); alertDialogFragment.setDialogListener(this); alertDialogFragment.show(context.getFragmentManager(), \"UpdateFragment\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5022/buggy-version/app.src.main.java.org.worshipsongs.task.HttpAsyncTask.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "39ac5dc33f7d104698bf027c816a12243bfe1a86", "Url": "https://api.github.com/repos/mcruncher/worshipsongs-android", "Date": "2018-11-26T08:20:11Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((smeId.longValue()) < 0) smeId = new java.lang.Long((-(smeId.longValue())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6477/buggy-version/src.server.repository.RepositoryChecker.java", "BodyUseAPI": ["java.lang.Long.longValue()"], "Fixed commit": "d0dc1965e0b250b2d1af8d8f2d52c18a71647ac5", "Url": "https://api.github.com/repos/schedulix/schedulix", "Date": "2018-12-19T12:58:22Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPlayer.getPlayerHand().contains(selectedCard)) && (!(selectedCard instanceof models.MagicCard))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8402/buggy-version/src.main.java.models.GameEngine.java", "BodyUseAPI": [], "Fixed commit": "cf662e7150fe29b6590cdb04040d61e8abaaafa7", "Url": "https://api.github.com/repos/mohammedalmahfoodh/group3", "Date": "2018-11-18T20:51:44Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((head) == null) { head = new Node(pair); tail = head; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1080/buggy-version/Bomberman.src.uet.oop.bomberman.entities.character.enemy.ai.AIMedium.java", "BodyUseAPI": [], "Fixed commit": "4ac92b3e956119f691578f87ce160b1a78bbd843", "Url": "https://api.github.com/repos/UET-INT2204-12-fall-18/assignment-2-bomberman-storm", "Date": "2018-11-29T03:51:46Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((head) == null) tail = head;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1080/buggy-version/Bomberman.src.uet.oop.bomberman.entities.character.enemy.ai.AIMedium.java", "BodyUseAPI": [], "Fixed commit": "4ac92b3e956119f691578f87ce160b1a78bbd843", "Url": "https://api.github.com/repos/UET-INT2204-12-fall-18/assignment-2-bomberman-storm", "Date": "2018-11-29T03:51:46Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(partyList.getParties().contains(party))) { partyList.addParty(party); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9197/buggy-version/week6.voteMachine.VoteMachine.java", "BodyUseAPI": ["ss.week6.voteMachine.PartyList.addParty(java.lang.String)"], "Fixed commit": "7b5d9574891c29238fa59185907cb4bbf33f48ca", "Url": "https://api.github.com/repos/S-Roediger/Software_Systems", "Date": "2018-12-19T12:34:36Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myDebugLevel) >= (HuffProcessor.DEBUG_HIGH)) java.lang.System.out.printf(\"readTreeHeader-> Value %d, Char: %c \\n\", value, ((char) (value)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6246/buggy-version/src.HuffProcessor.java", "BodyUseAPI": [], "Fixed commit": "bf299c584f347f3227f1eaf5d6dbb8b5b71721a9", "Url": "https://api.github.com/repos/bd121/Huffmanproject", "Date": "2018-12-08T04:17:37Z"},
{"Line": "=>837", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this._attached) { for (com.bergerkiller.bukkit.common.map.widgets.MapWidget child : this._children) { child.handleAttach(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8763/buggy-version/src.main.java.com.bergerkiller.bukkit.common.map.widgets.MapWidget.java", "BodyUseAPI": [], "Fixed commit": "968c8402274f06064a449e02d85b8d2578fc1153", "Url": "https://api.github.com/repos/bergerhealer/BKCommonLib", "Date": "2018-12-02T14:11:09Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sumaris.core.model.administration.programStrategy.PmfmStrategy.getPmfm()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pmfm.getMethod()) != null) { target.setMethodId(pmfm.getMethod().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3125/buggy-version/sumaris-core.src.main.java.net.sumaris.core.dao.administration.programStrategy.StrategyDaoImpl.java", "BodyUseAPI": ["net.sumaris.core.vo.administration.programStrategy.PmfmStrategyVO.setMethodId(pmfm.getMethod().getId())", "pmfm.getMethod().getId()", "net.sumaris.core.dao.administration.programStrategy.Pmfm.getMethod()"], "Fixed commit": "4d0c9bf445346d1b9d3bf6b2267834f73b6239c3", "Url": "https://api.github.com/repos/sumaris-net/sumaris-pod", "Date": "2018-11-16T14:34:45Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (phase.equals(models.game.GameState.Phase.FINISHED)) { this.turns = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1370/buggy-version/src.models.game.GameState.java", "BodyUseAPI": [], "Fixed commit": "73daac760044159d46af03dc125420c4a9a9c090", "Url": "https://api.github.com/repos/xwang1109/SOEN6441-22", "Date": "2018-11-29T20:40:03Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (token.equals(\"Hash\")) { name += \" Hash\"; }else { fko.UCI.UCIProtocolHandler.LOG.error((\"Command setoption is malformed - expected token value received: \" + token)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1139/buggy-version/src.main.java.fko.UCI.UCIProtocolHandler.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String)"], "Fixed commit": "2597c525063d67a09b961d0f887564710a1f6354", "Url": "https://api.github.com/repos/frankkopp/FrankyUCIChessEngine", "Date": "2018-12-26T12:11:08Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(num.chars().allMatch(java.lang.Character::isDigit))) { return num; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7901/buggy-version/src.main.java.pl.put.poznan.transformer.logic.NumToText.java", "BodyUseAPI": [], "Fixed commit": "96897065ac2c2f3c579f5331966873fb4fd958f3", "Url": "https://api.github.com/repos/NiewidzialnyCzlowiek/text-transformer", "Date": "2018-11-12T22:39:54Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.danie.mp3player.MP3Player.getFilePath()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (filePath != null) { java.lang.String[] splitString = filePath.split(\"/\"); songName = splitString[((splitString.length) - 1)]; android.util.Log.d(com.example.danie.mp3player.Services.MusicPlayerService.TAG, (\"getCurrentSongName: SongName: \" + songName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3647/buggy-version/app.src.main.java.com.example.danie.mp3player.Services.MusicPlayerService.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "dfc76a76368f58f619e75de5d1576af959f1a288", "Url": "https://api.github.com/repos/danielkwok21/MP3-player", "Date": "2018-11-13T07:52:28Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.minnen.retiretool.data.Sequence.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (N <= 0) { return rois; }else if (N <= nMonths) { double growth = org.minnen.retiretool.util.FinLib.getTotalReturn(cumulativeReturns, 0, (N - 1)); double roi = org.minnen.retiretool.util.FinLib.getAnnualReturn(growth, nMonths); rois.addData(roi, cumulativeReturns.getStartMS()); }else { for (int i = 0; (i + nMonths) <= N; ++i) { double roi = org.minnen.retiretool.util.FinLib.getTotalReturn(cumulativeReturns, i, ((i + nMonths) - 1)); if (nMonths >= 12) { roi = org.minnen.retiretool.util.FinLib.getAnnualReturn(roi, nMonths); }else { roi = org.minnen.retiretool.util.FinLib.mul2ret(roi); } rois.addData(roi, cumulativeReturns.getTimeMS(i)); } assert (rois.size()) > 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/221/buggy-version/org.minnen.retiretool.util.FinLib.java", "BodyUseAPI": ["org.minnen.retiretool.util.FinLib.getTotalReturn(org.minnen.retiretool.data.Sequence,int,int)"], "Fixed commit": "b03ccd1c33908fc15e2e03ec0f998b16b47a6e42", "Url": "https://api.github.com/repos/minnend/RetireTool", "Date": "2018-11-26T01:40:12Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (videoCurrentPosition != null) outState.putLong(\"videoCurrentPosition\", videoCurrentPosition);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5588/buggy-version/app.src.main.java.com.wangdiam.newbakingapp.fragment.StepDetailFragment.java", "BodyUseAPI": ["android.os.Bundle.putLong(java.lang.String,java.lang.Long)"], "Fixed commit": "f66623166d0f2acc1fd62d070d65d44792b652d5", "Url": "https://api.github.com/repos/wangdiam/NewBakingApp", "Date": "2018-12-27T11:46:55Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((year == 0) && (month == 0)) && (day == 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3982/buggy-version/deegree-datastores.deegree-featurestores.deegree-featurestore-shape.src.main.java.org.deegree.feature.persistence.shape.DBFReader.java", "BodyUseAPI": [], "Fixed commit": "4dda00a88f04d332bb677f63d4d0e0ebda15d866", "Url": "https://api.github.com/repos/wetransform-os/deegree3", "Date": "2018-11-20T18:14:40Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (month > 0) { month--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3982/buggy-version/deegree-datastores.deegree-featurestores.deegree-featurestore-shape.src.main.java.org.deegree.feature.persistence.shape.DBFReader.java", "BodyUseAPI": [], "Fixed commit": "4dda00a88f04d332bb677f63d4d0e0ebda15d866", "Url": "https://api.github.com/repos/wetransform-os/deegree3", "Date": "2018-11-20T18:14:40Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(clockNetNames.contains(currentLine[1]))) { currentBlock = parseInputBlock(); newBlock = true; }else { newBlock = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4277/buggy-version/task_1.src.designAnalyzer.inputParser.NetlistParser.java", "BodyUseAPI": [], "Fixed commit": "8073c4c5010556c68e48f2805f9b9bf8cbdde42f", "Url": "https://api.github.com/repos/011000101101/ACE", "Date": "2018-11-28T19:48:42Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDataListener) != null) { mScanner.removeDataListener(mDataListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8238/buggy-version/android.src.main.java.com.icwind.mc360scan.Mc360ScanPlugin.java", "BodyUseAPI": [], "Fixed commit": "69ae83664efea36a42dabf3b8ff535f06a14bacb", "Url": "https://api.github.com/repos/luozhou7dev/mc_360_scan", "Date": "2018-12-29T01:55:48Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDataListener) != null) { mScanner.removeDataListener(mDataListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8238/buggy-version/android.src.main.java.com.icwind.mc360scan.Mc360ScanPlugin.java", "BodyUseAPI": [], "Fixed commit": "69ae83664efea36a42dabf3b8ff535f06a14bacb", "Url": "https://api.github.com/repos/luozhou7dev/mc_360_scan", "Date": "2018-12-29T01:55:48Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.contains(resourceName)) { return java.util.Optional.of(this.get(resourceName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5421/buggy-version/src.de.gurkenlabs.litiengine.resources.ResourcesContainer.java", "BodyUseAPI": ["java.util.Optional.of(T)", "de.gurkenlabs.litiengine.resources.ResourcesContainer<T>.get(java.lang.String)"], "Fixed commit": "bf7d9e902c90df1a641f9e9b5f2b4435d19d3083", "Url": "https://api.github.com/repos/gurkenlabs/litiengine", "Date": "2018-12-18T22:55:14Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queryDocumentSnapshots.size()) != 0) { lastVisible = queryDocumentSnapshots.getDocuments().get(((queryDocumentSnapshots.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6395/buggy-version/app.src.main.java.com.example.hx_loom.evpa.FragmentHome.java", "BodyUseAPI": ["com.google.firebase.firestore.QuerySnapshot.getDocuments()", "com.google.firebase.firestore.QuerySnapshot.size()", "queryDocumentSnapshots.getDocuments().get(((queryDocumentSnapshots.size()) - 1))"], "Fixed commit": "278d6eebed62ed6e4091dc8faf15cafb71412324", "Url": "https://api.github.com/repos/harloom/Evpa", "Date": "2018-11-30T19:09:27Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(flag)) dataPreLoad.loadData();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1198/buggy-version/src.main.java.cn.springmvc.service.Recommend.java", "BodyUseAPI": [], "Fixed commit": "9c0c8dc31bdf14d090ca01ac065d98ec64c4d505", "Url": "https://api.github.com/repos/yeluting/github", "Date": "2018-11-19T15:54:34Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m == 0) || (m == (lengthOfComponents - 1))) { if ((lengthOfColumn > 0) && (lengthOfColumn < 4)) lengthOfColumn = 4; }else { if ((lengthOfColumn > 0) && (lengthOfColumn < 5)) lengthOfColumn = 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5088/buggy-version/src.main.java.table_formatter.PipeTableFormat.java", "BodyUseAPI": [], "Fixed commit": "e1d45234decc3576511d352d8d23d89e9d5d6ead", "Url": "https://api.github.com/repos/borisv13/GitHub-Flavored-Markdown-Eclipse-Plugin", "Date": "2018-11-28T01:48:20Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getGame().decreaseMoney(getCost()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7852/buggy-version/src.Transportation.Helicopter.java", "BodyUseAPI": [], "Fixed commit": "6ef439fc71fe37c7534cb11afb97153fe0a0e8ef", "Url": "https://api.github.com/repos/DanialErfanian/AP_18", "Date": "2018-12-24T17:58:53Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeout < 1) timeout = 200;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8045/buggy-version/guava.src.com.google.common.util.concurrent.Uninterruptibles.java", "BodyUseAPI": [], "Fixed commit": "476cb08892d59a562360b8b8f1307b73d5443cf4", "Url": "https://api.github.com/repos/BartlomiejTerenowicz/guava", "Date": "2018-11-15T22:32:26Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uniqueInstances.containsKey(instance)) { vertex = uniqueInstances.get(instance); }else { vertex = vertexCreator.apply(graph); uniqueInstances.put(instance, vertex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8637/buggy-version/src.main.java.com.family.tree.persistence.UniqueChecker.java", "BodyUseAPI": ["java.util.Map<T, org.apache.tinkerpop.gremlin.structure.Vertex>.get(T)", "java.util.Map<T, org.apache.tinkerpop.gremlin.structure.Vertex>.put(T,org.apache.tinkerpop.gremlin.structure.Vertex)"], "Fixed commit": "b17469946da501d787f11c6046a4ca95fa6d4544", "Url": "https://api.github.com/repos/MarinKacaj/FamilyTree", "Date": "2018-11-09T15:33:40Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.nlp.tagger.maxent.TaggerConfig.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (approx == null) { return getLang().equals(\"english\") ? 1.0 : 0.0; }else if (\"false\".equalsIgnoreCase(approx)) { return -1.0; }else if (\"true\".equalsIgnoreCase(approx)) { return 1.0; }else { return java.lang.Double.parseDouble(approx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5611/buggy-version/src.edu.stanford.nlp.tagger.maxent.TaggerConfig.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "6a221160dc4229d3358443fbd5437c5a570a33f3", "Url": "https://api.github.com/repos/stanfordnlp/CoreNLP", "Date": "2018-11-04T00:01:51Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((layout) != null) { layout.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5813/buggy-version/android.app.src.main.java.com.reactnativenavigation.controllers.NavigationActivity.java", "BodyUseAPI": [], "Fixed commit": "6787a48318711ce7607eb8df1a041b6243078a94", "Url": "https://api.github.com/repos/qudianapp/qd-react-native-navigation", "Date": "2018-11-28T06:52:42Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modalController) != null) { modalController.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5813/buggy-version/android.app.src.main.java.com.reactnativenavigation.controllers.NavigationActivity.java", "BodyUseAPI": [], "Fixed commit": "6787a48318711ce7607eb8df1a041b6243078a94", "Url": "https://api.github.com/repos/qudianapp/qd-react-native-navigation", "Date": "2018-11-28T06:52:42Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startId == endId) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8102/buggy-version/SmartRaceCar.Modules.racecarbackend.src.main.java.be.uantwerpen.fti.ds.sc.racecarbackend.CostCache.java", "BodyUseAPI": [], "Fixed commit": "9453550185490d351f85f1827301392b05960a03", "Url": "https://api.github.com/repos/SmartCity-UAntwerpen/SmartRaceCar", "Date": "2018-12-20T12:03:07Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (val instanceof java.lang.String) result.add(((java.lang.String) (val))); else result.add(java.lang.String.valueOf(val));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5800/buggy-version/Backend.src.main.java.i5.obd.backend.BackendService.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.valueOf(java.lang.Object)"], "Fixed commit": "224c212f47a3ef19c83cfcab54350b1743c8d7de", "Url": "https://api.github.com/repos/rwth-acis/Open-Badge-Designer", "Date": "2018-11-02T16:49:17Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resultText.equals(\"0\")) { resultText = \"\u4e0d\u8bbe\"; resultNumPaint.setTextSize(((int) (android.util.TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP, 16, getResources().getDisplayMetrics())))); resultNumPaint.getTextBounds(resultText, 0, resultText.length(), resultNumRect); canvas.drawText(resultText, (((width) / 2) - ((resultNumRect.width()) / 2)), resultNumRect.height(), resultNumPaint); }else { resultNumPaint.setTextSize(((int) (android.util.TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP, 20, getResources().getDisplayMetrics())))); resultNumPaint.getTextBounds(resultText, 0, resultText.length(), resultNumRect); canvas.drawText(resultText, (((width) / 2) - ((resultNumRect.width()) / 2)), resultNumRect.height(), resultNumPaint); resultNumRight = (((width) / 2) + ((resultNumRect.width()) / 2)) + 5; canvas.drawText(unit, resultNumRight, ((kgRect.height()) + 8), kgPaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4887/buggy-version/android.src.main.java.com.shenhuniurou.scrollruler.RNScrollRuler.java", "BodyUseAPI": ["android.graphics.Canvas.drawText(java.lang.String,(((width) / 2) - ((resultNumRect.width()) / 2)),resultNumRect.height(),android.graphics.Paint)", "android.graphics.Paint.getTextBounds(java.lang.String,int,int,android.graphics.Rect)", "java.lang.String.length()"], "Fixed commit": "a990cb95c72415017d02cc78c7e48098b657610d", "Url": "https://api.github.com/repos/shenhuniurou/react-native-scroll-ruler", "Date": "2018-12-28T02:41:15Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((num1 == 0) && ((minScale) == 0)) { scaleNumPaint.getTextBounds(\"\u4e0d\u8bbe\", 0, \"\u4e0d\u8bbe\".length(), scaleNumRect); canvas.drawText(\"\u4e0d\u8bbe\", ((-(scaleNumRect.width())) / 2), (((lagScaleHeight) + (((rulerHeight) - (lagScaleHeight)) / 2)) + (scaleNumRect.height())), scaleNumPaint); }else { scaleNumPaint.getTextBounds((((num1 / (scaleGap)) + (minScale)) + \"\"), 0, (((num1 / (scaleGap)) + (minScale)) + \"\").length(), scaleNumRect); canvas.drawText(((((num1 / (scaleCount)) + (minScale)) * (scaleLimit)) + \"\"), ((-(scaleNumRect.width())) / 2), (((lagScaleHeight) + (((rulerHeight) - (lagScaleHeight)) / 2)) + (scaleNumRect.height())), scaleNumPaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4887/buggy-version/android.src.main.java.com.shenhuniurou.scrollruler.RNScrollRuler.java", "BodyUseAPI": ["java.lang.String.length()", "android.graphics.Canvas.drawText(java.lang.String,((-(scaleNumRect.width())) / 2),(((lagScaleHeight) + (((rulerHeight) - (lagScaleHeight)) / 2)) + (scaleNumRect.height())),android.graphics.Paint)", "android.graphics.Paint.getTextBounds(java.lang.String,int,int,android.graphics.Rect)"], "Fixed commit": "a990cb95c72415017d02cc78c7e48098b657610d", "Url": "https://api.github.com/repos/shenhuniurou/react-native-scroll-ruler", "Date": "2018-12-28T02:41:15Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mShadowElevation) == 0) { shadowAlpha = 1.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4546/buggy-version/qmui.src.main.java.com.qmuiteam.qmui.layout.QMUILayoutHelper.java", "BodyUseAPI": [], "Fixed commit": "d6296fa6fb95443ce59a3d8f35303be7366d7b00", "Url": "https://api.github.com/repos/Tencent/QMUI_Android", "Date": "2018-11-22T06:52:44Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sky.core.SKYHelper.isMainLooperThread()) { throw new sky.core.exception.SKYArgumentException(\"is not main looper error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4227/buggy-version/sky.src.main.java.sky.core.SKYBiz.java", "BodyUseAPI": [], "Fixed commit": "df49bf3db0b56368f298c4690be7306e630302de", "Url": "https://api.github.com/repos/skyJinc/sky", "Date": "2018-12-05T09:40:18Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((hashTag == null) || (hashTag.equals(\"\"))) { gaArticleMapper.createHashTag(hashTagDTO); hashTagDTO.setHashtag_id(((hashTagDTO.getHashtag_id()) - 1)); }else { log.info(hashTag); hashTagDTO.setHashtag_id(java.lang.Integer.parseInt(hashTag)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3939/buggy-version/src.main.java.kr.or.kosta.salmon.service.GaArticleServiceImpl.java", "BodyUseAPI": ["kr.or.kosta.salmon.domain.HashTagDTO.setHashtag_id(int)", "kr.or.kosta.salmon.service.GaArticleServiceImpl.info(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "37d51c31c51be02739af116aac9d4987dd20f351", "Url": "https://api.github.com/repos/life0style0/hanaGagyeViEW", "Date": "2018-12-12T06:59:16Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["promoCode.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (inputPromoCode.isEmpty()) { toastMessage(\"Promo Code Not Valid\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7042/buggy-version/app.src.main.java.com.example.myapplication.ShoppingCart.java", "BodyUseAPI": [], "Fixed commit": "5510d4ee6a122fdbe185eb66a59a966631a35d04", "Url": "https://api.github.com/repos/MarkyMan4/ShoppingCart", "Date": "2018-11-14T18:51:48Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isNotBlank(language)) { final com.fasterxml.jackson.databind.node.ObjectNode lang = com.scienceminer.nerd.client.NerdClient.mapper.createObjectNode().put(\"lang\", language); query.set(\"language\", lang); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2586/buggy-version/src.main.java.com.scienceminer.nerd.client.NerdClient.java", "BodyUseAPI": ["com.scienceminer.nerd.client.NerdClient.mapper.createObjectNode().put(java.lang.String,java.lang.String)"], "Fixed commit": "21f9e211d29ca07cf6d377e2b1c653dd5d30c60a", "Url": "https://api.github.com/repos/hirmeos/entity-fishing-client-java", "Date": "2018-11-14T11:17:33Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (area instanceof com.group6.Server.Environment.Division) inDivision(((com.group6.Server.Environment.Division) (area))); else if (area.isPosIn(robot.getPosition())) activeAreas.add(area);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6324/buggy-version/src.main.java.com.group6.Server.Environment.Environment.java", "BodyUseAPI": ["java.util.List<com.group6.Server.Environment.IArea>.add(com.group6.Server.Environment.IArea)", "com.group6.Server.Environment.IArea.isPosIn(robot.getPosition())"], "Fixed commit": "7edc5d7b65bf562246c791fccbe93074fff95612", "Url": "https://api.github.com/repos/Cutecurtain/ROVU_Rovers", "Date": "2018-12-20T12:24:49Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ticketDTO.getDate().toString()", "ticketDTO.getStopoverFrom().getStation().getName()", "ticketDTO.getStopoverTo().getStation().getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((searchTrainService.getFreeTicketNumber(tmpRouteList, tmpStationFrom, tmpStationTo, tmpDate).get(0)) > 0) { ticketDAO.create(ticket); com.tsystems.mrc.services.impl.TicketServiceImpl.LOG.info(com.tsystems.mrc.services.impl.TicketServiceImpl.SUCCESSFULLY); }else { com.tsystems.mrc.services.impl.TicketServiceImpl.LOG.warn(\"All tickets are sold\"); throw new com.tsystems.mrc.services.exceptions.ServiceException(\"Sorry, all tickets are sold.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2236/buggy-version/MainApp.src.main.java.com.tsystems.mrc.services.impl.TicketServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "2226f28e31a04b8ec4e0f81a04f6731bbf5d4d63", "Url": "https://api.github.com/repos/nikita-butko/java-school", "Date": "2018-12-14T00:02:53Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (badgeList != null) { badgeList.forEach(( badge) -> badges.put(badge.get(\"id\"), \"1\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6695/buggy-version/common.src.main.java.com.github.twitch4j.common.util.TwitchUtils.java", "BodyUseAPI": ["java.util.List<java.util.Map<java.lang.String, java.lang.String>>.forEach(java.util.function.Consumer<? super java.util.Map<java.lang.String, java.lang.String>>)"], "Fixed commit": "db007453146f2d79694d5772baadb794ede7facd", "Url": "https://api.github.com/repos/twitch4j/twitch4j", "Date": "2018-12-25T13:41:14Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jTableDB.getSelectedRow()) >= 0) { tempusername = ((java.lang.String) (jTableDB.getValueAt(jTableDB.getSelectedRow(), 0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5393/buggy-version/Restaurant.src.gui.UserControllerGUI.java", "BodyUseAPI": ["javax.swing.JTable.getSelectedRow()", "javax.swing.JTable.getValueAt(int,int)"], "Fixed commit": "22f83b2efd38d11853639a8141706239b51e15f3", "Url": "https://api.github.com/repos/momoNiti/CafeJava", "Date": "2018-12-12T18:20:57Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { setFragment(mapFragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4204/buggy-version/app.src.main.java.com.example.lachlanhuang.buskerbusker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ddb5ccd3cc1959992e843048e4afc9116311941b", "Url": "https://api.github.com/repos/lychuang/mobile_team3", "Date": "2018-11-05T16:54:43Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inSequenceVariant) { currentSequenceVariant.setVariation(bio.singa.structure.model.families.AminoAcidFamily.getAminoAcidTypeByOneLetterCode(new java.lang.String(ch, start, length)).orElseThrow(() -> new java.lang.IllegalArgumentException(((new java.lang.String(ch, start, length)) + \" is no valid amino acid one letter code.\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4159/buggy-version/singa-chemistry.src.main.java.bio.singa.chemistry.features.databases.uniprot.UniProtContentHandler.java", "BodyUseAPI": [], "Fixed commit": "de1d4785745d5ae0e2ba70ce377d31ae9a06c7e1", "Url": "https://api.github.com/repos/singa-bio/singa", "Date": "2018-11-09T09:56:50Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inSequenceVariant) { currentSequenceVariant.setOriginal(bio.singa.structure.model.families.AminoAcidFamily.getAminoAcidTypeByOneLetterCode(new java.lang.String(ch, start, length)).orElseThrow(() -> new java.lang.IllegalArgumentException(((new java.lang.String(ch, start, length)) + \" is no valid amino acid one letter code.\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4159/buggy-version/singa-chemistry.src.main.java.bio.singa.chemistry.features.databases.uniprot.UniProtContentHandler.java", "BodyUseAPI": [], "Fixed commit": "de1d4785745d5ae0e2ba70ce377d31ae9a06c7e1", "Url": "https://api.github.com/repos/singa-bio/singa", "Date": "2018-11-09T09:56:50Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (cardEffect == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1750/buggy-version/src.main.java.dk.dtu.CDIT_Grp_43_matador.matador.entity.NewChanceCard.java", "BodyUseAPI": [], "Fixed commit": "da9adde2a822508dfb9a528985503d1791f81b59", "Url": "https://api.github.com/repos/SirDancealot/CDIO-Grp-43", "Date": "2018-12-25T18:40:14Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1712/buggy-version/app.src.main.java.escom.ipn.mx.appbecas.Mapa.java", "BodyUseAPI": [], "Fixed commit": "b51287c351de57da45229a2d11c0ca526f40dc81", "Url": "https://api.github.com/repos/alexjusto10/AppBecas", "Date": "2018-12-06T10:25:56Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((tokenInfo.symbol) == null) && ((realmToken.getSymbol()) != null)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7576/buggy-version/app.src.main.java.io.stormbird.wallet.entity.Token.java", "BodyUseAPI": [], "Fixed commit": "6153e308db5c26fc075b212055dbeba2fda844ba", "Url": "https://api.github.com/repos/AlphaWallet/alpha-wallet-android", "Date": "2018-12-04T07:15:44Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((tokenInfo.name) == null) && ((realmToken.getName()) != null)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7576/buggy-version/app.src.main.java.io.stormbird.wallet.entity.Token.java", "BodyUseAPI": [], "Fixed commit": "6153e308db5c26fc075b212055dbeba2fda844ba", "Url": "https://api.github.com/repos/AlphaWallet/alpha-wallet-android", "Date": "2018-12-04T07:15:44Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isError.equals(\"0\")) { byte[] tradeBytes = io.stormbird.wallet.entity.EtherscanTransaction.parser.getTradeBytes(ticketIndexArray, contractAddress, priceWei, expiry); java.math.BigInteger key = org.web3j.crypto.Sign.signedMessageToKey(tradeBytes, sig); ct.setOtherParty((\"0x\" + (org.web3j.crypto.Keys.getAddress(key)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7576/buggy-version/app.src.main.java.io.stormbird.wallet.entity.EtherscanTransaction.java", "BodyUseAPI": [], "Fixed commit": "6153e308db5c26fc075b212055dbeba2fda844ba", "Url": "https://api.github.com/repos/AlphaWallet/alpha-wallet-android", "Date": "2018-12-04T07:15:44Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((matcher.groupCount()) > 0) arg1 = matcher.group(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1400/buggy-version/nand-to-tettris.src.main.java.org.nand.to.tettris.vm.translator.Parser.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)"], "Fixed commit": "2ddb5ae3ff8b4c8de32b7a06de881c58d752b0ac", "Url": "https://api.github.com/repos/asela38/experiments", "Date": "2018-12-17T23:11:10Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nand.to.tettris.vm.translator.Parser.OpPattern.getMatcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (arithmeticOpMatcher.matches()) { commandType = CommandType.C_ARITHMETIC; setArgs(arithmeticOpMatcher); }else if (popOpMatcher.matches()) { commandType = CommandType.C_POP; setArgs(popOpMatcher); }else if (pushOpMatcher.matches()) { commandType = CommandType.C_PUSH; setArgs(pushOpMatcher); }else if (labelOpMatcher.matches()) { commandType = CommandType.C_LABEL; setArgs(labelOpMatcher); }else if (ifGotoOpMatcher.matches()) { commandType = CommandType.C_IF; setArgs(ifGotoOpMatcher); }else if (gotoOpMatcher.matches()) { commandType = CommandType.C_GOTO; setArgs(gotoOpMatcher); }else if (callOpMatcher.matches()) { commandType = CommandType.C_CALL; setArgs(callOpMatcher); }else if (functionOpMatcher.matches()) { commandType = CommandType.C_FUNCTION; setArgs(functionOpMatcher); }else { java.lang.System.out.println((\"Non matching Line: \" + (current))); advance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1400/buggy-version/nand-to-tettris.src.main.java.org.nand.to.tettris.vm.translator.Parser.java", "BodyUseAPI": ["org.nand.to.tettris.vm.translator.Parser.setArgs(java.util.regex.Matcher)"], "Fixed commit": "2ddb5ae3ff8b4c8de32b7a06de881c58d752b0ac", "Url": "https://api.github.com/repos/asela38/experiments", "Date": "2018-12-17T23:11:10Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (1 < (component.getInstanceCount())) { cp_absolute = cp_absolute.setY(0.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3052/buggy-version/core.src.net.sf.openrocket.aerodynamics.BarrowmanCalculator.java", "BodyUseAPI": [], "Fixed commit": "51418e34bcf30c009704c19082442674db184646", "Url": "https://api.github.com/repos/JoePfeiffer/openrocket", "Date": "2018-11-05T15:00:59Z"},
{"Line": "=>1436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerInvited.equalsIgnoreCase(playerInviting)) { return (\"You are already in group [\" + groupName) + \"].\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2283/buggy-version/src.GameCore.java", "BodyUseAPI": [], "Fixed commit": "04af81b40294892cc2d7137f89a44a61a06f1d90", "Url": "https://api.github.com/repos/shayhoss/CS321-2018F-002", "Date": "2018-11-18T03:13:39Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((ss = domain.TSFReader.parseJSON(space, i_state, json)) == null) { java.lang.System.err.println(\"-- It is not possible to create a state with a node that does not belong to the space state of this city/town.\\n\\nProgram closed.\"); java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/424/buggy-version/src.domain.Problem.java", "BodyUseAPI": [], "Fixed commit": "cf21a406b911d68e6bcfccc0dfcbbbfada60a901", "Url": "https://api.github.com/repos/A1-04/towngraph", "Date": "2018-11-08T18:54:49Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentValue()) == null) { setCurrentValue(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2788/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.EditGUI.EditGUIButton.java", "BodyUseAPI": [], "Fixed commit": "7b4e7c5ad8d705c00353fff68d00392ca10d5fc9", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-12-09T02:03:47Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentValue()) == null) { setCurrentValue(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2788/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.EditGUI.EditGUIButton.java", "BodyUseAPI": [], "Fixed commit": "7b4e7c5ad8d705c00353fff68d00392ca10d5fc9", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-12-09T02:03:47Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentValue()) == null) { setCurrentValue(new java.util.ArrayList<java.lang.String>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2788/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.EditGUI.EditGUIButton.java", "BodyUseAPI": [], "Fixed commit": "7b4e7c5ad8d705c00353fff68d00392ca10d5fc9", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-12-09T02:03:47Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentValue()) == null) { setCurrentValue(\"false\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2788/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.EditGUI.EditGUIButton.java", "BodyUseAPI": [], "Fixed commit": "7b4e7c5ad8d705c00353fff68d00392ca10d5fc9", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-12-09T02:03:47Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ownerReadTime) == null) { ownerReadTime = 0L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6861/buggy-version/app.src.main.java.live.noxbox.model.Chat.java", "BodyUseAPI": [], "Fixed commit": "5ef0e4e92e62ff7e3dc72a9883a86cfa7d47a69d", "Url": "https://api.github.com/repos/Lipnevich/noxbox", "Date": "2018-12-20T10:21:24Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((partyReadTime) == null) { partyReadTime = 0L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6861/buggy-version/app.src.main.java.live.noxbox.model.Chat.java", "BodyUseAPI": [], "Fixed commit": "5ef0e4e92e62ff7e3dc72a9883a86cfa7d47a69d", "Url": "https://api.github.com/repos/Lipnevich/noxbox", "Date": "2018-12-20T10:21:24Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (Property.Property.NATIVE_IP.split(\".\", 2)[0].equals(\"172\")) { tail = \"AHNU\"; }else { tail = \"OPP\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5944/buggy-version/ChitChat.src.Property.Property.java", "BodyUseAPI": [], "Fixed commit": "44a5e6125de974c4c9186c5cd7bee65f1d8b93c0", "Url": "https://api.github.com/repos/RickyTong1/ChitChat", "Date": "2018-12-21T03:10:28Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scaledHeading < 0) { robot.rightDrive.setPower((-speed)); robot.rightBack.setPower((-speed)); robot.leftDrive.setPower(speed); robot.leftBack.setPower(speed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2204/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.AutonomousBase.java", "BodyUseAPI": [], "Fixed commit": "981e26d39c0291f2d9c557ed5cacb2ceb3f3f1c8", "Url": "https://api.github.com/repos/OHSRobotics/FTC-369-2018-2019-Rover-Ruckus", "Date": "2018-12-16T04:18:44Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getSerializableExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((teacher.getStatus()) == 0) { callButton.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4548/buggy-version/app.src.main.java.com.gyk.teameleven.gykteameleven.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "5a2e3b8dba8fffc4f700206e9a41df7ec1f3edcb", "Url": "https://api.github.com/repos/dcanaktemur/gyk-team-eleven", "Date": "2018-11-18T18:11:33Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["currentMatch.getScore().getWinner()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (winner.equals(ScoreEntity.AWAY_TEAM_WINNER)) { viewHolder.homeTeamNameText.setTypeface(null, Typeface.NORMAL); viewHolder.awayTeamNameText.setTypeface(null, Typeface.BOLD); viewHolder.homeTeamScoreText.setTypeface(null, Typeface.NORMAL); viewHolder.awayTeamScoreText.setTypeface(null, Typeface.BOLD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6132/buggy-version/app.src.main.java.tech.joeyck.livefootball.ui.competition_detail.matches.MatchesAdapter.java", "BodyUseAPI": [], "Fixed commit": "fcaff1efaa85eb3d911bdf552d42010d2a55a8ee", "Url": "https://api.github.com/repos/s6joui/football-data-android-java", "Date": "2018-12-01T13:05:44Z"},
{"Line": "=>1141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pSearchResults.contains(p))) { pSearchResults.add(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2331/buggy-version/app.src.main.java.com.example.cmput301f18t26.icare.Controllers.DataController.java", "BodyUseAPI": ["java.util.ArrayList<com.example.cmput301f18t26.icare.Models.Problem>.add(com.example.cmput301f18t26.icare.Models.Problem)"], "Fixed commit": "3cb2a73771cf92df619c69a761656932d5127757", "Url": "https://api.github.com/repos/CMPUT301F18T26/iCare", "Date": "2018-12-03T06:29:59Z"},
{"Line": "=>1104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pSearchResults.contains(p))) { pSearchResults.add(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2331/buggy-version/app.src.main.java.com.example.cmput301f18t26.icare.Controllers.DataController.java", "BodyUseAPI": ["java.util.ArrayList<com.example.cmput301f18t26.icare.Models.Problem>.add(com.example.cmput301f18t26.icare.Models.Problem)"], "Fixed commit": "3cb2a73771cf92df619c69a761656932d5127757", "Url": "https://api.github.com/repos/CMPUT301F18T26/iCare", "Date": "2018-12-03T06:29:59Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(joinTable.isInMemoryTable())) { throw new org.ballerinalang.util.exceptions.BallerinaException(\"Table query over a cursor table not supported\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1486/buggy-version/bvm.ballerina-core.src.main.java.org.ballerinalang.model.values.BTable.java", "BodyUseAPI": [], "Fixed commit": "4ed9a425adef960395131da9f1a3ef76cd370c41", "Url": "https://api.github.com/repos/ballerina-platform/ballerina-lang", "Date": "2018-11-27T12:45:14Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(fromTable.isInMemoryTable())) { throw new org.ballerinalang.util.exceptions.BallerinaException(\"Table query over a cursor table not supported\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1486/buggy-version/bvm.ballerina-core.src.main.java.org.ballerinalang.model.values.BTable.java", "BodyUseAPI": [], "Fixed commit": "4ed9a425adef960395131da9f1a3ef76cd370c41", "Url": "https://api.github.com/repos/ballerina-platform/ballerina-lang", "Date": "2018-11-27T12:45:14Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.firestore.QuerySnapshot.getDocuments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((java.lang.Integer.parseInt(qsList.get(i).get(\"size\").toString())) < 8) { db_group_names.add(qsList.get(i).get(\"group_name\").toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/9607/buggy-version/app.src.main.java.domain.tiger.axon.GroupAvailableActivity.java", "BodyUseAPI": ["qsList.get(i).get(\"group_name\").toString()", "java.util.List<com.google.firebase.firestore.DocumentSnapshot>.get(int)", "java.util.List<java.lang.String>.add(qsList.get(i).get(\"group_name\").toString())", "qsList.get(i).get(java.lang.String)"], "Fixed commit": "8c3ca03444f039c85fc53e9643fcec08b3737bc8", "Url": "https://api.github.com/repos/Navigators-CPEN321/Axon_App", "Date": "2018-11-18T05:09:12Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client) != null) { client.onMainActivityResult(request, response, intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7625/buggy-version/android.org.godotengine.godot.GodotPlayGameServices.java", "BodyUseAPI": [], "Fixed commit": "a75f75f5b46846b4affb3918f2e1235058863fb6", "Url": "https://api.github.com/repos/JavaryGames/gpgs", "Date": "2018-12-12T20:39:33Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((savedGames) != null) { savedGames.onMainActivityResult(request, response, intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7625/buggy-version/android.org.godotengine.godot.GodotPlayGameServices.java", "BodyUseAPI": [], "Fixed commit": "a75f75f5b46846b4affb3918f2e1235058863fb6", "Url": "https://api.github.com/repos/JavaryGames/gpgs", "Date": "2018-12-12T20:39:33Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((realTimeMultiplayer) != null) { realTimeMultiplayer.onMainActivityResult(request, response, intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7625/buggy-version/android.org.godotengine.godot.GodotPlayGameServices.java", "BodyUseAPI": [], "Fixed commit": "a75f75f5b46846b4affb3918f2e1235058863fb6", "Url": "https://api.github.com/repos/JavaryGames/gpgs", "Date": "2018-12-12T20:39:33Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Auth.GoogleSignInApi.getSignInResultFromIntent(android.content.Intent)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (result != null) { message = result.getStatus().getStatusMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7625/buggy-version/android.org.godotengine.godot.gpgs.Client.java", "BodyUseAPI": ["com.google.android.gms.auth.api.signin.GoogleSignInResult.getStatus()", "result.getStatus().getStatusMessage()"], "Fixed commit": "a75f75f5b46846b4affb3918f2e1235058863fb6", "Url": "https://api.github.com/repos/JavaryGames/gpgs", "Date": "2018-12-12T20:39:33Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((java.lang.Integer) (lo)) == null) || (((java.lang.Integer) (hi)) == null)) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5823/buggy-version/src.main.java.main.java.RandomNumber.java", "BodyUseAPI": [], "Fixed commit": "e0ed7b9860894ebb3bfd9d9ce04de9e8c766c1c9", "Url": "https://api.github.com/repos/gcarvajal97/gcarvaj3_review", "Date": "2018-11-05T23:06:54Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.densestSubgraph.vertexSet().size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3098/buggy-version/jgrapht-core.src.main.java.org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "b31dc2fea2843ea2736126e301a94a8ea22a2a13", "Url": "https://api.github.com/repos/Aimmig/jgrapht", "Date": "2018-11-23T10:09:34Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (this.graph.vertexSet().isEmpty()) { this.densestSubgraph = new org.jgrapht.alg.densesubgraph.AsSubgraph(this.graph, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3098/buggy-version/jgrapht-core.src.main.java.org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "b31dc2fea2843ea2736126e301a94a8ea22a2a13", "Url": "https://api.github.com/repos/Aimmig/jgrapht", "Date": "2018-11-23T10:09:34Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.densestSubgraph.vertexSet().size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3098/buggy-version/jgrapht-core.src.main.java.org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeights.java", "BodyUseAPI": [], "Fixed commit": "b31dc2fea2843ea2736126e301a94a8ea22a2a13", "Url": "https://api.github.com/repos/Aimmig/jgrapht", "Date": "2018-11-23T10:09:34Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.graph.vertexSet().isEmpty()) && (this.graph.edgeSet().isEmpty())) { this.densestSubgraph = new org.jgrapht.alg.densesubgraph.AsSubgraph(this.graph, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3098/buggy-version/jgrapht-core.src.main.java.org.jgrapht.alg.densesubgraph.GoldbergMaximumDensitySubgraphAlgorithmNodeWeights.java", "BodyUseAPI": [], "Fixed commit": "b31dc2fea2843ea2736126e301a94a8ea22a2a13", "Url": "https://api.github.com/repos/Aimmig/jgrapht", "Date": "2018-11-23T10:09:34Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index < 0) || (index > (size()))) { throw new java.lang.IndexOutOfBoundsException(); }else if (index == (size())) { add(element); }else if (index < (size())) { add(element); java.lang.String[] dataTemp = new java.lang.String[size]; dataTemp = data; for (int i = index + 1; i < (size()); i++) { dataTemp[i] = data[(i - 1)]; } dataTemp[index] = element; data = dataTemp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4321/buggy-version/SuperArray.java", "BodyUseAPI": [], "Fixed commit": "2867bf8e6e700fb5bfc89ae65d2e0ba42836b84a", "Url": "https://api.github.com/repos/dramsammy/MKS21X-SuperArray", "Date": "2018-11-06T21:04:43Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!(isValidDate(date))) && (!(\"0\".equals(date)))) { throw new seedu.addressbook.data.exception.IllegalValueException(MESSAGE_DATE_CONSTRAINTS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2390/buggy-version/src.seedu.addressbook.commands.fees.EditFeesCommand.java", "BodyUseAPI": [], "Fixed commit": "1dac240058363b1d7d1054bd9d2c2826e75b500c", "Url": "https://api.github.com/repos/lucdx/main", "Date": "2018-11-04T09:11:16Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((documentSnapshot.getBoolean(\"online\")) != null) { setOnline(documentSnapshot.getBoolean(\"online\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7851/buggy-version/app.src.main.java.com.iths.grupp4.a4chat.chatroomlists.PmViewHolder.java", "BodyUseAPI": ["com.iths.grupp4.a4chat.chatroomlists.PmViewHolder.1.setOnline(documentSnapshot.getBoolean(\"online\"))", "com.google.firebase.firestore.DocumentSnapshot.getBoolean(java.lang.String)"], "Fixed commit": "6e46b9d1a2bdd6afef2a2db10b0e3c1b2d84f55d", "Url": "https://api.github.com/repos/jenz0rw00t/4Chat", "Date": "2018-12-10T08:18:07Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((documentSnapshot.getBoolean(\"online\")) != null) { setOnline(documentSnapshot.getBoolean(\"online\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7851/buggy-version/app.src.main.java.com.iths.grupp4.a4chat.chatroomlists.PmViewHolder.java", "BodyUseAPI": ["com.iths.grupp4.a4chat.chatroomlists.PmViewHolder.2.setOnline(documentSnapshot.getBoolean(\"online\"))", "com.google.firebase.firestore.DocumentSnapshot.getBoolean(java.lang.String)"], "Fixed commit": "6e46b9d1a2bdd6afef2a2db10b0e3c1b2d84f55d", "Url": "https://api.github.com/repos/jenz0rw00t/4Chat", "Date": "2018-12-10T08:18:07Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(mUserId)) { mUserId = \"est131210\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3383/buggy-version/logutil.src.main.java.com.id.spice.logutil.MyCardActivity.java", "BodyUseAPI": [], "Fixed commit": "d078c1fd729d4071af2a67385fabaa925cd31a81", "Url": "https://api.github.com/repos/manasabrol90/LogUtil-Spice", "Date": "2018-11-06T11:18:15Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["giuseppe.graziano.thermostat.service.ThermostatRepository.findThermostatById(user.getSelectedThermostatId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((thermostat.getSource()) != null) { thermostatMap.put(\"source\", java.lang.String.valueOf(thermostat.getSource().getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/402/buggy-version/src.main.java.giuseppe.graziano.thermostat.service.ThermostatService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)", "giuseppe.graziano.thermostat.service.Thermostat.getSource()", "thermostat.getSource().getId()", "java.lang.String.valueOf(thermostat.getSource().getId())"], "Fixed commit": "5326e787dbd3d78e24caa31959aff7282bcba615", "Url": "https://api.github.com/repos/peps14/graziano-thermostat-backend", "Date": "2018-11-23T00:59:19Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDrawing) { path.lineTo(circleX, circleY); canvas.drawPath(path, colors.get(color)); path.reset(); path.moveTo(circleX, circleY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8706/buggy-version/app.src.main.java.ch.epfl.sweng.SDP.game.drawing.PaintView.java", "BodyUseAPI": [], "Fixed commit": "d16222940951196dc25836c43ba691cb5b442a58", "Url": "https://api.github.com/repos/gyrodraw/GyroDraw", "Date": "2018-12-07T11:40:14Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((l < 0) || (r < 0)) || (l > r)) return (edu_cn.pku.course.Utils.errorPrefix) + \"error when extracting substrings\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2450/buggy-version/app.src.main.java.edu_cn.pku.course.Utils.java", "BodyUseAPI": [], "Fixed commit": "5fc2855415420f594af2f969c04e26e852391f19", "Url": "https://api.github.com/repos/cbwang2016/PKUCourses", "Date": "2018-11-23T03:29:12Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((l < 0) || (r < 0)) || (l > r)) return (edu_cn.pku.course.Utils.errorPrefix) + \"error when extracting substrings\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2450/buggy-version/app.src.main.java.edu_cn.pku.course.Utils.java", "BodyUseAPI": [], "Fixed commit": "5fc2855415420f594af2f969c04e26e852391f19", "Url": "https://api.github.com/repos/cbwang2016/PKUCourses", "Date": "2018-11-23T03:29:12Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.time.LocalDate.of(java.lang.Integer,java.lang.Integer,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((startDate.getMonthValue()) == 12) { nextMonth = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7162/buggy-version/src.main.java.ba.infostudio.com.web.rest.PrPayrollSettingsResource.java", "BodyUseAPI": [], "Fixed commit": "c86e946d95693a22bdbf789ece324dd95628040a", "Url": "https://api.github.com/repos/operta/hcmPrMicroservice", "Date": "2018-11-05T16:29:16Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSelectedItem) == (-1)) { mSelectedItem = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/4311/buggy-version/app.src.main.java.com.agafonova.inhale.adapters.TimerDataAdapter.java", "BodyUseAPI": [], "Fixed commit": "ae40bec348b4e5aec1e393ee3720c50a7a5f4bb6", "Url": "https://api.github.com/repos/oa2013/Inhale", "Date": "2018-11-16T19:50:03Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nb_days <= 30) { if (nb_days == 0) { if (nb_hours <= 0) sb.append(\"Now\"); else sb.append(((\"In \" + nb_hours) + \" Hours\")); }else sb.append(((\"In \" + nb_days) + \" Days\")); }else { if ((!(getEndDateString().equals(getStartDateString()))) && ((endDate.getSeconds()) != 59)) { sb.append(\"Du \"); }else { sb.append(\"Le \"); } sb.append(dateRemoveZeroHour(startDate)); if ((!(getEndDateString().equals(getStartDateString()))) && ((endDate.getSeconds()) != 59)) { sb.append(\" au \"); sb.append(dateRemoveZeroHour(endDate)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8715/buggy-version/app.src.main.java.ch.epfl.sweng.zuluzulu.Structure.EventDate.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "080b80c996fbfdc7cb75c2839c3f2512c9813034", "Url": "https://api.github.com/repos/njomeau/EPFLife", "Date": "2018-12-04T18:59:51Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (parts[i].equals(\"601fc2f5-ae70-42ed-a47c-d7264cb3404a\")) { parts[i] = \"33737357-0218-4b19-8fd4-cbfca60c9a5e\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/6188/buggy-version/core.api.src.main.java.sh.isaac.api.ConceptProxy.java", "BodyUseAPI": [], "Fixed commit": "a23d78bb402650e74e16dfae52c48cee2ed5af3b", "Url": "https://api.github.com/repos/OSEHRA/ISAAC", "Date": "2018-11-18T06:28:53Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.adobe.fd.core.components.models.AEMFormModel.ADAPTIVE_DOCUMENT.equals(formType)) { return icChannel; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7021/buggy-version/forms-spa.bundles.core.src.main.java.com.adobe.fd.core.components.models.AEMFormModel.java", "BodyUseAPI": [], "Fixed commit": "118845e30be28c07e23b3099457e27069abe1843", "Url": "https://api.github.com/repos/projjal/aem-forms", "Date": "2018-11-17T18:49:06Z"},
{"Line": "=>4332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.server.am.ActivityStack.getTaskAccessInfoLocked(tr.taskId,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((info.mainThumbnail) == null) { info.mainThumbnail = tr.lastThumbnail; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7744/buggy-version/services.java.com.android.server.am.ActivityStack.java", "BodyUseAPI": [], "Fixed commit": "88923c973e3b58593c4d0fb6724addcefc53004f", "Url": "https://api.github.com/repos/KSJ8/platform_frameworks_base", "Date": "2012-09-22T01:47:17Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.quality) >= maxQuality) { this.quality = maxQuality; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/892/buggy-version/src.main.java.com.gildedrose.model.TicketItem.java", "BodyUseAPI": [], "Fixed commit": "a2b20266829ba3fcbd7f074687e4bc7104859d3d", "Url": "https://api.github.com/repos/chillerfx/GildedRose-Refactoring-Kata-Java", "Date": "2018-11-25T00:35:01Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getMethod().toUpperCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (method.equals(\"OPTIONS\")) { response.setStatus(200); log.trace(((\"Aborting preflight request with status [200], method [\" + method) + \"]\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/5724/buggy-version/core.src.main.java.nl.nn.adapterframework.http.rest.ApiListenerServlet.java", "BodyUseAPI": ["org.apache.log4j.Logger.trace(java.lang.String)"], "Fixed commit": "907689a15d72c9513c83b8a8b68caba620eaba42", "Url": "https://api.github.com/repos/LaurensMakel1/iaf", "Date": "2018-11-06T09:25:30Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tc.getState().equals(TrainCard.State.VISIBLE)) { tc.setState(TrainCard.State.HIDDEN); updateTrainCard(tc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1369/buggy-version/src.main.java.com.wwttr.database.DatabaseFacade.java", "BodyUseAPI": ["com.wwttr.database.TrainCard.setState(TrainCard.State.HIDDEN)", "com.wwttr.database.DatabaseFacade.updateTrainCard(com.wwttr.database.TrainCard)"], "Fixed commit": "6b6e61e909d6994da3f8459b8f364968267bbe37", "Url": "https://api.github.com/repos/woodfields-warriors/server", "Date": "2018-11-20T17:47:36Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRangePriceSku) { return priceRanges.get(0).getConvertPrice(); }else { return java.lang.Float.parseFloat(price); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2938/buggy-version/app.src.main.java.com.alitoyou.Product.java", "BodyUseAPI": [], "Fixed commit": "f041ed14d1974b5372d50d5e24fb544d3448ee8b", "Url": "https://api.github.com/repos/singtolee/ALITOYOUANDROID", "Date": "2018-12-27T09:11:20Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((queryResponse != null) && ((queryResponse.getStatus()) == (lk.uom.cse14.dsd.comm.response.Response.FAIL))) { lk.uom.cse14.dsd.query.QueryTask qt = this.queryTasks.get(queryRequest.getRequestID()); lk.uom.cse14.dsd.msghandler.QueryResultSet resultSetDummy = new lk.uom.cse14.dsd.msghandler.QueryResultSet(); if (qt != null) { qt.setQueryResult(resultSetDummy); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/2159/buggy-version/src.main.java.lk.uom.cse14.dsd.msghandler.QueryHandler.java", "BodyUseAPI": [], "Fixed commit": "c10e99f1abba88a33c7566e6ef5bcc14f9fd9672", "Url": "https://api.github.com/repos/umstek/dsd", "Date": "2018-11-30T06:50:01Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((account.getAuthorities()) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7782/buggy-version/src.main.java.iziPak.entity.NewAccountForm.java", "BodyUseAPI": [], "Fixed commit": "eb84e77479f3bb20cdb89016a736a5fe5357d94a", "Url": "https://api.github.com/repos/izirapcode/WebShop", "Date": "2018-11-05T14:02:19Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((account.getPassword()) != null) return account.getPassword().substring(6);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/7782/buggy-version/src.main.java.iziPak.entity.NewAccountForm.java", "BodyUseAPI": ["account.getPassword().substring(int)", "iziPak.entity.Account.getPassword()"], "Fixed commit": "eb84e77479f3bb20cdb89016a736a5fe5357d94a", "Url": "https://api.github.com/repos/izirapcode/WebShop", "Date": "2018-11-05T14:02:19Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dappley.android.sdk.crypto.AesCipher.decryptBytesFromHex(wallet.getEncryptedMnemonic(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (decrypted != null) { wallet.setMnemonic(new java.lang.String(decrypted)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/1544/buggy-version/android.DappleyAndroid.sdk.src.main.java.com.dappley.android.sdk.chain.WalletManager.java", "BodyUseAPI": ["com.dappley.android.sdk.po.Wallet.setMnemonic(java.lang.String)"], "Fixed commit": "872c7d53ffcbd139a29a6b68603c42ddce5ecaae", "Url": "https://api.github.com/repos/dappley/dappley-java", "Date": "2018-12-03T09:35:01Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pl.edu.icm.unity.JsonUtil.notNull(request, \"Context\")) { com.fasterxml.jackson.databind.node.ObjectNode context = ((com.fasterxml.jackson.databind.node.ObjectNode) (request.get(\"Context\"))); java.lang.String triggeringMode = context.get(\"triggeringMode\").asText(); if (pl.edu.icm.unity.store.migration.from2_7.UpdateHelperFrom2_7.TRIGGER_MODE_OLD_NAME.equals(triggeringMode)) { pl.edu.icm.unity.store.migration.from2_7.UpdateHelperFrom2_7.log.info(\"Updating {} triggerMode from {} to {}\\n{}\", source, pl.edu.icm.unity.store.migration.from2_7.UpdateHelperFrom2_7.TRIGGER_MODE_OLD_NAME, pl.edu.icm.unity.store.migration.from2_7.UpdateHelperFrom2_7.TRIGGER_MODE_NEW_NAME, request); context.put(\"triggeringMode\", pl.edu.icm.unity.store.migration.from2_7.UpdateHelperFrom2_7.TRIGGER_MODE_NEW_NAME); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/3764/buggy-version/storage.src.main.java.pl.edu.icm.unity.store.migration.from2_7.UpdateHelperFrom2_7.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.info(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.fasterxml.jackson.databind.node.ObjectNode)", "com.fasterxml.jackson.databind.node.ObjectNode.get(java.lang.String)"], "Fixed commit": "460e8a4796ac9ca3dcffe2a162aa690ceac38088", "Url": "https://api.github.com/repos/unity-idm/unity", "Date": "2018-12-16T21:20:25Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((x >= 0) && (x <= 3)) && (y >= 0)) && (y <= 3)) { char cellValue = this.board[y][x]; if (cellValue == 0) { if (this.turn.compareAndSet(player, this.getNonTurn())) { this.board[y][x] = assignedChar.charValue(); return this.checkFinishGame(); }else { throw new io.gridgo.example.tiktactoe.game.GameException(\"Bad move, invalid turn\"); } }else { throw new io.gridgo.example.tiktactoe.game.GameException(\"Bad move, cell already filled\"); } }else { throw new io.gridgo.example.tiktactoe.game.GameException(((((\"Bad move, invalid cell location (\" + x) + \",\") + y) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/668/buggy-version/examples.gridgo-example-tik-tac-toe.src.main.java.io.gridgo.example.tiktactoe.game.Game.java", "BodyUseAPI": [], "Fixed commit": "b8acb983c736516c08cbbca3ba27c4331e32757e", "Url": "https://api.github.com/repos/gridgo/gridgo", "Date": "2018-12-06T12:33:39Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (user != null) { modl.put(\"auth\", true); modl.put(\"username\", user.getUsername()); for (domain.entities.Role r : user.getRoles()) { if ((r.compareTo(Role.ADMIN)) == 0) { modl.put(\"userrole\", Role.ADMIN); }else { modl.put(\"userrole\", Role.USER); } } }else { modl.put(\"auth\", false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V174/8926/buggy-version/src.main.java.domain.controller.StatisticController.java", "BodyUseAPI": ["domain.entities.User.getRoles()", "domain.entities.User.getUsername()", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,user.getUsername())"], "Fixed commit": "13f40777d38aad949c2e8d055a62a0f0abbd15ac", "Url": "https://api.github.com/repos/IrynaZazyba/mvn", "Date": "2018-12-11T19:00:11Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tmobile.recon.service.ILoginService.validateUser(com.tmobile.recon.model.Login)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result.equals(\"email & password exists\")) { return new org.springframework.http.ResponseEntity<org.springframework.http.HttpStatus>(org.springframework.http.HttpStatus.FOUND); }else { return new org.springframework.http.ResponseEntity<org.springframework.http.HttpStatus>(org.springframework.http.HttpStatus.NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4067/buggy-version/src.main.java.com.tmobile.recon.controller.LoginController.java", "BodyUseAPI": [], "Fixed commit": "28476059a62954f4d45098956af042f53cd67862", "Url": "https://api.github.com/repos/yranjana21/reconSpringApp", "Date": "2018-11-20T11:23:18Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (type.equals(org.genie.GenieSdkUtilHandler.TYPE_OPEN_PLAY_STORE)) { java.lang.String appId = args.getString(1); org.genie.GenieSdkUtilHandler.openGooglePlay(cordova, appId); callbackContext.success(); }else if (type.equals(org.genie.GenieSdkUtilHandler.TYPE_GET_DEVICE_API_LEVEL)) { org.genie.GenieSdkUtilHandler.getDeviceAPILevel(callbackContext); }else if (type.equals(org.genie.GenieSdkUtilHandler.TYPE_CHECK_APP_AVAILABILITY)) { org.genie.GenieSdkUtilHandler.checkAppAvailability(cordova, args, callbackContext); }else if (type.equals(org.genie.GenieSdkUtilHandler.TYPE_CHECK_APP_AVAILABILITY)) { org.genie.GenieSdkUtilHandler.checkAppAvailability(cordova, args, callbackContext); }else if (type.equals(org.genie.GenieSdkUtilHandler.TYPE_GET_DOWNLOAD_DIRECTORY_PATH)) { org.genie.GenieSdkUtilHandler.getDownloadDirectoryPath(callbackContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2221/buggy-version/src.android.org.genie.GenieSdkUtilHandler.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "e41a1f0598945a3a9da340fb9a54b14b6b66ca63", "Url": "https://api.github.com/repos/project-sunbird/cordova-plugin-genie-sdk", "Date": "2018-11-29T10:36:01Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["idText.getText().toString()", "ageText.getText().toString()", "genderText.getText().toString()", "nameText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((getName.equals(\"\")) && (getAge.equals(\"\"))) && (getGender.equals(\"\"))) && (getID.equals(\"\"))) { android.widget.Toast.makeText(getApplicationContext(), \"please fillup the requirement data \", Toast.LENGTH_SHORT).show(); }else { long rowid = myDatabaseHelper.insertData(getName, getAge, getGender); if (rowid > 0) { android.widget.Toast.makeText(getApplicationContext(), ((\"Row \" + rowid) + \" is successfully inserted \"), Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(getApplicationContext(), \"Unsuccessful \", Toast.LENGTH_SHORT).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8794/buggy-version/app.src.main.java.com.example.shuvo.mysqlitedatabasedemo.MainActivity.java", "BodyUseAPI": ["com.example.shuvo.mysqlitedatabasedemo.MyDatabaseHelper.insertData(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "6c139895dfbd7413339ebbee9a3ffc3387a96ec6", "Url": "https://api.github.com/repos/riadshuvo/SQLite-Database-Demo", "Date": "2018-11-28T18:56:41Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["idText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (getID.equals(\"\")) { android.widget.Toast.makeText(getApplicationContext(), \"please fillup the requirement data \", Toast.LENGTH_SHORT).show(); }else { java.lang.Boolean isUpdated = myDatabaseHelper.updateData(getID, getName, getAge, getGender); if (isUpdated == true) { android.widget.Toast.makeText(getApplicationContext(), \"Data is updated \", Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(getApplicationContext(), \" Update unsuccessful \", Toast.LENGTH_SHORT).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8794/buggy-version/app.src.main.java.com.example.shuvo.mysqlitedatabasedemo.MainActivity.java", "BodyUseAPI": ["com.example.shuvo.mysqlitedatabasedemo.MyDatabaseHelper.updateData(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "6c139895dfbd7413339ebbee9a3ffc3387a96ec6", "Url": "https://api.github.com/repos/riadshuvo/SQLite-Database-Demo", "Date": "2018-11-28T18:56:41Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.academiadecodigo.hashtronauts.server.todolist.TodoListStore.getTodo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((todoList.getItem(itemId)) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3659/buggy-version/src.org.academiadecodigo.hashtronauts.server.Server.java", "BodyUseAPI": [], "Fixed commit": "2e4b436795929c48e991b00ddfb7544af17aad8e", "Url": "https://api.github.com/repos/n20amaral/PromptToDo", "Date": "2018-11-04T23:57:43Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.academiadecodigo.hashtronauts.server.todolist.TodoList.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (todoItem == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3659/buggy-version/src.org.academiadecodigo.hashtronauts.server.Server.java", "BodyUseAPI": [], "Fixed commit": "2e4b436795929c48e991b00ddfb7544af17aad8e", "Url": "https://api.github.com/repos/n20amaral/PromptToDo", "Date": "2018-11-04T23:57:43Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opennms.netmgt.dao.api.NodeDao.getDefaultFocusPoint()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (node != null) { return org.opennms.netmgt.enlinkd.model.NodeTopologyEntity.toNodeTopologyInfo(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/74/buggy-version/features.enlinkd.service.impl.src.main.java.org.opennms.netmgt.enlinkd.service.impl.NodeTopologyServiceImpl.java", "BodyUseAPI": ["org.opennms.netmgt.enlinkd.model.NodeTopologyEntity.toNodeTopologyInfo(org.opennms.netmgt.model.OnmsNode)"], "Fixed commit": "c322c0346b2c62bbe305ad8ea5ed1c4fe37d4a22", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2018-12-19T21:12:59Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.String.class.equals(clazz)) { return \"\"; }else if (java.lang.Void.TYPE.equals(clazz)) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1009/buggy-version/hmily-tcc-common.src.main.java.com.hmily.tcc.common.utils.DefaultValueUtils.java", "BodyUseAPI": ["java.lang.Class<java.lang.Void>.equals(java.lang.Class)"], "Fixed commit": "e8be1bcf6d8d9b34fcea9f33560bdf38f6a4feb9", "Url": "https://api.github.com/repos/kissss/hmily", "Date": "2018-11-01T10:16:25Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result[0]) < (result[1])) { com.qmuiteam.qmui.util.QMUIDisplayHelper.sPortraitRealSizeCache = result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9331/buggy-version/qmui.src.main.java.com.qmuiteam.qmui.util.QMUIDisplayHelper.java", "BodyUseAPI": [], "Fixed commit": "cfddcb0ca351c752d75d14a4879e0525e49132cf", "Url": "https://api.github.com/repos/Tencent/QMUI_Android", "Date": "2018-11-12T12:40:45Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result[0]) > (result[1])) { com.qmuiteam.qmui.util.QMUIDisplayHelper.sLandscapeRealSizeCache = result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9331/buggy-version/qmui.src.main.java.com.qmuiteam.qmui.util.QMUIDisplayHelper.java", "BodyUseAPI": [], "Fixed commit": "cfddcb0ca351c752d75d14a4879e0525e49132cf", "Url": "https://api.github.com/repos/Tencent/QMUI_Android", "Date": "2018-11-12T12:40:45Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(vpnServiceRunning)) { appInfos.get(position).setFlowAllow((!(appInfos.get(position).isFlowAllow()))); appListAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2649/buggy-version/app.src.main.java.com.nuaa.is.rootfreefirewall.view.fragment.NetworkFragment.java", "BodyUseAPI": [], "Fixed commit": "c96b99054c9bc74f98780f2f9e7a12a876d38874", "Url": "https://api.github.com/repos/FlyAndNotDown/RootFreeFirewall", "Date": "2018-12-22T20:08:56Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.holidayjournal.models.HolidayModel>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((holiday.getRating()) == 10) { holder.rating.setText(\"10\"); }else { holder.rating.setText(java.lang.String.valueOf(holiday.getRating())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3082/buggy-version/app.src.main.java.com.holidayjournal.ui.holidays.HolidayAdapter.java", "BodyUseAPI": ["java.lang.String.valueOf(holiday.getRating())", "android.widget.TextView.setText(java.lang.String)", "com.holidayjournal.models.HolidayModel.getRating()"], "Fixed commit": "686f3a5055111d24790c3a3b24f75038a65c6f70", "Url": "https://api.github.com/repos/StephanK90/HolidayJournal", "Date": "2018-12-02T13:54:10Z"},
{"Line": "=>785", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hzgc.common.service.api.service.PlatformService.getCommunityIdsById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((communityIds != null) && ((communityIds.size()) > 0)) { list = peopleMapper.getCommunityIdsById(communityIds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4611/buggy-version/Service.People.src.main.java.com.hzgc.service.people.service.PeopleService.java", "BodyUseAPI": ["com.hzgc.service.people.service.PeopleMapper.getCommunityIdsById(java.util.List<java.lang.Long>)"], "Fixed commit": "eebd6f89f974f79eeab6b36866a668259f8fc646", "Url": "https://api.github.com/repos/5jia7/GoSunBigData", "Date": "2018-11-19T02:55:46Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.exist.util.ExistSAXParserFactory.LOG.isDebugEnabled()) { org.exist.util.ExistSAXParserFactory.LOG.debug(((\"Method \" + className) + \".newInstance not found.\"), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5146/buggy-version/src.org.exist.util.ExistSAXParserFactory.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.debug(java.lang.String,java.lang.Exception)"], "Fixed commit": "45c129b14e1429403ca2eabe5c0db890c661cdfa", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-11-07T16:38:50Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.exist.util.ExistSAXParserFactory.LOG.isDebugEnabled()) { org.exist.util.ExistSAXParserFactory.LOG.debug(java.lang.String.format(\"Using default SAXParserFactory '%s'\", factory.getClass().getCanonicalName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5146/buggy-version/src.org.exist.util.ExistSAXParserFactory.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "45c129b14e1429403ca2eabe5c0db890c661cdfa", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-11-07T16:38:50Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.exist.util.ExistSAXParserFactory.LOG.isDebugEnabled()) { org.exist.util.ExistSAXParserFactory.LOG.debug(((\"Could not invoke method \" + className) + \".newInstance.\"), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5146/buggy-version/src.org.exist.util.ExistSAXParserFactory.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.debug(java.lang.String,java.lang.ReflectiveOperationException)"], "Fixed commit": "45c129b14e1429403ca2eabe5c0db890c661cdfa", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-11-07T16:38:50Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.exist.util.ExistSAXParserFactory.LOG.isDebugEnabled()) { org.exist.util.ExistSAXParserFactory.LOG.debug(((className + \": \") + (ex.getMessage())), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5146/buggy-version/src.org.exist.util.ExistSAXParserFactory.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.debug(java.lang.String,java.lang.ClassNotFoundException)"], "Fixed commit": "45c129b14e1429403ca2eabe5c0db890c661cdfa", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-11-07T16:38:50Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.exist.util.ExistSAXParserFactory.LOG.isDebugEnabled()) { org.exist.util.ExistSAXParserFactory.LOG.debug((\"Could not create instance of SAXParserFactory: \" + (result.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5146/buggy-version/src.org.exist.util.ExistSAXParserFactory.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "45c129b14e1429403ca2eabe5c0db890c661cdfa", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-11-07T16:38:50Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"row\".equals(name)) { curRow = java.lang.Integer.parseInt(attributes.getValue(\"r\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6263/buggy-version/src.main.java.io.github.biezhi.excel.plus.handler.Excel2007Handler.java", "BodyUseAPI": [], "Fixed commit": "6b4e8e4e666d26c2b8f5fdbc70a0ab307e8110fc", "Url": "https://api.github.com/repos/ydq/excel-plus", "Date": "2018-11-09T03:33:41Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) <= 23) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7132/buggy-version/app.src.main.java.com.teachassist.teachassist.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "85d9cbd19ce129b6365a4aebf794bb278e0da520", "Url": "https://api.github.com/repos/milbin/Teach-Assist-Android", "Date": "2018-12-21T03:10:53Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ptg.vrm.pr.vo.request.GetAllPrRequest.getViewStatus()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((viewStatus != null) && ((viewStatus.length) > 0)) { sb.append(\" AND pr_h.status IN ( \"); for (int i = 0; i < (viewStatus.length); i++) { params.add(viewStatus[i]); if (i > 0) { sb.append(\" , \"); } sb.append(\" ? \"); } sb.append(\" ) \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6685/buggy-version/ptg-vrm-api.src.main.java.com.ptg.vrm.pr.service.GetAllPrService.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.add(java.lang.String)"], "Fixed commit": "add10f5509e8d2c46f17bef12a83f5bde5e25339", "Url": "https://api.github.com/repos/baiwa/ptg-vrm-api", "Date": "2018-11-21T07:25:56Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (worldClient == null) { this.chunksToRebuild.clear(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1963/buggy-version/src.main.java.fi.dy.masa.litematica.schematic.placement.SchematicPlacementManager.java", "BodyUseAPI": [], "Fixed commit": "1e9aa4e9c1aec0de188df56a7f45701d200a2607", "Url": "https://api.github.com/repos/maruohon/litematica", "Date": "2018-12-08T18:39:19Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { checkedAdditives = new java.util.HashSet(savedInstanceState.getStringArrayList(\"checked_additives\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9759/buggy-version/app.src.main.java.me.anon.grow.fragment.StatisticsFragment.java", "BodyUseAPI": ["android.os.Bundle.getStringArrayList(java.lang.String)"], "Fixed commit": "a4e3aeb6e5f5e8b0335e1428f32c29c311beadce", "Url": "https://api.github.com/repos/7LPdWcaW/GrowTracker-Android", "Date": "2018-12-23T17:18:51Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (res.hasErrors()) { res.removeParsingResult(); }else { res.setResult(decorationTable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4582/buggy-version/src.main.java.parser.decoration.table.process.DecorationTableConverter.java", "BodyUseAPI": ["parser.decoration.table.process.DecorationTableParsingResult.setResult(model.decoration.table.DecorationTable)", "parser.decoration.table.process.DecorationTableParsingResult.removeParsingResult()"], "Fixed commit": "ea70829fe7730277d10f6b2766ce976e8811ee4c", "Url": "https://api.github.com/repos/chloeguilbaud/Capitrain_SeriesTemporelles", "Date": "2018-11-18T15:13:05Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.netbeans.gradle.model.util.Exceptions.getActualMessage(java.lang.Throwable)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (message == null) { return \"?\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5569/buggy-version/netbeans-gradle-plugin.src.main.java.org.netbeans.gradle.project.model.issue.ModelLoadIssueReporter.java", "BodyUseAPI": [], "Fixed commit": "1fe41c7ff79f8b05a2bac2c396229416276c81a2", "Url": "https://api.github.com/repos/kelemen/netbeans-gradle-project", "Date": "2018-12-28T19:26:24Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((t.captainId) == captainId) { throw new CentreSportif.IFT287Exception(\"Le capitaine est capitaine d'une autre equipe de la meme ligue.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6562/buggy-version/CentreSportif.src.CentreSportif.TeamsManager.java", "BodyUseAPI": [], "Fixed commit": "6e24ffc1a6cfcee3f936c2c15e1362b11d0f2ee9", "Url": "https://api.github.com/repos/OliPerraul/ift287-tp4", "Date": "2018-11-15T20:45:49Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currInvoice.getId()) == null) { currInvoice.setId(dbInvoice.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6031/buggy-version/code.billapp-service.src.main.java.com.rns.web.billapp.service.bo.impl.BillBusinessBoImpl.java", "BodyUseAPI": ["com.rns.web.billapp.service.bo.domain.BillInvoice.setId(dbInvoice.getId())"], "Fixed commit": "1a9a9e3115e17b398c3cb46a763b74874792f6a1", "Url": "https://api.github.com/repos/ajaxkulkarni/bill-service", "Date": "2018-12-24T08:19:11Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hi.Battle.player.getHealth()) > 0) { hi.Battle.player.attack(enemyList[hi.Battle.whichToAttack]); if (hi.Battle.player.getCheckRan()) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5106/buggy-version/src.hi.Battle.java", "BodyUseAPI": ["hi.Adventurer.getCheckRan()", "hi.Adventurer.attack(enemyList[hi.Battle.whichToAttack])"], "Fixed commit": "f50ee731b8ee5d901891e1c37bba65db443878ec", "Url": "https://api.github.com/repos/JonahtCheyette/Text-Adventure", "Date": "2018-11-18T20:49:17Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deferred == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/832/buggy-version/core.src.main.java.io.gridgo.connector.impl.AbstractProducer.java", "BodyUseAPI": [], "Fixed commit": "75bcfe87712e3b33ff47c3533626e610eb7902ea", "Url": "https://api.github.com/repos/gridgo/gridgo-connector", "Date": "2018-11-07T09:06:05Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()", "java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (birth_date.after(current_date)) { throw new java.lang.IllegalArgumentException(\"bad date\"); }else { this.dateOfBirth = dateOfBirth; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4904/buggy-version/usermanagement.src.main.java.nure.itkn.malyk.usermanagement.User.java", "BodyUseAPI": [], "Fixed commit": "d4701741b19cbe19ddc03d3a4ccf08dc0cf9907b", "Url": "https://api.github.com/repos/NUREKN16-JAVA/diana.malyk", "Date": "2018-11-08T17:51:55Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (numFullLines > 0) { sendData((\"ATTACK \" + numFullLines)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7903/buggy-version/src.tetris.ui.Board.java", "BodyUseAPI": ["tetris.ui.Board.sendData(java.lang.String)"], "Fixed commit": "744ccc3745220c778ad044da8e42641db40e6696", "Url": "https://api.github.com/repos/jasonandrewsmith/P2PTetris", "Date": "2018-12-06T07:02:41Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((txt == null) || (\"\".equals(txt))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7970/buggy-version/src.main.java.com.gwu.cs6431.server.service.message.Message.java", "BodyUseAPI": [], "Fixed commit": "cd55c51143df1c879f2b63d4625eac558368d30e", "Url": "https://api.github.com/repos/jzhzj/CSCI-6431-chat-room-server", "Date": "2018-12-15T06:53:14Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.components.api.properties.ComponentProperties.getProperties(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ps == null) { org.talend.daikon.properties.Properties conn = pros.getProperties(\"connection\"); if (conn != null) { ps = conn.getProperties(\"referencedComponent\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5444/buggy-version/main.plugins.org.talend.designer.core.generic.src.main.java.org.talend.designer.core.generic.service.GenericService.java", "BodyUseAPI": [], "Fixed commit": "400147a6b7727e1e96e0d8776b40d8d90b10867a", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2018-11-30T03:20:41Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position > 0) mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newCameraPosition(com.google.android.gms.maps.model.CameraPosition.fromLatLngZoom(new com.google.android.gms.maps.model.LatLng(java.lang.Double.parseDouble(vehicleList.get((position - 1)).getCoordinate().getLatitude()), java.lang.Double.parseDouble(vehicleList.get((position - 1)).getCoordinate().getLongitude())), 11.0F)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1527/buggy-version/app.src.main.java.com.android.mapsampleapplication.ui.MapFragment.java", "BodyUseAPI": ["vehicleList.get((position - 1)).getCoordinate()", "com.google.android.gms.maps.CameraUpdateFactory.newCameraPosition(com.google.android.gms.maps.model.CameraPosition.fromLatLngZoom(new com.google.android.gms.maps.model.LatLng(java.lang.Double.parseDouble(vehicleList.get((position - 1)).getCoordinate().getLatitude()), java.lang.Double.parseDouble(vehicleList.get((position - 1)).getCoordinate().getLongitude())), 11.0F))", "vehicleList.get((position - 1)).getCoordinate().getLatitude()", "java.lang.Double.parseDouble(vehicleList.get((position - 1)).getCoordinate().getLongitude())", "vehicleList.get((position - 1)).getCoordinate().getLongitude()", "com.google.android.gms.maps.model.CameraPosition.fromLatLngZoom(com.google.android.gms.maps.model.LatLng,float)", "com.google.android.gms.maps.GoogleMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newCameraPosition(com.google.android.gms.maps.model.CameraPosition.fromLatLngZoom(new com.google.android.gms.maps.model.LatLng(java.lang.Double.parseDouble(vehicleList.get((position - 1)).getCoordinate().getLatitude()), java.lang.Double.parseDouble(vehicleList.get((position - 1)).getCoordinate().getLongitude())), 11.0F)))", "java.lang.Double.parseDouble(vehicleList.get((position - 1)).getCoordinate().getLatitude())", "vehicleList.get((position - 1)).getCoordinate()", "java.util.ArrayList<com.android.mapsampleapplication.model.Vehicle>.get(int)", "java.util.ArrayList<com.android.mapsampleapplication.model.Vehicle>.get(int)"], "Fixed commit": "6d8cd4f9502d547792f372e6a6086b4cd4f19ac6", "Url": "https://api.github.com/repos/narain57/MapSampleApplication", "Date": "2018-11-11T12:02:57Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["computerblocks.Block.fromType(snippetBlock.type,computerblocks.BlockPosition)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((block.type) == (BlockType.LABEL)) block.labelText = snippetBlock.labelText;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3552/buggy-version/src.computerblocks.Grid.java", "BodyUseAPI": [], "Fixed commit": "1aed9b4f9dbc698231fbdbe169934fc61bcc09f5", "Url": "https://api.github.com/repos/liam-b/computer-blocks", "Date": "2018-11-09T07:31:35Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((newBlock.type) == (BlockType.LABEL)) newBlock.labelText = block.labelText;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3552/buggy-version/src.computerblocks.snippet.Snippet.java", "BodyUseAPI": [], "Fixed commit": "1aed9b4f9dbc698231fbdbe169934fc61bcc09f5", "Url": "https://api.github.com/repos/liam-b/computer-blocks", "Date": "2018-11-09T07:31:35Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gauntlet.warrior.isDead()) { gauntlet.warrior.setHealth(100); this.gameState.setWarriorPosition(gauntlet.warriorSpawnX, gauntlet.warriorSpawnY); }else { this.gameState.setWarriorPosition(clientState.getWarriorX(), clientState.getWarriorY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7293/buggy-version/src.gauntlet.GameThread.java", "BodyUseAPI": ["gauntlet.warrior.setHealth(int)", "gauntlet.GameState.setWarriorPosition(gauntlet.warriorSpawnX,gauntlet.warriorSpawnY)"], "Fixed commit": "58c921c88c2bf3b620586e0032c1272a82742e96", "Url": "https://api.github.com/repos/Chaycej/Gauntlet", "Date": "2018-12-08T03:22:14Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.max(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (bufferUnderrunBytes > 0) { readMore(bufferUnderrunBytes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2263/buggy-version/src.main.java.nonapi.io.github.classgraph.utils.InputStreamOrByteBufferAdapter.java", "BodyUseAPI": ["nonapi.io.github.classgraph.utils.InputStreamOrByteBufferAdapter.readMore(int)"], "Fixed commit": "8ded065617cbadade5577c48be6a2c5cd2d0fc43", "Url": "https://api.github.com/repos/classgraph/classgraph", "Date": "2018-12-14T18:12:20Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (points.get(i)[0].equals(points.get(i)[1])) { points.remove(i); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9092/buggy-version/src.main.java.edu.ucr.cs.cs226.group2.CheckInvalidEnclosure.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String[]>.remove(int)"], "Fixed commit": "616a3d83178e4054723277323c3e80e2346ffcf1", "Url": "https://api.github.com/repos/LuxunXu/OpenStreetMapClean", "Date": "2018-12-13T22:16:58Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (complement == 1) { result.add(complement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6386/buggy-version/src.main.java.tudelft.sum.TwoNumbersSum.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.add(int)"], "Fixed commit": "a8e6636776a826679a8c7e521a428587269b5265", "Url": "https://api.github.com/repos/DennisPallett/mooc-software-testing", "Date": "2018-11-28T21:58:32Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.hanko.plugin.keycloak.HankoUserStore.getHankoUserId(org.keycloak.models.UserModel)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (hankoUserId != null) { hankoClient.getRegisteredDevices(config, hankoUserId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9729/buggy-version/hanko-plugin-keycloak-ejb.src.main.java.io.hanko.plugin.keycloak.HankoResourceProvider.java", "BodyUseAPI": ["io.hanko.client.java.HankoClient.getRegisteredDevices(io.hanko.client.java.HankoClientConfig,java.lang.String)"], "Fixed commit": "ea2c04906762f878ab7c2e6bbe588870535906d3", "Url": "https://api.github.com/repos/fnmeissner/hanko-keycloak-plugin", "Date": "2018-11-16T18:07:43Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.icesi.app.EdgeInsertionComputation.LOG.isDebugEnabled()) { vertex.getValue().print(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2315/buggy-version/my-app.src.main.java.edu.icesi.app.EdgeInsertionComputation.java", "BodyUseAPI": [], "Fixed commit": "8c988b6e2c8d80a05b7e386d9f9e1eb7ec4d423b", "Url": "https://api.github.com/repos/cesardlq/ERDCMST", "Date": "2018-11-06T16:40:28Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) return new byte[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9705/buggy-version/src.main.java.de.kaleidox.util.Util.java", "BodyUseAPI": [], "Fixed commit": "82a90770a3e499aa0a676fa4bcf7a2b754d9e656", "Url": "https://api.github.com/repos/burdoto/VBAN-API", "Date": "2018-12-30T18:47:16Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(app.Mode().Tid_is_http())) gplx.xowa.addons.wikis.searchs.searchers.cbks.Gfo_invk_.Invk_by_key(app.Gui_mgr().Kit().New_cmd_sync(this), gplx.xowa.addons.wikis.searchs.searchers.cbks.Srch_rslt_cbk__suggest_box.Invk__notify);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7906/buggy-version/400_xowa.src.gplx.xowa.addons.wikis.searchs.searchers.cbks.Srch_rslt_cbk__suggest_box.java", "BodyUseAPI": ["app.Gui_mgr().Kit()", "app.Gui_mgr().Kit().New_cmd_sync(gplx.xowa.addons.wikis.searchs.searchers.cbks.Srch_rslt_cbk__suggest_box)", "gplx.xowa.addons.wikis.searchs.searchers.cbks.Xoae_app.Gui_mgr()", "gplx.xowa.addons.wikis.searchs.searchers.cbks.Gfo_invk_.Invk_by_key(app.Gui_mgr().Kit().New_cmd_sync(this),java.lang.String)"], "Fixed commit": "333c50772071481e339b3f2c3d8169c12fef580a", "Url": "https://api.github.com/repos/gnosygnu/xowa", "Date": "2018-11-27T12:07:35Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ns_id != (Xow_ns_.Tid__special)) wiki.Html_mgr().Tidy_mgr().Exec_tidy(tidy_bfr, (!(hctx.Mode_is_hdump())), page.Url_bry_safe());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7906/buggy-version/400_xowa.src.gplx.xowa.htmls.Xoh_page_wtr_wkr.java", "BodyUseAPI": [], "Fixed commit": "333c50772071481e339b3f2c3d8169c12fef580a", "Url": "https://api.github.com/repos/gnosygnu/xowa", "Date": "2018-11-27T12:07:35Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { android.util.Log.d(com.liskovsoft.smartyoutubetv.flavors.common.FragmentManagerActivity.TAG, \"State not null... clearing\"); savedInstanceState.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2428/buggy-version/smartyoutubetv.src.main.java.com.liskovsoft.smartyoutubetv.flavors.common.FragmentManagerActivity.java", "BodyUseAPI": ["android.os.Bundle.clear()"], "Fixed commit": "467997e006b66175768a1886704fa8de1c12798d", "Url": "https://api.github.com/repos/yuliskov/SmartYouTubeTV", "Date": "2018-11-20T16:52:20Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mVisionTargetElevationEntry.getNumber(0).doubleValue()", "mVisionClockEntry.getNumber(0).doubleValue()", "mVisionTargetAngleEntry.getNumber(0).doubleValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((dx != 0) && (dy != 0)) && (timestamp != 0)) { com.spartronics4915.frc2019.vision.TargetInfo target = new com.spartronics4915.frc2019.vision.TargetInfo(dx, dy, timestamp); return target; }else { com.spartronics4915.lib.util.Logger.debug(\"No vision update detected\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9048/buggy-version/src.main.java.com.spartronics4915.frc2019.vision.VisionServer.java", "BodyUseAPI": [], "Fixed commit": "ae9f38d4c857aeb00d5959e94c456da200775c15", "Url": "https://api.github.com/repos/loqoman/Spartronics-254Base2018", "Date": "2018-12-31T06:08:17Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.exceptionflug.protocolize.api.event.PacketReceiveEvent<de.exceptionflug.protocolize.inventory.packet.ClickWindow>.getPacket()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((de.exceptionflug.protocolize.inventory.InventoryModule.getInventory(event.getPlayer().getUniqueId(), clickWindow.getWindowId())) != null) { if ((inventory.getType()) != (de.exceptionflug.protocolize.inventory.InventoryType.PLAYER)) de.exceptionflug.protocolize.inventory.InventoryModule.sendInventory(event.getPlayer(), inventory); else de.exceptionflug.protocolize.inventory.adapter.InventoryManager.getInventory(event.getPlayer().getUniqueId()).update(); event.getPlayer().unsafe().sendPacket(new de.exceptionflug.protocolize.items.packet.SetSlot(((byte) (-1)), ((short) (-1)), new de.exceptionflug.protocolize.inventory.adapter.ItemStack(ItemType.NO_DATA))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3305/buggy-version/protocolize-inventory.src.main.java.de.exceptionflug.protocolize.inventory.adapter.ClickWindowAdapter.java", "BodyUseAPI": ["de.exceptionflug.protocolize.inventory.InventoryModule.sendInventory(event.getPlayer(),de.exceptionflug.protocolize.inventory.Inventory)", "de.exceptionflug.protocolize.api.event.PacketReceiveEvent<de.exceptionflug.protocolize.inventory.packet.ClickWindow>.getPlayer()", "event.getPlayer().unsafe().sendPacket(de.exceptionflug.protocolize.items.packet.SetSlot)", "de.exceptionflug.protocolize.api.event.PacketReceiveEvent<de.exceptionflug.protocolize.inventory.packet.ClickWindow>.getPlayer()", "de.exceptionflug.protocolize.inventory.adapter.InventoryManager.getInventory(event.getPlayer().getUniqueId())", "event.getPlayer().unsafe()", "event.getPlayer().getUniqueId()", "de.exceptionflug.protocolize.api.event.PacketReceiveEvent<de.exceptionflug.protocolize.inventory.packet.ClickWindow>.getPlayer()", "de.exceptionflug.protocolize.inventory.adapter.InventoryManager.getInventory(event.getPlayer().getUniqueId()).update()"], "Fixed commit": "d34b3c5bb992ec0ceef5aecf9e621ea63b27ccd3", "Url": "https://api.github.com/repos/Exceptionflug/protocolize", "Date": "2018-11-09T21:52:17Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anbang.qipai.dianpaomajiang.cqrs.q.service.MajiangPlayQueryService.findJuResultDbo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (juResultDbo != null) { com.anbang.qipai.dianpaomajiang.cqrs.q.dbo.MajiangGameDbo majiangGameDbo = majiangGameQueryService.findMajiangGameDboById(gameId); com.anbang.qipai.dianpaomajiang.msg.msjobj.MajiangHistoricalJuResult juResult = new com.anbang.qipai.dianpaomajiang.msg.msjobj.MajiangHistoricalJuResult(juResultDbo, majiangGameDbo); dianpaoMajiangResultMsgService.recordJuResult(juResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4653/buggy-version/src.main.java.com.anbang.qipai.dianpaomajiang.websocket.GamePlayWsController.java", "BodyUseAPI": [], "Fixed commit": "78690f008f4a7cae952cde83f69f33df8d9b1d13", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_dianpaomajiang", "Date": "2018-12-05T01:53:16Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((majiangGameValueObject.getState().name().equals(FinishedByVote.name)) || (majiangGameValueObject.getState().name().equals(Canceled.name))) { gameMsgService.gameFinished(gameId); }else { gameMsgService.gamePlayerLeave(majiangGameValueObject, playerId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4653/buggy-version/src.main.java.com.anbang.qipai.dianpaomajiang.web.controller.GameController.java", "BodyUseAPI": ["com.anbang.qipai.dianpaomajiang.msg.service.DianpaoMajiangGameMsgService.gamePlayerLeave(com.anbang.qipai.dianpaomajiang.cqrs.c.domain.MajiangGameValueObject,java.lang.String)"], "Fixed commit": "78690f008f4a7cae952cde83f69f33df8d9b1d13", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_dianpaomajiang", "Date": "2018-12-05T01:53:16Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((majiangGameValueObject.getState().name().equals(FinishedByVote.name)) || (majiangGameValueObject.getState().name().equals(Canceled.name))) { gameMsgService.gameFinished(gameId); }else { gameMsgService.gamePlayerLeave(majiangGameValueObject, playerId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4653/buggy-version/src.main.java.com.anbang.qipai.dianpaomajiang.web.controller.GameController.java", "BodyUseAPI": ["com.anbang.qipai.dianpaomajiang.msg.service.DianpaoMajiangGameMsgService.gamePlayerLeave(com.anbang.qipai.dianpaomajiang.cqrs.c.domain.MajiangGameValueObject,java.lang.String)"], "Fixed commit": "78690f008f4a7cae952cde83f69f33df8d9b1d13", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_dianpaomajiang", "Date": "2018-12-05T01:53:16Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anbang.qipai.dianpaomajiang.cqrs.q.service.MajiangPlayQueryService.findJuResultDbo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (juResultDbo != null) { com.anbang.qipai.dianpaomajiang.cqrs.q.dbo.MajiangGameDbo majiangGameDbo = majiangGameQueryService.findMajiangGameDboById(gameId); com.anbang.qipai.dianpaomajiang.msg.msjobj.MajiangHistoricalJuResult juResult = new com.anbang.qipai.dianpaomajiang.msg.msjobj.MajiangHistoricalJuResult(juResultDbo, majiangGameDbo); dianpaoMajiangResultMsgService.recordJuResult(juResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4653/buggy-version/src.main.java.com.anbang.qipai.dianpaomajiang.web.controller.GameController.java", "BodyUseAPI": [], "Fixed commit": "78690f008f4a7cae952cde83f69f33df8d9b1d13", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_dianpaomajiang", "Date": "2018-12-05T01:53:16Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anbang.qipai.dianpaomajiang.cqrs.q.service.MajiangPlayQueryService.findJuResultDbo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (juResultDbo != null) { com.anbang.qipai.dianpaomajiang.cqrs.q.dbo.MajiangGameDbo majiangGameDbo = majiangGameQueryService.findMajiangGameDboById(gameId); com.anbang.qipai.dianpaomajiang.msg.msjobj.MajiangHistoricalJuResult juResult = new com.anbang.qipai.dianpaomajiang.msg.msjobj.MajiangHistoricalJuResult(juResultDbo, majiangGameDbo); dianpaoMajiangResultMsgService.recordJuResult(juResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4653/buggy-version/src.main.java.com.anbang.qipai.dianpaomajiang.web.controller.GameController.java", "BodyUseAPI": [], "Fixed commit": "78690f008f4a7cae952cde83f69f33df8d9b1d13", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_dianpaomajiang", "Date": "2018-12-05T01:53:16Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (observation.isSetIdentifier()) { metaIdentifier = observation.getIdentifierCodeWithAuthority(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6541/buggy-version/converter.split-and-merge.src.main.java.org.n52.sos.converter.SplitMergeObservations.java", "BodyUseAPI": ["org.n52.sos.ogc.om.OmObservation.getIdentifierCodeWithAuthority()"], "Fixed commit": "7d7043d92fc23f427eaabb275256bf51a9731ab3", "Url": "https://api.github.com/repos/52North/SOS", "Date": "2018-11-30T13:24:11Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((swagger.getBasePath()) != null) { basePath = swagger.getBasePath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1420/buggy-version/src.main.java.swurg.utils.ExtensionHelper.java", "BodyUseAPI": ["io.swagger.models.Swagger.getBasePath()"], "Fixed commit": "8e8173fc8769b8b2f5c333a85234c165ddf0a81c", "Url": "https://api.github.com/repos/swarley7/swurg", "Date": "2018-12-12T02:52:03Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((swagger.getBasePath()) != null) { basePath = swagger.getBasePath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1420/buggy-version/src.main.java.swurg.ui.Tab.java", "BodyUseAPI": ["io.swagger.models.Swagger.getBasePath()"], "Fixed commit": "8e8173fc8769b8b2f5c333a85234c165ddf0a81c", "Url": "https://api.github.com/repos/swarley7/swurg", "Date": "2018-12-12T02:52:03Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstLogin) { loadData(); firstLogin = false; }else { cAdaptor = new com.example.chenrui.easycook.CustomAdaptor(RecylerRecipeList, getActivity(), fragView); recyclerView.setItemAnimator(new android.support.v7.widget.DefaultItemAnimator()); recyclerView.setAdapter(cAdaptor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6662/buggy-version/app.src.main.java.com.example.chenrui.easycook.DiscoveryFragment.java", "BodyUseAPI": [], "Fixed commit": "bd9eac302f59f7ccdc912a260a9639c853d5a5da", "Url": "https://api.github.com/repos/developerChenRui/EasyCook", "Date": "2018-12-07T02:45:50Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Thread>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (asyncThread == null) { org.lsc.AbstractSynchronize.LOGGER.info((\"Trying to stop a non running asynchronous task: \" + syncName)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5437/buggy-version/src.main.java.org.lsc.AbstractSynchronize.java", "BodyUseAPI": [], "Fixed commit": "68566f5a53d09cb1befffaf4729f1f907665ec6e", "Url": "https://api.github.com/repos/open-ugieiris/lsc", "Date": "2014-04-17T22:41:22Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getRidingEntity()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/528/buggy-version/src.main.java.net.tardis.mod.common.entities.EntityAdipose.java", "BodyUseAPI": [], "Fixed commit": "f9859bb698ff84a754804a71f734b23a822da40e", "Url": "https://api.github.com/repos/LotuxPunk/TardisMod-1", "Date": "2018-11-20T17:13:15Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o instanceof org.jsonbuddy.pojo.OverridesJsonGenerator) { return ((org.jsonbuddy.pojo.OverridesJsonGenerator) (o)).jsonValue(); }else if (o instanceof java.lang.String) { return new org.jsonbuddy.JsonString(((java.lang.String) (o))); }else if (o instanceof java.time.Instant) { return org.jsonbuddy.JsonFactory.jsonInstant(((java.time.Instant) (o))); }else if (o instanceof java.lang.Boolean) { return new org.jsonbuddy.JsonBoolean(((java.lang.Boolean) (o))); }else if (o instanceof java.lang.Integer) { return new org.jsonbuddy.JsonNumber(((java.lang.Integer) (o)).longValue()); }else if (o instanceof java.lang.Number) { return new org.jsonbuddy.JsonNumber(((java.lang.Number) (o))); }else if (o instanceof java.util.List) { return new org.jsonbuddy.JsonArray().addAll(((java.util.List<java.lang.String>) (o))); }else if (o instanceof java.lang.Enum) { return new org.jsonbuddy.JsonString(o.toString()); }else if (o == null) { return new org.jsonbuddy.JsonNull(); }else { throw new java.lang.IllegalArgumentException((\"Invalid JsonNode class \" + o)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9731/buggy-version/src.main.java.org.jsonbuddy.JsonFactory.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "b73e0bfff7ec5622ccb41f42d09f1af4b7f14dcf", "Url": "https://api.github.com/repos/anders88/jsonbuddy", "Date": "2018-12-14T09:09:57Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((guessLetter.length()) != 1) || (!(guessLetter.chars().allMatch(java.lang.Character::isLetter)))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5265/buggy-version/src.CommandLineAdventureGame.java", "BodyUseAPI": [], "Fixed commit": "be1808f9072c444571f3e72be82b057d94bc2855", "Url": "https://api.github.com/repos/stuartahamblin/codeup-java-exercises", "Date": "2018-11-09T16:08:33Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((owner) == null) java.lang.System.out.println(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3720/buggy-version/src.risk.Country.java", "BodyUseAPI": [], "Fixed commit": "d15ccb418006de2ab4d766f698269aa8dd22b08c", "Url": "https://api.github.com/repos/djwyates/Risk", "Date": "2018-11-22T10:36:53Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<?>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(key.startsWith(\"customfield\"))) { if (((\"Project\".equals(jsonChildObject.getString(\"name\"))) || (\"Issue Type\".equals(jsonChildObject.getString(\"name\")))) || (\"Summary\".equals(jsonChildObject.getString(\"name\")))) continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2695/buggy-version/benten-jira-bolt.src.main.java.com.intuit.benten.jira.converters.JiraConverter.java", "BodyUseAPI": [], "Fixed commit": "f1d73e5914c33f9eab307aac097d1989ce232dd4", "Url": "https://api.github.com/repos/intuit/benten", "Date": "2018-11-15T14:39:31Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((compressed == null) || ((compressed.length) == 0)) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/95/buggy-version/com.kyj.fx.diff.diff-viewer-0.0.1-SNAPSHOT.src.main.java.com.kyj.fx.diff.BehaviorFileContentConversion.java", "BodyUseAPI": [], "Fixed commit": "6c898bdad7b7671322b222e3a18e4da0b37d83d7", "Url": "https://api.github.com/repos/callakrsos/GargoylePlugins", "Date": "2018-12-25T12:40:32Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ai.AI.bestMove(java.awt.Point,gameObjects.Board,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (m != null) pq.add(ai.AI.bestMove(p, b, team));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1807/buggy-version/src.ai.AI.java", "BodyUseAPI": [], "Fixed commit": "c00c91f6229ca3fae732da0f9289b63cfb0e5f04", "Url": "https://api.github.com/repos/Yash-Bhandari/Latrunculi", "Date": "2018-12-04T18:20:20Z"},
{"Line": "=>913", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (qualifiedList.isEmpty()) { errorCode = 2; javax.faces.context.FacesContext.getCurrentInstance().getExternalContext().redirect(\"menu.xhtml\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4203/buggy-version/src.java.client.SchedulingAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "a34dd1cc412293e1dd96de6f324434ea439ef513", "Url": "https://api.github.com/repos/alexgcm97/ClaSS", "Date": "2018-11-01T06:15:24Z"},
{"Line": "=>1265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newRate == 0.0) { setPausedModifier(true); }else { setPausedModifier(false); rate = newRate; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3012/buggy-version/android-exoplayer.src.main.java.com.brentvatne.exoplayer.ReactExoplayerView.java", "BodyUseAPI": [], "Fixed commit": "3b63f06a323f7200ec9d1a478d33889fb784abae", "Url": "https://api.github.com/repos/DiceTechnology/react-native-video", "Date": "2018-10-24T12:28:58Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keywordDB.isPlainText()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9182/buggy-version/src.main.java.highlight.SyntaxAwareDocument.java", "BodyUseAPI": [], "Fixed commit": "6fc96e902b6aa0148cf839bb3c919f6a695f2000", "Url": "https://api.github.com/repos/PauloJaime/ser515asu", "Date": "2018-11-21T21:44:49Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.isOnline()) { return replaceJavascript(player.getPlayer(), text); }else { com.Ben12345rocks.AdvancedCore.Util.Javascript.JavascriptEngine engine = new com.Ben12345rocks.AdvancedCore.Util.Javascript.JavascriptEngine().addPlayer(player); return replaceJavascript(text, engine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1732/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Misc.StringUtils.java", "BodyUseAPI": ["com.Ben12345rocks.AdvancedCore.Util.Misc.StringUtils.replaceJavascript(player.getPlayer(),java.lang.String)", "org.bukkit.OfflinePlayer.getPlayer()", "com.Ben12345rocks.AdvancedCore.Util.Javascript.JavascriptEngine.addPlayer(org.bukkit.OfflinePlayer)"], "Fixed commit": "9c1b4e5f971fce6fb84603d763c26fdab7ce82b6", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-12-08T00:33:48Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mode) == 2) { (remainingTime)--; if ((remainingTime) == 0) { javax.swing.JOptionPane.showMessageDialog(null, \"Time is up \", \"Time is up\", javax.swing.JOptionPane.INFORMATION_MESSAGE); timer.stop(); } if (((remainingTime) > 0) && (checkWinCondition())) { javax.swing.JOptionPane.showMessageDialog(null, \"You Passed The Level \", \"You Passed The Level\", javax.swing.JOptionPane.INFORMATION_MESSAGE); timer.stop(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3/buggy-version/src.TheWall.Game.java", "BodyUseAPI": [], "Fixed commit": "80e9ee598913f6d83b37f1eaa5aa192f2501b74c", "Url": "https://api.github.com/repos/erdemegemarasli/CS319-03-Group3E", "Date": "2018-12-24T08:46:35Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((json.get(\"dayName\").asText().equals(\"Sunday\")) || (json.get(\"dayName\").asText().equals(\"Saturday\"))) dayType = \"weekend\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8887/buggy-version/app.controllers.ReservationController.java", "BodyUseAPI": [], "Fixed commit": "8acc6cfa99cbfa87f51fc40f15e4a6dd7eb306e8", "Url": "https://api.github.com/repos/rappabugis1/RestaurantServer", "Date": "2018-12-06T00:55:22Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["daos.interfaces.ReservationDao.getReservationLengthsForGuestNumber(java.lang.Long,int,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (stayValues != null) { if ((java.lang.Integer.parseInt(json.get(\"reservationHour\").asText().substring(0, 1))) < 12) lengthOfStay = stayValues.getMorning(); if ((java.lang.Integer.parseInt(json.get(\"reservationHour\").asText().substring(0, 1))) >= 12) lengthOfStay = stayValues.getDay(); if ((java.lang.Integer.parseInt(json.get(\"reservationHour\").asText().substring(0, 1))) >= 18) lengthOfStay = stayValues.getEvening(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8887/buggy-version/app.controllers.ReservationController.java", "BodyUseAPI": ["models.StayByDayType.getMorning()", "models.StayByDayType.getEvening()", "models.StayByDayType.getDay()"], "Fixed commit": "8acc6cfa99cbfa87f51fc40f15e4a6dd7eb306e8", "Url": "https://api.github.com/repos/rappabugis1/RestaurantServer", "Date": "2018-12-06T00:55:22Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myDebugLevel) >= (HuffProcessor.DEBUG_HIGH)) { java.lang.System.out.printf(\"encoding for %d is %s\\n\", root.myValue, path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1246/buggy-version/src.HuffProcessor.java", "BodyUseAPI": [], "Fixed commit": "fc5b5aa051f8c6f053b0165d6c64307a952cb577", "Url": "https://api.github.com/repos/snlee12/Huffmanproject", "Date": "2018-12-07T09:58:28Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myDebugLevel) >= (HuffProcessor.DEBUG_HIGH)) { java.lang.System.out.printf(\"pq created with %d nodes\\n\", pq.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1246/buggy-version/src.HuffProcessor.java", "BodyUseAPI": [], "Fixed commit": "fc5b5aa051f8c6f053b0165d6c64307a952cb577", "Url": "https://api.github.com/repos/snlee12/Huffmanproject", "Date": "2018-12-07T09:58:28Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(currentUser)) { currentUser = org.apache.commons.lang3.StringUtils.EMPTY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8448/buggy-version/src.main.java.org.craftercms.studio.impl.v1.service.activity.ActivityServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "d44f0b928c6fcf4eec56299b0e7c77ec777a6ec1", "Url": "https://api.github.com/repos/craftercms/studio", "Date": "2018-12-21T19:08:45Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(line.isEmpty())) { java.lang.System.out.println(\"Running red guns\"); int temp; POS = line.split(\",\"); for (int i = 0; i < (POS.length); i = i + 2) { int temp0 = java.lang.Integer.parseInt(POS[i]); int temp1 = java.lang.Integer.parseInt(POS[(i + 1)]); soldiers[(temp1 - 1)][(temp0 - 1)].changePiece(9); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8035/buggy-version/game1.javaCode.Gui.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "1579ef111b4bbc9a78d2aec097649d0888bbf879", "Url": "https://api.github.com/repos/cbarth15/lhs", "Date": "2018-11-19T05:22:58Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(line.isEmpty())) { java.lang.System.out.println(\"Running blue guns\"); int temp; POS = line.split(\",\"); for (int i = 0; i < (POS.length); i = i + 2) { int temp0 = java.lang.Integer.parseInt(POS[i]); int temp1 = java.lang.Integer.parseInt(POS[(i + 1)]); java.lang.System.out.println(((temp0 + \", \") + temp1)); soldiers[(temp1 - 1)][(temp0 - 1)].changePiece(10); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8035/buggy-version/game1.javaCode.Gui.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "1579ef111b4bbc9a78d2aec097649d0888bbf879", "Url": "https://api.github.com/repos/cbarth15/lhs", "Date": "2018-11-19T05:22:58Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((e.getAttribute(\"TagName\")) != null) tags.add(e.getAttribute(\"TagName\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2484/buggy-version/pa.iscde.javaTasks.src.pa.iscde.javaTasks.EvaluateContributionsHandler.java", "BodyUseAPI": [], "Fixed commit": "e8ff28f679b5047350296a3e7228e486427001a6", "Url": "https://api.github.com/repos/afgos-iscteiulpt/pa-iscde-afgos", "Date": "2018-12-17T19:19:07Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paramStr == \"\") { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/358/buggy-version/app.src.main.java.com.company.management.JsonUtils.java", "BodyUseAPI": [], "Fixed commit": "e4cf4548e74f94d0979a08a25b9d0ee606e51325", "Url": "https://api.github.com/repos/FlyingRat1024/CompanyManagement", "Date": "2018-12-16T06:45:34Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (paramStr.startsWith(\"\\ufeff\")) { paramStr = paramStr.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/358/buggy-version/app.src.main.java.com.company.management.JsonUtils.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "e4cf4548e74f94d0979a08a25b9d0ee606e51325", "Url": "https://api.github.com/repos/FlyingRat1024/CompanyManagement", "Date": "2018-12-16T06:45:34Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paramStr == \"\") { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/358/buggy-version/app.src.main.java.com.company.management.JsonUtils.java", "BodyUseAPI": [], "Fixed commit": "e4cf4548e74f94d0979a08a25b9d0ee606e51325", "Url": "https://api.github.com/repos/FlyingRat1024/CompanyManagement", "Date": "2018-12-16T06:45:34Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (paramStr.startsWith(\"\\ufeff\")) { paramStr = paramStr.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/358/buggy-version/app.src.main.java.com.company.management.JsonUtils.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "e4cf4548e74f94d0979a08a25b9d0ee606e51325", "Url": "https://api.github.com/repos/FlyingRat1024/CompanyManagement", "Date": "2018-12-16T06:45:34Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t.status.equals(CentreSportif.TeamMembershipsManager.MEMBSTATUS_MEMBER)) throw new CentreSportif.IFT287Exception(\"Le joueur est deja un membre de l'equipe.\"); else if (t.status.equals(CentreSportif.TeamMembershipsManager.MEMBSTATUS_REJECTED)) throw new CentreSportif.IFT287Exception(\"Le joueur est deja refuse de l'equipe.\"); else { t.status = CentreSportif.TeamMembershipsManager.MEMBSTATUS_MEMBER; found = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2862/buggy-version/CentreSportif.CentreSportif.src.CentreSportif.TeamMembershipsManager.java", "BodyUseAPI": ["t.status.equals(java.lang.String)"], "Fixed commit": "4e4e2b50258f90d9c318910538c101b28c20ca5e", "Url": "https://api.github.com/repos/OliPerraul/ift287-tp3", "Date": "2018-11-07T19:34:54Z"},
{"Line": "=>813", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"scheduledEndTime\".equals(localName)) { org.fourthline.cling.support.contentdirectory.DIDLParser.DIDLObjectHandler.getInstance().addProperty(new org.fourthline.cling.support.model.DIDLObject.Property.UPNP.SCHEDULED_END_TIME(org.fourthline.cling.support.contentdirectory.DIDLParser.DIDLObjectHandler.getCharacters())); }else if (\"DVDRegionCode\".equals(localName)) { org.fourthline.cling.support.contentdirectory.DIDLParser.DIDLObjectHandler.getInstance().addProperty(new org.fourthline.cling.support.model.DIDLObject.Property.UPNP.DVD_REGION_CODE(java.lang.Integer.valueOf(org.fourthline.cling.support.contentdirectory.DIDLParser.DIDLObjectHandler.getCharacters()))); }else if (\"originalTrackNumber\".equals(localName)) { int tracknumber = 0; if (org.fourthline.cling.support.contentdirectory.DIDLParser.DIDLObjectHandler.getCharacters().contains(\"/\")) { tracknumber = java.lang.Integer.valueOf(org.fourthline.cling.support.contentdirectory.DIDLParser.DIDLObjectHandler.getCharacters().split(\"/\")[0]); }else { tracknumber = java.lang.Integer.valueOf(org.fourthline.cling.support.contentdirectory.DIDLParser.DIDLObjectHandler.getCharacters()); } org.fourthline.cling.support.contentdirectory.DIDLParser.DIDLObjectHandler.getInstance().addProperty(new org.fourthline.cling.support.model.DIDLObject.Property.UPNP.ORIGINAL_TRACK_NUMBER(java.lang.Integer.valueOf(org.fourthline.cling.support.contentdirectory.DIDLParser.DIDLObjectHandler.getCharacters()))); }else if (\"userAnnotation\".equals(localName)) { org.fourthline.cling.support.contentdirectory.DIDLParser.DIDLObjectHandler.getInstance().addProperty(new org.fourthline.cling.support.model.DIDLObject.Property.UPNP.USER_ANNOTATION(org.fourthline.cling.support.contentdirectory.DIDLParser.DIDLObjectHandler.getCharacters())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/532/buggy-version/support.src.main.java.org.fourthline.cling.support.contentdirectory.DIDLParser.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "6b7ee3fb69940be930fd115595806df0f78bb274", "Url": "https://api.github.com/repos/tobexyz/cling", "Date": "2018-11-05T22:09:50Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["deck.getCards().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (card.getSpecialAttack().equalsIgnoreCase(\"dualattack\")) { cardIdType.setFont(new javafx.scene.text.Font(\"Gill Sans Ultra Bold Condensed\", 15)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9859/buggy-version/src.main.java.controllers.TableViewController.java", "BodyUseAPI": [], "Fixed commit": "345a6303870e92c744d8c921b35fa1e614cbcd92", "Url": "https://api.github.com/repos/mohammedalmahfoodh/group3", "Date": "2018-11-19T15:07:20Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["deck.getCards().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (card.getSpecialAttack().equalsIgnoreCase(\"dualattack\")) { cardIdType.setFont(new javafx.scene.text.Font(\"Gill Sans Ultra Bold Condensed\", 15)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9859/buggy-version/src.main.java.controllers.TableViewController.java", "BodyUseAPI": [], "Fixed commit": "345a6303870e92c744d8c921b35fa1e614cbcd92", "Url": "https://api.github.com/repos/mohammedalmahfoodh/group3", "Date": "2018-11-19T15:07:20Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.harvard.hms.dbmi.avillach.auth.data.repository.RoleRepository.getByColumn(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((roles != null) && (!(roles.isEmpty()))) { logger.info(((\"Found a role with default admin name \" + (edu.harvard.hms.dbmi.avillach.auth.JAXRSConfiguration.defaultAdminRoleName)) + \", but without proper privileges associated with\")); role = roles.get(0); isAdminRole = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7965/buggy-version/pic-sure-auth-services.src.main.java.edu.harvard.hms.dbmi.avillach.auth.JAXRSConfiguration.java", "BodyUseAPI": ["java.util.List<edu.harvard.hms.dbmi.avillach.auth.data.entity.Role>.get(int)"], "Fixed commit": "47183b9665a3036defda628a0188d535e47271f7", "Url": "https://api.github.com/repos/hms-dbmi/pic-sure-auth-microapp", "Date": "2018-11-30T17:52:47Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdminRole) { roleRepo.merge(role); logger.info((\"Finished updating the admin role, roleId: \" + (role.getUuid()))); }else { role.setName(edu.harvard.hms.dbmi.avillach.auth.JAXRSConfiguration.defaultAdminRoleName); roleRepo.persist(role); logger.info((\"Finished creating an admin role, roleId: \" + (role.getUuid()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7965/buggy-version/pic-sure-auth-services.src.main.java.edu.harvard.hms.dbmi.avillach.auth.JAXRSConfiguration.java", "BodyUseAPI": [], "Fixed commit": "47183b9665a3036defda628a0188d535e47271f7", "Url": "https://api.github.com/repos/hms-dbmi/pic-sure-auth-microapp", "Date": "2018-11-30T17:52:47Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.speedstor.map.MapRender.direction) != 0) com.speedstor.players.Player1.faceDirection = com.speedstor.map.MapRender.direction;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9555/buggy-version/src.com.speedstor.map.MapRender.java", "BodyUseAPI": [], "Fixed commit": "00e4e11a1edacd699d3bd42400293e307af55be8", "Url": "https://api.github.com/repos/Speedstor/Pokemon", "Date": "2018-11-02T07:10:47Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ServerPackage.RedisDB.getSalt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (salt == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4304/buggy-version/Server.src.ServerPackage.Server.java", "BodyUseAPI": [], "Fixed commit": "b0e5b307dd64fc5c0903e653146ff3a0281d7a94", "Url": "https://api.github.com/repos/GregoryCannon/Room47", "Date": "2018-11-15T04:07:14Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ServerPackage.RedisDB.getHashedPassword(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (redisHashedPassword == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4304/buggy-version/Server.src.ServerPackage.Server.java", "BodyUseAPI": [], "Fixed commit": "b0e5b307dd64fc5c0903e653146ff3a0281d7a94", "Url": "https://api.github.com/repos/GregoryCannon/Room47", "Date": "2018-11-15T04:07:14Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isContinuedMessage) { itemView.findViewById(R.id.ninchat_chat_message_agent).setPadding(0, 0, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9514/buggy-version/ninchatsdk.src.main.java.com.ninchat.sdk.adapters.NinchatMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "0fca38c2091b12e55ae002c5e5d58a4f07942b12", "Url": "https://api.github.com/repos/somia/ninchat-sdk-android", "Date": "2018-11-06T10:49:53Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((info.customInfo.direction) == (cam72cam.immersiverailroading.library.TrackDirection.RIGHT)) { angle2 = -angle2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2633/buggy-version/src.main.java.cam72cam.immersiverailroading.track.BuilderCubicCurve.java", "BodyUseAPI": [], "Fixed commit": "fb69c8406ce6c46425cc00472a2f05b7bd8eae0e", "Url": "https://api.github.com/repos/cam72cam/ImmersiveRailroading", "Date": "2018-11-21T19:01:37Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((page.getContentType()) != null) { metadata.add(Metadata.CONTENT_TYPE, page.getContentType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6820/buggy-version/crawler4j.src.main.java.edu.uci.ics.crawler4j.parser.TikaHtmlParser.java", "BodyUseAPI": ["edu.uci.ics.crawler4j.crawler.Page.getContentType()", "org.apache.tika.metadata.Metadata.add(Metadata.CONTENT_TYPE,page.getContentType())"], "Fixed commit": "6a8d22b78ecd51d31a7ccdb8be6e230201a0da76", "Url": "https://api.github.com/repos/yasserg/crawler4j", "Date": "2018-10-11T05:29:27Z"},
{"Line": "=>803", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.copyOfRange(byte[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(dualsalt.DualSalt.inGroup(tempPublicKey))) { throw new java.lang.IllegalArgumentException(\"Element not in group\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4149/buggy-version/src.dualsalt.DualSalt.java", "BodyUseAPI": [], "Fixed commit": "08ba3c54eebe5e51ddf2d22c900bd329e21a4297", "Url": "https://api.github.com/repos/assaabloy-ppi/dualsalt", "Date": "2018-12-25T19:54:12Z"},
{"Line": "=>692", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof org.bukkit.event.hanging.HangingBreakByEntityEvent) return ((org.bukkit.event.hanging.HangingBreakByEntityEvent) (e)).getRemover();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3566/buggy-version/src.main.java.ch.njol.skript.classes.data.BukkitEventValues.java", "BodyUseAPI": [], "Fixed commit": "3c9a827978de342cc5952b80b2690a12a656c5d2", "Url": "https://api.github.com/repos/SkriptLang/Skript", "Date": "2018-12-17T18:36:43Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNewQuestion) { android.widget.Toast.makeText(this.getApplicationContext(), \"Question added !\", Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(this.getApplicationContext(), \"Question edited !\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6298/buggy-version/app.src.main.java.ch.epfl.sweng.studyup.questions.AddQuestionActivity.java", "BodyUseAPI": [], "Fixed commit": "3a69165bbd3b6532cf40c0fb16c4d825a4600627", "Url": "https://api.github.com/repos/nheyek/SDP-2018", "Date": "2018-11-18T16:38:10Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.apache.commons.lang3.StringUtils.isNotBlank(compId)) && (org.apache.commons.lang3.StringUtils.isBlank(employee.getLoginId()))) { employee.setLoginId(userLogin.getId()); dao.mergeOne(employee); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3884/buggy-version/lichkin-projects-core-apis-common.src.main.java.com.lichkin.application.apis.FastLogin.S.java", "BodyUseAPI": ["com.lichkin.springframework.entities.impl.SysEmployeeEntity.setLoginId(userLogin.getId())", "com.lichkin.application.apis.FastLogin.S.mergeOne(com.lichkin.springframework.entities.impl.SysEmployeeEntity)"], "Fixed commit": "ac568c5feda973b015a43f4ed8e14d9ad0a89748", "Url": "https://api.github.com/repos/LichKinContributor/lichkin-projects-core", "Date": "2018-11-20T13:49:31Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((existed == null) || ((extensionClass.getOrder()) < (existed.getOrder()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6206/buggy-version/core.api.src.main.java.com.alipay.sofa.rpc.ext.ExtensionLoader.java", "BodyUseAPI": [], "Fixed commit": "7ef9f6ac840fbf02e9e19d7486d7aff2d1ee8db2", "Url": "https://api.github.com/repos/zhaojigang/sofa-rpc", "Date": "2018-11-18T03:16:07Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Float.parseFloat(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((withdrawn_amount.floatValue()) > 0) { if ((withdrawn_amount.floatValue()) <= (Users[current_user_index].balance.floatValue())) { Users[current_user_index].balance = (Users[current_user_index].balance.floatValue()) - (withdrawn_amount.floatValue()); dos.writeUTF(((\"your new balance is: \" + (Users[current_user_index].balance)) + \" \\n press enter to continue.\")); }else { dos.writeUTF(\"ERROR: Withdrawn amount is bigger than the current balance. \\n press enter to continue.\"); } }else { dos.writeUTF(\"ERROR: You entered a negative number or a zero. \\n press enter to continue.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2595/buggy-version/echoserver_ds_1.src.echoserver_ds.clientHandler.java", "BodyUseAPI": ["java.lang.Number.floatValue()", "java.lang.Number.floatValue()"], "Fixed commit": "91ed6435b89998049c6ebccbd861908719d4fae1", "Url": "https://api.github.com/repos/BestJavaTeam2018/paymentsystem", "Date": "2018-11-08T15:54:20Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(temp.equals(current_player))) is_new_turn = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7774/buggy-version/src.views.Console_View.java", "BodyUseAPI": [], "Fixed commit": "159e6970055e778784d7c313675f7d55bfef2c60", "Url": "https://api.github.com/repos/hr-gith/risk_game", "Date": "2018-12-01T00:04:30Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.gephi.layout.plugin.forceAtlas2_3d.Main.getArg(\"scalingRatio\")) != null) { scalingRatio = java.lang.Double.parseDouble(org.gephi.layout.plugin.forceAtlas2_3d.Main.getArg(\"scalingRatio\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5855/buggy-version/src.org.gephi.layout.plugin.forceAtlas2_3d.Main.java", "BodyUseAPI": [], "Fixed commit": "5876b54a02a69db9c514cab351df91197dc493b4", "Url": "https://api.github.com/repos/klarman-cell-observatory/forceatlas2-3d", "Date": "2018-12-17T19:07:59Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.gephi.layout.plugin.forceAtlas2_3d.Main.getArg(\"jitterTolerance\")) != null) { jitterTolerance = java.lang.Double.parseDouble(org.gephi.layout.plugin.forceAtlas2_3d.Main.getArg(\"jitterTolerance\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5855/buggy-version/src.org.gephi.layout.plugin.forceAtlas2_3d.Main.java", "BodyUseAPI": [], "Fixed commit": "5876b54a02a69db9c514cab351df91197dc493b4", "Url": "https://api.github.com/repos/klarman-cell-observatory/forceatlas2-3d", "Date": "2018-12-17T19:07:59Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.gephi.layout.plugin.forceAtlas2_3d.Main.getArg(\"strongGravityMode\")) != null) { strongGravityMode = org.gephi.layout.plugin.forceAtlas2_3d.Main.getArg(\"strongGravityMode\").equalsIgnoreCase(\"true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5855/buggy-version/src.org.gephi.layout.plugin.forceAtlas2_3d.Main.java", "BodyUseAPI": [], "Fixed commit": "5876b54a02a69db9c514cab351df91197dc493b4", "Url": "https://api.github.com/repos/klarman-cell-observatory/forceatlas2-3d", "Date": "2018-12-17T19:07:59Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.gephi.layout.plugin.forceAtlas2_3d.Main.getArg(\"barnesHutUpdateIter\")) != null) { barnesHutUpdateIter = java.lang.Integer.parseInt(org.gephi.layout.plugin.forceAtlas2_3d.Main.getArg(\"barnesHutUpdateIter\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5855/buggy-version/src.org.gephi.layout.plugin.forceAtlas2_3d.Main.java", "BodyUseAPI": [], "Fixed commit": "5876b54a02a69db9c514cab351df91197dc493b4", "Url": "https://api.github.com/repos/klarman-cell-observatory/forceatlas2-3d", "Date": "2018-12-17T19:07:59Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.gephi.layout.plugin.forceAtlas2_3d.Main.getArg(\"gravity\")) != null) { gravity = java.lang.Double.parseDouble(org.gephi.layout.plugin.forceAtlas2_3d.Main.getArg(\"gravity\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5855/buggy-version/src.org.gephi.layout.plugin.forceAtlas2_3d.Main.java", "BodyUseAPI": [], "Fixed commit": "5876b54a02a69db9c514cab351df91197dc493b4", "Url": "https://api.github.com/repos/klarman-cell-observatory/forceatlas2-3d", "Date": "2018-12-17T19:07:59Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.gephi.layout.plugin.forceAtlas2_3d.Main.getArg(\"seed\")) != null) { seed = java.lang.Long.parseLong(org.gephi.layout.plugin.forceAtlas2_3d.Main.getArg(\"seed\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5855/buggy-version/src.org.gephi.layout.plugin.forceAtlas2_3d.Main.java", "BodyUseAPI": [], "Fixed commit": "5876b54a02a69db9c514cab351df91197dc493b4", "Url": "https://api.github.com/repos/klarman-cell-observatory/forceatlas2-3d", "Date": "2018-12-17T19:07:59Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.gephi.layout.plugin.forceAtlas2_3d.Main.getArg(\"barnesHutTheta\")) != null) { barnesHutTheta = java.lang.Double.parseDouble(org.gephi.layout.plugin.forceAtlas2_3d.Main.getArg(\"barnesHutTheta\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5855/buggy-version/src.org.gephi.layout.plugin.forceAtlas2_3d.Main.java", "BodyUseAPI": [], "Fixed commit": "5876b54a02a69db9c514cab351df91197dc493b4", "Url": "https://api.github.com/repos/klarman-cell-observatory/forceatlas2-3d", "Date": "2018-12-17T19:07:59Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.gephi.layout.plugin.forceAtlas2_3d.Main.getArg(\"updateCenter\")) != null) { updateCenter = org.gephi.layout.plugin.forceAtlas2_3d.Main.getArg(\"updateCenter\").equalsIgnoreCase(\"true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5855/buggy-version/src.org.gephi.layout.plugin.forceAtlas2_3d.Main.java", "BodyUseAPI": [], "Fixed commit": "5876b54a02a69db9c514cab351df91197dc493b4", "Url": "https://api.github.com/repos/klarman-cell-observatory/forceatlas2-3d", "Date": "2018-12-17T19:07:59Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.gephi.layout.plugin.forceAtlas2_3d.Main.getArg(\"format\")) != null) { formats.add(org.gephi.layout.plugin.forceAtlas2_3d.Main.getArg(\"format\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5855/buggy-version/src.org.gephi.layout.plugin.forceAtlas2_3d.Main.java", "BodyUseAPI": [], "Fixed commit": "5876b54a02a69db9c514cab351df91197dc493b4", "Url": "https://api.github.com/repos/klarman-cell-observatory/forceatlas2-3d", "Date": "2018-12-17T19:07:59Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.gephi.layout.plugin.forceAtlas2_3d.Main.getArg(\"outboundAttractionDistribution\")) != null) { outboundAttractionDistribution = org.gephi.layout.plugin.forceAtlas2_3d.Main.getArg(\"outboundAttractionDistribution\").equalsIgnoreCase(\"true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5855/buggy-version/src.org.gephi.layout.plugin.forceAtlas2_3d.Main.java", "BodyUseAPI": [], "Fixed commit": "5876b54a02a69db9c514cab351df91197dc493b4", "Url": "https://api.github.com/repos/klarman-cell-observatory/forceatlas2-3d", "Date": "2018-12-17T19:07:59Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (a.contains(\"(\")) { int start = a.indexOf(\"(\"); a = a.substring(0, start); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3553/buggy-version/criteria2query.src.main.java.edu.columbia.dbmi.ohdsims.util.NumericConvert.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "1bffdcbffd98d6ec839561361152ccc597dfe879", "Url": "https://api.github.com/repos/OHDSI/Criteria2Query", "Date": "2018-11-15T21:36:58Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.maven.artifact.Artifact.getFile()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((artFile != null) && (artFile.isFile())) { java.io.File installedPlugin = new java.io.File(pluginsDirectory, artFile.getName()); java.nio.file.Files.copy(artFile.toPath(), installedPlugin.toPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8716/buggy-version/src.main.java.ru.simsonic.minecraft.yivemirror.RunMojo.java", "BodyUseAPI": ["java.io.File.getName()", "java.io.File.toPath()", "java.nio.file.Files.copy(java.nio.file.Path,java.nio.file.Path)"], "Fixed commit": "9a93dd96a0c2fa54d27a340688cd5a1947bd4bde", "Url": "https://api.github.com/repos/SimSonic/yivemirror-maven-plugin", "Date": "2018-12-16T09:38:41Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nottheory.donationtracker.Model.DatabaseConnection.sendRawSQL(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (getSelection == \"\") { nottheory.donationtracker.Model.DatabaseConnection.sendRawSQL((((((((((((\"INSERT INTO Users (name, username, password, email, accttype) \" + \"VALUES ('\") + (acct.getName())) + \"','\") + (acct.getUsername())) + \"','\") + (acct.getPassword())) + \"','\") + (acct.getEmail())) + \"','\") + (acct.getAcctType().name())) + \"');\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5852/buggy-version/app.src.main.java.nottheory.donationtracker.Model.LoginManager.java", "BodyUseAPI": [], "Fixed commit": "0de414f770d226511b7b65b941454c26a13a656a", "Url": "https://api.github.com/repos/quantumelf/Not-Theory-Donation-Tracker-Project", "Date": "2018-11-01T17:39:41Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getBytes(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result != null) return new lsfusion.base.RawFileData(result);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/409/buggy-version/server.src.main.java.lsfusion.server.classes.StaticFormatFileClass.java", "BodyUseAPI": [], "Fixed commit": "e50f03c14e6ee7df84b45870187b486b6dd23add", "Url": "https://api.github.com/repos/lsfusion/platform", "Date": "2018-11-14T09:38:44Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getBytes(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result != null) return new lsfusion.base.FileData(result);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/409/buggy-version/server.src.main.java.lsfusion.server.classes.DynamicFormatFileClass.java", "BodyUseAPI": [], "Fixed commit": "e50f03c14e6ee7df84b45870187b486b6dd23add", "Url": "https://api.github.com/repos/lsfusion/platform", "Date": "2018-11-14T09:38:44Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fsWriter.requiresCleanupOfRecoverableState()) { fsWriter.cleanupRecoverableState(resumable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5144/buggy-version/flink-streaming-java.src.main.java.org.apache.flink.streaming.api.functions.sink.filesystem.Bucket.java", "BodyUseAPI": ["org.apache.flink.core.fs.RecoverableWriter.cleanupRecoverableState(org.apache.flink.core.fs.RecoverableWriter.ResumeRecoverable)"], "Fixed commit": "5817e3d33a6484be47d7be4beb1b9a6c8ed7305b", "Url": "https://api.github.com/repos/kl0u/flink", "Date": "2018-12-04T09:51:58Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.contains(\"\\\"\")) e = e.replaceAll(\"\\\"\", \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7524/buggy-version/rest-core-common.src.main.java.mizuki.project.core.restserver.config.mybatis.typeHandler.array.IntArrayHandler.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "a33c66ca3a402e63b385ca0ae1aaebe52d5fdf85", "Url": "https://api.github.com/repos/Jerry-ycj/rest_server_core", "Date": "2018-11-09T09:31:24Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<android.support.v4.app.Fragment>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fragment.getClass()) != null) { if (fragment.getClass().getSimpleName().equals(fragmentName)) { getFragment = fragment; com.pinpinbox.android.pinpinbox2_0_0.custom.widget.MyLog.Set(\"d\", getClass(), (\"fragmentName => \" + fragmentName)); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7854/buggy-version/src.main.java.com.pinpinbox.android.pinpinbox2_0_0.activity.MainActivity.java", "BodyUseAPI": ["fragment.getClass().getSimpleName().equals(java.lang.String)", "android.support.v4.app.Fragment.getClass()", "fragment.getClass().getSimpleName()"], "Fixed commit": "c21f3b61f480f7691918b204cf788ae64ba72b01", "Url": "https://api.github.com/repos/pinpinbox/app", "Date": "2018-12-28T08:18:52Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (umiTag == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/188/buggy-version/src.main.java.picard.sam.markduplicates.UmiUtil.java", "BodyUseAPI": [], "Fixed commit": "3c589decf9eb1d621bb75c73867490f930ef63e1", "Url": "https://api.github.com/repos/broadinstitute/picard", "Date": "2018-10-18T19:28:25Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(getString(R.string.fname_key),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (login != null) { if (!(login.equals(\"Login Failed!\"))) { java.lang.String lastName = localPrefs.getString(getString(R.string.lname_key), \"\"); java.lang.String email = localPrefs.getString(getString(R.string.email_key), \"\"); java.lang.String street = localPrefs.getString(getString(R.string.street_key), \"\"); java.lang.String building = localPrefs.getString(getString(R.string.building_key), \"\"); java.lang.String floor = localPrefs.getString(getString(R.string.floor_key), \"\"); java.lang.String apartment = localPrefs.getString(getString(R.string.apartment_key), \"\"); ae.ac.ku.pizza.User currentUser = new ae.ac.ku.pizza.User(login, lastName, email, street, building, floor, apartment); android.content.Intent toMenu = new android.content.Intent(this, ae.ac.ku.pizza.FoodMenuActivity.class); toMenu.putExtra(ae.ac.ku.pizza.MainActivity.USER, currentUser); startActivity(toMenu); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5942/buggy-version/app.src.main.java.ae.ac.ku.pizza.MainActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "c225a39bca1ad438e196512633db5d4d3e742304", "Url": "https://api.github.com/repos/Zunon/KUPizza", "Date": "2018-11-28T22:58:30Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((streamName.endsWith(com.emc.mongoose.storage.driver.pravega.SLASH)) && ((streamName.length()) > 1)) { streamName = streamName.substring(0, ((streamName.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2477/buggy-version/src.main.java.com.emc.mongoose.storage.driver.pravega.PravegaStorageDriver.java", "BodyUseAPI": ["lombok.experimental.var.substring(int,((streamName.length()) - 1))", "lombok.experimental.var.length()"], "Fixed commit": "66882ddce857fc76a65592956b3c0a4f39ef1d38", "Url": "https://api.github.com/repos/emc-mongoose/mongoose-storage-driver-pravega", "Date": "2018-11-16T20:44:06Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.mongoose.item.op.data.DataOperation.dstPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (streamName.startsWith(com.emc.mongoose.storage.driver.pravega.SLASH)) { streamName = streamName.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2477/buggy-version/src.main.java.com.emc.mongoose.storage.driver.pravega.PravegaStorageDriver.java", "BodyUseAPI": ["lombok.experimental.var.substring(int)"], "Fixed commit": "66882ddce857fc76a65592956b3c0a4f39ef1d38", "Url": "https://api.github.com/repos/emc-mongoose/mongoose-storage-driver-pravega", "Date": "2018-11-16T20:44:06Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((ca.carleton.pvz.PlantsVZombies.defaultWorld) == null) { ca.carleton.pvz.PlantsVZombies.defaultWorld = ca.carleton.pvz.World.copy(gameWorld); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6407/buggy-version/PlantsVZombies.src.ca.carleton.pvz.PlantsVZombies.java", "BodyUseAPI": [], "Fixed commit": "33b08cd7d56d05b4513c31e7649443fa2bc971c3", "Url": "https://api.github.com/repos/Jacoblab1/SYSC3110", "Date": "2018-12-07T21:10:03Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (PssOrderTypeEnum.PSS_CHECK.equals(sin.getOrderType())) { return list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9089/buggy-version/lichkin-projects-pss-admin.src.main.java.com.lichkin.application.apis.api50006.L.n00.S.java", "BodyUseAPI": [], "Fixed commit": "c2cb36704e51817e8dcc307fc6620f1f77bf264b", "Url": "https://api.github.com/repos/LichKinContributor/lichkin-projects-pss", "Date": "2018-11-12T03:11:51Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listenerMap.isEmpty()) return HGListener.Result.ok;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3904/buggy-version/core.src.java.org.hypergraphdb.event.HGDefaultEventManager.java", "BodyUseAPI": [], "Fixed commit": "14965614b20bc78f63be54cb1347bb274fb28eeb", "Url": "https://api.github.com/repos/hypergraphdb/hypergraphdb", "Date": "2018-11-27T05:47:29Z"},
{"Line": "=>7413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!finishedAll) { throw new java.io.IOException((((((((((((\"ERROR DB RECORD LENGTH VIOLATION was \" + (newFp - fp)) + \" should be \") + cmdLength) + \" fp=\") + fp) + \" length=\") + fileLength) + \" opcode=\") + opcode) + \" typecode=\") + typecode)); }else if ((dbErrorsLogged) < (sage.Wizard.MAX_DB_ERRORS_TO_LOG)) { (dbErrorsLogged)++; if (Sage.DBG) java.lang.System.out.println((((((((((((\"ERROR DB RECORD LENGTH VIOLATION was \" + (newFp - fp)) + \" should be \") + cmdLength) + \" fp=\") + fp) + \" length=\") + fileLength) + \" opcode=\") + opcode) + \" typecode=\") + typecode)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/602/buggy-version/java.sage.Wizard.java", "BodyUseAPI": [], "Fixed commit": "ad2faf49deabec5a8b501587f59c907ff0dfca2e", "Url": "https://api.github.com/repos/JREkiwi/sagetv", "Date": "2015-07-07T21:29:34Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(decoder.getRecipient().equals(\"NONE_RECIPIENT\"))) { com.lude.server.ServerMain.clients.get(decoder.getRecipient()).getWriter().write(decoder.getRequest()); com.lude.server.ServerMain.clients.get(decoder.getRecipient()).getWriter().flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2429/buggy-version/src.com.lude.server.ServerMain.java", "BodyUseAPI": ["com.lude.server.RequestDecoder.getRecipient()", "com.lude.server.ServerMain.clients.get(decoder.getRecipient()).getWriter().write(decoder.getRequest())", "com.lude.server.RequestDecoder.getRequest()", "java.util.Map<java.lang.String, com.lude.client.Client>.get(decoder.getRecipient())", "com.lude.server.RequestDecoder.getRecipient()", "com.lude.server.ServerMain.clients.get(decoder.getRecipient()).getWriter()", "com.lude.server.ServerMain.clients.get(decoder.getRecipient()).getWriter()", "com.lude.server.ServerMain.clients.get(decoder.getRecipient()).getWriter().flush()", "java.util.Map<java.lang.String, com.lude.client.Client>.get(decoder.getRecipient())"], "Fixed commit": "0aeded5eb6a6f556222354a01b65866a59d8058f", "Url": "https://api.github.com/repos/MrPekar98/Lud-Server", "Date": "2018-12-28T22:52:43Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (secondsPassed == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5862/buggy-version/Plugin.src.main.java.net.livecar.nuttyworks.npc_police.players.PlayerDataManager.java", "BodyUseAPI": [], "Fixed commit": "72f343b934691f52c5d51e4c608e4c5da2029f28", "Url": "https://api.github.com/repos/Nutty101/NPC-Police", "Date": "2018-12-31T00:51:41Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bindingResult.hasErrors()) { return buildCreateErrorResponse(bindingResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/935/buggy-version/src.main.java.com.oocl.web.sampleWebApp.controllers.ParkingLotResource.java", "BodyUseAPI": ["com.oocl.web.sampleWebApp.controllers.ParkingLotResource.buildCreateErrorResponse(org.springframework.validation.BindingResult)"], "Fixed commit": "a720fef591bca9ffaa2282fdba7541535bfeebd2", "Url": "https://api.github.com/repos/ikersuen/sprint-boot-multi-tier-test", "Date": "2018-12-02T06:18:33Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.body().getRuntime()) == null) { movieRunTime.setText(\"N/A\"); }else { movieRunTime.setText((((response.body().getRuntime().toString()) + \" \") + \"min\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2091/buggy-version/app.src.main.java.com.sexybeast.michael.delve.MovieInfoLayoutActivity.java", "BodyUseAPI": ["android.widget.TextView.setText((((response.body().getRuntime().toString()) + \" \") + \"min\"))", "response.body().getRuntime().toString()", "response.body().getRuntime()", "retrofit2.Response<com.sexybeast.michael.delve.Model_ID.Example_ID>.body()"], "Fixed commit": "d03b4e0f6c0dfaaf900162351dc1785d8609fdb1", "Url": "https://api.github.com/repos/youngTickles/Delve", "Date": "2018-12-01T12:09:45Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((java.lang.String.valueOf(birthday).length()) != 8) throw new java.util.InputMismatchException(\"Not properly formatted\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6328/buggy-version/src.User.java", "BodyUseAPI": [], "Fixed commit": "73f114bbdb47897df2e339a5540f6a88388798e7", "Url": "https://api.github.com/repos/tegenton/pset-5", "Date": "2018-11-30T00:30:32Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.nuls.protocol.model.SmallBlock.getHeader()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((header.getTime()) < ((io.nuls.kernel.func.TimeService.currentTimeMillis()) - ((io.nuls.protocol.constant.ProtocolConstant.BLOCK_TIME_INTERVAL_SECOND) * 1000))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4603/buggy-version/protocol-module.base.protocol-base.src.main.java.io.nuls.protocol.base.handler.SmallBlockHandler.java", "BodyUseAPI": [], "Fixed commit": "f38ce0ff61eafac3d30b15318c7b40cdbfdf8b30", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-11-19T07:09:21Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null == block) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4603/buggy-version/protocol-module.base.protocol-base.src.main.java.io.nuls.protocol.base.download.thread.CollectThread.java", "BodyUseAPI": [], "Fixed commit": "f38ce0ff61eafac3d30b15318c7b40cdbfdf8b30", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-11-19T07:09:21Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentQuestion.equals(questionID)) { messageList.add(new champagne86.com.classconnect.Message(thisId, message, senderId, senderDisplayName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4666/buggy-version/app.src.main.java.champagne86.com.classconnect.ChatroomFragment.java", "BodyUseAPI": [], "Fixed commit": "1eff5672cb67256c16c02ed41a9be641efcb08f4", "Url": "https://api.github.com/repos/zrivard/Class-Connect", "Date": "2018-11-27T23:20:36Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.startsWith(\"file:\")) { return com.netflix.iceberg.Files.localInput(new java.io.File(file.replaceFirst(\"file:\", \"\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6378/buggy-version/api.src.main.java.com.netflix.iceberg.Files.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)", "com.netflix.iceberg.Files.localInput(java.io.File)"], "Fixed commit": "ed7b529e2bb25c9eca99bfa1d9af52253be7f07c", "Url": "https://api.github.com/repos/Netflix/iceberg", "Date": "2018-12-12T23:18:32Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(a.lessEq(b))) throw new com.stevesoft.pat.RegSyntax(((((\"{\" + a) + \",\") + b) + \"} is invalid\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/974/buggy-version/com.stevesoft.pat.Multi.java", "BodyUseAPI": [], "Fixed commit": "6a98409b503063327360cfbab3ab94c8dff0ff30", "Url": "https://api.github.com/repos/stevenrbrandt/pat-regex", "Date": "2018-12-10T19:03:38Z"},
{"Line": "=>700", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(normalsStationId.equals(\"\"))) { normalsMonthly = new course_generator.weather.NoaaWeatherData(maximumTemperature, minimumTemperature, averageTemperature, \"\", date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7747/buggy-version/src.course_generator.SaxCGXHandler.java", "BodyUseAPI": [], "Fixed commit": "3d9a6484dc4373eeec2cf1cdfe656f37357d8ebb", "Url": "https://api.github.com/repos/FJBDev/Course_Generator", "Date": "2018-12-04T17:06:57Z"},
{"Line": "=>695", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(normalsStationId.equals(\"\"))) { normalsDaily = new course_generator.weather.NoaaWeatherData(maximumTemperature, minimumTemperature, averageTemperature, \"\", date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7747/buggy-version/src.course_generator.SaxCGXHandler.java", "BodyUseAPI": [], "Fixed commit": "3d9a6484dc4373eeec2cf1cdfe656f37357d8ebb", "Url": "https://api.github.com/repos/FJBDev/Course_Generator", "Date": "2018-12-04T17:06:57Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String,java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rowsAffected <= 0) { throw new org.forum.api.exception.DataNotFoundException(org.forum.api.commons.ErrorUtility.getDataNotFoundExceptionMessage(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4836/buggy-version/src.main.java.org.forum.api.jdbc.dao.MessageDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "3a208272d363d8699bf3cd58e06427bb8ecc0b33", "Url": "https://api.github.com/repos/muradbax/forum-rest-api", "Date": "2018-04-14T19:27:54Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String,message.getHeader(),message.getBody(),java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rowsAffected <= 0) { throw new org.forum.api.exception.DataNotFoundException(org.forum.api.commons.ErrorUtility.getDataNotFoundExceptionMessage(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4836/buggy-version/src.main.java.org.forum.api.jdbc.dao.MessageDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "3a208272d363d8699bf3cd58e06427bb8ecc0b33", "Url": "https://api.github.com/repos/muradbax/forum-rest-api", "Date": "2018-04-14T19:27:54Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!clearError) { error = c4document.getError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9125/buggy-version/shared.src.main.java.com.couchbase.lite.AbstractReplicator.java", "BodyUseAPI": [], "Fixed commit": "ca63e5b5483ee5862b1415f4b4aa44d2dd0736ff", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-android", "Date": "2018-12-21T07:08:32Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((keyData.getKeyNote()) == null) { keyData.setKeyNote(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1826/buggy-version/Backend.verification-tool.src.main.java.com.ALCverificationtool.services.fileUploadService.FileUploadServiceImpl.java", "BodyUseAPI": ["com.ALCverificationtool.models.TranslationResourceRec.setKeyNote(java.lang.String)"], "Fixed commit": "115c2f14d4d38361455112c32473467fa78ca0fd", "Url": "https://api.github.com/repos/emadvaid/SeniorProject", "Date": "2018-11-04T18:21:38Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ImageHoster.service.ImageService.getImage(java.lang.Integer)", "javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((image.getUser().getId()) == (user.getId())) { java.lang.String tags = convertTagsToString(image.getTags()); model.addAttribute(\"image\", image); model.addAttribute(\"tags\", tags); return \"images/edit\"; }else { model.addAttribute(\"editError\", error); model.addAttribute(\"image\", image); model.addAttribute(\"tags\", image.getTags()); return \"images/image\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2414/buggy-version/src.main.java.ImageHoster.controller.ImageController.java", "BodyUseAPI": ["ImageHoster.model.Image.getTags()", "org.springframework.ui.Model.addAttribute(java.lang.String,image.getTags())", "ImageHoster.controller.ImageController.convertTagsToString(image.getTags())", "org.springframework.ui.Model.addAttribute(java.lang.String,ImageHoster.model.Image)", "org.springframework.ui.Model.addAttribute(java.lang.String,ImageHoster.model.Image)", "ImageHoster.model.Image.getTags()"], "Fixed commit": "02827567372429aa13f04bf9813325ca3a5373b6", "Url": "https://api.github.com/repos/abhishekchitransh/ImageHoster", "Date": "2018-12-22T08:47:40Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((copy.customerId) != null) { customerId = new java.lang.String(copy.customerId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7645/buggy-version/app.src.main.java.com.example.stephen.fatcat.com.example.stephen.fatcat.firebase.FatcatFriend.java", "BodyUseAPI": [], "Fixed commit": "a10b0e188d2368821a2061387e8a7377e2396e0b", "Url": "https://api.github.com/repos/Tikitaco/Feed-The-Kitty", "Date": "2018-12-03T03:00:53Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name == null) || (password == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3386/buggy-version/src.PlayerDatabase.java", "BodyUseAPI": [], "Fixed commit": "e7b101765fefb4698817f141e0ed406a7757bb73", "Url": "https://api.github.com/repos/htanvee/CS321-2018F-002", "Date": "2018-11-19T05:26:30Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3386/buggy-version/src.PlayerDatabase.java", "BodyUseAPI": [], "Fixed commit": "e7b101765fefb4698817f141e0ed406a7757bb73", "Url": "https://api.github.com/repos/htanvee/CS321-2018F-002", "Date": "2018-11-19T05:26:30Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (username == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3386/buggy-version/src.PlayerDatabase.java", "BodyUseAPI": [], "Fixed commit": "e7b101765fefb4698817f141e0ed406a7757bb73", "Url": "https://api.github.com/repos/htanvee/CS321-2018F-002", "Date": "2018-11-19T05:26:30Z"},
{"Line": "=>517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(settingUpLevel)) { playerX = player_potentialX; playerY = player_potentialY; }else { settingUpLevel = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/813/buggy-version/src.main.Beast.java", "BodyUseAPI": [], "Fixed commit": "d23c9b4d451c1f067d1e59574bc6d02b9997e7ab", "Url": "https://api.github.com/repos/davidrawlings10/Beast", "Date": "2018-12-01T04:08:05Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["task.getResult().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((emails == null) || (((emails.size()) - 1) < 1)) projectRef.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9531/buggy-version/app.src.main.java.com.example.sunny.whiteboard.projects.ProjectsActivity.java", "BodyUseAPI": [], "Fixed commit": "1fe31cecc31cd93014de14b41b89fd40354af307", "Url": "https://api.github.com/repos/schaubey1/Whiteboard", "Date": "2018-12-15T01:23:20Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (person.hasRelatives()) numberOfRelatives -= person.getRelativeSize();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4087/buggy-version/PrivateRoads.src.com.albertadams.data.DataRandomizer.java", "BodyUseAPI": ["com.albertadams.data.Person.getRelativeSize()"], "Fixed commit": "cb0065a43958509f3f1f3c756a897cb33e971925", "Url": "https://api.github.com/repos/albeadams/RoadSim", "Date": "2018-11-26T13:48:54Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"Secure\".equals(param)) && (cookieString.contains(\"Secure\"))) { return \"true\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3453/buggy-version/modules.citrus-http.src.main.java.com.consol.citrus.http.message.HttpMessageConverter.java", "BodyUseAPI": [], "Fixed commit": "84077f2d39690a3bbad7dae7ee7932e8081c453a", "Url": "https://api.github.com/repos/citrusframework/citrus", "Date": "2018-12-03T15:47:45Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flowable.common.engine.impl.persistence.cache.EntityCache.findInCache(java.lang.Class,planItemInstanceEntity.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (planItemInstanceFromCache != null) { planItemInstanceMap.put(planItemInstanceFromCache.getId(), planItemInstanceFromCache); }else { planItemInstanceMap.put(planItemInstanceEntity.getId(), planItemInstanceEntity); entityCache.put(planItemInstanceEntity, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5174/buggy-version/modules.flowable-cmmn-engine.src.main.java.org.flowable.cmmn.engine.impl.persistence.entity.data.impl.MybatisCaseInstanceDataManagerImpl.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, org.flowable.cmmn.engine.impl.persistence.entity.PlanItemInstanceEntity>.put(planItemInstanceFromCache.getId(),org.flowable.cmmn.engine.impl.persistence.entity.PlanItemInstanceEntity)", "org.flowable.cmmn.engine.impl.persistence.entity.PlanItemInstanceEntity.getId()"], "Fixed commit": "82d14938456c9b9dbc12c26faf22c0bb3a8db1cb", "Url": "https://api.github.com/repos/flowable/flowable-engine", "Date": "2018-11-21T14:39:33Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pair.size()) == 1) { exists = (this.getPartnerA().equals(pair.getPartnerA())) || (this.getPartnerB().equals(pair.getPartnerA())); }else if ((pair.size()) == 2) { exists = (((this.getPartnerA().equals(pair.getPartnerA())) || (this.getPartnerB().equals(pair.getPartnerA()))) || (this.getPartnerA().equals(pair.getPartnerB()))) || (this.getPartnerB().equals(pair.getPartnerB())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3866/buggy-version/webapp.gs-serving-web-content.complete.src.main.java.Models.Pair.java", "BodyUseAPI": ["Models.Pair.getPartnerB()", "java.lang.String.equals(java.lang.String)", "Models.Pair.getPartnerA()", "Models.Pair.getPartnerA()", "Models.Pair.size()", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "Models.Pair.getPartnerA()", "Models.Pair.getPartnerB()", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "Models.Pair.getPartnerA()"], "Fixed commit": "d9cba306ef7502e2f3b6836619dd869d4a8132b8", "Url": "https://api.github.com/repos/Glenn-S/Secret-Santa", "Date": "2018-11-15T00:09:28Z"},
{"Line": "=>841", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values[i]) instanceof java.lang.Double) { java.lang.Double aDouble = ((java.lang.Double) (values[i])); if (!(adsDataType.withinBounds(aDouble))) { throw new java.lang.IllegalArgumentException(((((((((\"Value of \" + aDouble) + \" exceeds allowed minimum for type \") + (adsDataType.name())) + \" (min \") + (adsDataType.getLowerBound())) + \"/max +\") + (adsDataType.getUpperBound())) + \")\")); } floatingPointValues[i] = aDouble.floatValue(); }else if ((values[i]) instanceof java.lang.Float) { floatingPointValues[i] = ((java.lang.Float) (values[i])); }else { throw new java.lang.IllegalArgumentException(((((\"Value of type \" + (values[i].getClass().getName())) + \" is not assignable to \") + (adsDataType.name())) + \" fields.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5388/buggy-version/plc4j.protocols.ads.src.main.java.org.apache.plc4x.java.ads.model.AdsPlcFieldHandler.java", "BodyUseAPI": ["java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getName()"], "Fixed commit": "77ab2697358f511b1624d85e5e1c70d1cfc3478a", "Url": "https://api.github.com/repos/apache/incubator-plc4x", "Date": "2018-11-01T15:04:56Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((homework.getDeliveryMin()) < 10) { hourToShow += \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9491/buggy-version/app.src.main.java.com.iteso.wapi.AdapterHomework.java", "BodyUseAPI": [], "Fixed commit": "61a15cda8a2297a3bedc432231d7bf5250396b5d", "Url": "https://api.github.com/repos/GustavoRuedaEnriquez/WAPI_app", "Date": "2018-12-03T00:15:06Z"},
{"Line": "=>2183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wci.umls.server.jpa.algo.maint.AdHocAlgorithm.getCode(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (code.getName().equals(\"name\")) { code.setName(\"PDQ_2016_07_31 to NCI_2017_06D Mappings\"); updateCode(code); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8027/buggy-version/jpa-services.src.main.java.com.wci.umls.server.jpa.algo.maint.AdHocAlgorithm.java", "BodyUseAPI": ["com.wci.umls.server.jpa.algo.maint.AdHocAlgorithm.updateCode(com.wci.umls.server.model.content.Code)", "com.wci.umls.server.model.content.Code.setName(java.lang.String)"], "Fixed commit": "c63f90eb31c15db77d57ee04cdf0d8aa276c2728", "Url": "https://api.github.com/repos/WestCoastInformatics/UMLS-Terminology-Server", "Date": "2018-11-29T23:13:23Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x == (this.start[0])) && (y == (this.start[1]))) { way_found = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4421/buggy-version/Finde_das_Korn.java", "BodyUseAPI": [], "Fixed commit": "1786ddf8a5a3cd98550030b7a377915f1d6383ef", "Url": "https://api.github.com/repos/yleckel/hamster_a_stern", "Date": "2018-12-02T11:30:26Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (empty) msgString = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/238/buggy-version/src.main.java.coffeecatteam.coffeecatutils.CatLogger.java", "BodyUseAPI": [], "Fixed commit": "797658a3fb8e4b31fd7a85fba2cd00af9b6f2c54", "Url": "https://api.github.com/repos/CoffeeCatRailway/CoffeeCatUtils", "Date": "2018-12-20T09:51:40Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.util.StringUtils.isEmpty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isConfirmEmpty) { model.addAttribute(\"password2Error\", \"Password confirmation cannot be empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1218/buggy-version/src.main.java.saladukha.controllers.RegistrationController.java", "BodyUseAPI": [], "Fixed commit": "9d809b0d9676963614d789b8a22fbadbd4ce0722", "Url": "https://api.github.com/repos/Saladukha/Service-microblogging-Creation-on-the-basis-of-textbooks-from-the-site-spring.io", "Date": "2018-12-09T22:17:44Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((simpleWalk.getRouteList().get(i).getTime()) == 0) { meanSpeed += (simpleWalk.getRouteList().get(i).getDistance()) / (simpleWalk.getRouteList().get(i).getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6548/buggy-version/app.src.main.java.com.example.midel.stepper.ListFragment.java", "BodyUseAPI": ["simpleWalk.getRouteList().get(i).getDistance()", "com.example.midel.stepper.SimpleWalk.getRouteList()", "simpleWalk.getRouteList().get(int)", "com.example.midel.stepper.SimpleWalk.getRouteList()", "simpleWalk.getRouteList().get(int)", "simpleWalk.getRouteList().get(i).getTime()"], "Fixed commit": "9a62d3db3da0f852a4173f7e37c102b16c88f18e", "Url": "https://api.github.com/repos/Midelcas/MobileDevicesProgramming", "Date": "2018-11-04T21:36:42Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pair.length) == 2) { value = java.net.URLDecoder.decode(pair[1], \"utf-8\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/457/buggy-version/src.main.java.com.centaurstech.utils.encode.HttpUtil.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "16c949512ab5e63d6ebdf3863564f03f245c7e21", "Url": "https://api.github.com/repos/noahzark/centaurstech-common", "Date": "2018-11-01T14:35:54Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((originList.size()) == 0) return returnList;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4981/buggy-version/app.src.main.java.de.teambuktu.ase.Utility.java", "BodyUseAPI": [], "Fixed commit": "413305475279398d9102b45c18613a97239b61b4", "Url": "https://api.github.com/repos/seisure/ASE", "Date": "2018-11-26T20:45:12Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flowable.common.engine.impl.persistence.cache.EntityCache.findInCache(java.lang.Class,planItemInstanceEntity.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (planItemInstanceFromCache != null) { planItemInstanceMap.put(planItemInstanceFromCache.getId(), planItemInstanceFromCache); }else { planItemInstanceMap.put(planItemInstanceEntity.getId(), planItemInstanceEntity); entityCache.put(planItemInstanceEntity, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7826/buggy-version/modules.flowable-cmmn-engine.src.main.java.org.flowable.cmmn.engine.impl.persistence.entity.data.impl.MybatisCaseInstanceDataManagerImpl.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, org.flowable.cmmn.engine.impl.persistence.entity.PlanItemInstanceEntity>.put(planItemInstanceFromCache.getId(),org.flowable.cmmn.engine.impl.persistence.entity.PlanItemInstanceEntity)", "org.flowable.cmmn.engine.impl.persistence.entity.PlanItemInstanceEntity.getId()"], "Fixed commit": "58e695cb5e31794d14a07ffacdba17596ede47df", "Url": "https://api.github.com/repos/qiudaoke/flowable-engine", "Date": "2018-11-21T14:39:33Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cars != null) { generateDataList(cars); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9474/buggy-version/app.src.main.java.com.myapps.tc_android.view.fragments.HomeFragment.java", "BodyUseAPI": ["com.myapps.tc_android.view.fragments.HomeFragment.1.generateDataList(java.util.List<com.myapps.tc_android.service.model.Car>)"], "Fixed commit": "0bd8ba75b6b12e71372e623d01d5d05aa01bba87", "Url": "https://api.github.com/repos/Mhmd77/TC-Android", "Date": "2018-12-20T19:44:52Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.owned_territories.size()) == 0) this.current_state = State_Player.DEAD;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2814/buggy-version/src.models.Player.java", "BodyUseAPI": [], "Fixed commit": "707495f9de4e2276c4ccfcc49fc527ef9ad19407", "Url": "https://api.github.com/repos/hr-gith/risk_game", "Date": "2018-12-01T17:21:12Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (msg.contains(\"!SYN!-logout-!SYN!\")) { return; }else { Connection.ClientHandler.sendPublicMessage(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5446/buggy-version/SYNchatServer.src.Connection.ClientHandler.java", "BodyUseAPI": ["Connection.ClientHandler.sendPublicMessage(java.lang.String)"], "Fixed commit": "cced8e2d869950ebb61cdf97d585b4082b84bf2d", "Url": "https://api.github.com/repos/Staerdahl/SYNchatServer", "Date": "2018-11-01T11:03:24Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(domain.db.DbHelper.hasMainCategory(currentLine))) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8535/buggy-version/src.domain.db.CategoryDbInFile.java", "BodyUseAPI": [], "Fixed commit": "80de6433a6f96ef43dbcd6534c9e1ad3587804af", "Url": "https://api.github.com/repos/r0663332UCLL/denolf_vermeersch_vercaeren", "Date": "2018-12-03T19:07:45Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(eosWallet.loadFile(\"\"))) { if (walletFile.getName().endsWith(io.plactal.eoscommander.data.wallet.EosWalletManager.EOS_WALLET_FILE_EXT)) { throw new java.lang.RuntimeException((\"Unable to open file: \" + (walletFile.getName()))); } eosWallet.setWalletFilePath(((walletFile.getAbsolutePath()) + (io.plactal.eoscommander.data.wallet.EosWalletManager.EOS_WALLET_FILE_EXT))); if (!(eosWallet.loadFile(\"\"))) { throw new java.lang.RuntimeException((\"Unable to open file: \" + (walletFile.getName()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6917/buggy-version/app.src.main.java.io.plactal.eoscommander.data.wallet.EosWalletManager.java", "BodyUseAPI": ["io.plactal.eoscommander.data.wallet.EosWallet.setWalletFilePath(java.lang.String)", "io.plactal.eoscommander.data.wallet.EosWallet.loadFile(java.lang.String)"], "Fixed commit": "9b9afa701aff345b5ec10834c5691f375a1a931c", "Url": "https://api.github.com/repos/playerone-id/EosCommander", "Date": "2018-11-14T09:49:29Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (extPos < 0) { nameWithoutExt = fileName; }else { nameWithoutExt = fileName.substring(0, extPos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6917/buggy-version/app.src.main.java.io.plactal.eoscommander.data.wallet.EosWalletManager.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "9b9afa701aff345b5ec10834c5691f375a1a931c", "Url": "https://api.github.com/repos/playerone-id/EosCommander", "Date": "2018-11-14T09:49:29Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxLength == 0) { return new java.net.URL[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1308/buggy-version/src.main.java.org.bytedeco.javacpp.Loader.java", "BodyUseAPI": [], "Fixed commit": "61db8dd73b23b1375dd540da729de3d96b696ed6", "Url": "https://api.github.com/repos/bytedeco/javacpp", "Date": "2018-12-15T01:03:30Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (r == null) { held.set(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2345/buggy-version/faceted-browsing-benchmark-parent.faceted-browsing-benchmark-v2-parent.faceted-browsing-benchmark-v2-core.src.main.java.org.hobbit.benchmark.faceted_browsing.v2.main.SupplierUtils.java", "BodyUseAPI": [], "Fixed commit": "a9833b9df22c8784a1368b37a4d9c22dc4e31306", "Url": "https://api.github.com/repos/hobbit-project/faceted-browsing-benchmark", "Date": "2018-11-14T01:00:58Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Type.getTypeName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fieldType.equals(xls.type.TypeWriterFactory.DATE_TYPE)) { return xls.type.DateTypeFieldWriter.getInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9773/buggy-version/src.main.java.xls.type.TypeWriterFactory.java", "BodyUseAPI": [], "Fixed commit": "15f1c8d7728dd7e37c9d235135981438ad20ad26", "Url": "https://api.github.com/repos/Khodanovich/XlsParser", "Date": "2018-12-05T12:40:28Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(edu.ucsb.cs184.moments.moments.FirebaseHelper.initFinished())) edu.ucsb.cs184.moments.moments.FirebaseHelper.init();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/163/buggy-version/app.src.main.java.edu.ucsb.cs184.moments.moments.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "f46908a81ca0374cbebc90d545749eab3e8d9bf2", "Url": "https://api.github.com/repos/SeakyLuo/Moments", "Date": "2018-12-05T22:18:43Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"org.sakaiproject.citation.impl.CitationList\".equals(resource.getResourceType())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/605/buggy-version/kernel.kernel-util.src.main.java.org.sakaiproject.content.util.ZipContentUtil.java", "BodyUseAPI": [], "Fixed commit": "b616263473b473bf5bf6c4f228d22f7c2ae5bd6f", "Url": "https://api.github.com/repos/ox-it/sakai", "Date": "2018-10-30T12:09:48Z"},
{"Line": "=>1045", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["panda.dao.entity.Entity<T>.getIdentity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (ef == null) { ge = new com.google.appengine.api.datastore.Entity(getTableName(entity), getRootKey()); }else { if (ef.isNumberIdentity()) { ge = new com.google.appengine.api.datastore.Entity(getTableName(entity), getRootKey()); }else { ge = new com.google.appengine.api.datastore.Entity(getTableName(entity), panda.lang.Randoms.randUUID32(), getRootKey()); } saveEntity(ge); setDataIdentity(entity, data, ge.getKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7484/buggy-version/panda-core.src.main.java.panda.dao.gae.GaeDao.java", "BodyUseAPI": ["panda.dao.entity.EntityField.isNumberIdentity()"], "Fixed commit": "877b380a5146384e00b4e7723aa8c8210b6d663f", "Url": "https://api.github.com/repos/pandafw/panda", "Date": "2018-12-26T12:59:12Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((voting[readX][readY][radius]) > maxVote) { maxVote = voting[readX][readY][radius]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5924/buggy-version/PixelModifier.java", "BodyUseAPI": [], "Fixed commit": "ee28d6cb700333622fd7154cfa7e98fe9f302164", "Url": "https://api.github.com/repos/as14g18/circle-detection", "Date": "2018-11-16T00:59:47Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.length()) != (other.length())) { return (this.length()) - (other.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6709/buggy-version/MyString.java", "BodyUseAPI": ["MyString.length()"], "Fixed commit": "c3811fe1759540af632817a1a0cb489d142e2871", "Url": "https://api.github.com/repos/vsofat/MKS21X-MyString", "Date": "2018-11-27T03:58:33Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sig.hasRelation(this, org.audiveris.omr.sig.relation.AugmentationRelation.class)) { ab = false; }else { for (org.audiveris.omr.sig.relation.Relation dd : sig.getRelations(this, org.audiveris.omr.sig.relation.DoubleDotRelation.class)) { if ((sig.getEdgeSource(dd)) == (this)) { ab = false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5863/buggy-version/src.main.org.audiveris.omr.sig.inter.AugmentationDotInter.java", "BodyUseAPI": ["org.audiveris.omr.sig.inter.AugmentationDotInter.getRelations(org.audiveris.omr.sig.inter.AugmentationDotInter,java.lang.Class)", "org.audiveris.omr.sig.inter.AugmentationDotInter.getEdgeSource(org.audiveris.omr.sig.relation.Relation)"], "Fixed commit": "91944717062272b66563e4f68b5e85f5b14c8d9f", "Url": "https://api.github.com/repos/Audiveris/audiveris", "Date": "2018-04-20T17:23:09Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.audiveris.omr.sig.inter.AugmentationDotInter.getEdgeSource(org.audiveris.omr.sig.relation.Relation)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dot != (this)) { return ((org.audiveris.omr.sig.inter.AugmentationDotInter) (dot)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5863/buggy-version/src.main.org.audiveris.omr.sig.inter.AugmentationDotInter.java", "BodyUseAPI": [], "Fixed commit": "91944717062272b66563e4f68b5e85f5b14c8d9f", "Url": "https://api.github.com/repos/Audiveris/audiveris", "Date": "2018-04-20T17:23:09Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent.getEnvironment()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.alipay.sofa.infra.utils.SOFABootEnvUtils.isSpringCloudBootstrapEnvironment(environment)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2784/buggy-version/tracer-sofa-boot-starter.src.main.java.com.alipay.sofa.tracer.boot.listener.SofaTracerConfigurationListener.java", "BodyUseAPI": [], "Fixed commit": "6958ca8189f3d7fbc1064319e1eede7e4826480b", "Url": "https://api.github.com/repos/glmapper/sofa-tracer", "Date": "2018-11-16T07:57:53Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (lastRedemption != null) { formattedDateTime = Ticket.Companion.getFormattedRedemptionDate(this, lastRedemption); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3522/buggy-version/app.src.main.java.de.tum.in.tumcampusapp.component.ui.ticket.activity.ShowTicketActivity.java", "BodyUseAPI": ["Ticket.Companion.getFormattedRedemptionDate(de.tum.in.tumcampusapp.component.ui.ticket.activity.ShowTicketActivity,org.joda.time.DateTime)"], "Fixed commit": "e06a1f494e0ca66d2acfd940b02744a7b94d1772", "Url": "https://api.github.com/repos/TUM-Dev/Campus-Android", "Date": "2018-12-31T12:54:12Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wt.size()) < 2) { H2 = 0; I2 = 0; }else { for (int i = 0; i < (beta.size()); i++) { Q += ((wt.get(i)) * ((beta.get(i)) - (b))) * ((beta.get(i)) - (b)); } org.apache.commons.math.distribution.ChiSquaredDistributionImpl chi = new org.apache.commons.math.distribution.ChiSquaredDistributionImpl(((wt.size()) - 1)); try { pQchisq = 1 - (chi.cumulativeProbability(Q)); } catch (org.apache.commons.math.MathException e) { e.printStackTrace(); } H2 = (Q) / ((wt.size()) - 1); if ((Q) > ((wt.size()) - 1)) { I2 = ((H2) - 1) / (H2); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5803/buggy-version/GEAR.src.gear.subcommands.weightedmeta.util.GMRes.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Double>.size()", "java.util.ArrayList<java.lang.Double>.get(int)", "java.util.ArrayList<java.lang.Double>.size()", "java.util.ArrayList<java.lang.Double>.size()"], "Fixed commit": "b5cf14d1b6034afab5e954345fd3336dea81f3a2", "Url": "https://api.github.com/repos/gc5k/GEAR", "Date": "2018-12-07T14:22:53Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileModif.getName().startsWith(\"Test\")) || (fileModif.getName().endsWith(\"Test\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7558/buggy-version/src.main.java.diffson.DiffContextAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "733fb2fb8a8cf6797b07ebcfbf8027b46db4962e", "Url": "https://api.github.com/repos/kth-tcs/ppd-ext", "Date": "2018-11-15T15:23:50Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(iterSentence.hasNext())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1739/buggy-version/src.main.java.io.anserini.collection.WikipediaSentenceCollection.java", "BodyUseAPI": [], "Fixed commit": "9c060ffb761d416c7303f80c9755129605d62b33", "Url": "https://api.github.com/repos/Victor0118/Anserini", "Date": "2018-12-13T20:14:22Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(iterSentence.hasNext())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1739/buggy-version/src.main.java.io.anserini.collection.WikipediaSentenceCollection.java", "BodyUseAPI": [], "Fixed commit": "9c060ffb761d416c7303f80c9755129605d62b33", "Url": "https://api.github.com/repos/Victor0118/Anserini", "Date": "2018-12-13T20:14:22Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["invocation.getInvokedMethod().getReturnType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Object.class.equals(returnType)) && (invocation.isBuildingExpectation())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/513/buggy-version/jmock.src.main.java.org.jmock.internal.ReturnDefaultValueAction.java", "BodyUseAPI": [], "Fixed commit": "23147db2f8b34266da8e63559cdc9d7b40332746", "Url": "https://api.github.com/repos/olibye/jmock-library", "Date": "2018-11-05T21:30:10Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (url.equals(\"tweet\")) { response.sendRedirect(url); }else { getServletContext().getRequestDispatcher(url).forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3688/buggy-version/src.java.controller.membershipServlet.java", "BodyUseAPI": ["getServletContext().getRequestDispatcher(url).forward(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "getServletContext().getRequestDispatcher(java.lang.String)", "javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)"], "Fixed commit": "2aff7a6da9d5aefb4d1059aa66bbe732f3bfc486", "Url": "https://api.github.com/repos/duyphamduc/MiniTwitter", "Date": "2018-11-03T20:52:01Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isUndefined) { isUndefined = false; }else { throw new de.lathanda.eos.interpreter.exceptions.DoubleClassDeclarationException(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2916/buggy-version/Eos.src.de.lathanda.eos.interpreter.parsetree.UserType.java", "BodyUseAPI": [], "Fixed commit": "a4bdf34e8f9d2a1fdf7ab8f917f7dd9ac2105720", "Url": "https://api.github.com/repos/Lathanda/Eos2", "Date": "2018-11-21T16:32:43Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<seedu.address.model.person.Person>.get(i.getZeroBased())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (personToPromote.hasGraduated()) { numberOfStudentsPromoted--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4949/buggy-version/src.main.java.seedu.address.logic.commands.PromoteIndividualCommand.java", "BodyUseAPI": [], "Fixed commit": "8d3917d0de19b61ecc7e31b2f2c0b661511d3333", "Url": "https://api.github.com/repos/LZYAndy/main", "Date": "2018-11-08T09:57:51Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof java.util.List) { return ((java.util.List) (obj)).toArray(); }else if (obj instanceof java.lang.Object[]) { return ((java.lang.Object[]) (obj)); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/212/buggy-version/src.canto.runtime.CantoObjectWrapper.java", "BodyUseAPI": [], "Fixed commit": "2d00e07f70c07161e606ceb7d1c95edf1f7c9e24", "Url": "https://api.github.com/repos/CantoLang/canto", "Date": "2018-12-31T16:57:43Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(be.witmoca.BEATs.Launch.getAPP_WINDOW(),java.lang.String,java.lang.String,int,<nulltype>,java.lang.String[],java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (playlistName == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4838/buggy-version/src.main.java.be.witmoca.BEATs.ui.currentqueue.RevertToPlaylistFromQueueAction.java", "BodyUseAPI": [], "Fixed commit": "1389c6a60e65a43389e0fccd5d7bda0e68c5cdd8", "Url": "https://api.github.com/repos/witmoca/BEATs", "Date": "2018-12-21T18:47:23Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userLoginRespMsg.getData()) != null) { com.guikai.cniaoshop.utils.ToastUtils.show(this, \"\u767b\u5f55\u6210\u529f\"); }else { com.guikai.cniaoshop.utils.ToastUtils.show(this, \"\u7528\u6237\u540d\u4e0d\u5b58\u5728\u6216\u5bc6\u7801\u9519\u8bef\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4827/buggy-version/app.src.main.java.com.guikai.cniaoshop.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "48ba6cf69c06aad57aea3eac238bd5295a9c71f2", "Url": "https://api.github.com/repos/Gui-kai/Cniaoshop", "Date": "2018-12-24T03:10:49Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((appSteps) > 18) { killTree(); }else if ((appSteps) >= 6) { dangerTree(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3632/buggy-version/app.src.main.java.com.knu_mobileapp1_team2.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "5016e98d8e5bb975c4b6f744fa20d2f3bd0894cf", "Url": "https://api.github.com/repos/heojungeun/KNU_mobileAPP1", "Date": "2018-12-10T16:54:36Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fragCurrent) instanceof com.knu_mobileapp1_team2.HomeFragment) { ((com.knu_mobileapp1_team2.HomeFragment) (fragCurrent)).appSteps = steps; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3632/buggy-version/app.src.main.java.com.knu_mobileapp1_team2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5016e98d8e5bb975c4b6f744fa20d2f3bd0894cf", "Url": "https://api.github.com/repos/heojungeun/KNU_mobileAPP1", "Date": "2018-12-10T16:54:36Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Optional.orElse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (obj instanceof java.util.List) { message += ((java.util.List<java.lang.String>) (obj)).stream().collect(java.util.stream.Collectors.joining(\";\")); }else { message += java.lang.String.valueOf(obj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6899/buggy-version/actors.common.src.main.java.org.sunbird.learner.actors.bulkupload.TextbookTocActor.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.Object)"], "Fixed commit": "3b5a9d8bd59b36d59561b1f50107173b7ea36910", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-12-27T06:12:11Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.equals(route.getTargetType().getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isRouteHandler) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7202/buggy-version/src.main.java.com.blade.mvc.RouteContext.java", "BodyUseAPI": [], "Fixed commit": "fae093a595eb384acef2ba9961f5c7b786ee1674", "Url": "https://api.github.com/repos/psh686868/blade", "Date": "2018-11-30T08:41:55Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { node.setValue(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1575/buggy-version/orcscorerxmlparser.src.main.java.in.avimarine.orcscorerxmlparser.EmptyElementConverter.java", "BodyUseAPI": [], "Fixed commit": "07886ed032b69e07119eff927ab208c03703567c", "Url": "https://api.github.com/repos/AviMarineInnovatons/RCRecorder", "Date": "2018-12-10T19:39:46Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(EmailId.getText().toString().equals(\"\"))) mAuth.sendPasswordResetEmail(EmailId.getText().toString()).addOnCompleteListener(new com.google.android.gms.tasks.OnCompleteListener<java.lang.Void>() { @java.lang.Override public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<java.lang.Void> task) { android.support.design.widget.Snackbar snackbar = android.support.design.widget.Snackbar.make(mConstraintLayout, (\"Link to reset your password has been seen to your\\nemail Id: \" + (EmailId.getText().toString())), Snackbar.LENGTH_INDEFINITE); snackbar.show(); } });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6152/buggy-version/app.src.main.java.cyberteam.videoplatform.login.ForgotPassword.java", "BodyUseAPI": ["android.support.design.widget.Snackbar.make(android.support.constraint.ConstraintLayout,(\"Link to reset your password has been seen to your\\nemail Id: \" + (EmailId.getText().toString())),Snackbar.LENGTH_INDEFINITE)", "android.widget.EditText.getText()", "EmailId.getText().toString()", "com.google.firebase.auth.FirebaseAuth.sendPasswordResetEmail(EmailId.getText().toString())", "android.widget.EditText.getText()", "mAuth.sendPasswordResetEmail(EmailId.getText().toString()).addOnCompleteListener(com.google.android.gms.tasks.OnCompleteListener<java.lang.Void>)", "EmailId.getText().toString()"], "Fixed commit": "1ebacebfd252e68c8a93e5435d276459c0c5a8d3", "Url": "https://api.github.com/repos/AllinoneCyberteam/VideoPlatform", "Date": "2018-12-22T19:53:47Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length != 0) { response.setContentLength(((com.basejava.webapp.storage.SqlStorage) (storage)).getPhoto(index).length); out.write(((com.basejava.webapp.storage.SqlStorage) (storage)).getPhoto(index)); }else { byte[] buffer = java.nio.file.Files.readAllBytes(new java.io.File(((com.basejava.webapp.Config.getHomeDir()) + \"\\\\web\\\\img\\\\undefined.png\")).toPath()); out.write(buffer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3179/buggy-version/src.com.basejava.webapp.web.ShowImage.java", "BodyUseAPI": [], "Fixed commit": "a5686d103e464f0206c72c7c95f61557750c030b", "Url": "https://api.github.com/repos/AlexeyPavlov2/basejava", "Date": "2018-11-04T18:50:59Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (objetAchetable instanceof com.quatrephishing.robot.Face) { acheter(((com.quatrephishing.robot.Face) (objetAchetable))); if ((strategie) instanceof com.quatrephishing.robot.SCOPuissanceOr) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1697/buggy-version/src.main.java.com.quatrephishing.robot.Robot.java", "BodyUseAPI": [], "Fixed commit": "516f38d730c8120801746744c20a78165bb5a129", "Url": "https://api.github.com/repos/QuatrePhishing/PS5-18-19-DiceForge-EquipeI", "Date": "2018-11-19T19:10:08Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((agent.getBossId()) != null) && (!(\"\".equals(agent.getBossId())))) { query.addCriteria(org.springframework.data.mongodb.core.query.Criteria.where(\"bossId\").is(agent.getBossId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4068/buggy-version/src.main.java.com.anbang.qipai.admin.plan.dao.mongodb.mongodbagentsdao.MongodbAgentDboDao.java", "BodyUseAPI": ["com.anbang.qipai.admin.web.vo.agentsvo.AgentDboVO.getBossId()", "org.springframework.data.mongodb.core.query.Query.addCriteria(org.springframework.data.mongodb.core.query.Criteria.where(\"bossId\").is(agent.getBossId()))", "org.springframework.data.mongodb.core.query.Criteria.where(\"bossId\").is(agent.getBossId())"], "Fixed commit": "ced9c19c28a19b906816eab735e8d11063b23503", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_admin_facade", "Date": "2018-11-01T09:46:08Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((agent.getBossId()) != null) && (!(\"\".equals(agent.getBossId())))) { query.addCriteria(org.springframework.data.mongodb.core.query.Criteria.where(\"bossId\").is(agent.getBossId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4068/buggy-version/src.main.java.com.anbang.qipai.admin.plan.dao.mongodb.mongodbagentsdao.MongodbAgentDboDao.java", "BodyUseAPI": ["com.anbang.qipai.admin.web.vo.agentsvo.AgentDboVO.getBossId()", "org.springframework.data.mongodb.core.query.Criteria.where(\"bossId\").is(agent.getBossId())", "org.springframework.data.mongodb.core.query.Query.addCriteria(org.springframework.data.mongodb.core.query.Criteria.where(\"bossId\").is(agent.getBossId()))"], "Fixed commit": "ced9c19c28a19b906816eab735e8d11063b23503", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_admin_facade", "Date": "2018-11-01T09:46:08Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((movement.getType()) == (MOVEMENT_TYPES.MOVING)) { movement.setStartPosition(new int[]{ row, column }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5962/buggy-version/1819_mas-skeleton.src.cat.urv.imas.agent.CleanerAgent.java", "BodyUseAPI": ["cat.urv.imas.agent.Movement.setStartPosition(int[])"], "Fixed commit": "c82b8d481baa683827d4fea7963531825f898d74", "Url": "https://api.github.com/repos/MarinaKreplak/IMAS18", "Date": "2018-12-17T09:36:25Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSurrender) { balance += (currentBet) + ((currentBet) / 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7745/buggy-version/src.main.java.kr.ac.knu.lecture.game.blackjack.Player.java", "BodyUseAPI": [], "Fixed commit": "b9b5e208a06494e93bca04e16f399d39c2ad5f07", "Url": "https://api.github.com/repos/Halinee/knu-2018-2-", "Date": "2018-12-21T08:14:02Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSurrender) { balance += (currentBet) + ((currentBet) / 2); }else { if (isBlackJack) { balance += (currentBet) * 1.5; return; } if (isDoubleDown) { balance += (currentBet) * 4; }else balance += (currentBet) * 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7745/buggy-version/src.main.java.kr.ac.knu.lecture.game.blackjack.Player.java", "BodyUseAPI": [], "Fixed commit": "b9b5e208a06494e93bca04e16f399d39c2ad5f07", "Url": "https://api.github.com/repos/Halinee/knu-2018-2-", "Date": "2018-12-21T08:14:02Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSurrender) { balance += (currentBet) + ((currentBet) / 2); }else { balance += currentBet; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7745/buggy-version/src.main.java.kr.ac.knu.lecture.game.blackjack.Player.java", "BodyUseAPI": [], "Fixed commit": "b9b5e208a06494e93bca04e16f399d39c2ad5f07", "Url": "https://api.github.com/repos/Halinee/knu-2018-2-", "Date": "2018-12-21T08:14:02Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldPrio < priority) { sink(index); }else { swim(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6198/buggy-version/lab10.ArrayHeap.java", "BodyUseAPI": [], "Fixed commit": "f61afbb38f8e7823a07e97c74ad0760abe509981", "Url": "https://api.github.com/repos/needmoreinformation/struggles-a", "Date": "2018-11-16T16:03:11Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.ImmutableMap<java.lang.Object, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (name != null) { embed.addField(name, entry.getValue(), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9339/buggy-version/src.main.java.io.github.jroy.happybot.commands.RoleInfoCommand.java", "BodyUseAPI": ["net.dv8tion.jda.core.EmbedBuilder.addField(java.lang.String,java.lang.String,boolean)"], "Fixed commit": "0940f63b0d7575ce957c1476f5fae9e11dd6082e", "Url": "https://api.github.com/repos/JRoy/happybot", "Date": "2018-12-01T20:04:46Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nom.length()) < nbLettersNom) { nbLettersNom = nom.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/529/buggy-version/src.main.java.geco.LoginGenerator.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "cead16ce94fccba8fab09790ba99fcee489e2fbf", "Url": "https://api.github.com/repos/Olzindel/Login-generator", "Date": "2018-11-21T10:26:01Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.cacheDurationMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cacheDurationMillis < 0) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9156/buggy-version/plc4j.utils.opm.src.main.java.org.apache.plc4x.java.opm.PlcEntityInterceptor.java", "BodyUseAPI": [], "Fixed commit": "8013c09a3c3f8482db20d03dd61a644fb9928b1d", "Url": "https://api.github.com/repos/apache/incubator-plc4x", "Date": "2018-11-24T12:42:49Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i == (java.lang.Math.max(((first.size()) - 1), ((second.size()) - 1)))) && (complement != 0)) { result.add(complement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6945/buggy-version/src.main.java.tudelft.sum.TwoNumbersSum.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.add(int)"], "Fixed commit": "bf9290c42e43bea9b3726c4b99203a77ca7ba506", "Url": "https://api.github.com/repos/pi-zz-a/mooc-software-testing", "Date": "2018-11-08T10:37:15Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.bind.Unmarshaller.unmarshal(java.io.ByteArrayInputStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sqlHistory.getSqlCommands()) != null) { history.addAll(sqlHistory.getSqlCommands()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/481/buggy-version/src.org.misc.sqlminus.sqlhistory.SQLHistoryHelper.java", "BodyUseAPI": ["org.misc.sqlminus.sqlhistory.entity.SQLHistory.getSqlCommands()", "java.util.List<java.lang.String>.addAll(sqlHistory.getSqlCommands())"], "Fixed commit": "9fdc3256e38e4f3b853d457b646209d8eda4abc2", "Url": "https://api.github.com/repos/ElbinP/SQLMinus", "Date": "2018-11-21T14:57:01Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.uber.hoodie.common.util.FSUtils.isLogFile(fileStatus.getPath()))) { java.lang.String commitTime = com.uber.hoodie.common.util.FSUtils.getCommitTime(fileStatus.getPath().getName()); long sz = fileStatus.getLen(); if (!(commitHistoMap.containsKey(commitTime))) { commitHistoMap.put(commitTime, new com.codahale.metrics.Histogram(new com.codahale.metrics.UniformReservoir(com.uber.hoodie.cli.commands.StatsCommand.MAX_FILES))); } commitHistoMap.get(commitTime).update(sz); globalHistogram.update(sz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8050/buggy-version/hoodie-cli.src.main.java.com.uber.hoodie.cli.commands.StatsCommand.java", "BodyUseAPI": ["com.uber.hoodie.common.util.FSUtils.getCommitTime(fileStatus.getPath().getName())", "org.apache.hadoop.fs.FileStatus.getPath()", "fileStatus.getPath().getName()", "org.apache.hadoop.fs.FileStatus.getLen()"], "Fixed commit": "bd3f5a01d23d67d411b4a1ee88ef495d30708028", "Url": "https://api.github.com/repos/bukalapak/hudi", "Date": "2018-11-14T08:33:18Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myUser) == null) myUser = new ch.epfl.sweng.radius.database.User(userId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1514/buggy-version/app.src.main.java.ch.epfl.sweng.radius.home.PeopleTab.java", "BodyUseAPI": [], "Fixed commit": "506999497da2240e6a7fa3f60c7b7786c8abefb6", "Url": "https://api.github.com/repos/2018-SWENG/2018-SWENG-Radius", "Date": "2018-11-14T08:36:34Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isMyMod(entity))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1886/buggy-version/src.main.java.com.noobanidus.dwmh.proxy.UnicornProxy.java", "BodyUseAPI": [], "Fixed commit": "ef5cfa1c27157fc95839b7d622c31dca427e49e3", "Url": "https://api.github.com/repos/duely/dwmh", "Date": "2018-12-29T02:42:43Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isMyMod(entity))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1886/buggy-version/src.main.java.com.noobanidus.dwmh.proxy.UnicornProxy.java", "BodyUseAPI": [], "Fixed commit": "ef5cfa1c27157fc95839b7d622c31dca427e49e3", "Url": "https://api.github.com/repos/duely/dwmh", "Date": "2018-12-29T02:42:43Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!checkFile) { com.taobao.arthas.common.AnsiLog.error(\"cannot create directory {}: Permission denied\", com.taobao.arthas.boot.Bootstrap.ARTHAS_LIB_DIR.getAbsolutePath()); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1187/buggy-version/boot.src.main.java.com.taobao.arthas.boot.Bootstrap.java", "BodyUseAPI": [], "Fixed commit": "58bfcd0f7fdd7d5f23e6ab9f4c890704bf7aed91", "Url": "https://api.github.com/repos/x334085347/arthas", "Date": "2018-12-20T09:37:42Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.vertx.core.json.JsonObject.getJsonArray(java.lang.String,fr.wseduc.webutils.collections.JsonArray)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ids.contains(user.getUserId())) unread = \"true\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2379/buggy-version/conversation.src.main.java.org.entcore.conversation.service.impl.SqlConversationService.java", "BodyUseAPI": [], "Fixed commit": "693974a20099062d5429aa17e4401b753edc51ca", "Url": "https://api.github.com/repos/opendigitaleducation/entcore", "Date": "2018-11-15T15:55:00Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.next()", "java.util.Scanner.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (v1.equals(v2)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6544/buggy-version/red-scare.mvn-src.redscare.src.main.java.dk.itu.algdes2018.groupi.Parser.java", "BodyUseAPI": [], "Fixed commit": "a89ef266e59149555da98ab36a83cdfbfef50d27", "Url": "https://api.github.com/repos/quaisaq/algdes-labs", "Date": "2018-11-23T11:36:50Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(v.getId().equals(origin))) { currentPath = EncontrarAgua.getShortestPathTo(v, graph); if (currentPath.isPathToBathroom()) { pathsToBathrooms.add(currentPath); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2827/buggy-version/src.EncontrarAgua.java", "BodyUseAPI": ["EncontrarAgua.getShortestPathTo(Vertice,GrafoNoDirigido<java.lang.Integer, java.lang.Integer>)"], "Fixed commit": "38a6543a3ffdc61baf89a65f9a6b10b09a8e3c6a", "Url": "https://api.github.com/repos/El-Team/Lab-Algo-3-Proyecto-2", "Date": "2018-11-19T19:55:29Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (spec.startsWith(\"//\")) { result = new org.apache.commons.httpclient.HttpsURL((((new java.lang.String(org.apache.commons.httpclient.HttpsURL.DEFAULT_SCHEME)) + ':') + spec)); }else if (spec.startsWith(new java.lang.String(org.apache.commons.httpclient.HttpsURL.DEFAULT_SCHEME))) { result = new org.apache.commons.httpclient.HttpsURL(spec); }else if (spec.startsWith(new java.lang.String(org.apache.commons.httpclient.HttpURL.DEFAULT_SCHEME))) { result = new org.apache.commons.httpclient.HttpURL(spec); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9823/buggy-version/src.main.java.org.codebrewer.intellijplatform.plugin.dilbert.http.DilbertDailyStripFetcher.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "aa28c997d4dc44669d7cec2c7cc47ab6953ab6c1", "Url": "https://api.github.com/repos/codebrewer/intellij-platform-dilbert-daily-strip-plugin", "Date": "2018-12-01T15:21:20Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((i % (Config.MAX_PAGES)) == 0) && (i != 0)) { try { java.lang.System.in.read(); } catch (java.lang.Exception e) { java.lang.System.out.println(\"WTF?\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3561/buggy-version/GenericMethods.java", "BodyUseAPI": [], "Fixed commit": "e574f68e2a3dcbb39c70d5951a9bca57b49fac9f", "Url": "https://api.github.com/repos/Ddxcv98/App", "Date": "2018-12-07T10:56:55Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mUsername.length()) == 14) { mUserBatch = mUsername.substring(5, 7); }else { mUserBatch = \"00\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8349/buggy-version/app.src.main.java.com.example.mibne.scheduledapp.NoticeActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "e84ad8884c0c75f28f244ddfab6df22f0a6f6cc8", "Url": "https://api.github.com/repos/mibnealam/ScheduledApp", "Date": "2018-12-26T08:56:07Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recyclerView) != null) recyclerView.smoothScrollToPosition(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2004/buggy-version/app.src.main.java.edu.ucsb.cs184.moments.moments.RecyclerViewFragment.java", "BodyUseAPI": [], "Fixed commit": "653e50db7cddcbaf2440a35faf976c2164b0189b", "Url": "https://api.github.com/repos/SeakyLuo/Moments", "Date": "2018-12-11T02:10:46Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rating.getRating()) <= 5) sum += rating.getRating();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2004/buggy-version/app.src.main.java.edu.ucsb.cs184.moments.moments.Post.java", "BodyUseAPI": ["edu.ucsb.cs184.moments.moments.Rating.getRating()"], "Fixed commit": "653e50db7cddcbaf2440a35faf976c2164b0189b", "Url": "https://api.github.com/repos/SeakyLuo/Moments", "Date": "2018-12-11T02:10:46Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (total == 0) { percentage = 0.0F; }else { percentage = (((float) (completed)) * 100.0F) / ((float) (total)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8118/buggy-version/src.main.java.ssp.scheduleplanner.logic.commands.ProgressTodayCommand.java", "BodyUseAPI": [], "Fixed commit": "bb3086ec835ddbeb21b159731171ae0ff644fe5e", "Url": "https://api.github.com/repos/CS2103-AY1819S1-T12-3/main", "Date": "2018-11-12T12:23:29Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (total == 0) { percentage = 0.0F; }else { percentage = (((float) (completed)) * 100.0F) / ((float) (total)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8118/buggy-version/src.main.java.ssp.scheduleplanner.logic.commands.ProgressWeekCommand.java", "BodyUseAPI": [], "Fixed commit": "bb3086ec835ddbeb21b159731171ae0ff644fe5e", "Url": "https://api.github.com/repos/CS2103-AY1819S1-T12-3/main", "Date": "2018-11-12T12:23:29Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (httpServletRequest.getMethod().equals(\"OPTIONS\")) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4549/buggy-version/implementation.backend.retro.src.main.java.com.cmpe451.retro.core.SessionInterceptor.java", "BodyUseAPI": [], "Fixed commit": "33096eac7e2062bdfb98f263aa5148ebb6321878", "Url": "https://api.github.com/repos/bounswe/bounswe2018group1", "Date": "2018-12-02T20:59:58Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (action.equals(\"viewTweet\")) { viewTweet(request, response); }else if (action.equals(\"postTweet\")) { postTweet(request, response); viewTweet(request, response); }else if (action.equals(\"deleteTweet\")) { deleteTweet(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4863/buggy-version/src.java.controller.TweetServlet.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "b992114e657b7acb010d9dfb182ac8bbe5d9df02", "Url": "https://api.github.com/repos/duyphamduc/MiniTwitter", "Date": "2018-11-01T20:54:52Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (action == null) { action = \"viewTweet\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4863/buggy-version/src.java.controller.TweetServlet.java", "BodyUseAPI": [], "Fixed commit": "b992114e657b7acb010d9dfb182ac8bbe5d9df02", "Url": "https://api.github.com/repos/duyphamduc/MiniTwitter", "Date": "2018-11-01T20:54:52Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.attr(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((style.length()) == 0) { return new java.util.HashMap<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5148/buggy-version/src.main.java.com.github.liaochong.html2excel.utils.StyleUtils.java", "BodyUseAPI": [], "Fixed commit": "3732c48b8bf7dab42a4f09833f673b29e6a0c8a7", "Url": "https://api.github.com/repos/liaochong/myexcel", "Date": "2018-11-18T12:33:01Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFavDisplayed) { event_adapter = new ch.epfl.sweng.zuluzulu.Adapters.EventArrayAdapter(getContext(), event_fav_sorted, mListener, user); }else { event_adapter = new ch.epfl.sweng.zuluzulu.Adapters.EventArrayAdapter(getContext(), event_all_sorted, mListener, user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/928/buggy-version/app.src.main.java.ch.epfl.sweng.zuluzulu.Fragments.EventFragment.java", "BodyUseAPI": [], "Fixed commit": "fb1ddd6f49542318d0075b271a1629eecc4b3faf", "Url": "https://api.github.com/repos/njomeau/EPFLife", "Date": "2018-11-26T16:26:46Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (page.getReseller().getName().equals(name)) { pairs.setId(i, page.getId()); pairs.setName(i, page.getName()); i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/806/buggy-version/src.main.java.Merchant.java", "BodyUseAPI": ["NameIdPairs.setId(int,page.getId())", "com.pax.market.api.sdk.java.api.merchant.dto.MerchantPageDTO.getId()", "NameIdPairs.setName(int,page.getName())", "com.pax.market.api.sdk.java.api.merchant.dto.MerchantPageDTO.getName()"], "Fixed commit": "07a4f1c013f5d4acd4222eeba7bf2b9f9d844f7a", "Url": "https://api.github.com/repos/kyledevpax/PAXStoreOpenAPIDemo", "Date": "2018-12-06T22:39:52Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getListNotes()) == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6767/buggy-version/MyNotesApp.app.src.main.java.com.anggitprayogo.dicoding.mynotesapp.adapter.NoteAdapter.java", "BodyUseAPI": [], "Fixed commit": "a788442f5e0a8ce66c6116238b4b363b3abb86f2", "Url": "https://api.github.com/repos/anggit97/Android-Developer-Expert-Example", "Date": "2018-11-01T11:58:47Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((prototypen.Spiel.spielbrett.getFeld(start)) instanceof spielobjekte.Figur)) { prototypen.Spiel.setNachrichtTemporaerKurz(\"Bewegung nicht m\u00f6glich, da ausgew\u00e4hltes Objekt keine bewegbare Spielfigur ist.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/853/buggy-version/Programmierer.Eclipse.src.prototypen.Spiel.java", "BodyUseAPI": [], "Fixed commit": "6ba55fa70a9f04ac650311b65f49c14d92dd1ec7", "Url": "https://api.github.com/repos/Flobeus/SE1PUE3", "Date": "2018-12-12T11:08:57Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((remainedCapacity) < count) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5218/buggy-version/src.Buildings.Warehouse.java", "BodyUseAPI": [], "Fixed commit": "d48da488497515d2ec47fa930ed5e77a9b332907", "Url": "https://api.github.com/repos/DanialErfanian/AP_18", "Date": "2018-12-19T08:05:04Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newphoto) toilet.setPhotoUrl(db.uploadImage(filePath, getApplicationContext()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2760/buggy-version/app.src.main.java.com.appspot.airpeepee.airpeepee.EditToiletActivity.java", "BodyUseAPI": [], "Fixed commit": "29c8ba8759901b7b293809387ab673563680b487", "Url": "https://api.github.com/repos/mihailm94/airpnpee", "Date": "2018-11-26T21:20:29Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ignoreJsonFormatError) { final int arity = typeInfo.getArity(); final java.lang.Object[] nullsArray = new java.lang.Object[arity]; return org.apache.flink.types.Row.of(nullsArray); }else throw new java.io.IOException(\"Failed to deserialize JSON object.\", t);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8007/buggy-version/pulsar-flink.src.main.java.org.apache.flink.streaming.connectors.pulsar.serde.JsonRowDeserializationSchema.java", "BodyUseAPI": [], "Fixed commit": "813510ea61516be4afa9594bfe41cf5799d52cdc", "Url": "https://api.github.com/repos/CrestOfWave/pulsar", "Date": "2018-12-19T02:13:00Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dom4j.Element.elements()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pos < (elements.size())) { parent.elements().set(pos, child); }else { parent.elements().add(child); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1352/buggy-version/src.main.java.org.olat.ims.qti.container.ItemContext.java", "BodyUseAPI": ["parent.elements().set(int,org.dom4j.Element)"], "Fixed commit": "8c6150a84e312a169a3cc4b104341ec855820d0a", "Url": "https://api.github.com/repos/OpenOLAT/OpenOLAT", "Date": "2018-11-13T08:36:49Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Model.BancodeDados.getConexao().prepareStatement(java.lang.String)", "Model.BancodeDados.getConexao().prepareStatement(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((preparedStmt.execute()) && (preparedStmt2.execute())) return true; else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1973/buggy-version/Biblioteca.src.Model.Livro.java", "BodyUseAPI": [], "Fixed commit": "16a47b441852a9e305fa414da63c74fc2e628d91", "Url": "https://api.github.com/repos/Jricard0/Alexandria", "Date": "2018-11-09T20:31:48Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (editPersonDescriptor.getName().isPresent()) { throw new seedu.address.logic.commands.exceptions.CommandException(seedu.address.logic.commands.EditCommand.MESSAGE_ALL_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9793/buggy-version/src.main.java.seedu.address.logic.commands.EditCommand.java", "BodyUseAPI": [], "Fixed commit": "7220113a173f14ab0b4a1fc6c321558e6ee0f53c", "Url": "https://api.github.com/repos/LowGinWee/main", "Date": "2018-11-03T03:56:37Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rid.getExpandedSystemId()) != null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/404/buggy-version/org.eclipse.lsp4xml.src.main.java.org.eclipse.lsp4xml.uriresolver.URIResolverExtensionManager.java", "BodyUseAPI": [], "Fixed commit": "896776438519fcdf91a51c600cebc0f582799e2d", "Url": "https://api.github.com/repos/angelozerr/lsp4xml", "Date": "2018-11-02T11:02:51Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pitchInHz < (com.example.mlove.sopranote.MainActivity.BASE)) { tempIndex = 11 - tempIndex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5607/buggy-version/app.src.main.java.com.example.mlove.sopranote.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e2f8fb55406d647d76ae7efcc155aa1971d31f0e", "Url": "https://api.github.com/repos/MrCheesy21/Sopranote", "Date": "2018-11-04T06:31:21Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((queue.size()) <= 0) { done = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/423/buggy-version/src.Client.java", "BodyUseAPI": [], "Fixed commit": "282f5f4e7fd552cef8a6b7169a995c9137b12aa2", "Url": "https://api.github.com/repos/Shadowbomb/OS-Project-3", "Date": "2018-12-06T02:43:23Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((blackFilter) == null) || (!(blackFilter.filter(fullName)))) { if (((filter) == null) || (filter.filter(fullName))) { if (!(compareTableMetaDbAndMemory(connection, tmpMemoryTableMeta, schema.getName(), table))) { compareAll = false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9737/buggy-version/parse.src.main.java.com.alibaba.otter.canal.parse.inbound.mysql.tsdb.DatabaseTableMeta.java", "BodyUseAPI": ["com.alibaba.otter.canal.filter.CanalEventFilter.filter(java.lang.String)"], "Fixed commit": "cbab3fb561f6c22d65a00512e72d462b407cfded", "Url": "https://api.github.com/repos/rewerma/canal", "Date": "2018-11-25T13:01:19Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.names()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (namesArray == null) return schedules;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6803/buggy-version/app.src.main.java.com.mpapps.hueapplication.Volley.HueProtocol.java", "BodyUseAPI": [], "Fixed commit": "ca136e7052dd4c964047770f7c298a81356b9b64", "Url": "https://api.github.com/repos/Maarten1999/HueApplication", "Date": "2018-11-30T13:29:51Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (myGame.getGame().isFinished()) { response.sendRedirect(\"/battleship/result\"); }else { request.getRequestDispatcher(\"/WEB-INF/pages/game.jsp\").include(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3129/buggy-version/src.main.java.lv.tsi.battleship.GameServlet.java", "BodyUseAPI": [], "Fixed commit": "c0ae1d833454c2135d945f6b8f838355addbc9cd", "Url": "https://api.github.com/repos/TSI202/battleship", "Date": "2018-12-06T16:20:01Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getBoolean(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isvibrationon) { if ((Build.VERSION.SDK_INT) >= 26) { vibrator.vibrate(android.os.VibrationEffect.createOneShot(5000, VibrationEffect.DEFAULT_AMPLITUDE)); }else { vibrator.vibrate(5000); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1529/buggy-version/app.src.main.java.org.jugendhackt.geoclock.AlarmActivity.java", "BodyUseAPI": [], "Fixed commit": "7c4bfc3cb14e5027c93c0eee6c539f5dab1bf025", "Url": "https://api.github.com/repos/Jugendhackt/Geo-Clock", "Date": "2018-11-25T11:00:32Z"},
{"Line": "=>734", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index < 0) || (index >= (mBgBuffer.length))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8391/buggy-version/app.src.main.java.com.industry.printer.data.DataTask.java", "BodyUseAPI": [], "Fixed commit": "be62a588a0ca164dc1c86215c084649ded69c163", "Url": "https://api.github.com/repos/kevin-zhaotk/Printer-AS", "Date": "2018-12-20T14:27:38Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((configuration.getBoolean(\"cost-per-item\")) == true) { newcost = (configuration.getDouble(\"mail-cost\")) * count; }else { newcost = configuration.getDouble(\"mail-cost\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7993/buggy-version/src.main.java.io.github.leothawne.LTItemMail.commands.inventories.events.SendBoxInventoryEvent.java", "BodyUseAPI": ["org.bukkit.configuration.file.FileConfiguration.getDouble(java.lang.String)", "org.bukkit.configuration.file.FileConfiguration.getDouble(java.lang.String)"], "Fixed commit": "88622e9701fa3c8953c4ef82fa0a2d74a3be93d2", "Url": "https://api.github.com/repos/leothawne/LTItemMail", "Date": "2018-11-12T22:53:27Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(validatorChanging)) { setDirty(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3007/buggy-version/plugins.ru.runa.gpd.src.ru.runa.gpd.ui.wizard.GlobalValidatorsWizardPage.java", "BodyUseAPI": [], "Fixed commit": "5aefd9c76b6d8cd99ce546040c18a1a1391a089f", "Url": "https://api.github.com/repos/processtech/runawfe-free-devstudio", "Date": "2018-11-12T15:13:55Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.RecyclerView.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (childView != null) { tvShowSeasonsGallery.getChildAt(0).requestFocus(); adapter.getOnItemSelectedListener().onItemSelected(tvShowSeasonsGallery.getChildAt(0), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6042/buggy-version/serenity-app.src.main.java.us.nineworlds.serenity.ui.browser.tv.seasons.TVShowSeasonBrowserActivity.java", "BodyUseAPI": [], "Fixed commit": "8914c51f0249c235e2f4bb5b95994975d67793ea", "Url": "https://api.github.com/repos/NineWorlds/serenity-android", "Date": "2018-11-27T01:04:44Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAudioThread) != null) { mAudioThread.stop(); mAudioThread = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5374/buggy-version/src.main.java.org.arpnetwork.arpclient.play.MediaPlayer.java", "BodyUseAPI": [], "Fixed commit": "a384405d352b74f6752119d55a36eede16c4d8c6", "Url": "https://api.github.com/repos/arpnetwork/arpclient", "Date": "2018-12-05T02:40:09Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((java.lang.Integer.valueOf(input.getText().toString())) <= 5) & ((java.lang.Integer.valueOf(input.getText().toString())) >= 0)) { ru.kraim.dnd5forme.ListData.addSpell(input.getText().toString()); android.widget.Toast toast = android.widget.Toast.makeText(getApplicationContext(), (\"\u041a\u043e\u0442\u0438\u043a-\u0440\u0430\u0431 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u043f\u0438\u0441\u0430\u043b \u0437\u0430\u043a\u043b\u0438\u043d\u0430\u043d\u0438\u0435 \u0432 \u0432\u0430\u0448\u0443 \u043a\u043d\u0438\u0433\u0443 \u043d\u0430 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \" + (input.getText().toString())), Toast.LENGTH_LONG); toast.show(); }else { android.widget.Toast toast = android.widget.Toast.makeText(getApplicationContext(), (\"\u041a\u043e\u0442\u0438\u043a-\u0440\u0430\u0431 \u0433\u043e\u0432\u043e\u0440\u0438\u0442,\u0447\u0442\u043e \u0432\u044b \u043d\u0435 \u043d\u0430\u0441\u0442\u043e\u043b\u044c\u043a\u043e \u043c\u043e\u0433\u0443\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b,\u0447\u0442\u043e\u0431\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0437\u0430\u043a\u043b\u0438\u043d\u0430\u043d\u0438\u0435 \u043d\u0430 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \" + (input.getText().toString())), Toast.LENGTH_LONG); toast.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5077/buggy-version/app.src.main.java.ru.kraim.dnd5forme.ChooseSpell.java", "BodyUseAPI": ["android.widget.EditText.getText()", "input.getText().toString()", "android.widget.Toast.makeText(getApplicationContext(),(\"\u041a\u043e\u0442\u0438\u043a-\u0440\u0430\u0431 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u043f\u0438\u0441\u0430\u043b \u0437\u0430\u043a\u043b\u0438\u043d\u0430\u043d\u0438\u0435 \u0432 \u0432\u0430\u0448\u0443 \u043a\u043d\u0438\u0433\u0443 \u043d\u0430 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \" + (input.getText().toString())),Toast.LENGTH_LONG)", "android.widget.EditText.getText()", "input.getText().toString()", "ru.kraim.dnd5forme.ListData.addSpell(input.getText().toString())", "android.widget.Toast.makeText(getApplicationContext(),(\"\u041a\u043e\u0442\u0438\u043a-\u0440\u0430\u0431 \u0433\u043e\u0432\u043e\u0440\u0438\u0442,\u0447\u0442\u043e \u0432\u044b \u043d\u0435 \u043d\u0430\u0441\u0442\u043e\u043b\u044c\u043a\u043e \u043c\u043e\u0433\u0443\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b,\u0447\u0442\u043e\u0431\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0437\u0430\u043a\u043b\u0438\u043d\u0430\u043d\u0438\u0435 \u043d\u0430 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \" + (input.getText().toString())),Toast.LENGTH_LONG)", "input.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "e34ab131d7c230062c88ec08757f931ddd60edf8", "Url": "https://api.github.com/repos/stalkeryga/DND5toolsRU", "Date": "2018-11-14T10:36:26Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.stream.Stream<java.lang.annotation.Annotation>.collect(java.util.stream.Collector<java.lang.Object, ?, java.util.List<java.lang.Object>>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((vAnnotations.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/779/buggy-version/src.main.java.com.ez.tools.validator.core.detail.MethodValidator.java", "BodyUseAPI": [], "Fixed commit": "ba35810f234db238f6d175f51bfccbf2566b0228", "Url": "https://api.github.com/repos/EltonZhong/smoke", "Date": "2018-12-03T03:16:32Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getClass()) != (event)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/59/buggy-version/src.main.java.io.github.wysohn.triggerreactor.core.manager.trigger.AbstractCustomTriggerManager.java", "BodyUseAPI": [], "Fixed commit": "415e248913ca204cb64ff1d88bd34776543a6379", "Url": "https://api.github.com/repos/wysohn/TriggerReactor", "Date": "2018-12-18T22:40:35Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getMicrosoftService(microsoftAccount).getNbrContact().execute().body()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((e != null) && (!(e.string().isEmpty()))) { java.lang.Integer nbrContact = java.lang.Integer.valueOf(e.string()); return nbrContact; }else { getLogger().error((\"le count des contact microsoft a renvoy\u00e9 une reponse null\" + (microsoftAccount.getAccountName()))); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1871/buggy-version/dap.src.main.java.fr.ynov.dap.dap.microsoft.services.MicrosoftContactService.java", "BodyUseAPI": ["okhttp3.ResponseBody.string()", "java.lang.Integer.valueOf(e.string())"], "Fixed commit": "72daeafe0d2021051dc9ff62730ab00a9fcf4a6f", "Url": "https://api.github.com/repos/DuchenetVictor/javaDap", "Date": "2018-11-24T17:42:42Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.klapstein.lab6.part2.MathPackage.min(double[])", "ca.klapstein.lab6.part2.MathPackage.max(double[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((max - min) != 0) normalized[i] = ((values[i]) - min) / (max - min); else normalized[i] = 1.0 / (values.length);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7180/buggy-version/src.main.java.ca.klapstein.lab6.part2.MathPackage.java", "BodyUseAPI": [], "Fixed commit": "f2cb45e0289107b79acfb0fa5dea82d17ad4e669", "Url": "https://api.github.com/repos/nklapste/ece_322_lab_6", "Date": "2018-12-05T01:05:24Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((d1.length) > i) && ((d2.length) > i)) result[i] = (d1[i]) + (d2[i]); else if ((d1.length) > i) result[i] = d1[i]; else if ((d2.length) > i) result[i] = d2[i];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7180/buggy-version/src.main.java.ca.klapstein.lab6.part2.MathPackage.java", "BodyUseAPI": [], "Fixed commit": "f2cb45e0289107b79acfb0fa5dea82d17ad4e669", "Url": "https://api.github.com/repos/nklapste/ece_322_lab_6", "Date": "2018-12-05T01:05:24Z"},
{"Line": "=>758", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ComposeType.NEW_SMS.equals(type)) { final com.openexchange.mail.mime.ContentType contentType = mail.getContentType(); contentType.setPrimaryType(\"text\").setSubType(\"plain\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9501/buggy-version/com.openexchange.server.src.com.openexchange.mail.mime.filler.MimeMessageFiller.java", "BodyUseAPI": [], "Fixed commit": "8bfd11f4c13fc7a47f226e9bf65e991d2e008f96", "Url": "https://api.github.com/repos/open-xchange/appsuite-middleware", "Date": "2013-02-18T15:39:36Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.weilai.utils.StringUtils.isNotEmpty(loanUser.getIdCard())) { map.put(\"idcard\", loanUser.getIdCard()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/493/buggy-version/src.main.java.com.weilai.system.base.loan.base.service.impl.abstracts.TDWAbstractService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,loanUser.getIdCard())", "com.weilai.system.entity.LoanUser.getIdCard()"], "Fixed commit": "1d963151cc36009dce2559a88af5cb55205c38d3", "Url": "https://api.github.com/repos/wzh2810/weilai", "Date": "2018-12-08T09:11:29Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cell == \"acc\") { java.lang.System.out.println(\"Word is correct ,Willdone!!\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4670/buggy-version/src.compiler.Compiler.java", "BodyUseAPI": [], "Fixed commit": "0a61171ee72251eae03520b10df8dec4aa1df649", "Url": "https://api.github.com/repos/tojasser/CompilerPro", "Date": "2018-11-16T15:48:31Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cause.toString().contains(\"javax.net.ssl\")) { connectorException = new org.wso2.transport.http.netty.contract.ClientConnectorException(((cause.getMessage()) + socketAddress), HttpResponseStatus.BAD_GATEWAY.code()); }else if (cause.toString().contains(org.wso2.transport.http.netty.contractimpl.sender.UNKNOWN_HOST_EXCEPTION)) { connectorException = new org.wso2.transport.http.netty.contract.ClientConnectorException(((((ERROR_COULD_NOT_RESOLVE_HOST) + (COLON)) + (cause.getMessage())) + socketAddress), HttpResponseStatus.BAD_GATEWAY.code()); }else { connectorException = new org.wso2.transport.http.netty.contract.ClientConnectorException(channelFuture.cause().getMessage(), HttpResponseStatus.BAD_GATEWAY.code()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8766/buggy-version/components.org.wso2.transport.http.netty.src.main.java.org.wso2.transport.http.netty.contractimpl.sender.ConnectionAvailabilityFuture.java", "BodyUseAPI": ["java.lang.Throwable.getMessage()", "java.lang.String.contains(org.wso2.transport.http.netty.contractimpl.sender.UNKNOWN_HOST_EXCEPTION)", "java.lang.Throwable.getMessage()", "java.lang.Throwable.toString()"], "Fixed commit": "8eabce3ed59d33db1a603ca7460c4d4cfbd8f1bb", "Url": "https://api.github.com/repos/wso2/transport-http", "Date": "2018-12-07T11:37:53Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.shiro.SecurityUtils.getSubject().getSession().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (userId != null) { com.flowingsun.user.entity.User user = userService.getUserByUserId(userId); if ((user.getRoleList()) != null) { for (com.flowingsun.user.entity.Role role : user.getRoleList()) { authorizationInfo.addRole(role.getRole()); for (com.flowingsun.user.entity.Permission permission : role.getPermissionList()) { authorizationInfo.addStringPermission(permission.getPermission()); } } } }else { authorizationInfo = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8825/buggy-version/src.main.java.com.flowingsun.common.security.MyRealm.java", "BodyUseAPI": ["com.flowingsun.user.service.UserService.getUserByUserId(java.lang.Long)"], "Fixed commit": "1eaefac06d4a659f8fbe45723b525c5c04d9918d", "Url": "https://api.github.com/repos/Flowingsun007/LyonBlog", "Date": "2018-11-04T06:14:16Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getEntity()) != (entity.EntityType.ZOMBIE)) { gridButton[row][col].setIcon(new javax.swing.ImageIcon(\"drawable/grass.png\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4498/buggy-version/src.view.View.java", "BodyUseAPI": [], "Fixed commit": "08ea8451a5f41bc764e744fb1f672c5b89117f6b", "Url": "https://api.github.com/repos/RahulAnilkumar8/starttopanic", "Date": "2018-11-16T17:21:53Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(oldNet.getMeshUUID().equals(meshNetwork.getMeshUUID()))) { mMeshManagerApi.deleteMeshNetworkFromDb(oldNet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3651/buggy-version/Example.nrf-mesh.app.src.main.java.no.nordicsemi.android.nrfmeshprovisioner.viewmodels.NrfMeshRepository.java", "BodyUseAPI": ["no.nordicsemi.android.meshprovisioner.MeshManagerApi.deleteMeshNetworkFromDb(no.nordicsemi.android.meshprovisioner.MeshNetwork)"], "Fixed commit": "798e0519a8bf832f61adea0e89073710d531ca33", "Url": "https://api.github.com/repos/NordicSemiconductor/Android-nRF-Mesh-Library", "Date": "2018-11-28T07:49:16Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((amount > 0) && (amount <= (product.getAmount()))) { products.put(product, amount); }else if (amount < 1) { deleteProduct(product); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9073/buggy-version/src.main.java.Basket.java", "BodyUseAPI": ["java.util.Map<Product, java.lang.Integer>.put(Product,int)", "Basket.deleteProduct(Product)"], "Fixed commit": "b866e6d34da2d9e20f8771cdbcf2e8a5b2ebba4f", "Url": "https://api.github.com/repos/kamilBrodziak/onlineshop", "Date": "2018-11-13T10:09:42Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mLoadState == (LoadState.LOAD)) { }else if (mLoadState == (LoadState.NOMORE)) { if ((holder.itemView) instanceof com.livestar.flowchat.wallet.ui.tron.LoadView) { ((com.livestar.flowchat.wallet.ui.tron.LoadView) (holder.itemView)).setState(mLoadState); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1862/buggy-version/app.src.main.java.com.hewking.base.recyclerview.ComnBaseAdapter.java", "BodyUseAPI": ["((com.livestar.flowchat.wallet.ui.tron.LoadView) (holder.itemView)).setState(com.hewking.base.recyclerview.LoadState)"], "Fixed commit": "7d9e00b64ea82611547b529346e96591966a1965", "Url": "https://api.github.com/repos/hewking/HUILibrary", "Date": "2018-12-13T10:26:26Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldState == (LoadState.NORMAL)) { setEnableLoadMore(true); }else { if (state == (LoadState.NORMAL)) { setEnableLoadMore(false); }else { com.hewking.base.recyclerview.ComnBaseAdapter.notifyItemChanged(getLast()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1862/buggy-version/app.src.main.java.com.hewking.base.recyclerview.ComnBaseAdapter.java", "BodyUseAPI": [], "Fixed commit": "7d9e00b64ea82611547b529346e96591966a1965", "Url": "https://api.github.com/repos/hewking/HUILibrary", "Date": "2018-12-13T10:26:26Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["n.getValue().searchFile(node.pojo.FileSearchMessage)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (find != null) { files.addAll(find); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8294/buggy-version/src.node.NodeContext.java", "BodyUseAPI": ["java.util.Set.addAll(java.util.Set<java.lang.String>)"], "Fixed commit": "c3d979114e098e274b08cf97c04b6784c4b0fddd", "Url": "https://api.github.com/repos/492235584/distribute-proj", "Date": "2018-12-08T08:12:22Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.isSneaking()) && (!(this.isSitting()))) { player.openGui(JapariCraftMod.instance, JapariCraftMod.ID_JAPARI_INVENTORY, this.getEntityWorld(), this.getEntityId(), 0, 0); if (!(this.world.isRemote)) { this.aiSit.setSitting((!(this.isSitting()))); } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6190/buggy-version/src.main.java.baguchan.japaricraftmod.mob.EntityFriend.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.openGui(JapariCraftMod.instance,JapariCraftMod.ID_JAPARI_INVENTORY,this.getEntityWorld(),this.getEntityId(),int,int)"], "Fixed commit": "35666f75568a60b00acb1f610e6122c07684bb7e", "Url": "https://api.github.com/repos/pentantan/JapariCraftMod", "Date": "2018-11-29T09:49:50Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myDebugLevel) > 0) { java.lang.System.out.println(((char) (current.myValue))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2084/buggy-version/src.HuffProcessor.java", "BodyUseAPI": [], "Fixed commit": "80c5b6fde861c11153dc31dd4c1725b2b5b34201", "Url": "https://api.github.com/repos/DukeCompsci201Fall2018/huffmanproject-dad48", "Date": "2018-12-09T01:15:10Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gauntlet.client.readGameState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((newGameState.getWarriorHealth()) == 0) { gauntlet.warrior.setPosition(gauntlet.warriorSpawnX, gauntlet.warriorSpawnY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7778/buggy-version/src.gauntlet.GameStartUp.java", "BodyUseAPI": [], "Fixed commit": "10709b53c7c03001a3075554fb4574df8ade2205", "Url": "https://api.github.com/repos/Chaycej/Gauntlet", "Date": "2018-12-08T03:13:48Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outputToken instanceof java.lang.String) { return !(((java.lang.String) (outputToken)).isEmpty()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5949/buggy-version/core.sdk-core.src.main.java.software.amazon.awssdk.core.util.PaginatorUtils.java", "BodyUseAPI": [], "Fixed commit": "87dabf794fa20bd5fcaad8a6379f1419fbbc344a", "Url": "https://api.github.com/repos/aws/aws-sdk-java-v2", "Date": "2018-12-06T21:03:23Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apereo.cas.couchdb.services.RegisteredServiceCouchDbRepository.queryView(createQuery(\"size\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (r.isEmpty()) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6990/buggy-version/support.cas-server-support-couchdb-service-registry.src.main.java.org.apereo.cas.couchdb.services.RegisteredServiceCouchDbRepository.java", "BodyUseAPI": [], "Fixed commit": "459f536bf4125e5ce870856e0c43e7766b039dcc", "Url": "https://api.github.com/repos/apereo/cas", "Date": "2018-11-14T19:59:24Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(areContradictory(last, selected))) { for (nl.rug.ds.bpm.petrinet.interfaces.marking.MarkingI next : ptnet.fireTransition(selected, marking)) { progressPES(ptnet, next, selected); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9157/buggy-version/src.main.java.nl.rug.ds.bpm.eventstructure.PESPrefixUnfolding.java", "BodyUseAPI": ["nl.rug.ds.bpm.petrinet.interfaces.net.UnfoldableNet.fireTransition(nl.rug.ds.bpm.petrinet.interfaces.element.TransitionI,nl.rug.ds.bpm.petrinet.interfaces.marking.MarkingI)", "nl.rug.ds.bpm.eventstructure.PESPrefixUnfolding.progressPES(nl.rug.ds.bpm.petrinet.interfaces.net.UnfoldableNet,nl.rug.ds.bpm.petrinet.interfaces.marking.MarkingI,nl.rug.ds.bpm.petrinet.interfaces.element.TransitionI)"], "Fixed commit": "379cf4f45b05fa49ea3cbca2b29023c814940ce6", "Url": "https://api.github.com/repos/rug-ds-lab/BPMPetriNet", "Date": "2018-11-12T23:30:45Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(areContradictory(last, selected))) { addSuccessor(fulllabels.indexOf(last.toString()), fulllabels.indexOf(selected.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9157/buggy-version/src.main.java.nl.rug.ds.bpm.eventstructure.PESPrefixUnfolding.java", "BodyUseAPI": ["java.util.List<java.lang.String>.indexOf(selected.toString())", "nl.rug.ds.bpm.petrinet.interfaces.element.TransitionI.toString()", "java.util.List<java.lang.String>.indexOf(last.toString())", "nl.rug.ds.bpm.petrinet.interfaces.element.TransitionI.toString()", "nl.rug.ds.bpm.eventstructure.PESPrefixUnfolding.addSuccessor(int,int)"], "Fixed commit": "379cf4f45b05fa49ea3cbca2b29023c814940ce6", "Url": "https://api.github.com/repos/rug-ds-lab/BPMPetriNet", "Date": "2018-11-12T23:30:45Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newAmount <= 0) { model.toggleItemInFridgeList(beer.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6853/buggy-version/app.src.main.java.ch.beerpro.presentation.profile.myfridge.MyFridgeActivity.java", "BodyUseAPI": [], "Fixed commit": "4794cceb7346ebce9a7b61be809eb457e342f3ef", "Url": "https://api.github.com/repos/ShingRigard/beerpro", "Date": "2018-11-08T09:08:41Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (u2) { java.lang.System.out.println(\"Server accessed by user: Phil\"); return u2; }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8296/buggy-version/rmihello.src.main.java.ApplicationServer.java", "BodyUseAPI": [], "Fixed commit": "1e12b3521c7a14d5977e85d5c93f2a6aab73400b", "Url": "https://api.github.com/repos/Paludan/AuthLab", "Date": "2018-11-13T20:40:45Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attachment.equals(\"\")) { attachment = attachment + \"?\"; }else { attachment = attachment + \"&\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5965/buggy-version/Backend.src.main.java.i5.obd.backend.BackendService.java", "BodyUseAPI": [], "Fixed commit": "07b6142a9de950b82cbfd1d101f6422992c153a9", "Url": "https://api.github.com/repos/rwth-acis/Open-Badge-Designer", "Date": "2018-11-04T17:36:44Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.util.Calendar) { cell.setCellValue(this.dateFormat.format(((java.util.Calendar) (value)).getTime())); }else if (value instanceof java.lang.Boolean) { cell.setCellValue(((java.lang.Boolean) (value))); }else if (value instanceof java.lang.Float) { cell.setCellValue(((java.lang.Float) (value))); }else if (value instanceof java.lang.Double) { cell.setCellValue(((java.lang.Double) (value))); }else if (value instanceof java.lang.Byte) { cell.setCellValue(((java.lang.Byte) (value))); }else if (value instanceof java.lang.Short) { cell.setCellValue(((java.lang.Short) (value))); }else { cell.setCellValue(value.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8590/buggy-version/src.main.java.com.github.flyinghe.tools.XLSXWriter.java", "BodyUseAPI": ["com.github.flyinghe.tools.Cell.setCellValue(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "105d1014593947ed58d2851e989ce7b1bfb01288", "Url": "https://api.github.com/repos/FlyingHe/UtilsMaven", "Date": "2018-12-18T05:57:02Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.util.Calendar) { cell.setCellValue(format.format(((java.util.Calendar) (value)).getTime())); }else if (value instanceof java.lang.Boolean) { cell.setCellValue(((java.lang.Boolean) (value))); }else if (value instanceof java.lang.Float) { cell.setCellValue(((java.lang.Float) (value))); }else if (value instanceof java.lang.Double) { cell.setCellValue(((java.lang.Double) (value))); }else if (value instanceof java.lang.Byte) { cell.setCellValue(((java.lang.Byte) (value))); }else if (value instanceof java.lang.Short) { cell.setCellValue(((java.lang.Short) (value))); }else { cell.setCellValue(value.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8590/buggy-version/src.main.java.com.github.flyinghe.tools.WriteExcelUtils.java", "BodyUseAPI": ["java.lang.Object.toString()", "com.github.flyinghe.tools.Cell.setCellValue(java.lang.String)"], "Fixed commit": "105d1014593947ed58d2851e989ce7b1bfb01288", "Url": "https://api.github.com/repos/FlyingHe/UtilsMaven", "Date": "2018-12-18T05:57:02Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((threads.gameName()) != null) { if (threads.gameName().equals(game.getGName())) { threads.SendMessage(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5729/buggy-version/src.aallred_CSCI201_4Assignment.GameRoom.java", "BodyUseAPI": ["threads.gameName().equals(game.getGName())", "aallred_CSCI201_4Assignment.ServerThread.gameName()", "aallred_CSCI201_4Assignment.ServerThread.SendMessage()"], "Fixed commit": "1578905e34af748a300aaa6b8f2178d481aded79", "Url": "https://api.github.com/repos/addiallred/testing", "Date": "2018-12-01T08:08:35Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getGame(ua)) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5729/buggy-version/src.aallred_CSCI201_4Assignment.GameRoom.java", "BodyUseAPI": [], "Fixed commit": "1578905e34af748a300aaa6b8f2178d481aded79", "Url": "https://api.github.com/repos/addiallred/testing", "Date": "2018-12-01T08:08:35Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(jObj.isNull(\"graph\"))) { return edu.cmu.tetrad.util.JsonUtils.parseJSONObjectToTetradGraph(jObj.getJSONObject(\"graph\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3474/buggy-version/tetrad-lib.src.main.java.edu.cmu.tetrad.util.JsonUtils.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)", "edu.cmu.tetrad.util.JsonUtils.parseJSONObjectToTetradGraph(jObj.getJSONObject(\"graph\"))"], "Fixed commit": "796b0fc145a74b7c775ce27c0ec41dab55751674", "Url": "https://api.github.com/repos/cmu-phil/tetrad", "Date": "2018-10-31T19:25:06Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((((loc.x) + deltax) < 0) || (((loc.x) + deltax) > 99)) || (((loc.y) + deltay) < 0)) || (((loc.y) + deltay) > 99)) return -1.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3791/buggy-version/spy.g6.Player.java", "BodyUseAPI": [], "Fixed commit": "a9f4f0bef798e9f9112762d920f8da235497c1df", "Url": "https://api.github.com/repos/zhjch05/coms4444-spy", "Date": "2018-11-27T22:18:56Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (driverIdStr != null) { driver = model.DriverManager.getDriver(java.lang.Long.parseLong(driverIdStr), jdbc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2577/buggy-version/src.java.model.BookingManager.java", "BodyUseAPI": ["model.DriverManager.getDriver(long,model.Jdbc)", "java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "5536242b8a3066db76f0e7cf8243166615f83985", "Url": "https://api.github.com/repos/SamPG96/AlphaCabs", "Date": "2018-11-26T14:28:27Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cn.equals(\"java.lang.System\")) { cn = \"java.lang.SYSTEM\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6876/buggy-version/src.com.greentube.javaconverter.JavaConverter.java", "BodyUseAPI": [], "Fixed commit": "e771cb9cbe9731cbb39bac9f982ab2f98b3f437b", "Url": "https://api.github.com/repos/Greentube/Java-converter", "Date": "2018-11-19T10:22:42Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.isDirectory())) { java.lang.String fileNameNoSuffix = file.getName().substring(0, file.getName().lastIndexOf(\".\")); java.lang.String prefix = classFilePath.substring(0, classFilePath.lastIndexOf(fileNameNoSuffix)); java.io.File[] folderFiles = file.getParentFile().listFiles(); for (java.io.File ele : folderFiles) { if (ele.getName().contains((fileNameNoSuffix + \"$\"))) { fileList.add((prefix + (ele.getName()))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8123/buggy-version/src.main.java.com.nekolr.App.java", "BodyUseAPI": ["java.io.File.getName()", "java.io.File.getName()", "java.io.File.getParentFile()", "java.lang.String.substring(int,int)", "java.io.File.listFiles()", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "9c8e451ff65f5dd165b8ce8510b331df6a7aa4d9", "Url": "https://api.github.com/repos/nekolr/sirius-inc", "Date": "2018-11-23T09:54:39Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (result == null) { ptr.set(ByteUtil.EMPTY_BYTE_ARRAY); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3715/buggy-version/phoenix-core.src.main.java.org.apache.phoenix.expression.aggregator.PercentileDiscClientAggregator.java", "BodyUseAPI": [], "Fixed commit": "dee4859482843f982f7deca42ac6235e4d678955", "Url": "https://api.github.com/repos/CallFire/phoenix", "Date": "2018-04-12T12:46:43Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (captionViewToShow != null) { captionViewToShow.setTranslationY(0); captionViewToShow.setAlpha(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7044/buggy-version/lib.java.com.google.android.material.textfield.IndicatorViewController.java", "BodyUseAPI": ["android.widget.TextView.setAlpha(int)", "android.widget.TextView.setTranslationY(int)"], "Fixed commit": "72870a7f89f48a5d3faac40540ed8e3b98b0d973", "Url": "https://api.github.com/repos/shuhart/material-components-android", "Date": "2018-12-26T15:50:21Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getTags().isEmpty()) { return builder.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6482/buggy-version/src.main.java.seedu.address.model.person.Person.java", "BodyUseAPI": [], "Fixed commit": "b1117485620b0eb294bd260d823efa17cd8733a8", "Url": "https://api.github.com/repos/jeffypie369/main", "Date": "2018-11-10T10:44:18Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value < 1.0E-99) { result = \"0\"; }else { result = (t.substring(0, (count - 3))) + (t.substring(((t.length()) - 3))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5445/buggy-version/src.main.java.com.emc.mongoose.logging.LogMessageBase.java", "BodyUseAPI": [], "Fixed commit": "a34b3aec614ab3a17ab499131e2081ed859cfd40", "Url": "https://api.github.com/repos/emc-mongoose/mongoose", "Date": "2018-11-19T07:05:38Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.robockets.robot.mapping.Mapper.lineToVector(org.robockets.commons.geometry.Line)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((v1.getMagnitude()) >= (WALL_BUG_LENGTH)) && ((java.lang.Math.abs(v1.getAngle())) >= (WALL_BUG_ANGLE))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3246/buggy-version/src.main.java.org.robockets.robot.mapping.Mapper.java", "BodyUseAPI": [], "Fixed commit": "3085eaee99ae8bbd7c00c3c5fab889d4f4af87c1", "Url": "https://api.github.com/repos/Team4761/SpacialMap", "Date": "2018-12-05T21:53:20Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["marioara.rus.placesapp.data.entity.PlaceDetailsStatus.getPlaceDetails()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((placeDetails.getPhotos()) != null) && (!(placeDetails.getPhotos().isEmpty()))) { com.bumptech.glide.Glide.with(this).load(placeDetails.getPhotos().get(0)).into(ivPlace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/226/buggy-version/app.src.main.java.marioara.rus.placesapp.ui.place.PlaceDetailsActivity.java", "BodyUseAPI": ["marioara.rus.placesapp.data.entity.PlaceDetails.getPhotos()", "placeDetails.getPhotos().get(int)", "com.bumptech.glide.Glide.with(this).load(placeDetails.getPhotos().get(0)).into(android.widget.ImageView)", "com.bumptech.glide.Glide.with(this).load(placeDetails.getPhotos().get(0))"], "Fixed commit": "f8cd30c8f6c51d729491a4e2a536c6c6927ac56a", "Url": "https://api.github.com/repos/marioararus/PlacesApp", "Date": "2018-12-03T00:09:19Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((LocationHolder.locations) == null) { com.example.hyunjoochoi.a2340blueteam36.LocationHolder.readInLocations(getApplicationContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9599/buggy-version/app.src.main.java.com.example.hyunjoochoi.a2340blueteam36.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "944ce9c1180cb7e2980855dc64f8ea9ca01c35a5", "Url": "https://api.github.com/repos/Cinnamon18/2340BlueTeam36", "Date": "2018-11-01T18:15:20Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Tier.INDEXED.size()) > nextTierIndex) { info.tehnut.soulshardsrespawn.api.IShardTier nextTier = Tier.INDEXED.get(nextTierIndex); if (killCount == ((nextTier.getKillRequirement()) - 1)) { event.setAmount(0); }else if ((killCount + (event.getAmount())) > ((nextTier.getKillRequirement()) - 1)) { int amount = java.lang.Math.min(event.getAmount(), (((nextTier.getKillRequirement()) - 1) - killCount)); event.setAmount(java.lang.Math.max(amount, 0)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9207/buggy-version/src.main.java.lanse505.mysticutils.common.compat.soulshardsrespawn.SoulHandler.java", "BodyUseAPI": ["Tier.INDEXED.get(int)"], "Fixed commit": "44400965552c8555c79270a78039af8eabba1edd", "Url": "https://api.github.com/repos/Lanse505/MysticUtils", "Date": "2018-12-10T19:38:15Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newThread) { computer.model.Voice.thread.start(); }else { computer.model.Voice.thread.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3473/buggy-version/src.computer.model.Voice.java", "BodyUseAPI": [], "Fixed commit": "7665419cf6a8c57ccb9b6cbf0dcb0c53f8645cc0", "Url": "https://api.github.com/repos/Java-Yoshie-Inc/VoiceControl", "Date": "2018-11-03T21:58:04Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (action == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2872/buggy-version/app.src.main.java.net.i09158knct.android.development.PackageBrowser.java", "BodyUseAPI": [], "Fixed commit": "062faefee115a68d90da934880c2f2d38914115a", "Url": "https://api.github.com/repos/i09158knct/android-Development", "Date": "2018-12-15T03:48:38Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (action.equals(Intent.ACTION_PACKAGE_REMOVED)) { targetItem.removed = true; mAdapter.notifyDataSetChanged(); android.widget.Toast.makeText(context, (((\"List Updated\\n\" + action) + \"\\n\") + packageName), Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2872/buggy-version/app.src.main.java.net.i09158knct.android.development.PackageBrowser.java", "BodyUseAPI": ["android.widget.Toast.makeText(android.content.Context,java.lang.String,Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(context, (((\"List Updated\\n\" + action) + \"\\n\") + packageName), Toast.LENGTH_SHORT).show()"], "Fixed commit": "062faefee115a68d90da934880c2f2d38914115a", "Url": "https://api.github.com/repos/i09158knct/android-Development", "Date": "2018-12-15T03:48:38Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (action.equals(Intent.ACTION_PACKAGE_ADDED)) { if (targetItem != null) { targetItem.removed = false; }else { net.i09158knct.android.development.PackageBrowser.MyPackageInfo info = new net.i09158knct.android.development.PackageBrowser.MyPackageInfo(); android.content.pm.PackageInfo pkg = null; try { pkg = context.getPackageManager().getPackageInfo(packageName, 0); if (pkg == null) return; } catch (android.content.pm.PackageManager e) { e.printStackTrace(); return; } info.info = pkg; info.label = info.info.applicationInfo.loadLabel(getPackageManager()).toString(); info.enabled = info.info.applicationInfo.enabled; info.isSystemApp = ((info.info.applicationInfo.flags) & (android.content.pm.ApplicationInfo.FLAG_SYSTEM)) != 0; mPackageInfoList.add(info); } mAdapter.notifyDataSetChanged(); android.widget.Toast.makeText(context, (((\"List Updated\\n\" + action) + \"\\n\") + packageName), Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2872/buggy-version/app.src.main.java.net.i09158knct.android.development.PackageBrowser.java", "BodyUseAPI": ["android.widget.Toast.makeText(context, (((\"List Updated\\n\" + action) + \"\\n\") + packageName), Toast.LENGTH_SHORT).show()", "android.widget.Toast.makeText(android.content.Context,java.lang.String,Toast.LENGTH_SHORT)"], "Fixed commit": "062faefee115a68d90da934880c2f2d38914115a", "Url": "https://api.github.com/repos/i09158knct/android-Development", "Date": "2018-12-15T03:48:38Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (action.equals(Intent.ACTION_PACKAGE_CHANGED)) { android.content.pm.PackageInfo pkg = null; try { pkg = context.getPackageManager().getPackageInfo(packageName, 0); if (pkg == null) return; } catch (android.content.pm.PackageManager e) { e.printStackTrace(); return; } targetItem.info = pkg; targetItem.enabled = pkg.applicationInfo.enabled; mAdapter.notifyDataSetChanged(); android.widget.Toast.makeText(context, (((\"List Updated\\n\" + action) + \"\\n\") + packageName), Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2872/buggy-version/app.src.main.java.net.i09158knct.android.development.PackageBrowser.java", "BodyUseAPI": ["android.widget.Toast.makeText(android.content.Context,java.lang.String,Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(context, (((\"List Updated\\n\" + action) + \"\\n\") + packageName), Toast.LENGTH_SHORT).show()"], "Fixed commit": "062faefee115a68d90da934880c2f2d38914115a", "Url": "https://api.github.com/repos/i09158knct/android-Development", "Date": "2018-12-15T03:48:38Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (info.removed) { view.setBackgroundColor(-1996532395); }else { view.setBackgroundColor(Color.TRANSPARENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2872/buggy-version/app.src.main.java.net.i09158knct.android.development.PackageBrowser.java", "BodyUseAPI": [], "Fixed commit": "062faefee115a68d90da934880c2f2d38914115a", "Url": "https://api.github.com/repos/i09158knct/android-Development", "Date": "2018-12-15T03:48:38Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getDataString()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (packageName == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2872/buggy-version/app.src.main.java.net.i09158knct.android.development.PackageBrowser.java", "BodyUseAPI": [], "Fixed commit": "062faefee115a68d90da934880c2f2d38914115a", "Url": "https://api.github.com/repos/i09158knct/android-Development", "Date": "2018-12-15T03:48:38Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetItem == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2872/buggy-version/app.src.main.java.net.i09158knct.android.development.PackageBrowser.java", "BodyUseAPI": [], "Fixed commit": "062faefee115a68d90da934880c2f2d38914115a", "Url": "https://api.github.com/repos/i09158knct/android-Development", "Date": "2018-12-15T03:48:38Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input.equals(content)) { isValid = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5390/buggy-version/src.chat.model.Chatbot.java", "BodyUseAPI": [], "Fixed commit": "65b7872187c21d72e3a6b20eca4034718cefaa26", "Url": "https://api.github.com/repos/hkno9012/Chatbot", "Date": "2018-11-06T20:50:18Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ship.getKind().equals(\"SUBMARINE\")) { if (cs361.battleships.models.GameHelper.randSub()) { opponentPlacedSuccessfully = opponentsBoard.placeShip(ship, cs361.battleships.models.GameHelper.randRow(), cs361.battleships.models.GameHelper.randCol(), cs361.battleships.models.GameHelper.randVertical()); }else { opponentPlacedSuccessfully = opponentsSubBoard.placeShip(ship, cs361.battleships.models.GameHelper.randRow(), cs361.battleships.models.GameHelper.randCol(), cs361.battleships.models.GameHelper.randVertical()); } }else { opponentPlacedSuccessfully = opponentsBoard.placeShip(ship, cs361.battleships.models.GameHelper.randRow(), cs361.battleships.models.GameHelper.randCol(), cs361.battleships.models.GameHelper.randVertical()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/99/buggy-version/src.main.java.cs361.battleships.models.Game.java", "BodyUseAPI": ["cs361.battleships.models.Board.placeShip(cs361.battleships.models.Ship,cs361.battleships.models.GameHelper.randRow(),cs361.battleships.models.GameHelper.randCol(),cs361.battleships.models.GameHelper.randVertical())", "cs361.battleships.models.SubBoard.placeShip(cs361.battleships.models.Ship,cs361.battleships.models.GameHelper.randRow(),cs361.battleships.models.GameHelper.randCol(),cs361.battleships.models.GameHelper.randVertical())", "cs361.battleships.models.Board.placeShip(cs361.battleships.models.Ship,cs361.battleships.models.GameHelper.randRow(),cs361.battleships.models.GameHelper.randCol(),cs361.battleships.models.GameHelper.randVertical())"], "Fixed commit": "52464fcedffeec33df6c3d6cef2fcc4e0adaf078", "Url": "https://api.github.com/repos/kkstuvstad/project-team-24", "Date": "2018-11-27T02:42:47Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/535/buggy-version/src.main.java.com.wujie.learning.collection.BinarySearchTree.java", "BodyUseAPI": [], "Fixed commit": "039811e6bbcc27ae7400390c6770af451e44ac86", "Url": "https://api.github.com/repos/SucreWu/learning-project", "Date": "2018-11-29T12:14:38Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (maxCount > (nodeList.size())) { return nodeList; }else { return nodeList.subList(0, maxCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1480/buggy-version/network-module.base.network-netty.src.main.java.io.nuls.network.netty.task.NodeMaintenanceTask.java", "BodyUseAPI": ["java.util.List<io.nuls.network.model.Node>.subList(int,int)"], "Fixed commit": "52ea84dfb28cb8ce830d31aa3163cbc187f6b611", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-12-12T13:26:14Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((dx) != 0) || ((dy) != 0)) { for (int i = (snake.size()) - 1; i > 0; i--) { snake.get(i).setPosition(snake.get((i - 1)).getX(), snake.get((i - 1)).getY()); } head.move(dx, dy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3461/buggy-version/src.game.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "08eb01781b1cc405330c7875ce74b7c55b329acb", "Url": "https://api.github.com/repos/alessanderleite/snakeGame", "Date": "2018-11-11T01:59:27Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((map == null) || (map.isEmpty())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2454/buggy-version/src.java.dto.factory.StudentGroupMatchFactory.java", "BodyUseAPI": [], "Fixed commit": "1e1fd9cd296352fc576e8d5f670f2d69c606517a", "Url": "https://api.github.com/repos/jiulingzhang90/FinalProject_Assignment3", "Date": "2018-12-05T01:15:45Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((map == null) || (map.isEmpty())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2454/buggy-version/src.java.dto.factory.GroupFactory.java", "BodyUseAPI": [], "Fixed commit": "1e1fd9cd296352fc576e8d5f670f2d69c606517a", "Url": "https://api.github.com/repos/jiulingzhang90/FinalProject_Assignment3", "Date": "2018-12-05T01:15:45Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selectedEntitySet.contains(selectedGraphEntityListItems.get(i).getTitle())) { selectedGraphEntityListItems.get(i).setSelected(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4791/buggy-version/app.src.main.java.com.blockprobe.main.fragments.BP_GraphViewTab.java", "BodyUseAPI": ["java.util.List<com.blockprobe.main.classes.SelectedGraphEntityListItem>.get(int)", "selectedGraphEntityListItems.get(i).setSelected(boolean)"], "Fixed commit": "0e3403e3d8ac48846435989a73c416b69e9d9edc", "Url": "https://api.github.com/repos/ShashankAnantharam/GGWP", "Date": "2018-11-16T11:10:59Z"},
{"Line": "=>892", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.StringUtils.split(java.lang.String,char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((parts.length) == 1) && (val.equals(term))) || ((((parts.length) == 2) && ((val.compareTo(parts[0])) >= 0)) && ((val.compareTo(parts[1])) <= 0))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2774/buggy-version/src.main.java.com.imsweb.validation.functions.MetafileContextFunctions.java", "BodyUseAPI": [], "Fixed commit": "6f2dbb7b5eb7b7a749a751f5dd2ec3b414dca576", "Url": "https://api.github.com/repos/imsweb/validation", "Date": "2018-11-26T00:50:42Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.mMapHeader) == null) { this.mMapHeader = new java.util.HashMap<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9231/buggy-version/common_base.src.main.java.com.wb.baselib.http.HttpConfig.java", "BodyUseAPI": [], "Fixed commit": "c587765cfefa980f4848a5eaa93f481ed304c41d", "Url": "https://api.github.com/repos/w513209188/BaseLib", "Date": "2018-11-01T02:52:41Z"},
{"Line": "=>548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(defaultExchange)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7637/buggy-version/Product.Production.Common.CONNECTCoreLib.src.main.java.gov.hhs.fha.nhinc.exchangemgr.ExchangeManager.java", "BodyUseAPI": [], "Fixed commit": "6f1c0da19fd88f019586934cedac671e67dd2061", "Url": "https://api.github.com/repos/CONNECT-Solution/CONNECT", "Date": "2018-12-19T19:13:41Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((counts[i]) > 0) { pq.add(new HuffNode(i, counts[i], null, null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3842/buggy-version/src.HuffProcessor.java", "BodyUseAPI": ["java.util.PriorityQueue<HuffNode>.add(HuffNode)"], "Fixed commit": "2f9053b7238b20ed57d4299673b9c7fc318b907c", "Url": "https://api.github.com/repos/DukeCompsci201Fall2018/huffmanproject-ben-chen", "Date": "2018-12-08T22:59:31Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(songIsPaused)) { playPauseMusic(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5418/buggy-version/app.src.main.java.com.example.hara.learninguimusicapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a58301d1de33b612bf27ab7977d40b59d8885abf", "Url": "https://api.github.com/repos/laura96x/MPV-App", "Date": "2018-11-28T23:55:48Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataSnapshot.getChildrenCount()) <= 0) { exercises.clear(); muscleInfoes.clear(); muscleInfoEvent.notifyAllListeners(this, null); }else { for (com.google.firebase.database.DataSnapshot snapshot : dataSnapshot.getChildren()) { updateMuscleInfo(snapshot); updateExercise(snapshot); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8820/buggy-version/app.src.main.java.com.example.mikkel.workoutplanner.singletons.DataManager.java", "BodyUseAPI": ["com.google.firebase.database.DataSnapshot.getChildren()"], "Fixed commit": "c5350c2133a7b7145ffc22b7286b54d5fa374637", "Url": "https://api.github.com/repos/Dezaos/AndroidWorkoutPlanner", "Date": "2018-12-12T14:40:33Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((facility.getPhoneNumbers()) != null) this.phoneNumbers = new java.util.HashSet<>(facility.getPhoneNumbers());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8941/buggy-version/src.main.java.com.github.ssullivan.model.Facility.java", "BodyUseAPI": [], "Fixed commit": "9da0efe9034a29fe18d8050539fcd821d65e382a", "Url": "https://api.github.com/repos/ssullivan/treatmentcenter-api", "Date": "2018-11-23T03:17:43Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((facility.getServiceCodes()) != null) this.serviceCodes = new java.util.HashSet<>(facility.getServiceCodes());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8941/buggy-version/src.main.java.com.github.ssullivan.model.Facility.java", "BodyUseAPI": [], "Fixed commit": "9da0efe9034a29fe18d8050539fcd821d65e382a", "Url": "https://api.github.com/repos/ssullivan/treatmentcenter-api", "Date": "2018-11-23T03:17:43Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((facility.getCategoryCodes()) != null) this.categoryCodes = new java.util.HashSet<>(facility.getCategoryCodes());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8941/buggy-version/src.main.java.com.github.ssullivan.model.Facility.java", "BodyUseAPI": [], "Fixed commit": "9da0efe9034a29fe18d8050539fcd821d65e382a", "Url": "https://api.github.com/repos/ssullivan/treatmentcenter-api", "Date": "2018-11-23T03:17:43Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type.getTag()) == (org.ballerinalang.model.types.TypeTags.UNION_TAG)) { for (org.ballerinalang.model.types.BType memberType : ((org.ballerinalang.model.types.BUnionType) (type)).getMemberTypes()) { if (org.ballerinalang.bre.bvm.BVM.checkIsLikeType(this, memberType)) { this.stamp(memberType); type = memberType; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2280/buggy-version/bvm.ballerina-core.src.main.java.org.ballerinalang.model.values.BValueType.java", "BodyUseAPI": [], "Fixed commit": "5a2638170ee02c656f5cdb82a3a060d9d48fb520", "Url": "https://api.github.com/repos/Anoukh/ballerina-lang", "Date": "2018-12-04T06:46:52Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value < (locations.length)) { return locations[((int) (value))]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1245/buggy-version/app.src.main.java.edu.gatech.cs2340.nonprofitdonationtracker.controllers.GraphActivity.java", "BodyUseAPI": [], "Fixed commit": "3ea99ee6eb141c00d5e2adfc7040f3a581ffcdcc", "Url": "https://api.github.com/repos/cking90/CS2340-donation-tracker", "Date": "2018-11-24T14:55:38Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(factory.getVirtualHost().equals(\"/\"))) buf.append((\"/\" + (factory.getVirtualHost())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3557/buggy-version/src.main.java.intercor.if2.client.IF2Client.java", "BodyUseAPI": ["java.lang.StringBuffer.append((\"/\" + (factory.getVirtualHost())))", "com.rabbitmq.client.ConnectionFactory.getVirtualHost()"], "Fixed commit": "82732fac59d3624d005d49d835b2c299bd92442a", "Url": "https://api.github.com/repos/passchieri/Hybrid-IF2", "Date": "2018-11-15T18:25:51Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((props.get(intercor.if2.client.IF2Client.VIRTUALHOST).toString().length()) > 0) factory.setVirtualHost(props.get(intercor.if2.client.IF2Client.VIRTUALHOST).toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3557/buggy-version/src.main.java.intercor.if2.client.IF2Client.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Object.toString()", "com.rabbitmq.client.ConnectionFactory.setVirtualHost(java.lang.String)"], "Fixed commit": "82732fac59d3624d005d49d835b2c299bd92442a", "Url": "https://api.github.com/repos/passchieri/Hybrid-IF2", "Date": "2018-11-15T18:25:51Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (to == 0) edu.ucsb.cs.cs184.seakyluo.databaseproject.Transaction.TopUp(from, edu.ucsb.cs.cs184.seakyluo.databaseproject.Account.getPocketLinkedAccount(from), amount); else edu.ucsb.cs.cs184.seakyluo.databaseproject.Transaction.Collect(from, to, amount);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4522/buggy-version/app.src.main.java.edu.ucsb.cs.cs184.seakyluo.databaseproject.Transaction.java", "BodyUseAPI": ["edu.ucsb.cs.cs184.seakyluo.databaseproject.Transaction.Collect(int,int,double)"], "Fixed commit": "dcd2ff76d8d85f29b216b69478ff206c615f9b90", "Url": "https://api.github.com/repos/SeakyLuo/cs174a", "Date": "2018-11-30T18:48:15Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.length()) > (e.length())) { for (int i = 0; i < (e.length()); i++) { if ((this.charAt(i)) != (e.charAt(i))) { if ((((this.charAt(i)) * 1) - ((e.charAt(i)) * 1)) > 0) { return 100; }else { return -7; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5201/buggy-version/MyString.java", "BodyUseAPI": ["java.lang.CharSequence.length()", "java.lang.CharSequence.charAt(int)", "java.lang.CharSequence.charAt(int)"], "Fixed commit": "284c598e48e4eb4bb95ed3af4d098ab1ea9719d7", "Url": "https://api.github.com/repos/natethegreat34/MKS21X-MyString", "Date": "2018-11-26T02:51:58Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.length()) < (e.length())) { for (int i = 0; i < (this.length()); i++) { if ((this.charAt(i)) != (e.charAt(i))) { if ((((this.charAt(i)) * 1) - ((e.charAt(i)) * 1)) > 0) { return 100; }else { return -7; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5201/buggy-version/MyString.java", "BodyUseAPI": ["java.lang.CharSequence.charAt(int)", "java.lang.CharSequence.charAt(int)"], "Fixed commit": "284c598e48e4eb4bb95ed3af4d098ab1ea9719d7", "Url": "https://api.github.com/repos/natethegreat34/MKS21X-MyString", "Date": "2018-11-26T02:51:58Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.length()) == 0) { return 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5201/buggy-version/MyString.java", "BodyUseAPI": [], "Fixed commit": "284c598e48e4eb4bb95ed3af4d098ab1ea9719d7", "Url": "https://api.github.com/repos/natethegreat34/MKS21X-MyString", "Date": "2018-11-26T02:51:58Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { searchUrl = savedInstanceState.getString(org.edx.mobile.view.WebViewDiscoverCoursesFragment.INSTANCE_CURRENT_DISCOVER_URL, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5080/buggy-version/OpenEdXMobile.src.main.java.org.edx.mobile.view.WebViewDiscoverCoursesFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String,<nulltype>)"], "Fixed commit": "3b97a1f2aaa528c957a468d362c292ee31591839", "Url": "https://api.github.com/repos/farhan-arshad-dev/edx-app-android", "Date": "2018-12-19T08:49:25Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((semanticTagHierarchy.size()) == 0) { writeToReportFile(0, (indent + \"No child tags detected.\")); }else if ((semanticTagHierarchy.get(semTag)) == null) { writeToReportFile(0, (((indent + \"Unknown semantic tag encountered: '\") + semTag) + \"'\")); }else { for (java.util.Map.Entry<java.lang.String, org.ihtsdo.termserver.scripting.reports.Concept> childTag : semanticTagHierarchy.get(semTag).entrySet()) { writeToReportFile(0, (((indent + (childTag.getKey())) + (COMMA)) + (childTag.getValue()))); outputHierarchialStructure(childTag.getKey(), level); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/232/buggy-version/reporting-engine-worker.src.main.java.org.ihtsdo.termserver.scripting.reports.SemanticTagHierarchy.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.ihtsdo.termserver.scripting.reports.Concept>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.ihtsdo.termserver.scripting.reports.Concept>>.get(java.lang.String)", "semanticTagHierarchy.get(semTag).entrySet()"], "Fixed commit": "8d1ed0202b6a920f6e134a24689e17c0cecf79df", "Url": "https://api.github.com/repos/IHTSDO/reporting-engine", "Date": "2018-12-19T16:07:45Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { x += com.example.projectio.Translator.change_on_word_eng(java.lang.String.valueOf(num)); }else { x += \" \" + (com.example.projectio.Translator.change_on_word_eng(java.lang.String.valueOf(num))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1251/buggy-version/src.main.java.com.example.projectio.Translator.java", "BodyUseAPI": [], "Fixed commit": "286c1f6e3b3691e75bf0062de7abb14473135ea4", "Url": "https://api.github.com/repos/DominikKossinski/Projekt-Inzynieria-Oprogramowania", "Date": "2018-11-14T12:40:47Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.JSONObject.getString(java.lang.String)", "com.alibaba.fastjson.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.apache.commons.lang3.StringUtils.isBlank(accessKey)) || (org.apache.commons.lang3.StringUtils.isBlank(secretKey))) { java.lang.System.out.printf(\"accessKey or secretKey is blank, admin have no permission to the broker.%n\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4899/buggy-version/tools.src.main.java.org.apache.rocketmq.tools.command.MQAdminStartup.java", "BodyUseAPI": [], "Fixed commit": "a67f70792bce8c3c99f09998567ff21dfa729346", "Url": "https://api.github.com/repos/wangshaojie4039/rocketmq", "Date": "2018-12-26T09:49:26Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((remoteAddr != null) && (remoteAddr.contains(\":\"))) { accessResource.setWhiteRemoteAddress(remoteAddr.split(\":\")[0]); }else { accessResource.setWhiteRemoteAddress(remoteAddr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4899/buggy-version/acl.src.main.java.org.apache.rocketmq.acl.plain.PlainAccessValidator.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "org.apache.rocketmq.acl.plain.PlainAccessResource.setWhiteRemoteAddress(java.lang.String)", "org.apache.rocketmq.acl.plain.PlainAccessResource.setWhiteRemoteAddress(java.lang.String)"], "Fixed commit": "a67f70792bce8c3c99f09998567ff21dfa729346", "Url": "https://api.github.com/repos/wangshaojie4039/rocketmq", "Date": "2018-12-26T09:49:26Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((orig_img.getBufferedImage()) == null) || ((dest_img.getBufferedImage()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8426/buggy-version/src.WarpView.java", "BodyUseAPI": [], "Fixed commit": "baa6ee5ec459171d87c5f65c0c63817d2178e766", "Url": "https://api.github.com/repos/Tbbu225/CS335-Project3", "Date": "2018-12-08T01:30:49Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.srvSock) != null) this.srvSock.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6054/buggy-version/SCP182006_TD1.src.scp182006_td1.KeyServer.java", "BodyUseAPI": [], "Fixed commit": "242f83299a405c1d28319fa26a51fa030f5c9cda", "Url": "https://api.github.com/repos/rrieiro/SCP182006_TD1", "Date": "2018-11-13T03:27:04Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.srvSock) != null) this.srvSock.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6054/buggy-version/SCP182006_TD1.src.scp182006_td1.KeyServer.java", "BodyUseAPI": [], "Fixed commit": "242f83299a405c1d28319fa26a51fa030f5c9cda", "Url": "https://api.github.com/repos/rrieiro/SCP182006_TD1", "Date": "2018-11-13T03:27:04Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((group()) != null) group().setTopNote(n);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2233/buggy-version/src.net.muse.pedb.gui.PEDBTopNoteLabel.java", "BodyUseAPI": [], "Fixed commit": "40c64c553028d0c740c3872267f385c3ac12d685", "Url": "https://api.github.com/repos/muse324/mixtract", "Date": "2018-11-25T01:37:04Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConnected()) { getRemote().sendString(gson.toJson(result)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3463/buggy-version/cz-hubert-java.src.main.java.nl.cz.hubert.TranscribeSocket.java", "BodyUseAPI": [], "Fixed commit": "c0f0024e0ff279aac401fbf7c84ebbdc8c75677d", "Url": "https://api.github.com/repos/goos76/hubert", "Date": "2018-11-29T21:37:18Z"},
{"Line": "=>1373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toTele.getWorld()) == null) return \"That world doesn't exist.\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3011/buggy-version/modules.RoyalCommands.src.main.java.org.royaldev.royalcommands.RUtils.java", "BodyUseAPI": [], "Fixed commit": "f8eca8e63728ea40d5c8a6983c7edaf75e211da0", "Url": "https://api.github.com/repos/WMCAlliance/RoyalCommands", "Date": "2018-11-11T01:29:08Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(userId.equals(userBean.getUserId()))) { return cn.fyd.common.Response.failed(cn.fyd.monitorlogin.controller.WRONG_PARAMS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2890/buggy-version/src.main.java.cn.fyd.monitorlogin.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "90679b8831bdc475eb3448cd16ac1e3db668f709", "Url": "https://api.github.com/repos/fanyidong/monitor-login", "Date": "2018-12-24T07:46:15Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.adb7473.soscverifier.MainActivity.2.getSystemService(Context.CONNECTIVITY_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).getState()) == (NetworkInfo.State.CONNECTED)) || ((connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI).getState()) == (NetworkInfo.State.CONNECTED))) { connected = true; }else connected = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6698/buggy-version/app.src.main.java.com.example.adb7473.soscverifier.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4cadd585b00da9f966718f3b2fee1dc42f7abb0a", "Url": "https://api.github.com/repos/akashdeepb/SOSCVerifier", "Date": "2018-11-24T19:49:59Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connected) { if (!(code.getText().toString().isEmpty())) { com.example.adb7473.soscverifier.Request request = new com.example.adb7473.soscverifier.Request(this, code.getText().toString(), lastVerified); }else android.widget.Toast.makeText(this, \"Enter Code\", Toast.LENGTH_LONG).show(); }else android.widget.Toast.makeText(this, \"Check Internet Connection\", Toast.LENGTH_LONG).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6698/buggy-version/app.src.main.java.com.example.adb7473.soscverifier.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4cadd585b00da9f966718f3b2fee1dc42f7abb0a", "Url": "https://api.github.com/repos/akashdeepb/SOSCVerifier", "Date": "2018-11-24T19:49:59Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.IBlockAccess.getTileEntity(net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tileEntity instanceof com.mjr.planetprogression.tileEntities.TileEntityTelescopeFake) { net.minecraft.util.math.BlockPos mainBlockPosition = ((com.mjr.planetprogression.tileEntities.TileEntityTelescopeFake) (tileEntity)).mainBlockPosition; if (mainBlockPosition != null) { return world.getBlockState(pos).getBlock().getBedDirection(world.getBlockState(mainBlockPosition), world, mainBlockPosition); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5139/buggy-version/src.main.java.com.mjr.planetprogression.blocks.BlockTelescopeFake.java", "BodyUseAPI": [], "Fixed commit": "618f1bd59cd482c116e6bfde96a91458e0274f32", "Url": "https://api.github.com/repos/MJRLegends/Planet-Progression", "Date": "2018-11-16T08:52:16Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (callerIntent.hasExtra(\"class\")) { finish(); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/217/buggy-version/app.src.main.java.edu.psu.sweng888.nightout.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "4915c30a644d87ce841066a9dfa52112239562a7", "Url": "https://api.github.com/repos/TVALENTINI99/NightOut", "Date": "2018-12-04T22:42:08Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userInfo.getProviderId().equals(\"facebook.com\")) { mBtnLoginFacebook.setText(R.string.btn_logout_facebook); mBtnLoginGoogle.setVisibility(View.GONE); if (callerIntent.hasExtra(\"class\")) { finish(); }else { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/217/buggy-version/app.src.main.java.edu.psu.sweng888.nightout.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "4915c30a644d87ce841066a9dfa52112239562a7", "Url": "https://api.github.com/repos/TVALENTINI99/NightOut", "Date": "2018-12-04T22:42:08Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.buggyarts.showcase.customClasses.AppUtils.getList(com.buggyarts.showcase.activity.ImageListActivity)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bufferList != null) { showcaseImages = bufferList; }else { android.widget.Toast.makeText(this, \"Image List Empty\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5557/buggy-version/app.src.main.java.com.buggyarts.showcase.activity.ImageListActivity.java", "BodyUseAPI": [], "Fixed commit": "8185d78738d32c1ca7b27c86e5aab89c4e559d85", "Url": "https://api.github.com/repos/krmayank911/showcase", "Date": "2018-12-09T14:55:39Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (extras != null) { android.graphics.Bitmap thePic = extras.getParcelable(\"data\"); saveImage(thePic); }else { android.widget.Toast.makeText(this, \"Something went wrong\", Toast.LENGTH_SHORT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5557/buggy-version/app.src.main.java.com.buggyarts.showcase.activity.PreviewActivity.java", "BodyUseAPI": ["android.os.Bundle.getParcelable(java.lang.String)"], "Fixed commit": "8185d78738d32c1ca7b27c86e5aab89c4e559d85", "Url": "https://api.github.com/repos/krmayank911/showcase", "Date": "2018-12-09T14:55:39Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((images.size()) > 0) { return images.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5557/buggy-version/app.src.main.java.com.buggyarts.showcase.adapters.ImagesAdapter.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "8185d78738d32c1ca7b27c86e5aab89c4e559d85", "Url": "https://api.github.com/repos/krmayank911/showcase", "Date": "2018-12-09T14:55:39Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, sc.ustc.items.JDBCItems.Property>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (property != null) { java.sql.ResultSet resultSet = sc.ustc.dao.Conversation.query(((sc.ustc.items.JDBCItems.BaseBean) (obj))); if (resultSet != null) { java.lang.String result = resultSet.getString(property.getColumn()); if (result != null) { java.lang.String setMethodName = \"set\" + (method.getName().substring(3)); java.lang.System.out.println((\"setMethodName:\" + setMethodName)); java.lang.reflect.Method[] methods = obj.getClass().getDeclaredMethods(); for (java.lang.reflect.Method proxyMethod : methods) { if (proxyMethod.getName().equals(setMethodName)) { proxyMethod.invoke(obj, result); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3077/buggy-version/SimpleController.src.sc.ustc.utils.ProxyUserBeanHandler.java", "BodyUseAPI": ["java.sql.ResultSet.getString(property.getColumn())", "sc.ustc.items.JDBCItems.Property.getColumn()"], "Fixed commit": "777f13fec8e1800df112a48c7fbfeb7e7ab68d96", "Url": "https://api.github.com/repos/TwinterT/J2EE-homework", "Date": "2018-12-20T05:44:07Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sx.blah.discord.handle.obj.IChannel.getTopic()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (topic == null) topic = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3066/buggy-version/src.main.java.me.limeglass.birthdaybot.actions.SetupAction.java", "BodyUseAPI": [], "Fixed commit": "71acbaac7fd55397404e2fe56ad5960fba405b5a", "Url": "https://api.github.com/repos/TheLimeGlass/BirthdayBot", "Date": "2018-11-27T08:55:04Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cur_call_fix_code != null) if (saved_on_db.contains(cur_call_fix_code)) net.kazav.gabi.fm103archive.AppGlobal.clicks.add(true); else net.kazav.gabi.fm103archive.AppGlobal.clicks.add(false); else net.kazav.gabi.fm103archive.AppGlobal.clicks.add(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9753/buggy-version/app.src.main.java.net.kazav.gabi.fm103archive.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.contains(java.lang.String)"], "Fixed commit": "e931e80ce1a349996c3a1c9b21def58e9b6ea97e", "Url": "https://api.github.com/repos/gabik/103.fm.archive", "Date": "2018-11-06T13:52:36Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (res[1].contains(\"|\")) { cur_call_fix_code = res[1].split(\"=\")[1].split(\"\\\\|\")[0]; }else { java.lang.String[] elems = res[1].split(\"/\"); if (elems[1].equals(\"item\")) cur_call_fix_code = elems[2].split(\"\\\\.\")[0]; else android.util.Log.i(TAG, (\"Cannot load fix name for clicks: \" + (res[1]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9753/buggy-version/app.src.main.java.net.kazav.gabi.fm103archive.MainActivity.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "android.util.Log.i(java.lang.String,java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "e931e80ce1a349996c3a1c9b21def58e9b6ea97e", "Url": "https://api.github.com/repos/gabik/103.fm.archive", "Date": "2018-11-06T13:52:36Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (filtered_calls.get(i).url.split(\"/\")[1].equals(\"item\")) { url = filtered_calls.get(i).url.split(\"/\")[2].split(\"\\\\.\")[0]; }else url = filtered_calls.get(i).url.split(\"=\")[1].split(\"\\\\|\")[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9753/buggy-version/app.src.main.java.net.kazav.gabi.fm103archive.ListActivity.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.util.ArrayList<net.kazav.gabi.fm103archive.ListActivity.CallsHolder>.get(int)", "java.lang.String.split(java.lang.String)", "java.util.ArrayList<net.kazav.gabi.fm103archive.ListActivity.CallsHolder>.get(int)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "e931e80ce1a349996c3a1c9b21def58e9b6ea97e", "Url": "https://api.github.com/repos/gabik/103.fm.archive", "Date": "2018-11-06T13:52:36Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (url != null) net.kazav.gabi.fm103archive.AppGlobal.myRef.child(url).setValue(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9753/buggy-version/app.src.main.java.net.kazav.gabi.fm103archive.ListActivity.java", "BodyUseAPI": ["net.kazav.gabi.fm103archive.ListActivity.child(java.lang.String)", "net.kazav.gabi.fm103archive.AppGlobal.myRef.child(url).setValue(boolean)"], "Fixed commit": "e931e80ce1a349996c3a1c9b21def58e9b6ea97e", "Url": "https://api.github.com/repos/gabik/103.fm.archive", "Date": "2018-11-06T13:52:36Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((fileDialog.getDirectory()) == null) && ((fileDialog.getFile()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2918/buggy-version/src.com.krokky.DES.util.EncriptOpenFile.java", "BodyUseAPI": [], "Fixed commit": "d051bf0875e78a4e6c6c1a4b6329d759d2c48301", "Url": "https://api.github.com/repos/Job-Simth/Work", "Date": "2018-12-28T01:15:10Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((row + (rowIncrement * (word.length()))) < 0) || ((col + (colIncrement * (word.length()))) < 0)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2295/buggy-version/WordSearch.java", "BodyUseAPI": [], "Fixed commit": "5d76cd3dfdf937dc5e714fabfa8637a5c1a421f4", "Url": "https://api.github.com/repos/aortmannli/MKS21X-WordSearch", "Date": "2018-11-16T06:54:21Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nmrAssayMap1 instanceof uk.ac.ebi.subs.metabolights.model.NMRAssayMap) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4256/buggy-version/src.main.java.uk.ac.ebi.subs.metabolights.converters.USIAssayToMLNMRAssayTable.java", "BodyUseAPI": [], "Fixed commit": "6c0f0627e32b0dfecd47ad277975038f22919392", "Url": "https://api.github.com/repos/EMBL-EBI-SUBS/subs-metabolights-agent", "Date": "2018-12-18T22:22:12Z"},
{"Line": "=>1127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jme3.bullet.collision.PhysicsCollisionObject.getUserObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userA instanceof com.jme3.bullet.animation.PhysicsLink) { physicsLink = ((com.jme3.bullet.animation.PhysicsLink) (userA)); com.jme3.bullet.animation.DynamicAnimControl control = physicsLink.getControl(); if (control == (this)) { isThisControlInvolved = true; } otherPco = pcoB; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1439/buggy-version/Minie.src.main.java.com.jme3.bullet.animation.DynamicAnimControl.java", "BodyUseAPI": [], "Fixed commit": "0674d427383599e44944e11fac6450725ee084fd", "Url": "https://api.github.com/repos/stephengold/jme3-utilities", "Date": "2018-10-31T18:18:28Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (s2 != null) { s2 = s2.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7938/buggy-version/app.src.main.java.com.example.android.intouch_android.utils.BaseUtils.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "bce3107f6cc62762d70654113e3b29d90453ff2e", "Url": "https://api.github.com/repos/JohnAmadeo/InTouch-Android", "Date": "2018-12-06T01:02:09Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (s1 != null) { s1 = s1.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7938/buggy-version/app.src.main.java.com.example.android.intouch_android.utils.BaseUtils.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "bce3107f6cc62762d70654113e3b29d90453ff2e", "Url": "https://api.github.com/repos/JohnAmadeo/InTouch-Android", "Date": "2018-12-06T01:02:09Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (descriptionId != (-1)) { b.setContentDescription(activity.getResources().getString(descriptionId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1714/buggy-version/app.src.main.java.com.mkulesh.onpc.BaseFragment.java", "BodyUseAPI": ["activity.getResources().getString(int)", "android.support.v7.widget.AppCompatImageButton.setContentDescription(activity.getResources().getString(descriptionId))"], "Fixed commit": "acb6ff9103fc373ba4c0b786a3e3f059f03a0040", "Url": "https://api.github.com/repos/mkulesh/onpc", "Date": "2018-11-18T10:40:46Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (lowestPrice == null) { lowestPrice = room.getPrice(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9097/buggy-version/src.main.java.dto.HotelDTO.java", "BodyUseAPI": [], "Fixed commit": "bf295ae84722c6bd31358b9a8068c77dd35e56a0", "Url": "https://api.github.com/repos/Ionsight/sysexam", "Date": "2018-12-03T11:14:53Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((room.getPrice()) < lowestPrice) { lowestPrice = room.getPrice(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9097/buggy-version/src.main.java.dto.HotelDTO.java", "BodyUseAPI": [], "Fixed commit": "bf295ae84722c6bd31358b9a8068c77dd35e56a0", "Url": "https://api.github.com/repos/Ionsight/sysexam", "Date": "2018-12-03T11:14:53Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (lowestPrice == null) { this.lowestPrice = -1; }else { this.lowestPrice = lowestPrice; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9097/buggy-version/src.main.java.dto.HotelDTO.java", "BodyUseAPI": [], "Fixed commit": "bf295ae84722c6bd31358b9a8068c77dd35e56a0", "Url": "https://api.github.com/repos/Ionsight/sysexam", "Date": "2018-12-03T11:14:53Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > (i + 1)) { options.verbose = java.lang.Integer.parseInt(args[(i + 1)]); i += 1; }else { options.verbose = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4901/buggy-version/src.main.java.roll.main.CLParser.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "bee5445264d2ddf754f0b180fd2723c981c010f7", "Url": "https://api.github.com/repos/ISCAS-PMC/roll-library", "Date": "2018-11-10T14:30:32Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (userCashCoupon != null) { userCashCoupon.setUsed(false); userCashCoupon.saveInBackground(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9316/buggy-version/module_pay.src.main.java.arouter.dawn.zju.edu.module_pay.ui.home.PayHomePresenter.java", "BodyUseAPI": ["arouter.dawn.zju.edu.lib_net.bean.order.UserCashCoupon.setUsed(boolean)", "arouter.dawn.zju.edu.lib_net.bean.order.UserCashCoupon.saveInBackground()"], "Fixed commit": "cacd61b51eff8fa1b654e6b0f9f06ad409620f00", "Url": "https://api.github.com/repos/DeIaube/YiXing", "Date": "2018-11-22T07:08:19Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!internal) && (codeScheme != null)) && ((fromExternalReference.getHref()) != null)) { final java.lang.String href = fromExternalReference.getHref(); existingExternalReference = externalReferenceRepository.findByGlobalTrueAndHref(href); if (existingExternalReference != null) { return existingExternalReference; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8157/buggy-version/src.main.java.fi.vm.yti.codelist.intake.dao.impl.ExternalReferenceDaoImpl.java", "BodyUseAPI": ["fi.vm.yti.codelist.common.dto.ExternalReferenceDTO.getHref()"], "Fixed commit": "38b5749dcc31bcb36b02a08bafc45d4825dd52be", "Url": "https://api.github.com/repos/VRK-YTI/yti-codelist-content-intake-service", "Date": "2018-11-09T11:45:31Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(o instanceof java.lang.String)) o = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8630/buggy-version/server.src.main.java.lsfusion.server.data.type.AbstractType.java", "BodyUseAPI": [], "Fixed commit": "305b63b891ccba95551f16cb6a5da40ac9055f3d", "Url": "https://api.github.com/repos/lsfusion/platform", "Date": "2018-12-10T08:44:44Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { goToDisplayingNotes(); checkPushNotification(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7706/buggy-version/app.src.main.java.com.github.andrei1993ak.mentoring.task2.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c3f6bbaf1c751aea13084795b174918136678100", "Url": "https://api.github.com/repos/Andrei1993ak/D3GoalTask2", "Date": "2018-12-08T09:47:55Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dce.business.service.user.IUserService.getUser(buyer.getRefereeid())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (refUser == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3265/buggy-version/dce-service.src.main.java.com.dce.business.service.impl.award.RefereeUpgrade.java", "BodyUseAPI": [], "Fixed commit": "ab8900b83ea9cee50fec3ae9384856188e4c7114", "Url": "https://api.github.com/repos/liu83sihai/travel", "Date": "2018-11-05T04:44:27Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yugioh.shared.session.SessionInstance.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (session.isClosed()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/552/buggy-version/YuGiOhClient.src.com.yugioh.gui.Window.java", "BodyUseAPI": [], "Fixed commit": "e4a441b7cd93f7bfa3b562ea6ac28c5c64c257da", "Url": "https://api.github.com/repos/PlasticLunatic/YuGiOhProject", "Date": "2018-11-04T14:40:05Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inProcessPages) != null) { return inProcessPages.getLength(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6296/buggy-version/crawler4j.src.main.java.edu.uci.ics.crawler4j.frontier.Frontier.java", "BodyUseAPI": [], "Fixed commit": "0654c4b76a2214f95a59ed89ac4dba6449a0a56b", "Url": "https://api.github.com/repos/cast-org/crawler4j", "Date": "2018-12-18T16:45:55Z"},
{"Line": "=>1240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sender == null) sender = getConsoleSender();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/189/buggy-version/src.main.java.io.github.wysohn.triggerreactor.core.main.TriggerReactor.java", "BodyUseAPI": [], "Fixed commit": "f2c0adcebcf6c022d573268ffbd963f886eac561", "Url": "https://api.github.com/repos/wysohn/TriggerReactor", "Date": "2018-12-19T22:41:33Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (batchSize > 0) { fetchFutures.add(pool.submit(new rest.IEXStockBatchRequest(batchArr))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6151/buggy-version/src.main.java.rest.StockFetcher.java", "BodyUseAPI": [], "Fixed commit": "c6d9d771987de8c2c97f3e9a473547f42a6964e7", "Url": "https://api.github.com/repos/RasmusLumholdt/YDB-StockTrackerBackend", "Date": "2018-12-05T20:14:55Z"},
{"Line": "=>724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!invalid) { org.apache.camel.component.xquery.XQueryBuilder.LOG.debug(\"Declaring namespace [prefix: {}, uri: {}]\", prefix, uri); staticQueryContext.declareNamespace(prefix, uri); staticQueryContext.setInheritNamespaces(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/814/buggy-version/components.camel-saxon.src.main.java.org.apache.camel.component.xquery.XQueryBuilder.java", "BodyUseAPI": [], "Fixed commit": "a9ef2364b7f218be646dc559921d1b70fa045de6", "Url": "https://api.github.com/repos/apache/camel", "Date": "2018-12-17T12:39:33Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Constants.LOCAL_PROTOCOL.equals(protocolConfig.getName())) { protocolConfig.setRegister(false); map.put(\"notify\", \"false\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/4462/buggy-version/dubbo-config.dubbo-config-api.src.main.java.org.apache.dubbo.config.ServiceConfig.java", "BodyUseAPI": ["org.apache.dubbo.config.ProtocolConfig.setRegister(boolean)"], "Fixed commit": "46d250e2d01baa529d768dcb9cd84c608c845fb8", "Url": "https://api.github.com/repos/tswstarplanet/incubator-dubbo", "Date": "2018-12-23T12:44:38Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isRemoved())) { java.lang.System.out.println(\"flame\"); uet.oop.bomberman.Game.addBombRadius(1); remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9322/buggy-version/BoombermanClient.src.uet.oop.bomberman.entities.tile.item.FlameItem.java", "BodyUseAPI": [], "Fixed commit": "96668766112138f28bf96632d7e6d99719d4aac4", "Url": "https://api.github.com/repos/UET-INT2204-11-fall-18/assignment-2-bomberman-nc", "Date": "2018-11-07T10:18:12Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hi == 0) { hi -= 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3164/buggy-version/src.EventManager.java", "BodyUseAPI": [], "Fixed commit": "65b19fa45c1942df44ea7d4f8f4420b9ea7d1f8a", "Url": "https://api.github.com/repos/Farceer/Bullet_GOD-TOP-and-V", "Date": "2018-12-07T19:17:03Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hi == 0) { hi -= 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3164/buggy-version/src.EventManager.java", "BodyUseAPI": [], "Fixed commit": "65b19fa45c1942df44ea7d4f8f4420b9ea7d1f8a", "Url": "https://api.github.com/repos/Farceer/Bullet_GOD-TOP-and-V", "Date": "2018-12-07T19:17:03Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(source.equals(destination))) { source.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7958/buggy-version/src.Write.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "a5021b735f8025d57e3ff17789b0d57148f5caa6", "Url": "https://api.github.com/repos/Shadowbomb/OS-Project-3", "Date": "2018-12-01T01:53:41Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!objectInjectionOverridden) { id = proxy.attachJavaObjectToJsObject(object, other); }else { id = name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2844/buggy-version/src.main.java.io.alicorn.v8.V8JavaAdapter.java", "BodyUseAPI": [], "Fixed commit": "009d2285fcf1edab10e0a83ec7d64aeeba8aed41", "Url": "https://api.github.com/repos/AlexTrotsenko/v8-adapter", "Date": "2018-11-14T11:25:51Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.tripko.app.App.isPassenger())) { if ((schedules.size()) <= 0) { binding.resultLayout.noResultLayout.setVisibility(View.VISIBLE); if (com.tripko.app.App.isPassenger()) { binding.resultLayout.resultText.setText(\"Oops! No Result\\nTry Clearing Filters\"); }else { binding.resultLayout.resultText.setText(\"Oops! No Assigned Bus Yet\"); } binding.recyclerView.setVisibility(View.GONE); }else { binding.resultLayout.noResultLayout.setVisibility(View.GONE); binding.recyclerView.setVisibility(View.VISIBLE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/1446/buggy-version/app.src.main.java.com.tripko.ui.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0cf9d176243106f20ce3f88c1850c95a57705503", "Url": "https://api.github.com/repos/markjansen17/TripKo", "Date": "2018-11-08T13:50:20Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((argument1) instanceof ss.week3.math.Integrable) && ((argument2) instanceof ss.week3.math.Integrable)) { return new ss.week3.math.Sum(((ss.week3.math.Integrable) (argument1)).integral(), ((ss.week3.math.Integrable) (argument2)).integral()); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7325/buggy-version/week3.math.Sum.java", "BodyUseAPI": [], "Fixed commit": "8680e6eb6cb17d035f469feb85dff55061030708", "Url": "https://api.github.com/repos/kmeurink/software-systems", "Date": "2018-11-30T09:43:18Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((content == null) || (searchTerm == null)) { return new int[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7829/buggy-version/src.main.java.com.papao.books.ui.providers.UnifiedStyledLabelProvider.java", "BodyUseAPI": [], "Fixed commit": "a443c3ba0cf1a456d8fa335f71408d6c7c588d49", "Url": "https://api.github.com/repos/brontozaur/books_manager_swt", "Date": "2018-12-28T10:58:47Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((args[0]) != null) && ((args[1]) != null)) { fileName = args[0]; appVersion = args[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9544/buggy-version/src.com.coveros.selenium_hello_world.SeleniumMain.java", "BodyUseAPI": [], "Fixed commit": "79829a180c0f0e2770caad0f852ee1a4ca50215c", "Url": "https://api.github.com/repos/bspeelm/selenium_hello_world_test", "Date": "2018-12-21T20:10:49Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (LargeFactorial.userInputFactorial.equals(LargeFactorial.resultString)) { LargeFactorial.resultString = java.lang.String.valueOf(x); java.lang.System.out.print((\"X: \" + x)); return x; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7639/buggy-version/Factorial_Task2_HlynkaMykola.java", "BodyUseAPI": [], "Fixed commit": "fd8235c25c1ab469c966ebd7def2c018b9808ac1", "Url": "https://api.github.com/repos/Nikolas9896/Factorial", "Date": "2018-11-15T10:51:16Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LargeFactorial.factorial(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (Fact != 0) { java.lang.System.out.println(\"The n: \"); java.lang.System.out.println(LargeFactorial.resultString); }else if (digitsNumber != 1) { java.lang.System.out.println(\"The digits number is much then 2000! Factorial\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7639/buggy-version/Factorial_Task2_HlynkaMykola.java", "BodyUseAPI": [], "Fixed commit": "fd8235c25c1ab469c966ebd7def2c018b9808ac1", "Url": "https://api.github.com/repos/Nikolas9896/Factorial", "Date": "2018-11-15T10:51:16Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cur_node == null) { out.append(\"\"); }else if ((cur_node.m_value) == null) { out.append(\"\"); }else if (cur_node.m_value.isString()) { out.append(cur_node.m_value); }else { out.append(cur_node.m_value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6996/buggy-version/Source.Core.src.ca.uqac.lif.mtnp.table.HardTable.java", "BodyUseAPI": ["java.lang.StringBuilder.append(cur_node.m_value)", "cur_node.m_value.isString()", "java.lang.StringBuilder.append(cur_node.m_value)"], "Fixed commit": "f673379f93ea26706451460ca9324fd974a1e6fc", "Url": "https://api.github.com/repos/chafdev/mtnp", "Date": "2018-12-11T03:45:52Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (method.isSynthetic()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/402/buggy-version/src.main.java.org.apache.commons.jexl3.internal.introspection.Permissions.java", "BodyUseAPI": [], "Fixed commit": "f019b211cb4eb18d6a62216a56598d503334abb1", "Url": "https://api.github.com/repos/dmitri-blinov/commons-jexl", "Date": "2018-12-30T06:58:14Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((button.getId()) == (R.id.sidebar_button_score)) { toggleGroupVisibilityAllowTapping(scoreBoardGroup); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7715/buggy-version/app.src.main.java.edu.up.cs.androidcatan.catan.CatanHumanPlayer.java", "BodyUseAPI": [], "Fixed commit": "b5bf7d44a854d98b36afc7c5fbf9a9c16f2b25b3", "Url": "https://api.github.com/repos/alexweininger/android-catan", "Date": "2018-11-14T03:25:51Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((zooKeeperHelper) != null) { return zooKeeperHelper.isDeregisteredWithZooKeeper(); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7159/buggy-version/service.src.java.org.apache.hive.service.server.HiveServer2.java", "BodyUseAPI": [], "Fixed commit": "a2a674afdc4475fff1a4831d37daba199a1f665b", "Url": "https://api.github.com/repos/ashutosh-bapat/hive", "Date": "2018-11-16T16:17:32Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (controlType == (org.biopax.paxtools.model.level3.ControlType.INHIBITION)) { srcSide = factoid.model.TemplatesModel.SideType.RIGHT; tgtSide = factoid.model.TemplatesModel.SideType.LEFT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5514/buggy-version/src.main.java.factoid.model.TemplatesModel.java", "BodyUseAPI": [], "Fixed commit": "61ea35e9b53cd33f4095e5f0d645ab3f947c8a95", "Url": "https://api.github.com/repos/PathwayCommons/factoid-converters", "Date": "2018-11-16T23:33:34Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (appId.overrideOAuthServerHost)) { return appId.overrideOAuthServerHost.split(\"/\")[2]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8186/buggy-version/lib.src.main.java.com.ibm.cloud.appid.android.internal.config.Config.java", "BodyUseAPI": ["appId.overrideOAuthServerHost.split(java.lang.String)"], "Fixed commit": "3c29d8842be3801b7d6f5103980c14606ce99f33", "Url": "https://api.github.com/repos/ibm-cloud-security/appid-clientsdk-android", "Date": "2018-12-18T10:08:52Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i + 1) < ((line.length) - 1)) { input += \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/124/buggy-version/src.garuleminer.GARuleMiner.java", "BodyUseAPI": [], "Fixed commit": "56fe5880e3d5df81f68d346939179216a43f16d6", "Url": "https://api.github.com/repos/Newcombe74/GARuleMiner", "Date": "2018-11-03T16:15:52Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dtmweb.oqc.database.PreferenceUtil.retrieveCityData()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((cityInfo == null) || ((cityInfo.results) == null)) || ((cityInfo.results.size()) == 0)) return new java.util.ArrayList<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2779/buggy-version/app.src.main.java.com.dtmweb.oqc.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "830012f7bb79cdc1068672961dd28131db11c14d", "Url": "https://api.github.com/repos/arunavsikdershuvo/OQC", "Date": "2018-12-10T19:48:03Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(shoppingList.isEmpty())) { android.content.Intent intent = new android.content.Intent(this, com.example.pascal.shopnavigator.RouteActivity.class); intent.putExtra(\"shoppingList\", ((java.io.Serializable) (shoppingList))); startActivity(intent); }else { android.widget.Toast.makeText(getApplicationContext(), R.string.no_item_selected, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3646/buggy-version/app.src.main.java.com.example.pascal.shopnavigator.ShoppingBag.java", "BodyUseAPI": [], "Fixed commit": "d699245fcbc87f75f816204e7351b82d012148f2", "Url": "https://api.github.com/repos/pniedermeyer/ShopNavigator", "Date": "2018-12-19T04:42:59Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allShows) != null) { return allShows.size(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2906/buggy-version/app.src.main.java.looktv.project.cs4540.looktv.SearchResultAdapter.java", "BodyUseAPI": [], "Fixed commit": "e6778578aa958900bac97fdf7d2392db82448e4a", "Url": "https://api.github.com/repos/PranilDahal/LookTv", "Date": "2018-11-30T05:03:41Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allStoredShows) != null) { return allStoredShows.size(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2906/buggy-version/app.src.main.java.looktv.project.cs4540.looktv.StoredShowAdapter.java", "BodyUseAPI": [], "Fixed commit": "e6778578aa958900bac97fdf7d2392db82448e4a", "Url": "https://api.github.com/repos/PranilDahal/LookTv", "Date": "2018-11-30T05:03:41Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.epam.lab.paymentsystem.service.CardService.getCardByCardNumber(operationDto.getNumberSrcCard())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(cardService.getAllCardsByCurrentUser().contains(srcCard))) { com.epam.lab.paymentsystem.service.impl.OperationServiceImpl.LOGGER.error(\"This is not your card\"); throw new com.epam.lab.paymentsystem.exception.MoneyTransferException(\"This is not your card\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6778/buggy-version/src.main.java.com.epam.lab.paymentsystem.service.impl.OperationServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "6707486993f18debb911106aa3e586a80e47a7cb", "Url": "https://api.github.com/repos/PaymentSystem/Application", "Date": "2018-11-16T17:45:07Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["invocation.getInvokedMethod().getReturnType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Object.class.equals(returnType)) && (invocation.isBuildingExpectation())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5137/buggy-version/jmock.src.main.java.org.jmock.internal.ReturnDefaultValueAction.java", "BodyUseAPI": [], "Fixed commit": "00adcd3c2b47239457de7505584835a78252809d", "Url": "https://api.github.com/repos/jmock-developers/jmock-library", "Date": "2018-11-05T21:30:10Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.adamyt.essay.utils.EssayUtils.needRequestWrite(this)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7143/buggy-version/app.src.main.java.com.adamyt.essay.essay.RegisterActivity.java", "BodyUseAPI": [], "Fixed commit": "04da35e5860be232548acb75459fe3836230fb9f", "Url": "https://api.github.com/repos/Dayunxi/Essay-Android", "Date": "2018-11-02T11:19:11Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.adamyt.essay.utils.EssayUtils.needRequestWrite(this)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7143/buggy-version/app.src.main.java.com.adamyt.essay.essay.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "04da35e5860be232548acb75459fe3836230fb9f", "Url": "https://api.github.com/repos/Dayunxi/Essay-Android", "Date": "2018-11-02T11:19:11Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) instanceof java.nio.channels.ClosedChannelException) { org.apache.james.protocols.netty.BasicChannelUpstreamHandler.LOGGER.info(\"Unable to process request\", e.getCause()); }else { org.apache.james.protocols.netty.BasicChannelUpstreamHandler.LOGGER.error(\"Unable to process request\", e.getCause()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3986/buggy-version/protocols.netty.src.main.java.org.apache.james.protocols.netty.BasicChannelUpstreamHandler.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,e.getCause())", "org.jboss.netty.channel.ExceptionEvent.getCause()", "org.slf4j.Logger.info(java.lang.String,e.getCause())", "org.jboss.netty.channel.ExceptionEvent.getCause()"], "Fixed commit": "00de7185cc08f8c9c0e02c0491e54da0c03358af", "Url": "https://api.github.com/repos/blackheaven/james-project", "Date": "2018-12-11T13:42:16Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tfssoft.qinling.user.repository.UserRepository.queryByPhoneAndPassword(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != instance) { instance.setToken(null); userRepository.updateUser(instance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8990/buggy-version/src.main.java.com.tfssoft.qinling.user.service.impl.UserServiceImpl.java", "BodyUseAPI": ["com.tfssoft.qinling.user.domain.User.setToken(<nulltype>)", "com.tfssoft.qinling.user.repository.UserRepository.updateUser(com.tfssoft.qinling.user.domain.User)"], "Fixed commit": "ab511d242798f049ee1fe63f65971ecabd5dc502", "Url": "https://api.github.com/repos/dangwanghu/qinling-server", "Date": "2018-11-20T16:40:00Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isHashed) { password = br.cefetmg.inf.util.PasswordCriptography.generateMd5(password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6713/buggy-version/Organizer.src.java.br.cefetmg.inf.organizer.controller.UpdateUser.java", "BodyUseAPI": [], "Fixed commit": "57cd5aa6b8061ba30a0689531b4f13e54e045803", "Url": "https://api.github.com/repos/LuizinGustavo/organizer-backend", "Date": "2018-12-01T10:18:03Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ctx.channel().isActive())) { com.hwl.im.core.immode.MessageOperate.moveSentMessageIntoOffline(com.hwl.im.core.imom.OnlineManage.getInstance().getUserId(ctx.channel())); com.hwl.im.core.imom.OnlineManage.getInstance().removeChannel(ctx.channel()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/765/buggy-version/src.main.java.com.hwl.im.server.ServerMessageChannelHandler.java", "BodyUseAPI": ["com.hwl.im.core.immode.MessageOperate.moveSentMessageIntoOffline(com.hwl.im.core.imom.OnlineManage.getInstance().getUserId(ctx.channel()))", "com.hwl.im.core.imom.OnlineManage.getInstance().removeChannel(ctx.channel())", "io.netty.channel.ChannelHandlerContext.channel()", "com.hwl.im.core.imom.OnlineManage.getInstance().getUserId(ctx.channel())", "io.netty.channel.ChannelHandlerContext.channel()"], "Fixed commit": "1d8794dc4484f96fd0f7826d1143b329e2c81125", "Url": "https://api.github.com/repos/oisnull/hwl-im", "Date": "2018-12-24T08:46:04Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.mail.MessagingException.getNextException()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (nested != null) { if (nested instanceof java.io.IOException) { throw MimeMailExceptionCode.CONNECT_ERROR.create(pop3Config.getServer(), pop3Config.getLogin()); }else if (tmpDownEnabled && (java.net.SocketTimeoutException.class.isInstance(e.getNextException()))) { com.openexchange.pop3.connect.POP3StoreConnector.timedOutServers.put(new com.openexchange.pop3.connect.POP3StoreConnector.HostAndPort(server, port), java.lang.Long.valueOf(java.lang.System.currentTimeMillis())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/5128/buggy-version/com.openexchange.pop3.src.com.openexchange.pop3.connect.POP3StoreConnector.java", "BodyUseAPI": [], "Fixed commit": "57f39b0fecacb034e52808d8e88f0a0c6f33af6d", "Url": "https://api.github.com/repos/open-xchange/appsuite-middleware", "Date": "2014-03-10T09:24:59Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(latestMedicalRecord.equals(MedicalRecord.DEFAULT_MEDICAL_RECORD))) { this.medicalRecordLibrary.add(medicalRecord); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3168/buggy-version/src.main.java.seedu.address.model.patient.Patient.java", "BodyUseAPI": [], "Fixed commit": "a8fd7cd86d47671e6a1af5379e2509864bf737f8", "Url": "https://api.github.com/repos/GaryGohYP/main", "Date": "2018-11-04T04:47:19Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(latestMedicalRecord.equals(MedicalRecord.DEFAULT_MEDICAL_RECORD))) { this.medicalRecordLibrary.add(medicalRecord); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3168/buggy-version/src.main.java.seedu.address.model.patient.Patient.java", "BodyUseAPI": [], "Fixed commit": "a8fd7cd86d47671e6a1af5379e2509864bf737f8", "Url": "https://api.github.com/repos/GaryGohYP/main", "Date": "2018-11-04T04:47:19Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentUser == null) { return new org.springframework.web.servlet.ModelAndView(\"index\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/2796/buggy-version/src.main.java.com3014.coursework.group6.controller.LoginController.java", "BodyUseAPI": [], "Fixed commit": "db1a2fccf0c7bbd6758604d559673c38c94ac8d1", "Url": "https://api.github.com/repos/jacksimmonds0/com3014_coursework", "Date": "2018-12-10T19:36:58Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<fr.gouv.etalab.mastodon.client.Entities.Status>.get(viewHolder.getAdapterPosition())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (status == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/9110/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.drawers.StatusListAdapter.java", "BodyUseAPI": [], "Fixed commit": "fe30985a2fa7cfee4634daa183fdcb04b9f079df", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2018-12-22T11:21:03Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["suspectedMethodList.values().iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (it.hasNext()) { com.druid.monitor.detector.bean.MethodExecuteMonitoringBean firstBean = it.next(); errorText = (firstBean.toString()) + \"<br/>\"; while (it.hasNext()) { com.druid.monitor.detector.bean.MethodExecuteMonitoringBean bean = it.next(); errorText = (bean.toString()) + \"<br/>\"; } sendSystemWarningAsBadMethodExcutionDetectedNotification(firstBean.getKey(), firstBean.getClassName(), firstBean.getMethodName(), firstBean.getExecuteCost(), firstBean.getExecuteErrorCount(), errorText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/990/buggy-version/src.main.java.com.druid.monitor.detector.component.BadCodeDetectorComponent.java", "BodyUseAPI": ["java.util.Iterator<com.druid.monitor.detector.bean.MethodExecuteMonitoringBean>.next()", "java.util.Iterator<com.druid.monitor.detector.bean.MethodExecuteMonitoringBean>.next()", "java.util.Iterator<com.druid.monitor.detector.bean.MethodExecuteMonitoringBean>.hasNext()"], "Fixed commit": "2782b596615ee0453676c77294a9c4c7357896f6", "Url": "https://api.github.com/repos/Jawf/druid-monitor-detector", "Date": "2018-12-21T15:55:29Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jme3.bullet.joints.PhysicsJoint.getBodyA()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (bodyA == null) { geomA.setCullHint(Spatial.CullHint.Always); }else { bodyA.getPhysicsLocation(a.getTranslation()); bodyA.getPhysicsRotation(a.getRotation()); geomA.setLocalTransform(a); geomA.setCullHint(Spatial.CullHint.Never); arrowA.setArrowExtent(joint.getPivotB(null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/3784/buggy-version/Minie.src.main.java.com.jme3.bullet.debug.BulletJointDebugControl.java", "BodyUseAPI": ["com.jme3.bullet.objects.PhysicsRigidBody.getPhysicsRotation(a.getRotation())", "com.jme3.bullet.objects.PhysicsRigidBody.getPhysicsLocation(a.getTranslation())"], "Fixed commit": "9e3bce0184c342cc7a9d724f2698e9d73ffd6604", "Url": "https://api.github.com/repos/stephengold/jme3-utilities", "Date": "2018-11-27T18:48:49Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ratio.isInfinite()) { fw.write(\"\\\"Inf\\\"\"); }else { fw.write(java.lang.String.format(\"%.4f\", ratio)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8989/buggy-version/src.edu.cwru.protmapms.ResultWriter.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.Double)", "java.io.FileWriter.write(java.lang.String)"], "Fixed commit": "a982e27a97757bce63f6b40cb25a3be4d55e4283", "Url": "https://api.github.com/repos/CWRU-CPB/ProtMapMS", "Date": "2018-11-29T15:28:58Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cRatio.isInfinite()) { fw.write(\"\\\"Inf\\\"\"); }else { fw.write(java.lang.String.format(\"%.4f\", ((labeled / (unlabeled + labeled)) / lastRatio))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8989/buggy-version/src.edu.cwru.protmapms.ResultWriter.java", "BodyUseAPI": [], "Fixed commit": "a982e27a97757bce63f6b40cb25a3be4d55e4283", "Url": "https://api.github.com/repos/CWRU-CPB/ProtMapMS", "Date": "2018-11-29T15:28:58Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (month > 12) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7323/buggy-version/src.main.java.seedu.address.model.person.Date.java", "BodyUseAPI": [], "Fixed commit": "f9c6afb357da0d3206c7e570bcbb1db4fb82c355", "Url": "https://api.github.com/repos/ngkangtze/main", "Date": "2018-11-04T01:43:02Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (givenYear > currentYear) { return false; }else if (givenMonth < currentMonth) { return true; }else if (givenMonth > currentMonth) { return false; }else if (givenDay < currentDay) { return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7323/buggy-version/src.main.java.seedu.address.model.person.Date.java", "BodyUseAPI": [], "Fixed commit": "f9c6afb357da0d3206c7e570bcbb1db4fb82c355", "Url": "https://api.github.com/repos/ngkangtze/main", "Date": "2018-11-04T01:43:02Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sky.core.SKYHelper.isMainLooperThread()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isMain) { throw new sky.core.exception.SKYBizException(\"is not main thread no create service\"); }else { u = sky.core.SKYHelper.structureHelper().createNullService(uiClazz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7029/buggy-version/sky.src.main.java.sky.core.SKYHelper.java", "BodyUseAPI": [], "Fixed commit": "daaf30f6d7e383ed78e50da62d7c4329634cd986", "Url": "https://api.github.com/repos/skyJinc/sky", "Date": "2018-12-05T03:11:18Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((sky.core.SKYBiz) (impl)).isUI()) { item.interceptorError(((sky.core.SKYBiz) (impl)).ui(), interceptor, ((sky.core.exception.SKYHttpException) (throwable.getCause()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7029/buggy-version/sky.src.main.java.sky.core.SKYMethod.java", "BodyUseAPI": ["sky.core.plugins.SKYHttpErrorInterceptor.interceptorError(((sky.core.SKYBiz) (impl)).ui(),int,java.lang.Throwable)", "java.lang.Object.ui()"], "Fixed commit": "daaf30f6d7e383ed78e50da62d7c4329634cd986", "Url": "https://api.github.com/repos/skyJinc/sky", "Date": "2018-12-05T03:11:18Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((sky.core.SKYBiz) (impl)).isUI()) { item.interceptorError(((sky.core.SKYBiz) (impl)).ui(), interceptor, throwable.getCause()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7029/buggy-version/sky.src.main.java.sky.core.SKYMethod.java", "BodyUseAPI": ["java.lang.Object.ui()", "sky.core.plugins.SKYBizErrorInterceptor.interceptorError(((sky.core.SKYBiz) (impl)).ui(),int,java.lang.Throwable)"], "Fixed commit": "daaf30f6d7e383ed78e50da62d7c4329634cd986", "Url": "https://api.github.com/repos/skyJinc/sky", "Date": "2018-12-05T03:11:18Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(filter)) { return new java.util.ArrayList<>(getVendors().keySet()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6607/buggy-version/app.src.main.java.com.vrem.wifianalyzer.vendor.model.VendorDB.java", "BodyUseAPI": [], "Fixed commit": "e5233baed417215aca3cba9bb066fa056d3bda1e", "Url": "https://api.github.com/repos/VREMSoftwareDevelopment/WiFiAnalyzer", "Date": "2018-11-29T13:07:09Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isCancelled()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8261/buggy-version/entity.queryable.src.entity.tool.util.ThreadUtils.java", "BodyUseAPI": [], "Fixed commit": "020d1cc909c0fcda738b27eade43898ec5d6c214", "Url": "https://api.github.com/repos/linlurui/entityQueryable", "Date": "2018-11-28T12:19:41Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataSnapshot.child(\"bio\").getValue()) != null) { bio = dataSnapshot.child(\"bio\").getValue().toString(); BioText.setText(bio); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/543/buggy-version/app.src.main.java.com.example.arturolopez.fete.ProfileActivity.java", "BodyUseAPI": ["dataSnapshot.child(\"bio\").getValue().toString()", "dataSnapshot.child(\"bio\").getValue()", "com.google.firebase.database.DataSnapshot.child(java.lang.String)"], "Fixed commit": "7e84734c52f3e1a60ade343cbb67e1f15296e6b3", "Url": "https://api.github.com/repos/alopez96/fete", "Date": "2018-12-02T16:44:41Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkinsfileRunner.getSource().getSource()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (source != null) { java.io.File jfrZip = new java.io.File(buildRoot, \"jfrApp.zip\"); mavenHelper.downloadArtifact(buildRoot, jenkinsfileRunner.getSource(), source.version, \"zip\", \"app\", jfrZip); io.jenkins.tools.warpackager.lib.impl.Builder.unzip(jfrZip, jfrDir); }else { throw new java.io.IOException(\"Source for jenkinsfile runner not specified\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7738/buggy-version/custom-war-packager-lib.src.main.java.io.jenkins.tools.warpackager.lib.impl.Builder.java", "BodyUseAPI": ["io.jenkins.tools.warpackager.lib.impl.Builder.downloadArtifact(java.io.File,jenkinsfileRunner.getSource(),source.version,java.lang.String,java.lang.String,java.io.File)"], "Fixed commit": "41c1ca10bd34040501a2348e17a1dfa102ef34ed", "Url": "https://api.github.com/repos/varyvol/custom-war-packager", "Date": "2018-12-18T10:54:53Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeConflict) return \"Time Conflict\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7443/buggy-version/src.Controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "c22ba141fd1bf7ca24a25357f973dfe91b7c9bc1", "Url": "https://api.github.com/repos/brett96/CECS-343", "Date": "2018-12-11T01:36:56Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cleaningTask) == null) { org.eclipse.leshan.core.californium.CoapAsyncRequestObserver.LOG.trace(\"Schedule Cleaning Task for {}\", coapRequest); cleaningTask = getExecutor().schedule(new java.lang.Runnable() { @java.lang.Override public void run() { responseTimedOut.set(true); coapRequest.cancel(); } }, timeoutInMs, java.util.concurrent.TimeUnit.MILLISECONDS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/466/buggy-version/leshan-core-cf.src.main.java.org.eclipse.leshan.core.californium.CoapAsyncRequestObserver.java", "BodyUseAPI": [], "Fixed commit": "18f08881aa9282d22f974849404bf975a6fd6444", "Url": "https://api.github.com/repos/bsinno/leshan", "Date": "2018-12-03T16:32:19Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((org.bukkit.Bukkit.getWorld(loc[0])) == null) { java.lang.System.out.println(((\"[MaSuite] [Warps] [World=\" + (loc[0])) + \"] World could not be found!\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/8612/buggy-version/src.main.java.fi.matiaspaavilainen.masuitewarps.WarpMessageListener.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "d776b6907362dcc94fe83891d51abbd272a82bcb", "Url": "https://api.github.com/repos/masagameplay/MaSuiteWarpsBridge", "Date": "2018-12-14T14:04:12Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sqlName instanceof com.alibaba.fastsql.sql.ast.expr.SQLMethodInvokeExpr) { return com.alibaba.otter.canal.parse.inbound.mysql.ddl.DruidDdlParser.unescapeName(((com.alibaba.fastsql.sql.ast.expr.SQLMethodInvokeExpr) (sqlName)).getMethodName()); }else if (sqlName instanceof com.alibaba.fastsql.sql.dialect.mysql.ast.expr.MySqlOrderingExpr) { return getSqlName(((com.alibaba.fastsql.sql.dialect.mysql.ast.expr.MySqlOrderingExpr) (sqlName)).getExpr()); }else { return sqlName.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7377/buggy-version/parse.src.main.java.com.alibaba.otter.canal.parse.inbound.mysql.tsdb.MemoryTableMeta.java", "BodyUseAPI": ["com.alibaba.fastsql.sql.ast.SQLExpr.toString()"], "Fixed commit": "035ef265426cf741b5db606ce9918eb09b945052", "Url": "https://api.github.com/repos/luomoxu/canal", "Date": "2018-12-19T03:43:49Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (success != 0) { subNet.setOnline(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/949/buggy-version/src.main.java.koeko.Networking.NetworkState.java", "BodyUseAPI": [], "Fixed commit": "bdd46769bcd9acd682666f00cfe5f5029f944968", "Url": "https://api.github.com/repos/maximerchrd/KoekoTeacher", "Date": "2018-11-20T09:16:12Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.inputFileFormatClass) == (com.twitter.elephantbird.mapred.input.HiveMultiInputFormat.class)) clazzName = org.apache.hadoop.hive.ql.io.thrift.twitter.ThriftGeneralDeserializer.class.getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7828/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.plan.PartitionDesc.java", "BodyUseAPI": [], "Fixed commit": "c2a81957d0db51fb9b3360e50900bb0cd3d0e89e", "Url": "https://api.github.com/repos/twitter-forks/hive", "Date": "2018-12-14T18:25:24Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.gameInitiated.get()) && (this.waitingForServerResponse.get())) { this.showQuitGameInformation(); }else { this.showStartGameInformation(); this.showQuitGameInformation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/6925/buggy-version/homework1.src.org.kth.id1212.client.controller.GameController.java", "BodyUseAPI": [], "Fixed commit": "5c13bd2b8b8a1ad84ec3c56f6a953b6f908d7942", "Url": "https://api.github.com/repos/freddjah/network-programming", "Date": "2018-11-08T20:13:46Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getActivity()) != null) && (isAdded())) { tv.setText(java.lang.String.format(getString(R.string.rssi), rssi)); }else if ((ITagApplication.context) != null) { tv.setText(java.lang.String.format(ITagApplication.context.getString(R.string.rssi), rssi)); }else { tv.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V175/7086/buggy-version/app.src.main.java.solutions.s4y.itag.LeScanFragment.java", "BodyUseAPI": [], "Fixed commit": "64bf379ee9d71c9853ff0d7155e7e0638409e463", "Url": "https://api.github.com/repos/s4ysolutions/itag", "Date": "2018-12-15T08:11:36Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.topaidi.model.roles.User.getAddress()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((a.getId()) != null) { try { a = genericDao1.findByKey(a.getId()); } catch (javassist.NotFoundException e) { e.printStackTrace(); } }else { genericDao1.insert(a); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1580/buggy-version/TopAidi.src.main.java.com.topaidi.dao.UserJpaDao.java", "BodyUseAPI": ["com.topaidi.model.Address.getId()", "com.topaidi.dao.AddressJpaDao.findByKey(a.getId())", "com.topaidi.dao.AddressJpaDao.insert(com.topaidi.model.Address)"], "Fixed commit": "d0517ede84a6805f192ceaa28049372f728f0164", "Url": "https://api.github.com/repos/JulianGuigon/humanbooster", "Date": "2018-12-21T14:38:15Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uriToList().isEmpty()) return builder.build().iterator();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8884/buggy-version/src.main.java.com.upplication.s3fs.S3Path.java", "BodyUseAPI": [], "Fixed commit": "f05bde01b4f2de6e57226cb59dc031d1bfcc6ab9", "Url": "https://api.github.com/repos/cloudonix/Amazon-S3-FileSystem-NIO2", "Date": "2017-12-19T12:06:19Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(source.isHeldByCurrentThread())) { source.lock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2341/buggy-version/bomberman.src.main.java.ru.job4j.bomberman.Board.java", "BodyUseAPI": ["ru.job4j.bomberman.Cell.lock()"], "Fixed commit": "22187f1add8644195230c37e31dd0a347740e310", "Url": "https://api.github.com/repos/rmnick/job4j", "Date": "2018-11-13T12:11:59Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["state.deviceProperties.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (name != null) { final java.lang.StringBuilder subTitle = new java.lang.StringBuilder(); subTitle.append(name); if (!(state.isOn())) { subTitle.append(\" (\").append(getResources().getString(R.string.state_standby)).append(\")\"); } toolbar.setSubtitle(subTitle.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7216/buggy-version/app.src.main.java.com.mkulesh.onpc.MainActivity.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "3131a8906a313df8f16794a8cbc20124884c4722", "Url": "https://api.github.com/repos/mkulesh/onpc", "Date": "2018-11-14T20:37:27Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.studentSubject) == null) { com.school.Subject subject = new com.school.Subject(); return subject; }else { return studentSubject; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3211/buggy-version/src.com.school.Student.java", "BodyUseAPI": [], "Fixed commit": "da6d445288004f7debae04fc434f2d83878b7e82", "Url": "https://api.github.com/repos/heart1200/demo", "Date": "2018-11-20T16:59:06Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.stage.Screen.getPrimary().getBounds()", "java.lang.Double.parseDouble(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mainStageX < (screenBounds.getWidth())) { primaryStage.setX(mainStageX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6728/buggy-version/src.main.java.com.meti.app.Infinity.java", "BodyUseAPI": ["javafx.stage.Stage.setX(double)"], "Fixed commit": "df74995e93373b2139e6ce1ecc2954b8d4297116", "Url": "https://api.github.com/repos/SirMathhman/Infinity", "Date": "2018-11-30T18:40:39Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.parseDouble(java.lang.String)", "javafx.stage.Screen.getPrimary().getBounds()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mainStageY < (screenBounds.getHeight())) { primaryStage.setY(mainStageY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6728/buggy-version/src.main.java.com.meti.app.Infinity.java", "BodyUseAPI": ["javafx.stage.Stage.setY(double)"], "Fixed commit": "df74995e93373b2139e6ce1ecc2954b8d4297116", "Url": "https://api.github.com/repos/SirMathhman/Infinity", "Date": "2018-11-30T18:40:39Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serviceDiscovery) && (!(activePassiveHA))) { synchronized(this) { if ((zooKeeperHelper) != null) { return zooKeeperHelper.isDeregisteredWithZooKeeper(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4775/buggy-version/service.src.java.org.apache.hive.service.server.HiveServer2.java", "BodyUseAPI": [], "Fixed commit": "7b69bd809bbe9ec3a0c9452ae9bd2c5018b3bcad", "Url": "https://api.github.com/repos/ashutosh-bapat/hive", "Date": "2018-11-26T11:56:39Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) { for (int i = 0; i < (data.length); i++) { payload.pushInt(data[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7312/buggy-version/android.app.src.main.java.com.chirpreactnative.RCTChirpConnectModule.java", "BodyUseAPI": ["com.facebook.react.bridge.WritableArray.pushInt(byte)"], "Fixed commit": "3680edfb022acf643f5bd74d502472be57be7543", "Url": "https://api.github.com/repos/chirp/chirp-react-native-starter", "Date": "2018-11-01T11:07:57Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (activities != null) this.activities = activities;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9240/buggy-version/lams_common.src.java.org.lamsfoundation.lams.learningdesign.LearningDesign.java", "BodyUseAPI": [], "Fixed commit": "9e1d6b2a7e9dd1e5f3e43d10c6c2b87365692f4a", "Url": "https://api.github.com/repos/lamsfoundation/lams", "Date": "2018-11-07T04:52:51Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (lessons != null) this.lessons = lessons;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9240/buggy-version/lams_common.src.java.org.lamsfoundation.lams.learningdesign.LearningDesign.java", "BodyUseAPI": [], "Fixed commit": "9e1d6b2a7e9dd1e5f3e43d10c6c2b87365692f4a", "Url": "https://api.github.com/repos/lamsfoundation/lams", "Date": "2018-11-07T04:52:51Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (transitions != null) this.transitions = transitions;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9240/buggy-version/lams_common.src.java.org.lamsfoundation.lams.learningdesign.LearningDesign.java", "BodyUseAPI": [], "Fixed commit": "9e1d6b2a7e9dd1e5f3e43d10c6c2b87365692f4a", "Url": "https://api.github.com/repos/lamsfoundation/lams", "Date": "2018-11-07T04:52:51Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["project.XlsxConverter.Row.getFirstCellNum()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cellNum > 0) { for (int j = 0; j < cellNum; j++) { hssfRow.createCell(j).setCellType(CellType.STRING); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7169/buggy-version/src.main.java.project.XlsxConverter.XlsxConverter.java", "BodyUseAPI": [], "Fixed commit": "54087c7fc6065c6e47aad869e6809384762ddab8", "Url": "https://api.github.com/repos/techt0nix/BOM_Parser", "Date": "2018-11-09T12:47:40Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (value.equals(\"Default\")) { com.example.pochekuev.myapplication.ThemeChanger.changeToTheme(this, 0); }else if (value.equals(\"Dark\")) { com.example.pochekuev.myapplication.ThemeChanger.changeToTheme(this, 1); }else if (value.equals(\"Violet\")) { com.example.pochekuev.myapplication.ThemeChanger.changeToTheme(this, 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5469/buggy-version/app.src.main.java.com.example.pochekuev.myapplication.MainActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "14ba135963e78d5c39acf47cd96442148bea7134", "Url": "https://api.github.com/repos/redhawk16/SibadiRasp", "Date": "2018-12-20T17:01:47Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (matchBond && shouldMatchRings) { if (org.openscience.smsd.algorithm.matchers.AtomBondMatcher.DEBUG) { java.lang.System.out.println((\"Strict Order Match Choosen \" + (shouldMatchRings & matchBond))); } bm = org.openscience.smsd.algorithm.matchers.BondMatcher.forStrictOrder(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6063/buggy-version/src.main.java.org.openscience.smsd.algorithm.matchers.AtomBondMatcher.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "34a52ee47a5b53cd87b9a310af1e1cc478bc0a55", "Url": "https://api.github.com/repos/asad/ReactionDecoder", "Date": "2018-11-06T10:44:58Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mCurrentRingTone.first) != null) { mListener.OnRingtoneSelected(mCurrentRingTone.first, mCurrentRingTone.second); }else { dialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4098/buggy-version/ringtonepicker.src.main.java.com.kevalpatel.ringtonepicker.RingtonePickerDialog.java", "BodyUseAPI": ["com.kevalpatel.ringtonepicker.RingtonePickerListener.OnRingtoneSelected(mCurrentRingTone.first,mCurrentRingTone.second)"], "Fixed commit": "208f6312ed1c2f9d3b5cedef7b7abc2c490df28c", "Url": "https://api.github.com/repos/davcpas1234/android-ringtone-picker", "Date": "2018-11-20T00:18:28Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((java.lang.Integer.parseInt(args[i])) > 0) && ((java.lang.Integer.parseInt(args[i])) <= 40)) numbers[i] = java.lang.Integer.parseInt(args[i]); else serverTextChannel.sendMessage(((args[i]) + \" is an invalid number. Numbers must be greater than zero and less than or equal to 40\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3861/buggy-version/src.main.java.com.mazawrath.beanbot.commands.beanlottery.BeanLotteryCommand.java", "BodyUseAPI": ["org.javacord.api.entity.channel.ServerTextChannel.sendMessage(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "17a4aa42f576fdb598b08abda148a8632dd73e41", "Url": "https://api.github.com/repos/Mazawrath/beanBOT", "Date": "2018-12-06T02:00:12Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((xDiff == 0) && (yDiff == 0)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2117/buggy-version/core.src.com.ld43.game.math.MathUtils.java", "BodyUseAPI": [], "Fixed commit": "56547a1e97ae3b2bb3cd92c95d9d0e86d922b030", "Url": "https://api.github.com/repos/JGShaw/ld43", "Date": "2018-12-01T21:53:36Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (y1 > (engine.getHeight())) yDiff = y1 - (engine.getHeight());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4327/buggy-version/src.main.java.coffeecatteam.theultimatetile.gfx.ui.button.UIButton.java", "BodyUseAPI": ["coffeecatteam.theultimatetile.Engine.getHeight()"], "Fixed commit": "554ca51486ec9da9cc679610d35c91588b77c7a2", "Url": "https://api.github.com/repos/CoffeeCatRailway/TheUltimateTile", "Date": "2018-12-15T09:39:16Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (x1 > (engine.getWidth())) xDiff = x1 - (engine.getWidth());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4327/buggy-version/src.main.java.coffeecatteam.theultimatetile.gfx.ui.button.UIButton.java", "BodyUseAPI": ["coffeecatteam.theultimatetile.Engine.getWidth()"], "Fixed commit": "554ca51486ec9da9cc679610d35c91588b77c7a2", "Url": "https://api.github.com/repos/CoffeeCatRailway/TheUltimateTile", "Date": "2018-12-15T09:39:16Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((plainSelect.getWhere()) != null) { plainSelect.getWhere().accept(ufVisitor); unionFind = ufVisitor.getUnionFind(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7069/buggy-version/src.main.java.PlanBuilder.LogicalPlanBuilder.java", "BodyUseAPI": ["net.sf.jsqlparser.statement.select.PlainSelect.getWhere()", "plainSelect.getWhere().accept(util.UnionFindExpressionVisitor)"], "Fixed commit": "dba71503e297e85f4d4ca6cb7ba93a9d94292b1a", "Url": "https://api.github.com/repos/fseldow/SQL_Interpreter", "Date": "2018-11-26T01:04:44Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.spring.springboot.dao.TeamDao.selectByPrimaryKey(cycleTeam.getTeamId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (team == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8061/buggy-version/src.main.java.org.spring.springboot.service.impl.SampleService.java", "BodyUseAPI": [], "Fixed commit": "a97248bca3c248a4b478c10cbf8e22c813788ec5", "Url": "https://api.github.com/repos/MezereonXP/springboot-mybatis", "Date": "2018-11-06T10:04:40Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (normal == null) { normal = role.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6676/buggy-version/src.main.java.io.github.jroy.happybot.commands.RoleInfoCommand.java", "BodyUseAPI": [], "Fixed commit": "2c249bab478d3cb07fe92d113334807bc4a73eac", "Url": "https://api.github.com/repos/JRoy/happybot", "Date": "2018-12-01T20:09:31Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new net.dv8tion.jda.core.EmbedBuilder().setTitle(normal).setFooter((\"ID: \" + (role.getId())), null).setColor(io.github.jroy.happybot.util.C.randomColour())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((embed.getFields().size()) == 0) { embed.setDescription(\"This role has no themed names.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6676/buggy-version/src.main.java.io.github.jroy.happybot.commands.RoleInfoCommand.java", "BodyUseAPI": ["net.dv8tion.jda.core.EmbedBuilder.setDescription(java.lang.String)"], "Fixed commit": "2c249bab478d3cb07fe92d113334807bc4a73eac", "Url": "https://api.github.com/repos/JRoy/happybot", "Date": "2018-12-01T20:09:31Z"},
{"Line": "=>1895", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["canto.runtime.NameNode.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((!(refName.hasArguments())) && (argArgs != null)) { while (numUnpushes > 0) { repush(); numUnpushes--; } data = argDef.instantiate(argArgs, indexes, this); }else { boolean inContainer = argInstance.isContainerParameter(resolutionContext); data = resolutionContext.getParameterInstance(refName, argInstance.isParamChild, inContainer); if (argDef != null) { java.lang.String key = argInstance.getName(); putData(argDef, argArgs, argDef, argArgs, indexes, key, data, null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3194/buggy-version/src.canto.runtime.Context.java", "BodyUseAPI": ["canto.runtime.Context.getParameterInstance(canto.runtime.NameNode,argInstance.isParamChild,boolean)", "canto.runtime.Context.putData(canto.runtime.Definition,canto.runtime.ArgumentList,canto.runtime.Definition,canto.runtime.ArgumentList,java.util.List<canto.runtime.Index>,java.lang.String,java.lang.Object,<nulltype>)", "canto.runtime.Definition.instantiate(canto.runtime.ArgumentList,java.util.List<canto.runtime.Index>,canto.runtime.Context)"], "Fixed commit": "4e64059ab27081e367ddab1c29f8a583f1bc8ed7", "Url": "https://api.github.com/repos/CantoLang/canto", "Date": "2018-12-18T20:14:31Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getName().equals(\"C\")) && (task.equals(\"A1\"))) { java.lang.System.out.println(\"checking\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2334/buggy-version/src.extraction.Task.java", "BodyUseAPI": [], "Fixed commit": "147886e0d4790e2db1989ab155dbcb617a6aab43", "Url": "https://api.github.com/repos/wang-rujia/Extraction", "Date": "2018-12-06T10:25:03Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parts.size()) > (java.math.BigInteger.ONE.intValue())) { java.lang.String domain = parts.getLast(); log.info(\"Ldap domain @{} for user {}\", domain, principal); java.util.Optional<org.springframework.security.authentication.AuthenticationProvider> providerOpt = providerBuilder.build(domain); if (providerOpt.isPresent()) { provider = providerOpt.get(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9425/buggy-version/src.main.java.com.icthh.xm.uaa.security.UaaAuthenticationProvider.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.String>.getLast()"], "Fixed commit": "c0d63ca88c73edd7cd4f24ce60c407ebb7545b7f", "Url": "https://api.github.com/repos/xm-online/xm-uaa", "Date": "2018-11-27T13:11:07Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ignoreModule) { be.vbgn.gradle.pluginupdates.dsl.internal.ModuleIgnoreSpec.LOGGER.debug(\"Ignore rule for module {}: module is ignored\", subject); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5569/buggy-version/src.main.java.be.vbgn.gradle.pluginupdates.dsl.internal.ModuleIgnoreSpec.java", "BodyUseAPI": [], "Fixed commit": "71243b5e21ba3d4df7c34ed2ea10a1bd6319f315", "Url": "https://api.github.com/repos/vierbergenlars/plugin-updates-gradle-plugin", "Date": "2018-11-07T19:45:45Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.vm.yti.codelist.common.dto.ExtensionDTO.getPrefLabel()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((prefLabel != null) && (!(prefLabel.isEmpty()))) { languages.addAll(prefLabel.keySet()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5633/buggy-version/src.main.java.fi.vm.yti.codelist.api.export.ExtensionExporter.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.addAll(java.util.Set<java.lang.String>)", "java.util.Map<java.lang.String, java.lang.String>.keySet()"], "Fixed commit": "2116b4fa1b57327d5be5ee63ed813a413a56083f", "Url": "https://api.github.com/repos/VRK-YTI/yti-codelist-public-api-service", "Date": "2018-11-19T09:53:13Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != balance) { if (null == (this.balance)) { this.balance = new java.util.concurrent.atomic.AtomicLong(); } this.balance.set(balance.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3932/buggy-version/src.main.java.com.home.transferapi.ws.model.Balance.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicLong.set(long)", "java.util.concurrent.atomic.AtomicLong.get()"], "Fixed commit": "1d724a400833a113681e06710dc4ed3e9ab9e840", "Url": "https://api.github.com/repos/GlebLitvinov/transferapi", "Date": "2018-11-02T20:41:57Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.coodex.concrete.jaxrs.ConcreteHelper.updatedMap(serviceContext.getSubjoin())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((map != null) && ((map.size()) > 0)) { for (java.lang.String key : map.keySet()) { builder = builder.header(key, map.get(key)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8282/buggy-version/20.service.support.concrete-support-jaxrs.src.main.java.org.coodex.concrete.jaxrs.AbstractJAXRSResource.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.keySet()", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "Response.ResponseBuilder.header(java.lang.String,java.lang.String)"], "Fixed commit": "e04b67d10e5949d24e99148f657843e17f040b50", "Url": "https://api.github.com/repos/coodex2016/concrete.coodex.org", "Date": "2018-11-08T09:56:30Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t > 5) { t = 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8094/buggy-version/src.delfinen.logic.Controller.java", "BodyUseAPI": [], "Fixed commit": "0f8359b06aa9b93296bcefa8c434edd08467c6e3", "Url": "https://api.github.com/repos/nbryn/SwimClubManagement", "Date": "2018-11-23T10:13:21Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nightMode != (android.support.v7.app.AppCompatDelegate.MODE_NIGHT_NO)) { com.zype.android.utils.Logger.d(\"Manually instantiating WebView to avoid night mode issue.\"); try { new android.webkit.WebView(getApplicationContext()); } catch (java.lang.Exception e) { com.zype.android.utils.Logger.e(\"Got exception while trying to instantiate WebView to avoid night mode issue. Ignoring problem.\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2662/buggy-version/app.src.main.java.com.zype.android.ZypeApp.java", "BodyUseAPI": [], "Fixed commit": "4b72d6c868517e6ddb1ed5e1ee8e9f91671a16ad", "Url": "https://api.github.com/repos/zype/zype-android", "Date": "2018-12-10T12:55:18Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.zype.android.ZypeConfiguration.getTheme(this).equals(ZypeConfiguration.THEME_DARK)) { nightMode = android.support.v7.app.AppCompatDelegate.MODE_NIGHT_YES; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2662/buggy-version/app.src.main.java.com.zype.android.ZypeApp.java", "BodyUseAPI": [], "Fixed commit": "4b72d6c868517e6ddb1ed5e1ee8e9f91671a16ad", "Url": "https://api.github.com/repos/zype/zype-android", "Date": "2018-12-10T12:55:18Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.access.persistence.repository.MdmsRepository.fetchRoleActionData(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (roleActions.containsKey(roleCode)) uris.addAll(roleActions.get(roleCode).getUris());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9838/buggy-version/core.egov-accesscontrol.src.main.java.org.egov.access.domain.service.ActionService.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.addAll(roleActions.get(roleCode).getUris())", "java.util.Map<java.lang.String, org.egov.access.domain.model.ActionContainer>.get(java.lang.String)", "roleActions.get(roleCode).getUris()"], "Fixed commit": "346ca75c35d9eb7b1cc00fd02c9c598135294415", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2018-12-03T04:59:10Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.access.persistence.repository.MdmsRepository.fetchRoleActionData(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (roleActions.containsKey(roleCode)) regexUris.addAll(roleActions.get(roleCode).getRegexUris());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9838/buggy-version/core.egov-accesscontrol.src.main.java.org.egov.access.domain.service.ActionService.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(roleActions.get(roleCode).getRegexUris())", "roleActions.get(roleCode).getRegexUris()", "java.util.Map<java.lang.String, org.egov.access.domain.model.ActionContainer>.get(java.lang.String)"], "Fixed commit": "346ca75c35d9eb7b1cc00fd02c9c598135294415", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2018-12-03T04:59:10Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(parts[0].equals(\"\"))) { for (int i = 0; i < (parts.length); ++i) { list.add(parts[i]); } adapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2954/buggy-version/PDFShare.app.src.main.java.com.example.muratbuldu.pdfshare.ListToBeServed.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "267463abe8bf93c29f62a8f6eb83e9dad0391c6e", "Url": "https://api.github.com/repos/muratbuldu/pdfshare", "Date": "2018-11-29T11:16:06Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mManualList) != null) mManualList.setAdapter(new com.alexa4.pseudozoo.activities_package.ManualFragment.ManualListAdapter(mManualItemsList));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2267/buggy-version/app.src.main.java.com.alexa4.pseudozoo.activities_package.ManualFragment.java", "BodyUseAPI": [], "Fixed commit": "f8ddfa081ed2449ad6538cba49a63bea152cc744", "Url": "https://api.github.com/repos/Alex-A4/AndroidZoo", "Date": "2018-11-02T16:43:52Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((com.alexa4.pseudozoo.user_data.ManualItemStore.getStore().getItems()) != null) && ((mManualList.getAdapter()) == null)) mManualList.setAdapter(new com.alexa4.pseudozoo.activities_package.ManualFragment.ManualListAdapter(mManualItemsList));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2267/buggy-version/app.src.main.java.com.alexa4.pseudozoo.activities_package.ManualFragment.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.setAdapter(com.alexa4.pseudozoo.activities_package.ManualFragment.ManualListAdapter)"], "Fixed commit": "f8ddfa081ed2449ad6538cba49a63bea152cc744", "Url": "https://api.github.com/repos/Alex-A4/AndroidZoo", "Date": "2018-11-02T16:43:52Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((l.length()) == (solution.getDecoded().length())) { int[] freqIn = org.aion.decryption.Scrambler.toFreq(l); if (org.aion.decryption.Scrambler.matches(freq, freqIn)) { java.lang.System.out.println(l); codewords.add(new org.aion.decryption.Solution().withEncoded(solution.getEncoded()).withDecoded(solution.getDecoded()).withCodeword(l)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8358/buggy-version/src.main.java.org.aion.decryption.Scrambler.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "org.aion.decryption.Solution.getEncoded()", "org.aion.decryption.Scrambler.toFreq(java.lang.String)", "new org.aion.decryption.Solution().withEncoded(solution.getEncoded()).withDecoded(solution.getDecoded()).withCodeword(java.lang.String)", "new org.aion.decryption.Solution().withEncoded(solution.getEncoded()).withDecoded(solution.getDecoded())", "org.aion.decryption.Solution.withEncoded(solution.getEncoded())", "java.util.List<org.aion.decryption.Solution>.add(new org.aion.decryption.Solution().withEncoded(solution.getEncoded()).withDecoded(solution.getDecoded()).withCodeword(l))", "org.aion.decryption.Solution.getDecoded()"], "Fixed commit": "c399dbecc95b692e6009f4240fe1bf0765971e1d", "Url": "https://api.github.com/repos/shplamana/FO76-Launch-Code-Cracker", "Date": "2018-11-19T20:09:20Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.startTime.compareTo(that.startTime)) < 0) && ((this.endTime.compareTo(that.endTime)) > 0)) { return true; }else if ((this.startTime.equals(that.startTime)) || (this.endTime.equals(that.endTime))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/672/buggy-version/hotelApp.TimeInterval.java", "BodyUseAPI": ["java.time.LocalDate.equals(java.time.LocalDate)", "java.time.LocalDate.equals(java.time.LocalDate)"], "Fixed commit": "e9bf08208c5ffc23d398953cacdfea7a9668e05b", "Url": "https://api.github.com/repos/LetTheBassKick/CS151-HotelReservation", "Date": "2018-12-09T04:40:12Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.kleditzsch.SmartHome.model.movie.editor.DiscEditor.createAndLoad()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((de.getData().size()) > 0) { int nextLevel = (de.getData().stream().mapToInt(Disc::getOrderId).summaryStatistics().getMax()) + 1; nextLevel = (nextLevel >= 0) ? nextLevel : 0; disc.setOrderId(nextLevel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2281/buggy-version/src.main.java.net.kleditzsch.SmartHome.view.movie.admin.disc.MovieDiscFormServlet.java", "BodyUseAPI": ["de.getData().stream().mapToInt(Disc::getOrderId).summaryStatistics().getMax()", "de.getData().stream().mapToInt(Disc::getOrderId).summaryStatistics()", "de.getData().stream().mapToInt(Disc::getOrderId)", "de.getData().stream()", "net.kleditzsch.SmartHome.model.movie.editor.DiscEditor.getData()"], "Fixed commit": "a581d03e997e04eac0a217064e99a883dfd9b540", "Url": "https://api.github.com/repos/agent4788/SmartHome", "Date": "2018-12-20T07:10:26Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getDeclaredField(name)) != null) { field = c.getDeclaredField(name); me.bradleysteele.commons.util.reflect.Reflection.setAccessible(field, true); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9234/buggy-version/src.main.java.me.bradleysteele.commons.util.reflect.Reflection.java", "BodyUseAPI": ["java.lang.Class<?>.getDeclaredField(java.lang.String)"], "Fixed commit": "bda3b5b3cce359acdf161c8a975f9a91aedba053", "Url": "https://api.github.com/repos/BradleySteele/BCommons", "Date": "2018-11-06T22:06:06Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((debug) > 0) { if ((debug) >= 2) { o.getBoundingBox().render(g); } if ((debug) >= 3) { drawObjectDebugInfo(g, o); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6164/buggy-version/src.main.java.fr.snapgames.bgf.core.gfx.Render.java", "BodyUseAPI": [], "Fixed commit": "176dd06b79927bf16b03161d2dedf06568363cc7", "Url": "https://api.github.com/repos/SnapGames/basic-game-framework", "Date": "2018-12-24T14:15:52Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (idx >= 0) { ifname = iname.substring(0, idx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2864/buggy-version/org.osate.aadlv3.src.org.osate.aadlv3.util.Av3API.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "4c2a1ec60aecd50ec0217f4446b6a6c91869f384", "Url": "https://api.github.com/repos/saeaadl/AadlV3Prototype", "Date": "2018-11-29T19:58:48Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ver.equals(\"_\")) { java.lang.System.out.println(\"Pobieram client dla gracza...\"); }else if (ver.equals(\"admin_\")) { java.lang.System.out.println(\"Pobieram client dla admina...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4982/buggy-version/src.me.kazu.betacraftlaunucher.Launcher.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "5f8e43feac0d87d8a8743aedb7b7cdc8cb802d69", "Url": "https://api.github.com/repos/KazuGod/BetaCraft-Launcher-Java", "Date": "2018-11-18T15:11:22Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!clearError) { error = c4document.getError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7416/buggy-version/shared.src.main.java.com.couchbase.lite.AbstractReplicator.java", "BodyUseAPI": [], "Fixed commit": "dbd1dced474332114ea39f751e0e33109b67aa51", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-android", "Date": "2018-12-21T07:08:32Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["theme.getValue().getThemeRoleData().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (name != null) { names.put(theme.getKey(), name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5952/buggy-version/src.main.java.io.github.jroy.happybot.theme.DiscordThemerImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(theme.getKey(),java.lang.String)"], "Fixed commit": "e001a93f0d3589f303861762a6b065c94c05ed43", "Url": "https://api.github.com/repos/JRoy/happybot", "Date": "2018-12-01T20:11:46Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getEvaluationTypes().contains(evaluationType))) throw new model.domain.DomainException(\"This is not a recognized feedback type\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3115/buggy-version/src.model.domain.Facade.java", "BodyUseAPI": [], "Fixed commit": "6385edf3762162cfbd6720d206aba4bf34fee3c3", "Url": "https://api.github.com/repos/steven-zegers/OOO_projects", "Date": "2018-12-23T21:43:10Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.silicolife.textmining.processes.ie.ner.linnaeus.adapt.martin.common.Pair<java.lang.Integer>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((p.getX()) > (text.length())) || (((p.getX()) + (terms[fm].length())) > (text.length()))) { java.lang.System.out.println((\"ERROR : \" + docid)); java.lang.System.out.println((\"ERROR : \" + text)); java.lang.System.out.println(((((\"ERROR : \" + (p.getX())) + \"-\") + (p.getX())) + (terms[fm].length()))); java.lang.System.out.println((\"ERROR : \" + (terms[fm]))); }else { java.lang.String term = (ignoreCase) ? text.substring(p.getX(), ((p.getX()) + (terms[fm].length()))) : terms[fm]; com.silicolife.textmining.processes.ie.ner.linnaeus.adapt.uk.ac.man.entitytagger.Mention m = new com.silicolife.textmining.processes.ie.ner.linnaeus.adapt.uk.ac.man.entitytagger.Mention(termToIdsMap[fm].clone(), p.getX(), ((p.getX()) + (term.length())), term); m.setDocid(docid); matches.add(m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4071/buggy-version/src.main.java.com.silicolife.textmining.processes.ie.ner.linnaeus.adapt.uk.ac.man.entitytagger.matching.matchers.VariantDictionaryMatcher.java", "BodyUseAPI": ["com.silicolife.textmining.processes.ie.ner.linnaeus.adapt.martin.common.Pair<java.lang.Integer>.getX()", "com.silicolife.textmining.processes.ie.ner.linnaeus.adapt.martin.common.Pair<java.lang.Integer>.getX()", "java.lang.String.substring(p.getX(),((p.getX()) + (terms[fm].length())))", "com.silicolife.textmining.processes.ie.ner.linnaeus.adapt.martin.common.Pair<java.lang.Integer>.getX()", "com.silicolife.textmining.processes.ie.ner.linnaeus.adapt.martin.common.Pair<java.lang.Integer>.getX()", "java.io.PrintStream.println(((((\"ERROR : \" + (p.getX())) + \"-\") + (p.getX())) + (terms[fm].length())))", "java.io.PrintStream.println(java.lang.String)", "java.lang.String[].clone()", "java.lang.String.length()", "java.io.PrintStream.println(java.lang.String)", "java.lang.String.length()", "com.silicolife.textmining.processes.ie.ner.linnaeus.adapt.martin.common.Pair<java.lang.Integer>.getX()", "com.silicolife.textmining.processes.ie.ner.linnaeus.adapt.martin.common.Pair<java.lang.Integer>.getX()"], "Fixed commit": "e8e02be454b76ac8765131307a74146ddbda2e6f", "Url": "https://api.github.com/repos/biotextmining/processes", "Date": "2018-11-08T12:16:34Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p != (owner)) { p.message(((((((\"paid \" + (getRent())) + \" as rent to \") + (owner.getName())) + \" for landing on \") + (name)) + \"!\")); owner.DepositToAccount(p.WithdrawFromAccount(getRent())); }else { p.message(((\"Owns \" + (name)) + \" take a rest and enjoy a cup of coffee\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8950/buggy-version/src.Entities.Lot.java", "BodyUseAPI": ["Entities.Player.WithdrawFromAccount(double)", "Entities.Player.message(((\"Owns \" + (name)) + \" take a rest and enjoy a cup of coffee\"))", "Entities.Player.message(((((((\"paid \" + (getRent())) + \" as rent to \") + (owner.getName())) + \" for landing on \") + (name)) + \"!\"))", "Entities.Player.DepositToAccount(p.WithdrawFromAccount(getRent()))"], "Fixed commit": "90a0b5c4d4e384de89d5e34c97da7d74f382ab36", "Url": "https://api.github.com/repos/JensOAndersen/MatadorJava", "Date": "2018-11-14T18:24:45Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((areas) != null) for (int i = 0; i < (areas.size()); i++) { if (areas.get(i).getId().equals(id)) { return i; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2342/buggy-version/app.src.main.java.com.brain_socket.dekanehstaff.activity.main.MainPresenter.java", "BodyUseAPI": [], "Fixed commit": "d063b948ee7d5a22bafd9616c2f8a6af4900098d", "Url": "https://api.github.com/repos/molhamstein/DekanehStaffAndroidApp", "Date": "2018-12-12T18:29:42Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((divide[1].length()) < floating) trailing = divide[1]; else trailing = divide[1].substring(0, floating);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5280/buggy-version/app.src.main.java.foundation.icon.iconex.util.Utils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "0513fb79f55f23ee907608edad0bedcfea5c969e", "Url": "https://api.github.com/repos/icon-project/iconex_android", "Date": "2018-11-06T07:51:14Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (docStruct instanceof org.kitodo.helper.metadata.LegacyInnerPhysicalDocStructHelper) { this.legacyInnerPhysicalDocStructHelper = ((org.kitodo.helper.metadata.LegacyInnerPhysicalDocStructHelper) (docStruct)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7010/buggy-version/Kitodo.src.main.java.org.kitodo.helper.metadata.LegacyMetadataHelper.java", "BodyUseAPI": [], "Fixed commit": "77a775b53e9ca48b48e3c4ac005cfc23bfb9b35b", "Url": "https://api.github.com/repos/matthias-ronge/kitodo-production", "Date": "2018-12-11T11:38:37Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b instanceof edu.iris.dmc.seed.control.station.B050) { record = edu.iris.dmc.seed.RecordFactory.create(recordLength, ((record.getSequence()) + 1), 'S', false); this.records.put(record.getSequence(), record); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6041/buggy-version/src.main.java.edu.iris.dmc.seed.Volume.java", "BodyUseAPI": [], "Fixed commit": "39d92a9bd868299f36aac267e44c4510db7a807b", "Url": "https://api.github.com/repos/yazan-iris/java-4-seed", "Date": "2018-12-12T18:59:41Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.last.getTime()) != end) { this.data.add(new eu.quanticol.moonlight.signal.Sample<T>(end, this.last.value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5420/buggy-version/eu.quanticol.moonlight.core.src.main.java.eu.quanticol.moonlight.signal.Signal.java", "BodyUseAPI": ["java.util.LinkedList<eu.quanticol.moonlight.signal.Sample<T>>.add(eu.quanticol.moonlight.signal.Sample<T>)"], "Fixed commit": "31d65f038d4fee31ea978d2404529b932eb976e7", "Url": "https://api.github.com/repos/Quanticol/MoonLight", "Date": "2018-11-15T14:32:37Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isValidCaseData(ccdRequest))) { return new org.springframework.http.ResponseEntity(\"Missing case data from CCD request.\", org.springframework.http.HttpStatus.BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8245/buggy-version/src.main.java.uk.gov.hmcts.reform.finrem.caseorchestration.controllers.FeePaymentController.java", "BodyUseAPI": [], "Fixed commit": "0a18d7ffd3a5c7f7a526978a9e13114f60332cae", "Url": "https://api.github.com/repos/hmcts/finrem-case-orchestration-service", "Date": "2018-11-19T11:45:28Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((form.mytype) == (org.flasck.flas.vcode.hsieForm.HSIEForm.CodeType.EVENT)) sb.append((\"this._card.\" + (cm.var))); else throw new org.zinutils.exceptions.UtilException(((\"Can't handle \" + (form.mytype)) + \" for card member\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1655/buggy-version/src.main.java.org.flasck.flas.jsform.JSPushArgument.java", "BodyUseAPI": [], "Fixed commit": "22515787b3aa036b5a6595c8783700de6ade6438", "Url": "https://api.github.com/repos/zinikiGareth/flasckfl", "Date": "2018-11-29T00:07:57Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (x >= 0) { Front.font.drawCharacter(g, x, y, c, rgb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4615/buggy-version/src.main.java.freditor.FreditorUI.java", "BodyUseAPI": ["Front.font.drawCharacter(java.awt.Graphics,int,int,char,int)"], "Fixed commit": "7b3517a32ae4adf5e06b082f8f1f31c0c213f549", "Url": "https://api.github.com/repos/fredoverflow/freditor", "Date": "2018-12-08T23:28:56Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fsWriter.requiresCleanupOfRecoverableState()) { fsWriter.cleanupRecoverableState(resumable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2575/buggy-version/flink-streaming-java.src.main.java.org.apache.flink.streaming.api.functions.sink.filesystem.Bucket.java", "BodyUseAPI": ["org.apache.flink.core.fs.RecoverableWriter.cleanupRecoverableState(org.apache.flink.core.fs.RecoverableWriter.ResumeRecoverable)"], "Fixed commit": "29d44852b8653afbe605d7da6d2ac6d3381974ec", "Url": "https://api.github.com/repos/kl0u/flink", "Date": "2018-12-04T09:51:58Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client) != null) client.write();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4748/buggy-version/src.main.java.pfrommer.necro.game.App.java", "BodyUseAPI": [], "Fixed commit": "4485f00298dadee9d56b9bff70f5073202a913dc", "Url": "https://api.github.com/repos/pfrommerd/necromance", "Date": "2018-12-06T07:36:37Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client) != null) client.read();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4748/buggy-version/src.main.java.pfrommer.necro.game.App.java", "BodyUseAPI": [], "Fixed commit": "4485f00298dadee9d56b9bff70f5073202a913dc", "Url": "https://api.github.com/repos/pfrommerd/necromance", "Date": "2018-12-06T07:36:37Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dbInvoiceItem.getBusinessItem()) != null) { com.rns.web.billapp.service.bo.domain.BillItem parentItem = new com.rns.web.billapp.service.bo.domain.BillItem(); if (((dbInvoiceItem.getBusinessItem()) != null) && ((dbInvoiceItem.getBusinessItem().getParent()) != null)) { beanUtils.copyProperties(parentItem, dbInvoiceItem.getBusinessItem().getParent()); }else { beanUtils.copyProperties(parentItem, dbInvoiceItem.getBusinessItem()); } invoiceItem.setParentItem(parentItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9063/buggy-version/code.billapp-service.src.main.java.com.rns.web.billapp.service.util.BillDataConverter.java", "BodyUseAPI": ["com.rns.web.billapp.service.dao.domain.BillDBItemInvoice.getBusinessItem()", "com.rns.web.billapp.service.dao.domain.BillDBItemInvoice.getBusinessItem()", "dbInvoiceItem.getBusinessItem().getParent()", "dbInvoiceItem.getBusinessItem().getParent()", "com.rns.web.billapp.service.util.NullAwareBeanUtils.copyProperties(com.rns.web.billapp.service.bo.domain.BillItem,dbInvoiceItem.getBusinessItem().getParent())", "com.rns.web.billapp.service.util.NullAwareBeanUtils.copyProperties(com.rns.web.billapp.service.bo.domain.BillItem,dbInvoiceItem.getBusinessItem())", "com.rns.web.billapp.service.dao.domain.BillDBItemInvoice.getBusinessItem()", "com.rns.web.billapp.service.dao.domain.BillDBItemInvoice.getBusinessItem()"], "Fixed commit": "f2df275b5410721ede462014a70938b1199fac85", "Url": "https://api.github.com/repos/ajaxkulkarni/bill-service", "Date": "2018-11-21T15:02:00Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.colostate.cs.cs414.method_men.jungle.client.Board.getTile(currPiece.getLocation())", "java.util.ArrayList<edu.colostate.cs.cs414.method_men.jungle.client.Piece>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pieceTile.getPiece().equals(currPiece)) { pieceTile.setPiece(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9622/buggy-version/src.main.edu.colostate.cs.cs414.method_men.jungle.client.GameState.java", "BodyUseAPI": ["edu.colostate.cs.cs414.method_men.jungle.client.tile.Tile.setPiece(<nulltype>)"], "Fixed commit": "9f769981758eb932431fbefe4d7f441b072f3a7b", "Url": "https://api.github.com/repos/marcelaf7/cs414-f18-001-Method-Men", "Date": "2018-12-06T02:34:38Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value > (mValue)) { return mRight.contains(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9738/buggy-version/src.main.java.ca.ubc.ece.cpen221.mp3.avltree.AvlTreeSet.java", "BodyUseAPI": ["ca.ubc.ece.cpen221.mp3.avltree.AvlTreeSet.Node.contains(int)"], "Fixed commit": "5e57dd2cde361456f8310016be2e5c5ca30b207c", "Url": "https://api.github.com/repos/alistairbryan/mp3-v2", "Date": "2018-11-11T18:59:27Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (size > 0) { array = new int[size]; }else { throw new java.lang.RuntimeException(\"Invalid size\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8975/buggy-version/src.main.java.com.hany.tutorials.datastructures.arraylist.ArrayList.java", "BodyUseAPI": [], "Fixed commit": "d420f15ea5b200e226e037ebb00a51ce64401c1d", "Url": "https://api.github.com/repos/hanmanthreddygurrala/tutorials", "Date": "2018-12-24T04:29:25Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args[4].equals(\"key\")) { WordSearch x = new WordSearch(rows, cols, file, seed, true); java.lang.System.out.println(x.toString()); }else { WordSearch x = new WordSearch(rows, cols, file, seed, false); java.lang.System.out.println(x.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6627/buggy-version/WordSearch.java", "BodyUseAPI": [], "Fixed commit": "0f8d9593348a766057815841726f45e27ef4c3f4", "Url": "https://api.github.com/repos/bshpetner00/MKS21X-WordSearch", "Date": "2018-11-19T12:58:58Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inhalt.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3699/buggy-version/src.main.java.de.utils.MailUtils.java", "BodyUseAPI": [], "Fixed commit": "3664f11c45f73eba919c2ec078ac0c64d44cd6dc", "Url": "https://api.github.com/repos/LairdFlo/flyScanner", "Date": "2018-12-21T23:32:57Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((called.size()) >= 3) called.remove(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3845/buggy-version/android.src.main.java.com.imagepicker.ResponseHelper.java", "BodyUseAPI": ["com.imagepicker.ArrayList<com.facebook.react.bridge.Callback>.remove(int)"], "Fixed commit": "bad23aeb5907a2c0da4862c4167a16e2b6279e4e", "Url": "https://api.github.com/repos/dcmdestello/react-native-image-picker", "Date": "2018-11-21T17:38:42Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (called.contains(callback)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3845/buggy-version/android.src.main.java.com.imagepicker.ResponseHelper.java", "BodyUseAPI": [], "Fixed commit": "bad23aeb5907a2c0da4862c4167a16e2b6279e4e", "Url": "https://api.github.com/repos/dcmdestello/react-native-image-picker", "Date": "2018-11-21T17:38:42Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pathString.startsWith(\"gs://\")) && (!(pathString.endsWith(\"/\")))) { pathToDatasources = org.broadinstitute.hellbender.utils.io.IOUtils.getPath((pathString + '/')); }else { pathToDatasources = org.broadinstitute.hellbender.utils.io.IOUtils.getPath(pathString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8193/buggy-version/src.main.java.org.broadinstitute.hellbender.tools.funcotator.dataSources.DataSourceUtils.java", "BodyUseAPI": ["org.broadinstitute.hellbender.utils.io.IOUtils.getPath(java.lang.String)", "org.broadinstitute.hellbender.utils.io.IOUtils.getPath(java.lang.String)"], "Fixed commit": "97ed54414ce0a243a8705394f59c697eb02c6c74", "Url": "https://api.github.com/repos/broadinstitute/gatk", "Date": "2018-12-11T01:07:44Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, java.util.Map<java.lang.String, org.jboss.windup.reporting.rules.generation.techreport.TechReportService.TechUsageStatSum>>.get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (statMap != null) { statMap.keySet().forEach(( statKey) -> { if (interimStatKeys.contains(statKey)) { interimStatMap.get(statKey).count += statMap.get(statKey).count; }else { interimStatMap.put(statKey, statMap.get(statKey)); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6871/buggy-version/reporting.impl.src.main.java.org.jboss.windup.reporting.rules.generation.techreport.TechReportService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.jboss.windup.reporting.rules.generation.techreport.TechReportService.TechUsageStatSum>.keySet()", "java.util.Set<java.lang.String>.forEach(java.util.function.Consumer<? super java.lang.String>)", "java.util.Map<java.lang.String, org.jboss.windup.reporting.rules.generation.techreport.TechReportService.TechUsageStatSum>.get(java.lang.String)", "java.util.Map<java.lang.String, org.jboss.windup.reporting.rules.generation.techreport.TechReportService.TechUsageStatSum>.put(java.lang.String,org.jboss.windup.reporting.rules.generation.techreport.TechReportService.TechUsageStatSum)", "java.util.Map<java.lang.String, org.jboss.windup.reporting.rules.generation.techreport.TechReportService.TechUsageStatSum>.get(java.lang.String)"], "Fixed commit": "3f3900febca694b5f3f5f32a8af50c55bb7a2bb1", "Url": "https://api.github.com/repos/m-brophy/windup", "Date": "2018-11-26T11:06:02Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(obj instanceof com.carpool.jambee.mongodb.model.UserData)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3033/buggy-version/src.main.java.com.carpool.jambee.mongodb.model.UserData.java", "BodyUseAPI": [], "Fixed commit": "1b81dbc12ab3f21943cd6acfe72e0d87d9cc240a", "Url": "https://api.github.com/repos/JamBSquared/Carpool", "Date": "2018-11-26T07:18:23Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ListView.getFirstVisiblePosition()", "android.widget.ListView.getLastVisiblePosition()", "app.andrey_voroshkov.chorus_laptimer.AppState.getInstance().deviceStates.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((firstVisibleItemPos > lastVisibleItemPos) || (firstVisibleItemPos < 0)) || (lastVisibleItemPos > (count - 1))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4789/buggy-version/Android.ChorusRFLaptimer.app.src.main.java.app.andrey_voroshkov.chorus_laptimer.PilotsSetupFragment.java", "BodyUseAPI": [], "Fixed commit": "7f96d9d6933e49d06bdbcc5a088229faa107dde2", "Url": "https://api.github.com/repos/voroshkov/Chorus-RF-Laptimer", "Date": "2018-11-21T19:40:04Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.report.ReportService.getReportServiceInstance().printContract(models.entity.Contract,java.lang.String,javax.servlet.http.HttpServletResponse)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(message.equals(\"\"))) { response.setContentType(\"application/json\"); response.getWriter().append(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7838/buggy-version/src.controlers.bid.BidController.java", "BodyUseAPI": ["response.getWriter().append(java.lang.String)"], "Fixed commit": "d83b5aab5ea348c1b2705452f50213db68ee1ac5", "Url": "https://api.github.com/repos/ShamithaSIlva/OnlineStockAuction", "Date": "2018-11-28T09:17:44Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.shatteredpixel.shatteredpixeldungeon.actors.Actor.all.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2702/buggy-version/core.src.main.java.com.shatteredpixel.shatteredpixeldungeon.actors.Actor.java", "BodyUseAPI": [], "Fixed commit": "f840e5b2f03b0f4768d148ddb889eff7e29a223a", "Url": "https://api.github.com/repos/Zrp200/lustrous-pixel-dungeon", "Date": "2018-12-21T07:50:16Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getState()) != (org.bukkit.event.player.PlayerFishEvent.State.CAUGHT_FISH)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8216/buggy-version/src.main.java.de.iani.cubequest.quests.FishingQuest.java", "BodyUseAPI": [], "Fixed commit": "77a8db0763727c62395b3b542945ccd8dd1d7a74", "Url": "https://api.github.com/repos/Brokkonaut/CubeQuest", "Date": "2018-12-28T21:09:39Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edu.iastate.structured.core.Structured.map_subgraphs.get(n).size()) < 2) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/729/buggy-version/edu.iastate.structured.src.edu.iastate.structured.core.Structured.java", "BodyUseAPI": [], "Fixed commit": "f426b3390855d3fb1857b17704ee255ec081ddb1", "Url": "https://api.github.com/repos/lezhangisu/structured-program-toolbox", "Date": "2018-12-28T01:46:03Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(textOfImage.isEmpty())) { retrieveTextFromImage.setText(textOfImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3441/buggy-version/app.src.main.java.ch.hes.it.higiv.Travel.TravelCreateFragment.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "e1e78b1cdfae27475da5f656e1b18f2fb98c8995", "Url": "https://api.github.com/repos/Idylx/Higiv-Android-App", "Date": "2018-12-20T08:18:41Z"},
{"Line": "=>3", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x > ((ary.length) - 1)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6930/buggy-version/ArrayMethods.java", "BodyUseAPI": [], "Fixed commit": "fc166d913b2f0e2c1a36dbea440afa46100ee2f8", "Url": "https://api.github.com/repos/jacksonzou123/MKS21X-2darraymethods", "Date": "2018-11-07T00:33:13Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((intervalsToHide.size()) == 0) || ((intervalsToHide.getLast()) < (token.getStartOffset()))) { intervalsToHide.add(token.getStartOffset()); intervalsToHide.add(token.getEndOffset()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1015/buggy-version/app.src.main.java.talkapp.org.talkappmobile.activity.presenter.PracticeWordSetViewHideNewWordOnlyStrategy.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.Integer>.add(token.getEndOffset())", "java.util.LinkedList<java.lang.Integer>.add(token.getStartOffset())", "talkapp.org.talkappmobile.model.TextToken.getEndOffset()", "talkapp.org.talkappmobile.model.TextToken.getStartOffset()"], "Fixed commit": "41da756d07fca28df83fc1b50a87d805d7f19bde", "Url": "https://api.github.com/repos/aliaksandr-budnikau/TalkappMobile", "Date": "2018-11-15T06:37:12Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9223/buggy-version/src.main.java.de.nikos410.discordbot.util.CommandUtils.java", "BodyUseAPI": [], "Fixed commit": "4024b72b3b0ddff80968e8e4aee13c0213fb0724", "Url": "https://api.github.com/repos/DACH-Discord/de-DiscordBot", "Date": "2018-12-10T22:18:55Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dzeru.cheeringcactus.services.UserService.loadUserByUsername(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) { com.dzeru.cheeringcactus.services.AuthProvider.logger.error((\"Try to log in with wrong uuid = \" + uuid)); throw new org.springframework.security.authentication.BadCredentialsException(\"Try to log in with wrong uuid\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6494/buggy-version/src.main.java.com.dzeru.cheeringcactus.services.AuthProvider.java", "BodyUseAPI": [], "Fixed commit": "ca420788f09e0a488b650837569bd715bbd54984", "Url": "https://api.github.com/repos/Dzeru/cheering-cactus", "Date": "2018-12-30T16:03:49Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mGame.getPlayerCount()) == (mGame.getMaxPlayers())) { android.util.Log.d(com.obfuscation.ttr_phase1b.activity.LobbyFragment.TAG, \"Now starting\"); ismLeaving = false; ismStarting = true; model.ModelFacade.getInstance().startGame(mGame.getGameID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1309/buggy-version/app.src.main.java.com.obfuscation.ttr_phase1b.activity.LobbyFragment.java", "BodyUseAPI": ["model.ModelFacade.getInstance().startGame(mGame.getGameID())", "communication.LobbyGame.getGameID()"], "Fixed commit": "d7c85bd27686454744bc9e55c29f8a2d0f2c8956", "Url": "https://api.github.com/repos/SponJ2000/TTR_Phase1b", "Date": "2018-11-30T21:08:59Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((data == null) || (data.isEmpty())) return javax.ws.rs.core.Response.status(Response.Status.NOT_FOUND).entity((\"EFA error status: \" + (efaData.status.name()))).build();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2940/buggy-version/src.main.java.com.ems.publictransport.rest.DepartureController.java", "BodyUseAPI": [], "Fixed commit": "adb2eab938f306c33f022533f55c2a05aa72a87d", "Url": "https://api.github.com/repos/sbiermann/public-transport-web-api-javaee", "Date": "2018-11-17T19:45:17Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stationDepartures == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2940/buggy-version/src.main.java.com.ems.publictransport.rest.DepartureController.java", "BodyUseAPI": [], "Fixed commit": "adb2eab938f306c33f022533f55c2a05aa72a87d", "Url": "https://api.github.com/repos/sbiermann/public-transport-web-api-javaee", "Date": "2018-11-17T19:45:17Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openfact.client.OrganizationClient.createVoidedDocument(org.openfact.client.VoidedRepresentation,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((response.getStatus()) == 201) { rep = response.readEntity(org.openfact.client.DocumentResponseRepresentation.class); }else if ((response.getStatus()) == 200) { rep = new org.openfact.client.DocumentResponseRepresentation(); rep.setObservaciones(\"El envio de la baja del comprobante fue programado para su envio\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/175/buggy-version/src.main.java.org.openfact.client.OrganizationClient.java", "BodyUseAPI": ["javax.ws.rs.core.Response.readEntity(java.lang.Class)", "javax.ws.rs.core.Response.getStatus()"], "Fixed commit": "77913575e6c2128355c62b72363d57736efd8c56", "Url": "https://api.github.com/repos/openfact/openfact-java-client", "Date": "2018-11-17T16:34:17Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(n.equals(root))) { if ((n.rect.distanceSquaredTo(p)) > closestDistanceYet) return closestPointYet; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6094/buggy-version/Kd-Trees.KdTree.java", "BodyUseAPI": ["edu.princeton.cs.algs4.RectHV.distanceSquaredTo(edu.princeton.cs.algs4.Point2D)"], "Fixed commit": "6b9d8411fc5aad82b0eb7f2e4ec080835f3b9780", "Url": "https://api.github.com/repos/personalaccount/Algorithms-Part-1", "Date": "2018-12-25T05:12:46Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mEditTxtRefuelGals.getText().toString().isEmpty()) || (mEditTxtRefuelGalsPrice.getText().toString().isEmpty())) { toastMessage(\"You must enter a price and number of gallons.\"); }else { toastMessage(\"You successfully updated your gas.\"); mGalOfGas = java.lang.Double.valueOf(mEditTxtRefuelGals.getText().toString()); mEditTxtRefuelGals.setText(\"\"); mEditTxtRefuelGalsPrice.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8251/buggy-version/app.src.main.java.com.example.psusweng.carcompanion.CarMaintHighLevel.java", "BodyUseAPI": ["android.widget.EditText.getText()", "java.lang.Double.valueOf(mEditTxtRefuelGals.getText().toString())", "android.widget.EditText.setText(java.lang.String)", "android.widget.EditText.setText(java.lang.String)", "mEditTxtRefuelGals.getText().toString()"], "Fixed commit": "d7ecbd4c7e7c798e494615fea2a9eee09685976c", "Url": "https://api.github.com/repos/tud12552/CarCompanion", "Date": "2018-12-04T22:58:15Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (courseModel.getStudentUsernames().equals(\"temporal value\")) courseModel.setStudentUsernames(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8163/buggy-version/lesson-app.src.main.java.dk.aau.cs.ds302e18.app.controllers.CourseController.java", "BodyUseAPI": ["dk.aau.cs.ds302e18.app.controllers.CourseModel.setStudentUsernames(java.lang.String)"], "Fixed commit": "0511a9934bb3293e0128888ae3e88709ae6fdc2d", "Url": "https://api.github.com/repos/SW3-ds302e18-2018/DrivingSchoolApplication", "Date": "2018-12-03T10:16:21Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((courseModel.getCourseStartDate()) == temporaryDate) courseModel.setCourseStartDate(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8163/buggy-version/lesson-app.src.main.java.dk.aau.cs.ds302e18.app.controllers.CourseController.java", "BodyUseAPI": ["dk.aau.cs.ds302e18.app.controllers.CourseModel.setCourseStartDate(<nulltype>)"], "Fixed commit": "0511a9934bb3293e0128888ae3e88709ae6fdc2d", "Url": "https://api.github.com/repos/SW3-ds302e18-2018/DrivingSchoolApplication", "Date": "2018-12-03T10:16:21Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (indexOfFirstErrorInTrain > (-1)) { int trainLength = currentIndex - indexOfFirstErrorInTrain; resultLines.get(indexOfFirstErrorInTrain).setErrorTrainPostTrial(trainLength); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3851/buggy-version/Touchscreen-Analyser.src.TinaAnalysis.TinaPostProcessor.java", "BodyUseAPI": ["resultLines.get(indexOfFirstErrorInTrain).setErrorTrainPostTrial(int)", "java.util.ArrayList<TinaAnalysis.PostProcessedResult>.get(int)"], "Fixed commit": "809e22ae5fa445b8130ca4700e47d281b8eb30f8", "Url": "https://api.github.com/repos/carlosmayferral/TouchScreenAnalyzer", "Date": "2018-12-27T07:44:15Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((resultLines.get(currentIndex).getAnticipationError()) > 0) { indexOfFirstErrorInTrain = currentIndex; }else { resultLines.get(currentIndex).setErrorTrainPostTrial(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3851/buggy-version/Touchscreen-Analyser.src.TinaAnalysis.TinaPostProcessor.java", "BodyUseAPI": ["resultLines.get(currentIndex).setErrorTrainPostTrial(int)", "java.util.ArrayList<TinaAnalysis.PostProcessedResult>.get(int)"], "Fixed commit": "809e22ae5fa445b8130ca4700e47d281b8eb30f8", "Url": "https://api.github.com/repos/carlosmayferral/TouchScreenAnalyzer", "Date": "2018-12-27T07:44:15Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.contains(\"..\")) { response.setState(\"403 Forbidden\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3253/buggy-version/src.main.java.Server.Processor.java", "BodyUseAPI": [], "Fixed commit": "c1d7f462f5f7565928299b00b73bc4238a84efc3", "Url": "https://api.github.com/repos/WBQ1995/ARQHTTP", "Date": "2018-12-02T21:47:58Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.contains(\"..\")) { response.setState(\"403 Forbidden\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3253/buggy-version/src.main.java.Server.Processor.java", "BodyUseAPI": [], "Fixed commit": "c1d7f462f5f7565928299b00b73bc4238a84efc3", "Url": "https://api.github.com/repos/WBQ1995/ARQHTTP", "Date": "2018-12-02T21:47:58Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nervos.neuron.util.db.DBWalletUtil.getObject(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(item.address))) { walletItems.add(db.getObject(key, org.nervos.neuron.item.WalletItem.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2626/buggy-version/app.src.main.java.org.nervos.neuron.util.db.DBWalletUtil.java", "BodyUseAPI": [], "Fixed commit": "6cf864ca2bc703b6bcfdf7f2a605a4f8e5cc1e3a", "Url": "https://api.github.com/repos/cryptape/cyton-android", "Date": "2018-12-11T12:10:26Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<models.Card>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (card instanceof models.CreatureCard) ((models.CreatureCard) (card)).tap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1684/buggy-version/src.main.java.models.Player.java", "BodyUseAPI": [], "Fixed commit": "60a01f7ee3181ed39e0f834c7625c630c710ed21", "Url": "https://api.github.com/repos/mohammedalmahfoodh/group3", "Date": "2018-11-08T20:26:07Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (componentsMap == null) { componentsMap = new java.util.HashMap<java.lang.String, java.lang.Object>(); map.put(\"components\", componentsMap); schemasMap = new java.util.HashMap<java.lang.String, java.lang.Object>(); componentsMap.put(\"schemas\", schemasMap); }else if ((componentsMap.get(\"schemas\")) == null) { schemasMap = new java.util.HashMap<java.lang.String, java.lang.Object>(); componentsMap.put(\"schemas\", schemasMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5144/buggy-version/src.main.java.com.networknt.openapi.Bundler.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "c99131db142531526f9044e4488dcdc5246a921b", "Url": "https://api.github.com/repos/networknt/openapi-bundler", "Date": "2018-12-08T23:14:47Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((channel != null) && (!(channel.isEmpty()))) { org.ekstep.ep.samza.domain.Location loc = locationStore.get(channel); if (loc != null) { return loc; }else { loc = loadChannelAndPopulateCache(channel); return loc; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8175/buggy-version/data-pipeline.telemetry-location-updater.src.main.java.org.ekstep.ep.samza.engine.LocationEngine.java", "BodyUseAPI": ["org.apache.samza.storage.kv.KeyValueStore<java.lang.String, org.ekstep.ep.samza.domain.Location>.get(java.lang.String)", "org.ekstep.ep.samza.engine.LocationEngine.loadChannelAndPopulateCache(java.lang.String)"], "Fixed commit": "248ff01f58d622b725edecbd6bb1fa8c442b78df", "Url": "https://api.github.com/repos/project-sunbird/sunbird-data-pipeline", "Date": "2018-11-19T05:37:44Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rdvs != \"\\n\") { javax.swing.JOptionPane.showMessageDialog(this.pan, (\"rdv trouv\u00e9 :\" + rdvs)); }else { javax.swing.JOptionPane.showMessageDialog(this.pan, \"Aucun rdv trouv\u00e9 !\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4173/buggy-version/src.Calendar.Affichage.java", "BodyUseAPI": ["javax.swing.JOptionPane.showMessageDialog(javax.swing.JPanel,java.lang.String)"], "Fixed commit": "d29d0cb4b74eb420f591f75b9180a68bf06a0492", "Url": "https://api.github.com/repos/FlorianVal/Projet_info", "Date": "2018-12-09T22:41:45Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count > 0) { for (int i = 0; i < (filtered_rdv.length); i++) { rdvs += filtered_rdv[i].toString(); rdvs += \"\\n\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4173/buggy-version/src.Calendar.Affichage.java", "BodyUseAPI": [], "Fixed commit": "d29d0cb4b74eb420f591f75b9180a68bf06a0492", "Url": "https://api.github.com/repos/FlorianVal/Projet_info", "Date": "2018-12-09T22:41:45Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (guild != null) { setColor(SetEmbedColorCommand.embedColorCache.getUnchecked(guild.getIdLong())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4990/buggy-version/src.main.java.me.melijn.jda.utils.Embedder.java", "BodyUseAPI": [], "Fixed commit": "1a76db3b3f50a50031eebd681ef7ff7f2b95ce1a", "Url": "https://api.github.com/repos/ToxicMushroom/Melijn", "Date": "2018-11-08T21:10:11Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((type.equals(jmri.web.servlet.json.POWER)) || (type.equals(jmri.web.servlet.json.RAILROAD))) || (type.equals(jmri.web.servlet.json.TIME))) { reply = array.get(0); }else { reply = array; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/294/buggy-version/java.src.jmri.web.servlet.json.JsonServlet.java", "BodyUseAPI": [], "Fixed commit": "cf47ac59d6d9c5715936f1bc8be310be40c0afc5", "Url": "https://api.github.com/repos/JMRI/JMRI", "Date": "2018-12-27T18:49:23Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.util.List<java.lang.Object>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((row == null) || (row.isEmpty())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8885/buggy-version/src.main.java.net.zerofill.roster.actions.SetAtt.java", "BodyUseAPI": [], "Fixed commit": "8941e86a591d4a3e8fc4a255877b68619f235756", "Url": "https://api.github.com/repos/HuiJun/bifrost", "Date": "2018-11-13T07:01:31Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.shardingsphere.core.parsing.lexer.LexerEngine.getCurrentToken()", "io.shardingsphere.core.parsing.lexer.LexerEngine.getCurrentToken()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (firstToken != currentToken) { if (io.shardingsphere.core.parsing.parser.sql.ddl.DDLStatement.isDDL(firstToken.getType(), currentToken.getType())) { result = io.shardingsphere.core.parsing.antler.parser.factory.StatementFactory.getStatement(dbType, firstToken.getType(), shardingRule, sql, shardingTableMetaData); }else { result = parser.parse(); } }else { result = parser.parse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4598/buggy-version/sharding-core.src.main.java.io.shardingsphere.core.parsing.SQLParsingEngine.java", "BodyUseAPI": ["io.shardingsphere.core.parsing.antler.parser.factory.StatementFactory.getStatement(io.shardingsphere.core.constant.DatabaseType,firstToken.getType(),io.shardingsphere.core.rule.ShardingRule,java.lang.String,io.shardingsphere.core.metadata.table.ShardingTableMetaData)", "io.shardingsphere.core.parsing.lexer.token.Token.getType()", "io.shardingsphere.core.parsing.lexer.token.Token.getType()", "io.shardingsphere.core.parsing.lexer.token.Token.getType()", "io.shardingsphere.core.parsing.parser.sql.ddl.DDLStatement.isDDL(firstToken.getType(),currentToken.getType())"], "Fixed commit": "ba32dc4e4f3d64e8ca60b8676b1c8b881d7e8f3b", "Url": "https://api.github.com/repos/maPATHoguang64/incubator-shardingsphere", "Date": "2018-10-23T08:26:53Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anomaly instanceof com.linkedin.kafka.cruisecontrol.detector.GoalViolations) { skipMsg = \"goal violation fix\"; }else if (anomaly instanceof com.linkedin.kafka.cruisecontrol.detector.BrokerFailures) { skipMsg = \"broker failure fix\"; }else if (anomaly instanceof com.linkedin.kafka.cruisecontrol.detector.KafkaMetricAnomaly) { skipMsg = \"metric anomaly fix\"; }else { throw new java.lang.IllegalArgumentException(\"Unrecognized anomaly.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3613/buggy-version/cruise-control.src.main.java.com.linkedin.kafka.cruisecontrol.detector.AnomalyDetector.java", "BodyUseAPI": [], "Fixed commit": "b4990c5e68413e412593ffc4339fa06d81a01474", "Url": "https://api.github.com/repos/linkedin/cruise-control", "Date": "2018-12-13T18:47:38Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getActivity()) == null) || (getActivity().isFinishing())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3904/buggy-version/app.src.main.java.at.tomtasche.reader.ui.activity.DocumentFragment.java", "BodyUseAPI": [], "Fixed commit": "5129077e09e0b705956d0b7fed560fd8ecc5378c", "Url": "https://api.github.com/repos/TomTasche/OpenDocument.droid", "Date": "2018-12-31T15:13:18Z"},
{"Line": "=>727", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!invalid) { org.apache.camel.component.xquery.XQueryBuilder.LOG.debug(\"Declaring namespace [prefix: {}, uri: {}]\", prefix, uri); staticQueryContext.declareNamespace(prefix, uri); staticQueryContext.setInheritNamespaces(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9032/buggy-version/components.camel-saxon.src.main.java.org.apache.camel.component.xquery.XQueryBuilder.java", "BodyUseAPI": [], "Fixed commit": "8073fde61d91a7d32669905ea10b9b0f649604dc", "Url": "https://api.github.com/repos/apache/camel", "Date": "2018-12-17T12:39:33Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(savePath)) { savePath = \"target/cookie\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2984/buggy-version/src.main.java.github.slimrpc.core.io.manager.CookieStoreManager.java", "BodyUseAPI": [], "Fixed commit": "dab4fc1140297fe0a9f53e1b613da4a43df4502e", "Url": "https://api.github.com/repos/lmxy1990/slimrpc", "Date": "2018-11-06T11:12:34Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((target) instanceof llvm.LLVMRegisterType) { result.add(((llvm.LLVMRegisterType) (target))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5069/buggy-version/llvm.LLVMStoreCode.java", "BodyUseAPI": [], "Fixed commit": "4b2b20c1e1301c9c7ff033c1d780bf92764c7110", "Url": "https://api.github.com/repos/zuoyuanh/cpe431", "Date": "2018-11-06T15:48:57Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dailyMod == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4418/buggy-version/src.main.java.basemod.DailyModsDropdown.java", "BodyUseAPI": [], "Fixed commit": "0a874ea0f567825df3f091cd3d8621e1b7d12d89", "Url": "https://api.github.com/repos/staythespire/BaseMod", "Date": "2018-11-09T01:12:49Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (items.add(item)) { putUserData(ch.epfl.sweng.studyup.player.FB_ITEMS, getItemsInt()); ch.epfl.sweng.studyup.firebase.Firestore.get().setUserData(ch.epfl.sweng.studyup.player.FB_ITEMS, getItemsInt()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8137/buggy-version/app.src.main.java.ch.epfl.sweng.studyup.player.Player.java", "BodyUseAPI": [], "Fixed commit": "a331c607eba836d6c51b599cc954892473b7cc95", "Url": "https://api.github.com/repos/nheyek/SDP-2018", "Date": "2018-11-11T16:33:07Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getSuperior()) != null) { updatedUser.setSuperior(userRepository.findByIdUserAndIsActive(user.getSuperior().getIdUser(), true).orElseThrow(() -> new com.future.office_inventory_system.exception.NotFoundException(\"superior not found\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/69/buggy-version/service.src.main.java.com.future.office_inventory_system.service.UserServiceImpl.java", "BodyUseAPI": ["com.future.office_inventory_system.model.User.setSuperior(userRepository.findByIdUserAndIsActive(user.getSuperior().getIdUser(), true).orElseThrow(() -> new com.future.office_inventory_system.exception.NotFoundException(\"superior not found\")))", "userRepository.findByIdUserAndIsActive(user.getSuperior().getIdUser(), true).orElseThrow(() -> new com.future.office_inventory_system.exception.NotFoundException(\"superior not found\"))", "user.getSuperior().getIdUser()", "com.future.office_inventory_system.repository.UserRepository.findByIdUserAndIsActive(user.getSuperior().getIdUser(),boolean)", "com.future.office_inventory_system.model.User.getSuperior()"], "Fixed commit": "c06ae6908a4d975b97bf24aabd26695747ab1a28", "Url": "https://api.github.com/repos/priagungs/assist-backend", "Date": "2018-11-14T11:44:34Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ballerinalang.bre.Context.getNullableRefArgument(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(queryInput instanceof org.ballerinalang.model.values.BMap)) { context.setReturnValues(org.ballerinalang.mongodb.MongoDBDataSourceUtils.getMongoDBConnectorError(context, \"query parameter should be a JSON object\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/628/buggy-version/component.src.main.java.org.ballerinalang.mongodb.actions.Find.java", "BodyUseAPI": [], "Fixed commit": "939f060d4e5deb16e4da406c7ee1fe7a177b17e7", "Url": "https://api.github.com/repos/wso2-ballerina/module-mongodb", "Date": "2018-12-10T04:12:37Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flowable.bpmn.model.FlowElementsContainer.getFlowElement(sequenceFlow.getSourceRef())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sourceFlowElement instanceof org.flowable.bpmn.model.InclusiveGateway) { org.flowable.bpmn.model.InclusiveGateway parentInclusiveGateway = ((org.flowable.bpmn.model.InclusiveGateway) (sourceFlowElement)); defaultFlowId = parentInclusiveGateway.getDefaultFlow(); }else if (sourceFlowElement instanceof org.flowable.bpmn.model.Activity) { org.flowable.bpmn.model.Activity parentActivity = ((org.flowable.bpmn.model.Activity) (sourceFlowElement)); defaultFlowId = parentActivity.getDefaultFlow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8705/buggy-version/modules.flowable-json-converter.src.main.java.org.flowable.editor.language.json.converter.SequenceFlowJsonConverter.java", "BodyUseAPI": [], "Fixed commit": "eade60db9fd4b6995d33797578afc652729fe957", "Url": "https://api.github.com/repos/yonigibbs/flowable-engine", "Date": "2018-11-21T15:44:28Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.epfl.sweng.swenggolf.offer.ShowOfferActivity.findViewById(R.id.answer_description)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((editText.length()) < (Answer.COMMENT_MIN_LENGTH)) { editText.setError((((getString(R.string.answer_limit_1)) + (Answer.COMMENT_MIN_LENGTH)) + (getString(R.string.answer_limit_2)))); }else { ch.epfl.sweng.swenggolf.offer.Answers answers = mAdapter.getAnswers(); answers.getAnswerList().add(new ch.epfl.sweng.swenggolf.offer.Answer(ch.epfl.sweng.swenggolf.Config.getUser().getUserId(), editText.getText().toString())); ch.epfl.sweng.swenggolf.database.Database.getInstance().write(Database.ANSWERS_PATH, offer.getUuid(), answers); editText.getText().clear(); mAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5788/buggy-version/app.src.main.java.ch.epfl.sweng.swenggolf.offer.ShowOfferActivity.java", "BodyUseAPI": ["editText.getText().toString()", "answers.getAnswerList().add(ch.epfl.sweng.swenggolf.offer.Answer)", "android.widget.EditText.setError((((getString(R.string.answer_limit_1)) + (Answer.COMMENT_MIN_LENGTH)) + (getString(R.string.answer_limit_2))))", "android.widget.EditText.getText()", "editText.getText().clear()", "android.widget.EditText.getText()"], "Fixed commit": "0932d0cce330dbbc523ab0e463d4df835e7f2593", "Url": "https://api.github.com/repos/SwengGolfTeam/Sweng_Golf", "Date": "2018-11-13T14:29:42Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.body().getMovies()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (movies == null) { android.widget.Toast.makeText(context, \"No search results.\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1283/buggy-version/app.src.main.java.mk.ukim.finki.mpip.labmovies.repository.MovieRepository.java", "BodyUseAPI": [], "Fixed commit": "f5962c73c68d5f63217630b1f7ab720d19d1d4f2", "Url": "https://api.github.com/repos/MitrovG/MPIP_LAB_MOVIES", "Date": "2018-12-19T01:56:25Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userEmail == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9719/buggy-version/src.pkg304ui.UI.UIFrame.java", "BodyUseAPI": [], "Fixed commit": "c7aa18015abe658d4d1054913f701e858749f428", "Url": "https://api.github.com/repos/DanielHPong/Dating304", "Date": "2018-11-17T21:38:07Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"*\".equals(getOperation())) { if ((addedValue) < 0) { int last = instructions.lastIndexOf(\"AC <- ~AC\"); instructions.delete(last, instructions.length()); } java.util.Optional<java.lang.String> optionalMultiplyInstructions = com.diegokrupitza.microcompiler.generator.OperationHandler.generateMultiplication(referecedVariableLocation); if (!(optionalMultiplyInstructions.isPresent())) { throw new com.diegokrupitza.microcompiler.exceptions.GeneratorException(com.diegokrupitza.microcompiler.messages.ErrorMessages.CANNOT_GENERATE_MULTIPLICATION); } instructions.append(optionalMultiplyInstructions.get()); if ((addedValue) < 0) { instructions.append(\"AC <- ~AC\\n\"); instructions.append(\"AC <- AC + 1\"); } instructions.append(\"\\n\").append(currentWorkRegister.get()).append(\" <- AC\"); }else if (\"/\".equals(getOperation())) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/437/buggy-version/src.main.java.com.diegokrupitza.microcompiler.generator.AdvancedVariableICopyMicro16Instruction.java", "BodyUseAPI": [], "Fixed commit": "8a2858dc75b3d3565a91c6b186073707e5dc2189", "Url": "https://api.github.com/repos/DiegoKrupitza/Micro16-Compiler", "Date": "2018-12-26T00:38:52Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (digit != ((int) ('0'))) { integerPart = java.lang.String.valueOf(digit); firstInput = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1954/buggy-version/src.main.java.ru.wkn.model.units.StringNumber.java", "BodyUseAPI": ["java.lang.String.valueOf(char)"], "Fixed commit": "0518ebeb37a4cfcaa782b6b4d5dba6d2498462d5", "Url": "https://api.github.com/repos/Adraas/Calculator", "Date": "2018-12-21T17:30:42Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Game.FileUtilties.FileUtilities.ensureFileExists(stringPath)) { java.nio.file.Files.write(path, lines, cs); }else { java.lang.System.out.println((stringPath + \" was not successfully written to.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7360/buggy-version/src.main.java.Game.FileUtilties.FileUtilities.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "b7eec6597c2bfc0d376fefa59f941cde82266e92", "Url": "https://api.github.com/repos/fastfists/Multiplayer-Game", "Date": "2018-11-25T04:02:10Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (dotPos > 0) { if (dotPos == ((copyrightPrice.length()) - 1)) { return (copyrightPrice) + \"00\"; }else if (dotPos == ((copyrightPrice.length()) - 2)) { return (copyrightPrice) + \"0\"; }else if (dotPos == ((copyrightPrice.length()) - 3)) { return copyrightPrice; }else { return copyrightPrice.substring(0, (dotPos + 3)); } }else { return (copyrightPrice) + \".00\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7907/buggy-version/src.main.java.com.ideamoment.emars.model.CopyrightProductInfo.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "4fa40153575f2fa69267e077a522ad4f2d8aad2b", "Url": "https://api.github.com/repos/chinakite/emars", "Date": "2018-12-09T12:51:03Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(playing)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9324/buggy-version/app.src.main.java.com.example.justi.markthat.ViewRecording.java", "BodyUseAPI": [], "Fixed commit": "64c84fed82fd1f49e75b4ff0af46cf6b2a8f7fd9", "Url": "https://api.github.com/repos/jstnzl/MarkThat", "Date": "2018-11-22T08:52:49Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apereo.cas.couchdb.services.RegisteredServiceCouchDbRepository.queryView(createQuery(\"size\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (r.isEmpty()) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3866/buggy-version/support.cas-server-support-couchdb-service-registry.src.main.java.org.apereo.cas.couchdb.services.RegisteredServiceCouchDbRepository.java", "BodyUseAPI": [], "Fixed commit": "b1c9a5480ef196d601498c46a15eaaa1a698efb3", "Url": "https://api.github.com/repos/apereo/cas", "Date": "2018-11-14T19:59:24Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mReviewsAdapter) != null) { mReviewsRecycler = layoutManagerReviews.onSaveInstanceState(); outState.putParcelable(com.charlesrowland.popularmovies.MovieDetailsActivity.REVIEWS_RECYCLER_SAVE_STATE, mReviewsRecycler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1277/buggy-version/app.src.main.java.com.charlesrowland.popularmovies.MovieDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "ed9c6fc0418cb9c74e038d27b06686d78402ff64", "Url": "https://api.github.com/repos/gundamboy/PopularMovies", "Date": "2018-11-01T22:59:46Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useFractorAnimation()) view.startFactorAnimation(((duration) / 6), 0, (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3844/buggy-version/springactionmenu.src.main.java.com.lilei.springactionmenu.ActionMenu.java", "BodyUseAPI": [], "Fixed commit": "a33c8be4d7c5c8f58af18ac1a046027a2d7d0337", "Url": "https://api.github.com/repos/HeterPu/SpringActionMenu", "Date": "2018-12-04T14:07:17Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useFractorAnimation()) view.startFactorAnimation(((duration) / 6), 0, 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3844/buggy-version/springactionmenu.src.main.java.com.lilei.springactionmenu.ActionMenu.java", "BodyUseAPI": [], "Fixed commit": "a33c8be4d7c5c8f58af18ac1a046027a2d7d0337", "Url": "https://api.github.com/repos/HeterPu/SpringActionMenu", "Date": "2018-12-04T14:07:17Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useFractorAnimation()) view.startFactorAnimation(((duration) / 6), 0, (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3844/buggy-version/springactionmenu.src.main.java.com.lilei.springactionmenu.ActionMenu.java", "BodyUseAPI": [], "Fixed commit": "a33c8be4d7c5c8f58af18ac1a046027a2d7d0337", "Url": "https://api.github.com/repos/HeterPu/SpringActionMenu", "Date": "2018-12-04T14:07:17Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAuth.getCurrentUser()) != null) { for (com.google.firebase.auth.UserInfo user : com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getProviderData()) { if (user.getProviderId().equals(\"password\")) { hackeru.talg.edu.androidproject.LoginActivity.loggedInWith = hackeru.talg.edu.androidproject.LoginActivity.LOGGED_IN_EMAIL; }else if (user.getProviderId().equals(\"google.com\")) { hackeru.talg.edu.androidproject.LoginActivity.loggedInWith = hackeru.talg.edu.androidproject.LoginActivity.LOGGED_IN_GOOGLE; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5340/buggy-version/app.src.main.java.hackeru.talg.edu.androidproject.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "2469f336e2361ef646358ade481245ff48a696e7", "Url": "https://api.github.com/repos/Khatulal/AndroidProject", "Date": "2018-12-06T06:59:42Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (repo.getLocationType().equals(RepositoryInfo.LocationType.INTERNAL)) repositoryService.deleteRepository(repo);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9779/buggy-version/src.main.java.pt.isel.ngspipes.share_core.logic.service.repositoryInfo.RepositoryInfoService.java", "BodyUseAPI": ["pt.isel.ngspipes.share_core.logic.service.repositoryInfo.IRepositoryService.deleteRepository(pt.isel.ngspipes.share_core.logic.domain.RepositoryInfo)"], "Fixed commit": "33107ac6cdb3448872f8b86227517812876348c7", "Url": "https://api.github.com/repos/ngspipes2/share_core", "Date": "2018-11-12T21:30:56Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (defaultColumnWidth > 0) { this.defaultColumnWidth = defaultColumnWidth; }else { this.defaultColumnWidth = 16; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8918/buggy-version/src.main.java.com.github.flyinghe.depdcy.AbstractExcelWriter.java", "BodyUseAPI": [], "Fixed commit": "0270a33517ca76139f5631a658953f2e7b0c555c", "Url": "https://api.github.com/repos/FlyingHe/UtilsMaven", "Date": "2018-12-24T09:04:48Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (minUsageStat != null) { android.util.Log.d(TAG, (((((minUsageStat.getPackageName()) + \" last time used: \") + (minUsageStat.getLastTimeUsed())) + \" time in foreground: \") + (minUsageStat.getTotalTimeInForeground()))); android.util.Log.d(TAG, (((((\"getLastTimeStamp: \" + (minUsageStat.getLastTimeStamp())) + \" getLastUsed: \") + (minUsageStat.getLastTimeUsed())) + \" current time: \") + (java.lang.System.currentTimeMillis()))); android.util.Log.d(TAG, ((((java.lang.System.currentTimeMillis()) - (minUsageStat.getLastTimeUsed())) <= ((userActiveMargin) * (com.corvettecole.gotosleep.BedtimeNotificationReceiver.ONE_MINUTE_MILLIS))) + \"\")); return ((java.lang.System.currentTimeMillis()) - (minUsageStat.getLastTimeUsed())) <= ((userActiveMargin) * (com.corvettecole.gotosleep.BedtimeNotificationReceiver.ONE_MINUTE_MILLIS)); }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5528/buggy-version/app.src.main.java.com.corvettecole.gotosleep.BedtimeNotificationReceiver.java", "BodyUseAPI": ["android.app.usage.UsageStats.getTotalTimeInForeground()", "android.util.Log.d(java.lang.String,(((((minUsageStat.getPackageName()) + \" last time used: \") + (minUsageStat.getLastTimeUsed())) + \" time in foreground: \") + (minUsageStat.getTotalTimeInForeground())))", "android.app.usage.UsageStats.getLastTimeStamp()", "android.app.usage.UsageStats.getLastTimeUsed()", "android.app.usage.UsageStats.getLastTimeUsed()", "android.util.Log.d(java.lang.String,((((java.lang.System.currentTimeMillis()) - (minUsageStat.getLastTimeUsed())) <= ((userActiveMargin) * (com.corvettecole.gotosleep.BedtimeNotificationReceiver.ONE_MINUTE_MILLIS))) + \"\"))", "android.app.usage.UsageStats.getPackageName()", "android.app.usage.UsageStats.getLastTimeUsed()", "android.util.Log.d(java.lang.String,(((((\"getLastTimeStamp: \" + (minUsageStat.getLastTimeStamp())) + \" getLastUsed: \") + (minUsageStat.getLastTimeUsed())) + \" current time: \") + (java.lang.System.currentTimeMillis())))", "android.app.usage.UsageStats.getLastTimeUsed()"], "Fixed commit": "adc226e1175228dea05e2cd15010c48815c0015d", "Url": "https://api.github.com/repos/CorvetteCole/GotoSleep", "Date": "2018-11-28T15:17:11Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getEntityType()) != (org.bukkit.entity.EntityType.PLAYER)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2757/buggy-version/src.me.ryanhamshire.GPFlags.FlagDef_AllowPvP.java", "BodyUseAPI": [], "Fixed commit": "dcbf9f256f98e09e2d3a8384c1e0ddee57d5e904", "Url": "https://api.github.com/repos/ShaneBeee/GriefPreventionFlags", "Date": "2018-11-20T20:05:31Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.straus.repositories.MatchRepository.findFirstByAppUserUserIdOrderByMatchDateDesc(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tempMatch != null) { if ((tempMatch.getMatchDate().after(currentSeason.getStartDate())) && (tempMatch.getMatchDate().before(currentSeason.getEndDate()))) { return tempMatch; }else { return null; } }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6460/buggy-version/src.main.java.com.straus.services.MatchServiceImpl.java", "BodyUseAPI": ["com.straus.services.Match.getMatchDate()", "tempMatch.getMatchDate().before(currentSeason.getEndDate())", "tempMatch.getMatchDate().after(currentSeason.getStartDate())", "com.straus.services.Match.getMatchDate()"], "Fixed commit": "c7e55f363037ad67b305f6c8c3b3e524c4364f57", "Url": "https://api.github.com/repos/Jstraws/overwatch-tracker", "Date": "2018-11-05T15:57:25Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true) { return com.servinglynk.hmis.linkeddata.auth.HslynkAccessLayerServiceImpl.METHODID; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3286/buggy-version/hmis-mal.src.main.java.com.servinglynk.hmis.linkeddata.auth.HslynkAccessLayerServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "7ccc1e759f2ec21890b4bfd471f12fd182236c56", "Url": "https://api.github.com/repos/joseph6x/marmotta-hslynk", "Date": "2018-12-13T15:48:07Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apereo.cas.couchdb.services.RegisteredServiceCouchDbRepository.queryView(createQuery(\"size\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (r.isEmpty()) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/997/buggy-version/support.cas-server-support-couchdb-service-registry.src.main.java.org.apereo.cas.couchdb.services.RegisteredServiceCouchDbRepository.java", "BodyUseAPI": [], "Fixed commit": "b27ba56f1625260c8e54e85c4a8a2fcf01f4eed4", "Url": "https://api.github.com/repos/apereo/cas", "Date": "2018-11-14T19:59:24Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (approveSwitch.isChecked()) { transactionResponseBuilder.approve(); transactionResponseBuilder.withOutcomeMessage(\"Card presented\"); transactionResponseBuilder.withCard(card); }else { transactionResponseBuilder.decline(\"Card declined\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9442/buggy-version/PaymentServiceSample.src.main.java.com.aevi.sdk.pos.flow.paymentservicesample.ui.PaymentCardReadingActivity.java", "BodyUseAPI": [], "Fixed commit": "f1d05c8d43d82c521c7270dfdef50609cdcbeaaa", "Url": "https://api.github.com/repos/AEVI-AppFlow/pos-android-sdk", "Date": "2018-11-26T14:22:02Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (flowResponse.shouldCancelTransaction()) { responseInfo.add(com.aevi.sdk.pos.flow.sample.ui.ModelDetailsFragment.getStringPair(R.string.cancel_requested, flowResponse.shouldCancelTransaction())); adapter.addSection(new com.aevi.sdk.pos.flow.sample.ui.RecyclerViewSection(getActivity(), R.string.overview, responseInfo, true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9442/buggy-version/sample-commons.src.main.java.com.aevi.sdk.pos.flow.sample.ui.ModelDetailsFragment.java", "BodyUseAPI": ["com.aevi.sdk.pos.flow.sample.ui.ModelDetailsFragment.getStringPair(R.string.cancel_requested,flowResponse.shouldCancelTransaction())", "java.util.List<android.util.Pair<java.lang.String, java.lang.String>>.add(android.util.Pair<java.lang.String, java.lang.String>)", "com.aevi.sdk.pos.flow.sample.ui.FlowResponse.shouldCancelTransaction()"], "Fixed commit": "f1d05c8d43d82c521c7270dfdef50609cdcbeaaa", "Url": "https://api.github.com/repos/AEVI-AppFlow/pos-android-sdk", "Date": "2018-11-26T14:22:02Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(flowResponse.hasAugmentedData())) { setNoData(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9442/buggy-version/sample-commons.src.main.java.com.aevi.sdk.pos.flow.sample.ui.ModelDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "f1d05c8d43d82c521c7270dfdef50609cdcbeaaa", "Url": "https://api.github.com/repos/AEVI-AppFlow/pos-android-sdk", "Date": "2018-11-26T14:22:02Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(a instanceof net.runelite.api.NPC)) { return damageDealt; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3435/buggy-version/runelite-client.src.main.java.net.runelite.client.plugins.performancetracker.PerformanceTrackerPlugin.java", "BodyUseAPI": [], "Fixed commit": "217b36e1fd77d2cb4ed060502f77f31806922018", "Url": "https://api.github.com/repos/TheStonedTurtle/runelite", "Date": "2018-11-15T22:20:49Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Status.INSTALLATION_IN_PROGRESS.code().equals(actionOnTenantRequest.getStatus())) tenantMapper.updateTenantStatus(Status.INSTALLATION_IN_PROGRESS.id(), tenantcode); else if (Status.UNINSTALLATION_IN_PROGRESS.code().equals(actionOnTenantRequest.getStatus())) tenantMapper.updateTenantStatus(Status.UNINSTALLATION_IN_PROGRESS.id(), tenantcode);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8332/buggy-version/admin-api.src.main.java.org.csi.yucca.adminapi.service.impl.TenantServiceImpl.java", "BodyUseAPI": ["org.csi.yucca.adminapi.request.ActionRequest.getStatus()", "Status.UNINSTALLATION_IN_PROGRESS.code().equals(actionOnTenantRequest.getStatus())"], "Fixed commit": "cb81aebdeec1173cddd7b1d04c0a4378f7a71bfd", "Url": "https://api.github.com/repos/csipiemonte/yucca-dataservice", "Date": "2018-09-28T14:31:25Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (price >= (java.lang.Double.MAX_VALUE)) { throw new domain.model.DomainException(\"But why?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3559/buggy-version/src.domain.model.Product.java", "BodyUseAPI": [], "Fixed commit": "71a3a66512856ece1fdc4dd03d74c251318d6813", "Url": "https://api.github.com/repos/Kwinnieprince/webshopTesting", "Date": "2018-12-06T18:50:49Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((current.myLeft) == null) && ((current.myRight) == null)) { if ((current.myValue) != 0) { if ((current.myValue) == (HuffProcessor.PSEUDO_EOF)) { break; }else { out.writeBits(HuffProcessor.BITS_PER_WORD, current.myValue); current = root; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9773/buggy-version/src.HuffProcessor.java", "BodyUseAPI": ["BitOutputStream.writeBits(int,current.myValue)"], "Fixed commit": "699c72fe4c3337cbc80385ba7b038e49a0088a91", "Url": "https://api.github.com/repos/DukeCompsci201Fall2018/huffmanproject-jto6", "Date": "2018-12-09T01:12:29Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apereo.cas.couchdb.services.RegisteredServiceCouchDbRepository.queryView(createQuery(\"size\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (r.isEmpty()) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1801/buggy-version/support.cas-server-support-couchdb-service-registry.src.main.java.org.apereo.cas.couchdb.services.RegisteredServiceCouchDbRepository.java", "BodyUseAPI": [], "Fixed commit": "9a4bb5f1207f3e5b1d69c7803b1c2ad9982f5e8b", "Url": "https://api.github.com/repos/apereo/cas", "Date": "2018-11-14T19:59:24Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.query.Query<pl.poznan.put.student.spacjalive.erp.dao.User>.getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (users.isEmpty()) { return null; }else { return query.getSingleResult(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/541/buggy-version/src.main.java.pl.poznan.put.student.spacjalive.erp.dao.UserRepositoryImpl.java", "BodyUseAPI": [], "Fixed commit": "11bdaf50adc932c183403763aeeaa0f22686e694", "Url": "https://api.github.com/repos/hobitolog/SpacjaERP", "Date": "2018-12-09T17:45:56Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (address.isUnresolved()) { throw new herddb.network.netty.IOException(((((\"Bind address \" + (host)) + \":\") + (port)) + \" cannot be resolved\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/316/buggy-version/herddb-net.src.main.java.herddb.network.netty.NettyChannelAcceptor.java", "BodyUseAPI": [], "Fixed commit": "8b8b852955326c0777c832da56bb9afeec2fc1e9", "Url": "https://api.github.com/repos/diennea/herddb", "Date": "2018-12-07T11:39:09Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((termVectorsRequest.type()) == null) { termVectorsRequest.type(MapperService.SINGLE_MAPPING_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7161/buggy-version/server.src.main.java.org.elasticsearch.action.termvectors.MultiTermVectorsRequest.java", "BodyUseAPI": ["org.elasticsearch.action.termvectors.TermVectorsRequest.type(MapperService.SINGLE_MAPPING_NAME)"], "Fixed commit": "4c2e0d76f32090c2731a1fa8a8a6b3ede828ccb5", "Url": "https://api.github.com/repos/lcawl/elasticsearch", "Date": "2018-12-05T10:28:12Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.lang.reflect.Modifier.isAbstract(javaType.getModifiers()))) { com.berrycloud.acl.AclLogicImpl.LOG.debug(\"Create metadata for {}\", javaType); metaDataMap.put(javaType, createAclEntityMetaData(javaType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5013/buggy-version/acl.src.main.java.com.berrycloud.acl.AclLogicImpl.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.Class<?>)", "com.berrycloud.acl.AclLogicImpl.createAclEntityMetaData(java.lang.Class<?>)", "java.util.Map<java.lang.Class<?>, com.berrycloud.acl.data.AclEntityMetaData>.put(java.lang.Class<?>,com.berrycloud.acl.data.AclEntityMetaData)"], "Fixed commit": "585d860a113b94afec41cdd583746ef29ddef44e", "Url": "https://api.github.com/repos/BerryCloud/spring-data-jpa-acl", "Date": "2018-11-21T11:53:59Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((month) > (currMonth)) { s = 1; currMonth = (currMonth) - in; currMonth = (currMonth) + 12; totalMonth = (currMonth) - (month); }else { if (in == 1) { (currMonth)--; s = 1; currMonth = (currMonth) + 12; } totalMonth = (currMonth) - (month); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7339/buggy-version/app.src.main.java.com.appswedevelop.ankush.calculateage.calculating.java", "BodyUseAPI": [], "Fixed commit": "db4bf8eec2f6421ff9b35c0247c1270a6a619c6f", "Url": "https://api.github.com/repos/Rawkush/AgeCalculator", "Date": "2018-11-11T09:29:14Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (handleBackPressed()) { addToBackStack(activity, helper); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5924/buggy-version/imagewatcher.src.main.java.com.github.ielse.imagewatcher.ImageWatcherHelper.java", "BodyUseAPI": [], "Fixed commit": "c49a3a4aba92535525b2087d5e0fced8aaeb7aef", "Url": "https://api.github.com/repos/iielse/ImageWatcher", "Date": "2018-11-23T07:51:14Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (slotNumber == (player.currentItem)) { addSlotToContainer(new com.someguyssoftware.treasure2.inventory.NoSlot(player, slotNumber, ((getHotbarXPos()) + ((getSlotXSpacing()) * x)), getHotbarYPos())); }else { addSlotToContainer(new net.minecraft.inventory.Slot(player, slotNumber, ((getHotbarXPos()) + ((getSlotXSpacing()) * x)), getHotbarYPos())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/343/buggy-version/Treasure2-1.12.2.src.com.someguyssoftware.treasure2.inventory.AbstractChestContainer.java", "BodyUseAPI": ["com.someguyssoftware.treasure2.inventory.AbstractChestContainer.addSlotToContainer(com.someguyssoftware.treasure2.inventory.NoSlot)", "com.someguyssoftware.treasure2.inventory.AbstractChestContainer.addSlotToContainer(net.minecraft.inventory.Slot)"], "Fixed commit": "c8963c15e9450f15ea8d5879215e80fa02e5ee8b", "Url": "https://api.github.com/repos/gottsch/gottsch-minecraft-Treasure", "Date": "2018-12-08T01:51:03Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gmail.berndivader.mythicmobsext.mechanics.ClickListenerMechanic.ClickTracker.deepClone()", "java.util.Optional<io.lumine.xikage.mythicmobs.skills.Skill>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sk.isUsable(sd)) sk.execute(sd);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4015/buggy-version/src.main.java.com.gmail.berndivader.mythicmobsext.mechanics.ClickListenerMechanic.java", "BodyUseAPI": ["io.lumine.xikage.mythicmobs.skills.Skill.execute(io.lumine.xikage.mythicmobs.skills.SkillMetadata)"], "Fixed commit": "c53a1936e82b749fb62515b576de97fe7800d737", "Url": "https://api.github.com/repos/BerndiVader/MythicMobsExtension", "Date": "2018-11-11T16:07:25Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gmail.berndivader.mythicmobsext.mechanics.ClickListenerMechanic.ClickTracker.deepClone()", "java.util.Optional<io.lumine.xikage.mythicmobs.skills.Skill>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sk.isUsable(sd)) sk.execute(sd);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4015/buggy-version/src.main.java.com.gmail.berndivader.mythicmobsext.mechanics.ClickListenerMechanic.java", "BodyUseAPI": ["io.lumine.xikage.mythicmobs.skills.Skill.execute(io.lumine.xikage.mythicmobs.skills.SkillMetadata)"], "Fixed commit": "c53a1936e82b749fb62515b576de97fe7800d737", "Url": "https://api.github.com/repos/BerndiVader/MythicMobsExtension", "Date": "2018-11-11T16:07:25Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (sk.isUsable(sd)) sk.execute(sd);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4015/buggy-version/src.main.java.com.gmail.berndivader.mythicmobsext.mechanics.ClickListenerMechanic.java", "BodyUseAPI": [], "Fixed commit": "c53a1936e82b749fb62515b576de97fe7800d737", "Url": "https://api.github.com/repos/BerndiVader/MythicMobsExtension", "Date": "2018-11-11T16:07:25Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gmail.berndivader.mythicmobsext.mechanics.ClickListenerMechanic.ClickTracker.deepClone()", "java.util.Optional<io.lumine.xikage.mythicmobs.skills.Skill>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sk.isUsable(sd)) sk.execute(sd);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4015/buggy-version/src.main.java.com.gmail.berndivader.mythicmobsext.mechanics.ClickListenerMechanic.java", "BodyUseAPI": ["io.lumine.xikage.mythicmobs.skills.Skill.execute(io.lumine.xikage.mythicmobs.skills.SkillMetadata)"], "Fixed commit": "c53a1936e82b749fb62515b576de97fe7800d737", "Url": "https://api.github.com/repos/BerndiVader/MythicMobsExtension", "Date": "2018-11-11T16:07:25Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Barrier.barrierOn)) { OK = false; Barrier.barrierOn = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7635/buggy-version/Assignment1.src.Barrier.java", "BodyUseAPI": [], "Fixed commit": "e37ced3f067abb8838ceac4f3aecf76421c976d7", "Url": "https://api.github.com/repos/kirke200/Concurrent-Programming-Assignment1", "Date": "2018-11-21T16:45:04Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Barrier.barrierOn) { Barrier.barrierOn = false; OK = true; notifyAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7635/buggy-version/Assignment1.src.Barrier.java", "BodyUseAPI": [], "Fixed commit": "e37ced3f067abb8838ceac4f3aecf76421c976d7", "Url": "https://api.github.com/repos/kirke200/Concurrent-Programming-Assignment1", "Date": "2018-11-21T16:45:04Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((java.lang.Integer.valueOf(w)) >= 0) && ((java.lang.Integer.valueOf(w)) < 1000)) { x += \" \" + (com.example.projectio.Translator.change_on_word_pol(w)); }else x += \" \" + w;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5803/buggy-version/src.main.java.com.example.projectio.Translator.java", "BodyUseAPI": ["com.example.projectio.Translator.change_on_word_pol(java.lang.String)"], "Fixed commit": "d08e15ffa9a006c16aeb5ef3083c78b4bcce4f18", "Url": "https://api.github.com/repos/DominikKossinski/Projekt-Inzynieria-Oprogramowania", "Date": "2018-11-06T09:56:26Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((frame.isValidAmountInput()) && (frame.isValidPricePerMapInput())) { frame.getBtn_update_bulks().setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1905/buggy-version/src.main.java.listener.CurrencyBulksCmbListener.java", "BodyUseAPI": ["gui.MainFrame.getBtn_update_bulks()", "frame.getBtn_update_bulks().setEnabled(boolean)"], "Fixed commit": "2787d8682403a97e7fcbf28c4fa0f2ae4106baf3", "Url": "https://api.github.com/repos/StefanKunde/TradeMaster_POE", "Date": "2018-12-24T16:02:34Z"},
{"Line": "=>808", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sourceDBA.getSchema().getClassByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cls == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8802/buggy-version/src.org.gk.slicing.SlicingEngine.java", "BodyUseAPI": [], "Fixed commit": "3d2507547ff73336cee0a73e44cf78e70464d408", "Url": "https://api.github.com/repos/reactome/CuratorTool", "Date": "2018-11-08T17:34:55Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stopwatch.isRunning()) { stopwatch.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8212/buggy-version/src.main.java.net.minecraftforge.fml.common.progress.StartupProgressBarTracker.java", "BodyUseAPI": ["com.google.common.base.Stopwatch.stop()"], "Fixed commit": "299f15632a78e88ea7acff61e52d7eb6053f8885", "Url": "https://api.github.com/repos/mezz/MinecraftForge", "Date": "2018-12-28T02:02:18Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (message != null) { m_children.add(message); }else { com.dianping.cat.Cat.logError(new java.lang.Exception(\"null child message\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9104/buggy-version/cat-client.src.main.java.com.dianping.cat.message.internal.DefaultTransaction.java", "BodyUseAPI": ["java.util.List<com.dianping.cat.message.Message>.add(com.dianping.cat.message.Message)"], "Fixed commit": "b48a9a702cca38c6f722274f75fbd8de8433f7c7", "Url": "https://api.github.com/repos/leusonmario/cat", "Date": "2015-01-03T02:41:07Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["record.getPrimaryKeys().get(0).getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof java.lang.String) { value = ((java.lang.String) (value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5357/buggy-version/src.main.java.com.taobao.yugong.extractor.oracle.OracleFullRecordExtractor.java", "BodyUseAPI": [], "Fixed commit": "e154f5f21f177b6cec037e845d89a039d4797586", "Url": "https://api.github.com/repos/jgslvwy/yugong-update", "Date": "2018-12-27T06:43:21Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(metrics.containsKey(state.name))) metrics.putIfAbsent(state.name, new java.util.ArrayList());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9476/buggy-version/engine.src.main.java.io.seldon.engine.predictors.PredictiveUnitBean.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<io.seldon.protos.PredictionProtos.Metric>>.putIfAbsent(state.name,java.util.ArrayList)"], "Fixed commit": "b2ec02a5b59d1f0485d2e544b1b20e525224fc7f", "Url": "https://api.github.com/repos/arnaudvl/seldon-core", "Date": "2018-12-04T17:47:04Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (path.toLowerCase().equals(\"staging-server.json\")) { ((com.fasterxml.jackson.databind.node.ObjectNode) (rootNode)).put(\"error-handler\", \"/data-hub/4/rest-api/error-handler.xqy\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8194/buggy-version/marklogic-data-hub.src.main.java.com.marklogic.hub.impl.HubProjectImpl.java", "BodyUseAPI": [], "Fixed commit": "02ae7f0a508b6be80938a34163bd20f81e23c681", "Url": "https://api.github.com/repos/srinathgit/marklogic-data-hub", "Date": "2018-12-07T05:15:43Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config.getPullFilter()) != null) c4ReplPullFilter = new com.couchbase.litecore.C4ReplicationFilter() { @java.lang.Override public boolean validationFunction(final java.lang.String docID, final int flags, final long dict, final boolean isPush, final java.lang.Object context) { final com.couchbase.lite.AbstractReplicator replicator = ((com.couchbase.lite.AbstractReplicator) (context)); return replicator.validationFunction(docID, flags, dict, isPush); } };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1771/buggy-version/shared.src.main.java.com.couchbase.lite.AbstractReplicator.java", "BodyUseAPI": [], "Fixed commit": "82d22e0076b31bbc8dc032359141ad98fc010874", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-android", "Date": "2018-12-22T00:53:18Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((session.getAttribute(\"newDonation\")) != null) newDonation = ((Servlets.Donation) (session.getAttribute(\"newDonation\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5660/buggy-version/src.Servlets.confirmDonation.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Fixed commit": "31c49626e3cd2cf34243d04501a1540ded1884c8", "Url": "https://api.github.com/repos/jbmv/disastercenter", "Date": "2018-11-29T22:31:56Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newDonation.getProduct()) == null) newDonation.setProduct(productList.getProductByID(java.lang.String.valueOf(newDonation.getProductID())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5660/buggy-version/src.Servlets.confirmDonation.java", "BodyUseAPI": ["Servlets.Donation.getProductID()", "Servlets.Donation.setProduct(productList.getProductByID(java.lang.String.valueOf(newDonation.getProductID())))", "Servlets.ProductList.getProductByID(java.lang.String)", "java.lang.String.valueOf(newDonation.getProductID())"], "Fixed commit": "31c49626e3cd2cf34243d04501a1540ded1884c8", "Url": "https://api.github.com/repos/jbmv/disastercenter", "Date": "2018-11-29T22:31:56Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(id.isNull())) { imageComponent = ((ch.uzh.marugoto.core.data.entity.ImageComponent) (ch.uzh.marugoto.shell.util.BeanUtil.getBean(ch.uzh.marugoto.core.data.repository.ComponentRepository.class).findById(id.asText()).orElse(null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/433/buggy-version/shell.src.main.java.ch.uzh.marugoto.shell.deserializer.ImageComponentDeserializer.java", "BodyUseAPI": ["ch.uzh.marugoto.shell.util.BeanUtil.getBean(ch.uzh.marugoto.core.data.repository.ComponentRepository.class).findById(id.asText())", "ch.uzh.marugoto.shell.util.BeanUtil.getBean(ch.uzh.marugoto.core.data.repository.ComponentRepository.class).findById(id.asText()).orElse(<nulltype>)", "ch.uzh.marugoto.shell.deserializer.var.asText()"], "Fixed commit": "b2586bccf508acc423adb548b2328ed9416c4eae", "Url": "https://api.github.com/repos/uzh/marugoto", "Date": "2018-12-11T15:58:11Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (u.unitType.equals(\"Headquaters\")) { com.example.filip.finalproject.GameEngine.message = (\"Headquaters have been destroyed. \" + (com.example.filip.finalproject.GameEngine.playing.color)) + \" player wins!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3494/buggy-version/app.src.main.java.com.example.filip.finalproject.GameEngine.java", "BodyUseAPI": [], "Fixed commit": "44dd1805e25c9718045385972c980f60fb3f62e2", "Url": "https://api.github.com/repos/Matasic2/FinalProject", "Date": "2018-11-30T06:33:14Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.players.Search_Player(swap_territories.get(strSwp).owner_name)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((defender.owned_territories.size()) == 0) { defender.current_state = State_Player.DEAD; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6684/buggy-version/src.models.AI_Cheater.java", "BodyUseAPI": [], "Fixed commit": "8b9f9287e3eb1761619b41627ffef0a095304fd1", "Url": "https://api.github.com/repos/hr-gith/risk_game", "Date": "2018-12-01T17:13:26Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["invocation.getInvokedMethod().getReturnType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Object.class.equals(returnType)) && (invocation.isBuildingExpectation())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7410/buggy-version/jmock.src.main.java.org.jmock.internal.ReturnDefaultValueAction.java", "BodyUseAPI": [], "Fixed commit": "b34208797f0599ef7b9b1b24f6219fd05f3a88e3", "Url": "https://api.github.com/repos/olibye/jmock-library", "Date": "2018-11-05T21:30:10Z"},
{"Line": "=>837", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portlet.expando.service.impl.ExpandoValueLocalServiceImpl.findByRowId(value.getRowId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (values.isEmpty()) { com.liferay.expando.kernel.model.ExpandoRow row = expandoRowPersistence.fetchByPrimaryKey(value.getRowId()); if (row != null) { expandoRowPersistence.remove(row); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2524/buggy-version/portal-impl.src.com.liferay.portlet.expando.service.impl.ExpandoValueLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "bcad656aaf9fb7ca10a2ce3e121bd6a20eed4a54", "Url": "https://api.github.com/repos/EddieOlson/liferay-portal", "Date": "2016-11-25T09:04:16Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status == null) { return com.lb.employeeleave.util.enums.LeaveTypeStatus.INACTIVE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3656/buggy-version/src.main.java.com.lb.employeeleave.mapper.StatusMapper.java", "BodyUseAPI": [], "Fixed commit": "e83f7edca5baa67d7eca187feaa5d97ce1b420bf", "Url": "https://api.github.com/repos/ashrawan/employee-leave-management", "Date": "2018-11-18T10:48:51Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status == null) { return com.lb.employeeleave.util.enums.EmployeeStatus.INACTIVE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3656/buggy-version/src.main.java.com.lb.employeeleave.mapper.StatusMapper.java", "BodyUseAPI": [], "Fixed commit": "e83f7edca5baa67d7eca187feaa5d97ce1b420bf", "Url": "https://api.github.com/repos/ashrawan/employee-leave-management", "Date": "2018-11-18T10:48:51Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status == null) { return com.lb.employeeleave.util.enums.LeaveStatus.PENDING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3656/buggy-version/src.main.java.com.lb.employeeleave.mapper.StatusMapper.java", "BodyUseAPI": [], "Fixed commit": "e83f7edca5baa67d7eca187feaa5d97ce1b420bf", "Url": "https://api.github.com/repos/ashrawan/employee-leave-management", "Date": "2018-11-18T10:48:51Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.ucsb.cs184.moments.moments.Post.powerfulFindPost(key.postKey)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (post != null) for (edu.ucsb.cs184.moments.moments.Rating data : post.getRatings()) if (data.GetKey().equals(key)) return data;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8295/buggy-version/app.src.main.java.edu.ucsb.cs184.moments.moments.FirebaseHelper.java", "BodyUseAPI": ["edu.ucsb.cs184.moments.moments.Post.getRatings()"], "Fixed commit": "afdd1bbdced52c511cd07172e3bab1d76dc2c730", "Url": "https://api.github.com/repos/SeakyLuo/Moments", "Date": "2018-12-10T07:25:02Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.ucsb.cs184.moments.moments.Post.powerfulFindPost(key.postKey)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (post != null) for (edu.ucsb.cs184.moments.moments.Comment data : post.getComments()) if (data.GetKey().equals(key)) return data;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8295/buggy-version/app.src.main.java.edu.ucsb.cs184.moments.moments.FirebaseHelper.java", "BodyUseAPI": ["edu.ucsb.cs184.moments.moments.Post.getComments()"], "Fixed commit": "afdd1bbdced52c511cd07172e3bab1d76dc2c730", "Url": "https://api.github.com/repos/SeakyLuo/Moments", "Date": "2018-12-10T07:25:02Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (io.shardingsphere.spi.NewInstanceServiceLoader.SERVICE_MAP.get(service))) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8166/buggy-version/sharding-core.src.main.java.io.shardingsphere.spi.NewInstanceServiceLoader.java", "BodyUseAPI": [], "Fixed commit": "decc1c4dbc813977675bc6d4ddacc752376dd8a4", "Url": "https://api.github.com/repos/apache/incubator-shardingsphere", "Date": "2018-11-14T07:59:56Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (excluded) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/338/buggy-version/android-app.app.src.main.java.com.dennyy.osrscompanion.enums.SkillType.java", "BodyUseAPI": [], "Fixed commit": "38dbb023d145da2916ba0f8fde9a22f880ccf0a2", "Url": "https://api.github.com/repos/Denny966/Old-School-Companion", "Date": "2018-12-29T11:31:20Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((renderCondition) != null) { elements.add(renderCondition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3520/buggy-version/cq-component-maven-plugin.src.main.java.com.citytechinc.cq.component.touchuidialog.container.ContainerParameters.java", "BodyUseAPI": [], "Fixed commit": "f0ceb2724790d0f40975424a8cbff8baeb798b60", "Url": "https://api.github.com/repos/icfnext/cq-component-maven-plugin", "Date": "2018-12-12T19:43:20Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Objects.isNull(f)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5685/buggy-version/src.main.java.com.github.liaochong.html2excel.core.DefaultExcelBuilder.java", "BodyUseAPI": [], "Fixed commit": "4ec6528a0c17f4407592a11b1dc045811d2e4b2c", "Url": "https://api.github.com/repos/liaochong/myexcel", "Date": "2018-11-08T15:01:27Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["record.getRecruitType().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (temp == null) { recruitTypeMapper.insert(record); }else { for (java.lang.String each : temp) { com.tia.springbootserver.service.impl.RecruitType recruitType = new com.tia.springbootserver.service.impl.RecruitType(); recruitType.setRecruitId(record.getRecruitId()); recruitType.setRecruitType(each); recruitTypeMapper.insert(recruitType); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9093/buggy-version/src.main.java.com.tia.springbootserver.service.impl.RecruitServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "d37ba74e44bb6e1d875c504a4c41b2aec5f13d5c", "Url": "https://api.github.com/repos/ECNU-SCSSE-Developer/ServerSide-springboot", "Date": "2018-11-29T17:15:21Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gauntlet.Skeleton.getColumn()", "gauntlet.Skeleton.getRow()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((col < 0) || (col > (Gauntlet.maxColumn))) || (row < 0)) || (row > (Gauntlet.maxRow))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3822/buggy-version/src.gauntlet.Skeleton.java", "BodyUseAPI": [], "Fixed commit": "e251a0a758f4fef444be56c049b9387428b1ad53", "Url": "https://api.github.com/repos/Chaycej/Gauntlet", "Date": "2018-11-30T21:50:09Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((newLat != null) && (newLon != null)) { double dist = distance(lat, lon, newLat, newLon); if (least > dist) { least = dist; closest = ((java.lang.String) (nodesInWays.get(i))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8641/buggy-version/dbProgram.Path.java", "BodyUseAPI": ["Path.distance(double,double,double,double)"], "Fixed commit": "eb6e0d0140f94e111712316bcbe7e0087e8e4fa9", "Url": "https://api.github.com/repos/GK67/CS520Final", "Date": "2018-12-10T20:10:50Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (result.next()) { tip = new lukuvinkit.domain.ReadingTip(result.getInt(\"id\"), result.getString(\"title\"), result.getString(\"type\"), result.getString(\"url\"), result.getString(\"author\"), result.getString(\"isbn\"), result.getString(\"description\"), result.getBoolean(\"read\"), result.getInt(\"priority_read\"), result.getInt(\"priority_unread\")); }else { tip = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5736/buggy-version/src.main.java.lukuvinkit.database.ReadingTipDao.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getBoolean(java.lang.String)", "java.sql.ResultSet.getInt(java.lang.String)", "java.sql.ResultSet.getInt(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "ec714ab020fdd0e1d26fa3e19528fcc9c9dc9172", "Url": "https://api.github.com/repos/luupanu/ohtu-lukuvinkit", "Date": "2018-12-10T17:37:05Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["currentMatch.getScore().getWinner()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (winner.equals(ScoreEntity.AWAY_TEAM_WINNER)) { viewHolder.homeTeamNameText.setTypeface(null, Typeface.NORMAL); viewHolder.awayTeamNameText.setTypeface(null, Typeface.BOLD); viewHolder.homeTeamScoreText.setTypeface(null, Typeface.NORMAL); viewHolder.awayTeamScoreText.setTypeface(null, Typeface.BOLD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/247/buggy-version/app.src.main.java.tech.joeyck.livefootball.ui.competition_detail.matches.MatchesAdapter.java", "BodyUseAPI": [], "Fixed commit": "ce37a6c929f28f46179e85055f28412505fb3216", "Url": "https://api.github.com/repos/s6joui/football-data-android-java", "Date": "2018-12-01T13:05:44Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.ObjectMapper.convertValue(org.sunbird.models.user.User,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (result != null) { result.remove(JsonKey.EMAIL); result.remove(JsonKey.PHONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8883/buggy-version/actors.user.src.main.java.org.sunbird.user.actors.UserProfileReadActor.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.remove(JsonKey.PHONE)", "java.util.Map<java.lang.String, java.lang.Object>.remove(JsonKey.EMAIL)"], "Fixed commit": "d7e974914e8a27ea8d318395132a5fe5b31c882f", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-12-19T06:06:39Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((DatabaseHelper.user) != null) && ((DatabaseHelper.user.getId()) == id)) return DatabaseHelper.user.getPin().equals(pin);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4121/buggy-version/app.src.main.java.edu.ucsb.cs.cs184.seakyluo.databaseproject.Customer.java", "BodyUseAPI": [], "Fixed commit": "cc463e4a1b5fdb20989bdf248ebd9a1485985142", "Url": "https://api.github.com/repos/SeakyLuo/cs174a", "Date": "2018-11-29T08:09:50Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) != null) { cloned.parent = ((de.gwdg.metadataqa.api.json.JsonBranch) (parent.clone())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1690/buggy-version/src.main.java.de.gwdg.metadataqa.api.json.JsonBranch.java", "BodyUseAPI": [], "Fixed commit": "b7189d53f1d8de46238ff3b8060d0b1a7ff50844", "Url": "https://api.github.com/repos/pkiraly/metadata-qa-api", "Date": "2018-11-29T16:54:26Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == o) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9253/buggy-version/bvm.ballerina-core.src.main.java.org.ballerinalang.util.codegen.cpentries.FunctionCallCPEntry.java", "BodyUseAPI": [], "Fixed commit": "a61b01ee0262edbb8de41620299114771b514e05", "Url": "https://api.github.com/repos/ballerina-platform/ballerina-lang", "Date": "2018-12-17T10:24:07Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((o == null) || ((getClass()) != (o.getClass()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9253/buggy-version/bvm.ballerina-core.src.main.java.org.ballerinalang.util.codegen.cpentries.FunctionCallCPEntry.java", "BodyUseAPI": [], "Fixed commit": "a61b01ee0262edbb8de41620299114771b514e05", "Url": "https://api.github.com/repos/ballerina-platform/ballerina-lang", "Date": "2018-12-17T10:24:07Z"},
{"Line": "=>729", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.round(float)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lastCurrentX == newCurrentX) { callbackScroll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1256/buggy-version/waveselectorwidget.src.main.java.com.tencent.intoo.component.widget.waveselector.WaveSelector.java", "BodyUseAPI": [], "Fixed commit": "8e3838606c8f68fd09ee21613a03ce8c620a8b20", "Url": "https://api.github.com/repos/sparks345/WaveSelector", "Date": "2018-12-17T09:15:42Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nums.length) == 0) { java.lang.System.out.println(\"Must enter a valid number\"); }else { for (java.lang.Integer n : nums) { if (n < (smallest)) smallest = n; if (n > (largest)) largest = n; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2532/buggy-version/src.main.java.tudelft.numfinder.NumFinder.java", "BodyUseAPI": [], "Fixed commit": "a735d276e6e8bc3c7c8341428408840d04fd76b5", "Url": "https://api.github.com/repos/usule020/mooc-software-testing", "Date": "2018-11-20T14:10:23Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (inspectIndex > ((Program.notes.size()) - 1)) { java.lang.System.out.println(\"\\nNo note found at index.\"); java.lang.System.out.println(\"Returning to menu.\\n\"); Menu(); }else { InspectNote(inspectIndex); Menu(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/644/buggy-version/src.Program.java", "BodyUseAPI": ["Program.InspectNote(int)"], "Fixed commit": "a45daf58add00d83864b87ad68b8432ba04f4626", "Url": "https://api.github.com/repos/Niben/notes", "Date": "2018-11-26T18:07:43Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (editIndex > ((Program.notes.size()) - 1)) { java.lang.System.out.println(\"\\nNo note found at index.\"); java.lang.System.out.println(\"Returning to menu.\\n\"); Menu(); }else { Edit(editIndex); Menu(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/644/buggy-version/src.Program.java", "BodyUseAPI": ["Program.Edit(int)"], "Fixed commit": "a45daf58add00d83864b87ad68b8432ba04f4626", "Url": "https://api.github.com/repos/Niben/notes", "Date": "2018-11-26T18:07:43Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (os.equals(\"windows\")) { splitted_path = current.toString().split(\"\\\\\\\\\"); }else { splitted_path = current.toString().split(\"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6719/buggy-version/Indexer.java", "BodyUseAPI": [], "Fixed commit": "4ebc0d64a4cac00e7d9d54f0c644e2910d084eb9", "Url": "https://api.github.com/repos/danibe248/NewsRecSys", "Date": "2018-12-27T22:55:16Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cs2340.group61.doughnation.controller.LoginActivity.getSupportActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (actionbar != null) { actionbar.setTitle(\"DoughNation\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5867/buggy-version/app.src.main.java.cs2340.group61.doughnation.controller.LoginActivity.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.setTitle(java.lang.String)"], "Fixed commit": "774e38c6d9afd2864cf10b5a8a63ec72ab0dfdf2", "Url": "https://api.github.com/repos/ashjtan/cs2340", "Date": "2018-11-15T02:48:58Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cs2340.group61.doughnation.controller.RegistrationActivity.getSupportActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (actionbar != null) { actionbar.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.parseColor(\"#FF4A4A\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5867/buggy-version/app.src.main.java.cs2340.group61.doughnation.controller.RegistrationActivity.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.setBackgroundDrawable(android.graphics.drawable.ColorDrawable)"], "Fixed commit": "774e38c6d9afd2864cf10b5a8a63ec72ab0dfdf2", "Url": "https://api.github.com/repos/ashjtan/cs2340", "Date": "2018-11-15T02:48:58Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edu.gatech.cs2340.donationtracker.Model.modelDB.isEmpty()) { edu.gatech.cs2340.donationtracker.Model.modelDB.add(new edu.gatech.cs2340.donationtracker.Location(\"1\", \"AFD Station\", \"4,33.75416\", \"-84.37742\", \"309 EDGEWOOD AVE SE, Atlanta, GA 30332\", LocationType.DROP_OFF_ONLY, \"(404) 555 - 3456\", \"www.afd04.atl.ga\")); edu.gatech.cs2340.donationtracker.Model.modelDB.add(new edu.gatech.cs2340.donationtracker.Location(\"2\", \"BOYS & GILRS CLUB W.W. WOOLFOLK\", \"33.73182\", \"-84.43971\", \"1642 RICHLAND RD, Atlanta, GA 30332\", LocationType.STORE, \"(404) 555 - 1234\", \"www.bgc.wool.ga\")); edu.gatech.cs2340.donationtracker.Model.modelDB.add(new edu.gatech.cs2340.donationtracker.Location(\"3\", \"PATHWAY UPPER ROOM CHRISTIAN MINISTRIES\", \"33.70866\", \"-84.41853\", \"683 SYLVAN RD, Atlanta, GA 30332\", LocationType.WAREHOUSE, \"(404) 555 - 5432\", \"www.pathways.org\")); edu.gatech.cs2340.donationtracker.Model.modelDB.add(new edu.gatech.cs2340.donationtracker.Location(\"4\", \"PAVILION OF HOPE INC\", \"33.80129\", \"-84.25537\", \"3558 EAST PONCE DE LEON AVE, SCOTTDALE, GA 30079\", LocationType.WAREHOUSE, \"(404) 555 - 8765\", \"www.pathways.org\")); edu.gatech.cs2340.donationtracker.Model.modelDB.add(new edu.gatech.cs2340.donationtracker.Location(\"5\", \"D&D CONVENIENCE STORE\", \"33.71747\", \"-84.2521\", \"2426 COLUMBIA DRIVE, DECATUR, GA 30034\", LocationType.DROP_OFF_ONLY, \"(404) 555 - 9876\", \"www.ddconv.com\")); edu.gatech.cs2340.donationtracker.Model.modelDB.add(new edu.gatech.cs2340.donationtracker.Location(\"6\", \"KEEP NORTH FULTON BEAUTIFUL\", \"33.96921\", \"-84.3688\", \"470 MORGAN FALLS RD, Sandy Springs, GA 30302\", LocationType.STORE, \"(770) 555 - 7321\", \"www.knfb.org\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5345/buggy-version/app.src.main.java.edu.gatech.cs2340.donationtracker.Model.java", "BodyUseAPI": ["java.util.List<edu.gatech.cs2340.donationtracker.Location>.add(edu.gatech.cs2340.donationtracker.Location)", "java.util.List<edu.gatech.cs2340.donationtracker.Location>.add(edu.gatech.cs2340.donationtracker.Location)", "java.util.List<edu.gatech.cs2340.donationtracker.Location>.add(edu.gatech.cs2340.donationtracker.Location)", "java.util.List<edu.gatech.cs2340.donationtracker.Location>.add(edu.gatech.cs2340.donationtracker.Location)", "java.util.List<edu.gatech.cs2340.donationtracker.Location>.add(edu.gatech.cs2340.donationtracker.Location)", "java.util.List<edu.gatech.cs2340.donationtracker.Location>.add(edu.gatech.cs2340.donationtracker.Location)"], "Fixed commit": "400d971c89036dd96ad5b44f06dfd403aa0c9cc1", "Url": "https://api.github.com/repos/HelenaMakendengue/donationTracker", "Date": "2018-11-14T15:22:18Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pkjaya.TuringMachine.transitions.get(i).charAt(8)) == 'l') (pkjaya.TuringMachine.headPosition)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4559/buggy-version/src.pkjaya.TuringMachine.java", "BodyUseAPI": [], "Fixed commit": "aa1b26937347395330d4a56284872fff62a82471", "Url": "https://api.github.com/repos/Hassan-Elseoudy/Turing-Machine", "Date": "2018-12-14T14:53:24Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(objectiveBounds.upper)) { objectiveBounds.upper = java.lang.Double.POSITIVE_INFINITY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1248/buggy-version/src.edu.duke.cs.osprey.sofea.MinLMFE.java", "BodyUseAPI": [], "Fixed commit": "a5f27307a0f7597b0b99f37d0386c6b2b9814b0f", "Url": "https://api.github.com/repos/donaldlab/OSPREY3", "Date": "2018-12-12T22:14:50Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataPostJobEdit) != null) { idJobEdit = dataPostJobEdit.getIdJob(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7773/buggy-version/04_Interface.I02_Source.JobIT.app.src.main.java.com.example.team32gb.jobit.View.PostJob.PostJobRecruitmentActivity.java", "BodyUseAPI": [], "Fixed commit": "e68c68706441d8450fc92133edc9a8b7adde410d", "Url": "https://api.github.com/repos/Team32GB/ISE_NTMT_NHOM18", "Date": "2018-11-21T02:36:34Z"},
{"Line": "=>649", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg.getSender().equals(SYSTEM)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5339/buggy-version/src.main.java.Model.Model.java", "BodyUseAPI": [], "Fixed commit": "46c4dc5fb3c55d86fb22eb469571071336e6584c", "Url": "https://api.github.com/repos/yuvalkif/vacation_for_u", "Date": "2018-12-14T03:13:13Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (destination.exists()) pw = new java.io.PrintWriter(destination); else { java.io.File destination_parent = new java.io.File(destination.getParent()); destination_parent.mkdirs(); pw = new java.io.PrintWriter(destination); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/529/buggy-version/openhabGenerator.org.xtext.msl.openhabgenerator.src.org.xtext.msl.generator.openhabgenerator.OpenHABGenerator.java", "BodyUseAPI": ["java.io.File.getParent()"], "Fixed commit": "21bf7d7f5a3425bf4be78f60648918bbd7c845cb", "Url": "https://api.github.com/repos/fmselab/msl", "Date": "2018-12-14T18:01:24Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 2) { try { logMode = java.lang.Boolean.parseBoolean(args[2]); } catch (java.lang.Exception e) { logMode = org.xtext.msl.generator.openhabgenerator.OpenHABGenerator.writeLog_default; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/529/buggy-version/openhabGenerator.org.xtext.msl.openhabgenerator.src.org.xtext.msl.generator.openhabgenerator.OpenHABGenerator.java", "BodyUseAPI": ["java.lang.Boolean.parseBoolean(java.lang.String)"], "Fixed commit": "21bf7d7f5a3425bf4be78f60648918bbd7c845cb", "Url": "https://api.github.com/repos/fmselab/msl", "Date": "2018-12-14T18:01:24Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(queryViewModel.inputKeyWord.get()))) { queryViewModel.queryDictionary(queryViewModel.queryType.get()); com.bothsunny.dictionary.viewmodel.QueryKeyboardViewModel.hideKeyboard(mBinding.edtInput); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3028/buggy-version/app.src.main.java.com.bothsunny.dictionary.view.QueryActivity.java", "BodyUseAPI": ["queryViewModel.queryType.get()", "com.bothsunny.dictionary.viewmodel.QueryViewModel.queryDictionary(queryViewModel.queryType.get())"], "Fixed commit": "bdfa7d72acf0b5889b41a9bf4218774196ff6c9c", "Url": "https://api.github.com/repos/bothsunny/KDictionary", "Date": "2018-12-15T14:04:16Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(line.equals(\"\"))) { java.lang.String[] swim = line.split(splitBy); swimmers.add(swim); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6149/buggy-version/Delfin.src.Data.Filereader.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "faee5131515bf2ffc99ea4b250b5de6d9dc4e83c", "Url": "https://api.github.com/repos/razz7/Delfin", "Date": "2018-11-16T09:34:30Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((RoadTerrain.y) < 375) RoadTerrain.y = 625; else RoadTerrain.y -= 50;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8168/buggy-version/vish-crossy-roads.crossy_roads.RoadTerrain.java", "BodyUseAPI": [], "Fixed commit": "3cad58bf23c0617a5ad23fc2e8df733f7612c6b2", "Url": "https://api.github.com/repos/nguyensjsu/fa18-202-mavericks", "Date": "2018-11-15T21:18:40Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { searchUrl = savedInstanceState.getString(org.edx.mobile.view.WebViewDiscoverCoursesFragment.INSTANCE_CURRENT_DISCOVER_URL, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5103/buggy-version/OpenEdXMobile.src.main.java.org.edx.mobile.view.WebViewDiscoverCoursesFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String,<nulltype>)"], "Fixed commit": "48188d07b7c8e3b9ea36494abc5dd60ae37e18f5", "Url": "https://api.github.com/repos/farhan-arshad-dev/edx-app-android", "Date": "2018-12-19T08:49:25Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rs.getString(\"pets_names\").isEmpty())) { owner.setPetsNames(rs.getString(\"pets_names\").split(\",\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4635/buggy-version/petclinic-core.src.be.heh.petclinic.component.owner.OwnerRowMapper.java", "BodyUseAPI": ["be.heh.petclinic.domain.Owner.setPetsNames(java.lang.String[])", "java.sql.ResultSet.getString(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "5d51d4e700dcbaf333468dff150e87f1cba22f97", "Url": "https://api.github.com/repos/juldhyne/petclinic", "Date": "2018-11-17T18:17:50Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.acubelab.tagme.preprocessing.TopicSearcher.getTitle(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (entity == null) { entity = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1183/buggy-version/src.org.gesis.AnnotateDataset.java", "BodyUseAPI": [], "Fixed commit": "1060142df6b91f1f6c734bddaa626379a4522296", "Url": "https://api.github.com/repos/claimskg/tagme", "Date": "2018-12-12T08:48:56Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.acubelab.tagme.preprocessing.TopicSearcher.getCategories(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (categories == null) { categories = new java.lang.String[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1183/buggy-version/src.org.gesis.AnnotateDataset.java", "BodyUseAPI": [], "Fixed commit": "1060142df6b91f1f6c734bddaa626379a4522296", "Url": "https://api.github.com/repos/claimskg/tagme", "Date": "2018-12-12T08:48:56Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((card.getQuestion().length()) > 0) && ((card.getAnswer().length()) > 0)) { writer.write(((card.getQuestion()) + \"/\")); writer.write(((card.getAnswer()) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1890/buggy-version/src.quiz_card.QuizCardBuilder.java", "BodyUseAPI": ["quiz_card.QuizCard.getQuestion()", "java.io.BufferedWriter.write(((card.getAnswer()) + \"\\n\"))", "java.io.BufferedWriter.write(((card.getQuestion()) + \"/\"))", "quiz_card.QuizCard.getAnswer()"], "Fixed commit": "49dd2c30213892d739d7871d77ea62af077d1af4", "Url": "https://api.github.com/repos/rvfedorin/JavaStudy", "Date": "2018-12-12T12:20:40Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xmlpull.v1.XmlPullParser.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (name.equalsIgnoreCase(\"img\")) { android.util.Log.d(com.arsenalfanhub.android.arsenalfanhub.HomeActivity.TAG, \"Entered Here\"); try { } catch (java.lang.Exception e) { android.util.Log.d(com.arsenalfanhub.android.arsenalfanhub.HomeActivity.TAG, (\"Error is: \" + (e.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1550/buggy-version/app.src.main.java.com.arsenalfanhub.android.arsenalfanhub.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "58e8f55687cf449a0b226c375a8910564d8ead29", "Url": "https://api.github.com/repos/PremierLeagueHub/PremierLeagueHub-Android-Version-", "Date": "2018-11-08T23:10:10Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logger.isDebugEnabled()) { logger.debug((\"analyze file: \" + (file.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8833/buggy-version/fireeye.src.main.java.com.jumpingstone.codequality.fireeye.ScanTask.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "d51bdc545526823b056a87e7f41fcb7de4f477c4", "Url": "https://api.github.com/repos/jumpingstone/code_quality", "Date": "2018-11-01T11:39:39Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (config != null) { lbConfigs = io.grpc.internal.ServiceConfigUtil.getLoadBalancingConfigsFromServiceConfig(config); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5816/buggy-version/core.src.main.java.io.grpc.internal.AutoConfiguredLoadBalancerFactory.java", "BodyUseAPI": ["io.grpc.internal.ServiceConfigUtil.getLoadBalancingConfigsFromServiceConfig(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "4631c0c7e865f65ab7ba6f24a4ea33f3697f5f89", "Url": "https://api.github.com/repos/grpc/grpc-java", "Date": "2018-12-07T00:51:45Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.colostate.cs.cs414.p3.bdeining.api.Customer.getWorkoutRoutineIds()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((routines != null) && (!(routines.isEmpty()))) { for (java.lang.String routineId : routines) { try (java.sql.Connection con = dataSource.getConnection()) { edu.colostate.cs.cs414.p3.bdeining.sql.CustomerHandlerImpl.LOGGER.trace(\"Adding customer : {}\", customer); java.sql.PreparedStatement insert = con.prepareStatement(((\"INSERT INTO \" + (edu.colostate.cs.cs414.p3.bdeining.sql.TableConstants.CUSTOMER_WORKOUT_ROUTINE_TABLE_NAME)) + \" (workoutRoutineId, customerId) VALUES (?,?)\")); insert.setString(1, routineId); insert.setString(2, id); insert.execute(); insert.close(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/811/buggy-version/database-handler.src.main.java.edu.colostate.cs.cs414.p3.bdeining.sql.CustomerHandlerImpl.java", "BodyUseAPI": [], "Fixed commit": "72ef76b94bba5b1effb5fa94b1f9ab33a43d718e", "Url": "https://api.github.com/repos/bdeining/cs414-f18-801-singleton", "Date": "2018-11-21T02:55:31Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((y) - ((height) / 2)) < (B_SCORE_SPACE)) y = (B_SCORE_SPACE) + ((height) / 2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3661/buggy-version/src.main.java.SoEproj.Sprite.java", "BodyUseAPI": [], "Fixed commit": "648ee20857696b9ba68a41e9162d423a72225a8d", "Url": "https://api.github.com/repos/waelkarman/SoE-Voyager_on_the_edge_of_the_solar_system", "Date": "2018-12-14T13:57:37Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uk.antiperson.stackmob.entity.StackTools.hasValidMetadata(dead, GlobalValues.LEFTOVER_DAMAGE)) { return dead.getMetadata(GlobalValues.LEFTOVER_DAMAGE).get(0).asDouble(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5011/buggy-version/src.main.java.uk.antiperson.stackmob.entity.death.method.KillStepDamage.java", "BodyUseAPI": ["org.bukkit.entity.LivingEntity.getMetadata(GlobalValues.LEFTOVER_DAMAGE)", "dead.getMetadata(GlobalValues.LEFTOVER_DAMAGE).get(0).asDouble()", "dead.getMetadata(GlobalValues.LEFTOVER_DAMAGE).get(int)"], "Fixed commit": "65c69cc7a43a0b2b1ee8c025c73ba7afb2468fb1", "Url": "https://api.github.com/repos/Nathat23/StackMob-3", "Date": "2018-12-27T09:01:39Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((current) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7115/buggy-version/statusstories.src.main.java.com.rahuljanagouda.statusstories.StoryStatusView.java", "BodyUseAPI": [], "Fixed commit": "f8b875cf0022c9b35887f90113cd2e0de98777ec", "Url": "https://api.github.com/repos/sehmus/StatusStories", "Date": "2018-12-01T01:19:44Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getMappedPorts().equals(\"\"))) { createOptionMap.put(Option.PORT, new java.util.ArrayList(java.util.Arrays.asList(getMappedPorts()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5141/buggy-version/lance.src.main.java.io.github.cloudiator.deployment.lance.DockerComponentSupplier.java", "BodyUseAPI": [], "Fixed commit": "c153117c69d1226cbe72d03cb26d907aa3d59436", "Url": "https://api.github.com/repos/cloudiator/deployment", "Date": "2018-12-12T09:04:54Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File(name).renameTo(new java.io.File((((name) + \".\") + (this.suffix)))))) { throw new java.lang.RuntimeException(\"Log file renaiming failed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4714/buggy-version/src.org.traccar.helper.Log.java", "BodyUseAPI": [], "Fixed commit": "d1f6d1ab58e82c7854cb569554f7626be10f7baf", "Url": "https://api.github.com/repos/elevenClouds/traccar", "Date": "2018-11-10T03:10:57Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ex.getMessage().toUpperCase().contains(\"TRIED\")) { model.addAttribute(conversion.presentation.error.ExceptionHandlers.ERROR_TYPE, conversion.presentation.error.ExceptionHandlers.ERROR_CONV_FAILED); model.addAttribute(conversion.presentation.error.ExceptionHandlers.ERROR_INFO, \"Tried to convert between the same currency.\"); }else if (ex.getMessage().toUpperCase().contains(\"CONVERT\")) { model.addAttribute(conversion.presentation.error.ExceptionHandlers.ERROR_TYPE, conversion.presentation.error.ExceptionHandlers.ERROR_CONV_FAILED); model.addAttribute(conversion.presentation.error.ExceptionHandlers.ERROR_INFO, \"Cannot add conversion from the specified currency to the same currency.\"); }else { model.addAttribute(conversion.presentation.error.ExceptionHandlers.ERROR_TYPE, conversion.presentation.error.ExceptionHandlers.ERROR_GENERIC_TYPE); model.addAttribute(conversion.presentation.error.ExceptionHandlers.ERROR_INFO, conversion.presentation.error.ExceptionHandlers.ERROR_GENERIC_INFO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7952/buggy-version/src.main.java.conversion.presentation.error.ExceptionHandlers.java", "BodyUseAPI": ["conversion.domain.IllegalConversionException.getMessage()", "ex.getMessage().toUpperCase().contains(java.lang.String)", "ex.getMessage().toUpperCase()"], "Fixed commit": "bbde08f259e0975270436f2277273d7215e28340", "Url": "https://api.github.com/repos/sharf91/netpro-jojo-sharf-4", "Date": "2018-12-15T11:47:49Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["memory.get(\"listOfLocations\").getAsJsonArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((listOfLocations.size()) == 0) { firstLocation = \"(no location)\"; }else { firstLocation = listOfLocations.get(0).getAsJsonObject().get(\"locationName\").getAsString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/784/buggy-version/android.app.src.main.java.bounswe2018group1.cmpe451.helpers.MemoryAdapter.java", "BodyUseAPI": ["com.google.gson.JsonArray.get(int)", "listOfLocations.get(0).getAsJsonObject().get(java.lang.String)", "listOfLocations.get(0).getAsJsonObject().get(\"locationName\").getAsString()", "listOfLocations.get(0).getAsJsonObject()"], "Fixed commit": "7e41c78b78a9cac59702c7e422ab112fc4709fce", "Url": "https://api.github.com/repos/bounswe/bounswe2018group1", "Date": "2018-12-01T11:46:09Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) != null) { adapter.setItems(usersItems); adapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9643/buggy-version/app.src.main.java.ch.epfl.sweng.radius.utils.customLists.customUsers.CustomUserTab.java", "BodyUseAPI": [], "Fixed commit": "39f5a414559e6596ecb23f40e726ba831146aa8e", "Url": "https://api.github.com/repos/2018-SWENG/2018-SWENG-Radius", "Date": "2018-12-04T11:39:36Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.getContextClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((contextClassLoader != null) && (contextClassLoader.getClass().getSimpleName().equalsIgnoreCase(\"RestartClassLoader\"))) { getProperties().put(AvailableSettings.CLASSLOADERS, contextClassLoader); }else { getProperties().put(AvailableSettings.CLASSLOADERS, connectionSource.getClass().getClassLoader()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8288/buggy-version/grails-datastore-gorm-hibernate5.src.main.groovy.org.grails.orm.hibernate.cfg.HibernateMappingContextConfiguration.java", "BodyUseAPI": ["getProperties().put(AvailableSettings.CLASSLOADERS,java.lang.ClassLoader)"], "Fixed commit": "56df99d58721ddcc0c014669853ea65c90ed5ee3", "Url": "https://api.github.com/repos/grails/gorm-hibernate5", "Date": "2018-12-17T15:15:38Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == count) { fileBuilder.append(\"\\n\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/563/buggy-version/src.FileManager.java", "BodyUseAPI": [], "Fixed commit": "894f20f3c2bac138bf1fcb60a2d4379e7a8f6dac", "Url": "https://api.github.com/repos/CSC131Fall2018/Group1", "Date": "2018-12-10T00:34:26Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.equals(FunctionResult.NONE)) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9533/buggy-version/src.main.java.pl.jakubraban.whereismyjudgement.output.DataPrinter.java", "BodyUseAPI": [], "Fixed commit": "92d17d487af36c5bedf5f02716082bed67341d08", "Url": "https://api.github.com/repos/JakubRaban/where-is-my-judgment", "Date": "2018-12-05T13:04:07Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.jakubraban.whereismyjudgement.FunctionResult.getErroneousInput()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(erroneousInput.isEmpty())) { printedResult.append(\"B\u0141\u0104D: \u017badna instancja \").append(affectedClass).append(\" nie wynika z u\u017cycia \").append(erroneousInput.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9533/buggy-version/src.main.java.pl.jakubraban.whereismyjudgement.output.DataPrinter.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.util.List<java.lang.String>.toString()"], "Fixed commit": "92d17d487af36c5bedf5f02716082bed67341d08", "Url": "https://api.github.com/repos/JakubRaban/where-is-my-judgment", "Date": "2018-12-05T13:04:07Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getErrorStream()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (errorstream == null) throw new java.io.IOException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6850/buggy-version/app.src.main.java.fr.catch23.happyshare.APIManager.java", "BodyUseAPI": [], "Fixed commit": "d58525dffe0c3cd730089e80c24b022f64315486", "Url": "https://api.github.com/repos/nbr23/HappyShare", "Date": "2018-11-06T23:47:56Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rcb.sync.api.RedisClient<K, java.lang.String>.get(K)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (this.token.equals(token.get())) { if (org.rcb.sync.LockImpl.log.isDebugEnabled()) { org.rcb.sync.LockImpl.log.debug(java.lang.String.format(\"Lock %s has been confirmed\", key)); } return true; }else { if (org.rcb.sync.LockImpl.log.isDebugEnabled()) { org.rcb.sync.LockImpl.log.debug(java.lang.String.format(\"Lock %s was not confirmed, it's currently acquired using token %s\", key, token)); } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1522/buggy-version/rcb-core.src.main.java.org.rcb.sync.LockImpl.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,K,java.util.Optional<java.lang.String>)", "org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "10f736e9f16c6218b56cc1ce4f0d5792724fe6ec", "Url": "https://api.github.com/repos/vlad1/rcb", "Date": "2018-11-06T01:08:49Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((runHistory) instanceof ca.ubc.cs.beta.aeatk.runhistory.ThreadSafeRunHistory)) { this.rwltt.unlockWrite(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7340/buggy-version/src.ca.ubc.cs.beta.aeatk.runhistory.ThreadSafeRunHistoryWrapper.java", "BodyUseAPI": [], "Fixed commit": "bd4c29a80e2d82fe40f3cef5b1b7b808b8ef2111", "Url": "https://api.github.com/repos/sanchai-snap/AEATK", "Date": "2018-12-07T16:00:14Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((runHistory) instanceof ca.ubc.cs.beta.aeatk.runhistory.ThreadSafeRunHistory)) { this.rwltt.lockWrite(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7340/buggy-version/src.ca.ubc.cs.beta.aeatk.runhistory.ThreadSafeRunHistoryWrapper.java", "BodyUseAPI": [], "Fixed commit": "bd4c29a80e2d82fe40f3cef5b1b7b808b8ef2111", "Url": "https://api.github.com/repos/sanchai-snap/AEATK", "Date": "2018-12-07T16:00:14Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(int)", "java.sql.ResultSet.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((u == use) && (p == pass)) { rtn = \"Welcome, doctor \" + (rs.getString(2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/928/buggy-version/src.aSSBLASTER50000.ASSwordCheck.java", "BodyUseAPI": [], "Fixed commit": "49b9768f31b259d56382f8ae1aa0aaa1e05c214c", "Url": "https://api.github.com/repos/ropeSnake413/ASSBLASTER50000", "Date": "2018-12-06T15:53:41Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (jsNode == null) throw new java.lang.RuntimeException((\"Could not send HereApi Request: \" + url));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5425/buggy-version/src.main.java.guidelines.utilities.HereApi.java", "BodyUseAPI": [], "Fixed commit": "00bdd7c559ca998f28c4c74c999192d5d24e1098", "Url": "https://api.github.com/repos/sweIhm-ws2018-19/skillproject-fr-31", "Date": "2018-12-12T17:00:54Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.mingshan.logger.async.property.AsyncLoggerProperty<java.lang.String>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (me.mingshan.logger.async.util.StringUtil.isEmpty(implementClass)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4873/buggy-version/async-logger-core.src.main.java.me.mingshan.logger.async.plugin.AsyncLoggerPlugins.java", "BodyUseAPI": [], "Fixed commit": "2cdd1e651ceb1d85038db6c29433b92c2b41a0b0", "Url": "https://api.github.com/repos/mstao/Magpie", "Date": "2018-11-07T05:35:33Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((helperClass) != null) script.append(((\"ui.item.removeClass('\" + (helperClass)) + \"');\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/388/buggy-version/core.src.main.java.io.onedev.server.web.behavior.sortable.SortBehavior.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "0fb8d0aff4b30cee933807bd59cb840250c740cc", "Url": "https://api.github.com/repos/theonedev/onedev", "Date": "2018-12-17T00:34:21Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((scorePopupWindow) != null) && (scorePopupWindow.isShowing())) { scorePopupWindow.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/404/buggy-version/app.src.main.java.in.ngsc.sixty.MainActivity.java", "BodyUseAPI": ["android.widget.PopupWindow.dismiss()"], "Fixed commit": "7031a04aeb52f6fd6d15102a6e111f5c82eac427", "Url": "https://api.github.com/repos/yogesh2jadhav/Game2", "Date": "2018-12-10T18:15:52Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ContinuousDijkstra.mergeWindows(Window,Window)", "java.util.ArrayList<Window>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (adjustedWindow != oldWindow) pq.remove(oldWindow);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7157/buggy-version/src.ContinuousDijkstra.java", "BodyUseAPI": ["java.util.PriorityQueue<Window>.remove(Window)"], "Fixed commit": "7f9be0e11024b7c8ab6ca8095099e4c654e3e281", "Url": "https://api.github.com/repos/paulcaron/geodesics-on-meshes", "Date": "2018-12-17T12:37:00Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION }, 101); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/720/buggy-version/app.src.main.java.com.project.technion.appark.Experiments.ExperimentsActivity.java", "BodyUseAPI": [], "Fixed commit": "9df7c9ac964809a3946b34fcd4c7e183fd7d076b", "Url": "https://api.github.com/repos/TechnionYP5779/team2-Appark", "Date": "2018-12-25T08:29:36Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((collectionReferenceInspire.spatialResolution.value) == null) { throw new io.arlas.server.utils.BadRequestException(\"The spatial resolution value must not be null nor empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6468/buggy-version/arlas-core.src.main.java.io.arlas.server.utils.CheckParams.java", "BodyUseAPI": [], "Fixed commit": "a9a41f929868f401da1963557042c7e60e3e118c", "Url": "https://api.github.com/repos/gisaia/ARLAS-server", "Date": "2018-12-05T14:48:38Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (query.contains(\"_id\")) { @java.lang.SuppressWarnings(\"unchecked\") java.util.Map<java.lang.String, java.lang.String> queryWithId = ((java.util.Map<java.lang.String, java.lang.String>) (com.mongodb.util.JSON.parse(query))); java.lang.String id = queryWithId.get(\"_id\"); queryObject = new org.apache.solr.handler.dataimport.BasicDBObject(\"_id\", new org.bson.types.ObjectId(id)); }else { queryObject = ((org.apache.solr.handler.dataimport.DBObject) (com.mongodb.util.JSON.parse(query))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8755/buggy-version/src.main.org.apache.solr.handler.dataimport.MongoDataSource.java", "BodyUseAPI": ["com.mongodb.util.JSON.parse(java.lang.String)", "com.mongodb.util.JSON.parse(java.lang.String)"], "Fixed commit": "4656cf93de7d03b08c481292949fd2f2a8b11d0f", "Url": "https://api.github.com/repos/moorthimahalingam/SolrMongoImporter", "Date": "2018-11-23T20:01:01Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((mongoId != null) && (java.lang.Boolean.parseBoolean(mongoId))) { java.lang.Object srcId = row.get(columnFieldName); row.put(columnFieldName, srcId.toString()); }else { row.put(columnFieldName, row.get(mongoFieldName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8755/buggy-version/src.main.org.apache.solr.handler.dataimport.MongoMapperTransformer.java", "BodyUseAPI": [], "Fixed commit": "4656cf93de7d03b08c481292949fd2f2a8b11d0f", "Url": "https://api.github.com/repos/moorthimahalingam/SolrMongoImporter", "Date": "2018-11-23T20:01:01Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.headers) == null) { this.headers = parser.settings.getHeaders(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8408/buggy-version/src.main.java.com.univocity.parsers.common.ParserOutput.java", "BodyUseAPI": [], "Fixed commit": "0629a3b942c86379d03d24eb945a0b11fe31d45b", "Url": "https://api.github.com/repos/mosoft521/univocity-parsers", "Date": "2018-11-23T02:25:42Z"},
{"Line": "=>1740", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pos >= 0) { pos = (pos * 2) + 1; if ((pos + 1) < (splitText.count())) { if (isRegex) { replacePattern = splitText.get(pos).replaceFirst(searchPattern, replacePattern); } splitText.set((pos - 1), (((splitText.get((pos - 1))) + replacePattern) + (splitText.get((pos + 1))))); splitText.remove(pos, (pos + 2)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6808/buggy-version/src.lu.fisch.structorizer.gui.FindAndReplace.java", "BodyUseAPI": [], "Fixed commit": "9797c31aca404f23b3a89660151359a852ddedc7", "Url": "https://api.github.com/repos/fesch/Structorizer.Desktop", "Date": "2018-11-22T09:47:22Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((phone.length()) > 10) { android.widget.Toast.makeText(this, \"Please enter a Valid Phone Number\", Toast.LENGTH_LONG).show(); }else { saveAdToDatabase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3313/buggy-version/app.src.main.java.com.example.arshdeepsangha.androidproject.PostAdd.java", "BodyUseAPI": [], "Fixed commit": "2094e2cb6b048bb6290e0d93c4063ffe62cde224", "Url": "https://api.github.com/repos/arshdeepsangha/AndroidProject-ADEV-2007", "Date": "2018-11-13T04:14:48Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getPrincipal()) instanceof com.wizzstudio.substitute.security.CustomUserDetails) { userId = ((com.wizzstudio.substitute.security.CustomUserDetails) (org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getPrincipal())).getUsername(); }else { throw new org.springframework.security.access.AccessDeniedException(\"Access Denied\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4756/buggy-version/src.main.java.com.wizzstudio.substitute.aspect.StatisticAspect.java", "BodyUseAPI": [], "Fixed commit": "926771b38cad68a4e45ebf4181430713de90e577", "Url": "https://api.github.com/repos/bjchen2/CampusSubstitute", "Date": "2018-12-15T17:41:17Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getPrincipal()) instanceof com.wizzstudio.substitute.security.CustomUserDetails) { userId = ((com.wizzstudio.substitute.security.CustomUserDetails) (org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getPrincipal())).getUsername(); }else { throw new org.springframework.security.access.AccessDeniedException(\"Access Denied\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4756/buggy-version/src.main.java.com.wizzstudio.substitute.aspect.VerifyUserIdentity.java", "BodyUseAPI": [], "Fixed commit": "926771b38cad68a4e45ebf4181430713de90e577", "Url": "https://api.github.com/repos/bjchen2/CampusSubstitute", "Date": "2018-12-15T17:41:17Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.martykan.forecastie.models.Weather.getLat()", "cz.martykan.forecastie.models.Weather.getLon()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((latitude == 0) && (longitude == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5565/buggy-version/app.src.main.java.cz.martykan.forecastie.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b295eda49f3e8f2cf0407e34bb9be63d60b26b1a", "Url": "https://api.github.com/repos/martykan/forecastie", "Date": "2018-11-23T15:24:14Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (instanceCollectorRegistry == null) { instanceCollectorRegistry = new io.prometheus.client.CollectorRegistry(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1990/buggy-version/pulsar-functions.runtime.src.main.java.org.apache.pulsar.functions.runtime.ThreadRuntime.java", "BodyUseAPI": [], "Fixed commit": "719228df91d2f6b6e4193f233217ba5c1291a2c8", "Url": "https://api.github.com/repos/jerrypeng/incubator-pulsar", "Date": "2018-11-05T22:28:34Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cloud.timo.TimoCloud.bungeecord.TimoCloudBungee.getInstance().getFileManager().getConfig().getBoolean(\"useGlobalMotd\")) serverPing.setDescriptionComponent(new net.md_5.bungee.api.chat.TextComponent(net.md_5.bungee.api.ChatColor.translateAlternateColorCodes('&', proxyObject.getGroup().getMotd())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/332/buggy-version/TimoCloud-Universal.src.main.java.cloud.timo.TimoCloud.bungeecord.listeners.ProxyPing.java", "BodyUseAPI": [], "Fixed commit": "a31104fc8443efb6634e196d319cd18a90a3ec37", "Url": "https://api.github.com/repos/Lasergott/TimoCloud", "Date": "2018-12-28T16:10:08Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (menuItem.getTitle().equals(\"Home Page\")) { android.content.Intent intent = new android.content.Intent(this, com.thewaterboys.textbook_store_app.MainActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/511/buggy-version/app.src.main.java.com.thewaterboys.textbook_store_app.MyAccount.java", "BodyUseAPI": [], "Fixed commit": "11e64b81ec32e46050f6e2914e80d9d4212d2fe1", "Url": "https://api.github.com/repos/FSUTextbookApp/Android_Application", "Date": "2018-12-02T19:54:18Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (menuItem.getTitle().equals(\"About Us\")) { android.content.Intent intent = new android.content.Intent(this, com.thewaterboys.textbook_store_app.AboutUs.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/511/buggy-version/app.src.main.java.com.thewaterboys.textbook_store_app.MyAccount.java", "BodyUseAPI": [], "Fixed commit": "11e64b81ec32e46050f6e2914e80d9d4212d2fe1", "Url": "https://api.github.com/repos/FSUTextbookApp/Android_Application", "Date": "2018-12-02T19:54:18Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (terms[i].substring(0, 2).equals(\"x^\")) { coefficients[i] = 1; }else { coefficients[i] = java.lang.Double.parseDouble(terms[i].substring(0, terms[i].indexOf(\"x\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2925/buggy-version/src.javmos.Polynomial.java", "BodyUseAPI": [], "Fixed commit": "bc7a2e86e46be44253fa6295c6f485010d882f97", "Url": "https://api.github.com/repos/fofsfofs/Javmos", "Date": "2018-12-31T01:15:22Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { addCipherStorageToMap(new com.oblador.keychain.cipherStorage.CipherStorageKeystoreRSAECB(reactContext)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8677/buggy-version/android.src.main.java.com.oblador.keychain.KeychainModule.java", "BodyUseAPI": [], "Fixed commit": "943333de2c812d3e0c453bcc1554aba20b3dc9f6", "Url": "https://api.github.com/repos/cladjules/react-native-keychain", "Date": "2018-11-27T20:10:26Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(edtPetWeight.getText().toString().trim())) weight = 0; else weight = java.lang.Integer.parseInt(edtPetWeight.getText().toString().trim());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1361/buggy-version/app.src.main.java.com.example.android.pets.EditorActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "edtPetWeight.getText().toString().trim()", "edtPetWeight.getText().toString()", "java.lang.Integer.parseInt(edtPetWeight.getText().toString().trim())"], "Fixed commit": "b98e890cf242c3f9865a76d0813f66618ec79c22", "Url": "https://api.github.com/repos/resuls/Pets", "Date": "2018-12-08T22:44:14Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edtPetName.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((android.text.TextUtils.isEmpty(name)) || (android.text.TextUtils.isEmpty(name))) || ((gender) == (com.example.android.pets.data.PetContract.Pet.GENDER_UNKNOWN))) return; else { values.put(Pet.COLUMN_NAME, name); values.put(Pet.COLUMN_BREED, breed); values.put(Pet.COLUMN_GENDER, gender); values.put(Pet.COLUMN_WEIGHT, weight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1361/buggy-version/app.src.main.java.com.example.android.pets.EditorActivity.java", "BodyUseAPI": ["android.content.ContentValues.put(Pet.COLUMN_NAME,java.lang.String)"], "Fixed commit": "b98e890cf242c3f9865a76d0813f66618ec79c22", "Url": "https://api.github.com/repos/resuls/Pets", "Date": "2018-12-08T22:44:14Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (home != null) { plugin.sendCooldown(p, home); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4078/buggy-version/src.main.java.fi.matiaspaavilainen.masuitehomes.commands.Teleport.java", "BodyUseAPI": ["fi.matiaspaavilainen.masuitehomes.MaSuiteHomes.sendCooldown(net.md_5.bungee.api.connection.ProxiedPlayer,fi.matiaspaavilainen.masuitehomes.Home)"], "Fixed commit": "ab936c359a241f359515d3d601705247b685eca9", "Url": "https://api.github.com/repos/masagameplay/MaSuiteHomes", "Date": "2018-12-22T18:21:24Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((annotation.getBegin()) == (annotation.getEnd())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5877/buggy-version/inception-search-mtas.src.main.java.de.tudarmstadt.ukp.inception.search.index.mtas.MtasUimaParser.java", "BodyUseAPI": [], "Fixed commit": "bcbb51e67cad22cb8007a7a1d3eacbf8017e6107", "Url": "https://api.github.com/repos/inception-project/inception", "Date": "2018-11-30T07:50:03Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, de.tudarmstadt.ukp.clarin.webanno.model.AnnotationLayer>.get(aAnnotation.getType().getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((layer.getAttachFeature()) != null) { sourceFs = org.apache.uima.fit.util.FSUtil.getFeature(sourceFs, layer.getAttachFeature().getName(), org.apache.uima.cas.text.AnnotationFS.class); targetFs = org.apache.uima.fit.util.FSUtil.getFeature(targetFs, layer.getAttachFeature().getName(), org.apache.uima.cas.text.AnnotationFS.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5877/buggy-version/inception-search-mtas.src.main.java.de.tudarmstadt.ukp.inception.search.index.mtas.MtasUimaParser.java", "BodyUseAPI": ["de.tudarmstadt.ukp.clarin.webanno.model.AnnotationLayer.getAttachFeature()", "layer.getAttachFeature().getName()", "de.tudarmstadt.ukp.clarin.webanno.model.AnnotationLayer.getAttachFeature()", "layer.getAttachFeature().getName()", "org.apache.uima.fit.util.FSUtil.getFeature(org.apache.uima.cas.text.AnnotationFS,layer.getAttachFeature().getName(),java.lang.Class)", "org.apache.uima.fit.util.FSUtil.getFeature(org.apache.uima.cas.text.AnnotationFS,layer.getAttachFeature().getName(),java.lang.Class)"], "Fixed commit": "bcbb51e67cad22cb8007a7a1d3eacbf8017e6107", "Url": "https://api.github.com/repos/inception-project/inception", "Date": "2018-11-30T07:50:03Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sx == dx) && (sy == dy)) return new java.util.LinkedList<com.gui.Tuple>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3637/buggy-version/src.com.ai.Utils.java", "BodyUseAPI": [], "Fixed commit": "48c58b42b67545b91693ffebc5300cb7e23024a3", "Url": "https://api.github.com/repos/ngocjr7/snake", "Date": "2018-12-20T00:27:46Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(profileViewModel.imageUrl.get().equals(\"\"))) { com.bumptech.glide.Glide.with(this).load(profileViewModel.imageUrl.get()).into(((android.widget.ImageView) (findViewById(R.id.img_profile)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4172/buggy-version/app.src.main.java.com.example.navadon.androidnamecard.profile.ProfileActivity.java", "BodyUseAPI": ["com.bumptech.glide.Glide.with(this).load(profileViewModel.imageUrl.get()).into(((android.widget.ImageView) (findViewById(R.id.img_profile))))", "com.bumptech.glide.Glide.with(this).load(profileViewModel.imageUrl.get())", "profileViewModel.imageUrl.get()"], "Fixed commit": "4a3cbc56527bd0223faa577de5e995aa4fe692a0", "Url": "https://api.github.com/repos/molysulfur/AndroidNameCard", "Date": "2018-12-15T17:35:54Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newText.matches(\"\")) { items = persistenceProfile.getDataFromDB(); }else { items = persistenceProfile.getDbMatchesForQuery(newText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9355/buggy-version/app.src.main.java.com.example.peterjester.inventory.activity.SearchItemActivity.java", "BodyUseAPI": ["com.example.peterjester.inventory.model.dao.ItemPersistence.getDbMatchesForQuery(java.lang.String)"], "Fixed commit": "d35bb86affe3f46a962cf447b0a4796145527694", "Url": "https://api.github.com/repos/peterjester/inventory", "Date": "2018-11-27T23:39:29Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != node1) node1 = node1.next;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2355/buggy-version/src.AddTwoNums.java", "BodyUseAPI": [], "Fixed commit": "98506e4afb113dd443b0ac020e18a6f796a70c11", "Url": "https://api.github.com/repos/wang198927/idle-leetcode", "Date": "2018-12-22T08:38:14Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != node2) node2 = node2.next;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2355/buggy-version/src.AddTwoNums.java", "BodyUseAPI": [], "Fixed commit": "98506e4afb113dd443b0ac020e18a6f796a70c11", "Url": "https://api.github.com/repos/wang198927/idle-leetcode", "Date": "2018-12-22T08:38:14Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (carry > 0) { curNode.next = new ListNode(carry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2355/buggy-version/src.AddTwoNums.java", "BodyUseAPI": [], "Fixed commit": "98506e4afb113dd443b0ac020e18a6f796a70c11", "Url": "https://api.github.com/repos/wang198927/idle-leetcode", "Date": "2018-12-22T08:38:14Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.String.class.equals(clazz)) { return \"\"; }else if (java.lang.Void.TYPE.equals(clazz)) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1871/buggy-version/myth-common.src.main.java.com.github.myth.common.utils.DefaultValueUtils.java", "BodyUseAPI": ["java.lang.Class<java.lang.Void>.equals(java.lang.Class)"], "Fixed commit": "44348e34b791e3a335b27491af8cb672b69405cb", "Url": "https://api.github.com/repos/yu199195/myth", "Date": "2018-11-01T10:16:56Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mvc.cryptovault.console.dao.AdminUserPermissionMapper.findPermissionStr(java.math.BigInteger)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == str) { str = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5770/buggy-version/console.src.main.java.com.mvc.cryptovault.console.service.AdminUserPermissionService.java", "BodyUseAPI": [], "Fixed commit": "44689c79dbf5259333bd53524882c608618a5fdd", "Url": "https://api.github.com/repos/mvchain/cryptovault-service", "Date": "2018-12-10T06:01:58Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toneGenerator) != null) { toneGenerator.release(); toneGenerator = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7180/buggy-version/src.main.java.com.marianhello.bgloc.provider.AbstractLocationProvider.java", "BodyUseAPI": [], "Fixed commit": "195941bb454107fc349b37deffdbf17bc3e74f7e", "Url": "https://api.github.com/repos/tlacroix/background-geolocation-android", "Date": "2018-12-18T00:42:52Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.ownHost.equals(queryRequest.getRequesterHost())) && ((this.ownPort) == (queryRequest.getGetRequesterPort()))) { lk.uom.cse14.dsd.query.QueryTask qt = this.queryTasks.get(queryRequest.getRequestID()); if (qt != null) { qt.setQueryResult(new lk.uom.cse14.dsd.msghandler.QueryResultSet()); } }else { lk.uom.cse14.dsd.comm.request.Request oldRequest = oldRequestMap.get(request.getUuid()); if (oldRequest != null) { lk.uom.cse14.dsd.comm.response.QueryResponse response1 = new lk.uom.cse14.dsd.comm.response.QueryResponse(ownHost, ownPort, oldRequest.getSource(), oldRequest.getSourcePort()); response1.setUuid(oldRequest.getUuid()); response1.setStatus(Response.SUCCESS); response1.setHopCount(oldRequest.getHopCount()); scheduler.schedule(response1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6902/buggy-version/src.main.java.lk.uom.cse14.dsd.msghandler.QueryHandler.java", "BodyUseAPI": ["lk.uom.cse14.dsd.comm.request.QueryRequest.getRequestID()", "java.util.HashMap<java.lang.String, lk.uom.cse14.dsd.query.QueryTask>.get(queryRequest.getRequestID())"], "Fixed commit": "6d3354197c3bc63cba233f9085087e04e6fc26d2", "Url": "https://api.github.com/repos/umstek/dsd", "Date": "2018-11-30T10:45:05Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Barrier.barrierOn)) { OK = false; Barrier.barrierOn = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4047/buggy-version/Assignment1.src.Barrier.java", "BodyUseAPI": [], "Fixed commit": "9f93c7361de4052dadf80fdcd8a91f482c38023b", "Url": "https://api.github.com/repos/kirke200/Concurrent-Programming-Assignment1", "Date": "2018-11-21T16:49:03Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Barrier.barrierOn) { Barrier.barrierOn = false; OK = true; notifyAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4047/buggy-version/Assignment1.src.Barrier.java", "BodyUseAPI": [], "Fixed commit": "9f93c7361de4052dadf80fdcd8a91f482c38023b", "Url": "https://api.github.com/repos/kirke200/Concurrent-Programming-Assignment1", "Date": "2018-11-21T16:49:03Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!sngIsFinished) { java.awt.image.BufferedImage bufferedImage2 = com.lennart.model.imageprocessing.ImageProcessor.getBufferedImageScreenShot(74, 167, 1, 1); int pixelRgb2 = bufferedImage2.getRGB(0, 0); if ((pixelRgb2 / 100) == (-31580)) { java.lang.System.out.println(\"sng is finished\"); sngIsFinished = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7566/buggy-version/src.main.java.com.lennart.model.imageprocessing.sites.stars.StarsTableReader.java", "BodyUseAPI": [], "Fixed commit": "5506286264ded4eac52b53b2f808fb94b63e8af1", "Url": "https://api.github.com/repos/coconutsRhealthy/headsuphelper", "Date": "2018-12-19T08:48:14Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lennart.model.action.actionbuilders.ai.HandHistoryReaderStars.getLinesOfLastGame(java.util.List<java.lang.String>,int,double)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(lastHand.isEmpty())) { lastHandNumber = handHistoryReaderStars.getHandNumber(lastHand.get(0)); }else { java.lang.System.out.println(\"lasthand was empty in isNewHand()\"); lastHandNumber = \"-2\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7566/buggy-version/src.main.java.com.lennart.model.action.actionbuilders.ai.ContinuousTable.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "com.lennart.model.action.actionbuilders.ai.HandHistoryReaderStars.getHandNumber(java.lang.String)"], "Fixed commit": "5506286264ded4eac52b53b2f808fb94b63e8af1", "Url": "https://api.github.com/repos/coconutsRhealthy/headsuphelper", "Date": "2018-12-19T08:48:14Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logbook.checkIfLogbookInstalled(context)) { logbook.passDataToLogbook(context, textForLookbook.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1524/buggy-version/app.src.main.java.com.example.taamefl2.appquest_morse.MainActivity.java", "BodyUseAPI": ["com.example.taamefl2.appquest_morse.LogbookHandling.passDataToLogbook(android.content.Context,textForLookbook.getText().toString())"], "Fixed commit": "d5c6200fec097873175452fbbae2e0b7c3326dc0", "Url": "https://api.github.com/repos/Tamalera/Appquest_Morse", "Date": "2018-12-08T08:42:35Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pi.profile.picture) != \"\") { saveData(\"picture\", context, pi.profile.picture); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2609/buggy-version/app.src.main.java.apretaste.Helper.PrefsManager.java", "BodyUseAPI": ["apretaste.Helper.PrefsManager.saveData(java.lang.String,android.content.Context,pi.profile.picture)"], "Fixed commit": "31a95d9694ae46bfd71099a53c00933b183b19b2", "Url": "https://api.github.com/repos/Apretaste/apretaste-app-android", "Date": "2018-12-11T23:25:59Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (num <= 31) { if ((mars.mips.hardware.RegisterFile.mainUI) != null) mars.mips.hardware.RegisterFile.mainUI.getMessagesPane().postRunMessage(java.lang.String.format(\"@%08x: $%2d <= %08x\\n\", ((mars.mips.hardware.RegisterFile.programCounter.getValue()) - 4), num, val)); java.lang.System.out.printf(\"@%08x: $%2d <= %08x\\n\", ((mars.mips.hardware.RegisterFile.programCounter.getValue()) - 4), num, val); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6449/buggy-version/mars.mips.hardware.RegisterFile.java", "BodyUseAPI": ["java.io.PrintStream.printf(java.lang.String,((mars.mips.hardware.RegisterFile.programCounter.getValue()) - 4),int,int)", "java.lang.String.format(java.lang.String,((mars.mips.hardware.RegisterFile.programCounter.getValue()) - 4),int,int)", "mars.mips.hardware.RegisterFile.mainUI.getMessagesPane().postRunMessage(java.lang.String)"], "Fixed commit": "9f93659a53d1ea7894472caf6343790a2757bd8b", "Url": "https://api.github.com/repos/Eadral/mars_buaa", "Date": "2018-12-01T11:30:14Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(column.getUnformattedString(i)))) { newColumn.set(i, tech.tablesaw.util.NumberUtils.toBigDecimal(column.get(i)).doubleValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/26/buggy-version/core.src.main.java.tech.tablesaw.aggregate.NumericAggregateFunction.java", "BodyUseAPI": ["tech.tablesaw.util.NumberUtils.toBigDecimal(column.get(i))", "tech.tablesaw.api.DoubleColumn.set(int,tech.tablesaw.util.NumberUtils.toBigDecimal(column.get(i)).doubleValue())", "tech.tablesaw.util.NumberUtils.toBigDecimal(column.get(i)).doubleValue()", "tech.tablesaw.columns.Column<?>.get(int)"], "Fixed commit": "b64d8a9aa4015889f6b42975cd56bea9bb8b2d2a", "Url": "https://api.github.com/repos/GinPonson/tablesaw", "Date": "2018-12-22T03:07:05Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (marketPlace != null) { stringBuilder.append(\"\\nMarketplace=\").append(marketPlace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9228/buggy-version/frontend.server.src.main.java.com.amazonaws.ml.mms.util.logging.QLogLayout.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "d89c63f8a67fdc2532320e558a1376578942d870", "Url": "https://api.github.com/repos/vrakesh/mxnet-model-server", "Date": "2018-11-13T18:40:05Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.stream.Stream<java.lang.String>.anyMatch(java.util.function.Predicate<? super java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!existing) { java.lang.String err = \"[%s] is not a valid table\"; throw new java.lang.IllegalArgumentException(java.lang.String.format(err, table)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/94/buggy-version/src.main.java.logos.DeleteStatementResolver.java", "BodyUseAPI": [], "Fixed commit": "3ba2dcd2f86c87e41739a2c11af4a9bf2a9dd4bc", "Url": "https://api.github.com/repos/Aelphaeis/TableFKDependancyFinder", "Date": "2018-12-12T18:54:10Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["room.getDescription().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((splitted.length) > 1) { description = splitted[1]; }else { description = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5369/buggy-version/shongo-connector.src.main.java.cz.cesnet.shongo.connector.device.PexipConnector.java", "BodyUseAPI": [], "Fixed commit": "bc63c6727cff3bcb0370c5ecfc791b62af45a48a", "Url": "https://api.github.com/repos/shongo/shongo", "Date": "2018-11-17T20:36:29Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Block.getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((furnace.getCookTime()) + ((getSpeed()) * 10)) > 200) furnace.setCookTime(((short) (188))); else furnace.setCookTime(((short) ((furnace.getCookTime()) + ((getSpeed()) * 10))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4214/buggy-version/src.me.mrCookieSlime.Slimefun.Objects.SlimefunItem.EnhancedFurnace.java", "BodyUseAPI": ["org.bukkit.block.Furnace.setCookTime(((short) ((furnace.getCookTime()) + ((getSpeed()) * 10))))", "org.bukkit.block.Furnace.getCookTime()", "org.bukkit.block.Furnace.setCookTime(int)"], "Fixed commit": "442a92c24748c07cd87099de92d927ab3fe2e99b", "Url": "https://api.github.com/repos/SoSeDiK/Slimefun4", "Date": "2018-11-24T08:24:31Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Jackson.DEFAULT_MAPPER.reader().readValue(response.errorBody())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (magentoError != null) callback.onError(responseCode, magentoError.getError()); else callback.onError(response.code(), response.message());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6912/buggy-version/library.src.main.java.com.dekalabs.magentorestapi.DKRestService.java", "BodyUseAPI": ["com.dekalabs.magentorestapi.ServiceCallback<ServerType>.onError(int,magentoError.getError())", "com.dekalabs.magentorestapi.dto.MagentoError.getError()"], "Fixed commit": "f8b645bac18574d8c28ce0de6fd7780e6d359105", "Url": "https://api.github.com/repos/franrc/magentoApi", "Date": "2018-11-05T17:41:52Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < 3) subnet_Mark += \",\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7211/buggy-version/src.CalculatorUIController.java", "BodyUseAPI": [], "Fixed commit": "4c48a4d9fb5f1e1bdf3ad6fed6b79a3fd194ff8d", "Url": "https://api.github.com/repos/Raksani/subnetcal", "Date": "2018-12-03T16:04:22Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)", "ImageHoster.service.ImageService.getImage(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(user.getId().equals(image.getUser().getId()))) { return \"images/image\"; }else { return \"images/edit\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1824/buggy-version/src.main.java.ImageHoster.controller.ImageController.java", "BodyUseAPI": [], "Fixed commit": "78ac029df2dd6caf859498858b2ae16c217a8f39", "Url": "https://api.github.com/repos/phani2585/Assignment_Final", "Date": "2018-12-26T15:17:03Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (queue.isEmpty()) { guild.getAudioManager().closeAudioConnection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6510/buggy-version/src.main.java.com.hazyarc14.TrackScheduler.java", "BodyUseAPI": [], "Fixed commit": "cf6900eab5bcbb6246ebd087d27077e33d7bc087", "Url": "https://api.github.com/repos/HazyArc14/CollinBot", "Date": "2018-11-19T04:43:28Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mCurrentPage)) { mCurrentPage.close(); mCurrentPage = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5003/buggy-version/android.src.main.java.de.lrosenberg.flutterpdfrenderer.FlutterPdfRendererPlugin.java", "BodyUseAPI": [], "Fixed commit": "0931e62f3dea98c463c5afecae208c5e4f6e5ed3", "Url": "https://api.github.com/repos/rackberg/flutter_pdf_renderer", "Date": "2018-12-16T14:01:07Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["stack.getSystem().getSig()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (null == (sig.getRelation(link.partner, tuplet, org.audiveris.omr.sig.relation.ChordTupletRelation.class))) { link.applyTo(tuplet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7778/buggy-version/src.main.org.audiveris.omr.sheet.rhythm.TupletsBuilder.java", "BodyUseAPI": ["org.audiveris.omr.sig.relation.Link.applyTo(org.audiveris.omr.sig.inter.TupletInter)"], "Fixed commit": "14b90a330ce4cce200b7017ef6597af2ec275cb0", "Url": "https://api.github.com/repos/Audiveris/audiveris", "Date": "2018-11-26T09:43:12Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(entry.getValue())) recordMap.put(entry.getKey(), record.get(entry.getValue()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3085/buggy-version/service.app.controllers.textbook.TextbookController.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "org.apache.commons.csv.CSVRecord.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,record.get(entry.getValue()))", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()"], "Fixed commit": "e66dd88932b93d3ff3783fdbab61688396db87f4", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-service", "Date": "2018-12-07T04:58:21Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(entry.getValue())) hierarchyMap.put(entry.getKey(), record.get(entry.getValue()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3085/buggy-version/service.app.controllers.textbook.TextbookController.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,record.get(entry.getValue()))", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "org.apache.commons.csv.CSVRecord.get(java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()"], "Fixed commit": "e66dd88932b93d3ff3783fdbab61688396db87f4", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-service", "Date": "2018-12-07T04:58:21Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nameKeywords.length) < 2) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6990/buggy-version/src.main.java.seedu.address.logic.parser.FindCommandParser.java", "BodyUseAPI": [], "Fixed commit": "bb2b80c50cf32b5ead9d38741684e013ba7f2ce8", "Url": "https://api.github.com/repos/brandonccm1996/T12-2_addressbook-level4", "Date": "2018-11-11T16:56:41Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nameKeywords.length) < 2) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6990/buggy-version/src.main.java.seedu.address.logic.parser.SortCommandParser.java", "BodyUseAPI": [], "Fixed commit": "bb2b80c50cf32b5ead9d38741684e013ba7f2ce8", "Url": "https://api.github.com/repos/brandonccm1996/T12-2_addressbook-level4", "Date": "2018-11-11T16:56:41Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((kPlusN & 3) == 0) { a += (kPlusN - a) & 7; }else { a += (kPlusN - a) & 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1988/buggy-version/src.main.java.factoring.fermat.lehman.Lehman_TillSimple3.java", "BodyUseAPI": [], "Fixed commit": "411f30f5b7052e1fa090ae1ec48c0b3986f088e3", "Url": "https://api.github.com/repos/ThiloHarich/factoring", "Date": "2018-12-23T10:11:11Z"},
{"Line": "=>4", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x < 0) || (x >= (ary.length))) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1133/buggy-version/ArrayMethods.java", "BodyUseAPI": [], "Fixed commit": "434003e27d1f09d745e4eca03bf104e9bee277b0", "Url": "https://api.github.com/repos/qionghuang6/MKS21X-2darraymethods", "Date": "2018-11-07T02:00:27Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x >= 0) && (x < (a.length))) { sum += a[x]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1133/buggy-version/ArrayMethods.java", "BodyUseAPI": [], "Fixed commit": "434003e27d1f09d745e4eca03bf104e9bee277b0", "Url": "https://api.github.com/repos/qionghuang6/MKS21X-2darraymethods", "Date": "2018-11-07T02:00:27Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == 1) { groupCalender.roll(java.util.Calendar.MONTH, 1); int month = groupCalender.get(java.util.Calendar.MONTH); if (month == 0) { groupCalender.roll(java.util.Calendar.YEAR, 1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2672/buggy-version/app.src.main.java.com.example.meetapp.DateSetter.java", "BodyUseAPI": [], "Fixed commit": "eb71a80c8b88c2cb5f33ce7ff58c3bfc25368c81", "Url": "https://api.github.com/repos/sapirshp/MeetApp", "Date": "2018-12-31T14:34:51Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<org.jsoup.nodes.Node>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((soupChild.childNodeSize()) > 0) { queue.addAll(soupChild.childNodes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7682/buggy-version/elements.src.main.java.org.vaadin.elements.impl.Context.java", "BodyUseAPI": ["java.util.Queue<org.jsoup.nodes.Node>.addAll(soupChild.childNodes())", "org.jsoup.nodes.Node.childNodes()"], "Fixed commit": "c5ae391ce7f6087dedd7dccd064c43145e83fce0", "Url": "https://api.github.com/repos/mpetris/serverside-elements", "Date": "2018-12-14T14:39:43Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (propertiesLocations != null) { for (java.io.File propertiesLocation : propertiesLocations) { propertiesLocationsStrings.add(propertiesLocation.toString().replace(\"\\\\\", \"/\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3135/buggy-version/maven-plugin.src.main.java.io.github.thingersoft.pm.mojo.PropertiesManagerMojo.java", "BodyUseAPI": [], "Fixed commit": "a595b70987afd30bb4d765fdde33b806b2bb5307", "Url": "https://api.github.com/repos/thingersoft/properties-manager", "Date": "2018-12-14T19:07:12Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mSl_address.isRefreshing()) { mSl_address.setRefreshing(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5464/buggy-version/app.src.main.java.chinapex.com.godmoney.view.MainActivity.java", "BodyUseAPI": ["android.support.v4.widget.SwipeRefreshLayout.setRefreshing(boolean)"], "Fixed commit": "9acef217ebe6811fecf1a3de06664b5318f5a8a4", "Url": "https://api.github.com/repos/SteelCabbage/GodMoney", "Date": "2018-11-01T09:49:17Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value != null) { if (value instanceof java.lang.String) { if (((java.lang.String) (value)).trim().isEmpty()) { return; }else if (caseInsensitive) { value = ((java.lang.String) (value)).toLowerCase(); } } java.util.Collection<java.lang.Object> fieldValues = doc.getFieldValues(name); if ((fieldValues == null) || (!(fieldValues.contains(value)))) { doc.addField(name, value); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5779/buggy-version/vlo-importer.src.main.java.eu.clarin.cmdi.vlo.importer.CMDIDataSolrImpl.java", "BodyUseAPI": [], "Fixed commit": "ee076b807911c94ca2ed28070238e27a006c95bc", "Url": "https://api.github.com/repos/clarin-eric/VLO", "Date": "2018-11-02T14:39:23Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((java.lang.String) (msg.obj)).split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((s.length) > 1) doSelection(s[0], s[1], ((msg.arg1) == 1)); else doSelection(s[0], \"\", ((msg.arg1) == 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3103/buggy-version/djq.app.src.main.java.com.example.spreadtrumbenshi.djq.MainActivity.java", "BodyUseAPI": ["com.example.spreadtrumbenshi.djq.MainActivity.1.doSelection(java.lang.String,java.lang.String,((msg.arg1) == 1))", "com.example.spreadtrumbenshi.djq.MainActivity.1.doSelection(java.lang.String,java.lang.String,((msg.arg1) == 1))"], "Fixed commit": "54a8372050439e717b7d3ca3b842fe15cf8b8073", "Url": "https://api.github.com/repos/beenshi/android", "Date": "2018-12-01T09:50:27Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.exists()) { try (java.io.FileInputStream is = new java.io.FileInputStream(file)) { properties.loadFromXML(is); } catch (final java.io.IOException e) { jrm.misc.Log.err(\"IO\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6507/buggy-version/JRomManager.src.jrm.misc.Settings.java", "BodyUseAPI": [], "Fixed commit": "ffeeee34e4cf2205dd9802103edd0b082bc3666a", "Url": "https://api.github.com/repos/optyfr/JRomManager", "Date": "2018-12-26T06:15:23Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!debug) jrm.misc.Log.setLevel(java.util.logging.Level.parse(session.getUser().settings.getProperty(\"debug_level\", jrm.misc.Log.getLevel().toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6507/buggy-version/JRomManager.src.jrm.JRomManager.java", "BodyUseAPI": [], "Fixed commit": "ffeeee34e4cf2205dd9802103edd0b082bc3666a", "Url": "https://api.github.com/repos/optyfr/JRomManager", "Date": "2018-12-26T06:15:23Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.apimgt.impl.APIManagerConfiguration.getFirstProperty(APIConstants.API_STORE_GROUP_EXTRACTOR_CLAIM_URI)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(claim)) { claim = \"http://wso2.org/claims/organization\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1846/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.DefaultGroupIDExtractorImpl.java", "BodyUseAPI": [], "Fixed commit": "416c1c705e2ab0ea445a68de8dce1e1d7d3f2778", "Url": "https://api.github.com/repos/menakaj/carbon-apimgt", "Date": "2018-12-07T04:51:54Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.apimgt.impl.APIManagerConfiguration.getFirstProperty(APIConstants.API_STORE_GROUP_EXTRACTOR_CLAIM_URI)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(claim)) { claim = \"http://wso2.org/claims/organization\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1846/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.DefaultGroupIDExtractorImpl.java", "BodyUseAPI": [], "Fixed commit": "416c1c705e2ab0ea445a68de8dce1e1d7d3f2778", "Url": "https://api.github.com/repos/menakaj/carbon-apimgt", "Date": "2018-12-07T04:51:54Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.ClienteController.validarLogin(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cliente.getNivelAcesso()) == null) { javax.swing.JOptionPane.showMessageDialog(null, \"errol assesso invalido!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/671/buggy-version/TrabAgricola.src.view.TelaLogin.java", "BodyUseAPI": [], "Fixed commit": "369e6b33fb6efbd706cb1ace1826d2a306e98e4b", "Url": "https://api.github.com/repos/vincent-gmd/trab_agricola_senac", "Date": "2018-11-30T21:06:15Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sameSize && ((args.size()) != (paramTypes.size()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8781/buggy-version/core.codegen.platform.src.main.java.org.overture.codegen.trans.uniontypes.UnionTypeTrans.java", "BodyUseAPI": [], "Fixed commit": "b28db09d277365f6476e930e503e068906f15ad0", "Url": "https://api.github.com/repos/overturetool/overture", "Date": "2018-11-03T22:10:39Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((srcArr.length()) == 0) keysToRemove.add(key);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7226/buggy-version/df-valve.src.main.java.com.hashmapinc.tempus.witsml.valve.dot.Util.java", "BodyUseAPI": [], "Fixed commit": "a7655e3c0c234a34dd36ba0b809e33d9ecff49b1", "Url": "https://api.github.com/repos/hashmapinc/Drillflow", "Date": "2018-12-19T01:31:22Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pr) == null) { org.jenkinsci.plugins.ghprb.GhprbPullRequestMerge.logger.log(java.util.logging.Level.INFO, (\"Pull request is null for ID: \" + (cause.getPullID()))); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6642/buggy-version/src.main.java.org.jenkinsci.plugins.ghprb.GhprbPullRequestMerge.java", "BodyUseAPI": [], "Fixed commit": "a701831c5a3de51718462d05cbb581ae573e207e", "Url": "https://api.github.com/repos/nosmo/ghprb-plugin", "Date": "2014-08-05T21:07:08Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((types[(i + 1)]) == (ExpressionParts.CLOSING_PARENS)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3180/buggy-version/src.com.PretzelStudios.Exp.Expression.java", "BodyUseAPI": [], "Fixed commit": "42128abdb7a17137bb1a7c425a3d02987066764f", "Url": "https://api.github.com/repos/charlespick/Fink", "Date": "2018-11-08T18:47:23Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (day < 10) { tempList.put(((((month + \"/0\") + day) + \"/\") + year), temp); }else { tempList.put(((((month + \"/\") + day) + \"/\") + year), temp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6303/buggy-version/app.src.main.java.com.prj666_183a06.xbudget.ExpenseRoom.ExpenseListInterface.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Float>.put(java.lang.String,float)", "java.util.HashMap<java.lang.String, java.lang.Float>.put(java.lang.String,float)"], "Fixed commit": "a53fe64337e4703dce34f918a11aa75fa23cb113", "Url": "https://api.github.com/repos/PRJ666-BUDGET/xBudget_android", "Date": "2018-11-28T18:43:15Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.benchdoos.weblocopener.utils.browser.JsonObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (incognito != null) { browser.setIncognitoCall(incognito.getAsString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9017/buggy-version/src.main.java.com.github.benchdoos.weblocopener.utils.browser.BrowserDeserializer.java", "BodyUseAPI": ["com.github.benchdoos.weblocopener.utils.browser.Browser.setIncognitoCall(incognito.getAsString())", "com.github.benchdoos.weblocopener.utils.browser.JsonElement.getAsString()"], "Fixed commit": "92bad8ee196e5532579c74c45f4d82c7a0df0e64", "Url": "https://api.github.com/repos/benchdoos/WeblocOpener", "Date": "2018-12-26T17:17:46Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((controllers.UserController.getID(user.getEmail())) != 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4967/buggy-version/src.main.java.controllers.UserController.java", "BodyUseAPI": [], "Fixed commit": "e7f18fa5ebfc0728d9ccd6e990fca890e3726532", "Url": "https://api.github.com/repos/thebestclicker/disexam", "Date": "2018-12-18T15:50:46Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.getGeneratedKeys()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (result != null) result.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8703/buggy-version/coinsystem-core.src.main.java.ch.dkrieger.coinsystem.core.storage.storage.sql.query.InsertQuery.java", "BodyUseAPI": ["java.sql.ResultSet.close()"], "Fixed commit": "63cab79647782c3a628350e6131aa0ef764ea33d", "Url": "https://api.github.com/repos/DevKrieger/DKCoins", "Date": "2018-12-06T18:29:50Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((singleThemeFragment) != null) ft.hide(singleThemeFragment);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7119/buggy-version/app.src.main.java.com.snick.zzj.t_reader.views.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9d4df7e0d6c29e45262e98d24ad1669ba64bbd7f", "Url": "https://api.github.com/repos/zzjivan/T-Reader", "Date": "2018-12-25T08:30:37Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.neet.DiamondHunter.GameState.PlayState.boat[0]) == 0) && ((com.neet.DiamondHunter.GameState.PlayState.boat[1]) == 0)) { com.neet.DiamondHunter.GameState.PlayState.boat[0] = 12; com.neet.DiamondHunter.GameState.PlayState.boat[1] = 4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8145/buggy-version/DiamondHunter_MapViewer.src.com.neet.DiamondHunter.GameState.PlayState.java", "BodyUseAPI": [], "Fixed commit": "9b30215793f63b6040ba5f3caea7208a976aa6ce", "Url": "https://api.github.com/repos/yclai/DiamondHunterMapViewer", "Date": "2018-12-19T03:49:42Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.neet.DiamondHunter.GameState.PlayState.axe[0]) == 0) && ((com.neet.DiamondHunter.GameState.PlayState.axe[1]) == 0)) { com.neet.DiamondHunter.GameState.PlayState.axe[0] = 26; com.neet.DiamondHunter.GameState.PlayState.axe[1] = 37; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8145/buggy-version/DiamondHunter_MapViewer.src.com.neet.DiamondHunter.GameState.PlayState.java", "BodyUseAPI": [], "Fixed commit": "9b30215793f63b6040ba5f3caea7208a976aa6ce", "Url": "https://api.github.com/repos/yclai/DiamondHunterMapViewer", "Date": "2018-12-19T03:49:42Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (new java.io.File(data.Tiles.SaveNLoadTile.folderName).exists()) { for (java.io.File f : new java.io.File(data.Tiles.SaveNLoadTile.folderName).listFiles()) { if (f.getName().endsWith(((((\"saveNLoadTile_\" + (posX)) + \"_\") + (posY)) + \".txt\"))) { fileExists = true; loadFile = f; } } }else { fileExists = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7168/buggy-version/src.data.Tiles.SaveNLoadTile.java", "BodyUseAPI": ["java.io.File.listFiles()"], "Fixed commit": "e02a1c7c914514db3d86d7e97eac6e54fa71593a", "Url": "https://api.github.com/repos/CapOfCave/tetris-n-run", "Date": "2018-11-14T14:47:41Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tmpSaveFolder.exists()) for (java.io.File f : tmpSaveFolder.listFiles()) { f.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7168/buggy-version/src.graphics.Frame.java", "BodyUseAPI": ["java.io.File.listFiles()"], "Fixed commit": "e02a1c7c914514db3d86d7e97eac6e54fa71593a", "Url": "https://api.github.com/repos/CapOfCave/tetris-n-run", "Date": "2018-11-14T14:47:41Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (moDtEn.isAfter(asOf)) { moDtEn = asOf; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/518/buggy-version/strava.src.main.com.cisols.strava.ActivitiesSummary.java", "BodyUseAPI": [], "Fixed commit": "1c26534466ec1485f86a5809ea2ca2470a71783f", "Url": "https://api.github.com/repos/CISOLS/strava", "Date": "2018-11-07T17:39:59Z"},
{"Line": "=>1505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((getListOfFilesFragment().getNoOfItems()) == 2) || (result.isException())) { showSnackMessage(com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.getResultMessage(result, operation, getResources())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9290/buggy-version/src.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.activity.FileDisplayActivity.showSnackMessage(com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.getResultMessage(result, operation, getResources()))", "com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.getResultMessage(com.owncloud.android.lib.common.operations.RemoteOperationResult,com.owncloud.android.operations.RemoveFileOperation,getResources())"], "Fixed commit": "a9ee0d6ce3c71ed46e1054ababfce3cef33e36d0", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-11-18T04:51:52Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ua.pp.darknsoft.services.UserRoleService.findByUserId(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userCommand == null) { model.addAttribute(\"message\", \"HTTP ERROR 404\"); model.addAttribute(\"cause\", ((\"User with id \" + id) + \" NOT FOUND\")); return \"404Page\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8979/buggy-version/src.main.java.ua.pp.darknsoft.controllers.AdminController.java", "BodyUseAPI": [], "Fixed commit": "e0e06a71d258925ffdd74c9b2e106b2c2b93caa4", "Url": "https://api.github.com/repos/andrewdark/Preliminary-queue", "Date": "2018-11-01T12:50:50Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((escapeChars) != null) { if ((openingQuote) != null) { needToBeEscaped = ( i) -> (isRawEscapeChar(sb.charAt(i))) || (java.lang.String.valueOf(sb.charAt(i)).equals(openingQuote)); }else { needToBeEscaped = ( i) -> ((isDelimiterChar(sb, i)) || (isRawEscapeChar(sb.charAt(i)))) || (isRawQuoteChar(sb.charAt(i))); } for (int i = 0; i < (sb.length()); i++) { if (needToBeEscaped.test(i)) { sb.insert((i++), escapeChars[0]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/143/buggy-version/reader.src.main.java.org.jline.reader.impl.DefaultParser.java", "BodyUseAPI": [], "Fixed commit": "8ae798f09d6d409df79f8fbd963784bf068a9c1f", "Url": "https://api.github.com/repos/mattirn/jline3", "Date": "2018-11-11T18:01:35Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Client.ServerFound) { nioClient.sendFile(socketChannel, file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8505/buggy-version/Client.java", "BodyUseAPI": [], "Fixed commit": "35e432514340f5f014945dd913e422ac59aae2e9", "Url": "https://api.github.com/repos/kalpaj12/Direct-Connext", "Date": "2018-12-07T10:40:30Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotEmpty(humanTask.getCategory())) { xtw.writeAttribute(org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_PREFIX, org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_NAMESPACE, org.flowable.cmmn.converter.export.ATTRIBUTE_CATEGORY, humanTask.getCategory()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9132/buggy-version/modules.flowable-cmmn-converter.src.main.java.org.flowable.cmmn.converter.export.HumanTaskExport.java", "BodyUseAPI": ["javax.xml.stream.XMLStreamWriter.writeAttribute(org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_PREFIX,org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_NAMESPACE,org.flowable.cmmn.converter.export.ATTRIBUTE_CATEGORY,humanTask.getCategory())", "org.flowable.cmmn.model.HumanTask.getCategory()"], "Fixed commit": "90bb51cb32805a58fd034f08b4c35628e002edc1", "Url": "https://api.github.com/repos/flowable/flowable-engine", "Date": "2018-12-05T14:28:22Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotEmpty(humanTask.getDueDate())) { xtw.writeAttribute(org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_PREFIX, org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_NAMESPACE, org.flowable.cmmn.converter.export.ATTRIBUTE_DUE_DATE, humanTask.getDueDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9132/buggy-version/modules.flowable-cmmn-converter.src.main.java.org.flowable.cmmn.converter.export.HumanTaskExport.java", "BodyUseAPI": ["javax.xml.stream.XMLStreamWriter.writeAttribute(org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_PREFIX,org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_NAMESPACE,org.flowable.cmmn.converter.export.ATTRIBUTE_DUE_DATE,humanTask.getDueDate())", "org.flowable.cmmn.model.HumanTask.getDueDate()"], "Fixed commit": "90bb51cb32805a58fd034f08b4c35628e002edc1", "Url": "https://api.github.com/repos/flowable/flowable-engine", "Date": "2018-12-05T14:28:22Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotEmpty(humanTask.getPriority())) { xtw.writeAttribute(org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_PREFIX, org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_NAMESPACE, org.flowable.cmmn.converter.export.ATTRIBUTE_PRIORITY, humanTask.getPriority()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9132/buggy-version/modules.flowable-cmmn-converter.src.main.java.org.flowable.cmmn.converter.export.HumanTaskExport.java", "BodyUseAPI": ["javax.xml.stream.XMLStreamWriter.writeAttribute(org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_PREFIX,org.flowable.cmmn.converter.export.FLOWABLE_EXTENSIONS_NAMESPACE,org.flowable.cmmn.converter.export.ATTRIBUTE_PRIORITY,humanTask.getPriority())", "org.flowable.cmmn.model.HumanTask.getPriority()"], "Fixed commit": "90bb51cb32805a58fd034f08b4c35628e002edc1", "Url": "https://api.github.com/repos/flowable/flowable-engine", "Date": "2018-12-05T14:28:22Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { myFrag = new edu.cs4730.gpsDemo.MainFragment(); getSupportFragmentManager().beginTransaction().add(R.id.container, myFrag).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8493/buggy-version/gpsDemo.app.src.main.java.edu.cs4730.gpsDemo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1080d434f41d86b36f0fb861d1b70a71bc178bb0", "Url": "https://api.github.com/repos/JimSeker/sensors", "Date": "2018-11-26T20:16:37Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, circuit_logic.CircuitNode>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (end.isBranchStart()) { prev.addChildren(end.getChildren()); for (circuit_logic.CircuitNode c : prev.getChildren()) { c.setPrev(prev); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8090/buggy-version/PHYS495_CircuitAnalyzer.src.circuit_logic.Circuit.java", "BodyUseAPI": ["circuit_logic.CircuitNode.addChildren(end.getChildren())", "circuit_logic.CircuitNode.getChildren()"], "Fixed commit": "1e74ea4e0dd2171dc79aec02d76f956ebf9dc533", "Url": "https://api.github.com/repos/ShangruTian/PHYS495CircuitAnalyzer", "Date": "2018-11-16T09:31:18Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((session.getPlayer()) != null) { com.lenis0012.bukkit.loginsecurity.util.MetaData.set(session.getPlayer(), \"ls_login_time\", java.lang.System.currentTimeMillis()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4597/buggy-version/src.main.java.com.lenis0012.bukkit.loginsecurity.session.action.LogoutAction.java", "BodyUseAPI": ["com.lenis0012.bukkit.loginsecurity.session.action.PlayerSession.getPlayer()", "com.lenis0012.bukkit.loginsecurity.util.MetaData.set(session.getPlayer(),java.lang.String,long)"], "Fixed commit": "29a8a02f1e36a9dfa13ac7b08f13139ed7848f80", "Url": "https://api.github.com/repos/lenis0012/LoginSecurity-2", "Date": "2018-12-31T13:31:28Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.util.Objects.requireNonNull(lines)) == null) { throw new java.lang.NullPointerException(); }else { return lines.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5580/buggy-version/src.com.basejava.webapp.storage.AbstractFileStorage.java", "BodyUseAPI": [], "Fixed commit": "7923484447c35fa304e08b82f3174c7529e5cb85", "Url": "https://api.github.com/repos/MikhailMakar/basejava", "Date": "2018-12-13T13:59:47Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a.length) <= ((playground.MergeSort.min_gap) + 1)) { for (int i = 0; i < (a.length); i++) { a[i] = aux[i]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4001/buggy-version/src.playground.MergeSort.java", "BodyUseAPI": [], "Fixed commit": "77697605ca7582f17d1a8c7fe8896f66f0faf632", "Url": "https://api.github.com/repos/tony-zhou/ALGS4", "Date": "2018-11-10T02:08:49Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b) { java.lang.System.out.print((((players.get(currentPlayer).getName()) + \" has played \") + (players.get(currentPlayer).play(playerHandIndex)))); if (headOrTail) java.lang.System.out.println((\"to the head of meld\" + toMeldIndex)); else java.lang.System.out.println((\"to the tail of meld\" + toMeldIndex)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8046/buggy-version/src.main.java.rrrummy.Game.java", "BodyUseAPI": [], "Fixed commit": "156a0eb58ebf84d35be1f697ba5da0ff03dbf824", "Url": "https://api.github.com/repos/DishySun/RRRummy", "Date": "2018-11-04T22:34:48Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((sale.getParentSale()) != null) && (sale.getParentSale().isRecurrentDef())) && ((sale.getParentSale().getEnterprise()) != null)) { sale.setEnterprise(sale.getParentSale().getEnterprise()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2112/buggy-version/src.main.java.org.iabako.server.serviceimpl.business.SaleServiceImpl.java", "BodyUseAPI": ["sale.getParentSale().getEnterprise()", "org.iabako.server.serviceimpl.business.Sale.setEnterprise(sale.getParentSale().getEnterprise())", "org.iabako.server.serviceimpl.business.Sale.getParentSale()"], "Fixed commit": "4f400c2dd8851674254971d8eb3ef1dc7f88bfb8", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2018-12-03T17:57:57Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.exist.util.ExistSAXParserFactory.LOG.isDebugEnabled()) { org.exist.util.ExistSAXParserFactory.LOG.debug(((className + \": \") + (ex.getMessage())), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7085/buggy-version/src.org.exist.util.ExistSAXParserFactory.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.debug(java.lang.String,java.lang.ClassNotFoundException)"], "Fixed commit": "6743b451cf7674756a568931795531eeb637327a", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2018-11-07T16:38:50Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.exist.util.ExistSAXParserFactory.LOG.isDebugEnabled()) { org.exist.util.ExistSAXParserFactory.LOG.debug((\"Could not create instance of SAXParserFactory: \" + (result.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7085/buggy-version/src.org.exist.util.ExistSAXParserFactory.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "6743b451cf7674756a568931795531eeb637327a", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2018-11-07T16:38:50Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.exist.util.ExistSAXParserFactory.LOG.isDebugEnabled()) { org.exist.util.ExistSAXParserFactory.LOG.debug(((\"Method \" + className) + \".newInstance not found.\"), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7085/buggy-version/src.org.exist.util.ExistSAXParserFactory.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.debug(java.lang.String,java.lang.Exception)"], "Fixed commit": "6743b451cf7674756a568931795531eeb637327a", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2018-11-07T16:38:50Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.exist.util.ExistSAXParserFactory.LOG.isDebugEnabled()) { org.exist.util.ExistSAXParserFactory.LOG.debug(((\"Could not invoke method \" + className) + \".newInstance.\"), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7085/buggy-version/src.org.exist.util.ExistSAXParserFactory.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.debug(java.lang.String,java.lang.ReflectiveOperationException)"], "Fixed commit": "6743b451cf7674756a568931795531eeb637327a", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2018-11-07T16:38:50Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.exist.util.ExistSAXParserFactory.LOG.isDebugEnabled()) { org.exist.util.ExistSAXParserFactory.LOG.debug(java.lang.String.format(\"Using default SAXParserFactory '%s'\", factory.getClass().getCanonicalName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7085/buggy-version/src.org.exist.util.ExistSAXParserFactory.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "6743b451cf7674756a568931795531eeb637327a", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2018-11-07T16:38:50Z"},
{"Line": "=>809", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((obj.getCreateDate()) != null) { expression = expression + \" AND AGREEMENT_SYSDATE = :pCreateDate\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3599/buggy-version/agency-src.com.baoviet.agency.repository.AgreementRepositoryImpl.java", "BodyUseAPI": [], "Fixed commit": "62001a708eacb1b7a3591fc2512d9c79fb065592", "Url": "https://api.github.com/repos/caf3sua/agency-service", "Date": "2018-11-19T10:02:16Z"},
{"Line": "=>1101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((obj.getCreateDate()) != null) { query.setParameter(\"pCreateDate\", obj.getCreateDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3599/buggy-version/agency-src.com.baoviet.agency.repository.AgreementRepositoryImpl.java", "BodyUseAPI": ["javax.persistence.Query.setParameter(java.lang.String,obj.getCreateDate())", "com.baoviet.agency.web.rest.vm.SearchAgreementWaitVM.getCreateDate()"], "Fixed commit": "62001a708eacb1b7a3591fc2512d9c79fb065592", "Url": "https://api.github.com/repos/caf3sua/agency-service", "Date": "2018-11-19T10:02:16Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((partyList) == null) || ((partyList.size()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3177/buggy-version/app.src.main.java.xyz.capsaicine.freeperiod.activities.meal.PlayActivity.java", "BodyUseAPI": [], "Fixed commit": "e93ca97567a1063f6dcad01559a8bd2b1d046f71", "Url": "https://api.github.com/repos/Acka1357/FreePeriod", "Date": "2018-12-10T18:13:00Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((keySet.size()) < (commandHashMap.size())) { for (char character : keySet) { if (commandHashMap.containsKey(character)) { count++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6634/buggy-version/src.main.java.seedu.address.model.Guess.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Character, java.lang.Integer>.containsKey(char)"], "Fixed commit": "caad56c7d3b2aceb084c41e7b5d342ff9619c4a2", "Url": "https://api.github.com/repos/souless94/main", "Date": "2018-12-15T02:11:30Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (searchContext != null) { org.apache.cxf.jaxrs.ext.search.SearchCondition<T> searchCondition = searchContext.getCondition(reference); if (searchCondition != null) { return org.wso2.carbon.identity.configuration.mgt.endpoint.util.ConfigurationEndpointUtils.buildSearchCondition(searchCondition); }else { if (log.isDebugEnabled()) { log.debug(\"Search condition parsed from the search expression is invalid.\"); } } }else { if (log.isDebugEnabled()) { log.debug(\"Cannot find a valid search context.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/119/buggy-version/components.configuration-mgt.org.wso2.carbon.identity.configuration.mgt.endpoint.src.main.java.org.wso2.carbon.identity.configuration.mgt.endpoint.util.ConfigurationEndpointUtils.java", "BodyUseAPI": ["org.apache.cxf.jaxrs.ext.search.SearchContext.getCondition(java.lang.Class<T>)"], "Fixed commit": "8460f9260e5a8b98f7338488f937b6bd04604f94", "Url": "https://api.github.com/repos/tharindu-bandara/carbon-identity-framework", "Date": "2018-12-21T08:53:35Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(line.isEmpty())) { try { option = eu.atmosphere.tmaf.admin.AdminConsole.AdminAction.valueOf(java.lang.Integer.parseInt(line)); eu.atmosphere.tmaf.admin.AdminConsole.performAction(option); } catch (java.lang.NumberFormatException nfe) { eu.atmosphere.tmaf.admin.AdminConsole.CLI_LOG.error(\"Not a valid number!\\n\"); eu.atmosphere.tmaf.admin.AdminConsole.LOGGER.error(\"Not a valid number!\\n\", nfe); } }else { eu.atmosphere.tmaf.admin.AdminConsole.CLI_LOG.error(\"Not a valid option!\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3125/buggy-version/development.tma-admin-console.src.main.java.eu.atmosphere.tmaf.admin.AdminConsole.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "eu.atmosphere.tmaf.admin.AdminConsole.AdminAction.valueOf(int)"], "Fixed commit": "286efbb8050edaf789e8fd680273e59b285076dc", "Url": "https://api.github.com/repos/eubr-atmosphere/tma-framework-k", "Date": "2018-12-06T10:42:23Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shown && (wasPlayingMusic)) { com.andrew.apollo.utils.MusicUtils.pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7189/buggy-version/android.src.com.frostwire.android.offers.MoPubInterstitialListener.java", "BodyUseAPI": [], "Fixed commit": "55828ddbc8a7c35041735499222da88dacdd80d6", "Url": "https://api.github.com/repos/frostwire/frostwire", "Date": "2018-12-04T18:34:04Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(seedu.inventory.model.item.Quantity.isNotOverflowInteger(quantity))) { throw new seedu.inventory.commons.exceptions.IllegalValueException(seedu.inventory.model.item.Quantity.MESSAGE_QUANTITY_CONSTRAINTS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5178/buggy-version/src.main.java.seedu.inventory.storage.XmlAdaptedItem.java", "BodyUseAPI": [], "Fixed commit": "af3fbbfbe9a67231471b5e7e68d55315911b1ecc", "Url": "https://api.github.com/repos/yao-tx/main", "Date": "2018-11-09T19:23:58Z"},
{"Line": "=>1505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((getListOfFilesFragment().getNoOfItems()) == 2) || (result.isException())) { showSnackMessage(com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.getResultMessage(result, operation, getResources())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7953/buggy-version/owncloudApp.src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.activity.FileDisplayActivity.showSnackMessage(com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.getResultMessage(result, operation, getResources()))", "com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.getResultMessage(com.owncloud.android.lib.common.operations.RemoteOperationResult,com.owncloud.android.operations.RemoveFileOperation,getResources())"], "Fixed commit": "ef392dfc63c60c39d9afcb57ab00309bfb2bb6a8", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-11-18T04:51:52Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(a instanceof net.runelite.api.NPC)) { return damageDealt; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5080/buggy-version/runelite-client.src.main.java.net.runelite.client.plugins.performancetracker.PerformanceTrackerPlugin.java", "BodyUseAPI": [], "Fixed commit": "6ef9954bad3963874f778d5f4bf4ff3bfc596e59", "Url": "https://api.github.com/repos/TheStonedTurtle/runelite", "Date": "2018-11-15T22:31:03Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.badlogic.gdx.utils.ObjectMap<java.lang.String, com.kyperbox.GameState>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (state != gs) gs.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4825/buggy-version/core.src.com.kyperbox.KyperBoxGame.java", "BodyUseAPI": ["com.kyperbox.GameState.dispose()"], "Fixed commit": "7319731a82ba975085512ccff11a206d024d6b0f", "Url": "https://api.github.com/repos/kyperbelt/KyperBox", "Date": "2018-11-07T15:58:25Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.springframework.util.StringUtils.hasText(java.lang.System.getenv(\"MSI_ENDPOINT\"))) && (org.springframework.util.StringUtils.hasText(java.lang.System.getenv(\"MSI_SECRET\")))) { msiCredentials = new com.microsoft.azure.spring.cloud.config.msi.ConfigAppServiceMSICredential(com.microsoft.azure.AzureEnvironment.AZURE); }else { msiCredentials = new com.microsoft.azure.spring.cloud.config.msi.ConfigMSICredentials(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/728/buggy-version/spring-cloud-azure-config.src.main.java.com.microsoft.azure.spring.cloud.config.AzureConfigBootstrapConfiguration.java", "BodyUseAPI": [], "Fixed commit": "c220b49784a5fca33e9bf11843102af290782b53", "Url": "https://api.github.com/repos/Microsoft/spring-cloud-azure", "Date": "2018-11-29T09:21:49Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (path.toLowerCase().equals(\"staging-server.json\")) { ((com.fasterxml.jackson.databind.node.ObjectNode) (rootNode)).put(\"error-handler\", \"/data-hub/4/rest-api/error-handler.xqy\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8633/buggy-version/marklogic-data-hub.src.main.java.com.marklogic.hub.impl.HubProjectImpl.java", "BodyUseAPI": [], "Fixed commit": "3902e86696a3dbc6385ce9ec691e19e4850401f3", "Url": "https://api.github.com/repos/srinathgit/marklogic-data-hub", "Date": "2018-12-07T05:15:43Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (res) maxSearchDept[pd.getNdx()] = dept;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1380/buggy-version/src.main.java.org.heuros.hyperpair.heuristic.PricingSubNetwork.java", "BodyUseAPI": [], "Fixed commit": "df0bdad1d7d00e42d9a3d17c3cc340a5376afa30", "Url": "https://api.github.com/repos/bahadrzeren/hyper-pair", "Date": "2018-11-06T17:52:30Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (res) maxSearchDept[nd.getNdx()] = dept;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1380/buggy-version/src.main.java.org.heuros.hyperpair.heuristic.PricingSubNetwork.java", "BodyUseAPI": [], "Fixed commit": "df0bdad1d7d00e42d9a3d17c3cc340a5376afa30", "Url": "https://api.github.com/repos/bahadrzeren/hyper-pair", "Date": "2018-11-06T17:52:30Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (splitMasterWorker) { org.apache.giraph.metrics.GiraphMetrics.get().resetSuperstepMetrics(cachedSuperstep); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3466/buggy-version/giraph-core.src.main.java.org.apache.giraph.master.MasterThread.java", "BodyUseAPI": [], "Fixed commit": "bef0b8f78b4af165721782956f00f9ff7e4bdcde", "Url": "https://api.github.com/repos/majakabiljo/giraph", "Date": "2018-11-27T18:49:55Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof uet.oop.bomberman.entities.character.enemy.Kondoria) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4451/buggy-version/src.uet.oop.bomberman.entities.tile.destroyable.DestroyableTile.java", "BodyUseAPI": [], "Fixed commit": "3fdc6a2731832e5657558b7a187de446bb4af04c", "Url": "https://api.github.com/repos/vinhtq115/bomberman-starter", "Date": "2018-11-30T14:45:39Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.lastSeen()) == (o.lastSeen())) { for (int i = 0; i < ((kademlia.node.KademliaId.ID_LENGTH) / 8); i++) { int compare = java.lang.Byte.compare(this.getNode().getNodeId().getBytes()[i], o.getNode().getNodeId().getBytes()[i]); if (compare != 0) { return compare; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9333/buggy-version/src.kademlia.routing.Contact.java", "BodyUseAPI": ["java.lang.Byte.compare(this.getNode().getNodeId().getBytes()[i],o.getNode().getNodeId().getBytes()[i])", "kademlia.routing.Contact.getNode()", "kademlia.node.Node.getNodeId()", "o.getNode().getNodeId().getBytes()"], "Fixed commit": "169bd148b488ea8ee8b5162072316904b8c7648a", "Url": "https://api.github.com/repos/pY4x3g/Kademlia", "Date": "2018-12-13T15:45:53Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (locals != null) { this.locals = java.util.Arrays.copyOf(locals, locals.length); }else { this.locals = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6228/buggy-version/rollbar-java.src.main.java.com.rollbar.jvmti.CacheFrame.java", "BodyUseAPI": [], "Fixed commit": "7c20c239ea85fd7d3e102d07a7e0c6d92cc47cf3", "Url": "https://api.github.com/repos/rollbar/rollbar-java", "Date": "2018-12-04T23:36:41Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.apache.commons.csv.CSVRecord>.get(int)", "java.lang.Object.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((JsonKey.UPDATE.equalsIgnoreCase(mode)) && (org.apache.commons.lang3.StringUtils.isNotBlank(record.get(id)))) put(JsonKey.IDENTIFIER, record.get(id).trim());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5847/buggy-version/service.app.controllers.textbook.TextbookController.java", "BodyUseAPI": ["controllers.textbook.TextbookController.2.put(JsonKey.IDENTIFIER,record.get(id).trim())", "record.get(id).trim()", "org.apache.commons.csv.CSVRecord.get(java.lang.String)"], "Fixed commit": "36e7c163a374115453f08b90f7f86076343a4fc2", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-service", "Date": "2018-12-27T05:15:55Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()", "java.lang.System.currentTimeMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((userInput.toUpperCase().equals(\"N\")) && (((java.lang.System.currentTimeMillis()) - startTime) < (Coordinator.TIMEOUT_MILLISECS))) { this.subordinateLogger.log(\"ABORT\", true); this.send(\"N\"); Printer.print(\"=============== END OF PHASE 1 =================\\n\", \"blue\"); this.phaseTwo(); }else if ((userInput.toUpperCase().equals(\"F\")) && (((java.lang.System.currentTimeMillis()) - startTime) < (Coordinator.TIMEOUT_MILLISECS))) { Printer.print(\"=============== SUBORDINATE CRASHES =================\\n\", \"red\"); do { } while (((java.lang.System.currentTimeMillis()) - startTime) < (Coordinator.TIMEOUT_MILLISECS) ); }else { Printer.print(\"\\nNo valid input detected within 6 seconds!\", \"red\"); Printer.print(\"=============== SUBORDINATE CRASHES =================\\n\", \"red\"); do { } while (((java.lang.System.currentTimeMillis()) - startTime) < (Coordinator.TIMEOUT_MILLISECS) ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8291/buggy-version/src.Subordinate.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "fdf6beffb25fae661078c4c60899086386292b16", "Url": "https://api.github.com/repos/timolex/Prototype2PC", "Date": "2018-11-15T16:13:23Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cn.okclouder.account.AccountManager.hasLoginAccount(getActivity())) { mBottomBar.show(); mBottomBar.setComment(comment); }else { cn.okclouder.account.AccountManager.getAccount(getActivity(), mLoginHandler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8576/buggy-version/app.src.main.java.cn.okclouder.ovc.frag.article.ArticleFragment.java", "BodyUseAPI": [], "Fixed commit": "5cd6dabbbfbeee37e2fcb37d352ec2393fc9a441", "Url": "https://api.github.com/repos/caoshen/agg", "Date": "2018-04-30T08:43:31Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sockets.isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2197/buggy-version/src.org.ljsn.clavardage.network.TCPReceiver.java", "BodyUseAPI": [], "Fixed commit": "729d2548e142d92e151a2a67628b61634faaff58", "Url": "https://api.github.com/repos/BynaryCobweb/4AS1-clavardage", "Date": "2018-12-18T23:16:06Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fullType.equals(\"\"))) { htmlText = ((((((((\"<i><font color='\" + (mContext.getResources().getColor(R.color.textColorDictionaryTypeMeaning))) + \"'>\") + \"[\") + fullType) + \"] \") + \"</font></i>\") + \"<b>\") + meaning) + \"</b>\"; }else { htmlText = (\"<b>\" + meaning) + \"</b>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8569/buggy-version/app.src.main.java.com.japanesetoolboxapp.adapters.DictionaryRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "717e674b2f478611ff179912c0f4d2dff722b1e0", "Url": "https://api.github.com/repos/blarom/JapaneseToolbox", "Date": "2018-12-09T20:06:42Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Habit.habits.get(position).getIsFavourite()) { holder.itemView.setVisibility(View.GONE); holder.itemView.setLayoutParams(new android.widget.RelativeLayout.LayoutParams(0, 0)); }else { holder.itemView.setVisibility(View.VISIBLE); holder.itemView.setLayoutParams(new android.widget.RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.MATCH_PARENT, RelativeLayout.LayoutParams.WRAP_CONTENT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9541/buggy-version/app.src.main.java.no.hiof.andrekar.badhabits.MyAdapter.java", "BodyUseAPI": [], "Fixed commit": "d7fcfffc8605d2562517cdb3e81b5870275dcfa4", "Url": "https://api.github.com/repos/wxsh/BadHabits", "Date": "2018-11-06T15:24:44Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fitted) != null) fitted.setCanvasOffset(canvasOffset);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3946/buggy-version/src.main.java.tracing.Path.java", "BodyUseAPI": [], "Fixed commit": "dcb5bd7d8e8ff266e9538e6a5196085c4c215b58", "Url": "https://api.github.com/repos/fiji/Simple_Neurite_Tracer", "Date": "2018-11-26T18:14:13Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jme3.system.JmeContext.createPanel()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (awtPanel == null) { us.ihmc.log.LogTools.warn(\"Waiting for AWT panel to show...\"); while ((awtPanel = ((us.ihmc.jMonkeyEngineToolkit.jme.context.PBOAwtPanelsContext) (context)).createPanel()) != null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4189/buggy-version/src.main.java.us.ihmc.jMonkeyEngineToolkit.jme.JMEViewportAdapter.java", "BodyUseAPI": [], "Fixed commit": "ad55acdcb6967aa5869ecdae42606ecda59bb1fa", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-jmonkey-engine-toolkit", "Date": "2018-12-07T22:40:38Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.valueList.size()) > 0) { if ((mode) == (com.loserstar.utils.db.jfinal.base.imp.InStr.AndOr.AND)) { in += \" and \"; }else { in += \" or \"; } in += \" \" + (filedName); in += (\" in (\" + (com.loserstar.utils.string.LoserStarStringUtils.join(valueList, \",\", \"'\", \"'\"))) + \") \"; return in; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7311/buggy-version/src.main.java.com.loserstar.utils.db.jfinal.base.imp.InStr.java", "BodyUseAPI": [], "Fixed commit": "6967c39bbd6c6f086ca41a93bd00371516d8725d", "Url": "https://api.github.com/repos/xinxin321198/loserStarUtils", "Date": "2018-11-14T08:51:30Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((inStr != null) && ((inStr.toString()) != null)) { this.strWhereList.add(inStr.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7311/buggy-version/src.main.java.com.loserstar.utils.db.jfinal.base.imp.WhereHelper.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(inStr.toString())", "com.loserstar.utils.db.jfinal.base.imp.InStr.toString()"], "Fixed commit": "6967c39bbd6c6f086ca41a93bd00371516d8725d", "Url": "https://api.github.com/repos/xinxin321198/loserStarUtils", "Date": "2018-11-14T08:51:30Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((boardCell.getColor()) == (com.example.myreversi.BoardCell.STONE_COLOR.NONE)) { this.blankField.putIfAbsent(boardCell.getAddress(), boardCell); }else { this.blankField.remove(boardCell.getAddress()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7210/buggy-version/src.com.example.myreversi.BoardCondition.java", "BodyUseAPI": ["com.example.myreversi.BoardCell.getAddress()", "java.util.Map<java.lang.Byte, com.example.myreversi.BoardCell>.remove(boardCell.getAddress())", "com.example.myreversi.BoardCell.getAddress()", "java.util.Map<java.lang.Byte, com.example.myreversi.BoardCell>.putIfAbsent(boardCell.getAddress(),com.example.myreversi.BoardCell)"], "Fixed commit": "d93fd6d8c0a42f9725ffe595d9ed4c15b490f5ab", "Url": "https://api.github.com/repos/Elanor-private/MyReversi", "Date": "2018-11-21T06:56:44Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(AuthenticationOAuth.AUTHORIZATION_HEADER)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((authenticationHeader == null) || (authenticationHeader.isEmpty())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3952/buggy-version/src.main.java.com.matchandtrade.rest.service.AuthenticationService.java", "BodyUseAPI": [], "Fixed commit": "4935bd64d876eef8b9439733429e8973fd252b36", "Url": "https://api.github.com/repos/rafasantos/matchandtrade-api", "Date": "2018-12-17T04:11:41Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((frc.team0000.robot.RobotMap.XMotion) == 0) { double leftspeed = frc.team0000.robot.RobotMap.YMotion; double rightspeed = frc.team0000.robot.RobotMap.YMotion; frc.team0000.subsystems.DriveTrain.drive(leftspeed, rightspeed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2293/buggy-version/src.main.java.frc.team0000.systems.Drive.java", "BodyUseAPI": [], "Fixed commit": "ca565900e0389911572f13e3a702dd67ee0edc7c", "Url": "https://api.github.com/repos/melancholyxjoy/CommandBasedBunnyBots", "Date": "2018-11-05T01:32:40Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((dis.getEntityType()) == (org.bukkit.entity.EntityType.ZOMBIE)) || ((dis.getEntityType()) == (org.bukkit.entity.EntityType.ZOMBIE_VILLAGER))) { if ((!(((me.libraryaddict.disguise.disguisetypes.watchers.ZombieWatcher) (w)).isBaby())) && (dis.getFlag())) { ((me.libraryaddict.disguise.disguisetypes.watchers.ZombieWatcher) (w)).setBaby(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7938/buggy-version/src.com.nisovin.magicspells.volatilecode.DisguiseManagerLibsDisguises.java", "BodyUseAPI": ["com.nisovin.magicspells.spells.targeted.DisguiseSpell.Disguise.getFlag()"], "Fixed commit": "d69eebdfcbaea93227dc21083d51bb9a8231e999", "Url": "https://api.github.com/repos/mart-r/MagicSpells", "Date": "2018-11-15T07:57:52Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.get_size()) < 1) { throw new com.noice.xxxx.lobbies.app.execeptions.IllegalParameterException(\"size\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2752/buggy-version/src.main.java.com.noice.xxxx.lobbies.app.services.create.CreateLobbyService.java", "BodyUseAPI": [], "Fixed commit": "f5d20640c0f357b5851699cd6cbb427ec92da507", "Url": "https://api.github.com/repos/Noice-Team/lobbies", "Date": "2018-11-25T20:08:13Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(edu.colostate.cs.cs414.betterbytes.p3.ui.UI,java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (email != null) this.sendInviteTo(email);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2469/buggy-version/src.edu.colostate.cs.cs414.betterbytes.p3.ui.UI.java", "BodyUseAPI": ["edu.colostate.cs.cs414.betterbytes.p3.ui.UI.sendInviteTo(java.lang.String)"], "Fixed commit": "6972334eaf4620116f3428542275f7b4defa914b", "Url": "https://api.github.com/repos/dcdennis/cs414-f18-001-BetterBytes", "Date": "2018-12-04T00:10:25Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (delay > 0) { org.bukkit.Bukkit.getScheduler().runTaskLater(com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.getInstance().getPlugin(), new java.lang.Runnable() { @java.lang.Override public void run() { if ((bossBar) != null) { bossBar.removePlayer(player); } } }, (delay ^ 20)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9050/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Effects.BossBar.java", "BodyUseAPI": ["org.bukkit.Bukkit.getScheduler().runTaskLater(com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.getInstance().getPlugin(),java.lang.Runnable,int)"], "Fixed commit": "7620853d41d241f1b6a83150b1b836533330975d", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-11-11T01:33:40Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((simulatedClient.getServerPublicKeyLength()) != null) { if ((simulatedClient.getInsecureReasons()) != null) { for (java.lang.String reason : simulatedClient.getInsecureReasons()) { if (reason.contains(ConnectionInsecure.PUBLIC_KEY_LENGTH_TOO_SMALL.getReason())) { return getRedString(simulatedClient.getServerPublicKeyLength(), \"%s\"); } } } return getGreenString(simulatedClient.getServerPublicKeyLength(), \"%s\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4318/buggy-version/src.main.java.de.rub.nds.tlsscanner.report.SiteReportPrinter.java", "BodyUseAPI": ["de.rub.nds.tlsscanner.probe.handshakeSimulation.SimulatedClient.getInsecureReasons()", "de.rub.nds.tlsscanner.probe.handshakeSimulation.SimulatedClient.getServerPublicKeyLength()", "de.rub.nds.tlsscanner.probe.handshakeSimulation.SimulatedClient.getInsecureReasons()", "de.rub.nds.tlsscanner.probe.handshakeSimulation.SimulatedClient.getServerPublicKeyLength()", "de.rub.nds.tlsscanner.report.SiteReportPrinter.getRedString(simulatedClient.getServerPublicKeyLength(),java.lang.String)", "de.rub.nds.tlsscanner.report.SiteReportPrinter.getGreenString(simulatedClient.getServerPublicKeyLength(),java.lang.String)"], "Fixed commit": "6f9ef6c02d71f008bdc5a61095b216fa500ec8e6", "Url": "https://api.github.com/repos/RUB-NDS/TLS-Scanner", "Date": "2018-11-29T14:41:17Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Float>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (temperature > (-100)) { measurements.add(m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1491/buggy-version/src.main.java.giuseppe.graziano.thermostat.service.ThermostatService.java", "BodyUseAPI": [], "Fixed commit": "24a220f803ae9307a90753642b3dae8fe75b3896", "Url": "https://api.github.com/repos/peps14/graziano-thermostat-backend", "Date": "2018-12-27T12:08:39Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apereo.cas.couchdb.services.RegisteredServiceCouchDbRepository.queryView(createQuery(\"size\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (r.isEmpty()) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4588/buggy-version/support.cas-server-support-couchdb-service-registry.src.main.java.org.apereo.cas.couchdb.services.RegisteredServiceCouchDbRepository.java", "BodyUseAPI": [], "Fixed commit": "15d87e7fca06e5801f1ff42ad99037167e1317cf", "Url": "https://api.github.com/repos/apereo/cas", "Date": "2018-11-14T19:59:24Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.randomplace.security.UserSession.getCurrentUser(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (currentUser != null) { com.randomplace.security.UserSession.clearSession(currentUser.getId()); req.getSession().invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2092/buggy-version/src.main.java.com.randomplace.servlets.login.LogoutServlet.java", "BodyUseAPI": ["com.randomplace.security.UserSession.clearSession(currentUser.getId())", "com.randomplace.models.User.getId()"], "Fixed commit": "f1f0572a9a3aa77ef9a73cf2fc6ba6bb5fa82cf0", "Url": "https://api.github.com/repos/tania-klueva/RandomPlaceGenerator", "Date": "2018-11-29T09:45:56Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((userDTO.getEmail().indexOf(\"@\")) <= 0) || ((userDTO.getEmail().indexOf(\".\")) < (userDTO.getEmail().indexOf(\"@\")))) { errorMessages.add(UserValidationError.EMAIL_FORMAT_ERROR.getErrorText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2092/buggy-version/src.main.java.com.randomplace.service.validators.UserValidator.java", "BodyUseAPI": [], "Fixed commit": "f1f0572a9a3aa77ef9a73cf2fc6ba6bb5fa82cf0", "Url": "https://api.github.com/repos/tania-klueva/RandomPlaceGenerator", "Date": "2018-11-29T09:45:56Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == (this.size())) { super.add(element); test = false; }else if ((element.compareTo(this.get(i))) <= 0) { super.add(i, element); test = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7932/buggy-version/OrderedArrayList.java", "BodyUseAPI": ["NoNullArrayList<T>.add(int,T)", "T.compareTo(this.get(i))", "OrderedArrayList<T>.get(int)"], "Fixed commit": "22615cb0610527a88e949b46a4c85992188e89e3", "Url": "https://api.github.com/repos/ylee02/MKS21X-OrderedArrayList", "Date": "2018-11-06T19:41:06Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.laterale.demo.rest.repositories.DemoRepository.findByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (entity == null) { this.exceptionManager(HttpStatus.NOT_FOUND, ((\"Entity with name '\" + name) + \"' not found.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3265/buggy-version/src.main.java.it.laterale.demo.rest.services.DemoService.java", "BodyUseAPI": [], "Fixed commit": "f81b2a9c19493dd50c59230bfc968aa736ab500f", "Url": "https://api.github.com/repos/lateralecloud/spring-boot-demo", "Date": "2018-11-04T17:09:01Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.laterale.demo.rest.repositories.DemoRepository.findById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(entityOpt.isPresent())) { this.exceptionManager(HttpStatus.NOT_FOUND, ((\"Entity with id '\" + id) + \"' not found.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3265/buggy-version/src.main.java.it.laterale.demo.rest.services.DemoService.java", "BodyUseAPI": [], "Fixed commit": "f81b2a9c19493dd50c59230bfc968aa736ab500f", "Url": "https://api.github.com/repos/lateralecloud/spring-boot-demo", "Date": "2018-11-04T17:09:01Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(player.isCreative())) { player.capabilities.isFlying = false; player.capabilities.allowFlying = false; if (!(player.getEntityWorld().isRemote)) { player.sendPlayerAbilities(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8144/buggy-version/src.main.java.com.denbukki.curio.items.ItemRingOfFlight.java", "BodyUseAPI": [], "Fixed commit": "a965ad78f4206bd41ba324d2f2e3b24ae81c361c", "Url": "https://api.github.com/repos/dennisblokland/Curio", "Date": "2018-12-05T10:19:15Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(player.isCreative())) { player.capabilities.allowFlying = true; if (!(player.getEntityWorld().isRemote)) { player.sendPlayerAbilities(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8144/buggy-version/src.main.java.com.denbukki.curio.items.ItemRingOfFlight.java", "BodyUseAPI": [], "Fixed commit": "a965ad78f4206bd41ba324d2f2e3b24ae81c361c", "Url": "https://api.github.com/repos/dennisblokland/Curio", "Date": "2018-12-05T10:19:15Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((team) != null) { if (!simulate) { java.lang.System.out.printf(\"add Score : %d\\n\", com.zoniic645.scoreboard.ItemScore.getScore(stack)); com.zoniic645.scoreboard.TeamScore.get(world).addScore(team, com.zoniic645.scoreboard.ItemScore.getScore(stack)); } return net.minecraft.item.ItemStack.EMPTY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8438/buggy-version/src.main.java.com.zoniic645.scoreboard.TileEntity.TileEntityScoreCounter.java", "BodyUseAPI": [], "Fixed commit": "a5c5255f78a87ce704438fce911cd59d7ff43edc", "Url": "https://api.github.com/repos/ZoniIC645/ScoreBoard", "Date": "2018-12-16T05:00:09Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dataSnapshot.child(\"profileImageUrl\").getValue().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (imageOfUser != \"nothing\") { com.squareup.picasso.Picasso.with(this).load(imageOfUser).placeholder(R.drawable.profile).error(R.drawable.profile).into(userImageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/479/buggy-version/app.src.main.java.com.foodie.foodographer.UserProfile.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(this).load(imageOfUser).placeholder(R.drawable.profile).error(R.drawable.profile)", "com.squareup.picasso.Picasso.with(this).load(java.lang.String)", "com.squareup.picasso.Picasso.with(this).load(imageOfUser).placeholder(R.drawable.profile)", "com.squareup.picasso.Picasso.with(this).load(imageOfUser).placeholder(R.drawable.profile).error(R.drawable.profile).into(de.hdodenhof.circleimageview.CircleImageView)"], "Fixed commit": "738c689b8a5d968f10b983f010c4cb8f9fd11733", "Url": "https://api.github.com/repos/bingxueouyang/Foodographer", "Date": "2018-11-12T18:51:57Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dryadandnaiad.sethlans.services.queue.ProcessQueueDatabaseService.getProcessByQueueUUID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (queueItem != null) { nodeStatuses.add(new com.dryadandnaiad.sethlans.services.queue.ProcessNodeStatus(queue_uuid, false)); }else { com.dryadandnaiad.sethlans.services.queue.QueueServiceImpl.LOG.info(\"Rejection received for item that is no longer in queue.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/917/buggy-version/src.main.java.com.dryadandnaiad.sethlans.services.queue.QueueServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "2e7fe749954f878f50f2997355c5342ddfdf9dc3", "Url": "https://api.github.com/repos/dryad-naiad-software/sethlans", "Date": "2018-11-07T04:51:50Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.bbw.zork.Room.getItem(command.getSecondWord())", "ch.bbw.zork.Game.getBackpack()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (backpack.addItem(item)) { currentRoom.removeItem(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6981/buggy-version/src.main.java.ch.bbw.zork.commands.CommandHandlerGet.java", "BodyUseAPI": ["ch.bbw.zork.Room.removeItem(ch.bbw.zork.items.Item)"], "Fixed commit": "9b69e9ae7242cd142b69a49516dcc203b219404a", "Url": "https://api.github.com/repos/GeroVanMi/ProjectZork", "Date": "2018-12-12T13:18:17Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(edu.ucsb.cs184.moments.moments.User.user.isUser(post.getUserid()))) edu.ucsb.cs184.moments.moments.User.findUser(rating.GetPosterId()).RatingNotification(rating, remove);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2758/buggy-version/app.src.main.java.edu.ucsb.cs184.moments.moments.User.java", "BodyUseAPI": [], "Fixed commit": "dc6906720f03ffe2fe20a5543586a9b936b7eff3", "Url": "https://api.github.com/repos/SeakyLuo/Moments", "Date": "2018-12-11T01:08:03Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.gilmaimon.israelposttracker.Branches.JsonBranches.getStringOrNull(branchJson, \"name\")) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8450/buggy-version/app.src.main.java.com.gilmaimon.israelposttracker.Branches.JsonBranches.java", "BodyUseAPI": [], "Fixed commit": "0db699cd358ed52baf7d57486ed036303e4b5204", "Url": "https://api.github.com/repos/gilmaimon/IsraelPost-Tracker", "Date": "2018-12-01T17:35:43Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.parseDouble(distance.getDistance(qry2, qry3))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (theDistance < 5.0) { fee += 2.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5873/buggy-version/src.java.model.Admin.java", "BodyUseAPI": [], "Fixed commit": "f3e2d7a04b4e8db306635b31a15ebec8847101bd", "Url": "https://api.github.com/repos/Yousef-Eleshy/Alphacab", "Date": "2018-12-05T23:37:38Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.parseDouble(distance.getDistance(query[1], query[2]))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (theDistance < 5.0) { fee += 2.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5873/buggy-version/src.java.pages.BookTaxi.java", "BodyUseAPI": [], "Fixed commit": "f3e2d7a04b4e8db306635b31a15ebec8847101bd", "Url": "https://api.github.com/repos/Yousef-Eleshy/Alphacab", "Date": "2018-12-05T23:37:38Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFusedLocationClient) != null) mFusedLocationClient.removeLocationUpdates(mLocationCallback);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3164/buggy-version/app.src.main.java.cz.uhk.fim.brahavl1.smartmeasurment.PostionGoogle.java", "BodyUseAPI": [], "Fixed commit": "ab82e4c490c5cbd1c20be700fa9bd33c8da2982f", "Url": "https://api.github.com/repos/vladabraha/SMAP", "Date": "2018-12-20T20:16:24Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFusedLocationClient) != null) { mFusedLocationClient.requestLocationUpdates(mLocationRequest, mLocationCallback, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3164/buggy-version/app.src.main.java.cz.uhk.fim.brahavl1.smartmeasurment.PostionGoogle.java", "BodyUseAPI": [], "Fixed commit": "ab82e4c490c5cbd1c20be700fa9bd33c8da2982f", "Url": "https://api.github.com/repos/vladabraha/SMAP", "Date": "2018-12-20T20:16:24Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((candidate == null) || ((candidate.getCandidateSkillsList()) == null)) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2581/buggy-version/server.src.main.java.ro.msg.cm.util.CandidateUtils.java", "BodyUseAPI": [], "Fixed commit": "cbf920713e3b9c89303b94ad0a89cccd532d104f", "Url": "https://api.github.com/repos/serban-petrescu/candidate-management", "Date": "2018-11-05T14:33:06Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.cacheDurationMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cacheDurationMillis < 0) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2645/buggy-version/plc4j.utils.opm.src.main.java.org.apache.plc4x.java.opm.PlcEntityInterceptor.java", "BodyUseAPI": [], "Fixed commit": "73f9b085a6e19e893a3a03e7f3b0766913e0e50c", "Url": "https://api.github.com/repos/apache/incubator-plc4x", "Date": "2018-11-24T12:42:49Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parentCommentId == 0L) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/251/buggy-version/springmvc.src.main.java.com.chetan.learning.springmvc.controller.CommentAPIController.java", "BodyUseAPI": [], "Fixed commit": "1cbd5fdc0faf6d6a0dc7b8cf8b3a261fbcb4790a", "Url": "https://api.github.com/repos/Chetan496/Blog", "Date": "2018-11-27T14:57:47Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blogId == 0L) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/251/buggy-version/springmvc.src.main.java.com.chetan.learning.springmvc.controller.CommentAPIController.java", "BodyUseAPI": [], "Fixed commit": "1cbd5fdc0faf6d6a0dc7b8cf8b3a261fbcb4790a", "Url": "https://api.github.com/repos/Chetan496/Blog", "Date": "2018-11-27T14:57:47Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (handler instanceof org.springframework.web.servlet.resource.ResourceHttpRequestHandler) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8744/buggy-version/src.main.java.org.crown.common.spring.interceptor.GlobalInterceptor.java", "BodyUseAPI": [], "Fixed commit": "c344b3ec8c7c1ff6c5fc279f70fdcac1d346b4b5", "Url": "https://api.github.com/repos/Caratacus/Crown", "Date": "2018-11-01T02:50:57Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optString(Breezemoon.BREEZEMOON_UA)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((org.apache.commons.lang.StringUtils.length(ua)) > (org.b3log.symphony.model.Common.MAX_LENGTH_UA)) { ua = org.apache.commons.lang.StringUtils.substring(ua, 0, Common.MAX_LENGTH_UA); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1153/buggy-version/src.main.java.org.b3log.symphony.service.BreezemoonMgmtService.java", "BodyUseAPI": ["org.apache.commons.lang.StringUtils.substring(java.lang.String,int,Common.MAX_LENGTH_UA)"], "Fixed commit": "e37af27dabf66888cf5cf423fc7530ebd91f34cd", "Url": "https://api.github.com/repos/b3log/symphony", "Date": "2018-11-22T13:05:02Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optString(Breezemoon.BREEZEMOON_UA)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((org.apache.commons.lang.StringUtils.length(ua)) > (org.b3log.symphony.model.Common.MAX_LENGTH_UA)) { ua = org.apache.commons.lang.StringUtils.substring(ua, 0, Common.MAX_LENGTH_UA); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1153/buggy-version/src.main.java.org.b3log.symphony.service.BreezemoonMgmtService.java", "BodyUseAPI": ["org.apache.commons.lang.StringUtils.substring(java.lang.String,int,Common.MAX_LENGTH_UA)"], "Fixed commit": "e37af27dabf66888cf5cf423fc7530ebd91f34cd", "Url": "https://api.github.com/repos/b3log/symphony", "Date": "2018-11-22T13:05:02Z"},
{"Line": "=>634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sibling.previous) != null) { sibling.previous.next = sibling; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7715/buggy-version/BPTree.java", "BodyUseAPI": [], "Fixed commit": "230b02fd10da02287ae773a55d3b2c995d33598e", "Url": "https://api.github.com/repos/nisler/FoodQuery", "Date": "2018-12-04T23:26:21Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.IBlockAccess.getTileEntity(net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tileEntity instanceof com.mjr.extraplanets.tileEntities.blocks.TileEntityBasicDecontaminationUnitFake) { net.minecraft.util.math.BlockPos mainBlockPosition = ((com.mjr.extraplanets.tileEntities.blocks.TileEntityBasicDecontaminationUnitFake) (tileEntity)).mainBlockPosition; if (mainBlockPosition != null) { return world.getBlockState(pos).getBlock().getBedDirection(world.getBlockState(mainBlockPosition), world, mainBlockPosition); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8314/buggy-version/src.main.java.com.mjr.extraplanets.blocks.BlockDecontaminationUnitFake.java", "BodyUseAPI": [], "Fixed commit": "2540c44468507eaa9597a0a3a1c9f5cdc4cf8925", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-11-10T01:17:27Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.IBlockAccess.getTileEntity(net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tileEntity instanceof com.mjr.extraplanets.tileEntities.blocks.TileEntityBasicDecontaminationUnitFake) { net.minecraft.util.math.BlockPos mainBlockPosition = ((com.mjr.extraplanets.tileEntities.blocks.TileEntityBasicDecontaminationUnitFake) (tileEntity)).mainBlockPosition; if (mainBlockPosition != null) { return world.getBlockState(pos).getBlock().isBed(world.getBlockState(mainBlockPosition), world, mainBlockPosition, player); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8314/buggy-version/src.main.java.com.mjr.extraplanets.blocks.BlockDecontaminationUnitFake.java", "BodyUseAPI": [], "Fixed commit": "2540c44468507eaa9597a0a3a1c9f5cdc4cf8925", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-11-10T01:17:27Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.registryKit.client.clientManager.getClientAddressInfo(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (addressInfo != null) { c.setAddress(addressInfo.getAddress1()); c.setAddress2(addressInfo.getAddress2()); c.setCity(addressInfo.getCity()); c.setState(addressInfo.getState()); c.setZip(addressInfo.getZipCode()); c.setPhoneNumber(addressInfo.getPhone1()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1511/buggy-version/webapp.src.main.java.com.rr.maine.ui.clients.clientController.java", "BodyUseAPI": ["com.registryKit.client.storageClientAddressInfo.getCity()", "com.registryKit.client.storageClientAddressInfo.getAddress1()", "com.registryKit.client.storageClientAddressInfo.getAddress2()", "com.rr.maine.ui.clients.client.setPhoneNumber(addressInfo.getPhone1())", "com.rr.maine.ui.clients.client.setZip(addressInfo.getZipCode())", "com.registryKit.client.storageClientAddressInfo.getState()", "com.rr.maine.ui.clients.client.setAddress2(addressInfo.getAddress2())", "com.rr.maine.ui.clients.client.setState(addressInfo.getState())", "com.rr.maine.ui.clients.client.setAddress(addressInfo.getAddress1())", "com.rr.maine.ui.clients.client.setCity(addressInfo.getCity())", "com.registryKit.client.storageClientAddressInfo.getZipCode()", "com.registryKit.client.storageClientAddressInfo.getPhone1()"], "Fixed commit": "85a7f246d5af578e0e24a825e3b17207c603dfb3", "Url": "https://api.github.com/repos/bowlinktech/maineRR", "Date": "2018-11-07T15:52:42Z"},
{"Line": "=>2620", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((expandedRowUUIDs) != null) { java.lang.String viewUUID = item.getViewUUID(); return expandedRowUUIDs.contains(viewUUID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9074/buggy-version/src.java.CdbWebPortal.src.java.gov.anl.aps.cdb.portal.controllers.ItemController.java", "BodyUseAPI": [], "Fixed commit": "bb329096343a39634dc2e7c7578a8d22d73a1ff2", "Url": "https://api.github.com/repos/iTerminate/Component.DB", "Date": "2018-12-11T15:58:38Z"},
{"Line": "=>1907", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.anl.aps.cdb.portal.controllers.CdbDomainEntityController<ItemDomainEntity, ItemDomainEntityFacade, ItemSettingsObject>.getImageList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((imageList.size()) > 0) { imageList.remove(propertyValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9074/buggy-version/src.java.CdbWebPortal.src.java.gov.anl.aps.cdb.portal.controllers.ItemController.java", "BodyUseAPI": ["java.util.List<gov.anl.aps.cdb.portal.model.db.entities.PropertyValue>.remove(gov.anl.aps.cdb.portal.model.db.entities.PropertyValue)"], "Fixed commit": "bb329096343a39634dc2e7c7578a8d22d73a1ff2", "Url": "https://api.github.com/repos/iTerminate/Component.DB", "Date": "2018-12-11T15:58:38Z"},
{"Line": "=>2608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((expandedRowUUIDs) == null) { expandedRowUUIDs = new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9074/buggy-version/src.java.CdbWebPortal.src.java.gov.anl.aps.cdb.portal.controllers.ItemController.java", "BodyUseAPI": [], "Fixed commit": "bb329096343a39634dc2e7c7578a8d22d73a1ff2", "Url": "https://api.github.com/repos/iTerminate/Component.DB", "Date": "2018-12-11T15:58:38Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jenkinsci.plugins.DependencyTrack.FindingParser.parseFinding(jsonArray.getJSONObject(i))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(finding.getAnalysis().isSuppressed())) { findings.add(finding); severityDistribution.add(finding.getVulnerability().getSeverity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1933/buggy-version/src.main.java.org.jenkinsci.plugins.DependencyTrack.FindingParser.java", "BodyUseAPI": ["java.util.ArrayList<org.jenkinsci.plugins.DependencyTrack.model.Finding>.add(org.jenkinsci.plugins.DependencyTrack.model.Finding)", "org.jenkinsci.plugins.DependencyTrack.model.Finding.getVulnerability()", "org.jenkinsci.plugins.DependencyTrack.model.SeverityDistribution.add(finding.getVulnerability().getSeverity())", "finding.getVulnerability().getSeverity()"], "Fixed commit": "def475c90bc85f709dc22841ffcb265c48afc5fd", "Url": "https://api.github.com/repos/jenkinsci/dependency-track-plugin", "Date": "2018-11-22T05:01:03Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.tomtasche.reader.ui.activity.DocumentFragment.getFragmentManager()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fragmentManager == null) { progressDialog = null; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/955/buggy-version/app.src.main.java.at.tomtasche.reader.ui.activity.DocumentFragment.java", "BodyUseAPI": [], "Fixed commit": "13744511ba4521eb00ca50b3a2854d0cde165a74", "Url": "https://api.github.com/repos/TomTasche/OpenDocument.droid", "Date": "2018-11-20T15:55:01Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.biglybt.ui.swt.utils.ColorCache.getColor(gc.getDevice(),int[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (color != null) { colors.add(color); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6600/buggy-version/uis.src.com.biglybt.ui.swt.views.tableitems.mytorrents.TagColorsItem.java", "BodyUseAPI": ["java.util.List<org.eclipse.swt.graphics.Color>.add(org.eclipse.swt.graphics.Color)"], "Fixed commit": "395921264d44f8beeda9d5da007d7bb3157985e3", "Url": "https://api.github.com/repos/BiglySoftware/BiglyBT", "Date": "2018-11-28T13:01:16Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (me.mneri.csv.CsvWriter.CLOSED)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/609/buggy-version/src.main.java.me.mneri.csv.CsvWriter.java", "BodyUseAPI": [], "Fixed commit": "05fa6c7279d6a334a563e72a0bf59fb2b231d5f6", "Url": "https://api.github.com/repos/mneri/csv", "Date": "2018-11-16T23:58:54Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["e.getPosition().getX()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (col >= 0) { gridButton[row][col].setIcon(new javax.swing.ImageIcon(\"drawable/grass.png\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1483/buggy-version/src.view.View.java", "BodyUseAPI": ["javax.swing.JButton.setIcon(javax.swing.ImageIcon)"], "Fixed commit": "d0b53a2dd203ea828b55c7eb8aaca4454e52af27", "Url": "https://api.github.com/repos/RahulAnilkumar8/starttopanic", "Date": "2018-12-07T20:53:59Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (callback != null) { callback.call(null, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5162/buggy-version/src.main.java.io.github.lazoyoung.Table.java", "BodyUseAPI": ["io.github.lazoyoung.Callback<java.lang.Integer, java.sql.SQLException>.call(<nulltype>,java.sql.SQLException)"], "Fixed commit": "1249fee530d56a04a8b3b34abd86a65196951fc2", "Url": "https://api.github.com/repos/LazoYoung/AsyncDatabaseUtil", "Date": "2018-12-30T10:38:39Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (callback != null) { callback.call(null, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5162/buggy-version/src.main.java.io.github.lazoyoung.Table.java", "BodyUseAPI": ["io.github.lazoyoung.Callback<java.sql.ResultSet, java.sql.SQLException>.call(<nulltype>,java.sql.SQLException)"], "Fixed commit": "1249fee530d56a04a8b3b34abd86a65196951fc2", "Url": "https://api.github.com/repos/LazoYoung/AsyncDatabaseUtil", "Date": "2018-12-30T10:38:39Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (callback != null) { callback.call(null, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5162/buggy-version/src.main.java.io.github.lazoyoung.Table.java", "BodyUseAPI": ["io.github.lazoyoung.Callback<java.lang.Boolean, java.sql.SQLException>.call(<nulltype>,java.sql.SQLException)"], "Fixed commit": "1249fee530d56a04a8b3b34abd86a65196951fc2", "Url": "https://api.github.com/repos/LazoYoung/AsyncDatabaseUtil", "Date": "2018-12-30T10:38:39Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(((org.w3c.dom.Element) (representationList.item(0))).getAttribute(\"audioSamplingRate\").equals(\"\"))) { audioAdaptationSet = ((org.w3c.dom.Element) (adaptationList.item(i))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2107/buggy-version/src.main.java.com.alebit.sget.playlist.DASH.DASHPlaylistManager.java", "BodyUseAPI": [], "Fixed commit": "bcf06d40cd93cce66b41e5c14fbc7fc2351c428d", "Url": "https://api.github.com/repos/AlecJY/StreamGet", "Date": "2018-12-13T03:11:58Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(text.contains(\" \"))) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/1437/buggy-version/src.main.java.za.co.knonchalant.candogram.handlers.BaseMessage.java", "BodyUseAPI": [], "Fixed commit": "2731ab291537c4e08f152095b4f593477de15072", "Url": "https://api.github.com/repos/EvanKnowles/CanDoGram", "Date": "2018-12-09T21:05:09Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.media.session.MediaControllerCompat.getMediaController(this).getPlaybackState().getState()) == (android.support.v4.media.session.PlaybackStateCompat.STATE_PAUSED)) { android.support.v4.media.session.MediaControllerCompat.getMediaController(this).getTransportControls().stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2906/buggy-version/app.src.main.java.com.example.vibhati.musiccorner.SongsActivity.java", "BodyUseAPI": [], "Fixed commit": "adee891baf31440d70ec1489861675a1409dd4c9", "Url": "https://api.github.com/repos/vishalenrique/MusicCorner", "Date": "2018-12-12T19:54:42Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((controller) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6131/buggy-version/app.src.main.java.de.westnordost.streetcomplete.tangram.QuestsMapFragment.java", "BodyUseAPI": [], "Fixed commit": "57e06fbdbee47cf2eef2044d399831f68f916597", "Url": "https://api.github.com/repos/ENT8R/StreetComplete", "Date": "2018-12-30T20:36:45Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((spell.requiredMana) > (me.mana)) || ((spell.minLevel) > (me.level))) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3122/buggy-version/src.main.java.pow.backend.actors.ai.PetAi.java", "BodyUseAPI": [], "Fixed commit": "166116ef2eec1b8894faa1f57975f25830352300", "Url": "https://api.github.com/repos/jonathanacross/pow", "Date": "2018-11-26T02:38:26Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["currentMatch.getScore().getWinner()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (winner.equals(ScoreEntity.AWAY_TEAM_WINNER)) { viewHolder.homeTeamNameText.setTypeface(null, Typeface.NORMAL); viewHolder.awayTeamNameText.setTypeface(null, Typeface.BOLD); viewHolder.homeTeamScoreText.setTypeface(null, Typeface.NORMAL); viewHolder.awayTeamScoreText.setTypeface(null, Typeface.BOLD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4328/buggy-version/app.src.main.java.tech.joeyck.livefootball.ui.competition_detail.matches.MatchesAdapter.java", "BodyUseAPI": [], "Fixed commit": "914af542159875a08b155e6eb297b33d9854131c", "Url": "https://api.github.com/repos/s6joui/football-data-android-java", "Date": "2018-12-01T13:05:44Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mApiClient) == null) { mApiClient = apiClient; hereticpurge.chuckjoker.model.JokeController.sJokeController.loadJoke(context, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8551/buggy-version/app.src.main.java.hereticpurge.chuckjoker.model.JokeController.java", "BodyUseAPI": [], "Fixed commit": "47b4790bc118ac75eca2b086b243a166e5e079ae", "Url": "https://api.github.com/repos/DanH3945/ChuckJoker", "Date": "2018-12-09T11:51:51Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (matcher.find()) { java.lang.String env = matcher.group(1); java.lang.String defaultValueWithColon = matcher.group(2); java.lang.String envValue = java.lang.System.getenv(env); if (defaultValueWithColon != null) { java.lang.String defaultValue = defaultValueWithColon.substring(1); return java.util.Optional.ofNullable(envValue).orElse(defaultValue); } return envValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/9008/buggy-version/common.src.main.java.org.mib.common.config.ConfigProvider.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "33bd95d00bcdc3726b6f73b1767c7fab08c7cecc", "Url": "https://api.github.com/repos/dfhigh/mib", "Date": "2018-12-13T08:07:18Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((position.getX()) > (BordDroit)) { position.setX(0); }else { position.setX(((position.getX()) + (model.DeplacementHorizontal.pas))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/2517/buggy-version/SimulationBalise.src.model.DeplacementHorizontal.java", "BodyUseAPI": ["model.Position.setX(int)", "model.Position.setX(((position.getX()) + (model.DeplacementHorizontal.pas)))", "model.Position.getX()"], "Fixed commit": "a37832a7da01cf736d87dfc298fb926a94a56ccf", "Url": "https://api.github.com/repos/florianKerherne/SimulationBalise", "Date": "2018-12-07T10:51:11Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((postList.size()) > 0) { com.uren.catchu.GeneralUtils.DialogBoxUtil.DialogBoxUtil.showErrorDialog(getContext(), getContext().getResources().getString(R.string.serverError), new com.uren.catchu.GeneralUtils.DialogBoxUtil.InfoDialogBoxCallback() { @java.lang.Override public void okClick() { } }); showNoFeedLayout(false, 0); }else { showNoFeedLayout(true, R.string.serverError); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7143/buggy-version/app.src.main.java.com.uren.catchu.MainPackage.MainFragments.Feed.FeedFragment.java", "BodyUseAPI": [], "Fixed commit": "f7063f6939823665d354123767e35073aebcd6bf", "Url": "https://api.github.com/repos/CatchUAndroid/CatchUAWS", "Date": "2018-11-02T08:34:34Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.distrimind.madkit.kernel.network.LocalNetworkAgent>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (lna.isAlive()) { com.distrimind.madkit.kernel.AgentAddress aa = lna.getAgentAddressIn(LocalCommunity.Groups.LOCAL_NETWORKS, LocalCommunity.Roles.LOCAL_NETWORK_AFFECTATION_ROLE); sendMessageWithRole(aa, new com.distrimind.madkit.kernel.network.LocalNetworkAgent.ActivateAskConnection(lnas_activated[i]), LocalCommunity.Roles.LOCAL_NETWORK_AFFECTATION_ROLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/5504/buggy-version/MaDKitLanEdition.src.main.java.com.distrimind.madkit.kernel.network.LocalNetworkAffectationAgent.java", "BodyUseAPI": ["com.distrimind.madkit.kernel.network.LocalNetworkAgent.getAgentAddressIn(LocalCommunity.Groups.LOCAL_NETWORKS,LocalCommunity.Roles.LOCAL_NETWORK_AFFECTATION_ROLE)"], "Fixed commit": "fe7f804e6c3660ea751444d74d907ac0f8111be7", "Url": "https://api.github.com/repos/JazZ51/MaDKitLanEdition", "Date": "2018-11-20T16:56:30Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["array.get(0).getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (obj.get(\"url_170x135\").isJsonNull()) url = \"none\"; else url = obj.get(\"url_170x135\").getAsString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8468/buggy-version/app.src.main.java.borysenko.etsyapp.retrofit.deserializers.ImageDeserializer.java", "BodyUseAPI": ["obj.get(\"url_170x135\").getAsString()", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "5b5ba1624b96e1f1917e866e911dd8f25890ae4b", "Url": "https://api.github.com/repos/ireneborysenko/etsyapp", "Date": "2018-11-19T00:20:55Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonElement.getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (jsonObject.get(\"description\").isJsonNull()) description = \"none\"; else description = jsonObject.get(\"description\").getAsString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8468/buggy-version/app.src.main.java.borysenko.etsyapp.retrofit.deserializers.MerchandiseDeserializer.java", "BodyUseAPI": ["com.google.gson.JsonObject.get(java.lang.String)", "jsonObject.get(\"description\").getAsString()"], "Fixed commit": "5b5ba1624b96e1f1917e866e911dd8f25890ae4b", "Url": "https://api.github.com/repos/ireneborysenko/etsyapp", "Date": "2018-11-19T00:20:55Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (registerTable.containsKey(this.i)) { varName = registerTable.get(this.i).ident; }else { varName = \"temp_\" + (Main.nodeIndex); (Main.nodeIndex)++; varType = Main.classHeaderDictionary.get(\"Int\").objectInstanceName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4002/buggy-version/Expression.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, Var>.get(int)"], "Fixed commit": "11bb028904af9cc3440e91a0fc6887b9dd0da010", "Url": "https://api.github.com/repos/sgerendasy/561CodeGeneration", "Date": "2018-11-30T20:30:28Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prenotazioni) > 0) (prenotazioni)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4223/buggy-version/ProgettoCinema.src.GestoreLogin.Cliente.java", "BodyUseAPI": [], "Fixed commit": "a563988d2ec8da1c915bb34a797ef139d5a798ae", "Url": "https://api.github.com/repos/ilcavaliere01/ProgettOOP", "Date": "2018-12-27T10:14:49Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4058/buggy-version/dataquality-sampling.src.main.java.org.talend.dataquality.datamasking.functions.AbstractGenerateUniqueSsn.java", "BodyUseAPI": [], "Fixed commit": "c7e5cf439ba656911b4f33e85d8f556deced92c7", "Url": "https://api.github.com/repos/Talend/data-quality", "Date": "2018-10-25T16:16:48Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bootMinute > (java.time.LocalDateTime.now().getMinute())) { hour--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/6931/buggy-version/src.main.java.com.ckkeith.monitor.Main.java", "BodyUseAPI": [], "Fixed commit": "6eebd831ebd190f6033f34bfe3c614c2e5178255", "Url": "https://api.github.com/repos/chrisxkeith/monitor-particle-using-api", "Date": "2018-11-16T23:16:38Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (policy.forDatabase()) { cleanup(startTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8074/buggy-version/cat-core.src.main.java.com.dianping.cat.service.DefaultReportManager.java", "BodyUseAPI": [], "Fixed commit": "cd607b46e2b2fb55513dec08d46487fd1ad2d286", "Url": "https://api.github.com/repos/leusonmario/cat", "Date": "2015-03-17T09:28:19Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (canvas != null) { final int savedState = canvas.save(); canvas.scale(scaleFactorX, scaleFactorY); bg.draw(canvas); canvas.restoreToCount(savedState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3199/buggy-version/app.src.main.java.com.example.alessander.helicoptergame.GamePanel.java", "BodyUseAPI": ["android.graphics.Canvas.scale(float,float)", "android.graphics.Canvas.restoreToCount(int)", "android.graphics.Canvas.save()", "com.example.alessander.helicoptergame.Background.draw(android.graphics.Canvas)"], "Fixed commit": "5e952216b3ab17770655958c57e8f252446e5c72", "Url": "https://api.github.com/repos/alessanderleite/HelicopterGame", "Date": "2018-11-19T01:31:37Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ui.TextEditorUI.getCurrentTextPane()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pane != null) { ui.FontFrame fontFrame = new ui.FontFrame(pane); fontFrame.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/4041/buggy-version/src.main.java.ui.TextEditorUI.java", "BodyUseAPI": [], "Fixed commit": "826be0387ef85dae49b575c855675c89bd8e40b6", "Url": "https://api.github.com/repos/PauloJaime/ser515asu", "Date": "2018-11-25T20:46:15Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(url)) { cn.okclouder.library.util.LogUtils.e(cn.okclouder.ovc.ui.postdetail.PostDetailPresenter.TAG, \"start -> null url.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/7595/buggy-version/app.src.main.java.cn.okclouder.ovc.ui.postdetail.PostDetailPresenter.java", "BodyUseAPI": [], "Fixed commit": "7c8aae54358c29d661885e586185fc02bcebbc36", "Url": "https://api.github.com/repos/caoshen/agg", "Date": "2018-04-30T09:26:44Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((start) != null) { start.setPrevious(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/8902/buggy-version/MyLinkedList.java", "BodyUseAPI": [], "Fixed commit": "688e9529b167a7a764db836eb33c3262134cf2d4", "Url": "https://api.github.com/repos/WilliamC07/MKS21X-LinkedList", "Date": "2018-12-17T05:11:29Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mekanism.common.tile.TileEntityFactory.InvID.get(int,mekanism.common.tile.TileEntityFactory)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((item.stack) != null) && (item.stack.hasTagCompound())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown201811-12/All/V176/3469/buggy-version/src.main.java.mekanism.common.tile.TileEntityFactory.java", "BodyUseAPI": [], "Fixed commit": "faad2dca4c285a0ecc8093a5239185e976dc02c0", "Url": "https://api.github.com/repos/iKEVAREZ/Mekanism", "Date": "2018-12-25T17:19:10Z"}]}
