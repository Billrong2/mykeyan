{"UNKNOWN to If":[{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initSymbolStage) initSet(node);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/146/buggy-version/src.Mstar.Worker.FrontEnd.OutputIrrelevantEliminator.java", "BodyUseAPI": [], "Fixed commit": "e9bdce595c27d5268e911c4edc12a9d2124bcf85", "Url": "https://api.github.com/repos/idy002/mstar-compiler", "Date": "2018-06-03T13:03:26Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(offer.getLinkPicture().isEmpty())) { ch.epfl.sweng.swenggolf.storage.Storage storage = ch.epfl.sweng.swenggolf.storage.Storage.getInstance(); storage.remove(offer.getLinkPicture()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/616/buggy-version/app.src.main.java.ch.epfl.sweng.swenggolf.offer.ShowOfferActivity.java", "BodyUseAPI": ["ch.epfl.sweng.swenggolf.offer.Offer.getLinkPicture()", "ch.epfl.sweng.swenggolf.storage.Storage.remove(offer.getLinkPicture())"], "Fixed commit": "79e8f10bb1a167f25fddab82163cd354d16627ef", "Url": "https://api.github.com/repos/SwengGolfTeam/Sweng_Golf", "Date": "2018-10-31T09:49:33Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { startForegroundService(servicee); }else { startService(servicee); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8715/buggy-version/app.src.main.java.com.cvlcondorcet.condor.NotifListener.java", "BodyUseAPI": [], "Fixed commit": "4865308e8ad8ef71ed365e1e328e0c58dac2e889", "Url": "https://api.github.com/repos/Quentique/Condor", "Date": "2018-07-18T05:33:34Z"},
{"Line": "=>560", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["assignment4.Critter.critterEncounters(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((compareList2.size()) > 1) { encountersList.get(1).x_coord = saveX2; encountersList.get(1).y_coord = saveY2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8551/buggy-version/critters_StarterCode_Sp18.src.assignment4.Critter.java", "BodyUseAPI": [], "Fixed commit": "cc426cefd90f87330499eedfc3bf6edab74c8316", "Url": "https://api.github.com/repos/desireeotang/CritterSimulator", "Date": "2018-03-20T18:40:52Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(input.equals(\"quit\"))) { java.lang.System.out.println((\"invalid command: \" + input)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8551/buggy-version/critters_StarterCode_Sp18.src.assignment4.Main.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "cc426cefd90f87330499eedfc3bf6edab74c8316", "Url": "https://api.github.com/repos/desireeotang/CritterSimulator", "Date": "2018-03-20T18:40:52Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getBoolean(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (switchState) { switchButton.setChecked(true); switchText.setText(\"Turn off SMS notification\"); }else { switchButton.setChecked(false); switchText.setText(\"Turn on to receive SMS notification in your browser!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6674/buggy-version/app.src.main.java.com.example.samuvelp.smsnotifier.activities.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "17e8d82d75c364ad1a6dd3b6a60ab7d723e0c06e", "Url": "https://api.github.com/repos/samuvelp/smsNotifier", "Date": "2018-01-29T14:53:44Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeZoneString == null) { timeZoneString = \"GMT\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8769/buggy-version/external-calendaring-service.impl.src.java.org.sakaiproject.calendaring.api.ExternalCalendaringServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "1f4adaee5f393192769f4617171cbc2243421e0c", "Url": "https://api.github.com/repos/txstate-etc/sakai", "Date": "2018-07-26T19:59:05Z"},
{"Line": "=>1367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n == 'n') { res.append(\"\\n\"); }else if (n == 'q') { res.append(\"\\\"\"); }else if (n == 'u') { res.append(\"\u03bc\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/765/buggy-version/src.de.eliaspr.fgscript.FGParser.java", "BodyUseAPI": [], "Fixed commit": "9a219f4dd3cb71d563dbfd07fed99de57b91b20c", "Url": "https://api.github.com/repos/eliaspr/fgScript", "Date": "2018-10-07T19:48:41Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source == (this)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7431/buggy-version/core.src.main.java.org.movsim.simulator.roadnetwork.LaneSegment.java", "BodyUseAPI": [], "Fixed commit": "d2f17bea5a877ed6fd60db70dcfae5018f477a8c", "Url": "https://api.github.com/repos/movsim/movsim", "Date": "2018-05-06T19:42:50Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sink == (this)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7431/buggy-version/core.src.main.java.org.movsim.simulator.roadnetwork.LaneSegment.java", "BodyUseAPI": [], "Fixed commit": "d2f17bea5a877ed6fd60db70dcfae5018f477a8c", "Url": "https://api.github.com/repos/movsim/movsim", "Date": "2018-05-06T19:42:50Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (flag.hasFollowingValue()) return separatedFlag.split(\" \")[1]; else return flag.getRawFlag();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8096/buggy-version/BukkitCommandInterface.src.main.java.com.njdaeger.bci.flags.LiveFlag.java", "BodyUseAPI": ["com.njdaeger.bci.flags.Flag<?>.getRawFlag()"], "Fixed commit": "96a9a1c45fd78c1fb06f2e0ba7cfe7da0c50e9ba", "Url": "https://api.github.com/repos/NJDaeger/BukkitUtilities", "Date": "2018-08-27T16:41:57Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAuth) != null) { mAuth.resultLogin(requestCode, resultCode, data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6811/buggy-version/app.src.main.java.com.owl.chatstory.data.usersource.ILoginDataImpl.java", "BodyUseAPI": [], "Fixed commit": "357a4236f5e013646cd0348ccd9665766e58d251", "Url": "https://api.github.com/repos/Trisaa/OwlChatStory", "Date": "2018-02-10T16:23:05Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFictionDetailModel) != null) { com.owl.chatstory.data.homesource.model.ShareModel shareModel = new com.owl.chatstory.data.homesource.model.ShareModel(); shareModel.setContent(getString(R.string.share_content)); shareModel.setUrl(com.owl.chatstory.common.util.ShareUtils.getShareChapterUrl(mFictionDetailModel.getLanguage(), mLastChapterId)); com.owl.chatstory.common.util.DialogUtils.showShareDialog(this, shareModel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6811/buggy-version/app.src.main.java.com.owl.chatstory.chat.ReadActivity.java", "BodyUseAPI": [], "Fixed commit": "357a4236f5e013646cd0348ccd9665766e58d251", "Url": "https://api.github.com/repos/Trisaa/OwlChatStory", "Date": "2018-02-10T16:23:05Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDialogUserIcon) != null) { com.owl.chatstory.common.util.ImageLoaderUtils.getInstance().loadCircleImage(this, mImagePath, mDialogUserIcon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6811/buggy-version/app.src.main.java.com.owl.chatstory.creation.CreateActivity.java", "BodyUseAPI": [], "Fixed commit": "357a4236f5e013646cd0348ccd9665766e58d251", "Url": "https://api.github.com/repos/Trisaa/OwlChatStory", "Date": "2018-02-10T16:23:05Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((index) + 1) >= (currentLine.length())) { throw new java.lang.Exception(\"wrong character\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8902/buggy-version/src.main.java.Tokenizer.java", "BodyUseAPI": [], "Fixed commit": "ec836db64dc336298faeca49e8a4b1ed64dbb7c6", "Url": "https://api.github.com/repos/Dilschat/Lexical-analyzer", "Date": "2018-09-20T18:19:47Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.nickac.buttondeck.ButtonDeckActivity.client) != null) net.nickac.buttondeck.ButtonDeckActivity.client.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1425/buggy-version/app.src.main.java.net.nickac.buttondeck.ButtonDeckActivity.java", "BodyUseAPI": [], "Fixed commit": "0cc5d8c458e37d1651ccd13d61dc8f0166d03d9f", "Url": "https://api.github.com/repos/NickAcPT/ButtonDeck-Android", "Date": "2018-01-04T23:40:27Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (CardColor.equals(\"\")) { CardColor = \"white\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/577/buggy-version/src.main.java.edu.ithaca.group2.UserInterface.java", "BodyUseAPI": [], "Fixed commit": "bfb5d9526b7d3bdc19c218b41aebdd4739cd6621", "Url": "https://api.github.com/repos/kpomer/stick_E_notes", "Date": "2018-04-12T15:32:20Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.shortninja.staffplus.player.UserManager.get(player.getUniqueId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5213/buggy-version/StaffPlusCore.src.main.java.net.shortninja.staffplus.server.listener.InventoryClose.java", "BodyUseAPI": [], "Fixed commit": "8e0a398f98758921cebf05bfdd0760a2022df4e5", "Url": "https://api.github.com/repos/Qballl/StaffPlus", "Date": "2018-01-05T16:11:50Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userManager.get(player.getUniqueId()).getVanishType()) == null) return false; else return (userManager.get(player.getUniqueId()).getVanishType()) == (net.shortninja.staffplus.player.attribute.mode.handler.VanishHandler.VanishType.TOTAL);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/5213/buggy-version/StaffPlusCore.src.main.java.net.shortninja.staffplus.server.PacketModifier.java", "BodyUseAPI": ["net.shortninja.staffplus.player.UserManager.get(player.getUniqueId())", "org.bukkit.entity.Player.getUniqueId()", "userManager.get(player.getUniqueId()).getVanishType()"], "Fixed commit": "8e0a398f98758921cebf05bfdd0760a2022df4e5", "Url": "https://api.github.com/repos/Qballl/StaffPlus", "Date": "2018-01-05T16:11:50Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.boun.semanticweb.service.WordService.findByText(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (word != null) { com.boun.semanticweb.viewModel.GraphData data = wordRelationService.getWordRelations(word); if ((data.getEdges().size()) > 0) { response.getWriter().write(com.boun.semanticweb.base.JsonHandler.convertToJSON(word)); }else { response.getWriter().write(com.boun.semanticweb.base.JsonHandler.convertToJSON(\"Word not found\")); } }else { response.getWriter().write(com.boun.semanticweb.base.JsonHandler.convertToJSON(\"Word not found\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2523/buggy-version/src.main.java.com.boun.semanticweb.web.SearchController.java", "BodyUseAPI": ["com.boun.semanticweb.service.WordRelationService.getWordRelations(com.boun.semanticweb.model.Word)", "com.boun.semanticweb.base.JsonHandler.convertToJSON(com.boun.semanticweb.model.Word)", "response.getWriter().write(com.boun.semanticweb.base.JsonHandler.convertToJSON(word))"], "Fixed commit": "6c91cbfa7922e55ffb8ccf6d3d6f10400cde5b4f", "Url": "https://api.github.com/repos/BounSemanticPeppers/Linked-Language", "Date": "2018-01-11T21:10:19Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.boun.semanticweb.service.WordRelationService.getWordRelations(com.boun.semanticweb.model.Word)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((graphData.getEdges().size()) > 0) { response.getWriter().write(com.boun.semanticweb.base.JsonHandler.convertToJSON(graphData)); }else { response.getWriter().write(com.boun.semanticweb.base.JsonHandler.convertToJSON(\"Word not found\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2523/buggy-version/src.main.java.com.boun.semanticweb.web.SearchController.java", "BodyUseAPI": ["com.boun.semanticweb.base.JsonHandler.convertToJSON(com.boun.semanticweb.viewModel.GraphData)", "response.getWriter().write(com.boun.semanticweb.base.JsonHandler.convertToJSON(graphData))"], "Fixed commit": "6c91cbfa7922e55ffb8ccf6d3d6f10400cde5b4f", "Url": "https://api.github.com/repos/BounSemanticPeppers/Linked-Language", "Date": "2018-01-11T21:10:19Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["node.getMetadata().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.ekstep.content.util.ContentPackageExtractionUtil.extractableMimeTypes.containsKey(mimeType)) isDirectory = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2878/buggy-version/platform-modules.content-manager.src.main.java.org.ekstep.content.util.ContentPackageExtractionUtil.java", "BodyUseAPI": [], "Fixed commit": "f6b55cecee5a33e2a0ba0f7c5814b7a3694769b8", "Url": "https://api.github.com/repos/project-sunbird/sunbird-learning-platform", "Date": "2018-10-01T06:55:37Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (selfId == null) { selfIndex = -1; }else { selfIndex = java.util.Collections.binarySearch(nodes, new com.github.antego.cluster.Node(selfId, null, 0), java.util.Comparator.comparing(Node::getId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3925/buggy-version/src.main.java.com.github.antego.cluster.ClusterState.java", "BodyUseAPI": [], "Fixed commit": "08a31a9ffa7d5bd26be2940b5797973f9af58054", "Url": "https://api.github.com/repos/antego/metrics-paradise", "Date": "2018-05-28T17:50:55Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getNewSelection()) instanceof seedu.address.model.patient.Patient) { loadPatientInformation(((seedu.address.model.patient.Patient) (event.getNewSelection()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7536/buggy-version/src.main.java.seedu.address.ui.InformationPanel.java", "BodyUseAPI": ["seedu.address.commons.events.ui.PersonPanelSelectionChangedEvent.getNewSelection()", "seedu.address.ui.InformationPanel.loadPatientInformation(((seedu.address.model.patient.Patient) (event.getNewSelection())))"], "Fixed commit": "c30a572e99ae4bee6d077374c01e1a6f0e095233", "Url": "https://api.github.com/repos/YangYafei1998/main", "Date": "2018-10-28T16:05:28Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInProgress())) { if (!(completed)) { completed = true; if ((notifyLock) != null) { synchronized(notifyLock) { notifyLock.notify(); } } if ((onCompletion) != null) { onCompletion.run(); } if ((post) != null) { for (java.lang.Runnable p : post) { p.run(); } } } }else { completed = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/791/buggy-version/CodenameOne.src.com.codename1.ui.animations.ComponentAnimation.java", "BodyUseAPI": [], "Fixed commit": "e0e803b4316f85348f8cf81717aaecb7d7e4ad44", "Url": "https://api.github.com/repos/Firethunder/CodenameOne", "Date": "2018-05-29T14:24:29Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((A[i]) >= 0) { lastMin = (lastMin) - (A[i]); lastMax = (lastMax) + (A[i]); }else { lastMax = (lastMax) - (A[i]); lastMin = (lastMin) + (A[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/1369/buggy-version/src.main.java.codility.min_abs_sum.Solution.java", "BodyUseAPI": [], "Fixed commit": "5f6322d7091cffb415fe1951e396a883de884771", "Url": "https://api.github.com/repos/Daniel1147/java_code_challenge", "Date": "2018-04-10T16:28:27Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTrue) return name; else return \"!\" + (name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3192/buggy-version/deltadoc.src.raykernel.lang.dom.expression.Variable.java", "BodyUseAPI": [], "Fixed commit": "d2571378f58a155b7e7904d526e10795e6a232e1", "Url": "https://api.github.com/repos/ro-ggi/deltadoc", "Date": "2018-03-11T00:47:42Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTrue) return new raykernel.lang.dom.expression.Variable(name); else return new raykernel.lang.dom.expression.Variable(name).negated();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3192/buggy-version/deltadoc.src.raykernel.lang.dom.expression.Variable.java", "BodyUseAPI": [], "Fixed commit": "d2571378f58a155b7e7904d526e10795e6a232e1", "Url": "https://api.github.com/repos/ro-ggi/deltadoc", "Date": "2018-03-11T00:47:42Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (alex.beta.onlinetranslation.services.impl.BaiduAPIConnector.logger.isWarnEnabled()) { alex.beta.onlinetranslation.services.impl.BaiduAPIConnector.logger.warn(\"Baidu Fanyi returns error.{}{}\", java.lang.System.lineSeparator(), body); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/7072/buggy-version/onlinetranslation.src.main.java.alex.beta.onlinetranslation.services.impl.BaiduAPIConnector.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "7c2f50a650dd7bbaac3adf41aca4fb793b1a7485", "Url": "https://api.github.com/repos/alex-song/beta", "Date": "2018-03-03T09:58:32Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sixtyfour.system.CompilerConfig.getConfig()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(config.isConstantFolding())) { com.sixtyfour.parser.optimize.DeadStoreEliminator.eliminateDeadStores(basic); }else { com.sixtyfour.parser.optimize.ConstantPropagator.propagateConstants(machine); com.sixtyfour.parser.optimize.DeadStoreEliminator.eliminateDeadStores(basic); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6073/buggy-version/src.main.java.com.sixtyfour.cbmnative.NativeCompiler.java", "BodyUseAPI": [], "Fixed commit": "7de377f3db77ec677d76bee1bec9228dd609f963", "Url": "https://api.github.com/repos/EgonOlsen71/basicv2", "Date": "2018-04-09T20:04:56Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ambariRepositoryVersionService.isVersionNewerOrEqualThanLimited(ambariRepo::getVersion, com.sequenceiq.cloudbreak.service.cluster.ambari.AmbariRepositoryVersionService.AMBARI_VERSION_2_7_2_0)) { ldapConfigs.put(\"ambari.ldap.advanced.collision_behavior\", \"convert\"); }else { ldapConfigs.put(\"ambari.ldap.advance.collision_behavior\", \"convert\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6423/buggy-version/core.src.main.java.com.sequenceiq.cloudbreak.service.cluster.ambari.AmbariLdapService.java", "BodyUseAPI": [], "Fixed commit": "829fdb84be8660e92f90e0ae012cd53d1630055e", "Url": "https://api.github.com/repos/hortonworks/cloudbreak", "Date": "2018-10-24T07:19:45Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentSymbol.equalsIgnoreCase(\"t\")) { this.machine.setState(this.machine.getState_T()); java.lang.System.out.println(\"Tranistioned to T\"); }else if (currentSymbol.equalsIgnoreCase(\"h\")) { this.machine.setState(this.machine.getState_H()); java.lang.System.out.println(\"Transitioned to H\"); }else if (currentSymbol.equalsIgnoreCase(\"a\")) { this.machine.setState(this.machine.getState_A()); java.lang.System.out.println(\"Transitioned to A\"); }else { this.machine.setState(this.machine.getState_start()); java.lang.System.out.println(\"Transitioned to Start\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/2307/buggy-version/RegularExp_Finite_State_Machine.src.main.java.vora.priya.computationalTheory.State_C.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "82178acbe747d2f1a99e1d908a79c663eeb463e5", "Url": "https://api.github.com/repos/priyaVora/computationalTheory", "Date": "2018-07-05T16:22:41Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((product.getCategories()) != null) { value.setCategories(com.soaringclouds.product.converter.ProductConverter.convertFromString(product.getCategories())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/205/buggy-version/src.main.java.com.soaringclouds.product.converter.ProductConverter.java", "BodyUseAPI": ["com.soaringclouds.avro.product.v1.Product.setCategories(java.util.List<java.lang.CharSequence>)", "com.soaringclouds.product.converter.ProductConverter.convertFromString(product.getCategories())", "com.soaringclouds.product.model.ProductDO.getCategories()"], "Fixed commit": "8057515d53b0281ad504ad563948cdbb8527a337", "Url": "https://api.github.com/repos/gschmutz/product-soaring-clouds-sequel", "Date": "2018-02-25T17:38:54Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((product.getTags()) != null) { value.setTags(com.soaringclouds.product.converter.ProductConverter.convertFromString(product.getTags())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/205/buggy-version/src.main.java.com.soaringclouds.product.converter.ProductConverter.java", "BodyUseAPI": ["com.soaringclouds.avro.product.v1.Product.setTags(java.util.List<java.lang.CharSequence>)", "com.soaringclouds.product.model.ProductDO.getTags()", "com.soaringclouds.product.converter.ProductConverter.convertFromString(product.getTags())"], "Fixed commit": "8057515d53b0281ad504ad563948cdbb8527a337", "Url": "https://api.github.com/repos/gschmutz/product-soaring-clouds-sequel", "Date": "2018-02-25T17:38:54Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((product.getTags()) != null) { value.setTags(com.soaringclouds.product.converter.ProductConverter.convertFromCS(product.getTags())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/205/buggy-version/src.main.java.com.soaringclouds.product.converter.ProductConverter.java", "BodyUseAPI": ["com.soaringclouds.product.model.ProductDO.setTags(java.util.List<java.lang.String>)", "com.soaringclouds.product.converter.ProductConverter.convertFromCS(product.getTags())", "com.soaringclouds.avro.product.v1.Product.getTags()"], "Fixed commit": "8057515d53b0281ad504ad563948cdbb8527a337", "Url": "https://api.github.com/repos/gschmutz/product-soaring-clouds-sequel", "Date": "2018-02-25T17:38:54Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((product.getCategories()) != null) { value.setCategories(com.soaringclouds.product.converter.ProductConverter.convertFromCS(product.getCategories())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/205/buggy-version/src.main.java.com.soaringclouds.product.converter.ProductConverter.java", "BodyUseAPI": ["com.soaringclouds.product.model.ProductDO.setCategories(java.util.List<java.lang.String>)", "com.soaringclouds.avro.product.v1.Product.getCategories()", "com.soaringclouds.product.converter.ProductConverter.convertFromCS(product.getCategories())"], "Fixed commit": "8057515d53b0281ad504ad563948cdbb8527a337", "Url": "https://api.github.com/repos/gschmutz/product-soaring-clouds-sequel", "Date": "2018-02-25T17:38:54Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v7.app.AppCompatDelegate.MODE_NIGHT_YES) == (android.support.v7.app.AppCompatDelegate.getDefaultNightMode())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/3053/buggy-version/News-Android-App.src.main.java.de.luhmer.owncloudnewsreader.helper.ThemeChooser.java", "BodyUseAPI": [], "Fixed commit": "4f823cb6bdba6be0f94b4ec64e2e5c58f5a24339", "Url": "https://api.github.com/repos/AnotherDaniel/news-android", "Date": "2018-09-23T20:58:45Z"},
{"Line": "=>835", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(editor.isEnabled())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/6760/buggy-version/GridFastNavigation-addon.src.main.java.org.vaadin.patrik.client.EditorStateManager.java", "BodyUseAPI": [], "Fixed commit": "2365118437073eba69008fcd31004e282852d53a", "Url": "https://api.github.com/repos/TatuLund/GridFastNavigation", "Date": "2018-04-29T10:39:21Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jsonObject.has(\"events\")) { event = \"bulk_events\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V143/8838/buggy-version/android-sdk.src.main.java.com.blueshift.request_queue.RequestDispatcher.java", "BodyUseAPI": [], "Fixed commit": "c25c8a8a25dd4a9156f8d03eeeced164b0ae8c1a", "Url": "https://api.github.com/repos/blueshift-labs/Blueshift-Android-SDK", "Date": "2018-09-26T13:12:14Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.valkryst.VTerminal.TileGrid.getTileAt(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (tile != null) { tile.reset(); tile.setBackgroundColor(colorPalette.getDefaultBackground()); tile.setForegroundColor(colorPalette.getDefaultForeground()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2700/buggy-version/src.com.valkryst.VTerminal.Screen.java", "BodyUseAPI": ["com.valkryst.VTerminal.Tile.setBackgroundColor(colorPalette.getDefaultBackground())", "com.valkryst.VTerminal.Tile.setForegroundColor(colorPalette.getDefaultForeground())", "com.valkryst.VTerminal.Tile.reset()"], "Fixed commit": "22a7a9b205f969d6d395353bec41906cd2ca640c", "Url": "https://api.github.com/repos/Valkryst/VTerminal", "Date": "2018-10-09T15:19:05Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.valkryst.VTerminal.component.Layer.getTileAt(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (tile != null) { tile.reset(); tile.setBackgroundColor(rootScreen.getColorPalette().getDefaultBackground()); tile.setForegroundColor(rootScreen.getColorPalette().getDefaultForeground()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2700/buggy-version/src.com.valkryst.VTerminal.component.Layer.java", "BodyUseAPI": ["com.valkryst.VTerminal.Tile.reset()", "com.valkryst.VTerminal.Tile.setForegroundColor(rootScreen.getColorPalette().getDefaultForeground())", "com.valkryst.VTerminal.Tile.setBackgroundColor(rootScreen.getColorPalette().getDefaultBackground())"], "Fixed commit": "22a7a9b205f969d6d395353bec41906cd2ca640c", "Url": "https://api.github.com/repos/Valkryst/VTerminal", "Date": "2018-10-09T15:19:05Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasProperties()) { return (ArgExtractor.ArgName.toolkitUserFolder.defaultValue()) + (toolkitUsername()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3026/buggy-version/src.main.java.pg.gipter.settings.ApplicationProperties.java", "BodyUseAPI": [], "Fixed commit": "546a4c0444b0d779e5119916643cdc88374f0a66", "Url": "https://api.github.com/repos/PreCyz/GitDiffGenerator", "Date": "2018-10-18T15:18:52Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (failed) { return generateRandomSolution(random); }else { return _field; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5105/buggy-version/sudoko.Field.java", "BodyUseAPI": [], "Fixed commit": "32d57e645f8f7c8ab5e35687a36dee4b90c696ec", "Url": "https://api.github.com/repos/Alyanorno/Sudoko", "Date": "2018-05-13T18:28:49Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((possibleValues.size()) != 0) { _field.set((i + (j * (_fieldSize))), possibleValues.get(random.nextInt(possibleValues.size()))); }else { failed = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5105/buggy-version/sudoko.Field.java", "BodyUseAPI": ["java.util.Random.nextInt(int)", "java.util.ArrayList<java.lang.Integer>.set(int,java.lang.Integer)", "java.util.ArrayList<java.lang.Integer>.get(int)", "java.util.ArrayList<java.lang.Integer>.size()"], "Fixed commit": "32d57e645f8f7c8ab5e35687a36dee4b90c696ec", "Url": "https://api.github.com/repos/Alyanorno/Sudoko", "Date": "2018-05-13T18:28:49Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mExoPlayer) != null) { releasePlayer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/992/buggy-version/app.src.main.java.com.example.android.baking.ui.StepDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "889e0bee9e5ff16c98a2a8a1fac423c4b9166b6c", "Url": "https://api.github.com/repos/RJRogers/Baking", "Date": "2018-01-08T02:29:15Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((counter) == (newSteps.size())) { android.util.Log.d(com.example.android.baking.ui.ItemListActivity.LOG_TAG, \"ERROR\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/992/buggy-version/app.src.main.java.com.example.android.baking.ui.StepDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "889e0bee9e5ff16c98a2a8a1fac423c4b9166b6c", "Url": "https://api.github.com/repos/RJRogers/Baking", "Date": "2018-01-08T02:29:15Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.magic.api.beans.MagicEdition.getNumber()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (number.isEmpty()) number = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1787/buggy-version/src.main.java.org.magic.tools.IDGenerator.java", "BodyUseAPI": [], "Fixed commit": "4f1862415b23f872b1dd5a1f624f750123c10fb6", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-05-28T10:10:31Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.assets) != null) builder.assets(this.assets);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5311/buggy-version/enoa-yosart.src.main.java.io.enoa.yosart.YosartImpl.java", "BodyUseAPI": [], "Fixed commit": "d267b021156af9dd79f6bd3857a666d5bf458783", "Url": "https://api.github.com/repos/fewensa/enoa", "Date": "2018-09-04T06:25:33Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCookieUserName()) == null) { form.setValue(\"login\", cacheLogin); }else { if ((!(getCookieUserName().isEmpty())) && ((getCookieUserName().toLowerCase().trim()) != \"null\")) { form.setValue(\"login\", getCookieUserName()); }else { if (cacheLogin != null) { form.setValue(\"login\", cacheLogin); }else { form.setValue(\"login\", \"\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8360/buggy-version/common-portal.src.main.java.org.ow2.proactive_grid_cloud_portal.common.client.LoginPage.java", "BodyUseAPI": [], "Fixed commit": "398940c8d62e108d82e3d99e944e16dbbcfb50b5", "Url": "https://api.github.com/repos/luispinedamx/scheduling-portal", "Date": "2018-01-22T15:38:31Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6362/buggy-version/src.main.java.net.glowstone.command.GameModeUtils.java", "BodyUseAPI": [], "Fixed commit": "e6372a9d137d765cd776c9694fd8c663452a57ce", "Url": "https://api.github.com/repos/GlowstoneMC/Glowstone", "Date": "2018-10-10T03:36:46Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index < (list.size())) { list.set(index, value); }else { list.add(index, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6728/buggy-version/src.main.java.com.cinchapi.common.collect.AnyMaps.java", "BodyUseAPI": ["java.util.List.add(java.lang.Integer,java.lang.Object)", "java.util.List.set(java.lang.Integer,java.lang.Object)"], "Fixed commit": "05bdfa64ffa59838e52bb01885d073feb98bf24c", "Url": "https://api.github.com/repos/cinchapi/accent4j", "Date": "2018-07-11T03:56:05Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((xArray.length) <= 1) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7322/buggy-version/src.main.java.com.github.lancethomps.lava.common.math.Statistics.java", "BodyUseAPI": [], "Fixed commit": "59b5fb55b8dedf649133e28255de60bc02578b04", "Url": "https://api.github.com/repos/lancethomps/lava", "Date": "2018-08-16T07:02:15Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((unit == 6) || (unit == 7)) { lesson.addSubject(new de.lohl1kohl.vsaapp.fragments.sp.Subject(weekday, unit, context.getString(R.string.lesson_free), \"-\", \"-\")); lesson.readSavedSubject(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5439/buggy-version/VsaApp.app.src.main.java.de.lohl1kohl.vsaapp.fragments.sp.SpHolder.java", "BodyUseAPI": ["de.lohl1kohl.vsaapp.fragments.sp.Lesson.addSubject(de.lohl1kohl.vsaapp.fragments.sp.Subject)"], "Fixed commit": "7cb72d78f444c9af96b277b0e24846d2875a343a", "Url": "https://api.github.com/repos/VsaApp/App", "Date": "2018-09-24T15:32:35Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.vismaad.naad.sharedprefrences.JBSehajBaniPreferences.getLoginId(mSharedPreferences).equalsIgnoreCase(\"\"))) { android.widget.Toast.makeText(getApplicationContext(), (\"\" + (com.vismaad.naad.sharedprefrences.JBSehajBaniPreferences.getLoginId(mSharedPreferences))), Toast.LENGTH_SHORT).show(); WelcomeActivity.welcomeActivity.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3148/buggy-version/app.src.main.java.com.vismaad.naad.navigation.NavigationActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(getApplicationContext(), (\"\" + (com.vismaad.naad.sharedprefrences.JBSehajBaniPreferences.getLoginId(mSharedPreferences))), Toast.LENGTH_SHORT).show()", "android.widget.Toast.makeText(getApplicationContext(),(\"\" + (com.vismaad.naad.sharedprefrences.JBSehajBaniPreferences.getLoginId(mSharedPreferences))),Toast.LENGTH_SHORT)", "com.vismaad.naad.sharedprefrences.JBSehajBaniPreferences.getLoginId(android.content.SharedPreferences)"], "Fixed commit": "50032dc1133a70e70fb1164bebba695ab52f13a7", "Url": "https://api.github.com/repos/ivesingh93/VismaadNaad-Android", "Date": "2018-08-02T05:57:29Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.objects) == null) return toReturn;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9395/buggy-version/ARDog_Java.app.src.main.java.de.fhws.mobcom.ardog_java.ObjectManager.java", "BodyUseAPI": [], "Fixed commit": "e6799512bce5042c9189f0d2d70ddf80cc98a290", "Url": "https://api.github.com/repos/kangaro0/ARDog", "Date": "2018-02-01T13:36:45Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetTicks > 0) { return currentTicks >= targetTicks; }else { return currentTicks <= targetTicks; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4359/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.subsystems.DriveTrain.java", "BodyUseAPI": [], "Fixed commit": "6d73261ecf4774dcc0de13f144fae65b1a8edfbb", "Url": "https://api.github.com/repos/Shalmezad/stbrigids2018", "Date": "2018-10-30T13:00:09Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(setContains(item1))) { throw new java.lang.IllegalArgumentException(\"item1 is not contained inside this disjoint set\"); }else if (!(setContains(item2))) { throw new java.lang.IllegalArgumentException(\"item2 is not contained inside this disjoint set\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2023/buggy-version/src.main.java.datastructures.concrete.ArrayDisjointSet.java", "BodyUseAPI": [], "Fixed commit": "469711eab98884de3fbb9d468f6e047410913d7b", "Url": "https://api.github.com/repos/castro51/cse_373", "Date": "2018-03-06T23:24:59Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.level.getBlock(cn.nukkit.entity.EntityLiving,int,cn.nukkit.entity.EntityLiving)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (block instanceof cn.nukkit.block.BlockMagma) block.onEntityCollide(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1582/buggy-version/src.main.java.cn.nukkit.entity.EntityLiving.java", "BodyUseAPI": ["cn.nukkit.block.Block.onEntityCollide(cn.nukkit.entity.EntityLiving)"], "Fixed commit": "5f48641f16e9b224ba03a0dfcd9c278c080b2443", "Url": "https://api.github.com/repos/PetteriM1/Nukkit", "Date": "2018-09-10T16:52:42Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) { context.deleteSharedPreferences((\"Prefs_\" + (userContext.getContextName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3621/buggy-version/app.src.main.java.corp.kairos.adamastor.Settings.Settings.java", "BodyUseAPI": [], "Fixed commit": "482e58ad94578ebd8326a2f789320069ce351e9b", "Url": "https://api.github.com/repos/kairoscorp/adamastor", "Date": "2018-02-08T23:16:24Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (plant.getDateLastWatered().before(today)) { oldColors = initView.getTextColors(); initView.setTextColor(-5952982); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2041/buggy-version/app.src.main.java.com.no.hallstead.gardeningapp.ViewPlant.java", "BodyUseAPI": [], "Fixed commit": "f6c6fcddfcc8603fec5126a19c4bd34b9434b21d", "Url": "https://api.github.com/repos/Hallstead/Gardening-App", "Date": "2018-07-08T00:06:00Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.Authentication.getPrincipal()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((userDetails.getUser()) instanceof by.bsuir.realEstateAgency.core.model.Client) { immobilityDto.setOwnerLogin(userDetails.getUsername()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6614/buggy-version/web.src.main.java.by.bsuir.realEstateAgency.web.controller.panel.ImmobilityController.java", "BodyUseAPI": ["by.bsuir.realEstateAgency.web.bean.immobility.ImmobilityDto.setOwnerLogin(userDetails.getUsername())", "by.bsuir.realEstateAgency.web.security.AuthUserDetails.getUsername()"], "Fixed commit": "da54d12a2ab261300d4bab3a922a33465599cbaf", "Url": "https://api.github.com/repos/DmKoshelek/realEstateAgency", "Date": "2018-05-20T09:07:03Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.Authentication.getPrincipal()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((userDetails.getUser()) instanceof by.bsuir.realEstateAgency.core.model.Client) { immobilityDto.setOwnerLogin(userDetails.getUsername()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6614/buggy-version/web.src.main.java.by.bsuir.realEstateAgency.web.controller.panel.ImmobilityController.java", "BodyUseAPI": ["by.bsuir.realEstateAgency.web.security.AuthUserDetails.getUsername()", "by.bsuir.realEstateAgency.web.bean.immobility.ImmobilityDto.setOwnerLogin(userDetails.getUsername())"], "Fixed commit": "da54d12a2ab261300d4bab3a922a33465599cbaf", "Url": "https://api.github.com/repos/DmKoshelek/realEstateAgency", "Date": "2018-05-20T09:07:03Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.reflect.Modifier.isFinal(outputField.getModifiers())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3477/buggy-version/src.main.java.com.github.andyshao.util.EntityOperation.java", "BodyUseAPI": [], "Fixed commit": "63447d0de45d2376e1d4ec55c6888000151d98a4", "Url": "https://api.github.com/repos/Andy-Shao/Gear", "Date": "2018-08-21T07:09:36Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (compute_type.equals(ComputeType.GPU)) { if ((gpu_device_id == null) || (gpu_device_id.equals(\"null\"))) { rejectRequest(connection_uuid, queue_item_uuid); rejected = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9185/buggy-version/src.main.java.com.dryadandnaiad.sethlans.controllers.NodeRenderController.java", "BodyUseAPI": [], "Fixed commit": "ce001841fe0fa77c3b3866c67116c6fdfc8cde1d", "Url": "https://api.github.com/repos/dryad-naiad-software/sethlans", "Date": "2018-09-03T03:09:26Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (inputFromFileArray.get(((inputFromFileArray.size()) - 1)).equals(\"\\n\")) { inputFromFileArray.remove(((inputFromFileArray.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8667/buggy-version/src.Model.Sokoban.java", "BodyUseAPI": [], "Fixed commit": "249f51161a6080ac11ff27b56cf4aeb92948bf48", "Url": "https://api.github.com/repos/sstratemeier/Sokoban", "Date": "2018-05-14T11:42:02Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (inputFromFileArray.get(((inputFromFileArray.size()) - 1)).equals(\"\\n\")) { inputFromFileArray.remove(((inputFromFileArray.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8667/buggy-version/src.Model.Sokoban.java", "BodyUseAPI": [], "Fixed commit": "249f51161a6080ac11ff27b56cf4aeb92948bf48", "Url": "https://api.github.com/repos/sstratemeier/Sokoban", "Date": "2018-05-14T11:42:02Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (correctLevel && (!(line.isEmpty()))) { inputFromFileArray.add(line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8667/buggy-version/src.Model.Sokoban.java", "BodyUseAPI": [], "Fixed commit": "249f51161a6080ac11ff27b56cf4aeb92948bf48", "Url": "https://api.github.com/repos/sstratemeier/Sokoban", "Date": "2018-05-14T11:42:02Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (email.contains(\" \")) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/410/buggy-version/src.main.java.Domain.Validate.java", "BodyUseAPI": [], "Fixed commit": "a4231a1274bdfa2d8d6a4d1fd046b44c87a9a463", "Url": "https://api.github.com/repos/MathiasTG/2.Semester", "Date": "2018-05-18T12:52:56Z"},
{"Line": "=>718", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (super.generatePlayFile) super.playFileLogger.logMessage(\"AZER SPLIT HAPPENED!!!!!!!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1255/buggy-version/FSML1.src.AzerAgent.java", "BodyUseAPI": ["super.playFileLogger.logMessage(java.lang.String)"], "Fixed commit": "b8acce9b20386edcb0a96c2c76bd9b8d5e1ff1c5", "Url": "https://api.github.com/repos/amnuxoll/FSMLearning", "Date": "2018-04-04T23:45:42Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((timeOutInMin > 0) && (timeOutInMin < 500)) { ((com.muzima.MuzimaApplication) (getActivity().getApplication())).resetTimer(timeOutInMin); return true; }else { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(getActivity()); builder.setCancelable(true).setIcon(getResources().getDrawable(R.drawable.ic_warning)).setTitle(getResources().getString(R.string.general_caution)).setMessage(getResources().getString(R.string.warning_session_timeout)).setPositiveButton(getResources().getText(R.string.general_ok), null).create().show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/657/buggy-version/app.src.main.java.com.muzima.view.preferences.settings.SettingsPreferenceFragment.java", "BodyUseAPI": ["((com.muzima.MuzimaApplication) (getActivity().getApplication())).resetTimer(java.lang.Integer)"], "Fixed commit": "5b0230704b43b41ce5bfe04d92335018ee8ba6a0", "Url": "https://api.github.com/repos/rezita/muzima-android", "Date": "2018-10-17T11:35:54Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((BaseApplication.LAST_LONG_VAL.compareTo(\"\")) != 0) call = com.ndc.bus.Network.RetrofitClient.getInstance().getService().getStaionsByPosList(serviceKey, java.lang.Double.parseDouble(BaseApplication.LAST_LONG_VAL), java.lang.Double.parseDouble(BaseApplication.LAST_LATI_VAL), 50); else call = com.ndc.bus.Network.RetrofitClient.getInstance().getService().getStaionsByPosList(serviceKey, 125, 25, 50);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2208/buggy-version/app.src.main.java.com.ndc.bus.Activity.StationActivity.java", "BodyUseAPI": [], "Fixed commit": "7ff3ab51d70aeeae5bd667cf1cac443cea904cc9", "Url": "https://api.github.com/repos/2018Seoul-Competition/Bus_Android", "Date": "2018-09-30T06:48:45Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(vt.next())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7903/buggy-version/src.com.oltpbenchmark.benchmarks.seats.SEATSProfile.java", "BodyUseAPI": [], "Fixed commit": "713e294c51a0f8d01b74d115aba9f59f3670d46e", "Url": "https://api.github.com/repos/samehdi/oltpbench", "Date": "2018-10-25T17:59:07Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(vt.next())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7903/buggy-version/src.com.oltpbenchmark.benchmarks.seats.SEATSProfile.java", "BodyUseAPI": [], "Fixed commit": "713e294c51a0f8d01b74d115aba9f59f3670d46e", "Url": "https://api.github.com/repos/samehdi/oltpbench", "Date": "2018-10-25T17:59:07Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["we.template.SegmentCompiler.append(int,((start.getTokenIndex()) - 1))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(plainText.equals(we.template.SegmentCompiler.EMPTY))) { this.segments.add(new we.template.segment.PlainTextSegment(plainText)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8776/buggy-version/src.main.java.we.template.SegmentCompiler.java", "BodyUseAPI": ["java.util.List<we.template.segment.Segment>.add(we.template.segment.PlainTextSegment)"], "Fixed commit": "c9866f809b923379056b32e388ca5317343a484d", "Url": "https://api.github.com/repos/worstenemy/antlr-template", "Date": "2018-05-26T04:48:25Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isemply()) { head = new Node(o); }else { Node n = new Node(o); n.next = head; head = n; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5444/buggy-version/Stackluis.java", "BodyUseAPI": [], "Fixed commit": "1cfb3b5df26135d9781c91af6d0068e3e2aa95e5", "Url": "https://api.github.com/repos/leotalorac/Mystack", "Date": "2018-03-13T13:11:36Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (childHeightSize > childWidthSize) { childHeightSize = childWidthSize; }else { childWidthSize = childHeightSize; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3701/buggy-version/app.src.main.java.com.time.cat.demo.lock.GestureLock.java", "BodyUseAPI": [], "Fixed commit": "a77f6465604c699c7cf952b41936ece4e7f2e347", "Url": "https://api.github.com/repos/LinXueyuanStdio/HoldButton", "Date": "2018-10-14T08:04:17Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loadingMoreEnabled) { if (noMore) { ((java.util.List) (list)).add(new com.trecyclerview.pojo.FootVo(STATE_NOMORE)); }else { ((java.util.List) (list)).add(new com.trecyclerview.pojo.FootVo(STATE_LOADING)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/885/buggy-version/library.src.main.java.com.trecyclerview.SwipeRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "216413a327d21456bb351dffb4fe8da4dba2fad1", "Url": "https://api.github.com/repos/SelfZhangTQ/TRecyclerView", "Date": "2018-09-05T07:06:57Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((plant) != null) { return plant.getHits(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1042/buggy-version/src.swen222.niwa.model.puzzle.Puzzle.java", "BodyUseAPI": [], "Fixed commit": "d02f122cb39fd21e7520bd8a83237e28283c854f", "Url": "https://api.github.com/repos/gluyas/niwa", "Date": "2018-01-04T09:17:27Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isValid((x + ((ig.getLength()) / 2)), (y + (ig.getHeight())))) { if ((cloudlvlmap[(x + ((ig.getLength()) / 2))]) > (y + (ig.getHeight()))) { spotfound = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6617/buggy-version/core.src.map.WorldGen.MapGen.java", "BodyUseAPI": ["map.WorldGen.IslandGen.getLength()", "map.WorldGen.IslandGen.getHeight()"], "Fixed commit": "1662470935132e2e9cc4bcd6e1c0ed5ceb1257d8", "Url": "https://api.github.com/repos/CuseCose/Aeronef", "Date": "2018-10-09T00:29:14Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isValid(x, y)) { if ((map[x][y]) == 0) { if (((x % 2) == 0) && ((y % 2) == 0)) { if ((java.lang.Math.random()) < 0.05) { addWaterClump(x, y, (((int) ((java.lang.Math.random()) * 8)) + 3)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6617/buggy-version/core.src.map.WorldGen.TerrainGen.java", "BodyUseAPI": ["map.WorldGen.TerrainGen.addWaterClump(int,int,int)"], "Fixed commit": "1662470935132e2e9cc4bcd6e1c0ed5ceb1257d8", "Url": "https://api.github.com/repos/CuseCose/Aeronef", "Date": "2018-10-09T00:29:14Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i != 0) { if ((matrix[(i - 1)][j]) == (Tuple.IMPOSSIBLE)) { matrix[i][j] = matrix[i][j]; }else if (matrix[i][j].isImpossible()) { matrix[i][j] = matrix[(i - 1)][j]; }else if ((matrix[(i - 1)][j].total()) < (matrix[i][j].total())) { matrix[i][j] = matrix[(i - 1)][j]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2265/buggy-version/Homework07.DynamicChangeMaker.java", "BodyUseAPI": ["matrix[i][j].isImpossible()", "matrix[(i - 1)][j].total()", "matrix[i][j].total()"], "Fixed commit": "6e1127174d1e18b16f7b335fe3e6d9046e609e98", "Url": "https://api.github.com/repos/rventur/CMSI_186_Projects", "Date": "2018-05-03T21:30:14Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i != 0) { if ((matrix[(i - 1)][j]) == (Tuple.IMPOSSIBLE)) { matrix[i][j] = matrix[i][j]; }else if (matrix[i][j].isImpossible()) { matrix[i][j] = matrix[(i - 1)][j]; }else if ((matrix[(i - 1)][j].total()) < (matrix[i][j].total())) { matrix[i][j] = matrix[(i - 1)][j]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2265/buggy-version/Homework07.DynamicChangeMaker.java", "BodyUseAPI": ["matrix[(i - 1)][j].total()", "matrix[i][j].total()", "matrix[i][j].isImpossible()"], "Fixed commit": "6e1127174d1e18b16f7b335fe3e6d9046e609e98", "Url": "https://api.github.com/repos/rventur/CMSI_186_Projects", "Date": "2018-05-03T21:30:14Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (groups != null) { for (int j = 0; j < (groups.length); j++) { if (((groups[j]) != null) && (groups[j].equals(accessString))) { edu.ucsb.nceas.metacat.util.AuthUtil.logMetacat.debug(((\"AuthUtil.onAccessList - user \" + username) + \" has a grouup which is in the access list.\")); return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2750/buggy-version/src.edu.ucsb.nceas.metacat.util.AuthUtil.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "e5a4692c2a826e99526df37debc835d50554d7b3", "Url": "https://api.github.com/repos/NCEAS/metacat", "Date": "2018-02-02T20:23:26Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jobName.length()) >= 100) { jobName = jobName.substring(0, 99); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2864/buggy-version/idapi-wrapper.src.com.actuate.aces.idapi.JobScheduler.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "c5084bda4c2d7ad9d13ea42617d1310fe8077a91", "Url": "https://api.github.com/repos/standart0815/idapi-wrapper", "Date": "2018-03-01T11:40:05Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (groupLevel == 0) { retVal = arabicHundreds.get(hundreds); }else { retVal = arabicAppendedTwos.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4817/buggy-version/src.com.company.ArabicTools.java", "BodyUseAPI": [], "Fixed commit": "cc085e4a1535998a1996717bdf63334d04093159", "Url": "https://api.github.com/repos/nxme/NumberToArabicWords", "Date": "2018-03-14T10:44:49Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eyeseetea.malariacare.data.database.model.SurveyDB.getMainScore()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (scoreDB != null) { score = scoreDB.getScore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7906/buggy-version/app.src.eyeseetea.java.org.eyeseetea.malariacare.strategies.AssessmentUnsentAdapterCosmeticsStrategy.java", "BodyUseAPI": ["org.eyeseetea.malariacare.data.database.model.ScoreDB.getScore()"], "Fixed commit": "37a1275cca29355f928b7d16f439cf45642e92d3", "Url": "https://api.github.com/repos/EyeSeeTea/malariapp", "Date": "2018-09-19T10:05:32Z"},
{"Line": "=>825", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (calc1 == (-0.0)) { calc1 = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4288/buggy-version/app.src.main.java.com.example.jorjborj.ordrs.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a2ee92e7094f983b2cafaa22f67b09689d1a80f2", "Url": "https://api.github.com/repos/Batatos/Ordrs", "Date": "2018-05-24T14:09:41Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (sboTerm != null) { correct = (sboTerm.length()) == 11; correct &= sboTerm.startsWith(org.sbml.jsbml.SBO.prefix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2509/buggy-version/core.src.org.sbml.jsbml.SBO.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "52812eb8d1996fab23b0bc6f410c8570f592380f", "Url": "https://api.github.com/repos/sbmlteam/jsbml", "Date": "2018-02-13T16:07:05Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (audioPlayer == null) { throw new exceptions.StockTickerConnectionError(\"Not valid Stock Ticker\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9048/buggy-version/src.StockQuoteAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "102cd6ac2a4f072ec295e9df295fedb6c66ded72", "Url": "https://api.github.com/repos/se2832/ay18-lab-07-chris-ben-1", "Date": "2018-04-24T16:40:32Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.gigaspaces.lrmi.LRMIInvocationContext.getEndpointLogicalVersion().greaterOrEquals(PlatformLogicalVersion.v14_0_0))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/463/buggy-version/xap-core.xap-datagrid.src.main.java.com.gigaspaces.internal.cluster.node.impl.packets.BatchReplicatedDataPacket.java", "BodyUseAPI": [], "Fixed commit": "6ab8b899dedc042df8c71be3add9813a39ebdd68", "Url": "https://api.github.com/repos/xap/xap", "Date": "2018-09-09T07:55:43Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(distance)) < 1.0E-5) { return yA; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4419/buggy-version/src.clearcontrol.core.math.interpolation.LinearInterpolationTable.java", "BodyUseAPI": [], "Fixed commit": "76654514c69280bb9aada45213bb9d0864377682", "Url": "https://api.github.com/repos/ClearControl/clearcontrol", "Date": "2018-03-17T19:36:27Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { addMethodProxy(new com.lody.virtual.client.hook.base.StaticMethodProxy(\"setRequestedOrientation\") { @java.lang.Override public java.lang.Object call(java.lang.Object who, java.lang.reflect.Method method, java.lang.Object... args) throws java.lang.Throwable { return null; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7712/buggy-version/VirtualApp.lib.src.main.java.com.lody.virtual.client.hook.proxies.am.ActivityManagerStub.java", "BodyUseAPI": [], "Fixed commit": "76e347db8cf4e62fe0a7f0a4e8a2263bfd360f0b", "Url": "https://api.github.com/repos/darkskygit/VirtualApp", "Date": "2018-02-21T02:46:05Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.afide.model.SimpleModel<T>.getBytable(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (null == value) { logger.warn(\"Invalid transaction value, bytable value is null\"); return false; }else { if (logger.isInfoEnabled()) { logger.info(\"Validated tx value {}\", value.toPrettyString()); } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6396/buggy-version/applications.dummy.src.main.java.com.github.afide.model.SimpleModel.java", "BodyUseAPI": ["com.github.jtmsp.merkletree.byteable.IByteable.toPrettyString()", "com.github.afide.model.SimpleModel.info(java.lang.String,value.toPrettyString())"], "Fixed commit": "bbe6ffde511f1ae6a6c1cb56cb9800be576e1fb2", "Url": "https://api.github.com/repos/afide/capraia", "Date": "2017-03-22T02:12:10Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logger.isInfoEnabled()) { logger.info(\"New tree is now {}\", tree.toPrettyString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6396/buggy-version/applications.dummy.src.main.java.com.github.afide.model.SimpleModel.java", "BodyUseAPI": ["com.github.afide.model.SimpleModel.info(java.lang.String,tree.toPrettyString())"], "Fixed commit": "bbe6ffde511f1ae6a6c1cb56cb9800be576e1fb2", "Url": "https://api.github.com/repos/afide/capraia", "Date": "2017-03-22T02:12:10Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (error != null) modelMap.addAttribute(\"error\", error);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3219/buggy-version/uts.loan.src.main.java.com.loan.uts.controller.AdminController.java", "BodyUseAPI": ["org.springframework.ui.ModelMap.addAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "83b56b7e9a3f2180184862260e8e22f7f3364b00", "Url": "https://api.github.com/repos/jianshunjiang/SEP", "Date": "2018-10-14T11:14:44Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.stangassinger.mysync.MainActivity.valid_hostname.length()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/95/buggy-version/app.src.main.java.com.stangassinger.mysync.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "634085a1e1b45d35b892819a6235d3f6f026a29a", "Url": "https://api.github.com/repos/stangassinger/MySync", "Date": "2018-06-03T15:01:08Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((MxCompiler.IR.IRnodes.instructions.branch) (instr)).jumpto.getHead()) != null) instr.liveOut.addAll(((MxCompiler.IR.IRnodes.instructions.branch) (instr)).jumpto.getHead().liveIn);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9654/buggy-version/src.MxCompiler.BackEnd.livenessAnalysis.java", "BodyUseAPI": ["((MxCompiler.IR.IRnodes.instructions.branch) (instr)).jumpto.getHead()", "instr.liveOut.addAll(((MxCompiler.IR.IRnodes.instructions.branch) (instr)).jumpto.getHead().liveIn)"], "Fixed commit": "4a2edb2ed9cd0dbb79c53975444e3c1f8440952a", "Url": "https://api.github.com/repos/Willyoung2017/MyCompiler", "Date": "2018-06-03T13:06:02Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((MxCompiler.IR.IRnodes.instructions.branch) (instr)).jumpother.getHead()) != null) instr.liveOut.addAll(((MxCompiler.IR.IRnodes.instructions.branch) (instr)).jumpother.getHead().liveIn);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9654/buggy-version/src.MxCompiler.BackEnd.livenessAnalysis.java", "BodyUseAPI": ["instr.liveOut.addAll(((MxCompiler.IR.IRnodes.instructions.branch) (instr)).jumpother.getHead().liveIn)", "((MxCompiler.IR.IRnodes.instructions.branch) (instr)).jumpother.getHead()"], "Fixed commit": "4a2edb2ed9cd0dbb79c53975444e3c1f8440952a", "Url": "https://api.github.com/repos/Willyoung2017/MyCompiler", "Date": "2018-06-03T13:06:02Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((MxCompiler.IR.IRnodes.instructions.jump) (instr)).jumpto.getHead()) != null) instr.liveOut.addAll(((MxCompiler.IR.IRnodes.instructions.jump) (instr)).jumpto.getHead().liveIn);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9654/buggy-version/src.MxCompiler.BackEnd.livenessAnalysis.java", "BodyUseAPI": ["instr.liveOut.addAll(((MxCompiler.IR.IRnodes.instructions.jump) (instr)).jumpto.getHead().liveIn)", "((MxCompiler.IR.IRnodes.instructions.jump) (instr)).jumpto.getHead()"], "Fixed commit": "4a2edb2ed9cd0dbb79c53975444e3c1f8440952a", "Url": "https://api.github.com/repos/Willyoung2017/MyCompiler", "Date": "2018-06-03T13:06:02Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((selectedDeliveryMethods != null) && (!(selectedDeliveryMethods.equals(\"\")))) { storeValue(pregnancyDeliveryMethodKey1, pregnancyDeliveryMethodDisplayLabel, selectedDeliveryMethods.substring(0, ((selectedDeliveryMethods.length()) - 2)), (j + 1)); }else { storeValue(pregnancyDeliveryMethodKey1, pregnancyDeliveryMethodDisplayLabel, selectedDeliveryMethods, (j + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6870/buggy-version/SCEPTREArisgUIDataValidater.src.com.ibm.validator.command.IterateSceptrePatientPregnancy.java", "BodyUseAPI": ["com.ibm.validator.command.IterateSceptrePatientPregnancy.storeValue(java.lang.String,java.lang.String,java.lang.String,int)", "com.ibm.validator.command.IterateSceptrePatientPregnancy.storeValue(java.lang.String,java.lang.String,java.lang.String,int)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "c5a65eed37b231eee468fe59eacb1a3104037d3e", "Url": "https://api.github.com/repos/subhasis-ibm/SCEPTREArisgUIDataValidater", "Date": "2018-10-30T16:14:39Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (money.contains(c1)) { money.remove(c1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4501/buggy-version/src.coinpurse.Purse.java", "BodyUseAPI": ["java.util.List<coinpurse.Valuable>.remove(coinpurse.Valuable)"], "Fixed commit": "dde289fa6a33bed8f2c4c165386189501dfa7fa4", "Url": "https://api.github.com/repos/OOP2018/coinpurse-WorawatCh", "Date": "2018-01-31T16:04:16Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amount < 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4501/buggy-version/src.coinpurse.Purse.java", "BodyUseAPI": [], "Fixed commit": "dde289fa6a33bed8f2c4c165386189501dfa7fa4", "Url": "https://api.github.com/repos/OOP2018/coinpurse-WorawatCh", "Date": "2018-01-31T16:04:16Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bbuf) == (-1)) { throw new java.io.IOException(\"Could not read next bit. End of stream reached\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6078/buggy-version/src.main.java.jj2000.j2k.codestream.reader.PktHeaderBitReader.java", "BodyUseAPI": [], "Fixed commit": "1d77d420d85c661bdc578103f6ba2b6f3fb109bc", "Url": "https://api.github.com/repos/clockard/jai-imageio-jpeg2000", "Date": "2018-02-16T19:50:02Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getSystemService(Context.BLUETOOTH_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (bluetoothManager != null) { bluetoothAdapter = bluetoothManager.getAdapter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2858/buggy-version/app.src.main.java.com.linka.lockapp.aos.module.pages.CircleView.java", "BodyUseAPI": ["android.bluetooth.BluetoothManager.getAdapter()"], "Fixed commit": "5a3266ca74f068ea87fde5cf779edd923827f3bc", "Url": "https://api.github.com/repos/gkurghinyan/LINKA-android-app", "Date": "2018-08-08T15:33:54Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((drawable instanceof android.graphics.drawable.InsetDrawable) && ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT))) { android.graphics.drawable.InsetDrawable insetDrawable = ((android.graphics.drawable.InsetDrawable) (drawable)); mGradientDrawable = br.com.simplepass.loading_button_lib.customViews.CircularProgressButton.loadGradientDrawable(insetDrawable.getDrawable()); if (mGradientDrawable != null) { mGradientDrawable.backGroundDrawable = insetDrawable; } }else if (drawable instanceof android.graphics.drawable.StateListDrawable) { android.graphics.drawable.StateListDrawable stateListDrawable = ((android.graphics.drawable.StateListDrawable) (drawable)); stateListDrawable.setState(new int[]{ android.R.attr.state_enabled, android.R.attr.state_active, -(android.R.attr.state_pressed) }); android.graphics.drawable.Drawable current = stateListDrawable.getCurrent(); mGradientDrawable = br.com.simplepass.loading_button_lib.customViews.CircularProgressButton.loadGradientDrawable(current); }else if (((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) && (drawable instanceof android.graphics.drawable.RippleDrawable)) { android.graphics.drawable.RippleDrawable drawable1 = ((android.graphics.drawable.RippleDrawable) (drawable)); android.graphics.drawable.Drawable mask = drawable1.findDrawableByLayerId(android.R.id.mask); if (mask != null) { mGradientDrawable = br.com.simplepass.loading_button_lib.customViews.CircularProgressButton.loadGradientDrawable(mask); }else { mGradientDrawable = br.com.simplepass.loading_button_lib.customViews.CircularProgressButton.loadGradientDrawable(drawable1.getDrawable(0)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4754/buggy-version/loading-button-android.src.main.java.br.com.simplepass.loading_button_lib.customViews.CircularProgressButton.java", "BodyUseAPI": [], "Fixed commit": "8a5eb734fed25a171c51f8c7468690306124c5cd", "Url": "https://api.github.com/repos/rolandoamarillo/LoadingButtonAndroid", "Date": "2018-05-23T19:37:21Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.commerce.price.list.web.internal.display.context.CommercePriceListDisplayContext.getCommercePriceListId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (commercePriceListId <= 0) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6110/buggy-version/commerce-price-list-web.src.main.java.com.liferay.commerce.price.list.web.internal.display.context.CommercePriceListDisplayContext.java", "BodyUseAPI": [], "Fixed commit": "b226fde1ad8cecfcdb8d7d4a2b726ae1f6a9a3d5", "Url": "https://api.github.com/repos/petershin/com-liferay-commerce", "Date": "2018-07-12T13:21:17Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((innerClassName.parent) != null) && ((innerClassName.parent.type) == (Name.Type.METHOD))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8237/buggy-version/src.main.java.com.mikesamuel.cil.ast.meta.TypeNameResolver.java", "BodyUseAPI": [], "Fixed commit": "97571a2702fc9a29448348d57b640f394cb0f8df", "Url": "https://api.github.com/repos/mikesamuel/code-interlingua", "Date": "2018-01-03T03:44:57Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberOfOrderedLists > 0) { orderListElement = (stack.peek().getOrderingNumber()) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4354/buggy-version/src.main.java.be.quodlibet.boxable.Paragraph.java", "BodyUseAPI": [], "Fixed commit": "39c6f852bbcbca983fdbb9985f01a1209104bc4c", "Url": "https://api.github.com/repos/dhorions/boxable", "Date": "2016-10-28T12:00:44Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (identifiers.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1666/buggy-version/app.src.main.java.be.ugent.zeus.hydra.data.database.feed.CardDao.java", "BodyUseAPI": [], "Fixed commit": "483a9c7b29ee15aa3b0a324bf71cbfbda00e6a6e", "Url": "https://api.github.com/repos/ZeusWPI/hydra-android", "Date": "2018-01-07T17:31:19Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (time.isBillable()) { billableHours.add(time.getHours()); }else nonBillableHours.add(time.getHours());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1212/buggy-version/src.main.java.io.notnot.timespectorbot.slack.SlackBot.java", "BodyUseAPI": ["java.util.ArrayList.add(time.getHours())", "io.notnot.timespectorbot.Time.getHours()", "java.util.ArrayList.add(time.getHours())", "io.notnot.timespectorbot.Time.getHours()"], "Fixed commit": "dd46f464ab1e2af5d5bfdaa8adc133566d5c0267", "Url": "https://api.github.com/repos/notnotse/timespector-bot", "Date": "2018-06-12T12:46:09Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((ar.getDoneMember()) != null) && ((ar.getDoneOwner()) != null)) { if ((ar.getDoneMember()) && (ar.getDoneOwner())) { ar.setStatus(\"\u8a8d\u990a\u6210\u529f\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/178/buggy-version/src.main.java.org.iii.ee100.animour.halfway.service.AcceptRecordService.java", "BodyUseAPI": ["org.iii.ee100.animour.halfway.entity.AcceptRecord.getDoneMember()", "org.iii.ee100.animour.halfway.entity.AcceptRecord.getDoneOwner()", "org.iii.ee100.animour.halfway.entity.AcceptRecord.setStatus(java.lang.String)"], "Fixed commit": "e2fa73d4ebc1866c842f16ea933dd32b1acd9140", "Url": "https://api.github.com/repos/jakarta99/iii-ee100", "Date": "2018-05-30T01:57:44Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) { showHeaderNotification(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6956/buggy-version/app.src.main.java.com.crazyhitty.chdev.ks.predator.ui.notifications.PostNotification.java", "BodyUseAPI": [], "Fixed commit": "bf37ead38da04a170ec8dbb987133587d5158a0b", "Url": "https://api.github.com/repos/crazyhitty/Capstone-Project", "Date": "2018-01-01T14:53:47Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (distanceToTarget < 150) { setFire(1); }else { setFire(((de.metro.robocode.MaiLightAsa.myEnergy) / distanceToTarget)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8330/buggy-version/src.main.java.de.metro.robocode.MaiLightAsa.java", "BodyUseAPI": ["de.metro.robocode.MaiLightAsa.setFire(double)"], "Fixed commit": "3eabfa6ce24aa8bd81f1562f3ba834dc4a5b26b0", "Url": "https://api.github.com/repos/metro-nom/robocode18buk07", "Date": "2018-01-20T11:07:49Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerRespawnEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (CMD.Flash.contains(player.getName())) { org.bukkit.Bukkit.getServer().getScheduler().scheduleSyncDelayedTask(me.BLitZzMc.SuperHeroes.Main.getPlugin(), () -> { player.addPotionEffect(new org.bukkit.potion.PotionEffect(PotionEffectType.SPEED, Integer.MAX_VALUE, 2)); player.addPotionEffect(new org.bukkit.potion.PotionEffect(PotionEffectType.INCREASE_DAMAGE, Integer.MAX_VALUE, 1)); player.addPotionEffect(new org.bukkit.potion.PotionEffect(PotionEffectType.REGENERATION, Integer.MAX_VALUE, 0)); }, 10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3337/buggy-version/src.me.BLitZzMc.SuperHeroes.listeners.PlayerRespawn.java", "BodyUseAPI": ["org.bukkit.entity.Player.addPotionEffect(org.bukkit.potion.PotionEffect)", "org.bukkit.Bukkit.getServer().getScheduler().scheduleSyncDelayedTask(me.BLitZzMc.SuperHeroes.Main.getPlugin(),() -> {\n    player.addPotionEffect(new org.bukkit.potion.PotionEffect(PotionEffectType.SPEED, Integer.MAX_VALUE, 2));\n    player.addPotionEffect(new org.bukkit.potion.PotionEffect(PotionEffectType.INCREASE_DAMAGE, Integer.MAX_VALUE, 1));\n    player.addPotionEffect(new org.bukkit.potion.PotionEffect(PotionEffectType.REGENERATION, Integer.MAX_VALUE, 0));\n},int)", "org.bukkit.entity.Player.addPotionEffect(org.bukkit.potion.PotionEffect)", "org.bukkit.entity.Player.addPotionEffect(org.bukkit.potion.PotionEffect)"], "Fixed commit": "59f2b8d66523384af56ff8ee4bd7c866bd0bd1fa", "Url": "https://api.github.com/repos/BLitZzOnMinecraft/SuperHeros", "Date": "2018-05-11T19:11:55Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerRespawnEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (CMD.Superman.contains(player.getName())) { org.bukkit.Bukkit.getServer().getScheduler().scheduleSyncDelayedTask(me.BLitZzMc.SuperHeroes.Main.getPlugin(), () -> { player.addPotionEffect(new org.bukkit.potion.PotionEffect(PotionEffectType.SPEED, Integer.MAX_VALUE, 0)); player.addPotionEffect(new org.bukkit.potion.PotionEffect(PotionEffectType.INCREASE_DAMAGE, Integer.MAX_VALUE, 2)); player.addPotionEffect(new org.bukkit.potion.PotionEffect(PotionEffectType.DAMAGE_RESISTANCE, Integer.MAX_VALUE, 0)); player.addPotionEffect(new org.bukkit.potion.PotionEffect(PotionEffectType.REGENERATION, Integer.MAX_VALUE, 0)); }, 10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3337/buggy-version/src.me.BLitZzMc.SuperHeroes.listeners.PlayerRespawn.java", "BodyUseAPI": ["org.bukkit.Bukkit.getServer().getScheduler().scheduleSyncDelayedTask(me.BLitZzMc.SuperHeroes.Main.getPlugin(),() -> {\n    player.addPotionEffect(new org.bukkit.potion.PotionEffect(PotionEffectType.SPEED, Integer.MAX_VALUE, 0));\n    player.addPotionEffect(new org.bukkit.potion.PotionEffect(PotionEffectType.INCREASE_DAMAGE, Integer.MAX_VALUE, 2));\n    player.addPotionEffect(new org.bukkit.potion.PotionEffect(PotionEffectType.DAMAGE_RESISTANCE, Integer.MAX_VALUE, 0));\n    player.addPotionEffect(new org.bukkit.potion.PotionEffect(PotionEffectType.REGENERATION, Integer.MAX_VALUE, 0));\n},int)", "org.bukkit.entity.Player.addPotionEffect(org.bukkit.potion.PotionEffect)", "org.bukkit.entity.Player.addPotionEffect(org.bukkit.potion.PotionEffect)", "org.bukkit.entity.Player.addPotionEffect(org.bukkit.potion.PotionEffect)", "org.bukkit.entity.Player.addPotionEffect(org.bukkit.potion.PotionEffect)"], "Fixed commit": "59f2b8d66523384af56ff8ee4bd7c866bd0bd1fa", "Url": "https://api.github.com/repos/BLitZzOnMinecraft/SuperHeros", "Date": "2018-05-11T19:11:55Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Double.valueOf(barWidth.replace(\"%\", \"\"))) > 100) barWidth = \"100%\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7665/buggy-version/src.main.java.Jowil.Reports.Report4.java", "BodyUseAPI": [], "Fixed commit": "da549b1b90d04582a60f3633e4177af813079e01", "Url": "https://api.github.com/repos/youssefhossam95/Jowil-Stats", "Date": "2018-09-22T14:10:31Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.round(java.lang.Double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rectWidth > 100) rectWidth = 100;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7665/buggy-version/src.main.java.Jowil.Reports.Report4.java", "BodyUseAPI": [], "Fixed commit": "da549b1b90d04582a60f3633e4177af813079e01", "Url": "https://api.github.com/repos/youssefhossam95/Jowil-Stats", "Date": "2018-09-22T14:10:31Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.common.cklibrary.utils.JsonUtil.json2Obj(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((activitiesBean.getData()) == null) { errorMsg(getString(R.string.serverReturnsDataError), 0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6106/buggy-version/SillyChildClient.app.src.main.java.com.sillykid.app.main.ActivitiesFragment.java", "BodyUseAPI": [], "Fixed commit": "6b195724ea0537a399d16e8ab0d5bbfa1e8692f3", "Url": "https://api.github.com/repos/921668753/SillyChildClient-Android", "Date": "2018-08-02T11:47:04Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((specificationsBouncedDialog) != null) { specificationsBouncedDialog.dismissLoadingDialog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6106/buggy-version/SillyChildClient.app.src.main.java.com.sillykid.app.homepage.goodslist.goodsdetails.GoodsDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "6b195724ea0537a399d16e8ab0d5bbfa1e8692f3", "Url": "https://api.github.com/repos/921668753/SillyChildClient-Android", "Date": "2018-08-02T11:47:04Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getFunctionName().equalsIgnoreCase(\"batch_norm2d_test\")) { return org.apache.sysml.hops.OptimizerUtils.estimateSizeExactSparsity(getOutputs().get(0).getDim1(), getOutputs().get(0).getDim2(), 1.0); }else if (getFunctionName().equalsIgnoreCase(\"batch_norm2d_backward\")) { return ((org.apache.sysml.hops.OptimizerUtils.estimateSizeExactSparsity(getOutputs().get(0).getDim1(), getOutputs().get(0).getDim2(), 1.0)) + (org.apache.sysml.hops.OptimizerUtils.estimateSizeExactSparsity(getOutputs().get(1).getDim1(), getOutputs().get(1).getDim2(), 1.0))) + (org.apache.sysml.hops.OptimizerUtils.estimateSizeExactSparsity(getOutputs().get(2).getDim1(), getOutputs().get(2).getDim2(), 1.0)); }else if (getFunctionName().equalsIgnoreCase(\"svd\")) { long outputU = org.apache.sysml.hops.OptimizerUtils.estimateSizeExactSparsity(getOutputs().get(0).getDim1(), getOutputs().get(0).getDim2(), 1.0); long outputSigma = org.apache.sysml.hops.OptimizerUtils.estimateSizeExactSparsity(getOutputs().get(1).getDim1(), getOutputs().get(1).getDim2(), 1.0); long outputV = org.apache.sysml.hops.OptimizerUtils.estimateSizeExactSparsity(getOutputs().get(2).getDim1(), getOutputs().get(2).getDim2(), 1.0); return (outputU + outputSigma) + outputV; }else throw new java.lang.RuntimeException(\"Invalid call of computeOutputMemEstimate in FunctionOp.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1452/buggy-version/src.main.java.org.apache.sysml.hops.FunctionOp.java", "BodyUseAPI": [], "Fixed commit": "8ea2dc5bd340de177bd7a85eb2ec6af9d7a7036c", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2018-07-12T18:34:07Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.tul.production.oms.utility.PropertyFileUtility.getProperty(\"prod.oms.htmlCode.tempFile.delete\").equalsIgnoreCase(\"true\")) { com.tul.production.oms.utility.CommonsUtilities.deleteFile(new java.io.File(com.tul.production.oms.utility.CommonsUtilities.getPreferredURL(URLGeneratorType.DESKTOP_GENERATED, (fileNameWithoutExt + \".html\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1229/buggy-version/src.main.java.com.tul.production.oms.mail.MailResource.java", "BodyUseAPI": [], "Fixed commit": "40918011ac24c1505e439b1e355cee797474c7a6", "Url": "https://api.github.com/repos/gitpothanaboyina/oms-production", "Date": "2018-06-19T02:47:58Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (json.has(\"zone-checkin\")) { checkin = json.getString(\"zone-checkin\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3888/buggy-version/FlyBSCA.src.main.java.net.bertware.flybsca.api.Flight.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "44bf4a36702d1f7260ae9b12498abd7bb8f18cd8", "Url": "https://api.github.com/repos/Bertware/FlyBSCA", "Date": "2018-06-18T10:46:28Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (score != \"null\") averageRating = java.lang.Double.valueOf(score).intValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4346/buggy-version/app.src.main.java.com.example.rishabh.myapplication.Connect.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)", "java.lang.Double.intValue()"], "Fixed commit": "7879dd4eac64cb34efb216cc6278379c2aff0c18", "Url": "https://api.github.com/repos/Rishabh3095/RatingApplication", "Date": "2018-04-11T06:54:28Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["monster.Monster.getStatChanges()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((statChanges.size()) == 0) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8448/buggy-version/src.monster.action.trigger.StatChangeTrigger.java", "BodyUseAPI": [], "Fixed commit": "8948ee26e72924e9a1882563c8e4270ac47823d6", "Url": "https://api.github.com/repos/dhu92/npc", "Date": "2018-09-23T22:32:00Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(filtered.contains(m))) { filtered.add(m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8448/buggy-version/src.monster.action.trigger.Trigger.java", "BodyUseAPI": ["java.util.List<monster.Monster>.add(monster.Monster)"], "Fixed commit": "8948ee26e72924e9a1882563c8e4270ac47823d6", "Url": "https://api.github.com/repos/dhu92/npc", "Date": "2018-09-23T22:32:00Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.immregistries.dqa.vxu.DqaPatient.getResponsibleParty()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((guardian.getAddress()) != null) { if (this.common.isEmpty(guardian.getAddress().getStateCode())) { issues.add(Detection.PatientGuardianAddressStateIsMissing.build(target)); } if (this.common.isEmpty(guardian.getAddress().getCity())) { issues.add(Detection.PatientGuardianAddressCityIsMissing.build(target)); } if (this.common.isEmpty(guardian.getAddress().getZip())) { issues.add(Detection.PatientGuardianAddressZipIsMissing.build(target)); } }else { issues.add(Detection.PatientGuardianAddressIsMissing.build(target)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8216/buggy-version/src.main.java.org.immregistries.dqa.validator.engine.rules.patient.PatientResponsiblePartyIsProperlyFormed.java", "BodyUseAPI": ["this.common.isEmpty(guardian.getAddress().getCity())", "this.common.isEmpty(guardian.getAddress().getStateCode())", "org.immregistries.dqa.vxu.DqaNextOfKin.getAddress()", "org.immregistries.dqa.vxu.DqaNextOfKin.getAddress()", "this.common.isEmpty(guardian.getAddress().getZip())", "org.immregistries.dqa.vxu.DqaNextOfKin.getAddress()", "guardian.getAddress().getStateCode()", "guardian.getAddress().getCity()", "guardian.getAddress().getZip()"], "Fixed commit": "12e38b224e1abce40479d8777c2216e2ac62d85e", "Url": "https://api.github.com/repos/immregistries/mqe-validator", "Date": "2018-04-18T17:51:12Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((addr.getStreet()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8216/buggy-version/src.main.java.org.immregistries.dqa.validator.address.AddressCleanserSmartyStreets.java", "BodyUseAPI": [], "Fixed commit": "12e38b224e1abce40479d8777c2216e2ac62d85e", "Url": "https://api.github.com/repos/immregistries/mqe-validator", "Date": "2018-04-18T17:51:12Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.max(int,int)", "java.lang.Math.max(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((b1 == 0) && (b2 == 0)) continue; else if (b1 == 0) sum += a2 / b2; else if (b2 == 0) sum += a1 / b1; else sum += (a1 / b1) + (a2 / b2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4449/buggy-version/InformationLoss.java", "BodyUseAPI": [], "Fixed commit": "314d2943b38c322dfa7b1a9443a081f4ae0013ca", "Url": "https://api.github.com/repos/LordHelmchen324/Trajectory_Anonymisation", "Date": "2018-05-08T10:09:16Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.get_http_status_code()) == 206) { return this.jsonToArray(temp, ip_address_server); }else { return this.foods; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3781/buggy-version/app.src.main.java.com.example.stn_com_01.orderfoodapp.API.RequestDataFoodByName.java", "BodyUseAPI": [], "Fixed commit": "9155d159675b95f8a2ea242fdc578fb1f67a7047", "Url": "https://api.github.com/repos/takeruadelbert/restaurant-android", "Date": "2018-09-27T07:52:17Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (itemClicked == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/891/buggy-version/src.main.java.com.essentialitems.command.KitCommand.java", "BodyUseAPI": [], "Fixed commit": "cfdb7852479b4c6ffcc160dc90f1390664a208f4", "Url": "https://api.github.com/repos/ManyPandas/manypandas.github.io", "Date": "2018-08-07T12:56:25Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((word1.length()) == (word2.length())) { for (int i = 0; i < (word1.length()); i++) { if (((word2.indexOf(word1.charAt(i))) < 0) || ((word1.indexOf(word2.charAt(i))) < 0)) { return false; } } java.lang.String shybal = \"shybal\"; return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9475/buggy-version/AnagramChecker.src.AnagramChecker.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.length()", "java.lang.String.indexOf(char)", "java.lang.String.indexOf(char)", "java.lang.String.charAt(int)"], "Fixed commit": "85f773785e8dfd14bbbf9051ba9f14365d8a1844", "Url": "https://api.github.com/repos/shybal10/Assignments", "Date": "2018-02-26T07:30:59Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((expiresInSeconds) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3014/buggy-version/src.main.java.com.google.api.client.auth.oauth2.TokenResponse.java", "BodyUseAPI": [], "Fixed commit": "d919d20acfe4848f462a8d99f8a8d372358c105c", "Url": "https://api.github.com/repos/jenkinsci/oic-auth-plugin", "Date": "2018-03-13T17:48:30Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (error == null) { setBackground(android.support.v4.content.ContextCompat.getDrawable(getContext(), R.drawable.shape_text_input_edittext)); }else { setBackground(android.support.v4.content.ContextCompat.getDrawable(getContext(), R.drawable.shape_text_input_edittext_error)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8286/buggy-version/design.src.main.java.com.cartenz.design.TextLayout.CustomTextInputEditText.java", "BodyUseAPI": [], "Fixed commit": "c3601c9aa33f2e03c73d3b51682af6c2f47122be", "Url": "https://api.github.com/repos/pratamacartenz/core", "Date": "2018-07-10T03:49:01Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ro.engineering.comparator.matcher.JsonArrayMatcher.getUseCase(element.asText())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (useCase.equals(UseCase.MATCH)) { com.fasterxml.jackson.databind.JsonNode actElement = actual.get(j); try { new ro.engineering.comparator.matcher.JsonMatcher(element, actElement, compareModes).matches(); } catch (ro.engineering.comparator.matcher.MatcherException e) { if (compareModes.contains(CompareMode.JSON_ARRAY_STRICT_ORDER)) { throw new ro.engineering.comparator.matcher.MatcherException(java.lang.String.format(\"JSON ARRAY elements differ at position %s\", (i + 1))); } continue; } found = true; matchedPositions.add(j); break; }else { com.fasterxml.jackson.databind.JsonNode actElement = actual.get(j); try { new ro.engineering.comparator.matcher.JsonMatcher(element, actElement, compareModes).matches(); } catch (ro.engineering.comparator.matcher.MatcherException e) { found = true; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6919/buggy-version/src.main.java.ro.engineering.comparator.matcher.JsonArrayMatcher.java", "BodyUseAPI": [], "Fixed commit": "1e8a00722239c2565b16d925fe8828e471189101", "Url": "https://api.github.com/repos/fslev/json-compare", "Date": "2018-06-13T13:07:13Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (env.containsKey(org.aksw.simba.squirrel.components.WorkerComponent.MIN_DELAY_KEY)) { try { robotsmanager.setDefaultMinWaitingTime(java.lang.Long.parseLong(env.get(org.aksw.simba.squirrel.components.WorkerComponent.MIN_DELAY_KEY))); } catch (java.lang.Exception e) { org.aksw.simba.squirrel.components.WorkerComponent.LOGGER.error(((\"Couldn't parse the value of the \" + (org.aksw.simba.squirrel.components.WorkerComponent.MIN_DELAY_KEY)) + \" environmental variable.\"), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7565/buggy-version/src.main.java.org.aksw.simba.squirrel.components.WorkerComponent.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "org.aksw.simba.squirrel.robots.RobotsManagerImpl.setDefaultMinWaitingTime(long)", "java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "4e98d2214ddaa7139cb231a50ed7967df37e21d9", "Url": "https://api.github.com/repos/dice-group/Squirrel", "Date": "2018-01-24T09:34:32Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.apereo.cas.ticket.Ticket>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (found == null) { org.apereo.cas.ticket.registry.LOGGER.debug(\"Ticket [{}] could not be found\", encTicketId); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3112/buggy-version/core.cas-server-core-tickets-api.src.main.java.org.apereo.cas.ticket.registry.AbstractMapBasedTicketRegistry.java", "BodyUseAPI": [], "Fixed commit": "0da42f9cf5a2edfad53c369b87c75e2cd86b156c", "Url": "https://api.github.com/repos/fogbeam/cas_mirror", "Date": "2018-04-19T14:01:14Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((transaction.date) != 0) && ((transaction.block) != null)) && ((java.lang.Math.abs(((transaction.date) - (transaction.data.date)))) > 864000)) transaction.data.date = transaction.date;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7357/buggy-version/app.src.main.java.tech.nextcash.nextcashwallet.Wallet.java", "BodyUseAPI": [], "Fixed commit": "c43bf1d0b5be572d68a88515cd7be876d3792ecd", "Url": "https://api.github.com/repos/nextcashtech/android_wallet", "Date": "2018-10-26T20:37:16Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jadx.core.dex.trycatch.ExceptionHandler.getHandlerBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (handlerBlock != null) { jadx.core.dex.trycatch.SplitterBlockAttr splitter = handlerBlock.get(AType.SPLITTER_BLOCK); if (splitter != null) { jadx.core.dex.nodes.BlockNode block = splitter.getBlock(); bs.set(block.getId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2560/buggy-version/jadx-core.src.main.java.jadx.core.dex.visitors.regions.ProcessTryCatchRegions.java", "BodyUseAPI": ["jadx.core.dex.nodes.BlockNode.get(AType.SPLITTER_BLOCK)"], "Fixed commit": "412a185fa1aee55024c97344ed6ac339ef58aaab", "Url": "https://api.github.com/repos/dstmath/jadx", "Date": "2018-05-01T14:31:44Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.point85.workschedule.Team.getRotation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (shiftRotation.getDuration().equals(java.time.Duration.ZERO)) { return instance; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7578/buggy-version/src.main.java.org.point85.workschedule.Team.java", "BodyUseAPI": [], "Fixed commit": "d066aadce8e6a254446ddda0da717d7039c4de31", "Url": "https://api.github.com/repos/point85/Shift", "Date": "2018-04-13T22:28:44Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (horizontalIndex < ((possibleSideTasks.size()) - 1)) { calculateSideTasks(verticalIndex, (horizontalIndex + 1)); }else if (verticalIndex < ((possibleSideTasks.size()) - 1)) { calculateSideTasks((verticalIndex + 1), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6883/buggy-version/server.src.main.java.at.ac.tuwien.sepm.assignment.group02.server.service.OptAlgorithmServiceImpl.java", "BodyUseAPI": ["at.ac.tuwien.sepm.assignment.group02.server.service.OptAlgorithmServiceImpl.calculateSideTasks(int,int)", "java.util.List<at.ac.tuwien.sepm.assignment.group02.rest.restDTO.TaskDTO>.size()"], "Fixed commit": "b818b6fa0960354c27930c94946b650c24857b1e", "Url": "https://api.github.com/repos/DoganKaraarslan/ERP-PROTOTYPE", "Date": "2018-01-12T10:51:43Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (horizontalIndex < ((possibleSideTasks.size()) - 1)) { calculateSideTasks(verticalIndex, (horizontalIndex + 1)); }else if (verticalIndex < ((possibleSideTasks.size()) - 1)) { calculateSideTasks((verticalIndex + 1), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6883/buggy-version/server.src.main.java.at.ac.tuwien.sepm.assignment.group02.server.service.OptAlgorithmServiceImpl.java", "BodyUseAPI": ["java.util.List<at.ac.tuwien.sepm.assignment.group02.rest.restDTO.TaskDTO>.size()", "at.ac.tuwien.sepm.assignment.group02.server.service.OptAlgorithmServiceImpl.calculateSideTasks(int,int)"], "Fixed commit": "b818b6fa0960354c27930c94946b650c24857b1e", "Url": "https://api.github.com/repos/DoganKaraarslan/ERP-PROTOTYPE", "Date": "2018-01-12T10:51:43Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentWaste <= (minWaste)) { minWaste = currentWaste; optAlgorithmResult.setTimberResult(currentTimber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6883/buggy-version/server.src.main.java.at.ac.tuwien.sepm.assignment.group02.server.service.OptAlgorithmServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b818b6fa0960354c27930c94946b650c24857b1e", "Url": "https://api.github.com/repos/DoganKaraarslan/ERP-PROTOTYPE", "Date": "2018-01-12T10:51:43Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tn.equals(LastUpdatedTopic)) setBackground(new java.awt.Color(241, 99, 98)); else setBackground(new java.awt.Color(139, 137, 130));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3176/buggy-version/src.GUI.DashFrame.java", "BodyUseAPI": [], "Fixed commit": "c155f89b388539b4c1e183d4788793c6580a7c1d", "Url": "https://api.github.com/repos/rollingflamingo/RMIGUI", "Date": "2018-06-11T15:15:51Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"ON\".equals(tvStatus)) { channel = (channel) + 1; sendBack(\"OK\"); ui.updateArea(\"Channel changed\"); }else { sendBack(\"OK\"); ui.updateArea(\"Channel cannot be changed. TV is Off!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3128/buggy-version/src.main.java.services.TVService.java", "BodyUseAPI": [], "Fixed commit": "8dd190c6e2154ed6b3f1abd4b476bce3cca14df4", "Url": "https://api.github.com/repos/KhateebAhmad/SmartHome", "Date": "2018-04-15T19:16:11Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"ON\".equals(tvStatus)) { channel = (channel) + 1; sendBack(\"OK\"); ui.updateArea(\"Channel changed\"); }else { sendBack(\"OK\"); ui.updateArea(\"Channel cannot be changed. TV is Off!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3128/buggy-version/src.main.java.services.TVService.java", "BodyUseAPI": [], "Fixed commit": "8dd190c6e2154ed6b3f1abd4b476bce3cca14df4", "Url": "https://api.github.com/repos/KhateebAhmad/SmartHome", "Date": "2018-04-15T19:16:11Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (running) { frame.setTitle(\"Still finding\"); frame.repaint(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/11/buggy-version/com.suppresswarnings.osgi.com.suppresswarnings.osgi.neuralnetwork.src.main.java.com.suppresswarnings.osgi.neuralnetwork.AutoJump.java", "BodyUseAPI": [], "Fixed commit": "e49be04d2a940e12b4d40eed9044dd4c4e2b676b", "Url": "https://api.github.com/repos/outermanjiaming/suppresswarnings", "Date": "2018-04-10T08:29:44Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!includedClassChanged) { trialNum = trialLimit + 1; }else { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1935/buggy-version/tregression.src.main.tregression.empiricalstudy.TrialGenerator0.java", "BodyUseAPI": [], "Fixed commit": "1e7f71ac0c032eda1bfb20acfe21b517e4b15538", "Url": "https://api.github.com/repos/llmhyy/tregression", "Date": "2018-03-14T12:07:16Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag) lines++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8425/buggy-version/Java.031602438.src.Tools.java", "BodyUseAPI": [], "Fixed commit": "8d3d569f2551d56ed015c82e340808ac5ac43dfc", "Url": "https://api.github.com/repos/NSDie/personal-project", "Date": "2018-09-08T16:11:57Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entityManager == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9514/buggy-version/jpa-eclipselink-spring-boot-autoconfigure.src.main.java.com.gm.shared.jpa.eclipselink.asyncpersistence.em.ThreadBoundEntityManagerHandler.java", "BodyUseAPI": [], "Fixed commit": "90557692c09797bffd9aac9dfdb139cf1c7ab365", "Url": "https://api.github.com/repos/mgorav/jpa-eclipselink", "Date": "2018-05-02T12:34:06Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (initCoord != null) { if ((initCoord.equals(finalCoord)) && (!isWall)) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3897/buggy-version/src.Class.Game.java", "BodyUseAPI": ["Class.Coordinates.equals(Class.Coordinates)"], "Fixed commit": "383d72a4554708f689b9f092f7b942f264174082", "Url": "https://api.github.com/repos/DuflotFlorian/Quoridor_4IRC", "Date": "2018-01-10T15:15:46Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xyz.warringtons.daterandevu.Modules.Activities.getPicDatabaseId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pidDatabaseId == null) { com.bumptech.glide.Glide.with(xyz.warringtons.daterandevu.Randevu.getContext()).load(R.drawable.date_idea_holder).apply(com.bumptech.glide.request.RequestOptions.circleCropTransform()).into(dateImage); }else { com.bumptech.glide.Glide.with(xyz.warringtons.daterandevu.Randevu.getContext()).load(currentActivity.getPicDatabaseId()).apply(com.bumptech.glide.request.RequestOptions.circleCropTransform()).into(dateImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2487/buggy-version/app.src.main.java.xyz.warringtons.daterandevu.Fragments.SelectedIdeasFragment.java", "BodyUseAPI": [], "Fixed commit": "71345876f7e809cc17120c3b3331823cb5d9aafb", "Url": "https://api.github.com/repos/warrington591/Randevu", "Date": "2018-10-12T17:55:14Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((splittedEmail.length) < 2) || ((splittedEmail[1].length()) == 0)) { throw new javax.ws.rs.WebApplicationException(\"Please provide a valid email address\", javax.ws.rs.core.Response.Status.BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1879/buggy-version/src.main.java.mil.dds.anet.resources.PersonResource.java", "BodyUseAPI": [], "Fixed commit": "9ff87d7a89f31b3f0eda146564a8f7b5ca450bd7", "Url": "https://api.github.com/repos/NCI-Agency/anet", "Date": "2018-01-30T14:54:56Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rcv.JsonParser.createRawContestConfigFromFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rawConfig.outputSettings) == null) { com.rcv.Logger.log(java.util.logging.Level.SEVERE, \"No \\'outputSettings\\' field specified! Failed to load config file:\\n%s\", configPath); }else if ((rawConfig.cvrFileSources) == null) { com.rcv.Logger.log(java.util.logging.Level.SEVERE, \"No \\'cvrFileSources\\' field specified! Failed to load config file:\\n%s\", configPath); }else if ((rawConfig.candidates) == null) { com.rcv.Logger.log(java.util.logging.Level.SEVERE, \"No \\'candidates\\' field specified! Failed to load config file:\\n%s\", configPath); }else if ((rawConfig.rules) == null) { com.rcv.Logger.log(java.util.logging.Level.SEVERE, \"No \\'rules\\' field specified! Failed to load config file:\\n%s\", configPath); }else { config = new com.rcv.ContestConfig(rawConfig); com.rcv.Logger.log(java.util.logging.Level.INFO, \"Successfully loaded config file: %s\", configPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2904/buggy-version/src.main.java.com.rcv.Main.java", "BodyUseAPI": [], "Fixed commit": "f96d3806f0dec138526cbd6f1ed347fbaadd0c62", "Url": "https://api.github.com/repos/BrightSpots/rcv", "Date": "2018-09-16T17:27:14Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (iterator != null) iterator.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8510/buggy-version/core.src.main.java.nl.nn.adapterframework.webcontrol.api.TransactionalStorage.java", "BodyUseAPI": ["nl.nn.adapterframework.core.IMessageBrowsingIterator.close()"], "Fixed commit": "e34e33e68d53e9a88adf793c63f21e30410e77a5", "Url": "https://api.github.com/repos/ibissource/iaf", "Date": "2018-08-13T12:30:34Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isTokenRelate) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2865/buggy-version/src.main.java.com.cdkj.coin.ao.impl.EthTxAOImpl.java", "BodyUseAPI": [], "Fixed commit": "5199dff1dcd9708e4257991080b3e83a46b2f6dc", "Url": "https://api.github.com/repos/ibisTime/bc-token-ctq", "Date": "2018-09-18T08:01:23Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.tinylcy.controller.MinerController.miner) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8588/buggy-version/src.main.java.org.tinylcy.controller.MinerController.java", "BodyUseAPI": [], "Fixed commit": "d01dcfa147c14453d39f7dd03d1f3fe164f7622a", "Url": "https://api.github.com/repos/tinylcy/ladder", "Date": "2018-01-31T04:14:53Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.tinylcy.controller.MinerController.miner) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8588/buggy-version/src.main.java.org.tinylcy.controller.MinerController.java", "BodyUseAPI": [], "Fixed commit": "d01dcfa147c14453d39f7dd03d1f3fe164f7622a", "Url": "https://api.github.com/repos/tinylcy/ladder", "Date": "2018-01-31T04:14:53Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mQuantityEditText.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(quantityString.isEmpty())) { quantity = java.lang.Integer.parseInt(quantityString); }else { android.widget.Toast.makeText(this, \"Error saving the Quantity with dummy data: 0\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9565/buggy-version/Android.AndroidBasicsbyGoogleNanodegreeProgram.p8-inventory-app-stage1.app.src.main.java.com.example.doctorx.inventoryapp.EditorActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "90486f43e1656858b7409f6c10a5de6d77f378ff", "Url": "https://api.github.com/repos/doct0rX/Udacity", "Date": "2018-07-21T10:57:09Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mPhoneEditText.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(phoneString.isEmpty())) { phone = java.lang.Integer.parseInt(phoneString); }else { android.widget.Toast.makeText(this, \"Error saving the Phone Number with dummy data: 0\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9565/buggy-version/Android.AndroidBasicsbyGoogleNanodegreeProgram.p8-inventory-app-stage1.app.src.main.java.com.example.doctorx.inventoryapp.EditorActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "90486f43e1656858b7409f6c10a5de6d77f378ff", "Url": "https://api.github.com/repos/doct0rX/Udacity", "Date": "2018-07-21T10:57:09Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mPriceEditText.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(priceString.isEmpty())) { price = java.lang.Integer.parseInt(priceString); }else { android.widget.Toast.makeText(this, \"Error saving the Price with dummy data: 0\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9565/buggy-version/Android.AndroidBasicsbyGoogleNanodegreeProgram.p8-inventory-app-stage1.app.src.main.java.com.example.doctorx.inventoryapp.EditorActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "90486f43e1656858b7409f6c10a5de6d77f378ff", "Url": "https://api.github.com/repos/doct0rX/Udacity", "Date": "2018-07-21T10:57:09Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input == null) { throw new java.lang.IllegalArgumentException(\"Null argument.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1531/buggy-version/src.main.java.edu.gatech.oad.antlab.person.Person4.java", "BodyUseAPI": [], "Fixed commit": "78417606e680438dfc2327c29a704ba9ff76cf44", "Url": "https://api.github.com/repos/AnkitSiva/M2", "Date": "2018-01-29T18:57:18Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.AlarmManager.getNextAlarmClock()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (nextAlarm != null) { long triggerTime = (android.os.SystemClock.elapsedRealtime()) + (INTERVAL); long repeatInterval = +(INTERVAL); android.content.Intent notifyIntent = new android.content.Intent(this, com.stangassinger.mytracker.AlarmReceiver.class); final android.app.PendingIntent notifyPendingIntent = android.app.PendingIntent.getBroadcast(this, com.stangassinger.mytracker.MainActivity.NOTIFICATION_ID, notifyIntent, PendingIntent.FLAG_UPDATE_CURRENT); alarmManager.setInexactRepeating(AlarmManager.ELAPSED_REALTIME_WAKEUP, triggerTime, repeatInterval, notifyPendingIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/357/buggy-version/app.src.main.java.com.stangassinger.mytracker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "74326c8e267003ead47fd12c0f47978e3db2884e", "Url": "https://api.github.com/repos/stangassinger/MyTracker", "Date": "2018-05-28T06:12:26Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (callBack) { if (null != (listener)) listener.onLocationListener(new cn.shomes.tfblue.bean.LocationData(false)); locationService.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9867/buggy-version/app.src.main.java.cn.shomes.tfblue.service.KeyService.java", "BodyUseAPI": [], "Fixed commit": "55ebcba794a87eb1b3d1c988fc94ec96b99d0040", "Url": "https://api.github.com/repos/kayoxu/TFBlue", "Date": "2018-10-11T10:13:31Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diagnosticType == (com.baidu.location.LocationClient.LOC_DIAGNOSTIC_TYPE_BETTER_OPEN_GPS)) { }else if (diagnosticType == (com.baidu.location.LocationClient.LOC_DIAGNOSTIC_TYPE_BETTER_OPEN_WIFI)) { }else if (diagnosticType == (com.baidu.location.LocationClient.LOC_DIAGNOSTIC_TYPE_NEED_CHECK_LOC_PERMISSION)) { }else if (diagnosticType == (com.baidu.location.LocationClient.LOC_DIAGNOSTIC_TYPE_NEED_CHECK_NET)) { callBack = true; }else if (diagnosticType == (com.baidu.location.LocationClient.LOC_DIAGNOSTIC_TYPE_NEED_CLOSE_FLYMODE)) { callBack = true; }else if (diagnosticType == (com.baidu.location.LocationClient.LOC_DIAGNOSTIC_TYPE_NEED_INSERT_SIMCARD_OR_OPEN_WIFI)) { callBack = true; }else if (diagnosticType == (com.baidu.location.LocationClient.LOC_DIAGNOSTIC_TYPE_NEED_OPEN_PHONE_LOC_SWITCH)) { callBack = true; }else if (diagnosticType == (com.baidu.location.LocationClient.LOC_DIAGNOSTIC_TYPE_SERVER_FAIL)) { callBack = true; }else if (diagnosticType == (com.baidu.location.LocationClient.LOC_DIAGNOSTIC_TYPE_FAIL_UNKNOWN)) { callBack = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9867/buggy-version/app.src.main.java.cn.shomes.tfblue.service.KeyService.java", "BodyUseAPI": [], "Fixed commit": "55ebcba794a87eb1b3d1c988fc94ec96b99d0040", "Url": "https://api.github.com/repos/kayoxu/TFBlue", "Date": "2018-10-11T10:13:31Z"},
{"Line": "=>777", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.hotzjeanpierre.commandlinetools.command.ParameterValuesList.getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(de.hotzjeanpierre.commandlinetools.command.Command.sSupportedCommands.containsKey(command))) { if ((!(de.hotzjeanpierre.commandlinetools.command.Command.sDefaultCommandsEnabled)) || (!(de.hotzjeanpierre.commandlinetools.command.Command.sDefaultCommands.containsKey(command)))) { outputStream.println(de.hotzjeanpierre.commandlinetools.command.utils.StringProcessing.format(\"The command '{0}' was not recognized.\", command)); return new de.hotzjeanpierre.commandlinetools.command.CommandExecutionResult.Builder().setSuccess(false).build(); }else { outputStream.println(de.hotzjeanpierre.commandlinetools.command.utils.StringProcessing.format(\"Printing help for command '{0}': \", command)); outputStream.println(de.hotzjeanpierre.commandlinetools.command.Command.sDefaultCommands.get(command).getDocumentation()); return new de.hotzjeanpierre.commandlinetools.command.CommandExecutionResult.Builder().setSuccess(true).build(); } }else { outputStream.println(de.hotzjeanpierre.commandlinetools.command.utils.StringProcessing.format(\"Printing help for command '{0}': \", command)); outputStream.println(de.hotzjeanpierre.commandlinetools.command.Command.sSupportedCommands.get(command).getDocumentation()); return new de.hotzjeanpierre.commandlinetools.command.CommandExecutionResult.Builder().setSuccess(true).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8307/buggy-version/src.main.java.de.hotzjeanpierre.commandlinetools.command.Command.java", "BodyUseAPI": ["de.hotzjeanpierre.commandlinetools.command.utils.StringProcessing.format(java.lang.String,java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.util.Map<java.lang.String, de.hotzjeanpierre.commandlinetools.command.Command>.containsKey(java.lang.String)", "de.hotzjeanpierre.commandlinetools.command.Command.getDocumentation()", "de.hotzjeanpierre.commandlinetools.command.Command.getDocumentation()", "java.util.Map<java.lang.String, de.hotzjeanpierre.commandlinetools.command.Command>.get(java.lang.String)", "java.io.PrintStream.println(de.hotzjeanpierre.commandlinetools.command.utils.StringProcessing.format(\"Printing help for command '{0}': \", command))", "java.io.PrintStream.println(de.hotzjeanpierre.commandlinetools.command.utils.StringProcessing.format(\"The command '{0}' was not recognized.\", command))", "de.hotzjeanpierre.commandlinetools.command.utils.StringProcessing.format(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, de.hotzjeanpierre.commandlinetools.command.Command>.get(java.lang.String)", "java.io.PrintStream.println(de.hotzjeanpierre.commandlinetools.command.utils.StringProcessing.format(\"Printing help for command '{0}': \", command))", "de.hotzjeanpierre.commandlinetools.command.utils.StringProcessing.format(java.lang.String,java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "16253c9f0a926497a9a8df555fbdcda62d452c40", "Url": "https://api.github.com/repos/JP1998/CommandLineTools", "Date": "2018-04-23T20:09:12Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (counter2 == 0) { counter2 = 1; java.lang.System.out.println((\"feature 3 : \" + ((counter1 * 1.0) / counter2))); }else { java.lang.System.out.println((\"feature 3 : \" + ((counter1 * 1.0) / counter2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2215/buggy-version/src.Feature_3.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "0eda6a0b9fbfefe9731af912ffa900069a5e02a1", "Url": "https://api.github.com/repos/abhi1d/ElsevierScopus-CitationSearch-Implementation", "Date": "2018-01-10T04:20:35Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p) == 0) { p = 1; double fe2 = ((q) * 1.0) / (p); java.lang.System.out.println((\"feature-2 : + \" + fe2)); }else { double fe2 = ((q) * 1.0) / (p); java.lang.System.out.println((\"feature-2 : + \" + fe2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2215/buggy-version/src.Feature_2.java", "BodyUseAPI": [], "Fixed commit": "0eda6a0b9fbfefe9731af912ffa900069a5e02a1", "Url": "https://api.github.com/repos/abhi1d/ElsevierScopus-CitationSearch-Implementation", "Date": "2018-01-10T04:20:35Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.nbt.NBTTagCompound.getInteger(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (just < (com.lothrazar.cyclicmagic.component.screen.TileEntityScreen.Justification.values().length)) { this.justif = com.lothrazar.cyclicmagic.component.screen.TileEntityScreen.Justification.values()[just]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2856/buggy-version/src.main.java.com.lothrazar.cyclicmagic.component.screen.TileEntityScreen.java", "BodyUseAPI": [], "Fixed commit": "4941d0056c9bb5c240a442055007e1625b2960b5", "Url": "https://api.github.com/repos/PrinceOfAmber/Cyclic", "Date": "2018-03-05T02:46:49Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ThreadLocalRandom.nextInt(int,int)", "java.util.concurrent.ThreadLocalRandom.nextInt(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((xPoint == 0) && (yPoint == 0)) { createPoint(point); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6206/buggy-version/src.main.java.game.manager.GameManager.java", "BodyUseAPI": [], "Fixed commit": "9e352c588dc14fbf71fe5c3a3f1f13147c1bea8e", "Url": "https://api.github.com/repos/AlexMacLeod23/The-Adventure-of-the-Barren-Moor", "Date": "2018-07-07T21:02:22Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.length) > 0) { buffer.put(this.messageId); buffer.put(this.payload); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8670/buggy-version/src.main.java.main.peer.peerMessages.PeerMessage.java", "BodyUseAPI": [], "Fixed commit": "f8614f27fb3e982391b9e69ddf29fb06e2700a0f", "Url": "https://api.github.com/repos/stavalfi/TorrentX", "Date": "2018-01-24T20:53:45Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(userfrom.equals(\"all\"))) { if ((i.getFrom().equals(\"all\")) || (i.getTo().equals(\"all\"))) { continue; }else messages.add(i); }else messages.add(i);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2403/buggy-version/app.src.main.java.com.example.zxd1997.chat.ChatActivity.java", "BodyUseAPI": [], "Fixed commit": "a9620c9edddecdff00afd51850325739809eb886", "Url": "https://api.github.com/repos/zxd1997/Chat", "Date": "2018-04-27T11:36:17Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lang) == null) { lang = DLNAMediaLang.UND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/399/buggy-version/src.main.java.net.pms.dlna.DLNAMediaSubtitle.java", "BodyUseAPI": [], "Fixed commit": "4e77ab13ac37f9d4595212c42ea8dfdfb0a3f9c9", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2017-09-24T12:29:05Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((player.getMapPosX()) >= 390) && ((player.getMapPosX()) < 560)) { player.setMapPosX(380); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4744/buggy-version/src.plains_F7.java", "BodyUseAPI": ["java.lang.Character.setMapPosX(int)"], "Fixed commit": "5b27a1530842ca56a96ce151172ef0bb12e6b3bf", "Url": "https://api.github.com/repos/Bupton64/GroupAssignment", "Date": "2018-01-28T21:42:08Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parts.length) == 1) { return withSuggestedInstances(builder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7876/buggy-version/app.src.main.java.com.roamingroths.cmcc.logic.goals.GoalTemplateFactory.java", "BodyUseAPI": [], "Fixed commit": "7756f444d3f67c0c223222c1f92de080bcf1d1a2", "Url": "https://api.github.com/repos/parkeroth/ChartyMcChartChart", "Date": "2018-02-27T17:36:52Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dspace.embargo.EmbargoSetter.parseTerms(org.dspace.core.Context,no.uio.duo.policy.Item,embargoes[0].value)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (embargoDate == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1873/buggy-version/src.main.java.no.uio.duo.policy.PolicyPatternManager.java", "BodyUseAPI": [], "Fixed commit": "7ecb321e9d4d4aefb5cf307652c0771198f450b2", "Url": "https://api.github.com/repos/nye-duo/Duo-DSpace", "Date": "2018-01-24T10:22:14Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue().size()) >= 2) { alluxio.master.meta.checkconf.WrongProperty wrongProperty = new alluxio.master.meta.checkconf.WrongProperty().setName(entry.getKey().getName()).setValues(entry.getValue()); if (entry.getKey().getConsistencyLevel().equals(ConsistencyCheckLevel.ENFORCE)) { configErrors.add(wrongProperty); }else { configWarns.add(wrongProperty); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/762/buggy-version/core.server.master.src.main.java.alluxio.master.meta.checkconf.ServerConfigurationChecker.java", "BodyUseAPI": ["new alluxio.master.meta.checkconf.WrongProperty().setName(entry.getKey().getName()).setValues(entry.getValue())", "entry.getKey().getConsistencyLevel().equals(ConsistencyCheckLevel.ENFORCE)", "java.util.Map.Entry<alluxio.PropertyKey, java.util.Map<java.lang.String, java.util.List<java.lang.String>>>.getKey()", "java.util.Map.Entry<alluxio.PropertyKey, java.util.Map<java.lang.String, java.util.List<java.lang.String>>>.getKey()", "entry.getKey().getName()", "entry.getKey().getConsistencyLevel()", "java.util.Map.Entry<alluxio.PropertyKey, java.util.Map<java.lang.String, java.util.List<java.lang.String>>>.getValue()", "alluxio.master.meta.checkconf.WrongProperty.setName(entry.getKey().getName())"], "Fixed commit": "bfa08c124d31ba60b48a31e26ffbf108f16e4f7a", "Url": "https://api.github.com/repos/LuQQiu/alluxio", "Date": "2018-05-12T00:02:45Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.hasMomentParent()) cmd = new controller.command.AddMomentCommand(pos, p.getMomentParent().getMoment(), main); else cmd = new controller.command.AddMomentCommand(pos, main);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/602/buggy-version/src.utils.MainViewTransformations.java", "BodyUseAPI": ["p.getMomentParent().getMoment()", "controller.DropPane.getMomentParent()"], "Fixed commit": "e6cac0468ec31b41d2a623a2c019d5a5685e9d92", "Url": "https://api.github.com/repos/coco35700/uPMT", "Date": "2018-02-19T20:34:03Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.hhu.bsinfo.dxram.mem.MemoryManagerComponent.createMultiSizes(boolean,int[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ids[i]) != (de.hhu.bsinfo.dxram.data.ChunkID.INVALID_ID)) { p_dataStructures[i].setState(ChunkState.OK); }else { p_dataStructures[i].setState(ChunkState.UNDEFINED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5698/buggy-version/src.main.java.de.hhu.bsinfo.dxram.mem.MemoryManagerComponent.java", "BodyUseAPI": ["p_dataStructures[i].setState(ChunkState.UNDEFINED)", "p_dataStructures[i].setState(ChunkState.OK)"], "Fixed commit": "b42a0051c8522d4fb3798fc4e81049496596d954", "Url": "https://api.github.com/repos/stnot/dxram", "Date": "2018-08-30T07:44:36Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (challenger.equalsIgnoreCase(player2)) { play1.getReplyWriter().println(\"\\nYou can\\'t challenge yourself.\\n\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7096/buggy-version/src.GameCore.java", "BodyUseAPI": [], "Fixed commit": "8a7b2d1794aca8a2984fc7d74cf5661c9f45d8f1", "Url": "https://api.github.com/repos/ryan1246/CS321-2018F-002", "Date": "2018-10-17T02:12:13Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.security.cert.CertificateFactory.generateCRL(httpEntity.getContent())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == crl) { be.fedict.trust.crl.OnlineCrlRepository.LOG.error(\"null CRL\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3612/buggy-version/jtrust-lib.src.main.java.be.fedict.trust.crl.OnlineCrlRepository.java", "BodyUseAPI": [], "Fixed commit": "8570557a9d277a27110f8eea49c91419305962bd", "Url": "https://api.github.com/repos/e-Contract/jtrust", "Date": "2018-04-07T08:38:20Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xml.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8955/buggy-version/timedmessages-bundle.src.com.marcelotomazini.eclipse.plugins.timedmessages.utils.MarshallUtils.java", "BodyUseAPI": [], "Fixed commit": "974f678a136c4aa7861832270165fc59c8b660e1", "Url": "https://api.github.com/repos/marcelotomazini/timed-messages-eclipse-plugin", "Date": "2018-08-23T20:53:58Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tableName.contains(\".\")) { if ((tableName.split(\"\\\\.\").length) == 3) { hiveTableName = tableName.split(\"\\\\.\")[2]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6378/buggy-version/src.main.java.io.confluent.connect.hdfs.parquet.ParquetHiveUtil.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "64fa3232bcf3be9782add64177608daa785dabe8", "Url": "https://api.github.com/repos/GavinH1984/kafka-connect-hdfs-custom", "Date": "2018-07-08T16:29:24Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tableName.contains(\".\")) { if ((tableName.split(\"\\\\.\").length) == 3) { hiveTableName = tableName.split(\"\\\\.\")[2]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6378/buggy-version/src.main.java.io.confluent.connect.hdfs.parquet.ParquetHiveUtil.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "64fa3232bcf3be9782add64177608daa785dabe8", "Url": "https://api.github.com/repos/GavinH1984/kafka-connect-hdfs-custom", "Date": "2018-07-08T16:29:24Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tableName.contains(\".\")) { if ((tableName.split(\"\\\\.\").length) == 3) { hiveTableName = tableName.split(\"\\\\.\")[2]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6378/buggy-version/src.main.java.io.confluent.connect.hdfs.parquet.ParquetHiveUtil.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "64fa3232bcf3be9782add64177608daa785dabe8", "Url": "https://api.github.com/repos/GavinH1984/kafka-connect-hdfs-custom", "Date": "2018-07-08T16:29:24Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Exit.getRoom()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (link < 0) link = -link;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2963/buggy-version/src.Room.java", "BodyUseAPI": [], "Fixed commit": "45c48e944f84f8465ed705ab75c1b66162bdd533", "Url": "https://api.github.com/repos/cwells21/CS321-2018F-004", "Date": "2018-10-19T19:09:06Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(wrapper.getSourceId().equals(SourceWrapper.FLAG_NON_USABLE))) wrappers.add(wrapper);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6893/buggy-version/app.src.main.java.com.whompum.PennyFlip.DialogSourceChooser.SourceWrapperAdapter.java", "BodyUseAPI": ["com.whompum.PennyFlip.DialogSourceChooser.AdapterSelecteable<com.whompum.PennyFlip.DialogSourceChooser.SourceWrapper>.add(com.whompum.PennyFlip.DialogSourceChooser.SourceWrapper)"], "Fixed commit": "b2b6d76e46c83971e391e4e801e3d9d7e1ba0e0a", "Url": "https://api.github.com/repos/whompum/PennyFlip", "Date": "2018-07-27T08:37:45Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["elegit.controllers.Stage.getOwner()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parent == null) { throw new java.lang.RuntimeException(\"Parent window not set.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2803/buggy-version/src.main.java.elegit.controllers.BusyWindow.java", "BodyUseAPI": [], "Fixed commit": "25e067cf062b06daf437f7721fb07d06ab3abe98", "Url": "https://api.github.com/repos/dmusican/Elegit", "Date": "2018-02-03T18:28:56Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rockwellcollins.atc.agree.analysis.AgreeUtils.getClosestContainerOfType(org.osate.aadl2.AnnexSubclause,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (container instanceof org.osate.aadl2.ComponentImplementation) { if (compImpl.getName().equals(((org.osate.aadl2.ComponentImplementation) (container)).getName())) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5200/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.analysis.src.com.rockwellcollins.atc.agree.analysis.AgreeUtils.java", "BodyUseAPI": [], "Fixed commit": "0e1bd672a3e7d3bb10e5c8832c088fd04f0ace49", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2018-02-14T20:02:26Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.getParentFile().exists())) { file.getParentFile().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9195/buggy-version/src.main.java.reposense.util.FileUtil.java", "BodyUseAPI": ["java.io.File.getParentFile()", "java.io.File.mkdirs()"], "Fixed commit": "672862a04c2be5f10726d9397e4cce8a9ec119f5", "Url": "https://api.github.com/repos/eugenepeh/RepoSense", "Date": "2018-05-18T13:36:25Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blockName.equals(\"soulsand\")) blockName = \"soul_sand\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8739/buggy-version/src.main.java.com.gmail.zendarva.parachronology.Configuration.domain.serialize.BlockReferenceDeserializer.java", "BodyUseAPI": [], "Fixed commit": "e99c439b23fd887fd56f689b716ad63843a7e1c2", "Url": "https://api.github.com/repos/ZenDarva/Parachronography", "Date": "2018-07-10T23:42:46Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getBlock()) == null) { java.lang.System.out.println(java.lang.String.format(\"Error, Attempt to displace to a null block. Reference: %s:%s:%d\", domain, blockName, metadata)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8739/buggy-version/src.main.java.com.gmail.zendarva.parachronology.Configuration.domain.BlockReference.java", "BodyUseAPI": [], "Fixed commit": "e99c439b23fd887fd56f689b716ad63843a7e1c2", "Url": "https://api.github.com/repos/ZenDarva/Parachronography", "Date": "2018-07-10T23:42:46Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liteon.smartchargerplus.db.DBHelper.queryChargerByName(android.database.sqlite.SQLiteDatabase,charger.getChargerName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((chargerInDB != null) && (!(android.text.TextUtils.isEmpty(chargerInDB.getSerialNumber(com.liteon.smartchargerplus.App.getContext()))))) { cv.put(ChargerEntry.COLUMN_NAME_SERIAL_NUMBER, chargerInDB.getSerialNumber(com.liteon.smartchargerplus.App.getContext())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1533/buggy-version/app.src.main.java.com.liteon.smartchargerplus.db.DBHelper.java", "BodyUseAPI": ["com.liteon.smartchargerplus.utility.SmartCharger.getSerialNumber(com.liteon.smartchargerplus.App.getContext())", "android.content.ContentValues.put(ChargerEntry.COLUMN_NAME_SERIAL_NUMBER,chargerInDB.getSerialNumber(com.liteon.smartchargerplus.App.getContext()))"], "Fixed commit": "1e30f9abaf2496a5581c9b46371d4a395882c4c3", "Url": "https://api.github.com/repos/tel3342311/SmartCharger", "Date": "2018-07-04T11:43:05Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mainUrlBeans.get(i).getData()) != null) && ((mainUrlBeans.get(i).getData().getVideo_list()) != null)) { java.lang.String mainUrl = mainUrlBeans.get(i).getData().getVideo_list().getVideo_1().getMain_url(); final java.lang.String url1 = new java.lang.String(android.util.Base64.decode(mainUrl.getBytes(), Base64.DEFAULT)); videoList.add(url1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9874/buggy-version/app.src.main.java.com.example.administrator.idlereader.video.presenter.VideoPresenter.java", "BodyUseAPI": ["mainUrlBeans.get(i).getData()", "mainUrlBeans.get(i).getData().getVideo_list().getVideo_1()", "java.util.List<com.example.administrator.idlereader.bean.VideoUrlBean>.get(int)", "mainUrlBeans.get(i).getData().getVideo_list().getVideo_1().getMain_url()", "mainUrlBeans.get(i).getData().getVideo_list()"], "Fixed commit": "658df0ecb275940308b98fc8d5d6c84f72460ad2", "Url": "https://api.github.com/repos/Huigesi/IdleReader", "Date": "2018-08-30T03:51:10Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.securityMeasures) != null) { for (di.unipi.socc.fogtorchpi.infrastructure.SecurityCounterMeasure s : this.securityMeasures) { measures.add(s.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1626/buggy-version/src.main.java.di.unipi.socc.fogtorchpi.infrastructure.ComputationalNode.java", "BodyUseAPI": [], "Fixed commit": "62b0cdd60e67d37b3c6730f0f6a7f6b3f5ef3d6e", "Url": "https://api.github.com/repos/di-unipi-socc/FogTorchPI", "Date": "2018-03-27T07:46:24Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (ctx == null) { ctx = createContext(mgr.getClassLoader(), mgr.getName(), org.cache2k.impl.xmlConfiguration.CacheConfigurationProviderImpl.getFileName(mgr)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/38/buggy-version/cache2k-impl.src.main.java.org.cache2k.impl.xmlConfiguration.CacheConfigurationProviderImpl.java", "BodyUseAPI": [], "Fixed commit": "dfe4ecf553b9e41ebee2fc43d80c9e110665bdf2", "Url": "https://api.github.com/repos/cache2k/cache2k", "Date": "2018-06-30T06:35:39Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mgr.isDefaultManager()) { ctx = classLoader2config.get(mgr.getClassLoader()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/38/buggy-version/cache2k-impl.src.main.java.org.cache2k.impl.xmlConfiguration.CacheConfigurationProviderImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.ClassLoader, org.cache2k.impl.xmlConfiguration.ConfigurationContext>.get(mgr.getClassLoader())", "org.cache2k.CacheManager.getClassLoader()"], "Fixed commit": "dfe4ecf553b9e41ebee2fc43d80c9e110665bdf2", "Url": "https://api.github.com/repos/cache2k/cache2k", "Date": "2018-06-30T06:35:39Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < ((isSummerDay.size()) - 1)) i++; else break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9003/buggy-version/AWS.src.Period.java", "BodyUseAPI": [], "Fixed commit": "3ae191280ce6d7e9def50b886fa3c6b3143fb315", "Url": "https://api.github.com/repos/Object-Pascal/ProftaakC6", "Date": "2018-10-23T15:00:27Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (manual.isChecked()) { if (overrideE.isChecked()) { updateType = UpdateType.ManualEDay; }else if (overrideA.isChecked()) { updateType = UpdateType.ManualADay; }else if (override8.isChecked()) { updateType = UpdateType.ManualFullDay; }else { updateType = UpdateType.BuiltIn; } }else { updateType = UpdateType.BuiltIn; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8720/buggy-version/app.src.main.java.com.spud.sgsclasscountdownapp.Settings.java", "BodyUseAPI": [], "Fixed commit": "c51df7035bb3e83f56ea6dd8a6fc35b26813e791", "Url": "https://api.github.com/repos/jeffrypig23/SGSClassCountdown", "Date": "2018-10-09T18:50:54Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (path != null) { for (int i = 0; i < (path.size()); i++) { path.set(i, path.get(i).toLowerCase()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4170/buggy-version/src.GraphProcessor.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.set(int,java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "9f9c7698c8f5cddbcee6094ecf92000407a4c273", "Url": "https://api.github.com/repos/squ27/X-Team-Dictionary-Graph", "Date": "2018-04-14T20:40:17Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cotton.abmallback.service.MemberService.getById(member.getReferrerId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (referrerMember != null) { memberPromotion(referrerMember, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4819/buggy-version/src.main.java.com.cotton.abmallback.manager.impl.PromotionManagerImpl.java", "BodyUseAPI": ["com.cotton.abmallback.manager.impl.PromotionManagerImpl.memberPromotion(com.cotton.abmallback.model.Member,int)"], "Fixed commit": "33aa2628ed9c6a9c7bc43bc0ce34cd19ce64d47a", "Url": "https://api.github.com/repos/LareinaH/ABMall-back", "Date": "2018-07-18T06:58:15Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getChildren().contains(stoneImage))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1796/buggy-version/src.main.java.com.toomasr.sgf4j.board.BoardSquare.java", "BodyUseAPI": [], "Fixed commit": "a8c659a4b766a7f8762a5f667de68b0a39076699", "Url": "https://api.github.com/repos/toomasr/sgf4j-gui", "Date": "2018-08-24T07:51:33Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numberOfTeamCounter == 2) && (name.equalsIgnoreCase(newListOfTeamMembers[0]))) { nameIsDuplicate = true; }else { nameIsDuplicate = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6327/buggy-version/src.splititV2.Submenus.java", "BodyUseAPI": [], "Fixed commit": "e59f62e0abcc007e5e790bde557fa4157bb20672", "Url": "https://api.github.com/repos/raphaelfloresca/splititV2", "Date": "2018-04-23T20:27:07Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) > 9) { android.os.StrictMode.ThreadPolicy policy = new android.os.StrictMode.ThreadPolicy.Builder().permitAll().build(); android.os.StrictMode.setThreadPolicy(policy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4822/buggy-version/app.src.main.java.com.sciquizapp.sciquiz.NetworkCommunication.WifiCommunication.java", "BodyUseAPI": [], "Fixed commit": "9dce583bc982c14e9a8170fd3ca06243015dabab", "Url": "https://api.github.com/repos/maximerchrd/learning_tracker", "Date": "2018-01-16T10:33:22Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((go.graphics.SharedGeometry.staticdc) == null) go.graphics.SharedGeometry.staticdc = dc;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9667/buggy-version/go.graphics.src.main.java.go.graphics.SharedGeometry.java", "BodyUseAPI": [], "Fixed commit": "f24751c7562c9f415229b21ddffbf5ccfe04053f", "Url": "https://api.github.com/repos/paulwedeck/settlers-remake", "Date": "2018-07-15T09:26:36Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (nBitmap != null) { nBitmap.recycle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4069/buggy-version/personalstylerlib.src.main.java.com.themejunky.personalstylerlib.bases.activities.photo.PhotoPresenter.java", "BodyUseAPI": ["android.graphics.Bitmap.recycle()"], "Fixed commit": "80bede8e7e1303361fc6fa05844311038c29058a", "Url": "https://api.github.com/repos/themejunky/PersonalStylerLib", "Date": "2018-08-06T11:11:54Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.mappedByteBufferLocater.getLength()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((this.getDDMCodePoint()) == (pcapdb.core.frame.DrdaCodePointType.SQLCARD)) && (drdaPacketLength > (offset + 1))) { int SQL_CODE = this.mappedByteBufferLocater.getInt((offset + 1), java.nio.ByteOrder.LITTLE_ENDIAN); java.lang.String SQL_STATE = this.mappedByteBufferLocater.getUTF8String((offset + 5), 5); java.lang.String SQL_ERRPROC = this.mappedByteBufferLocater.getUTF8String((offset + 10), 8); pcapdb.core.packet.SQLResult sqlResult = new pcapdb.core.packet.SQLResult(SQL_CODE, SQL_STATE, SQL_ERRPROC); pcapdb.core.packet.DrdaDDMParameter drdaDDMParameter = new pcapdb.core.packet.DrdaDDMParameter(); drdaDDMParameter.setDrdaCodePointType(DrdaCodePointType.SQLCARD); drdaDDMParameter.setData(sqlResult); this.drdaDDMParameters.add(drdaDDMParameter); return this.drdaDDMParameters; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7777/buggy-version/PcapDB.Core.src.pcapdb.core.packet.DrdaPacket.java", "BodyUseAPI": ["this.mappedByteBufferLocater.getUTF8String(int,int)", "this.mappedByteBufferLocater.getInt(int,java.nio.ByteOrder)", "this.mappedByteBufferLocater.getUTF8String(int,int)"], "Fixed commit": "0b524c561be64e601ba8ef86ab252e9db7674fba", "Url": "https://api.github.com/repos/AndrewDi/PcapDB", "Date": "2018-08-14T14:06:45Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (adapter != null) spinner.setAdapter(adapter);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/827/buggy-version/app.src.main.java.com.azbuka.gshabalov.tsd_alcho_app.Activity.Settings.java", "BodyUseAPI": ["android.widget.Spinner.setAdapter(android.widget.ArrayAdapter<java.lang.String>)"], "Fixed commit": "7a963113bd730fab15e0257a4b4b59fd244d98e5", "Url": "https://api.github.com/repos/grshabl/Scan", "Date": "2018-04-03T06:20:58Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFirebaseUser) != null) { mFirebaseDatabaseReference.child(mx.com.esom.is.gofood.CART).child(mFirebaseUser.getUid()).addValueEventListener(new com.google.firebase.database.ValueEventListener() { @java.lang.Override public void onDataChange(com.google.firebase.database.DataSnapshot dataSnapshot) { contadorItemsCarrito = dataSnapshot.getChildrenCount(); } @java.lang.Override public void onCancelled(com.google.firebase.database.DatabaseError databaseError) { } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4389/buggy-version/app.src.main.java.mx.com.esom.is.gofood.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "51a302dff3d9e6a7cd4dfe80db785808ba75b6d1", "Url": "https://api.github.com/repos/sibirahey/GoFood", "Date": "2018-09-11T01:13:49Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((publicCalls) == null) { eu.stamp.botsing.StackTrace givenStackTrace = eu.stamp.botsing.CrashProperties.getInstance().getStackTrace(); java.lang.String targetClass = givenStackTrace.getTargetClass(); java.util.List<org.evosuite.graphs.cfg.BytecodeInstruction> instructions = org.evosuite.graphs.cfg.BytecodeInstructionPool.getInstance(org.evosuite.TestGenerationContext.getInstance().getClassLoaderForSUT()).getInstructionsIn(targetClass); publicCalls = getPublicCalls(givenStackTrace, instructions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3206/buggy-version/botsing-reproduction.src.main.java.eu.stamp.botsing.ga.strategy.operators.GuidedSearchUtility.java", "BodyUseAPI": [], "Fixed commit": "8e519f073890bad88adec108a7abc0dc0a85804d", "Url": "https://api.github.com/repos/STAMP-project/botsing", "Date": "2018-10-17T15:34:01Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fr.xtof54.jtransapp.FileUtils.goeson) java.lang.System.out.println(\"detjtrapp fini download ok\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4906/buggy-version/src.fr.xtof54.jtransapp.FileUtils.java", "BodyUseAPI": [], "Fixed commit": "a5c1a885a27e6b529405716a294a4739e549e681", "Url": "https://api.github.com/repos/cerisara/small-speech", "Date": "2018-10-27T10:53:06Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (chain != null) { for (java.security.cert.X509Certificate chainCert : chain) { org.json.simple.JSONObject chi = man.pki.certInfo(chainCert, false, false, null); chainInf.add(chi); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1269/buggy-version/src.main.java.kz.ncanode.api.version.v10.methods.XMLVerify.java", "BodyUseAPI": [], "Fixed commit": "f5ef218d47b5e3cea91c46b2befcad5afbf48ae4", "Url": "https://api.github.com/repos/malikzh/NCANode", "Date": "2018-10-23T09:57:16Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (chain != null) { for (java.security.cert.X509Certificate chainCert : chain) { org.json.simple.JSONObject chi = man.pki.certInfo(chainCert, false, false, null); chainInf.add(chi); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1269/buggy-version/src.main.java.kz.ncanode.api.version.v10.methods.X509Info.java", "BodyUseAPI": [], "Fixed commit": "f5ef218d47b5e3cea91c46b2befcad5afbf48ae4", "Url": "https://api.github.com/repos/malikzh/NCANode", "Date": "2018-10-23T09:57:16Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (chain != null) { for (java.security.cert.X509Certificate chainCert : chain) { org.json.simple.JSONObject chi = man.pki.certInfo(chainCert, false, false, null); chainInf.add(chi); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1269/buggy-version/src.main.java.kz.ncanode.api.version.v10.methods.PKCS12Info.java", "BodyUseAPI": [], "Fixed commit": "f5ef218d47b5e3cea91c46b2befcad5afbf48ae4", "Url": "https://api.github.com/repos/malikzh/NCANode", "Date": "2018-10-23T09:57:16Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (diffHours > 0) { tv_time.setText(java.lang.String.format(context.getString(R.string.ago), diffHours)); }else { long diffMinutes = (diff / (60 * 1000)) % 60; tv_time.setText(java.lang.String.format(context.getString(R.string.ago_min), diffMinutes)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6644/buggy-version/app.src.main.java.com.ninos.adapters.NotificationAdapter.java", "BodyUseAPI": ["java.lang.String.format(context.getString(R.string.ago),int)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "9ee229db73f1f15b3a2677f9fdfb2ef88ee681e6", "Url": "https://api.github.com/repos/ninosapp/Ninos", "Date": "2018-02-24T04:46:15Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ninos.adapters.NotificationAdapter.NotificationViewHolder.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(notification.getData().getPostTitle())) { postTitle = \"one of your post\"; }else { postTitle = notification.getData().getPostTitle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6644/buggy-version/app.src.main.java.com.ninos.adapters.NotificationAdapter.java", "BodyUseAPI": ["com.ninos.models.Notification.getData()", "notification.getData().getPostTitle()"], "Fixed commit": "9ee229db73f1f15b3a2677f9fdfb2ef88ee681e6", "Url": "https://api.github.com/repos/ninosapp/Ninos", "Date": "2018-02-24T04:46:15Z"},
{"Line": "=>666", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (id.isObjectId()) { return id.asObjectId().getValue().toHexString(); }else { return org.restheart.utils.JsonUtils.minify(org.restheart.utils.JsonUtils.toJson(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9442/buggy-version/src.main.java.org.restheart.utils.URLUtils.java", "BodyUseAPI": ["org.restheart.utils.JsonUtils.minify(org.restheart.utils.JsonUtils.toJson(id))", "id.asObjectId().getValue().toHexString()", "id.asObjectId().getValue()", "org.bson.BsonValue.asObjectId()", "org.restheart.utils.JsonUtils.toJson(org.bson.BsonValue)"], "Fixed commit": "a04fa4239b2bdb835c428f34bfad0b95b9da85d3", "Url": "https://api.github.com/repos/SoftInstigate/restheart", "Date": "2018-05-08T17:50:22Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (((userCountryCode == null) || (userCityName == null)) || (userOpenWeatherMapApiId == null)) { java.lang.System.err.println(\"Error : a line is probably missing in the application.properties file\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8412/buggy-version/src.main.java.com.cma.homeassistant.HomeAssistant.java", "BodyUseAPI": [], "Fixed commit": "14ecd942b5679657ebac2ce7762e823b5031e581", "Url": "https://api.github.com/repos/clementmaerten/home-assistant", "Date": "2018-09-06T19:28:38Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rd.user.getDrivenKm()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sum > driven_km) { driven_km = 0; }else { driven_km -= sum; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1878/buggy-version/app.src.main.java.com.thestreetcodecompany.roady.SettingsBackend.java", "BodyUseAPI": [], "Fixed commit": "e25035daabcf3775d37c2d21332305b82dab033a", "Url": "https://api.github.com/repos/stepheschaubes/SW-Entwicklung-XP-Morning-05", "Date": "2018-06-06T09:07:09Z"},
{"Line": "=>627", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (modelElement instanceof org.framed.iorm.model.Shape) { org.eclipse.graphiti.mm.pictograms.Shape groupElementShape = pictogramElementCreateService.createShape(modelContainerShape, true); org.eclipse.graphiti.mm.algorithms.Text groupElementText = graphicAlgorithmService.createText(groupElementShape, org.framed.iorm.ui.UIUtil.getGroupingFeaturesElementText(modelElement)); groupElementText.setForeground(manageColor(literals.COLOR_TEXT)); org.framed.iorm.ui.UIUtil.setShape_IdValue(groupElementShape, literals.SHAPE_ID_GROUP_ELEMENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5587/buggy-version/org.framed.iorm.ui.core.group.GroupPattern.java", "BodyUseAPI": ["org.framed.iorm.ui.UIUtil.getGroupingFeaturesElementText(org.framed.iorm.model.ModelElement)", "group.GroupPattern.createText(org.eclipse.graphiti.mm.pictograms.Shape,org.framed.iorm.ui.UIUtil.getGroupingFeaturesElementText(modelElement))"], "Fixed commit": "59629a323583546206aea6cfd9ae0765eebeeb5d", "Url": "https://api.github.com/repos/Eden-06/FRaMED-2.0", "Date": "2018-03-12T09:00:24Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.core.MethodParameter.getParameterAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (annotation == null) { return new java.lang.Error(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3595/buggy-version/app.src.main.java.io.github.hwestphal.mvc.JsonRequestParamResolver.java", "BodyUseAPI": [], "Fixed commit": "7c5cfcd15050b097ce79e4a1a48ef3de84230e60", "Url": "https://api.github.com/repos/hwestphal/spring-boot-todo-vue", "Date": "2018-05-17T16:30:58Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.text.TextUtils.isEmpty(cityRequest)) || (android.text.TextUtils.isEmpty(cityIdRequest))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3318/buggy-version/app.src.main.java.com.joe.holi.remote.widget.HoliBaseWidgetProvider.java", "BodyUseAPI": [], "Fixed commit": "834d0ce99c8f53d8ff532c97686eb129236d86db", "Url": "https://api.github.com/repos/joj1989/Holiday", "Date": "2018-09-13T07:05:02Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((one.getCategorizedSortOrder()) == null) && ((two.getCategorizedSortOrder()) == null)) { return 0; }else if ((one.getCategorizedSortOrder()) == null) { return 1; }else if ((two.getCategorizedSortOrder()) == null) { return -1; }else { return java.lang.Integer.compare(one.getCategorizedSortOrder(), two.getCategorizedSortOrder()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8784/buggy-version/edu-services.gradebook-service.hibernate.src.java.org.sakaiproject.tool.gradebook.Assignment.java", "BodyUseAPI": ["org.sakaiproject.tool.gradebook.Assignment.getCategorizedSortOrder()", "org.sakaiproject.tool.gradebook.Assignment.getCategorizedSortOrder()", "org.sakaiproject.tool.gradebook.Assignment.getCategorizedSortOrder()", "java.lang.Integer.compare(one.getCategorizedSortOrder(),two.getCategorizedSortOrder())", "org.sakaiproject.tool.gradebook.Assignment.getCategorizedSortOrder()"], "Fixed commit": "9a5fff797b21126866e08ed4df71f5db7c2ba378", "Url": "https://api.github.com/repos/txstate-etc/sakai", "Date": "2018-05-29T16:40:31Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(value.matches(\"[A-Z]{3}[0-9]{6}\"))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2557/buggy-version/src.main.java.com.github.jrry.pvl.PVL_IdentityCardValidator.java", "BodyUseAPI": [], "Fixed commit": "d2eb273a0994ebe8c06d524d5a1a7ae3d01aac0e", "Url": "https://api.github.com/repos/jrry/pvl", "Date": "2018-01-14T19:21:03Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((description) == null) { description = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1285/buggy-version/app.src.main.java.me.mvega.foodapp.EditProfileFragment.java", "BodyUseAPI": [], "Fixed commit": "71954781cc437082205c10de9cd3cf8cea6cfeda", "Url": "https://api.github.com/repos/MarMigMon/doof", "Date": "2018-08-03T00:38:01Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.agmbat.imsdk.asmack.XMPPManager.getInstance().isLogin()) { com.agmbat.imsdk.asmack.XMPPManager.getInstance().getRosterManager().reloadRoster(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5621/buggy-version/app.src.main.java.com.agmbat.meetyou.MainTabActivity.java", "BodyUseAPI": [], "Fixed commit": "c71c96f2c525bb442b0ea5c177c2893ca84c5534", "Url": "https://api.github.com/repos/hustpeng/meet", "Date": "2018-08-21T05:03:31Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.agmbat.imsdk.asmack.XMPPManager.getInstance().isLogin()) { com.agmbat.imsdk.asmack.XMPPManager.getInstance().getRosterManager().reloadRoster(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5621/buggy-version/app.src.main.java.com.agmbat.meetyou.MainTabActivity.java", "BodyUseAPI": [], "Fixed commit": "c71c96f2c525bb442b0ea5c177c2893ca84c5534", "Url": "https://api.github.com/repos/hustpeng/meet", "Date": "2018-08-21T05:03:31Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (idx >= 0) { openshiftToken = openshiftToken.substring((idx + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3555/buggy-version/addons.osio-addon.src.main.java.io.fabric8.forge.generator.kubernetes.KubernetesClientFactory.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "e701d796ce4d2a792bdbbde74a2f8c797581db7b", "Url": "https://api.github.com/repos/fabric8-launcher/launcher-backend", "Date": "2018-01-24T17:41:21Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.nessus.cmd.CmdLineClient.StreamGobbler.result()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"Error: merkledag: not found\".equals(errmsg)) { cause = new io.nessus.cmd.MerkleNotFoundException(cmdLine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2080/buggy-version/api.src.main.java.io.nessus.cmd.CmdLineClient.java", "BodyUseAPI": [], "Fixed commit": "0074393ee05406ee00f6c235329c171e2201c1a8", "Url": "https://api.github.com/repos/tdiesler/nessus", "Date": "2018-07-24T20:06:13Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (contextItem != null) { items = org.exist.xquery.Atomize.atomize(contextItem.toSequence()); }else { items = org.exist.xquery.value.Sequence.EMPTY_SEQUENCE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4911/buggy-version/src.org.exist.xquery.functions.fn.FunData.java", "BodyUseAPI": ["org.exist.xquery.Atomize.atomize(contextItem.toSequence())", "org.exist.xquery.value.Item.toSequence()"], "Fixed commit": "101ce0a382719451336944758b7de172b2294b1f", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-07-03T08:58:35Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.abs(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (diff > k) { hashMap.put(nums[i], i); }else if (diff <= k) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7217/buggy-version/Leetcode.src.HashTables.ContainsDuplicateII.java", "BodyUseAPI": [], "Fixed commit": "012ae3d8e7f1ef8bb9a808abda8342aee6c2d4ab", "Url": "https://api.github.com/repos/veereshkamble/Software-Engineer-Interview-Preparation", "Date": "2018-07-16T02:21:49Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mlistener) != null) { mlistener.onMultiselectEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9794/buggy-version/app.src.main.java.com.userempowermentlab.kidsrecorder.FileViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "274c949be083e31da4e8befc030a228ae5ee89a9", "Url": "https://api.github.com/repos/DrustZ/KidsRecorder", "Date": "2018-07-20T04:40:25Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.ticksExisted) * (speed)) > (range)) { this.setDead(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/447/buggy-version/src.main.java.com.crowsofwar.avatar.common.entity.EntityShockwave.java", "BodyUseAPI": [], "Fixed commit": "b4bfbdb7c712c9456969c71a0059e00b15511358", "Url": "https://api.github.com/repos/ProjectKorra/AvatarMod", "Date": "2018-10-05T22:16:47Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((seed) == 5) { actual = new int[][]{ new int[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9 }, new int[]{ 4, 5, 6, 7, 8, 9, 1, 2, 3 }, new int[]{ 7, 8, 9, 1, 2, 3, 4, 5, 6 }, new int[]{ 2, 3, 1, 5, 6, 4, 8, 9, 7 }, new int[]{ 5, 6, 4, 8, 9, 7, 2, 3, 1 }, new int[]{ 8, 9, 7, 2, 3, 1, 5, 6, 4 }, new int[]{ 3, 1, 2, 6, 4, 5, 9, 7, 8 }, new int[]{ 6, 4, 5, 9, 7, 8, 3, 1, 2 }, new int[]{ 9, 7, 8, 3, 1, 2, 6, 4, 5 } }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3770/buggy-version/Sudoku.java", "BodyUseAPI": [], "Fixed commit": "d9e9e7a9efcd30cf5f21eb6c79a6554a0f8ce0b0", "Url": "https://api.github.com/repos/britnicanale/Final-Project-Sudoku", "Date": "2018-01-22T04:37:56Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.body()) != null) { com.blueangels.Utils.PreferencesAppHelper.setUserId(java.lang.String.valueOf(response.body().getId())); es.dmoral.toasty.Toasty.success(mContext, \"Login Successful!\").show(); startActivity(new android.content.Intent(mContext, com.blueangels.Activity.MainActivity.class)); }else es.dmoral.toasty.Toasty.error(mContext, \"In-Valid User Name or Password\").show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/999/buggy-version/app.src.main.java.com.blueangels.Activity.LoginActivity.java", "BodyUseAPI": ["java.lang.String.valueOf(response.body().getId())", "retrofit2.Response<com.blueangels.Model.User>.body()", "com.blueangels.Utils.PreferencesAppHelper.setUserId(java.lang.String)", "response.body().getId()"], "Fixed commit": "43fbadbbaa7da9d1b2e76af1481c7a3b2ba1c755", "Url": "https://api.github.com/repos/ashithvl/mVotingApp", "Date": "2018-03-05T19:24:41Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isJoined)) { lastEvent = event; if (event.isMenuIsOpened()) { event.setMenuIsOpened(false); }else { for (com.alamkanak.weekview.WeekViewEvent e : list) { e.setMenuIsOpened(false); } event.setMenuIsOpened(true); } weekView.invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7647/buggy-version/app.src.main.java.com.maxml.timer.ui.fragments.WeekCalendarFragment.java", "BodyUseAPI": [], "Fixed commit": "b5296b07397921ac8d4cccb04767e851a09cea89", "Url": "https://api.github.com/repos/maxml/AutoTimeHelper", "Date": "2018-02-26T18:03:50Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (y > 0) { if (((board[(y - 1)][x]) != null) && ((board[(y - 1)][x].getMyPlayer()) != (attack.getMyPlayer()))) { board[(y - 1)][x].setHealth(((board[(y - 1)][x].getHealth()) - (attack.getAttack()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7130/buggy-version/Driver.java", "BodyUseAPI": ["board[(y - 1)][x].getMyPlayer()", "board[(y - 1)][x].setHealth(((board[(y - 1)][x].getHealth()) - (attack.getAttack())))", "board[(y - 1)][x].getHealth()"], "Fixed commit": "2581ebb51e399fb8b21437825a4016228e7dfac7", "Url": "https://api.github.com/repos/KNDickens/JavaIIFinalProject", "Date": "2018-05-01T06:25:19Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (y < 7) { if (((board[(y + 1)][x]) != null) && ((board[(y + 1)][x].getMyPlayer()) != (attack.getMyPlayer()))) { board[(y + 1)][x].setHealth(((board[(y + 1)][x].getHealth()) - (attack.getAttack()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7130/buggy-version/Driver.java", "BodyUseAPI": ["board[(y + 1)][x].setHealth(((board[(y + 1)][x].getHealth()) - (attack.getAttack())))", "board[(y + 1)][x].getHealth()", "board[(y + 1)][x].getMyPlayer()"], "Fixed commit": "2581ebb51e399fb8b21437825a4016228e7dfac7", "Url": "https://api.github.com/repos/KNDickens/JavaIIFinalProject", "Date": "2018-05-01T06:25:19Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (x < 7) { if (((board[y][(x + 1)]) != null) && ((board[y][(x + 1)].getMyPlayer()) != (attack.getMyPlayer()))) { board[y][(x + 1)].setHealth(((board[y][(x + 1)].getHealth()) - (attack.getAttack()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7130/buggy-version/Driver.java", "BodyUseAPI": ["board[y][(x + 1)].getMyPlayer()", "board[y][(x + 1)].getHealth()", "board[y][(x + 1)].setHealth(((board[y][(x + 1)].getHealth()) - (attack.getAttack())))"], "Fixed commit": "2581ebb51e399fb8b21437825a4016228e7dfac7", "Url": "https://api.github.com/repos/KNDickens/JavaIIFinalProject", "Date": "2018-05-01T06:25:19Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (x > 0) { if (((board[y][(x - 1)]) != null) && ((board[y][(x - 1)].getMyPlayer()) != (attack.getMyPlayer()))) { board[y][(x - 1)].setHealth(((board[y][(x - 1)].getHealth()) - (attack.getAttack()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7130/buggy-version/Driver.java", "BodyUseAPI": ["board[y][(x - 1)].getHealth()", "board[y][(x - 1)].getMyPlayer()", "board[y][(x - 1)].setHealth(((board[y][(x - 1)].getHealth()) - (attack.getAttack())))"], "Fixed commit": "2581ebb51e399fb8b21437825a4016228e7dfac7", "Url": "https://api.github.com/repos/KNDickens/JavaIIFinalProject", "Date": "2018-05-01T06:25:19Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (degree < 0) degree += 360;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/277/buggy-version/app.src.main.java.io.pslab.activity.CompassActivity.java", "BodyUseAPI": [], "Fixed commit": "75fe31471ce4654152c699cbb14d6c852fc75c44", "Url": "https://api.github.com/repos/yatri1609/pslab-android", "Date": "2018-08-07T13:08:55Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (degree < 0) degree += 360;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/277/buggy-version/app.src.main.java.io.pslab.activity.CompassActivity.java", "BodyUseAPI": [], "Fixed commit": "75fe31471ce4654152c699cbb14d6c852fc75c44", "Url": "https://api.github.com/repos/yatri1609/pslab-android", "Date": "2018-08-07T13:08:55Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rawLookup == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.COMMA)) && (rawLookup2 == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.QUOTED_STRING_LITERAL))) { return true; }else if ((rawLookup == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.LEFT_BRACE)) && (rawLookup2 == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.IDENTIFIER))) { if (latestDoneMarker != null) { com.intellij.psi.tree.IElementType tokenType = latestDoneMarker.getTokenType(); if (((tokenType == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.CALLABLE_UNIT_SIGNATURE)) || (tokenType == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.OBJECT_CALLABLE_UNIT_SIGNATURE))) || (tokenType == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.WORKER_DEFINITION))) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2723/buggy-version/src.main.gen.org.ballerinalang.plugins.idea.parser.BallerinaParserUtil.java", "BodyUseAPI": [], "Fixed commit": "e33cb830b0f998cef1ede0a7a1a004c5c8a677a3", "Url": "https://api.github.com/repos/Shan1024/ballerina-idea-plugin", "Date": "2018-04-13T19:45:10Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.lang.LighterASTNode.getTokenType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tokenType == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.RECORD_KEY_VALUE)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2723/buggy-version/src.main.gen.org.ballerinalang.plugins.idea.parser.BallerinaParserUtil.java", "BodyUseAPI": [], "Fixed commit": "e33cb830b0f998cef1ede0a7a1a004c5c8a677a3", "Url": "https://api.github.com/repos/Shan1024/ballerina-idea-plugin", "Date": "2018-04-13T19:45:10Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((beverageList.size()) == 0) { mListener.showError(getString(R.string.favourite_list_is_empty)); }else { mListener.showData(); mBeveragesAdapter.setBeverages(beverageList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8597/buggy-version/app.src.main.java.ch.sheremet.katarina.cocktailspro.beveragelist.BeverageListFragment.java", "BodyUseAPI": ["ch.sheremet.katarina.cocktailspro.beveragelist.BeverageListAdapter.setBeverages(java.util.List<ch.sheremet.katarina.cocktailspro.model.Beverage>)"], "Fixed commit": "083af208122c3d34a5593776fb419185768abace", "Url": "https://api.github.com/repos/ksheremet/CocktailsPro", "Date": "2018-08-17T23:28:44Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mikepenz.materialdrawer.Drawer.getDrawerItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(vitalypanov.phototracker.utilities.Utils.isNull(menuSync))) { long notSyncedTracksCount = vitalypanov.phototracker.database.TrackDbHelper.get(getContext()).getNotSyncedTracksCount(); menuSync.withEnabled((notSyncedTracksCount > 0)); menuSync.withBadge((notSyncedTracksCount > 0 ? java.lang.String.valueOf(notSyncedTracksCount) : \"\")); mMenu.updateItem(menuSync); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9126/buggy-version/app.src.main.java.vitalypanov.phototracker.StartScreenFragment.java", "BodyUseAPI": ["com.mikepenz.materialdrawer.model.PrimaryDrawerItem.withBadge((notSyncedTracksCount > 0 ? java.lang.String.valueOf(notSyncedTracksCount) : \"\"))", "com.mikepenz.materialdrawer.Drawer.updateItem(com.mikepenz.materialdrawer.model.PrimaryDrawerItem)", "com.mikepenz.materialdrawer.model.PrimaryDrawerItem.withEnabled(boolean)"], "Fixed commit": "cf084cbf286461d6085b13e36f4a3a800d44407f", "Url": "https://api.github.com/repos/panovvitalik/PhotoTracker", "Date": "2018-04-10T10:14:54Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((foundMatch) || (foundNonMaxMatch)) { if ((!(foundMatch)) && (foundNonMaxMatch)) { restoreNonMaxMatchState(); } potentialTokensContainMatches = addFoundTokenToPotentialTokensIfThereIsOne(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4827/buggy-version/src.main.java.io.bdrc.lucene.sa.SkrtWordTokenizer.java", "BodyUseAPI": [], "Fixed commit": "098e87388133744dd1400858cea30d5f90e7445b", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/lucene-sa", "Date": "2018-06-18T15:40:02Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(bRun)) { bRun = true; BeginPlay(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8694/buggy-version/app.src.main.java.my.neomer.tapper.GameSurface.java", "BodyUseAPI": [], "Fixed commit": "6361f577d09197803fad38cd5b11698335baa388", "Url": "https://api.github.com/repos/Neomer/Android_Tapper", "Date": "2018-08-16T13:08:42Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLinux) { setNewSamplesHeader(\"Filesystem:\"); }else { setNewSamplesHeader(\"extended device statistics\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2333/buggy-version/pda-parsers.src.main.java.de.nmichael.pda.parser.Iostat.java", "BodyUseAPI": [], "Fixed commit": "6290a8b600598ae454c20e24fe6ada3109bffcc7", "Url": "https://api.github.com/repos/nicmichael/pda", "Date": "2018-04-17T17:10:27Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (files != null) { for (java.io.File file : files) { try { nemo.plugin.sharedinv.SharedInventory inv = new nemo.plugin.sharedinv.SharedInventory(this, file); inventoriesByName.put(inv.getName(), inv); } catch (java.io.IOException e) { e.printStackTrace(); plugin.getLogger().info((\"Failed to load SharedInventory for \" + (file.getName()))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4190/buggy-version/src.nemo.plugin.sharedinv.SharedInventoryManager.java", "BodyUseAPI": [], "Fixed commit": "9aa9b121c5592f2d6de52095cee3867f6dc42031", "Url": "https://api.github.com/repos/nemosource/plugin-SharedInv", "Date": "2018-04-16T10:30:46Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rescribe.model.book_appointment.doctor_data.DoctorList.getDocName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (doctorForIcon.contains(\"Dr. \")) { doctorForIcon = doctorForIcon.replace(\"Dr. \", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/556/buggy-version/app.src.main.java.com.rescribe.adapters.book_appointment.SortByClinicAndDoctorNameAdapter.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "8e0c383a481e69265a437a9fedf62e07a3a4c5e2", "Url": "https://api.github.com/repos/sandeepbahalkar123/myrescribe_repo", "Date": "2018-05-10T07:02:07Z"},
{"Line": "=>630", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCommonDay) { dayView.setTextColor(dayOfMonthTextColor); }else if ((currentMonthIndex) == 0) { drawCurrentDay(currentDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7697/buggy-version/materialcalendarview.src.main.java.com.leeboonkong.materialcalendarview.view.CalendarView.java", "BodyUseAPI": [], "Fixed commit": "406b52b2b3f3d93f91f1aeb170d349e4c90d1cdc", "Url": "https://api.github.com/repos/LeeBoonKong/Material-CalendarView", "Date": "2018-10-31T05:49:06Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length < 0) { return \"Error: Wrong Argument: Length of random number was negativ. An positive number is required\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9508/buggy-version/TextChanger2018-Task4.1.src.randomGenerator.RandomNumber.java", "BodyUseAPI": [], "Fixed commit": "5d5b43acbaa42169e15a2415b2ff7a7b458ab51f", "Url": "https://api.github.com/repos/TUBS-ISF/SPL2018.Project.16", "Date": "2018-07-08T11:51:34Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length < 0) { return \"Error: Wrong Argument: Length of random number was negativ. An positive number is required\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9508/buggy-version/TextChanger2018-Task4.1.src.randomGenerator.RandomString.java", "BodyUseAPI": [], "Fixed commit": "5d5b43acbaa42169e15a2415b2ff7a7b458ab51f", "Url": "https://api.github.com/repos/TUBS-ISF/SPL2018.Project.16", "Date": "2018-07-08T11:51:34Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length < 0) { return \"Error: Wrong Argument: Length of random number was negativ. An positive number is required\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9508/buggy-version/TextChanger2018-Task4.1.src.randomGenerator.RandomLetters.java", "BodyUseAPI": [], "Fixed commit": "5d5b43acbaa42169e15a2415b2ff7a7b458ab51f", "Url": "https://api.github.com/repos/TUBS-ISF/SPL2018.Project.16", "Date": "2018-07-08T11:51:34Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.axis2.util.JavaUtils.isTrueExplicitly(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (preservedCaseSensitive) { userRoleList = java.util.Arrays.asList(userRoles); }else { userRoleList = new java.util.ArrayList<java.lang.String>(); for (java.lang.String aRole : userRoles) { userRoleList.add(aRole.toLowerCase()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4055/buggy-version/components.apimgt.org.wso2.carbon.apimgt.keymgt.src.main.java.org.wso2.carbon.apimgt.keymgt.issuers.RoleBasedScopesIssuer.java", "BodyUseAPI": [], "Fixed commit": "52fd4636295fc8f526c20c8851dd800a2cba6ead", "Url": "https://api.github.com/repos/wso2/carbon-apimgt", "Date": "2018-05-14T12:31:42Z"},
{"Line": "=>1852", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.restcomm.android.sdk.fcm.FcmConfigurationHandler.registerForPush(java.util.HashMap<java.lang.String, java.lang.Object>,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!neededUpdate) { if (!isUpdate) { registrationFsm.fire(RegistrationFsm.FSMEvent.pushInitializationRegistrationNotNeededEvent, new org.restcomm.android.sdk.util.RegistrationFsmContext(cachedConnectivityStatus, RCClient.ErrorCodes.SUCCESS, org.restcomm.android.sdk.RCClient.errorText(RCClient.ErrorCodes.SUCCESS))); }else { registrationFsm.fire(RegistrationFsm.FSMEvent.pushReconfigureRegistrationNotNeededEvent, new org.restcomm.android.sdk.util.RegistrationFsmContext(cachedConnectivityStatus, RCClient.ErrorCodes.SUCCESS, org.restcomm.android.sdk.RCClient.errorText(RCClient.ErrorCodes.SUCCESS))); } }else { org.restcomm.android.sdk.RCDevice.state = org.restcomm.android.sdk.RCDevice.DeviceState.OFFLINE; if (isAttached()) { this.listener.onConnectivityUpdate(this, RCDeviceListener.RCConnectivityStatus.RCConnectivityStatusNone); }else { org.restcomm.android.sdk.util.RCLogger.w(org.restcomm.android.sdk.RCDevice.TAG, \"RCDeviceListener event suppressed since Restcomm Client Service not attached: onConnectivityUpdate() due to new push registering\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1998/buggy-version/restcomm.android.sdk.src.main.java.org.restcomm.android.sdk.RCDevice.java", "BodyUseAPI": [], "Fixed commit": "6c9f367dadb0448084a8d4fab06bd22e333d0a69", "Url": "https://api.github.com/repos/ognjenns/restcomm-android-sdk", "Date": "2018-01-11T15:33:59Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 27) { offset = 135; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/360/buggy-version/library.ui.src.main.java.com.google.android.exoplayer2.ui.DefaultTimeBar.java", "BodyUseAPI": [], "Fixed commit": "cf28344b41591cf31fb69fca0d9978f663735634", "Url": "https://api.github.com/repos/Codebear98/ExoPlayer", "Date": "2018-07-04T03:05:37Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gameSummaryForm.homerun.get(i).equals(\"\")) { gameSummaryForm.homerun.add(i, \"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2948/buggy-version/JCBLScore.src.main.java.cx.myhome.ckoshien.logic.GameSummaryLogic.java", "BodyUseAPI": ["gameSummaryForm.homerun.add(int,java.lang.String)"], "Fixed commit": "0271d312dbd56109bf26cb578123b3f5478383fa", "Url": "https://api.github.com/repos/ckoshien/JCBLScore", "Date": "2018-04-21T08:25:46Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gameSummaryForm.pa.get(i).equals(\"\")) { gameSummaryForm.pa.add(i, \"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2948/buggy-version/JCBLScore.src.main.java.cx.myhome.ckoshien.logic.GameSummaryLogic.java", "BodyUseAPI": ["gameSummaryForm.pa.add(int,java.lang.String)"], "Fixed commit": "0271d312dbd56109bf26cb578123b3f5478383fa", "Url": "https://api.github.com/repos/ckoshien/JCBLScore", "Date": "2018-04-21T08:25:46Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valueSet) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9431/buggy-version/org.eclipse.scout.rt.ui.html.src.main.java.org.eclipse.scout.rt.ui.html.json.form.fields.smartfield.JsonSmartField.java", "BodyUseAPI": [], "Fixed commit": "5d6ef25e94c790b90a7aaaae967ab787d7291884", "Url": "https://api.github.com/repos/eclipse/scout.rt", "Date": "2018-03-13T14:53:43Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mCursor == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2103/buggy-version/app.src.main.java.com.example.android.popularmovies.FavMoviesAdapter.java", "BodyUseAPI": [], "Fixed commit": "3404152d68d3354b8046784c8e9e90a2452be87c", "Url": "https://api.github.com/repos/silkster87/PopularMovies", "Date": "2018-02-07T19:35:13Z"},
{"Line": "=>769", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDefaultAccount()) == null) { setDefaultAccount(account.getAddress().getBase58()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6786/buggy-version/account-impl.src.main.java.io.nuls.account.service.impl.AccountServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "723c2f313c5a6311542dce353c6b62b2d02208b6", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-03-22T06:46:03Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.getInstance().extraDebug((\"Mysql value null: \" + column)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9813/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.mysql.MySQL.java", "BodyUseAPI": [], "Fixed commit": "7fc84c502345a2feee5ae5c9467af96a238d4966", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-07-22T01:50:48Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { android.support.v4.graphics.drawable.DrawableCompat.setTint(iconDrawable, getResources().getColor(R.color.layer_ui_icon_enabled)); }else { iconDrawable.mutate().setColorFilter(getResources().getColor(R.color.layer_ui_icon_enabled), PorterDuff.Mode.SRC_IN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1057/buggy-version/layer-atlas.src.main.java.com.layer.ui.composebar.ComposeBar.java", "BodyUseAPI": [], "Fixed commit": "8040c21efbfc69840e96bbce2ccd978be93131cc", "Url": "https://api.github.com/repos/layerhq/Atlas-Android", "Date": "2018-01-25T16:38:38Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.serde2.typeinfo.TypeInfoUtils.getTypeInfoFromTypeString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (typeInfo == null) { return org.apache.kafka.connect.data.Schema.STRING_SCHEMA; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2463/buggy-version/src.main.java.io.confluent.connect.hdfs.csv.CsvSchemaConverter.java", "BodyUseAPI": [], "Fixed commit": "15b027ea47ab35eada42cfeb98145f6ef4443cd5", "Url": "https://api.github.com/repos/DataPipelineInc/kafka-connect-hdfs", "Date": "2018-09-10T11:13:12Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flagIn == (ITooltipFlag.TooltipFlags.ADVANCED)) { tooltip.add(net.minecraft.client.resources.I18n.format(\"tooltip.jewelersconstruct.modifiercout\", com.jarhax.jewelersconstruct.api.JewelryHelper.getModifierCount(stack))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8014/buggy-version/src.main.java.com.jarhax.jewelersconstruct.item.ItemJCon.java", "BodyUseAPI": [], "Fixed commit": "7b53dbc6ae2525d7600f6fdcccbc77de55280c0b", "Url": "https://api.github.com/repos/JarHax/ModJam-5", "Date": "2018-03-31T18:02:22Z"},
{"Line": "=>1000", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dcbis09b.isChecked()) { sC.put(\"lmp_dt\", new java.text.SimpleDateFormat(\"dd-MM-yyyy\").format(dcbis09bdt.getCalendarView().getDate())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2458/buggy-version/app.src.main.java.edu.aku.hassannaqvi.dss_census_sur.activities.SectionBActivity.java", "BodyUseAPI": [], "Fixed commit": "763636374ebfbb92846bd45cb18f030c662365e7", "Url": "https://api.github.com/repos/shznaqvi/DSS-Census", "Date": "2018-05-17T12:29:40Z"},
{"Line": "=>2148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bb.insList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ins.insName.equals(\"shl\")) o.printf(\"\\t\\tshl\\t\\t%s, cl\\n\", src1); else o.printf(\"\\t\\tsar\\t\\t%s, cl\\n\", src1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2749/buggy-version/Compiler.src.NASM.NASMBuilder.java", "BodyUseAPI": [], "Fixed commit": "45f8b7a58a26f8456d563db302e8e6a79d7743c9", "Url": "https://api.github.com/repos/Ldhlwh/Compiler", "Date": "2018-06-10T11:04:56Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cursor.getCount()) > 0) { cursor.moveToFirst(); do { movies.add(fyi.jackson.drew.popularmovies.model.Movie.fromCursor(cursor)); } while (cursor.moveToNext() ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1329/buggy-version/03-popular-movies-part-2.app.src.main.java.fyi.jackson.drew.popularmovies.utils.MovieUtils.java", "BodyUseAPI": ["android.database.Cursor.moveToNext()", "java.util.List<fyi.jackson.drew.popularmovies.model.Movie>.add(fyi.jackson.drew.popularmovies.model.Movie.fromCursor(cursor))", "android.database.Cursor.moveToFirst()", "fyi.jackson.drew.popularmovies.model.Movie.fromCursor(android.database.Cursor)"], "Fixed commit": "919f23a36dd4fefa08412b258d249fe51edf332f", "Url": "https://api.github.com/repos/David-Jackson/Android-Nanodegree", "Date": "2018-05-16T14:04:20Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.allenliu.versionchecklib.v2.ui.VersionService.builder.getVersionBundle()) != null) { if (com.allenliu.versionchecklib.v2.ui.VersionService.builder.isSilentDownload()) { requestPermissionAndDownload(); }else { showVersionDialog(); } }else { com.allenliu.versionchecklib.v2.AllenVersionChecker.getInstance().cancelAllMission(getApplicationContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3209/buggy-version/library.src.main.java.com.allenliu.versionchecklib.v2.ui.VersionService.java", "BodyUseAPI": ["com.allenliu.versionchecklib.v2.builder.DownloadBuilder.isSilentDownload()"], "Fixed commit": "68a3214060d469b477412ede7888d4d13ba50b09", "Url": "https://api.github.com/repos/AlexLiuSheng/CheckVersionLib", "Date": "2018-01-25T07:49:07Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (desiredValue <= 3) { score += 10; }else { score = 300; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8662/buggy-version/app.src.main.java.com.example.android.migrainelist.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6ddda6fd3517adefbf3bfb9c4e1c9094163d2db6", "Url": "https://api.github.com/repos/KayGraphic/MigraineList", "Date": "2018-04-03T16:15:26Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["find_et_editText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(et_editText)) { find_et_editText.setError(\"Enter 0-9\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8662/buggy-version/app.src.main.java.com.example.android.migrainelist.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6ddda6fd3517adefbf3bfb9c4e1c9094163d2db6", "Url": "https://api.github.com/repos/KayGraphic/MigraineList", "Date": "2018-04-03T16:15:26Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node instanceof za.ac.sun.cs.adversarial.domain.DigitsOfPiBoard) { return color * (node.getValue(color)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4083/buggy-version/src.main.java.za.ac.sun.cs.adversarial.algorithm.Negamax.java", "BodyUseAPI": ["za.ac.sun.cs.adversarial.domain.Domain.getValue(int)"], "Fixed commit": "c78d75cace17aba48d853eb31c9205193dc10b22", "Url": "https://api.github.com/repos/PhillipVH/adversarial-search", "Date": "2018-09-27T13:58:53Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node instanceof za.ac.sun.cs.adversarial.domain.DigitsOfPiBoard) { return color * (node.getValue(color)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4083/buggy-version/src.main.java.za.ac.sun.cs.adversarial.algorithm.Negamax.java", "BodyUseAPI": ["za.ac.sun.cs.adversarial.domain.Domain.getValue(int)"], "Fixed commit": "c78d75cace17aba48d853eb31c9205193dc10b22", "Url": "https://api.github.com/repos/PhillipVH/adversarial-search", "Date": "2018-09-27T13:58:53Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node instanceof za.ac.sun.cs.adversarial.domain.DigitsOfPiBoard) { return color * (node.getValue(color)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4083/buggy-version/src.main.java.za.ac.sun.cs.adversarial.algorithm.Negamax.java", "BodyUseAPI": ["za.ac.sun.cs.adversarial.domain.Domain.getValue(int)"], "Fixed commit": "c78d75cace17aba48d853eb31c9205193dc10b22", "Url": "https://api.github.com/repos/PhillipVH/adversarial-search", "Date": "2018-09-27T13:58:53Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (success) { callback.onAppOpened(com.lody.virtual.client.VClientImpl.get().getCurrentPackage(), com.lody.virtual.os.VUserHandle.myUserId()); }else { callback.onOpenFailed(com.lody.virtual.client.VClientImpl.get().getCurrentPackage(), com.lody.virtual.os.VUserHandle.myUserId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6675/buggy-version/VirtualApp.lib.src.main.java.com.lody.virtual.client.hook.delegate.AppInstrumentation.java", "BodyUseAPI": [], "Fixed commit": "85923a0c811a04f110626bb743bfa55ec4d448b9", "Url": "https://api.github.com/repos/android-hacker/VirtualXposed", "Date": "2018-03-12T11:31:06Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (success) { stream = connection.getInputStream(); }else { stream = connection.getErrorStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1106/buggy-version/src.main.java.net.elost.http_client.HttpClientImpl.java", "BodyUseAPI": [], "Fixed commit": "9faf05dc912c742b1620ca472c84bdf79960d978", "Url": "https://api.github.com/repos/Mikord/http-client", "Date": "2018-09-11T09:36:05Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (successStatus) { if (isOctetStream(connection)) { byte[] result = tryReadBinaryResult(connection); response.responseBinaryBody(result); }else { java.lang.String result = tryReadResultString(connection, true); response.responseBody(result); } }else { java.lang.String result = tryReadResultString(connection, false); response.responseBody(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1106/buggy-version/src.main.java.net.elost.http_client.HttpClientImpl.java", "BodyUseAPI": [], "Fixed commit": "9faf05dc912c742b1620ca472c84bdf79960d978", "Url": "https://api.github.com/repos/Mikord/http-client", "Date": "2018-09-11T09:36:05Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.anyCase) { return org.sleuthkit.autopsy.commonfilesearch.InterCasePanel.NO_CASE_SELECTED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5358/buggy-version/Core.src.org.sleuthkit.autopsy.commonfilesearch.InterCasePanel.java", "BodyUseAPI": [], "Fixed commit": "1a08c871c7558245bf8c944b8c3d230e12c45088", "Url": "https://api.github.com/repos/briangsweeney/autopsy", "Date": "2018-08-07T22:10:41Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(primaryTorpedoStore.isEmpty())) { if (!(secondaryTorpedoStore.isEmpty())) { firingSuccess = (primaryTorpedoStore.fire(1)) && (secondaryTorpedoStore.fire(1)); }else { firingSuccess = primaryTorpedoStore.fire(1); } }else if (!(secondaryTorpedoStore.isEmpty())) { firingSuccess = secondaryTorpedoStore.fire(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1594/buggy-version/src.main.java.hu.bme.mit.spaceship.GT4500.java", "BodyUseAPI": ["hu.bme.mit.spaceship.TorpedoStore.fire(int)", "hu.bme.mit.spaceship.TorpedoStore.fire(int)"], "Fixed commit": "b320bd04ebd4c952ae533b0add9fbd16035e23d3", "Url": "https://api.github.com/repos/balmazlitkey/ivt-lab", "Date": "2018-04-20T11:26:01Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jjlr.caveupdate.configuration.config.hasChanged()) { jjlr.caveupdate.configuration.config.save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1381/buggy-version/src.main.java.jjlr.caveupdate.configuration.java", "BodyUseAPI": ["net.minecraftforge.common.config.Configuration.save()"], "Fixed commit": "a4801877e4fbc118264a09783f88ed2dc6da09e4", "Url": "https://api.github.com/repos/jjlrjjlr/Minecraft-Future-Caves", "Date": "2018-07-10T06:40:16Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lastJewelPairs.size()) > 0) { com.acmerobotics.relicrecovery.vision.DynamicJewelTracker.JewelPair jewelPair = lastJewelPairs.get(0); overlay.putText((((jewelPair.redJewel.centroid.x) + \" / \") + (jewelPair.blueJewel.centroid.x)), Overlay.TextAlign.RIGHT, new org.opencv.core.Point((imageWidth - 5), (imageHeight - 75)), new org.opencv.core.Scalar(0, 255, 0), 30); overlay.putText(getJewelPosition().toString(), Overlay.TextAlign.RIGHT, new org.opencv.core.Point((imageWidth - 5), (imageHeight - 40)), new org.opencv.core.Scalar(0, 255, 0), 30); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8250/buggy-version/RobotLib.src.main.java.com.acmerobotics.relicrecovery.vision.DynamicJewelTracker.java", "BodyUseAPI": ["java.util.List<com.acmerobotics.relicrecovery.vision.DynamicJewelTracker.JewelPair>.get(int)"], "Fixed commit": "4fe2f8614518f00a0ef757463dda5845549746b5", "Url": "https://api.github.com/repos/acmerobotics/relic-recovery", "Date": "2018-01-26T07:42:09Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (group != null) { this.nodeSortedList.addAll(group.getDirectChildren()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7383/buggy-version/app.src.main.java.com.keepassdroid.adapters.NodeAdapter.java", "BodyUseAPI": ["com.keepassdroid.database.PwGroup.getDirectChildren()", "android.support.v7.util.SortedList<com.keepassdroid.database.PwNode>.addAll(group.getDirectChildren())"], "Fixed commit": "dd478d7cd409039a66c3079647a024078e876b66", "Url": "https://api.github.com/repos/Kunzisoft/KeePassDX", "Date": "2018-03-09T22:29:20Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.util.io.FileUtil.findFilesByMask(java.util.regex.Pattern,java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(filesByMask.isEmpty())) { result.add(new com.intellij.ide.util.projectWizard.importSources.DetectedProjectRoot(base) { @org.jetbrains.annotations.NotNull @java.lang.Override public java.lang.String getRootTypeName() { return \"Ballerina\"; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4635/buggy-version/src.main.java.org.ballerinalang.plugins.idea.project.BallerinaProjectStructureDetector.java", "BodyUseAPI": [], "Fixed commit": "05ba5a92f09e78512cd8687be41d5018b424ad55", "Url": "https://api.github.com/repos/ballerina-attic/plugin-intellij", "Date": "2018-01-08T08:27:37Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (EDatabaseTypeName.MSSQL.getDisplayName().equals(info.getDbType())) { createStatament = \"conn.createStatement()\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/310/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.editor.properties.controllers.GuessSchemaProcess.java", "BodyUseAPI": [], "Fixed commit": "e97c5d6c464181a6bad526e37dbba2f0bb243ed4", "Url": "https://api.github.com/repos/ttao-talendbj/tdi-studio-se", "Date": "2018-10-15T01:55:08Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((theString.equals(\"1\")) && (!(use_wave))) { showAnimation(\"firefly_in\", \"firefly_in.json\", 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2591/buggy-version/app.src.main.java.com.example.dispensable.popal.CanvasActivity.java", "BodyUseAPI": [], "Fixed commit": "e85a56c9e63800425653912f8cdd58b5f39f888f", "Url": "https://api.github.com/repos/dispensable/popal", "Date": "2018-08-29T10:06:16Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCapturedView) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3762/buggy-version/iconswitch.src.main.java.com.polyak.iconswitch.ViewDragHelper.java", "BodyUseAPI": [], "Fixed commit": "cf1924b35079cc10011cab4241896ef703950869", "Url": "https://api.github.com/repos/parminder93/IconSwitch", "Date": "2018-09-11T13:00:44Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMainSelfTaskModel) != null) { dailySelfData.add(mMainSelfTaskModel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4147/buggy-version/app.src.main.java.com.mdove.passwordguard.main.presenter.MainPresenter.java", "BodyUseAPI": [], "Fixed commit": "7d26041ac6fe3e1055afce2fd5a5b587a0843bac", "Url": "https://api.github.com/repos/zhiaixinyang/PasswordGuard", "Date": "2018-03-27T14:45:55Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMainSelfTaskModel) != null) { passwordData.add(mMainSelfTaskModel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4147/buggy-version/app.src.main.java.com.mdove.passwordguard.main.presenter.MainPresenter.java", "BodyUseAPI": [], "Fixed commit": "7d26041ac6fe3e1055afce2fd5a5b587a0843bac", "Url": "https://api.github.com/repos/zhiaixinyang/PasswordGuard", "Date": "2018-03-27T14:45:55Z"},
{"Line": "=>580", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMainSelfTaskModel) != null) { mCheckData.add(mMainSelfTaskModel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4147/buggy-version/app.src.main.java.com.mdove.passwordguard.main.presenter.MainPresenter.java", "BodyUseAPI": [], "Fixed commit": "7d26041ac6fe3e1055afce2fd5a5b587a0843bac", "Url": "https://api.github.com/repos/zhiaixinyang/PasswordGuard", "Date": "2018-03-27T14:45:55Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((orderEntity.getOrderStatus().getOrderStatusId()) <= (orderDetailsJson.getOrderStatus().getOrderStatusId())) { orderEntity.setOrderStatus(orderDetailsJson.getOrderStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/480/buggy-version/app.src.main.java.com.ordered.report.SyncAdapter.SyncAdapter.java", "BodyUseAPI": ["com.ordered.report.json.models.OrderDetailsJson.getOrderStatus()", "com.ordered.report.models.OrderEntity.setOrderStatus(orderDetailsJson.getOrderStatus())"], "Fixed commit": "3b3948b310ef2cc2a2a3999e9fcf764ea3799ad6", "Url": "https://api.github.com/repos/snithishkumar/CartonPacking", "Date": "2018-08-18T19:13:21Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((orderEntity.getOrderStatus().getOrderStatusId()) <= (orderDetailsJson.getOrderStatus().getOrderStatusId())) { orderEntity.setOrderStatus(orderDetailsJson.getOrderStatus()); orderDAO.updateCortonbookEntity(orderEntity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/480/buggy-version/app.src.main.java.com.ordered.report.SyncAdapter.SyncAdapter.java", "BodyUseAPI": ["com.ordered.report.json.models.OrderDetailsJson.getOrderStatus()", "com.ordered.report.models.OrderEntity.setOrderStatus(orderDetailsJson.getOrderStatus())", "com.ordered.report.dao.OrderDAO.updateCortonbookEntity(com.ordered.report.models.OrderEntity)"], "Fixed commit": "3b3948b310ef2cc2a2a3999e9fcf764ea3799ad6", "Url": "https://api.github.com/repos/snithishkumar/CartonPacking", "Date": "2018-08-18T19:13:21Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((eeConfig.getServer().getHttp()) != null) { port = eeConfig.getServer().getHttp().getPort(); serverUrl = \"http://\" + serverUrl; }else { port = eeConfig.getServer().getHttps().getPort(); serverUrl = \"https://\" + serverUrl; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7732/buggy-version/swagger-ui.src.main.java.com.kumuluz.ee.swagger.ui.SwaggerUiExtension.java", "BodyUseAPI": ["eeConfig.getServer().getHttp().getPort()", "com.kumuluz.ee.common.config.EeConfig.getServer()", "eeConfig.getServer().getHttps().getPort()", "com.kumuluz.ee.common.config.EeConfig.getServer()", "eeConfig.getServer().getHttps()", "eeConfig.getServer().getHttp()"], "Fixed commit": "b4afc46794c5600f81380388f7da6f5256c7afc7", "Url": "https://api.github.com/repos/kumuluz/kumuluzee-swagger", "Date": "2018-01-04T13:18:16Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (is_new) messageRecordList.addFirst(messageRecord);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2527/buggy-version/src.org.thoughtcrime.securesms.SearchHandler.java", "BodyUseAPI": [], "Fixed commit": "92ac0cc390b2d9969c1fa16e88a95c8525003b3a", "Url": "https://api.github.com/repos/Radu-Raicea/SignalAndroid", "Date": "2018-03-19T15:04:16Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getInt(getString(R.string.keys_json_verification))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pin < (PIN_VERIFIED)) { android.widget.Toast.makeText(this, \"Please change password\", Toast.LENGTH_LONG).show(); android.content.Intent intent = new android.content.Intent(this, group9.tcss450.uw.edu.chatappgroup9.PasswordActivity.class); startActivity(intent); }else if (pin == (PIN_VERIFIED)) { android.content.Intent intent = new android.content.Intent(this, group9.tcss450.uw.edu.chatappgroup9.NavigationActivity.class); startActivity(intent); }else { android.widget.Toast.makeText(getApplicationContext(), (email + \", Please verify your pin\"), Toast.LENGTH_LONG).show(); android.content.Intent intent = new android.content.Intent(this, group9.tcss450.uw.edu.chatappgroup9.VerificationActivity.class); java.lang.String getUsername = myUsername.getText().toString(); android.os.Bundle bundle = new android.os.Bundle(); bundle.putString(\"username\", getUsername); intent.putExtras(bundle); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3572/buggy-version/app.src.main.java.group9.tcss450.uw.edu.chatappgroup9.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "99d875dc22247e87c238310fc50bc7d8c2fc6bc0", "Url": "https://api.github.com/repos/tcss450-group9/mobile-app-project", "Date": "2018-05-23T19:01:17Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (plugin.getUuids().containsValue(uuid)) { for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : plugin.getUuids().entrySet()) { if (entry.getValue().equals(uuid)) { java.lang.String n = entry.getKey(); if (((n != null) && (!(n.isEmpty()))) && (!(n.equalsIgnoreCase(\"Error getting name\")))) { return n; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6568/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Misc.PlayerUtils.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "plugin.getUuids().entrySet()", "com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.getUuids()"], "Fixed commit": "e91fd6e8293cbe750adccb5e6613f2becb0c56e2", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-01-21T21:39:35Z"},
{"Line": "=>645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (received) { if (operation.getStyle().equals(OperationType.ONE_WAY)) { soapMessage = operation.getInput().getMessage(); listExt = getWSDLPort().getBinding().getBindingOperation(operationName, null, null).getBindingInput().getExtensibilityElements(); }else { soapMessage = operation.getOutput().getMessage(); listExt = getWSDLPort().getBinding().getBindingOperation(operationName, null, null).getBindingOutput().getExtensibilityElements(); } }else { soapMessage = operation.getInput().getMessage(); listExt = getWSDLPort().getBinding().getBindingOperation(operationName, null, null).getBindingInput().getExtensibilityElements(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2519/buggy-version/extensions.soap.src.jolie.net.SoapProtocol.java", "BodyUseAPI": [], "Fixed commit": "d65ee01cecd6822b16ba83214450480f399993f0", "Url": "https://api.github.com/repos/jolie/jolie", "Date": "2018-06-06T19:21:24Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Objects.equals(num1, \"-\")) { num1 = \"0\"; operator = b.getText().toString(); screen.setText(((num1) + (operator))); }else if (java.util.Objects.equals(num2, \"\")) { operator = b.getText().toString(); screen.setText(((num1) + (operator))); }else if (!(java.util.Objects.equals(num2, \"\"))) { num1 = java.lang.String.valueOf(arithmetic()); num1 = ((num1.indexOf(\".\")) < 0) ? num1 : num1.replaceAll(\"0*$\", \"\").replaceAll(\"\\\\.$\", \"\"); operator = b.getText().toString(); num2 = \"\"; noReadnum2 = false; pressIs = false; screen.setText(((num1) + (operator))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7795/buggy-version/app.src.main.java.com.oks748.calc.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ca97142b453de4c33c8e1f101ab76864c87168d1", "Url": "https://api.github.com/repos/Oks748/caLc", "Date": "2018-02-13T10:19:53Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (su.isEmpty()) { throw new Commands.ScanException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8153/buggy-version/SquirrelGame.src.Commands.CommandScanner.java", "BodyUseAPI": [], "Fixed commit": "815e062434c6157f7ef533da41b30c6353fd2628", "Url": "https://api.github.com/repos/JHarzenetter/SquirrelGame", "Date": "2018-05-07T12:07:01Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valueLatestPrices.isDisposed()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1500/buggy-version/name.abuchen.portfolio.ui.src.name.abuchen.portfolio.ui.views.SecurityDetailsViewer.java", "BodyUseAPI": [], "Fixed commit": "2fecd3e0c61695625f43435da83a0fb611ae17d6", "Url": "https://api.github.com/repos/Ragas13/portfolio", "Date": "2018-10-03T09:35:17Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BpaConstants.WF_RESCHDLE_APPMNT_BUTTON.equalsIgnoreCase(workFlowAction)) { wfmatrix = bpaApplicationWorkflowService.getWfMatrix(application.getStateType(), null, null, additionalRule, application.getCurrentState().getValue(), BpaConstants.WF_DOC_SCRTNY_RE_SCHDLE_PENDING); }else if (((((application.getState()) != null) && (application.getState().getValue().equalsIgnoreCase(org.egov.bpa.transaction.workflow.APPLICATION_STATUS_REGISTERED))) || (application.getState().getValue().equalsIgnoreCase(org.egov.bpa.transaction.workflow.APPLICATION_STATUS_SCHEDULED))) || (application.getState().getValue().equalsIgnoreCase(org.egov.bpa.transaction.workflow.APPLICATION_STATUS_RESCHEDULED))) { wfmatrix = bpaApplicationWorkflowService.getWfMatrix(application.getStateType(), null, null, additionalRule, application.getCurrentState().getValue(), application.getState().getNextAction()); }else { wfmatrix = bpaApplicationWorkflowService.getWfMatrix(application.getStateType(), null, null, additionalRule, application.getCurrentState().getValue(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8871/buggy-version/egov.egov-bpa.src.main.java.org.egov.bpa.transaction.workflow.BpaApplicationWorkflowCustomImpl.java", "BodyUseAPI": [], "Fixed commit": "ec191255c577df8adedeba4a9674c725e57fb088", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2018-02-19T13:32:57Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (joinedList != null) { if (joinedList.isEmpty()) { return new com.gs.collections.impl.list.mutable.FastList(0); } return mapper.mapReturnNullIfIncompleteIndexHit(joinedList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8233/buggy-version/reladomo.src.main.java.com.gs.fw.common.mithra.finder.MappedOperation.java", "BodyUseAPI": ["com.gs.fw.common.mithra.finder.Mapper.mapReturnNullIfIncompleteIndexHit(java.util.List)", "java.util.List.isEmpty()"], "Fixed commit": "7c98e6924f7784fb04447cc98e010ec25f5289f9", "Url": "https://api.github.com/repos/jajodr/reladomo", "Date": "2018-01-23T08:57:08Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) { getSupportActionBar().hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4355/buggy-version/chatview.src.main.java.com.shrikanthravi.chatview.activities.VideoFFActivity.java", "BodyUseAPI": [], "Fixed commit": "70507e88015dcf081b30b73ad22a6744bb42b01a", "Url": "https://api.github.com/repos/shrikanth7698/ChatView", "Date": "2018-02-23T09:05:41Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) { getSupportActionBar().hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4355/buggy-version/chatview.src.main.java.com.shrikanthravi.chatview.activities.ImageFFActivity.java", "BodyUseAPI": [], "Fixed commit": "70507e88015dcf081b30b73ad22a6744bb42b01a", "Url": "https://api.github.com/repos/shrikanth7698/ChatView", "Date": "2018-02-23T09:05:41Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["authenticator.getAuthentication().getPrincipal()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (user.isDoctor()) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8042/buggy-version/src.main.java.com.quantech.control.MainController.java", "BodyUseAPI": [], "Fixed commit": "e72d2483710fc55e27b9054055d9513062d98653", "Url": "https://api.github.com/repos/quantech-bristol/electronic-handover", "Date": "2018-02-14T09:20:05Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URI.getHost()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (host == null) { java.lang.String authority = clientTargetURI.getAuthority(); int index = authority.indexOf(\"@\"); if (index >= 0) { uri += authority.substring((index + 1)); }else { uri += authority; } }else { uri += host; int port = clientTargetURI.getPort(); if (port > 0) { uri += \":\" + port; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7393/buggy-version/com.creditease.uav.monitorframework.src.main.java.com.creditease.uav.profiling.handlers.ClientProfileHandler.java", "BodyUseAPI": [], "Fixed commit": "e654d3c986a90291e0186581ac11299442fd6e87", "Url": "https://api.github.com/repos/BeliefYou8/uavstack", "Date": "2018-08-02T04:06:22Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.selectedBody.getUnlocalizedName().contains(\"overworld\")) breathable = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6226/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": [], "Fixed commit": "14ff2722a98fbf33a314061556ff5b9379c22643", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-01-03T16:38:46Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getContentResolver().update(BookEntry.CONTENT_URI,android.content.ContentValues,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rowsAffected == 0) { android.widget.Toast.makeText(this, getString(R.string.sale_book_error), Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(this, getString(R.string.sale_book), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/950/buggy-version/app.src.main.java.com.example.android.bookstore.CatalogActivity.java", "BodyUseAPI": [], "Fixed commit": "ad19155119ce23cc459757309f766d9abf0f14ad", "Url": "https://api.github.com/repos/AlexanderTopchiy/book-store-app", "Date": "2018-08-02T21:30:53Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((intent.resolveActivity(getPackageManager())) != null) { startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/950/buggy-version/app.src.main.java.com.example.android.bookstore.DetailActivity.java", "BodyUseAPI": ["com.example.android.bookstore.DetailActivity.startActivity(android.content.Intent)"], "Fixed commit": "ad19155119ce23cc459757309f766d9abf0f14ad", "Url": "https://api.github.com/repos/AlexanderTopchiy/book-store-app", "Date": "2018-08-02T21:30:53Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (quantity < 1) { android.widget.Toast.makeText(this, getString(R.string.check_quantity), Toast.LENGTH_SHORT).show(); return false; }else { values.put(BookEntry.COLUMN_BOOK_QUANTITY, quantity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/950/buggy-version/app.src.main.java.com.example.android.bookstore.DetailActivity.java", "BodyUseAPI": ["android.content.ContentValues.put(BookEntry.COLUMN_BOOK_QUANTITY,int)"], "Fixed commit": "ad19155119ce23cc459757309f766d9abf0f14ad", "Url": "https://api.github.com/repos/AlexanderTopchiy/book-store-app", "Date": "2018-08-02T21:30:53Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["item.get(\"attrs\").getAsJsonArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((attrs.size()) < 0) { price.setFoil(false); }else { price.setFoil(attrs.toString().contains(\"foil\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1191/buggy-version/src.main.java.org.magic.api.pricers.impl.DeckTutorPricer.java", "BodyUseAPI": ["com.google.gson.JsonArray.toString()", "org.magic.api.beans.MagicPrice.setFoil(attrs.toString().contains(\"foil\"))", "attrs.toString().contains(java.lang.String)"], "Fixed commit": "9aca300ccd259568fc9f89126789dedd9b4db156", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-01-09T12:11:04Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.inria.jtravis.helpers.BuildHelper.getBuildFromId(int,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((buggyBuild.getFinishedAt()) == null) { fr.inria.spirals.repairnator.pipeline.Launcher.LOGGER.error(\"Apparently the buggy build is not yet finished (maybe it has been restarted?). The process will exit now.\"); java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3569/buggy-version/repairnator.repairnator-pipeline.src.main.java.fr.inria.spirals.repairnator.pipeline.Launcher.java", "BodyUseAPI": [], "Fixed commit": "17afd38af875125f1beeb3811f9f39e302577f74", "Url": "https://api.github.com/repos/fermadeiral/repairnator", "Date": "2018-02-27T10:28:54Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tmall.service.impl.BaseServiceImpl.selectByPrimaryKey(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (object == null) { throw new java.rmi.NoSuchObjectException(\"\u8bbf\u95ee\u7684id\u4e0d\u5b58\u5728\u6216\u5df2\u7ecf\u88ab\u5220\u9664\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2573/buggy-version/src.main.java.tmall.service.impl.BaseServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "8ffb74281776694796b8eaa5540b66c5f4964bd7", "Url": "https://api.github.com/repos/xenv/S-mall-ssm", "Date": "2018-03-02T11:31:20Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.runBabel) { bios = loader.eval(bios); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8509/buggy-version/src.main.java.me.mrmakeit.ocjs.NashornAPI.java", "BodyUseAPI": [], "Fixed commit": "61d01bd640438edaa35f188738c1b2dbb7918684", "Url": "https://api.github.com/repos/mrmakeit/OCJS", "Date": "2018-06-09T06:06:57Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Inchi == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9263/buggy-version/src.main.java.org.qsardb.editor.visualizer.CompoundVisualizer.java", "BodyUseAPI": [], "Fixed commit": "f57e6e71770a5a9bd23ede028b6afddd42d1d938", "Url": "https://api.github.com/repos/qsardb/qsardb-editor", "Date": "2017-10-27T14:15:19Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ctx.getQdb().getCompound(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((comp.getInChI()) != null) { org.qsardb.editor.visualizer.CompoundVisualizer cv = new org.qsardb.editor.visualizer.CompoundVisualizer(); java.awt.Image image = cv.drawInchiMolecule(comp.getInChI()); icon = new javax.swing.ImageIcon(image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9263/buggy-version/src.main.java.org.qsardb.editor.visualizer.ScatterChartPanel.java", "BodyUseAPI": ["org.qsardb.editor.visualizer.CompoundVisualizer.drawInchiMolecule(comp.getInChI())", "org.qsardb.model.Compound.getInChI()"], "Fixed commit": "f57e6e71770a5a9bd23ede028b6afddd42d1d938", "Url": "https://api.github.com/repos/qsardb/qsardb-editor", "Date": "2017-10-27T14:15:19Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((client.cache()) != null) { client.cache().close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6316/buggy-version/extra.src.main.java.com.cv4j.netdiscovery.extra.downloader.okhttp.OkHttpDownloader.java", "BodyUseAPI": ["okhttp3.OkHttpClient.cache()", "client.cache().close()"], "Fixed commit": "0077332361e0d7811d4a73119124823a9664f510", "Url": "https://api.github.com/repos/fengzhizi715/NetDiscovery", "Date": "2018-02-06T05:56:21Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pmc.be.Movie.getLastView()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lastview == (-1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9663/buggy-version/PMC.src.pmc.bll.BLLManager.java", "BodyUseAPI": [], "Fixed commit": "82468cb2327ed0b42a8bb832af694b1cf3993940", "Url": "https://api.github.com/repos/JanvanZetten/PMC-incl-preloader", "Date": "2018-01-18T09:15:33Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lk.getParkourData().abts.containsKey(p)) { com.georlegacy.general.lobbykeep.listeners.Bukkit.getServer().getScheduler().cancelTask(lk.getParkourData().abts.get(p)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2688/buggy-version/src.main.java.com.georlegacy.general.lobbykeep.listeners.PKMoveListener.java", "BodyUseAPI": ["com.georlegacy.general.lobbykeep.listeners.Bukkit.getServer().getScheduler().cancelTask(lk.getParkourData().abts.get(p))", "lk.getParkourData().abts.get(org.bukkit.entity.Player)", "com.georlegacy.general.lobbykeep.LobbyKeep.getParkourData()"], "Fixed commit": "a0cb4a62358bd2c3c70778c79421d7f9e0bfe2ae", "Url": "https://api.github.com/repos/615283/LobbyKeep", "Date": "2018-05-27T12:30:56Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((next.get().getFadeIn()) > realDuration) { next.get().setFadeIn(realDuration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4266/buggy-version/src.main.java.com.utsusynth.utsu.model.song.NoteStandardizer.java", "BodyUseAPI": ["com.google.common.base.Optional<com.utsusynth.utsu.model.song.Note>.get()", "next.get().setFadeIn(double)"], "Fixed commit": "2fecfa30954a5715854aa190de55cc000928b5b4", "Url": "https://api.github.com/repos/titinko/utsu", "Date": "2018-08-26T20:31:35Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lockControllerSetEncryptionKeyLogic) != null) { lockControllerSetEncryptionKeyLogic.tryAction_SetEncryptionKeyRunCallback(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6574/buggy-version/app.src.main.java.com.linka.lockapp.aos.module.widget.LockPairingController.java", "BodyUseAPI": [], "Fixed commit": "e7e1377afcb3e52427c919455effa516b64fe2e3", "Url": "https://api.github.com/repos/gkurghinyan/LINKA-android-app", "Date": "2018-06-08T15:59:12Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGattUpdateReceiver) != null) { context.unregisterReceiver(mGattUpdateReceiver); mGattUpdateReceiver = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6574/buggy-version/app.src.main.java.com.linka.lockapp.aos.module.widget.LockGattUpdateReceiver.java", "BodyUseAPI": [], "Fixed commit": "e7e1377afcb3e52427c919455effa516b64fe2e3", "Url": "https://api.github.com/repos/gkurghinyan/LINKA-android-app", "Date": "2018-06-08T15:59:12Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGattUpdateReceiver) != null) { context.unregisterReceiver(mGattUpdateReceiver); mGattUpdateReceiver = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6574/buggy-version/app.src.main.java.com.linka.lockapp.aos.module.widget.LockGattUpdateReceiver.java", "BodyUseAPI": [], "Fixed commit": "e7e1377afcb3e52427c919455effa516b64fe2e3", "Url": "https://api.github.com/repos/gkurghinyan/LINKA-android-app", "Date": "2018-06-08T15:59:12Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (min < 0) { min = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7563/buggy-version/app.src.main.java.rozklad.akai.org.pl.rozkadakai.Adapters.TramsAdapter.java", "BodyUseAPI": [], "Fixed commit": "b95c654a545474259f62cd137577d2962565f5b7", "Url": "https://api.github.com/repos/akai-org/rozklady-mobile", "Date": "2018-10-30T10:04:02Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((randomInt1) > 4) { randomInt1 = 4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8283/buggy-version/app.src.main.java.com.amyhuyen.energizer.NpoRegContActivity.java", "BodyUseAPI": [], "Fixed commit": "b5ac09eae318b314574b325ca07407c9a6a2317c", "Url": "https://api.github.com/repos/TheBatteries/Energizer", "Date": "2018-08-10T22:12:36Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cldrFile.isResolved())) throw new java.lang.IllegalArgumentException(\"CLDRFile must be resolved\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2544/buggy-version/decoupling.java.org.unicode.cldr.util.ICUServiceBuilder.java", "BodyUseAPI": [], "Fixed commit": "93144f2a02b1d34009f5ae5bf644662fbaceea88", "Url": "https://api.github.com/repos/srl295/cldr", "Date": "2011-11-23T18:47:22Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getCursor()) == null) || (getCursor().isClosed())) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7917/buggy-version/commons.src.main.java.com.makina.ecrins.commons.ui.widget.AlphabetSectionIndexerCursorAdapter.java", "BodyUseAPI": [], "Fixed commit": "3477f4dad3f8e1760ad6af84b0218aff0e3dc060", "Url": "https://api.github.com/repos/PnEcrins/GeoNature-mobile", "Date": "2018-04-28T17:02:44Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (thisNodesID != 0) { int upStreamIndex = Controller.findChannelIndex(nodeQueueLocations, thisNodesVertex.getUpStreamNode().getNumber()); java.util.concurrent.LinkedBlockingQueue<Message> upStreamClientQueue = clientQueueList.get(upStreamIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7450/buggy-version/src.Controller.java", "BodyUseAPI": [], "Fixed commit": "0d9a713b0e64527a5c6f544ea0a984f9eab6da09", "Url": "https://api.github.com/repos/mattroberts1/AOSProject1", "Date": "2018-07-03T01:35:05Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Names.DOT.equals(this.name)) { return this.name.value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7888/buggy-version/compiler.ballerina-lang.src.main.java.org.ballerinalang.model.elements.PackageID.java", "BodyUseAPI": [], "Fixed commit": "239d86f3eb1883146d8fc40ebb7f9f79c0b98803", "Url": "https://api.github.com/repos/jeradrutnam/ballerina-lang", "Date": "2018-06-14T15:37:19Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (outFile.exists()) { outFile.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/138/buggy-version/src.main.java.main.Start.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "9766d03caf474dee2d99f4e3fd9461412adeee1e", "Url": "https://api.github.com/repos/408620775/imbalancelearning", "Date": "2018-01-16T08:10:22Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lastModifiedTimestamp) == null) || (lastModifiedTimestamp.equals(\"\"))) { return \"-\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4716/buggy-version/src.java.entity.User.java", "BodyUseAPI": [], "Fixed commit": "ad85450eaa67508bcecabad4830e68ddc2ada011", "Url": "https://api.github.com/repos/rizzaliau/LimKeeAdmin", "Date": "2018-09-01T13:16:23Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mFrameBuffers.length) > i) android.opengl.GLES20.glBindFramebuffer(GLES20.GL_FRAMEBUFFER, mFrameBuffers[i]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1391/buggy-version/filter.src.main.java.vip.frendy.fliter.base.GPUImageFilterGroup.java", "BodyUseAPI": ["android.opengl.GLES20.glBindFramebuffer(GLES20.GL_FRAMEBUFFER,int)"], "Fixed commit": "a5e0fa2a53440d738d033f35d870f0de24700ad7", "Url": "https://api.github.com/repos/frendyxzc/KCamera", "Date": "2018-08-09T12:32:29Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vn.hcmute.edu.vn.nct15110346_tntny15110378.ielts.VocabularyActivityMain.WORD_COUNT) == (-1)) vn.hcmute.edu.vn.nct15110346_tntny15110378.ielts.VocabularyActivityMain.WORD_COUNT = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6468/buggy-version/app.src.main.java.vn.hcmute.edu.vn.nct15110346_tntny15110378.ielts.VocabularyActivityMain.java", "BodyUseAPI": [], "Fixed commit": "24152749c7f04dec9a57b3369e4637333e4bbd92", "Url": "https://api.github.com/repos/TrungbadaoQN/IELTS", "Date": "2018-06-11T04:51:04Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mitre.host.util.HostUtils.getCurrentHost()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((url.getPort()) > 0) && ((url.getPort()) != 80)) { fullPath.append(\":\"); fullPath.append(url.getPort()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9537/buggy-version/openid-connect-common.src.main.java.org.mitre.host.util.HostUtils.java", "BodyUseAPI": ["java.lang.StringBuffer.append(int)", "java.net.URL.getPort()"], "Fixed commit": "3356213c267f2b756a925d5807faef34c84a0688", "Url": "https://api.github.com/repos/kabiliravi/OpenID-Connect-Java-Spring-Server", "Date": "2018-10-31T02:52:45Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.collections4.CollectionUtils.isNotEmpty(profileList)) { textFieldProfile1.setText(profileList.get(0)); textFieldProfile2.setText(profileList.get(1)); textFieldProfile3.setText(profileList.get(2)); textFieldProfile4.setText(profileList.get(3)); textFieldProfile5.setText(profileList.get(4)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5564/buggy-version/src.main.java.wagner.stephanie.lizzie.gui.EngineProfileManagerDialog.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)", "javax.swing.JTextField.setText(java.lang.String)", "javax.swing.JTextField.setText(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "javax.swing.JTextField.setText(java.lang.String)", "javax.swing.JTextField.setText(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "javax.swing.JTextField.setText(java.lang.String)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "35b4d420091a0e6f9e17583b6abe8ccb5e9190f4", "Url": "https://api.github.com/repos/aerisnju/mylizzie", "Date": "2018-04-06T11:44:43Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dval == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4963/buggy-version/src.main.java.org.dnal.compiler.generate.DNALValueGenerator.java", "BodyUseAPI": [], "Fixed commit": "43036f16693ddb2d051b076e77a98281d2ce2229", "Url": "https://api.github.com/repos/ianrae/dnal-lang", "Date": "2018-10-10T15:38:51Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (logException) { com.weibo.api.motan.util.LoggerUtil.error((\"Exception caught when during method invocation. request:\" + (request.toString())), e); }else { com.weibo.api.motan.util.LoggerUtil.info((\"Exception caught when during method invocation. request:\" + (request.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/767/buggy-version/motan-core.src.main.java.com.weibo.api.motan.rpc.DefaultProvider.java", "BodyUseAPI": [], "Fixed commit": "c118231dfdf76a451dbca2e6ba1011f9fdef5854", "Url": "https://api.github.com/repos/sunnights/motan", "Date": "2018-07-10T08:54:24Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 1) { android.content.Intent menuIntent = new android.content.Intent(this, com.android.pjott.restaurantapp.DessertCategoryActivity.class); startActivity(menuIntent); }else if (position == 2) { android.content.Intent menuIntent = new android.content.Intent(this, com.android.pjott.restaurantapp.DrinkCategoryActivity.class); startActivity(menuIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6363/buggy-version/app.src.main.java.com.android.pjott.restaurantapp.Menu.java", "BodyUseAPI": [], "Fixed commit": "5c19e2f09c1017d34c2033cbf7bb2ac5a4f4c11f", "Url": "https://api.github.com/repos/Pjott/RestaurantApp", "Date": "2018-02-25T21:33:07Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((sqlList.size()) == 0) { throw new java.lang.RuntimeException(\"Failed to plan, no SQL statement provided.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1916/buggy-version/src.frontend.org.voltdb.newplanner.SqlBatchImpl.java", "BodyUseAPI": [], "Fixed commit": "394af0aa309f7778bcdfc2fd3b9f2febd9f25591", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2018-10-17T20:00:01Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isKing) { java.lang.System.out.println(\"KING\"); CheckerBoardManager.Hint leftUp = new CheckerBoardManager.Hint(0, \"\", \"\"); CheckerBoardManager.Hint rightUp = new CheckerBoardManager.Hint(0, \"\", \"\"); if ((((((y - 2) >= 0) && ((x - 2) >= 0)) && ((board.getBoard()[(y - 2)][(x - 2)]) == null)) && ((board.getBoard()[(y - 1)][(x - 1)]) != null)) && ((board.getBoard()[(y - 1)][(x - 1)].getColor()) != color)) { leftUp = getChain((y - 2), (x - 2), color, isKing); (leftUp.chain)++; leftUp.fromCoord = (y + \"-\") + x; leftUp.toCoord = ((y - 2) + \"-\") + (x - 2); return leftUp; } if ((((((y - 2) >= 0) && ((x + 2) < (board.getBoard().length))) && ((board.getBoard()[(y - 2)][(x + 2)]) == null)) && ((board.getBoard()[(y - 1)][(x + 1)]) != null)) && ((board.getBoard()[(y - 1)][(x + 1)].getColor()) != color)) { rightUp = getChain((y - 2), (x + 2), color, isKing); (rightUp.chain)++; rightUp.fromCoord = (y + \"-\") + x; rightUp.toCoord = ((y - 2) + \"-\") + (x + 2); return rightUp; } if (((leftUp.chain) == 0) && ((rightUp.chain) == 0)) { return new CheckerBoardManager.Hint(0, \"\", \"\"); }else { if ((leftUp.chain) > (rightUp.chain)) return leftUp; else return rightUp; } }else if ((currentTurn) == (java.awt.Color.RED)) { CheckerBoardManager.Hint left = new CheckerBoardManager.Hint(0, \"\", \"\"); CheckerBoardManager.Hint right = new CheckerBoardManager.Hint(0, \"\", \"\"); if ((((((y - 2) >= 0) && ((x - 2) >= 0)) && ((board.getBoard()[(y - 2)][(x - 2)]) == null)) && ((board.getBoard()[(y - 1)][(x - 1)]) != null)) && ((board.getBoard()[(y - 1)][(x - 1)].getColor()) == (java.awt.Color.BLACK))) { left = getChain((y - 2), (x - 2), color, isKing); (left.chain)++; left.fromCoord = (y + \"-\") + x; left.toCoord = ((y - 2) + \"-\") + (x - 2); return left; } if ((((((y - 2) >= 0) && ((x + 2) < (board.getBoard().length))) && ((board.getBoard()[(y - 2)][(x + 2)]) == null)) && ((board.getBoard()[(y - 1)][(x + 1)]) != null)) && ((board.getBoard()[(y - 1)][(x + 1)].getColor()) == (java.awt.Color.BLACK))) { right = getChain((y - 2), (x + 2), color, isKing); (right.chain)++; right.fromCoord = (y + \"-\") + x; right.toCoord = ((y - 2) + \"-\") + (x + 2); return right; } if (((left.chain) == 0) && ((right.chain) == 0)) { return new CheckerBoardManager.Hint(0, \"\", \"\"); }else { if ((left.chain) > (right.chain)) return left; else return right; } }else if ((currentTurn) == (java.awt.Color.BLACK)) { CheckerBoardManager.Hint left = new CheckerBoardManager.Hint(0, \"\", \"\"); CheckerBoardManager.Hint right = new CheckerBoardManager.Hint(0, \"\", \"\"); if ((((((y + 2) < (board.getBoard().length)) && ((x - 2) >= 0)) && ((board.getBoard()[(y + 2)][(x - 2)]) == null)) && ((board.getBoard()[(y + 1)][(x - 1)]) != null)) && ((board.getBoard()[(y + 1)][(x - 1)].getColor()) == (java.awt.Color.RED))) { left = getChain((y + 2), (x - 2), color, isKing); (left.chain)++; left.fromCoord = (y + \"-\") + x; left.toCoord = ((y + 2) + \"-\") + (x - 2); return left; } if ((((((y + 2) < (board.getBoard().length)) && ((x + 2) < (board.getBoard().length))) && ((board.getBoard()[(y + 2)][(x + 2)]) == null)) && ((board.getBoard()[(y + 1)][(x + 1)]) != null)) && ((board.getBoard()[(y + 1)][(x + 1)].getColor()) == (java.awt.Color.RED))) { right = getChain((y + 2), (x + 2), color, isKing); (right.chain)++; right.fromCoord = (y + \"-\") + x; right.toCoord = ((y + 2) + \"-\") + (x + 2); return right; } if (((left.chain) == 0) && ((right.chain) == 0)) { return new CheckerBoardManager.Hint(0, \"\", \"\"); }else { if ((left.chain) > (right.chain)) return left; else return right; } }else return new CheckerBoardManager.Hint(0, \"\", \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/431/buggy-version/src.CheckerBoardManager.java", "BodyUseAPI": ["CheckerBoardManager.getChain(int,int,java.awt.Color,boolean)", "CheckerBoardManager.getChain(int,int,java.awt.Color,boolean)", "CheckerBoardManager.getChain(int,int,java.awt.Color,boolean)", "CheckerBoardManager.getChain(int,int,java.awt.Color,boolean)", "CheckerBoardManager.getChain(int,int,java.awt.Color,boolean)", "CheckerBoardManager.getChain(int,int,java.awt.Color,boolean)"], "Fixed commit": "69aba8d63058fe0c92d4de149584f6a2a9707f17", "Url": "https://api.github.com/repos/casstarng/Checkers2", "Date": "2018-06-08T01:58:53Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newKingCanJump) { newKingCanJump = false; if (newKingJumpable(java.lang.Integer.parseInt(newSpot[0]), java.lang.Integer.parseInt(newSpot[1]), piece.getColor())) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/431/buggy-version/src.CheckerBoardManager.java", "BodyUseAPI": [], "Fixed commit": "69aba8d63058fe0c92d4de149584f6a2a9707f17", "Url": "https://api.github.com/repos/casstarng/Checkers2", "Date": "2018-06-08T01:58:53Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.jar.Attributes.getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (libDir == null) { libDir = \"BOOT-INF/lib/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3335/buggy-version/product.java-agent.src.main.java.io.codekvast.javaagent.codebase.CodeBaseScanner.java", "BodyUseAPI": [], "Fixed commit": "ac985810172ca590a4ed878708c65205b10c96c4", "Url": "https://api.github.com/repos/crispab/codekvast", "Date": "2018-09-03T20:47:57Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.jar.Attributes.getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (classesDir == null) { classesDir = \"BOOT-INF/classes/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3335/buggy-version/product.java-agent.src.main.java.io.codekvast.javaagent.codebase.CodeBaseScanner.java", "BodyUseAPI": [], "Fixed commit": "ac985810172ca590a4ed878708c65205b10c96c4", "Url": "https://api.github.com/repos/crispab/codekvast", "Date": "2018-09-03T20:47:57Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (visible) { onMap.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9829/buggy-version/mage.src.main.java.mil.nga.giat.mage.map.cache.OverlayOnMapManager.java", "BodyUseAPI": [], "Fixed commit": "14df37b623d6a5ce00ced64f5b1048d3a3def4c7", "Url": "https://api.github.com/repos/ngageoint/mage-android", "Date": "2018-02-11T22:59:57Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentRow[(columnIndex - 1)]) instanceof java.math.BigInteger) { return new java.math.BigDecimal(((java.math.BigInteger) (currentRow[(columnIndex - 1)]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3231/buggy-version/eth-jdbc-driver.src.main.java.com.impetus.eth.jdbc.EthResultSet.java", "BodyUseAPI": [], "Fixed commit": "db3024aa747b22cd3aadf8c4b7ddd624d8d6c460", "Url": "https://api.github.com/repos/ashishkshukla/eth-jdbc-connector", "Date": "2018-08-23T13:51:01Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.synet.tool.rsc.model.Tb1046IedEntity.getF1046AorB()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (f1046AorB != null) { entity.setAorB((f1046AorB == (com.synet.tool.rsc.DBConstants.SUITE_A) ? \"A\" : \"B\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7631/buggy-version/com.synet.tool.rsc.src.com.synet.tool.rsc.editor.imp.ImpIEDListEditor.java", "BodyUseAPI": ["com.synet.tool.rsc.model.IM101IEDListEntity.setAorB((f1046AorB == (com.synet.tool.rsc.DBConstants.SUITE_A) ? \"A\" : \"B\"))"], "Fixed commit": "204ae8567a3b76beb64a7fad482f648d2b734396", "Url": "https://api.github.com/repos/ChalmersA/RSC50", "Date": "2018-10-15T01:00:07Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["koeko.database_management.DbTableQuestionGeneric.getQuestionTypeFromIDGlobal(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (questionType == 0) { query = ((\"SELECT subjects.IDENTIFIER, SUBJECT_LEVEL FROM subjects \" + ((\"INNER JOIN question_subject_relation ON subjects.ID_SUBJECT_GLOBAL = question_subject_relation.ID_SUBJECT_GLOBAL \" + \"INNER JOIN multiple_choice_questions ON multiple_choice_questions.ID_GLOBAL = question_subject_relation.ID_GLOBAL \") + \"where multiple_choice_questions.ID_GLOBAL=\")) + questionId) + \";\"; }else { query = ((\"SELECT subjects.IDENTIFIER, SUBJECT_LEVEL FROM subjects \" + ((\"INNER JOIN question_subject_relation ON subjects.ID_SUBJECT_GLOBAL = question_subject_relation.ID_SUBJECT_GLOBAL \" + \"INNER JOIN short_answer_questions ON short_answer_questions.ID_GLOBAL = question_subject_relation.ID_GLOBAL \") + \"where short_answer_questions.ID_GLOBAL=\")) + questionId) + \";\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3927/buggy-version/src.main.java.koeko.database_management.DbTableRelationQuestionSubject.java", "BodyUseAPI": [], "Fixed commit": "8fdfe8f94a4ddb9a9d940ab71f55886a812a7531", "Url": "https://api.github.com/repos/maximerchrd/KoekoTeacher", "Date": "2018-07-26T14:42:29Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.internal.corext.dom.Bindings.findMethod(org.eclipse.jdt.core.dom.IMethodBinding,org.eclipse.jdt.core.IType)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.eclipse.jdt.internal.ui.javaeditor.codemining.methods.JavaMethodParameterCodeMining.isArgNumber(paramName, method))) { label.addParameterInfo(paramName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8353/buggy-version/org.eclipse.jdt.codemining.src.org.eclipse.jdt.internal.ui.javaeditor.codemining.methods.JavaMethodParameterCodeMining.java", "BodyUseAPI": ["org.eclipse.jdt.internal.ui.javaeditor.codemining.methods.JavaMethodParameterCodeMining.ParameterMiningLabelBuilder.addParameterInfo(java.lang.String)"], "Fixed commit": "39d5c24b0267249610d27fe2b00384b8f2290e62", "Url": "https://api.github.com/repos/angelozerr/jdt-codemining", "Date": "2018-07-22T21:41:00Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCustomizers == null) { requestCustomizers = java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/800/buggy-version/src.main.java.io.choerodon.gateway.config.CustomZuulConfig.java", "BodyUseAPI": [], "Fixed commit": "ac8f39776123cb59b6e6241d50e3f547f9975d88", "Url": "https://api.github.com/repos/choerodon/api-gateway", "Date": "2018-09-10T08:24:03Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((callbackId) > 1000) { callbackId = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7507/buggy-version/CodenameOne.src.com.codename1.javascript.JavascriptContext.java", "BodyUseAPI": [], "Fixed commit": "783ac2828409aa747103a35001b4886e24944484", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2018-01-03T13:36:01Z"},
{"Line": "=>796", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.muzima.model.shr.kenyaemr.KenyaEmrShrModel.getPatientIdentification()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (identification == null) { identification = new com.muzima.model.shr.kenyaemr.PatientIdentification(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7387/buggy-version/app.src.main.java.com.muzima.utils.smartcard.KenyaEmrShrMapper.java", "BodyUseAPI": [], "Fixed commit": "aba1089af2021b2743ff236b2f0e7be269bad856", "Url": "https://api.github.com/repos/patryllus/muzima-android", "Date": "2018-04-09T19:09:31Z"},
{"Line": "=>726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.ambry.rest.RestUtils.getHeader(restRequest.getArgs(),java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (containerNameFromHeader != null) { throw new com.github.ambry.rest.RestServiceException(\"Only container name is set in request with no corresponding account name is not allowed.\", RestServiceErrorCode.BadRequest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5163/buggy-version/ambry-api.src.main.java.com.github.ambry.rest.RestUtils.java", "BodyUseAPI": [], "Fixed commit": "9c9fe132189313aeb3ce0e7d42445574385601de", "Url": "https://api.github.com/repos/jsjtzyy/ambry", "Date": "2018-03-28T21:24:04Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bluetoothAdapter) != null) bluetoothAdapter.cancelDiscovery();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4551/buggy-version/app.src.main.java.com.example.albertomariopirovano.safecar.settings.fragments.PairPlugFragment.java", "BodyUseAPI": [], "Fixed commit": "b94e85abe21ddccdfcb53867a2ec7d64aa1bfb89", "Url": "https://api.github.com/repos/apiro/SafeCar", "Date": "2018-01-25T13:39:25Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.mvc.Http.Request.getHeader(HeaderParam.X_APP_ID.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(appId)) { ctx.flash().put(JsonKey.APP_ID, appId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8622/buggy-version/service.app.util.Global.java", "BodyUseAPI": ["ctx.flash().put(JsonKey.APP_ID,java.lang.String)"], "Fixed commit": "6ebc9ce8492397d0d1dffcb844ed89ef5d66168e", "Url": "https://api.github.com/repos/iostream04/sunbird-lms-service", "Date": "2018-09-14T06:37:39Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((enable && ((addGroup) != null)) && ((addGroup.getVisibility()) != (VISIBLE))) addGroup.setVisibility(com.keepassdroid.view.INVISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5372/buggy-version/app.src.main.java.com.keepassdroid.view.ListNodesWithAddButtonView.java", "BodyUseAPI": ["android.view.View.setVisibility(com.keepassdroid.view.INVISIBLE)"], "Fixed commit": "bfcd4b9f00b4b82b1f17f36b1f7441c2d0318644", "Url": "https://api.github.com/repos/Kunzisoft/KeePassDX", "Date": "2018-02-19T17:53:48Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((enable && ((addEntry) != null)) && ((addEntry.getVisibility()) != (VISIBLE))) addEntry.setVisibility(com.keepassdroid.view.INVISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5372/buggy-version/app.src.main.java.com.keepassdroid.view.ListNodesWithAddButtonView.java", "BodyUseAPI": ["android.view.View.setVisibility(com.keepassdroid.view.INVISIBLE)"], "Fixed commit": "bfcd4b9f00b4b82b1f17f36b1f7441c2d0318644", "Url": "https://api.github.com/repos/Kunzisoft/KeePassDX", "Date": "2018-02-19T17:53:48Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bi.pfb02a.isChecked()) || (bi.pfb02e.isChecked())) { if (bi.pfb02a.isChecked()) { if (!(validatorClass.EmptyTextBox(this, bi.pfb03, getString(R.string.pfb03)))) { return false; } } return validatorClass.EmptyTextBox(this, bi.pfb04, getString(R.string.pfb04)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/715/buggy-version/app.src.main.java.edu.aku.hassannaqvi.wfp_followups.activities.SectionBActivity.java", "BodyUseAPI": ["bi.pfb02a.isChecked()", "edu.aku.hassannaqvi.wfp_followups.activities.SectionBActivity.EmptyTextBox(edu.aku.hassannaqvi.wfp_followups.activities.SectionBActivity,bi.pfb04,getString(R.string.pfb04))", "edu.aku.hassannaqvi.wfp_followups.activities.SectionBActivity.EmptyTextBox(edu.aku.hassannaqvi.wfp_followups.activities.SectionBActivity,bi.pfb03,getString(R.string.pfb03))"], "Fixed commit": "13bfff465612db7d3ebc4ffc77af057d97a2416b", "Url": "https://api.github.com/repos/AliAzaz/WFP-FollowUPs", "Date": "2018-10-12T11:45:19Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.isi.wings.catalog.component.api.impl.kb.KBAPI.getIndividual(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ind == null) ind = tkb.createIndividual(id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9506/buggy-version/planner.src.main.java.edu.isi.wings.catalog.component.api.impl.kb.ComponentReasoningKB.java", "BodyUseAPI": [], "Fixed commit": "e7e40c47a0eba6ef6dab2c9c9f47451f46b3743b", "Url": "https://api.github.com/repos/KnowledgeCaptureAndDiscovery/wings", "Date": "2018-10-08T10:10:34Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(jsonObject.get(\"text\").toString().equals(\"\"))) { addPostViewModel.addPost(new com.example.lucassong.clubsandwich.post.Post(jsonObject.get(\"clubName\").toString(), dateTimeFormat.parse(jsonObject.get(\"timeStamp\").toString()), jsonObject.get(\"text\").toString(), jsonObject.get(\"photo\").toString(), 0, 0, false, true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5839/buggy-version/app.src.main.java.com.example.lucassong.clubsandwich.ConnectionHandler.java", "BodyUseAPI": ["org.json.JSONObject.get(java.lang.String)", "jsonObject.get(\"timeStamp\").toString()", "jsonObject.get(\"text\").toString()", "org.json.JSONObject.get(java.lang.String)", "org.json.JSONObject.get(java.lang.String)", "com.example.lucassong.clubsandwich.post_add.AddPostViewModel.addPost(com.example.lucassong.clubsandwich.post.Post)", "org.json.JSONObject.get(java.lang.String)", "jsonObject.get(\"photo\").toString()", "java.text.SimpleDateFormat.parse(jsonObject.get(\"timeStamp\").toString())", "jsonObject.get(\"clubName\").toString()"], "Fixed commit": "5660845bee0ddb1be2c83248e6b7a65e6fc01fb3", "Url": "https://api.github.com/repos/Lucas-Song/PPM_Club_Manager_App", "Date": "2018-05-18T00:16:51Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((split.length) > 1) { java.lang.String eventName = split[0]; java.lang.String clubName; if ((split.length) >= 2) { clubName = split[1]; }else { clubName = \"Unnamed Club\"; } addEventViewModel.addEvent(new com.example.lucassong.clubsandwich.event.Event(cursor.getInt(_ID), clubName, eventName, cursor.getString(DESCRIPTION), cursor.getString(EVENT_LOCATION), new java.util.Date(cursor.getLong(DTSTART)), new java.util.Date(cursor.getLong(DTEND)), cursor.getString(RRULE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5839/buggy-version/app.src.main.java.com.example.lucassong.clubsandwich.CalendarContractHandler.java", "BodyUseAPI": [], "Fixed commit": "5660845bee0ddb1be2c83248e6b7a65e6fc01fb3", "Url": "https://api.github.com/repos/Lucas-Song/PPM_Club_Manager_App", "Date": "2018-05-18T00:16:51Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.TreeMap<java.lang.Long, raft.protocol.RaftLog.SegmentMetaData>.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (segmentMetaData == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6431/buggy-version/cheetah-raft.src.main.java.raft.protocol.RaftLog.java", "BodyUseAPI": [], "Fixed commit": "a2d5ff5489a494a4334eb5662faa6baaa47bc4e5", "Url": "https://api.github.com/repos/Ruan-Xin/cheetah", "Date": "2018-04-11T10:30:44Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((raft.utils.RaftUtils.getFileNumInDir(logEntryDir, logEntryDir)) != 0) { newLastIndexLog++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6431/buggy-version/cheetah-raft.src.main.java.raft.protocol.RaftLog.java", "BodyUseAPI": [], "Fixed commit": "a2d5ff5489a494a4334eb5662faa6baaa47bc4e5", "Url": "https://api.github.com/repos/Ruan-Xin/cheetah", "Date": "2018-04-11T10:30:44Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (check < 0) check = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7100/buggy-version/jbeanbox.src.main.java.com.github.drinkjava2.jbeanbox.BeanBox.java", "BodyUseAPI": [], "Fixed commit": "8852c2786f9e6af646363932bfd9c5ebc5b3254c", "Url": "https://api.github.com/repos/drinkjava2/jBeanBox", "Date": "2018-04-28T22:49:33Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.Ben12345rocks.AdvancedCore.mysql.MySQL.getRowsNameQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rows != null) { for (com.Ben12345rocks.AdvancedCore.sql.Column c : rows) { uuids.add(((java.lang.String) (c.getValue()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3651/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.mysql.MySQL.java", "BodyUseAPI": [], "Fixed commit": "d360d1361b7bad6de1e752cdba331be4a849fdf1", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-02-11T22:41:41Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getBlockMetadata(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((metadata == 2) || (metadata == 6)) { if (!(world.isSideSolid((x + 1), y, z, net.geforcemods.securitycraft.blocks.WEST))) net.geforcemods.securitycraft.util.BlockUtils.destroyBlock(world, x, y, z, true); }else if ((metadata == 3) || (metadata == 7)) { if (!(world.isSideSolid(x, y, (z - 1), net.geforcemods.securitycraft.blocks.SOUTH))) net.geforcemods.securitycraft.util.BlockUtils.destroyBlock(world, x, y, z, true); }else if ((metadata == 4) || (metadata == 8)) { if (!(world.isSideSolid(x, y, (z + 1), net.geforcemods.securitycraft.blocks.NORTH))) net.geforcemods.securitycraft.util.BlockUtils.destroyBlock(world, x, y, z, true); }else if ((metadata == 0) || (metadata == 9)) { if (!(world.isSideSolid(x, (y + 1), z, net.geforcemods.securitycraft.blocks.DOWN))) net.geforcemods.securitycraft.util.BlockUtils.destroyBlock(world, x, y, z, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4374/buggy-version/1.7.10.src.main.java.net.geforcemods.securitycraft.blocks.BlockSecurityCamera.java", "BodyUseAPI": [], "Fixed commit": "f6817b4c58bf877a2e2615c8db142155d6e2c874", "Url": "https://api.github.com/repos/Geforce132/SecurityCraft", "Date": "2018-05-13T12:38:35Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(xssChecker.isValid(httpRequest.getRequestURI()))) { throw new com.rainyalley.architecture.exception.BadRequestException(\"The uri string contains invalid tag\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/792/buggy-version/boot.src.main.java.com.rainyalley.architecture.filter.xss.XssFilter.java", "BodyUseAPI": [], "Fixed commit": "67198542953d951631fc2b69e9169e64fb330dc2", "Url": "https://api.github.com/repos/WakelessDragon/architecture", "Date": "2018-05-04T08:05:18Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["userRepository.findByEmail(username).getProfile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (profile == null) { throw new java.nio.file.attribute.UserPrincipalNotFoundException(\"User not logged in\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5198/buggy-version/src.main.java.ru.ifmo.samuraiWorld.service.ProfileServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "32880cbd51b8d5861723d4753773dc224afe9a0f", "Url": "https://api.github.com/repos/khlopkov/samuraiWorld", "Date": "2018-09-28T11:07:57Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedGame) != null) newGame.setGameId(selectedGame.getGameId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/538/buggy-version/app.src.main.java.com.c50x.eleos.activities.CreateGameActivity.java", "BodyUseAPI": [], "Fixed commit": "eaa78e5c13db2b448a321b6a31d57069f81763d2", "Url": "https://api.github.com/repos/Talal-l/Eleos", "Date": "2018-04-04T20:28:47Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.equals(LoginTask.currentAuthUser.getHandle()))) { teamTask.sendTeamInvite(newTeam, player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/538/buggy-version/app.src.main.java.com.c50x.eleos.activities.CreateTeamActivity.java", "BodyUseAPI": ["com.c50x.eleos.controllers.TeamTask.sendTeamInvite(com.c50x.eleos.data.Team,java.lang.String)"], "Fixed commit": "eaa78e5c13db2b448a321b6a31d57069f81763d2", "Url": "https://api.github.com/repos/Talal-l/Eleos", "Date": "2018-04-04T20:28:47Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.droppedItems) != null) { contents += \"is an item in the room.\"; }else if (((this.getMonster()) != null) && ((this.getPuzzle()) != null)) { contents += \"is a monster and a puzzle in the room.\"; }else if ((this.getMonster()) != null) { contents += \"is a monster in the room.\"; }else if ((this.getPuzzle()) != null) { contents += \"a puzzle in the room.\"; }else { contents += \"is nothing in here.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5379/buggy-version/src.models.Room.java", "BodyUseAPI": [], "Fixed commit": "b06a0fe75bf94b49caaf5f9540d87365f261e7cd", "Url": "https://api.github.com/repos/dhagerty9009/TeamAvengers-Spring2018", "Date": "2018-04-22T00:29:25Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aVar.getVariable().getModifiers().contains(ModifierKind.STATIC)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2903/buggy-version/src.main.java.fr.inria.astor.core.manipulation.synthesis.dynamoth.spoon.StaSynthBuilder.java", "BodyUseAPI": [], "Fixed commit": "53019370ec0009d409162a0c4e4a455dbce43dcd", "Url": "https://api.github.com/repos/SpoonLabs/astor", "Date": "2018-10-12T06:37:07Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((last != null) && (!((last.getParent()) instanceof com.jetbrains.php.lang.psi.elements.Else))) { holder.registerProblem(expression.getFirstChild(), com.kalessil.phpStorm.phpInspectionsEA.inspectors.ifs.MissingElseKeywordInspector.message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2245/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.ifs.MissingElseKeywordInspector.java", "BodyUseAPI": [], "Fixed commit": "d3d433b0e0ae217a0408744fa49dd4fb9e8f875f", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2018-01-19T08:46:40Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { username.setText(savedInstanceState.getString(Constants.USERNAME_KEY)); email.setText(savedInstanceState.getString(Constants.EMAIL_KEY)); description.setText(savedInstanceState.getString(Constants.DESCRIPTION_KEY)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5466/buggy-version/app.src.main.java.developersudhanshu.com.udacitypracticalquizone.MainActivity.java", "BodyUseAPI": ["android.os.Bundle.getString(Constants.DESCRIPTION_KEY)", "android.widget.EditText.setText(savedInstanceState.getString(Constants.USERNAME_KEY))", "android.widget.EditText.setText(savedInstanceState.getString(Constants.EMAIL_KEY))", "android.os.Bundle.getString(Constants.USERNAME_KEY)", "android.widget.EditText.setText(savedInstanceState.getString(Constants.DESCRIPTION_KEY))", "android.os.Bundle.getString(Constants.EMAIL_KEY)"], "Fixed commit": "f55eb008d5d786d0bc08b36eee6cfb14052b73a8", "Url": "https://api.github.com/repos/sud8443/UdacityPracticalQuizOne", "Date": "2018-05-06T02:02:19Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFinishing())) { showListFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5206/buggy-version/app.app.src.main.java.com.retailshop.retailshopapplication.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "03db85d7433baf2c5dcd3a2ff0d3cb1915369c16", "Url": "https://api.github.com/repos/sreedharvaddi/retail_shop_products", "Date": "2018-01-21T13:14:33Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (setting != null) { int settingValue; if (setting instanceof java.lang.Number) settingValue = ((java.lang.Number) (setting)).intValue(); else settingValue = java.lang.Integer.valueOf(((java.lang.String) (setting))); if (settingValue <= 0) response.addContextualMessage(com.serotonin.m2m2.db.dao.SystemSettingsDao.FUTURE_DATE_LIMIT_PERIODS, \"validate.greaterThanZero\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5974/buggy-version/Core.src.com.serotonin.m2m2.db.dao.SystemSettingsDao.java", "BodyUseAPI": [], "Fixed commit": "4854f24de384fba6ca8b5b30934a561c7a282d35", "Url": "https://api.github.com/repos/infiniteautomation/ma-core-public", "Date": "2018-04-20T20:14:47Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeToBurn) == 0) timeToBurn = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9899/buggy-version/src.main.java.com.black_dog20.gadgetron.tile.base.TileEntityEnergyInventoryBase.java", "BodyUseAPI": [], "Fixed commit": "07705b26b31812503072ed275e1eedd4cf3b553e", "Url": "https://api.github.com/repos/Crimix/Gadgetron", "Date": "2018-07-23T12:08:00Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeToBurn) == 0) timeToBurn = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9899/buggy-version/src.main.java.com.black_dog20.gadgetron.tile.base.TileEntityEnergyInventoryBase.java", "BodyUseAPI": [], "Fixed commit": "07705b26b31812503072ed275e1eedd4cf3b553e", "Url": "https://api.github.com/repos/Crimix/Gadgetron", "Date": "2018-07-23T12:08:00Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (sReturnColName == null) { sReturnColName = sAttrName.toUpperCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6015/buggy-version/src.hl.jsoncrud.CRUDMgr.java", "BodyUseAPI": [], "Fixed commit": "98d9f497021fa8e0abca4f456031c2f5faddc453", "Url": "https://api.github.com/repos/huilam/jsoncrud", "Date": "2018-02-06T03:44:17Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((securityDefinition.findValue(\"name\")) == null) { securityDefinition = ((com.fasterxml.jackson.databind.node.ObjectNode) (securityDefinition)).put(\"name\", securityDefinitionName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/134/buggy-version/src.main.java.com.github.kongchen.swagger.docgen.mavenplugin.SecurityDefinition.java", "BodyUseAPI": [], "Fixed commit": "09591e3e537f7cd47ad6b2992e416fb7223ed638", "Url": "https://api.github.com/repos/kongchen/swagger-maven-plugin", "Date": "2018-09-04T13:36:10Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ids.isEmpty())) { ids.stream().forEach(( id) -> studentService.deleteById(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5651/buggy-version/src.main.java.com.david.Controller.StudentController.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.stream()", "java.util.stream.Stream<java.lang.Integer>.forEach(java.util.function.Consumer<? super java.lang.Integer>)"], "Fixed commit": "d039eed4c89babdf78a39524ffac80e11a47e34a", "Url": "https://api.github.com/repos/DavidLangen/SpringBootTest", "Date": "2018-05-09T08:01:40Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentById(R.id.contentFrame)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fragment == null) { fragment = com.example.mynotes.addeditnote.AddEditNoteFragment.newInstance(noteId); getSupportFragmentManager().beginTransaction().add(R.id.contentFrame, fragment, AddEditNoteFragment.TAG).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1411/buggy-version/app.src.main.java.com.example.mynotes.addeditnote.AddEditNoteActivity.java", "BodyUseAPI": [], "Fixed commit": "12507fe3f059aa3e147d6f4204eb826c4a585a34", "Url": "https://api.github.com/repos/mateusgrb/my-notes", "Date": "2018-01-28T16:01:24Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentById(R.id.contentFrame)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fragment == null) { fragment = com.example.mynotes.notes.NotesFragment.newInstance(); getSupportFragmentManager().beginTransaction().add(R.id.contentFrame, fragment, NotesFragment.TAG).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1411/buggy-version/app.src.main.java.com.example.mynotes.notes.NotesActivity.java", "BodyUseAPI": [], "Fixed commit": "12507fe3f059aa3e147d6f4204eb826c4a585a34", "Url": "https://api.github.com/repos/mateusgrb/my-notes", "Date": "2018-01-28T16:01:24Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ninos.adapters.AllChallengeAdapter.ChallengeViewHolder.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((postInfo.getLinks().size()) > 1) { recyclerView.addItemDecoration(new com.ninos.views.PagerIndicatorDecoration()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2657/buggy-version/app.src.main.java.com.ninos.adapters.AllChallengeAdapter.java", "BodyUseAPI": [], "Fixed commit": "a09ac9e4c931f9983b9e1b91b5d4c9256abed0db", "Url": "https://api.github.com/repos/ninosapp/Ninos", "Date": "2018-02-15T17:55:54Z"},
{"Line": "=>611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((links.size()) > 1) { recyclerView.addItemDecoration(new com.ninos.views.PagerIndicatorDecoration()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2657/buggy-version/app.src.main.java.com.ninos.adapters.AllChallengeAdapter.java", "BodyUseAPI": [], "Fixed commit": "a09ac9e4c931f9983b9e1b91b5d4c9256abed0db", "Url": "https://api.github.com/repos/ninosapp/Ninos", "Date": "2018-02-15T17:55:54Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tickIndex > (mNumSegments)) { tickIndex = mNumSegments; }else if (tickIndex < 0) { tickIndex = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7987/buggy-version/materialrangebar.src.main.java.com.appyvet.materialrangebar.Bar.java", "BodyUseAPI": [], "Fixed commit": "2624baebbf05a01acbb3315dc2cc02044c0921a1", "Url": "https://api.github.com/repos/oli107/material-range-bar", "Date": "2018-06-11T15:46:51Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((macro.getPath()) != null) { path = macro.getPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6447/buggy-version/org.jtool.macrorecorder.src.org.jtool.macrorecorder.macro.MacroJSON.java", "BodyUseAPI": ["org.jtool.macrorecorder.macro.Macro.getPath()"], "Fixed commit": "64022c86318f923bd3a1d2c21453a335be49f1fa", "Url": "https://api.github.com/repos/katsuhisamaruyama/ChangeMacroRecorder", "Date": "2018-01-10T00:42:38Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bidsNotViewed == 1) { bidsNotViewedString += \" new bid!\"; displayBidsNotViewed = true; }else if (bidsNotViewed == 0) { bidsNotViewedString = \"\"; displayBidsNotViewed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7562/buggy-version/app.src.main.java.com.lateral.lateral.activity.TaskRowAdapter.java", "BodyUseAPI": [], "Fixed commit": "3e1542f6a4e26c89548ed862762a211ab9f54600", "Url": "https://api.github.com/repos/CMPUT301W18T13/Lateral", "Date": "2018-04-09T21:47:07Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (previousState == (com.tann.dice.gameplay.entity.die.Die.DieState.Rolling)) { entity.stopped(); this.lockedSide = getSide(); glow = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6326/buggy-version/core.src.com.tann.dice.gameplay.entity.die.Die.java", "BodyUseAPI": [], "Fixed commit": "bcdb28615e3341a934e66941c73e9410ff091560", "Url": "https://api.github.com/repos/ColourTann/Dicegeon", "Date": "2018-03-04T23:28:09Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) != (hotel.entities.Room.State.OCCUPIED)) { throw new java.lang.RuntimeException(\"The room has not been occupied!\"); }else { state = hotel.entities.Room.State.READY; booking.checkOut(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3351/buggy-version/src.hotel.entities.Room.java", "BodyUseAPI": [], "Fixed commit": "078a135a2a5d6415375186e3c809e7e9a6b6c25a", "Url": "https://api.github.com/repos/nsingl02/ITC205assg3", "Date": "2018-09-27T01:00:20Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) != (hotel.entities.Room.State.READY)) { throw new java.lang.RuntimeException(\"The room has not been ready!\"); }else { state = hotel.entities.Room.State.OCCUPIED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3351/buggy-version/src.hotel.entities.Room.java", "BodyUseAPI": [], "Fixed commit": "078a135a2a5d6415375186e3c809e7e9a6b6c25a", "Url": "https://api.github.com/repos/nsingl02/ITC205assg3", "Date": "2018-09-27T01:00:20Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((err instanceof java.util.concurrent.ExecutionException) && ((err.getCause()) instanceof java.util.NoSuchElementException))) { checkErr[0] = err; org.apache.logging.log4j.LogManager.getLogger(\"s3\").debug(\"HEAD %s = %s\", fullName, err); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3241/buggy-version/src.main.java.net.freastro.b2fys.Inode.java", "BodyUseAPI": ["org.apache.logging.log4j.LogManager.getLogger(\"s3\").debug(java.lang.String,java.lang.String,java.lang.Exception)"], "Fixed commit": "be4c2268a1912fb9bd7cf0c30eca45973b8a329c", "Url": "https://api.github.com/repos/freastro/b2fys", "Date": "2018-03-03T04:54:16Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((err instanceof java.util.concurrent.ExecutionException) && ((err.getCause()) instanceof java.util.NoSuchElementException))) { checkErr[1] = err; org.apache.logging.log4j.LogManager.getLogger(\"s3\").debug(\"HEAD %s/ = %s\", fullName, err); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3241/buggy-version/src.main.java.net.freastro.b2fys.Inode.java", "BodyUseAPI": ["org.apache.logging.log4j.LogManager.getLogger(\"s3\").debug(java.lang.String,java.lang.String,java.lang.Exception)"], "Fixed commit": "be4c2268a1912fb9bd7cf0c30eca45973b8a329c", "Url": "https://api.github.com/repos/freastro/b2fys", "Date": "2018-03-03T04:54:16Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.telephony.PhoneNumberUtils.isGlobalPhoneNumber(phoneNumber)) { contact = contactsProvider.getContactByPhoneNumber(phoneNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9542/buggy-version/android.src.main.java.com.rt2zz.reactnativecontacts.ContactsManager.java", "BodyUseAPI": ["com.rt2zz.reactnativecontacts.ContactsProvider.getContactByPhoneNumber(java.lang.String)"], "Fixed commit": "43c7b7fcf4b83fa0711ee3be78da8d0a2d34b617", "Url": "https://api.github.com/repos/mbernardeau/react-native-contacts", "Date": "2017-06-14T09:05:29Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mCurrX) == (mFinalX)) && ((mCurrY) == (mFinalY))) { mFinished = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8187/buggy-version/core.java.android.widget.Scroller.java", "BodyUseAPI": [], "Fixed commit": "9093717985095913934c079abfa879049bd33ba5", "Url": "https://api.github.com/repos/sudosurootdev/frameworks_base", "Date": "2010-08-06T01:33:31Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.Authentication.getPrincipal()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (principal instanceof com.tfkfan.awlta.domain.User) user = ((com.tfkfan.awlta.domain.User) (principal));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7832/buggy-version/src.main.java.com.tfkfan.awlta.security.SecurityContextUtils.java", "BodyUseAPI": [], "Fixed commit": "c564e5d8d1a224d2204c7f6151cf35c3f903df93", "Url": "https://api.github.com/repos/tfkfan/awlta", "Date": "2018-06-14T11:17:48Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((current.traverse(nextHop)) < 0) { edu.boun.edgecloudsim.utils.SimLogger.printLine(\"not adjacent\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2130/buggy-version/src.edu.boun.edgecloudsim.network.MM1Queue.java", "BodyUseAPI": [], "Fixed commit": "ebeba05afe83e789394c7f9b08e46ef488e29665", "Url": "https://api.github.com/repos/jihall77/pFogSim", "Date": "2018-06-14T16:36:26Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Main.logic.entityManager.player1.alive)) { g.drawImage(Main.loader.getImage(\"gui/sieg2\"), 0, 0, ((tilesize) * (world.Board.SIZE_X)), ((tilesize) * (world.Board.SIZE_Y)), null); }else if (!(Main.logic.entityManager.player2.alive)) { g.drawImage(Main.loader.getImage(\"gui/sieg1\"), 0, 0, ((tilesize) * (world.Board.SIZE_X)), ((tilesize) * (world.Board.SIZE_Y)), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2970/buggy-version/Spiel.src.renderer.BoardRenderer.java", "BodyUseAPI": [], "Fixed commit": "aa420b71bf72d17300eb0744041ffecba9fc1a48", "Url": "https://api.github.com/repos/LinusDikomey/Duell-Lab", "Date": "2018-06-28T13:59:13Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["PlayerList.findPlayer(java.lang.String)", "PlayerList.findPlayer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(playerSending.searchIgnoredBy(playerReceiving.getName()))) { this.broadcast(playerSending, playerReceiving, ((((playerSending.getName()) + \" whispers, \\\"\") + message) + \"\\\"\")); return \"message sent to \" + (playerReceiving.getName()); }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1647/buggy-version/src.GameCore.java", "BodyUseAPI": ["Player.getName()", "GameCore.broadcast(Player,Player,((((playerSending.getName()) + \" whispers, \\\"\") + message) + \"\\\"\"))", "Player.getName()"], "Fixed commit": "1f664f92ca51b3b9eae65b69ef82519e015a904f", "Url": "https://api.github.com/repos/shayhoss/CS321-2018F-002", "Date": "2018-10-23T22:08:05Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.obolibrary.robot.ExceptionHelper.getExceptionID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (exceptionID != null) { java.lang.System.out.println(org.obolibrary.robot.ExceptionHelper.trimExceptionID(msg)); java.lang.System.out.println((\"For details see: http://robot.obolibrary.org/\" + exceptionID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8127/buggy-version/robot-command.src.main.java.org.obolibrary.robot.ExceptionHelper.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "c496fec485739906303897cf3273de7672e639f0", "Url": "https://api.github.com/repos/rctauber/robot", "Date": "2018-08-13T14:15:08Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tableName.indexOf(\"$\")) == (-1)) { strippedName = tableName; }else { strippedName = tableName.substring(tableName.indexOf(\"$\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7771/buggy-version/KARS.src.defaultpackage.ImportDialog.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "9820addba5d321eb168bff8dd4f9d58930b68971", "Url": "https://api.github.com/repos/EccentricVamp/KARankedSystem", "Date": "2018-05-18T12:46:15Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getAction()) == (android.view.MotionEvent.ACTION_UP)) startTouchPoint = null; else if ((event.getAction()) == (android.view.MotionEvent.ACTION_DOWN)) startTouchPoint = MainActivity.m.getTouchPoint(event);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8221/buggy-version/app.src.main.java.zelongames.kortspel.Camera.java", "BodyUseAPI": ["MainActivity.m.getTouchPoint(android.view.MotionEvent)", "android.view.MotionEvent.getAction()"], "Fixed commit": "040e8434180646631dc92b6bebcf78790e9d3c4e", "Url": "https://api.github.com/repos/ZelonGames/Kortspel", "Date": "2018-02-22T14:28:16Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((maxX - min) > 0) { StaticSystem.currentScene.getGameObjects().add(((StaticSystem.currentScene.getGameObjects().size()) - 5), new de.naclstudios.etj.gameObjects.JunkHill(new de.edgelord.sjgl.location.Coordinates(((random.nextInt((maxX - min))) + min), ((random.nextInt((620 - 100))) + 100)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4450/buggy-version/src.main.java.de.naclstudios.etj.gameObjects.JunkGenerator.java", "BodyUseAPI": ["StaticSystem.currentScene.getGameObjects().add(((StaticSystem.currentScene.getGameObjects().size()) - 5),de.naclstudios.etj.gameObjects.JunkHill)", "java.util.Random.nextInt(int)"], "Fixed commit": "9d7b42dabdf00a93ddc73c4b4cd99177a33bc3d2", "Url": "https://api.github.com/repos/edgelord314/escapethejunk", "Date": "2018-08-14T13:08:55Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((schema.field(\"after\")) != null) { dpSchema = schema.field(\"after\").schema(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1341/buggy-version/src.main.java.io.confluent.connect.hdfs.parquet.ParquetHiveUtil.java", "BodyUseAPI": ["schema.field(\"after\").schema()", "org.apache.kafka.connect.data.Schema.field(java.lang.String)"], "Fixed commit": "cef710a0978de4f2c9da18562dfb220d233fa27a", "Url": "https://api.github.com/repos/DataPipelineInc/kafka-connect-hdfs", "Date": "2018-08-31T12:08:54Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((schema.field(\"after\")) != null) { dpSchema = schema.field(\"after\").schema(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1341/buggy-version/src.main.java.io.confluent.connect.hdfs.csv.CsvHiveUtil.java", "BodyUseAPI": ["schema.field(\"after\").schema()", "org.apache.kafka.connect.data.Schema.field(java.lang.String)"], "Fixed commit": "cef710a0978de4f2c9da18562dfb220d233fa27a", "Url": "https://api.github.com/repos/DataPipelineInc/kafka-connect-hdfs", "Date": "2018-08-31T12:08:54Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((schema.field(\"after\")) != null) { dpSchema = schema.field(\"after\").schema(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1341/buggy-version/src.main.java.io.confluent.connect.hdfs.avro.AvroHiveUtil.java", "BodyUseAPI": ["org.apache.kafka.connect.data.Schema.field(java.lang.String)", "schema.field(\"after\").schema()"], "Fixed commit": "cef710a0978de4f2c9da18562dfb220d233fa27a", "Url": "https://api.github.com/repos/DataPipelineInc/kafka-connect-hdfs", "Date": "2018-08-31T12:08:54Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cn.jzvd.JZVideoPlayerManager.getCurrentJzvd().currentScreen) != (cn.jzvd.JZVideoPlayer.SCREEN_WINDOW_FULLSCREEN)) { cn.jzvd.JZVideoPlayer.releaseAllVideos(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4741/buggy-version/app.src.main.java.cn.jzvd.demo.ActivityListViewRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "c7e077de010b232ac878d186562911e19686ae49", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2018-02-12T05:56:09Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aQ == 0) { r.netTotal.heatGenerationCosts = 0; r.grossTotal.heatGenerationCosts = 0; }else { r.netTotal.heatGenerationCosts = (r.netTotal.annualCosts) / aQ; r.grossTotal.heatGenerationCosts = (r.grossTotal.annualCosts) / aQ; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6021/buggy-version/sophena.src.sophena.calc.CostCalculator.java", "BodyUseAPI": [], "Fixed commit": "fa76d59640af7f311017ec74ef7c27a7c1d17966", "Url": "https://api.github.com/repos/GreenDelta/Sophena", "Date": "2018-06-18T09:03:36Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (min == max) { max += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6021/buggy-version/sophena.src.sophena.rcp.editors.results.compare.BarChart.java", "BodyUseAPI": [], "Fixed commit": "fa76d59640af7f311017ec74ef7c27a7c1d17966", "Url": "https://api.github.com/repos/GreenDelta/Sophena", "Date": "2018-06-18T09:03:36Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<hackerbois.bruinstrooms.Restroom>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(rest.getEmergencyStatus().equals(\"none\"))) { nvh.roomName.setTextColor(Color.RED); }else { nvh.roomName.setTextColor(Color.BLACK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/279/buggy-version/app.src.main.java.hackerbois.bruinstrooms.NearbyAdapter.java", "BodyUseAPI": [], "Fixed commit": "5b959a86861e575106905bb9a3b22065aec3d1f7", "Url": "https://api.github.com/repos/brianc725/Bruinstrooms", "Date": "2018-03-09T01:43:21Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(rest.getEmergencyStatus().equals(\"none\"))) { EmergencyButton.setText(\"View Emergency\"); EmergencyButton.setTextColor(Color.RED); }else { EmergencyButton.setText(\"Send Emergency\"); EmergencyButton.setTextColor(Color.BLACK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/279/buggy-version/app.src.main.java.hackerbois.bruinstrooms.RestroomActivity.java", "BodyUseAPI": [], "Fixed commit": "5b959a86861e575106905bb9a3b22065aec3d1f7", "Url": "https://api.github.com/repos/brianc725/Bruinstrooms", "Date": "2018-03-09T01:43:21Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vendorId < 1) || (vendorId > (maxVendorSize))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/523/buggy-version/src.main.java.com.iab.gdpr.ConsentStringParser.java", "BodyUseAPI": [], "Fixed commit": "aa58144091c610e96ed399ab8821955e3e604aa8", "Url": "https://api.github.com/repos/dataxu/Consent-String-SDK-Java", "Date": "2018-05-21T20:57:36Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (searchMatch == null) { searchMatch = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8804/buggy-version/src.main.java.api.rest.SearchableResource.java", "BodyUseAPI": [], "Fixed commit": "e5cb9743eebf4368a2485bebcfa9230c3193edab", "Url": "https://api.github.com/repos/PeterEdtu/DTU_Guide_group9", "Date": "2018-05-07T19:23:21Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((fileNames.size()) == 0) { throw new java.io.IOException(seedu.address.model.backup.BackupList.MESSAGE_BACKUP_CONSTRAINTS); }else { java.util.Collections.reverse(fileNames); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2580/buggy-version/src.main.java.seedu.address.model.backup.BackupList.java", "BodyUseAPI": [], "Fixed commit": "35546b02b03305ae7ca82c853632473d113e28ba", "Url": "https://api.github.com/repos/CS2113-AY1819S1-W12-3/main", "Date": "2018-10-07T12:26:23Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entity.getRoomUser().isSittingOnGround())) { if ((java.lang.Math.abs(((entity.getRoomUser().getPosition().getZ()) - (roller.getPosition().getZ())))) >= 0.1) { if (((nextTile.getHighestItem()) != null) && (nextTile.getHighestItem().hasBehaviour(ItemBehaviour.ROLLER))) { nextPosition.setZ(((roller.getPosition().getZ()) + (roller.getDefinition().getTopHeight()))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3599/buggy-version/Kepler-Server.src.main.java.org.alexdev.kepler.game.item.roller.EntityRollingAnalysis.java", "BodyUseAPI": ["java.lang.Math.abs(((entity.getRoomUser().getPosition().getZ()) - (roller.getPosition().getZ())))", "entity.getRoomUser().getPosition().getZ()", "entity.getRoomUser().getPosition()", "org.alexdev.kepler.game.entity.Entity.getRoomUser()"], "Fixed commit": "7f696dd108eef2d1a1d7c35734eb79d797a1920f", "Url": "https://api.github.com/repos/emansom/Kepler", "Date": "2018-07-20T10:51:23Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cmds[0].equals(\"DISCARD\")) java.lang.System.out.println(\"Yeah what the fuck\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3069/buggy-version/PokerServer.Game.java", "BodyUseAPI": [], "Fixed commit": "d1cc4e1df6c6a044f28fc80c2120c897b3e80dd8", "Url": "https://api.github.com/repos/check080/233PokerGame", "Date": "2018-07-20T06:24:03Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.getGeneratedKeys()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (result.next()) { java.lang.Object key = result.getObject(1); if (!(result.isClosed())) result.close(); if (!(preparedStatement.isClosed())) preparedStatement.close(); if ((this.transConnection) == null) { if (!(connection.isClosed())) connection.close(); } return key; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/939/buggy-version/src.com.mirahome.lib.FastMysqlClient2.java", "BodyUseAPI": ["java.sql.ResultSet.getObject(int)", "java.sql.ResultSet.isClosed()", "java.sql.ResultSet.close()"], "Fixed commit": "3d32325490d907d2447ff04db87366f0c9f95c41", "Url": "https://api.github.com/repos/kyozhou/java_lib", "Date": "2018-06-12T09:52:11Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((args.length) < 2) || (args[0].isEmpty())) { throw new java.lang.IllegalArgumentException(\"Voc\ufffd deve especificar: IP:Porta do Broker e Porta COM\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1371/buggy-version/src.main.java.xbee.MainApp.java", "BodyUseAPI": [], "Fixed commit": "83ccdc4f6539c36b60d02457ea28cebfcd9aa85f", "Url": "https://api.github.com/repos/joaomotajr/xBeeEneeyes", "Date": "2018-08-30T02:54:13Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smartdevicelink.protocol.enums.SessionType.valueOf(((byte) (packet.getServiceType())))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (serviceType == (com.smartdevicelink.protocol.enums.SessionType.RPC)) { java.util.ArrayList<java.lang.String> secondary = ((java.util.ArrayList<java.lang.String>) (packet.getTag(ControlFrameTags.RPC.StartServiceACK.SECONDARY_TRANSPORTS))); java.util.ArrayList<java.lang.Integer> audio = ((java.util.ArrayList<java.lang.Integer>) (packet.getTag(ControlFrameTags.RPC.StartServiceACK.AUDIO_SERVICE_TRANSPORTS))); java.util.ArrayList<java.lang.Integer> video = ((java.util.ArrayList<java.lang.Integer>) (packet.getTag(ControlFrameTags.RPC.StartServiceACK.VIDEO_SERVICE_TRANSPORTS))); handleEnableSecondaryTransport(((byte) (packet.getSessionId())), secondary, audio, video); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9716/buggy-version/sdl_android.src.main.java.com.smartdevicelink.protocol.WiProProtocol.java", "BodyUseAPI": [], "Fixed commit": "ec2a586c5503a98ed290ca1358243f822586bd8a", "Url": "https://api.github.com/repos/anildahiya/sdl_android", "Date": "2018-05-08T19:12:12Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Settings.Global.getInt(com.android.internal.telephony.SubscriptionInfoUpdater.mPhone[slotId].getContext().getContentResolver(),((android.provider.Settings.Global.PREFERRED_NETWORK_MODE) + subId),int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (networkType == (-1)) { networkType = RILConstants.PREFERRED_NETWORK_MODE; Settings.Global.putInt(com.android.internal.telephony.SubscriptionInfoUpdater.mPhone[slotId].getContext().getContentResolver(), ((android.provider.Settings.Global.PREFERRED_NETWORK_MODE) + subId), networkType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2258/buggy-version/src.java.com.android.internal.telephony.SubscriptionInfoUpdater.java", "BodyUseAPI": [], "Fixed commit": "7abeb535d81de06c69ca06c567841cbeec251107", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-opt-telephony", "Date": "2018-01-31T21:37:41Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (hashedPw == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5709/buggy-version/todo-app-plugin.src.main.java.webserver.AuthUsersRegistry.java", "BodyUseAPI": [], "Fixed commit": "ad2d91e083cdfea6b98d07abc6d73aeb59abacae", "Url": "https://api.github.com/repos/MarkusPunnar/OOP_Webserver", "Date": "2018-05-24T11:21:46Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((m_users.get(m_userIDIndex.get(uId)).getReviewByID(id)) != null) m_users.get(m_userIDIndex.get(uId)).getReviewByID(id).setMask4CV(mask);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9817/buggy-version/src.Analyzer.MultiThreadedNetworkAnalyzer.java", "BodyUseAPI": ["m_users.get(m_userIDIndex.get(uId)).getReviewByID(id).setMask4CV(int)", "m_users.get(m_userIDIndex.get(uId)).getReviewByID(int)", "Analyzer.MultiThreadedNetworkAnalyzer.get(m_userIDIndex.get(uId))", "Analyzer.MultiThreadedNetworkAnalyzer.get(java.lang.String)"], "Fixed commit": "31e30edf17942a5cd758d1747acc02257af10840", "Url": "https://api.github.com/repos/Linda-sunshine/IR_Base", "Date": "2018-10-29T07:40:34Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((foundWordRowNumber) < lastWordMinusMaximumWordsToShow) { indexOfFirstWordToLoad = foundWordRowNumber; }else { indexOfFirstWordToLoad = lastWordMinusMaximumWordsToShow; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3036/buggy-version/src.com.kanji.list.loadAdditionalWordsHandling.FoundWordOutsideRangeStrategy.java", "BodyUseAPI": [], "Fixed commit": "efc199e64d9b534b61b2473c578b18cc5f5073e1", "Url": "https://api.github.com/repos/matpie33/JapaneseLearningApp", "Date": "2018-07-13T20:35:49Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getLineCount()) < (iMaxLines)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1472/buggy-version/app.src.main.java.com.fff.ingood.ui.ExpandableTextView.java", "BodyUseAPI": [], "Fixed commit": "99df6451109a58a54917aa232f3b1a78b73da78d", "Url": "https://api.github.com/repos/elminsterii/IngoodClientAndroid", "Date": "2018-07-06T04:13:50Z"},
{"Line": "=>4217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((detector.getActiveSensor().getType()) == (Sensor.TYPE_AERO_SENSOR)) { if (distance > (Sensor.ASF_RADAR_MAX_RANGE)) { toRemove.add(target); } }else { if (distance > (detector.getActiveSensor().getRangeByBracket())) { toRemove.add(target); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5178/buggy-version/megamek.src.megamek.common.Compute.java", "BodyUseAPI": ["megamek.common.Entity.getActiveSensor()", "detector.getActiveSensor().getRangeByBracket()"], "Fixed commit": "7390e3f40e68dfa7fbd938189d7ea479804e118a", "Url": "https://api.github.com/repos/mkerensky/megamek", "Date": "2018-07-18T20:02:16Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (differentDate > ((60 * 60) * 1000)) different = differentDate - ((60 * 60) * 1000);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5201/buggy-version/InternalTimeSheet.core.src.main.java.br.com.accera.core.presentation.utilities.DateUtil.java", "BodyUseAPI": [], "Fixed commit": "6581ac1ded5f5dda1f144dd2fb972ee0e4698d0f", "Url": "https://api.github.com/repos/MayconCardoso/accera-internal-timesheet", "Date": "2018-07-18T21:34:50Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.loxf.jyadmin.base.bean.BaseResult<java.math.BigDecimal>.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((custCashDto.getBalance().compareTo(accountBalance)) < 0) { throw new org.loxf.jyadmin.base.exception.BizException(\"\u8d26\u6237\u4f59\u989d\u4e0d\u8db3\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7942/buggy-version/jy-admin-biz.src.main.java.org.loxf.jyadmin.biz.CustCashServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "8f64c7daa1da3a819cb3ae01ad808f4709b88683", "Url": "https://api.github.com/repos/loxf/jyadmin", "Date": "2018-04-25T10:08:30Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rawLookup == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.LINE_COMMENT)) && (rawLookup2 == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.LINE_COMMENT))) { if ((next1Element == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.COLON)) && (next3Element == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.COLON))) { return false; } if (latestDoneMarker != null) { return true; } }else if ((rawLookup == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.LINE_COMMENT)) && (rawLookup2 == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.RIGHT_BRACE))) { if ((next1Element == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.COLON)) && (next2Element == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.IDENTIFIER))) { return true; } }else if ((rawLookup == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.LINE_COMMENT)) && (rawLookup2 == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.LEFT_BRACE))) { if ((next1Element == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.COLON)) && (next2Element == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.IDENTIFIER))) { return true; } }else if ((rawLookup == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.LINE_COMMENT)) && (rawLookup2 == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.COMMA))) { if ((next1Element == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.COLON)) && (next2Element == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.IDENTIFIER))) { com.intellij.psi.tree.IElementType tokenType = latestDoneMarker.getTokenType(); if (tokenType == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.RECORD_KEY_VALUE)) { return false; } return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/232/buggy-version/tool-plugins.intellij.src.main.gen.org.ballerinalang.plugins.idea.parser.BallerinaParserUtil.java", "BodyUseAPI": [], "Fixed commit": "36197c6af69efbcb48725d17519d570821d75c0d", "Url": "https://api.github.com/repos/Shan1024/ballerina", "Date": "2018-05-24T09:45:40Z"},
{"Line": "=>2005", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data2draw == null) { backup[count] = new org.nschmidt.ldparteditor.data.GData0(\"\", false, org.nschmidt.ldparteditor.enums.View.DUMMY_REFERENCE); }else { data2draw = data2draw.getNext(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6202/buggy-version/src.org.nschmidt.ldparteditor.data.DatFile.java", "BodyUseAPI": ["org.nschmidt.ldparteditor.data.GData.getNext()"], "Fixed commit": "b49bb05ce3e5032df6184f69046b5cfe1c0663ed", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2018-01-12T23:00:33Z"},
{"Line": "=>2010", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (data2draw != null) { backup[count] = data2draw; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6202/buggy-version/src.org.nschmidt.ldparteditor.data.DatFile.java", "BodyUseAPI": [], "Fixed commit": "b49bb05ce3e5032df6184f69046b5cfe1c0663ed", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2018-01-12T23:00:33Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileName != null) { saveAs = fileName; java.lang.String extension = url.toExternalForm().substring(((url.toExternalForm().lastIndexOf(\".\")) + 1)); saveAs = (saveAs + \".\") + extension; }else { saveAs = url.toExternalForm(); saveAs = saveAs.substring(((saveAs.lastIndexOf('/')) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6443/buggy-version/src.main.java.com.rarchives.ripme.ripper.AbstractRipper.java", "BodyUseAPI": [], "Fixed commit": "c9c85429456543cd4fedc8083b1b9614e1b84bc8", "Url": "https://api.github.com/repos/rephormat/ripme", "Date": "2018-03-12T16:40:13Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((build.getLabel()) == null) || (org.springframework.util.StringUtils.isEmpty(build.getLabel()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3708/buggy-version/src.main.java.com.vanke.house.service.BuildService.java", "BodyUseAPI": [], "Fixed commit": "882575ef3366c58467e6b994f9f4925d22a7194d", "Url": "https://api.github.com/repos/Michael-Guo/house", "Date": "2018-06-30T16:20:03Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size == 0) { }else if (size == 1) { build.setLabelServe(labels[0]); build.setLabel(null); }else if (size == 2) { build.setLabelServe(labels[0]); build.setLabelType(labels[1]); build.setLabel(null); }else if (size == 3) { build.setLabelServe(labels[0]); build.setLabelType(labels[1]); build.setLabelAddress(labels[2]); build.setLabel(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3708/buggy-version/src.main.java.com.vanke.house.service.BuildService.java", "BodyUseAPI": [], "Fixed commit": "882575ef3366c58467e6b994f9f4925d22a7194d", "Url": "https://api.github.com/repos/Michael-Guo/house", "Date": "2018-06-30T16:20:03Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((android.app.Activity) (context)).isFinishing())) { android.app.AlertDialog.Builder builder; if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { builder = new android.app.AlertDialog.Builder(context, android.R.style.Theme_Material_Dialog_Alert); }else { builder = new android.app.AlertDialog.Builder(context); } builder.setTitle(\"aeond\").setMessage(org.aeon.aeondaemon.app.Fragments.MainSlideFragment.execError).setPositiveButton(android.R.string.yes, new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int which) { } }).setIcon(android.R.drawable.ic_dialog_alert).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8912/buggy-version/app.src.main.java.org.aeon.aeondaemon.app.Fragments.MainSlideFragment.java", "BodyUseAPI": [], "Fixed commit": "4b7150f722bf8a21454a4be4fc9e0f86b5e848fe", "Url": "https://api.github.com/repos/enerc/Aeon-daemon", "Date": "2018-06-12T13:13:18Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.http.impl.client.CloseableHttpClient.execute(org.apache.http.client.methods.HttpRequestBase)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((response.getEntity()) == null) { responseDto.setResponseByte(null); return responseDto; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3463/buggy-version/src.main.java.com.github.erodriguezg.http.HttpClientUtils.java", "BodyUseAPI": [], "Fixed commit": "73735fd88a0e1edde366538fd276209c2da8ce4f", "Url": "https://api.github.com/repos/erodriguezg/clave-unica-cl-lib", "Date": "2018-07-20T16:38:41Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.createdFilesToPush.contains(filePath))) { this.createdFilesToPush.add(filePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2459/buggy-version/repairnator.repairnator-pipeline.src.main.java.fr.inria.spirals.repairnator.process.inspectors.JobStatus.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "09f188489e2747a4fbb348eb4f7354328321a14c", "Url": "https://api.github.com/repos/Spirals-Team/repairnator", "Date": "2018-01-17T12:38:06Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arrayData) != null) { java.lang.String[] arrayObj = new java.lang.String[arrayData.size()]; for (int i = 0; i < (arrayData.size()); i++) { arrayObj[i] = arrayData.get(i).toString(); } return arrayObj; }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8041/buggy-version/eth-jdbc-driver.src.main.java.com.impetus.eth.jdbc.EthArray.java", "BodyUseAPI": [], "Fixed commit": "5232e05f2963950182b049183dec36ff6062e9b4", "Url": "https://api.github.com/repos/ashishkshukla/eth-jdbc-connector", "Date": "2018-08-28T09:53:15Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cells) == null) { cells = new java.util.concurrent.atomic.AtomicIntegerArray(new int[io.github.pr0methean.betterrandom.prng.CellularAutomatonRandom.AUTOMATON_LENGTH]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/681/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.CellularAutomatonRandom.java", "BodyUseAPI": [], "Fixed commit": "c5c57b39e73de9fb1a5f7265d922c82b3c48bcbc", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2018-05-09T07:55:08Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.scripps.yates.utilities.fasta.FastaReader.getFastas()", "edu.scripps.yates.annotations.uniprot.proteoform.fasta.ProteoFormFastaReader.getProteoFormFastaIterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fastas.hasNext()) && (proteoFormFastaIterator.hasNext())) { return com.google.common.collect.Iterators.concat(fastas, proteoFormFastaIterator); }else if (fastas.hasNext()) { return fastas; }else if (proteoFormFastaIterator.hasNext()) { return proteoFormFastaIterator; }else { final java.util.List<edu.scripps.yates.utilities.fasta.Fasta> emptyList = new java.util.ArrayList<edu.scripps.yates.utilities.fasta.Fasta>(); return emptyList.iterator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5718/buggy-version/pint.annotations.src.main.java.edu.scripps.yates.annotations.uniprot.proteoform.fasta.ProteoFormFastaReader.java", "BodyUseAPI": ["com.google.common.collect.Iterators.concat(java.util.Iterator<edu.scripps.yates.utilities.fasta.Fasta>,java.util.Iterator<edu.scripps.yates.utilities.fasta.Fasta>)", "java.util.Iterator<edu.scripps.yates.utilities.fasta.Fasta>.hasNext()", "java.util.Iterator<edu.scripps.yates.utilities.fasta.Fasta>.hasNext()"], "Fixed commit": "a8e3b92107d042a784a743fae8b3d599f5214cbd", "Url": "https://api.github.com/repos/proteomicsyates/PINT", "Date": "2018-09-01T00:07:01Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Multimap<java.lang.String, java.lang.String>.get((typeDeclaration == null ? null : typeDeclaration.name()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((mediaTypes.size()) > 0) { org.raml.jaxrs.generator.builders.resources.AnnotationSpec.Builder ann = buildAnnotation(mediaTypes, org.raml.jaxrs.generator.builders.resources.Consumes.class); methodSpec.addAnnotation(ann.build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2902/buggy-version/raml-to-jaxrs.jaxrs-code-generator.src.main.java.org.raml.jaxrs.generator.builders.resources.ResourceBuilder.java", "BodyUseAPI": ["org.raml.jaxrs.generator.builders.resources.ResourceBuilder.buildAnnotation(java.util.Collection<java.lang.String>,java.lang.Class)"], "Fixed commit": "3c00d599c8e496b8514925873744f92268bea289", "Url": "https://api.github.com/repos/mulesoft-labs/raml-for-jax-rs", "Date": "2018-04-28T10:16:18Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (te.getWorld().isAirBlock(te.getPos())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9078/buggy-version/src.main.java.mcjty.efab.blocks.grid.GridRenderer.java", "BodyUseAPI": [], "Fixed commit": "d1d53d33a40381b720cb94f4821909cf290fec0b", "Url": "https://api.github.com/repos/McJtyMods/EFab", "Date": "2018-03-16T19:09:30Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((values.size()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2736/buggy-version/core.src.com.tank.utils.CycleList.java", "BodyUseAPI": [], "Fixed commit": "29932523f1b897a1eb095ef4117725cacb860d5f", "Url": "https://api.github.com/repos/The-Church-of-Daniel-Pham/TankInfinity", "Date": "2018-05-31T23:52:49Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((values.size()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2736/buggy-version/core.src.com.tank.utils.CycleList.java", "BodyUseAPI": [], "Fixed commit": "29932523f1b897a1eb095ef4117725cacb860d5f", "Url": "https://api.github.com/repos/The-Church-of-Daniel-Pham/TankInfinity", "Date": "2018-05-31T23:52:49Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getQuark(com.radixdlt.client.core.atoms.particles.quarks.DataQuark.class).getMetaData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (metaData == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8143/buggy-version/radixdlt-java.src.main.java.com.radixdlt.client.core.atoms.particles.StorageParticle.java", "BodyUseAPI": [], "Fixed commit": "b5dc39ae5065102f2c7aa5a5a7d395584cc56f5c", "Url": "https://api.github.com/repos/radixdlt/radixdlt-java", "Date": "2018-10-17T16:51:15Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 2) { if (me.WitherPunishment.Main.english) { sender.sendMessage(((((((org.bukkit.ChatColor.DARK_RED) + \"Punishment Set> \") + (org.bukkit.ChatColor.RED)) + \" Correct usage: \") + (org.bukkit.ChatColor.GOLD)) + \" /pset language [brazilian/english]\")); }else { sender.sendMessage(((((((org.bukkit.ChatColor.DARK_RED) + \"Punishment Set> \") + (org.bukkit.ChatColor.RED)) + \" Uso correto: \") + (org.bukkit.ChatColor.GOLD)) + \" /pset language [brazilian/english]\")); } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1610/buggy-version/src.me.WitherPunishment.commands.Punish.java", "BodyUseAPI": [], "Fixed commit": "70aee30ac3aebb38027742347f64959c6f78ca8d", "Url": "https://api.github.com/repos/Gabriel8579/WitherPunishment", "Date": "2018-02-25T18:23:42Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((key) instanceof java.math.BigInteger) { return asBigInteger().intValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8785/buggy-version/src.main.java.io.github.biezhi.anima.core.ResultKey.java", "BodyUseAPI": [], "Fixed commit": "6faec07b0af9be17aac53d02169b22cb08ca2de2", "Url": "https://api.github.com/repos/xiwenAndlejian/anima", "Date": "2018-09-05T03:16:29Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(Topics.contains(TopicName))) { if (!(GetConnectonStatus())) return false; return RMIForum.Broker.ServerConnected.ManagePublish(msg, TopicName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4391/buggy-version/Broker.BrokerClass.java", "BodyUseAPI": ["RMIForum.Broker.ServerConnected.ManagePublish(RMIForum.Broker.MessageClass,java.lang.String)"], "Fixed commit": "8429e4b544d6ba024822d46d632622989ef51544", "Url": "https://api.github.com/repos/non-sono-bello-ma-patcho/RMIForum", "Date": "2018-07-16T16:01:59Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.link) == null) { throw new seedu.address.commons.exceptions.IllegalValueException(java.lang.String.format(seedu.address.storage.XmlAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT, seedu.address.model.person.Link.class.getSimpleName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7700/buggy-version/src.main.java.seedu.address.storage.XmlAdaptedPerson.java", "BodyUseAPI": [], "Fixed commit": "ddf3819237c910a64206d1eeda295eba2fc282a0", "Url": "https://api.github.com/repos/CS2103JAN2018-W11-B3/main", "Date": "2018-04-03T15:56:23Z"},
{"Line": "=>853", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attached && (activity.isChangingConfigurations())) { needsAttach = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5688/buggy-version/conductor.src.main.java.com.bluelinelabs.conductor.Controller.java", "BodyUseAPI": [], "Fixed commit": "24754364c82c65a725dee7c587ed07b791682d25", "Url": "https://api.github.com/repos/MaTriXy/Conductor", "Date": "2018-07-18T18:32:24Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.onetwo.common.utils.StringUtils.isBlank(jsonstr)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5990/buggy-version/core.modules.jackson.src.main.java.org.onetwo.common.jackson.JsonMapper.java", "BodyUseAPI": [], "Fixed commit": "cbff1ec23e4d4b31bb56313341a7f20992f53f23", "Url": "https://api.github.com/repos/wayshall/onetwo", "Date": "2018-10-17T06:12:47Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) startForegroundService(serviceIntent); else startService(serviceIntent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8495/buggy-version/app.src.main.java.gis2018.udacity.pomodoro.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1110ebebfde89408bee5754509270f5d1aa8a0ef", "Url": "https://api.github.com/repos/kartikohri1712/abnd-track-pomodoro-timer-app", "Date": "2018-10-18T13:38:51Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.getCause()) != null) { message += \":\" + (t.getCause().getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/675/buggy-version/stdlib.database.sql.src.main.java.org.ballerinalang.database.sql.SQLDatasource.java", "BodyUseAPI": ["java.lang.Throwable.getCause()", "java.lang.Throwable.getMessage()"], "Fixed commit": "2f71bd23a6f13f839609a3cb1c729f597a99f212", "Url": "https://api.github.com/repos/ballerina-platform/ballerina-lang", "Date": "2018-10-26T03:15:29Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((logInEvent) == null) { logInEvent = new com.bobo.gmargiani.bobo.evenbuts.events.LogInEvent(); logInEvent.setState(RootEvent.STATE_SUCCESS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9816/buggy-version/app.src.main.java.com.bobo.gmargiani.bobo.model.UserInfo.java", "BodyUseAPI": [], "Fixed commit": "307bc7956caee9dc5c8991fc4865335e4a372b58", "Url": "https://api.github.com/repos/svaney/bobo", "Date": "2018-07-20T09:25:09Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tools.Util.DEBUG) { java.lang.String blockName = ((mf.getFunction().getName()) + \":\") + (mbb.getBasicBlock().getName()); curDAG.viewGraph((\"dag-before-legalize for \" + blockName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6978/buggy-version/java.backend.codegen.dagisel.SelectionDAGISel.java", "BodyUseAPI": [], "Fixed commit": "932428fcbf459f8cea253b8c167e81fbd36ed213", "Url": "https://api.github.com/repos/JianpingZeng/xcc", "Date": "2018-06-09T14:35:45Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((grid.getHex(h1)) != null) { affected.add(grid.getHex(h1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/925/buggy-version/src.Isaac.java", "BodyUseAPI": ["java.util.ArrayList<Hex>.add(grid.getHex(h1))", "Isaac.getHex(Hex)"], "Fixed commit": "49a38880765362a6c10b3fdb8cc43e5e7a5fda8e", "Url": "https://api.github.com/repos/kxu9969/Ground-Zero", "Date": "2018-07-25T19:58:49Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) { java.lang.System.out.println(\"Usage : ServerLauncher <server name>\"); java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6025/buggy-version/src.main.java.org.magic.api.main.ServerLauncher.java", "BodyUseAPI": [], "Fixed commit": "09605c28ea9d8a50f659faca423fb0e919803b61", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-09-18T15:28:29Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == null) { timber.log.Timber.e(\"date is null\"); return context.getString(R.string.error_occured); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9549/buggy-version/collect_app.src.main.java.org.odk.collect.android.tasks.sms.SmsService.java", "BodyUseAPI": [], "Fixed commit": "9c790238518886b9484e54ab4606d6d361b8cdb2", "Url": "https://api.github.com/repos/smap-consulting/fieldTask4", "Date": "2018-07-25T21:10:52Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((insetViewPort) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7780/buggy-version/src.main.java.jme3maze.controller.InsetSlotState.java", "BodyUseAPI": [], "Fixed commit": "aaaf1b0440f17e933b1a5a4755b324d973b4b72c", "Url": "https://api.github.com/repos/stephengold/jme3-maze", "Date": "2018-07-25T05:12:41Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((universeWrapper.getTargetWorld()) != null) { uri = universeWrapper.getTargetWorld().getWorldGenerator().getUri(); }else { uri = config.getWorldGeneration().getDefaultGenerator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/558/buggy-version/engine.src.main.java.org.terasology.rendering.nui.layers.mainMenu.GameManifestProvider.java", "BodyUseAPI": ["universeWrapper.getTargetWorld().getWorldGenerator()", "universeWrapper.getTargetWorld().getWorldGenerator().getUri()", "org.terasology.rendering.nui.layers.mainMenu.UniverseWrapper.getTargetWorld()"], "Fixed commit": "b08898dd1a07c99b3c883561a2a5f13cedcb26e8", "Url": "https://api.github.com/repos/ar0ne/Terasology", "Date": "2018-07-25T15:27:50Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { context.startForegroundService(notificationIntent); }else { context.startActivity(notificationIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1400/buggy-version/fcm_library.src.main.java.flyrobe.com.fcm_library.receiver.Notification_action_listner.java", "BodyUseAPI": [], "Fixed commit": "a3c7677e5ae6dfdce7bd30294eeba772e969681c", "Url": "https://api.github.com/repos/Flyrobe/android-notification-library", "Date": "2018-10-05T11:29:47Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actionInfo.isFinished()) && (actionInfo.isSuccessful())) { metaStore.insertUpdateFileState(new org.smartdata.model.S3FileState(path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8978/buggy-version/smart-hadoop-support.smart-hadoop.src.main.java.org.smartdata.hdfs.scheduler.Copy2S3Scheduler.java", "BodyUseAPI": [], "Fixed commit": "2691f5f93d7342564dfa5eff79777aeba5822f3d", "Url": "https://api.github.com/repos/qiyuangong/SSM", "Date": "2018-03-13T05:43:15Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((feature) != null) { return feature.toString(); }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4627/buggy-version/plugins.de.ovgu.featureide.fm.ui.src.de.ovgu.featureide.fm.ui.editors.elements.GraphicalFeature.java", "BodyUseAPI": [], "Fixed commit": "62258596f7c63307949a80bb926efbd6314e330d", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2018-02-08T17:20:04Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trackingConsole) != null) { trackingConsole.destroy(); trackingConsole = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6975/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.vision.analysis.CryptoboxTracker.java", "BodyUseAPI": [], "Fixed commit": "ade55d1b38660dd6c38a94775272f93f87b186ec", "Url": "https://api.github.com/repos/RoboNatick3737/2017-18", "Date": "2018-01-16T19:07:25Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trackingConsole) == null) { trackingConsole = LoggingBase.instance.newProcessConsole(\"Tracking Console\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6975/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.vision.analysis.CryptoboxTracker.java", "BodyUseAPI": [], "Fixed commit": "ade55d1b38660dd6c38a94775272f93f87b186ec", "Url": "https://api.github.com/repos/RoboNatick3737/2017-18", "Date": "2018-01-16T19:07:25Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kuyun.eam.admin.util.EamUtil.getEquipmentIds()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(equipmentIds.isEmpty())) { recordVO.setEquipmentIds(equipmentIds); }else { if (org.apache.commons.lang.StringUtils.isEmpty(recordVO.getEquipmentId())) { recordVO.setEquipmentId(\"-1\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1089/buggy-version/kuyun-eam.kuyun-eam-admin.src.main.java.com.kuyun.eam.admin.controller.manager.EamAlarmRecordHistoryController.java", "BodyUseAPI": ["com.kuyun.eam.vo.EamAlarmRecordVO.setEquipmentIds(java.util.List<java.lang.String>)"], "Fixed commit": "fe3a1b4e2a5d1ae126a0c2150fd86dc43124c861", "Url": "https://api.github.com/repos/bobshi2005/kuyun", "Date": "2018-01-17T01:58:29Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDebugEnabled()) { logDebug(java.lang.String.format((\"User: %s denied consent to share information with the service: \" + \"provider %s\"), authenticatedUser.getAuthenticatedSubjectIdentifier(), applicationConfig.getApplicationName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3550/buggy-version/components.authentication-framework.org.wso2.carbon.identity.application.authentication.framework.src.main.java.org.wso2.carbon.identity.application.authentication.framework.handler.request.impl.consent.ConsentMgtPostAuthnHandler.java", "BodyUseAPI": [], "Fixed commit": "e3fc47f9f7702b3057a79ea7fe8f6d9669185af2", "Url": "https://api.github.com/repos/omindu/carbon-identity-framework", "Date": "2018-03-02T04:17:55Z"},
{"Line": "=>974", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count > 500) { result.append(original.substring(current, (current + Offset)).replace(\"\\r\", \"\").replace(\"\\n\", \"\\\\n\")).append(\"\\\" + new String()\\n+\\\"\"); count = 0; }else { result.append(original.substring(current, (current + Offset)).replace(\"\\r\", \"\").replace(\"\\n\", \"\\\\n\")).append(\"\\\"\\n+\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8640/buggy-version/main.plugins.org.talend.core.runtime.src.main.java.org.talend.core.model.utils.NodeUtil.java", "BodyUseAPI": [], "Fixed commit": "9d3cb27f64145fe40c37011c8c6cd9beb0037902", "Url": "https://api.github.com/repos/pyzhou-talend/tcommon-studio-se", "Date": "2018-02-07T02:45:50Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.length) == 0) { timber.log.Timber.d(\"Empty data, we should not send to the boscloner\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5272/buggy-version/app.src.main.java.com.boscloner.bosclonerv2.bluetooth.FetchBluetoothData.java", "BodyUseAPI": [], "Fixed commit": "4053ed0236736206686bdd0a8baeb5ebacbf182c", "Url": "https://api.github.com/repos/Boscloner/Boscloner-Android-v2", "Date": "2018-07-13T19:20:59Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.ehcache.search.Results.all()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((resultList != null) && ((resultList.size()) != 0)) { list = new java.util.ArrayList<>(); for (net.sf.ehcache.search.Result result : resultList) { list.add(((T) (result.getValue()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4462/buggy-version/common.src.com.hex.bigdata.udsp.common.dao.cache.EhCache.java", "BodyUseAPI": [], "Fixed commit": "080969128948d33db972161216d588907dd23485", "Url": "https://api.github.com/repos/junjiem/boracay", "Date": "2018-07-02T01:14:19Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getItemStack().getItem()) instanceof slimeknights.tconstruct.library.tools.TinkerToolCore) { if (((slimeknights.tconstruct.library.tools.TinkerToolCore) (event.getItemStack().getItem())).getIdentifier().toLowerCase().equals(temp.toLowerCase())) { event.setCanceled(((\"You can not create a \" + (event.getItemStack().getDisplayName())) + \" due to its been disabled!\")); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4972/buggy-version/src.main.java.com.mjr.tinkersextras.EventHandlerMain.java", "BodyUseAPI": ["slimeknights.tconstruct.library.events.TinkerCraftingEvent.ToolCraftingEvent.getItemStack()", "event.getItemStack().getDisplayName()", "((slimeknights.tconstruct.library.tools.TinkerToolCore) (event.getItemStack().getItem())).getIdentifier()", "slimeknights.tconstruct.library.events.TinkerCraftingEvent.ToolCraftingEvent.getItemStack()", "((slimeknights.tconstruct.library.tools.TinkerToolCore) (event.getItemStack().getItem())).getIdentifier().toLowerCase()", "slimeknights.tconstruct.library.events.TinkerCraftingEvent.ToolCraftingEvent.setCanceled(((\"You can not create a \" + (event.getItemStack().getDisplayName())) + \" due to its been disabled!\"))", "event.getItemStack().getItem()", "((slimeknights.tconstruct.library.tools.TinkerToolCore) (event.getItemStack().getItem())).getIdentifier().toLowerCase().equals(java.lang.String)"], "Fixed commit": "17fcb3adc6dc4a5dface76804d4e9945d16efb43", "Url": "https://api.github.com/repos/MJRLegends/TinkersExtras", "Date": "2018-05-26T00:16:59Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (k == 0) { this.weights[i][j][k] = 0; }else { this.weights[i][j][k] = (((2 * (java.lang.Math.random())) - 1) / xa) * 0.1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3375/buggy-version/src.classifier.MLP.java", "BodyUseAPI": [], "Fixed commit": "00e0594847e87435bcf6c51b8e8a48f3db0b8280", "Url": "https://api.github.com/repos/kandeh/Multilayer-Perceptron-Classifier", "Date": "2018-01-26T10:01:09Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (calendar == null) { calendar = java.util.Calendar.getInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3296/buggy-version/app.src.main.java.com.bookbase.app.utils.Converters.java", "BodyUseAPI": [], "Fixed commit": "24f896f32e21aff2f5ceb320bdd988c98b27f100", "Url": "https://api.github.com/repos/lachlan-eagling/Bookbase", "Date": "2018-05-06T22:46:43Z"},
{"Line": "=>1366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.metastore.api.LockComponent.getTablename()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (tblName != null) { s = (((((\"select t2w_writeid from TXN_TO_WRITE_ID where\" + \" t2w_database = \") + (org.apache.hadoop.hive.metastore.txn.TxnHandler.quoteString(dbName.toLowerCase()))) + \" and t2w_table = \") + (org.apache.hadoop.hive.metastore.txn.TxnHandler.quoteString(tblName.toLowerCase()))) + \" and t2w_txnid = \") + txnid; org.apache.hadoop.hive.metastore.txn.TxnHandler.LOG.debug(((\"Going to execute query <\" + s) + \">\")); rs = stmt.executeQuery(s); if (rs.next()) { writeId = rs.getLong(1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/359/buggy-version/standalone-metastore.src.main.java.org.apache.hadoop.hive.metastore.txn.TxnHandler.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "org.apache.hadoop.hive.metastore.txn.TxnHandler.quoteString(java.lang.String)"], "Fixed commit": "7879bdd66f5603573e9ec20270e90ccda93aee2f", "Url": "https://api.github.com/repos/sankarh/hive", "Date": "2018-02-15T10:49:38Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getCursor()) == null) || (getCursor().isClosed())) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8328/buggy-version/commons.src.main.java.com.geonature.mobile.commons.ui.widget.AlphabetSectionIndexerCursorAdapter.java", "BodyUseAPI": [], "Fixed commit": "80a1fa47f632ea2ac468025d7efdf8ca2690cf81", "Url": "https://api.github.com/repos/PnEcrins/GeoNature-mobile", "Date": "2018-04-28T16:45:14Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.lang.PsiBuilder.getLatestDoneMarker()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (latestDoneMarker != null) { com.intellij.psi.tree.IElementType tokenType = latestDoneMarker.getTokenType(); if ((tokenType == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.INVOCATION_ARG)) || (tokenType == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.RECORD_KEY_VALUE))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8028/buggy-version/src.main.gen.org.ballerinalang.plugins.idea.parser.BallerinaParserUtil.java", "BodyUseAPI": ["com.intellij.lang.LighterASTNode.getTokenType()"], "Fixed commit": "ff424518625ca274137f804d85334cdbfb16e915", "Url": "https://api.github.com/repos/Shan1024/ballerina-idea-plugin", "Date": "2018-04-13T15:53:05Z"},
{"Line": "=>578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.getMainRank().equals(Rank.FIRECRAFT_TEAM)) { rankTeam.setSuffix(\"\"); }else { rankTeam.setSuffix(player.getMainRank().getPrefix()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3759/buggy-version/src.java.net.firecraftmc.shared.classes.FirecraftPlayer.java", "BodyUseAPI": ["net.firecraftmc.shared.enums.Rank.getPrefix()", "net.firecraftmc.shared.classes.Team.setSuffix(player.getMainRank().getPrefix())", "net.firecraftmc.shared.classes.FirecraftPlayer.getMainRank()"], "Fixed commit": "bbb1ff7e6f58d2378db8b46ad5a85065704afa5e", "Url": "https://api.github.com/repos/Firestar311/FirecraftAPI", "Date": "2018-05-17T22:50:18Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user == null) { try { user = permissionService.checkIfUserExists(); } catch (com.atlassian.jira.exception.PermissionException e) { return javax.ws.rs.core.Response.status(Response.Status.UNAUTHORIZED).entity(e.getMessage()).build(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3789/buggy-version/src.main.java.org.catrobat.jira.timesheet.rest.UserRest.java", "BodyUseAPI": [], "Fixed commit": "022e80cd027da7ae6f6eb8d401d9cac9c66a101c", "Url": "https://api.github.com/repos/Catrobat/Timesheet", "Date": "2018-10-02T20:30:48Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scheduleResponseSubscription.isDisposed()) { scheduleResponseSubscription = new io.reactivex.disposables.CompositeDisposable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7059/buggy-version/app.src.main.java.com.alex.miet.mobile.addnewgroup.AddNewGroupPresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "b45732702508a81660edabbe530b3416dc325fde", "Url": "https://api.github.com/repos/HeyAlex/miet-schedule", "Date": "2018-03-17T21:17:28Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode != 666) { historyString += GameBoardFrame.game.getTestHistory(); historyString = ((historyString) + \"\\n\") + \"-----------------------------\"; GameBoardFrame.game.gameRound(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4056/buggy-version/src.game.gui.BottomScreen.java", "BodyUseAPI": [], "Fixed commit": "99386635e1622d3a75f9d67afa063fcb8e830010", "Url": "https://api.github.com/repos/tparrine/GLP_Card", "Date": "2018-04-06T15:44:35Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((user.getLogin()) == null) || ((user.getPassword()) == null)) || (user.getLogin().isEmpty())) || (user.getPassword().isEmpty())) { throw new org.ddbstoolkit.tdd.demo.exception.EmptyFieldException(\"User has an empty field\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7238/buggy-version/src.main.java.org.ddbstoolkit.tdd.demo.services.LoginService.java", "BodyUseAPI": [], "Fixed commit": "f2a419ab7b3d8e927c82f03c2d6bdc8c45257ed6", "Url": "https://api.github.com/repos/kyrillos52/tdd-demo", "Date": "2018-10-17T13:03:44Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sunbash.wifigram.IncomingConnectionHandler.ReadSocket(java.net.Socket)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((msg[0].charAt(0)) == 'g') flag = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6182/buggy-version/main.java.com.sunbash.wifigram.IncomingConnectionHandler.java", "BodyUseAPI": [], "Fixed commit": "4bfcacfbf3aa5a3e6ad62dd3a04b92a91b9e83a4", "Url": "https://api.github.com/repos/Yxbcvn410/WiFiGram", "Date": "2018-07-06T00:03:04Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.sunbash.wifigram.IncomingConnectionHandler.isOnline)) { return new java.lang.String[]{ \"go\" }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6182/buggy-version/main.java.com.sunbash.wifigram.IncomingConnectionHandler.java", "BodyUseAPI": [], "Fixed commit": "4bfcacfbf3aa5a3e6ad62dd3a04b92a91b9e83a4", "Url": "https://api.github.com/repos/Yxbcvn410/WiFiGram", "Date": "2018-07-06T00:03:04Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.identity.sso.saml.dao.SAML2ArtifactInfoDAO.getSAMLArtifactInfo(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (artifactInfo != null) { if (validateArtifactResolve(artifactResolve, artifactInfo)) { org.wso2.carbon.identity.sso.saml.builders.ResponseBuilder respBuilder = org.wso2.carbon.identity.sso.saml.util.SAMLSSOUtil.getResponseBuilder(); if (respBuilder != null) { response = respBuilder.buildResponse(artifactInfo.getAuthnReqDTO(), artifactInfo.getSessionID(), artifactInfo.getInitTimestamp(), artifactInfo.getAssertionID()); }else { throw new org.wso2.carbon.identity.sso.saml.exception.ArtifactBindingException((\"Could not create a ResponseBuilder for SAML2 artifact \" + \"resolution.\")); } } }else { org.wso2.carbon.identity.sso.saml.SAMLSSOArtifactResolver.log.warn((\"Invalid artifact received to Artifact Resolution endpoint: \" + artifact)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/627/buggy-version/components.org.wso2.carbon.identity.sso.saml.src.main.java.org.wso2.carbon.identity.sso.saml.SAMLSSOArtifactResolver.java", "BodyUseAPI": ["org.wso2.carbon.identity.sso.saml.dto.SAML2ArtifactInfo.getAssertionID()", "org.wso2.carbon.identity.sso.saml.dto.SAML2ArtifactInfo.getSessionID()", "org.wso2.carbon.identity.sso.saml.SAMLSSOArtifactResolver.validateArtifactResolve(org.opensaml.saml2.core.ArtifactResolve,org.wso2.carbon.identity.sso.saml.dto.SAML2ArtifactInfo)", "org.wso2.carbon.identity.sso.saml.builders.ResponseBuilder.buildResponse(artifactInfo.getAuthnReqDTO(),artifactInfo.getSessionID(),artifactInfo.getInitTimestamp(),artifactInfo.getAssertionID())", "org.wso2.carbon.identity.sso.saml.dto.SAML2ArtifactInfo.getAuthnReqDTO()", "org.wso2.carbon.identity.sso.saml.dto.SAML2ArtifactInfo.getInitTimestamp()"], "Fixed commit": "3f672dcfc59d6d8cd5382d8ba8cd92cc1850bc02", "Url": "https://api.github.com/repos/sachiniWettasinghe/identity-inbound-auth-saml", "Date": "2018-09-05T11:15:07Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (artifactInfo != null) { org.wso2.carbon.identity.sso.saml.dto.SAMLSSOAuthnReqDTO authReqDTO = artifactInfo.getAuthnReqDTO(); org.wso2.carbon.identity.sso.saml.util.SAMLSSOUtil.setSignature(artifactResponse, authReqDTO.getSigningAlgorithmUri(), authReqDTO.getDigestAlgorithmUri(), new org.wso2.carbon.identity.sso.saml.builders.SignKeyDataHolder(authReqDTO.getUser().getAuthenticatedSubjectIdentifier())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/627/buggy-version/components.org.wso2.carbon.identity.sso.saml.src.main.java.org.wso2.carbon.identity.sso.saml.SAMLSSOArtifactResolver.java", "BodyUseAPI": ["org.wso2.carbon.identity.sso.saml.dto.SAML2ArtifactInfo.getAuthnReqDTO()"], "Fixed commit": "3f672dcfc59d6d8cd5382d8ba8cd92cc1850bc02", "Url": "https://api.github.com/repos/sachiniWettasinghe/identity-inbound-auth-saml", "Date": "2018-09-05T11:15:07Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(line.isEmpty())) && (!(line.startsWith(\"exit status\")))) { org.sonar.go.plugin.externalreport.GoVetReportSensor.LOG.debug((\"Unexpected go vet line: \" + line)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2223/buggy-version/sonar-go-plugin.src.main.java.org.sonar.go.plugin.externalreport.GoVetReportSensor.java", "BodyUseAPI": ["org.sonar.api.utils.log.Logger.debug(java.lang.String)"], "Fixed commit": "2f9d9bf4a372d298f630e609a6eb1797f9488cb8", "Url": "https://api.github.com/repos/SonarSource/sonar-go", "Date": "2018-05-30T13:33:49Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((presenter) != null) { presenter.getGeocode(lati, longi); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/874/buggy-version/nibo_library.src.main.java.com.alium.nibo.placepicker.NiboPickerFragment.java", "BodyUseAPI": [], "Fixed commit": "94278fd0e47d6c541cee6e4c6d598fa530387c03", "Url": "https://api.github.com/repos/aliumujib/Nibo", "Date": "2018-08-29T16:29:04Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["reader.getTagValueFromAllSections(\"provider\").stream().distinct().collect(java.util.stream.Collector<java.lang.Object, ?, java.util.List<java.lang.Object>>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((providers.size()) > 0) validProvider = java.lang.String.join(\", \", providers);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8536/buggy-version/src.main.java.uk.org.tombolo.execution.DataExportEngine.java", "BodyUseAPI": ["java.lang.String.join(java.lang.String,java.util.List<java.lang.String>)"], "Fixed commit": "9d088b01dcef8fc72549e1e3a12fb2c12a8a2c94", "Url": "https://api.github.com/repos/FutureCitiesCatapult/TomboloDigitalConnector", "Date": "2018-01-03T15:26:13Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["reader.getTagValueFromAllSections(\"provider\").stream().distinct().collect(java.util.stream.Collector<java.lang.Object, ?, java.util.List<java.lang.Object>>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (providers.isEmpty()) break mainLoop;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8536/buggy-version/src.main.java.uk.org.tombolo.execution.DataExportEngine.java", "BodyUseAPI": [], "Fixed commit": "9d088b01dcef8fc72549e1e3a12fb2c12a8a2c94", "Url": "https://api.github.com/repos/FutureCitiesCatapult/TomboloDigitalConnector", "Date": "2018-01-03T15:26:13Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tmp.length) == 4) { indexsA = java.util.Arrays.stream(tmp[2].split(\" \")).map(java.lang.Integer::parseInt).toArray(java.lang.Integer[]::new); indexsB = java.util.Arrays.stream(tmp[3].split(\" \")).map(java.lang.Integer::parseInt).toArray(java.lang.Integer[]::new); }else { indexsA = new java.lang.Integer[0]; indexsB = new java.lang.Integer[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4491/buggy-version/src.main.java.com.ripple.query.operator.JoinMapOperator.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.util.Arrays.stream(java.lang.String[])", "java.util.stream.Stream<java.lang.String>.map(java.util.function.Function<? super java.lang.String, ? extends java.lang.Integer>)", "java.util.Arrays.stream(java.lang.String[])", "java.util.stream.Stream<java.lang.Integer>.toArray(java.util.function.IntFunction<java.lang.Integer[]>)", "java.util.stream.Stream<java.lang.String>.map(java.util.function.Function<? super java.lang.String, ? extends java.lang.Integer>)", "java.util.stream.Stream<java.lang.Integer>.toArray(java.util.function.IntFunction<java.lang.Integer[]>)"], "Fixed commit": "6df28049324c4d74958115230a290a51f120ced6", "Url": "https://api.github.com/repos/strongoier/RippleSQL", "Date": "2018-07-30T18:16:38Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSessionUser().getEnterprise().getUsersActiveNumber()) <= 1) { qd.getColumnsExclusion().add(SaleColumnEnum.user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6260/buggy-version/src.main.java.org.iabako.server.serviceimpl.business.QuoteServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "473d33b35c0dafe0a09bfb1b70fd2ca14d4260b9", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2018-02-12T16:10:11Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.exist.xquery.functions.fn.LOG.isTraceEnabled()) { org.exist.xquery.functions.fn.FunExactlyOne.logger.trace(((\"fn:exactly-one called with a sequence containing \" + (result.getItemCount())) + \" items\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1051/buggy-version/src.org.exist.xquery.functions.fn.FunExactlyOne.java", "BodyUseAPI": [], "Fixed commit": "cf1544eb1cc7cf8e44fd345a8f5df03a7b756f5d", "Url": "https://api.github.com/repos/joewiz/exist", "Date": "2018-07-12T13:33:25Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.exist.xquery.functions.fn.LOG.isTraceEnabled()) { org.exist.xquery.functions.fn.FunError.logger.trace(((errorDesc + \": \") + (errorCode.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1051/buggy-version/src.org.exist.xquery.functions.fn.FunError.java", "BodyUseAPI": [], "Fixed commit": "cf1544eb1cc7cf8e44fd345a8f5df03a7b756f5d", "Url": "https://api.github.com/repos/joewiz/exist", "Date": "2018-07-12T13:33:25Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!dropStack) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7463/buggy-version/src.main.java.com.sciencebitch.util.BlockHelper.java", "BodyUseAPI": [], "Fixed commit": "d88ba9f55bf2aa038ed7830cabd6ced81a7ed095", "Url": "https://api.github.com/repos/Thal1ka/ScienceBitch", "Date": "2018-08-12T12:58:13Z"},
{"Line": "=>666", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (id.isObjectId()) { return id.asObjectId().getValue().toHexString(); }else { return org.restheart.utils.JsonUtils.minify(org.restheart.utils.JsonUtils.toJson(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3922/buggy-version/src.main.java.org.restheart.utils.URLUtils.java", "BodyUseAPI": ["org.bson.BsonValue.asObjectId()", "org.restheart.utils.JsonUtils.toJson(org.bson.BsonValue)", "id.asObjectId().getValue().toHexString()", "org.restheart.utils.JsonUtils.minify(org.restheart.utils.JsonUtils.toJson(id))", "id.asObjectId().getValue()"], "Fixed commit": "6c397e741276766eaae8f9bab4873c52543144af", "Url": "https://api.github.com/repos/SoftInstigate/restheart", "Date": "2018-05-08T17:50:22Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"EAPI:Invalid nonce\".equals(error)) { throw new org.knowm.xchange.exceptions.NonceException(error); }else if (\"EGeneral:Temporary lockout\".equals(error)) { throw new org.knowm.xchange.exceptions.FrequencyLimitExceededException(error); }else if (\"EOrder:Insufficient funds\".equals(error)) { throw new org.knowm.xchange.exceptions.FundsExceededException(error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5278/buggy-version/xchange-kraken.src.main.java.org.knowm.xchange.kraken.service.KrakenBaseService.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "13cc26ec0d799f89958f8f206829aea6111e8729", "Url": "https://api.github.com/repos/janakerman/XChange", "Date": "2018-01-16T14:32:30Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((focusSymbolIndex == ((wordChars.size()) - 1)) && (!(getFinalStates().contains(focusTransition.getStateTwo())))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6264/buggy-version/src.main.java.practical.automata.calculations.structures.StateMachine.java", "BodyUseAPI": [], "Fixed commit": "bd084d57f84abd398f75c8f9ad4ee2934f0ea20a", "Url": "https://api.github.com/repos/dmarkov00/practical-automata", "Date": "2018-05-13T20:50:18Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((edge.getDistance()) != null) { route.setDistance(((route.getDistance()) + (edge.getDistance()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7143/buggy-version/travelplanner.src.main.java.com.netcracker.travelplanner.algorithms.Algorithm2.java", "BodyUseAPI": ["com.netcracker.travelplanner.entities.Edge.getDistance()", "com.netcracker.travelplanner.entities.Route.setDistance(((route.getDistance()) + (edge.getDistance())))"], "Fixed commit": "f0a19acab918c4a388cda008504ed1fed421733a", "Url": "https://api.github.com/repos/Millerovrus/TravelPlan", "Date": "2018-03-14T21:53:07Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (charSequence.toString().equals(s)) return true; else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8761/buggy-version/src.main.java.com.storemanagement.util.SecurityConfiguration.java", "BodyUseAPI": [], "Fixed commit": "7fc183ee15c866dbe121f701242bf0f22e62f455", "Url": "https://api.github.com/repos/pdefratyka/StoreManagement", "Date": "2018-04-18T11:28:26Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (were.getIsTransformed()) { p.setEntityBoundingBox(p.getEntityBoundingBox().expand(0, 0.5, 0)); }else { p.setEntityBoundingBox(p.getEntityBoundingBox().contract(0, 0.5, 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5317/buggy-version/src.main.java.werewolvesAndVampires.werewolves.WerewolfHelpers.java", "BodyUseAPI": [], "Fixed commit": "0a93673bff223c5f3d3c3dca0c6a83bb973d678c", "Url": "https://api.github.com/repos/TheGamingLord/WaVM", "Date": "2018-06-13T03:23:28Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((size) == 0) && (index == 1)) { throw new java.lang.IndexOutOfBoundsException(); }else { for (int i = (size) - 1; i >= index; i--) { s = data[i]; data[(i + 1)] = s; } data[index] = element; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/775/buggy-version/02OrderedSuperArray.SuperArray.java", "BodyUseAPI": [], "Fixed commit": "ce9ad2ba17f6d4a848fa940670425cebf1ae9151", "Url": "https://api.github.com/repos/delaneydemark/MKS21X", "Date": "2018-01-07T00:03:23Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mcmoddev.lib.material.MMDMaterial.getItem(Names.INGOT)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(item.equals(net.minecraft.init.Items.EMERALD))) && (!(item.equals(net.minecraft.init.Items.DIAMOND)))) { final net.minecraft.entity.passive.EntityVillager.ITradeList[] ingotTrades = com.mcmoddev.lib.init.VillagerTrades.makeTradePalette(com.mcmoddev.lib.init.VillagerTrades.makePurchasePalette(emeraldPurch, 12, item), com.mcmoddev.lib.init.VillagerTrades.makeSalePalette(emeraldSale, 12, item)); com.mcmoddev.basemetals.util.VillagerTradeHelper.insertTrades(com.mcmoddev.lib.init.VillagerTrades.SMITH_RL, com.mcmoddev.lib.init.VillagerTrades.ARMOR_SMITH_ID, tradeLevel, ingotTrades); com.mcmoddev.basemetals.util.VillagerTradeHelper.insertTrades(com.mcmoddev.lib.init.VillagerTrades.SMITH_RL, com.mcmoddev.lib.init.VillagerTrades.WEAPON_SMITH_ID, tradeLevel, ingotTrades); com.mcmoddev.basemetals.util.VillagerTradeHelper.insertTrades(com.mcmoddev.lib.init.VillagerTrades.SMITH_RL, com.mcmoddev.lib.init.VillagerTrades.TOOL_SMITH_ID, tradeLevel, ingotTrades); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6894/buggy-version/src.main.java.com.mcmoddev.lib.init.VillagerTrades.java", "BodyUseAPI": ["com.mcmoddev.lib.init.VillagerTrades.makePurchasePalette(int,int,com.mcmoddev.lib.init.Item)", "com.mcmoddev.lib.init.VillagerTrades.makeSalePalette(int,int,com.mcmoddev.lib.init.Item)", "com.mcmoddev.lib.init.VillagerTrades.makeTradePalette(net.minecraft.entity.passive.EntityVillager.ITradeList[],net.minecraft.entity.passive.EntityVillager.ITradeList[])"], "Fixed commit": "88dc43bfc4002fddd96a0681f2ca8185dae899c7", "Url": "https://api.github.com/repos/MinecraftModDevelopmentMods/BaseMetals", "Date": "2018-01-03T04:51:16Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dto.getUid()) == null) { dto.setUid(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5452/buggy-version/backend.src.main.java.XMLandSecurity.backend1.controller.CertificateController.java", "BodyUseAPI": ["XMLandSecurity.backend1.model.dto.CertificateDTO.setUid(java.lang.String)"], "Fixed commit": "ce969615dd6d33ecf28ba45ee920fa9fa4054cd0", "Url": "https://api.github.com/repos/ivukasinovic/booking", "Date": "2018-05-04T13:17:54Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.github.afide.api.app.Application.logger.isDebugEnabled()) { com.github.afide.api.app.Application.logger.debug((\"Received tx value: \" + (com.github.afide.api.app.Application.byteArrayToHexSring(tx)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3906/buggy-version/modules.server.src.main.java.com.github.afide.api.app.Application.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "a810bfc42ed1285b8f5ab32d9b5a18606d1753f3", "Url": "https://api.github.com/repos/afide/capraia", "Date": "2017-03-22T01:35:49Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.github.afide.api.app.Application.logger.isDebugEnabled()) { com.github.afide.api.app.Application.logger.debug(\"hash={} height={}\", com.github.afide.api.app.Application.byteArrayToHex(lastBlockHash), lastBlockHeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3906/buggy-version/modules.server.src.main.java.com.github.afide.api.app.Application.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.String,long)"], "Fixed commit": "a810bfc42ed1285b8f5ab32d9b5a18606d1753f3", "Url": "https://api.github.com/repos/afide/capraia", "Date": "2017-03-22T01:35:49Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.github.afide.api.app.Application.logger.isDebugEnabled()) { com.github.afide.api.app.Application.logger.debug(\"hash={}\", com.github.afide.api.app.Application.byteArrayToHex(lastBlockHash)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3906/buggy-version/modules.server.src.main.java.com.github.afide.api.app.Application.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.String)"], "Fixed commit": "a810bfc42ed1285b8f5ab32d9b5a18606d1753f3", "Url": "https://api.github.com/repos/afide/capraia", "Date": "2017-03-22T01:35:49Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.github.afide.api.app.Application.logger.isInfoEnabled()) { com.github.afide.api.app.Application.logger.info(\"Received tx value: {}\", com.github.afide.api.app.Application.byteArrayToHexSring(tx)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3906/buggy-version/modules.server.src.main.java.com.github.afide.api.app.Application.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,java.lang.String)"], "Fixed commit": "a810bfc42ed1285b8f5ab32d9b5a18606d1753f3", "Url": "https://api.github.com/repos/afide/capraia", "Date": "2017-03-22T01:35:49Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTextBold) == (com.flyco.tablayout.SlidingTabLayout.TEXT_BOLD_BOTH)) { tv_tab_title.getPaint().setFakeBoldText(true); }else if ((mTextBold) == (com.flyco.tablayout.SlidingTabLayout.TEXT_BOLD_NONE)) { tv_tab_title.getPaint().setFakeBoldText(false); }else if ((mTextBold) == (com.flyco.tablayout.SlidingTabLayout.TEXT_BOLD_WHEN_SELECT)) { tv_tab_title.getPaint().setFakeBoldText((i == (mCurrentTab))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1008/buggy-version/FlycoTabLayout_Lib.src.main.java.com.flyco.tablayout.SlidingTabLayout.java", "BodyUseAPI": [], "Fixed commit": "5189f00c99bb559414284983a69c17fa93f8ba6c", "Url": "https://api.github.com/repos/cristianzhang/FlycoTabLayout", "Date": "2018-04-15T08:24:23Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (md == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1760/buggy-version/src.main.java.com.github.junrar.unpack.Unpack20.java", "BodyUseAPI": [], "Fixed commit": "28663a44434caa900cb584436a120ea7e163a5d8", "Url": "https://api.github.com/repos/vaemendis/junrar", "Date": "2018-05-12T21:32:45Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (md != null) { makeDecodeTables(Table, (I * (com.github.junrar.unpack.decode.Compress.MC20)), md, Compress.MC20); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1760/buggy-version/src.main.java.com.github.junrar.unpack.Unpack20.java", "BodyUseAPI": ["com.github.junrar.unpack.Unpack20.makeDecodeTables(byte[],(I * (com.github.junrar.unpack.decode.Compress.MC20)),com.github.junrar.unpack.decode.MultDecode,Compress.MC20)"], "Fixed commit": "28663a44434caa900cb584436a120ea7e163a5d8", "Url": "https://api.github.com/repos/vaemendis/junrar", "Date": "2018-05-12T21:32:45Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((preference.getSummary()) != null) { if (preference.getKey().equals(\"server_ip\")) { xyz.karpador.pairandomizer.SettingsActivity.serverIPChanged = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/1322/buggy-version/app.src.main.java.xyz.karpador.pairandomizer.SettingsActivity.java", "BodyUseAPI": ["preference.getKey().equals(java.lang.String)", "android.preference.Preference.getKey()"], "Fixed commit": "94281ddfd4de57837df7e41b219e2a2783932124", "Url": "https://api.github.com/repos/Follpvosten/Pairandomizer", "Date": "2018-01-17T18:57:40Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["talkapp.org.talkappmobile.activity.AllWordSetsFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (arguments != null) { topicId = ((java.lang.String) (arguments.get(talkapp.org.talkappmobile.activity.AllWordSetsFragment.TOPIC_ID_MAPPING))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/8852/buggy-version/app.src.main.java.talkapp.org.talkappmobile.activity.AllWordSetsFragment.java", "BodyUseAPI": ["android.os.Bundle.get(java.lang.String)"], "Fixed commit": "6c30e167066c1ca73afd22e0b24e7fabba38d8e4", "Url": "https://api.github.com/repos/aliaksandr-budnikau/TalkappMobile", "Date": "2018-09-09T15:11:44Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codeborne.selenide.impl.WebElementSource.getWebElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((element.isSelected()) != selected) { click.execute(proxy, locator, com.codeborne.selenide.commands.NO_ARGS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4572/buggy-version/src.main.java.com.codeborne.selenide.commands.SetSelected.java", "BodyUseAPI": [], "Fixed commit": "a5de776bfa6122d2aeaa5530b7079c46539e27f6", "Url": "https://api.github.com/repos/selenide/selenide", "Date": "2018-01-27T20:44:38Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openqa.selenium.WebElement.getTagName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(tag.equals(\"options\"))) { if (tag.equals(\"input\")) { java.lang.String type = element.getAttribute(\"type\"); if ((!(type.equals(\"checkbox\"))) && (!(type.equals(\"radio\")))) { throw new com.codeborne.selenide.ex.InvalidStateException(\"Only use setSelected on checkbox/option/radio\"); } }else { throw new com.codeborne.selenide.ex.InvalidStateException(\"Only use setSelected on checkbox/option/radio\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4572/buggy-version/src.main.java.com.codeborne.selenide.commands.SetSelected.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "a5de776bfa6122d2aeaa5530b7079c46539e27f6", "Url": "https://api.github.com/repos/selenide/selenide", "Date": "2018-01-27T20:44:38Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codeborne.selenide.impl.WebElementSource.getWebElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(element.isDisplayed())) { throw new com.codeborne.selenide.ex.InvalidStateException(\"Cannot change invisible element\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/4572/buggy-version/src.main.java.com.codeborne.selenide.commands.SetSelected.java", "BodyUseAPI": [], "Fixed commit": "a5de776bfa6122d2aeaa5530b7079c46539e27f6", "Url": "https://api.github.com/repos/selenide/selenide", "Date": "2018-01-27T20:44:38Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (kind == (Diagnostic.Kind.ERROR)) { (errorCount)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6963/buggy-version/compiler.ballerina-lang.src.main.java.org.wso2.ballerinalang.compiler.util.diagnotic.BLangDiagnosticLog.java", "BodyUseAPI": [], "Fixed commit": "87110db783494421391270b0dd82537489d5d6cf", "Url": "https://api.github.com/repos/riyafa/ballerina", "Date": "2018-04-12T05:44:19Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.shardingsphere.core.parsing.parser.clause.expression.BasicExpressionParser.parse(io.shardingsphere.core.parsing.parser.sql.dml.insert.InsertStatement)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sqlExpression instanceof io.shardingsphere.core.parsing.parser.expression.SQLIgnoreExpression) { columnName = io.shardingsphere.core.util.SQLUtil.getExactlyValue(((io.shardingsphere.core.parsing.parser.expression.SQLIgnoreExpression) (sqlExpression)).getExpression()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5226/buggy-version/sharding-core.src.main.java.io.shardingsphere.core.parsing.parser.clause.InsertColumnsClauseParser.java", "BodyUseAPI": [], "Fixed commit": "bc2a0121b93ef5da6c4c97546b7beee7cdfb92a4", "Url": "https://api.github.com/repos/ma-PATHo-guang-64/sharding-sphere", "Date": "2018-05-24T06:58:49Z"},
{"Line": "=>1140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eppic.model.PdbInfoDB.getInterface(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((pdbInfo.isNcsOpsPresent()) && (ii == null)) { eppic.DataModelAdaptor.LOGGER.info(\"Not storing combined scores for redundant NCS interface {}\", (i + 1)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3730/buggy-version/eppic-cli.src.main.java.eppic.DataModelAdaptor.java", "BodyUseAPI": [], "Fixed commit": "29f84e6af7cbd9c18ce2299d542cf48c5b12d91e", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2018-04-17T23:33:08Z"},
{"Line": "=>1028", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eppic.model.PdbInfoDB.getInterface(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((pdbInfo.isNcsOpsPresent()) && (ii == null)) { eppic.DataModelAdaptor.LOGGER.info(\"Not storing evolutionary scores for redundant NCS interface {}\", (i + 1)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/3730/buggy-version/eppic-cli.src.main.java.eppic.DataModelAdaptor.java", "BodyUseAPI": [], "Fixed commit": "29f84e6af7cbd9c18ce2299d542cf48c5b12d91e", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2018-04-17T23:33:08Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.opensource.soft.BlogServer.page.blog.dao.BlogMapper.findBlogByUuid(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((blog.getLocation()) != null) && ((blog.getLocation().trim().length()) != 0)) { location = blog.getLocation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/459/buggy-version/page.src.main.java.com.opensource.soft.BlogServer.page.blog.service.impl.BlogServiceImpl.java", "BodyUseAPI": ["com.opensource.soft.BlogServer.page.blog.model.Blog.getLocation()"], "Fixed commit": "21a6b2481460f60c1bbbe94eafd91d8783162113", "Url": "https://api.github.com/repos/blogserver/BlogServer", "Date": "2018-04-14T07:56:57Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loaderProgress) != null) { loaderProgress.incIndexed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7787/buggy-version/stargraph-core.src.main.java.net.stargraph.core.index.BaseIndexer.java", "BodyUseAPI": [], "Fixed commit": "c0c2132a1762afb09607c3f6d18f5e9c097dad72", "Url": "https://api.github.com/repos/Mischn/Stargraph", "Date": "2018-05-07T08:21:17Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.cask.cdap.proto.profile.ProfileCreateRequest.getProvisioner()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((provisionerInfo == null) || ((provisionerInfo.getName()) == null)) { throw new co.cask.cdap.common.BadRequestException((\"Missing provisioner information in the json file. \" + \"A profile must be associated with a provisioner.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7305/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.gateway.handlers.ProfileHttpHandler.java", "BodyUseAPI": [], "Fixed commit": "a3028725db734cac20cc038323047506fe352f96", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2018-04-24T16:16:37Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.cask.cdap.proto.provisioner.ProvisionerInfo.getProperties()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (provisionerProperties != null) { for (co.cask.cdap.proto.provisioner.ProvisionerPropertyValue value : provisionerProperties) { properties.put(value.getName(), value.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7305/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.gateway.handlers.ProfileHttpHandler.java", "BodyUseAPI": [], "Fixed commit": "a3028725db734cac20cc038323047506fe352f96", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2018-04-24T16:16:37Z"},
{"Line": "=>973", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((prideReShakeGUI.getPeptideShakerGUI().getIdentificationParameters()) == null) { prideReShakeGUI.getPeptideShakerGUI().setDefaultParameters(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9143/buggy-version/src.main.java.eu.isas.peptideshaker.gui.pride.PrideReshakeSetupDialog.java", "BodyUseAPI": ["eu.isas.peptideshaker.gui.pride.PrideReshakeGUI.getPeptideShakerGUI()", "prideReShakeGUI.getPeptideShakerGUI().setDefaultParameters()"], "Fixed commit": "c3ec0d6e5b1f0a4a743ba79fc831bf0d68bf9a1f", "Url": "https://api.github.com/repos/compomics/peptide-shaker", "Date": "2018-07-05T15:37:26Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.USE_DEFAULT_BOSSES) return new com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerErisDefault(); else return new com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerEris();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6783/buggy-version/src.main.java.com.mjr.extraplanets.blocks.dungeonSpawners.BlockErisDungeonSpawner.java", "BodyUseAPI": [], "Fixed commit": "edcc10501835975837711d0ddc0b491992016425", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-02-01T19:57:31Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (matcher.find()) { return createKilogram(recalculateToKilograms(convertToBigDecimal(matcher.group(3))), matcher.group(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5684/buggy-version/src.main.java.sk.hudak.prco.parser.impl.UnitParserImpl.java", "BodyUseAPI": ["sk.hudak.prco.parser.impl.UnitParserImpl.recalculateToKilograms(convertToBigDecimal(matcher.group(3)))", "java.util.regex.Matcher.group(int)", "sk.hudak.prco.parser.impl.UnitParserImpl.convertToBigDecimal(java.lang.String)", "sk.hudak.prco.parser.impl.UnitParserImpl.createKilogram(recalculateToKilograms(convertToBigDecimal(matcher.group(3))),java.lang.String)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "61888b0b0865c29cc4535069566a9a232daf1aeb", "Url": "https://api.github.com/repos/jano333/prco", "Date": "2018-08-21T08:21:27Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ctx) != null) && (org.apache.commons.lang3.StringUtils.isNotEmpty(ctx.getCacheDir()))) { org.apache.commons.io.FileUtils.deleteQuietly(getCacheDir()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9775/buggy-version/nomer-taxon-resolve.src.main.java.org.eol.globi.taxon.NODCTaxonService.java", "BodyUseAPI": [], "Fixed commit": "d3d9bbf9a9ecbaf28ebf57df2008108d76b8fce4", "Url": "https://api.github.com/repos/globalbioticinteractions/nomer", "Date": "2018-01-15T17:58:06Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((e.getMessage()) != null) throw new java.text.ParseException((\"Error creating ImagCDF filename: \" + (e.getMessage())), (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9018/buggy-version/src.main.java.bgs.geophys.library.Data.ImagCDF.ImagCDFFilename.java", "BodyUseAPI": [], "Fixed commit": "00d6c8d7af15b27ff9717336f7f5246814603b7d", "Url": "https://api.github.com/repos/INTERMAGNET/lib_bgs", "Date": "2018-06-15T13:53:14Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (test_diff != diff) test_diff = ((time_stamps[count]) - (time_stamps[(count - 1)])) - 1000000000;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9018/buggy-version/src.main.java.bgs.geophys.library.Data.ImagCDF.ImagCDFVariableTS.java", "BodyUseAPI": [], "Fixed commit": "00d6c8d7af15b27ff9717336f7f5246814603b7d", "Url": "https://api.github.com/repos/INTERMAGNET/lib_bgs", "Date": "2018-06-15T13:53:14Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(object2.isAlive())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7256/buggy-version/src.spacesettlers.simulator.CollisionHandler.java", "BodyUseAPI": [], "Fixed commit": "a7de331d9d2de7164dd1da7f8899f7f9784d67d6", "Url": "https://api.github.com/repos/amymcgovern/spacesettlers", "Date": "2018-04-02T02:39:27Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(object1.isAlive())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7256/buggy-version/src.spacesettlers.simulator.CollisionHandler.java", "BodyUseAPI": [], "Fixed commit": "a7de331d9d2de7164dd1da7f8899f7f9784d67d6", "Url": "https://api.github.com/repos/amymcgovern/spacesettlers", "Date": "2018-04-02T02:39:27Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.codeclan.jurassicpark.db.db.DBPaddock.paddockEmpty(paddock)) { availableDinosaurs = allDinosaurs; }else if (com.codeclan.jurassicpark.db.db.DBPaddock.herbivoreTest(paddock)) { availableDinosaurs = com.codeclan.jurassicpark.db.db.DBHelper.getAll(com.codeclan.jurassicpark.db.db.Herbivore.class); }else { com.codeclan.jurassicpark.db.db.Dinosaur firstDino = currentDinosaurs.get(0); for (com.codeclan.jurassicpark.db.db.Dinosaur dinosaur : allDinosaurs) { if ((firstDino.getSpecies()) == (dinosaur.getSpecies())) { availableDinosaurs.add(dinosaur); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7591/buggy-version/src.main.java.com.codeclan.jurassicpark.db.db.DBPaddock.java", "BodyUseAPI": ["com.codeclan.jurassicpark.db.db.DBPaddock.herbivoreTest(com.codeclan.jurassicpark.db.db.Paddock)"], "Fixed commit": "e1e7cda0fd5e59078bacdea54d32b15f0a4f3648", "Url": "https://api.github.com/repos/jimbevington/JurassicParkManager", "Date": "2018-03-27T10:01:50Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ObtainSHA.SHA1(((IPAddress + \":\") + port))) == fileKey) return (IPAddress + \":\") + port;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6397/buggy-version/SearchFile.java", "BodyUseAPI": [], "Fixed commit": "bf5512ca89b2eebbfe31e24bbdcb763a2ccbcdde", "Url": "https://api.github.com/repos/Abhishek-dev2/Chord", "Date": "2018-03-07T17:59:28Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((location[row][colum].topLoot()) != null) java.lang.System.out.println(location[row][colum].topLoot().description());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9848/buggy-version/src.src.Map.java", "BodyUseAPI": ["java.io.PrintStream.println(location[row][colum].topLoot().description())", "location[row][colum].topLoot().description()", "location[row][colum].topLoot()"], "Fixed commit": "c0f643283d1962aa1162a9c19ecf1592d4cee1e8", "Url": "https://api.github.com/repos/jjirinec/RogueLikeGame", "Date": "2018-10-18T17:01:27Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((location[row][colum].getObstacle()) != null) java.lang.System.out.println(location[row][colum].getObstacle().description());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/9848/buggy-version/src.src.Map.java", "BodyUseAPI": ["location[row][colum].getObstacle().description()", "java.io.PrintStream.println(location[row][colum].getObstacle().description())", "location[row][colum].getObstacle()"], "Fixed commit": "c0f643283d1962aa1162a9c19ecf1592d4cee1e8", "Url": "https://api.github.com/repos/jjirinec/RogueLikeGame", "Date": "2018-10-18T17:01:27Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((yCoordinate >= 0) || (xCoordinate >= 0)) currentBoard[yCoordinate][xCoordinate] = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/2304/buggy-version/src.main.java.tetris.Boards.Board.java", "BodyUseAPI": [], "Fixed commit": "bbaec1c3d876f90fa939e82f7191985da74dcdf4", "Url": "https://api.github.com/repos/WeroNikaNa/tetrisAthens", "Date": "2018-03-22T10:26:46Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.symbols.length) > i) { org.maptalks.poi.shape.symbol.TextBoxSymbol[] rowSymbols = this.symbols[i]; double rowHeight = this.rowHeights[i]; this.addRow(table, row, rowSymbols, rowHeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/6772/buggy-version/src.main.java.org.maptalks.poi.shape.Table.java", "BodyUseAPI": [], "Fixed commit": "f398018c730db51c707621a5d847021ed63d60b6", "Url": "https://api.github.com/repos/brucin/poi-ppt-animation", "Date": "2017-12-18T16:43:10Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(res.isCommitted())) { res.sendRedirect(res.encodeURL(storedReq)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/5024/buggy-version/dev.com.ibm.ws.webcontainer.security.src.com.ibm.ws.webcontainer.security.internal.FormLoginExtensionProcessor.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.encodeURL(java.lang.String)", "javax.servlet.http.HttpServletResponse.sendRedirect(res.encodeURL(storedReq))"], "Fixed commit": "2645a341342c33319e15b4b022400cbfe5f0f93f", "Url": "https://api.github.com/repos/neilgsyoung/open-liberty", "Date": "2018-05-29T05:11:16Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.metacentrum.perun.taskslib.model.Task.getSendEndTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((endTime == null) || (howManyMinutesAgo >= (cz.metacentrum.perun.engine.scheduling.impl.PropagationMaintainerImpl.rescheduleTime))) { abortTask(task, TaskStatus.SENDERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7871/buggy-version/perun-engine.src.main.java.cz.metacentrum.perun.engine.scheduling.impl.PropagationMaintainerImpl.java", "BodyUseAPI": [], "Fixed commit": "2fb7e98e95ca6d66f6ff820f831c55aa5abb83f2", "Url": "https://api.github.com/repos/mvocu/perun", "Date": "2018-01-30T16:24:33Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (endTime != null) { howManyMinutesAgo = (((int) ((java.lang.System.currentTimeMillis()) - (endTime.getTime()))) / 1000) / 60; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7871/buggy-version/perun-engine.src.main.java.cz.metacentrum.perun.engine.scheduling.impl.PropagationMaintainerImpl.java", "BodyUseAPI": ["java.util.Date.getTime()"], "Fixed commit": "2fb7e98e95ca6d66f6ff820f831c55aa5abb83f2", "Url": "https://api.github.com/repos/mvocu/perun", "Date": "2018-01-30T16:24:33Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.metacentrum.perun.taskslib.service.TaskStore.getTask(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((task.getSendEndTime()) == null) { task.setSendEndTime(new java.util.Date(java.lang.System.currentTimeMillis())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V144/7871/buggy-version/perun-engine.src.main.java.cz.metacentrum.perun.engine.scheduling.impl.SchedulingPoolImpl.java", "BodyUseAPI": ["cz.metacentrum.perun.taskslib.model.Task.setSendEndTime(java.util.Date)"], "Fixed commit": "2fb7e98e95ca6d66f6ff820f831c55aa5abb83f2", "Url": "https://api.github.com/repos/mvocu/perun", "Date": "2018-01-30T16:24:33Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trackedWinner == (livePlayerProgress)) { result.append(\"You win!\"); simpleChronometer.stop(); }else if (trackedWinner == (replayPlayerProgress)) { result.append(\"Bot wins!\"); simpleChronometer.stop(); }else { result.append(\"You lose!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/544/buggy-version/app.src.main.java.edu.csula.dream.exercise.multiplayer.replay.track.ReplayTrackGameFragment.java", "BodyUseAPI": [], "Fixed commit": "c956d3faae492990b4fdee5808a909aa4f98f31e", "Url": "https://api.github.com/repos/DREAM-CSULA/dream-mobile-client", "Date": "2018-10-05T06:29:17Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getStatus()) == (de.slgdev.leoapp.view.ActivityStatus.ACTIVE)) { initListView(); findViewById(R.id.progressBar).setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5294/buggy-version/app.src.main.java.de.slgdev.stundenplan.activity.AuswahlActivity.java", "BodyUseAPI": [], "Fixed commit": "8ba0696607b6bdcce97e115158014ec505cff418", "Url": "https://api.github.com/repos/Leo-App/android", "Date": "2018-03-08T11:57:31Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.microsoft.azure.maven.function.DeployMojo.getFunctionApp()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (app == null) { throw new org.apache.maven.plugin.MojoExecutionException(java.lang.String.format(\"Failed to get Function App with name: %s\", getAppName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4660/buggy-version/azure-functions-maven-plugin.src.main.java.com.microsoft.azure.maven.function.DeployMojo.java", "BodyUseAPI": [], "Fixed commit": "fd130ec5bf31b62303eaa0f2c7fcfe4adb94e06a", "Url": "https://api.github.com/repos/brunoborges/azure-maven-plugins", "Date": "2018-08-01T07:23:34Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location == null) { return \"Null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1551/buggy-version/src.main.java.mc.sky_lock.parkour.Utils.java", "BodyUseAPI": [], "Fixed commit": "288ce0b4f1930a072e61094428540b91bbfee625", "Url": "https://api.github.com/repos/skylinelock/Parkour", "Date": "2018-07-25T09:15:38Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((model.getParent()) != null) && ((model.getParent().getVersion()) != null)) name = name.replace(m.group(0), model.getParent().getVersion()); else matched = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/896/buggy-version/src.main.java.cn.edu.fudan.se.handlepom.ProjectPom.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,model.getParent().getVersion())", "model.getParent().getVersion()", "org.apache.maven.model.Model.getParent()"], "Fixed commit": "05aaf3d717ed81692c825380d860258e07eb62bf", "Url": "https://api.github.com/repos/CleWang/ThirdPartyLibraryAnalysis", "Date": "2018-05-16T07:03:49Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((model.getParent()) != null) && ((model.getParent().getArtifactId()) != null)) name = name.replace(m.group(0), model.getParent().getArtifactId()); else matched = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/896/buggy-version/src.main.java.cn.edu.fudan.se.handlepom.ProjectPom.java", "BodyUseAPI": ["org.apache.maven.model.Model.getParent()", "java.lang.String.replace(java.lang.String,model.getParent().getArtifactId())", "model.getParent().getArtifactId()"], "Fixed commit": "05aaf3d717ed81692c825380d860258e07eb62bf", "Url": "https://api.github.com/repos/CleWang/ThirdPartyLibraryAnalysis", "Date": "2018-05-16T07:03:49Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((model.getParent()) != null) && ((model.getParent().getGroupId()) != null)) name = name.replace(m.group(0), model.getParent().getGroupId()); else matched = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/896/buggy-version/src.main.java.cn.edu.fudan.se.handlepom.ProjectPom.java", "BodyUseAPI": ["model.getParent().getGroupId()", "org.apache.maven.model.Model.getParent()", "java.lang.String.replace(java.lang.String,model.getParent().getGroupId())"], "Fixed commit": "05aaf3d717ed81692c825380d860258e07eb62bf", "Url": "https://api.github.com/repos/CleWang/ThirdPartyLibraryAnalysis", "Date": "2018-05-16T07:03:49Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cats[i]) >= 0) to[cats[i]] = 1.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9685/buggy-version/h2o-genmodel.src.main.java.hex.genmodel.GenModel.java", "BodyUseAPI": [], "Fixed commit": "fc0775bc0ecf57fdda36b815165e0afa2b4447d5", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2018-08-30T00:57:24Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (imgFront == null) { this.imageFront = null; }else { this.imageFront = imgFront.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6740/buggy-version/src.org.sebastiandine.cardcollectionmanager.bean.CardBean.java", "BodyUseAPI": ["java.io.File.getName()"], "Fixed commit": "56fa0c8e096f234fdc52407e48f91ab02b7df412", "Url": "https://api.github.com/repos/sebastiandine/Card-Collection-Manager", "Date": "2018-04-16T17:09:37Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (imgBack == null) { this.imageBack = null; }else { this.imageBack = imgBack.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6740/buggy-version/src.org.sebastiandine.cardcollectionmanager.bean.CardBean.java", "BodyUseAPI": ["java.io.File.getName()"], "Fixed commit": "56fa0c8e096f234fdc52407e48f91ab02b7df412", "Url": "https://api.github.com/repos/sebastiandine/Card-Collection-Manager", "Date": "2018-04-16T17:09:37Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (value == null) { if (defaultValue != null) { value = defaultValue.get(attributeDefinition.getName()); } if (value == null) { value = attributeDefinition.getDefaultValue(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4965/buggy-version/wfe-core.src.main.java.ru.runa.wfe.var.UserTypeMap.java", "BodyUseAPI": [], "Fixed commit": "ecdcb383372f61a9ca8a9dd05f72d97767b8cb69", "Url": "https://api.github.com/repos/processtech/runawfe-server", "Date": "2018-04-25T09:22:24Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.hartwig.hmftools.common.numeric.Doubles.isZero(lambda)) { return likelihood.dndsLikelihood(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3491/buggy-version/hmf-common.src.main.java.com.hartwig.hmftools.common.drivercatalog.DriverCatalogFactory.java", "BodyUseAPI": [], "Fixed commit": "e74c34d910313a7454871830d4e387b7ba58a11f", "Url": "https://api.github.com/repos/hartwigmedical/hmftools", "Date": "2018-09-17T00:30:53Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(collectionMap.isEmpty())) { metaObject.setValue(\"delegate.boundSql.parameterMappings\", new java.util.ArrayList(parameterMappings)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7506/buggy-version/mybatis-boost-lang.src.main.java.cn.mybatisboost.lang.provider.CollectionParameterEnhancement.java", "BodyUseAPI": [], "Fixed commit": "57081ad5d1891f42f3d0b5454683d257181405a7", "Url": "https://api.github.com/repos/zhang-rf/mybatis-boost", "Date": "2018-07-11T12:17:33Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((addition.get(0)) == 0) { for (int k = 1; k < (addition.size()); k++) { s.append(addition.get(k)); } }else { for (int k = 0; k < (addition.size()); k++) { s.append(addition.get(k)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3476/buggy-version/BigNumber.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.Integer>.size()", "java.lang.StringBuilder.append(java.lang.Integer)", "java.util.LinkedList<java.lang.Integer>.get(int)", "java.util.LinkedList<java.lang.Integer>.get(int)", "java.lang.StringBuilder.append(java.lang.Integer)", "java.util.LinkedList<java.lang.Integer>.size()"], "Fixed commit": "f0fe9577770aa6187668bed37c8dd74c2a122408", "Url": "https://api.github.com/repos/abeizer/BigNumber", "Date": "2018-10-13T21:37:14Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.vwo.getConfig().isOptOut())) { vwoConfig.setOptOut(optOut); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6633/buggy-version/library.src.main.java.com.vwo.mobile.Initializer.java", "BodyUseAPI": [], "Fixed commit": "7338d5ff8bd2783cb8bc689d5f8ae7bfbb446119", "Url": "https://api.github.com/repos/wingify/vwo-android", "Date": "2018-04-04T10:58:09Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.common.cklibrary.utils.JsonUtil.json2Obj(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(com.kymjs.common.StringUtils.isEmpty(rongCloudBean.getData().getStore_name()))) { userInfo = new io.rong.imlib.model.UserInfo((userid + \"\"), rongCloudBean.getData().getStore_name(), android.net.Uri.parse(rongCloudBean.getData().getFace())); }else { userInfo = new io.rong.imlib.model.UserInfo((userid + \"\"), rongCloudBean.getData().getNickname(), android.net.Uri.parse(rongCloudBean.getData().getFace())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/474/buggy-version/SillyChildClient.app.src.main.java.com.sillykid.app.message.interactivemessage.imuitl.UserInfoEngine.java", "BodyUseAPI": ["android.net.Uri.parse(rongCloudBean.getData().getFace())", "rongCloudBean.getData().getFace()", "com.sillykid.app.entity.application.RongCloudBean.getData()", "com.sillykid.app.entity.application.RongCloudBean.getData()", "com.sillykid.app.entity.application.RongCloudBean.getData()", "rongCloudBean.getData().getNickname()", "android.net.Uri.parse(rongCloudBean.getData().getFace())", "rongCloudBean.getData().getStore_name()", "rongCloudBean.getData().getFace()", "com.sillykid.app.entity.application.RongCloudBean.getData()"], "Fixed commit": "0dd314ff55f02014da0aa619556c603494d1d6d1", "Url": "https://api.github.com/repos/921668753/SillyChildClient-Android", "Date": "2018-07-09T05:59:45Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.common.cklibrary.utils.JsonUtil.json2Obj(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(com.kymjs.common.StringUtils.isEmpty(rongCloudBean.getData().getStore_name()))) { userInfo = new io.rong.imlib.model.UserInfo(((mTargetId) + \"\"), rongCloudBean.getData().getStore_name(), android.net.Uri.parse(rongCloudBean.getData().getFace())); }else { userInfo = new io.rong.imlib.model.UserInfo(((mTargetId) + \"\"), rongCloudBean.getData().getNickname(), android.net.Uri.parse(rongCloudBean.getData().getFace())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/474/buggy-version/SillyChildClient.app.src.main.java.com.sillykid.app.message.interactivemessage.ConversationActivity.java", "BodyUseAPI": ["rongCloudBean.getData().getFace()", "com.sillykid.app.entity.application.RongCloudBean.getData()", "com.sillykid.app.entity.application.RongCloudBean.getData()", "com.sillykid.app.entity.application.RongCloudBean.getData()", "rongCloudBean.getData().getStore_name()", "android.net.Uri.parse(rongCloudBean.getData().getFace())", "com.sillykid.app.entity.application.RongCloudBean.getData()", "rongCloudBean.getData().getFace()", "rongCloudBean.getData().getNickname()", "android.net.Uri.parse(rongCloudBean.getData().getFace())"], "Fixed commit": "0dd314ff55f02014da0aa619556c603494d1d6d1", "Url": "https://api.github.com/repos/921668753/SillyChildClient-Android", "Date": "2018-07-09T05:59:45Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.gmail.berndivader.mythicmobsext.Main.pluginmanager.getPlugin(\"ProtocolLib\").isEnabled()) { new com.gmail.berndivader.mythicmobsext.guardianbeam.GuardianBeam(this); com.gmail.berndivader.mythicmobsext.Main.logger.info(\"using ProtocolLib\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5381/buggy-version/src.main.java.com.gmail.berndivader.mythicmobsext.Main.java", "BodyUseAPI": [], "Fixed commit": "832e8f6b52026c91cdec3aa3dcbbe3c65356b854", "Url": "https://api.github.com/repos/BerndiVader/MythicMobsExtension", "Date": "2018-10-24T18:29:00Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.commerce.organization.service.impl.CommerceOrganizationLocalServiceImpl.fetchGroup(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (group == null) { return new com.liferay.portal.kernel.search.BaseModelSearchResult(java.util.Collections.<com.liferay.portal.kernel.model.Organization>emptyList(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3153/buggy-version/commerce-organization-service.src.main.java.com.liferay.commerce.organization.service.impl.CommerceOrganizationLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "06458e70062e16a47deb514c1074cc8198db9c30", "Url": "https://api.github.com/repos/yichenroy/com-liferay-commerce", "Date": "2018-08-31T10:25:26Z"},
{"Line": "=>537", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (areLeavesFalling) { updateLeafClusters(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1440/buggy-version/src.main.java.EventManager.java", "BodyUseAPI": [], "Fixed commit": "c7b34bac97ba55adbf8ebe3641c446b34af8c425", "Url": "https://api.github.com/repos/enondorf934/computer-graphics-project", "Date": "2018-05-03T05:15:10Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["connect.widget.album.view.HackyViewPager.getCurrentItem()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (currentPosition < (albumFiles.size())) { connect.widget.album.model.AlbumFile albumFile = albumFiles.get(currentPosition); int videolength = ((int) ((albumFile.getDuration()) / 1000)); java.lang.String filepath = albumFile.getPath(); java.lang.String length = java.lang.String.valueOf(videolength); connect.activity.chat.exts.VideoPlayerActivity.startActivity(activity, filepath, length, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5646/buggy-version/app.src.main.java.connect.widget.album.fragment.AlbumPreviewFragment.java", "BodyUseAPI": ["java.util.List<connect.widget.album.model.AlbumFile>.get(int)"], "Fixed commit": "e7266d53bffa9ca5124f102cbed1e1dc20b68c48", "Url": "https://api.github.com/repos/yueqingkong/Android", "Date": "2018-03-20T10:50:42Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.length()) < 3) { errorMap.put(\"name\", \"name.length() < 3\"); }else if ((name.length()) > 10) { errorMap.put(\"name\", \"name.length() > 10\"); }else if (!(name.matches(\"[0-9]+\"))) { errorMap.put(\"name\", \"name contains digits\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2570/buggy-version/src.main.java.com.company.quiz.validator.UserValidatorImpl.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.matches(java.lang.String)"], "Fixed commit": "2c45971e2270d07acce859ded7ef1221d35cd007", "Url": "https://api.github.com/repos/AntonYakovenko/Quiz", "Date": "2018-02-19T08:56:57Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((productRepository.existsById(id)) == false) { throw new com.ben.myretail.exceptions.UpdateIntegrityException(\"unknown ID\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9625/buggy-version/myRetail.src.main.java.com.ben.myretail.controller.ProductController.java", "BodyUseAPI": [], "Fixed commit": "5f4e0db1e30e2fcf1b73308909536b5ea79a02fa", "Url": "https://api.github.com/repos/CoalSpider/myRetail", "Date": "2018-04-06T00:55:23Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.univali.ps.nucleo.TratadorExcecoes.FluxoSaidaExcecao.getFullStack()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (silenciador_de_excecoes_and(mensagem, search)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2114/buggy-version/ide.src.main.java.br.univali.ps.nucleo.TratadorExcecoes.java", "BodyUseAPI": [], "Fixed commit": "9cc9db56361e539377d3f10b456e4187cfe0bd73", "Url": "https://api.github.com/repos/UNIVALI-LITE/Portugol-Studio", "Date": "2018-04-06T19:01:37Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == false) { result = !(entry.getValue().getSealedBids().isEmpty()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4250/buggy-version/src.auctiondata.Auction.java", "BodyUseAPI": [], "Fixed commit": "6fffa448b4ac54a1d4850b35bd438e6849c5f84f", "Url": "https://api.github.com/repos/tannerdanger/auction-central-group4", "Date": "2018-05-21T23:04:33Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reset == 1) & (battery != 0)) { cmd[0] = ((byte) (128)); }else if (reset == 1) { cmd[0] = ((byte) (4)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/632/buggy-version/app.src.main.java.biz.endotherm.NFC.HandleTag.java", "BodyUseAPI": [], "Fixed commit": "96653c3eb34088877df2f5641ca33c513a77636b", "Url": "https://api.github.com/repos/KoopCoop/Cyclino", "Date": "2018-03-29T12:07:45Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.ActionEvent.getActionCommand()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (s.equals(\"Create Puzzle\")) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3419/buggy-version/SudokuWindow.java", "BodyUseAPI": [], "Fixed commit": "ea95d3fdabddb6f82281745418604b39c9d626d7", "Url": "https://api.github.com/repos/britnicanale/Final-Project-Sudoku", "Date": "2018-01-09T01:53:20Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { if (replaceMissingKey) { value = missingKeyReplacement; }else { if (detectedStrictFormat) { value = template.substring((ndx1 - startLen), (ndx2 + endLen)); }else { value = template.substring((ndx1 - 1), ndx2); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5696/buggy-version/jodd-core.src.main.java.jodd.util.template.StringTemplateParser.java", "BodyUseAPI": [], "Fixed commit": "01ee4a0f7b06141718867471ba58aa50d3a17eb6", "Url": "https://api.github.com/repos/mosoft521/jodd", "Date": "2018-04-10T11:39:20Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isNumeric(input))) { return context.getResources().getString(R.string.notvalid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5090/buggy-version/app.src.main.java.axisimski.binaryconverter.CheckInput.java", "BodyUseAPI": [], "Fixed commit": "145036d79263054dc3a96e1457c61d1bb9b35989", "Url": "https://api.github.com/repos/axisimski/Twos-Complement-Converter-App", "Date": "2018-07-18T15:46:07Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (sophena.model.WoodAmountType.MASS)) return 1 / (1 - waterContent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4258/buggy-version/sophena.src.sophena.math.energetic.CalorificValue.java", "BodyUseAPI": [], "Fixed commit": "b79b82b364e4898b427f8584412d9cff92eed78e", "Url": "https://api.github.com/repos/GreenDelta/Sophena", "Date": "2018-06-18T09:25:57Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(title)) com.munchmash.util.DialogUtils.dialog.setTitle(context.getString(R.string.app_name)); else com.munchmash.util.DialogUtils.dialog.setTitle(title);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/302/buggy-version/app.src.main.java.com.munchmash.util.DialogUtils.java", "BodyUseAPI": ["AlertDialog.Builder.setTitle(java.lang.String)"], "Fixed commit": "0f9a2cbaeee8b1e0cd8d1b60d39c5a93e0c97650", "Url": "https://api.github.com/repos/AtulRaj007/HomeMadeBazar", "Date": "2018-06-03T18:44:31Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bind()) glTexParameter(type.getGLEnum(), attribute.getGLEnum(), value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7579/buggy-version/src.engine.graphics.textures.Texture.java", "BodyUseAPI": [], "Fixed commit": "6f27442fdf9d31166e32b44eac1e434b440d8889", "Url": "https://api.github.com/repos/leefogg/GLOOP", "Date": "2018-09-18T20:48:25Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bind()) glTexParameteri(type.getGLEnum(), attribute.getGLEnum(), value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7579/buggy-version/src.engine.graphics.textures.Texture.java", "BodyUseAPI": [], "Fixed commit": "6f27442fdf9d31166e32b44eac1e434b440d8889", "Url": "https://api.github.com/repos/leefogg/GLOOP", "Date": "2018-09-18T20:48:25Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ai.Ai.placed)) { place(); ai.Ai.placed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7837/buggy-version/src.ai.Ai.java", "BodyUseAPI": [], "Fixed commit": "4b43bf70a4b9a0bb25eaedbf17f66d0a7b0b7e74", "Url": "https://api.github.com/repos/riedeljan/battleships", "Date": "2018-01-25T19:03:17Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((book) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4582/buggy-version/src.main.java.com.goblimey.addressbook.AddressBook.java", "BodyUseAPI": [], "Fixed commit": "7c40942cd80476b6ddf6af370ff4e82f59a97527", "Url": "https://api.github.com/repos/goblimey/addressbook", "Date": "2018-02-22T14:29:32Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((book) == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4582/buggy-version/src.main.java.com.goblimey.addressbook.AddressBook.java", "BodyUseAPI": [], "Fixed commit": "7c40942cd80476b6ddf6af370ff4e82f59a97527", "Url": "https://api.github.com/repos/goblimey/addressbook", "Date": "2018-02-22T14:29:32Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!variableOnLeftSide) { whole = whole.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3892/buggy-version/src.net.ssehub.kernel_haven.non_boolean.NonBooleanPreperation.java", "BodyUseAPI": [], "Fixed commit": "a87f5c8e2cd8475c7399b581673a4f58141a188a", "Url": "https://api.github.com/repos/KernelHaven/NonBooleanUtils", "Date": "2018-03-05T16:26:21Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(whole.equals(replacement))) { result = result.replace(whole, replacement); m = twoVariablesExpression.matcher(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3892/buggy-version/src.net.ssehub.kernel_haven.non_boolean.NonBooleanPreperation.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "a87f5c8e2cd8475c7399b581673a4f58141a188a", "Url": "https://api.github.com/repos/KernelHaven/NonBooleanUtils", "Date": "2018-03-05T16:26:21Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(src.startsWith(\"http\"))) { throw new java.lang.RuntimeException((\"Invalid source: \" + src)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4602/buggy-version/nuxeo-jsf.nuxeo-platform-ui-web.src.main.java.org.nuxeo.ecm.platform.ui.web.component.seam.NuxeoITextImageProvider.java", "BodyUseAPI": [], "Fixed commit": "0fe2bf5ac58f8135916f7502a06788e3081902b0", "Url": "https://api.github.com/repos/nuxeo/nuxeo", "Date": "2018-10-01T13:51:32Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isPVCTile)) { this.changeSectorColor(player.getSectorColour()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5279/buggy-version/core.src.sepr.game.Sector.java", "BodyUseAPI": [], "Fixed commit": "3315afce1ee6098b52ee524010c345db8bcc793d", "Url": "https://api.github.com/repos/thomasslee97/Bachelors-of-Domination", "Date": "2018-02-16T16:31:15Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["redisTemplate.opsForValue().setIfAbsent(java.lang.String,T)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ifAbsent) { expire(key, time, java.util.concurrent.TimeUnit.SECONDS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/584/buggy-version/src.main.java.com.roger.manager.RedisCacheManager.java", "BodyUseAPI": [], "Fixed commit": "7d9db604d87f925d4290ed826cac44c726193a0c", "Url": "https://api.github.com/repos/LiHongTai/base-spring-redis", "Date": "2018-09-25T11:49:27Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cardReader.read(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newAttributes[0].equals(\"two\")) { box1.setPresence(false); box2.setPresence(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7622/buggy-version/ODSYredux.ODSYRunner.java", "BodyUseAPI": [], "Fixed commit": "74f8ee3e4e6dca8c3e401b99cbe0dd26a4cbe7fb", "Url": "https://api.github.com/repos/Vibrant-Media-Lab/OdysseyNowJava", "Date": "2018-01-18T23:50:22Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cardReader.read(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newAttributes[0].equals(\"one\")) { box1.setPresence(true); box2.setPresence(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7622/buggy-version/ODSYredux.ODSYRunner.java", "BodyUseAPI": [], "Fixed commit": "74f8ee3e4e6dca8c3e401b99cbe0dd26a4cbe7fb", "Url": "https://api.github.com/repos/Vibrant-Media-Lab/OdysseyNowJava", "Date": "2018-01-18T23:50:22Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["roguelike.screens.GameScreen.gc(java.lang.Integer,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (position == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7800/buggy-version/core.src.main.java.roguelike.screens.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "666af267d4351a8acbb88010ef7e9625143f24f3", "Url": "https://api.github.com/repos/Knickkennedy/SquidDungeonsOfElentria", "Date": "2018-08-03T00:37:17Z"},
{"Line": "=>5611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!r) r = consumeToken(b, org.ballerinalang.plugins.idea.parser.FUTURE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6810/buggy-version/src.main.gen.org.ballerinalang.plugins.idea.parser.BallerinaParser.java", "BodyUseAPI": [], "Fixed commit": "d8db6ad8b678b11a245aa5acbf0809525c2548cf", "Url": "https://api.github.com/repos/Shan1024/ballerina-idea-plugin", "Date": "2018-04-11T16:44:49Z"},
{"Line": "=>605", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (activity instanceof com.facebook.react.modules.core.PermissionAwareActivity) { ((com.facebook.react.modules.core.PermissionAwareActivity) (activity)).requestPermissions(PERMISSIONS, requestCode, listener); }else if (activity instanceof com.imagepicker.permissions.OnImagePickerPermissionsCallback) { ((com.imagepicker.permissions.OnImagePickerPermissionsCallback) (activity)).setPermissionListener(listener); android.support.v4.app.ActivityCompat.requestPermissions(activity, PERMISSIONS, requestCode); }else { final java.lang.String errorDescription = new java.lang.StringBuilder(activity.getClass().getSimpleName()).append(\" must implement \").append(com.imagepicker.permissions.OnImagePickerPermissionsCallback.class.getSimpleName()).append(\" or \").append(com.facebook.react.modules.core.PermissionAwareActivity.class.getSimpleName()).toString(); throw new java.lang.UnsupportedOperationException(errorDescription); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8772/buggy-version/android.src.main.java.com.imagepicker.ImagePickerModule.java", "BodyUseAPI": ["android.app.Activity.getClass()", "java.lang.StringBuilder.append(java.lang.String)", "android.support.v4.app.ActivityCompat.requestPermissions(android.app.Activity,java.lang.String[],int)", "activity.getClass().getSimpleName()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "694fa1de5cf4a3dce8e135054c3831fba85e3880", "Url": "https://api.github.com/repos/minyushov/react-native-image-picker", "Date": "2018-05-13T17:33:49Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.mediaType) == (com.eagle.mediapicker.MediaDataSource.VIDEO)) { byte[] videoPhotoBytes = com.eagle.mediapicker.utils.VideoTools.getVideoPhotoBytes(mediaItem.path, MediaStore.Images.Thumbnails.MINI_KIND); if (videoPhotoBytes == null) com.bumptech.glide.Glide.with(mActivity).load(R.mipmap.default_image).into(holder.ivThumb); else com.bumptech.glide.Glide.with(mActivity).load(videoPhotoBytes).error(R.mipmap.default_image).placeholder(R.mipmap.default_image).diskCacheStrategy(DiskCacheStrategy.ALL).into(holder.ivThumb); }else { mediaPicker.getImageLoader().displayImage(mActivity, mediaItem.path, holder.ivThumb, mMediaSize, mMediaSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5510/buggy-version/mediapicker.src.main.java.com.eagle.mediapicker.adapter.MediaGridAdapter.java", "BodyUseAPI": [], "Fixed commit": "bbbc55e040698f0af39c634b80dfd890c0241a51", "Url": "https://api.github.com/repos/thedog2y/MediaPicker", "Date": "2018-10-24T10:47:21Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.eagle.mediapicker.utils.VideoTools.getVideoPhoto(videoPath, MediaStore.Images.Thumbnails.MINI_KIND)) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5510/buggy-version/mediapicker.src.main.java.com.eagle.mediapicker.utils.VideoTools.java", "BodyUseAPI": [], "Fixed commit": "bbbc55e040698f0af39c634b80dfd890c0241a51", "Url": "https://api.github.com/repos/thedog2y/MediaPicker", "Date": "2018-10-24T10:47:21Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dateValue) == null) { dateValue = new java.util.Date(getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7019/buggy-version/src.main.java.com.mweser.model.data_structures.DateString.java", "BodyUseAPI": [], "Fixed commit": "12fb94edfa697332f8b735f33b68249bde4fc71e", "Url": "https://api.github.com/repos/mweser/Bottom-Dollar-Finances", "Date": "2018-03-18T17:28:15Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((editable) == false) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5730/buggy-version/src.com.valkryst.VTerminal.component.TextArea.java", "BodyUseAPI": [], "Fixed commit": "b9fbc14344cb2c6ada0655494e63704ac4401226", "Url": "https://api.github.com/repos/Valkryst/VTerminal", "Date": "2018-08-29T20:45:34Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRebinding()) { dockerHost = ((brooklyn.entity.container.docker.DockerHost) (getConfig(brooklyn.location.docker.OWNER))); machine = ((org.apache.brooklyn.location.ssh.SshMachineLocation) (getConfig(brooklyn.location.docker.DockerHostLocation.MACHINE))); portForwarder = ((brooklyn.networking.common.subnet.PortForwarder) (getConfig(brooklyn.location.docker.DockerHostLocation.PORT_FORWARDER))); jcloudsLocation = ((org.apache.brooklyn.location.jclouds.JcloudsLocation) (getConfig(brooklyn.location.docker.DockerHostLocation.JCLOUDS_LOCATION))); }else { dockerHost = ((brooklyn.entity.container.docker.DockerHost) (checkNotNull(getConfig(brooklyn.location.docker.OWNER), \"owner\"))); machine = ((org.apache.brooklyn.location.ssh.SshMachineLocation) (checkNotNull(getConfig(brooklyn.location.docker.DockerHostLocation.MACHINE), \"machine\"))); portForwarder = ((brooklyn.networking.common.subnet.PortForwarder) (getConfig(brooklyn.location.docker.DockerHostLocation.PORT_FORWARDER))); jcloudsLocation = ((org.apache.brooklyn.location.jclouds.JcloudsLocation) (getConfig(brooklyn.location.docker.DockerHostLocation.JCLOUDS_LOCATION))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1527/buggy-version/docker.src.main.java.brooklyn.location.docker.DockerHostLocation.java", "BodyUseAPI": [], "Fixed commit": "faede37993ff5527dadab0c16fa646b1f88853c7", "Url": "https://api.github.com/repos/leusonmario/clocker", "Date": "2016-03-24T16:17:41Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRebinding()) { infrastructure = ((brooklyn.entity.container.docker.DockerInfrastructure) (getConfig(brooklyn.location.docker.OWNER))); }else { infrastructure = ((brooklyn.entity.container.docker.DockerInfrastructure) (checkNotNull(getConfig(brooklyn.location.docker.OWNER), \"owner\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1527/buggy-version/docker.src.main.java.brooklyn.location.docker.DockerLocation.java", "BodyUseAPI": [], "Fixed commit": "faede37993ff5527dadab0c16fa646b1f88853c7", "Url": "https://api.github.com/repos/leusonmario/clocker", "Date": "2016-03-24T16:17:41Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.eat) == true) { java.lang.System.out.println(((name) + \" can't eat because it is eating\")); }else { java.lang.System.out.println(((name) + \" is walikng\")); this.walk = true; this.run = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3552/buggy-version/src.main.java.Dog.java", "BodyUseAPI": [], "Fixed commit": "56e99b14787f029acee05b8e6b3b5929bb33d4a0", "Url": "https://api.github.com/repos/rpldesh/sonarTest", "Date": "2018-07-12T06:53:16Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.constellio.model.entities.schemas.Metadata.getCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (code.startsWith(((schemaTypeCode) + \"_default\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7293/buggy-version/model.src.com.constellio.model.services.records.RecordImpl.java", "BodyUseAPI": [], "Fixed commit": "d61161bb9c094e01e479fa11cd63a46703d7a6bb", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2018-08-20T19:56:23Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((myElement.getPrevSibling()) instanceof org.ballerinalang.plugins.idea.psi.BallerinaPackageReference)) { java.util.List<org.ballerinalang.plugins.idea.psi.BallerinaAnnotationDefinition> annotationDefinitions = org.ballerinalang.plugins.idea.psi.impl.BallerinaPsiImplUtil.suggestBuiltInAnnotations(element); for (org.ballerinalang.plugins.idea.psi.BallerinaAnnotationDefinition definition : annotationDefinitions) { com.intellij.psi.PsiElement identifier = definition.getIdentifier(); if (identifier != null) { if ((myResult) != null) { myResult.addElement(org.ballerinalang.plugins.idea.completion.BallerinaCompletionUtils.createAnnotationLookupElement(identifier)); lookupElementsFound = true; }else if (myElement.getText().equals(identifier.getText())) { add(identifier); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5764/buggy-version/src.main.java.org.ballerinalang.plugins.idea.psi.scopeprocessors.BallerinaTopLevelScopeProcessor.java", "BodyUseAPI": ["com.intellij.psi.PsiElement.getText()", "myElement.getText().equals(identifier.getText())"], "Fixed commit": "a28a806a543df3fa19a1d05b3ab5918ea0eb8dbb", "Url": "https://api.github.com/repos/Shan1024/ballerina-idea-plugin", "Date": "2018-04-25T05:47:23Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.responseBodyBinary) == null) { return new java.io.ByteArrayInputStream(new byte[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3788/buggy-version/clova-extension-boot-web.src.main.java.com.linecorp.clova.extension.boot.interceptor.LoggingRequestResponseInterceptor.java", "BodyUseAPI": [], "Fixed commit": "367a6c88cd5c556bd7ed55586b444e511a33031f", "Url": "https://api.github.com/repos/uich/clova-cek-sdk-java", "Date": "2018-10-05T05:28:41Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gdd.harrison.memdust.growingdegreeday.MainHubActivity.getSystemService(Context.LOCATION_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (lm != null) { location = lm.getLastKnownLocation(LocationManager.GPS_PROVIDER); if (location != null) { latlongPair[0] = location.getLongitude(); latlongPair[1] = location.getLatitude(); }else { latlongPair[0] = -85.3864; latlongPair[1] = 40.116; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5391/buggy-version/app.src.main.java.gdd.harrison.memdust.growingdegreeday.MainHubActivity.java", "BodyUseAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER)"], "Fixed commit": "9d34b8044afd738cb37ec02871fdb2214e00464d", "Url": "https://api.github.com/repos/BraxHarrison/GrowingDegreeDay", "Date": "2018-04-20T03:35:26Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) { result = new org.eclipse.equinox.p2.core.ProvisionException((\"Unable to load repository: \" + location)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6776/buggy-version/fr.obeo.releng.targetplatform.src.fr.obeo.releng.targetplatform.TargetPlatformRepositoryManager.java", "BodyUseAPI": [], "Fixed commit": "59c76495f95da4161887453cfcad2adf38e479a1", "Url": "https://api.github.com/repos/jldelarbre/fr.obeo.releng.targetplatform", "Date": "2018-10-23T20:31:23Z"},
{"Line": "=>1068", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(storyKeys.toString().equals(\"\"))) { if (((mLastKnownLocation) != null) && ((mLastKnownLocation.distanceTo(storyLocation)) <= 500)) { showNearbyStories(storyKeys.toString(), storyLocation, 0); }else { showFarStories(storyKeys.toString(), storyLocation, 0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2981/buggy-version/app.src.main.java.com.projectbored.app.MapsActivityCurrentPlace.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.lang.StringBuilder.toString()", "com.projectbored.app.MapsActivityCurrentPlace.16.showNearbyStories(java.lang.String,android.location.Location,int)", "com.projectbored.app.MapsActivityCurrentPlace.16.showFarStories(java.lang.String,android.location.Location,int)"], "Fixed commit": "c527d179e1131cf42c357bdb23257b5c3cd472d9", "Url": "https://api.github.com/repos/invent2017/BORED", "Date": "2018-05-06T08:24:32Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.httpClient) == null) this.httpClient = new okhttp3.OkHttpClient();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7533/buggy-version/RouteeJavaSDK.src.main.java.net.routee.messaging.RouteeMessagingClient.java", "BodyUseAPI": [], "Fixed commit": "49127e43ff1153c9740809206fb1e6c1e968619e", "Url": "https://api.github.com/repos/randinterval/Routee-Java-SDK", "Date": "2018-10-15T17:46:53Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(path.startsWith(\"/\"))) { throw new java.lang.IllegalArgumentException(\"The path must start with \\\"/\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/39/buggy-version/SimpleJavaServer.src.request.RequestParser.java", "BodyUseAPI": [], "Fixed commit": "4ac8a1a8246b06a4461ee139ae363aca48606a70", "Url": "https://api.github.com/repos/yamaeda64/SimpleJavaHTTPServer", "Date": "2018-02-25T21:04:00Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.STLSkatespots.STLSkatespots.Repos.SkateParkRepo.findById(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (park.isPresent()) { return org.springframework.http.ResponseEntity.accepted().body(park); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4143/buggy-version/src.main.java.com.STLSkatespots.STLSkatespots.Controllers.SkateParkController.java", "BodyUseAPI": ["org.springframework.http.ResponseEntity.accepted().body(java.util.Optional<com.STLSkatespots.STLSkatespots.Entities.SkatePark>)"], "Fixed commit": "ac74ea022550e3bda43c3ca83e4375bd469b42fa", "Url": "https://api.github.com/repos/chrisreams91/skateSpotsAPI", "Date": "2018-04-14T19:40:50Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(newMessage.getDescription())) { org.xcolab.commons.servlet.flash.AlertMessage.danger(\"Please enter your comment\").flash(request); return (\"redirect:\" + redirectUri) + \"#addCommentForm\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6735/buggy-version/view.src.main.java.org.xcolab.view.taglibs.xcolab.jspTags.discussion.actions.AddDiscussionMessageActionController.java", "BodyUseAPI": [], "Fixed commit": "4a60d7eef4f219180596987c9ddaa03ee45605a7", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2018-08-01T00:05:51Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gephi.graph.api.Edge.getTarget()", "org.gephi.graph.api.Edge.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((hasNodeWeight(node_a)) && (hasNodeWeight(node_b))) { java.lang.Double wt_a = getNodeWeight(node_a, isDynamicNodeWeight, interval); java.lang.Double wt_b = getNodeWeight(node_b, isDynamicNodeWeight, interval); NodeAttraction.apply(node_a, node_b, (((getNodeWeight(node_a, isDynamicNodeWeight, interval)) + (getNodeWeight(node_b, isDynamicNodeWeight, interval))) / 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4401/buggy-version/modules.NodeWeight.src.main.java.org.gephi.layout.plugins.layout.NodeWeight.ForceAtlas2.java", "BodyUseAPI": ["org.gephi.layout.plugins.layout.NodeWeight.ForceAtlas2.getNodeWeight(org.gephi.graph.api.Node,boolean,org.gephi.graph.api.Interval)", "org.gephi.layout.plugins.layout.NodeWeight.ForceAtlas2.getNodeWeight(org.gephi.graph.api.Node,boolean,org.gephi.graph.api.Interval)", "org.gephi.layout.plugins.layout.NodeWeight.ForceFactory.AttractionForce.apply(org.gephi.graph.api.Node,org.gephi.graph.api.Node,(((getNodeWeight(node_a, isDynamicNodeWeight, interval)) + (getNodeWeight(node_b, isDynamicNodeWeight, interval))) / 2))", "org.gephi.layout.plugins.layout.NodeWeight.ForceAtlas2.getNodeWeight(org.gephi.graph.api.Node,boolean,org.gephi.graph.api.Interval)", "org.gephi.layout.plugins.layout.NodeWeight.ForceAtlas2.getNodeWeight(org.gephi.graph.api.Node,boolean,org.gephi.graph.api.Interval)"], "Fixed commit": "46c559d8f45a388e88cf01bf745301003df1c29c", "Url": "https://api.github.com/repos/juliannej/gephi-plugins-bootcamp", "Date": "2018-08-16T21:25:39Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eca.data.file.text.AbstractTextLoader.getAttributeType(java.util.List<java.util.List<java.lang.String>>,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (attributeType == (weka.core.Attribute.NOMINAL)) { for (int j = 1; j < (data.size()); j++) { java.lang.String val = removeQuotes(data.get(j).get(i)); if ((!(isMissing(val))) && (!(values.contains(val)))) { values.add(val); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2606/buggy-version/eca-core.src.main.java.eca.data.file.text.AbstractTextLoader.java", "BodyUseAPI": [], "Fixed commit": "0ff4d7fd3a9e6c41cb84f68ff2321f148ffec685", "Url": "https://api.github.com/repos/Stonnos/eca", "Date": "2018-08-27T12:54:07Z"},
{"Line": "=>917", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((v.value) == null) || (v.value.equals(\"0\"))) || (v.value.equals(\"\\\"\\\"\"))) { if ((((v.type.contains(\"char\")) && (v.type.contains(\"*\"))) || (v.type.contains(\"[\"))) && (!(Analyzer.ignoreOnce.contains((scope + (v.name)))))) { Analyzer.ignoreOnce.add((scope + (v.name))); }else Analyzer.bw.write(((((((((\"sd_set~!~\" + (Analyzer.eventNumber)) + \"|\") + (Analyzer.lineNumber)) + \"|\") + scope) + \"|\") + (v.name)) + (java.lang.System.lineSeparator()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7746/buggy-version/Analyzer.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.io.BufferedWriter.write(java.lang.String)", "java.util.List<java.lang.String>.contains(java.lang.String)"], "Fixed commit": "4cb56f05f998801abf4b1929da833d86e472fae7", "Url": "https://api.github.com/repos/JamesWWalker/SecureCvisualJ", "Date": "2018-01-10T01:52:38Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.LOLLIPOP_MR1)) { choiceCardToSend(); }else { choiceCardToSendNew(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5269/buggy-version/app.src.main.java.cn.foxnickel.fuckshanxun.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "823d9bbfe9d11aa0a2f9e13c979efa2fcf0ece08", "Url": "https://api.github.com/repos/FoxNickel/FuckShanXun", "Date": "2018-06-10T09:17:41Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.skilldistillery.cards.common.Deck.checkDeckSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (deckSize < 15) { dk = new com.skilldistillery.cards.common.Deck(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/669/buggy-version/src.com.skilldistillery.cards.blackjack.BlackjackApp.java", "BodyUseAPI": [], "Fixed commit": "b1715841af1a95d5ab0702af9660647f5c93d11a", "Url": "https://api.github.com/repos/oharris21/BlackjackProject", "Date": "2018-07-31T19:45:49Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.rdf.jena.experimental.JenaRDFParser.getSourceInputStream()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (sourceInputStream.isPresent()) { org.apache.jena.riot.RDFParser.source(sourceInputStream.get()).base(baseStr).lang(lang).parse(dest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8950/buggy-version/commons-rdf-jena.src.main.java.org.apache.commons.rdf.jena.experimental.JenaRDFParser.java", "BodyUseAPI": ["org.apache.jena.riot.RDFParser.source(sourceInputStream.get()).base(java.lang.String)", "java.util.Optional<java.io.InputStream>.get()", "org.apache.jena.riot.RDFParser.source(java.io.InputStream)", "org.apache.jena.riot.RDFParser.source(sourceInputStream.get()).base(baseStr).lang(org.apache.jena.riot.Lang)", "org.apache.jena.riot.RDFParser.source(sourceInputStream.get()).base(baseStr).lang(lang).parse(org.apache.jena.riot.system.StreamRDF)"], "Fixed commit": "5dafbce6a1abd041c2233cd6a5101c8d753f0c63", "Url": "https://api.github.com/repos/BME-MIT-IET/Csipet-Csapat-iet-2018", "Date": "2018-05-05T20:07:40Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((generalizedConsumerQuad) != null) { dest = jenaRDF.streamJenaToGeneralizedQuad(generalizedConsumerQuad); }else if ((generalizedConsumerTriple) != null) { dest = jenaRDF.streamJenaToGeneralizedTriple(generalizedConsumerTriple); }else { java.util.Optional<org.apache.commons.rdf.api.RDF> rdfTermFactory = getRdfTermFactory(); if (rdfTermFactory.isPresent()) { dest = org.apache.commons.rdf.jena.JenaRDF.streamJenaToQuad(rdfTermFactory.get(), getTarget()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8950/buggy-version/commons-rdf-jena.src.main.java.org.apache.commons.rdf.jena.experimental.JenaRDFParser.java", "BodyUseAPI": [], "Fixed commit": "5dafbce6a1abd041c2233cd6a5101c8d753f0c63", "Url": "https://api.github.com/repos/BME-MIT-IET/Csipet-Csapat-iet-2018", "Date": "2018-05-05T20:07:40Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.talend.model.bridge.ReponsitoryContextBridge.getRootProject().getLocation()) != null) { param.setValue(org.talend.model.bridge.ReponsitoryContextBridge.getRootProject().getLocation().toPortableString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5547/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.editor.process.Process.java", "BodyUseAPI": [], "Fixed commit": "6945a8607c6b7e79e0661e4ce7965d3466bd4537", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2018-01-26T09:39:25Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valid_field[x][y]) { for (heroes.Click c : start_pos) { if (((c.x) == x) && ((c.y) == y)) { return false; } } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5733/buggy-version/code.Heroes.src.heroes.GameState.java", "BodyUseAPI": [], "Fixed commit": "ca3210dc7b6a05aefaaa72186695d8e0cec752e2", "Url": "https://api.github.com/repos/NismoR/BeagySzoft", "Date": "2018-05-01T10:40:13Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["elh.eus.MSM.Mention.getGeoInfo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (geo == null) { geo = \"unknown\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4312/buggy-version/src.main.java.elh.eus.MSM.Mention.java", "BodyUseAPI": [], "Fixed commit": "76e6fbbae7bef22a5cbc15b18acda9b612177cae", "Url": "https://api.github.com/repos/Elhuyar/MSM", "Date": "2018-01-24T17:37:46Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (quantity <= 0) { android.widget.Toast.makeText(this, getString(R.string.edit_quantity_validation), Toast.LENGTH_SHORT).show(); }else { quantity = java.lang.Integer.parseInt(quantityString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5710/buggy-version/app.src.main.java.com.chadarutherford.carutherford_book_store.EditActivity.java", "BodyUseAPI": [], "Fixed commit": "b5d7b3ebbdb32c1e38e43ecb6eae0ef1a99a558c", "Url": "https://api.github.com/repos/chadarutherford/CARutherford_Book_Store", "Date": "2018-09-05T14:27:58Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) < 8) { res = res.substring(0, res.length()); }else { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2224/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "f2057c87f6be58e0796c21658c8b14ac1f72c1ea", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-nikhiljay", "Date": "2018-09-25T19:09:58Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotEmpty(org.mySite.common.constant.CodeDic.searchDic(code))) { temp.add(orderNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4673/buggy-version/mySite-domain.src.main.java.org.mySite.domain.SSCOrder.java", "BodyUseAPI": [], "Fixed commit": "d19aa42ef16fb52cf90186a998b95c7baf36a28e", "Url": "https://api.github.com/repos/liaowenhua/mySite", "Date": "2018-09-15T01:28:23Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getPhoto()) == null) { user.setPhoto(new com.cmput301w18t05.taskzilla.Photo(\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2551/buggy-version/app.src.main.java.com.cmput301w18t05.taskzilla.fragment.ProfileFragment.java", "BodyUseAPI": ["com.cmput301w18t05.taskzilla.User.setPhoto(com.cmput301w18t05.taskzilla.Photo)"], "Fixed commit": "8e22bf4d9858097dbba6f7d68a58e05595fbc608", "Url": "https://api.github.com/repos/CMPUT301W18T05/Taskzilla", "Date": "2018-04-05T03:36:34Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((file.exists()) && (file.isFile())) { stringCollection = org.wso2.siddhi.core.util.SiddhiExtensionLoader.getContent(file, pattern); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2408/buggy-version/modules.siddhi-core.src.main.java.org.wso2.siddhi.core.util.SiddhiExtensionLoader.java", "BodyUseAPI": ["org.wso2.siddhi.core.util.SiddhiExtensionLoader.getContent(java.io.File,java.util.regex.Pattern)"], "Fixed commit": "e036d1fadad95c065c208f77a829fdc00313d048", "Url": "https://api.github.com/repos/wso2/siddhi", "Date": "2018-03-12T07:14:46Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.siddhi.core.util.SiddhiExtensionLoader.getResources(java.lang.String,java.util.regex.Pattern)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((stringCollection != null) && (!(stringCollection.isEmpty()))) { extensionsList.addAll(stringCollection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2408/buggy-version/modules.siddhi-core.src.main.java.org.wso2.siddhi.core.util.SiddhiExtensionLoader.java", "BodyUseAPI": ["java.util.Collection<java.lang.String>.addAll(java.util.Collection<java.lang.String>)"], "Fixed commit": "e036d1fadad95c065c208f77a829fdc00313d048", "Url": "https://api.github.com/repos/wso2/siddhi", "Date": "2018-03-12T07:14:46Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (capturePointVelocity != null) this.capturePointVelocity.setIncludingFrame(capturePointVelocity); else this.capturePointVelocity.setToNaN();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4823/buggy-version/ihmc-common-walking-control-modules.src.main.java.us.ihmc.commonWalkingControlModules.capturePoint.LinearMomentumRateOfChangeControlModule.java", "BodyUseAPI": ["us.ihmc.euclid.referenceFrame.FrameVector2D.setIncludingFrame(us.ihmc.euclid.referenceFrame.interfaces.FrameVector2DReadOnly)"], "Fixed commit": "cd1435d06b72f6bee88d74d8a5fffbac5c667b01", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2018-02-07T22:05:18Z"},
{"Line": "=>4029", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.registryKit.survey.surveyManager.getEnvironmentalStrategyEntryById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (environmentalstrategiesDetails != null) { if (\"\".equals(environmentalstrategiesDetails.getDataTrackedBy())) { environmentalstrategiesDetails.setDataTrackedBy(dataTrackedBy); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8273/buggy-version/webapp.src.main.java.com.rr.wabshs.ui.clients.clientController.java", "BodyUseAPI": ["com.registryKit.survey.submittedsurveysessionenvironmentalstrategiesdata.getDataTrackedBy()", "com.registryKit.survey.submittedsurveysessionenvironmentalstrategiesdata.setDataTrackedBy(java.lang.String)", "java.lang.String.equals(environmentalstrategiesDetails.getDataTrackedBy())"], "Fixed commit": "a40f8cea2c65c906dc7adcda002b0093bdf15f2a", "Url": "https://api.github.com/repos/bowlinktech/wabshsRR", "Date": "2018-05-08T15:31:41Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getPdfObject()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8301/buggy-version/src.listeners.PdfAreaMouseClick.java", "BodyUseAPI": [], "Fixed commit": "400aac8f181311a4ba4478a1a2f2bc2fd3be8f09", "Url": "https://api.github.com/repos/marxmanEUW/pdf-notations", "Date": "2018-03-07T11:24:05Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sd.getCol().equals(BaseColumns._ID))) sd.init(cv, jo);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3074/buggy-version/app.src.main.java.org.firebears.scouting2846.ScoutingRec.java", "BodyUseAPI": ["org.firebears.scouting2846.ScoutingData.init(android.content.ContentValues,org.json.JSONObject)"], "Fixed commit": "ae382ebfc6f37e393c31720811ff225a3f4589b4", "Url": "https://api.github.com/repos/DougLau/scouting-2846", "Date": "2018-03-04T05:13:42Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((agentPos.a) == 0) { agentStates.add(0, new game.AgentState(new game.Configuration(agentPos.b.x, agentPos.b.y, Directions.STOP), true)); }else { agentStates.add(new game.AgentState(new game.Configuration(agentPos.b.x, agentPos.b.y, Directions.STOP), false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/843/buggy-version/src.game.GameStateData.java", "BodyUseAPI": ["java.util.ArrayList<game.AgentState>.add(int,game.AgentState)", "java.util.ArrayList<game.AgentState>.add(game.AgentState)"], "Fixed commit": "1dc449b0d5abb4d3683007952e3f0ce6ba81bcec", "Url": "https://api.github.com/repos/abendayan/pacman", "Date": "2018-04-29T13:13:19Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (state1.getCurrentPosition().equals(state2.getCurrentPosition())) { int rotations1 = ((state1.getStep()) != null) ? ((Board.PipeGameStep) (state1.getStep())).getRotations() : 0; int rotations2 = ((state2.getStep()) != null) ? ((Board.PipeGameStep) (state2.getStep())).getRotations() : 0; return java.lang.Double.compare(rotations2, rotations1); }else { return java.lang.Double.compare(state2.generateCost(), state1.generateCost()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4695/buggy-version/src.Searchable.PipeSearchable.java", "BodyUseAPI": ["State.State<Board.MatrixBoard, Board.Position>.getStep()", "State.State<Board.MatrixBoard, Board.Position>.generateCost()", "State.State<Board.MatrixBoard, Board.Position>.generateCost()", "((Board.PipeGameStep) (state2.getStep())).getRotations()", "State.State<Board.MatrixBoard, Board.Position>.getStep()", "((Board.PipeGameStep) (state1.getStep())).getRotations()", "java.lang.Double.compare(state2.generateCost(),state1.generateCost())", "State.State<Board.MatrixBoard, Board.Position>.getStep()", "State.State<Board.MatrixBoard, Board.Position>.getStep()"], "Fixed commit": "ce24b5967df3b1424adbe50dba7548cfa4e41f56", "Url": "https://api.github.com/repos/LeeVaknin/Makaka", "Date": "2018-07-31T13:06:11Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<me.soubhik.GraphAlgorithms.NodeInfo>.get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (neighborNodeInfo.visited) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4018/buggy-version/java.practice.src.main.java.me.soubhik.GraphAlgorithms.java", "BodyUseAPI": [], "Fixed commit": "4447213831869d2bb12880be0226b36b3eb969f1", "Url": "https://api.github.com/repos/leakycup/stuff", "Date": "2018-10-02T18:04:27Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAnimating) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1793/buggy-version/app.src.main.java.com.grupppofigo.progettocinema.riassunto.ResumeActivity.java", "BodyUseAPI": [], "Fixed commit": "fd8db739ddf799a05cb347c78fb973301dbf3c0c", "Url": "https://api.github.com/repos/nicolapagiaro/ProgettoCinema", "Date": "2018-05-09T13:15:59Z"},
{"Line": "=>588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errors.getErrorCount()) != 0) { user = profileDao.showProfile(pid).getUser(); mv.addObject(\"pid\", user.getProfile().getId()); mv.addObject(\"profile\", user.getProfile()); mv.addObject(\"invalidSettingsMessage\", \"Username or password is of invalid length\"); mv.setViewName(\"WEB-INF/views/settings.jsp\"); return mv; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3152/buggy-version/ideasMVC.src.main.java.com.skilldistillery.ideas.controllers.IdeaController.java", "BodyUseAPI": [], "Fixed commit": "03b839cc54e9497ba9ad7edaf20dc51a4d86fa2c", "Url": "https://api.github.com/repos/SvenSkoglund/ideas", "Date": "2018-05-02T23:11:31Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<java.lang.Object>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(o instanceof java.lang.String)) { throw new net.ossindex.version.InvalidRangeRuntimeException((\"Expected string, got \" + (o.getClass().getSimpleName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6722/buggy-version/src.main.java.net.ossindex.version.impl.VersionListener.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getSimpleName()", "java.lang.Object.getClass()"], "Fixed commit": "fe12697873e085590a015c8a45f8de45723f6ff7", "Url": "https://api.github.com/repos/OSSIndex/heuristic-version", "Date": "2018-04-13T01:58:34Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mc.currentScreen) instanceof net.minecraft.client.gui.inventory.GuiContainerCreative) { net.minecraft.client.gui.inventory.GuiContainerCreative gui = ((net.minecraft.client.gui.inventory.GuiContainerCreative) (mc.currentScreen)); visible = enabled = (gui.getSelectedTabIndex()) == 11; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3401/buggy-version/src.main.java.thut.wearables.client.gui.GuiWearableButton.java", "BodyUseAPI": [], "Fixed commit": "12dc5cf4ac584f99038973c0c9eda91d43af60fa", "Url": "https://api.github.com/repos/Thutmose/ThutWearables", "Date": "2018-01-06T02:20:33Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter.getItemCount()) == 0) { errorPlaceholder.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4877/buggy-version/app.src.main.java.com.tbg.pixtr.home.view.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "10582988472132339857a63c5c129d243b5b27a1", "Url": "https://api.github.com/repos/tbglabs/Pixtr", "Date": "2018-01-23T15:13:33Z"},
{"Line": "=>1561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedGoalCellX == 0) { selectedGoalCellX = previousGoalCellX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4390/buggy-version/src.mobemu.utils.HCMM.java", "BodyUseAPI": [], "Fixed commit": "4c2e062ebe5e1fbb20a20eb6184d79d1d3740f91", "Url": "https://api.github.com/repos/raduciobanu/mobemu", "Date": "2018-06-06T14:17:41Z"},
{"Line": "=>1565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedGoalCellY == 0) { selectedGoalCellY = previousGoalCellX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4390/buggy-version/src.mobemu.utils.HCMM.java", "BodyUseAPI": [], "Fixed commit": "4c2e062ebe5e1fbb20a20eb6184d79d1d3740f91", "Url": "https://api.github.com/repos/raduciobanu/mobemu", "Date": "2018-06-06T14:17:41Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!playerExists) { server.model.ServerRoot.getGame(currentGame.getId()).addPlayer(joiner); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4628/buggy-version/server.src.main.java.server.facades.GameSelectionServerFacade.java", "BodyUseAPI": [], "Fixed commit": "c89ef3b8f880f81cb561de3b93668ec583f3db8d", "Url": "https://api.github.com/repos/bdemann/ticket-to-ride", "Date": "2018-02-13T06:38:23Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((orderId.intValue()) == 1236500) { com.igp.handles.vendorpanel.mappers.Order.OrderMapper.logger.debug((\"checking for 1236500 with key \" + key)); com.igp.handles.vendorpanel.mappers.Order.OrderMapper.logger.debug((\"checking for 1236500 \" + (order.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9386/buggy-version/api.src.main.java.com.igp.handles.vendorpanel.mappers.Order.OrderMapper.java", "BodyUseAPI": [], "Fixed commit": "a52236f21d0090ccb6e24d2b0a68c8b9b931315d", "Url": "https://api.github.com/repos/shashank-igp/newadminpanel", "Date": "2018-02-19T14:11:26Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((order.getOrderId()) == 1236500) { com.igp.handles.vendorpanel.mappers.Order.OrderMapper.logger.debug((\"checking for 1236500 \" + (order.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9386/buggy-version/api.src.main.java.com.igp.handles.vendorpanel.mappers.Order.OrderMapper.java", "BodyUseAPI": ["com.igp.handles.vendorpanel.models.Order.Order.toString()", "org.slf4j.Logger.debug((\"checking for 1236500 \" + (order.toString())))"], "Fixed commit": "a52236f21d0090ccb6e24d2b0a68c8b9b931315d", "Url": "https://api.github.com/repos/shashank-igp/newadminpanel", "Date": "2018-02-19T14:11:26Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bankCount(PickaxeBuyer.COINS)) >= (inventoryCost)) { currentInventoryCountItems = new int[]{ PickaxeBuyer.COINS }; currentInventoryCount = coinAmount; setWaitingState(PickaxeBuyer.State.WAITING_FOR_INVENTORY_UPDATE); withdraw(PickaxeBuyer.COINS, ((inventoryCost) - coinAmount)); }else { int coinsInBank = bankCount(PickaxeBuyer.COINS); int pickaxesPlayerCanAfford = coinsInBank / (PickaxeBuyer.PRICE_BY_PICKAXE.get(pickaxeToBuy)); if (pickaxesPlayerCanAfford > 0) { inventoryCost = calculateInventoryCost(pickaxesPlayerCanAfford); }else { currentState = PickaxeBuyer.State.STOPPING; stopReason = \"No more coins available in bank.\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7270/buggy-version/src.main.java.PickaxeBuyer.java", "BodyUseAPI": ["PickaxeBuyer.bankCount(int)", "PickaxeBuyer.withdraw(int,int)"], "Fixed commit": "5a4569be0e6ff85a5628b0e84d22cd3f384f8d61", "Url": "https://api.github.com/repos/Xoreaux/APOS_Scripts", "Date": "2018-01-13T02:50:03Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isReschedule && (startDelay < (java.util.concurrent.TimeUnit.HOURS.toMillis(12)))) { startDelay += java.util.concurrent.TimeUnit.DAYS.toMillis(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/203/buggy-version/library.src.main.java.com.evernote.android.job.DailyJob.java", "BodyUseAPI": [], "Fixed commit": "b4536e1b17ff97269ec63ce1f44fb86df278fdf2", "Url": "https://api.github.com/repos/AndroidKotlinID/android-job", "Date": "2018-03-19T05:20:42Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (secondFile != null) { secondExcelFileName = secondFile.getName(); }else { java.lang.System.out.printf((\"Something wrong in secondfile method \" + (firstFile.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9354/buggy-version/ExcelChecker.ExcelChecker.src.excelchecker.ExcelProcessor.java", "BodyUseAPI": [], "Fixed commit": "a63bd174e7d455cd9e30ae28181a4efceeab4c27", "Url": "https://api.github.com/repos/ihorbodia/ExcelChecker", "Date": "2018-09-12T18:26:42Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["excelchecker.ExcelProcessor.findRow(org.apache.poi.ss.usermodel.Sheet,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (searchedRow != null) { if ((getCellData(row.getCell(((row.getFirstCellNum()) + 1))).equals(getCellData(searchedRow.getCell(((row.getFirstCellNum()) + 1))))) && (getCellData(row.getCell(((row.getFirstCellNum()) + 2))).equals(getCellData(searchedRow.getCell(((row.getFirstCellNum()) + 2)))))) { }else { synchronized(DS) { excelchecker.DiffsStorage.differences.add(getCellData(row.getCell(row.getFirstCellNum()))); } } }else { synchronized(DS) { excelchecker.DiffsStorage.differences.add(getCellData(row.getCell(row.getFirstCellNum()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9354/buggy-version/ExcelChecker.ExcelChecker.src.excelchecker.ExcelProcessor.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Row.getCell(((row.getFirstCellNum()) + 2))", "excelchecker.ExcelProcessor.getCellData(searchedRow.getCell(((row.getFirstCellNum()) + 1)))", "excelchecker.ExcelProcessor.getCellData(searchedRow.getCell(((row.getFirstCellNum()) + 2)))", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "org.apache.poi.ss.usermodel.Row.getCell(((row.getFirstCellNum()) + 1))"], "Fixed commit": "a63bd174e7d455cd9e30ae28181a4efceeab4c27", "Url": "https://api.github.com/repos/ihorbodia/ExcelChecker", "Date": "2018-09-12T18:26:42Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (firstFile != null) { firstExcelFileName = firstFile.getName(); }else { java.lang.System.out.printf((\"Something wrong in first method \" + (secondFile.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9354/buggy-version/ExcelChecker.ExcelChecker.src.excelchecker.ExcelProcessor.java", "BodyUseAPI": [], "Fixed commit": "a63bd174e7d455cd9e30ae28181a4efceeab4c27", "Url": "https://api.github.com/repos/ihorbodia/ExcelChecker", "Date": "2018-09-12T18:26:42Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (extMap != null) { for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : extMap.entrySet()) { extensions.addPair(entry.getKey(), entry.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9246/buggy-version/dev.com.ibm.ws.logging.src.com.ibm.ws.logging.source.LogSource.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.entrySet()"], "Fixed commit": "1f0372f618b76baa50e791b5ded587ac4624601f", "Url": "https://api.github.com/repos/Yushan-Lin/open-liberty", "Date": "2018-02-01T21:25:11Z"},
{"Line": "=>646", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item instanceof com.alibaba.druid.sql.visitor.SQLMethodInvokeExpr) { value = item.toString(); }else { value = com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.eval(dbType, item, parameters, false); if (value == (SQLEvalVisitor.EVAL_VALUE_NULL)) { value = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8557/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SchemaStatVisitor.java", "BodyUseAPI": ["com.alibaba.druid.sql.visitor.SQLEvalVisitorUtils.eval(java.lang.String,com.alibaba.druid.sql.visitor.SQLExpr,java.util.List<java.lang.Object>,boolean)", "com.alibaba.druid.sql.visitor.SQLExpr.toString()"], "Fixed commit": "6d9c176450b430fc23bb8da4c73142cafe505ad4", "Url": "https://api.github.com/repos/FlakyTestDetection/druid", "Date": "2018-02-04T05:24:57Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { getWindow().addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4881/buggy-version/app.src.main.java.x.toolbar.toolbarx.CustomDialog.java", "BodyUseAPI": [], "Fixed commit": "f38c86dca42049662ad539cc41bc9b3fb6f287b0", "Url": "https://api.github.com/repos/fjr619/toolbarx2", "Date": "2018-02-28T16:02:33Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.linkedin.urls.detection.InputTextReader.read()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (curr == '@') { _reader.goBack(); return com.linkedin.urls.detection.DomainNameReader.ReaderNextState.ReadUserPass; }else if ((com.linkedin.urls.detection.CharUtils.isDot(curr)) || (((curr == '%') && (_reader.canReadChars(2))) && (_reader.peek(2).equalsIgnoreCase(com.linkedin.urls.detection.DomainNameReader.HEX_ENCODED_DOT)))) { if ((_currentLabelLength) < 1) { done = true; }else { _buffer.append(curr); if (!(com.linkedin.urls.detection.CharUtils.isDot(curr))) { _buffer.append(_reader.read()); _buffer.append(_reader.read()); } if (!(_zoneIndex)) { (_dots)++; _currentLabelLength = 0; } if ((_currentLabelLength) >= (com.linkedin.urls.detection.DomainNameReader.MAX_LABEL_LENGTH)) { return com.linkedin.urls.detection.DomainNameReader.ReaderNextState.InvalidDomainName; } } }else if (((_seenBracket) && (((((com.linkedin.urls.detection.CharUtils.isHex(curr)) || (curr == ':')) || (curr == '[')) || (curr == ']')) || (curr == '%'))) && (!(_seenCompleteBracketSet))) { switch (curr) { case ':' : _currentLabelLength = 0; break; case '[' : _reader.goBack(); return com.linkedin.urls.detection.DomainNameReader.ReaderNextState.InvalidDomainName; case ']' : _seenCompleteBracketSet = true; _zoneIndex = false; break; case '%' : _zoneIndex = true; break; default : (_currentLabelLength)++; break; } _numeric = false; _buffer.append(curr); }else if (((com.linkedin.urls.detection.CharUtils.isAlphaNumeric(curr)) || (curr == '-')) || (curr >= (com.linkedin.urls.detection.DomainNameReader.INTERNATIONAL_CHAR_START))) { if (_seenCompleteBracketSet) { _reader.goBack(); done = true; }else { if (((curr != 'x') && (curr != 'X')) && (!(com.linkedin.urls.detection.CharUtils.isNumeric(curr)))) { _numeric = false; } _buffer.append(curr); (_currentLabelLength)++; _topLevelLength = _currentLabelLength; } }else if ((curr == '[') && (!(_seenBracket))) { _seenBracket = true; _numeric = false; _buffer.append(curr); }else if ((curr == '[') && (_seenCompleteBracketSet)) { _reader.goBack(); done = true; }else if ((((curr == '%') && (_reader.canReadChars(2))) && (com.linkedin.urls.detection.CharUtils.isHex(_reader.peekChar(0)))) && (com.linkedin.urls.detection.CharUtils.isHex(_reader.peekChar(1)))) { _buffer.append(curr); _buffer.append(_reader.read()); _buffer.append(_reader.read()); _currentLabelLength += 3; _topLevelLength = _currentLabelLength; }else { _characterHandler.addCharacter(curr); done = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9514/buggy-version/url-detector.src.main.java.com.linkedin.urls.detection.DomainNameReader.java", "BodyUseAPI": ["com.linkedin.urls.detection.CharUtils.isHex(char)", "com.linkedin.urls.detection.CharUtils.isDot(char)", "java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(char)", "com.linkedin.urls.detection.DomainNameReader.CharacterHandler.addCharacter(char)", "java.lang.StringBuilder.append(char)", "com.linkedin.urls.detection.CharUtils.isAlphaNumeric(char)", "java.lang.StringBuilder.append(char)", "com.linkedin.urls.detection.CharUtils.isNumeric(char)", "com.linkedin.urls.detection.CharUtils.isDot(char)"], "Fixed commit": "0bd19328c119b23a8800b591937c918c924d2dfa", "Url": "https://api.github.com/repos/pgalbraith/URL-Detector", "Date": "2018-09-21T23:51:16Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((note.getTitle().length()) > 0) && ((note.getBody().length()) > 0)) { dao.addNoteToUser(note); }else { java.lang.System.out.print(\"Notas Vazias\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1651/buggy-version/src.colorNote.Home.java", "BodyUseAPI": ["colorNote.DAO.addNoteToUser(colorNote.Note)"], "Fixed commit": "5dfb3bc1250a5e81d835aa051c4c1287528ee138", "Url": "https://api.github.com/repos/wesleygas/colorNote", "Date": "2018-09-13T12:09:41Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (action != null) { colorNote.Note nota = new colorNote.Note(); nota.setTitle(request.getParameter(\"mtitle\")); nota.setBody(request.getParameter(\"mbody\")); if (((nota.getTitle().length()) > 0) && ((nota.getBody().length()) > 0)) { dao.editNote(nota); request.setAttribute(\"user\", dao.getUserById(java.lang.Integer.parseInt(user_id))); doGet(request, response); }else { java.lang.System.out.print(\"Notas Vazias\"); } }else if (user_id != null) { colorNote.Note note = new colorNote.Note(); java.lang.System.out.println(\"Entrei Pra add notas\"); note.setUser_id(java.lang.Integer.parseInt(user_id)); note.setTitle(request.getParameter(\"title\")); note.setBody(request.getParameter(\"body\")); java.lang.System.out.println(note.getTitle()); java.lang.System.out.println(note.getBody()); note.setTema_id(1); if (((note.getTitle().length()) > 0) && ((note.getBody().length()) > 0)) { dao.addNoteToUser(note); }else { java.lang.System.out.print(\"Notas Vazias\"); } request.setAttribute(\"user\", dao.getUserById(java.lang.Integer.parseInt(user_id))); doGet(request, response); }else { doGet(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1651/buggy-version/src.colorNote.Home.java", "BodyUseAPI": [], "Fixed commit": "5dfb3bc1250a5e81d835aa051c4c1287528ee138", "Url": "https://api.github.com/repos/wesleygas/colorNote", "Date": "2018-09-13T12:09:41Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (holder instanceof com.app.jlin.cafetraveler.Adapter.CafeAdapter.EmptyVH) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1365/buggy-version/app.src.main.java.com.app.jlin.cafetraveler.Adapter.CafeAdapter.java", "BodyUseAPI": [], "Fixed commit": "8cae354e029382153e77f163e2d540dfe50c80e9", "Url": "https://api.github.com/repos/stanleyoho/CafeTraveler", "Date": "2018-04-14T17:49:55Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.next()) != null) { if ((this.next().next()) != null); { ILinkedList.ILinkedList x; x = this.next(); this.Next = this.next().next(); return x; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4532/buggy-version/src.ILinkedList.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "0a4b7f19bbb38ca535b9ba16b90d8f939f3393d5", "Url": "https://api.github.com/repos/thoma55s/c346-hw1", "Date": "2018-08-31T23:29:17Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getMessage().getContentRaw().toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (msg.startsWith(BotPrefix)) { msg = msg.substring(BotPrefix.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7449/buggy-version/src.main.java.gravity.gbot.utils.Logging.msgLogger.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int)"], "Fixed commit": "be8f95a7fcb06f6887a52bd16d1b82ea94e5af17", "Url": "https://api.github.com/repos/EnzoDevelop/EnzoBot", "Date": "2018-05-07T16:29:30Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(this.tenantId)) { this.tenantId = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2164/buggy-version/structr-neo4j-bolt-driver.src.main.java.org.structr.bolt.BoltDatabaseService.java", "BodyUseAPI": [], "Fixed commit": "1d5165aff286e0a4870e0ee1a571731b02eb0327", "Url": "https://api.github.com/repos/structr/structr", "Date": "2018-02-22T17:41:33Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hasValue) { hasValue = (values.get(field)) != null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4263/buggy-version/src.org.graphstream.ui.graphicGraph.stylesheet.Style.java", "BodyUseAPI": [], "Fixed commit": "aad97a65542b353438338e689b9f1c5512a500bd", "Url": "https://api.github.com/repos/hichbra/gs-core", "Date": "2017-11-22T06:41:05Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((intent.resolveActivity(getPackageManager())) != null) { startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1879/buggy-version/app.src.main.java.com.udacity.davidperez.techstoreinventory.EditorActivity.java", "BodyUseAPI": ["com.udacity.davidperez.techstoreinventory.EditorActivity.startActivity(android.content.Intent)"], "Fixed commit": "34e4464dfacc50c92651be47ea3733e116aab112", "Url": "https://api.github.com/repos/kulapik/TechstoreInventory", "Date": "2018-08-29T17:27:41Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bwta.BWTA.getRegion(region.getCenter())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (actualRegion == null) { if (region.getBaseLocations().isEmpty()) { throw new java.lang.Exception(((\"Region \" + region) + \" could not be resolved!\")); }else { bwta.BaseLocation base = region.getBaseLocations().get(0); actualRegion = bwta.BWTA.getRegion(base.getPosition()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3773/buggy-version/CBot.src.core.Init.java", "BodyUseAPI": [], "Fixed commit": "1d36403a8b984504beb01a44e0664cb3e752d624", "Url": "https://api.github.com/repos/p1387h/CBot", "Date": "2018-04-17T02:37:57Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (regions.contains(actualRegion)) { throw new java.lang.Exception(((\"The Region \" + actualRegion) + \" was already added!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3773/buggy-version/CBot.src.core.Init.java", "BodyUseAPI": [], "Fixed commit": "1d36403a8b984504beb01a44e0664cb3e752d624", "Url": "https://api.github.com/repos/p1387h/CBot", "Date": "2018-04-17T02:37:57Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((slider.getOrientation()) == (javax.swing.JSlider.HORIZONTAL)) && ((adjustingThumbIndex) == 0)) && (thumbRects[1].equals(rect))) { int halfThumbWidth = (rect.width) / 2; int thumbLeft = (ui.xPositionForValue(((mSlider.getValueAt(1)) - 1))) - halfThumbWidth; if (thumbLeft <= 1) { adjustingThumbIndex = 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9466/buggy-version/desktop.src.com.frostwire.gui.theme.SkinRangeSliderUI.java", "BodyUseAPI": [], "Fixed commit": "6bb76f4fa3c5d08d780fca2fe3bf2f91c078bcdc", "Url": "https://api.github.com/repos/marcelinkaaa/frostwire", "Date": "2018-04-04T21:51:20Z"},
{"Line": "=>637", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((debugOverlay.getVisibility()) == (android.view.View.VISIBLE)) { bleListAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8257/buggy-version/mobile.src.main.java.nl.timmevandermeer.shelly.ShellyMainActivity.java", "BodyUseAPI": [], "Fixed commit": "1f4215739a9470b80d151d76ef48cf1bfdd2416e", "Url": "https://api.github.com/repos/timmevandermeer/KTF-Shelly", "Date": "2017-01-25T22:36:57Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!afterTakingPhoto) { com.example.rvadam.pfe.AppGlideModule.GlideApp.with(getActivity().getApplicationContext()).load(data).placeholder(R.mipmap.ic_image_not_available).error(R.mipmap.ic_image_not_available).diskCacheStrategy(DiskCacheStrategy.ALL).into(mImageView); }else { com.example.rvadam.pfe.AppGlideModule.GlideApp.with(getActivity().getApplicationContext()).load(data).placeholder(R.mipmap.ic_image_not_available).error(R.mipmap.ic_image_not_available).diskCacheStrategy(DiskCacheStrategy.NONE).into(mImageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6062/buggy-version/app.src.main.java.com.example.rvadam.pfe.PhotoVisualization.PhotoVisualizationFragment.java", "BodyUseAPI": [], "Fixed commit": "070c69f7337b33f3d9922d4a67152c703fc39e11", "Url": "https://api.github.com/repos/romvad/PFE_Metralor_App", "Date": "2018-05-23T23:09:16Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((text.contains(\"buenos dias\")) || (text.contains(\"buen dia\"))) { response = (hourOfDay >= 12 ? \"Buenas tardes\" : \"Buenos dias\") + \", como puedo ayudarlo?\"; return response; }else if (text.contains(\"bloquear\")) { response = \"El bloqueo de tarjeta no puede realizarse por chat, desea lo comunique con un ascesor?\"; waitingConfirmation = true; return response; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8229/buggy-version/app.src.main.java.com.gramajo.josue.chatbot.MainActivity.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)"], "Fixed commit": "3878295d3e5ab14330011553cc5bbbc78c6b6861", "Url": "https://api.github.com/repos/JosueGramajo/ChatBot", "Date": "2018-04-11T22:39:47Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stories.contains(storie)) { final int index = stories.indexOf(storie); final groupe_9.com.fabellas.bo.Story initialStory = stories.get(index); initialStory.cloneRate(storie); }else { stories.add(storie); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1244/buggy-version/app.src.main.java.groupe_9.com.fabellas.StoriesListActivity.java", "BodyUseAPI": ["java.util.ArrayList<groupe_9.com.fabellas.bo.Story>.get(int)", "java.util.ArrayList<groupe_9.com.fabellas.bo.Story>.add(groupe_9.com.fabellas.bo.Story)", "java.util.ArrayList<groupe_9.com.fabellas.bo.Story>.indexOf(groupe_9.com.fabellas.bo.Story)", "groupe_9.com.fabellas.bo.Story.cloneRate(groupe_9.com.fabellas.bo.Story)"], "Fixed commit": "4933713691fd9834e85689b86cba4dfea724bebe", "Url": "https://api.github.com/repos/bucketDips/fabellas", "Date": "2018-01-27T21:04:18Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((signal < 0) && (snugness < 0)) { result = -result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6298/buggy-version/CurveFit.src.main.java.peakaboo.curvefit.curve.scoring.FastFittingScorer.java", "BodyUseAPI": [], "Fixed commit": "76d36fa70169afd3c40ac1719a006cbdc4aee433", "Url": "https://api.github.com/repos/nsherry4/Peakaboo", "Date": "2018-07-09T19:34:14Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPlaybackState()) == (android.support.v4.media.session.PlaybackStateCompat.STATE_PLAYING)) { resumePlaybackOnFocusGain = true; controls.pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8195/buggy-version/app.src.main.java.com.jrvermeer.psalter.MediaService.java", "BodyUseAPI": [], "Fixed commit": "2c44fecd819e2d9220cc98438db44e18eae117db", "Url": "https://api.github.com/repos/jrvermeer/Psalter", "Date": "2018-01-29T11:42:05Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mediaController.getPlaybackState().getState()) == (android.support.v4.media.session.PlaybackStateCompat.STATE_PLAYING)) { int currentlyPlaying = java.lang.Integer.parseInt(metadata.getDescription().getMediaId()); goToPsalter(currentlyPlaying); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8195/buggy-version/app.src.main.java.com.jrvermeer.psalter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2c44fecd819e2d9220cc98438db44e18eae117db", "Url": "https://api.github.com/repos/jrvermeer/Psalter", "Date": "2018-01-29T11:42:05Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uk.gov.hmcts.sscs.service.AirLookupService.LOG.isDebugEnabled()) { uk.gov.hmcts.sscs.service.AirLookupService.LOG.debug(java.lang.String.format(\"Post code: {0} Regional office: {1}\", postcodeCell.getRichStringCellValue().getString().toLowerCase().trim(), adminGroupCell.getRichStringCellValue().getString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1937/buggy-version/src.main.java.uk.gov.hmcts.sscs.service.AirLookupService.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "366693d61c24596a95ae5493544c1794df61bd13", "Url": "https://api.github.com/repos/hmcts/sscs-tribunals-case-api", "Date": "2018-09-25T12:41:28Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uk.gov.hmcts.sscs.service.AirLookupService.LOG.isDebugEnabled()) { uk.gov.hmcts.sscs.service.AirLookupService.LOG.debug(java.lang.String.format(\"Venue map has {0} venue ids\", lookupAirVenueNameByPostCode.keySet().size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1937/buggy-version/src.main.java.uk.gov.hmcts.sscs.service.AirLookupService.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "366693d61c24596a95ae5493544c1794df61bd13", "Url": "https://api.github.com/repos/hmcts/sscs-tribunals-case-api", "Date": "2018-09-25T12:41:28Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uk.gov.hmcts.sscs.service.AirLookupService.LOG.isDebugEnabled()) { uk.gov.hmcts.sscs.service.AirLookupService.LOG.debug(\"Successfully loaded lookup data for postcode endpoint\"); uk.gov.hmcts.sscs.service.AirLookupService.LOG.debug(java.lang.String.format(\"Regional centre data has {0} post codes\", lookupRegionalCentreByPostCode.keySet().size())); uk.gov.hmcts.sscs.service.AirLookupService.LOG.debug(java.lang.String.format(\"Air Venue data has {0} post codes\", lookupAirVenueNameByPostCode.keySet().size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1937/buggy-version/src.main.java.uk.gov.hmcts.sscs.service.AirLookupService.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)", "org.slf4j.Logger.debug(java.lang.String)", "org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "366693d61c24596a95ae5493544c1794df61bd13", "Url": "https://api.github.com/repos/hmcts/sscs-tribunals-case-api", "Date": "2018-09-25T12:41:28Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tab.save()) == false) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/408/buggy-version/src.main.java.edu.utah.ece.async.sboldesigner.sbol.editor.dialog.PreferencesDialog.java", "BodyUseAPI": [], "Fixed commit": "c79612804f0deaeb8cd7016b06f694baf94af1f7", "Url": "https://api.github.com/repos/SynBioDex/SBOLDesigner", "Date": "2018-09-26T02:51:29Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rawRType.startsWith(\"tools:\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3190/buggy-version/tinker-build.tinker-patch-lib.src.main.java.com.tencent.tinker.build.aapt.AaptUtil.java", "BodyUseAPI": [], "Fixed commit": "6af314442e642bd5366213f80be1b232e44af93a", "Url": "https://api.github.com/repos/Tencent/tinker", "Date": "2018-08-30T04:54:12Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (workers.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9743/buggy-version/bot.src.bot.LobsterBot.java", "BodyUseAPI": [], "Fixed commit": "10341bf36f9c819fea5b73dc9dfde36187c6594f", "Url": "https://api.github.com/repos/Phil-Sparkes/comp250-bot", "Date": "2018-04-22T19:07:22Z"},
{"Line": "=>2174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(englishLeft)) { if (answer.equals(original)) { collocation.isDifficult = false; collocationCopy.isDifficult = false; }else { collocation.isDifficult = true; collocationCopy.isDifficult = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7968/buggy-version/app.src.main.java.com.example.delimes.words_teacher.PageFragment.java", "BodyUseAPI": [], "Fixed commit": "8e5c2f6bbba31dd49197729131ce8f6dca02480a", "Url": "https://api.github.com/repos/deLimes/Wisdom_in_words", "Date": "2018-03-26T12:55:33Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t.getMessage()) != null) { android.util.Log.d(getClass().getName(), t.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4286/buggy-version/app.src.main.java.com.yoshione.fingen.fts.FtsHelper.java", "BodyUseAPI": ["java.lang.Throwable.getMessage()", "android.util.Log.d(java.lang.String,java.lang.String)"], "Fixed commit": "471dbabe746da749fe1f77671465f2b2812b5a83", "Url": "https://api.github.com/repos/YoshiOne/fingen", "Date": "2018-06-02T02:19:13Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (settingsFile == null) { return org.nzbhydra.migration.FromPythonMigration.MigrationResult.requirementsNotMet(\"Config file not provided\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4598/buggy-version/core.src.main.java.org.nzbhydra.migration.FromPythonMigration.java", "BodyUseAPI": [], "Fixed commit": "208370812e4250b7fa645f936f7ca6e65b83ad1c", "Url": "https://api.github.com/repos/theotherp/nzbhydra2", "Date": "2018-01-07T21:07:59Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doMigrateDatabase && (databaseFile == null)) { return org.nzbhydra.migration.FromPythonMigration.MigrationResult.requirementsNotMet(\"Database file not provided and database migration not selected to be skipped\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4598/buggy-version/core.src.main.java.org.nzbhydra.migration.FromPythonMigration.java", "BodyUseAPI": [], "Fixed commit": "208370812e4250b7fa645f936f7ca6e65b83ad1c", "Url": "https://api.github.com/repos/theotherp/nzbhydra2", "Date": "2018-01-07T21:07:59Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.net.UnknownHostException) { getMvpView().showMessage(context.getString(R.string.error_wrong_endpoint)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/80/buggy-version/app.src.main.java.org.mifos.mobilebanking.presenters.LoginPresenter.java", "BodyUseAPI": [], "Fixed commit": "ea0fc4178a318d7681e9b16f04789b75115b7aa5", "Url": "https://api.github.com/repos/miPlodder/mifos-mobile", "Date": "2018-03-22T17:46:45Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((items) == null) { items = new java.util.ArrayList<models.FoodItem>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3668/buggy-version/app.models.FoodCollection.java", "BodyUseAPI": [], "Fixed commit": "e0242e055481d9d425abe03a358ef86efb99280f", "Url": "https://api.github.com/repos/EfficaceFood/efficace-server", "Date": "2018-04-03T10:10:15Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.biojava.nbio.structure.StructureTools.getRepresentativeAtomArray(vert.getChain())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ca.length) == 0) { eppic.assembly.Assembly.logger.info(\"No representative atoms for chain with name {}. Using all atoms to get symmetry for structure packing\", vert.getChain().getName()); ca = org.biojava.nbio.structure.StructureTools.getAllAtomArray(vert.getChain()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4739/buggy-version/eppic-cli.src.main.java.eppic.assembly.Assembly.java", "BodyUseAPI": [], "Fixed commit": "254f4ad2f91092ea7b7bcc6bb05428aab8d0cb51", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2018-04-18T17:07:54Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dataElements.get(0).text().isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9592/buggy-version/src.main.java.ro.mihalea.deerkat.utility.HtmlProcessor.java", "BodyUseAPI": [], "Fixed commit": "9b5c9a6a0d322c97ebe58420482aeadb47c53742", "Url": "https://api.github.com/repos/mihalea/deerkat", "Date": "2018-06-09T15:32:41Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.arm.mbed.properties.editor.core.Utils.queryToMap(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((query.containsKey(\"service\")) && ((query.get(\"service\")) != null)) && ((query.get(\"service\").equalsIgnoreCase(\"restart\")) == true)) { java.lang.System.out.println(\"Restarting Service...\"); com.arm.mbed.properties.editor.core.Utils.executeScript(this.m_scripts_root, this.m_service_restart_script); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7179/buggy-version/src.main.java.com.arm.mbed.properties.editor.processor.PropertiesEditorProcessor.java", "BodyUseAPI": [], "Fixed commit": "2086f0792884b13a7543a462359668445db11bff", "Url": "https://api.github.com/repos/ARMmbed/mbed-properties-editor", "Date": "2018-08-20T23:59:30Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.nuls.client.version.SyncVersionRunner.getNewestVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((io.nuls.core.tools.str.VersionUtils.equalsWith(NulsConfig.VERSION, newestVersion)) || (io.nuls.core.tools.str.VersionUtils.higherThan(NulsConfig.VERSION, newestVersion))) { io.nuls.kernel.model.Result result = io.nuls.kernel.model.Result.getFailed(KernelErrorCode.NONEWVER); return result.toRpcClientResult(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3627/buggy-version/client-module.client.src.main.java.io.nuls.client.rpc.resources.ClientResource.java", "BodyUseAPI": [], "Fixed commit": "454039b914d11e4afde56be37ba70e006f42e424", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-10-12T11:56:30Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((textEncoded.charAt(i)) == ' ') { textDecoded += textEncoded.charAt(i); }else if (f != (-1)) { textDecoded += CaesarCypher.alphabet.charAt(CaesarCypher.shiftedAlphabet.indexOf(textEncoded.charAt(i))); }else { textDecoded += textEncoded.charAt(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8511/buggy-version/BSB.src.CaesarCypher.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.indexOf(char)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)"], "Fixed commit": "2fef216775101cc0a033f5972a54e1a3f4e2ede0", "Url": "https://api.github.com/repos/WilielFlorenciani/CaesarCypher", "Date": "2018-09-01T04:11:50Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clearText.charAt(i)) == ' ') { textEncoded += clearText.charAt(i); }else if (j != (-1)) { textEncoded += CaesarCypher.shiftedAlphabet.charAt(CaesarCypher.alphabet.indexOf(clearText.charAt(i))); }else { textEncoded += clearText.charAt(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8511/buggy-version/BSB.src.CaesarCypher.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)"], "Fixed commit": "2fef216775101cc0a033f5972a54e1a3f4e2ede0", "Url": "https://api.github.com/repos/WilielFlorenciani/CaesarCypher", "Date": "2018-09-01T04:11:50Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (previous != tree) { previous.leftTree = null; }else { tree.rightTree = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9858/buggy-version/BinarySearchTree.src.BinarySearchTree.java", "BodyUseAPI": [], "Fixed commit": "7a98474e6639eb101479f41ec46e0d66d954c846", "Url": "https://api.github.com/repos/Skn0tt/lkDatenstrukturen", "Date": "2018-02-27T19:22:54Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (previous != tree) { previous.rightTree = null; }else { tree.leftTree = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9858/buggy-version/BinarySearchTree.src.BinarySearchTree.java", "BodyUseAPI": [], "Fixed commit": "7a98474e6639eb101479f41ec46e0d66d954c846", "Url": "https://api.github.com/repos/Skn0tt/lkDatenstrukturen", "Date": "2018-02-27T19:22:54Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["e.getWorld().getBlockState(e.getPos()).getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (brokeBlock == (gunn.modcurrency.mod.block.ModBlocks.blockATM)) { gunn.modcurrency.mod.tileentity.IOwnable tile = ((gunn.modcurrency.mod.tileentity.IOwnable) (e.getWorld().getTileEntity(e.getPos()))); if ((!(e.getEntityPlayer().getUniqueID().toString().equals(tile.getOwner()))) && (!(e.getEntityPlayer().isCreative()))) { e.setCanceled(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3227/buggy-version/src.main.java.gunn.modcurrency.mod.handler.EventHandlerCommon.java", "BodyUseAPI": [], "Fixed commit": "ffacb89343d6d4a72c4313d9734be8aca2d74e4d", "Url": "https://api.github.com/repos/BeardlessBrady/Currency-Mod", "Date": "2018-02-10T19:27:37Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getState()) == (javax.microedition.media.Player.STARTED)) { player.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8515/buggy-version/app.src.main.java.com.nokia.mid.sound.Sound.java", "BodyUseAPI": ["javax.microedition.media.Player.stop()"], "Fixed commit": "a65fd433fb80023c7f54f1dc1403b9da0b6b8418", "Url": "https://api.github.com/repos/nikita36078/J2ME-Loader", "Date": "2018-03-14T13:48:12Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (toPrint.toString().contains(\",\")) toPrint = new java.lang.StringBuilder(toPrint.substring(0, toPrint.lastIndexOf(\",\"))); else toPrint = new java.lang.StringBuilder(\"Fragment stack: no activities\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5190/buggy-version/app.src.main.java.com.pineapple.davinci.activities.Activity_MainPages.java", "BodyUseAPI": ["java.lang.StringBuilder.lastIndexOf(java.lang.String)", "java.lang.StringBuilder.substring(int,int)"], "Fixed commit": "32bbb06b3b156757eb0ba12287530ff44cf0646f", "Url": "https://api.github.com/repos/pineappledevteam/Davinci", "Date": "2018-09-03T03:31:12Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.web.client.RestTemplate.exchange(java.lang.String,HttpMethod.POST,eu.h2020.symbiote.ssp.rap.odata.HttpEntity<java.lang.String>,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((obj.getBody()) != null) { java.lang.Object response = extractResponse(obj.getBody()); if (response instanceof eu.h2020.symbiote.ssp.rap.messages.plugin.RapPluginResponse) { if (response instanceof eu.h2020.symbiote.ssp.rap.messages.plugin.RapPluginErrorResponse) { eu.h2020.symbiote.ssp.rap.messages.plugin.RapPluginErrorResponse errorResponse = ((eu.h2020.symbiote.ssp.rap.messages.plugin.RapPluginErrorResponse) (response)); throw new org.apache.olingo.server.api.ODataApplicationException(errorResponse.getMessage(), errorResponse.getResponseCode(), null); } result = ((eu.h2020.symbiote.ssp.rap.messages.plugin.RapPluginResponse) (response)); }else { result = new eu.h2020.symbiote.ssp.rap.messages.plugin.RapPluginOkResponse(200, response); } }else { result = new eu.h2020.symbiote.ssp.rap.messages.plugin.RapPluginOkResponse(200, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3325/buggy-version/src.main.java.eu.h2020.symbiote.ssp.rap.odata.StorageHelper.java", "BodyUseAPI": ["eu.h2020.symbiote.ssp.rap.odata.ResponseEntity<?>.getBody()", "eu.h2020.symbiote.ssp.rap.odata.StorageHelper.extractResponse(obj.getBody())"], "Fixed commit": "afda7ce5aa339b6f698e2974cd9eeece649dce50", "Url": "https://api.github.com/repos/symbiote-h2020/SymbioteSmartSpace", "Date": "2018-04-09T10:34:07Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getAcceleration()) != 0) this.setSpeed(((float) ((this.getSpeed()) + ((this.getAcceleration()) * (1 / ((double) (gameData.getFps())))))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9664/buggy-version/gameEngine.src.main.java.com.fedexu.androidgameengine.object.GameObject.java", "BodyUseAPI": [], "Fixed commit": "963fce0fc815f675183810e8e04671d241e650b2", "Url": "https://api.github.com/repos/fedexu/AndroidGameEngine", "Date": "2018-02-05T23:45:29Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (description.trim().isEmpty()) { description = lessonNumber + \" \u0447\u0430\u0441\u043e\u0432\u0438\"; com.example.kekec.model.web.Candidate candidate = candidateService.getById(candidateId); candidateService.updateCandidate(candidateId, candidate.paymentInfo, candidate.contactInfo, candidate.ssn, ((candidate.numberOfLessons) + lessonNumber), candidate.drivingCategory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2414/buggy-version/src.main.java.com.example.kekec.model.web.UserController.java", "BodyUseAPI": [], "Fixed commit": "a280dd785657f44234f8052ab0df994f77db0e96", "Url": "https://api.github.com/repos/ViktorPetreski/kekec", "Date": "2018-06-11T23:55:08Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasSeparator) { java.lang.String separatorSymbol = ((name.martingeisse.mapag.grammar.canonicalization.SymbolReference) (repetition.getSeparatorExpression())).getSymbolName(); if (repetition.isEmptyAllowed()) { nonterminal = ((\"synthetic/separatedList/\" + elementSymbol) + \"/\") + separatorSymbol; repetitionNonterminal = nonterminal + \"/nonempty\"; }else { nonterminal = (((\"synthetic/separatedList/\" + elementSymbol) + \"/\") + separatorSymbol) + \"/nonempty\"; repetitionNonterminal = nonterminal; } }else { nonterminal = (\"synthetic/list/\" + elementSymbol) + (repetition.isEmptyAllowed() ? \"\" : \"/nonempty\"); repetitionNonterminal = nonterminal; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5932/buggy-version/src.name.martingeisse.mapag.grammar.canonicalization.ProductionCanonicalizer.java", "BodyUseAPI": [], "Fixed commit": "89282be307bf7de3af11c3e95469afe7e2888ebc", "Url": "https://api.github.com/repos/MartinGeisse/mapag", "Date": "2018-02-11T11:59:22Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((indexList.size()) < loopEnd) { loopEnd = indexList.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7698/buggy-version/src.common.src.main.java.jp.co.yahoo.dataplatform.mds.binary.maker.ConstantColumnBinaryMaker.java", "BodyUseAPI": ["jp.co.yahoo.dataplatform.mds.spread.expression.IExpressionIndex.size()"], "Fixed commit": "bd39e60fb1da6c8275adee2da9322b769c5f54e8", "Url": "https://api.github.com/repos/koijima/multiple-dimension-spread", "Date": "2018-06-08T01:50:15Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.length) <= (indexList.get(i))) { allocator.setNull(index); }else { try { allocator.setPrimitiveObject(index, value); } catch (java.io.IOException e) { allocator.setNull(index); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7698/buggy-version/src.common.src.main.java.jp.co.yahoo.dataplatform.mds.binary.maker.ConstantColumnBinaryMaker.java", "BodyUseAPI": [], "Fixed commit": "bd39e60fb1da6c8275adee2da9322b769c5f54e8", "Url": "https://api.github.com/repos/koijima/multiple-dimension-spread", "Date": "2018-06-08T01:50:15Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((indexList.size()) < loopEnd) { loopEnd = indexList.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7698/buggy-version/src.common.src.main.java.jp.co.yahoo.dataplatform.mds.binary.maker.ConstantColumnBinaryMaker.java", "BodyUseAPI": ["jp.co.yahoo.dataplatform.mds.spread.expression.IExpressionIndex.size()"], "Fixed commit": "bd39e60fb1da6c8275adee2da9322b769c5f54e8", "Url": "https://api.github.com/repos/koijima/multiple-dimension-spread", "Date": "2018-06-08T01:50:15Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mid > j) count++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8928/buggy-version/sums.three-sum.ThreeSumBinarySearch.java", "BodyUseAPI": [], "Fixed commit": "7010b1cacb1742f67422ee46b1dcfd819a5dc9bb", "Url": "https://api.github.com/repos/toddlasley/java-algorithms", "Date": "2018-06-01T21:15:41Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Dataset.Entry.getRec()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (minHeight < (rect.height)) { minHeight = rect.height; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6868/buggy-version/packing.src.packing.generator.OptimalBoundingBoxGenerator.java", "BodyUseAPI": [], "Fixed commit": "a270b028f34a63e6ab5d609c45682b81e0e19809", "Url": "https://api.github.com/repos/Kaj0Wortel/packing", "Date": "2018-05-28T14:05:54Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (a == 0.0) { return robot.pathfinder.math.MathUtils.findPositiveQuadraticRoot(b, c, d); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3849/buggy-version/src.robot.pathfinder.math.MathUtils.java", "BodyUseAPI": [], "Fixed commit": "868b9d7ff5c038980f64c551d55d759225b7a67f", "Url": "https://api.github.com/repos/Arctos6135/RobotPathfinder", "Date": "2018-06-08T01:19:00Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tagIdsString.trim().isEmpty()) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3336/buggy-version/app.src.main.java.tw.edu.nthu.phys.astrolab.yangm.manireminder.UtilReminder.java", "BodyUseAPI": [], "Fixed commit": "fe232903b3ce71a68dd57b7eae93456f951dbb25", "Url": "https://api.github.com/repos/ManiYang/ManiReminder-Android", "Date": "2018-09-06T06:29:20Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tw.edu.nthu.phys.astrolab.yangm.manireminder.UtilReminder.buildTagsString(cursor.getString(2),android.util.SparseArray<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tagsStr.isEmpty()) { tagsStr = \"(none)\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3336/buggy-version/app.src.main.java.tw.edu.nthu.phys.astrolab.yangm.manireminder.DetailFragment.java", "BodyUseAPI": [], "Fixed commit": "fe232903b3ce71a68dd57b7eae93456f951dbb25", "Url": "https://api.github.com/repos/ManiYang/ManiReminder-Android", "Date": "2018-09-06T06:29:20Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((countDownTimer) != null) { countDownTimer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5658/buggy-version/app.src.main.java.com.devindow.myfitnessroutines.PlayRoutineActivity.java", "BodyUseAPI": [], "Fixed commit": "57a00362d44d7a1514d228e3d9198c703d971963", "Url": "https://api.github.com/repos/DevinDow/MyFitnessRoutines", "Date": "2018-02-10T12:28:01Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userData.recentPlayWith) == null) userData.recentPlayWith = new java.util.ArrayList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2716/buggy-version/app.src.main.java.com.example.bm.werewolf.Utils.UserDatabase.java", "BodyUseAPI": [], "Fixed commit": "e1b8ef6b685c601d3826220da506ea6146c1390b", "Url": "https://api.github.com/repos/IcedCrescent/Werewolf", "Date": "2018-06-01T16:03:33Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userData.friendList) == null) userData.friendList = new java.util.ArrayList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2716/buggy-version/app.src.main.java.com.example.bm.werewolf.Utils.UserDatabase.java", "BodyUseAPI": [], "Fixed commit": "e1b8ef6b685c601d3826220da506ea6146c1390b", "Url": "https://api.github.com/repos/IcedCrescent/Werewolf", "Date": "2018-06-01T16:03:33Z"},
{"Line": "=>712", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"LOAN\".equals(cactSubAcct.getSubAcctType())) { period = (cactAccount.getCurrentLoanPeriod()) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5096/buggy-version/cc-process-service.src.main.java.net.engining.pcx.cc.process.service.impl.PaymentPlanServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "fe011a034d5e2adaf5509f46d7a80cdbbab16b8e", "Url": "https://api.github.com/repos/crazythinking/cac", "Date": "2018-09-18T06:05:09Z"},
{"Line": "=>766", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"LOAN\".equals(cactSubAcct.getSubAcctType())) { java.math.BigDecimal tmpInt = paymentPlan.getDetails().get((period - 1)).getOrigInterestAmt(); intAmt = intAmt.add(tmpInt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5096/buggy-version/cc-process-service.src.main.java.net.engining.pcx.cc.process.service.impl.PaymentPlanServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "fe011a034d5e2adaf5509f46d7a80cdbbab16b8e", "Url": "https://api.github.com/repos/crazythinking/cac", "Date": "2018-09-18T06:05:09Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (filename.contains(\" \")) { javax.swing.JOptionPane.showMessageDialog(null, ((((\"This filename contains blank space in title. It will be \" + \"saved as \") + (filename.replace(\" \", \"-\"))) + \" 'cause that's an \") + \"API restriction.\"), \"Information\", javax.swing.JOptionPane.INFORMATION_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3286/buggy-version/My_Mail_API_Desktop.src.main.java.com.lucasrochagit.views.MailSent.java", "BodyUseAPI": ["javax.swing.JOptionPane.showMessageDialog(<nulltype>,java.lang.String,java.lang.String,int)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "8338e44d7434e1f4aaab4a4205ed8e33ee958d07", "Url": "https://api.github.com/repos/lucasrochagit/my-mail-api", "Date": "2018-10-20T03:37:41Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sfPathString.isEmpty()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4906/buggy-version/starts-plugin.src.main.java.edu.illinois.starts.jdeps.RunMojo.java", "BodyUseAPI": [], "Fixed commit": "ff88b23cc904bc21085e9f85425cc7fa95487218", "Url": "https://api.github.com/repos/TestingResearchIllinois/starts", "Date": "2017-12-09T17:22:46Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cleanSfClassPath.isEmpty()) { return noException; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4906/buggy-version/starts-plugin.src.main.java.edu.illinois.starts.jdeps.RunMojo.java", "BodyUseAPI": [], "Fixed commit": "ff88b23cc904bc21085e9f85425cc7fa95487218", "Url": "https://api.github.com/repos/TestingResearchIllinois/starts", "Date": "2017-12-09T17:22:46Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (next != (value.length())) { w.write(value, next, (((value.length()) - next) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1896/buggy-version/src.main.java.io.usethesource.vallang.impl.primitive.StringValue.java", "BodyUseAPI": ["java.io.Writer.write(java.lang.String,int,int)", "java.lang.String.length()"], "Fixed commit": "824fea6fd5cce89119bbe03b7acf469bfd7bc48f", "Url": "https://api.github.com/repos/usethesource/vallang", "Date": "2018-03-25T14:12:45Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.hm.cs.iua.repositories.IUAUserRepository.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (user.isValidated()) return \"activationSuccessful\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1190/buggy-version/src.main.java.edu.hm.cs.iua.controllers.RegistrationController.java", "BodyUseAPI": [], "Fixed commit": "004082648c6d769887243b61307ac418e190e7d8", "Url": "https://api.github.com/repos/sweIhm/sweiproject-tg1b-4", "Date": "2018-01-08T13:20:08Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Arrays.asList(operations).contains(\"emailService\")) props = akka.actor.Props.create(actor).withDispatcher(\"mail-dispatcher\"); else props = akka.actor.Props.create(actor).withDispatcher(dispatcher);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2852/buggy-version/actors.core.src.main.java.org.sunbird.actor.core.BaseRouter.java", "BodyUseAPI": [], "Fixed commit": "c599277216b64851b1cba651cca88e118c1fbec0", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-06-07T20:31:43Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sites.size()) > 1) { for (int i = 0; i < (jsonDocuments.size()); i++) { org.json.simple.JSONObject siteObj = ((org.json.simple.JSONObject) (jsonDocuments.get(i))); org.json.simple.JSONObject site = ((org.json.simple.JSONObject) (siteObj.get(\"site\"))); java.lang.String shortname = ((java.lang.String) (site.get(\"shortName\"))); if (sites.isEmpty()) sites.add(shortname); if (!(sites.contains(shortname))) { multiArchives = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1540/buggy-version/platform-mellanarkiv.src.main.java.se.vgregion.alfresco.mellanarkiv.platform.webscripts.GetArchiveSeries.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.contains(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.util.ArrayList<java.lang.String>.isEmpty()"], "Fixed commit": "0df43064d3cc256bb549b42fa7d533e9899dd78d", "Url": "https://api.github.com/repos/Vastra-Gotalandsregionen/alfresco-mellanarkiv", "Date": "2018-08-13T08:47:09Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spikeTimes) == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3601/buggy-version/src.SynapsePackage.ExternalSynapse.java", "BodyUseAPI": [], "Fixed commit": "456d93bfa89ce9605d6dc86c2616a4febf0c4a5b", "Url": "https://api.github.com/repos/lestheprof/PyramidalCells", "Date": "2018-08-13T14:47:30Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (contextArray != null) NN.setContextualInputs(contextArray);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3601/buggy-version/src.Driver.RunNeuralNetwork.java", "BodyUseAPI": ["Network.NeuronalNetwork.setContextualInputs(double[][])"], "Fixed commit": "456d93bfa89ce9605d6dc86c2616a4febf0c4a5b", "Url": "https://api.github.com/repos/lestheprof/PyramidalCells", "Date": "2018-08-13T14:47:30Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getDisabled(0)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/398/buggy-version/src.main.java.com.mjr.planetprogression.tileEntities.TileEntityTelescope.java", "BodyUseAPI": [], "Fixed commit": "8663ab9b2782c175b4507881af4a1f07440b05e0", "Url": "https://api.github.com/repos/MJRLegends/Planet-Progression", "Date": "2018-06-15T23:34:43Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromIndex > spacesCount) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9334/buggy-version/component.core-jpa.src.main.java.org.exoplatform.social.core.jpa.updater.SpaceMemberAnyMembershipUpgradePlugin.java", "BodyUseAPI": [], "Fixed commit": "cc846d0e8ed9e8dd054d7a3280788b28831f4745", "Url": "https://api.github.com/repos/exodev/social", "Date": "2018-05-30T15:29:14Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hu.bme.mit.spaceship.TorpedoStore.fire(int)", "hu.bme.mit.spaceship.TorpedoStore.fire(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (firingSuccessPrimary && firingSuccessSecondary) firingSuccess = true; else firingSuccess = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1801/buggy-version/src.main.java.hu.bme.mit.spaceship.GT4500.java", "BodyUseAPI": [], "Fixed commit": "60cc709afca5335a83f35170bdade178e799bcdc", "Url": "https://api.github.com/repos/BMark96/ivt-lab", "Date": "2018-04-20T11:02:38Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.ArrayListMultimap.create()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (reductionMultimap.isEmpty()) { throw new java.lang.RuntimeException(\"None of the aggregate functions provided apply to the summarized column type(s).\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1726/buggy-version/core.src.main.java.tech.tablesaw.aggregate.Summarizer.java", "BodyUseAPI": [], "Fixed commit": "91874df57c54d67e492de897903444330f9cff5d", "Url": "https://api.github.com/repos/benmccann/tablesaw", "Date": "2018-08-15T12:45:34Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recyclerView) != null) { recyclerView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7628/buggy-version/app.src.main.java.im.tny.segvault.disturbances.ui.fragment.top.AnnouncementFragment.java", "BodyUseAPI": [], "Fixed commit": "54007d3fd14b8bc80c4f255c71ff35d0619cfa18", "Url": "https://api.github.com/repos/underlx/underlx", "Date": "2018-03-29T21:48:17Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recyclerView) != null) { recyclerView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7628/buggy-version/app.src.main.java.im.tny.segvault.disturbances.ui.fragment.top.DisturbanceFragment.java", "BodyUseAPI": [], "Fixed commit": "54007d3fd14b8bc80c4f255c71ff35d0619cfa18", "Url": "https://api.github.com/repos/underlx/underlx", "Date": "2018-03-29T21:48:17Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) != null) return type;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7339/buggy-version/parserClasses.If.java", "BodyUseAPI": [], "Fixed commit": "5a78d25ca7d45257e50368b6f9a487b2026abf90", "Url": "https://api.github.com/repos/romatho/parser", "Date": "2018-04-23T19:55:56Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((entityDef.getDbCreatedTimestamp()) == (this)) || ((entityDef.getDbUpdatedTimestamp()) == (this))) required = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6709/buggy-version/zeidon-joe.src.main.java.com.quinsoft.zeidon.objectdefinition.AttributeDef.java", "BodyUseAPI": [], "Fixed commit": "2cba35493221c3c2c4b1bffa0b328c2ec6899f3f", "Url": "https://api.github.com/repos/zeidon/zeidon-joe", "Date": "2018-02-13T05:24:50Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isOrigin()) || (isDestination())) { for (int i = 0; i < (data.length); i++) { if ((data[i][0]) == 0.0) { return true; } } }else { for (int i = 0; i < (data.length); i++) { for (int j = 0; j < (data.length); j++) { if ((data[i][j]) == 0) { if (i != j) { return true; }else if (!ignoreDiagonals) { return true; } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8419/buggy-version/src.dr.app.beauti.options.Predictor.java", "BodyUseAPI": [], "Fixed commit": "4db633b74d57d4375835ab35fecca9f2a4c68450", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2018-09-29T22:10:51Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((accessorReg) != null) { accessorReg.unregister(); accessorReg = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3015/buggy-version/bundle.src.main.java.com.adobe.acs.commons.workflow.synthetic.impl.SyntheticWorkflowRunnerImpl.java", "BodyUseAPI": [], "Fixed commit": "f575135658a0327ce3072ec20a89627a3b337d34", "Url": "https://api.github.com/repos/Adobe-Consulting-Services/acs-aem-commons", "Date": "2018-02-16T10:27:46Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (type.equals(\"getString\")) { java.lang.String key = (org.genie.SharedPreferencesHandler.KEY_PREFIX) + (args.getString(1)); java.lang.String value = org.ekstep.genieservices.GenieService.getService().getKeyStore().getString(key, \"\"); callbackContext.success(value); }else if (type.equals(\"getStringWithoutPrefix\")) { java.lang.String key = args.getString(1); java.lang.String value = org.ekstep.genieservices.GenieService.getService().getKeyStore().getString(key, \"\"); callbackContext.success(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3763/buggy-version/src.android.org.genie.SharedPreferencesHandler.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "134a9af07ca008d0b9463ced2fce2737eb6f30c8", "Url": "https://api.github.com/repos/project-sunbird/cordova-plugin-genie-sdk", "Date": "2018-09-10T10:36:39Z"},
{"Line": "=>658", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (port > 0) { hosts.add(((host + \":\") + port)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6293/buggy-version/core.src.com.biglybt.core.util.TorrentUtils.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "f73f1756e8e20851023e86b310ca89f2743797e8", "Url": "https://api.github.com/repos/BiglySoftware/BiglyBT", "Date": "2018-10-27T19:12:40Z"},
{"Line": "=>641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.biglybt.core.util.TOTorrent.getAnnounceURL()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (announce_url != null) { java.lang.String host = announce_url.getHost(); if (host != null) { hosts.add(host.toLowerCase(java.util.Locale.US)); if (include_port) { int port = announce_url.getPort(); if (port == (-1)) { port = announce_url.getDefaultPort(); } if (port > 0) { hosts.add(((host + \":\") + port)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6293/buggy-version/core.src.com.biglybt.core.util.TorrentUtils.java", "BodyUseAPI": ["java.net.URL.getHost()", "java.net.URL.getDefaultPort()", "java.net.URL.getPort()"], "Fixed commit": "f73f1756e8e20851023e86b310ca89f2743797e8", "Url": "https://api.github.com/repos/BiglySoftware/BiglyBT", "Date": "2018-10-27T19:12:40Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (handlers.containsKey(messageName)) { for (tetrispvp.board.Mocks.MessageHandler mHandler : handlers.get(messageName)) { mHandler.arrived(messageName, with, null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1235/buggy-version/src.main.java.tetrispvp.board.Mocks.NetworkModuleMock.java", "BodyUseAPI": ["tetrispvp.board.Mocks.MessageHandler.arrived(java.lang.String,java.lang.Object,<nulltype>)", "java.util.Map<java.lang.String, java.util.List<tetrispvp.board.Mocks.MessageHandler>>.get(java.lang.String)"], "Fixed commit": "b2eeb6dc381b147ae99c608fb70236f26d9c4bc9", "Url": "https://api.github.com/repos/Sumel/Tetrispvp", "Date": "2018-01-08T21:33:11Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sf.meta.sha1) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4151/buggy-version/src.dma.cat.sync.entity.SyncFolder.java", "BodyUseAPI": [], "Fixed commit": "290a9af3d55c85703cb272e132599004698f7f92", "Url": "https://api.github.com/repos/dani31415/sync", "Date": "2018-08-07T20:53:48Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opentripplanner.routing.core.State.getOptions()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(req.preTransitKissAndRide)) && (!(req.postTransitKissAndRide))) { return null; }else if ((req.postTransitKissAndRide) && (s0.isEverBoarded())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3776/buggy-version/src.main.java.org.opentripplanner.routing.edgetype.StreetTransitLink.java", "BodyUseAPI": [], "Fixed commit": "b2144ef584dadb51161c6d0c0132af865ff2cbe2", "Url": "https://api.github.com/repos/camsys/OpenTripPlanner", "Date": "2018-07-11T18:21:33Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Global.sIsHighlightMap.get(editor)) { cc.duduhuo.git.conflict.DocumentTools.showConflict(editor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/45/buggy-version/src.main.java.cc.duduhuo.git.conflict.action.HighlightConflictAction.java", "BodyUseAPI": ["cc.duduhuo.git.conflict.DocumentTools.showConflict(com.intellij.openapi.editor.Editor)"], "Fixed commit": "a66e841cc74973d5e59e380c36cbc5e1705c9dfc", "Url": "https://api.github.com/repos/liying2008/git-conflict", "Date": "2018-04-25T10:40:01Z"},
{"Line": "=>3121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((extraText.length()) > 0) && (!(extraText.endsWith(\"\\n\")))) && ((enumPrefix.length()) > 0)) { extraText += comment + \"\\n\"; comment = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6404/buggy-version/src.main.java.org.bytedeco.javacpp.tools.Parser.java", "BodyUseAPI": [], "Fixed commit": "c3b9dc2e9967710f70aa4daceef3cc9d22fa4cdd", "Url": "https://api.github.com/repos/bytedeco/javacpp", "Date": "2018-03-23T09:22:21Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (success) { java.util.Collections.reverse(fullPath); }else { throw new java.lang.Exception(\"WARNING: A path to the goal could not be found.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8805/buggy-version/src.main.java.mars.algorithm.unlimited.AlgorithmUnlimitedBreadthFirstSearch.java", "BodyUseAPI": [], "Fixed commit": "d8ef1edce507fed16fc4f9ebf72303cf877d0387", "Url": "https://api.github.com/repos/RossBlassingame/JPL-CUSeniorProjects", "Date": "2018-03-01T05:07:45Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((executorService) != null) { executorService.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/212/buggy-version/app.src.main.java.space.infinity.app.activities.IssActivity.java", "BodyUseAPI": [], "Fixed commit": "17506677c56dc61baee6620fac321cd051252d78", "Url": "https://api.github.com/repos/icatalin201/Space-Infinity", "Date": "2018-04-22T18:59:28Z"},
{"Line": "=>1581", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tableSucursales.getSelectedRow()) != (-1)) { int numSucursal = java.lang.Integer.parseInt(java.lang.String.valueOf(((javax.swing.table.DefaultTableModel) (tableSucursales.getModel())).getValueAt(tableSucursales.getSelectedRow(), 0))); if (numSucursal != (-1)) { java.lang.String nuevoNombre = javax.swing.JOptionPane.showInputDialog(\"Ingrese la nueva ubicaci\u00f3n de la Sucursal\"); controlador.modificarUbicacionSucursal(this, nuevoNombre, numSucursal); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4706/buggy-version/src.view.Principal.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JTable.getSelectedRow()", "javax.swing.JTable.getModel()", "java.lang.String.valueOf(java.lang.Object)", "javax.swing.table.TableModel.getValueAt(int,int)"], "Fixed commit": "d99d67d9db450fdff7a47677a3cbbc8cfc735038", "Url": "https://api.github.com/repos/carlosfontest/MetroCine-CFRQ", "Date": "2018-03-25T05:59:38Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((route.getStartingCollectionPoint()) != null) && ((route.getStartingCollectionPoint().getCollectionPoint()) != null)) && ((route.getStartingCollectionPoint().getCollectionPoint().getCode()) != null)) && (!(route.getStartingCollectionPoint().getCollectionPoint().getCode().isEmpty()))) { route.getStartingCollectionPoint().setIsStartingCollectionPoint(true); route.getCollectionPoints().add(route.getStartingCollectionPoint()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8707/buggy-version/swm.swm-services.src.main.java.org.egov.swm.domain.service.RouteService.java", "BodyUseAPI": ["route.getStartingCollectionPoint().setIsStartingCollectionPoint(boolean)", "route.getCollectionPoints().add(route.getStartingCollectionPoint())", "org.egov.swm.domain.model.Route.getCollectionPoints()", "org.egov.swm.domain.model.Route.getStartingCollectionPoint()", "org.egov.swm.domain.model.Route.getStartingCollectionPoint()"], "Fixed commit": "aa24067825953339fd97fa927f7a3410b9028bda", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2018-01-06T11:52:10Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (withinHour) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1271/buggy-version/plugins.weather.src.main.java.de.unistuttgart.iaas.amyassist.amy.plugin.weather.WeatherDarkSkyAPI.java", "BodyUseAPI": [], "Fixed commit": "3c184fdef2d7b46ae48251bac54cd8444243a240", "Url": "https://api.github.com/repos/AmyAssist/Amy", "Date": "2018-07-11T07:47:11Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(params.isIncludeDeleted())) { hql += (hlp.whereAnd()) + \" tei.deleted is false \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5780/buggy-version/dhis-2.dhis-services.dhis-service-core.src.main.java.org.hisp.dhis.trackedentity.hibernate.HibernateTrackedEntityInstanceStore.java", "BodyUseAPI": [], "Fixed commit": "8a5b88069d2705afc9009481c57880481b0d3e67", "Url": "https://api.github.com/repos/hispindia/dhis2-Core", "Date": "2018-05-18T12:41:45Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(params.isIncludeDeleted())) { hql += \" and pi.deleted is false\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5780/buggy-version/dhis-2.dhis-services.dhis-service-core.src.main.java.org.hisp.dhis.trackedentity.hibernate.HibernateTrackedEntityInstanceStore.java", "BodyUseAPI": [], "Fixed commit": "8a5b88069d2705afc9009481c57880481b0d3e67", "Url": "https://api.github.com/repos/hispindia/dhis2-Core", "Date": "2018-05-18T12:41:45Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (imageFile != null) { java.awt.Image image = new javax.swing.ImageIcon(javax.imageio.ImageIO.read(imageFile)).getImage(); image.flush(); hiddenDialog.setIconImage(image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8608/buggy-version/src.dorkbox.systemTray.ui.swing.TrayPopup.java", "BodyUseAPI": ["javax.swing.ImageIcon.getImage()", "javax.imageio.ImageIO.read(java.io.File)"], "Fixed commit": "52197ae301150e4b8be1e4f35d36d0f5086f1037", "Url": "https://api.github.com/repos/dorkbox/SystemTray", "Date": "2018-04-08T16:14:27Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (deleted > 0) com.gmail.jan.kucan.decoy.DiscordLogger.debug(com.gmail.jan.kucan.decoy.controller.stu.STUGroupController.class.getCanonicalName(), ((\"Deleted \" + deleted) + \" messages\"), botChannel.getGuild(), null, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7602/buggy-version/src.main.java.com.gmail.jan.kucan.decoy.controller.ChannelAutoDeleting.java", "BodyUseAPI": ["com.gmail.jan.kucan.decoy.DiscordLogger.debug(java.lang.String,java.lang.String,botChannel.getGuild(),<nulltype>,<nulltype>)"], "Fixed commit": "57fb9c048f9ee279d60211ef91247c27df029a5e", "Url": "https://api.github.com/repos/Lamkac/decoy", "Date": "2018-09-23T15:56:52Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["1.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (activity != null) activity.getFragmentManager().popBackStack();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1541/buggy-version/app.src.main.java.com.mikehelland.omgtechnogauntlet.SoundSetFragment.java", "BodyUseAPI": ["android.app.Activity.getFragmentManager()", "activity.getFragmentManager().popBackStack()"], "Fixed commit": "ebdcfcbb86680a4dc82441059e813aff20f3ff9c", "Url": "https://api.github.com/repos/mikehelland/techno-gauntlet", "Date": "2018-01-12T02:46:57Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((roomTrackRepository.getTrackSync(trackId).getNumOfTrackPoints()) > 1) { saveTrackToCloudOnThread(trackId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6997/buggy-version/app.src.main.java.com.awolity.trakr.repository.TrackRepository.java", "BodyUseAPI": ["com.awolity.trakr.repository.TrackRepository.5.saveTrackToCloudOnThread(long)"], "Fixed commit": "0a6281e86df24e67cd80fc9250d3e7b58b5643f5", "Url": "https://api.github.com/repos/vokod/Trakr", "Date": "2018-08-07T18:56:31Z"},
{"Line": "=>7510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(roles)) { scope.setRoles(resultSet.getString(4).trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3427/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.dao.ApiMgtDAO.java", "BodyUseAPI": [], "Fixed commit": "a682db6ee5f12a935860817bf3d6d1d266879ad5", "Url": "https://api.github.com/repos/menakaj/carbon-apimgt", "Date": "2018-06-28T09:39:37Z"},
{"Line": "=>7501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.apimgt.api.model.Scope.getRoles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(roles)) { scope.setRoles(scope.getRoles().concat((\",\" + (resultSet.getString(4)))).trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3427/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.dao.ApiMgtDAO.java", "BodyUseAPI": [], "Fixed commit": "a682db6ee5f12a935860817bf3d6d1d266879ad5", "Url": "https://api.github.com/repos/menakaj/carbon-apimgt", "Date": "2018-06-28T09:39:37Z"},
{"Line": "=>1283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ibm.ws.threadContext.ComponentMetaDataAccessorImpl.getComponentMetaDataAccessor().getComponentMetaData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((cmd instanceof com.ibm.wsspi.webcontainer.metadata.WebComponentMetaData) || (cmd instanceof com.ibm.wsspi.webcontainer.metadata.WebCollaboratorComponentMetaData))) { cmd = com.ibm.ws.threadContext.ComponentMetaDataAccessorImpl.getComponentMetaDataAccessor().getComponentMetaData(com.ibm.wsspi.webcontainer.metadata.WebComponentMetaData.class); if (cmd == null) { cmd = com.ibm.ws.threadContext.ComponentMetaDataAccessorImpl.getComponentMetaDataAccessor().getComponentMetaData(com.ibm.wsspi.webcontainer.metadata.WebCollaboratorComponentMetaData.class); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7885/buggy-version/dev.com.ibm.ws.webcontainer.security.src.com.ibm.ws.webcontainer.security.WebAppSecurityCollaboratorImpl.java", "BodyUseAPI": [], "Fixed commit": "c3634dd1961de17a0a53b2d7e250f958a1f7aa96", "Url": "https://api.github.com/repos/toshiyamamoto/open-liberty", "Date": "2018-02-17T19:21:38Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.wso2.carbon.identity.oauth.config.OAuthServerConfiguration.getInstance().usePersistedAccessTokenAlias()) { try { accessToken = org.wso2.carbon.identity.oauth.config.OAuthServerConfiguration.getInstance().getIdentityOauthTokenIssuer().getAccessTokenHash(accessToken); } catch (org.apache.oltu.oauth2.common.exception.OAuthSystemException e) { if ((log.isDebugEnabled()) && (org.wso2.carbon.identity.core.util.IdentityUtil.isTokenLoggable(IdentityConstants.IdentityTokens.ACCESS_TOKEN))) { log.debug((\"Error while getting access token hash for token: \" + accessToken)); } throw new org.wso2.carbon.identity.oauth2.IdentityOAuth2Exception(\"Error while getting access token hash.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3756/buggy-version/components.org.wso2.carbon.identity.oauth.src.main.java.org.wso2.carbon.identity.oauth2.dao.AccessTokenDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "7b7e7e49feab7ecf618dc312f91571532a35a11d", "Url": "https://api.github.com/repos/GDRDABARERA/identity-inbound-auth-oauth", "Date": "2018-02-05T06:40:29Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hdfs.server.namenode.INodeDirectory.getChildINode(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (next != null) { next.parent = parentDir; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1618/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.server.namenode.INodeDirectory.java", "BodyUseAPI": [], "Fixed commit": "19dabcface8cb70c0b9b31ff1accbfbcd496503f", "Url": "https://api.github.com/repos/augustbonds/hops", "Date": "2018-03-06T10:28:50Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (runParameters == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9392/buggy-version/src.main.java.trading.challenges.ChallengeExecutor.java", "BodyUseAPI": [], "Fixed commit": "c8f87b05328e86d065123d645e8425977426679e", "Url": "https://api.github.com/repos/DevRobert/trading", "Date": "2018-04-01T22:04:30Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.birumerah.deli.model.Userapps.getPassword()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((password != null) && (!(\"\".equals(password)))) { ret = userMapper.updateUser(username, new com.birumerah.deli.encoder.SHA256Encoder().encode(password), name, roleId, marketplaceGroupId, storeId, (isActive ? 1 : 0), userId); }else { ret = userMapper.updateUser(username, null, name, roleId, marketplaceGroupId, storeId, (isActive ? 1 : 0), userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/702/buggy-version/src.main.java.com.birumerah.deli.service.CrudUserService.java", "BodyUseAPI": ["com.birumerah.deli.mapper.UserMapper.updateUser(java.lang.String,new com.birumerah.deli.encoder.SHA256Encoder().encode(password),java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,int,java.lang.Integer)", "com.birumerah.deli.encoder.SHA256Encoder.encode(java.lang.String)"], "Fixed commit": "d7087857ed3152f6ee2e3dd97e1061ffe35c2057", "Url": "https://api.github.com/repos/kangwawan/dni-backend", "Date": "2018-10-05T14:47:05Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listening) log.add(event.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4324/buggy-version/src.net.sourcedestination.sai.reporting.logging.InMemoryLog.java", "BodyUseAPI": [], "Fixed commit": "e28fdfa325e53d16c6367bac80e0d78630e51d0b", "Url": "https://api.github.com/repos/jmorwick/sai", "Date": "2018-06-01T19:16:44Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mEditMode)) { entity.setLastRemindTime((-1)); }else if (!(io.github.slupik.savepass.app.views.addpass.AddPassActivity.getTextFromView(password).equals(entity.getDecryptedPassword(getLocalPassword())))) { entity.setLastRemindTime(java.lang.System.currentTimeMillis()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1248/buggy-version/app.src.main.java.io.github.slupik.savepass.app.views.addpass.AddPassActivity.java", "BodyUseAPI": [], "Fixed commit": "d2a8858eab80cccd5edc7ca014ff9ead963f5a98", "Url": "https://api.github.com/repos/Slupik/Capstone-Project", "Date": "2018-07-29T23:38:11Z"},
{"Line": "=>636", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (FactorProcCall.getDesignator().obj.equals(TabSym.noObj)) { FactorProcCall.struct = null; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7378/buggy-version/src.rs.ac.bg.etf.pp1.SemanticAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "4b6993b8890cf01890180f815f5aad5e8315c1e3", "Url": "https://api.github.com/repos/Bodinm95/FAX-PP-MicroJavaCompiler", "Date": "2018-08-14T11:32:28Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.jobxhub.common.util.CommonUtils.isEmpty(record.getRecordId())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7465/buggy-version/jobx-server.src.main.java.com.jobxhub.server.service.RecordService.java", "BodyUseAPI": [], "Fixed commit": "fd497ca32da2198ec79c77d26604869d1ff0f880", "Url": "https://api.github.com/repos/dspp129/JobX-99", "Date": "2018-05-09T08:19:28Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((strengthNum < 1) || (strengthNum > 10)) { java.lang.System.out.println(\"Invalid Input Try again\"); }else if (strengthNum < 3) { java.lang.System.out.println(\"You are too weak\"); }else if ((strengthNum >= 3) && (strengthNum < 5)) { java.lang.System.out.println(\"Still weak but getting stronger\"); }else if (strengthNum == 5) { java.lang.System.out.println(\"You have an average strength\"); }else if ((strengthNum > 5) && (strengthNum <= 7)) { java.lang.System.out.println(\"You are strong\"); }else if ((strengthNum >= 8) && (strengthNum < 10)) { java.lang.System.out.println(\"You are very strong\"); }else { java.lang.System.out.println(\"WOW You are Too STRONG\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9820/buggy-version/src.javaproject.Main.java", "BodyUseAPI": [], "Fixed commit": "42a4ca2fcf3bd978c264407ad76bbede46417028", "Url": "https://api.github.com/repos/Nacen/SimpleJavaProgram", "Date": "2018-08-11T11:44:31Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.skilldistillery.travelapp.repositories.UserRepository.queryForUserWithFollowers(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (personToUnFollow == null) { personToUnFollow = userRepo.findById(fid).get(); if (personToUnFollow == null) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1705/buggy-version/TravelAppREST.src.main.java.com.skilldistillery.travelapp.services.UserServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "7c0c43565ea658b3b98fbc7151438e16c9f84546", "Url": "https://api.github.com/repos/IsaacSunoo/TravelApp", "Date": "2018-10-13T20:28:43Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetClustersPerNode < 0) { targetClustersPerNode = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9377/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.ODefaultClusterOwnershipAssignmentStrategy.java", "BodyUseAPI": [], "Fixed commit": "e97b977a42e3e21959d9e2e4febcba8e7d77dadc", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2018-06-28T13:15:28Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Variables.freePos) == 98) { Variables.freePos = 0; for (int i = 0; i < (Variables.shots.length); i++) { Variables.shots[i] = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5992/buggy-version/src.engine.Movement.java", "BodyUseAPI": [], "Fixed commit": "7933f49b5bdee86df0314e6c0d2b29028eaf62c9", "Url": "https://api.github.com/repos/AceOfShade/Gunrunner", "Date": "2018-10-15T10:18:14Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.nus.trailblazelearn.model.User.getInstance().getData().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (map == null) { com.google.firebase.firestore.FirebaseFirestore.getInstance().collection(ApplicationConstants.learningTrailCollection).document(trailID).delete().addOnFailureListener(new com.google.android.gms.tasks.OnFailureListener() { @java.lang.Override public void onFailure(@android.support.annotation.NonNull java.lang.Exception e) { android.util.Log.e(edu.nus.trailblazelearn.utility.DbUtil.TAG, \"Error deleting learning trail\", e); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9183/buggy-version/app.src.main.java.edu.nus.trailblazelearn.utility.DbUtil.java", "BodyUseAPI": [], "Fixed commit": "b8dc72920b9fcb532d5c84677dcb7fb049afd22d", "Url": "https://api.github.com/repos/codeyogi911/TrailBlazeLearn", "Date": "2018-03-24T03:34:02Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.nus.trailblazelearn.model.User.getInstance().getData().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (null != map) { map.remove(trailID); if ((map.size()) > 0) { map1.put(\"enrolledTrails\", map); }else { map1.remove(\"enrolledTrails\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9183/buggy-version/app.src.main.java.edu.nus.trailblazelearn.utility.DbUtil.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.size()", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)", "java.util.Map<java.lang.String, java.lang.Object>.remove(java.lang.String)"], "Fixed commit": "b8dc72920b9fcb532d5c84677dcb7fb049afd22d", "Url": "https://api.github.com/repos/codeyogi911/TrailBlazeLearn", "Date": "2018-03-24T03:34:02Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (letter >= (chars.length)) { return sb.toString(); }else if (((letter < (chars.length)) && (j == (columns - 1))) && (i == (rows - 1))) { letter++; }else { i = 0; j = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4527/buggy-version/src.encrypt.BookEncryptor.java", "BodyUseAPI": [], "Fixed commit": "96636e0ccb5c54cc61dbb9b3818aafe12f08455e", "Url": "https://api.github.com/repos/toshytwx/Book-cipher", "Date": "2018-04-19T20:08:28Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ownedFields[i]) instanceof game.view.BuildableField) { if (!(((game.view.BuildableField) (ownedFields[i])).getBuildable())) { tempFields[counter] = ownedFields[i]; tempNames[counter] = ownedFields[i].getName(); counter++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3237/buggy-version/src.game.view.GUIController.java", "BodyUseAPI": ["((game.view.BuildableField) (ownedFields[i])).getBuildable()", "ownedFields[i].getName()"], "Fixed commit": "16d5858035ceeed8b8fc7f88f701d5831bb2b812", "Url": "https://api.github.com/repos/fagnig/CDIO_Final", "Date": "2018-01-14T12:50:37Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ownedFields[i]) instanceof game.view.BuildableField) { if (((game.view.BuildableField) (ownedFields[i])).getBuildable()) { index++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3237/buggy-version/src.game.view.GUIController.java", "BodyUseAPI": ["((game.view.BuildableField) (ownedFields[i])).getBuildable()"], "Fixed commit": "16d5858035ceeed8b8fc7f88f701d5831bb2b812", "Url": "https://api.github.com/repos/fagnig/CDIO_Final", "Date": "2018-01-14T12:50:37Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.LoaderManager.getLoader(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (detailLoader == null) { loaderManager.initLoader(loaderId, bundle, callback); }else { loaderManager.restartLoader(loaderId, bundle, callback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/648/buggy-version/app.src.main.java.com.example.bryan.popularmoviesstagetwo.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "738d6be4f2c47260b720f4cc31e9786445814112", "Url": "https://api.github.com/repos/bryanraynor/PopularMoviesStageTwo", "Date": "2018-08-14T01:50:56Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Long, org.java_websocket.WebSocket>.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (conn.isOpen()) { conn.send(queue.toString()); }else { removeUser(userID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4809/buggy-version/src.main.java.net.explorviz.extension.vr.main.MultiUserMode.java", "BodyUseAPI": ["org.java_websocket.WebSocket.send(queue.toString())"], "Fixed commit": "e09f7241d5e68e67b2ee9e895e123870fea10c57", "Url": "https://api.github.com/repos/ExplorViz/explorviz-backend-extension-vr", "Date": "2018-08-15T14:11:12Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (solved != null) command = command.replace(f.getUnsolvedFormula(), solved);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1890/buggy-version/src.formula.Formula.java", "BodyUseAPI": ["java.lang.String.replace(f.getUnsolvedFormula(),java.lang.String)"], "Fixed commit": "86ff21e9892f88c513682dde0f086719ad7739c9", "Url": "https://api.github.com/repos/openefsa/EFSA-RCL", "Date": "2018-03-06T14:23:15Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.ioTHubConnectionType) == (com.microsoft.azure.sdk.iot.device.transport.amqps.IoTHubConnectionType.USE_TRANSPORTCLIENT)) { if ((this.transportClient.getTransportClientState()) == (TransportClient.TransportClientState.OPENED)) { throw new java.lang.IllegalStateException(((\"setOption \" + (SET_CERTIFICATE_PATH)) + \" only works when the transport is closed\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6044/buggy-version/device.iot-device-client.src.main.java.com.microsoft.azure.sdk.iot.device.DeviceClient.java", "BodyUseAPI": [], "Fixed commit": "3cacc197d1c0139d12eabb5c54bab7fd22ee151d", "Url": "https://api.github.com/repos/Azure/azure-iot-sdk-java", "Date": "2018-09-25T21:41:37Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((str.toString().length()) < 1) { throw new java.io.IOException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1556/buggy-version/src.main.java.com.xilixir.fortniteapi.v2.FortniteAPI.java", "BodyUseAPI": [], "Fixed commit": "69ee7b6834eddb14b11b62b5c4264dc0aa96937b", "Url": "https://api.github.com/repos/nwjefferies/FortniteAPI", "Date": "2018-03-09T00:51:32Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (rider != null) { mMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(location.latitude, location.longitude)).flat(true).title(rider.getName()).snippet((\"Phone:\" + (rider.getPhone()))).icon(com.google.android.gms.maps.model.BitmapDescriptorFactory.fromResource(R.drawable.car))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1550/buggy-version/app.src.main.java.com.example.laptop.rideuser.Home.java", "BodyUseAPI": ["Model.Rider.getPhone()", "com.google.android.gms.maps.GoogleMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(location.latitude, location.longitude)).flat(true).title(rider.getName()).snippet((\"Phone:\" + (rider.getPhone()))).icon(com.google.android.gms.maps.model.BitmapDescriptorFactory.fromResource(R.drawable.car)))", "new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(location.latitude, location.longitude)).flat(true).title(rider.getName()).snippet((\"Phone:\" + (rider.getPhone()))).icon(com.google.android.gms.maps.model.BitmapDescriptorFactory.fromResource(R.drawable.car))", "new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(location.latitude, location.longitude)).flat(true).title(rider.getName())", "new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(location.latitude, location.longitude)).flat(true).title(rider.getName()).snippet((\"Phone:\" + (rider.getPhone())))", "Model.Rider.getName()"], "Fixed commit": "043c222a657a9bb0340096815a059cb57f2a9d39", "Url": "https://api.github.com/repos/Aasis007/RideUser", "Date": "2018-02-22T07:58:39Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ref.WeakReference<com.keytec.xichengrenda.module.login.LoginActivity>.get()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (activity == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1318/buggy-version/app.src.main.java.com.keytec.xichengrenda.module.login.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "1902882dce5c11a0daa1f383091588934b216a33", "Url": "https://api.github.com/repos/ILoveYouCC/XCRD", "Date": "2018-01-16T06:38:55Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.insee.rmes.persistance.service.sesame.code_list.CodeListUtils.getCodeUri(rubric.getCodeList(),rubric.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (codeUri != null) { fr.insee.rmes.persistance.service.sesame.utils.SesameUtils.addTripleUri(simsUri, predicateUri, fr.insee.rmes.persistance.service.sesame.utils.SesameUtils.toURI(codeUri), model, graph); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4423/buggy-version/src.main.java.fr.insee.rmes.persistance.service.sesame.operations.documentations.DocumentationsUtils.java", "BodyUseAPI": ["fr.insee.rmes.persistance.service.sesame.utils.SesameUtils.toURI(java.lang.String)", "fr.insee.rmes.persistance.service.sesame.utils.SesameUtils.addTripleUri(org.openrdf.model.URI,org.openrdf.model.URI,fr.insee.rmes.persistance.service.sesame.utils.SesameUtils.toURI(codeUri),org.openrdf.model.Model,org.openrdf.model.Resource)"], "Fixed commit": "4d6ee80e513da4e290824212e76b0bf59d42a8b1", "Url": "https://api.github.com/repos/InseeFr/Bauhaus-Back-Office", "Date": "2018-10-15T09:11:00Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataRow == null) { return new java.lang.Object[this.schemaRow.size()]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/811/buggy-version/fileformat.src.main.java.org.zuinnote.hadoop.office.format.common.converter.ExcelConverterSimpleSpreadSheetCellDAO.java", "BodyUseAPI": [], "Fixed commit": "711a4295d6a5b06e52bf9fdb83f99b6c92f5a0ed", "Url": "https://api.github.com/repos/ZuInnoTe/hadoopoffice", "Date": "2018-02-07T22:42:49Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((word1 == null) || (word2 == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5450/buggy-version/src.WordProcessor.java", "BodyUseAPI": [], "Fixed commit": "2631605d86080e26f42c2696d351721eb6afd38f", "Url": "https://api.github.com/repos/jstamn/qwertyuiop", "Date": "2018-04-15T21:03:05Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.talust.network.netty.ConnectionManager.get().superNode) { accountStorage.superNodeLogin(); }else { accountStorage.nomorlNodeLogin(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1019/buggy-version/core.src.main.java.org.talust.core.core.SynBlock.java", "BodyUseAPI": [], "Fixed commit": "c63a7553dd6d62bf7fdabe0a417ee7e2732cd51c", "Url": "https://api.github.com/repos/TalustOrg/talust", "Date": "2018-08-28T02:07:55Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((0 == offset) && (len == (str.length))) { bytes = act.xio.undertow.UndertowResponseOutput.toBytes(str); }else { char[] payload = new char[len]; java.lang.System.arraycopy(str, offset, payload, 0, len); bytes = act.xio.undertow.UndertowResponseOutput.toBytes(payload); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3743/buggy-version/src.main.java.act.xio.undertow.UndertowResponseOutput.java", "BodyUseAPI": ["java.lang.System.arraycopy(char[],int,char[],int,int)", "act.xio.undertow.UndertowResponseOutput.toBytes(char[])"], "Fixed commit": "ed0182479daaad0fef7b595cca12e034818a5696", "Url": "https://api.github.com/repos/actframework/actframework", "Date": "2018-06-30T12:24:08Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m.getValue().equals(value)) { last = m.getPrev(); (length)--; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4714/buggy-version/08LinkedLists.MyLinkedList.java", "BodyUseAPI": ["MyLinkedList.Node.getPrev()"], "Fixed commit": "2b052397f223898a801fe34d7079f66b2ed33c4e", "Url": "https://api.github.com/repos/AntonDanylenko/MKS22X", "Date": "2018-04-11T03:02:04Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m.getValue().equals(value)) { first = m.getNext(); (length)--; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4714/buggy-version/08LinkedLists.MyLinkedList.java", "BodyUseAPI": ["MyLinkedList.Node.getNext()"], "Fixed commit": "2b052397f223898a801fe34d7079f66b2ed33c4e", "Url": "https://api.github.com/repos/AntonDanylenko/MKS22X", "Date": "2018-04-11T03:02:04Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((techView) != null) { android.widget.FrameLayout.LayoutParams params = new android.widget.FrameLayout.LayoutParams(width, (height - 200)); params.setMargins(0, 0, 0, 0); techView.setLayoutParams(params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3697/buggy-version/src.android.au.com.dcfm.JTMWebViewer.java", "BodyUseAPI": [], "Fixed commit": "fb5bb406c31d04b2a04493933626c9c98b376a98", "Url": "https://api.github.com/repos/aligorkem/jtm-webviewer", "Date": "2018-02-12T05:35:37Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((expression != null) && (!(expression.isEmpty()))) { org.intermine.xml.full.Item item = createItem(\"AtlasExpression\"); item.setAttribute(\"type\", org.intermine.bio.dataconversion.AtlasExpressConverter.EXPRESSION_TYPE); item.setAttribute(\"condition\", tissue); item.setAttribute(\"expression\", expression); item.setReference(\"gene\", geneId); store(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/964/buggy-version/bio.sources.human.atlas-express.main.src.org.intermine.bio.dataconversion.AtlasExpressConverter.java", "BodyUseAPI": ["org.intermine.xml.full.Item.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "bda1c222792c0462e3f6bc7af09e6b1fbb2be0b0", "Url": "https://api.github.com/repos/sergiocontrino/intermine", "Date": "2018-04-06T14:48:54Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLoggedIn()) sendToSecondActivity(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2478/buggy-version/Team_46.Newsly.app.src.main.java.com.example.vatsal.newsly.SignInActivity.java", "BodyUseAPI": [], "Fixed commit": "e7e22d1fe36a91c077834eb6340e3202ef5b7b0e", "Url": "https://api.github.com/repos/aroraharsh010/newsly", "Date": "2018-07-09T14:34:38Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Optional.ofNullable(endAt).isPresent()) { weeklyTrigger.setEndTime(endAt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8082/buggy-version/src.main.java.io.smartspaces.scheduling.quartz.orientdb.internal.trigger.schedule.builder.WeeklySchedulerBuilder.java", "BodyUseAPI": ["io.smartspaces.scheduling.quartz.orientdb.internal.trigger.schedule.impl.WeeklyTriggerImpl.setEndTime(java.util.Date)"], "Fixed commit": "1e1bfa05408e95bbdf47aaabb6f2b80590dde507", "Url": "https://api.github.com/repos/OSergey/quartz-orientdb", "Date": "2018-07-10T14:36:35Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Optional.ofNullable(trigger).isPresent()) { weeklyTrigger.setScheduleTrigger(trigger); weeklyTrigger.setKey(trigger.getKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8082/buggy-version/src.main.java.io.smartspaces.scheduling.quartz.orientdb.internal.trigger.schedule.builder.WeeklySchedulerBuilder.java", "BodyUseAPI": ["io.smartspaces.scheduling.quartz.orientdb.internal.trigger.schedule.impl.WeeklyTriggerImpl.setKey(trigger.getKey())", "org.quartz.spi.OperableTrigger.getKey()", "io.smartspaces.scheduling.quartz.orientdb.internal.trigger.schedule.impl.WeeklyTriggerImpl.setScheduleTrigger(org.quartz.spi.OperableTrigger)"], "Fixed commit": "1e1bfa05408e95bbdf47aaabb6f2b80590dde507", "Url": "https://api.github.com/repos/OSergey/quartz-orientdb", "Date": "2018-07-10T14:36:35Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getBoolean(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!success) { failReason = resultJSON.getJSONObject(\"error\").getString(\"detail\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/687/buggy-version/app.src.main.java.group9.tcss450.uw.edu.chatappgroup9.RegistrationActivity.java", "BodyUseAPI": [], "Fixed commit": "8e746eee07b797c2f7674d02f9fadb0728df2343", "Url": "https://api.github.com/repos/tcss450-group9/mobile-app-project", "Date": "2018-05-01T04:00:31Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trackingId.size()) == 0) return new java.util.ArrayList<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3596/buggy-version/Android.ItHappenedAndroid.app.src.main.java.ru.lod_misis.ithappened.Infrastructure.TrackingRepository.java", "BodyUseAPI": [], "Fixed commit": "04dd0fc2320cafd7c42071deac373024e95f2bb9", "Url": "https://api.github.com/repos/LeagueOfDevelopers/ItHappened", "Date": "2018-07-03T12:50:02Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { com.jayaa.example.retrofitmvpdemo.utils.SharedPreferenceSingleton.getInstance().init(getActivity()); getActivity().setTitle(com.jayaa.example.retrofitmvpdemo.utils.SharedPreferenceSingleton.getInstance().getStringPreference(\"title\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/950/buggy-version/app.src.main.java.com.jayaa.example.retrofitmvpdemo.fragment.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "e813f55ac4cfcf84e51ef855bd5a08f91bbd08d0", "Url": "https://api.github.com/repos/JayattamaPrusty/RetrofitMvpDemo", "Date": "2018-10-11T05:35:40Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == null) { date = new java.util.Date(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7990/buggy-version/src.main.java.de.kreth.clubhelperbackend.controller.AttendanceController.java", "BodyUseAPI": [], "Fixed commit": "261f92154a8febb15ed4306b8955f19d2e254f9b", "Url": "https://api.github.com/repos/markuskreth/ClubhelperRestServer", "Date": "2018-01-02T02:26:42Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((java.lang.Integer.valueOf(MIN[2])) > (java.lang.Integer.valueOf(MAX[2]))) { z = io.netty.util.internal.ThreadLocalRandom.current().nextInt(java.lang.Integer.valueOf(MAX[2]), java.lang.Integer.valueOf(MIN[2])); }else { z = io.netty.util.internal.ThreadLocalRandom.current().nextInt(java.lang.Integer.valueOf(MIN[2]), java.lang.Integer.valueOf(MAX[2])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3978/buggy-version/src.come.cocopixelmc.FastSpawn.team.Teams.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)", "io.netty.util.internal.ThreadLocalRandom.current().nextInt(java.lang.Integer,java.lang.Integer)", "java.lang.Integer.valueOf(java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)", "io.netty.util.internal.ThreadLocalRandom.current().nextInt(java.lang.Integer,java.lang.Integer)"], "Fixed commit": "c52b9797642d04857fb731f6ab18b8ce5babe5b5", "Url": "https://api.github.com/repos/cocomine/Fast-Spawn", "Date": "2018-08-28T14:13:37Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((java.lang.Integer.valueOf(MIN[0])) > (java.lang.Integer.valueOf(MAX[0]))) { x = io.netty.util.internal.ThreadLocalRandom.current().nextInt(java.lang.Integer.valueOf(MAX[0]), java.lang.Integer.valueOf(MIN[0])); }else { x = io.netty.util.internal.ThreadLocalRandom.current().nextInt(java.lang.Integer.valueOf(MIN[0]), java.lang.Integer.valueOf(MAX[0])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3978/buggy-version/src.come.cocopixelmc.FastSpawn.team.Teams.java", "BodyUseAPI": ["io.netty.util.internal.ThreadLocalRandom.current().nextInt(java.lang.Integer,java.lang.Integer)", "io.netty.util.internal.ThreadLocalRandom.current().nextInt(java.lang.Integer,java.lang.Integer)", "java.lang.Integer.valueOf(java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "c52b9797642d04857fb731f6ab18b8ce5babe5b5", "Url": "https://api.github.com/repos/cocomine/Fast-Spawn", "Date": "2018-08-28T14:13:37Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numWords >= 2) { directObject = arr[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2030/buggy-version/src.com.company.Main.java", "BodyUseAPI": [], "Fixed commit": "ed931753d49bf369432eb7832696477577d2953c", "Url": "https://api.github.com/repos/robertson-sean/AdventureGalley-1", "Date": "2018-03-29T15:38:07Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (backupSave.exists()) { java.nio.file.Files.delete(backupSave.toPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8741/buggy-version/src.main.java.lmr.randomizer.Main.java", "BodyUseAPI": ["java.io.File.toPath()", "java.nio.file.Files.delete(java.nio.file.Path)"], "Fixed commit": "5179d6cfb72d92815f3867587edf1541e1b5077a", "Url": "https://api.github.com/repos/thezerothcat/LaMulanaRandomizer", "Date": "2018-04-01T02:21:37Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.alaskalinuxuser.justchess.MainActivity.moveOptions.isEmpty()) { staleOrCheckMate(); }else { getNextMove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/429/buggy-version/app.src.main.java.com.alaskalinuxuser.justchess.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8b13e7d0fb54ea54aa736c860a7f9a09d416b5c4", "Url": "https://api.github.com/repos/alaskalinuxuser/app_JustChess", "Date": "2018-04-06T15:31:59Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.alaskalinuxuser.justchess.IntroActivity.pPass)) { com.alaskalinuxuser.justchess.MainActivity.moveOptions = \"\"; if (!(wTurn)) { com.alaskalinuxuser.justchess.MainActivity.moveOptions = com.alaskalinuxuser.justchess.TheEngine.terminal(\"suggestMove,black\"); }else { com.alaskalinuxuser.justchess.MainActivity.moveOptions = com.alaskalinuxuser.justchess.TheEngine.terminal(\"suggestMove,white\"); } if (com.alaskalinuxuser.justchess.MainActivity.moveOptions.isEmpty()) { staleOrCheckMate(); }else { getNextMove(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/429/buggy-version/app.src.main.java.com.alaskalinuxuser.justchess.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8b13e7d0fb54ea54aa736c860a7f9a09d416b5c4", "Url": "https://api.github.com/repos/alaskalinuxuser/app_JustChess", "Date": "2018-04-06T15:31:59Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (java.util.Arrays.asList(separated).contains(myMove)) { java.lang.String query = com.alaskalinuxuser.justchess.TheEngine.terminal((\"myMove,\" + myMove)); com.alaskalinuxuser.justchess.TheUserInterface.drawBoardPieces(); wTurn = !(wTurn); if (!(com.alaskalinuxuser.justchess.IntroActivity.pPass)) { com.alaskalinuxuser.justchess.MainActivity.moveOptions = \"\"; if (!(wTurn)) { com.alaskalinuxuser.justchess.MainActivity.moveOptions = com.alaskalinuxuser.justchess.TheEngine.terminal(\"suggestMove,black\"); }else { com.alaskalinuxuser.justchess.MainActivity.moveOptions = com.alaskalinuxuser.justchess.TheEngine.terminal(\"suggestMove,white\"); } if (com.alaskalinuxuser.justchess.MainActivity.moveOptions.isEmpty()) { staleOrCheckMate(); }else { getNextMove(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/429/buggy-version/app.src.main.java.com.alaskalinuxuser.justchess.MainActivity.java", "BodyUseAPI": ["com.alaskalinuxuser.justchess.TheEngine.terminal(java.lang.String)"], "Fixed commit": "8b13e7d0fb54ea54aa736c860a7f9a09d416b5c4", "Url": "https://api.github.com/repos/alaskalinuxuser/app_JustChess", "Date": "2018-04-06T15:31:59Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Objects.isNull(SRV_RECORD)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6796/buggy-version/src.main.java.tech.greenfield.aws.route53.Metadata.java", "BodyUseAPI": [], "Fixed commit": "723e5fc73d4b36664a4cdc2771391513d15bbc6b", "Url": "https://api.github.com/repos/GreenfieldTech/lambda-route53-updates", "Date": "2018-03-08T08:52:44Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Objects.isNull(DNSRR_RECORD)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6796/buggy-version/src.main.java.tech.greenfield.aws.route53.Metadata.java", "BodyUseAPI": [], "Fixed commit": "723e5fc73d4b36664a4cdc2771391513d15bbc6b", "Url": "https://api.github.com/repos/GreenfieldTech/lambda-route53-updates", "Date": "2018-03-08T08:52:44Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event instanceof com.ibm.ws.logging.data.GenericData) { return com.ibm.ws.logging.collector.CollectorJsonUtils1_1.jsonifyGCEvent((-1), wlpUserDir, serverName, serverHostName, CollectorConstants.GC_EVENT_TYPE, event, tags); }else { return com.ibm.ws.logging.collector.CollectorJsonUtils1_1.jsonifyGCEvent(serverHostName, wlpUserDir, serverName, ((com.ibm.ws.health.center.data.HCGCData) (event)), tags); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1231/buggy-version/dev.com.ibm.ws.logging.src.com.ibm.ws.logging.collector.CollectorJsonUtils1_1.java", "BodyUseAPI": ["com.ibm.ws.logging.collector.CollectorJsonUtils1_1.jsonifyGCEvent(int,java.lang.String,java.lang.String,java.lang.String,CollectorConstants.GC_EVENT_TYPE,java.lang.Object,java.lang.String[])"], "Fixed commit": "854af7b0181ea5e99f6d45f6c1f4441b4f02b028", "Url": "https://api.github.com/repos/Yushan-Lin/open-liberty", "Date": "2018-01-23T15:24:44Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event instanceof com.ibm.ws.logging.data.GenericData) { return com.ibm.ws.logging.collector.CollectorJsonUtils.jsonifyGCEvent((-1), wlpUserDir, serverName, serverHostName, CollectorConstants.GC_EVENT_TYPE, event, tags); }else { return com.ibm.ws.logging.collector.CollectorJsonUtils.jsonifyGCEvent(serverHostName, wlpUserDir, serverName, ((com.ibm.ws.health.center.data.HCGCData) (event)), tags); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1231/buggy-version/dev.com.ibm.ws.logging.src.com.ibm.ws.logging.collector.CollectorJsonUtils.java", "BodyUseAPI": ["com.ibm.ws.logging.collector.CollectorJsonUtils.jsonifyGCEvent(int,java.lang.String,java.lang.String,java.lang.String,CollectorConstants.GC_EVENT_TYPE,java.lang.Object,java.lang.String[])"], "Fixed commit": "854af7b0181ea5e99f6d45f6c1f4441b4f02b028", "Url": "https://api.github.com/repos/Yushan-Lin/open-liberty", "Date": "2018-01-23T15:24:44Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (repl != obj) { out.removeRef(obj); out.writeObject(repl); out.replaceRef(repl, obj); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6915/buggy-version/hessian-lite.src.main.java.com.alibaba.com.caucho.hessian.io.JavaSerializer.java", "BodyUseAPI": ["com.alibaba.com.caucho.hessian.io.AbstractHessianOutput.writeObject(java.lang.Object)", "com.alibaba.com.caucho.hessian.io.AbstractHessianOutput.removeRef(java.lang.Object)", "com.alibaba.com.caucho.hessian.io.AbstractHessianOutput.replaceRef(java.lang.Object,java.lang.Object)"], "Fixed commit": "b37257703817ab5cfb6ac53cd33b3e5804e031d1", "Url": "https://api.github.com/repos/nobodyiam/incubator-dubbo", "Date": "2018-07-05T04:07:33Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((currentState) == null) || ((currentState) != (gsm.getCurrentState()))) { addMouseListener(gsm.getCurrentState()); addMouseMotionListener(gsm.getCurrentState()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1832/buggy-version/src.main.Game.java", "BodyUseAPI": ["main.Game.addMouseListener(gsm.getCurrentState())", "manager.GameStateManager.getCurrentState()", "manager.GameStateManager.getCurrentState()", "main.Game.addMouseMotionListener(gsm.getCurrentState())"], "Fixed commit": "c55a9922c5fab0a4156b61c30391d617c1bbb7e7", "Url": "https://api.github.com/repos/AdamElaoud/Project_Sync", "Date": "2018-02-17T10:23:08Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.nutz.lang.Strings.isBlank(nbStarterMark))) { dstZip.putNextEntry(new java.util.zip.ZipEntry(\"WEB-INF/classes/META-INF/nutz/org.nutz.boot.starter.NbStarter\")); dstZip.write(nbStarterMark.getBytes(Encoding.CHARSET_UTF8)); dstZip.closeEntry(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8520/buggy-version/src.main.java.org.nutz.boot.maven.WarMojo.java", "BodyUseAPI": ["java.util.zip.ZipOutputStream.write(byte[])", "java.lang.String.getBytes(Encoding.CHARSET_UTF8)"], "Fixed commit": "d39f039aa34b1df4575df010c0dfe853361c9ecd", "Url": "https://api.github.com/repos/nutzam/nutzboot-maven-plugin", "Date": "2018-05-29T03:10:02Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tc.getPermissionOverride(guild.getGuild().getSelfMember())) == null) tc.createPermissionOverride(guild.getGuild().getSelfMember()).setAllow(Permission.MESSAGE_WRITE, Permission.MESSAGE_READ).queue(); else tc.getPermissionOverride(guild.getGuild().getSelfMember()).getManager().grant(Permission.MESSAGE_WRITE, Permission.MESSAGE_READ).queue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8244/buggy-version/src.main.java.stream.flarebot.flarebot.commands.moderation.LockChatCommand.java", "BodyUseAPI": ["tc.createPermissionOverride(guild.getGuild().getSelfMember()).setAllow(Permission.MESSAGE_WRITE,Permission.MESSAGE_READ)", "tc.getPermissionOverride(guild.getGuild().getSelfMember()).getManager().grant(Permission.MESSAGE_WRITE, Permission.MESSAGE_READ).queue()", "guild.getGuild().getSelfMember()", "tc.createPermissionOverride(guild.getGuild().getSelfMember()).setAllow(Permission.MESSAGE_WRITE, Permission.MESSAGE_READ).queue()", "net.dv8tion.jda.core.entities.TextChannel.createPermissionOverride(guild.getGuild().getSelfMember())", "guild.getGuild().getSelfMember()", "tc.getPermissionOverride(guild.getGuild().getSelfMember()).getManager().grant(Permission.MESSAGE_WRITE,Permission.MESSAGE_READ)", "stream.flarebot.flarebot.objects.GuildWrapper.getGuild()", "net.dv8tion.jda.core.entities.TextChannel.getPermissionOverride(guild.getGuild().getSelfMember())", "stream.flarebot.flarebot.objects.GuildWrapper.getGuild()", "tc.getPermissionOverride(guild.getGuild().getSelfMember()).getManager()"], "Fixed commit": "6af8f767d761870263c8e5dfcc236a6264751bf8", "Url": "https://api.github.com/repos/FlareBot/FlareBot", "Date": "2018-01-02T15:08:17Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.dv8tion.jda.core.entities.TextChannel.getPermissionOverride(guild.getGuild().getPublicRole())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (everyoneOvr == null) tc.createPermissionOverride(guild.getGuild().getPublicRole()).complete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8244/buggy-version/src.main.java.stream.flarebot.flarebot.commands.moderation.LockChatCommand.java", "BodyUseAPI": [], "Fixed commit": "6af8f767d761870263c8e5dfcc236a6264751bf8", "Url": "https://api.github.com/repos/FlareBot/FlareBot", "Date": "2018-01-02T15:08:17Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (origReturnValue.contains(\" is installed. https://projectlombok.org\")) return origReturnValue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5650/buggy-version/src.eclipseAgent.lombok.eclipse.agent.PatchFixesShadowLoaded.java", "BodyUseAPI": [], "Fixed commit": "111d0a5f16667824d0a73b733624e6deffe19a0e", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2018-07-25T19:10:20Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((script) != null) { pt.lsts.neptus.util.FileUtil.saveToFile(script.getAbsolutePath(), editor.getText()); pt.lsts.neptus.plugins.dolphin.NeptusPlatform.getInstance().run(script); }else saveAction.actionPerformed(e);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8454/buggy-version/src.pt.lsts.neptus.plugins.dolphin.DolphinConsolePanel.java", "BodyUseAPI": [], "Fixed commit": "1fbc14a0fcf5d02f088242e9d1f12389185ac8ae", "Url": "https://api.github.com/repos/DolphinDSL/dolphin-neptus-plugin", "Date": "2018-09-03T17:59:07Z"},
{"Line": "=>693", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["world.getEntitiesWithinAABB(net.minecraft.entity.EntityLivingBase.class, this.getEntityBoundingBox().grow(10, 10, 10), this::canEatEntity).stream().findAny()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (optional.isPresent()) { this.setAttackTarget(optional.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7917/buggy-version/src.main.java.org.jurassicraft.server.entity.DinosaurEntity.java", "BodyUseAPI": ["org.jurassicraft.server.entity.DinosaurEntity.setAttackTarget(optional.get())", "java.util.Optional<net.minecraft.entity.EntityLivingBase>.get()"], "Fixed commit": "83ddbf94083a04d114e498cafd7675f171218036", "Url": "https://api.github.com/repos/JurassiCraftTeam/JurassiCraft2", "Date": "2018-05-18T22:44:12Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((uc.getRound()) == 500) { for (int i = 1; i < (NODE_MAX_SPACE); i += 1) { java.lang.System.out.println(uc.read(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7487/buggy-version/firstplayer.UnitPlayer.java", "BodyUseAPI": ["firstplayer.UnitController.read(int)", "java.io.PrintStream.println(uc.read(i))"], "Fixed commit": "5b0e8b329a899d1c0e1deea4453d58d70a3a5fdf", "Url": "https://api.github.com/repos/martindansc/AIC2018", "Date": "2018-07-10T08:35:12Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((shoppingLists.size()) > 0) shoppingLists.remove(((shoppingLists.size()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5714/buggy-version/14Cup.app.src.main.java.com.moufee.a14cup.ui.recipes.RecipeInfoFragment.java", "BodyUseAPI": ["java.util.List<com.moufee.a14cup.lists.ShoppingList>.remove(((shoppingLists.size()) - 1))", "java.util.List<com.moufee.a14cup.lists.ShoppingList>.size()"], "Fixed commit": "a221081256953a86741fccb8c3d1f51484b25ad5", "Url": "https://api.github.com/repos/aberendsen18/408_Team16_Project", "Date": "2018-03-25T22:15:41Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.laher.learnfractions.util.Storage.load(android.content.Context,Storage.USER_TYPE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (AppConstants.STUDENT.equals(userType)) { btnBack.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { android.content.Intent intent = new android.content.Intent(mContext, com.example.laher.learnfractions.student_activities.StudentMainActivity.class); intent.setFlags(((android.content.Intent.FLAG_ACTIVITY_NEW_TASK) | (android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK))); startActivity(intent); } }); }else if (AppConstants.USER.equals(userType)) { btnBack.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { android.content.Intent intent = new android.content.Intent(mContext, com.example.laher.learnfractions.user_activities.UserMainActivity.class); intent.setFlags(((android.content.Intent.FLAG_ACTIVITY_NEW_TASK) | (android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK))); startActivity(intent); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2543/buggy-version/app.src.main.java.com.example.laher.learnfractions.ChapterExamListActivity.java", "BodyUseAPI": ["AppConstants.USER.equals(java.lang.String)"], "Fixed commit": "cf345a08a5022d798e12838b7dcafb26bd93d15d", "Url": "https://api.github.com/repos/miguellaher/learnfractions", "Date": "2018-09-20T03:44:48Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nextTableRowData.getSize().equals((\"\" + (Utilities.UiConstants.GENERIC_SIZE)))) nextTableRowData.setSize(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4013/buggy-version/src.main.userinterface.CheckoutHelperView.java", "BodyUseAPI": ["userinterface.InventoryTableModel.setSize(java.lang.String)"], "Fixed commit": "d4f6c9879a94751276867616835b71f7b7e1a0ea", "Url": "https://api.github.com/repos/jvanhouter/t3-pcc", "Date": "2018-05-08T01:10:20Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((query.getQStr()) != null) && (!(query.getQStr().isEmpty()))) { this.searchQueryInput.setValue(query); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2620/buggy-version/app.src.main.java.com.jml.melichallenge.view.mainsearch.SearchViewModel.java", "BodyUseAPI": ["android.arch.lifecycle.MutableLiveData<com.jml.melichallenge.model.SearchQuery>.setValue(com.jml.melichallenge.model.SearchQuery)"], "Fixed commit": "dbfdc77c9e0e79f31bf91c12187a34b562b4c587", "Url": "https://api.github.com/repos/JMLeiva/MeLiChallenge", "Date": "2018-07-04T03:09:06Z"},
{"Line": "=>1892", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (io.realm.internal.Util.isEmptyString(pattern)) { throw new java.lang.IllegalArgumentException(\"Non-empty 'pattern' required\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3271/buggy-version/realm.realm-library.src.main.java.io.realm.Realm.java", "BodyUseAPI": [], "Fixed commit": "9d9eeaeb0ceb71ebce540f2263d37527600cdba1", "Url": "https://api.github.com/repos/realm/realm-java", "Date": "2018-10-13T08:51:55Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((artist.size()) > 0) { return artist.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8518/buggy-version/app.src.main.java.com.jaysaw.zenmusicplayer.network.ArtistMatches.java", "BodyUseAPI": ["java.util.ArrayList<com.jaysaw.zenmusicplayer.network.Artist>.get(int)"], "Fixed commit": "d24e7ac10b51e4c47628abf7a112a2463b5ee218", "Url": "https://api.github.com/repos/Jaysaw/Zen", "Date": "2018-03-01T21:53:22Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((com.hitbd.proj.Settings.HBASE_CONFIG) == null) { java.lang.System.out.println(\"HBASE_CONFIG not set; ignite only\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7242/buggy-version/src.main.java.com.hitbd.proj.logic.AlarmScanner.java", "BodyUseAPI": [], "Fixed commit": "57efe53a35732a7a4f5b6f13155c482ddc5815ec", "Url": "https://api.github.com/repos/bigweiyan/trafficBD", "Date": "2018-09-11T07:10:14Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.teammartens.android.wattfinder.worker.LogWorker.isVERBOSE()) de.teammartens.android.wattfinder.worker.LogWorker.d(de.teammartens.android.wattfinder.fragments.SmartFilterFragment.LOG_TAG, (\"KartenListeSize nach: C\" + (C + 1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8651/buggy-version/app.src.main.java.de.teammartens.android.wattfinder.fragments.SmartFilterFragment.java", "BodyUseAPI": [], "Fixed commit": "e1e4235db7994bf95ff49e2c548d1a71c5220b44", "Url": "https://api.github.com/repos/felixmartens/Wattfinder", "Date": "2018-04-18T21:09:00Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vsQuotes.length()) > 2) vsQuotes = vsQuotes.substring(1, ((vsQuotes.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6211/buggy-version/stats-retriever.src.main.java.ru.titus.stats.service.JsonParser.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "a5f96fad44409f9bd9151127a4ce5b22391fac4f", "Url": "https://api.github.com/repos/AndreyErokhin/titus-bet", "Date": "2018-03-04T16:53:26Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (offset == 1) { bounds.add(0.9999F); }else if ((0.0F < offset) && (offset < 1.0F)) { bounds.add(offset); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/281/buggy-version/src.main.java.org.apache.fop.render.gradient.GradientMaker.java", "BodyUseAPI": ["java.util.List<java.lang.Float>.add(float)"], "Fixed commit": "7bf607528d56b04aaaf6005f069049bbf863f3ea", "Url": "https://api.github.com/repos/lagivan/fop-custom", "Date": "2018-04-16T16:35:30Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { throw new com.rcpooley.effstorage.core.EfficientException(\"Tried to serialize null object\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8384/buggy-version/src.main.java.com.rcpooley.effstorage.core.EfficientStorage.java", "BodyUseAPI": [], "Fixed commit": "198094e13a7051d5daf2499b603fea2d0ac3f095", "Url": "https://api.github.com/repos/rcpooley/EfficientFileStorage", "Date": "2018-10-17T15:07:34Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Array.getLength(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (len == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8384/buggy-version/src.main.java.com.rcpooley.effstorage.core.EfficientStorage.java", "BodyUseAPI": [], "Fixed commit": "198094e13a7051d5daf2499b603fea2d0ac3f095", "Url": "https://api.github.com/repos/rcpooley/EfficientFileStorage", "Date": "2018-10-17T15:07:34Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.DataInputStream.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (len == 0) return arr;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8384/buggy-version/src.main.java.com.rcpooley.effstorage.core.EfficientStorage.java", "BodyUseAPI": [], "Fixed commit": "198094e13a7051d5daf2499b603fea2d0ac3f095", "Url": "https://api.github.com/repos/rcpooley/EfficientFileStorage", "Date": "2018-10-17T15:07:34Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codecool.flatbuddy.repository.MatchRepository.findByUserAAndUserB(java.lang.Integer,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (a != null) { if (matchRepository.existsById(a.getId())) { if ((a.getStatus()) == (MatchStatusEnum.SENTPENDING.getValue())) { throw new com.codecool.flatbuddy.exception.InvalidMatchException(\"You already sent a request to this user\"); } if ((a.getStatus()) == (MatchStatusEnum.ACCEPTED.getValue())) { throw new com.codecool.flatbuddy.exception.InvalidMatchException(\"You already matched with this user\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9854/buggy-version/src.main.java.com.codecool.flatbuddy.service.MatchService.java", "BodyUseAPI": ["com.codecool.flatbuddy.model.Match.getId()", "com.codecool.flatbuddy.repository.MatchRepository.existsById(a.getId())", "com.codecool.flatbuddy.model.Match.getStatus()", "com.codecool.flatbuddy.model.Match.getStatus()"], "Fixed commit": "a848f2553a6f7e77439bd01a1c3bb30bae683c40", "Url": "https://api.github.com/repos/CodecoolMSC2017/flatbuddy-backend", "Date": "2018-07-27T07:20:29Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sv.isXml()) { org.w3c.dom.Node node = sv.getValue(org.w3c.dom.Node.class); return com.intuit.karate.XmlUtils.toString(node, true); }else if (sv.isMapLike()) { org.w3c.dom.Document doc = com.intuit.karate.XmlUtils.fromMap(sv.getAsMap()); return com.intuit.karate.XmlUtils.toString(doc, true); }else { java.lang.String xml = sv.getAsString(); org.w3c.dom.Document doc = com.intuit.karate.XmlUtils.toXmlDoc(xml); return com.intuit.karate.XmlUtils.toString(doc, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3794/buggy-version/karate-core.src.main.java.com.intuit.karate.ScriptBridge.java", "BodyUseAPI": ["com.intuit.karate.ScriptValue.isMapLike()", "com.intuit.karate.ScriptValue.getAsString()", "com.intuit.karate.XmlUtils.fromMap(sv.getAsMap())", "com.intuit.karate.ScriptValue.getValue(java.lang.Class)", "com.intuit.karate.ScriptValue.getAsMap()"], "Fixed commit": "0d53b2cbd3d63e16ba01af9c177f5b86e55af303", "Url": "https://api.github.com/repos/intuit/karate", "Date": "2018-01-31T16:55:02Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sv.isXml()) { return sv.getValue(org.w3c.dom.Node.class); }else if (sv.isMapLike()) { return com.intuit.karate.XmlUtils.fromMap(sv.getAsMap()); }else if (sv.isUnknownType()) { return com.intuit.karate.XmlUtils.toXmlDoc(sv.getValue()); }else if (sv.isStringOrStream()) { com.intuit.karate.ScriptValue temp = com.intuit.karate.Script.evalKarateExpression(sv.getAsString(), context); if ((temp.getType()) != (XML)) { throw new java.lang.RuntimeException((\"cannot convert, not an xml string: \" + sv)); } return temp.getValue(org.w3c.dom.Document.class); }else { throw new java.lang.RuntimeException((\"cannot convert to xml: \" + sv)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3794/buggy-version/karate-core.src.main.java.com.intuit.karate.Script.java", "BodyUseAPI": ["com.intuit.karate.ScriptValue.getValue(java.lang.Class)", "com.intuit.karate.ScriptValue.getAsMap()", "com.intuit.karate.ScriptValue.getValue()", "com.intuit.karate.ScriptValue.isUnknownType()", "com.intuit.karate.XmlUtils.toXmlDoc(sv.getValue())", "com.intuit.karate.ScriptValue.isStringOrStream()", "com.intuit.karate.XmlUtils.fromMap(sv.getAsMap())", "com.intuit.karate.ScriptValue.getAsString()", "com.intuit.karate.ScriptValue.isMapLike()", "com.intuit.karate.Script.evalKarateExpression(sv.getAsString(),com.intuit.karate.ScriptContext)"], "Fixed commit": "0d53b2cbd3d63e16ba01af9c177f5b86e55af303", "Url": "https://api.github.com/repos/intuit/karate", "Date": "2018-01-31T16:55:02Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.CampaignManagerController.getSelectedCampaign(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((selectedCampaign.getCampaignStaffs()) == null) { selectedCampaign.setCampaignStaffs(new java.util.ArrayList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2388/buggy-version/src.controllers.CampaignManagerController.java", "BodyUseAPI": ["entities.Campaign.setCampaignStaffs(java.util.ArrayList)"], "Fixed commit": "9a30aea73c0e46899768460120881e5d48d10cf6", "Url": "https://api.github.com/repos/testcome342/come342ProjectGroup15", "Date": "2018-05-01T23:33:56Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.teamwizardry.wizardry.api.spell.module.IModule.applicableModifiers()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (modifierClasses != null) { for (com.teamwizardry.wizardry.api.spell.module.Module mod : ModuleRegistry.INSTANCE.modules) { com.teamwizardry.wizardry.api.spell.module.IModule mc = mod.getModuleClass(); for (com.teamwizardry.wizardry.api.spell.module.IModuleModifier modifier : modifierClasses) { if (mc.getID().equals(modifier.getID())) { applicableModifiersList.add(((com.teamwizardry.wizardry.api.spell.module.ModuleModifier) (mod))); break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5560/buggy-version/src.main.java.com.teamwizardry.wizardry.api.spell.module.Module.java", "BodyUseAPI": [], "Fixed commit": "df4216e8d0c137a0a7ab51a6468d5d6769fa5ebf", "Url": "https://api.github.com/repos/tcheinen/Wizardry", "Date": "2018-10-19T12:04:21Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(primaryTorpedoStore.isEmpty())) && (!(secondaryTorpedoStore.isEmpty()))) { firingSuccess = primaryTorpedoStore.fire(1); firingSuccess = secondaryTorpedoStore.fire(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1730/buggy-version/src.main.java.hu.bme.mit.spaceship.GT4500.java", "BodyUseAPI": ["hu.bme.mit.spaceship.TorpedoStore.fire(int)", "hu.bme.mit.spaceship.TorpedoStore.fire(int)"], "Fixed commit": "38ab5fa198740ff5247a1ce96835c840e71fa8e6", "Url": "https://api.github.com/repos/ozkrleal/ivt-lab", "Date": "2018-04-12T07:24:37Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (TransactionStatus.NOT_ACTIVE.equals(txn.getStatus())) { txn.begin(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7016/buggy-version/api-core-cms.src.main.java.gov.ca.cwds.data.BaseDaoImpl.java", "BodyUseAPI": ["org.hibernate.Transaction.begin()"], "Fixed commit": "c1f1521edf7c16b152907f60c61ef3ab7520aa04", "Url": "https://api.github.com/repos/ca-cwds/api-core", "Date": "2017-09-27T22:07:17Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message.equals(\"[command(cm)]\")) { java.lang.String formStr = \"<style> form { display: block; margin-top: 0em; \\n\" + (((((((\"padding: 10px 6px 5px 10px;margin:5px auto;}</style>\\n\" + \"submit the form and we will get in touch:\\n\") + \"<form>\\n\") + \" Full Name : <input type=\\\"text\\\" name=\\\"firstname\\\"><br>\\n\") + \" Contact no: <input type=\\\"text\\\" name=\\\"lastname\\\"><br>\\n\") + \" Email ID &nbsp; : <input type=\\\"text\\\" name=\\\"email\\\"><br>\\n\") + \" <input type=\\\"submit\\\" value=\\\"Submit\\\">\\n\") + \"</form>\"); return formStr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2769/buggy-version/assistserver.src.main.java.in.nikunj.assistserver.controller.ChatBotController.java", "BodyUseAPI": [], "Fixed commit": "28f011713c11ffc03409cd905c2fefa6685bf029", "Url": "https://api.github.com/repos/Nikunj-Enterprises/EasyAssist", "Date": "2018-07-25T03:40:33Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (request.equals(\"time\")) { DateServer.response_time(out); }else if (request.equals(\"date\")) { DateServer.response_date(out); }else { java.lang.System.out.println(\"fuck\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6756/buggy-version/DateServer.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "f7785d718d0045563855bf89270fe4972682e1e9", "Url": "https://api.github.com/repos/CoderSherlock/how-to-use-git", "Date": "2018-09-10T05:48:19Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getPrincipal()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentUserDetails.getAuthorities().contains(Role.ROLE_SEQUENCER)) { throw new org.springframework.security.access.AccessDeniedException(\"Sequencer should not be able to interact with IRIDA UI\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7089/buggy-version/src.main.java.ca.corefacility.bioinformatics.irida.ria.config.UserSecurityInterceptor.java", "BodyUseAPI": [], "Fixed commit": "bf0ea2e2913215d0a08d156072a18200f0445bef", "Url": "https://api.github.com/repos/phac-nml/irida", "Date": "2018-06-05T15:18:09Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.glvz.egais.ui.ActIncomeRec.proceedDataMatrix(com.glvz.egais.ui.IncomeRec,barcodeReadEvent.getBarcodeData())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((actionOnScanDataMatrixWrapper.addQty) > 0) { this.lastMark = barcodeReadEvent.getBarcodeData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4047/buggy-version/app.src.main.java.com.glvz.egais.ui.ActIncomeRecContent.java", "BodyUseAPI": [], "Fixed commit": "ab09d68f6501ce2e00220828bf77b26ec2416705", "Url": "https://api.github.com/repos/pavel-vp/GLVZegais", "Date": "2018-10-19T05:48:11Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.team.mamba.atlas.data.model.api.UserConnections>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (record.isNeedsApproval()) { holder.binding.tvUserStat.setText(record.getRequestingUserName()); }else { holder.binding.tvUserStat.setText(record.getConsentingUserName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2809/buggy-version/app.src.main.java.com.team.mamba.atlas.userInterface.dashBoard.info.RecentActivitiesAdapter.java", "BodyUseAPI": ["com.team.mamba.atlas.data.model.api.UserConnections.getRequestingUserName()", "holder.binding.tvUserStat.setText(record.getRequestingUserName())", "holder.binding.tvUserStat.setText(record.getConsentingUserName())", "com.team.mamba.atlas.data.model.api.UserConnections.getConsentingUserName()"], "Fixed commit": "b4fda7ecd8e950aa76d1474dff600ef32a41b02a", "Url": "https://api.github.com/repos/jacqueterrell/atlas", "Date": "2018-08-16T02:40:12Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iDs.isEmpty()) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8339/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.evekit.EveKitLocationsGetter.java", "BodyUseAPI": [], "Fixed commit": "cd7da511f965184d31139c74e104a3b902cc6e4f", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2018-09-18T17:57:50Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openchs.dao.IndividualRepository.findByUuid(encounterRequest.getIndividualUUID())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (individual == null) { throw new java.lang.IllegalArgumentException(java.lang.String.format(\"Individual not found with UUID '%s'\", encounterRequest.getIndividualUUID())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2609/buggy-version/openchs-server-api.src.main.java.org.openchs.web.EncounterController.java", "BodyUseAPI": [], "Fixed commit": "3e0462abc85ab2e462c523d0755699b0803957bf", "Url": "https://api.github.com/repos/OpenCHS/openchs-server", "Date": "2018-09-17T11:26:44Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.openchs.excel.ExcelUtil.NAN.equalsIgnoreCase(org.openchs.excel.ExcelUtil.getFatText(row, cellNum))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2609/buggy-version/openchs-server-api.src.main.java.org.openchs.excel.ExcelUtil.java", "BodyUseAPI": [], "Fixed commit": "3e0462abc85ab2e462c523d0755699b0803957bf", "Url": "https://api.github.com/repos/OpenCHS/openchs-server", "Date": "2018-09-17T11:26:44Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((permissions) != null) { for (database.Permission p : permissions) { vBox.getChildren().add(currentPermissionForm(p)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2039/buggy-version/src.controllers.AddPermisionController.java", "BodyUseAPI": [], "Fixed commit": "ddf1dbc32cd8fd701363366dec495871494af61e", "Url": "https://api.github.com/repos/FlotaTransportowa/Aplikacja", "Date": "2018-01-20T12:34:59Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.Inventory.getHolder()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (holder instanceof org.bukkit.block.DoubleChest) { org.bukkit.block.DoubleChest doubleChest = ((org.bukkit.block.DoubleChest) (holder)); org.bukkit.block.Chest leftChest = ((org.bukkit.block.Chest) (doubleChest.getLeftSide())); org.bukkit.block.Chest rightChest = ((org.bukkit.block.Chest) (doubleChest.getRightSide())); org.bukkit.block.Block leftBlock = leftChest.getBlock(); org.bukkit.block.Block rightBlock = rightChest.getBlock(); me.newyith.fortress.event.Player player = ((me.newyith.fortress.event.Player) (humanEntity)); org.bukkit.World world = leftBlock.getWorld(); me.newyith.fortress.main.FortressesManager.forWorld(world).onPlayerCloseChest(player, leftBlock, rightBlock); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1724/buggy-version/src.main.java.me.newyith.fortress.event.EventListener.java", "BodyUseAPI": [], "Fixed commit": "b6dd9d4eea79a22211e2f299b9f10b03d82defe5", "Url": "https://api.github.com/repos/rockysims/fortressplugin", "Date": "2018-08-25T00:07:51Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.newyith.fortress.main.FortressesManagerForWorld.getRuneByPatternPoint(me.newyith.fortress.util.Point)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((rune == null) && (block2 != null)) { p = new me.newyith.fortress.util.Point(block2); rune = getRuneByPatternPoint(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1724/buggy-version/src.main.java.me.newyith.fortress.main.FortressesManagerForWorld.java", "BodyUseAPI": [], "Fixed commit": "b6dd9d4eea79a22211e2f299b9f10b03d82defe5", "Url": "https://api.github.com/repos/rockysims/fortressplugin", "Date": "2018-08-25T00:07:51Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.toLowerCase().equals(\"david\")) { match.setActivePlayer(new net.hundredtickets.yahtzee.model.Scorecard(this.davidCard)); match.setPassivePlayer(new net.hundredtickets.yahtzee.model.Scorecard(this.melCard)); }else { match.setActivePlayer(new net.hundredtickets.yahtzee.model.Scorecard(this.melCard)); match.setPassivePlayer(new net.hundredtickets.yahtzee.model.Scorecard(this.davidCard)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2494/buggy-version/src.main.java.net.hundredtickets.yahtzee.MatchController.java", "BodyUseAPI": [], "Fixed commit": "7c21d7b5caa52a46941ae7561d3b16d4207797d8", "Url": "https://api.github.com/repos/dschuld/yahtzee", "Date": "2018-01-27T10:18:52Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ans == 1) { java.lang.System.out.println(\"the ACE is even more delayed, if that\\'s possible, and you get to school an hour late.\\n\"); a.average -= 1; a.mental -= 1; a.charisma -= 1; }else if (ans == 2) { out = \"the local 1 gets you there just on time. do you go to your locker to put away your coat and get your books?\\n\"; out += \"\\t1: no, late is bad. you\\'ll just take notes on looseleaf and carry your coat\\n\"; out += \"\\t2: yes, you need your books. you sprint there\\n\"; out += \"\\t3: yes, the coat is heavy and you are being slowed down by it.\\n\"; java.lang.System.out.println(out); try { ans = java.lang.Integer.parseInt(Other.in.readLine()); } catch (java.io.IOException e) { } if (ans == 1) { java.lang.System.out.println(\"oof. you end up having a notebook quiz but you don't have your notes. bad quiz grade.\"); a.average -= 2; a.mental -= 1; a.physical += 1; }else if (ans == 2) { java.lang.System.out.println(\"WHOOOOOO. everything is swell even if your hair is a little matted with sweat.\\n\"); a.physical += 1; a.mental += 1; a.charisma += 1; }else { java.lang.System.out.println(\"fair point. but you end up a little late.\"); a.average -= 1; a.physical -= 1; a.mental += 1; } }else { java.lang.System.out.println(\"you\\'re late, but not as late as you could\\'ve been so you decide to just go on with the day.\\n\"); a.charisma += 1; a.physical += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2308/buggy-version/v6.Other.java", "BodyUseAPI": [], "Fixed commit": "f4f2c5c766db12da96ada3e451d0b4c27907da63", "Url": "https://api.github.com/repos/ewong11/biolab", "Date": "2018-01-15T16:37:37Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message != null) { msg = message; }else { msg = \"test\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7805/buggy-version/src.main.java.org.ravi.helloworld.Hello.java", "BodyUseAPI": [], "Fixed commit": "a5f83ccd923b393006c23947d2bb0c8e470be9f4", "Url": "https://api.github.com/repos/dhivya001/JavaSample", "Date": "2018-01-31T04:33:52Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.oskari.print.request.PrintLayer.getTiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tiles == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4808/buggy-version/service-print.src.main.java.org.oskari.print.loader.CommandLoadImageWFS.java", "BodyUseAPI": [], "Fixed commit": "f364a1eb3f0885da27089917990eaacbaba4e318", "Url": "https://api.github.com/repos/jampukka/oskari-server", "Date": "2018-02-19T15:44:40Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((intent.resolveActivity(getPackageManager())) != null) { android.widget.Toast.makeText(getApplicationContext(), R.string.FRAMING_EMAIL, Toast.LENGTH_SHORT).show(); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3685/buggy-version/app.src.main.java.app.learnkannada.com.learnkannadakannadakali.AboutusActivity.java", "BodyUseAPI": ["1.startActivity(android.content.Intent)"], "Fixed commit": "e11bb4903b626ffe60290d8ecca3c5699f35c9c7", "Url": "https://api.github.com/repos/varunam/LearnKannada_KannadaKali", "Date": "2018-02-23T16:48:02Z"},
{"Line": "=>699", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (xlearningAppType.equals(\"MXNET\")) { if (singleMx) { env = new java.lang.String[]{ \"PATH=\" + (java.lang.System.getenv(\"PATH\")), \"JAVA_HOME=\" + (java.lang.System.getenv(\"JAVA_HOME\")), \"HADOOP_HOME=\" + (java.lang.System.getenv(\"HADOOP_HOME\")), \"HADOOP_HDFS_HOME=\" + (java.lang.System.getenv(\"HADOOP_HDFS_HOME\")), ((((((\"LD_LIBRARY_PATH=\" + \"./:\") + (java.lang.System.getenv(\"LD_LIBRARY_PATH\"))) + \":\") + (java.lang.System.getenv(\"JAVA_HOME\"))) + \"/jre/lib/amd64/server:\") + (java.lang.System.getenv(\"HADOOP_HOME\"))) + \"/lib/native\", (((\"CLASSPATH=\" + \"./:\") + (java.lang.System.getenv(\"CLASSPATH\"))) + \":\") + (java.lang.System.getProperty(\"java.class.path\")), \"PYTHONUNBUFFERED=1\", ((XLearningConstants.Environment.XLEARNING_INPUT_FILE_LIST.toString()) + \"=\") + (this.inputFileList) }; }else if (xlearningAppType.equals(\"DISTXGBOOST\")) { env = new java.lang.String[]{ \"PATH=\" + (java.lang.System.getenv(\"PATH\")), \"JAVA_HOME=\" + (java.lang.System.getenv(\"JAVA_HOME\")), \"HADOOP_HOME=\" + (java.lang.System.getenv(\"HADOOP_HOME\")), \"HADOOP_HDFS_HOME=\" + (java.lang.System.getenv(\"HADOOP_HDFS_HOME\")), ((((((\"LD_LIBRARY_PATH=\" + \"./:\") + (java.lang.System.getenv(\"LD_LIBRARY_PATH\"))) + \":\") + (java.lang.System.getenv(\"JAVA_HOME\"))) + \"/jre/lib/amd64/server:\") + (java.lang.System.getenv(\"HADOOP_HOME\"))) + \"/lib/native\", (((\"CLASSPATH=\" + \"./:\") + (java.lang.System.getenv(\"CLASSPATH\"))) + \":\") + (java.lang.System.getProperty(\"java.class.path\")), \"DMLC_TRACKER_URI=\" + (java.lang.System.getenv(\"DMLC_TRACKER_URI\")), \"DMLC_TRACKER_PORT=\" + (java.lang.System.getenv(\"DMLC_TRACKER_PORT\")), \"DMLC_NUM_WORKER=\" + (java.lang.System.getenv(\"DMLC_NUM_WORKER\")), \"PYTHONUNBUFFERED=1\", \"DMLC_TASK_ID=\" + (this.index), \"DMLC_ROLE=\" + (this.role), ((XLearningConstants.Environment.XLEARNING_INPUT_FILE_LIST.toString()) + \"=\") + (this.inputFileList) }; }else { java.lang.String dmlcID; if (this.role.equals(\"worker\")) { dmlcID = \"DMLC_WORKER_ID\"; }else { dmlcID = \"DMLC_SERVER_ID\"; } env = new java.lang.String[]{ \"PATH=\" + (java.lang.System.getenv(\"PATH\")), \"JAVA_HOME=\" + (java.lang.System.getenv(\"JAVA_HOME\")), \"HADOOP_HOME=\" + (java.lang.System.getenv(\"HADOOP_HOME\")), \"HADOOP_HDFS_HOME=\" + (java.lang.System.getenv(\"HADOOP_HDFS_HOME\")), ((((((\"LD_LIBRARY_PATH=\" + \"./:\") + (java.lang.System.getenv(\"LD_LIBRARY_PATH\"))) + \":\") + (java.lang.System.getenv(\"JAVA_HOME\"))) + \"/jre/lib/amd64/server:\") + (java.lang.System.getenv(\"HADOOP_HOME\"))) + \"/lib/native\", (((\"CLASSPATH=\" + \"./:\") + (java.lang.System.getenv(\"CLASSPATH\"))) + \":\") + (java.lang.System.getProperty(\"java.class.path\")), \"DMLC_PS_ROOT_URI=\" + (java.lang.System.getenv(\"DMLC_PS_ROOT_URI\")), \"DMLC_PS_ROOT_PORT=\" + (java.lang.System.getenv(\"DMLC_PS_ROOT_PORT\")), \"DMLC_NUM_WORKER=\" + (java.lang.System.getenv(\"DMLC_NUM_WORKER\")), \"DMLC_NUM_SERVER=\" + (java.lang.System.getenv(\"DMLC_NUM_SERVER\")), \"PYTHONUNBUFFERED=1\", (dmlcID + \"=\") + (this.index), \"DMLC_ROLE=\" + (this.role), ((XLearningConstants.Environment.XLEARNING_INPUT_FILE_LIST.toString()) + \"=\") + (this.inputFileList) }; } }else { env = new java.lang.String[]{ \"PATH=\" + (java.lang.System.getenv(\"PATH\")), \"JAVA_HOME=\" + (java.lang.System.getenv(\"JAVA_HOME\")), \"HADOOP_HOME=\" + (java.lang.System.getenv(\"HADOOP_HOME\")), \"HADOOP_HDFS_HOME=\" + (java.lang.System.getenv(\"HADOOP_HDFS_HOME\")), ((((((\"LD_LIBRARY_PATH=\" + \"./:\") + (java.lang.System.getenv(\"LD_LIBRARY_PATH\"))) + \":\") + (java.lang.System.getenv(\"JAVA_HOME\"))) + \"/jre/lib/amd64/server:\") + (java.lang.System.getenv(\"HADOOP_HOME\"))) + \"/lib/native\", (((\"CLASSPATH=\" + \"./:\") + (java.lang.System.getenv(\"CLASSPATH\"))) + \":\") + (java.lang.System.getProperty(\"java.class.path\")), \"PYTHONUNBUFFERED=1\", ((XLearningConstants.Environment.XLEARNING_INPUT_FILE_LIST.toString()) + \"=\") + (this.inputFileList) }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6869/buggy-version/src.main.java.net.qihoo.xlearning.container.XLearningContainer.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "5df205d9dbc000b80b5d2555bdda3a459897f8a2", "Url": "https://api.github.com/repos/jungle-zh/XLearning", "Date": "2018-05-30T06:33:03Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((clientArguments.useS3) != null) && (!(clientArguments.useS3.equals(\"\")))) { appMasterEnv.put(XLearningConstants.Environment.USE_S3.toString(), clientArguments.useS3); }else { appMasterEnv.put(XLearningConstants.Environment.USE_S3.toString(), \"no\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6869/buggy-version/src.main.java.net.qihoo.xlearning.client.Client.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(XLearningConstants.Environment.USE_S3.toString(),clientArguments.useS3)"], "Fixed commit": "5df205d9dbc000b80b5d2555bdda3a459897f8a2", "Url": "https://api.github.com/repos/jungle-zh/XLearning", "Date": "2018-05-30T06:33:03Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (filename.contains(\",\")) { java.lang.String removeWhitespace = filename.replaceAll(\"\\\\s\", \"\"); java.lang.String[] arr = removeWhitespace.split(\",\"); java.lang.String output = new java.lang.String(); java.lang.String pwd = cSftp.pwd(); for (java.lang.String file : arr) { cSftp.put(file, file); output += ((file + \" has been uploaded to: \") + pwd) + \"\\n\"; } java.lang.System.out.println(output); }else { cSftp.put(filename, filename); java.lang.String pwd = cSftp.pwd(); java.lang.System.out.println((\"The file has been uploaded to: \" + pwd)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9512/buggy-version/src.main.java.Client.java", "BodyUseAPI": ["ChannelSftp.put(java.lang.String,java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "aff639b0727294efb5d92351fd504f35a03e0b29", "Url": "https://api.github.com/repos/bamcmanus/AGILE", "Date": "2018-08-01T01:59:07Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (curr != null) { for (AVLTree<T>.Node node : path) { node.decrementSize(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5198/buggy-version/AVLTree.AVLTree.java", "BodyUseAPI": [], "Fixed commit": "ca047fb7740b18c839ebdad112cf6417ade040aa", "Url": "https://api.github.com/repos/garyg1/Data-Structures", "Date": "2018-04-03T00:55:31Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((iter.getDepth()) < (t.getMaxDepth())) { PaintTree(g, l, new familytree.Node((-1), iter), maxDepth, \"inviz\"); PaintTree(g, l, new familytree.Node((-1), iter), maxDepth, \"inviz\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1311/buggy-version/src.familytree.BinaryTreeWindow.java", "BodyUseAPI": ["familytree.BinaryTreeWindow.Painting.PaintTree(java.awt.Graphics2D,java.awt.Graphics2D,familytree.Node,int,java.lang.String)", "familytree.BinaryTreeWindow.Painting.PaintTree(java.awt.Graphics2D,java.awt.Graphics2D,familytree.Node,int,java.lang.String)"], "Fixed commit": "91059c91a577770b8cf3116e05b1c93a3dc7e18e", "Url": "https://api.github.com/repos/rameshv2795/Family_Tree", "Date": "2018-08-03T00:32:21Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.delimiter.equals(\"\")) { this.dataList = com.kelfan.utillibrary.ListString.set(this.textContent).getPatternList(this.listPattern); }else { this.dataList = com.kelfan.utillibrary.ListString.set(this.textContent).setDelimiterWithoutDelimiter(delimiter).getPatternList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6510/buggy-version/EditorA.editfiler.src.main.java.com.kelfan.editfiler.LineRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "d11c2b35a198faa3752aae41ba5c9f38519216ba", "Url": "https://api.github.com/repos/kelfan/EditorA", "Date": "2018-05-17T23:54:03Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(text.equals(\"\"))) { lineRecyclerViewAdapter.addItem(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6510/buggy-version/EditorA.editfiler.src.main.java.com.kelfan.editfiler.EditFilerFragment.java", "BodyUseAPI": ["com.kelfan.editfiler.LineRecyclerViewAdapter.addItem(java.lang.String)"], "Fixed commit": "d11c2b35a198faa3752aae41ba5c9f38519216ba", "Url": "https://api.github.com/repos/kelfan/EditorA", "Date": "2018-05-17T23:54:03Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["argument.getType().getResolvedType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type instanceof com.allogica.allogen.backend.java.SharedPtrType) { type = ((com.allogica.allogen.backend.java.SharedPtrType) (type)).getContainedType().getResolvedType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9788/buggy-version/Compiler.src.main.java.com.allogica.allogen.backend.java.JavaBackend.java", "BodyUseAPI": [], "Fixed commit": "96c24451be133d71758af34210d59a93f931778b", "Url": "https://api.github.com/repos/Allogica/Allogen", "Date": "2018-08-24T14:31:33Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((continuation) != null) { result += getContinuationProgramState().hashCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2520/buggy-version/src.main.java.il.ac.bgu.cs.bp.bpjs.model.BThreadSyncSnapshot.java", "BodyUseAPI": [], "Fixed commit": "c94d2a623ebbadd6cf92f0d6dd80e321aaa82186", "Url": "https://api.github.com/repos/acepace/BPjs", "Date": "2018-05-02T15:28:30Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tracker.isEnabled())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7400/buggy-version/RobotLib.src.main.java.com.acmerobotics.relicrecovery.vision.OverlayView.java", "BodyUseAPI": [], "Fixed commit": "09ae4629fd67b6e2ffcf17722c0a5e531d358f29", "Url": "https://api.github.com/repos/acmerobotics/relic-recovery", "Date": "2018-01-26T08:26:48Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((e.getSource()) == (sendButton)) && (!(autoResetCheckBox.isSelected()))) { interactiveListenerService.stateSpinnerChange(autoResetCheckBox.isSelected()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3159/buggy-version/src.server.view.InteractivePanel.java", "BodyUseAPI": ["server.services.InteractiveListenerService.stateSpinnerChange(boolean)", "javax.swing.JCheckBox.isSelected()"], "Fixed commit": "d9487ef22f02556ba9cd865bde3ea2bd51bc5e09", "Url": "https://api.github.com/repos/SER516/ProjectThree_Team06", "Date": "2018-04-11T01:12:42Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isInTxCache(tx.getFrom(), tx.getNonceBI()))) { newLargeNonce.add(tx); addToTxCache(tx); org.aion.zero.impl.blockchain.AionPendingStateImpl.LOG.debug(\"Adding transaction to cache: from = {}, nonce = {}\", tx.getFrom(), txNonce); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5392/buggy-version/modAionImpl.src.org.aion.zero.impl.blockchain.AionPendingStateImpl.java", "BodyUseAPI": ["org.aion.zero.impl.blockchain.AionPendingStateImpl.addToTxCache(org.aion.zero.impl.blockchain.AionTransaction)", "java.util.List<org.aion.zero.impl.blockchain.AionTransaction>.add(org.aion.zero.impl.blockchain.AionTransaction)", "org.aion.zero.impl.blockchain.AionTransaction.getFrom()", "org.slf4j.Logger.debug(java.lang.String,tx.getFrom(),java.math.BigInteger)"], "Fixed commit": "2f7a044f95d20fc3a640360342d57ac728dbec51", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-04-04T20:06:09Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.evoila.cf.broker.custom.couchdb.CouchDbCustomImplementation.connection(de.evoila.cf.broker.custom.couchdb.ServiceInstance,de.evoila.cf.broker.custom.couchdb.Plan,boolean,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(service.getCouchDbClient().context().getAllDbs().contains(database))) { throw new de.evoila.cf.broker.exception.InvalidParametersException(\"The specified database for the binding does not exist\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/643/buggy-version/osb-service.src.main.java.de.evoila.cf.broker.custom.couchdb.CouchDbBindingService.java", "BodyUseAPI": [], "Fixed commit": "935537158cd76867b37cd08bb64d1da89817dee0", "Url": "https://api.github.com/repos/evoila/osb-couchdb", "Date": "2018-07-25T08:35:10Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["app.models.repository.AuthenticatedUserRepository.findByUsername(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (authenticatedUser == null) { throw new org.springframework.security.core.userdetails.UsernameNotFoundException(((\"Could not find user with username: \" + username) + \".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5333/buggy-version/src.main.java.app.models.AuthenticatedUserDetailsServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b6488801fd66d22ba7e1528f6f8869f98c0eac5e", "Url": "https://api.github.com/repos/JFleming4/FourthYearProjectSite", "Date": "2018-03-22T17:18:41Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.util.Objects.isNull(employeeId)) || (java.util.Objects.isNull(blockId))) || (java.util.Objects.isNull(previousblockId))) { throw new com.seatmanagement.exception.BusinessException(com.seatmanagement.model.Constant.REQUIRED_PARAMAS_NOT_PRESENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8354/buggy-version/seatmanagement.src.com.seatmanagement.controller.ReallocationController.java", "BodyUseAPI": [], "Fixed commit": "029c50338d7cc726c517f8e4b5416a9e803204da", "Url": "https://api.github.com/repos/SMIFresher/SeatsManagement", "Date": "2018-10-22T11:16:17Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mModuleApplicationStack.isEmpty()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8031/buggy-version/modulelibraryframeworksdk.src.main.java.com.mobile.android.module.library.framework.biz.service.manager.ModuleApplicationManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "e5e43e70dd6640380fd73c2a5e724652b4f284c0", "Url": "https://api.github.com/repos/ObitoNaruto/Naruto", "Date": "2018-02-11T10:26:25Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["logic.Main.getProposicao(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (proposicao.not) b = new boolean[]{ false, true }; else b = new boolean[]{ true, false };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4334/buggy-version/src.logic.Main.java", "BodyUseAPI": [], "Fixed commit": "e74cf847a1bb70d180f8610ef374e0873de73982", "Url": "https://api.github.com/repos/macaetano/truth-table-generator", "Date": "2018-04-04T12:22:27Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (labelExpression == null) { labelExpression = new liquibase.LabelExpression(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4898/buggy-version/liquibase-core.src.main.java.liquibase.changelog.DatabaseChangeLog.java", "BodyUseAPI": [], "Fixed commit": "2719ba41f1d26101d9bad902709e44b829c1254a", "Url": "https://api.github.com/repos/Datical/liquibase", "Date": "2018-09-06T20:12:56Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["liquibase.parser.core.ParsedNode.getChildValue(<nulltype>,java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ignore == null) { ignore = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4898/buggy-version/liquibase-core.src.main.java.liquibase.changelog.DatabaseChangeLog.java", "BodyUseAPI": [], "Fixed commit": "2719ba41f1d26101d9bad902709e44b829c1254a", "Url": "https://api.github.com/repos/Datical/liquibase", "Date": "2018-09-06T20:12:56Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mWebView) != null) mWebView.loadDefault(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5842/buggy-version/ytplayer.src.main.java.vip.frendy.ytplayer.YTPlayerManager.java", "BodyUseAPI": [], "Fixed commit": "6ecb72af224c129167eb984033d3f03256f94f33", "Url": "https://api.github.com/repos/frendyxzc/ytplayer", "Date": "2018-09-28T07:29:11Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mVideoList.size()) > 0) mIndex = ((--(mIndex)) + (mVideoList.size())) % (mVideoList.size());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5842/buggy-version/ytplayer.src.main.java.vip.frendy.ytplayer.YTPlayerListView.java", "BodyUseAPI": ["java.util.ArrayList<T>.size()", "java.util.ArrayList<T>.size()"], "Fixed commit": "6ecb72af224c129167eb984033d3f03256f94f33", "Url": "https://api.github.com/repos/frendyxzc/ytplayer", "Date": "2018-09-28T07:29:11Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mVideoList.size()) > 0) mIndex = (++(mIndex)) % (mVideoList.size());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5842/buggy-version/ytplayer.src.main.java.vip.frendy.ytplayer.YTPlayerListView.java", "BodyUseAPI": ["java.util.ArrayList<T>.size()"], "Fixed commit": "6ecb72af224c129167eb984033d3f03256f94f33", "Url": "https://api.github.com/repos/frendyxzc/ytplayer", "Date": "2018-09-28T07:29:11Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIntent().getExtras()) != null) { for (java.lang.String key : getIntent().getExtras().keySet()) { if (key.equals(\"from\")) { clubName = getIntent().getExtras().getString(key); clubName = clubName.substring(8); android.widget.Toast.makeText(this, clubName, Toast.LENGTH_SHORT).show(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7547/buggy-version/app.src.main.java.com.manan.dev.clubconnect.RequestUserActivity.java", "BodyUseAPI": [], "Fixed commit": "532b7b1fe4e6035c1ed2269146a56fa811eea414", "Url": "https://api.github.com/repos/Manan-YMCA/ClubConnectApp", "Date": "2018-01-10T20:09:24Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nl.homeserver.energie.SlimmeMeterController.LOGGER.isInfoEnabled()) { nl.homeserver.energie.SlimmeMeterController.LOGGER.info(org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(dsmr42Reading, new org.apache.commons.lang3.builder.RecursiveToStringStyle())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8853/buggy-version/src.main.java.nl.homeserver.energie.SlimmeMeterController.java", "BodyUseAPI": ["org.slf4j.Logger.info(org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(dsmr42Reading, new org.apache.commons.lang3.builder.RecursiveToStringStyle()))"], "Fixed commit": "aadc9f2e75cd5b586d628b13f0b95048594d19d4", "Url": "https://api.github.com/repos/bassages/home-server", "Date": "2018-01-21T18:01:27Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { player.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2657/buggy-version/app.src.main.java.com.jeffersonaraujo.bakingapp.InstructionDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "dbb7bec270059cb1ea8fb0f0db114117000d2699", "Url": "https://api.github.com/repos/euojeff/bakingApp", "Date": "2018-09-05T02:57:40Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mDataHelper.getVideoURL()) != null) && (!(mDataHelper.getVideoURL().trim().equals(\"\")))) { initializePlayer(view, mDataHelper.getVideoURL()); }else { mPlayerView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2657/buggy-version/app.src.main.java.com.jeffersonaraujo.bakingapp.InstructionDetailFragment.java", "BodyUseAPI": ["com.jeffersonaraujo.bakingapp.InstructionDetailFragment.initializePlayer(android.view.View,mDataHelper.getVideoURL())", "com.jeffersonaraujo.bakingapp.helper.StepJsonHelper.getVideoURL()"], "Fixed commit": "dbb7bec270059cb1ea8fb0f0db114117000d2699", "Url": "https://api.github.com/repos/euojeff/bakingApp", "Date": "2018-09-05T02:57:40Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getNull(index)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6140/buggy-version/src.main.protocol-impl.java.com.mysql.cj.protocol.a.result.TextBufferRow.java", "BodyUseAPI": [], "Fixed commit": "75f4971c73d08bd829b14f6c7858efb0ed8a904f", "Url": "https://api.github.com/repos/mysql/mysql-connector-j", "Date": "2018-05-25T07:32:18Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.power.doc.utils.DocClassUtil.isArray(gicName)) { gicName = gicName.substring(0, gicName.indexOf(\"[\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3749/buggy-version/api-doc.src.main.java.com.power.doc.builder.SourceBuilder.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "038d53711a88e37681bfd0dd5cab390c4002dc4e", "Url": "https://api.github.com/repos/shalousun/ApplicationPower", "Date": "2018-07-30T16:07:22Z"},
{"Line": "=>949", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.power.doc.utils.DocClassUtil.isArray(gicName)) { gicName = gicName.substring(0, gicName.indexOf(\"[\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3749/buggy-version/api-doc.src.main.java.com.power.doc.builder.SourceBuilder.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "038d53711a88e37681bfd0dd5cab390c4002dc4e", "Url": "https://api.github.com/repos/shalousun/ApplicationPower", "Date": "2018-07-30T16:07:22Z"},
{"Line": "=>900", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.power.doc.utils.DocClassUtil.isArray(gicName)) { gicName = gicName.substring(0, gicName.indexOf(\"[\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3749/buggy-version/api-doc.src.main.java.com.power.doc.builder.SourceBuilder.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "038d53711a88e37681bfd0dd5cab390c4002dc4e", "Url": "https://api.github.com/repos/shalousun/ApplicationPower", "Date": "2018-07-30T16:07:22Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doNotDeleteGroup) { android.widget.Toast.makeText(getApplicationContext(), R.string.message_cannot_delete_group, Toast.LENGTH_LONG).show(); }else { deleteGroup(getSelectedGroup(view.getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2168/buggy-version/GameMaster.app.src.main.java.de.ddgm.gamemaster.activities.GroupActivity.java", "BodyUseAPI": [], "Fixed commit": "1f8de94a9e6af0b2bced37498cc5dded824161d7", "Url": "https://api.github.com/repos/FelixTaylor/GameMasterApp", "Date": "2018-01-23T12:24:36Z"},
{"Line": "=>3500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!finalDbOverdue) { snoozeCal.setTimeInMillis((futureStamp * 1000)); }else { snoozeCal.setTimeInMillis(((java.lang.Long.parseLong(finalDbTimestamp)) * 1000)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7931/buggy-version/app.src.main.java.com.violenthoboenterprises.taskkiller.MyAdapter.java", "BodyUseAPI": [], "Fixed commit": "9e8cdbc79273829b03183072a6867580dad06d77", "Url": "https://api.github.com/repos/charliemcg/TaskKillerV2", "Date": "2018-10-19T07:56:00Z"},
{"Line": "=>3489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!finalDbOverdue) { MainActivity.db.updateTimestamp(java.lang.String.valueOf(MainActivity.sortedIDs.get(position)), java.lang.String.valueOf(futureStamp)); }else { MainActivity.db.updateTimestamp(java.lang.String.valueOf(MainActivity.sortedIDs.get(position)), java.lang.String.valueOf(java.lang.Long.parseLong(finalDbTimestamp))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7931/buggy-version/app.src.main.java.com.violenthoboenterprises.taskkiller.MyAdapter.java", "BodyUseAPI": [], "Fixed commit": "9e8cdbc79273829b03183072a6867580dad06d77", "Url": "https://api.github.com/repos/charliemcg/TaskKillerV2", "Date": "2018-10-19T07:56:00Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (myDialogFragment.isVisible()) { setCameraAppTitle(); manager.beginTransaction().remove(myDialogFragment).commit(); }else super.onBackPressed();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1282/buggy-version/app.src.main.java.com.example.rosst.intervalometer.main.MainActivity.java", "BodyUseAPI": ["manager.beginTransaction().remove(com.example.rosst.intervalometer.main.PkgListFragment)", "manager.beginTransaction().remove(myDialogFragment).commit()"], "Fixed commit": "2608f9dc1b1978eb6c5b278f4900b8d6b1da1aee", "Url": "https://api.github.com/repos/rostykboiko/Intervalometer", "Date": "2018-02-24T14:27:47Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["codeu.model.store.persistence.PersistentStorageAgent.getInstance().loadUsers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (users.isEmpty()) codeu.model.store.basic.UserStore.getInstance().addAdmin();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8145/buggy-version/src.main.java.codeu.controller.ServerStartupListener.java", "BodyUseAPI": [], "Fixed commit": "bbab1aefb146ee7f14619ceb6b91a5363add25d4", "Url": "https://api.github.com/repos/donnelldebnam/CodeU-Spring-2018-29", "Date": "2018-07-21T23:31:49Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ContentManager.DOWN.getTaskInfo(resultInfo.getData().toString())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(org.springframework.util.StringUtils.isEmpty(taskInfo.getFilePath()))) { taskForm.setFilePath(taskInfo.getFilePath()); }else { taskForm.setFilePath(createTaskForm.getFilePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8099/buggy-version/ui.src.main.java.lee.study.down.mvc.controller.OpenController.java", "BodyUseAPI": ["lee.study.down.mvc.form.NewTaskForm.setFilePath(taskInfo.getFilePath())", "lee.study.down.model.TaskInfo.getFilePath()"], "Fixed commit": "77c83b6fe7171a77c6eef26449a3ee8fd91dbf94", "Url": "https://api.github.com/repos/proxyee-down-org/proxyee-down", "Date": "2018-03-05T07:17:50Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.wasPlaying) { this.pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9791/buggy-version/plugins.spotify.src.main.java.de.unistuttgart.iaas.amyassist.amy.plugin.spotify.logic.PlayerLogic.java", "BodyUseAPI": [], "Fixed commit": "0400be603df0f03f60a1f81256471c62be65d0be", "Url": "https://api.github.com/repos/AmyAssist/Amy", "Date": "2018-08-26T16:22:54Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.wasPlaying) { this.resume(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9791/buggy-version/plugins.spotify.src.main.java.de.unistuttgart.iaas.amyassist.amy.plugin.spotify.logic.PlayerLogic.java", "BodyUseAPI": [], "Fixed commit": "0400be603df0f03f60a1f81256471c62be65d0be", "Url": "https://api.github.com/repos/AmyAssist/Amy", "Date": "2018-08-26T16:22:54Z"},
{"Line": "=>647", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.etl.parsers.event.impl.LexerImpl.peek(java.nio.CharBuffer,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (net.sf.etl.parsers.event.impl.Graphics.isGraphics(codepoint)) { codepoint(buffer, eof); }else { return makeToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7535/buggy-version/etl-parser.src.main.java.net.sf.etl.parsers.event.impl.LexerImpl.java", "BodyUseAPI": [], "Fixed commit": "04ff79fb12c3919b96a2cb7a38b97890c585838f", "Url": "https://api.github.com/repos/const/etl-java", "Date": "2012-03-22T21:34:54Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.apache.commons.lang3.StringUtils.isBlank(prefix)) && (org.apache.commons.lang3.StringUtils.isBlank(sequence))) && (org.apache.commons.lang3.StringUtils.isBlank(suffix))) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3345/buggy-version/src.main.java.com.github.fnwib.databing.title.TitleMatcher.java", "BodyUseAPI": [], "Fixed commit": "853117a95efdfd2291ed348c9e3a0ae8fa285840", "Url": "https://api.github.com/repos/fnwib/fn-xlsx", "Date": "2018-01-31T06:32:09Z"},
{"Line": "=>746", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((text1.trim()) == \"\") return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5019/buggy-version/monitor.src.main.java.com.zhongda.monitor.report.utils.Wordl2007Utis.java", "BodyUseAPI": [], "Fixed commit": "c960096f0e2a9eb488f74cab491fcb3b204a983f", "Url": "https://api.github.com/repos/ZDJTGIT/MonitorRepository", "Date": "2018-05-10T00:49:23Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_SCANNED_DOCUMENT_CROP)) && (resultCode == (RESULT_OK))) { android.os.Bundle croppedDocumentData = capturedData.getExtras(); java.lang.String croppedDocumentImagePath = ((java.lang.String) (croppedDocumentData.get(com.owncloud.android.ui.activity.UploadFilesActivity.CROPPED_SCANNED_DOCUMENT_IMAGE_PATH))); new com.owncloud.android.ui.activity.UploadFilesActivity.CheckAvailableSpaceTask(croppedDocumentImagePath).execute(); }else if (((requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_IMAGE_CAPTURE)) || (requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_DOCUMENT_SCAN))) && (resultCode == (RESULT_CANCELED))) { if ((image) != null) { image.delete(); com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.UploadFilesActivity.TAG, \"File deleted\"); } setResult(com.owncloud.android.ui.activity.RESULT_CANCELED); finish(); }else if (resultCode == (RESULT_CANCELED)) { setResult(com.owncloud.android.ui.activity.RESULT_CANCELED); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/798/buggy-version/src.com.owncloud.android.ui.activity.UploadFilesActivity.java", "BodyUseAPI": [], "Fixed commit": "629fc9e11049c1efb240adaba5c7f9b62ea1ccab", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-14T05:32:11Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getUid()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((e.participants) != null) && (e.participants.containsValue(uid))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/143/buggy-version/app.src.main.java.com.hsehhh.sv3.fragments.MyEventsFragment.java", "BodyUseAPI": [], "Fixed commit": "ff0555c78b03eabcdecdde1a9b854cb3e52ea744", "Url": "https://api.github.com/repos/yuliakhazieva/SV3", "Date": "2018-02-23T10:36:07Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wso2telco.dep.mediator.impl.payment.PaymentExecutor.getJsonBody()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(objJSONObject.has(\"amountTransaction\"))) { com.wso2telco.dep.mediator.impl.payment.PaymentHandlerFactory.log.error(\"createPaymentHandler -> API Type Not found\"); throw new com.wso2telco.dep.oneapivalidation.exceptions.CustomException(\"SVC0002\", \"\", new java.lang.String[]{ \"Missing mandatory parameter: amountTransaction\" }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7832/buggy-version/mediation-old.src.main.java.com.wso2telco.dep.mediator.impl.payment.PaymentHandlerFactory.java", "BodyUseAPI": [], "Fixed commit": "7d985084eb2deeed8eead5a57e05b4f799430a61", "Url": "https://api.github.com/repos/MilindaLaknath/mediation-dep", "Date": "2018-10-25T10:52:02Z"},
{"Line": "=>1791", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type == null) || (type.equals(nameRelationship.getType()))) { this.removeNameRelationship(nameRelationship); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1737/buggy-version/cdmlib-model.src.main.java.eu.etaxonomy.cdm.model.name.TaxonName.java", "BodyUseAPI": ["eu.etaxonomy.cdm.model.name.TaxonName.removeNameRelationship(eu.etaxonomy.cdm.model.name.NameRelationship)"], "Fixed commit": "676ed1a9e5972df1d331d67f1bb1f045e0dccb9f", "Url": "https://api.github.com/repos/cybertaxonomy/cdmlib", "Date": "2018-04-28T22:00:00Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStopwatchWatcher) != null) mStopwatchWatcher.onTimeChanged(getStopwatchTime());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4847/buggy-version/lemonadeclocklib.src.main.java.com.creator.lemonade.clock.util.StopwatchModel.java", "BodyUseAPI": [], "Fixed commit": "df5896fb8f986a007b19e017c078352875d0e78d", "Url": "https://api.github.com/repos/CreatorFelix/LemonadeClock", "Date": "2018-05-14T15:45:27Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isStarted())) return com.creator.lemonade.clock.util.StopwatchModel.StopwatchState.DEFAULT_TIME;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4847/buggy-version/lemonadeclocklib.src.main.java.com.creator.lemonade.clock.util.StopwatchModel.java", "BodyUseAPI": [], "Fixed commit": "df5896fb8f986a007b19e017c078352875d0e78d", "Url": "https://api.github.com/repos/CreatorFelix/LemonadeClock", "Date": "2018-05-14T15:45:27Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(initialData.isEmpty())) { int root = tree.createRoot(initialData.get(0)); construct(root, initialData, 0, initialData.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4011/buggy-version/src.main.java.org.psjava.ds.tree.segmenttree.SegmentTreeByArrayImplementation.java", "BodyUseAPI": [], "Fixed commit": "6e0f411cbf28dbb71a26059fa478a815240323ae", "Url": "https://api.github.com/repos/psjava/psjava", "Date": "2018-08-16T05:25:41Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entry != (de.hhu.bsinfo.dxram.mem.CIDTable.FREE_ENTRY)) && (entry != (de.hhu.bsinfo.dxram.mem.CIDTable.ZOMBIE_ENTRY))) { return entry & (de.hhu.bsinfo.dxram.mem.CIDTable.BITMASK_ADDRESS); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1748/buggy-version/src.de.hhu.bsinfo.dxram.mem.CIDTable.java", "BodyUseAPI": [], "Fixed commit": "8e39819561f437760b62ea47c67b5272a497cc93", "Url": "https://api.github.com/repos/huflo/dxram-memory-reference", "Date": "2018-03-20T14:39:46Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isActivated()) { activable.activate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7623/buggy-version/reactive-vaadin-addon.src.main.java.org.vaadin.addons.reactive.activable.CompositeActivable.java", "BodyUseAPI": [], "Fixed commit": "2a0f9d1e86bf0125a58715931183afbe6ec6b45a", "Url": "https://api.github.com/repos/dohnala/reactive-vaadin", "Date": "2018-05-31T11:31:38Z"},
{"Line": "=>2729", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((arity.isVariable) || ((arity.max) > 1)) { type = java.lang.String[].class; }else if ((arity.max) == 1) { type = java.lang.String.class; }else { type = (isOption()) ? boolean.class : java.lang.String.class; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4238/buggy-version/src.main.java.picocli.CommandLine.java", "BodyUseAPI": [], "Fixed commit": "a1dd9ae6cd44c81f134e51cf6106d7a6c673e092", "Url": "https://api.github.com/repos/remkop/picocli", "Date": "2018-02-22T15:44:53Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= (ret.length)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3664/buggy-version/deeplearning4j.deeplearning4j-ui-parent.deeplearning4j-ui-model.src.main.java.org.deeplearning4j.ui.storage.BaseCollectionStatsStorage.java", "BodyUseAPI": [], "Fixed commit": "c8c2400a21724032a31cadb9192f523d31158511", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2018-07-23T07:28:56Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hospital.service.impl.PatientDao.getPatientById(com.hospital.service.impl.Patient)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((patient.getOpenID()) != \"o5bAaxGhIV0ZksDNy8y26pk_XUI8\") { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9191/buggy-version/hospital-service.src.main.java.com.hospital.service.impl.DeliveryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "228f3265f639c3fadec1b6d77a63f615472b35e8", "Url": "https://api.github.com/repos/lht142934/HospitalSystem", "Date": "2018-09-16T14:58:23Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hospital.service.impl.PatientDao.getPatientById(com.hospital.service.impl.Patient)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((patient.getOpenID()) != \"o5bAaxGhIV0ZksDNy8y26pk_XUI8\") { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9191/buggy-version/hospital-service.src.main.java.com.hospital.service.impl.DeliveryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "228f3265f639c3fadec1b6d77a63f615472b35e8", "Url": "https://api.github.com/repos/lht142934/HospitalSystem", "Date": "2018-09-16T14:58:23Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (carry) { carry = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5220/buggy-version/LongInt.java", "BodyUseAPI": [], "Fixed commit": "d666456bf66b263c22162d21e9d77a2738a914a8", "Url": "https://api.github.com/repos/cesarh1094/Long-Int", "Date": "2018-10-17T19:03:10Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4746/buggy-version/src.main.org.deidentifier.arx.metric.v2.ILScore.java", "BodyUseAPI": [], "Fixed commit": "72ad4bb8eecf13145f975ac01949bc092522fd12", "Url": "https://api.github.com/repos/RaffaelBild/arx", "Date": "2018-01-23T10:41:29Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == obj) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4746/buggy-version/src.main.org.deidentifier.arx.metric.v2.ILScore.java", "BodyUseAPI": [], "Fixed commit": "72ad4bb8eecf13145f975ac01949bc092522fd12", "Url": "https://api.github.com/repos/RaffaelBild/arx", "Date": "2018-01-23T10:41:29Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getClass()) != (obj.getClass())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4746/buggy-version/src.main.org.deidentifier.arx.metric.v2.ILScore.java", "BodyUseAPI": [], "Fixed commit": "72ad4bb8eecf13145f975ac01949bc092522fd12", "Url": "https://api.github.com/repos/RaffaelBild/arx", "Date": "2018-01-23T10:41:29Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.nav_login)) { startActivity(new android.content.Intent(getApplication(), bt.gov.jdwnrh.www.findadoctor.DoctorLogin.class)); return true; }else if (id == (R.id.nav_feedback)) { startActivity(new android.content.Intent(getApplication(), bt.gov.jdwnrh.www.findadoctor.Feedback.class)); return true; }else if (id == (R.id.nav_share)) { android.content.Intent share = new android.content.Intent(android.content.Intent.ACTION_SEND); share.setType(\"text/*\"); share.putExtra(Intent.EXTRA_TEXT, new bt.gov.jdwnrh.www.findadoctor.Links().playstoreLink); startActivity(android.content.Intent.createChooser(share, \"Share Using\")); return true; }else if (id == (R.id.nav_rate)) { startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(new bt.gov.jdwnrh.www.findadoctor.Links().playstoreLink))); android.widget.Toast.makeText(getApplicationContext(), \"Please Rate this app on Playstore\", Toast.LENGTH_SHORT).show(); return true; }else if (id == (R.id.nav_about)) { startActivity(new android.content.Intent(getApplication(), bt.gov.jdwnrh.www.findadoctor.About.class)); return true; }else if (id == (R.id.nav_help)) { startActivity(new android.content.Intent(getApplication(), bt.gov.jdwnrh.www.findadoctor.HelpA.class)); return true; }else if (id == (R.id.nav_related)) { startActivity(new android.content.Intent(getApplication(), bt.gov.jdwnrh.www.findadoctor.RelatedApps.class)); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4205/buggy-version/app.src.main.java.bt.gov.jdwnrh.www.findadoctor.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "14acaa92229bd5a6e72b925673dcf92b6b2b6b9f", "Url": "https://api.github.com/repos/FindADoctorAppTeamCST/findadocnew", "Date": "2018-01-05T07:12:12Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((configuration.isDisableSubtitles()) || ((params.sid) == null)) { transcodeOptions.add(\"-sn\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3268/buggy-version/src.main.java.net.pms.encoders.FFMpegVideo.java", "BodyUseAPI": [], "Fixed commit": "287041305458ec8b967dd0cb8dfdcfc9f7046224", "Url": "https://api.github.com/repos/DigitalMediaServer/DigitalMediaServer", "Date": "2018-05-16T18:04:18Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.irmacard.keyshare.web.KeyshareConfiguration.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (conf.getCheckUserEnrolled()) org.irmacard.keyshare.web.email.EmailVerifier.verifyEmail(u, userData.getEmail(), conf.getConfirmEmailSubject(lang), conf.getConfirmEmailBody(lang), ((conf.getUrl()) + \"/web/enroll/\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8174/buggy-version/src.main.java.org.irmacard.keyshare.web.ClientResource.java", "BodyUseAPI": ["org.irmacard.keyshare.web.KeyshareConfiguration.getConfirmEmailSubject(java.lang.String)", "org.irmacard.keyshare.web.email.EmailVerifier.verifyEmail(org.irmacard.keyshare.web.users.User,userData.getEmail(),conf.getConfirmEmailSubject(lang),conf.getConfirmEmailBody(lang),((conf.getUrl()) + \"/web/enroll/\"))", "org.irmacard.keyshare.web.KeyshareConfiguration.getConfirmEmailBody(java.lang.String)", "org.irmacard.keyshare.web.KeyshareConfiguration.getUrl()"], "Fixed commit": "90065190e894451523e088835e27bd3f95dc0a15", "Url": "https://api.github.com/repos/privacybydesign/irma_keyshare_server", "Date": "2018-05-02T11:00:43Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(cursor_android_contacts.getColumnIndex(ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (java.lang.Character.isLetter(contactDisplayName.charAt(0))) { char startingChar = java.lang.Character.toUpperCase(contactDisplayName.charAt(0)); if ((contactLocations.get(startingChar)) == (-1)) { contactLocations.put(startingChar, currIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4895/buggy-version/app.src.main.java.proj.prod.owner.pokecontacts.MainActivity.java", "BodyUseAPI": ["java.lang.Character.toUpperCase(char)", "java.lang.String.charAt(int)"], "Fixed commit": "3ef64d6795f8be8facbc2f2634576c562f52ee63", "Url": "https://api.github.com/repos/mtshields1/PokeContactsApp", "Date": "2018-02-16T01:45:16Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["maud.Maud.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (model.getMap().isInvertingMap()) { effTarget = model.getSource(); }else { effTarget = model.getTarget(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2991/buggy-version/src.main.java.maud.model.LoadedMap.java", "BodyUseAPI": ["maud.model.EditorModel.getSource()", "maud.model.EditorModel.getTarget()"], "Fixed commit": "9df97c1f62e4600399294ed0727969ea78930788", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2018-07-26T04:39:39Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.bergerkiller.bukkit.common.Common.IS_PAPERSPIGOT_SERVER) { variables.put(\"paperspigot\", \"true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9851/buggy-version/src.main.java.com.bergerkiller.templates.TemplateResolver.java", "BodyUseAPI": [], "Fixed commit": "c120aa44e8e5bbba3f631bc888bb8493b80ce5b3", "Url": "https://api.github.com/repos/bergerhealer/BKCommonLib", "Date": "2018-08-11T16:01:44Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((insure.getOrderId()) == null) { insure.setOrderId(order.getId()); insure.setPartnerOrderId(order.getPartnerOrderId()); insureService.update(insure); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1080/buggy-version/ins-services.svc-service-partner.src.main.java.cn.com.yikangbao.service.partner.qianhai.impl.QianhaiServiceimpl.java", "BodyUseAPI": ["cn.com.yikangbao.entity.insure.Insure.setOrderId(order.getId())", "cn.com.yikangbao.entity.insure.Insure.setPartnerOrderId(order.getPartnerOrderId())", "cn.com.yikangbao.service.insure.InsureService.update(cn.com.yikangbao.entity.insure.Insure)"], "Fixed commit": "03642c406f8d6aa434f78f31d433ab7469ac9aec", "Url": "https://api.github.com/repos/juyecys/ykb-web", "Date": "2018-03-13T03:25:30Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opentravel.schemacompiler.model.TLActionFacet.getOwningResource()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((owner != null) && ((owner.getBusinessObjectRef()) != null)) { addElementNameToRegistry(org.opentravel.schemacompiler.codegen.util.XsdCodegenUtils.getGlobalElementName(facet), facet); addTypeNameToRegistry(facet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7020/buggy-version/schema-compiler.src.main.java.org.opentravel.schemacompiler.validate.impl.SchemaNameValidationRegistry.java", "BodyUseAPI": [], "Fixed commit": "2a47c09b59a723ecd0bd9a57cb784bfe93d629ab", "Url": "https://api.github.com/repos/OpenTravel/OTM-DE-Compiler", "Date": "2018-06-12T21:33:11Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((peek) == '0') { currentState = com.brownian.trumpscript.tokenizer.TokenizerDFA.TokenizerPDAState.ERR_CONST; }else { currentState = com.brownian.trumpscript.tokenizer.TokenizerDFA.TokenizerPDAState.CONST_DIGIT_1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8763/buggy-version/src.main.java.com.brownian.trumpscript.tokenizer.TokenizerDFA.java", "BodyUseAPI": [], "Fixed commit": "1103f07e93ed3c78e27ae8c960c30f9527c0dd90", "Url": "https://api.github.com/repos/paxromana96/TrumpScriptPlusPlus", "Date": "2018-02-27T21:55:20Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.android.systemui.qs.QSPanel.QS_SHOW_AUTO_BRIGHTNESS.equals(key)) && (mIsAutomaticBrightnessAvailable)) { mAutoBrightnessView.setVisibility(((newValue == null) || ((java.lang.Integer.parseInt(newValue)) != 0) ? VISIBLE : GONE)); if ((mMirrorAutoBrightnessView) != null) { mMirrorAutoBrightnessView.setVisibility(((newValue == null) || ((java.lang.Integer.parseInt(newValue)) != 0) ? INVISIBLE : GONE)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2743/buggy-version/packages.SystemUI.src.com.android.systemui.qs.QSPanel.java", "BodyUseAPI": [], "Fixed commit": "c0c997838f3459be5e1b666e3c65acdc10cf6afc", "Url": "https://api.github.com/repos/AnhellK/android_frameworks_base", "Date": "2018-10-24T18:55:38Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.IEntityOwnable.getOwnerId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (owner == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/299/buggy-version/src.main.java.com.therandomlabs.randomtweaks.common.PetProtectionHandler.java", "BodyUseAPI": [], "Fixed commit": "4d407502a6e372dad6841827d6643e28ba9d7c55", "Url": "https://api.github.com/repos/TheRandomLabs/RandomTweaks", "Date": "2018-02-12T04:40:55Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (props == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8236/buggy-version/dev.com.ibm.ws.security.jwt.src.com.ibm.ws.security.jwt.internal.ConsumerUtil.java", "BodyUseAPI": [], "Fixed commit": "1f369a9f5e1acbf6c09f3bab1bc731786b564a63", "Url": "https://api.github.com/repos/hibell/open-liberty", "Date": "2018-08-10T14:38:03Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.egov.wtms.application.service.CurrentDcbService.LOCALITYWISE.equalsIgnoreCase(mode)) return prepareLocalityWiseResult(resultObj, object); else if (org.egov.wtms.application.service.CurrentDcbService.PROPERTY.equalsIgnoreCase(mode)) { if ((object[0]) != null) resultObj.setHscNo(object[0].toString()); if ((object[1]) != null) resultObj.setPropertyId(object[1].toString()); if ((object[2]) != null) resultObj.setUserName(object[2].toString()); }else { if ((object[0]) != null) resultObj.setWardId(java.lang.Integer.parseInt(object[0].toString())); if ((object[1]) != null) resultObj.setBoundaryName(object[1].toString()); if ((object[2]) != null) resultObj.setCountOfConsumerNo(java.math.BigInteger.valueOf(java.lang.Long.valueOf(object[2].toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4279/buggy-version/egov.egov-wtms.src.main.java.org.egov.wtms.application.service.CurrentDcbService.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "9fbbb3ac2d29dc8f4d933944fd162e3c4b6b8d53", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2018-01-12T08:54:22Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.dv8tion.jda.core.events.message.MessageReceivedEvent.getAuthor()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (message.substring(5).equalsIgnoreCase(author.getId())) { author.openPrivateChannel().complete().sendMessage(\"Vous ne pouvez pas vous affronter vous-m\u00eame !\").complete(); return; }else { ennemyPlayer = fantasyBot.Main.getJda().getUserById(message.substring(5)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4349/buggy-version/src.fantasyBot.EventListener.java", "BodyUseAPI": ["author.openPrivateChannel().complete().sendMessage(\"Vous ne pouvez pas vous affronter vous-m\u00eame !\").complete()", "author.openPrivateChannel().complete().sendMessage(java.lang.String)", "net.dv8tion.jda.core.entities.User.openPrivateChannel()", "fantasyBot.Main.getJda().getUserById(java.lang.String)", "java.lang.String.substring(int)", "author.openPrivateChannel().complete()"], "Fixed commit": "490dcacc1150036d18efefacac2455f7fb10fbc9", "Url": "https://api.github.com/repos/ParallGames/FantasyBot", "Date": "2018-09-02T10:40:03Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tutorDay.get(java.util.Calendar.MINUTE)) < 10) { minute = \"0\" + minute; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/661/buggy-version/app.src.main.java.com.manajemeninformasi.riska.findingtutor.CariTutorFormFragment.java", "BodyUseAPI": [], "Fixed commit": "28d649d0e4728332f5a84d7c4dd6c494d29d5531", "Url": "https://api.github.com/repos/fandyaditya/android-findingtutor", "Date": "2018-05-02T09:25:01Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tutorDay.get(java.util.Calendar.HOUR_OF_DAY)) < 10) { hour = \"0\" + hour; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/661/buggy-version/app.src.main.java.com.manajemeninformasi.riska.findingtutor.CariTutorFormFragment.java", "BodyUseAPI": [], "Fixed commit": "28d649d0e4728332f5a84d7c4dd6c494d29d5531", "Url": "https://api.github.com/repos/fandyaditya/android-findingtutor", "Date": "2018-05-02T09:25:01Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (step == 0) step = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4788/buggy-version/CLUS-RMGitHub.src.redescriptionmining.DataSetCreator.java", "BodyUseAPI": [], "Fixed commit": "1d9f1983878d5fcd27c47487fb78832dc63860c5", "Url": "https://api.github.com/repos/matmih/CLUS-RM-library", "Date": "2018-05-23T21:31:15Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.maxQueueSize) == (-1)) { this.maxQueueSize = java.lang.Integer.MAX_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2002/buggy-version/core.src.main.java.com.digitalpebble.stormcrawler.bolt.FetcherBolt.java", "BodyUseAPI": [], "Fixed commit": "b250909d029de0ac301d131ebc2aa40128c21db9", "Url": "https://api.github.com/repos/DigitalPebble/storm-crawler", "Date": "2018-04-06T15:44:11Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_SCANNED_DOCUMENT_CROP)) && (resultCode == (RESULT_OK))) { android.os.Bundle croppedDocumentData = capturedData.getExtras(); java.lang.String croppedDocumentImagePath = ((java.lang.String) (croppedDocumentData.get(com.owncloud.android.ui.activity.UploadFilesActivity.CROPPED_SCANNED_DOCUMENT_IMAGE_PATH))); new com.owncloud.android.ui.activity.UploadFilesActivity.CheckAvailableSpaceTask(croppedDocumentImagePath).execute(); }else if (((requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_IMAGE_CAPTURE)) || (requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_DOCUMENT_SCAN))) && (resultCode == (RESULT_CANCELED))) { if ((image) != null) { image.delete(); com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.UploadFilesActivity.TAG, \"File deleted\"); } setResult(com.owncloud.android.ui.activity.RESULT_CANCELED); finish(); }else if (resultCode == (RESULT_CANCELED)) { setResult(com.owncloud.android.ui.activity.RESULT_CANCELED); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3452/buggy-version/src.com.owncloud.android.ui.activity.UploadFilesActivity.java", "BodyUseAPI": [], "Fixed commit": "da92eef425448de47bd44f6774bca3b93ad3907c", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-14T05:32:11Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paused) handler.getMouseManager().setUiManager(uiManager); else handler.getMouseManager().setUiManager(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3653/buggy-version/src.main.coffeecatteam.tilegame.state.StateGame.java", "BodyUseAPI": [], "Fixed commit": "839d515428ad5656fca34f68b440b2277dd9ab5b", "Url": "https://api.github.com/repos/CoffeeCatRailway/TheUltimateTile", "Date": "2018-08-14T09:26:36Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lexer.identifierEquals(\"ENCRYPTION\")) { lexer.nextToken(); accept(Token.EQ); stmt.getTableOptions().put(\"ENCRYPTION\", this.exprParser.expr()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1805/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlCreateTableParser.java", "BodyUseAPI": ["com.alibaba.druid.sql.dialect.mysql.parser.MySqlCreateTableParser.nextToken()"], "Fixed commit": "01bae142762179b1e97abb6e9a0ff9cba4983b1b", "Url": "https://api.github.com/repos/FlakyTestDetection/druid", "Date": "2018-01-22T07:34:53Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.ticksExisted) % 10) == 0) { lastRetarderPos = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/232/buggy-version/src.main.java.cam72cam.immersiverailroading.entity.EntityMoveableRollingStock.java", "BodyUseAPI": [], "Fixed commit": "7564c97af59ec35d28d810d092e7df4e2149911f", "Url": "https://api.github.com/repos/cam72cam/ImmersiveRailroading", "Date": "2018-07-21T18:42:39Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hoursAgo > 0) { java.math.BigDecimal calculated = value.add(value.divide(new java.math.BigDecimal(hoursAgo), 2, java.math.RoundingMode.HALF_UP).multiply(new java.math.BigDecimal(hoursToGo))); entry.setCalculated(((new java.text.DecimalFormat(\"0\").format(calculated)) + \" kW/h\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2034/buggy-version/Home.src.main.java.home.domain.HouseView.java", "BodyUseAPI": ["java.math.BigDecimal.divide(java.math.BigDecimal,int,java.math.RoundingMode)", "java.math.BigDecimal.multiply(java.math.BigDecimal)", "java.math.BigDecimal.add(java.math.BigDecimal)"], "Fixed commit": "6f70f07e88bf615686b281d33b189014757328d3", "Url": "https://api.github.com/repos/mfis/Home", "Date": "2018-09-01T05:43:34Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (transaction.getDesc().contains(\"claimed\")) { from.setCarrot(((from.getCarrot()) - (transaction.getCarrot()))); employeeController.updateStaff(from.getEmployeeid(), from); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1971/buggy-version/src.main.java.com.springframework.api.controller.TransactionController.java", "BodyUseAPI": ["com.springframework.api.controller.Employee.setCarrot(((from.getCarrot()) - (transaction.getCarrot())))", "com.springframework.api.controller.Transaction.getCarrot()"], "Fixed commit": "f36b2a4d6d0b386bb99ecd6a0f54f661745980c7", "Url": "https://api.github.com/repos/nurcholisnanda/SpringApi", "Date": "2018-05-26T08:46:00Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.online.college.common.web.SessionContext.isWxLogin(request)) { return new org.springframework.web.servlet.ModelAndView(\"redirect:/user/index.html\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6798/buggy-version/ocProjectX.ocWechatX.src.main.java.com.online.college.wechat.controller.AuthController.java", "BodyUseAPI": [], "Fixed commit": "d20be70c406be967abf072ab87c18bc445434152", "Url": "https://api.github.com/repos/cmazPATHoma/muke", "Date": "2018-04-19T10:33:02Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.online.college.common.web.SessionContext.getWxAuthUser(request)) != null) { return new org.springframework.web.servlet.ModelAndView(\"redirect:/user/index.html\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6798/buggy-version/ocProjectX.ocWechatX.src.main.java.com.online.college.wechat.controller.AuthController.java", "BodyUseAPI": [], "Fixed commit": "d20be70c406be967abf072ab87c18bc445434152", "Url": "https://api.github.com/repos/cmazPATHoma/muke", "Date": "2018-04-19T10:33:02Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cmd.trim().equals(\"END\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5026/buggy-version/src.editor.DirectoryEditor.java", "BodyUseAPI": [], "Fixed commit": "4ea566ad6f87417099e8a9b04f36722f5aab39ad", "Url": "https://api.github.com/repos/CompSci-361/Lab7", "Date": "2018-03-07T21:15:46Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.happergame.models.Board.getGameObjectFromMap(GameObject.HAPPER)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((this.happerTemp) != null) && (this.happerTemp.equals(happer))) { throw new algorithms.NoPathPossibleException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/486/buggy-version/src.main.java.com.happergame.controllers.BoardController.java", "BodyUseAPI": [], "Fixed commit": "78101a29a7c511dae41bef6361b4ccad144cb814", "Url": "https://api.github.com/repos/sandrt/happergame", "Date": "2018-07-04T01:11:08Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) dir.mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7403/buggy-version/src.xyz.spaceio.config.ConfigHandler.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "e368c2feae50ece5463f6d5257036162a886f13a", "Url": "https://api.github.com/repos/mastercake10/CustomOreGen", "Date": "2018-09-22T03:05:01Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field.getFieldVariable().getVariableId().getString().startsWith(\"SK_jml_pred_java_primitive\")) return false; else return (ar.edu.taco.alloy.sbp.SBPUtils.getOnlyToOrThrowException(field).equals(javaType)) && (javaTypes.contains(ar.edu.taco.alloy.sbp.SBPUtils.getOnlyFromOrThrowException(field)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/356/buggy-version/src.ar.edu.taco.alloy.sbp.JDynAlloyClassHierarchy.java", "BodyUseAPI": ["ar.edu.taco.alloy.sbp.SBPUtils.getOnlyToOrThrowException(ar.edu.jdynalloy.ast.JField)", "ar.edu.taco.alloy.sbp.SBPUtils.getOnlyFromOrThrowException(ar.edu.jdynalloy.ast.JField)", "java.util.List<java.lang.String>.contains(ar.edu.taco.alloy.sbp.SBPUtils.getOnlyFromOrThrowException(field))", "ar.edu.taco.alloy.sbp.SBPUtils.getOnlyToOrThrowException(field).equals(java.lang.String)"], "Fixed commit": "edf6892a07c19beb1a0cfbc068a59926011cf139", "Url": "https://api.github.com/repos/zeminlu/comitaco", "Date": "2018-06-15T17:30:16Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isStackValid(slotsForFace[side.getIndex()][slot], stack))) return stack;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3321/buggy-version/src.main.java.ga.scmc.tileentity.TileEntitySidedInventory.java", "BodyUseAPI": [], "Fixed commit": "69b8d4b6680e5089c5fd47dc950c128aa0072501", "Url": "https://api.github.com/repos/SCMCMod/Starcraft-Mod", "Date": "2018-01-17T17:30:51Z"},
{"Line": "=>6", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (db.isConnected()) { db.insertAV(\"how to be the best in your team\", \"Lenar Gumerov\", true, 0, false, 0, \"bestbookintheworld\"); db.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3708/buggy-version/src.Main.java", "BodyUseAPI": ["Database.close()", "Database.insertAV(java.lang.String,java.lang.String,boolean,int,boolean,int,java.lang.String)"], "Fixed commit": "e20cd09716aba9d9a5b0d94c3479ae528b656d36", "Url": "https://api.github.com/repos/lenargum/libraryProject", "Date": "2018-02-19T21:16:10Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((element.getExerciseSet().getSetWeight()) != (-1)) currentSetWeight.setText(java.lang.Double.toString(element.getExerciseSet().getSetWeight())); else { currentSetWeight.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8729/buggy-version/app.src.main.java.com.heliam1.HowToBeFit.ui.ExerciseSets.ExerciseSetsActivity.java", "BodyUseAPI": ["java.lang.Double.toString(element.getExerciseSet().getSetWeight())", "element.getExerciseSet().getSetWeight()", "android.widget.EditText.setText(java.lang.String)", "com.heliam1.HowToBeFit.models.StartTimeExerciseSetListPreviousExerciseSet.getExerciseSet()"], "Fixed commit": "c07a6ab23cd77e9a76d41a8e1f3d55471fce9321", "Url": "https://api.github.com/repos/heliam1/howtobefit", "Date": "2018-06-13T09:58:09Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((element.getExerciseSet().getSetReps()) != (-1)) currentSetReps.setText(java.lang.Integer.toString(element.getExerciseSet().getSetReps())); else { currentSetReps.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8729/buggy-version/app.src.main.java.com.heliam1.HowToBeFit.ui.ExerciseSets.ExerciseSetsActivity.java", "BodyUseAPI": ["element.getExerciseSet().getSetReps()", "android.widget.EditText.setText(java.lang.String)", "com.heliam1.HowToBeFit.models.StartTimeExerciseSetListPreviousExerciseSet.getExerciseSet()", "java.lang.Integer.toString(element.getExerciseSet().getSetReps())"], "Fixed commit": "c07a6ab23cd77e9a76d41a8e1f3d55471fce9321", "Url": "https://api.github.com/repos/heliam1/howtobefit", "Date": "2018-06-13T09:58:09Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((value.charAt(0)) == '\"') { first = value.substring(1, (lengthOfSingle - 1)); second = value.substring((lengthOfSingle + 2), (lengthOfSingle * 2)); }else { first = value.substring(0, lengthOfSingle); second = value.substring((lengthOfSingle + 1), ((lengthOfSingle * 2) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/970/buggy-version/src.main.java.uj.jwzp.w2.e3.logic.converter.DateRangeConverter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "ec0782d572a7e6ab2678fdabe311e835da6de145", "Url": "https://api.github.com/repos/Zax37/JavaTask8DependencyInjection", "Date": "2018-06-09T18:31:49Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needAdd) { addEmptyItemAtFirst(newInput); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5847/buggy-version/com.eshinetech.rcp.training.src.com.eshinetech.training.jface.filtertableviewer.AbstractTableFilter.java", "BodyUseAPI": [], "Fixed commit": "5678109c4af43cd84f218ba0903a6c9754f88def", "Url": "https://api.github.com/repos/JavaRui/com.eshinetech.rcp.training", "Date": "2018-08-13T08:16:27Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["step.expressions.ExpressionHandler.evaluateGroovyExpression(dynamicValue.expression,java.util.Map<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (evaluationResult instanceof groovy.lang.GString) { evaluationResult = evaluationResult.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4230/buggy-version/core.src.main.java.step.core.dynamicbeans.DynamicValueResolver.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "d3ade97caa14ca8e4f5e7465808c32ea92d69b2b", "Url": "https://api.github.com/repos/exense/step", "Date": "2018-02-01T07:19:44Z"},
{"Line": "=>905", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shippingType.equalsIgnoreCase(\"Midnight\")) { if ((uniqueUnitsMap.containsKey(key)) == false) { flagForUniqueness = true; java.util.Set<java.lang.String> deliveryTimeSet = new java.util.HashSet<>(); deliveryTimeSet.add(deliveryTime); uniqueUnitsMap.put(key, deliveryTimeSet); }else { flagForUniqueness = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4631/buggy-version/api.src.main.java.com.igp.handles.vendorpanel.mappers.Vendor.HandlesVendorMapper.java", "BodyUseAPI": [], "Fixed commit": "addba3e9e17d805da2344f58fb7fd5cfbe0b49e1", "Url": "https://api.github.com/repos/shashank-igp/newadminpanel", "Date": "2018-03-08T11:37:40Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((theta1 > 90) && (theta2 > 90)) || ((theta1 < 90) && (theta2 < 90))) return java.lang.Math.abs((height2 - height1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1640/buggy-version/app.src.main.java.com.msquared.physicskinematics.Results.java", "BodyUseAPI": [], "Fixed commit": "b985ad992721d0c7cf9dc7ae0b4f100f66cb9354", "Url": "https://api.github.com/repos/MasonMcV/Measurematics", "Date": "2018-04-16T21:34:45Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()", "java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((BaghChal.board[row][col]) != (BaghChal.TIGER)) { java.lang.System.out.println(\"The selected coordinate doesn't have a tiger!\"); move(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2902/buggy-version/BaghChal.java", "BodyUseAPI": [], "Fixed commit": "841fcdd46323fcbcf47bb7b08472e2a8fad6da27", "Url": "https://api.github.com/repos/aashan10/baghchal", "Date": "2018-05-08T17:02:07Z"},
{"Line": "=>543", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v1 != null) && (v2 != null)) { this.stretchFactor = stretch; this.sfVertices[0] = v1; this.sfVertices[1] = v2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6261/buggy-version/src.dt.DelaunayTriangulation.java", "BodyUseAPI": [], "Fixed commit": "eedf0f4d38420a780bfae7500af4b1420a860c35", "Url": "https://api.github.com/repos/LeeGlendenning/Quadrilateral-Delaunay-Triangulation", "Date": "2018-08-01T00:29:06Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((indicator.getChildAt(0)) != null) indicator.getChildAt(0).setEnabled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3741/buggy-version/android.app.src.main.java.com.xtkj.paopaoxiche.view.DriverMain.HomeFragment.java", "BodyUseAPI": ["indicator.getChildAt(0).setEnabled(boolean)", "android.widget.LinearLayout.getChildAt(int)"], "Fixed commit": "c1b609afd95ac1cdb6e847984f359df2912aee23", "Url": "https://api.github.com/repos/paopaoxiche/XiangTanKeJi", "Date": "2018-08-13T13:46:09Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (driver.getCurrentUrl().startsWith(\"https://www.zbj.com/home/p.html\")) { com.zsihuo.jobspread.core.processor.zbj.ZbjShopAction.LOGGER.info(\"{},\u4e0d\u9700\u8981\u5904\u7406\", driver.getCurrentUrl()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1149/buggy-version/jobspread-core.src.main.java.com.zsihuo.jobspread.core.processor.zbj.ZbjShopAction.java", "BodyUseAPI": ["org.openqa.selenium.WebDriver.getCurrentUrl()", "org.slf4j.Logger.info(java.lang.String,driver.getCurrentUrl())"], "Fixed commit": "39dbdf47ae43afce10908b4cf16eebc59a631656", "Url": "https://api.github.com/repos/changsong/job-spread", "Date": "2018-02-14T04:23:13Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (driver.getCurrentUrl().startsWith(\"https://www.zbj.com/home/p.html\")) { com.zsihuo.jobspread.core.processor.zbj.ZbjShopAction.LOGGER.info(\"https://www.zbj.com/home/p.html{}\", driver.getCurrentUrl()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1149/buggy-version/jobspread-core.src.main.java.com.zsihuo.jobspread.core.processor.zbj.ZbjShopAction.java", "BodyUseAPI": ["org.openqa.selenium.WebDriver.getCurrentUrl()", "org.slf4j.Logger.info(java.lang.String,driver.getCurrentUrl())"], "Fixed commit": "39dbdf47ae43afce10908b4cf16eebc59a631656", "Url": "https://api.github.com/repos/changsong/job-spread", "Date": "2018-02-14T04:23:13Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jeep.lolesports.service.HTTPService.getRequestContents(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jsonDataBasic == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/804/buggy-version/src.main.java.com.jeep.lolesports.service.RiotServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "8073efb2559ab24d4b19a0391b5eed8ae6909532", "Url": "https://api.github.com/repos/JamesJose7/lol-data-analyzer", "Date": "2018-07-11T00:57:10Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jeep.lolesports.service.RiotService.getJugadorByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (jugador == null) { model.addAttribute(\"found\", false); }else { miembro = integranteService.findById(jugador.getId()); model.addAttribute(\"found\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/804/buggy-version/src.main.java.com.jeep.lolesports.web.controller.IntegranteController.java", "BodyUseAPI": ["com.jeep.lolesports.model.Jugador.getId()", "com.jeep.lolesports.service.IntegranteService.findById(jugador.getId())"], "Fixed commit": "8073efb2559ab24d4b19a0391b5eed8ae6909532", "Url": "https://api.github.com/repos/JamesJose7/lol-data-analyzer", "Date": "2018-07-11T00:57:10Z"},
{"Line": "=>2655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(JsonKey.ROLES)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(roles.contains(org.sunbird.user.actors.UserManagementActor.DEFAULT_USER_ROLE))) roles.add(org.sunbird.user.actors.UserManagementActor.DEFAULT_USER_ROLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5349/buggy-version/actors.user.src.main.java.org.sunbird.user.actors.UserManagementActor.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "dbae23c291793496e59ea89dae5c79db2c7651a3", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-07-12T11:21:24Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.employeePlayerGroupList) != null) { return this.employeePlayerGroupList.stream().map(EmployeePlayerGroup::getPlayerGroup).collect(java.util.stream.Collectors.toList()); }else { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9291/buggy-version/src.main.java.com.idc.sterba.demo.entity.Employee.java", "BodyUseAPI": [], "Fixed commit": "68a53531890ce1c5dafebd3c78ff8c06a08c161e", "Url": "https://api.github.com/repos/jakubcaj/shameCounter", "Date": "2018-09-24T19:11:45Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((node.action) < 0) && (child != null)) node.action = child.action;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8223/buggy-version/src.main.java.ch.hslu.ai.connect4.team05.Action4Connects.java", "BodyUseAPI": [], "Fixed commit": "d908b411fe6b6edb57d56fd7029eb54aaafbc06c", "Url": "https://api.github.com/repos/KilnOfTheSecondFlame/connect-4_bot", "Date": "2018-05-03T11:39:55Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["application.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (user != null) users.add(user);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4648/buggy-version/PyramidPlay.src.application.UserRepository.java", "BodyUseAPI": ["java.util.ArrayList<application.User>.add(application.User)"], "Fixed commit": "de95848036de650690b03a8ddbacda00e7f705c3", "Url": "https://api.github.com/repos/jakeparcell14/CECS-327-Music-Streaming-Service", "Date": "2018-09-18T04:55:10Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["application.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (song != null) songs.add(song);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4648/buggy-version/PyramidPlay.src.application.UserRepository.java", "BodyUseAPI": ["java.util.ArrayList<application.Song>.add(application.Song)"], "Fixed commit": "de95848036de650690b03a8ddbacda00e7f705c3", "Url": "https://api.github.com/repos/jakeparcell14/CECS-327-Music-Streaming-Service", "Date": "2018-09-18T04:55:10Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field.toLowerCase().contains(\"catalogname\")) { if (!(newValue.equals(comparison.getOutputSchemaAs()))) { liquibase.util.ObjectUtil.setProperty(change, field, newValue); } }else { liquibase.util.ObjectUtil.setProperty(change, field, newValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4701/buggy-version/liquibase-core.src.main.java.liquibase.diff.output.changelog.AbstractChangeGenerator.java", "BodyUseAPI": ["liquibase.util.ObjectUtil.setProperty(liquibase.change.Change,java.lang.String,java.lang.String)", "liquibase.util.ObjectUtil.setProperty(liquibase.change.Change,java.lang.String,java.lang.String)"], "Fixed commit": "f88bb2d233b53ffa564fe8b0b899bfa9b6cd540f", "Url": "https://api.github.com/repos/Datical/liquibase", "Date": "2018-10-09T11:28:04Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field.toLowerCase().contains(\"catalogname\")) { if (!(newValue.equalsIgnoreCase(comparison.getOutputSchemaAs()))) { liquibase.util.ObjectUtil.setProperty(change, field, newValue); } }else { liquibase.util.ObjectUtil.setProperty(change, field, newValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4701/buggy-version/liquibase-core.src.main.java.liquibase.diff.output.changelog.AbstractChangeGenerator.java", "BodyUseAPI": ["liquibase.util.ObjectUtil.setProperty(liquibase.change.Change,java.lang.String,java.lang.String)", "liquibase.util.ObjectUtil.setProperty(liquibase.change.Change,java.lang.String,java.lang.String)"], "Fixed commit": "f88bb2d233b53ffa564fe8b0b899bfa9b6cd540f", "Url": "https://api.github.com/repos/Datical/liquibase", "Date": "2018-10-09T11:28:04Z"},
{"Line": "=>983", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (playbackStartPosition != null) { try { exoPlayer.seekTo(playbackStartPosition); checkSegmentChange(playbackStartPosition); } catch (java.lang.IllegalStateException ignored) { android.util.Log.w(ch.srg.mediaplayer.SRGMediaPlayerController.TAG, \"Invalid initial playback position\", ignored); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3071/buggy-version/srgmediaplayer.src.main.java.ch.srg.mediaplayer.SRGMediaPlayerController.java", "BodyUseAPI": ["com.google.android.exoplayer2.SimpleExoPlayer.seekTo(java.lang.Long)", "ch.srg.mediaplayer.SRGMediaPlayerController.checkSegmentChange(java.lang.Long)"], "Fixed commit": "ca788e08a3abd4d49efaa16a2f6a494ca205c49d", "Url": "https://api.github.com/repos/SRGSSR/SRGMediaPlayer-Android", "Date": "2018-08-20T12:59:28Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNotFirstDocument) { bytesToBeAdded += org.sagebionetworks.search.CloudSearchDocumentFileIterator.DELIMITER_BYTES.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2024/buggy-version/lib.lib-search.src.main.java.org.sagebionetworks.search.CloudSearchDocumentFileIterator.java", "BodyUseAPI": [], "Fixed commit": "7ea742307a3b7b552438542420c5169495269840", "Url": "https://api.github.com/repos/Sage-Bionetworks/Synapse-Repository-Services", "Date": "2018-10-17T02:27:57Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (parseWords[x].equals(\"IDENT\")) { if (!(parseWords[(x - 1)].equals(\"STR\"))) { identHolder = x; identType = parseWords[(x - 1)]; identValue = sourceWords[(x + 2)]; this.st.findVariable(sourceWords[identHolder]).setType(identType); if (sourceWords[(x + 1)].equals(\"IS\")) { this.st.findVariable(sourceWords[identHolder]).setValue(identValue); }else { java.lang.System.out.println(\"dakshgdjhasgdhjasgjhdgashjhdghjasgdjhasgdgasdgasjgdjhasgdjasgdgajsgdjashgjg\"); if (identType.equals(\"INT\")) { this.st.findVariable(sourceWords[identHolder]).setValue(\"0\"); }else if (identType.equals(\"FLOAT\")) { this.st.findVariable(sourceWords[identHolder]).setValue(\"0.0\"); } } }else { identHolder = x; identType = parseWords[(x - 1)]; this.st.findVariable(sourceWords[identHolder]).setType(identType); this.st.findVariable(sourceWords[identHolder]).setValue(\"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2015/buggy-version/src.SemanticsHandler.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "09dd75a7397cdbb601b13129644f855140f8fcd0", "Url": "https://api.github.com/repos/crucibles/expression-evaluator", "Date": "2018-05-18T13:44:14Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scienceLab.isConnected()) { java.lang.Double frequency = scienceLab.getFrequency(knobMarker[knobState], null); saveAndSetData(java.lang.String.valueOf(frequency), getString(R.string.frequency_unit)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7733/buggy-version/app.src.main.java.org.fossasia.pslab.activity.MultimeterActivity.java", "BodyUseAPI": ["org.fossasia.pslab.communication.ScienceLab.getFrequency(java.lang.String,<nulltype>)"], "Fixed commit": "0d95fc34900c0027f28ce6a092dac9d81becdd2d", "Url": "https://api.github.com/repos/abhinavraj23/pslab-android", "Date": "2018-07-13T15:50:59Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lyu.shopping.sysmanage.service.ProductService.updateProductHitsByProductId(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hitsFlag) { logger.info(((\"productId\u4e3a\uff1a\" + productId) + \"\u7684\u5546\u54c1\u7684\u70b9\u51fb\u91cf+1\u6210\u529f\uff01\")); }else { logger.info(((\"productId\u4e3a\uff1a\" + productId) + \"\u7684\u5546\u54c1\u7684\u70b9\u51fb\u91cf+1\u5931\u8d25\uff01\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4243/buggy-version/shopping.src.main.java.com.lyu.shopping.front.controller.IndexController.java", "BodyUseAPI": [], "Fixed commit": "6a45d9581bad1649ea147fd05c27bd35a5e329e9", "Url": "https://api.github.com/repos/MrQuJL/product-recommendation-system", "Date": "2018-04-06T03:09:21Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((de.ovgu.featureide.fm.attributes.base.IFeatureAttribute) (element)).isRecursive()) { getViewer().refresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7780/buggy-version/plugins.de.ovgu.featureide.attributes.src.de.ovgu.featureide.fm.attributes.view.editingsupports.FeatureAttributeNameEditingSupport.java", "BodyUseAPI": [], "Fixed commit": "594ca0f654e88c91fd37ed865e4d9bb94482e355", "Url": "https://api.github.com/repos/Subaro/BachelorThesis_Sprey_Sundermann", "Date": "2018-01-26T18:10:11Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((de.ovgu.featureide.fm.attributes.base.IFeatureAttribute) (element)).isRecursive()) { getViewer().refresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7780/buggy-version/plugins.de.ovgu.featureide.attributes.src.de.ovgu.featureide.fm.attributes.view.editingsupports.FeatureAttributeUnitEditingSupport.java", "BodyUseAPI": [], "Fixed commit": "594ca0f654e88c91fd37ed865e4d9bb94482e355", "Url": "https://api.github.com/repos/Subaro/BachelorThesis_Sprey_Sundermann", "Date": "2018-01-26T18:10:11Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((de.ovgu.featureide.fm.attributes.base.IFeatureAttribute) (element)).isRecursive()) { getViewer().refresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7780/buggy-version/plugins.de.ovgu.featureide.attributes.src.de.ovgu.featureide.fm.attributes.view.editingsupports.FeatureAttributeConfigureableEditingSupport.java", "BodyUseAPI": [], "Fixed commit": "594ca0f654e88c91fd37ed865e4d9bb94482e355", "Url": "https://api.github.com/repos/Subaro/BachelorThesis_Sprey_Sundermann", "Date": "2018-01-26T18:10:11Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((category.getId()) == null) || (category.getId().isEmpty())) { category.setId(java.util.UUID.randomUUID().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1721/buggy-version/OrganizerServer.src.network.communicators.CategoryEditedCommunicator.java", "BodyUseAPI": ["model.project.Category.setId(java.lang.String)"], "Fixed commit": "87830370e4a15fdfb6002a8f1c48ac1b1fd2a312", "Url": "https://api.github.com/repos/guerrero2016/DPOOserver", "Date": "2018-05-18T18:05:38Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((query.getDynamicPath()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4459/buggy-version/threadfix-ham.src.main.java.com.denimgroup.threadfix.framework.engine.full.GeneratorBasedEndpointDatabase.java", "BodyUseAPI": [], "Fixed commit": "21576d0dab15dcfc93fc2dd6ee614f5003c88709", "Url": "https://api.github.com/repos/secdec/astam-correlator", "Date": "2018-02-15T21:53:25Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (token.equals(GlobalContext.INTERNAL_TOKEN)) { return 999; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3057/buggy-version/src.RenNameService.src.main.java.org.sysu.renNameService.authorization.AuthTokenManager.java", "BodyUseAPI": [], "Fixed commit": "d9c04717e5618700c2a4f49f7d8901375de44c27", "Url": "https://api.github.com/repos/rinkako/RenWFMS", "Date": "2018-06-01T09:01:25Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(owners.isEmpty())) { owner = owners.get(0); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6975/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.shared.menu.JMenuUI.java", "BodyUseAPI": ["java.util.List<net.nikr.eve.jeveasset.gui.shared.menu.JMenuUI.Owner>.get(int)"], "Fixed commit": "d24aef0451380e8b34544cb7b012869373521e93", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2018-09-29T11:48:01Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nikr.eve.jeveasset.data.settings.Settings.get().getOwners().get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name == null) { name = net.nikr.eve.jeveasset.i18n.GuiShared.get().unknownOwner(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6975/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.shared.menu.JMenuUI.java", "BodyUseAPI": [], "Fixed commit": "d24aef0451380e8b34544cb7b012869373521e93", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2018-09-29T11:48:01Z"},
{"Line": "=>657", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scanCallback) != null) { bluetoothAdapter.stopLeScan(scanCallback); scanCallback = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6861/buggy-version/app.src.main.java.com.linka.lockapp.aos.module.pages.CircleView.java", "BodyUseAPI": [], "Fixed commit": "1149de743525a8d68d511efdfa9968ac9fe05053", "Url": "https://api.github.com/repos/gkurghinyan/LINKA-android-app", "Date": "2018-08-17T14:17:35Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(param.contains(\"$\"))) return param;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5665/buggy-version/threadfix-ham.src.main.java.com.denimgroup.threadfix.framework.impl.dotNetWebForm.WebFormsEndpointBase.java", "BodyUseAPI": [], "Fixed commit": "cc1c063438e157e5e0761e6ece208e5debcd3d34", "Url": "https://api.github.com/repos/secdec/astam-correlator", "Date": "2018-05-10T16:18:50Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.launchcode.Adulting.models.data.UserDao.findByUsername(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (foundUser == null) { redirectAttributes.addFlashAttribute(\"message\", \"No account found with that username.\"); return \"redirect:/login\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7154/buggy-version/src.main.java.org.launchcode.Adulting.controllers.UserController.java", "BodyUseAPI": [], "Fixed commit": "2d6757a755dcc68176888a740311b5ca2dfa5dd3", "Url": "https://api.github.com/repos/Daviderose/Adulting", "Date": "2018-06-05T18:29:19Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mortr.soloviev.mdc2018soloviev.ui.launcher.LaunchPagesFragment.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (context == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5272/buggy-version/app.src.main.java.com.mortr.soloviev.mdc2018soloviev.ui.launcher.LaunchPagesFragment.java", "BodyUseAPI": [], "Fixed commit": "d7c0e0a46bf15fa9931aa767bf8173ca4350a8ab", "Url": "https://api.github.com/repos/mortr/MDC2018Soloviev", "Date": "2018-02-20T09:22:05Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((chessBoard.get(7, 5)) == (Man.NONE)) && ((chessBoard.get(7, 6)) == (Man.NONE))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7982/buggy-version/src.backend.MoveGenerator.java", "BodyUseAPI": [], "Fixed commit": "9b3bc3c8ec0faf6ef65e732601ab81c7be7fecc3", "Url": "https://api.github.com/repos/daigangfan/ChessProject", "Date": "2018-06-15T02:18:44Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((notificationCenter) != null) { notificationCenter.removeNotificationForPerson(targetId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3910/buggy-version/src.main.java.seedu.address.model.ModelManager.java", "BodyUseAPI": [], "Fixed commit": "5106833f0dcb8a4bbf012f661a3ea35b8b45ab16", "Url": "https://api.github.com/repos/CS2103JAN2018-W15-B1/main", "Date": "2018-04-12T16:10:17Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x < 0) x = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1707/buggy-version/src.Frog.java", "BodyUseAPI": [], "Fixed commit": "fedffea7570e941287236eac3b192b01bd18df94", "Url": "https://api.github.com/repos/bingenGalartza/CrossTheRoad", "Date": "2018-10-14T22:49:08Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 0) throw new java.util.NoSuchElementException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6052/buggy-version/src.main.java.SortDemoData.java", "BodyUseAPI": [], "Fixed commit": "2139c4e9f6e5b2e22bebb08e956eba22b9d5561d", "Url": "https://api.github.com/repos/sselover/sselover_eaisaacs_review", "Date": "2018-02-18T21:39:51Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (detectedLanguageObj != null) { languageDetectedCode = detectedLanguageObj.get(\"code\"); languageDetectedName = detectedLanguageObj.get(\"name\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3759/buggy-version/languagetool-http-client.src.main.java.org.languagetool.remote.RemoteLanguageTool.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "dcdab92dc22d11f2a532cf69111da9a5c6720562", "Url": "https://api.github.com/repos/fabrichter/languagetool", "Date": "2018-08-15T12:39:56Z"},
{"Line": "=>543", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (messageItem.isInProgress()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/442/buggy-version/xabber.src.main.java.com.xabber.android.data.message.AbstractChat.java", "BodyUseAPI": [], "Fixed commit": "b44a455fbf12058373a24078f9dca017ef944526", "Url": "https://api.github.com/repos/redsolution/xabber-android", "Date": "2018-07-16T13:13:23Z"},
{"Line": "=>746", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.join(java.lang.String,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((com.megacrit.cardcrawl.helpers.EventHelper.getEvent(eventName)) == null) { basemod.DevConsole.couldNotParse(); basemod.DevConsole.log((eventName + \" is not an event ID\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9544/buggy-version/src.main.java.basemod.DevConsole.java", "BodyUseAPI": ["basemod.DevConsole.log(java.lang.String)"], "Fixed commit": "9403cba881428c3af9d0246e0a78d351c317eaa9", "Url": "https://api.github.com/repos/kiooeht/BaseMod", "Date": "2018-03-22T21:38:51Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((block.getRelative(BlockFace.UP).getType()) == (Material.SUGAR_CANE_BLOCK)) || ((block.getRelative(BlockFace.UP).getType()) == (Material.STAINED_GLASS))) { e.setCancelled(true); p.sendMessage(((ChatColor.RED) + \"You cannot farm the bottom Sugarcane.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8706/buggy-version/src.main.java.me.george.devpractice.Game.Listeners.World.Professions.Farming.Farming.java", "BodyUseAPI": [], "Fixed commit": "412060f6253df120d7128702caa00b966bd089c6", "Url": "https://api.github.com/repos/Lorm1/dpractice", "Date": "2018-03-12T15:26:56Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dgElement) instanceof com.nomagic.uml2.ext.magicdraw.classes.mdkernel.NamedElement) { title = ((com.nomagic.uml2.ext.magicdraw.classes.mdkernel.NamedElement) (dgElement)).getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7203/buggy-version/src.main.java.gov.nasa.jpl.mbee.mdk.model.TableStructure.java", "BodyUseAPI": [], "Fixed commit": "f6b380d1162ac77a79a238e5976d065a9ebfe54b", "Url": "https://api.github.com/repos/Open-MBEE/mdk", "Date": "2018-09-26T17:16:32Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (onePageShow != null) this.onePageShow = onePageShow;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6616/buggy-version/web.src.main.java.ljs.web.bean.PageBean.java", "BodyUseAPI": [], "Fixed commit": "f988bb621f425e6f2492938ff06aa05905f2b9e6", "Url": "https://api.github.com/repos/LiuJiangshan/LjsJavaLib", "Date": "2018-04-25T06:05:41Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serverRunnable != null) && ((serverRunnable.serverAnswer) != null)) { serverRunnable.serverAnswer = ioException.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1348/buggy-version/master.src.main.java.com.zostio.master.MasterServer.java", "BodyUseAPI": [], "Fixed commit": "36556d7209d100c235faa95b0280086f6eee1d3a", "Url": "https://api.github.com/repos/FiraInc/Master", "Date": "2018-10-04T14:59:11Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((serverRunnable != null) && ((serverRunnable.onError) != null)) { serverRunnable.activity.runOnUiThread(serverRunnable.onError); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1348/buggy-version/master.src.main.java.com.zostio.master.MasterServer.java", "BodyUseAPI": ["android.app.Activity.runOnUiThread(java.lang.Runnable)"], "Fixed commit": "36556d7209d100c235faa95b0280086f6eee1d3a", "Url": "https://api.github.com/repos/FiraInc/Master", "Date": "2018-10-04T14:59:11Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBinding) == null) { mCustomRemoteUrl = url; }else { mBinding.remoteURL.setText(url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6182/buggy-version/app.src.main.java.me.sheimi.sgit.dialogs.CloneDialog.java", "BodyUseAPI": [], "Fixed commit": "f31490b809114269f9b732d8e97acd2101d959bd", "Url": "https://api.github.com/repos/maks/MGit", "Date": "2018-04-21T07:30:45Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCustomRemoteUrl) != null) { mBinding.remoteURL.setText(mCustomRemoteUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6182/buggy-version/app.src.main.java.me.sheimi.sgit.dialogs.CloneDialog.java", "BodyUseAPI": [], "Fixed commit": "f31490b809114269f9b732d8e97acd2101d959bd", "Url": "https://api.github.com/repos/maks/MGit", "Date": "2018-04-21T07:30:45Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((photoView) == null) { text.setText(noPic); }else if ((photoView.getVisibility()) == (android.view.View.VISIBLE)) { if (text.getText().equals(\"\")) { while (i == (getCurrent())) { i = generator.nextInt(100); } text.setText(catResponses[i]); setCurrent(i); } }else { text.setText(noPic); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/124/buggy-version/app.src.main.java.com.example.mdtho.finalproject.RateActivity.java", "BodyUseAPI": [], "Fixed commit": "22d37174da830fab393a11961221b6f3482e8908", "Url": "https://api.github.com/repos/mdthompson7/finalProject", "Date": "2018-05-03T21:02:03Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == 0) { com.creativemd.littletiles.common.utils.grid.LittleGridContext.getMax().set(stack.getTagCompound()); count = ((int) ((value) / (com.creativemd.littletiles.common.utils.grid.LittleGridContext.getMax().minimumTileSize))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1047/buggy-version/src.main.java.com.creativemd.littletiles.common.ingredients.BlockIngredient.java", "BodyUseAPI": [], "Fixed commit": "544caf907ad5152ae7540c68fe53f8bcb5ea086d", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2018-06-02T07:49:49Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((totalCnt) == 0) { tvProgress.setText(\"0/0\"); }else { tvProgress.setText(((((curIndex) + 1) + \"/\") + (totalCnt))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3670/buggy-version/app.src.main.java.com.lxzh123.cadreexam.activity.ExamAnswerActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "159b082eba5a40bb30a9742ff9c87e1e814dde10", "Url": "https://api.github.com/repos/ljf1239848066/CadreExam", "Date": "2018-08-31T01:41:17Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["studentsservice.service.PracticeService.findById(appointStudentEntity.getPracticeId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (practiceEntity.getStatus().equals(\"Filled\")) { practiceEntity.setStatus(\"Available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/63/buggy-version/backend.src.main.java.studentsservice.service.DeletionService.java", "BodyUseAPI": ["studentsservice.entities.PracticeEntity.setStatus(java.lang.String)"], "Fixed commit": "c3f2299fc8aa62705087f3e1db8fcb83f24da71a", "Url": "https://api.github.com/repos/LittleMaverick/StudentsService", "Date": "2018-01-01T17:42:23Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.artolanggeng.purnamakertasindo.common.RadioGroup.indexOfChild(findViewById(rgSeks.getCheckedRadioButtonId()))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idx == (-1)) profile.setSeks(\"\"); else profile.setSeks(rb.getText().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2906/buggy-version/app.src.main.java.com.artolanggeng.purnamakertasindo.common.UserProfile.java", "BodyUseAPI": [], "Fixed commit": "9f3799f049f18da3b131f06bc4f7b375d43e341d", "Url": "https://api.github.com/repos/aignatd/WarehouseAndroid", "Date": "2018-01-05T04:51:15Z"},
{"Line": "=>1045", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_ret instanceof visitor.MIdentifier) { ((visitor.MIdentifier) (_ret)).setLine((-2)); ((visitor.MIdentifier) (_ret)).setColumn((-2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8910/buggy-version/lab2.visitor.Minijava2PigletVisitor.java", "BodyUseAPI": [], "Fixed commit": "6eef47cae91ca3af8d256ca387fe12a2dccb383e", "Url": "https://api.github.com/repos/headacheboy/minijava_compiler", "Date": "2018-04-19T15:30:36Z"},
{"Line": "=>6", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (operator.equals(\"+\")) { Assignment4.addition(tal1, tal2); }else if (operator.equals(\"-\")) { Assignment4.subtraction(tal1, tal2); }else if (operator.equals(\"*\")) { Assignment4.multiplication(tal1, tal2); }else if (operator.equals(\"/\")) { Assignment4.division(tal1, tal2); }else throw Exception;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/785/buggy-version/Assignment4.src.Assignment4.java", "BodyUseAPI": ["char.equals(java.lang.String)", "char.equals(java.lang.String)", "char.equals(java.lang.String)"], "Fixed commit": "83522b7e34feda88d0d7e6c1e2fe1a5070cd4e3d", "Url": "https://api.github.com/repos/anorangesky/IV1303", "Date": "2018-03-28T19:43:02Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (delimiters == null) { delimiterChars = null; }else { delimiterChars = new char[delimiters.length()]; for (int i = 0; i < (delimiters.length()); i++) { delimiterChars[i] = delimiters.charAt(i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5631/buggy-version/org.jtool.macrorecorder.src.org.jtool.macrorecorder.recorder.DocMacroCombinator.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.length()", "java.lang.String.charAt(int)"], "Fixed commit": "54adc586cc91b61e146dc3a34e3e3f7357d922dc", "Url": "https://api.github.com/repos/katsuhisamaruyama/ChangeMacroRecorder", "Date": "2018-10-26T14:51:22Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(seedu.address.model.account.Account.isValidAccountName(company))) { throw new seedu.address.commons.exceptions.IllegalValueException(seedu.address.model.account.Account.MESSAGE_ACCOUNT_CONSTRAINTS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8866/buggy-version/src.main.java.seedu.address.logic.parser.ParserUtil.java", "BodyUseAPI": [], "Fixed commit": "28760427a75339247c0688314fe465c55ea94b92", "Url": "https://api.github.com/repos/WoodyLau/main", "Date": "2018-04-11T10:42:28Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.sales.size()) != 0) return this.sales.get(((this.sales.size()) - 1)); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6550/buggy-version/sistema.src.salary.Commissioned.java", "BodyUseAPI": ["java.util.ArrayList<salary.Sales>.get(((this.sales.size()) - 1))", "java.util.ArrayList<salary.Sales>.size()"], "Fixed commit": "55071364200ceba9fd81c243d32d6af822ec4055", "Url": "https://api.github.com/repos/arqui456/sistema_folha_pagamento", "Date": "2018-02-17T02:43:51Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wsc.ListUtilities.findClientIDInList(int,inputModel.getClientID(),inputModel.getFullName(),java.lang.String,java.util.ArrayList<com.sforce.soap.enterprise.sobject.Contact>)", "wsc.UpdateRecordsInSalesForce.convertDateStringToCalendar(inputModel.getServiceDate())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((dupContact.getWorkshop_Grad_Date__c().compareTo(newGradCal)) < 0) { dupContact.setWorkshop_Grad_Date__c(newGradCal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/718/buggy-version/src.wsc.UpdateRecordsInSalesForce.java", "BodyUseAPI": ["com.sforce.soap.enterprise.sobject.Contact.setWorkshop_Grad_Date__c(java.util.Calendar)"], "Fixed commit": "f5fd12302f9e528ac9c77cef51ac7e79e6a121b0", "Url": "https://api.github.com/repos/wavis421/LeagueSalesforceSync", "Date": "2018-04-11T16:13:03Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(latLngList.isEmpty())) latLngList.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2389/buggy-version/app.src.main.java.ru.kozlov_victor.routeonmap.MainActivity.java", "BodyUseAPI": ["java.util.List<com.google.android.gms.maps.model.LatLng>.clear()"], "Fixed commit": "070f65dd7671101151da2c5788e1ac6105fdba10", "Url": "https://api.github.com/repos/KozlovVictor/RouteOnMap", "Date": "2018-10-30T04:48:11Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(threads.isEmpty())) { for (int i = 0; i < ((threads.size()) - 1); i++) { threads.get(i).fork(); } threads.get(((threads.size()) - 1)).compute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/938/buggy-version/src.main.BoggleBot.java", "BodyUseAPI": ["java.util.List<main.BoggleBot.BoggleBotTask>.size()", "main.BoggleBot.BoggleBotTask.compute()", "java.util.List<main.BoggleBot.BoggleBotTask>.get(int)", "main.BoggleBot.BoggleBotTask.fork()", "java.util.List<main.BoggleBot.BoggleBotTask>.get(int)", "java.util.List<main.BoggleBot.BoggleBotTask>.size()"], "Fixed commit": "72e05f7b7d8b6709edb0dfc715cba0d7f520ab01", "Url": "https://api.github.com/repos/danielmerken/BoggleBot", "Date": "2018-09-16T22:16:47Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (equityResearchFilter == null) { equityResearchFilter = new com.finvendor.server.researchreport.dto.filter.impl.EquityResearchFilter(); equityResearchFilter.setGeo(\"1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6821/buggy-version/src.main.java.com.finvendor.serverwebapi.resources.researchreport.impl.WebEquityResearchReportImpl.java", "BodyUseAPI": [], "Fixed commit": "6087b9a36d9fa79d2c97a3bd38f2da01043ba98e", "Url": "https://api.github.com/repos/manojkvel/finvendor", "Date": "2018-08-11T16:43:13Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bhavan.RNNavBarColor.RNNavBarColorModule.getCurrentActivity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (activity == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/5214/buggy-version/android.src.main.java.com.bhavan.RNNavBarColor.RNNavBarColorModule.java", "BodyUseAPI": [], "Fixed commit": "5f98a64f7a8592d7f177b8372701c449a52e4213", "Url": "https://api.github.com/repos/BhavanPatel/react-native-navbar-color", "Date": "2018-06-04T13:02:56Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (bodyTag.contains(\">\")) { java.lang.System.out.println(\"aaaaaaaaaaaaa\"); if (bodyTag.contains(\"class\")) { int endClassIdx = -1; java.lang.StringBuilder className = new java.lang.StringBuilder(); for (int j = (bodyTag.indexOf(\"class=\")) + (\"class=\".length()); j < (bodyTag.length()); j++) { if ((bodyTag.charAt(j)) == '\"') { break; }else { className.append(bodyTag.charAt(j)); } } java.lang.System.out.println((\"className = \" + className)); java.lang.String bodyTag2 = bodyTag.replace(className.toString(), classes); htmlContent = htmlContent.replace(bodyTag, bodyTag2); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7595/buggy-version/folioreader.src.main.java.com.folioreader.ui.base.HtmlUtil.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.length()", "java.lang.StringBuilder.append(char)"], "Fixed commit": "ae35681014d1f48b817e86dccb545a7643aaa9b5", "Url": "https://api.github.com/repos/RiverCityDenker/FolioReader-Android", "Date": "2018-07-19T13:03:25Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (channel.socket().isOutputShutdown()) { org.agrona.CloseHelper.quietClose(channel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1686/buggy-version/src.main.java.org.reaktivity.nukleus.tcp.internal.stream.ReadStream.java", "BodyUseAPI": ["org.agrona.CloseHelper.quietClose(java.nio.channels.SocketChannel)"], "Fixed commit": "22d2a6c557b20fc04061f7133d8a39bc4443a680", "Url": "https://api.github.com/repos/reaktivity/nukleus-tcp.java", "Date": "2018-05-17T19:09:25Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (channel.socket().isInputShutdown()) { org.agrona.CloseHelper.quietClose(channel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/1686/buggy-version/src.main.java.org.reaktivity.nukleus.tcp.internal.stream.WriteStream.java", "BodyUseAPI": ["org.agrona.CloseHelper.quietClose(java.nio.channels.SocketChannel)"], "Fixed commit": "22d2a6c557b20fc04061f7133d8a39bc4443a680", "Url": "https://api.github.com/repos/reaktivity/nukleus-tcp.java", "Date": "2018-05-17T19:09:25Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIntent().getExtras().getString(GlobalEnv.strNotTypeKey)) != null) { onNotification(getIntent().getExtras()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7912/buggy-version/app.src.main.java.kr.co.sology.DolgamzaNote.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9e34e22ee933d392d2aab14dd8868a322b65eaa9", "Url": "https://api.github.com/repos/RyanMin2018/DolgamzaNote", "Date": "2018-08-31T00:50:04Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Optional<java.lang.Character>.get()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((character.getTeam().getAdmin()) == null) { map.put(\"isAdmin\", false); }else { map.put(\"isAdmin\", java.lang.String.valueOf(character.getTeam().getAdmin().getId().equals(characterId))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9894/buggy-version/api.src.main.java.com.inther.controller.CharacterController.java", "BodyUseAPI": ["character.getTeam().getAdmin().getId().equals(java.lang.Long)", "java.util.LinkedHashMap<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)", "java.lang.String.valueOf(character.getTeam().getAdmin().getId().equals(characterId))", "java.lang.Character.getTeam()", "character.getTeam().getAdmin().getId()", "character.getTeam().getAdmin()"], "Fixed commit": "742d6fa1668463e57bbc341bb7d0183c519ddc39", "Url": "https://api.github.com/repos/isd-soft/motivision", "Date": "2018-07-10T17:38:33Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node instanceof cn.edu.ruc.iir.pard.executor.connector.node.TableScanNode) { tableScanNode = ((cn.edu.ruc.iir.pard.executor.connector.node.TableScanNode) (node)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7744/buggy-version/pard-main.src.main.java.cn.edu.ruc.iir.pard.scheduler.TaskScheduler.java", "BodyUseAPI": [], "Fixed commit": "1aacc77f8fcaa4e8ab534ad919f7d023bab120f8", "Url": "https://api.github.com/repos/dbiir/pard", "Date": "2018-01-12T04:09:34Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resetZoom) { image.resetZoom(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9162/buggy-version/app.src.main.java.com.ortiz.touchdemo.ChangeSizeExampleActivity.java", "BodyUseAPI": [], "Fixed commit": "79b7e6e31e433968f69c8b71f30312e83825d7a3", "Url": "https://api.github.com/repos/Ruberik/TouchImageView", "Date": "2018-10-30T19:16:48Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resetZoom) { image.setZoom(java.lang.Math.max(widthRatio, heightRatio)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9162/buggy-version/app.src.main.java.com.ortiz.touchdemo.ChangeSizeExampleActivity.java", "BodyUseAPI": [], "Fixed commit": "79b7e6e31e433968f69c8b71f30312e83825d7a3", "Url": "https://api.github.com/repos/Ruberik/TouchImageView", "Date": "2018-10-30T19:16:48Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resetZoom) { image.setZoom(java.lang.Math.min(widthRatio, heightRatio)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/9162/buggy-version/app.src.main.java.com.ortiz.touchdemo.ChangeSizeExampleActivity.java", "BodyUseAPI": [], "Fixed commit": "79b7e6e31e433968f69c8b71f30312e83825d7a3", "Url": "https://api.github.com/repos/Ruberik/TouchImageView", "Date": "2018-10-30T19:16:48Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getDisabled(0)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/8449/buggy-version/src.main.java.com.mjr.planetprogression.tileEntities.TileEntityTelescope.java", "BodyUseAPI": [], "Fixed commit": "f2178b9230e30821e7e33f8b1545730f81174f76", "Url": "https://api.github.com/repos/MJRLegends/Planet-Progression", "Date": "2018-06-15T23:34:43Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msg.size()) >= 3) { obj = ((msg.get(2)) != null) ? msg.get(2).toString() : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3730/buggy-version/netflux.src.main.java.org.xwiki.contrib.realtime.internal.NetfluxBackend.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.ArrayList<java.lang.Object>.get(int)", "java.util.ArrayList<java.lang.Object>.get(int)"], "Fixed commit": "fcd17a23418c09c9c14efff9807153c700ebdf00", "Url": "https://api.github.com/repos/xwiki-contrib/realtime-backend", "Date": "2018-10-10T16:20:42Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.darwinspl.reconfigurator.client.hyvarrec.DwAnalysesClient.sendMessageToHyVarRec(java.lang.String,java.net.URI,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (hyvarrecAnswerString.startsWith(\"{\\\"error\")) { java.lang.System.err.println(\"HyVarRec encountered an error:\"); java.lang.System.err.println(hyvarrecAnswerString); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/2307/buggy-version/plugins.de.darwinspl.reconfigurator.client.src.de.darwinspl.reconfigurator.client.hyvarrec.DwAnalysesClient.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "436f660699d092aeba07ccde4b72533b79801f44", "Url": "https://api.github.com/repos/DarwinSPL/DarwinSPL", "Date": "2018-03-15T13:35:12Z"},
{"Line": "=>1855", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gradients.containsKey(varName)) { return gradients.get(varName); }else if ((sameDiffFunctionInstances.containsKey(\"grad\")) && (sameDiffFunctionInstances.get(\"grad\").gradients.containsKey(varName))) { return sameDiffFunctionInstances.get(\"grad\").gradients.get(varName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/6591/buggy-version/nd4j.nd4j-backends.nd4j-api-parent.nd4j-api.src.main.java.org.nd4j.autodiff.samediff.SameDiff.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.nd4j.autodiff.samediff.SDVariable>.containsKey(java.lang.String)", "java.util.Map<java.lang.String, org.nd4j.autodiff.samediff.SDVariable>.get(java.lang.String)", "java.util.Map<java.lang.String, org.nd4j.autodiff.samediff.SDVariable>.get(java.lang.String)"], "Fixed commit": "02e5223f6e3b3593e514cd74d168ba9bbc2a0089", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2018-06-26T12:21:21Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (condition != null) { org.talend.hadoop.distribution.condition.ComponentCondition c = new org.talend.hadoop.distribution.condition.SimpleComponentCondition(new org.talend.hadoop.distribution.condition.RawExpression(condition)); cc16 = new org.talend.hadoop.distribution.condition.MultiComponentCondition(cc16, org.talend.hadoop.distribution.condition.BooleanOperator.AND, c); cc21 = new org.talend.hadoop.distribution.condition.MultiComponentCondition(cc21, org.talend.hadoop.distribution.condition.BooleanOperator.AND, c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/4545/buggy-version/main.plugins.org.talend.hadoop.distribution.cdh5100.src.main.java.org.talend.hadoop.distribution.cdh5100.modulegroup.node.sparkbatch.CDH5100GraphFramesNodeModuleGroup.java", "BodyUseAPI": [], "Fixed commit": "fa1fd93d37fb1e96b05b05df8610167d3449f757", "Url": "https://api.github.com/repos/Talend/tbd-studio-se", "Date": "2018-01-09T17:28:10Z"},
{"Line": "=>986", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object instanceof un.unece.uncefact.data.standard.unqualifieddatatype._20.TextType) { for (un.unece.uncefact.data.standard.unqualifieddatatype._20.TextType id : ((java.util.List<un.unece.uncefact.data.standard.unqualifieddatatype._20.TextType>) (collection))) if (org.apache.commons.lang3.StringUtils.isNotEmpty(id.getValue())) { hasOnlyEmptyElements = false; } }else { for (java.lang.Object obj : collection) if (!(allFieldsAreNullOrEmptyList(obj))) { hasOnlyEmptyElements = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/3497/buggy-version/service.src.main.java.eu.europa.ec.fisheries.uvms.rules.service.business.AbstractFact.java", "BodyUseAPI": [], "Fixed commit": "f8cc7215d97dea12975f135d11011472bcc81125", "Url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP", "Date": "2018-04-24T12:09:07Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i + 1) == (matches.length)) intervals.add(new IntervalGraphBuilder.Interval(start, end));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V145/7679/buggy-version/src.IntervalGraphBuilder.java", "BodyUseAPI": [], "Fixed commit": "e6f3c38ff2ebe0531b944873cdd44712d194fed3", "Url": "https://api.github.com/repos/HunterNacho/sparql-versioning", "Date": "2018-09-27T18:31:38Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(cursor.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(name))) { contacts.add(new com.ndhunju.dailyjournal.service.ImportContacts.Contact(id, name, hasPhoneNum)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2082/buggy-version/app.src.main.java.com.ndhunju.dailyjournal.service.ImportContacts.java", "BodyUseAPI": ["java.util.List<com.ndhunju.dailyjournal.service.ImportContacts.Contact>.add(com.ndhunju.dailyjournal.service.ImportContacts.Contact)"], "Fixed commit": "4fdb9e0a619cfec9ee6db71c177fbdf03950bed5", "Url": "https://api.github.com/repos/ndhunju/dailyJournal", "Date": "2018-02-05T15:29:42Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orange.oss.cloudfoundry.broker.opsautomation.ondemandbroker.pipeline.StructureGeneratorHelper.generatePath(java.nio.file.Path,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(com.orange.oss.cloudfoundry.broker.opsautomation.ondemandbroker.pipeline.StructureGeneratorHelper.isMissingResource(absoluteSourceFile))) { java.nio.file.Files.createSymbolicLink(targetFile, relativeSourceFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/544/buggy-version/cf-ops-automation-broker-core.src.main.java.com.orange.oss.cloudfoundry.broker.opsautomation.ondemandbroker.pipeline.StructureGeneratorHelper.java", "BodyUseAPI": [], "Fixed commit": "ad1912289f206ebe2bf32f15e92fb7b602bfcc69", "Url": "https://api.github.com/repos/orange-cloudfoundry/cf-ops-automation-broker", "Date": "2018-06-28T07:12:52Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getParent(org.jetbrains.mps.openapi.model.SNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.isInstanceOf(parent, jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory.getConcept(-935030926396207931L, -6610165693999523818L, 1068580123165L, \"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration\")))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2282/buggy-version/languages.baseLanguage.jdk8.languages.jdk8.source_gen.jetbrains.mps.baseLanguage.jdk8.typesystem.check_DefaultMethodIsNotAbstract_NonTypesystemRule.java", "BodyUseAPI": [], "Fixed commit": "4d79edf09a019291abf0e2b19baa758e419888dc", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2018-10-25T18:18:33Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["topicInput.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(message.equals(\"\"))) { new research.dresden.htw.moderationapp.tasks.SendTopicTask(research.dresden.htw.moderationapp.activities.discussion.DiscussionControlCenterActivity.viewModel.getSocket(), message).execute(); android.widget.Toast.makeText(getApplicationContext(), ((\"Topic with Message: \" + message) + \" sendet...\"), Toast.LENGTH_LONG).show(); topicInput.setText(\"\"); }else { android.widget.Toast.makeText(getApplicationContext(), \"Bitte geben Sie ein Thema \", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2721/buggy-version/app.src.main.java.research.dresden.htw.moderationapp.activities.discussion.DiscussionControlCenterActivity.java", "BodyUseAPI": ["research.dresden.htw.moderationapp.tasks.SendTopicTask.execute()", "android.widget.Toast.makeText(getApplicationContext(),java.lang.String,Toast.LENGTH_LONG)", "android.widget.Toast.makeText(getApplicationContext(), ((\"Topic with Message: \" + message) + \" sendet...\"), Toast.LENGTH_LONG).show()"], "Fixed commit": "99d844ddcb2896590b16b3396e4bcd8b627f7236", "Url": "https://api.github.com/repos/AIIucard/ModerationApp", "Date": "2018-06-14T17:17:03Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((execution) == null) { throw new java.lang.IllegalStateException(\"Workflow has not started.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4290/buggy-version/src.main.java.com.uber.cadence.internal.sync.ChildWorkflowStubImpl.java", "BodyUseAPI": [], "Fixed commit": "13c936b19c4ac3ab8c6ed2bef96175c33e06b868", "Url": "https://api.github.com/repos/mfateev/uber-java-cadence-client", "Date": "2018-04-25T22:59:44Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type != null) && (!(type.equals(\"\")))) { this.type = type; }else { this.type = \"any\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8499/buggy-version/src.com.suming.plugin.bean.BasePropType.java", "BodyUseAPI": [], "Fixed commit": "1594cfe47cc34b71d3c945da7f0dc83b802af04d", "Url": "https://api.github.com/repos/dpzxsm/ReactPropTypes-Plugin", "Date": "2018-03-01T03:35:42Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["exchange.getRequest().getCookies().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cookies == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5171/buggy-version/spring-cloud-gateway-core.src.main.java.org.springframework.cloud.gateway.handler.predicate.CookieRoutePredicateFactory.java", "BodyUseAPI": [], "Fixed commit": "f13e98fd63a4585df798e6ab18d4cadf128b122d", "Url": "https://api.github.com/repos/anonymousXrandom/spring-cloud-gateway", "Date": "2018-03-15T20:24:10Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBitmapLogo) == null) { canvas.restore(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9679/buggy-version/app.src.main.java.com.haozhang.lib.AnimatedRecordingView.java", "BodyUseAPI": [], "Fixed commit": "db9023456a3a6a0830703f7461f0265f3a269a4b", "Url": "https://api.github.com/repos/naz013/Reminder", "Date": "2018-03-04T09:20:34Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(author.next())) && (!(first_name.equals(\"Charles\")))) && (!(last_name.equals(\"Dickens\")))) { query = connection.prepareStatement(\"INSERT INTO Author (first_name, last_name) VALUES (?, ?)\"); query.setString(1, first_name); query.setString(2, last_name); query.executeUpdate(); if (query != null) query.close(); return true; }else { throwError(\"Author already exists!\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2725/buggy-version/src.com.dave.chan.LibrarySystemModel.java", "BodyUseAPI": ["java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.PreparedStatement.setString(int,java.lang.String)"], "Fixed commit": "4143ec6a653afdf662bb618c7503628fbcccb179", "Url": "https://api.github.com/repos/evanBurg/LibrarySystem", "Date": "2018-08-07T00:58:31Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (line == null) ret_val = false; else mrrd = date_time_format.parse(line);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3821/buggy-version/src.main.java.bgs.geophys.library.Gdas.GdasCollect.Status.MRRDFile.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "a115369d3664aeacfdf88d9114a83454d4d4bf0c", "Url": "https://api.github.com/repos/INTERMAGNET/lib_bgs", "Date": "2018-06-06T17:00:21Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openkilda.messaging.info.event.IslInfoData.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((path.size()) > 1) { org.openkilda.messaging.info.event.PathNode destinationPathNode = path.get(1); org.openkilda.model.Switch destinationSwitch = new org.openkilda.model.Switch(); destinationSwitch.setSwitchId(SwitchIdMapper.INSTANCE.map(destinationPathNode.getSwitchId())); isl.setDestSwitch(destinationSwitch); isl.setDestPort(destinationPathNode.getPortNo()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1989/buggy-version/services.wfm.src.main.java.org.openkilda.wfm.share.mappers.IslMapper.java", "BodyUseAPI": ["java.util.List<org.openkilda.messaging.info.event.PathNode>.get(int)"], "Fixed commit": "240a423ab01a2b86916466f46320cf81184b20d7", "Url": "https://api.github.com/repos/telstra/open-kilda", "Date": "2018-10-31T09:03:54Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openkilda.messaging.info.event.IslInfoData.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(path.isEmpty())) { org.openkilda.messaging.info.event.PathNode sourcePathNode = path.get(0); org.openkilda.model.Switch sourceSwitch = new org.openkilda.model.Switch(); sourceSwitch.setSwitchId(SwitchIdMapper.INSTANCE.map(sourcePathNode.getSwitchId())); isl.setSrcSwitch(sourceSwitch); isl.setSrcPort(sourcePathNode.getPortNo()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1989/buggy-version/services.wfm.src.main.java.org.openkilda.wfm.share.mappers.IslMapper.java", "BodyUseAPI": ["java.util.List<org.openkilda.messaging.info.event.PathNode>.get(int)"], "Fixed commit": "240a423ab01a2b86916466f46320cf81184b20d7", "Url": "https://api.github.com/repos/telstra/open-kilda", "Date": "2018-10-31T09:03:54Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.bcel.generic.ReturnInstruction.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type instanceof org.apache.bcel.generic.BasicType) { newInsns.append(new org.apache.bcel.generic.INVOKESTATIC(basicTypeSupporter.getValueOfMethodIdx(((org.apache.bcel.generic.BasicType) (type)), constPool))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3919/buggy-version/microbat_instrumentator.src.main.microbat.instrumentation.trace.TraceInstrumenter.java", "BodyUseAPI": [], "Fixed commit": "08517f5f4c5b74a23a72888afbf2cd41e8a32e23", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2018-02-12T09:37:39Z"},
{"Line": "=>886", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((info.getElementType()) instanceof org.apache.bcel.generic.BasicType) { newInsns.append(new org.apache.bcel.generic.INVOKESTATIC(basicTypeSupporter.getValueOfMethodIdx(((org.apache.bcel.generic.BasicType) (info.getElementType())), constPool))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3919/buggy-version/microbat_instrumentator.src.main.microbat.instrumentation.trace.TraceInstrumenter.java", "BodyUseAPI": ["org.apache.bcel.generic.InstructionList.append(org.apache.bcel.generic.INVOKESTATIC)", "microbat.instrumentation.trace.BasicTypeSupporter.getValueOfMethodIdx(((org.apache.bcel.generic.BasicType) (info.getElementType())),org.apache.bcel.generic.ConstantPoolGen)", "microbat.instrumentation.trace.model.ArrayInstructionInfo.getElementType()"], "Fixed commit": "08517f5f4c5b74a23a72888afbf2cd41e8a32e23", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2018-02-12T09:37:39Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((TitleDomain.readerHashMap.get(e.getPlayer().getName())) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3690/buggy-version/src.main.java.com.locydragon.td.listeners.ThreadLoadListener.java", "BodyUseAPI": [], "Fixed commit": "a2e3ebc1bc18f02af5832607558de7249d4465e9", "Url": "https://api.github.com/repos/LocyDragon/TitleDomain", "Date": "2018-08-29T01:34:24Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((TitleDomain.readerHashMap.get(e.getPlayer().getName())) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3690/buggy-version/src.main.java.com.locydragon.td.listeners.ThreadLoadListener.java", "BodyUseAPI": [], "Fixed commit": "a2e3ebc1bc18f02af5832607558de7249d4465e9", "Url": "https://api.github.com/repos/LocyDragon/TitleDomain", "Date": "2018-08-29T01:34:24Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sourceLanguage != \"\") { entity.add(\"lang\", ((sourceLanguage + \"-\") + destLanguage)); }else { entity.add(\"lang\", destLanguage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9808/buggy-version/nifi-nar-bundles.nifi-language-translation-bundle.nifi-yandex-processors.src.main.java.org.apache.nifi.processors.yandex.YandexTranslate.java", "BodyUseAPI": ["javax.ws.rs.core.MultivaluedHashMap.add(java.lang.String,java.lang.String)"], "Fixed commit": "3d797dcbfb96219ecc651eb505c6b3f49f9e9249", "Url": "https://api.github.com/repos/veteranbv/nifi", "Date": "2018-05-17T16:47:19Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeAndPlace.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8708/buggy-version/app.src.main.java.com.idealclover.njuclassschedule.utils.spec.ParseCourse.java", "BodyUseAPI": [], "Fixed commit": "00475a60df12967a3241b8d6d677c294e8af5844", "Url": "https://api.github.com/repos/idealclover/NJU-Class-Shedule-Android", "Date": "2018-09-12T07:37:12Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(claim.getClaimData().isClaimantRepresented())) { java.lang.String defendantId = ((claim.getDefendantId()) != null) ? claim.getDefendantId() : claim.getLetterHolderId(); grantAccess(ccdId.toString(), defendantId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5696/buggy-version/ccd-claim-migration.src.main.java.uk.gov.hmcts.cmc.ccd.migration.ccd.services.MigrateCoreCaseDataService.java", "BodyUseAPI": ["uk.gov.hmcts.cmc.domain.models.Claim.getDefendantId()", "uk.gov.hmcts.cmc.domain.models.Claim.getDefendantId()", "uk.gov.hmcts.cmc.domain.models.Claim.getLetterHolderId()"], "Fixed commit": "9a9bd4c496d5d7357ac8a18899d1f0f946d7672e", "Url": "https://api.github.com/repos/hmcts/cmc-claim-store", "Date": "2018-02-26T13:52:24Z"},
{"Line": "=>2661", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sunbird.common.request.Request.getRequest()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(((java.lang.String) (requestMap.get(JsonKey.ORGANISATION_ID))))) { java.util.Map<java.lang.String, java.lang.Object> map = org.sunbird.common.ElasticSearchUtil.getDataByIdentifier(ProjectUtil.EsIndex.sunbird.getIndexName(), ProjectUtil.EsType.organisation.getTypeName(), ((java.lang.String) (requestMap.get(JsonKey.ORGANISATION_ID)))); if (org.apache.commons.collections.MapUtils.isNotEmpty(map)) { requestMap.put(JsonKey.HASHTAGID, map.get(JsonKey.HASHTAGID)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6158/buggy-version/actors.user.src.main.java.org.sunbird.user.actors.UserManagementActor.java", "BodyUseAPI": ["org.sunbird.common.ElasticSearchUtil.getDataByIdentifier(ProjectUtil.EsIndex.sunbird.getIndexName(),ProjectUtil.EsType.organisation.getTypeName(),java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.get(JsonKey.ORGANISATION_ID)", "java.util.Map<java.lang.String, java.lang.Object>.put(JsonKey.HASHTAGID,java.lang.Object)"], "Fixed commit": "dc3e2583e2c85b8ea489ec3aa1a5c1a84bb31041", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-06-29T05:35:25Z"},
{"Line": "=>2749", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sunbird.common.request.Request.getRequest()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(((java.lang.String) (requestMap.get(JsonKey.HASHTAGID))))) { tempMap.put(JsonKey.HASHTAGID, requestMap.get(JsonKey.HASHTAGID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6158/buggy-version/actors.user.src.main.java.org.sunbird.user.actors.UserManagementActor.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(JsonKey.HASHTAGID,java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.get(JsonKey.HASHTAGID)"], "Fixed commit": "dc3e2583e2c85b8ea489ec3aa1a5c1a84bb31041", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-06-29T05:35:25Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m_controller.decryptFiles.isSelected()) { m_controller.addHint.setText(getDisplayString(\"showHintLabel\")); }else { m_controller.addHint.setText(getDisplayString(\"addHintLabel\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5552/buggy-version/src.gui.View.java", "BodyUseAPI": ["m_controller.addHint.setText(java.lang.String)", "m_controller.addHint.setText(java.lang.String)"], "Fixed commit": "060c12f44d36b2921f32eb70dc4c1ddf99b76dcb", "Url": "https://api.github.com/repos/dart1277/software_eng_project", "Date": "2018-04-24T19:22:15Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entry.getValue().isDoSingleLogout()) { cacheEntry.getSessionInfoData().removeServiceProvider(entry.getKey()); if (org.wso2.carbon.identity.sso.saml.session.SSOSessionPersistenceManager.log.isDebugEnabled()) { org.wso2.carbon.identity.sso.saml.session.SSOSessionPersistenceManager.log.debug((\"Removed SLO supported service provider from session info data with name \" + (entry.getKey()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3285/buggy-version/components.org.wso2.carbon.identity.sso.saml.src.main.java.org.wso2.carbon.identity.sso.saml.session.SSOSessionPersistenceManager.java", "BodyUseAPI": ["cacheEntry.getSessionInfoData().removeServiceProvider(entry.getKey())", "java.util.Map.Entry<java.lang.String, org.wso2.carbon.identity.core.model.SAMLSSOServiceProviderDO>.getKey()", "org.apache.commons.logging.Log.debug((\"Removed SLO supported service provider from session info data  with name \" + (entry.getKey())))", "java.util.Map.Entry<java.lang.String, org.wso2.carbon.identity.core.model.SAMLSSOServiceProviderDO>.getKey()"], "Fixed commit": "7b7b44cd792069b6c79357ae34757eb161d91197", "Url": "https://api.github.com/repos/sachiniWettasinghe/identity-inbound-auth-saml", "Date": "2018-10-11T12:07:20Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ViewFlipper.getDisplayedChild()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((position + 1) >= (org.xwiki.android.sync.auth.AuthenticatorActivity.orderOfFlippers.size())) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/549/buggy-version/app.src.main.java.org.xwiki.android.sync.auth.AuthenticatorActivity.java", "BodyUseAPI": [], "Fixed commit": "a760f31bb4c63e1bfee2a83980f8935c3ec54384", "Url": "https://api.github.com/repos/xwiki-contrib/android-authenticator", "Date": "2018-07-09T11:16:38Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mw == 4160) && (mh == 3120)) { mw /= 8; mh /= 8; }else { while ((mw > 520) || (mh > 390)) { mw = ((int) ((mw * 1.0) / 1.1)); mh = ((int) ((mh * 1.0) / 1.1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5906/buggy-version/Jzfp.src.com.my.AutoMain.java", "BodyUseAPI": [], "Fixed commit": "11abc677f848fc521024cc8d3bdfde83afc10655", "Url": "https://api.github.com/repos/a-eagle/jzfp", "Date": "2018-10-24T11:29:18Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (w > h) { wh[0] = mw; wh[1] = mh; }else { wh[0] = mh; wh[1] = mw; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5906/buggy-version/Jzfp.src.com.my.AutoMain.java", "BodyUseAPI": [], "Fixed commit": "11abc677f848fc521024cc8d3bdfde83afc10655", "Url": "https://api.github.com/repos/a-eagle/jzfp", "Date": "2018-10-24T11:29:18Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((targetStream) != null) { targetStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6588/buggy-version/Ananthu.second_week.file_handling.CustomCharStream.java", "BodyUseAPI": [], "Fixed commit": "154f1ac023e0a76ec7713b9bf31b634a38581f51", "Url": "https://api.github.com/repos/LonelyCpp/training_assignment", "Date": "2018-08-16T09:09:16Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentPath.get(((currentPath.size()) - 1)).pathSegPoints.isEmpty()) currentPath.remove(((currentPath.size()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4079/buggy-version/src.GUIStuff.PathGUITool.java", "BodyUseAPI": ["java.util.ArrayList<GUIStuff.PathGUITool.PathSegment>.size()", "java.util.ArrayList<GUIStuff.PathGUITool.PathSegment>.remove(int)"], "Fixed commit": "e678a2fa9348d387755a181cfee7764cbf0a1ab6", "Url": "https://api.github.com/repos/AaronPinto/PathGUI", "Date": "2018-01-03T05:39:03Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentPath.get(((currentPath.size()) - 1)).isDrawn) { java.lang.System.out.println(\"its actually ya boi\"); currentPath.get(((currentPath.size()) - 2)).clickPoints.add(new GUIStuff.PathGUITool.Point(x, y, false)); GUIStuff.PathGUITool.selectedPath = new GUIStuff.MPGen2D(convertPointArray(currentPath.get(((currentPath.size()) - 2)).clickPoints), 5.0, 0.02, 3.867227572441874); GUIStuff.PathGUITool.selectedPath.calculate(); if ((GUIStuff.PathGUITool.selectedPath.smoothPath) != null) currentPath.get(((currentPath.size()) - 2)).pathSegPoints = convert2DArray(GUIStuff.PathGUITool.selectedPath.smoothPath); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4079/buggy-version/src.GUIStuff.PathGUITool.java", "BodyUseAPI": ["java.util.ArrayList<GUIStuff.PathGUITool.PathSegment>.get(int)", "java.util.ArrayList<GUIStuff.PathGUITool.PathSegment>.get(int)", "java.util.ArrayList<GUIStuff.PathGUITool.PathSegment>.size()", "java.util.ArrayList<GUIStuff.PathGUITool.PathSegment>.get(int)", "java.util.ArrayList<GUIStuff.PathGUITool.PathSegment>.size()", "GUIStuff.PathGUITool.MouseListener.convertPointArray(java.util.ArrayList<GUIStuff.PathGUITool.Point>)", "java.util.ArrayList<GUIStuff.PathGUITool.PathSegment>.size()", "java.util.ArrayList<GUIStuff.PathGUITool.Point>.add(GUIStuff.PathGUITool.Point)"], "Fixed commit": "e678a2fa9348d387755a181cfee7764cbf0a1ab6", "Url": "https://api.github.com/repos/AaronPinto/PathGUI", "Date": "2018-01-03T05:39:03Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { com.google.android.gms.maps.MapsInitializer.initialize(getActivity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/670/buggy-version/app.src.main.java.io.gumil.cities.view.map.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "a354131e4545f13f57fdb479a8341ae8d61d05a4", "Url": "https://api.github.com/repos/gumil/Cities", "Date": "2018-02-21T16:42:04Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["numberButtonView.getTag().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n.equals(\".\")) { numberInput = \"0.\"; }else { numberInput = n; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6614/buggy-version/app.src.main.java.com.developingdaan.calcyoulater.Calcyoulater.java", "BodyUseAPI": [], "Fixed commit": "1a23c13bb0e04240bb5924bb5bf9fb14d2fd7ab9", "Url": "https://api.github.com/repos/daanschutte/calculator", "Date": "2018-03-07T19:54:49Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActionMode) != null) { mActionMode.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3980/buggy-version/android.KeelinkApp.src.main.java.it.andreacioni.kp2a.plugin.keelink.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ed87c0e3a722ac845ba764fd47c4ea2c4e3f32ef", "Url": "https://api.github.com/repos/andreacioni/KeeLink", "Date": "2018-01-22T18:12:15Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(userDTO.getAddresses().isEmpty())) updatedUser.setUserAddresses(mapUserAddresses(userDTO.getAddresses(), updatedUser));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1169/buggy-version/src.main.java.com.hootboard.assignment.user.UserServiceImpl.java", "BodyUseAPI": ["com.hootboard.assignment.model.User.setUserAddresses(java.util.Set<com.hootboard.assignment.model.UserAddress>)", "com.hootboard.assignment.user.UserServiceImpl.mapUserAddresses(userDTO.getAddresses(),com.hootboard.assignment.model.User)", "com.hootboard.assignment.dto.UserDTO.getAddresses()"], "Fixed commit": "7b1ba208de6d3884453ffa9c486def20cecc081b", "Url": "https://api.github.com/repos/MrSagarMH13/HootBoard", "Date": "2018-03-18T07:51:25Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(userDTO.getEmails().isEmpty())) updatedUser.setUserEmails(mapEmails(userDTO.getEmails(), updatedUser));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1169/buggy-version/src.main.java.com.hootboard.assignment.user.UserServiceImpl.java", "BodyUseAPI": ["com.hootboard.assignment.model.User.setUserEmails(java.util.Set<com.hootboard.assignment.model.UserEmail>)", "com.hootboard.assignment.user.UserServiceImpl.mapEmails(userDTO.getEmails(),com.hootboard.assignment.model.User)", "com.hootboard.assignment.dto.UserDTO.getEmails()"], "Fixed commit": "7b1ba208de6d3884453ffa9c486def20cecc081b", "Url": "https://api.github.com/repos/MrSagarMH13/HootBoard", "Date": "2018-03-18T07:51:25Z"},
{"Line": "=>603", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.maven.model.Dependency.getGroupId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((\"org.talend.libraries\".equals(dependencyGroupId)) || (dependencyGroupId.startsWith(\"org.talend\"))) { addItem(talendlibIncludes, coordinate, SEPARATOR); talendLibCoordinate.add(coordinate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4293/buggy-version/main.plugins.org.talend.designer.maven.src.main.java.org.talend.designer.maven.tools.creator.CreateMavenJobPom.java", "BodyUseAPI": [], "Fixed commit": "dc7f95d33d34477bf10732c5906f6f42eb7df4ca", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2018-01-18T13:19:58Z"},
{"Line": "=>1236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.hibernate.Hibernate.isInitialized(feat))) { uk.ac.ebi.intact.jami.utils.IntactUtils.initialiseModelledFeature(((uk.ac.ebi.intact.jami.utils.IntactModelledFeature) (feat))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2971/buggy-version/src.main.java.uk.ac.ebi.intact.jami.utils.IntactUtils.java", "BodyUseAPI": [], "Fixed commit": "329afe31a956d8056d572b75198b29cc909b318d", "Url": "https://api.github.com/repos/EBI-IntAct/intact-jami", "Date": "2018-05-02T16:08:41Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["miniventure.game.item.Hands.getUsableItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(heldItem.isUsed())) changeStat(miniventure.game.world.entity.mob.Player.Stat.Stamina, (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8282/buggy-version/core.src.miniventure.game.world.entity.mob.Player.java", "BodyUseAPI": [], "Fixed commit": "f2c75d2d0c2f3f2e930943b8f29a642dbf99c1c8", "Url": "https://api.github.com/repos/chrisj42/miniventure", "Date": "2018-02-25T01:04:44Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["miniventure.game.item.Hands.getUsableItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(heldItem.isUsed())) changeStat(miniventure.game.world.entity.mob.Player.Stat.Stamina, (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8282/buggy-version/core.src.miniventure.game.world.entity.mob.Player.java", "BodyUseAPI": [], "Fixed commit": "f2c75d2d0c2f3f2e930943b8f29a642dbf99c1c8", "Url": "https://api.github.com/repos/chrisj42/miniventure", "Date": "2018-02-25T01:04:44Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["miniventure.game.world.WorldObject.interactWith(miniventure.game.world.entity.mob.Player,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (success) use();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8282/buggy-version/core.src.miniventure.game.item.Hands.java", "BodyUseAPI": [], "Fixed commit": "f2c75d2d0c2f3f2e930943b8f29a642dbf99c1c8", "Url": "https://api.github.com/repos/chrisj42/miniventure", "Date": "2018-02-25T01:04:44Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["miniventure.game.world.WorldObject.attackedBy(miniventure.game.world.entity.mob.Player,<nulltype>,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (success) use();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8282/buggy-version/core.src.miniventure.game.item.Hands.java", "BodyUseAPI": [], "Fixed commit": "f2c75d2d0c2f3f2e930943b8f29a642dbf99c1c8", "Url": "https://api.github.com/repos/chrisj42/miniventure", "Date": "2018-02-25T01:04:44Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cam72cam.immersiverailroading.proxy.ClientResourceReloadListener.skipFirst) { cam72cam.immersiverailroading.proxy.ClientResourceReloadListener.skipFirst = false; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3840/buggy-version/src.main.java.cam72cam.immersiverailroading.proxy.ClientResourceReloadListener.java", "BodyUseAPI": [], "Fixed commit": "703c0f82400238d39d51fe56bbaa310b5e66f2c0", "Url": "https://api.github.com/repos/cam72cam/ImmersiveRailroading", "Date": "2018-03-26T02:08:38Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (timer != null) { _timerExpiry = timer.getEndTime(); setTimerActive(); _timerStarted = true; if (pmgr != null) { java.lang.Object o = pmgr.getSession().get(org.yawlfoundation.yawl.engine.time.YWorkItemTimer.class, timer.getOwnerID()); if (o == null) { pmgr.storeObject(timer); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9912/buggy-version/src.org.yawlfoundation.yawl.engine.YWorkItem.java", "BodyUseAPI": ["org.yawlfoundation.yawl.engine.time.YWorkItemTimer.getOwnerID()", "org.yawlfoundation.yawl.engine.YPersistenceManager.storeObject(org.yawlfoundation.yawl.engine.time.YWorkItemTimer)", "pmgr.getSession().get(java.lang.Class,timer.getOwnerID())", "org.yawlfoundation.yawl.engine.time.YWorkItemTimer.getEndTime()"], "Fixed commit": "ddf2a9d83e385a12f78c1c441ffe4ce855c66373", "Url": "https://api.github.com/repos/mlawry/yawl", "Date": "2018-03-08T03:18:24Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((activity.getThumbnail()) == null) { startPostponedEnterTransition(); }else { java.io.File f = new java.io.File(activity.getThumbnail()); com.squareup.picasso.Picasso.get().load(f).into(mainImageView, new com.squareup.picasso.Callback() { @java.lang.Override public void onSuccess() { startPostponedEnterTransition(); } @java.lang.Override public void onError(java.lang.Exception e) { startPostponedEnterTransition(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5726/buggy-version/08-capstone-build.app.src.main.java.fyi.jackson.activejournal.fragment.DetailFragment.java", "BodyUseAPI": ["fyi.jackson.activejournal.data.entities.Activity.getThumbnail()"], "Fixed commit": "a7b6c9c8dde5fcd9e3e75c4abbdf2c377fcd20c3", "Url": "https://api.github.com/repos/David-Jackson/Android-Nanodegree", "Date": "2018-09-24T14:55:51Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_A)) { turn = 128; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4671/buggy-version/src.FinchControls.java", "BodyUseAPI": [], "Fixed commit": "f02e157267b1f606018d087f407100073f14deec", "Url": "https://api.github.com/repos/redops12/FinchControls", "Date": "2018-02-22T03:24:36Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_S)) { y = -128; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4671/buggy-version/src.FinchControls.java", "BodyUseAPI": [], "Fixed commit": "f02e157267b1f606018d087f407100073f14deec", "Url": "https://api.github.com/repos/redops12/FinchControls", "Date": "2018-02-22T03:24:36Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLocationId) != null) { if (mLocationId.equals(java.lang.String.valueOf(clinicList.getLocationId()))) { mHospitalId = java.lang.String.valueOf(clinicList.getClinicId()); radioButton.setChecked(true); }else { radioButton.setChecked(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1337/buggy-version/app.src.main.java.com.rescribe.doctor.ui.fragments.patient.patient_history_fragment.PatientHistoryListFragmentContainer.java", "BodyUseAPI": [], "Fixed commit": "6eef93caff0c55b80a8f7d99ebe40110fa481ee5", "Url": "https://api.github.com/repos/sandeepbahalkar123/rescribeDoctor_repo", "Date": "2018-03-20T15:55:38Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nodeIndex >= (numNodes)) { throw new java.lang.IllegalArgumentException((((\"Provided nodeIndex \" + nodeIndex) + \" greater then numNodes \") + (numNodes))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3106/buggy-version/hollow.src.main.java.com.netflix.hollow.core.memory.encoding.FixedLengthMultipleOccurrenceElementArray.java", "BodyUseAPI": [], "Fixed commit": "59d2da989b056bf20be37c766ecd7fc705935bf1", "Url": "https://api.github.com/repos/akhaku/hollow", "Date": "2018-09-26T17:44:56Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((status != (com.flowci.domain.ExecutedCmd.Status.SUCCESS)) && (node.isAllowFailure())) { return com.flowci.domain.ExecutedCmd.Status.SUCCESS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4307/buggy-version/core.src.main.java.com.flowci.core.job.util.StatusHelper.java", "BodyUseAPI": [], "Fixed commit": "415a73f7aa15135e4a9a710a01b8c4f78203d8ac", "Url": "https://api.github.com/repos/FlowCI/flow-platform-x", "Date": "2018-10-11T08:14:41Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((strDrinkThumb) != null) && (strDrinkThumb.contains(\"http://\"))) { strDrinkThumb = strDrinkThumb.replace(\"http://\", \"https://\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3777/buggy-version/app.src.main.java.anaels.com.cocktailrecipe.api.model.DrinkRecipe.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "3ee9f6b25a42f2724b64b67abcd5904312cc615a", "Url": "https://api.github.com/repos/Anael-S/CocktailRecipe", "Date": "2018-05-26T21:08:53Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((strDrink) != null) && (strDrink.contains(\"http://\"))) { strDrink = strDrink.replace(\"http://\", \"https://\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3777/buggy-version/app.src.main.java.anaels.com.cocktailrecipe.api.model.DrinkRecipe.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "3ee9f6b25a42f2724b64b67abcd5904312cc615a", "Url": "https://api.github.com/repos/Anael-S/CocktailRecipe", "Date": "2018-05-26T21:08:53Z"},
{"Line": "=>817", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((abuseItem) != null) { abuseItem.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2460/buggy-version/app.src.main.java.com.tomclaw.appsend.main.download.DownloadActivity.java", "BodyUseAPI": [], "Fixed commit": "47ee3d399ffb6f339f99cd6df6adb53c6323e2f0", "Url": "https://api.github.com/repos/solkin/appsend-android", "Date": "2018-01-22T19:48:45Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value >= 20) { return new coinpurse.BankNote(value, coinpurse.ConsoleDialog.CURRENCY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3462/buggy-version/src.coinpurse.ConsoleDialog.java", "BodyUseAPI": [], "Fixed commit": "6c30469e71e0da28494a5e68b8b26cdc98bfb40a", "Url": "https://api.github.com/repos/OOP2018/coinpurse-KongSKE", "Date": "2018-02-09T05:04:18Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (moveType != (Game.MoveType.EN_PASSANT)) { this.oldPiece = (newSquare.isOccupied()) ? newSquare.getPiece() : null; }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5623/buggy-version/Chess.src.Game.Pieces.Move.java", "BodyUseAPI": [], "Fixed commit": "4fd561951a96c599bb294ebc812544e360decc6a", "Url": "https://api.github.com/repos/Hoopsters35/Chess-Java", "Date": "2018-05-25T15:09:36Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<root.Persona.Hauptrolle>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (numberOfUnassignedHauptrollen > 0) { java.util.Random random = new java.util.Random(); int index = random.nextInt(numberOfUnassignedHauptrollen); return hauptrollen.get(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5223/buggy-version/root.Phases.ErsteNacht.java", "BodyUseAPI": ["java.util.Random.nextInt(int)"], "Fixed commit": "35b4e8d7e97baa35fef81a1216fe3c18531df0a9", "Url": "https://api.github.com/repos/VanillaEgirl/Werwolf", "Date": "2018-10-12T17:57:07Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ctx.isStatic())) { scope.putVar(\"this\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9660/buggy-version/src.main.java.org.toylang.compiler.AdaptorMethod.java", "BodyUseAPI": [], "Fixed commit": "6be3310015c8a9a9311ccd8286490d979de7a630", "Url": "https://api.github.com/repos/BradleyWood/Raven-Lang", "Date": "2018-02-07T02:20:05Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((max < 0) || (num < max)) found.next = e;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/839/buggy-version/src.main.javassist.offload.reify.FunctionTable.java", "BodyUseAPI": [], "Fixed commit": "f6dc5921cb99e0236c32304c2893a34165838082", "Url": "https://api.github.com/repos/csg-tokyo/bytespresso", "Date": "2018-02-02T04:48:05Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["stage.getScene().focusOwnerProperty().get()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (focusNode != null) { fireFocusedControlEvent(event); }else { fireStageEvent(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6148/buggy-version/src.main.java.mb.spectrum.gpio.StageGpioController.java", "BodyUseAPI": [], "Fixed commit": "8da91aa3486ec4efc3ddda3a8abdd54d25568cd8", "Url": "https://api.github.com/repos/martin-borisov/spectral", "Date": "2018-03-19T16:40:28Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.wso2.developerstudio.eclipse.platform.ui.startup.DataMapperEditor.getOpenable()) == null) { org.wso2.developerstudio.eclipse.platform.ui.startup.DataMapperEditor.setOpenable(new org.wso2.developerstudio.datamapper.diagram.custom.util.DataMapperEditorStartupUtils()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9198/buggy-version/plugins.org.wso2.developerstudio.eclipse.gmf.esb.diagram.src.org.wso2.developerstudio.eclipse.gmf.esb.diagram.edit.parts.DataMapperMediatorEditPart.java", "BodyUseAPI": [], "Fixed commit": "46bbb4119b7701aebdf6dca562e1287451ef0b71", "Url": "https://api.github.com/repos/prabushi/devstudio-tooling-esb", "Date": "2018-09-17T14:07:52Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (usingGUI) { GameEngine.MainGUI.removePlaceUnitsGUIElements(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7439/buggy-version/MainProject.GameEngine.GameManager.java", "BodyUseAPI": [], "Fixed commit": "9cc27bff672777c3ebe569739a8619a7b73bf1b6", "Url": "https://api.github.com/repos/pjmchale/cpsc", "Date": "2018-04-13T16:47:04Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (rs != null) rs.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8618/buggy-version/src.edu.cmu.tartan.db.DbAccessor.java", "BodyUseAPI": ["java.sql.ResultSet.close()"], "Fixed commit": "e8803989ac8b716dc8ad6af3abefa8f2c1b10fe0", "Url": "https://api.github.com/repos/Sibong/TartanAdventure", "Date": "2018-08-01T04:26:15Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (rs != null) rs.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8618/buggy-version/src.edu.cmu.tartan.db.DbAccessor.java", "BodyUseAPI": ["java.sql.ResultSet.close()"], "Fixed commit": "e8803989ac8b716dc8ad6af3abefa8f2c1b10fe0", "Url": "https://api.github.com/repos/Sibong/TartanAdventure", "Date": "2018-08-01T04:26:15Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (pstmt != null) pstmt.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8618/buggy-version/src.edu.cmu.tartan.db.DbAccessor.java", "BodyUseAPI": ["java.sql.PreparedStatement.close()"], "Fixed commit": "e8803989ac8b716dc8ad6af3abefa8f2c1b10fe0", "Url": "https://api.github.com/repos/Sibong/TartanAdventure", "Date": "2018-08-01T04:26:15Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, beast.evolution.tree.Node>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (geneNode != null) networkNodeGeneLineagesMap.put(speciesNode, geneNode);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9835/buggy-version/src.speciesnetwork.simulator.CoalescentSimulator.java", "BodyUseAPI": ["com.google.common.collect.Multimap<speciesnetwork.NetworkNode, beast.evolution.tree.Node>.put(speciesnetwork.NetworkNode,beast.evolution.tree.Node)"], "Fixed commit": "2da2631b66bc0715716b7d7ac2ba795c59b12286", "Url": "https://api.github.com/repos/zhangchicool/speciesnetwork", "Date": "2018-03-22T02:42:47Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (response.substring(0, 9).equals(\"CANCELLED\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4501/buggy-version/src.Helpers.EventHandler.java", "BodyUseAPI": [], "Fixed commit": "893014f66e2241fd65d446b50b2229bd6a8b03ec", "Url": "https://api.github.com/repos/arjen3112/GameFramework", "Date": "2018-04-11T08:44:29Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (minute == value) { return i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7302/buggy-version/singledateandtimepicker.src.main.java.com.github.florent37.singledateandtimepicker.widget.WheelMinutePicker.java", "BodyUseAPI": [], "Fixed commit": "353499e5c43b2e6eecb2364ab020442ae27c4bcf", "Url": "https://api.github.com/repos/florent37/SingleDateAndTimePicker", "Date": "2018-09-04T17:21:05Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["st.getContext().equals(np.getPubinfoUri())", "org.openrdf.model.Statement.getSubject()", "org.openrdf.model.Statement.getPredicate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((isInPubinfo && (subj.equals(np.getUri()))) && (pred.equals(Nanopub.SUPERSEDES))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2587/buggy-version/src.main.java.org.petapico.npop.fingerprint.WikipathwaysFingerprints.java", "BodyUseAPI": [], "Fixed commit": "3e42c0b8cea75f3e1bef74d9d62aceffd4dd8cc8", "Url": "https://api.github.com/repos/tkuhn/npop", "Date": "2018-09-28T15:01:22Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openrdf.model.Statement.getSubject()", "org.openrdf.model.Statement.getPredicate()", "st.getContext().equals(np.getPubinfoUri())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((isInPubInfo && (subj.equals(np.getUri()))) && (pred.equals(Nanopub.SUPERSEDES))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2587/buggy-version/src.main.java.org.petapico.npop.fingerprint.DefaultFingerprints.java", "BodyUseAPI": [], "Fixed commit": "3e42c0b8cea75f3e1bef74d9d62aceffd4dd8cc8", "Url": "https://api.github.com/repos/tkuhn/npop", "Date": "2018-09-28T15:01:22Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (pauseView != null) { pauseView.performClick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5099/buggy-version/app.src.main.java.com.ybg.app.neishow.view.swipeCardView.SwipeFlingAdapterView.java", "BodyUseAPI": ["android.view.View.performClick()"], "Fixed commit": "4d4357cef949e7d9ce7bceecff00487b4665166c", "Url": "https://api.github.com/repos/yangbagang/NeiShow", "Date": "2018-04-05T02:59:09Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fieldNameList.indexOf(header)) == (-1)) { fieldNameList.add(header); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4095/buggy-version/nettyproxy-web.src.main.java.com.jiangnanyouzi.nettyproxy.web.RquestResolver.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "532ca1cb66186fe911c8d782381d57e4d8a115cd", "Url": "https://api.github.com/repos/jiangnanyouzi/nettyproxy", "Date": "2018-08-17T08:14:19Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((currentSong) == null) && ((songs.size()) > 0)) { currentSong = songs.get(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8330/buggy-version/MyFirstApp.app.src.main.java.provider.MusicController.java", "BodyUseAPI": ["java.util.List<domain.Song>.get(int)"], "Fixed commit": "866d330663b65cdc1338e04d10130c6ac44084e7", "Url": "https://api.github.com/repos/TomR1997/MusicApp", "Date": "2018-09-07T15:14:55Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rela1.containsKey(strPat[i])) { java.lang.String s1 = rela1.get(strPat[i]); flag1 = s1.equals(strArr[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5091/buggy-version/src.wordPattern.java", "BodyUseAPI": ["java.util.Map<java.lang.Character, java.lang.String>.get(char)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "175c3848b17526b53c164ed6dd887abcf0b30453", "Url": "https://api.github.com/repos/GeekerYong/leetcode", "Date": "2018-06-14T02:58:59Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(format)) { return format; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7665/buggy-version/discovery-server.src.main.java.app.metatron.discovery.domain.datasource.Field.java", "BodyUseAPI": [], "Fixed commit": "1d4abac9e29a05764a8da80cf3b7e84ba017a3ae", "Url": "https://api.github.com/repos/metatron-app/metatron-discovery", "Date": "2018-10-24T08:27:55Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alignment == 1) { return pointer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5983/buggy-version/community.io.src.main.java.org.neo4j.io.mem.GrabAllocator.java", "BodyUseAPI": [], "Fixed commit": "7780d8c7f6d5df0c94069d954ca56ee0a497599f", "Url": "https://api.github.com/repos/systay/neo4j", "Date": "2018-04-30T11:00:06Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.scavi.de.gw2imp.data.db.routine.ItemRoutines.isSearchIndexComplete(mDatabaseAccess))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2025/buggy-version/app.src.main.java.com.scavi.de.gw2imp.background.collector.SearchIndexUpdater.java", "BodyUseAPI": [], "Fixed commit": "7a56b9a57225bb1f1ef33174ce7473bcc60f31c5", "Url": "https://api.github.com/repos/Scavi/Gw2Imp", "Date": "2018-07-08T18:07:54Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dt == 0) { velosity.scl(1); }else { velosity.scl((1 / dt)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9450/buggy-version/core.src.com.gidsor.flappybird.sprites.Bird.java", "BodyUseAPI": ["com.badlogic.gdx.math.Vector3.scl(float)"], "Fixed commit": "2a292afb6eacd96c092a9f128f95370951e32622", "Url": "https://api.github.com/repos/Gidsor/FlappyBird", "Date": "2018-08-05T08:31:29Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (weather2.config.ConfigTornado.Storm_Tornado_grabbedBlocksRepairOverTime) { CoroUtil.block.TileEntityRepairingBlock.replaceBlockAndBackup(world, snapshot.getPos()); }else { world.setBlockState(snapshot.getPos(), snapshot.getState(), 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3067/buggy-version/src.main.java.weather2.weathersystem.storm.TornadoHelper.java", "BodyUseAPI": [], "Fixed commit": "b74adc99beca572bddb2131f438ef0c47d2f8bb0", "Url": "https://api.github.com/repos/Corosauce/weather2", "Date": "2018-05-11T22:03:31Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (run) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4080/buggy-version/src.main.java.com.myblockchain.services.miner.Miner.java", "BodyUseAPI": [], "Fixed commit": "2fc2d00278762592bcf783daea1e9b5a6d19703b", "Url": "https://api.github.com/repos/stone16/blockchain", "Date": "2018-04-23T17:03:11Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.log4j.spi.LoggingEvent.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != message) { content.append(message.toString().trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3340/buggy-version/tbm-client.src.main.java.org.tbm.client.log4tbm.Shaper.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.Object.toString()", "java.lang.String.trim()"], "Fixed commit": "4d86a94dbe36e84e8116d4ec341e0f326ebe3579", "Url": "https://api.github.com/repos/PATHyuqing/tbm", "Date": "2017-12-06T10:54:26Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.kylin.job.execution.DefaultChainedExecutable.getExtraInfo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (snapshotResPath == null) { org.apache.kylin.engine.mr.steps.lookup.UpdateCubeAfterSnapshotStep.logger.info(\"no snapshot path exist in the context, so no need to update snapshot path\"); return new org.apache.kylin.job.execution.ExecuteResult(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9262/buggy-version/engine-mr.src.main.java.org.apache.kylin.engine.mr.steps.lookup.UpdateCubeAfterSnapshotStep.java", "BodyUseAPI": [], "Fixed commit": "d700d56ad264779b0fb84331ac2c69be460323a8", "Url": "https://api.github.com/repos/allenma/kylin", "Date": "2018-05-24T09:16:47Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.kylin.job.execution.DefaultChainedExecutable.getExtraInfo(java.lang.String)", "org.apache.kylin.engine.mr.steps.lookup.LookupExecutableUtil.getLookupTableName(this.getParams())", "org.apache.kylin.cube.CubeManager.getCube(org.apache.kylin.engine.mr.steps.lookup.LookupExecutableUtil.getCubeName(this.getParams()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(snapshotResPath.equals(cube.getSnapshotResPath(lookupTableName)))) { org.apache.kylin.engine.mr.steps.lookup.LookupExecutableUtil.updateSnapshotPathToCube(cubeManager, cube, lookupTableName, snapshotResPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9262/buggy-version/engine-mr.src.main.java.org.apache.kylin.engine.mr.steps.lookup.UpdateCubeAfterSnapshotStep.java", "BodyUseAPI": ["org.apache.kylin.engine.mr.steps.lookup.LookupExecutableUtil.updateSnapshotPathToCube(org.apache.kylin.cube.CubeManager,org.apache.kylin.cube.CubeInstance,java.lang.String,java.lang.String)"], "Fixed commit": "d700d56ad264779b0fb84331ac2c69be460323a8", "Url": "https://api.github.com/repos/allenma/kylin", "Date": "2018-05-24T09:16:47Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.kylin.dict.lookup.ExtTableSnapshotInfoManager.getLatestSnapshot(sourceTable.getSignature(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (latestSnapshot != null) { org.apache.kylin.storage.hbase.lookup.HBaseLookupMRSteps.logger.info(\"there is latest snapshot exist for table:{}, skip build snapshot step.\", tableName); jobFlow.addExtraInfo(((org.apache.kylin.engine.mr.common.BatchConstants.LOOKUP_EXT_SNAPSHOT_CONTEXT_PFX) + (latestSnapshot.getTableName())), latestSnapshot.getResourcePath()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9262/buggy-version/storage-hbase.src.main.java.org.apache.kylin.storage.hbase.lookup.HBaseLookupMRSteps.java", "BodyUseAPI": ["org.apache.kylin.job.execution.DefaultChainedExecutable.addExtraInfo(((org.apache.kylin.engine.mr.common.BatchConstants.LOOKUP_EXT_SNAPSHOT_CONTEXT_PFX) + (latestSnapshot.getTableName())),latestSnapshot.getResourcePath())", "org.apache.kylin.dict.lookup.ExtTableSnapshotInfo.getResourcePath()", "org.apache.kylin.dict.lookup.ExtTableSnapshotInfo.getTableName()"], "Fixed commit": "d700d56ad264779b0fb84331ac2c69be460323a8", "Url": "https://api.github.com/repos/allenma/kylin", "Date": "2018-05-24T09:16:47Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.techboon.repository.CaseItemRepository.findDistinctBySampleFlowNumberEquals(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((caseItem.getOrganization()) != null) && ((caseItem.getOrganization().getCode()) != null)) { prefix = caseItem.getOrganization().getCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1967/buggy-version/src.main.java.com.techboon.service.ShareService.java", "BodyUseAPI": ["caseItem.getOrganization().getCode()", "com.techboon.domain.CaseItem.getOrganization()"], "Fixed commit": "99eaff5a8b683243db8c790ec72253400e482421", "Url": "https://api.github.com/repos/easyit/techboon", "Date": "2018-08-21T15:28:00Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updateProperty) boundProperty.setValue(interpretedContent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7933/buggy-version/src.main.java.us.ihmc.javaFXToolkit.messager.MessageBidirectionalBinding.java", "BodyUseAPI": [], "Fixed commit": "17cdc00f58b796ea2e35a13a82ccef96a8471891", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-javafx-toolkit", "Date": "2018-10-13T19:43:56Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nikr.eve.jeveasset.gui.tabs.tracker.EveKitTrackImportUpdateTask.getLifeStart()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lifeStart == null) { returnValue = net.nikr.eve.jeveasset.gui.tabs.tracker.EveKitTrackImportUpdateTask.ReturnValue.ERROR; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4304/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.tabs.tracker.EveKitTrackImportUpdateTask.java", "BodyUseAPI": [], "Fixed commit": "b0732d0a9051ba46b4a58b376668b868c966f0d3", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2018-01-25T10:32:11Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.repeatMetaModel) != null) { for (int index = 0; index < (this.preRepeatEventOpCodeListTemplate.length); index++) groupOpcodeList.add(java.lang.String.format(preRepeatEventOpCodeListTemplate[index], eventSymbol.getFullyQualifiedId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9019/buggy-version/src.main.java.com.myreward.parser.metamodel.EventMetaModel.java", "BodyUseAPI": [], "Fixed commit": "24cb6f7051f34f3c6a3bcfeda825bc2f6015ef34", "Url": "https://api.github.com/repos/vippulpanditgit/myrewardengine", "Date": "2018-02-16T19:22:36Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (player != null) { if ((authority.getLevel()) >= (CommandAuthority.EVENT_LEADER.getLevel())) { for (int i = 0; i < range; i++) { spam.append(((player.getDiscordId()) + \"\\n\")); } return new com.meta.leon.discordbot.command.member.ResponseForm(spam.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1376/buggy-version/src.main.java.com.meta.leon.discordbot.command.member.KataCommand.java", "BodyUseAPI": ["com.meta.leon.discordbot.model.Player.getDiscordId()", "java.lang.StringBuilder.append(((player.getDiscordId()) + \"\\n\"))"], "Fixed commit": "3a52689304a811fb7a0edf28506417094be8d730", "Url": "https://api.github.com/repos/leon-perkovic/meta-discord-bot", "Date": "2018-04-04T21:50:37Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (columnSize.hasKnownSize()) { estOutputRowWidth += columnSize.getKnownSize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/570/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.physical.impl.aggregate.HashAggTemplate.java", "BodyUseAPI": ["RecordBatchSizer.ColumnSize.getKnownSize()"], "Fixed commit": "f911575abd9672866b39926a60c1731bbeee155f", "Url": "https://api.github.com/repos/ilooner/drill", "Date": "2018-02-02T19:32:31Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeIt) == (left)) { return false; }else if (right.allLoaded()) { right.moveToStart(); activeIt = left; buffer.clear(); updateBlockSize(); ((io.crate.execution.engine.join.RamAccountingBatchIterator) (left)).releaseAccountedRows(); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/530/buggy-version/sql.src.main.java.io.crate.execution.engine.join.HashInnerJoinBatchIterator.java", "BodyUseAPI": [], "Fixed commit": "03e316073e1906bfa3c215bf42cffef1f233eb25", "Url": "https://api.github.com/repos/crate/crate", "Date": "2018-02-27T10:37:41Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (maxReadsPerPosition > 0) samplingMethod = new org.bgi.flexlab.gaea.tools.haplotypecaller.DownsamplingMethod(org.bgi.flexlab.gaea.tools.haplotypecaller.DownsamplingMethod.DEFAULT_DOWNSAMPLING_TYPE, maxReadsPerPosition, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6162/buggy-version/src.main.java.org.bgi.flexlab.gaea.tools.haplotypecaller.pileup.AssemblyRegionIterator.java", "BodyUseAPI": [], "Fixed commit": "9331eebad7d8885b27b3b67ccaa50bfeb760139a", "Url": "https://api.github.com/repos/BGI-flexlab/SOAPgaea", "Date": "2018-05-21T02:47:26Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(node.isVisited())) { path.append(search(node)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/808/buggy-version/src.datastructures.graph.DFS.java", "BodyUseAPI": ["datastructures.graph.DFS.search(datastructures.graph.DFSNode)", "java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "8b0730714148492c980c8b70ef8dc595c442d1d1", "Url": "https://api.github.com/repos/davps/algorithms-and-data-structures-in-java", "Date": "2018-03-24T20:46:00Z"},
{"Line": "=>1721", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((handle.getDefn().getValueType()) == (org.eclipse.birt.report.model.api.metadata.IPropertyDefn.USER_PROPERTY)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3413/buggy-version/UI.org.eclipse.birt.report.designer.core.src.org.eclipse.birt.report.designer.core.model.schematic.TableHandleAdapter.java", "BodyUseAPI": [], "Fixed commit": "97d1d126b04d147487dadcdc22467a8f7e66b809", "Url": "https://api.github.com/repos/Charling-Huang/birt", "Date": "2018-08-01T22:18:51Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((path.size()) > 0) { path.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3570/buggy-version/src.routing.cgr.Path.java", "BodyUseAPI": ["java.util.List<routing.cgr.Vertex>.remove(int)"], "Fixed commit": "cd995173ec2e87f35090bc2e0f1f067a29b94c12", "Url": "https://api.github.com/repos/irigon/the-one-fork", "Date": "2018-08-07T08:43:09Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(android.text.TextUtils.isEmpty(selection))) { selection += \" AND \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1937/buggy-version/myExpenses.src.main.java.org.totschnig.myexpenses.dialog.TransactionListDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "fe1c1c6fc23b437f5c3ae73d22acb1255bdc251b", "Url": "https://api.github.com/repos/mtotschnig/MyExpenses", "Date": "2018-03-19T15:11:57Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["realm.where(ru.lod_misis.ithappened.Models.DbModelV1.class).equalTo(\"userId\", userId).findFirst()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((dbModel == null) || ((dbModel.getEventSourceCollection()) == null)) return new java.util.ArrayList<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3395/buggy-version/Android.ItHappenedAndroid.app.src.main.java.ru.lod_misis.ithappened.Infrastructure.TrackingRepository.java", "BodyUseAPI": [], "Fixed commit": "fb214334d43804d3c9365d03c57dcc529b314c41", "Url": "https://api.github.com/repos/LeagueOfDevelopers/ItHappened", "Date": "2018-07-01T11:51:14Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((savingInProgress) != null) { java.lang.System.out.println(\"savingInProgress should be null!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2646/buggy-version/ParentMonitor.src.Server.ImageBank.java", "BodyUseAPI": [], "Fixed commit": "a55d1b37ce926ad09d66260bac02e5ebd03e10ae", "Url": "https://api.github.com/repos/VisionZ/Parent-Monitor", "Date": "2018-09-04T04:01:49Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((savingInProgress) != null) { savingInProgress.set(false); savingInProgress = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2646/buggy-version/ParentMonitor.src.Server.ImageBank.java", "BodyUseAPI": [], "Fixed commit": "a55d1b37ce926ad09d66260bac02e5ebd03e10ae", "Url": "https://api.github.com/repos/VisionZ/Parent-Monitor", "Date": "2018-09-04T04:01:49Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dest == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6575/buggy-version/app.src.main.java.de.gotovoid.service.communication.CallbackRegistration.java", "BodyUseAPI": [], "Fixed commit": "3ff3ca12b11b32546d2da101c07c903599e0e392", "Url": "https://api.github.com/repos/nomeme/gotovoid", "Date": "2018-03-31T17:46:51Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pacScriptParser) == null) { return com.github.markusbernhardt.proxy.util.ProxyUtil.noProxyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7420/buggy-version/src.main.java.com.github.markusbernhardt.proxy.selector.pac.PacProxySelector.java", "BodyUseAPI": [], "Fixed commit": "8b668f52adcff7c3c0d74c01d54dd7bfe29f18ad", "Url": "https://api.github.com/repos/MarkusBernhardt/proxy-vole", "Date": "2018-10-02T12:30:15Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(code)) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/337/buggy-version/src.main.java.gov.ca.cwds.cals.dictionary.ReferenceCodeUtility.java", "BodyUseAPI": [], "Fixed commit": "91363f3548bf7ad296acd428c72f6cdacce368dd", "Url": "https://api.github.com/repos/ca-cwds/cals-api", "Date": "2018-07-05T22:20:28Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPeerServiceRunning) { bindPeerService(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9678/buggy-version/app.src.main.java.com.boetchain.bitcoinnode.ui.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7e99e0b9f405c42a13a79e3b9a3073a7d775505c", "Url": "https://api.github.com/repos/boetchain/android-bitcoin-node", "Date": "2018-02-21T13:36:59Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((simNeededAffordanceBefore()) != simNeedsEmergencyAffordance) { Settings.Global.putInt(mContext.getContentResolver(), com.android.server.emergency.EmergencyAffordanceService.EMERGENCY_SIM_INSERTED_SETTING, (simNeedsEmergencyAffordance ? 1 : 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/604/buggy-version/services.core.java.com.android.server.emergency.EmergencyAffordanceService.java", "BodyUseAPI": ["Settings.Global.putInt(mContext.getContentResolver(),java.lang.String,int)"], "Fixed commit": "fbf2e0fb2c1f46d97dcaca78fb63b244bb53e9d3", "Url": "https://api.github.com/repos/CopperheadOS/platform_frameworks_base", "Date": "2017-02-10T00:06:39Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (simNeedsEmergencyAffordance != (mSimNeedsEmergencyAffordance)) { mSimNeedsEmergencyAffordance = simNeedsEmergencyAffordance; updateEmergencyAffordanceNeeded(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/604/buggy-version/services.core.java.com.android.server.emergency.EmergencyAffordanceService.java", "BodyUseAPI": [], "Fixed commit": "fbf2e0fb2c1f46d97dcaca78fb63b244bb53e9d3", "Url": "https://api.github.com/repos/CopperheadOS/platform_frameworks_base", "Date": "2017-02-10T00:06:39Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fileDirtyList.contains(id))) { synchronized(fileDirtyList) { if (!(fileDirtyList.contains(id))) { fileDirtyList.add(id); return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2231/buggy-version/okdownload.src.main.java.com.liulishuo.okdownload.core.breakpoint.BreakpointStoreOnCache.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.add(int)", "java.util.List<java.lang.Integer>.contains(int)"], "Fixed commit": "835676148e32817599ed4d9f57cfb579c7268e6a", "Url": "https://api.github.com/repos/rantianhua/okdownload", "Date": "2018-08-06T08:53:46Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(parentType.contains(currentInterface))) { parentType.add(currentInterface); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6626/buggy-version/src.pokemon.model.Pokemon.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "a6374d7ed54fe00e6781f4b37e2cec0d388ec17b", "Url": "https://api.github.com/repos/BrandonWortmann/PokemonProject", "Date": "2018-01-12T19:15:54Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ru.tinted_knight.sberbanksms.Settings.Preferences.isFirstRun(getApplication()))) initNormalView();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2305/buggy-version/app.src.main.java.ru.tinted_knight.sberbanksms.ui.main_screen.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d890fd7e11808df15d0cc8a0ee356f20203b637b", "Url": "https://api.github.com/repos/tinted-knight/SberbankSMS", "Date": "2018-01-03T09:19:00Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkPermissions()) initNormalView();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2305/buggy-version/app.src.main.java.ru.tinted_knight.sberbanksms.ui.main_screen.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d890fd7e11808df15d0cc8a0ee356f20203b637b", "Url": "https://api.github.com/repos/tinted-knight/SberbankSMS", "Date": "2018-01-03T09:19:00Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentGroup.getGroupId()) == null) { currentGroup.setGroupId(dataSnapshot.getKey()); mDatabase.child(\"currentGroup\").child(currentGroup.getGroupId()).child(\"groupId\").setValue(currentGroup.getGroupId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9123/buggy-version/app.src.main.java.com.smdproject.smdproject.MainActivity.java", "BodyUseAPI": ["mDatabase.child(\"currentGroup\").child(currentGroup.getGroupId()).child(java.lang.String)", "database.Group.setGroupId(dataSnapshot.getKey())", "mDatabase.child(\"currentGroup\").child(currentGroup.getGroupId())", "database.Group.getGroupId()", "mDatabase.child(\"currentGroup\").child(currentGroup.getGroupId()).child(\"groupId\").setValue(currentGroup.getGroupId())", "database.Group.getGroupId()"], "Fixed commit": "96230966d5e0146198e281462cc49c92e23ad477", "Url": "https://api.github.com/repos/abdullahkamran/SMDProject", "Date": "2018-04-28T06:25:22Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parentName != \"\") { nodeName = (parentName + \".\") + (resolveNodesName(childNode, module, schemaContext)); }else { nodeName = (org.opendaylight.netconf.sal.rest.doc.model.builder.OperationBuilder.CONFIG) + (resolveNodesName(childNode, module, schemaContext)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/910/buggy-version/restconf.sal-rest-docgen.src.main.java.org.opendaylight.netconf.sal.rest.doc.impl.ModelGenerator.java", "BodyUseAPI": [], "Fixed commit": "f30f898a71705fab01f6a12f081100974f07aea2", "Url": "https://api.github.com/repos/UltimateDogg/netconf", "Date": "2018-01-18T04:12:35Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.andrei1058.discordpublicservers.BOT.getDatabase()) != null) { com.andrei1058.discordpublicservers.misc.Misc.guildsRefresh(); com.andrei1058.discordpublicservers.misc.Misc.checkPremiumExpire(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/935/buggy-version/main.java.com.andrei1058.discordpublicservers.listeners.Ready.java", "BodyUseAPI": [], "Fixed commit": "021865afdc91c4c1f0decc1f8e6bbde992961d15", "Url": "https://api.github.com/repos/andrei1058/Pinky_DiscordServers.Eu", "Date": "2018-02-28T14:48:58Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((xMin) == (xMax)) { (xMin)--; (xMax)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7678/buggy-version/src.main.java.sholl.gui.ShollPlot.java", "BodyUseAPI": [], "Fixed commit": "b919c4ab3033aec50d55b39bf0beeb79a662e68a", "Url": "https://api.github.com/repos/tferr/ASA", "Date": "2018-09-07T19:21:30Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((yMin) == (yMax)) { (yMin)--; (yMax)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7678/buggy-version/src.main.java.sholl.gui.ShollPlot.java", "BodyUseAPI": [], "Fixed commit": "b919c4ab3033aec50d55b39bf0beeb79a662e68a", "Url": "https://api.github.com/repos/tferr/ASA", "Date": "2018-09-07T19:21:30Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((library == null) || ((library.getName()) == null)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8190/buggy-version/src.common.com.intellij.plugins.haxe.haxelib.HaxelibUtil.java", "BodyUseAPI": [], "Fixed commit": "382e7f8574b51c7460459b59f91de388bdf72b7e", "Url": "https://api.github.com/repos/HaxeFoundation/intellij-haxe", "Date": "2018-10-18T08:12:18Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.roots.libraries.Library.getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8190/buggy-version/src.common.com.intellij.plugins.haxe.haxelib.HaxelibUtil.java", "BodyUseAPI": [], "Fixed commit": "382e7f8574b51c7460459b59f91de388bdf72b7e", "Url": "https://api.github.com/repos/HaxeFoundation/intellij-haxe", "Date": "2018-10-18T08:12:18Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (multipartFile != null) { new java.io.File(((path + (io.choerodon.devops.app.service.impl.CertificationServiceImpl.FILE_SEPARATOR)) + (multipartFile.getOriginalFilename()))).deleteOnExit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9432/buggy-version/src.main.java.io.choerodon.devops.app.service.impl.CertificationServiceImpl.java", "BodyUseAPI": ["org.springframework.web.multipart.MultipartFile.getOriginalFilename()", "java.io.File.deleteOnExit()"], "Fixed commit": "cbfed38a44dc5ed3e47d4603ab9f80308a6eca6c", "Url": "https://api.github.com/repos/choerodon/devops-service", "Date": "2018-09-13T06:15:44Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((annotationHistory.size()) > 0) { this.latestAnnotation = annotationHistory.get(((annotationHistory.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2161/buggy-version/HMVV.src.hmvv.model.Mutation.java", "BodyUseAPI": ["java.util.ArrayList<hmvv.model.Annotation>.get(((annotationHistory.size()) - 1))", "java.util.ArrayList<hmvv.model.Annotation>.size()"], "Fixed commit": "1faf0bf7a4968a5e0b5702d48321cb76d6338709", "Url": "https://api.github.com/repos/hmvv/hmvv", "Date": "2018-09-24T18:51:46Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.twu.biblioteca.User.isCurrentUserEmpty(currentUser)) { userLogged = false; }else { userLogged = com.twu.biblioteca.User.login(name, password, currentUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1563/buggy-version/src.com.twu.biblioteca.BibliotecaApp.java", "BodyUseAPI": ["com.twu.biblioteca.User.login(java.lang.String,java.lang.String,com.twu.biblioteca.User)"], "Fixed commit": "f6756e06946db1e9cc0415d4cd9f4e10b2be6492", "Url": "https://api.github.com/repos/juandigt/TWU-Biblioteca-JuanDiego", "Date": "2018-09-20T13:43:41Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["top.trumeet.common.db.RegisteredApplicationDb.registerApplication(java.lang.String,boolean,com.PATHomi.xmsf.push.service.XMPushService,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (application == null) { com.crashlytics.android.Crashlytics.log(Log.WARN, com.PATHomi.xmsf.push.service.XMPushService.TAG, (\"registerApplication failed \" + pkg)); me.pqpo.librarylog4a.Log4a.w(com.PATHomi.xmsf.push.service.XMPushService.TAG, (\"registerApplication failed \" + pkg)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2761/buggy-version/push.src.main.java.com.PATHomi.xmsf.push.service.XMPushService.java", "BodyUseAPI": [], "Fixed commit": "4243c046af8463bc3368d4fd1ab3876dd8239001", "Url": "https://api.github.com/repos/Trumeet/MiPushFramework", "Date": "2018-07-13T14:48:10Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) == 0) { java.lang.System.out.println(\"No sources were found\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1077/buggy-version/IO-Multithreading.src.ExecutorServiceHandler.java", "BodyUseAPI": [], "Fixed commit": "8eaa2cc42963f7ece0ed10eca1066e84db8c8ae4", "Url": "https://api.github.com/repos/prokop7/Java-Core-Course", "Date": "2018-01-29T17:47:45Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (filters.containsKey(\"data\")) { dataJson = net.b07z.sepia.server.core.tools.JSON.parseString(((java.lang.String) (filters.get(\"data\")))); }else { dataJson = new org.json.simple.JSONObject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7754/buggy-version/src.main.java.net.b07z.sepia.server.assist.database.DB.java", "BodyUseAPI": ["net.b07z.sepia.server.core.tools.JSON.parseString(java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "87b8ef589d50474fd05e82c9f32d607464017597", "Url": "https://api.github.com/repos/SEPIA-Framework/sepia-assist-server", "Date": "2018-10-29T22:48:40Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.FrameLayout.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (modalParent instanceof android.view.ViewGroup) { ((android.view.ViewGroup) (modalParent)).removeView(modalWindow); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8/buggy-version/library.src.main.java.com.shehabic.droppy.DroppyMenuPopup.java", "BodyUseAPI": [], "Fixed commit": "e429a4e2b4e56549853108a037a1e926f9a80a59", "Url": "https://api.github.com/repos/MGaetan89/Droppy", "Date": "2018-10-19T15:17:33Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (contentParent instanceof android.view.ViewGroup) { ((android.view.ViewGroup) (contentParent)).removeView(mContentView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8/buggy-version/library.src.main.java.com.shehabic.droppy.DroppyMenuPopup.java", "BodyUseAPI": [], "Fixed commit": "e429a4e2b4e56549853108a037a1e926f9a80a59", "Url": "https://api.github.com/repos/MGaetan89/Droppy", "Date": "2018-10-19T15:17:33Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (temp.equals(appName)) { value = scope.substring(0, index); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1966/buggy-version/src.java.com.zimbra.oauth.utilities.LdapConfiguration.java", "BodyUseAPI": [], "Fixed commit": "1e0d2fcd6993ca07ecb440aac6e7ec75415ed21e", "Url": "https://api.github.com/repos/Zimbra/zm-oauth-social", "Date": "2018-06-13T08:34:28Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.appName) != null) { newApps.put(m.getMainAttributes().getValue(\"Implementation-Title\"), data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8298/buggy-version/rss-deployment.src.main.java.de.wieczorek.rss.core.Updater.java", "BodyUseAPI": ["java.util.Map<java.lang.String, de.wieczorek.rss.core.Updater.AppMetadata>.put(java.lang.String,de.wieczorek.rss.core.Updater.AppMetadata)"], "Fixed commit": "c76f79d7639481207417032845c324daaac26475", "Url": "https://api.github.com/repos/DanielWieczorek/RSS-Grabber", "Date": "2018-04-26T18:09:53Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == (com.theartofdev.edmodo.cropper.CropImage.CROP_IMAGE_ACTIVITY_REQUEST_CODE)) { com.theartofdev.edmodo.cropper.CropImage.ActivityResult result = com.theartofdev.edmodo.cropper.CropImage.getActivityResult(data); if (resultCode == (RESULT_OK)) { android.net.Uri resultUri = result.getUri(); setupImageBtn.setImageURI(resultUri); }else if (resultCode == (com.theartofdev.edmodo.cropper.CropImage.CROP_IMAGE_ACTIVITY_RESULT_ERROR_CODE)) { java.lang.Exception error = result.getError(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4836/buggy-version/app.src.main.java.com.example.siddharthm.blogapp.SetupActivity.java", "BodyUseAPI": [], "Fixed commit": "31eb0c5ec0425e4ccb59dc8d70cde44b163c8893", "Url": "https://api.github.com/repos/Siddharth1698/Blog-App", "Date": "2018-07-02T11:02:39Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gregtech.common.tileentities.machines.multi.GT_MetaTileEntity_DrillerBase.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((pipes != null) && (!(pipes.isItemEqual(gregtech.common.tileentities.machines.multi.GT_MetaTileEntity_DrillerBase.miningPipe)))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8960/buggy-version/src.main.java.gregtech.common.tileentities.machines.multi.GT_MetaTileEntity_DrillerBase.java", "BodyUseAPI": [], "Fixed commit": "a0298b7a78bce8c5d42b0013d1086678a1d3fa82", "Url": "https://api.github.com/repos/IdealIndustrial/GT5Unofficial", "Date": "2018-05-11T20:21:55Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gravity.gbot.utils.Config.dev_mode)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2647/buggy-version/src.main.java.gravity.gbot.commands.BotOwner.UpdateCommand.java", "BodyUseAPI": [], "Fixed commit": "6d5e3fb55e12f7d8ff4381535dc67308fd13fcc1", "Url": "https://api.github.com/repos/EnzoDevelop/EnzoBot", "Date": "2018-05-08T16:45:43Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gravity.gbot.utils.Config.dev_mode)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2647/buggy-version/src.main.java.gravity.gbot.commands.BotOwner.DeployCommand.java", "BodyUseAPI": [], "Fixed commit": "6d5e3fb55e12f7d8ff4381535dc67308fd13fcc1", "Url": "https://api.github.com/repos/EnzoDevelop/EnzoBot", "Date": "2018-05-08T16:45:43Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Compiler.performCompile(org.codehaus.plexus.compiler.CompilerConfiguration)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hasError || (!(result.isSuccess()))) throw new org.apache.maven.plugin.MojoExecutionException(errorMessages.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4844/buggy-version/src.main.java.org.yuanheng.cookcc.maven.JavacTask.java", "BodyUseAPI": [], "Fixed commit": "21f9994948cab2cc5a393901f18e1d8638bb3f71", "Url": "https://api.github.com/repos/coconut2015/cookcc-maven-plugin", "Date": "2018-04-09T08:46:18Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((marker) != null) { shelterMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(marker.getPosition(), 11)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6878/buggy-version/app.src.main.java.com.example.team38.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "c8b5babf8ae609cd853edfa966311f98c5024f44", "Url": "https://api.github.com/repos/johnsk95/cs2340_spring2018_team38", "Date": "2018-03-10T22:23:57Z"},
{"Line": "=>4355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (comment == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9719/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.java", "BodyUseAPI": [], "Fixed commit": "84465a0678fa29360dea313a93158729624846b9", "Url": "https://api.github.com/repos/lihengming/druid", "Date": "2018-02-09T06:27:27Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((channel.remoteAddress()) instanceof java.net.InetSocketAddress) { this.endpoint = new com.ctrip.xpipe.redis.core.proxy.endpoint.DefaultProxyEndpoint(((java.net.InetSocketAddress) (channel.remoteAddress()))); }else { this.endpoint = new com.ctrip.xpipe.redis.core.proxy.endpoint.DefaultProxyEndpoint(\"0.0.0.0\", (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7557/buggy-version/redis.redis-proxy.src.main.java.com.ctrip.xpipe.redis.proxy.session.DefaultFrontendSession.java", "BodyUseAPI": [], "Fixed commit": "0b6b1a0463fbd87afbd247493758231cc841b0e7", "Url": "https://api.github.com/repos/MrTutao/x-pipe", "Date": "2018-09-29T10:59:46Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readValue(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isNotProcessed(result.getTransactionHash())) { requestService.requestClaimed(new io.fundrequest.core.request.claim.command.RequestClaimedCommand(getPlatform(result.getPlatform()), result.getPlatformId(), result.getTransactionHash(), result.getSolver(), getTimeStamp(result.getTimestamp()), new java.math.BigDecimal(result.getAmount()))); processedBlockchainEventRepository.save(new io.fundrequest.core.request.fund.domain.ProcessedBlockchainEvent(result.getTransactionHash())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6816/buggy-version/tweb.src.main.java.io.fundreqest.platform.tweb.request.messsaging.AzraelMessageReceiver.java", "BodyUseAPI": ["io.fundrequest.core.request.fund.infrastructure.ProcessedBlockchainEventRepository.save(io.fundrequest.core.request.fund.domain.ProcessedBlockchainEvent)", "io.fundreqest.platform.tweb.request.messsaging.AzraelMessageReceiver.getPlatform(result.getPlatform())", "io.fundrequest.core.request.fund.messaging.dto.ClaimedEthDto.getTransactionHash()", "io.fundrequest.core.request.fund.messaging.dto.ClaimedEthDto.getTimestamp()", "io.fundrequest.core.request.fund.messaging.dto.ClaimedEthDto.getPlatformId()", "io.fundrequest.core.request.fund.messaging.dto.ClaimedEthDto.getAmount()", "io.fundrequest.core.request.fund.messaging.dto.ClaimedEthDto.getTransactionHash()", "io.fundrequest.core.request.fund.messaging.dto.ClaimedEthDto.getSolver()", "io.fundreqest.platform.tweb.request.messsaging.AzraelMessageReceiver.getTimeStamp(result.getTimestamp())", "io.fundrequest.core.request.RequestService.requestClaimed(io.fundrequest.core.request.claim.command.RequestClaimedCommand)", "io.fundrequest.core.request.fund.messaging.dto.ClaimedEthDto.getPlatform()"], "Fixed commit": "078a43c1316c25a22e5bf2e0398d4e976beb19d0", "Url": "https://api.github.com/repos/FundRequest/platform", "Date": "2018-05-02T18:14:20Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (e != null) { return !((method == (core.framework.http.HTTPMethod.POST)) && (e.getClass().equals(java.net.http.HttpTimeoutException.class))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7363/buggy-version/core-ng.src.main.java.core.framework.impl.http.HTTPClientImpl.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Exception>.equals(java.lang.Class)", "java.lang.Exception.getClass()"], "Fixed commit": "44e187354f32c369d528632c38efbf98ecc6d3cf", "Url": "https://api.github.com/repos/neowu/core-ng-project", "Date": "2018-10-03T15:32:53Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((valuesA.size()) > intValue) && (intValue >= 0)) { return valuesA.get(intValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1278/buggy-version/app.src.main.java.valentin8dev.by.MeteoStation.MyXAxisValueFormatter.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "31d6e2e3f642db027b57c30be2246dd800897b00", "Url": "https://api.github.com/repos/Valentin-Golyonko/MeteoStation", "Date": "2018-03-27T08:09:49Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((storage.getListOfFeatureStorage().size()) > 0) { storage.setMainFeatureStorage(storage.getListOfFeatureStorage().get(3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3866/buggy-version/src.main.java.seedu.souschef.logic.parser.contextparser.RecipeParser.java", "BodyUseAPI": ["storage.getListOfFeatureStorage().get(int)", "seedu.souschef.storage.Storage.setMainFeatureStorage(storage.getListOfFeatureStorage().get(3))", "seedu.souschef.storage.Storage.getListOfFeatureStorage()"], "Fixed commit": "60ad406257d9d96f8c10bb6975ae8d94bfd02171", "Url": "https://api.github.com/repos/BennTay/main", "Date": "2018-10-25T11:01:42Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((titleTypeFace) != null) { titleTextPaint.setTypeface(titleTypeFace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6597/buggy-version/library.src.main.java.com.kimcy929.textviewtwoline.TextViewTwoLine.java", "BodyUseAPI": [], "Fixed commit": "fe38824f30fe39b0c0b888e6dd8803041cb1be2b", "Url": "https://api.github.com/repos/kimcy929/TextViewTwoLine", "Date": "2018-04-20T07:59:07Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((descriptionTypeFace) != null) { desTextPaint.setTypeface(descriptionTypeFace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6597/buggy-version/library.src.main.java.com.kimcy929.textviewtwoline.TextViewTwoLine.java", "BodyUseAPI": [], "Fixed commit": "fe38824f30fe39b0c0b888e6dd8803041cb1be2b", "Url": "https://api.github.com/repos/kimcy929/TextViewTwoLine", "Date": "2018-04-20T07:59:07Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allPhotoMode) || (favphotomode)) { menu.findItem(R.id.action_cover).setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8027/buggy-version/app.src.main.java.org.fossasia.phimpme.gallery.activities.SingleMediaActivity.java", "BodyUseAPI": [], "Fixed commit": "fdcf90bcb0c874ec65b52eeda72609dc80e9feef", "Url": "https://api.github.com/repos/sauravvishal8797/phimpme-android", "Date": "2018-02-13T20:13:40Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (typeRef instanceof org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference) { typeArgss = ((org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference) (typeRef)).typeArguments; }else if (typeRef instanceof org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference) { typeArgss = new org.eclipse.jdt.internal.compiler.ast.TypeReference[][]{ ((org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference) (typeRef)).typeArguments }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2839/buggy-version/src.core.lombok.eclipse.handlers.HandleSuperBuilder.java", "BodyUseAPI": [], "Fixed commit": "04269ef14bf463a1ebe2dd2b376e0a3ff71535e5", "Url": "https://api.github.com/repos/janrieke/lombok", "Date": "2018-05-30T13:27:47Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (target.getName().equals(sender.getName())) { sender.sendMessage(((cn.nukkit.utils.TextFormat.RED) + \"\u4f60\u65e0\u6cd5\u548c\u81ea\u5df1\u8fdb\u884c\u4ea4\u6613!\")); }else if (com.easterfg.economyapi.EconomyAPI.isInteger(args[1])) { money = java.lang.Integer.valueOf(args[1]); if (money < 0) { sender.sendMessage(((cn.nukkit.utils.TextFormat.RED) + \"\u91d1\u989d\u5fc5\u987b\u5927\u4e8e\u96f6!\")); }else { if ((com.easterfg.economyapi.EconomyAPI.provide.myMoney(((cn.nukkit.Player) (sender)))) < money) { sender.sendMessage(((cn.nukkit.utils.TextFormat.RED) + \"\u4f60\u6ca1\u6709\u8db3\u591f\u7684\u91d1\u5e01\")); }else { sender.sendMessage(((((((((cn.nukkit.utils.TextFormat.GREEN) + \"\u6210\u529f\u4ed8\u7ed9\u73a9\u5bb6\") + (cn.nukkit.utils.TextFormat.GOLD)) + (target.getName())) + (cn.nukkit.utils.TextFormat.GOLD)) + money) + (cn.nukkit.utils.TextFormat.GREEN)) + \"\u91d1\u5e01\")); com.easterfg.economyapi.EconomyAPI.provide.reducePlayerMoney(((cn.nukkit.Player) (sender)), money); com.easterfg.economyapi.EconomyAPI.provide.addPlayerMoney(target, money); } } }else { sender.sendMessage(((cn.nukkit.utils.TextFormat.RED) + \"\u91d1\u989d\u5fc5\u987b\u662f\u4e00\u4e2a\u6570\u5b57!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5377/buggy-version/src.com.easterfg.economyapi.EconomyAPI.java", "BodyUseAPI": ["cn.nukkit.command.CommandSender.sendMessage(((cn.nukkit.utils.TextFormat.RED) + \"\u4f60\u65e0\u6cd5\u548c\u81ea\u5df1\u8fdb\u884c\u4ea4\u6613!\"))", "cn.nukkit.Player.getName()", "cn.nukkit.command.CommandSender.sendMessage(((cn.nukkit.utils.TextFormat.RED) + \"\u91d1\u989d\u5fc5\u987b\u5927\u4e8e\u96f6!\"))", "cn.nukkit.command.CommandSender.sendMessage(((((((((cn.nukkit.utils.TextFormat.GREEN) + \"\u6210\u529f\u4ed8\u7ed9\u73a9\u5bb6\") + (cn.nukkit.utils.TextFormat.GOLD)) + (target.getName())) + (cn.nukkit.utils.TextFormat.GOLD)) + money) + (cn.nukkit.utils.TextFormat.GREEN)) + \"\u91d1\u5e01\"))", "com.easterfg.economyapi.ConfigProvide.addPlayerMoney(cn.nukkit.Player,int)", "cn.nukkit.command.CommandSender.sendMessage(((cn.nukkit.utils.TextFormat.RED) + \"\u4f60\u6ca1\u6709\u8db3\u591f\u7684\u91d1\u5e01\"))", "cn.nukkit.command.CommandSender.sendMessage(((cn.nukkit.utils.TextFormat.RED) + \"\u91d1\u989d\u5fc5\u987b\u662f\u4e00\u4e2a\u6570\u5b57!\"))"], "Fixed commit": "c0ffccef81008961ed2ce5d1209b6f1d70a5f356", "Url": "https://api.github.com/repos/EasterFG/EconomyAPI", "Date": "2018-08-13T07:49:31Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldFail()) { fail(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6999/buggy-version/android.lib.src.main.java.com.swmansion.gesturehandler.TapGestureHandler.java", "BodyUseAPI": [], "Fixed commit": "a9dfc093c3ceab736df1269755b8a520ad3e5994", "Url": "https://api.github.com/repos/kmagiera/react-native-gesture-handler", "Date": "2018-04-24T20:34:18Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.equals(\"text\")) messageTxt.setText(message); else if (type.equals(\"image\")) messageTxt.setText(\"photo\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1241/buggy-version/app.src.main.java.com.ibra.chatappdemo.fragment.ChatFragment.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "8a01bfc26f788272952870f54fc525eac39b281e", "Url": "https://api.github.com/repos/ibrahimothman/chatapp", "Date": "2018-08-06T18:51:22Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.auth.api.signin.GoogleSignIn.getClient(com.demo.situations.MainActivity,com.google.android.gms.auth.api.signin.GoogleSignInOptions)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (client != null) client.signOut();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2555/buggy-version/app.src.main.java.com.demo.situations.MainActivity.java", "BodyUseAPI": ["com.google.android.gms.auth.api.signin.GoogleSignInClient.signOut()"], "Fixed commit": "ce9c62b12fd574efbc9790c22fb49a8bcfaff43c", "Url": "https://api.github.com/repos/situationsdemo/situationsdemo", "Date": "2018-02-17T16:51:05Z"},
{"Line": "=>750", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((commander.modal()) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/799/buggy-version/src.main.java.ure.ui.UCamera.java", "BodyUseAPI": [], "Fixed commit": "467d489d7d22ae77b393632b1bcfc5a6e8cd98a1", "Url": "https://api.github.com/repos/gilmore606/ure", "Date": "2018-09-21T03:11:28Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((commander.player()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/799/buggy-version/src.main.java.ure.math.Dimap.java", "BodyUseAPI": [], "Fixed commit": "467d489d7d22ae77b393632b1bcfc5a6e8cd98a1", "Url": "https://api.github.com/repos/gilmore606/ure", "Date": "2018-09-21T03:11:28Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((function.parameters) == null) { stringBuilder.append(\")\\n\"); }else if ((function.parameters.length()) > 0) { stringBuilder.append(\",\").append(function.parameters).append(\")\\n\"); }else { stringBuilder.append(\")\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9755/buggy-version/src.main.java.online.pizzacrust.objectstrap.Translator.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "function.parameters.length()", "java.lang.StringBuilder.append(function.parameters)"], "Fixed commit": "29441ba167c8d479a2e94fa2d700fd67fc43d8bb", "Url": "https://api.github.com/repos/PizzaCrust/ObjectStrap", "Date": "2018-09-29T09:45:39Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == (au.edu.curtin.madassignment.Fragments.ListFragment.BACKPACK_FOOD)) { setItems(au.edu.curtin.madassignment.Fragments.GameData.getInstance().getPlayer().getFoodItemList()); }else if ((type) == (au.edu.curtin.madassignment.Fragments.ListFragment.BACKPACK_EQUIPMENT)) { setItems(au.edu.curtin.madassignment.Fragments.GameData.getInstance().getPlayer().getEquipmentItemList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5352/buggy-version/src.main.java.au.edu.curtin.madassignment.Fragments.ListFragment.java", "BodyUseAPI": [], "Fixed commit": "396df82148fe3ad7d1d6e57bbb5bd394ea80ac08", "Url": "https://api.github.com/repos/Aaron216/MobileAppDevelopment-Assignment", "Date": "2018-10-23T03:33:16Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Mapper.IndentMapper.isIndentexitByaddressID(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sum != 0) { result += \"\u8be5\u5730\u5740\u5df2\u88ab\u4e0b\u5355\uff0c\u4e0d\u80fd\u5220\u9664\"; return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2871/buggy-version/src.main.java.service.userservice.UserserviceImpl.java", "BodyUseAPI": [], "Fixed commit": "c5cd9be6b70ee04e29feaeee9ac95e2018d80e04", "Url": "https://api.github.com/repos/SCAU-F4/SE3", "Date": "2018-07-31T08:50:52Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Mapper.IndentMapper.isIndentexitByaddressID(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sum != 0) { result += \"\u8be5\u5730\u5740\u5df2\u88ab\u4e0b\u5355\uff0c\u4e0d\u80fd\u66f4\u6539\"; return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2871/buggy-version/src.main.java.service.userservice.UserserviceImpl.java", "BodyUseAPI": [], "Fixed commit": "c5cd9be6b70ee04e29feaeee9ac95e2018d80e04", "Url": "https://api.github.com/repos/SCAU-F4/SE3", "Date": "2018-07-31T08:50:52Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.eclipse.scout.rt.platform.util.EventListenerList>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (list != null) { list.remove(java.beans.PropertyChangeListener.class, listener); if ((list.getListenerCount(java.beans.PropertyChangeListener.class)) == 0) { m_propertyChangeListenerMap.remove(propertyName); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7981/buggy-version/org.eclipse.scout.rt.client.src.main.java.org.eclipse.scout.rt.client.ui.desktop.internal.VirtualDesktop.java", "BodyUseAPI": ["org.eclipse.scout.rt.platform.util.EventListenerList.getListenerCount(java.lang.Class)", "org.eclipse.scout.rt.platform.util.EventListenerList.remove(java.lang.Class,java.beans.PropertyChangeListener)"], "Fixed commit": "d23d6c487c08aaf2e9233d7073543df134bab09a", "Url": "https://api.github.com/repos/eclipse/scout.rt", "Date": "2018-04-12T08:48:27Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(gcmId)) { throw new java.io.IOException(\"GCM ID not yet retrieved.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6933/buggy-version/promet.src.main.java.si.virag.promet.gcm.RegisterFcmTokenJob.java", "BodyUseAPI": [], "Fixed commit": "76cfb59870a23c6d7b5c8b12196e3216e580a32b", "Url": "https://api.github.com/repos/izacus/Promet", "Date": "2018-04-29T22:33:25Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inFrame.mask) != null) qFrame.mask = new com.rinke.solutions.pinball.model.Plane(inFrame.mask);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9179/buggy-version/src.main.java.com.rinke.solutions.pinball.animation.AnimationQuantizer.java", "BodyUseAPI": [], "Fixed commit": "2fbb8392367eb8faad1a9980f585376aaa8047d7", "Url": "https://api.github.com/repos/sker65/go-dmd-clock", "Date": "2018-04-12T06:54:14Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((dependency.getSha1()) == null) && ((dependency.getArtifactId()) == null)) { logger.warn(\"Dependency {} was not updated, please try changing flag paket.runPreStep to true, or run 'paket install' manually to fix issue\", dependency.getGroupId()); }else { dependencies.add(dependency); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5017/buggy-version/src.main.java.org.whitesource.agent.dependency.resolver.paket.AbstractPaketDependencyCollector.java", "BodyUseAPI": ["java.util.Collection<org.whitesource.agent.api.model.DependencyInfo>.add(org.whitesource.agent.api.model.DependencyInfo)", "org.whitesource.agent.api.model.DependencyInfo.getGroupId()", "org.slf4j.Logger.warn(java.lang.String,dependency.getGroupId())"], "Fixed commit": "3e0cd2473c732f7e797be2d74ec4832267d8285b", "Url": "https://api.github.com/repos/whitesource/fs-agent", "Date": "2018-10-23T12:18:46Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((dependency.getSha1()) == null) && ((dependency.getArtifactId()) == null)) { logger.warn(\"Dependency {} was not updated, please try changing flag paket.runPreStep to true, or run 'paket install' manually to fix issue\", dependency.getGroupId()); }else { dependencies.add(childDependency); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5017/buggy-version/src.main.java.org.whitesource.agent.dependency.resolver.paket.AbstractPaketDependencyCollector.java", "BodyUseAPI": ["org.whitesource.agent.api.model.DependencyInfo.getGroupId()", "org.slf4j.Logger.warn(java.lang.String,dependency.getGroupId())"], "Fixed commit": "3e0cd2473c732f7e797be2d74ec4832267d8285b", "Url": "https://api.github.com/repos/whitesource/fs-agent", "Date": "2018-10-23T12:18:46Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.skywalking.apm.plugin.hystrix.v1.EnhanceRequireObjectCache.getContextSnapshot()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (snapshot != null) { org.apache.skywalking.apm.agent.core.context.ContextManager.continued(snapshot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2812/buggy-version/apm-sniffer.apm-sdk-plugin.hystrix-1.x-plugin.src.main.java.org.apache.skywalking.apm.plugin.hystrix.v1.HystrixCommandRunInterceptor.java", "BodyUseAPI": ["org.apache.skywalking.apm.agent.core.context.ContextManager.continued(org.apache.skywalking.apm.agent.core.context.ContextSnapshot)"], "Fixed commit": "a960272f7148eb2a620a1f50276469f4b7b17d4e", "Url": "https://api.github.com/repos/suqcnn/incubator-skywalking", "Date": "2018-05-31T00:48:19Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.skywalking.apm.plugin.hystrix.v1.EnhanceRequireObjectCache.getContextSnapshot()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (snapshot != null) { org.apache.skywalking.apm.agent.core.context.ContextManager.continued(snapshot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2812/buggy-version/apm-sniffer.apm-sdk-plugin.hystrix-1.x-plugin.src.main.java.org.apache.skywalking.apm.plugin.hystrix.v1.HystrixCommandGetFallbackInterceptor.java", "BodyUseAPI": ["org.apache.skywalking.apm.agent.core.context.ContextManager.continued(org.apache.skywalking.apm.agent.core.context.ContextSnapshot)"], "Fixed commit": "a960272f7148eb2a620a1f50276469f4b7b17d4e", "Url": "https://api.github.com/repos/suqcnn/incubator-skywalking", "Date": "2018-05-31T00:48:19Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.skywalking.apm.agent.core.context.ContextManager.isActive()) { enhanceRequireObjectCache.setContextSnapshot(org.apache.skywalking.apm.agent.core.context.ContextManager.capture()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2812/buggy-version/apm-sniffer.apm-sdk-plugin.hystrix-1.x-plugin.src.main.java.org.apache.skywalking.apm.plugin.hystrix.v1.SWExecutionHookWrapper.java", "BodyUseAPI": [], "Fixed commit": "a960272f7148eb2a620a1f50276469f4b7b17d4e", "Url": "https://api.github.com/repos/suqcnn/incubator-skywalking", "Date": "2018-05-31T00:48:19Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.skywalking.apm.agent.core.context.ContextManager.isActive()) { enhanceRequireObjectCache.setContextSnapshot(org.apache.skywalking.apm.agent.core.context.ContextManager.capture()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2812/buggy-version/apm-sniffer.apm-sdk-plugin.hystrix-1.x-plugin.src.main.java.org.apache.skywalking.apm.plugin.hystrix.v1.SWExecutionHookWrapper.java", "BodyUseAPI": [], "Fixed commit": "a960272f7148eb2a620a1f50276469f4b7b17d4e", "Url": "https://api.github.com/repos/suqcnn/incubator-skywalking", "Date": "2018-05-31T00:48:19Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sessionBean == null) sessionBean = ((com.aurospaces.neighbourhood.bean.UsersBean) (session.getAttribute(\"cacheUserBean\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8260/buggy-version/src.main.java.com.aurospaces.neighbourhood.db.dao.UsersDao.java", "BodyUseAPI": [], "Fixed commit": "5e5a6e6cb992421775219c783a44bafc3c41cc14", "Url": "https://api.github.com/repos/kotaiahandraju/Matrimony", "Date": "2018-03-07T05:58:02Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.crowsofwar.avatar.common.data.ctx.AbilityContext.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (data.hasTickHandler(com.crowsofwar.avatar.common.bending.air.AIR_PARTICLE_SPAWNER)) { com.crowsofwar.avatar.common.util.Raytrace.Result raytrace = com.crowsofwar.avatar.common.util.Raytrace.getTargetBlock(ctx.getBenderEntity(), (-1)); if (com.crowsofwar.avatar.common.bending.StatusControl.AIR_JUMP.execute(new com.crowsofwar.avatar.common.data.ctx.BendingContext(data, ctx.getBenderEntity(), ctx.getBender(), raytrace))) { data.removeStatusControl(com.crowsofwar.avatar.common.bending.StatusControl.AIR_JUMP); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7764/buggy-version/src.main.java.com.crowsofwar.avatar.common.bending.air.AbilityAirJump.java", "BodyUseAPI": ["com.crowsofwar.avatar.common.data.BendingData.removeStatusControl(com.crowsofwar.avatar.common.bending.StatusControl.AIR_JUMP)", "com.crowsofwar.avatar.common.bending.StatusControl.AIR_JUMP.execute(com.crowsofwar.avatar.common.data.ctx.BendingContext)"], "Fixed commit": "683b0de5b9bed3d6150d21a370a6cb01a0339123", "Url": "https://api.github.com/repos/ProjectKorra/AvatarMod", "Date": "2018-10-02T19:34:39Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.crowsofwar.avatar.common.data.ctx.AbilityContext.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (data.hasTickHandler(com.crowsofwar.avatar.common.bending.fire.FIRE_PARTICLE_SPAWNER)) { com.crowsofwar.avatar.common.bending.StatusControl sc = com.crowsofwar.avatar.common.bending.StatusControl.FIRE_JUMP; com.crowsofwar.avatar.common.util.Raytrace.Result raytrace = com.crowsofwar.avatar.common.util.Raytrace.getTargetBlock(ctx.getBenderEntity(), (-1)); if (com.crowsofwar.avatar.common.bending.StatusControl.FIRE_JUMP.execute(new com.crowsofwar.avatar.common.data.ctx.BendingContext(data, ctx.getBenderEntity(), ctx.getBender(), raytrace))) { data.removeStatusControl(com.crowsofwar.avatar.common.bending.StatusControl.FIRE_JUMP); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7764/buggy-version/src.main.java.com.crowsofwar.avatar.common.bending.fire.AbilityFireJump.java", "BodyUseAPI": ["com.crowsofwar.avatar.common.bending.StatusControl.FIRE_JUMP.execute(com.crowsofwar.avatar.common.data.ctx.BendingContext)", "com.crowsofwar.avatar.common.data.BendingData.removeStatusControl(com.crowsofwar.avatar.common.bending.StatusControl.FIRE_JUMP)"], "Fixed commit": "683b0de5b9bed3d6150d21a370a6cb01a0339123", "Url": "https://api.github.com/repos/ProjectKorra/AvatarMod", "Date": "2018-10-02T19:34:39Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((builder.length()) > 0) { builder.append('\\n'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5603/buggy-version/src.main.java.de.nikos410.discordBot.util.discord.DiscordIO.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)"], "Fixed commit": "4166a2ec79adb71b3f780cf87a952de5e388db3e", "Url": "https://api.github.com/repos/DACH-Discord/de-DiscordBot", "Date": "2018-10-30T13:59:14Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nucleus.geometry.Mesh.getAttributeBuffer(BufferIndex.ATTRIBUTES_STATIC)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (vertices == null) { vertices = mesh.getAttributeBuffer(BufferIndex.ATTRIBUTES); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6119/buggy-version/graphics-by-opengl-j2se.src.main.java.com.nucleus.renderer.BaseRenderer.java", "BodyUseAPI": [], "Fixed commit": "25a8ac13a288b5923bd9e12d47f316a930c3bb9c", "Url": "https://api.github.com/repos/rsahlin/graphics-by-opengl", "Date": "2018-05-28T19:40:25Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pr.getScienceStudyId()) != null) { templateParams.put(\"__SCIENCE_STUDY__\", this.projectService.getScienceStudyNameById(java.lang.Integer.valueOf(pr.getScienceStudyId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7205/buggy-version/src.main.java.nz.org.nesi.project.util.EmailUtil.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,this.projectService.getScienceStudyNameById(java.lang.Integer.valueOf(pr.getScienceStudyId())))", "nz.org.nesi.project.service.ProjectService.getScienceStudyNameById(java.lang.Integer)", "nz.org.nesi.common.db.project.pojo.ProjectRequest.getScienceStudyId()", "java.lang.Integer.valueOf(pr.getScienceStudyId())"], "Fixed commit": "d9fd71cb844f488d7529a4707da47faa6ebad7f4", "Url": "https://api.github.com/repos/nesi/ssp", "Date": "2018-08-27T01:50:39Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(primaryTorpedoStore.isEmpty())) && (!(secondaryTorpedoStore.isEmpty()))) { firingSuccess = primaryTorpedoStore.fire(1); firingSuccess = secondaryTorpedoStore.fire(1); wasPrimaryFiredLast = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6150/buggy-version/src.main.java.hu.bme.mit.spaceship.GT4500.java", "BodyUseAPI": ["hu.bme.mit.spaceship.TorpedoStore.fire(int)", "hu.bme.mit.spaceship.TorpedoStore.fire(int)"], "Fixed commit": "5171d15702c74a095463d669ed1164425a7c41d2", "Url": "https://api.github.com/repos/tasger22/ivt-lab", "Date": "2018-04-20T11:03:47Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queueString.length()) > 2) { queueString = queueString.substring(0, ((queueString.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3522/buggy-version/src.supermarket.FIFO.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "4c9941c7bf75b60e7b3eb202271a62426aeeac02", "Url": "https://api.github.com/repos/kottz/lab5", "Date": "2018-03-02T14:15:34Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.fenixedu.commons.i18n.LocalizedString.logger.isDebugEnabled()) { org.fenixedu.commons.i18n.LocalizedString.logger.debug(\"adding null content for locale: {} to {}\", locale.toLanguageTag(), this.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8764/buggy-version/src.main.java.org.fenixedu.commons.i18n.LocalizedString.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "54c56d6d4b11c9849008cdafc08e71809d3d6724", "Url": "https://api.github.com/repos/FenixEdu/fenixedu-commons", "Date": "2018-05-10T10:44:26Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.fenixedu.commons.i18n.I18N.logger.isTraceEnabled()) { org.fenixedu.commons.i18n.I18N.logger.trace(\"Set thread's locale to: {}\", org.fenixedu.commons.i18n.I18N.locale.get().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8764/buggy-version/src.main.java.org.fenixedu.commons.i18n.I18N.java", "BodyUseAPI": ["org.slf4j.Logger.trace(java.lang.String,java.lang.String)"], "Fixed commit": "54c56d6d4b11c9849008cdafc08e71809d3d6724", "Url": "https://api.github.com/repos/FenixEdu/fenixedu-commons", "Date": "2018-05-10T10:44:26Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list(java.io.FilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((files == null) || ((files.length) == 0)) { return new com.rfview.LogFile[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1399/buggy-version/src.main.java.com.rfview.management.MazeserverManagement.java", "BodyUseAPI": [], "Fixed commit": "c84e2f291adad61b65ba295c2b144df9f341b6cd", "Url": "https://api.github.com/repos/rfmaze2012/rfmaze-client", "Date": "2018-07-15T03:58:08Z"},
{"Line": "=>618", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world.inGameMusic) != null) { world.inGameMusic.pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8813/buggy-version/NeonRush.app.src.main.java.nosleep.neonrush.MainGameScreen.java", "BodyUseAPI": ["world.inGameMusic.pause()"], "Fixed commit": "1890ef3dd4dd05d6f60e76946cbb3c627face00d", "Url": "https://api.github.com/repos/jthra037/AlphaTeam-Android", "Date": "2018-01-12T00:07:12Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(utxoPool.contains(utxo))) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/600/buggy-version/ScroogeCoin.src.ch.scrooge.MaxFeeTxHandler.java", "BodyUseAPI": [], "Fixed commit": "d214dc320b33fbbe1cd72249e1e987ad874bae88", "Url": "https://api.github.com/repos/tararanaki/Coursera", "Date": "2018-01-17T11:31:50Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (entityClass != null) { try { return entityClass.getDeclaredField(foundFieldName); } catch (java.lang.NoSuchFieldException ignored) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2566/buggy-version/src.main.java.eins.utils.dto.DtoUtils.java", "BodyUseAPI": ["java.lang.Class<?>.getDeclaredField(java.lang.String)"], "Fixed commit": "3ce0aa297fd33dd7bd0a31fe98b3638519266621", "Url": "https://api.github.com/repos/orok7/shtamp_mayster_v2", "Date": "2018-05-14T14:09:15Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["BookCategory.GENERAL_BOOK.equals(inactivePage.getCurrentDocument().getBookCategory())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isGeneralBook || isUnsynchronizedCommentary) { }else { new net.bible.android.control.page.window.WindowSync.UpdateInactiveScreenTextTask().execute(inactiveWindow); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7641/buggy-version/and-bible.app.src.main.java.net.bible.android.control.page.window.WindowSync.java", "BodyUseAPI": [], "Fixed commit": "b6805bfa46a269dc64a563cc1182c09d6880ca23", "Url": "https://api.github.com/repos/tuomas2/and-bible", "Date": "2018-04-15T12:25:12Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (proxy != null) { mapping.putIfNotNull(\"proxy\", cp.describe(proxy)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8212/buggy-version/src.main.java.org.jenkinsci.plugins.casc.plugins.PluginManagerConfigurator.java", "BodyUseAPI": ["org.jenkinsci.plugins.casc.Configurator.describe(hudson.ProxyConfiguration)", "org.jenkinsci.plugins.casc.model.Mapping.putIfNotNull(java.lang.String,cp.describe(proxy))"], "Fixed commit": "6a75720fe3f2dedf0753ccd1c9a7405b400e13dd", "Url": "https://api.github.com/repos/voyages-sncf-technologies/configuration-as-code-plugin", "Date": "2018-06-05T11:09:34Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (connectionState.isValid) { connectionState.connectionCallback.initialConnectionUpdate(null, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8639/buggy-version/src.controller.NetworkingLibrary.java", "BodyUseAPI": ["controller.NetworkingLibrary.NetworkConnectionHandler.initialConnectionUpdate(<nulltype>,boolean)"], "Fixed commit": "2afb5397ce7fda5f93bfcac79c1a06e92fad3904", "Url": "https://api.github.com/repos/Samonella7/Petroglyph", "Date": "2018-10-20T18:48:25Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (connectionState.isValid) { connectionState.connectionCallback.initialConnectionUpdate(connectionState, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8639/buggy-version/src.controller.NetworkingLibrary.java", "BodyUseAPI": ["controller.NetworkingLibrary.NetworkConnectionHandler.initialConnectionUpdate(controller.NetworkingLibrary.NetworkConnection,boolean)"], "Fixed commit": "2afb5397ce7fda5f93bfcac79c1a06e92fad3904", "Url": "https://api.github.com/repos/Samonella7/Petroglyph", "Date": "2018-10-20T18:48:25Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isclick) { if ((onClickListener) != null) { onClickListener.onClick(this); android.util.Log.e(\"tag\", \"dianji\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5752/buggy-version/float_lib.src.main.java.floatwindow.xishuang.float_lib.view.FloatLayout.java", "BodyUseAPI": [], "Fixed commit": "acd148ca8b3ff5c3deb9f0be20b4649b2c36ed00", "Url": "https://api.github.com/repos/ccclll1990/FloatWindowProject", "Date": "2018-04-28T09:48:07Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getInstanceSymbol()) == (InstanceSymbol.constructorSymbol)) { if ((blockReturn.typeSymbol) != (voidTypeSymbol)) throw new java.lang.RuntimeException((\"ERROR: (Type Checking) Constructor can not return any value \" + (node.getStartLocation().getLocation()))); }else if ((blockReturn.typeSymbol) != (node.getFunctionTypeSymbol().getReturnType())) throw new java.lang.RuntimeException((\"ERROR: (Type Checking) Function does not return a value as declared \" + (node.getStartLocation().getLocation())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8713/buggy-version/MWCompiler.src.mwcompiler.symbols.tools.TypeCheckAstVisitor.java", "BodyUseAPI": ["node.getStartLocation().getLocation()", "mwcompiler.symbols.tools.FunctionDeclNode.getStartLocation()", "mwcompiler.symbols.tools.FunctionDeclNode.getStartLocation()", "node.getFunctionTypeSymbol().getReturnType()", "node.getStartLocation().getLocation()", "mwcompiler.symbols.tools.FunctionDeclNode.getFunctionTypeSymbol()"], "Fixed commit": "9ae746626d8694a3c0b399bc22427092013d714b", "Url": "https://api.github.com/repos/Michaelvll/MWCompiler", "Date": "2018-04-17T15:44:59Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (sdCardName != null) { java.lang.String[] externalStorageDirs = com.dewdrop623.androidcrypt.StorageAccessFrameworkHelper.getExternalStorageDirectories(context); for (int i = 0; i < (externalStorageDirs.length); i++) { if (externalStorageDirs[i].contains(sdCardName)) { return externalStorageDirs[i]; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7228/buggy-version/app.src.main.java.com.dewdrop623.androidcrypt.StorageAccessFrameworkHelper.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)"], "Fixed commit": "3c21c275f318a8a70edfc182b3e63c3d8f2c0e30", "Url": "https://api.github.com/repos/ndew623/AndroidCrypt", "Date": "2018-01-23T22:41:54Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["project.cs495.splitit.models.Receipt.getSubtotal()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (masterReceiptSubtotal == 0) { masterReceiptSubtotal = receipt.getPrice(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3359/buggy-version/SplitIt.app.src.main.java.project.cs495.splitit.ReceiptViewActivity.java", "BodyUseAPI": [], "Fixed commit": "597daac998a961257670fcffe7fc74a049880b52", "Url": "https://api.github.com/repos/bpsokol/split-it", "Date": "2018-04-25T00:12:28Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataLoader) == null) { dataLoader = new com.tmw.etl.etlapp.DataLoader(transformedData, gameRepository); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/385/buggy-version/src.main.java.com.tmw.etl.etlapp.EtlController.java", "BodyUseAPI": [], "Fixed commit": "e65cd3815e92569072217d6650f5c1cd222bf4be", "Url": "https://api.github.com/repos/brq0/etl-app", "Date": "2018-10-29T22:03:32Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (data[0].equals(\"name\")) { userSession.getUserProperties().put(\"username\", data[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4764/buggy-version/Dat076.TicTacToe.src.java.websocket.GameServerEndpoint.java", "BodyUseAPI": ["userSession.getUserProperties().put(java.lang.String,java.lang.String)"], "Fixed commit": "0907e3fe9a128898240164fbb0de8a22b70273f4", "Url": "https://api.github.com/repos/Cykelpojken/DAT076", "Date": "2018-03-06T16:26:18Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["one.lindegaard.BagOfGold.Reward.getReward(org.bukkit.inventory.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rewardInSlot.getMoney()) == 0) is = new org.bukkit.inventory.ItemStack(org.bukkit.Material.AIR); else is = setDisplayNameAndHiddenLores(is, rewardInSlot);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9058/buggy-version/src.one.lindegaard.BagOfGold.EconomyManager.java", "BodyUseAPI": ["one.lindegaard.BagOfGold.EconomyManager.setDisplayNameAndHiddenLores(org.bukkit.inventory.ItemStack,one.lindegaard.BagOfGold.Reward)"], "Fixed commit": "4d04c879b0a421ec8249729860ddd210edc87885", "Url": "https://api.github.com/repos/Rocologo/BagOfGold", "Date": "2018-07-25T09:34:35Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clientIds != null) { for (java.lang.String id : clientIds) { if (authorized(id)) { relationships.add(find(id)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4275/buggy-version/src.main.java.gov.ca.cwds.rest.services.RelationshipsService.java", "BodyUseAPI": [], "Fixed commit": "e33f2ba3fe727203c8ffb0409b83093d3d4af1a6", "Url": "https://api.github.com/repos/ca-cwds/API", "Date": "2018-06-22T22:41:12Z"},
{"Line": "=>1738", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (enemy.getName().equals(\"Priest\")) { drawImage(enemy.getSprite(), ((enemy.getCombatPosX()) - 50), ((enemy.getCombatPosY()) - 50), enemy.getSpriteWidth(), enemy.getSpriteHeight(), g); }else { drawImage(enemy.getSprite(), enemy.getCombatPosX(), enemy.getCombatPosY(), enemy.getSpriteWidth(), enemy.getSpriteHeight(), g); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/556/buggy-version/src.Combat.java", "BodyUseAPI": ["Monster.getSprite()", "Monster.getCombatPosY()", "Monster.getCombatPosY()", "Combat.drawImage(enemy.getSprite(),enemy.getCombatPosX(),enemy.getCombatPosY(),enemy.getSpriteWidth(),enemy.getSpriteHeight(),java.awt.Graphics2D)", "Monster.getSpriteWidth()", "Monster.getSpriteHeight()", "Combat.drawImage(enemy.getSprite(),((enemy.getCombatPosX()) - 50),((enemy.getCombatPosY()) - 50),enemy.getSpriteWidth(),enemy.getSpriteHeight(),java.awt.Graphics2D)", "Monster.getSpriteWidth()", "Monster.getCombatPosX()", "Monster.getCombatPosX()", "Monster.getSprite()", "Monster.getSpriteHeight()"], "Fixed commit": "153d1a656e41f79a3235995ba4b032f144e3c87f", "Url": "https://api.github.com/repos/Bupton64/GroupAssignment", "Date": "2018-01-29T00:39:50Z"},
{"Line": "=>690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.systemui.statusbar.ExpandableNotificationRow.isExpanded()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (wasExpanded != (isExpanded())) { if (mIsSummaryWithChildren) { mChildrenContainer.updateGroupOverflow(); } notifyHeightChanged(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7099/buggy-version/packages.SystemUI.src.com.android.systemui.statusbar.ExpandableNotificationRow.java", "BodyUseAPI": [], "Fixed commit": "65fd3fecf02a0496b125fae88ed3b1afaf2f2e00", "Url": "https://api.github.com/repos/CopperheadOS/platform_frameworks_base", "Date": "2015-12-10T23:19:36Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((longClickListener) != null) { return longClickListener.onItemLongClick(v, itemHolder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8607/buggy-version/memory-note.src.main.java.com.lgc.memorynote.wordList.WordListAdapter.java", "BodyUseAPI": [], "Fixed commit": "0245e2e94a77f76b376fa37c39d1f9673342e655", "Url": "https://api.github.com/repos/liuguicen/MemoryNote", "Date": "2018-02-19T14:52:02Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= (getCount())) { return rView; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1163/buggy-version/app.src.main.java.com.elementary.tasks.core.app_widgets.tasks.TasksFactory.java", "BodyUseAPI": [], "Fixed commit": "c60a8c43b729240531e5029b574b48113c6d5f48", "Url": "https://api.github.com/repos/naz013/Reminder", "Date": "2018-01-11T16:50:00Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (jp.ne.sakura.kkkon.lib.UnityMulticastTunnelHost.mSocket)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2891/buggy-version/lib-tunnel.src.main.java.jp.ne.sakura.kkkon.lib.UnityMulticastTunnelHost.java", "BodyUseAPI": [], "Fixed commit": "ca092af8ed64ff8ec99881e965e475f64fb4360c", "Url": "https://api.github.com/repos/kkkon/unity-android-usbdebug", "Date": "2018-09-17T08:44:05Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(transformInvocation.isIncremental())) outputProvider.deleteAll();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/752/buggy-version/bouquet-plugin.src.main.java.com.quanturium.bouquet.plugin.configure.AspectJAndroidTransform.java", "BodyUseAPI": [], "Fixed commit": "1d086c8ec337482f5d4dbe54857a2b77bd70eb59", "Url": "https://api.github.com/repos/quanturium/bouquet", "Date": "2018-05-24T00:50:29Z"},
{"Line": "=>1985", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.math3.distribution.ChiSquaredDistribution.cumulativeProbability(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.Double.isNaN(c)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9842/buggy-version/tetrad-lib.src.main.java.edu.cmu.tetrad.data.DataUtils.java", "BodyUseAPI": [], "Fixed commit": "5cc58182ef4520d89945caef39ccb55d50e6a790", "Url": "https://api.github.com/repos/cmu-phil/tetrad", "Date": "2018-01-11T17:10:24Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentOrder.getItems().size()) == 0) { java.lang.String[] a = new java.lang.String[]{ (currentOrder.getId()) + \"\" }; com.team3.bra.JDBC.callProcedure(\"RemoveOrder\", a); android.widget.Toast toast = android.widget.Toast.makeText(getApplicationContext(), \"Order deleted because it is empty.\", Toast.LENGTH_SHORT); toast.show(); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3250/buggy-version/app.src.main.java.com.team3.bra.OrderView.java", "BodyUseAPI": ["com.team3.bra.Order.getId()"], "Fixed commit": "44f34c72b66c4858a2623035d11933762d6199cb", "Url": "https://api.github.com/repos/CS-UCY-EPL343/epl361.BRA", "Date": "2018-03-22T19:59:26Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, org.apache.kafka.clients.FetchSessionHandler>.get(fetchTarget.id())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (handler != null) { handler.handleError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4731/buggy-version/clients.src.main.java.org.apache.kafka.clients.consumer.internals.Fetcher.java", "BodyUseAPI": ["org.apache.kafka.clients.FetchSessionHandler.handleError(java.lang.RuntimeException)"], "Fixed commit": "b41a2f204dd29085d7575caf3bf0a8f68d1dac14", "Url": "https://api.github.com/repos/cmccabe/kafka", "Date": "2018-01-31T20:04:51Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dm.GetUsersDetails().Name) == \"NO USER\") { android.widget.Toast.makeText(this, \"You need to create a profile\", Toast.LENGTH_LONG).show(); }else { android.content.Intent activity = new android.content.Intent(getApplication(), com.example.samue.fitnessap20.HomeActivity.class); startActivity(activity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5182/buggy-version/fitnessAp20.app.src.main.java.com.example.samue.fitnessap20.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cbe0baa58ae71ae4747f26dbc1f17722c32665bf", "Url": "https://api.github.com/repos/sammilward/Amateur-Fitness-App", "Date": "2018-04-08T19:28:31Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.glassfish.grizzly.http.HttpContent.getContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (contentBuffer.hasRemaining()) { return org.glassfish.grizzly.http.ajp.AjpMessageUtils.appendContentAndTrim(memoryManager, encodedBuffer, contentBuffer); }else if (encodedBuffer == null) { encodedBuffer = org.glassfish.grizzly.memory.Buffers.EMPTY_BUFFER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1618/buggy-version/modules.http-ajp.src.main.java.org.glassfish.grizzly.http.ajp.AjpHandlerFilter.java", "BodyUseAPI": ["org.glassfish.grizzly.http.ajp.AjpMessageUtils.appendContentAndTrim(org.glassfish.grizzly.memory.MemoryManager,org.glassfish.grizzly.Buffer,org.glassfish.grizzly.Buffer)"], "Fixed commit": "c6a4d7c230ff0ef5f211e9e28998388d7e6229a8", "Url": "https://api.github.com/repos/payara/patched-src-grizzly", "Date": "2018-06-20T14:51:00Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cn.jzvd.JZMediaManager.savedSurfaceTexture) != null) { if ((cn.jzvd.JZMediaManager.surface) != null) { cn.jzvd.JZMediaManager.surface.release(); } cn.jzvd.JZMediaManager.surface = new android.view.Surface(cn.jzvd.JZMediaManager.savedSurfaceTexture); jzMediaInterface.setSurface(cn.jzvd.JZMediaManager.surface); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4925/buggy-version/jiaozivideoplayer.src.main.java.cn.jzvd.JZMediaManager.java", "BodyUseAPI": [], "Fixed commit": "ecb9f5f92635eaf295291edf5113acbc93530632", "Url": "https://api.github.com/repos/sproypef/JiaoZiVideoPlayer", "Date": "2018-01-12T16:32:28Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.OFResultDisplay) != null) { OFResultDisplay.setImageSize(chip.getSizeX(), chip.getSizeY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7063/buggy-version/src.ch.unizh.ini.jaer.projects.minliu.OpenCVFlow.java", "BodyUseAPI": [], "Fixed commit": "bfdcef9723bb67b3c852960ef3b2b4d197a7ceca", "Url": "https://api.github.com/repos/SensorsINI/jaer", "Date": "2018-02-19T10:33:35Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentPos()) != null) { result = navULL.canSee(getCurrentPos(), radians); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8718/buggy-version/app.ar-maps.app.src.main.java.com.example.alehp.ar_maps.Activities.ARNavigation.java", "BodyUseAPI": [], "Fixed commit": "7d5cc9043a7ecc1b1d899dcda9ad8419b9725afe", "Url": "https://api.github.com/repos/alehdezp/TFG-ULL-NAVIGATION", "Date": "2018-06-07T15:17:51Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.miyazawakase.seabaldkiller.Utils.Utils.getSpinnerIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pIndex == (com.example.miyazawakase.seabaldkiller.Activity.MainActivity.spinner_index)) new com.example.miyazawakase.seabaldkiller.Utils.Utils(this).saveSpinnerIndex(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8957/buggy-version/app.src.main.java.com.example.miyazawakase.seabaldkiller.Activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "896141327a3d071ce9b90679582ce5e1cf25ef83", "Url": "https://api.github.com/repos/Miyazawakase/SeaBaldKiller", "Date": "2018-05-31T10:22:06Z"},
{"Line": "=>1163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isSSLEnabled)) { addToReader = true; }else { if ((((crlValidator) != null) && handshakeDone) && crlValidationPassed) { addToReader = true; }else if (((crlValidator) == null) && handshakeDone) { addToReader = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6371/buggy-version/hadoop-common-project.hadoop-common.src.main.java.org.apache.hadoop.ipc.Server.java", "BodyUseAPI": [], "Fixed commit": "9ff46b4cf876c8203ce92fb8c453ea7f40b9471c", "Url": "https://api.github.com/repos/kouzant/hops", "Date": "2018-03-20T17:36:11Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hardReset) { scaleProviderHandler = new com.applitools.eyes.SimplePropertyHandler(); scaleProviderHandler.set(new com.applitools.eyes.scaling.NullScaleProvider()); cutProviderHandler = new com.applitools.eyes.SimplePropertyHandler(); cutProviderHandler.set(new com.applitools.eyes.NullCutProvider()); positionProvider = new com.applitools.eyes.InvalidPositionProvider(); viewportSizeHandler = new com.applitools.eyes.SimplePropertyHandler(); viewportSizeHandler.set(null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4287/buggy-version/eyes.sdk.core.src.main.java.com.applitools.eyes.EyesBase.java", "BodyUseAPI": [], "Fixed commit": "0cff4de1aa2c082e42310d3a6214fd8cc9e6a8a3", "Url": "https://api.github.com/repos/itaibh/eyes.sdk.java3", "Date": "2018-03-09T10:46:22Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getAuthor()) == (event.getJDA().getSelfUser())) { java.lang.System.out.println(\"Bot Nachricht\\n\"); }else { java.lang.System.out.println((\"Nachricht von : \" + (event.getAuthor().getName()))); java.lang.System.out.println((\"Inhalt \" + (event.getMessage().getContentRaw()))); java.lang.System.out.println((\"Channel : \" + (event.getTextChannel().getName()))); java.lang.System.out.println(\"---------------------------------------------\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8662/buggy-version/src.main.java.listeners.commandListener.java", "BodyUseAPI": ["net.dv8tion.jda.core.events.message.MessageReceivedEvent.getAuthor()", "java.io.PrintStream.println((\"Inhalt  \" + (event.getMessage().getContentRaw())))", "net.dv8tion.jda.core.events.message.MessageReceivedEvent.getTextChannel()", "event.getMessage().getContentRaw()", "event.getAuthor().getName()", "java.io.PrintStream.println((\"Nachricht von : \" + (event.getAuthor().getName())))", "java.io.PrintStream.println((\"Channel : \" + (event.getTextChannel().getName())))", "event.getTextChannel().getName()", "net.dv8tion.jda.core.events.message.MessageReceivedEvent.getMessage()"], "Fixed commit": "7113f1f4d85bb24488a65109c72cf6cf8c76a3cb", "Url": "https://api.github.com/repos/Henry440/DiscordBotTest", "Date": "2018-04-01T15:54:40Z"},
{"Line": "=>691", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playbackState == (com.google.android.exoplayer2.Player.STATE_READY)) && (!(durationSet))) { durationSet = true; if ((stateManager) != null) stateManager.restoreTrackPosition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6198/buggy-version/exoplayeractivity.src.main.java.com.liskovsoft.smartyoutubetv.flavors.exoplayer.player.PlayerActivity.java", "BodyUseAPI": [], "Fixed commit": "bb478eb7c8cd35bc2c718737ddd0701f29d567be", "Url": "https://api.github.com/repos/yuliskov/SmartYouTubeTV", "Date": "2018-08-16T13:03:17Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOk) { return channel; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5548/buggy-version/broker.src.main.java.org.apache.rocketmq.broker.client.ProducerManager.java", "BodyUseAPI": [], "Fixed commit": "6073b238886b6eb5b2f0398e6f80556bcad5f2a2", "Url": "https://api.github.com/repos/duhengforever/rocketmq", "Date": "2018-07-16T13:38:00Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(editText.getText().toString().equals(\"\"))) { contributors_list.add(editText.getText().toString()); com.example.piotr.projectmanager.Component.setListViewHeight(lv); arrayAdapter.notifyDataSetChanged(); }else android.widget.Toast.makeText(this, \"First fill this field!\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2412/buggy-version/app.src.main.java.com.example.piotr.projectmanager.Activities.NewProjectActivity.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(editText.getText().toString())", "android.widget.EditText.getText()", "editText.getText().toString()"], "Fixed commit": "fb556692c7daacc2ed38c796b82f75f6819f97cf", "Url": "https://api.github.com/repos/Pakistanp/ProjectManager", "Date": "2018-09-05T07:39:18Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!queued) { lock.unlock(); serverJob.getLock().lock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1053/buggy-version/server.src.java.org.jppf.server.queue.JPPFPriorityQueue.java", "BodyUseAPI": [], "Fixed commit": "bec5468569e253fd5fcd2f694ad25694ed79d81a", "Url": "https://api.github.com/repos/jppf-grid/JPPF", "Date": "2018-05-23T20:30:09Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (uuid == null) throw new java.lang.NullPointerException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8868/buggy-version/ClanLibraries.src.de.gerolmed.lib.clan.ClanUser.java", "BodyUseAPI": [], "Fixed commit": "811700eb1830b29d1e68fe4921382e159518c5a4", "Url": "https://api.github.com/repos/Gerolmed/ClanSystem", "Date": "2018-05-18T14:16:41Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((preferences.getInt(\"dinosaurs\", (-1))) == (-1)) { editor.putInt(\"dinosaurs\", 1); java.lang.String dinomite = getResources().getString(R.string.dinomite); java.lang.String existingTitles = preferences.getString(\"title list\", null); java.lang.StringBuilder titlebuild = new java.lang.StringBuilder(existingTitles); titlebuild.append(\",\"); titlebuild.append(dinomite); editor.putString(\"title list\", titlebuild.toString()); editor.apply(); java.lang.String newTitleEarned = getResources().getString(R.string.new_title_earned); android.widget.Toast.makeText(this, newTitleEarned, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5988/buggy-version/app.src.main.java.edu.neu.madcourse.michellelee.dangerzone.EndWalk.java", "BodyUseAPI": ["android.content.SharedPreferences.getString(java.lang.String,<nulltype>)"], "Fixed commit": "48da2dc3d41c43490cb905e9793c65a8cc081142", "Url": "https://api.github.com/repos/michelledlee/SittingInTheDangerZone", "Date": "2018-08-07T20:50:57Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.geotask.myapplication.DataClasses.Task>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.getStatus().toLowerCase().compareTo(\"requested\")) == 0) { item.setStatusBidded(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1385/buggy-version/app.src.main.java.com.geotask.myapplication.Adapters.FastTaskArrayAdapter.java", "BodyUseAPI": ["com.geotask.myapplication.DataClasses.Task.setStatusBidded()"], "Fixed commit": "8140e6b43e4800a23688f09636a226ba741d6b62", "Url": "https://api.github.com/repos/CMPUT301W18T23/GeoTask", "Date": "2018-03-19T18:02:51Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.geotask.myapplication.DataClasses.Task>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.getStatus().toLowerCase().compareTo(\"requested\")) == 0) { item.setStatusBidded(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1385/buggy-version/app.src.main.java.com.geotask.myapplication.Adapters.FastTaskArrayAdapter.java", "BodyUseAPI": ["com.geotask.myapplication.DataClasses.Task.setStatusBidded()"], "Fixed commit": "8140e6b43e4800a23688f09636a226ba741d6b62", "Url": "https://api.github.com/repos/CMPUT301W18T23/GeoTask", "Date": "2018-03-19T18:02:51Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.webpieces.ctx.api.Current.flash()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(flash.isShowEditPopup())) { if (!(keys.contains(pieces[0]))) throw new java.lang.IllegalArgumentException(((\"Controller did not pass a value(null is fine) for key='\" + (pieces[0])) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8211/buggy-version/webserver.http-templating.src.main.java.org.webpieces.templating.impl.tags.FieldTag.java", "BodyUseAPI": [], "Fixed commit": "6a578b43f54a0e9d483c29fc058b31a9fa55ef2d", "Url": "https://api.github.com/repos/deanhiller/webpieces", "Date": "2018-09-04T23:45:31Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["properties.getJSONObject(\"precipitationLastHour\").get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lastHrObj.equals(null)) lastHr = 0.0; else lastHr = ((java.lang.Double) (lastHrObj));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7995/buggy-version/src.gui.WeatherManager.java", "BodyUseAPI": [], "Fixed commit": "d504bb3d3ec8bdb8df9214ff528d61cd5fb83a13", "Url": "https://api.github.com/repos/RyanTorok/paintbrush_lms", "Date": "2018-06-12T05:27:21Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastHr == null) lastHr = 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7995/buggy-version/src.gui.WeatherManager.java", "BodyUseAPI": [], "Fixed commit": "d504bb3d3ec8bdb8df9214ff528d61cd5fb83a13", "Url": "https://api.github.com/repos/RyanTorok/paintbrush_lms", "Date": "2018-06-12T05:27:21Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTechnologyComponent()) != null) { performUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6415/buggy-version/gina-core.src.main.java.org.openflexo.gina.view.impl.FIBViewImpl.java", "BodyUseAPI": [], "Fixed commit": "76c6e12141e1e47f9fd251b5a2ad6c6570730899", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2018-02-08T18:43:32Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.talend.commons.ui.runtime.CommonUIPlugin.isFullyHeadless()) { org.talend.designer.maven.tools.AggregatorPomsHelper.buildAndInstallCodesProject(monitor, ERepositoryObjectType.ROUTINES, false); if (org.talend.core.model.process.ProcessUtils.isRequiredPigUDFs(null)) { org.talend.designer.maven.tools.AggregatorPomsHelper.buildAndInstallCodesProject(monitor, ERepositoryObjectType.PIG_UDF, false); } if (org.talend.core.model.process.ProcessUtils.isRequiredBeans(null)) { org.talend.designer.maven.tools.AggregatorPomsHelper.buildAndInstallCodesProject(monitor, org.talend.core.model.repository.ERepositoryObjectType.valueOf(\"BEANS\"), false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1898/buggy-version/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.maven.MavenJavaProcessor.java", "BodyUseAPI": [], "Fixed commit": "5372abbbc2a127d0fa21196b989376e344c3f044", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2018-02-26T11:09:31Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (botanicalObjectId != null) { javax.persistence.TypedQuery<org.jacq.common.model.jpa.TblSpecimen> specimenQuery = em.createNamedQuery(\"TblSpecimen.findByBotanicalObjectId\", org.jacq.common.model.jpa.TblSpecimen.class); specimenQuery.setParameter(\"botanicalObjectId\", em.find(org.jacq.common.model.jpa.TblBotanicalObject.class, botanicalObjectId)); return org.jacq.common.model.rest.SpecimenResult.fromList(specimenQuery.getResultList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2722/buggy-version/jacq-service.src.main.java.org.jacq.service.manager.DerivativeManager.java", "BodyUseAPI": ["javax.persistence.EntityManager.find(java.lang.Class,java.lang.Long)", "javax.persistence.TypedQuery<org.jacq.common.model.jpa.TblSpecimen>.setParameter(java.lang.String,em.find(org.jacq.common.model.jpa.TblBotanicalObject.class, botanicalObjectId))"], "Fixed commit": "bb3966785d148633c8976c07a7388a09517e92fc", "Url": "https://api.github.com/repos/Viras-/jacq-javaee", "Date": "2018-07-13T15:07:46Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (derivativeId != null) { javax.persistence.TypedQuery<org.jacq.common.model.jpa.TblVegetative> vegetativeQuery = em.createNamedQuery(\"TblVegetative.findByBotanicalObjectId\", org.jacq.common.model.jpa.TblVegetative.class); vegetativeQuery.setParameter(\"botanicalObjectId\", em.find(org.jacq.common.model.jpa.TblDerivative.class, derivativeId).getBotanicalObjectId()); return org.jacq.common.model.rest.VegetativeResult.fromList(vegetativeQuery.getResultList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2722/buggy-version/jacq-service.src.main.java.org.jacq.service.manager.DerivativeManager.java", "BodyUseAPI": ["javax.persistence.EntityManager.find(java.lang.Class,java.lang.Long)", "javax.persistence.TypedQuery<org.jacq.common.model.jpa.TblVegetative>.setParameter(java.lang.String,em.find(org.jacq.common.model.jpa.TblDerivative.class, derivativeId).getBotanicalObjectId())", "em.find(org.jacq.common.model.jpa.TblDerivative.class, derivativeId).getBotanicalObjectId()"], "Fixed commit": "bb3966785d148633c8976c07a7388a09517e92fc", "Url": "https://api.github.com/repos/Viras-/jacq-javaee", "Date": "2018-07-13T15:07:46Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (report.isNotResolved()) { reports.add(report); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9864/buggy-version/app.src.main.java.magazoo.magazine.langa.tine.repository.Repository.java", "BodyUseAPI": ["java.util.ArrayList<magazoo.magazine.langa.tine.model.Report>.add(magazoo.magazine.langa.tine.model.Report)"], "Fixed commit": "c5bb7ef8bc17f807f1166c511d77c42736dc25f6", "Url": "https://api.github.com/repos/CazimirRoman/Magazoo", "Date": "2018-04-23T16:18:46Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isChildOfSymbol(parent, child))) parent.childrenList.add(child);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1276/buggy-version/src.main.java.com.myreward.parser.symbol.Symbol.java", "BodyUseAPI": ["java.util.List<com.myreward.parser.symbol.Symbol>.add(com.myreward.parser.symbol.Symbol)"], "Fixed commit": "d4059dafead323738e54a900b5e58b90197e81f0", "Url": "https://api.github.com/repos/vippulpanditgit/myrewardengine", "Date": "2018-04-18T04:08:04Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((firstRowIsHeader) == false) || (dataRowIndex > 0)) { cellFormatMap.put(cell.getColumnIndex(), ((short) (org.apache.poi.ss.usermodel.BuiltinFormats.getBuiltinFormat(\"TEXT\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2846/buggy-version/src.main.java.de.jlo.talendcomp.excel.SpreadsheetOutput.java", "BodyUseAPI": [], "Fixed commit": "3c7a7713516e795708ae19d24ae241182cec10b8", "Url": "https://api.github.com/repos/jlolling/talendcomp_tFileExcel", "Date": "2018-04-20T21:13:32Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dateStart.after(dateEnd)) { javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), \"Date selected is wrong!\", \"Assignment error\", javax.swing.JOptionPane.ERROR_MESSAGE); }else if ((dogsSelected.size()) == 0) { javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), \"No dogs selected!\", \"Assignment error\", javax.swing.JOptionPane.ERROR_MESSAGE); }else if ((!(radioButtonCash.isSelected())) && (!(radioButtonCreditCard.isSelected()))) { javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), \"No payment method selected!\", \"Assignment error\", javax.swing.JOptionPane.ERROR_MESSAGE); }else switch (month) { case \"02\" : { if (((java.lang.Integer.parseInt(year)) % 4) != 0) { if (((day.equals(\"29\")) || (day.equals(\"30\"))) || (day.equals(\"31\"))) { javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), \"Date selected is wrong!\", \"Assignment error\", javax.swing.JOptionPane.ERROR_MESSAGE); break; } } if (((java.lang.Integer.parseInt(year)) % 4) == 0) { if ((day.equals(\"30\")) || (day.equals(\"31\"))) { javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), \"Date selected is wrong!\", \"Assignment error\", javax.swing.JOptionPane.ERROR_MESSAGE); break; } } } case \"04\" : { if (day.equals(\"31\")) { javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), \"Date selected is wrong!\", \"Assignment error\", javax.swing.JOptionPane.ERROR_MESSAGE); break; } } case \"06\" : { if (day.equals(\"31\")) { javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), \"Date selected is wrong!\", \"Assignment error\", javax.swing.JOptionPane.ERROR_MESSAGE); break; } } case \"09\" : { if (day.equals(\"31\")) { javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), \"Date selected is wrong!\", \"Assignment error\", javax.swing.JOptionPane.ERROR_MESSAGE); break; } } case \"11\" : { if (day.equals(\"31\")) { javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), \"Date selected is wrong!\", \"Assignment error\", javax.swing.JOptionPane.ERROR_MESSAGE); break; } } default : { dogsittersMailList = customerProxy.search(dateStart, dateEnd, meetingPoint, dogsSelected, paymentMethod); if (dogsittersMailList.isEmpty()) { javax.swing.JOptionPane.showMessageDialog(new javax.swing.JFrame(), \"Sorry, we couldn't find any dogsitter!\", \"Assignment error\", javax.swing.JOptionPane.ERROR_MESSAGE); }else { customerClient.gui.GUINewAssignment.guiChooseDogsitter = new customerClient.gui.GUIChooseDogsitter(dogsittersMailList, dateStart, dateEnd, dogsSelected, meetingPoint, paymentMethod, email); customerClient.gui.GUINewAssignment.guiChooseDogsitter.setVisible(true); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7395/buggy-version/src.customerClient.gui.GUINewAssignment.java", "BodyUseAPI": ["customerClient.CustomerProxy.search(java.util.Date,java.util.Date,server.places.Address,java.util.HashSet<server.Dog>,boolean)"], "Fixed commit": "9b8a59e1fa052208fe2c068a7ce9a9cbf18f7884", "Url": "https://api.github.com/repos/IngSW-unipv/Progetto-F18", "Date": "2018-07-02T13:42:02Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["playerService.getPlayersToPlay(gson.fromJson(playerInJson, com.spring.player.Player.class).getUID()).get().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((player1.getMap()) == null) { com.spring.map.CompleteMap completeMap = new com.spring.map.CompleteMap(); java.lang.String map = completeMap.getJsonInTiledFormatWithDataInserted(); player1.setMap(map); player2.setMap(map); playerService.updatePlayer(player1); playerService.updatePlayer(player2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4033/buggy-version/springboot.src.main.java.com.spring.controller.PlayerController.java", "BodyUseAPI": ["com.spring.player.Player.setMap(java.lang.String)", "com.spring.repository.PlayerService.updatePlayer(com.spring.player.Player)"], "Fixed commit": "520dcb713030f7aabb91c3a52dd3d4c738a344fa", "Url": "https://api.github.com/repos/MartinKarjus/idk0071", "Date": "2018-04-09T15:00:55Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag.equals(SqlpKit.FLAG.ONE)) { return \"id:\" + key; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8272/buggy-version/src.main.java.com.jfinal.ext.plugin.activerecord.ModelExt.java", "BodyUseAPI": [], "Fixed commit": "548eb242370bab41bf0315c2027f04d4de625ed4", "Url": "https://api.github.com/repos/E7du/jfinal-ext3", "Date": "2018-09-26T12:31:04Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (min == ((numVertices) + 1)) { min = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9336/buggy-version/src.NetworkInfluence.java", "BodyUseAPI": [], "Fixed commit": "0ef78dd4109b1806533862669f910d9584994e59", "Url": "https://api.github.com/repos/samdwester/cs311", "Date": "2018-04-19T22:02:24Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(dispatcher)) { props = akka.actor.Props.create(actor).withDispatcher(dispatcher); }else { props = akka.actor.Props.create(actor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8891/buggy-version/actor-core.src.main.java.org.sunbird.actor.core.BaseRouter.java", "BodyUseAPI": ["akka.actor.Props.create(actor).withDispatcher(java.lang.String)"], "Fixed commit": "db5ea71fd247bfc10e02bbd6d249d26b174afc5b", "Url": "https://api.github.com/repos/project-sunbird/sunbird-utils", "Date": "2018-06-11T07:45:48Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (networklink != null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/811/buggy-version/plugins.org.modmacao.cm.src.org.modmacao.cm.ansible.AnsibleCMTool.java", "BodyUseAPI": [], "Fixed commit": "cffdc7b2c8bdaadb302da6a9d700d485e7110296", "Url": "https://api.github.com/repos/kortef/MoDMaCAO", "Date": "2018-08-31T07:59:09Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.getId()) == 0) && ((user.getName()) == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1566/buggy-version/src.main.java.ru.benzoback.library.mapper.UserRowMapper.java", "BodyUseAPI": [], "Fixed commit": "335d2b32121ffeb7f945255365c85ae66a8fb3a8", "Url": "https://api.github.com/repos/zer969696/library", "Date": "2018-02-02T06:39:25Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ins.isEmpty()) { if (ins instanceof java.util.List) { return java.util.Collections.emptyList(); }else if (ins instanceof java.util.Set) { return java.util.Collections.emptySet(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6088/buggy-version/util.src.main.java.org.solmix.commons.util.TransformUtils.java", "BodyUseAPI": [], "Fixed commit": "16b80a3bc5520320efce351290edd98b795e1c37", "Url": "https://api.github.com/repos/solmix/commons", "Date": "2018-04-03T01:39:51Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.seafile.seadroid2.data.DataManager.getRepoEncKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pair == null) { throw com.seafile.seadroid2.SeafException.decryptException; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5673/buggy-version/app.src.main.java.com.seafile.seadroid2.data.DataManager.java", "BodyUseAPI": [], "Fixed commit": "3c67d5b275e90909243a726b86752051c889c73c", "Url": "https://api.github.com/repos/haiwen/seadroid", "Date": "2018-08-05T14:52:33Z"},
{"Line": "=>652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5673/buggy-version/app.src.main.java.com.seafile.seadroid2.data.DataManager.java", "BodyUseAPI": [], "Fixed commit": "3c67d5b275e90909243a726b86752051c889c73c", "Url": "https://api.github.com/repos/haiwen/seadroid", "Date": "2018-08-05T14:52:33Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spriteList.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2121/buggy-version/ClientScreen.java", "BodyUseAPI": [], "Fixed commit": "bc29803930acf5e91ade9bd60f18357d25c95e5a", "Url": "https://api.github.com/repos/nrhorowitz/KirbyDreamland", "Date": "2018-05-24T19:54:20Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isPaused) { page.onPause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3423/buggy-version/pager_module.src.main.java.com.yakin.fastpager.PageContainer.java", "BodyUseAPI": [], "Fixed commit": "d4eb4fcc8a7c7d4b5ed29de5f629075475bf4dea", "Url": "https://api.github.com/repos/YakinBlog/FastPager-android", "Date": "2018-07-17T13:35:49Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mRealm.where(org.ole.planet.takeout.Data.realm_myLibrary.class).equalTo(\"resourceOffline\", false).findAll()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(db_myLibrary.isEmpty())) { com.afollestad.materialdialogs.MaterialDialog.Builder di = org.ole.planet.takeout.utilities.DialogUtils.getDowloadDialog(getActivity()); di.items(getListAsArray(db_myLibrary)).itemsCallbackMultiChoice(null, new com.afollestad.materialdialogs.MaterialDialog.ListCallbackMultiChoice() { @java.lang.Override public boolean onSelection(com.afollestad.materialdialogs.MaterialDialog dialog, java.lang.Integer[] which, java.lang.CharSequence[] text) { dialog.setSelectedIndices(which); return true; } }).onPositive(new com.afollestad.materialdialogs.MaterialDialog.SingleButtonCallback() { @java.lang.Override public void onClick(@android.support.annotation.NonNull com.afollestad.materialdialogs.MaterialDialog dialog, @android.support.annotation.NonNull com.afollestad.materialdialogs.DialogAction which) { downloadFiles(db_myLibrary, dialog.getSelectedIndices()); } }).onNeutral(new com.afollestad.materialdialogs.MaterialDialog.SingleButtonCallback() { @java.lang.Override public void onClick(@android.support.annotation.NonNull com.afollestad.materialdialogs.MaterialDialog dialog, @android.support.annotation.NonNull com.afollestad.materialdialogs.DialogAction which) { downloadAllFiles(db_myLibrary); } }); di.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2842/buggy-version/app.src.main.java.org.ole.planet.takeout.DashboardFragment.java", "BodyUseAPI": ["di.items(getListAsArray(db_myLibrary)).itemsCallbackMultiChoice(null, new com.afollestad.materialdialogs.MaterialDialog.ListCallbackMultiChoice() {\n    @java.lang.Override\n    public boolean onSelection(com.afollestad.materialdialogs.MaterialDialog dialog, java.lang.Integer[] which, java.lang.CharSequence[] text) {\n        dialog.setSelectedIndices(which);\n        return true;\n    }\n}).onPositive(new com.afollestad.materialdialogs.MaterialDialog.SingleButtonCallback() {\n    @java.lang.Override\n    public void onClick(@android.support.annotation.NonNull\n    com.afollestad.materialdialogs.MaterialDialog dialog, @android.support.annotation.NonNull\n    com.afollestad.materialdialogs.DialogAction which) {\n        downloadFiles(db_myLibrary, dialog.getSelectedIndices());\n    }\n}).onNeutral(com.afollestad.materialdialogs.MaterialDialog.SingleButtonCallback)", "di.items(getListAsArray(db_myLibrary)).itemsCallbackMultiChoice(null, new com.afollestad.materialdialogs.MaterialDialog.ListCallbackMultiChoice() {\n    @java.lang.Override\n    public boolean onSelection(com.afollestad.materialdialogs.MaterialDialog dialog, java.lang.Integer[] which, java.lang.CharSequence[] text) {\n        dialog.setSelectedIndices(which);\n        return true;\n    }\n}).onPositive(com.afollestad.materialdialogs.MaterialDialog.SingleButtonCallback)", "org.ole.planet.takeout.DashboardFragment.3.downloadFiles(io.realm.RealmResults<org.ole.planet.takeout.Data.realm_myLibrary>,dialog.getSelectedIndices())", "di.items(getListAsArray(db_myLibrary)).itemsCallbackMultiChoice(<nulltype>,com.afollestad.materialdialogs.MaterialDialog.ListCallbackMultiChoice)", "MaterialDialog.Builder.items(java.lang.CharSequence[])", "org.ole.planet.takeout.DashboardFragment.getListAsArray(io.realm.RealmResults<org.ole.planet.takeout.Data.realm_myLibrary>)", "org.ole.planet.takeout.DashboardFragment.2.downloadAllFiles(io.realm.RealmResults<org.ole.planet.takeout.Data.realm_myLibrary>)"], "Fixed commit": "3d96e41cc12c6c4cacaac18c29bbc47d91628196", "Url": "https://api.github.com/repos/ole-vi/takeout", "Date": "2018-07-12T09:29:59Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.getHeldItemMainhand().isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8919/buggy-version/src.main.java.com.lothrazar.cyclicmagic.item.storagesack.ContainerStorage.java", "BodyUseAPI": [], "Fixed commit": "6a60672f71c2c74110efd5894ebc57075b7788da", "Url": "https://api.github.com/repos/PrinceOfAmber/Cyclic", "Date": "2018-05-26T19:33:49Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.lothrazar.cyclicmagic.item.storagesack.ItemStorageBag.getId(player.getHeldItemMainhand()).equals(stackId)) == false) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8919/buggy-version/src.main.java.com.lothrazar.cyclicmagic.item.storagesack.ContainerStorage.java", "BodyUseAPI": [], "Fixed commit": "6a60672f71c2c74110efd5894ebc57075b7788da", "Url": "https://api.github.com/repos/PrinceOfAmber/Cyclic", "Date": "2018-05-26T19:33:49Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getSession().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(validateCode.equals(sessionValidateCode))) { return com.chinaopensource.soft.blogserver.common.controller.BaseResponse.errorJson(ErrorMessage.ERR_SYSTERM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/514/buggy-version/src.main.java.com.chinaopensource.soft.blogserver.user.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "43bc03b38fca5ccbdbe2ce2767ffcb881e027c10", "Url": "https://api.github.com/repos/ChinaOpenSourceTeam/BlogServer", "Date": "2018-03-19T14:44:02Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((op.equals(UnaryOperatorKind.POST_INC)) || (op.equals(UnaryOperatorKind.POST_DEC))) data.put(UnaryOperator.POSITION, UnaryOperatorPosition.POSTFIX);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9254/buggy-version/ClavaAst.src.pt.up.fe.specs.clava.context.ClavaFactory.java", "BodyUseAPI": [], "Fixed commit": "3d246cddf227448a16a8884e2f78ec2d3ecb4844", "Url": "https://api.github.com/repos/specs-feup/clava", "Date": "2018-10-09T19:19:32Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((image.getParent()) != null) && ((image.getParent()) instanceof android.view.ViewGroup)) { ((android.view.ViewGroup) (image.getParent())).removeView(image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2976/buggy-version/multiview.src.main.java.cn.lemon.multi.ui.ViewImageAdapter.java", "BodyUseAPI": ["((android.view.ViewGroup) (image.getParent())).removeView(cn.alien95.resthttp.view.HttpImageView)", "cn.alien95.resthttp.view.HttpImageView.getParent()"], "Fixed commit": "3c5595ed081776fb2908307953a0523bdb2f9ee1", "Url": "https://api.github.com/repos/xinzhazha/MultiView", "Date": "2018-03-11T06:31:30Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) { timer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4428/buggy-version/src.project.breakout.model.BreakoutModel.java", "BodyUseAPI": [], "Fixed commit": "7ed1ac3e359c2af2b3c54daa6aa0c6f7f254ae14", "Url": "https://api.github.com/repos/TiKo98/BreakoutProject", "Date": "2018-02-26T14:51:10Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((((station) == 1) && ((scalePos) == 1)) || (((station) == 3) && ((scalePos) == 2)))) { step = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1522/buggy-version/src.System.Autonomous.modes.Scale.java", "BodyUseAPI": [], "Fixed commit": "6f05965ec4c240cc28df0a81687346539ff95dd2", "Url": "https://api.github.com/repos/Team6083/2018Overlooking", "Date": "2018-03-12T12:51:18Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.code()) == 200) { co.sisu.mobile.models.AsyncAgentJsonObject agent = gson.fromJson(responseBody, co.sisu.mobile.models.AsyncAgentJsonObject.class); if (agent.getStatus_code().equals(\"-1\")) { callback.onEventFailed(null, \"Authenticator\"); }else { callback.onEventCompleted(agent, \"Authenticator\"); } }else { callback.onEventFailed(null, \"Authenticator\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3681/buggy-version/Sisu.app.src.main.java.co.sisu.mobile.api.AsyncAuthenticator.java", "BodyUseAPI": [], "Fixed commit": "53dd814f5bac44c54f5c384c4aa5e54a731b660b", "Url": "https://api.github.com/repos/sisuco/sisu-android", "Date": "2018-05-22T00:34:49Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mediaPlayer.isPlaying()) { if (promise != null) { promise.resolve(false); return; } }else { mediaPlayer.setLooping(isLoop); if (playFromTime > 0) { try { mediaPlayer.seekTo(playFromTime); } catch (java.lang.Exception e) { e.printStackTrace(); } } if ((audioPlayerAsync) != null) { isToCancel = true; audioPlayerAsync.cancel(true); audioPlayerAsync = null; isToCancel = false; } mediaPlayer.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/676/buggy-version/android.src.main.java.com.media.module.audio.AudioManagerModule.java", "BodyUseAPI": ["android.media.MediaPlayer.setLooping(boolean)", "android.media.MediaPlayer.start()", "android.media.MediaPlayer.seekTo(int)"], "Fixed commit": "15e5eefbc71053cbd4e3817c01e9b07f5a636834", "Url": "https://api.github.com/repos/renanpupin/react-native-media", "Date": "2018-03-07T19:58:45Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mikehelland.omgtechnogauntlet.Jam.getSubbeats()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((i < (mChannel.pattern.length)) && ((j * subbeats) < (mChannel.pattern[i].length))) data[i][j] = mChannel.pattern[i][(j * subbeats)];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8462/buggy-version/app.src.main.java.com.mikehelland.omgtechnogauntlet.DrumView.java", "BodyUseAPI": [], "Fixed commit": "629d0ca8c8922a2494defdd5588cf68f0b5c40ab", "Url": "https://api.github.com/repos/mikehelland/techno-gauntlet", "Date": "2018-01-12T01:52:24Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mushare.rate.service.impl.RateManagerImpl.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (from.getCode().equals(CurrencyManager.BaseCurrencyCode)) { for (org.mushare.rate.domain.Rate rate : rateDao.findByCurrency(to, start, end)) { data.add(rate.getValue()); } }else if (to.getCode().equals(CurrencyManager.BaseCurrencyCode)) { for (org.mushare.rate.domain.Rate rate : rateDao.findByCurrency(from, start, end)) { data.add((1 / (rate.getValue()))); } }else { java.util.Map<java.lang.Long, java.lang.Double> toRates = new java.util.HashMap<java.lang.Long, java.lang.Double>(); for (org.mushare.rate.domain.Rate rate : rateDao.findByCurrency(to, start, end)) { toRates.put(rate.getDate(), rate.getValue()); } for (org.mushare.rate.domain.Rate rate : rateDao.findByCurrency(from, start, end)) { if (!(toRates.containsKey(rate.getDate()))) { if ((data.size()) == 0) { continue; } data.add(data.get(((data.size()) - 1))); continue; } data.add(((toRates.get(rate.getDate())) / (rate.getValue()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9351/buggy-version/src.main.java.org.mushare.rate.service.impl.RateManagerImpl.java", "BodyUseAPI": ["org.mushare.rate.service.impl.RateManagerImpl.findByCurrency(org.mushare.rate.domain.Currency,long,long)", "org.mushare.rate.service.impl.RateManagerImpl.findByCurrency(org.mushare.rate.domain.Currency,long,long)"], "Fixed commit": "17e333f5b91444b03710a2bfac3505ab2780e5b5", "Url": "https://api.github.com/repos/MuShare/Rate-Server", "Date": "2018-06-29T06:34:00Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.code()) == 201) { responseObject = new com.google.gson.GsonBuilder().create().fromJson(response.body().string(), com.codetutor.androidrestwebserviceintegration.restbean.Author.class); }else { responseObject = new java.lang.Error(response.code(), response.message()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4868/buggy-version/app.src.main.java.com.codetutor.androidrestwebserviceintegration.network.RequestRegisterAuthor.java", "BodyUseAPI": ["okhttp3.Response.message()", "okhttp3.Response.body()", "response.body().string()", "okhttp3.Response.code()", "new com.google.gson.GsonBuilder().create().fromJson(response.body().string(),java.lang.Class)"], "Fixed commit": "6adc596259415eda96caa0dda77901426aed206d", "Url": "https://api.github.com/repos/AnilDeshpande/AndroidRestWebServiceIntegration", "Date": "2018-06-10T07:43:44Z"},
{"Line": "=>691", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mVideoCodec) == (VideoCodec.DEFAULT)) { mMediaRecorder.setVideoEncoder(profile.videoCodec); }else { mMediaRecorder.setVideoEncoder(mMapper.map(mVideoCodec)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6691/buggy-version/cameraview.src.main.java.com.otaliastudios.cameraview.Camera1.java", "BodyUseAPI": [], "Fixed commit": "198925b2ee674d1dd6b7309524799e78db99f338", "Url": "https://api.github.com/repos/derohimat/CameraView", "Date": "2018-09-13T08:02:27Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataTable.getData().isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9035/buggy-version/jgiven-core.src.main.java.com.tngtech.jgiven.report.text.PlainTextTableWriter.java", "BodyUseAPI": [], "Fixed commit": "2dfbfd2e5025f70229e5940d1c5a40fe17709084", "Url": "https://api.github.com/repos/TNG/JGiven", "Date": "2018-09-22T11:01:48Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataTableModel.isEmpty()) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9035/buggy-version/jgiven-core.src.main.java.com.tngtech.jgiven.report.text.PlainTextTableWriter.java", "BodyUseAPI": [], "Fixed commit": "2dfbfd2e5025f70229e5940d1c5a40fe17709084", "Url": "https://api.github.com/repos/TNG/JGiven", "Date": "2018-09-22T11:01:48Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.Entity.isOpen()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (open) { net.minecraft.client.renderer.GlStateManager.color(0.0F, 0.0F, 0.0F); this.drawDoorShape(); net.minecraft.client.renderer.GlStateManager.color(1.0F, 1.0F, 1.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/853/buggy-version/src.main.java.net.tardis.mod.client.renderers.RenderDoor.java", "BodyUseAPI": [], "Fixed commit": "2ae2a7e1c5f9e1b336c754cd600c48bc955eaed0", "Url": "https://api.github.com/repos/Spectre0987/TardisMod", "Date": "2018-05-25T20:31:20Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["renderer.Vector.dot_product(renderer.Vector)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (vr > 0) return new renderer.Color(0, 0, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9822/buggy-version/src.renderer.Render.java", "BodyUseAPI": [], "Fixed commit": "f1fc722d91acec69fa5cea180465574e8a54adc7", "Url": "https://api.github.com/repos/yeo4/Jct-Software-Engineering-Project", "Date": "2018-05-23T16:20:29Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (bitmap != null) profilePic = android.graphics.Bitmap.createScaledBitmap(bitmap, 50, 50, true); else { android.graphics.drawable.BitmapDrawable drawable = ((android.graphics.drawable.BitmapDrawable) (android.support.v4.content.ContextCompat.getDrawable(baseContext, R.drawable.ic_android_person_svg))); android.graphics.Bitmap defaultImg = drawable.getBitmap(); profilePic = defaultImg; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4678/buggy-version/app.src.main.java.kr.ac.yjc.wdj.hikonnect.beans.GroupUserInfoBean.java", "BodyUseAPI": ["android.graphics.Bitmap.createScaledBitmap(android.graphics.Bitmap,int,int,boolean)"], "Fixed commit": "f582cf0f281968ce79240ffdec0cc4522bd96e9f", "Url": "https://api.github.com/repos/3WDJ-Team1/HIKONNECT_APP", "Date": "2018-05-29T03:31:46Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entry != (de.hhu.bsinfo.dxram.mem.CIDTable.FREE_ENTRY)) && (entry != (de.hhu.bsinfo.dxram.mem.CIDTable.ZOMBIE_ENTRY))) { return entry & (de.hhu.bsinfo.dxram.mem.CIDTable.BITMASK_ADDRESS); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3155/buggy-version/src.de.hhu.bsinfo.dxram.mem.CIDTable.java", "BodyUseAPI": [], "Fixed commit": "8d4ee30bce58069cfaa7489f07e44f794b3e2e12", "Url": "https://api.github.com/repos/huflo/dxram-memory-reference", "Date": "2018-03-20T14:39:46Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mDb.getDao().responseForKey(mQuery)) != null) { com.skip.flickrlite.model.PersistedSearchResult entry = new com.skip.flickrlite.model.PersistedSearchResult(); entry.searchQuery = mQuery; entry.response = response; mDb.getDao().insert(entry); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2655/buggy-version/app.src.main.java.com.skip.flickrlite.search.SearchImagesTask.java", "BodyUseAPI": ["com.skip.flickrlite.model.PersistedSearchResultDatabase.getDao()", "mDb.getDao().insert(com.skip.flickrlite.model.PersistedSearchResult)"], "Fixed commit": "354f418c22c71798ce1b458bba338adacfb74379", "Url": "https://api.github.com/repos/davidtian02/FlickrLite", "Date": "2018-09-20T04:16:29Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (android.app.Activity.RESULT_OK)) { if (requestCode == (com.winson.widget.PhotoSelectUtils.REQ_ALBUM)) { startPhotoCrop(data.getData()); }else if (requestCode == (com.winson.widget.PhotoSelectUtils.REQ_CAMERA)) { startPhotoCrop(getOutputUri()); }else if (requestCode == (com.winson.widget.PhotoSelectUtils.REQ_CROP)) { if ((onPhotoSelectListener) != null) { onPhotoSelectListener.onPhotoSelect(getOutputFile()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4721/buggy-version/ad-ui.src.main.java.com.winson.widget.PhotoSelectUtils.java", "BodyUseAPI": [], "Fixed commit": "df902ecef031ab5b519aa918c6764ee89a726053", "Url": "https://api.github.com/repos/WinsonZhou/ad-ui", "Date": "2018-09-19T09:09:44Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.Authentication.getDetails()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userObj instanceof org.joget.directory.model.User) { org.joget.directory.model.User user = ((org.joget.directory.model.User) (userObj)); setCurrentThreadUser(user); return user; }else { setCurrentThreadUser(((java.lang.String) (auth.getPrincipal()))); return getCurrentUser(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5192/buggy-version/wflow-directory.src.main.java.org.joget.workflow.model.service.WorkflowUserManager.java", "BodyUseAPI": [], "Fixed commit": "e01acfc08e6e04fb8f6fe69bab2b6379bb5b5726", "Url": "https://api.github.com/repos/jogetworkflow/jw-community", "Date": "2017-11-15T09:55:21Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (link.equals(\"0hSaGlCJ5MQaq4ANN7iw\")) { int a = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/860/buggy-version/app.src.main.java.co.com.millennialapps.owlmapp.utilitites.Dijkstra.java", "BodyUseAPI": [], "Fixed commit": "cf55299974b4c8baa8db907bc4de04b4001d9f66", "Url": "https://api.github.com/repos/afforeroc/owl-mapp", "Date": "2018-06-09T14:50:27Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentNode.getId().equals(\"0hSaGlCJ5MQaq4ANN7iw\")) { int a = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/860/buggy-version/app.src.main.java.co.com.millennialapps.owlmapp.utilitites.Dijkstra.java", "BodyUseAPI": [], "Fixed commit": "cf55299974b4c8baa8db907bc4de04b4001d9f66", "Url": "https://api.github.com/repos/afforeroc/owl-mapp", "Date": "2018-06-09T14:50:27Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInternetOn()) loadURL(); else { android.widget.Toast.makeText(getApplicationContext(), \"Unable To Connect To Internet\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1430/buggy-version/app.src.main.java.com.genius.iconified.WebViewActivity.java", "BodyUseAPI": [], "Fixed commit": "961993281b9d284499d199efd3a02ee454b23a47", "Url": "https://api.github.com/repos/manjeet-thadani/Iconified", "Date": "2018-03-03T13:26:39Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (jsonStr.equals(\"[]\")) chucks = new org.json.JSONArray(); else chucks = new org.json.JSONArray(in.readLine());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8025/buggy-version/src.vfs.master.SlaveCommunication.java", "BodyUseAPI": [], "Fixed commit": "8046203b4e581bcef88fb80be5828c1a6e2eeea5", "Url": "https://api.github.com/repos/Teoge/VFSMaster", "Date": "2018-01-06T09:24:08Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (resource != null) path = resource.getFile();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8849/buggy-version/src.main.java.rest.StudentJdbcRestService.java", "BodyUseAPI": [], "Fixed commit": "6ccd06163812495d11f264e603422e32e0ba1924", "Url": "https://api.github.com/repos/ness557/JerseyRestService", "Date": "2018-05-15T13:45:39Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.obiba.mica.micaConfig.service.OpalCredentialService.findOpalCredentialById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (opalCredential.isPresent()) { return opalCredential.get(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8456/buggy-version/mica-core.src.main.java.org.obiba.mica.micaConfig.service.OpalService.java", "BodyUseAPI": ["java.util.Optional<org.obiba.mica.micaConfig.domain.OpalCredential>.get()"], "Fixed commit": "3fcff70d43dc2f7c4e635f715ea844ef42807cfc", "Url": "https://api.github.com/repos/obiba/mica2", "Date": "2018-09-25T16:13:58Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.packaging) == (Bucket.Packaging.SINGLE)) descriptor = new org.bucketz.impl.BucketDescriptorBuilderService.DefaultSingleObjectBucketDescriptor<>(data); else descriptor = new org.bucketz.impl.BucketDescriptorBuilderService.DefaultBucketDescriptor<>(data);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9621/buggy-version/org.bucketz.provider.src.org.bucketz.impl.BucketDescriptorBuilderService.java", "BodyUseAPI": [], "Fixed commit": "2a091e520ca0c3810e9385b0e5a5b35bb9e85fb2", "Url": "https://api.github.com/repos/Bucketz/bucketz", "Date": "2018-07-22T22:58:43Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aDescriptor instanceof org.bucketz.store.BucketDescriptor.Single) singleObjectDescriptor = ((org.bucketz.store.BucketDescriptor.Single<D>) (aDescriptor)); else descriptor = aDescriptor;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9621/buggy-version/org.bucketz.lib.src.org.bucketz.lib.BucketIOFactory.java", "BodyUseAPI": [], "Fixed commit": "2a091e520ca0c3810e9385b0e5a5b35bb9e85fb2", "Url": "https://api.github.com/repos/Bucketz/bucketz", "Date": "2018-07-22T22:58:43Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (z.isAlive) { health -= 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3313/buggy-version/core.src.net.lostsocket.ld42.entities.Player.java", "BodyUseAPI": [], "Fixed commit": "61de26910d9711ca8518657ebf434cbba3e7cee0", "Url": "https://api.github.com/repos/4nc3str4l/LudumDare42", "Date": "2018-08-11T13:15:08Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rangesOfRuleContext.isEmpty())) { java.util.Stack<org.wso2.ballerinalang.compiler.parser.BLangWSPreservingParserListener.TokenRange> rangesOfLastRuleContext = rangesOfRuleContext.peek(); org.wso2.ballerinalang.compiler.parser.BLangWSPreservingParserListener.TokenRange range = rangesOfLastRuleContext.peek(); range.to = rangeEndIndex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9631/buggy-version/compiler.ballerina-lang.src.main.java.org.wso2.ballerinalang.compiler.parser.BLangWSPreservingParserListener.java", "BodyUseAPI": ["java.util.Stack<java.util.Stack<org.wso2.ballerinalang.compiler.parser.BLangWSPreservingParserListener.TokenRange>>.peek()"], "Fixed commit": "5df7bb6b19ea3c5b3a9fd78c36487b1254f856b6", "Url": "https://api.github.com/repos/arukshani/ballerina", "Date": "2018-03-29T13:20:47Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rangesOfRuleContext.isEmpty())) { tokenRanges = rangesOfRuleContext.pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9631/buggy-version/compiler.ballerina-lang.src.main.java.org.wso2.ballerinalang.compiler.parser.BLangWSPreservingParserListener.java", "BodyUseAPI": ["java.util.Stack<java.util.Stack<org.wso2.ballerinalang.compiler.parser.BLangWSPreservingParserListener.TokenRange>>.pop()"], "Fixed commit": "5df7bb6b19ea3c5b3a9fd78c36487b1254f856b6", "Url": "https://api.github.com/repos/arukshani/ballerina", "Date": "2018-03-29T13:20:47Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.unistuttgart.ims.coref.annotator.CATreeNode.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((n.getFeatureStructure()) == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1336/buggy-version/src.main.java.de.unistuttgart.ims.coref.annotator.CoreferenceModel.java", "BodyUseAPI": [], "Fixed commit": "3e70433a7547b969366d9bd89051b1ad0afb9b28", "Url": "https://api.github.com/repos/nilsreiter/CorefAnnotator", "Date": "2018-02-08T10:00:59Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entityButton.getText().equals(\"Entity Selected\")) { entityButton.setText(\"Entity\"); }else { entityButton.setText(\"Entity Selected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1179/buggy-version/src.controllers.UIController.java", "BodyUseAPI": ["javafx.scene.control.Button.setText(java.lang.String)", "javafx.scene.control.Button.setText(java.lang.String)"], "Fixed commit": "5e6629633c8db22a6958d21c93e56e781424f71b", "Url": "https://api.github.com/repos/gt23669/DnD-Map-Util", "Date": "2018-02-28T21:14:13Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.simpleName.endsWith(\"/\")) && ((this.simpleName.length()) > 1)) { this.simpleName = this.simpleName.substring(0, ((this.simpleName.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6625/buggy-version/tools.loader.src.main.java.com.kumuluz.ee.loader.jar.FileInfo.java", "BodyUseAPI": [], "Fixed commit": "35b80ca90b279551a841a993924748e67bce7388", "Url": "https://api.github.com/repos/kumuluz/kumuluzee", "Date": "2018-01-24T15:01:39Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hgvsp == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2447/buggy-version/service.src.main.java.org.cbioportal.genome_nexus.service.annotation.ProteinChangeResolver.java", "BodyUseAPI": [], "Fixed commit": "c81c886ae6f10e2229f93ed24b7f25cf2ed39b21", "Url": "https://api.github.com/repos/onursumer/genome-nexus", "Date": "2018-04-13T17:32:19Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["EnumFacing.Plane.HORIZONTAL.random(java.util.Random)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (worldIn.isBlockLoaded(pos.offset(direction))) { pos = pos.offset(direction); worldIn.setBlockState(pos, state, (2 | 16)); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9258/buggy-version/src.main.java.com.ochotonida.candymod.world.worldgen.WorldGenGummyWorm.java", "BodyUseAPI": ["net.minecraft.util.math.BlockPos.offset(net.minecraft.util.EnumFacing)", "net.minecraft.world.World.setBlockState(net.minecraft.util.math.BlockPos,net.minecraft.block.state.IBlockState,int)"], "Fixed commit": "290a7f2e0b4e73970d040b6b2da49f44faa2ed0a", "Url": "https://api.github.com/repos/ochotonida/candymod", "Date": "2018-07-21T09:20:51Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.util.math.BlockPos.up()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(worldIn.isBlockLoaded(pos.offset(direction)))) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9258/buggy-version/src.main.java.com.ochotonida.candymod.world.worldgen.WorldGenGummyWorm.java", "BodyUseAPI": [], "Fixed commit": "290a7f2e0b4e73970d040b6b2da49f44faa2ed0a", "Url": "https://api.github.com/repos/ochotonida/candymod", "Date": "2018-07-21T09:20:51Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTwoPanel)) exitFullscreen();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/276/buggy-version/app.src.main.java.br.com.lucaslprimo.bakingtime.ui.StepDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "eee84bcd8d63e7ce25da705f480768d1498a92f1", "Url": "https://api.github.com/repos/lucaslprimo/BakingTime", "Date": "2018-02-17T21:47:27Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (idEmployee == null) throw new by.it.company.demoSpringHibernate.exceptions.ServicesException(\"Invalid employee id\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2746/buggy-version/src.main.java.by.it.company.demoSpringHibernate.services.managers.impl.EmployeeManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "c1c736f08507ece8f8d7e1fcca006805b5771c2c", "Url": "https://api.github.com/repos/Stichara/demoSpringHibernateSpringSecurity", "Date": "2018-03-12T19:41:51Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kenshiro.instagram.util.OkHttpHelper.getSharedData(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((sd.getEntry_data()) == null) || ((sd.getEntry_data().getProfilePage()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9403/buggy-version/src.main.java.com.kenshiro.instagram.service.InstagramService.java", "BodyUseAPI": [], "Fixed commit": "341950130181f4def1c12561d38f66148266695f", "Url": "https://api.github.com/repos/kenshirokk/instagram", "Date": "2018-01-24T11:26:34Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p.isFolded()) foldedPlayers++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6200/buggy-version/src.main.java.com.cpjd.modules.Round.java", "BodyUseAPI": [], "Fixed commit": "7823afa180aa519e7dc32ba30b991697e997e528", "Url": "https://api.github.com/repos/wdavies973/GameBot", "Date": "2018-08-17T05:29:15Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.handlers.HandlerUtil.getCurrentSelection(org.eclipse.core.commands.ExecutionEvent)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (selection == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6649/buggy-version/net.jeeeyul.pdetools.src.net.jeeeyul.pdetools.shell.AbstractFileBasedExecHandler.java", "BodyUseAPI": [], "Fixed commit": "bb0fe4426335b16ef8b02aac970f556837ba4842", "Url": "https://api.github.com/repos/jeeeyul/pde-tools", "Date": "2018-07-25T07:31:45Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.runtime.Platform.getAdapterManager().getAdapter(selection.getFirstElement(),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resource == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6649/buggy-version/net.jeeeyul.pdetools.src.net.jeeeyul.pdetools.shell.AbstractFileBasedExecHandler.java", "BodyUseAPI": [], "Fixed commit": "bb0fe4426335b16ef8b02aac970f556837ba4842", "Url": "https://api.github.com/repos/jeeeyul/pde-tools", "Date": "2018-07-25T07:31:45Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((easyWayLocation) != null) easyWayLocation.beginUpdates();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6659/buggy-version/app.src.main.java.com.hostelbasera.main.FragmentHome.java", "BodyUseAPI": [], "Fixed commit": "472239d3763e66b07ceff4727e5eb858e4bc6b39", "Url": "https://api.github.com/repos/chirag1243/HostelBasera", "Date": "2018-09-07T03:43:09Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((easyWayLocation) != null) easyWayLocation.endUpdates();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6659/buggy-version/app.src.main.java.com.hostelbasera.main.FragmentHome.java", "BodyUseAPI": [], "Fixed commit": "472239d3763e66b07ceff4727e5eb858e4bc6b39", "Url": "https://api.github.com/repos/chirag1243/HostelBasera", "Date": "2018-09-07T03:43:09Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sum == 0.0) { sum = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1524/buggy-version/ExcelChecker.ExcelChecker.src.excelchecker.ExcelSeparator.DataProcessor.java", "BodyUseAPI": [], "Fixed commit": "1c7445a7134ff804b0e2f2e4c89c16bf3e75ded3", "Url": "https://api.github.com/repos/ihorbodia/ExcelChecker", "Date": "2018-09-19T15:30:51Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.kitsunealex.projectx.init.ModConfig.COMPAT_THAUMCRAFT) { ModuleHandler.INSTANCE.registerModule(new de.kitsunealex.projectx.compat.thaumcraft.ModuleThaumcraft()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4169/buggy-version/src.main.java.de.kitsunealex.projectx.compat.ModModules.java", "BodyUseAPI": [], "Fixed commit": "96262a1f6a76de82eb66a3ec065ba58282f4218b", "Url": "https://api.github.com/repos/kaziu687/ProjectX", "Date": "2018-05-02T19:29:36Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.kitsunealex.projectx.init.ModConfig.COMPAT_WAILA) { ModuleHandler.INSTANCE.registerModule(new de.kitsunealex.projectx.compat.waila.ModuleWAILA()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4169/buggy-version/src.main.java.de.kitsunealex.projectx.compat.ModModules.java", "BodyUseAPI": [], "Fixed commit": "96262a1f6a76de82eb66a3ec065ba58282f4218b", "Url": "https://api.github.com/repos/kaziu687/ProjectX", "Date": "2018-05-02T19:29:36Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.kitsunealex.projectx.init.ModConfig.COMPAT_ALBEDO) { ModuleHandler.INSTANCE.registerModule(new de.kitsunealex.projectx.compat.albedo.ModuleAlbedo()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4169/buggy-version/src.main.java.de.kitsunealex.projectx.compat.ModModules.java", "BodyUseAPI": [], "Fixed commit": "96262a1f6a76de82eb66a3ec065ba58282f4218b", "Url": "https://api.github.com/repos/kaziu687/ProjectX", "Date": "2018-05-02T19:29:36Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.invoke(org.bukkit.event.player.PlayerInteractEvent)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (out == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2809/buggy-version/src.main.java.io.github.wysohn.triggerreactor.bukkit.tools.BukkitUtil.java", "BodyUseAPI": [], "Fixed commit": "72c977d25ceef6f330de446775ff67721227a077", "Url": "https://api.github.com/repos/wysohn/TriggerReactor", "Date": "2018-02-28T06:05:12Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mRememberKeyfile)) { keyFileView.setText(\"\"); checkboxKeyfileView.setChecked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6603/buggy-version/app.src.main.java.com.keepassdroid.PasswordActivity.java", "BodyUseAPI": [], "Fixed commit": "fb72f37ebb46ee75f5ece5f1777935a12e9632cd", "Url": "https://api.github.com/repos/Kunzisoft/KeePassDX", "Date": "2018-01-24T20:11:43Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_bottomRightComponent) != null) { m_topRightComponent.selectNodes(l); if ((l.size()) > 0) { m_bottomRightComponent.fillData(l.get(0)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8380/buggy-version/gwt.src.main.java.org.jahia.ajax.gwt.client.widget.content.ManagerLinker.java", "BodyUseAPI": [], "Fixed commit": "519f5ad7483b5a0b848686acb49fec53c5b5caab", "Url": "https://api.github.com/repos/Jahia/dxm", "Date": "2018-01-03T15:38:43Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sender) != null) sender.removeCallbacksAndMessages(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6630/buggy-version/app.src.main.java.computeythings.garagemonitor.ui.SocketConnector.java", "BodyUseAPI": [], "Fixed commit": "a0d36bf14e8cbda3ded554ae296ac27a8e73f4da", "Url": "https://api.github.com/repos/computeythings/PiOpener-Android", "Date": "2018-04-04T08:00:13Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (line != null) sb.append(java.lang.System.lineSeparator());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7387/buggy-version/core.src.main.java.com.github.vatbub.common.core.StringCommon.java", "BodyUseAPI": [], "Fixed commit": "f45be5eb7b85620a61f8daea6596203d61bfb617", "Url": "https://api.github.com/repos/vatbub/common", "Date": "2018-01-18T23:08:10Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data == null) || ((data.length) == 0)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5163/buggy-version/artemis-jdbc-store.src.main.java.org.apache.activemq.artemis.jdbc.store.file.JDBCSequentialFileFactoryDriver.java", "BodyUseAPI": [], "Fixed commit": "effcfca2e6f3f65e7326f6d0ff177227ad8e59b1", "Url": "https://api.github.com/repos/franz1981/activemq-artemis", "Date": "2018-04-17T08:48:38Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.artemis.jdbc.store.file.JDBCSequentialFileFactoryDriver.getMaxSize()", "java.sql.Blob.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (blobLength == maxSize) { throw new java.sql.SQLException(new java.lang.IllegalStateException((\"blob has already reached the max allowed size = \" + maxSize))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5163/buggy-version/artemis-jdbc-store.src.main.java.org.apache.activemq.artemis.jdbc.store.file.JDBCSequentialFileFactoryDriver.java", "BodyUseAPI": [], "Fixed commit": "effcfca2e6f3f65e7326f6d0ff177227ad8e59b1", "Url": "https://api.github.com/repos/franz1981/activemq-artemis", "Date": "2018-04-17T08:48:38Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((columns.get(i).getDataType()) == (DataType.DataTypeInt.CHAR)) || ((columns.get(i).getDataType()) == (DataType.DataTypeInt.VARCHAR))) || ((columns.get(i).getDataType()) == (DataType.DataTypeInt.DATE))) { if ((!(values[i].startsWith(\"'\"))) || (!(values[i].endsWith(\"'\")))) { rowValues.put(columnNames[i], ((\"'\" + (values[i])) + \"'\")); } }else { rowValues.put(columnNames[i], values[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8393/buggy-version/pard-main.src.main.java.cn.edu.ruc.iir.pard.planner.dml.LoadPlan.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "4f72980c9908bd39a42fe08ccb9cfea33598b639", "Url": "https://api.github.com/repos/dbiir/pard", "Date": "2018-01-12T09:19:53Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(url.startsWith(\"/\"))) { url = genepi.io.FileUtil.path(folderRepo, url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9037/buggy-version/src.main.java.cloudgene.mapred.cli.CloneApplications.java", "BodyUseAPI": ["genepi.io.FileUtil.path(java.lang.String,java.lang.String)"], "Fixed commit": "9df368b5fbcb5ddb8b83ae8380f84a62cfe85b9f", "Url": "https://api.github.com/repos/genepi/cloudgene", "Date": "2018-01-31T16:30:27Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lexer.token()) == (com.alibaba.druid.sql.parser.Token.SCHEMA)) { if (expr instanceof com.alibaba.druid.sql.dialect.db2.parser.SQLIdentifierExpr) { com.alibaba.druid.sql.dialect.db2.parser.SQLIdentifierExpr identExpr = ((com.alibaba.druid.sql.dialect.db2.parser.SQLIdentifierExpr) (expr)); if ((identExpr.hashCode64()) == (FnvHash.Constants.CURRENT)) { lexer.nextToken(); expr = new com.alibaba.druid.sql.dialect.db2.parser.SQLIdentifierExpr(\"CURRENT SCHEMA\"); } } }else if (lexer.identifierEquals(FnvHash.Constants.MONTHS)) { com.alibaba.druid.sql.dialect.db2.parser.SQLIntervalExpr intervalExpr = new com.alibaba.druid.sql.dialect.db2.parser.SQLIntervalExpr(expr, SQLIntervalUnit.MONTH); lexer.nextToken(); expr = intervalExpr; }else if (lexer.identifierEquals(FnvHash.Constants.YEARS)) { com.alibaba.druid.sql.dialect.db2.parser.SQLIntervalExpr intervalExpr = new com.alibaba.druid.sql.dialect.db2.parser.SQLIntervalExpr(expr, SQLIntervalUnit.YEAR); lexer.nextToken(); expr = intervalExpr; }else if (lexer.identifierEquals(FnvHash.Constants.DAYS)) { com.alibaba.druid.sql.dialect.db2.parser.SQLIntervalExpr intervalExpr = new com.alibaba.druid.sql.dialect.db2.parser.SQLIntervalExpr(expr, SQLIntervalUnit.DAY); lexer.nextToken(); expr = intervalExpr; }else if (lexer.identifierEquals(FnvHash.Constants.HOURS)) { com.alibaba.druid.sql.dialect.db2.parser.SQLIntervalExpr intervalExpr = new com.alibaba.druid.sql.dialect.db2.parser.SQLIntervalExpr(expr, SQLIntervalUnit.HOUR); lexer.nextToken(); expr = intervalExpr; }else if (lexer.identifierEquals(FnvHash.Constants.MINUTES)) { com.alibaba.druid.sql.dialect.db2.parser.SQLIntervalExpr intervalExpr = new com.alibaba.druid.sql.dialect.db2.parser.SQLIntervalExpr(expr, SQLIntervalUnit.MINUTE); lexer.nextToken(); expr = intervalExpr; }else if (lexer.identifierEquals(FnvHash.Constants.SECONDS)) { com.alibaba.druid.sql.dialect.db2.parser.SQLIntervalExpr intervalExpr = new com.alibaba.druid.sql.dialect.db2.parser.SQLIntervalExpr(expr, SQLIntervalUnit.SECOND); lexer.nextToken(); expr = intervalExpr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/159/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.db2.parser.DB2ExprParser.java", "BodyUseAPI": ["com.alibaba.druid.sql.dialect.db2.parser.DB2ExprParser.identifierEquals(FnvHash.Constants.HOURS)", "com.alibaba.druid.sql.dialect.db2.parser.DB2ExprParser.nextToken()", "com.alibaba.druid.sql.dialect.db2.parser.DB2ExprParser.nextToken()", "com.alibaba.druid.sql.dialect.db2.parser.DB2ExprParser.identifierEquals(FnvHash.Constants.YEARS)", "com.alibaba.druid.sql.dialect.db2.parser.DB2ExprParser.identifierEquals(FnvHash.Constants.DAYS)", "com.alibaba.druid.sql.dialect.db2.parser.DB2ExprParser.identifierEquals(FnvHash.Constants.SECONDS)", "com.alibaba.druid.sql.dialect.db2.parser.DB2ExprParser.identifierEquals(FnvHash.Constants.MONTHS)", "com.alibaba.druid.sql.dialect.db2.parser.DB2ExprParser.nextToken()", "com.alibaba.druid.sql.dialect.db2.parser.DB2ExprParser.identifierEquals(FnvHash.Constants.MINUTES)", "com.alibaba.druid.sql.dialect.db2.parser.DB2ExprParser.nextToken()", "com.alibaba.druid.sql.dialect.db2.parser.DB2ExprParser.nextToken()", "com.alibaba.druid.sql.dialect.db2.parser.DB2ExprParser.nextToken()", "com.alibaba.druid.sql.dialect.db2.parser.DB2ExprParser.nextToken()"], "Fixed commit": "d3266ca300a9585e84aedf93b5448e314cc2edc8", "Url": "https://api.github.com/repos/FlakyTestDetection/druid", "Date": "2018-01-31T09:51:20Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((dates.length) == 2) && ((java.lang.Integer.parseInt(dates[0])) > (java.lang.Integer.parseInt(dates[1])))) { throw new de.wwu.wmss.core.InvalidWMSSRequestException(((((ErrorCodes.INVALID_DATE_DESCRIPTION) + \" [\") + (this.dateIssued)) + \"]\"), ErrorCodes.INVALID_DATE_CODE, ErrorCodes.INVALID_DATE_HINT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6133/buggy-version/wmss.src.de.wwu.wmss.core.WMSSRequest.java", "BodyUseAPI": [], "Fixed commit": "2d1b720b73761f8b66369e5474d0d87c54275b2e", "Url": "https://api.github.com/repos/jimjonesbr/wmss", "Date": "2018-10-25T10:16:03Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (a == 2) { choice = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9001/buggy-version/src.com.company.EscapeYourResponsibilities.java", "BodyUseAPI": [], "Fixed commit": "f12d718809069650e59474b8bc160ab786fda896", "Url": "https://api.github.com/repos/garganjohn/HW", "Date": "2018-10-26T19:42:13Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((json.get(\"uuid\")) != null) uuid = json.get(\"uuid\").toString(); else uuid = \"none\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7669/buggy-version/src.eus.gamerauntsia.mc.user.User.java", "BodyUseAPI": [], "Fixed commit": "548da364620ee68d4d7ba56c210edca539ec3295", "Url": "https://api.github.com/repos/GameErauntsia/GameErauntsiaMCberria", "Date": "2018-09-05T17:32:40Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.nio.file.Files.isDirectory(this.basePath))) { return java.util.Collections.emptySet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6690/buggy-version/modules.ballerina-lang.src.main.java.org.ballerinalang.repository.fs.GeneralFSPackageRepository.java", "BodyUseAPI": [], "Fixed commit": "dd00d2e01761fb155da504df331c6b01bf577158", "Url": "https://api.github.com/repos/hasithaa/ballerina", "Date": "2018-01-12T13:07:47Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (steps1 < 150) { android.content.SharedPreferences map_locations = c.getSharedPreferences(\"Temp\", android.content.Context.MODE_PRIVATE); map_locations.edit().clear().apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1872/buggy-version/app.src.main.java.com.example.barto.stepcounterbart.StepCounter.java", "BodyUseAPI": [], "Fixed commit": "c1ef470ae5a4329d42633c5a564eeb5125247fd5", "Url": "https://api.github.com/repos/Bart94/MyAppStepCounter", "Date": "2018-02-21T07:01:30Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.contains(\"\u00f5nnestus\")) { android.content.Intent intent = new android.content.Intent(context, com.example.kasutaja.andmeprojekt.MainActivity.class); context.startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7891/buggy-version/app.src.main.java.com.example.kasutaja.andmeprojekt.BackgroundWorker.java", "BodyUseAPI": [], "Fixed commit": "1206f96ed6a2a0e5444e91fccf37ef3699986dcc", "Url": "https://api.github.com/repos/Kmarten/Andmeprojekt2", "Date": "2018-02-23T18:55:04Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((updatedUser.getSignupdate()) == null) { updatedUser.setSignupdate(currentUser.getSignupdate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9420/buggy-version/giveitforward.src.main.java.giveitforward.managers.ManageUser.java", "BodyUseAPI": ["giveitforward.models.User.setSignupdate(currentUser.getSignupdate())"], "Fixed commit": "63b82cb84596f813fa7b213758707c3b26c84fc7", "Url": "https://api.github.com/repos/GiveItForward/Server", "Date": "2018-03-13T18:08:02Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["giveitforward.managers.ManageEmail.confirmHash(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ec == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9420/buggy-version/giveitforward.src.main.java.giveitforward.managers.ManageEmail.java", "BodyUseAPI": [], "Fixed commit": "63b82cb84596f813fa7b213758707c3b26c84fc7", "Url": "https://api.github.com/repos/GiveItForward/Server", "Date": "2018-03-13T18:08:02Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.netflix.hollow.core.write.objectmapper.DeprecatedApi.value()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(annotationValue.isEmpty())) { builder.append(\" /**\\n\").append(\" * @deprecated \").append(annotationValue).append(\"\\n\").append(\" */\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6430/buggy-version/hollow.src.main.java.com.netflix.hollow.api.codegen.objects.HollowObjectJavaGenerator.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "bb055768cc25c5858b167b781454bd76c898dc4f", "Url": "https://api.github.com/repos/koperm/hollow", "Date": "2018-10-11T12:58:45Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (is_new) messageRecordList.addFirst(messageRecord);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4893/buggy-version/src.org.thoughtcrime.securesms.SearchHandler.java", "BodyUseAPI": [], "Fixed commit": "4a0613183ad508a28efc6d5829333a37c9c752c6", "Url": "https://api.github.com/repos/Radu-Raicea/SignalAndroid", "Date": "2018-03-18T06:13:50Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uk.gov.hmcts.sscs.service.AirLookupService.LOG.isDebugEnabled()) { uk.gov.hmcts.sscs.service.AirLookupService.LOG.debug(java.lang.String.format(\"Post code: {0} Regional office: {1}\", postcodeCell.getRichStringCellValue().getString().toLowerCase().trim(), adminGroupCell.getRichStringCellValue().getString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6880/buggy-version/src.main.java.uk.gov.hmcts.sscs.service.AirLookupService.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "9425e00bd61431ca4fcfd66255b9b0700f8c655e", "Url": "https://api.github.com/repos/hmcts/sscs-tribunals-case-api", "Date": "2018-09-25T12:41:28Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uk.gov.hmcts.sscs.service.AirLookupService.LOG.isDebugEnabled()) { uk.gov.hmcts.sscs.service.AirLookupService.LOG.debug(\"Successfully loaded lookup data for postcode endpoint\"); uk.gov.hmcts.sscs.service.AirLookupService.LOG.debug(java.lang.String.format(\"Regional centre data has {0} post codes\", lookupRegionalCentreByPostCode.keySet().size())); uk.gov.hmcts.sscs.service.AirLookupService.LOG.debug(java.lang.String.format(\"Air Venue data has {0} post codes\", lookupAirVenueNameByPostCode.keySet().size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6880/buggy-version/src.main.java.uk.gov.hmcts.sscs.service.AirLookupService.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)", "org.slf4j.Logger.debug(java.lang.String)", "org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "9425e00bd61431ca4fcfd66255b9b0700f8c655e", "Url": "https://api.github.com/repos/hmcts/sscs-tribunals-case-api", "Date": "2018-09-25T12:41:28Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uk.gov.hmcts.sscs.service.AirLookupService.LOG.isDebugEnabled()) { uk.gov.hmcts.sscs.service.AirLookupService.LOG.debug(java.lang.String.format(\"Venue map has {0} venue ids\", lookupAirVenueNameByPostCode.keySet().size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6880/buggy-version/src.main.java.uk.gov.hmcts.sscs.service.AirLookupService.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "9425e00bd61431ca4fcfd66255b9b0700f8c655e", "Url": "https://api.github.com/repos/hmcts/sscs-tribunals-case-api", "Date": "2018-09-25T12:41:28Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(CreateItems.probability.isEmpty())) { for (java.lang.String name : CreateItems.probability.keySet()) { probabilities.addChance(name, CreateItems.probability.get(name)); } return ((java.lang.String) (probabilities.getRandomElement())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9426/buggy-version/src.me.RockinChaos.itemjoin.listeners.giveitems.SetItems.java", "BodyUseAPI": [], "Fixed commit": "37a5cfcb7e0a0166bdb905bcf2fe454a4d7558aa", "Url": "https://api.github.com/repos/RockinChaos/ItemJoin", "Date": "2018-05-24T18:38:03Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.beigeoranges.ecms.Dao.UserDao.findUserAccount(invitation.getEmail())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (user != null) { eventDao.Invite(invitation.getEventId(), java.lang.Math.toIntExact(user.getUserId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/880/buggy-version/src.main.java.com.beigeoranges.ecms.Controllers.InvitationController.java", "BodyUseAPI": ["com.beigeoranges.ecms.Dao.EventDao.Invite(invitation.getEventId(),int)", "com.beigeoranges.ecms.Model.User.getUserId()", "java.lang.Math.toIntExact(user.getUserId())"], "Fixed commit": "caa2ccb37ef9ab8dd73a0db8df6fb8934adb3e56", "Url": "https://api.github.com/repos/malynch7/ecms", "Date": "2018-07-16T20:51:01Z"},
{"Line": "=>1019", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.ignite.internal.processors.query.h2.IgniteH2Indexing.dataTable(cmd.schemaName(),cmd.tableName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tbl == null) { idx.kernalContext().cache().createMissingQueryCaches(); tbl = idx.dataTable(cmd.schemaName(), cmd.tableName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7853/buggy-version/modules.indexing.src.main.java.org.apache.ignite.internal.processors.query.h2.DmlStatementsProcessor.java", "BodyUseAPI": [], "Fixed commit": "822c3b1eed9b9cde15e3e381f7a4dc0b04a90403", "Url": "https://api.github.com/repos/sk0x50/ignite", "Date": "2018-02-15T11:00:42Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) < 1) { resultObject.put(\"isFood\", false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9661/buggy-version/src.main.java.cn.loveboyin.api.WechatDetectServlet.java", "BodyUseAPI": [], "Fixed commit": "fd565b3a5013f5e8e91e2896c25f9e3a8663a728", "Url": "https://api.github.com/repos/icechen1219/weyoung", "Date": "2018-08-06T04:00:40Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((showAdvice) || (verbose)) resultString.append(\" \").append(rule.getTitle()).append(\" \").append(result.getMessage()); else resultString.append(\" \").append(rule.getTitle());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5464/buggy-version/src.main.java.gitruler.Command.java", "BodyUseAPI": [], "Fixed commit": "cde1a188ce0993089779b97d855397fd911b42c8", "Url": "https://api.github.com/repos/rcraggs/gitruler", "Date": "2018-09-12T21:04:31Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.resolve(java.nio.file.Path)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.nio.file.Files.isDirectory(resolvedFullPath)) && (!(org.wso2.ballerinalang.util.RepoUtils.hasProjectRepo(currentDir)))) { org.ballerinalang.packerina.cmd.BuildCommand.outStream.println((\"error: do you mean to build the ballerina package as a project? If so run\" + \" ballerina init to make it a project with a .ballerina directory\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/866/buggy-version/cli.ballerina-packerina.src.main.java.org.ballerinalang.packerina.cmd.BuildCommand.java", "BodyUseAPI": [], "Fixed commit": "50092192785ca36044d9f847b5b12080b3fb7a83", "Url": "https://api.github.com/repos/NatashaWso2/ballerina", "Date": "2018-08-20T13:31:12Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.scene.control.Alert.showAndWait()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (result.isPresent()) { return (result.get()) == (javafx.scene.control.ButtonType.OK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2605/buggy-version/module.ebdj-ihm.src.main.java.fr.qp1c.ebdj.liseuse.ihm.view.popup.PopUpNouveauTirage4ALS.java", "BodyUseAPI": ["java.util.Optional<javafx.scene.control.ButtonType>.get()"], "Fixed commit": "19c86ef303242ace16fa0832ccb932b618e5f8f5", "Url": "https://api.github.com/repos/ngendron/ebdj-liseuse", "Date": "2018-03-31T10:01:34Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((thumbnail) != null) item.setThumbnail(com.markusbilz.yown.BitmapUtility.bitmap2Byte(thumbnail));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9522/buggy-version/app.src.main.java.com.markusbilz.yown.EditActivity.java", "BodyUseAPI": [], "Fixed commit": "5d3c4155c982b25941531f22b50737bc80d3b615", "Url": "https://api.github.com/repos/KarelZe/yown", "Date": "2018-03-01T14:38:47Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (fac != null) { fac = net.minecraftforge.fluids.FluidUtil.tryEmptyContainer(held, tank, java.lang.Integer.MAX_VALUE, player, true); if (FluidActionResult.FAILURE.equals(fac)) return false; containerItem = fac.getResult(); }else { tank.fill(heldContents, true); containerItem = growthcraft.core.shared.legacy.FluidContainerRegistry.drainFluidContainer(held); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2798/buggy-version/src.main.java.growthcraft.core.shared.fluids.GrowthcraftFluidUtils.java", "BodyUseAPI": [], "Fixed commit": "d5e062ccd85c22c963be8f50172a4456fe24dd84", "Url": "https://api.github.com/repos/GrowthcraftCE/Growthcraft-1.12", "Date": "2018-04-29T16:37:56Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.fluids.FluidUtil.getFluidContained(net.minecraft.item.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (heldContents == null) { heldContents = growthcraft.core.shared.legacy.FluidContainerRegistry.getFluidForFilledItem(held); if (heldContents == null) return false; if ((tank.fill(heldContents, false)) <= 0) return false; }else { fac = net.minecraftforge.fluids.FluidUtil.tryEmptyContainer(held, tank, java.lang.Integer.MAX_VALUE, player, false); if (FluidActionResult.FAILURE.equals(fac)) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2798/buggy-version/src.main.java.growthcraft.core.shared.fluids.GrowthcraftFluidUtils.java", "BodyUseAPI": [], "Fixed commit": "d5e062ccd85c22c963be8f50172a4456fe24dd84", "Url": "https://api.github.com/repos/GrowthcraftCE/Growthcraft-1.12", "Date": "2018-04-29T16:37:56Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((term) == (-1)) { term = state.getCurrentTerm(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2997/buggy-version/src.de.hhu.bsinfo.dxraft.message.ClientRequest.java", "BodyUseAPI": [], "Fixed commit": "31b5a552cba9329bd82fac712a4432179d22e98a", "Url": "https://api.github.com/repos/Nils1337/dxraft", "Date": "2018-06-29T16:00:37Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fighterz.main.Window.getGame().getFalessiMovementLock()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!falessiLock) && (!locked)) { falessi.setFlip(false); mammen.setFlip(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5744/buggy-version/src.com.fighterz.main.Fighter.java", "BodyUseAPI": [], "Fixed commit": "c7a053a1ac8258016c0337ce9663edf931d65238", "Url": "https://api.github.com/repos/TraceRainbolt/SuperCSCFighterZ", "Date": "2018-05-14T20:46:55Z"},
{"Line": "=>968", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mDragHelper.getViewDragState()) == (ViewDragHelper.STATE_IDLE)) { mDragHelper.abort(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4883/buggy-version/library.src.main.java.com.sothree.slidinguppanel.SlidingUpPanelLayout.java", "BodyUseAPI": ["com.sothree.slidinguppanel.ViewDragHelper.abort()"], "Fixed commit": "bd84ac9f17a6cb17a4065193e620101585d418ab", "Url": "https://api.github.com/repos/Chalmers-IT/AndroidSlidingUpPanel", "Date": "2018-10-09T10:48:07Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (slideMenuView)) { android.graphics.drawable.Drawable contentBack = slideMenuView.getBackground(); if (null == contentBack) { slideMenuView.setBackgroundColor(Color.GRAY); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9744/buggy-version/slidemenulib.src.main.java.com.kongdy.slidemenulib.SlideMenuLayout.java", "BodyUseAPI": [], "Fixed commit": "cfb801c468c5039a7dfb30d82bbb8c93b65b56c4", "Url": "https://api.github.com/repos/Kongdy/SlideMenuLayout", "Date": "2018-04-28T02:15:55Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bidAmount <= currentBid) { bidAmount = currentBid + 0.01; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/820/buggy-version/workloadDriver.src.main.java.com.vmware.weathervane.workloadDriver.benchmarks.auction.strategies.RandomBidStrategy.java", "BodyUseAPI": [], "Fixed commit": "7cb02491d95a4553efd20fac8d958eacfe1916bb", "Url": "https://api.github.com/repos/vmware/weathervane", "Date": "2018-10-26T19:31:44Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CustomerQueue.heappop()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (res != null) { (customerNum)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/66/buggy-version/src.CustomerQueue.java", "BodyUseAPI": [], "Fixed commit": "31593fbf9a9236de10197682b9311c6dbe5f7fb8", "Url": "https://api.github.com/repos/pieworkplace/CSE6730Project1", "Date": "2018-02-12T21:06:23Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((targetLift - (sense.liftPos)) > 10) { targetArm = org.usfirst.frc.team910.robot.components.Elevator.ARM_SCALE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3480/buggy-version/src.org.usfirst.frc.team910.robot.components.Elevator.java", "BodyUseAPI": [], "Fixed commit": "079989572915e28516d05d05a5d1a1a809f0f920", "Url": "https://api.github.com/repos/FoleyFreeze/2018-FRC", "Date": "2018-03-16T00:40:11Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((sample.entities.things.Bomb) (player.getTempWeapon())).getCount()) <= 0) { player.getWeapons().remove(player.getTempWeapon()); player.setHandWithoutWeapon(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9313/buggy-version/src.sample.logic.GameLogic.java", "BodyUseAPI": ["sample.entities.mapObjects.Player.getTempWeapon()", "sample.entities.mapObjects.Player.getWeapons()", "player.getWeapons().remove(player.getTempWeapon())", "sample.entities.mapObjects.Player.setHandWithoutWeapon()"], "Fixed commit": "bbbdc3b3f1e8245b31c16e4deb431163c4867032", "Url": "https://api.github.com/repos/Starserg/labirint", "Date": "2018-08-22T13:50:24Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.client.getClientSecretExpiresAt()) == null) && (!(update))) { this.client.setClientSecretExpiresAt(new java.util.Date()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8703/buggy-version/server.src.main.java.org.gluu.oxtrust.action.UpdateClientAction.java", "BodyUseAPI": ["org.gluu.oxtrust.model.OxAuthClient.setClientSecretExpiresAt(java.util.Date)"], "Fixed commit": "171ab7dfb70480bc3e601620514859258d7f5223", "Url": "https://api.github.com/repos/GluuFederation/oxTrust", "Date": "2018-09-06T01:12:15Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.client.getClientSecretExpiresAt().before(new java.util.Date())) { facesMessages.add(FacesMessage.SEVERITY_ERROR, \"This client has expired. Update the expiration date in order to save changes\"); return org.gluu.oxtrust.util.OxTrustConstants.RESULT_FAILURE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8703/buggy-version/server.src.main.java.org.gluu.oxtrust.action.UpdateClientAction.java", "BodyUseAPI": [], "Fixed commit": "171ab7dfb70480bc3e601620514859258d7f5223", "Url": "https://api.github.com/repos/GluuFederation/oxTrust", "Date": "2018-09-06T01:12:15Z"},
{"Line": "=>3013", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value.trim().isEmpty()) { log.info(\"Passed empty value as new simple key composite facet - doing nothing\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8241/buggy-version/src.main.java.de.kiezatlas.website.WebsitePlugin.java", "BodyUseAPI": [], "Fixed commit": "c4c37280c051b8ee5dd6dc8541cc047a3e145d25", "Url": "https://api.github.com/repos/mukil/dm4-kiezatlas-website", "Date": "2018-03-15T14:54:41Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n.getBasionymAuthorship().exists()) { sb.append(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9903/buggy-version/name-parser-api.src.main.java.org.gbif.nameparser.util.NameFormatter.java", "BodyUseAPI": [], "Fixed commit": "94b4b98c9b68e6f966320db5007edb9dc71ec13e", "Url": "https://api.github.com/repos/gbif/name-parser", "Date": "2018-07-05T13:42:24Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (eventList == null) return list;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1257/buggy-version/app.src.main.java.edu.byui.cs246.iplan.DayViewActivity.java", "BodyUseAPI": [], "Fixed commit": "9d1c8c10987dae49ba718d4cfce8369fcdd9e5ec", "Url": "https://api.github.com/repos/twillia7/iPlan", "Date": "2018-07-18T20:57:48Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.queue.size()) >= 31) { this.queue.remove(); java.lang.System.out.println(((\"removing dataArray from the queue.\" + \"new queue size: \") + (this.queue.size()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2970/buggy-version/ProjectInfrastructures.src.ServerApp.StationBuffer.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.util.LinkedList<java.lang.Object>.size()", "java.util.LinkedList<java.lang.Object>.remove()"], "Fixed commit": "aaf166206ce1f6dc308a8cdfc943b899afc2ac17", "Url": "https://api.github.com/repos/WisseVoortman/ProjectInfrastructuren", "Date": "2018-01-31T13:07:40Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["value.toString().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((contents.length) > 2) { context.write(new org.apache.hadoop.io.Text(contents[1]), new org.apache.hadoop.io.LongWritable(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/341/buggy-version/hadoop.src.main.java.com.gfyulx.DI.hadoop.service.MapCollageCount.java", "BodyUseAPI": ["com.gfyulx.DI.hadoop.service.Context.write(org.apache.hadoop.io.Text,org.apache.hadoop.io.LongWritable)"], "Fixed commit": "983352efc5bfd30f98cc9463a796ce3a890df24c", "Url": "https://api.github.com/repos/gfyulx/DI", "Date": "2018-08-21T07:59:39Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((PseudoDatabase.userData.get(name).get(1).compareTo(\"1\")) == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8090/buggy-version/src.PseudoDatabase.java", "BodyUseAPI": [], "Fixed commit": "98897e0501052185514b239ddc7508e9b02c3d20", "Url": "https://api.github.com/repos/BrandonGower-Winter/CSC3ChatApp", "Date": "2018-03-23T14:56:44Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cardName.indexOf(\"(\")) > 0) cardName = cardName.substring(0, cardName.indexOf(\"(\")).trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4597/buggy-version/src.main.java.org.magic.gui.abstracts.AbstractJDashlet.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.trim()", "java.lang.String.substring(int,int)"], "Fixed commit": "0b389eaf69189075a999af2d8e57e33aa75dcd59", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-01-13T14:49:47Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seemoo.fitbit.miscellaneous.InfoGraphDataPoints.getDatapoints()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dataPoints.length) == 5) { graph.getGridLabelRenderer().setNumHorizontalLabels(3); }else if ((dataPoints.length) > 5) { graph.getGridLabelRenderer().setNumHorizontalLabels(2); }else { graph.getGridLabelRenderer().setNumHorizontalLabels(dataPoints.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2099/buggy-version/app.src.main.java.seemoo.fitbit.miscellaneous.InfoArrayAdapter.java", "BodyUseAPI": ["graph.getGridLabelRenderer().setNumHorizontalLabels(dataPoints.length)"], "Fixed commit": "041426e0eee6e73dbe6e444cfc54ebb59c664ba2", "Url": "https://api.github.com/repos/seemoo-lab/fitness-app", "Date": "2018-08-23T16:01:39Z"},
{"Line": "=>2852", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"inbox\".equalsIgnoreCase(request_coming_from)) { java.util.Map<java.lang.String, java.lang.Object> recent_activity = objUsersDao.getRecentActivityOf(((userSessionBean.getId()) + \"\"), ((java.lang.Integer) (reqObj.get(\"id\"))), list_type); if (recent_activity != null) { reqObj.put(\"recent_activity_map\", recent_activity); }else { reqObj.put(\"recent_activity_map\", \"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9795/buggy-version/src.main.java.com.aurospaces.neighbourhood.controller.HomePageController.java", "BodyUseAPI": [], "Fixed commit": "0ed9923c3a4f9b8bdb547eb523f57e723d894b40", "Url": "https://api.github.com/repos/kotaiahandraju/Matrimony", "Date": "2018-08-08T08:42:07Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newVal == 0) { nextButton.setVisibility(View.INVISIBLE); }else { nextButton.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4059/buggy-version/app.src.main.java.com.ordered.report.view.fragment.CartonNumberPickerFragment.java", "BodyUseAPI": [], "Fixed commit": "ae164be2b82f4e22bccdf1e2f09e28541f529d47", "Url": "https://api.github.com/repos/snithishkumar/CartonPacking", "Date": "2018-08-19T16:32:57Z"},
{"Line": "=>1396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (elapsed >= timeoutNanos) { java.util.concurrent.locks.LockSupport.park(this); }else { java.util.concurrent.locks.LockSupport.parkNanos(this, (timeoutNanos - elapsed)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8396/buggy-version/src.main.java.org.jboss.threads.EnhancedQueueExecutor.java", "BodyUseAPI": ["java.util.concurrent.locks.LockSupport.parkNanos(org.jboss.threads.EnhancedQueueExecutor,long)"], "Fixed commit": "0bd6ebe389bb87e4f1c6db7217545034f1665da3", "Url": "https://api.github.com/repos/ropalka/jboss-threads", "Date": "2018-02-23T22:15:57Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(startMonth.evaluate())", "java.lang.Integer.parseInt(endMonth.evaluate())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (eMonth < sMonth) { return ((12 - sMonth) + eMonth) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5115/buggy-version/src.ast.PAYSOWES.java", "BodyUseAPI": [], "Fixed commit": "9ad75fa714ff7e1dfdc7ff6b3ebd053d732bac4a", "Url": "https://api.github.com/repos/willywwang/CPSC-410-Project-1", "Date": "2018-10-13T23:10:58Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spi.getEPAdministrator().getStatement(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (statement == null) { try { statement = spi.getEPAdministrator().createEPL((\"select * from \" + (sub.getValue().getEventTypeName())), statementName); } catch (java.lang.Throwable t) { java.lang.String message = \"Exception starting adapter: \" + (t.getMessage()); log.error(message, t); throw new java.lang.RuntimeException(message, t); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/722/buggy-version/esperio-springjms.src.main.java.com.espertech.esperio.jms.JMSOutputAdapter.java", "BodyUseAPI": [], "Fixed commit": "b98e8c5592a1c73207d32c3bbc37cd5d324313b3", "Url": "https://api.github.com/repos/espertechinc/esper", "Date": "2018-03-08T18:09:27Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode != (android.app.Activity.RESULT_OK)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8564/buggy-version/app.src.main.java.com.example.mateusrovari.instagramclone.Share.PhotoFragment.java", "BodyUseAPI": [], "Fixed commit": "d33a3ba66226a4c11481e5a50c2ea75e369ae601", "Url": "https://api.github.com/repos/MtsRovari/Instagram-Clone", "Date": "2018-09-16T17:01:32Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.parse.ParseUser.getCurrentUser().getParseFile(\"image\")) != null) { com.bumptech.glide.Glide.with(this).load(com.parse.ParseUser.getCurrentUser().getParseFile(\"image\").getUrl()).into(profileImageIv); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4806/buggy-version/app.src.main.java.me.tsengem.parstagram.UserFragment.java", "BodyUseAPI": [], "Fixed commit": "cfbe0bab8a71f611c5865214f595dd4f47d55bfa", "Url": "https://api.github.com/repos/tsengem/Parstagram", "Date": "2018-07-14T01:41:58Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.breadwallet.wallet.abstracts.BaseWalletManager.getIso()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((iso.equalsIgnoreCase(\"BTC\")) || (iso.equalsIgnoreCase(\"BCH\"))) { java.math.BigDecimal amount = cryptoAmount.divide(new java.math.BigDecimal(com.breadwallet.wallet.wallets.bitcoin.BaseBitcoinWalletManager.ONE_BITCOIN_IN_SATOSHIS), 8, BRConstants.ROUNDING_MODE); builder = builder.appendQueryParameter(\"amount\", amount.toPlainString()); }else if (iso.equalsIgnoreCase(\"ELA\")) { java.math.BigDecimal amount = cryptoAmount.divide(new java.math.BigDecimal(com.breadwallet.wallet.wallets.ela.WalletElaManager.ONE_ELA_IN_SALA), 8, BRConstants.ROUNDING_MODE); builder = builder.appendQueryParameter(\"amount\", amount.toPlainString()); }else { throw new java.lang.RuntimeException((\"URI not supported for: \" + iso)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6246/buggy-version/app.src.main.java.com.breadwallet.wallet.util.CryptoUriParser.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "8be96a03d397ed69bdefc09ee725f968021498f6", "Url": "https://api.github.com/repos/elastos/Elastos.App.Wallet.Elephant.Android", "Date": "2018-10-26T09:46:35Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transform) != null) { dr.math.matrixAlgebra.ReadableVector.Utils.setParameter(new dr.math.matrixAlgebra.WrappedVector.Raw(transform.inverse(minimumPoint, 0, minimumPoint.length)), parameter); }else { dr.math.matrixAlgebra.ReadableVector.Utils.setParameter(new dr.math.matrixAlgebra.WrappedVector.Raw(minimumPoint), parameter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/125/buggy-version/src.dr.evomodel.treedatalikelihood.discrete.MaximizerWrtParameter.java", "BodyUseAPI": [], "Fixed commit": "7fd7ef0d112314bc08231f15fce070595c724c3f", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2018-09-14T10:17:25Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((listBean.getStatus()) == 7) || ((listBean.getStatus()) == 8)) { onStatusListener.onSetRefusedListener(view, id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2743/buggy-version/SillyChildMerchant.app.src.main.java.com.yinglan.scm.adapter.order.GoodsOrderViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "880b44aba65fc0fdc061ef2567826bd94028108b", "Url": "https://api.github.com/repos/921668753/SillyChildMerchant-Android", "Date": "2018-07-02T12:34:09Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((listBean.getStatus()) == 7) || ((listBean.getStatus()) == 8)) { onStatusListener.onSetAgreedListener(view, id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2743/buggy-version/SillyChildMerchant.app.src.main.java.com.yinglan.scm.adapter.order.GoodsOrderViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "880b44aba65fc0fdc061ef2567826bd94028108b", "Url": "https://api.github.com/repos/921668753/SillyChildMerchant-Android", "Date": "2018-07-02T12:34:09Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ineedwhite.diancan.dao.dao.OrderDao.selectOrderById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (exOrd == null) { orderDao.insertOrderInfo(orderDo); }else { orderDao.updateOrdFoodByUsrIdAndUKUMSts(orderDo.getOrder_food(), orderDo.getOrder_food_num()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7953/buggy-version/diancan-biz.src.main.java.com.ineedwhite.diancan.biz.impl.OrderServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "eeccb353a7dd1318cfff03187d35b3acd3b64f88", "Url": "https://api.github.com/repos/Ruan-Xin/diancan", "Date": "2018-03-21T02:43:54Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ineedwhite.diancan.dao.dao.OrderDao.selectOrderById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (exOrd != null) { if (org.apache.commons.lang3.StringUtils.equals(exOrd.getOrder_status(), OrderStatus.UD.getOrderStatus())) { logger.error((\"\u8be5\u8ba2\u5355\u5df2\u7ecf\u652f\u4ed8\u6210\u529f\uff0c\u8bf7\u91cd\u65b0\u9009\u83dc:\" + orderId)); com.ineedwhite.diancan.common.utils.BizUtils.setRspMap(resp, ErrorCodeEnum.DC00013); return resp; } if (!(com.ineedwhite.diancan.biz.utils.OrderUtils.getCacheOrder(orderId))) { logger.error((\"\u8be5\u8ba2\u5355\u4e0d\u5b58\u5728\u6216\u5df2\u8fc7\u671f orderId:\" + orderId)); com.ineedwhite.diancan.common.utils.BizUtils.setRspMap(resp, ErrorCodeEnum.DC00013); return resp; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7953/buggy-version/diancan-biz.src.main.java.com.ineedwhite.diancan.biz.impl.OrderServiceImpl.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.equals(exOrd.getOrder_status(),OrderStatus.UD.getOrderStatus())", "com.ineedwhite.diancan.dao.domain.OrderDo.getOrder_status()"], "Fixed commit": "eeccb353a7dd1318cfff03187d35b3acd3b64f88", "Url": "https://api.github.com/repos/Ruan-Xin/diancan", "Date": "2018-03-21T02:43:54Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentChar.matches(Language.REGEX_RS_LSQBRACKET)) { state = Language.ST_LSQBRACKET; }else if (currentChar.matches(Language.REGEX_RS_RSQBRACKET)) { state = Language.ST_RSQBRACKET; }else if (currentChar.matches(Language.REGEX_SINGLEQT)) { state = Language.ST_SINGLEQT; }else if (currentChar.matches(Language.REGEX_WHITESPACE)) { }else { throw new java.lang.Exception(((((\"Could not compile.\\n\" + \"Unrecognized token: \") + (currentChar)) + \"\\nFound on line: \") + (lineCounter))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6065/buggy-version/project.miniPascalV1.src.Lexer.java", "BodyUseAPI": ["java.lang.String.matches(Language.REGEX_RS_RSQBRACKET)", "java.lang.String.matches(Language.REGEX_SINGLEQT)", "java.lang.String.matches(Language.REGEX_WHITESPACE)"], "Fixed commit": "26fa1e807d238214a280af5c5d43024093ae8bee", "Url": "https://api.github.com/repos/arj0819/CSci465", "Date": "2018-10-04T04:27:45Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.zsr.model.DBManager.getSubscriptionDao().queryBuilder().where(SubscriptionDao.Properties.Id.eq(id)).unique()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (subscription == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7032/buggy-version/model.src.main.java.me.zsr.model.SubscriptionModel.java", "BodyUseAPI": [], "Fixed commit": "acc133e9a44f1f8bd8f07b4c7090b1c32b1b403c", "Url": "https://api.github.com/repos/zhangsr/rss", "Date": "2018-08-18T10:36:55Z"},
{"Line": "=>5041", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codename1.ui.Component.getScrollY()", "com.codename1.ui.Component.getGridPosY()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((java.lang.Math.abs((dest - scroll))) == 1) { setScrollY(dest); draggedMotionY = null; }else if (dest != scroll) { startTensile(scroll, dest, true); }else { draggedMotionY = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3044/buggy-version/CodenameOne.src.com.codename1.ui.Component.java", "BodyUseAPI": ["com.codename1.ui.Component.setScrollY(int)", "com.codename1.ui.Component.startTensile(int,int,boolean)"], "Fixed commit": "ae2b4ec1f5ec9badcfeb326a7c41757d16f49561", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2018-04-14T14:10:16Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cacheList.get(0).getFactor().isEmpty())) { weekForecast.setFactor(cacheList.get(0).getFactor()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3708/buggy-version/src.main.java.com.syntel.inventoryForecasting.dao.ForecastDao.java", "BodyUseAPI": ["cacheList.get(0).getFactor()", "java.util.List<com.syntel.inventoryForecasting.model.QueryResult>.get(int)", "com.syntel.inventoryForecasting.model.QueryResult.setFactor(cacheList.get(0).getFactor())"], "Fixed commit": "43da99002cb607c215749191bf1116f7cd4420ae", "Url": "https://api.github.com/repos/HunterMcAfee/inventoryForecasting", "Date": "2018-06-12T21:17:53Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cacheList.get(0).getFactor().isEmpty())) { weekForecast.setFactor(cacheList.get(0).getFactor()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3708/buggy-version/src.main.java.com.syntel.inventoryForecasting.dao.ForecastDao.java", "BodyUseAPI": ["cacheList.get(0).getFactor()", "com.syntel.inventoryForecasting.model.QueryResult.setFactor(cacheList.get(0).getFactor())", "java.util.List<com.syntel.inventoryForecasting.model.QueryResult>.get(int)"], "Fixed commit": "43da99002cb607c215749191bf1116f7cd4420ae", "Url": "https://api.github.com/repos/HunterMcAfee/inventoryForecasting", "Date": "2018-06-12T21:17:53Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URLEncoder.encode(notification.getMessage(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((msg.length()) > 4096) { msg = msg.substring(0, 4096); logger.error(((\"Message is too long : \" + (msg.length())) + \">4096. Will truncate it\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4562/buggy-version/src.main.java.org.magic.api.notifiers.impl.TelegramNotifier.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "a9b421380605c0c48ca4102b79bd25174f0ccf0b", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-05-06T20:02:36Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.e.edd2laboratorio2.Classes.RSA.esPrimo(int)", "com.e.edd2laboratorio2.Classes.RSA.esPrimo(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resultP & resultQ) { rsa.generarLlaves(p, q); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3326/buggy-version/app.src.main.java.com.e.edd2laboratorio2.Fragments.RsaCypherFragment.java", "BodyUseAPI": [], "Fixed commit": "e0edf8b8765812532ba70a08078f168e2d82a997", "Url": "https://api.github.com/repos/AlexRod97/EDD2Laboratorio2", "Date": "2018-10-25T08:19:18Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dsa.iot.dslink.node.Node.getConfig(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (val == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8238/buggy-version/src.main.java.org.dsa.iot.alarm.AbstractAlarmObject.java", "BodyUseAPI": [], "Fixed commit": "9b7ccdc01b8cabcbd57c6881578ffdc9e5ce1a7b", "Url": "https://api.github.com/repos/BitBoxUSA/dslink-java-alarm", "Date": "2018-04-24T22:36:30Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sciome.bmdexpress2.mvp.view.mainstage.dataview.CategoryAnalysisDataView.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!((bmdAnalysisDataSet) instanceof com.sciome.bmdexpress2.mvp.model.CombinedDataSet)) && (pathwayColumn > 0)) pathwayColumn--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8748/buggy-version/src.com.sciome.bmdexpress2.mvp.view.mainstage.dataview.CategoryAnalysisDataView.java", "BodyUseAPI": [], "Fixed commit": "d70f96030bcdcd688d67576990137fd6e9b4dab4", "Url": "https://api.github.com/repos/auerbachs/BMDExpress-2", "Date": "2018-08-07T12:12:09Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nothingToSend) { m_nextWorkPackage.reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1682/buggy-version/ib.IBConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "afc0cf5d04085d66dcde7cb49415d4a8cd7b5307", "Url": "https://api.github.com/repos/hhu-bsinfo/dxnet-src", "Date": "2018-02-14T15:20:33Z"},
{"Line": "=>684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bergerkiller.bukkit.tc.rails.type.RailType.takeJunction(org.bukkit.block.Block,com.bergerkiller.bukkit.tc.controller.components.RailJunction)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (state == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8134/buggy-version/src.main.java.com.bergerkiller.bukkit.tc.events.SignActionEvent.java", "BodyUseAPI": [], "Fixed commit": "253c40fe33cc12e60c7c11db599f844e5a87a9b2", "Url": "https://api.github.com/repos/bergerhealer/TrainCarts", "Date": "2018-08-30T19:30:31Z"},
{"Line": "=>680", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bergerkiller.bukkit.tc.Util.faceToJunction(currentType.getJunctions(getRails()),org.bukkit.block.BlockFace)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (junction == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8134/buggy-version/src.main.java.com.bergerkiller.bukkit.tc.events.SignActionEvent.java", "BodyUseAPI": [], "Fixed commit": "253c40fe33cc12e60c7c11db599f844e5a87a9b2", "Url": "https://api.github.com/repos/bergerhealer/TrainCarts", "Date": "2018-08-30T19:30:31Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dispatchToCustomSequence) { java.lang.String context = subscriberPath.getPath().substring(1); context = context.replace('/', '-'); if (synCtx.getConfiguration().getDefinedSequences().containsKey(context)) injectingSequence = ((org.apache.synapse.mediators.base.SequenceMediator) (synCtx.getSequence(context))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5847/buggy-version/components.inbound-endpoints.org.wso2.carbon.inbound.endpoint.src.main.java.org.wso2.carbon.inbound.endpoint.protocol.websocket.InboundWebsocketSourceHandler.java", "BodyUseAPI": [], "Fixed commit": "94b885ec3b25e920b3310039aab7d152169c14e9", "Url": "https://api.github.com/repos/wso2/carbon-mediation", "Date": "2018-02-11T08:38:31Z"},
{"Line": "=>713", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.power.doc.builder.SourceBuilder.MAP_CLASS.equals(gicName)) { data0.append(\"[{\\\"mapKey\\\":{}}],\"); continue out; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9396/buggy-version/api-doc.src.main.java.com.power.doc.builder.SourceBuilder.java", "BodyUseAPI": [], "Fixed commit": "232d20a1abe377d207bbb8f982552c6f7a3d1ee4", "Url": "https://api.github.com/repos/shalousun/ApplicationPower", "Date": "2018-07-29T14:05:18Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.power.doc.utils.DocClassUtil.getSimpleGicName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((globGicName.length) == 2) { params0.append(buildParams(globGicName[1], pre, (i + 1), isRequired, responseFieldMap, isResp)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9396/buggy-version/api-doc.src.main.java.com.power.doc.builder.SourceBuilder.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "com.power.doc.builder.SourceBuilder.buildParams(java.lang.String,java.lang.String,int,java.lang.String,java.util.Map<java.lang.String, com.power.doc.builder.CustomRespField>,boolean)"], "Fixed commit": "232d20a1abe377d207bbb8f982552c6f7a3d1ee4", "Url": "https://api.github.com/repos/shalousun/ApplicationPower", "Date": "2018-07-29T14:05:18Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (false == (com.em_projects.omdan.utils.StringUtils.isNullOrEmpty(com.em_projects.omdan.config.Dynamics.getServerIp()))) { if ((false == (com.em_projects.omdan.config.Dynamics.getServerIp().equalsIgnoreCase(serverIp))) && ((com.em_projects.omdan.config.Dynamics.getServerPort()) != serverPort)) { com.em_projects.omdan.config.Dynamics.uUID = \"\"; } }else { com.em_projects.omdan.config.Dynamics.uUID = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6484/buggy-version/app.src.main.java.com.em_projects.omdan.main.MainScreenActivity.java", "BodyUseAPI": [], "Fixed commit": "9ac72b282023ffa7fb8cc36b0feea6d99ed6df0d", "Url": "https://api.github.com/repos/eyalmnm/Omdan", "Date": "2018-03-26T12:56:22Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"#\".equals(t1.getGroupChar())) && (\"#\".equals(t2.getGroupChar()))) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9906/buggy-version/lcmLibrary.src.main.java.com.lcm.grouprecyclerview.GroupRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "8279554f2ed93f3f60b3b3d033173416ccf22d1c", "Url": "https://api.github.com/repos/lichenming0516/GroupRecyclerView", "Date": "2018-06-11T13:10:06Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"#\".equals(t1.getGroupChar())) && (!(\"#\".equals(t2.getGroupChar())))) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9906/buggy-version/lcmLibrary.src.main.java.com.lcm.grouprecyclerview.GroupRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "8279554f2ed93f3f60b3b3d033173416ccf22d1c", "Url": "https://api.github.com/repos/lichenming0516/GroupRecyclerView", "Date": "2018-06-11T13:10:06Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["server.messageHandler.SeaBattleGameMessageHandler.getPlayerSessionWithUUID(player.getUUID())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (opponentPlayerSession == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5054/buggy-version/src.main.java.server.messageHandler.SeaBattleGameMessageHandler.java", "BodyUseAPI": [], "Fixed commit": "d39bb1a22077744dc74132befe0a52daad6fdb90", "Url": "https://api.github.com/repos/ZachteBank/zeeslag", "Date": "2018-04-18T07:38:35Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["minesweeper.Validator.getString(java.util.Scanner,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (userAction.equals(\"flag\")) { userBoard = minesweeper.BoardFunctionality.flagCell(answerBoard, userBoard, x, y); minesweeper.Board.formatBoard(userBoard); if ((answerBoard[x][y]) == '*') { mineCount++; } }else if (userAction.equals(\"unflag\")) { userBoard = minesweeper.BoardFunctionality.unFlagCell(answerBoard, userBoard, x, y); minesweeper.Board.formatBoard(userBoard); if ((answerBoard[x][y]) == '*') { mineCount--; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8850/buggy-version/src.minesweeper.MineHunterApp.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "c81c1c3e4e982847401e38f478fe52ac0a7b8628", "Url": "https://api.github.com/repos/DartJulia/MineHunterGameGC", "Date": "2018-08-05T19:53:04Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Integer.parseInt(charLimitInput.getText())) > 0) { fileData.setCharPerLine(java.lang.Integer.parseInt(charLimitInput.getText())); updateLabels(); charLimitInput.setText(\"\"); }else { charLimitInput.setText(\"INPUT AN INTEGER > 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2902/buggy-version/CSE360Project.src.ProjectMain.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "FileData.setCharPerLine(int)", "javax.swing.JTextField.setText(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "b81a60818fad94a5016ab02e82f7783d0af75efc", "Url": "https://api.github.com/repos/Zaaaaaaach/CSE360-Project", "Date": "2018-03-31T02:13:50Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MagicianAwakening.SceneControl) == 0) { java.lang.System.out.println(\"You gained 143 experience points!\"); PlayerSkills.experience = (PlayerSkills.experience) + 143; }else if ((MagicianAwakening.SceneControl) == 1) { java.lang.System.out.println(\"You gained 87 experience points!\\\"\"); PlayerSkills.experience = (PlayerSkills.experience) + 87; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8552/buggy-version/MagicianAwakening.java", "BodyUseAPI": [], "Fixed commit": "12653525d6f9183678d9f986d9f7dde830e86ce9", "Url": "https://api.github.com/repos/Gaddiator/Progma", "Date": "2018-07-07T13:40:43Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MagicianAwakening.UserInput) == 1) { MagicianAwakening.SummonMagicalLightOutcome(); }else { java.lang.System.out.println(\"Dev Notes.................................................................\"); java.lang.System.out.println(\"I have commented a Thread.currentThread().stop(); because it is deprecated\"); java.lang.System.out.println(\"Usually the program would end. More time will be assigned to rectify the problem\"); java.lang.System.out.println(\"Goodbye\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8552/buggy-version/MagicianAwakening.java", "BodyUseAPI": [], "Fixed commit": "12653525d6f9183678d9f986d9f7dde830e86ce9", "Url": "https://api.github.com/repos/Gaddiator/Progma", "Date": "2018-07-07T13:40:43Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MagicianAwakening.SceneControl) == 0) { GroupOfWightsStats = Wight.getStats(Stats.GroupOfWightsStats); }else if ((MagicianAwakening.SceneControl) == 1) { GroupOfWightsStats = Wight.getStats(Stats.TrioOfWights); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8552/buggy-version/MagicianAwakening.java", "BodyUseAPI": [], "Fixed commit": "12653525d6f9183678d9f986d9f7dde830e86ce9", "Url": "https://api.github.com/repos/Gaddiator/Progma", "Date": "2018-07-07T13:40:43Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MagicianAwakening.SceneControl) == 1) { try (java.io.BufferedReader ClassInfoReader = new java.io.BufferedReader(new java.io.FileReader(\"src\\\\TextFiles\\\\Magician\\\\Awakening\\\\AlternateResponses\\\\1 - DoorToTheMagistrum.txt\"))) { java.lang.String line; while ((line = ClassInfoReader.readLine()) != null) { java.lang.System.out.println(line); } } catch (java.io.IOException e) { java.lang.System.out.println((\"Error file not found\\n\" + e)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8552/buggy-version/MagicianAwakening.java", "BodyUseAPI": [], "Fixed commit": "12653525d6f9183678d9f986d9f7dde830e86ce9", "Url": "https://api.github.com/repos/Gaddiator/Progma", "Date": "2018-07-07T13:40:43Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (line.startsWith(\"\\ufeff\")) { line = line.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/539/buggy-version/INIHandler.INIHandler.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "15f3b5cfeeee1b59043ff562c35470264abe70d7", "Url": "https://api.github.com/repos/PapeCoding/javaINI", "Date": "2018-10-12T22:04:19Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index < 0) || (index > (size))) { throw new java.lang.IndexOutOfBoundsException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3242/buggy-version/src.main.java.com.github.slfotg.collection.CompositeSequentialList.java", "BodyUseAPI": [], "Fixed commit": "42122bd87833dc8308bc745275c037b3f9ca645e", "Url": "https://api.github.com/repos/slfotg/prime-sieve", "Date": "2018-06-03T03:54:28Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null != (client)) && (!(client.connectedNodes().isEmpty()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2102/buggy-version/sdk-ses-base.src.main.java.com.ai.paas.ipaas.search.impl.SearchClientImpl.java", "BodyUseAPI": [], "Fixed commit": "50330efcc89ec4699bf4b505e91148f6694d011f", "Url": "https://api.github.com/repos/AIPaaS/service-sdk-ses", "Date": "2018-04-02T11:16:53Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(positionInDisplayBoundaries(col, row))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3485/buggy-version/src.main.java.tetrispvp.board.TetrisBoard.java", "BodyUseAPI": [], "Fixed commit": "d3854c387ea65e6fbac4469ab57f78e04dff09c1", "Url": "https://api.github.com/repos/Sumel/Tetrispvp", "Date": "2018-01-07T17:00:31Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((neighborGrid[xCoord][yCoord]) != 0) { this.displayGrid[xCoord][yCoord] = 1; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4780/buggy-version/app.src.main.java.edu.illinois.cs125.sagittario.sagittario.MineSweeper.java", "BodyUseAPI": [], "Fixed commit": "fc75f63e0d28d1f9d17d6fbd122d42a6bca35b6a", "Url": "https://api.github.com/repos/nusgart/sagittario", "Date": "2018-04-24T20:03:39Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((other.vertex) != null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2469/buggy-version/src.algorithms.MinimumSpanningTree.java", "BodyUseAPI": [], "Fixed commit": "ec582c4a6131c032611beb56b897c7a036560d58", "Url": "https://api.github.com/repos/davps/algorithms-and-data-structures-in-java", "Date": "2018-04-01T11:50:02Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((state.getRelationsStates()) == null) || (state.getRelationsStates().isEmpty())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5981/buggy-version/src.Model.java", "BodyUseAPI": [], "Fixed commit": "f9932781fa57546ec2747e38402f0d28148da9b3", "Url": "https://api.github.com/repos/Roti12/UnwindModel", "Date": "2018-02-26T08:05:33Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((instructions != null) && ((instructions.length()) > 0)) { instructionOpen = instructions.getJSONObject(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/732/buggy-version/app.src.main.java.com.example.linxing.create.RecipeDetailData.java", "BodyUseAPI": ["org.json.JSONArray.getJSONObject(int)"], "Fixed commit": "1518358b7348e0696f9e2b08c3a8968f735bf03f", "Url": "https://api.github.com/repos/lynnlinx/Create", "Date": "2018-05-03T15:26:54Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((instructionOpen != null) && ((instructionOpen.length()) > 0)) { instructionSteps = instructionOpen.getJSONArray(\"steps\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/732/buggy-version/app.src.main.java.com.example.linxing.create.RecipeDetailData.java", "BodyUseAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "1518358b7348e0696f9e2b08c3a8968f735bf03f", "Url": "https://api.github.com/repos/lynnlinx/Create", "Date": "2018-05-03T15:26:54Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ed == null) selected = card.getEditions().get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2706/buggy-version/src.main.java.org.magic.api.pricers.impl.MTGPricePricer.java", "BodyUseAPI": [], "Fixed commit": "052aa4137d69aa966b07ba14f0fa06018f35ccbf", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-01-13T14:04:21Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jPCBSim.dft.get_sparm2p(jPCBSim.dft,jPCBSim.Simulation,double,double,double,double)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sparms == null) { do_update_now = false; simulation.fftUpdateCompleted(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7326/buggy-version/src.jPCBSim.sparm_chart.java", "BodyUseAPI": [], "Fixed commit": "f2c63992269b0e1cd96c8c2797a791964f90c7e8", "Url": "https://api.github.com/repos/tvelliott/jPCBSim", "Date": "2018-09-12T00:15:31Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jPCBSim.dft.get_fft(((((simulation.sim_path) + (simulation.sim_name)) + \"/port_it\") + (java.lang.Integer.toString((n + 1)))))", "jPCBSim.dft.get_fft(((((simulation.sim_path) + (simulation.sim_name)) + \"/port_ut\") + (java.lang.Integer.toString((n + 1)))))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((n > 0) && (((portn_u.length) != len) || ((portn_i.length) != len))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7326/buggy-version/src.jPCBSim.dft.java", "BodyUseAPI": [], "Fixed commit": "f2c63992269b0e1cd96c8c2797a791964f90c7e8", "Url": "https://api.github.com/repos/tvelliott/jPCBSim", "Date": "2018-09-12T00:15:31Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPosition) != 0) { mMasterListBinding.recyclerView.smoothScrollToPosition(mPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/730/buggy-version/app.src.main.java.com.sriky.redditlite.ui.MasterListFragment.java", "BodyUseAPI": [], "Fixed commit": "22144c3436a58cd2fd1d551f9ddfa6656a336149", "Url": "https://api.github.com/repos/DroidNanoDegree/redditLite", "Date": "2018-02-13T02:04:57Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.common.GoogleApiAvailability.getInstance().getErrorDialog(android.app.Activity,(connectionResult != null ? connectionResult.getErrorCode() : 0),int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dialog == null) { dialog = new android.support.v7.app.AlertDialog.Builder(getActivity()).setMessage(getString(R.string.common_google_play_services_unknown_issue, getString(R.string.app_name))).create(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5046/buggy-version/app.src.main.java.com.ndhunju.dailyjournal.controller.backup.GoogleDriveBackupActivity.java", "BodyUseAPI": [], "Fixed commit": "0e3f5aac013b8dea06e12f93c20ba7bd5be0c183", "Url": "https://api.github.com/repos/ndhunju/dailyJournal", "Date": "2018-02-01T15:32:33Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.exists()) { java.lang.String name = dataSnapshot.child(\"name\").getValue().toString(); patientHeaderName.setText(name); }else { android.widget.Toast.makeText(this, \"Wrong Patient Type\", Toast.LENGTH_LONG).show(); startActivity(new android.content.Intent(this, com.example.shreyesh.sarinstituteofmedicalscience.PatientLoginActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8935/buggy-version/app.src.main.java.com.example.shreyesh.sarinstituteofmedicalscience.PatientHomeActivity.java", "BodyUseAPI": ["dataSnapshot.child(\"name\").getValue()", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "dataSnapshot.child(\"name\").getValue().toString()"], "Fixed commit": "22c858ae18d677a52b34640ba857e7c19e7533b0", "Url": "https://api.github.com/repos/SARIMS/SARInstituteofMedicalScience", "Date": "2018-10-06T17:12:12Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(Context.CONNECTIVITY_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (cm != null) { android.net.NetworkInfo activeNetwork = cm.getActiveNetworkInfo(); if (activeNetwork != null) { boolean isWiFi = (activeNetwork.getType()) == (android.net.ConnectivityManager.TYPE_WIFI); return isWiFi; } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2816/buggy-version/AppDetection.app.src.main.java.vik.com.appdetection.background.app.service.CreateDataService.java", "BodyUseAPI": ["android.net.ConnectivityManager.getActiveNetworkInfo()"], "Fixed commit": "fdb23208d0344c42cfd1f5788b2935344dfec7ac", "Url": "https://api.github.com/repos/vikrant4k/AppDetection", "Date": "2018-06-11T18:02:09Z"},
{"Line": "=>596", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prod.getIsPack()) { m_Dirty.setDirty(false); }else { m_Dirty.setDirty(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9624/buggy-version/src-pos.uk.chromis.pos.inventory.StockDiaryEditor.java", "BodyUseAPI": [], "Fixed commit": "c771133a7df1df9abde10d8cc48a976cf46c0f12", "Url": "https://api.github.com/repos/Hedydd/ChromisPOS", "Date": "2018-05-18T16:38:33Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) { getSupportActionBar().setDisplayHomeAsUpEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3483/buggy-version/app.src.main.java.openfoodfacts.github.scrachx.openfood.views.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "43f2a7c1b480e4a396d9b2c19b9a68ee189fffd2", "Url": "https://api.github.com/repos/Rutvikmodi/openfoodfacts-androidapp", "Date": "2018-07-04T14:10:05Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((inputPassword.getText().length()) == 0) && ((inputEmail.getText().length()) != 0)) && ((inputUsername.getText().length()) != 0)) { message = \"Probl\u00e8me interne \u00e0 l'application, veuileez r\u00e9essayer plus tard...\"; }else { message = \"Il manque \"; if ((inputUsername.getText().length()) == 0) { message += \"votre nom d'utilisateur \"; } if ((inputEmail.getText().length()) == 0) { message += \"votre mail \"; } if ((inputPassword.getText().length()) == 0) { message += \"votre mot de passe\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5944/buggy-version/app.src.main.java.boulet.com.outerspacemanager.outerspacemanager.Activity.CreateAccountActivity.java", "BodyUseAPI": ["inputUsername.getText().length()", "inputPassword.getText().length()", "android.widget.EditText.getText()", "inputEmail.getText().length()", "android.widget.EditText.getText()", "android.widget.EditText.getText()"], "Fixed commit": "3b37db92a803037f16cf88f20f679e9f9be9f137", "Url": "https://api.github.com/repos/ahfelbrom/OuterSpaceManager", "Date": "2018-05-14T12:35:19Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((time) != null) { time.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5944/buggy-version/app.src.main.java.boulet.com.outerspacemanager.outerspacemanager.Fragments.BuildDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "3b37db92a803037f16cf88f20f679e9f9be9f137", "Url": "https://api.github.com/repos/ahfelbrom/OuterSpaceManager", "Date": "2018-05-14T12:35:19Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(systemName.matches(\"[A-Za-z0-9]+\"))) { throw new eu.arrowhead.common.exception.BadPayloadException(\"System name can only contain alphanumerical characters!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9277/buggy-version/certificate_authority.src.main.java.eu.arrowhead.core.certificate_authority.CAResource.java", "BodyUseAPI": [], "Fixed commit": "c7b57039518fcc3a207cb45c82736b647b15c53d", "Url": "https://api.github.com/repos/hegeduscs/arrowhead", "Date": "2018-08-03T07:39:38Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["employee.EmployeesManager.FindEmployee(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((main.Main.manager.getEmployees().get(id).getCard().size()) != 0) main.Main.manager.setPreviousCard(main.Main.manager.getEmployees().get(id).getCard().get(((main.Main.manager.getEmployees().get(id).getCard().size()) - 1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9013/buggy-version/sistema.src.main.Main.java", "BodyUseAPI": ["employee.EmployeesManager.setPreviousCard(main.Main.manager.getEmployees().get(id).getCard().get(((main.Main.manager.getEmployees().get(id).getCard().size()) - 1)))", "employee.EmployeesManager.getEmployees()", "employee.EmployeesManager.getEmployees()", "main.Main.manager.getEmployees().get(id).getCard()", "main.Main.manager.getEmployees().get(int)", "main.Main.manager.getEmployees().get(id).getCard().size()", "main.Main.manager.getEmployees().get(id).getCard()", "main.Main.manager.getEmployees().get(id).getCard().get(((main.Main.manager.getEmployees().get(id).getCard().size()) - 1))", "main.Main.manager.getEmployees().get(int)"], "Fixed commit": "fce2a2d01d9dab48b160d6d3919762769aa4d671", "Url": "https://api.github.com/repos/arqui456/sistema_folha_pagamento", "Date": "2018-02-17T02:39:50Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (login.servlet.VerifyReCaptcha.verify(reCaptcha)) { try { boolean isValidUser = login.servlet.DatabaseAccess.validateUser(username, password); if (isValidUser) { javax.servlet.http.HttpSession session = request.getSession(); session.setAttribute(\"username\", username); session.setMaxInactiveInterval((60 * 5)); request.getRequestDispatcher(\"jsp/dashboard.jsp\").forward(request, response); }else { java.lang.String loginError = \"Invalid Credentials. Please try again.\"; request.setAttribute(\"error\", loginError); request.getRequestDispatcher(\"jsp/login.jsp\").forward(request, response); } } catch (java.lang.Exception e) { e.printStackTrace(); } }else { request.getRequestDispatcher(\"jsp/login.jsp\").forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7804/buggy-version/src.login.servlet.Login.java", "BodyUseAPI": [], "Fixed commit": "046b4118355d9dc9f4210f64e55f65973750368b", "Url": "https://api.github.com/repos/Mosuswalks/COMP3095_Sarapion", "Date": "2018-10-25T01:16:04Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPreMarket()) { preScan(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7056/buggy-version/src.main.java.com.jeff.application.Scheduler.java", "BodyUseAPI": [], "Fixed commit": "0e5e168bb4b4cda48fd79637cabf4a777742cf02", "Url": "https://api.github.com/repos/lii2/pScanner", "Date": "2018-06-01T03:56:39Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRightHourAndDay()) { searchAndNotify(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7056/buggy-version/src.main.java.com.jeff.application.Scheduler.java", "BodyUseAPI": [], "Fixed commit": "0e5e168bb4b4cda48fd79637cabf4a777742cf02", "Url": "https://api.github.com/repos/lii2/pScanner", "Date": "2018-06-01T03:56:39Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logger.isDebugEnabled()) { logger.debug(format(\"Checking if %s template has certificates --> for template: %s\", templateIdOrName, response.getPrettyXml())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6132/buggy-version/src.main.java.com.marklogic.mgmt.resource.security.CertificateTemplateManager.java", "BodyUseAPI": ["com.marklogic.mgmt.resource.security.CertificateTemplateManager.debug(format(\"Checking if %s template has certificates --> for template: %s\", templateIdOrName, response.getPrettyXml()))"], "Fixed commit": "dff04e029490f35ef8461e4f5d6c939254c6bb60", "Url": "https://api.github.com/repos/stevenbrockman/ml-app-deployer", "Date": "2018-06-14T16:33:29Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (race.getPlayers().isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1144/buggy-version/src.main.java.io.github.davidg95.equestricraftplugin.race.RaceController.java", "BodyUseAPI": [], "Fixed commit": "9ef016f2a613c92d2c002361993ae8e001862919", "Url": "https://api.github.com/repos/davidg95/EquestriCraftPlugin", "Date": "2018-03-21T12:58:43Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(controller.countdown())) { response = \"2\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1144/buggy-version/src.main.java.io.github.davidg95.equestricraftplugin.http.HTTPHandler.java", "BodyUseAPI": [], "Fixed commit": "9ef016f2a613c92d2c002361993ae8e001862919", "Url": "https://api.github.com/repos/davidg95/EquestriCraftPlugin", "Date": "2018-03-21T12:58:43Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.startsWith(\" \\t\")) { line = line.replaceFirst(\" \\t\", \"\\t\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3403/buggy-version/modules.util.source-formatter.src.main.java.com.liferay.source.formatter.checks.JSONWhitespaceCheck.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "5af894355622a193df50cf3c4ab3f19f98119085", "Url": "https://api.github.com/repos/petershin/liferay-portal", "Date": "2018-05-04T19:37:27Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size == 0) || (size == 1)) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8057/buggy-version/src.men.brakh.RailFence.java", "BodyUseAPI": [], "Fixed commit": "f20afb6262b6f50cce6c4e83c781128350f4531c", "Url": "https://api.github.com/repos/N1ghtF1re/Simple-ciphers", "Date": "2018-09-08T12:30:33Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((measurement.getMacAddress()) != null) && ((measurement.getSsid()) != null)) { measurements.add(measurement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6576/buggy-version/src.main.java.com.alexandruclapa.MeasurementsParser.java", "BodyUseAPI": ["java.util.ArrayList<com.alexandruclapa.Measurement>.add(com.alexandruclapa.Measurement)"], "Fixed commit": "128273e476bacf10a64eb180f5ceb18de8ff5e1a", "Url": "https://api.github.com/repos/alexclp/WiFi-Scanner-Communicator", "Date": "2018-01-25T19:56:04Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (line == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6576/buggy-version/src.main.java.com.alexandruclapa.MeasurementsParser.java", "BodyUseAPI": [], "Fixed commit": "128273e476bacf10a64eb180f5ceb18de8ff5e1a", "Url": "https://api.github.com/repos/alexclp/WiFi-Scanner-Communicator", "Date": "2018-01-25T19:56:04Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) == null) { adapter = new com.cai.work.ui.main.fragment.MainHomeAdapter(mContext, imageLoader, data, getChildFragmentManager(), presenter); mViewBinding.mRecyclerView.setAdapter(adapter); }else { adapter.update(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5609/buggy-version/app.src.main.java.com.cai.work.ui.main.fragment.MainHomeFragment.java", "BodyUseAPI": [], "Fixed commit": "ca5ae77b549d45c6095b5095af687acb79f6475f", "Url": "https://api.github.com/repos/clarenceV1/CFrame", "Date": "2018-07-19T01:59:41Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, org.apache.kafka.clients.FetchSessionHandler>.get(fetchTarget.id())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (handler != null) { handler.handleError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6592/buggy-version/clients.src.main.java.org.apache.kafka.clients.consumer.internals.Fetcher.java", "BodyUseAPI": ["org.apache.kafka.clients.FetchSessionHandler.handleError(java.lang.RuntimeException)"], "Fixed commit": "b3a3a1e9a60c08f9a499147287a7565c860e198b", "Url": "https://api.github.com/repos/cmccabe/kafka", "Date": "2018-01-31T20:04:51Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.berkeley.riselab.rlqopt.relalg.SQL2RelAlg.basicCall2Expression(org.apache.calcite.sql.SqlNode,java.util.HashMap<edu.berkeley.riselab.rlqopt.Relation, edu.berkeley.riselab.rlqopt.relalg.TableAccessOperator>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (e == null) return src;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3568/buggy-version/src.main.java.edu.berkeley.riselab.rlqopt.relalg.SQL2RelAlg.java", "BodyUseAPI": [], "Fixed commit": "885f17c67a1f595f77b82ab562192576ff6ec3bc", "Url": "https://api.github.com/repos/sjyk/rlqopt", "Date": "2018-05-08T18:08:41Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.calcite.sql.SqlSelect.getWhere()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stmt == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3568/buggy-version/src.main.java.edu.berkeley.riselab.rlqopt.relalg.SQL2RelAlg.java", "BodyUseAPI": [], "Fixed commit": "885f17c67a1f595f77b82ab562192576ff6ec3bc", "Url": "https://api.github.com/repos/sjyk/rlqopt", "Date": "2018-05-08T18:08:41Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, PomFile>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(checkedMappings.contains(o.fullPath))) { checkedMappings.add(o.fullPath); dependency_srcs.addAll(o.getSrcClasses()); output_dirs.add((((o.getFullPath()) + \"/\") + (o.getOutputDir()))); allDependencies.addAll(o.getDependencyIds()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6789/buggy-version/scripts.docker.pom-modify.PomFile.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)", "PomFile.getSrcClasses()", "PomFile.getDependencyIds()", "java.util.Set<java.lang.String>.addAll(java.util.List<java.lang.String>)", "PomFile.getOutputDir()", "java.util.Set<java.lang.String>.add(java.lang.String)", "PomFile.getFullPath()"], "Fixed commit": "94c2fdab748e5a5cf5634e25b301459108157c24", "Url": "https://api.github.com/repos/ReedOei/dt-fixing-tools", "Date": "2018-10-07T19:14:11Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(actorWrapper.getUserAccount().getPassword().equals(\"\"))) { uA.setPassword(actorWrapper.getUserAccount().getPassword()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2437/buggy-version/src.main.java.com.conferencias.tfg.controller.Actors.java", "BodyUseAPI": ["com.conferencias.tfg.controller.ActorWrapper.getUserAccount()", "actorWrapper.getUserAccount().getPassword()", "com.conferencias.tfg.controller.UserAccount.setPassword(actorWrapper.getUserAccount().getPassword())"], "Fixed commit": "9e62b307424dc3551f67fff7c15212a81983a5a5", "Url": "https://api.github.com/repos/Congresy/BackendAPI", "Date": "2018-09-15T10:35:19Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fixB.getType().equals(UserDataTypes.BODY)) { fixB.receiveDamage(com.mygdx.hadal.schmucks.bodies.hitboxes.TrackingHitbox.baseDamage, this.hbox.getBody().getLinearVelocity().nor().scl(com.mygdx.hadal.schmucks.bodies.hitboxes.TrackingHitbox.knockback), creator.getBodyData(), true, DamageTypes.RANGED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5508/buggy-version/core.src.com.mygdx.hadal.schmucks.bodies.hitboxes.TrackingHitbox.java", "BodyUseAPI": ["com.mygdx.hadal.schmucks.userdata.HadalData.receiveDamage(float,this.hbox.getBody().getLinearVelocity().nor().scl(com.mygdx.hadal.schmucks.bodies.hitboxes.TrackingHitbox.knockback),creator.getBodyData(),boolean,DamageTypes.RANGED)"], "Fixed commit": "ad4d14768861b2a04ac3f8fc35d8edb93834147e", "Url": "https://api.github.com/repos/Donpommelo/HadalGame", "Date": "2018-03-06T02:45:38Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alive) { alive = false; state.destroy(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5508/buggy-version/core.src.com.mygdx.hadal.schmucks.bodies.HadalEntity.java", "BodyUseAPI": [], "Fixed commit": "ad4d14768861b2a04ac3f8fc35d8edb93834147e", "Url": "https://api.github.com/repos/Donpommelo/HadalGame", "Date": "2018-03-06T02:45:38Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCheckedChangeView) { menu.getItem(0).setIcon(getResources().getDrawable(R.drawable.btn_gallery_grid_mode)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8880/buggy-version/app.src.main.java.com.example.dungit.gallery.presentation.uis.fragments.PictureFragment.java", "BodyUseAPI": [], "Fixed commit": "68b6b326b7300bf724ed283b5e9fb920e8d20a18", "Url": "https://api.github.com/repos/DungPhan101097/Gallery_06", "Date": "2018-04-30T17:41:47Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i < 0) && (i >= (this.allTracesDeobfuscated.size()))) { return null; }else { return this.allTracesDeobfuscated.get(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4854/buggy-version/carpetmodSrc.carpet.carpetclient.CarpetClientChunkLogger.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "28cf544116a78da58c77648508089653c8cd6f56", "Url": "https://api.github.com/repos/Earthcomputer/carpetmod", "Date": "2018-10-12T23:52:31Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (property != null) { java.lang.Object value = property.getValue(); if ((value instanceof org.apache.dubbo.config.ProtocolConfig) && (id.equals(((org.apache.dubbo.config.ProtocolConfig) (value)).getName()))) { definition.getPropertyValues().addPropertyValue(\"protocolConfig\", new org.springframework.beans.factory.config.RuntimeBeanReference(id)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/2496/buggy-version/dubbo-config.dubbo-config-spring.src.main.java.org.apache.dubbo.config.spring.schema.DubboBeanDefinitionParser.java", "BodyUseAPI": ["org.springframework.beans.PropertyValue.getValue()"], "Fixed commit": "f77ec60547c0febbb280f33a7b9223a3188d5186", "Url": "https://api.github.com/repos/zonghaishang/dubbo", "Date": "2018-08-23T10:17:43Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (remove) { throw new java.lang.RuntimeException(\"No element found to delete\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6464/buggy-version/soot-infoflow.src.soot.jimple.infoflow.util.extensiblelist.ExtensibleList.java", "BodyUseAPI": [], "Fixed commit": "94721de4b9f16a7dbb1a19ae7faf30669fe2438a", "Url": "https://api.github.com/repos/secure-software-engineering/FlowDroid", "Date": "2018-01-22T16:15:18Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nodeRefJsonObj.get(\"front\").getAsString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (nodeDataMap.get(front).has(\"component\")) { component = nodeDataMap.get(front).get(\"component\").getAsString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9088/buggy-version/src.main.java.com.a.eye.skywalking.ui.service.TraceDagGraphBuildService.java", "BodyUseAPI": ["nodeDataMap.get(front).get(java.lang.String)", "java.util.Map<java.lang.String, com.google.gson.JsonObject>.get(java.lang.String)", "nodeDataMap.get(front).get(\"component\").getAsString()"], "Fixed commit": "507d6adaa6582f83faf4ba88c3edefbfddf4888d", "Url": "https://api.github.com/repos/Liu-XinYuan/incubator-skywalking", "Date": "2017-03-24T11:29:02Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nodeRefJsonObj.get(\"front\").getAsString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (nodeDataMap.get(front).has(\"component\")) { component = nodeDataMap.get(behind).get(\"component\").getAsString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9088/buggy-version/src.main.java.com.a.eye.skywalking.ui.service.TraceDagGraphBuildService.java", "BodyUseAPI": ["nodeDataMap.get(behind).get(java.lang.String)", "nodeDataMap.get(behind).get(\"component\").getAsString()", "java.util.Map<java.lang.String, com.google.gson.JsonObject>.get(java.lang.String)"], "Fixed commit": "507d6adaa6582f83faf4ba88c3edefbfddf4888d", "Url": "https://api.github.com/repos/Liu-XinYuan/incubator-skywalking", "Date": "2017-03-24T11:29:02Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lastRiseTimeValues.contains(null)) || (firstRiseTimeValues.contains(null))) { TCmin = 0; TCmax = 0; TCavg = 0; }else { TCmin = java.util.Collections.max(firstRiseTimeValues); TCmax = java.util.Collections.max(lastRiseTimeValues); TCavg = (java.util.Collections.max(lastRiseTimeValues)) / (lastRiseTimeValues.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4166/buggy-version/src.main.java.tatc.evaluation.reductionmetrics.ReductionMetrics.java", "BodyUseAPI": ["java.util.Collections.max(java.util.ArrayList<java.lang.Double>)", "java.util.Collections.max(java.util.ArrayList<java.lang.Double>)", "java.util.Collections.max(java.util.ArrayList<java.lang.Double>)", "java.util.ArrayList<java.lang.Double>.size()"], "Fixed commit": "a9f798de5c0a75792bd120427228326dcebaed71", "Url": "https://api.github.com/repos/seakers/tatc-ml", "Date": "2018-09-23T17:31:30Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<org.orekit.frames.TopocentricFrame, seakers.orekit.coverage.access.TimeIntervalArray>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (time.isEmpty()) { firstRiseTimeValues.add(null); lastRiseTimeValues.add(null); }else { firstRiseTimeValues.add(time.getRiseSetTimes().get(0).getTime()); lastRiseTimeValues.add(time.getRiseSetTimes().get(((time.getRiseSetTimes().size()) - 2)).getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4166/buggy-version/src.main.java.tatc.evaluation.reductionmetrics.ReductionMetrics.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Double>.add(time.getRiseSetTimes().get(0).getTime())", "time.getRiseSetTimes().get(int)", "time.getRiseSetTimes().size()", "time.getRiseSetTimes().get(((time.getRiseSetTimes().size()) - 2))", "time.getRiseSetTimes().get(0).getTime()", "time.getRiseSetTimes().get(((time.getRiseSetTimes().size()) - 2)).getTime()", "seakers.orekit.coverage.access.TimeIntervalArray.getRiseSetTimes()", "seakers.orekit.coverage.access.TimeIntervalArray.getRiseSetTimes()", "java.util.ArrayList<java.lang.Double>.add(time.getRiseSetTimes().get(((time.getRiseSetTimes().size()) - 2)).getTime())", "seakers.orekit.coverage.access.TimeIntervalArray.getRiseSetTimes()"], "Fixed commit": "a9f798de5c0a75792bd120427228326dcebaed71", "Url": "https://api.github.com/repos/seakers/tatc-ml", "Date": "2018-09-23T17:31:30Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stage.isFullScreen()) || (stage.isMaximized())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1153/buggy-version/src.main.java.kush.linesorter.gui.controllers.ResizeHelper.java", "BodyUseAPI": [], "Fixed commit": "23382b4b84b681dd447804208ff80c75380433fb", "Url": "https://api.github.com/repos/KUSH42/LineSorter", "Date": "2018-08-24T00:05:51Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (items == null) throw new com.silicolife.textmining.core.interfaces.core.dataaccess.exception.ANoteException(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6955/buggy-version/src.main.java.com.silicolife.textmining.processes.ir.patentpipeline.components.searchmodule.googlesearch.GoogleSearchPatentIDRecoverSource.java", "BodyUseAPI": [], "Fixed commit": "a5ba4503fa30f8d17f9dafbb71de3a7d0b885439", "Url": "https://api.github.com/repos/biotextmining/processes", "Date": "2018-03-29T17:41:19Z"},
{"Line": "=>588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.edotassi.amazmod.notification.NotificationService.extractText(android.widget.RemoteViews)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((txt.size()) > 1) notificationData.setText(txt.get(1)); else notificationData.setText(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6781/buggy-version/app.src.main.java.com.edotassi.amazmod.notification.NotificationService.java", "BodyUseAPI": ["amazmod.com.transport.data.NotificationData.setText(java.lang.String)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "0a168fbe4b6f6e047996b30b0c6d96ea58eddb09", "Url": "https://api.github.com/repos/edotassi/AmazMod", "Date": "2018-08-24T18:52:52Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.argumentType) != null) { this.method = javaClass.getDeclaredMethod(methodName, argumentType); }else { this.method = javaClass.getDeclaredMethod(methodName, new java.lang.Class[]{ }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3890/buggy-version/eucalyptus.src.main.java.eucalyptus.compiler.JavaMethod.java", "BodyUseAPI": [], "Fixed commit": "0793cefc45ce1f30141d7f0be8f0345ebf2668cf", "Url": "https://api.github.com/repos/tobham/Exam", "Date": "2018-04-30T11:50:25Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(wifi.isWifiEnabled())) { wifi.setWifiEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8085/buggy-version/Dissertation.EyeSpy.app.src.main.java.com.example.chris.eyespy.MainActivity.java", "BodyUseAPI": ["android.net.wifi.WifiManager.setWifiEnabled(boolean)"], "Fixed commit": "547d4a0ccc52c26d8bfef9d261dbc8822004f21a", "Url": "https://api.github.com/repos/Cmashforth/ComSci4thYear", "Date": "2018-01-30T17:46:45Z"},
{"Line": "=>1868", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (response != null) { if ((response.body()) != null) { body = response.body().string(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9070/buggy-version/library.src.main.java.com.beanstalkdata.android.core.BeanstalkService.java", "BodyUseAPI": ["retrofit2.Response<okhttp3.ResponseBody>.body()", "retrofit2.Response<okhttp3.ResponseBody>.body()", "response.body().string()"], "Fixed commit": "5acaba7974e8c021650e7ea1e7d111d1ff18593d", "Url": "https://api.github.com/repos/BeanstalkData/beanstalk-android-sdk", "Date": "2018-04-12T08:34:28Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((temp.length) != 2) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, LoginCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6545/buggy-version/src.main.java.seedu.address.logic.parser.LoginCommandParser.java", "BodyUseAPI": [], "Fixed commit": "20d617a8505d381e05b54b73e399c7a2311634e8", "Url": "https://api.github.com/repos/Ftywan/main", "Date": "2018-09-25T08:58:42Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.darmstadt.tu.crossing.cryptSL.Expression.getElementop()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((\"*\".equals(elOp)) || (\"?\".equals(elOp))) { addRegularEdge(curLevel, prevNode, null, true); }else { addRegularEdge(curLevel, prevNode, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/8186/buggy-version/plugins.de.cognicrypt.crysl.handler.src.de.cognicrypt.crysl.reader.StateMachineGraphBuilder.java", "BodyUseAPI": [], "Fixed commit": "468a93944d10ff4c2369bafbd37a3ca5e5585985", "Url": "https://api.github.com/repos/CROSSINGTUD/CogniCrypt", "Date": "2018-09-06T14:28:06Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isSubtotalTaxSet()) && ((baseAmount) != ((baseTaxAmount) + (baseSubtotalAmount)))) baseAmount = (baseTaxAmount) + (baseSubtotalAmount);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3133/buggy-version/bluesnap-android.src.main.java.com.bluesnap.androidapi.models.SdkRequest.java", "BodyUseAPI": [], "Fixed commit": "78df80372cac854cdb7a10a4a452119e2027694c", "Url": "https://api.github.com/repos/bluesnap/bluesnap-android-int", "Date": "2018-01-03T14:13:42Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.isCancelled()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7941/buggy-version/SlingShot.src.main.java.xyz.olivermartin.slingshot.SlingShot.java", "BodyUseAPI": [], "Fixed commit": "4c16058bd5a5c5d0514ec3de52cc0e959e30c264", "Url": "https://api.github.com/repos/BiscuitSoftware/slingshot", "Date": "2018-08-23T22:06:29Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.getKickReason().contains(\"[Proxy] Lost connection to server\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7941/buggy-version/SlingShot.src.main.java.xyz.olivermartin.slingshot.SlingShot.java", "BodyUseAPI": [], "Fixed commit": "4c16058bd5a5c5d0514ec3de52cc0e959e30c264", "Url": "https://api.github.com/repos/BiscuitSoftware/slingshot", "Date": "2018-08-23T22:06:29Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this) instanceof seedu.address.logic.commands.AddAppointmentCommand) || ((this) instanceof seedu.address.logic.commands.DeleteAppointmentCommand)) { raise(new seedu.address.commons.events.logic.UpdateAppointmentsEvent(model.getFilteredAppointmentList())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5879/buggy-version/src.main.java.seedu.address.logic.commands.UndoableCommand.java", "BodyUseAPI": [], "Fixed commit": "9eaa65557738b222ad6cc5221fddb2ac53908293", "Url": "https://api.github.com/repos/ng95junwei/main", "Date": "2018-04-13T15:23:26Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ineedwhite.diancan.dao.dao.OrderDao.updateOrdStsAndCpIdOrdPaidByOrdId(OrderStatus.UM.getOrderStatus(),java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (affectRows <= 0) { logger.warn((\"\u66f4\u65b0\u8ba2\u5355\u51fa\u9519:orderId:\" + orderId)); com.ineedwhite.diancan.common.utils.BizUtils.setRspMap(resp, ErrorCodeEnum.DC00003); return resp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3922/buggy-version/diancan-biz.src.main.java.com.ineedwhite.diancan.biz.impl.OrderServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "3b9ba717fdb1ef45e93f3b7f693e41c72bc7520f", "Url": "https://api.github.com/repos/Ruan-Xin/diancan", "Date": "2018-03-21T11:18:08Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(httpStatusSuccessful(response))) && (!(hasErrorController()))) { clearTraceAttribute(request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5137/buggy-version/spring-cloud-sleuth-core.src.main.java.org.springframework.cloud.sleuth.instrument.web.TraceFilter.java", "BodyUseAPI": [], "Fixed commit": "64b5cb6072facec6c8ccd71d4bdff9b2c4bee3ae", "Url": "https://api.github.com/repos/TYsewyn/spring-cloud-sleuth", "Date": "2018-02-15T15:53:18Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(httpStatusSuccessful(response))) && (!(hasErrorController()))) { tracer().close(span); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5137/buggy-version/spring-cloud-sleuth-core.src.main.java.org.springframework.cloud.sleuth.instrument.web.TraceFilter.java", "BodyUseAPI": [], "Fixed commit": "64b5cb6072facec6c8ccd71d4bdff9b2c4bee3ae", "Url": "https://api.github.com/repos/TYsewyn/spring-cloud-sleuth", "Date": "2018-02-15T15:53:18Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.exists())) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/870/buggy-version/src.main.java.Utils.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "30e6a6a2efae306a88b9928671564d021b27cb59", "Url": "https://api.github.com/repos/morningKing/walkbug", "Date": "2018-06-14T01:47:53Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Utils.FileUtil.readToString(((Utils.Config.getParam(\"snap_path\")) + (Status.PoolSnapShot.FILE_NAME)),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(\"\".equals(data))) queue.setWbTaskQueue(((java.util.concurrent.ArrayBlockingQueue<java.lang.String>) (Utils.JsonUtil.Json2Object(data, queue.getWbTaskQueue().getClass()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/870/buggy-version/src.main.java.Status.PoolSnapShot.java", "BodyUseAPI": ["Utils.JsonUtil.Json2Object(java.lang.String,queue.getWbTaskQueue().getClass())", "Storage.WbTaskQueue<java.lang.String>.setWbTaskQueue(((java.util.concurrent.ArrayBlockingQueue<java.lang.String>) (Utils.JsonUtil.Json2Object(data, queue.getWbTaskQueue().getClass()))))"], "Fixed commit": "30e6a6a2efae306a88b9928671564d021b27cb59", "Url": "https://api.github.com/repos/morningKing/walkbug", "Date": "2018-06-14T01:47:53Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resourceGroup.getControllerClass().isAnnotationPresent(org.springframework.web.bind.annotation.RequestMapping.class)) { org.springframework.web.bind.annotation.RequestMapping requestMappingAnnotation = ((org.springframework.web.bind.annotation.RequestMapping) (resourceGroup.getControllerClass().getAnnotation(org.springframework.web.bind.annotation.RequestMapping.class))); java.lang.String[] paths = requestMappingAnnotation.path(); if ((paths.length) == 1) { resourcePath = paths[0]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1435/buggy-version/springfox-spring-web.src.main.java.springfox.documentation.spring.web.scanners.ApiListingScanner.java", "BodyUseAPI": ["springfox.documentation.service.ResourceGroup.getControllerClass()", "resourceGroup.getControllerClass().getAnnotation(java.lang.Class)"], "Fixed commit": "f276e1e3b552f2a46541c0d0845c0549b8d040c2", "Url": "https://api.github.com/repos/springfox/springfox", "Date": "2017-07-26T13:44:58Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang.StringUtils.trim(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.contains(url, \"#\")) { linkId = org.apache.commons.lang.StringUtils.substringBefore(linkId, \"#\"); anchor = org.apache.commons.lang.StringUtils.substringAfter(url, \"#\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1013/buggy-version/src.main.java.org.b3log.symphony.service.ShortLinkQueryService.java", "BodyUseAPI": ["org.apache.commons.lang.StringUtils.substringAfter(java.lang.String,java.lang.String)"], "Fixed commit": "d9d35e38fc4a04588d93f5cc0244875aa3ee43f5", "Url": "https://api.github.com/repos/b3log/symphony", "Date": "2018-07-26T02:53:33Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(anchor)) { link += \"#\" + anchor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1013/buggy-version/src.main.java.org.b3log.symphony.service.ShortLinkQueryService.java", "BodyUseAPI": [], "Fixed commit": "d9d35e38fc4a04588d93f5cc0244875aa3ee43f5", "Url": "https://api.github.com/repos/b3log/symphony", "Date": "2018-07-26T02:53:33Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((previousActivityBitmap) != null) { previousActivityBitmap.recycle(); previousActivityBitmap = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1588/buggy-version/app.src.main.java.com.joe.holi.ui.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "6586aa2175a3c0b2ab7e4ecd0b6075d5e9102ccf", "Url": "https://api.github.com/repos/joj1989/Holiday", "Date": "2018-03-16T14:42:17Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.joe.holi.ui.BaseActivity.mainLayouts.size()) < 2) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/1588/buggy-version/app.src.main.java.com.joe.holi.ui.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "6586aa2175a3c0b2ab7e4ecd0b6075d5e9102ccf", "Url": "https://api.github.com/repos/joj1989/Holiday", "Date": "2018-03-16T14:42:17Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (quote.getExDividendDateString().equals(\"n/a\")) { java.lang.System.out.println(((\"skipping \" + symbol) + \", no ex-dividend date\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7514/buggy-version/src.com.discernative.etradetools.ITMScreener.java", "BodyUseAPI": [], "Fixed commit": "690e553af8ca512ef5f9ff8696c49e0a997de8d0", "Url": "https://api.github.com/repos/philfoster/option_screener", "Date": "2018-05-29T14:34:40Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((PartyId) != null) { com.crashlytics.android.Crashlytics.log(PartyId); PartyId = dataSnapshot.child(finalP).child(\"PartyId\").getValue().toString(); android.util.Log.d(\"PartyId\", PartyId); }else { es.dmoral.toasty.Toasty.error(this, \"Invalid party code. Registered correctly?\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9593/buggy-version/app.src.main.java.in.shaaan.ga_onlineorders.BuildOrder.java", "BodyUseAPI": [], "Fixed commit": "538efe0263090ce43974e0cfb4ae43e4ca7cd569", "Url": "https://api.github.com/repos/Shaaan/GA", "Date": "2018-02-26T07:58:43Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIntent().getExtras()) != null) { if (getIntent().getExtras().getString(\"catid\").equalsIgnoreCase(\"1\")) { tv_txt.setText(\"Does the Mobile Switch on ?\"); }else if (getIntent().getExtras().getString(\"catid\").equalsIgnoreCase(\"2\")) { tv_txt.setText(\"Does the Tablet Switch on ?\"); } }else { tv_txt.setText(\"Does the Mobile Switch on ?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7768/buggy-version/app.src.main.java.cashify.u.cashify.Activity_Switch_On.java", "BodyUseAPI": [], "Fixed commit": "436a97bb3017b29b2cd86c3a7901f848526410e9", "Url": "https://api.github.com/repos/mrkhanakia/mobilegoo_android", "Date": "2018-04-07T16:55:14Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIntent().getExtras()) != null) { if (getIntent().getExtras().getString(\"catid\").equalsIgnoreCase(\"1\")) { tv_txt.setText(\"Phone's Overall Condition\"); }else { tv_txt.setText(\"Tablet's Overall Condition\"); } }else { tv_txt.setText(\"Tablet's Overall Condition\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7768/buggy-version/app.src.main.java.cashify.u.cashify.Phone_Overall_Condition_Activity.java", "BodyUseAPI": [], "Fixed commit": "436a97bb3017b29b2cd86c3a7901f848526410e9", "Url": "https://api.github.com/repos/mrkhanakia/mobilegoo_android", "Date": "2018-04-07T16:55:14Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIntent().getExtras()) != null) { in.putExtra(\"catid\", getIntent().getExtras().getString(\"catid\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7768/buggy-version/app.src.main.java.cashify.u.cashify.Accessories_Activity.java", "BodyUseAPI": [], "Fixed commit": "436a97bb3017b29b2cd86c3a7901f848526410e9", "Url": "https://api.github.com/repos/mrkhanakia/mobilegoo_android", "Date": "2018-04-07T16:55:14Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((targetDate.getMonthValue()) == (java.time.LocalDate.now().getMonthValue())) { targetDate = java.time.LocalDate.now(); calendarForm.setIsToday(1); }else { calendarForm.setIsToday(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3199/buggy-version/src.main.java.org.tmhi.controller.CalendarController.java", "BodyUseAPI": [], "Fixed commit": "e6b7c87133910a023a1a580c00d3a3d51f63f82d", "Url": "https://api.github.com/repos/MasterHiei/CalendarManagement", "Date": "2018-04-21T15:55:52Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((globalNet.charAt(0)) == '{') && ((globalNet.charAt(((globalNet.length()) - 1))) == '}')) { globalNet = globalNet.substring(1, ((globalNet.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7856/buggy-version/src.route.circuit.Circuit.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "fabff84d5b3ea07fe1f0ce3527bfe74c3b30497a", "Url": "https://api.github.com/repos/EliasVansteenkiste/FPGA-CAD-Framework", "Date": "2018-09-19T12:51:00Z"},
{"Line": "=>663", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hebiace.service.impl.UploadServiceImpl.getPeopleIdListAdvance(int,int,java.util.List<com.hebiace.bo.QueryBo>,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((peopleIdList == null) || ((peopleIdList.size()) == 0)) { return com.hebiace.common.Response.createBySuccess(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7117/buggy-version/src.main.java.com.hebiace.service.impl.UploadServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "1b2e37a57ca2097fcca23e3f274161b66147b6b1", "Url": "https://api.github.com/repos/jaaaar/people", "Date": "2018-09-06T09:46:49Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mapData.getLevel()) == (GameManager.levelMax)) GameManager.winGame = true; else { mapData = Utils.MapGenerator.getMap(size, mapData.getLevel(), this); resetPlayerPosition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/306/buggy-version/src.main.java.Utils.Terrain.java", "BodyUseAPI": ["Utils.MapData.getLevel()", "Utils.MapGenerator.getMap(int,mapData.getLevel(),Utils.Terrain)"], "Fixed commit": "e9e0a438ea2c7df87b0a8087ea8418f119ca75ff", "Url": "https://api.github.com/repos/Fabpk90/JRogueLikeSciFi", "Date": "2018-05-08T17:52:39Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((other.getClass()) != (this.getClass())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/7744/buggy-version/src.com.peierlong.coursera.algorithms.week4.homework.Board.java", "BodyUseAPI": [], "Fixed commit": "8df520bd92d914607ac9d8d9fa4f957110a95809", "Url": "https://api.github.com/repos/peierlong/AlgorithmDesign", "Date": "2018-01-22T11:03:17Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bolyartech.forge.server.route.RequestContext.getFromPost(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (scramDbh.usernameExists(dbc, newUsername)) { return new com.bolyartech.forge.server.response.forge.ForgeResponse(UserResponseCodes.Errors.USERNAME_EXISTS, \"username exists\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4536/buggy-version/src.main.java.com.bolyartech.forge.server.module.user_scram.endpoints.RegistrationPostAutoEp.java", "BodyUseAPI": [], "Fixed commit": "a8cfe23b10218810fbfe42ec0f042cbd5d9ab0e7", "Url": "https://api.github.com/repos/ogrebgr/forge-server-mod-user-scram", "Date": "2018-10-07T06:00:22Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((em) == null) { java.lang.System.out.println(\":(\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/346/buggy-version/src.main.java.ch.yanicksenn.heroku.Application.java", "BodyUseAPI": [], "Fixed commit": "e56367c77802968c5abedb2a8bd0f3c3f15b952c", "Url": "https://api.github.com/repos/yanicksenn/heroku-blog", "Date": "2018-04-06T08:02:38Z"},
{"Line": "=>3896", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (umich.msfragger.util.StringUtils.isNullOrWhitespace(text)) { javax.swing.JOptionPane.showMessageDialog(this, \"Empty path\", \"Not exists\", javax.swing.JOptionPane.INFORMATION_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9162/buggy-version/MSFragger-GUI.src.umich.msfragger.gui.MsfraggerGuiFrame.java", "BodyUseAPI": [], "Fixed commit": "b6ee6b033935931ca0dc9e8f471027b6e83f0739", "Url": "https://api.github.com/repos/guoci/FragPipe", "Date": "2018-09-19T23:34:29Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((leftSurfaceTrace.getLength()) != height) { throw new java.lang.IllegalStateException(\"Incorrect Left Surface Trace Length found!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3825/buggy-version/src.Piece.Piece.java", "BodyUseAPI": [], "Fixed commit": "719d386c1af7e4fd713e40738a4490ca5cf79105", "Url": "https://api.github.com/repos/vamontchik/Tetris", "Date": "2018-08-19T20:31:24Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((rightSurfaceTrace.getLength()) != height) { throw new java.lang.IllegalStateException(\"Incorrect Right Surface Trace Length found!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3825/buggy-version/src.Piece.Piece.java", "BodyUseAPI": [], "Fixed commit": "719d386c1af7e4fd713e40738a4490ca5cf79105", "Url": "https://api.github.com/repos/vamontchik/Tetris", "Date": "2018-08-19T20:31:24Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zxj.cloud_service_proxy_core.util.invoke.LocalServiceProxyUtil.invoke(java.lang.Object[],java.lang.String,java.lang.String,java.lang.Class[],org.springframework.context.ApplicationContext)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (serviceResult == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6352/buggy-version/demo_service.src.main.java.com.example.demo.controller.ServiceInvokeCoreController.java", "BodyUseAPI": [], "Fixed commit": "49a98109f6c52915edfd052a6f57a3e6b97ed227", "Url": "https://api.github.com/repos/zhuxiujia/SpringCloudServiceProxy", "Date": "2018-01-08T05:58:37Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zxj.cloud_service_proxy_core.util.invoke.ResponseEntity<? extends byte[]>.getBody()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bytesResult == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6352/buggy-version/cloud_service_proxy_core.src.main.java.com.zxj.cloud_service_proxy_core.util.invoke.RemoteServiceProxyFactory.java", "BodyUseAPI": [], "Fixed commit": "49a98109f6c52915edfd052a6f57a3e6b97ed227", "Url": "https://api.github.com/repos/zhuxiujia/SpringCloudServiceProxy", "Date": "2018-01-08T05:58:37Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInsideMethod)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/6607/buggy-version/MetricsReloaded.stockmetrics.src.main.java.com.sixrr.stockmetrics.methodCalculators.AbstractNumCalledMethodsCalculator.java", "BodyUseAPI": [], "Fixed commit": "39095920d187f6016af134b015868ae30c7b39ee", "Url": "https://api.github.com/repos/ml-in-programming/ArchitectureReloaded", "Date": "2018-08-13T14:15:51Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((AppManager.shared.getSearchResult()) != null) { return AppManager.shared.getSearchResult().length; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/386/buggy-version/app.src.main.java.ordabool.themoviedb.Adapters.SearchedMediaAdapter.java", "BodyUseAPI": [], "Fixed commit": "8bc7109d889c994f9cb89425d0379de1e0e39655", "Url": "https://api.github.com/repos/ordabool/AndroidTheMovieDB", "Date": "2018-02-11T17:17:18Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.binding.getCreationTime()) == 0) this.binding.setCreationTime(java.lang.System.currentTimeMillis());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/4968/buggy-version/src.main.java.de.cf.autoscaler.applications.ScalableApp.java", "BodyUseAPI": [], "Fixed commit": "51c00c76897735afe3d405e3296084f7f00d6a0d", "Url": "https://api.github.com/repos/evoila/osb-autoscaler-core", "Date": "2018-02-08T09:40:18Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tmp.contains(\"%\")) { java.lang.System.out.println(tmp); json.put(tmp, parser.Parser.round(((cell.getNumericCellValue()) * 100), 2)); }else { json.put(tmp, cell.getNumericCellValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3831/buggy-version/src.main.java.parser.Parser.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,double)", "java.io.PrintStream.println(java.lang.String)", "org.json.JSONObject.put(java.lang.String,cell.getNumericCellValue())"], "Fixed commit": "d9795e5fce046da01859236f559911d40ffb963b", "Url": "https://api.github.com/repos/karager09/Web_Excel_filter_for_schedule", "Date": "2018-05-06T17:46:19Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isCancelled())) { processServerMessage(get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5254/buggy-version/modules.desktop.src.com.haulmont.cuba.desktop.gui.SessionMessagesNotifier.java", "BodyUseAPI": [], "Fixed commit": "2ecf52352d4dc03d5f922066b3dcd9493f3135e0", "Url": "https://api.github.com/repos/cuba-platform/cuba", "Date": "2018-01-26T12:36:27Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((interceptor.getExtend()) != (com.industry.printer.interceptor.ExtendInterceptor.ExtendStat.NONE)) { heads = interceptor.getExtend().activeNozzleCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/5435/buggy-version/src.com.industry.printer.data.DataTask.java", "BodyUseAPI": ["com.industry.printer.interceptor.ExtendInterceptor.getExtend()", "interceptor.getExtend().activeNozzleCount()"], "Fixed commit": "fd5593e61b4b86c1815b5053994c8ebf85364430", "Url": "https://api.github.com/repos/kevin-zhaotk/Printer", "Date": "2018-09-12T08:59:52Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.bluetooth.BluetoothAdapter.getDefaultAdapter().isDiscovering()) { android.util.Log.e(il.ac.tau.cs.mansur.kollmann.clusterchat.myBroadcastReceiver.TAG, \"Trying to fetch UUIDs while discovery is running\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9775/buggy-version/app.src.main.java.il.ac.tau.cs.mansur.kollmann.clusterchat.myBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "b2aec5183dbd0ff1c07b15078a8a043bfe1d0cc6", "Url": "https://api.github.com/repos/alonkol/ClusterChat", "Date": "2018-04-27T15:29:27Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cx.myhome.ckoshien.slack.rest.RestClient.sendRequest(java.lang.String,java.lang.String,<nulltype>,java.lang.Class,java.util.HashMap<java.lang.String, java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((json.getMessages().size()) > 0) { return new java.util.Date(((long) (1000 * (json.getMessages().get(0).getTs())))); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3902/buggy-version/slack.src.main.java.cx.myhome.ckoshien.slack.task.GetChannelTask.java", "BodyUseAPI": ["json.getMessages().get(0).getTs()", "cx.myhome.ckoshien.slack.rest.dto.MessagesDto.getMessages()", "json.getMessages().get(int)"], "Fixed commit": "4dded1ed738548e3536502b8b27f5200d444dbf6", "Url": "https://api.github.com/repos/ckoshien/Slack-Stream", "Date": "2018-04-30T03:00:47Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cx.myhome.ckoshien.slack.task.GetChannelTask.addMessages(cx.myhome.ckoshien.slack.entity.Channel)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (lastPostDate != null) { oldChannel.setLastCheckDate(lastPostDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/3902/buggy-version/slack.src.main.java.cx.myhome.ckoshien.slack.task.GetChannelTask.java", "BodyUseAPI": ["cx.myhome.ckoshien.slack.entity.Channel.setLastCheckDate(java.util.Date)"], "Fixed commit": "4dded1ed738548e3536502b8b27f5200d444dbf6", "Url": "https://api.github.com/repos/ckoshien/Slack-Stream", "Date": "2018-04-30T03:00:47Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.regex.Pattern.matches(\"^(?:(?:31(\\\\/|-|\\\\.)(?:0?[13578]|1[02]))\\\\1|(?:(?:29|30)(\\\\/|-|\\\\.)(?:0?[1,3-9]|1[0-2])\\\\2))(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$|^(?:29(\\\\/|-|\\\\.)0?2\\\\3(?:(?:(?:1[6-9]|[2-9]\\\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\\\d|2[0-8])(\\\\/|-|\\\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\\\4(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$\", date)) { if (date.contains(\"-\")) { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(\"dd-MM-yyyy\", java.util.Locale.ENGLISH); return sdf.parse(date); }else { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(\"dd.MM.yyyy\", java.util.Locale.ENGLISH); return sdf.parse(date); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V146/9000/buggy-version/src.main.java.de.domjos.schooltools.helper.Converter.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.text.SimpleDateFormat.parse(java.lang.String)", "java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "6dc98586cf93a7a94796dcc07d36bd9c960a804f", "Url": "https://api.github.com/repos/domjos1994/SchoolTools", "Date": "2018-08-20T17:26:42Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (familyName != null) { predicates.add(cb.or(cb.like(cb.upper(root.<java.lang.String>get(py.org.fundacionparaguaya.pspserver.surveys.entities.SnapshotDraftEntity_.getPersonFirstName())), ((\"%\" + (familyName.trim().toUpperCase())) + \"%\")), cb.like(cb.upper(root.<java.lang.String>get(py.org.fundacionparaguaya.pspserver.surveys.entities.SnapshotDraftEntity_.getPersonLastName())), ((\"%\" + (familyName.trim().toUpperCase())) + \"%\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4012/buggy-version/src.main.java.py.org.fundacionparaguaya.pspserver.surveys.specifications.SnapshotDraftSpecification.java", "BodyUseAPI": ["java.util.List<javax.persistence.criteria.Predicate>.add(cb.or(cb.like(cb.upper(root.<java.lang.String>get(py.org.fundacionparaguaya.pspserver.surveys.entities.SnapshotDraftEntity_.getPersonFirstName())), ((\"%\" + (familyName.trim().toUpperCase())) + \"%\")), cb.like(cb.upper(root.<java.lang.String>get(py.org.fundacionparaguaya.pspserver.surveys.entities.SnapshotDraftEntity_.getPersonLastName())), ((\"%\" + (familyName.trim().toUpperCase())) + \"%\"))))", "javax.persistence.criteria.CriteriaBuilder.like(cb.upper(root.<java.lang.String>get(py.org.fundacionparaguaya.pspserver.surveys.entities.SnapshotDraftEntity_.getPersonLastName())),java.lang.String)", "java.lang.String.toUpperCase()", "java.lang.String.trim()", "java.lang.String.toUpperCase()", "javax.persistence.criteria.CriteriaBuilder.or(cb.like(cb.upper(root.<java.lang.String>get(py.org.fundacionparaguaya.pspserver.surveys.entities.SnapshotDraftEntity_.getPersonFirstName())), ((\"%\" + (familyName.trim().toUpperCase())) + \"%\")),cb.like(cb.upper(root.<java.lang.String>get(py.org.fundacionparaguaya.pspserver.surveys.entities.SnapshotDraftEntity_.getPersonLastName())), ((\"%\" + (familyName.trim().toUpperCase())) + \"%\")))", "java.lang.String.trim()", "javax.persistence.criteria.CriteriaBuilder.like(cb.upper(root.<java.lang.String>get(py.org.fundacionparaguaya.pspserver.surveys.entities.SnapshotDraftEntity_.getPersonFirstName())),java.lang.String)"], "Fixed commit": "9963c56edd4d50a401b9fb91b9322c6a46428512", "Url": "https://api.github.com/repos/mcespedeso/FP-PSP-SERVER", "Date": "2018-02-06T11:34:17Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9111/buggy-version/dataquality-sampling.src.main.java.org.talend.dataquality.datamasking.functions.AbstractGenerateUniqueSsn.java", "BodyUseAPI": [], "Fixed commit": "4cde853d509bac3199d977ba7644efa77b639d06", "Url": "https://api.github.com/repos/Talend/data-quality", "Date": "2018-10-25T16:16:48Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ctx.inventory.select().count()) == 0) && ((INVENTORY_COUNT) > 0)) { INVENTORY_COUNT = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3320/buggy-version/cowhide.HideCollector.java", "BodyUseAPI": [], "Fixed commit": "b5a23495729b8b61d83b7ed1138a36f016af3b62", "Url": "https://api.github.com/repos/DrRoach/OSRS-Bot-HideCollector", "Date": "2018-04-18T02:01:32Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInitialized()) { org.jppf.comm.recovery.HeartbeatConnection.log.error(e.getMessage(), e); fireClientConnectionEvent(); }else org.jppf.comm.recovery.HeartbeatConnection.log.info(\"heartbeat server handshake failed, possibly because heartbeat is disabled in the server, exception:\\n{}\", org.jppf.comm.recovery.ExceptionUtils.getStackTrace(e));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6737/buggy-version/common.src.java.org.jppf.comm.recovery.HeartbeatConnection.java", "BodyUseAPI": [], "Fixed commit": "009bcf461c6089c6583dfa746d66f652a2485155", "Url": "https://api.github.com/repos/jppf-grid/JPPF", "Date": "2018-07-09T05:20:22Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsHistList) { temp = name.gudong.translate.mvp.model.entity.translate.HistoryResult.toResult(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8167/buggy-version/app.src.main.java.name.gudong.translate.ui.activitys.WordsBookActivity.java", "BodyUseAPI": [], "Fixed commit": "992e28c4f4528788997237886016277cd46d76ee", "Url": "https://api.github.com/repos/maoruibin/TranslateApp", "Date": "2018-02-03T12:25:37Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((startingChange % 100) >= 10) { java.lang.System.out.print(((\".\" + ((startingChange % 100) + 1)) + \".\")); }else { java.lang.System.out.print(((\".0\" + ((startingChange % 100) + 1)) + \".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/74/buggy-version/src.com.skilldistillery.projects.makechange.MakeChangeApp.java", "BodyUseAPI": ["java.io.PrintStream.print(java.lang.String)", "java.io.PrintStream.print(java.lang.String)"], "Fixed commit": "a24a34bebd7e54f44ae797d759195ee4c239efd8", "Url": "https://api.github.com/repos/ntrainor1/MakeChange", "Date": "2018-03-03T04:48:41Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/318/buggy-version/app.src.main.java.com.paulvarry.intra42.activities.LocationHistoryActivity.java", "BodyUseAPI": [], "Fixed commit": "d72eb9be09d684a068a66050478aadddc89c414b", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2018-01-03T12:54:55Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.bdrc.lucene.sa.CmdParser.findSandhiedFinals(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sandhiedFinal.length()) == 1) { sandhied.put((sandhiedFinal + initial), initial); }else { sandhied.put((sandhiedFinal + initial), sandhiedFinal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1571/buggy-version/src.main.java.io.bdrc.lucene.sa.CmdParser.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "75158b82b68ea8050c88a131c6641f9c579f7897", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/lucene-sa", "Date": "2018-06-11T10:09:47Z"},
{"Line": "=>979", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((initials) == null) { initials = new java.util.HashSet<java.lang.String>(); storedInitials = new java.util.HashSet<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1571/buggy-version/src.main.java.io.bdrc.lucene.sa.SkrtWordTokenizer.java", "BodyUseAPI": [], "Fixed commit": "75158b82b68ea8050c88a131c6641f9c579f7897", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/lucene-sa", "Date": "2018-06-11T10:09:47Z"},
{"Line": "=>643", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(foundMatch)) && (!(foundNonMaxMatch))) { tokenBuffer.setLength(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1571/buggy-version/src.main.java.io.bdrc.lucene.sa.SkrtWordTokenizer.java", "BodyUseAPI": [], "Fixed commit": "75158b82b68ea8050c88a131c6641f9c579f7897", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/lucene-sa", "Date": "2018-06-11T10:09:47Z"},
{"Line": "=>2023", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (address.contains(\"@\")) { java.lang.String[] parts = address.split(\"@\"); if ((parts.length) == 2) { java.lang.String aliasName = parts[0]; java.lang.String domainName = parts[1]; java.util.Collection<org.openzal.zal.Domain> domainAliases = domainCache.get(domainName); if (domainAliases == null) { org.openzal.zal.Domain domain = getDomainByName(domainName); if (domain != null) { domainAliases = getDomainAliases(domain); domainCache.put(domainName, domainAliases); }else { domainAliases = java.util.Collections.emptyList(); } } for (org.openzal.zal.Domain domainAlias : domainAliases) { java.lang.String alias = (aliasName + '@') + (domainAlias.getName()); addresses.add(alias); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/35/buggy-version/src.java.org.openzal.zal.ProvisioningImp.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "aecf140cd309f812f72dbaf9e3eede2ac9701624", "Url": "https://api.github.com/repos/ZeXtras/OpenZAL", "Date": "2018-07-20T13:13:34Z"},
{"Line": "=>2032", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Collection<org.openzal.zal.Domain>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (domainAliases == null) { org.openzal.zal.Domain domain = getDomainByName(domainName); if (domain != null) { domainAliases = getDomainAliases(domain); domainCache.put(domainName, domainAliases); }else { domainAliases = java.util.Collections.emptyList(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/35/buggy-version/src.java.org.openzal.zal.ProvisioningImp.java", "BodyUseAPI": [], "Fixed commit": "aecf140cd309f812f72dbaf9e3eede2ac9701624", "Url": "https://api.github.com/repos/ZeXtras/OpenZAL", "Date": "2018-07-20T13:13:34Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.selectedBody.getReachable()) && (!(this.selectedBody.getUnlocalizedName().toLowerCase().contains(\"overworld\")))) && (!((this.selectedBody) instanceof micdoodle8.mods.galacticraft.api.galaxies.Satellite))) windLevel = (((micdoodle8.mods.galacticraft.api.prefab.world.gen.WorldProviderSpace) (temp)).getWindLevel()) * 10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6633/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": [], "Fixed commit": "dbfb9a875eec6812c9f16282bfe1e28686199b56", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-02-01T18:14:47Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(entity.tool.util.StringUtils.isEmpty(java.lang.System.getProperty(\"poolMaximumActiveConnections\")))) { result.setPoolMaximumActiveConnections(java.lang.Integer.parseInt(java.lang.System.getProperty(\"poolMaximumActiveConnections\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/852/buggy-version/entity.queryable.src.entity.query.core.Config.java", "BodyUseAPI": [], "Fixed commit": "aba55be8fd6d78684e5569615e30961b6df5ed9d", "Url": "https://api.github.com/repos/linlurui/entityQueryable", "Date": "2018-10-15T20:46:28Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(entity.tool.util.StringUtils.isEmpty(java.lang.System.getProperty(\"poolMaximumIdleConnections\")))) { result.setPoolMaximumIdleConnections(java.lang.Integer.parseInt(java.lang.System.getProperty(\"poolMaximumIdleConnections\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/852/buggy-version/entity.queryable.src.entity.query.core.Config.java", "BodyUseAPI": [], "Fixed commit": "aba55be8fd6d78684e5569615e30961b6df5ed9d", "Url": "https://api.github.com/repos/linlurui/entityQueryable", "Date": "2018-10-15T20:46:28Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"jar\".equals(configUrl.getProtocol())) { existHome = java.nio.file.Paths.get(new java.net.URI(configUrl.getPath())).getParent().getParent(); org.exist.util.ConfigurationHelper.LOG.warn((config + \" file was found on the classpath, but inside a Jar file! Derived EXIST_HOME from Jar's parent folder: {}\"), existHome); }else { existHome = java.nio.file.Paths.get(configUrl.toURI()).getParent(); org.exist.util.ConfigurationHelper.LOG.debug(\"Got EXIST_HOME from classpath: {}\", existHome.toAbsolutePath().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7723/buggy-version/src.org.exist.util.ConfigurationHelper.java", "BodyUseAPI": ["java.nio.file.Path.getParent()", "java.nio.file.Paths.get(java.net.URI)", "java.net.URL.toURI()", "java.nio.file.Path.getParent()", "java.nio.file.Path.getParent()", "java.net.URL.getPath()", "java.nio.file.Paths.get(java.net.URI)"], "Fixed commit": "10b8c0badf3031128aef10f24428f1de76969292", "Url": "https://api.github.com/repos/joewiz/exist", "Date": "2018-07-13T11:42:02Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((escoles) != null) && ((tots) != null)) && ((altres) != null)) { createTabs(); createSpinner(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2942/buggy-version/app.src.main.java.com.practica2.projectes2.lasalle.lasalleappcatalunya.activities.PantallaDeCentres.java", "BodyUseAPI": [], "Fixed commit": "3d9b43ff09d6d2b6fbce32a1edb4a4729c553d8b", "Url": "https://api.github.com/repos/oscarfava22/LaSalleAppCatalunya", "Date": "2018-05-26T23:28:36Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.europeana.metis.core.dao.DatasetDao.getDatasetByDatasetId(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (storedDataset == null) throw new eu.europeana.metis.core.exceptions.NoDatasetFoundException(java.lang.String.format(\"No dataset found with datasetId: '%s' in METIS\", datasetId));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9240/buggy-version/metis-core.metis-core-service.src.main.java.eu.europeana.metis.core.service.DatasetService.java", "BodyUseAPI": [], "Fixed commit": "494aad6d7347615bdea1120ac799a5eae40d1cb7", "Url": "https://api.github.com/repos/europeana/metis-framework", "Date": "2018-01-10T16:44:54Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.activity.CropActivity.findPoints()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (points != null) { mSelectionImageView.setPoints(points); }else { com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.CropActivity.TAG, getResources().getString(R.string.no_contour_found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3267/buggy-version/src.com.owncloud.android.ui.activity.CropActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.QuadrilateralSelectionImageView.setPoints(java.util.List<android.graphics.PointF>)"], "Fixed commit": "3c5777bf65058a974f69c7f5475e4be91a9457f9", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-12T06:43:04Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pressed) { (elevatorHeightIndex)++; elevatorHeightIndex = trclib.TrcUtil.clipRange(elevatorHeightIndex, 0, ((RobotInfo.ELEVATOR_HEIGHTS.length) - 1)); robot.elevator.setPosition(RobotInfo.ELEVATOR_HEIGHTS[elevatorHeightIndex]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5237/buggy-version/src.team492.FrcTeleOp.java", "BodyUseAPI": [], "Fixed commit": "1d3ae02fe707e139fe6ac6c8ca3b93a05f8199c7", "Url": "https://api.github.com/repos/trc492/Frc2018FirstPowerUp", "Date": "2018-03-10T04:21:14Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getHarvester(aJob).getHarvestDigitalAssetsDirs()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dirsExist(das)) { log.error((((\"Failed to send harvest result to digital asset store for job \" + aJob) + \": \") + (e.getMessage())), e); }else { log.error((((\"Failed to find harvest path for job \" + aJob) + \": \") + (e.getMessage())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1946/buggy-version/wct-harvest-agent.src.main.java.org.webcurator.core.harvester.agent.HarvestAgentH3.java", "BodyUseAPI": [], "Fixed commit": "8ba9be7b90f4a169154a2bef5f39d9852c2b7726", "Url": "https://api.github.com/repos/DIA-NZ/webcurator", "Date": "2017-06-02T05:07:03Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((h3job.crawlControllerState.equals(\"NASCENT\")) && (!(h3job.isLaunchable))) { status.setStatus(\"Could not launch job - Fatal InitializationException\"); }else if ((h3job.crawlControllerState.equals(\"FINISHED\")) || (h3job.crawlControllerState.equals(\"STOPPING\"))) { status.setStatus(\"Finished\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1946/buggy-version/wct-harvest-agent.src.main.java.org.webcurator.core.harvester.agent.HarvesterH3.java", "BodyUseAPI": ["h3job.crawlControllerState.equals(java.lang.String)", "h3job.crawlControllerState.equals(java.lang.String)"], "Fixed commit": "8ba9be7b90f4a169154a2bef5f39d9852c2b7726", "Url": "https://api.github.com/repos/DIA-NZ/webcurator", "Date": "2017-06-02T05:07:03Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ru.runa.gpd.lang.model.GraphElement) (getBusinessObjectForPictogramElement(context.getPictogramElement()))) instanceof ru.runa.gpd.lang.model.bpmn.TextDecorationNode) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5769/buggy-version/plugins.ru.runa.gpd.src.ru.runa.gpd.editor.graphiti.update.DeleteElementFeature.java", "BodyUseAPI": [], "Fixed commit": "62003eae33951121db9e3d6ad728e478dc12997a", "Url": "https://api.github.com/repos/dataobject/runawfe-devstudio", "Date": "2018-10-11T11:04:15Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(de.morigm.magna.Main.getInstance().getDefaultPluginConfig().commandlog)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7742/buggy-version/de.morigm.magna.log.CommandLoger.java", "BodyUseAPI": [], "Fixed commit": "dadee7c6c7d03ac3330f7c22ef1afc97eb7c516a", "Url": "https://api.github.com/repos/MoriGM/Magna", "Date": "2018-06-30T15:38:21Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(addFieldImport(reference))) { scan(reference.getDeclaringType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7480/buggy-version/src.main.java.spoon.reflect.visitor.ImportScannerImpl.java", "BodyUseAPI": ["spoon.reflect.reference.CtFieldReference<T>.getDeclaringType()", "spoon.reflect.visitor.ImportScannerImpl.scan(reference.getDeclaringType())"], "Fixed commit": "f0d702e802985f39d054bd20b0ff758322c62ad8", "Url": "https://api.github.com/repos/surli/spoon", "Date": "2018-06-29T12:40:47Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (s.get(i).startsWith(\"static\")) { this.varsStatic = split; }else { this.varsInit = split; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5534/buggy-version/src.parsing.ClassStatement.java", "BodyUseAPI": [], "Fixed commit": "063b9e1d77149e8217d9f5ed674603229c6eda7c", "Url": "https://api.github.com/repos/Daniel-Liu-c0deb0t/reCall", "Date": "2018-04-13T16:30:23Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOk) { return channel; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7556/buggy-version/broker.src.main.java.org.apache.rocketmq.broker.client.ProducerManager.java", "BodyUseAPI": [], "Fixed commit": "5fc2032fbcb893300adc2ac29e275ecf4a3aabc2", "Url": "https://api.github.com/repos/duhengforever/rocketmq", "Date": "2018-07-16T14:20:43Z"},
{"Line": "=>759", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lanaguage) == null) { return wrapper; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3547/buggy-version/src.main.java.com.pratilipi.recommendations.service.PratilipiService.java", "BodyUseAPI": [], "Fixed commit": "4d3698bdf0688395e21f43e2e5c1b572ad799111", "Url": "https://api.github.com/repos/Pratilipi/ecs-recommendation", "Date": "2018-04-12T13:30:23Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (stu != null) tmp2.insert(stu);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5353/buggy-version/src.obj.annualTable.list.List_Region_PracticeBaseRegionPlan_Student.java", "BodyUseAPI": ["obj.annualTable.list.Leaf<obj.annualTable.list.PracticeBaseWithRegionWithPlan, obj.annualTable.list.Student>.insert(obj.annualTable.list.Student)"], "Fixed commit": "0dfd72d135466d0d4dd7a95280f72d766c4abd40", "Url": "https://api.github.com/repos/LionCherry/EPMS", "Date": "2018-01-24T14:21:27Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((region == null) || (pb == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5353/buggy-version/src.obj.annualTable.list.List_Region_PracticeBaseRegionMoneyPB_MoneyPB.java", "BodyUseAPI": [], "Fixed commit": "0dfd72d135466d0d4dd7a95280f72d766c4abd40", "Url": "https://api.github.com/repos/LionCherry/EPMS", "Date": "2018-01-24T14:21:27Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jenkinsci.plugins.workflow.actions.LabelAction.getDisplayName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (labelDisplayName == null) { labelDisplayName = \"\"; }else { labelDisplayName = labelDisplayName.replaceAll(\"\\\\s\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/415/buggy-version/src.main.java.org.jenkinsci.plugins.githubautostatus.GithubBuildStatusGraphListener.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "de12046376a00ac3b296ed6cda51dde59b8295bd", "Url": "https://api.github.com/repos/jenkinsci/github-autostatus-plugin", "Date": "2018-02-07T05:57:09Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (command.startsWith(\"C\")) { java.lang.String[] splitInput = command.split(\" \"); java.net.InetAddress serverHostAddress = java.net.InetAddress.getByName(splitInput[1]); int playerID = java.lang.Integer.parseInt(splitInput[2]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2971/buggy-version/Groundnut.core.src.ClientNetworking.LobbyClient.ClientLobbyListener.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "be9b3f99afb91e74d679cfc8bd1df194cd8fd32b", "Url": "https://api.github.com/repos/Devboys/GroundnutProject", "Date": "2018-05-09T12:16:58Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mRoom)) { mRoom = mSession.getDataHandler().getRoom(row.getEvent().roomId, false); if (null == (mRoom)) { org.matrix.androidsdk.util.Log.d(im.vector.adapters.VectorMessagesAdapterHelper.LOG_TAG, \"## displayReadReceipts () : the room is not available\"); avatarsListView.setVisibility(View.GONE); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8282/buggy-version/vector.src.main.java.im.vector.adapters.VectorMessagesAdapterHelper.java", "BodyUseAPI": [], "Fixed commit": "bc6cc37c29965ec3dae82fdd0e749a30a18cab27", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2018-10-17T08:55:10Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.conf.Configuration.get(YarnConfiguration.YARN_APPLICATION_CLASSPATH)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((yarnConf == null) || (yarnConf.isEmpty())) || (yarnConf.trim().isEmpty())) { for (java.lang.String c : org.apache.hadoop.yarn.conf.YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH) { org.apache.hadoop.yarn.util.Apps.addToEnvironment(environment, Environment.CLASSPATH.name(), c.trim()); } }else { for (java.lang.String c : conf.getStrings(YarnConfiguration.YARN_APPLICATION_CLASSPATH, YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH)) { org.apache.hadoop.yarn.util.Apps.addToEnvironment(environment, Environment.CLASSPATH.name(), c.trim()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4050/buggy-version/angel-ps.core.src.main.java.com.tencent.angel.master.yarn.util.AngelApps.java", "BodyUseAPI": [], "Fixed commit": "1e544bc2b7b1172daad58c83e60d65f75791d5af", "Url": "https://api.github.com/repos/htynkn/angel", "Date": "2018-04-24T03:20:03Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((requiredAttributeMappings) != null) && (!(requiredAttributeMappings.isEmpty()))) { builder.preProcessor(new com.fortify.client.ssc.json.preprocessor.SSCJSONMapFilterApplicationVersionHasValuesForAllAttributes(com.fortify.util.rest.json.preprocessor.AbstractJSONMapFilter.MatchMode.INCLUDE, requiredAttributeMappings.keySet())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9838/buggy-version/processrunner-bugtracker-root.processrunner-bugtracker-ssc-common.src.main.java.com.fortify.processrunner.ssc.appversion.SSCApplicationVersionAttributeBasedContextGenerator.java", "BodyUseAPI": ["com.fortify.client.ssc.api.query.builder.SSCApplicationVersionsQueryBuilder.preProcessor(com.fortify.client.ssc.json.preprocessor.SSCJSONMapFilterApplicationVersionHasValuesForAllAttributes)", "java.util.Map<java.lang.String, java.lang.String>.keySet()"], "Fixed commit": "37655455b6e17c3f07f070822a7b942cd478e459", "Url": "https://api.github.com/repos/fod-dev/FoDBugTrackerUtility", "Date": "2018-01-05T12:50:42Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(i instanceof edu.cmu.tartan.item.ItemKey)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2326/buggy-version/src.edu.cmu.tartan.item.ItemLock.java", "BodyUseAPI": [], "Fixed commit": "223822d61d639f9dc869dffa32e827d8cdb02549", "Url": "https://api.github.com/repos/Sibong/TartanAdventure", "Date": "2018-07-30T04:02:30Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (entity != null) { at.rtr.rmbt.statisticServer.StatisticsResource.lastRequests.add(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4953/buggy-version/RMBTStatisticServer.src.at.rtr.rmbt.statisticServer.StatisticsResource.java", "BodyUseAPI": ["java.util.concurrent.LinkedBlockingQueue<java.lang.String>.add(java.lang.String)"], "Fixed commit": "ec987038b95577002cafff7e4c212e7ead1667ee", "Url": "https://api.github.com/repos/rtr-nettest/open-rmbt", "Date": "2018-02-12T15:20:19Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Main.richard.touching(Main.diego)) && (Main.diego.isAlive())) Main.diego.takeLife(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2269/buggy-version/src.Main.java", "BodyUseAPI": ["Player.takeLife(int)"], "Fixed commit": "0d354ce59fc1ccec3ee30705a0ceff79859a3a42", "Url": "https://api.github.com/repos/davidagtz/D-Day-EOY-Project", "Date": "2018-04-10T05:24:33Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((detectItemChanges()) | (detectFluidChanges())) { requestedUpdate = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1668/buggy-version/src.main.java.com.darkona.adventurebackpack.inventory.ContainerAdventure.java", "BodyUseAPI": [], "Fixed commit": "d23a14f56a8c6f6ac8b5c489f22973cff6065bff", "Url": "https://api.github.com/repos/Ugachaga/AdventureBackpack", "Date": "2018-08-29T08:04:40Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amount.getCurrency().equalsIgnoreCase(coinpurse.Purse.DEFAULT_CURRENCY)) { if (amountNeededToWithdraw != 0) { for (int i = (money.size()) - 1; i >= 0; i--) { if ((money.get(i).getValue()) <= amountNeededToWithdraw) { temptlist.add(money.get(i)); amountNeededToWithdraw -= money.get(i).getValue(); } } } if (amountNeededToWithdraw == 0) { for (coinpurse.Valuable coinNeedToWithdraw : temptlist) { money.remove(coinNeedToWithdraw); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/114/buggy-version/src.coinpurse.Purse.java", "BodyUseAPI": [], "Fixed commit": "0fa18ec38118d14f0efaa658d26ea37cbca81316", "Url": "https://api.github.com/repos/OOP2018/coinpurse-PittayutSothanakul", "Date": "2018-02-15T04:28:39Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chainSet.size()) == 0) { return rx.Observable.error(new java.lang.Throwable(\"Manifest chain set is null, please provide chain id and host\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5764/buggy-version/app.src.main.java.org.nervos.neuron.util.web.WebAppUtil.java", "BodyUseAPI": [], "Fixed commit": "a914e17ee697927717bb62131ea91d89c9553209", "Url": "https://api.github.com/repos/cryptape/neuron-android", "Date": "2018-08-13T14:07:24Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["afghan_trail.Afghan_Trail.getCurrentGame()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (curGame != null) byui.cit260.afghan_trail.controller.GameController.startGame(curGame);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8532/buggy-version/Afghan_Trail.src.byui.cit260.afghan_trail.view.StartProgramView.java", "BodyUseAPI": ["byui.cit260.afghan_trail.controller.GameController.startGame(byui.cit260.afghan_trail.model.Game)"], "Fixed commit": "79d061b787d9ed3c2a69e79b70f8159c5e55f22f", "Url": "https://api.github.com/repos/Sirrine-Jonathan/Afghan_Trail", "Date": "2018-04-07T02:58:56Z"},
{"Line": "=>902", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(lexeme.getParadigm().isMatchingWeak(AttributeNames.i_PartOfSpeech, hardcoded.getValue(AttributeNames.i_PartOfSpeech)))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8377/buggy-version/src.main.java.lv.semti.morphology.analyzer.Analyzer.java", "BodyUseAPI": [], "Fixed commit": "89d6cf9bc7570a47542f252b13eafce410a29a53", "Url": "https://api.github.com/repos/PeterisP/morphology", "Date": "2018-07-03T12:16:10Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < ((objects.size()) - 1)) { java.lang.String obRelationship = objects.get(i).getRelationship(); java.lang.String nextRelationship = objects.get((i + 1)).getRelationship(); if (((objects.get(i).getFlag()) == true) && ((user.getInt(obRelationship)) <= (user.getInt(nextRelationship)))) { objects.get(i).setFlag(false); objects.get(i).saveInBackground(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/672/buggy-version/app.src.main.java.com.example.angsala.whatmattersapp.MyContactsFragment.java", "BodyUseAPI": ["objects.get((i + 1)).getRelationship()", "objects.get(i).saveInBackground()", "objects.get(i).setFlag(boolean)", "objects.get(i).getFlag()", "java.util.List<com.example.angsala.whatmattersapp.model.Contacts>.get(int)", "java.util.List<com.example.angsala.whatmattersapp.model.Contacts>.get(int)", "objects.get(i).getRelationship()", "java.util.List<com.example.angsala.whatmattersapp.model.Contacts>.get(int)", "java.util.List<com.example.angsala.whatmattersapp.model.Contacts>.get(int)", "java.util.List<com.example.angsala.whatmattersapp.model.Contacts>.get(int)"], "Fixed commit": "54f18e9da5e01fd9078e079f0750a2e7d804ec0e", "Url": "https://api.github.com/repos/AAA-Batteries/WhatMattersApp", "Date": "2018-08-09T20:04:59Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i == ((objects.size()) - 1)) && ((objects.get(i).getFlag()) == true)) { objects.get(i).setFlag(false); objects.get(i).saveInBackground(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/672/buggy-version/app.src.main.java.com.example.angsala.whatmattersapp.MyContactsFragment.java", "BodyUseAPI": ["java.util.List<com.example.angsala.whatmattersapp.model.Contacts>.get(int)", "objects.get(i).setFlag(boolean)", "objects.get(i).saveInBackground()", "java.util.List<com.example.angsala.whatmattersapp.model.Contacts>.get(int)"], "Fixed commit": "54f18e9da5e01fd9078e079f0750a2e7d804ec0e", "Url": "https://api.github.com/repos/AAA-Batteries/WhatMattersApp", "Date": "2018-08-09T20:04:59Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((comment.getParentId()) == 0) { jdbcTemplate.update(\"insert into comments (user_id, poll_id, content) values (?,?,?)\", new java.lang.Object[]{ comment.getUserId(), comment.getPollId(), comment.getContent() }); }else { jdbcTemplate.update(\"insert into comments (user_id, poll_id, parent_id, content) values (?,?,?,?)\", new java.lang.Object[]{ comment.getUserId(), comment.getPollId(), comment.getParentId(), comment.getContent() }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8110/buggy-version/src.main.java.com.aws.codestar.projecttemplates.dao.CommentDao.java", "BodyUseAPI": ["org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String,java.lang.Object[])", "com.aws.codestar.projecttemplates.model.Comment.getUserId()", "org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String,java.lang.Object[])", "com.aws.codestar.projecttemplates.model.Comment.getContent()", "com.aws.codestar.projecttemplates.model.Comment.getContent()", "com.aws.codestar.projecttemplates.model.Comment.getPollId()", "com.aws.codestar.projecttemplates.model.Comment.getPollId()", "com.aws.codestar.projecttemplates.model.Comment.getUserId()", "com.aws.codestar.projecttemplates.model.Comment.getParentId()"], "Fixed commit": "b8096d488755440f1bac3b75d417fc9dcca31206", "Url": "https://api.github.com/repos/gabalmat/CSC510-smartVotingApp", "Date": "2018-04-27T17:26:38Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { android.support.v4.app.Fragment fragment = new com.gregory.revelation.Intro(); android.support.v4.app.FragmentManager fm = getSupportFragmentManager(); android.support.v4.app.FragmentTransaction transaction = fm.beginTransaction(); transaction.replace(R.id.contentFragment, fragment); transaction.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7164/buggy-version/app.src.main.java.com.gregory.revelation.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c0a32f2d7095e05a905d3f68bfb6e9b4fea5f76e", "Url": "https://api.github.com/repos/elliottdehn/revel", "Date": "2018-09-10T19:55:04Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gregory.revelation.MainActivity.getSupportActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (bar != null) { bar.hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7164/buggy-version/app.src.main.java.com.gregory.revelation.MainActivity.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.hide()"], "Fixed commit": "c0a32f2d7095e05a905d3f68bfb6e9b4fea5f76e", "Url": "https://api.github.com/repos/elliottdehn/revel", "Date": "2018-09-10T19:55:04Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(loaded)) { try (org.hibernate.Session session = factory.openSession()) { org.hibernate.Transaction t = session.beginTransaction(); for (sx.blah.discord.handle.obj.IGuild guild : getContext().getClient().getGuilds()) { session.persist(new com.cruat.ildque.cmd.query.Server(guild)); } t.commit(); } loaded = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7416/buggy-version/src.main.java.com.cruat.ildque.cmd.query.Query.java", "BodyUseAPI": [], "Fixed commit": "06f1ee24413eb41901ba67a9340efe9f37e87d14", "Url": "https://api.github.com/repos/Aelphaeis/Ildque", "Date": "2018-06-10T06:05:05Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEmailValid)) { android.widget.Toast.makeText(this, \" invalid email id \", Toast.LENGTH_SHORT).show(); }else if (!(isPassValid)) { android.widget.Toast.makeText(this, \" invalid password\", Toast.LENGTH_SHORT).show(); }else { java.lang.String email = Email.getText().toString(); java.lang.String passW = pass.getText().toString(); signIn(email, passW); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2022/buggy-version/app.src.main.java.com.example.sage.mapsexample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9b193e94a77950aa890dfe1cdf615b0c05f9679a", "Url": "https://api.github.com/repos/10kmmr/Conerive", "Date": "2018-01-26T20:08:33Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ass.length) == 2) { if ((((ass[0].equals(\"(long)\")) || (ass[0].equals(\"(int)\"))) || (ass[0].equals(\"(float)\"))) || (ass[0].equals(\"(double)\"))) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6662/buggy-version/src.jRecover.soot.StatementResolver.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "17e294673e5ec9757bbdf2a4878f9b94e330c7af", "Url": "https://api.github.com/repos/spencerwuwu/J-ReCoVer", "Date": "2018-10-01T05:50:49Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((row.length) < (readOrder.length)) { i = last; for (; i < (readOrder.length); i++) { com.univocity.parsers.common.processor.core.FieldMapping field = readOrder[i]; if (field != null) { java.lang.Object value = conversions.applyConversions(i, null, null); field.write(instance, value); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5018/buggy-version/src.main.java.com.univocity.parsers.common.processor.core.BeanConversionProcessor.java", "BodyUseAPI": [], "Fixed commit": "abe0de1dc65540e8d8333630b397dae1b694aa34", "Url": "https://api.github.com/repos/uniVocity/univocity-parsers", "Date": "2018-07-11T08:13:19Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ServerControl.verboseMode) { printRequest(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8188/buggy-version/one.src.main.java.server.ServerResponseThread.java", "BodyUseAPI": [], "Fixed commit": "76ae221225ae4f42c911f3c2b9cbafb30fc0ca00", "Url": "https://api.github.com/repos/TGLS/SYSC3033Project", "Date": "2018-02-02T19:30:40Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (errors.hasErrors()) { return \"addressForm\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5036/buggy-version/src.main.java.com.rsvier.workshop2.controller.AddressController.java", "BodyUseAPI": [], "Fixed commit": "707f021111655eab16f4321b3544fada723264cb", "Url": "https://api.github.com/repos/VLKNK/workshop2-RS4", "Date": "2018-07-12T13:49:02Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["res.getParent().adaptTo(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((resPage != null) && (resPage.isValid())) { java.lang.String path = (resPage.getPath()) + \".html\"; findPathFilterSets(pathFilterSets, httpclient, localContext, path, targetEles, targetAttrs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5058/buggy-version/bundle.src.main.java.com.adobe.cq.tools.asset.packages.PageAssetReferencesServlet.java", "BodyUseAPI": ["com.day.cq.wcm.api.Page.getPath()"], "Fixed commit": "edfb6dd8de8f6565c32adae3195dc12bce2b7b2f", "Url": "https://api.github.com/repos/hunterlueng/aem-tools", "Date": "2018-07-21T10:50:40Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editText_answer.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (date_string.equals(\"Choose Date\")) { date_string = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3929/buggy-version/surveylib.src.main.java.in.myinnos.surveylib.fragment.FragmentDate.java", "BodyUseAPI": [], "Fixed commit": "55306100ac714f3a4182a2acfcaed432122c7c51", "Url": "https://api.github.com/repos/myinnos/FormSurveys", "Date": "2018-08-01T11:03:26Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trimmedArgs.equals(\"\")) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, FindEventCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3699/buggy-version/src.main.java.seedu.address.logic.parser.FindEventCommandParser.java", "BodyUseAPI": [], "Fixed commit": "57586f0e040d87ae19b097d6770e0acda6af75e6", "Url": "https://api.github.com/repos/jill858/main", "Date": "2018-04-15T09:12:28Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((st.getTaxi()) == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7298/buggy-version/src.taxi.hierGen.functions.HierGenRootCompleted.java", "BodyUseAPI": [], "Fixed commit": "c6de86c63e5f56dd1b054bd4b8e7f4b78860069a", "Url": "https://api.github.com/repos/MAPLE-Robot-Subgoaling/MAPLE-PALM", "Date": "2018-06-07T16:22:58Z"},
{"Line": "=>537", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldReturnType == null) currentReturnType = statement.valueType();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1206/buggy-version/src.main.javassist.offload.clang.CodeGen.java", "BodyUseAPI": [], "Fixed commit": "28cab060b6432d9f0dd28b13390673f7342c7912", "Url": "https://api.github.com/repos/csg-tokyo/bytespresso", "Date": "2018-01-01T16:25:19Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((company) != null) { showMap((((company.getName()) + \", \") + (company.getAddress()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2554/buggy-version/app.src.main.java.com.example.tuanfpt.companymanager.activity.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "f90bf23a8599d1981e3a7fa4b1879464800fdb6c", "Url": "https://api.github.com/repos/kingsley8826/CompanyManager", "Date": "2018-10-05T03:39:28Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mFloatingActionButton.getVisibility()) == (android.view.View.INVISIBLE)) mFloatingActionButton.setVisibility(View.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9199/buggy-version/app.src.main.java.com.lailperry.android.blackwellpttrainer.MainActivity.java", "BodyUseAPI": ["android.support.design.widget.FloatingActionButton.setVisibility(View.VISIBLE)"], "Fixed commit": "ae150d26005e8164c6419dcc87797a6d193c5749", "Url": "https://api.github.com/repos/Lailanater56/capstone", "Date": "2018-02-13T15:53:05Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (brandonmilan.tonglaicha.ambiwidget.utils.Utils.isJson(jsonString)) { deviceObject = gson.fromJson(jsonString, brandonmilan.tonglaicha.ambiwidget.objects.DeviceObject.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1212/buggy-version/app.src.main.java.brandonmilan.tonglaicha.ambiwidget.utils.WidgetUtils.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Fixed commit": "a2d30c7dc51c3333cdc956594181429e98a77e6c", "Url": "https://api.github.com/repos/TongLaiCha/AmbiWidget", "Date": "2018-10-04T05:58:34Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dataSnapshot.child(\"createdBy\").getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((createdBy != null) && (!(createdBy.isEmpty()))) createdBy = com.alloget.shendul.allowanceapp.FirebaseEncodingAndDecoding.decodeFromFirebaseKey(createdBy);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1532/buggy-version/app.src.main.java.com.alloget.shendul.allowanceapp.TransactionDetailActivity.java", "BodyUseAPI": ["com.alloget.shendul.allowanceapp.FirebaseEncodingAndDecoding.decodeFromFirebaseKey(java.lang.String)"], "Fixed commit": "aeb31a5689d2208c281eceeb536745641d4c1fdc", "Url": "https://api.github.com/repos/Shendul/Allowance-App", "Date": "2018-02-15T18:49:15Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dataSnapshot.child(\"lastEditedBy\").getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((lastEditedBy != null) && (!(lastEditedBy.isEmpty()))) lastEditedBy = com.alloget.shendul.allowanceapp.FirebaseEncodingAndDecoding.decodeFromFirebaseKey(lastEditedBy);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1532/buggy-version/app.src.main.java.com.alloget.shendul.allowanceapp.TransactionDetailActivity.java", "BodyUseAPI": ["com.alloget.shendul.allowanceapp.FirebaseEncodingAndDecoding.decodeFromFirebaseKey(java.lang.String)"], "Fixed commit": "aeb31a5689d2208c281eceeb536745641d4c1fdc", "Url": "https://api.github.com/repos/Shendul/Allowance-App", "Date": "2018-02-15T18:49:15Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (interpretFail) failOutput += \"Exception \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7200/buggy-version/modelchecker.evaluator.src.main.java.mc.compiler.EquationEvaluator.java", "BodyUseAPI": [], "Fixed commit": "ba3b40a2af4e02138951dd6d8c7c1516eb38295b", "Url": "https://api.github.com/repos/davidstreader/Model-Checker", "Date": "2018-01-26T03:45:58Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.android.inventoryapp.Utilities.retrieveOrderByPreference(com.example.android.inventoryapp.MainActivity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(com.example.android.inventoryapp.Utilities.isEmptyString(preference))) { for (int i = 0; i < (spinnerList.size()); i++) { if (preference.contentEquals(spinnerList.get(i))) { spinner.setSelection(i); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7724/buggy-version/app.src.main.java.com.example.android.inventoryapp.MainActivity.java", "BodyUseAPI": ["java.lang.String.contentEquals(java.lang.String)"], "Fixed commit": "1652b5dd1b5f5e83f91edbdea83fc562cf42cbd9", "Url": "https://api.github.com/repos/Thanassiz/InventoryApp", "Date": "2018-05-22T22:48:56Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (peak == (parentPeak)) p.setParentPeak(recalibrated);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3301/buggy-version/fragmentation_tree.fragmentation_tree_construction.src.main.java.de.unijena.bioinf.FragmentationTreeConstruction.model.ProcessedInput.java", "BodyUseAPI": [], "Fixed commit": "aeb2a335a457cd29ea075565a4635373110fdde1", "Url": "https://api.github.com/repos/boecker-lab/sirius", "Date": "2018-03-12T13:32:57Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataTypes.contains(dataType)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7811/buggy-version/src.main.java.com.github.kongchen.swagger.docgen.mustache.OutputTemplate.java", "BodyUseAPI": [], "Fixed commit": "f823c92d15e878d8201ee2aba5c00709ae20ad9e", "Url": "https://api.github.com/repos/leusonmario/swagger-maven-plugin", "Date": "2013-07-31T13:30:55Z"},
{"Line": "=>929", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(com.wasteofplastic.askyblock.Settings.invincibleVisitors)) || (!((e.getEntity()) instanceof org.bukkit.entity.Player))) || (!(e.getCause().equals(DamageCause.ENTITY_ATTACK)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3642/buggy-version/src.com.wasteofplastic.askyblock.listeners.PlayerEvents.java", "BodyUseAPI": [], "Fixed commit": "5fda8a1b4f66b29f4c94a67bce24a4aee3c82f2b", "Url": "https://api.github.com/repos/Phoenix616/askyblock", "Date": "2018-07-23T21:05:59Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wrapper.getResourceData()) == null) { throw new java.lang.Exception((((\"Null resource data for Encounter \" + encounterId) + \" and version \") + (wrapper.getVersion()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2560/buggy-version/src.eds-queuereader.src.main.java.org.endeavourhealth.queuereader.Main.java", "BodyUseAPI": ["org.endeavourhealth.core.database.dal.ehr.models.ResourceWrapper.getVersion()"], "Fixed commit": "ff33f8309b38a4a416d5b98f70c815ae19b22da3", "Url": "https://api.github.com/repos/endeavourhealth/EDS", "Date": "2018-04-06T16:28:04Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inQuote == 0) inQuote = c;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7685/buggy-version/pljava.src.main.java.org.postgresql.pljava.jdbc.SPIConnection.java", "BodyUseAPI": [], "Fixed commit": "2a4f142ed8594cc3e7ccb8246adb394db93cc797", "Url": "https://api.github.com/repos/pmichalek/pljava", "Date": "2018-02-04T23:11:50Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraft.client.Minecraft.getMinecraft().theWorld) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7012/buggy-version/src.main.java.cc.hyperium.mixinsimp.world.HyperiumWorld.java", "BodyUseAPI": [], "Fixed commit": "2e9b0253d3d52c82a605cf2ed9a9e9d81b9cd4f3", "Url": "https://api.github.com/repos/SiroQ/Hyperium", "Date": "2018-07-30T07:13:23Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isInfinite(tmpWeight)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7933/buggy-version/isochrone.src.main.java.com.graphhopper.isochrone.algorithm.Isochrone.java", "BodyUseAPI": [], "Fixed commit": "74f3551ea9b568f48b7e8d6b140f36c28fef53a1", "Url": "https://api.github.com/repos/graphhopper/graphhopper", "Date": "2018-03-08T09:30:27Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, com.opentok.android.Publisher>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((mPublisher.getView()) instanceof android.opengl.GLSurfaceView) { ((android.opengl.GLSurfaceView) (mPublisher.getView())).setZOrderOnTop(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3472/buggy-version/android.src.main.java.com.opentokreactnative.OTPublisherLayout.java", "BodyUseAPI": ["((android.opengl.GLSurfaceView) (mPublisher.getView())).setZOrderOnTop(boolean)", "com.opentok.android.Publisher.getView()"], "Fixed commit": "228095669478b90c07704d03f518c9ec0b00b8ae", "Url": "https://api.github.com/repos/opentok/opentok-react-native", "Date": "2018-09-07T17:45:41Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.izforge.izpack.core.resource.LocaleHelper.getISO3Country(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(\"\".equals(country3))) { locales.put(country3, locale); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/733/buggy-version/izpack-core.src.main.java.com.izforge.izpack.core.resource.DefaultLocales.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Locale>.put(java.lang.String,java.util.Locale)"], "Fixed commit": "459a4258a185a1b8747bde644dc13066cd6fd98c", "Url": "https://api.github.com/repos/akuhtz/izpack", "Date": "2018-03-30T07:30:17Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSnackbar) != null) { mSnackbar.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7695/buggy-version/app.src.main.java.com.tiomamaster.customizableconverter.converter.ConverterFragment.java", "BodyUseAPI": [], "Fixed commit": "f1e94f75ff9e31e52cd8df7b8be2b35c18804a2c", "Url": "https://api.github.com/repos/tiomamaster/CustomizableConverter", "Date": "2018-01-25T21:09:10Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sortBy == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6162/buggy-version/store.src.java.com.zimbra.cs.index.SearchParams.java", "BodyUseAPI": [], "Fixed commit": "bcf04a010998aed283248a1ffffb8445ad77659c", "Url": "https://api.github.com/repos/Zimbra/zm-mailbox", "Date": "2018-09-06T16:33:35Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPatientRowHeight()) > 0) { m_maxColumnSize = ((m_height) - (getHeaderHeight())) / (getPatientRowHeight()); }else { m_maxColumnSize = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2904/buggy-version/app.src.main.java.org.thousandsmiles.thousandsmilesmonitor.SessionSingleton.java", "BodyUseAPI": [], "Fixed commit": "b0fb0ac280cc787eb388534659cef446d64bdf6c", "Url": "https://api.github.com/repos/slogan621/tscharts-monitor", "Date": "2018-10-31T04:40:19Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.harsh.booklists.Utils.getBooks(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (books != null) listView.setAdapter(new com.example.harsh.booklists.BooksAdapter(this, books)); else emptyTextView.setText(R.string.no_books);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1309/buggy-version/app.src.main.java.com.example.harsh.booklists.MainActivity.java", "BodyUseAPI": ["android.widget.ListView.setAdapter(com.example.harsh.booklists.BooksAdapter)"], "Fixed commit": "de51bb63af683430c4d7acf66037f6625ff290f8", "Url": "https://api.github.com/repos/rash191/BookLists", "Date": "2018-03-07T05:43:43Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((renderer) != null) { renderer.setExternalRenderer(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2422/buggy-version/src.ch.unizh.ini.jaer.projects.elised.ELiSeD.java", "BodyUseAPI": [], "Fixed commit": "3ab37146ec9ff155227c2edfeadd11ab12c27a1b", "Url": "https://api.github.com/repos/SensorsINI/jaer", "Date": "2018-06-05T13:52:56Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(con.getUsername().equals(username))) con.setUsername(username);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5074/buggy-version/src.Control.java", "BodyUseAPI": ["Connection.setUsername(java.lang.String)"], "Fixed commit": "da6a66d229642206cf5a8f7ad45496bb7cbadb28", "Url": "https://api.github.com/repos/Yangyangl7/Multi-server-system", "Date": "2018-04-23T11:25:09Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(con.getSecret().equals(secret))) con.setSecret(secret);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5074/buggy-version/src.Control.java", "BodyUseAPI": ["Connection.setSecret(java.lang.String)"], "Fixed commit": "da6a66d229642206cf5a8f7ad45496bb7cbadb28", "Url": "https://api.github.com/repos/Yangyangl7/Multi-server-system", "Date": "2018-04-23T11:25:09Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.util.List<com.gemstone.gemfire.internal.cache.PersistentOplogSet.ValidateModeColocationChecker.VdrBucketId>>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((currlist.size()) > (smallest.size())) { allSizesEqual = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2766/buggy-version/gemfire-core.src.main.java.com.gemstone.gemfire.internal.cache.PersistentOplogSet.java", "BodyUseAPI": [], "Fixed commit": "c09f25899687b53799c1af1dcb79b14ca6e50085", "Url": "https://api.github.com/repos/SnappyDataInc/snappy-store", "Date": "2018-03-14T05:46:20Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (directory_file != null) { directory = directory_file.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7091/buggy-version/javafl.JavaAflInstrument.java", "BodyUseAPI": ["java.io.File.toString()"], "Fixed commit": "6e2f3f4235b95e275b9d53917ab3593e9bd58439", "Url": "https://api.github.com/repos/Barro/java-afl", "Date": "2018-03-17T16:30:32Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((cn.cerc.jdb.redis.RedisBuffer.jedisPool) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3299/buggy-version/src.main.java.cn.cerc.jdb.redis.RedisBuffer.java", "BodyUseAPI": [], "Fixed commit": "e07ca30b208f80b741945e68b80d7a35100a920f", "Url": "https://api.github.com/repos/cn-cerc/summer-db", "Date": "2018-05-28T13:31:56Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zhqchen.rn.imgpicker.pickerpackage.ImagePickerModel.getBucketMedias(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (infoBeans == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3798/buggy-version/android.app.src.main.java.com.zhqchen.rn.imgpicker.pickerpackage.ImageShowModule.java", "BodyUseAPI": [], "Fixed commit": "73ba9fd931815fa0cb065810ee5ad03b526f94db", "Url": "https://api.github.com/repos/zhqchen/ReactNativeImagePicker", "Date": "2018-04-19T10:57:44Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (taskList != null) { taskCount = taskList.getTaskNum(); android.util.Log.d(\"post count: \", (\"\" + (taskCount))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3782/buggy-version/app.src.main.java.com.example.guyerez.todotiger.TaskActivity.java", "BodyUseAPI": ["com.example.guyerez.todotiger.TaskList.getTaskNum()"], "Fixed commit": "5d72c5845ba1e49f3573931434f3f89750f93cbf", "Url": "https://api.github.com/repos/GuyDev1/TodoTiger", "Date": "2018-09-21T11:49:31Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.score.companion.coord.GetCoord.getMatchPlayer(int,com.score.companion.playmatch.PlayMatchActivity)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (matchPlayer != null) presenter.addPlayerScore(matchPlayer, score);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1740/buggy-version/app.src.main.java.com.score.companion.playmatch.PlayMatchActivity.java", "BodyUseAPI": ["PlayMatchContract.Presenter.addPlayerScore(com.score.companion.model.MatchPlayer,int)"], "Fixed commit": "22e689b4deea5d2575d7f78face2ba2bdc1f8a60", "Url": "https://api.github.com/repos/Macca895/ScoreCompanion", "Date": "2018-10-21T22:01:40Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (second != 0) result.put(\"ratio\", com.dna_analyzer.Utils.MathUtils.roundTwoDecimals((first / second))); else result.put(\"ratio\", \"undefined\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8589/buggy-version/src.main.java.com.dna_analyzer.services.DNAMagnetoBussiness.java", "BodyUseAPI": ["org.codehaus.jettison.json.JSONObject.put(java.lang.String,com.dna_analyzer.Utils.MathUtils.roundTwoDecimals((first / second)))", "com.dna_analyzer.Utils.MathUtils.roundTwoDecimals(float)"], "Fixed commit": "5cc9345cd0781807ad97de6862556ad309282cc5", "Url": "https://api.github.com/repos/robertoavilla/DNA-Analyzer", "Date": "2018-06-08T02:04:20Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.osmand.plus.mapcontextmenu.other.MapRouteInfoMenu.isVisible()) { pb.setVisibility(View.GONE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3190/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "5e26ec37d9bb677d7e55d007a33f3ea4bf3f6217", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2018-05-25T14:43:35Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!valid) { return new se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.IngestStatusObject(STATUS_VALIDATOR_ERROR_UNMATCHING_CHECKSUM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5871/buggy-version/platform-mellanarkiv.src.main.java.se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.validator.ChecksumValidatorWorkerImpl.java", "BodyUseAPI": [], "Fixed commit": "c9e00b620c5b848508e06dbaab2bd0739fd40804", "Url": "https://api.github.com/repos/Vastra-Gotalandsregionen/alfresco-mellanarkiv", "Date": "2018-01-22T13:51:52Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((locationManager) != null) { location = locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER); if ((location) != null) { latitude = location.getLatitude(); longitude = location.getLongitude(); }else { java.util.List<java.lang.String> providers = locationManager.getProviders(true); for (java.lang.String provider : providers) { location = locationManager.getLastKnownLocation(provider); if ((location) == null) { continue; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8670/buggy-version/QuitSmokeMobile.app.src.main.java.ClientService.GPSTracker.java", "BodyUseAPI": [], "Fixed commit": "75e2e0f91c46c599314f3f51b7b63f84d9df8791", "Url": "https://api.github.com/repos/WilliamWangShuang/QuitSmoke", "Date": "2018-09-25T15:31:21Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((locationManager) != null) { location = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER); if ((location) != null) { latitude = location.getLatitude(); longitude = location.getLongitude(); }else { java.util.List<java.lang.String> providers = locationManager.getProviders(true); for (java.lang.String provider : providers) { location = locationManager.getLastKnownLocation(provider); if ((location) == null) { continue; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8670/buggy-version/QuitSmokeMobile.app.src.main.java.ClientService.GPSTracker.java", "BodyUseAPI": [], "Fixed commit": "75e2e0f91c46c599314f3f51b7b63f84d9df8791", "Url": "https://api.github.com/repos/WilliamWangShuang/QuitSmoke", "Date": "2018-09-25T15:31:21Z"},
{"Line": "=>1317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!cat) { catT.setTarget(catV); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7722/buggy-version/PPFinalProject.src.generator.Generator.java", "BodyUseAPI": [], "Fixed commit": "9da80c2044211779e2afa41defcc26ae4e4af5ba", "Url": "https://api.github.com/repos/FHast/PPFinalProject", "Date": "2018-07-06T21:57:33Z"},
{"Line": "=>1386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.hdm.softwarePraktikum.server.ContactAdministrationImpl.getPropertyValuesOfUser(de.hdm.softwarePraktikum.shared.bo.Contact)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pvlist != null) { for (de.hdm.softwarePraktikum.shared.bo.PropertyValue pv : pvlist) { if (plist.contains(this.getPropertyOf(pv))) { continue; }else { plist.add(this.getPropertyOf(pv)); } } for (de.hdm.softwarePraktikum.shared.bo.Property p : plist) { ppvmap.put(p, new java.util.ArrayList<de.hdm.softwarePraktikum.shared.bo.PropertyValue>()); } for (de.hdm.softwarePraktikum.shared.bo.Property p : ppvmap.keySet()) { for (de.hdm.softwarePraktikum.shared.bo.PropertyValue pv : pvlist) { if ((p.getBO_ID()) == (pv.getPropertyId())) { ppvmap.get(p).add(pv); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8293/buggy-version/IT_Projekt_SS18.src.de.hdm.softwarePraktikum.server.ContactAdministrationImpl.java", "BodyUseAPI": [], "Fixed commit": "04526bebf036b996f83d17baa274df4ad949f1fa", "Url": "https://api.github.com/repos/vincent-wengert/IT_Projekt_SS18_Gruppe_6", "Date": "2018-06-18T23:51:09Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gameState.getGameScene().getPlayerList().get(gameState.getGameScene().getPlayerIndex())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((player.getGold()) < 0) { player.getActionIA().discard(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4689/buggy-version/src.com.luis.kingboot.main.PlayTurn.java", "BodyUseAPI": ["player.getActionIA().discard()", "com.luis.strategy.map.Player.getActionIA()"], "Fixed commit": "91a17b48efae2d41a22eda728b562ed07ed34dbd", "Url": "https://api.github.com/repos/LuisValdesFrances/KingBoot", "Date": "2018-08-22T16:30:45Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { mCurrentPhotoPath = savedInstanceState.getString(\"CurrentPhotoPath\"); mImageBitmap = getBitmap(mCurrentPhotoPath); imageview.setImageBitmap(mImageBitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8945/buggy-version/app.src.main.java.com.gmail.akshitgupta1695.textextractor.MainActivity.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "114d113dae3acff494349a903e8740d3f1570aa5", "Url": "https://api.github.com/repos/akshitgupta95/IDCardDataExtractorWithOnDeviceML", "Date": "2018-06-18T18:49:00Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nhlBot.getGameScheduler().getNextGame(com.hazeluff.discord.nhlbot.nhl.Team)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (nextGame != null) { nhlBot.getDiscordManager().sendMessage(channel, (\"The next game is:\\n\" + (com.hazeluff.discord.nhlbot.bot.GameDayChannel.getDetailsMessage(nextGame, preferredTeam.getTimeZone())))); }else { nhlBot.getDiscordManager().sendMessage(channel, com.hazeluff.discord.nhlbot.bot.command.NO_NEXT_GAME_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5071/buggy-version/src.main.java.com.hazeluff.discord.nhlbot.bot.command.NextGameCommand.java", "BodyUseAPI": ["nhlBot.getDiscordManager().sendMessage(sx.blah.discord.handle.obj.IChannel,(\"The next game is:\\n\" + (com.hazeluff.discord.nhlbot.bot.GameDayChannel.getDetailsMessage(nextGame, preferredTeam.getTimeZone()))))", "com.hazeluff.discord.nhlbot.bot.GameDayChannel.getDetailsMessage(com.hazeluff.discord.nhlbot.nhl.Game,preferredTeam.getTimeZone())"], "Fixed commit": "8508b3cb9834837e4f7b70094bd685649e3ff461", "Url": "https://api.github.com/repos/hazeluff/discord-nhlbot", "Date": "2018-04-24T03:26:37Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bson.Document.get(fr.iut.nantes.quizzMovie.db.DB_GAMER_ANSWERS)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (o instanceof java.lang.Double) { out = ((int) ((double) (o))); }else { out = ((int) (o)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6742/buggy-version/back-end.src.main.java.fr.iut.nantes.quizzMovie.db.DbMongo.java", "BodyUseAPI": [], "Fixed commit": "84ce6ce7705fd46ef040ec067599fd7571081019", "Url": "https://api.github.com/repos/paul604/quizz-movie", "Date": "2018-03-14T12:38:59Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bson.Document.get(fr.iut.nantes.quizzMovie.db.DB_GAMER_GOOD_ANSWERS)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (o instanceof java.lang.Double) { out = ((int) ((double) (o))); }else { out = ((int) (o)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6742/buggy-version/back-end.src.main.java.fr.iut.nantes.quizzMovie.db.DbMongo.java", "BodyUseAPI": [], "Fixed commit": "84ce6ce7705fd46ef040ec067599fd7571081019", "Url": "https://api.github.com/repos/paul604/quizz-movie", "Date": "2018-03-14T12:38:59Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isListType) { isModelType = false; for (int pId : parent._vmf_getIndicesOfPropertiesWithModelElementTypes()) { if ((propertyId) == pId) { isModelType = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4173/buggy-version/runtime.src.main.java.eu.mihosoft.vmf.runtime.core.Property.java", "BodyUseAPI": [], "Fixed commit": "c2cbdb5315e341b0c968aa6a8bf7112cffaf2f01", "Url": "https://api.github.com/repos/miho/VMF", "Date": "2018-08-22T20:42:03Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((vote) == null) || ((vote.getResult()) == null)) { vote = new com.dml.mpgame.game.finish.vote.GameFinishVote(voteCalculator); return vote(playerId, VoteOption.yes, game); }else { throw new com.dml.mpgame.game.finish.vote.VoteAlreadyExistsException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6834/buggy-version/src.main.java.com.dml.mpgame.game.finish.vote.VoteAfterStartedGameFinishStrategy.java", "BodyUseAPI": [], "Fixed commit": "093df82f9b858e1a74f5e2638594caa18aad1fef", "Url": "https://api.github.com/repos/zhengchengdong/mpgame.dml", "Date": "2018-08-23T03:48:06Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentFrame) < ((PoolSize) - 1)) { currentFrame += 1; }else currentFrame = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7524/buggy-version/bufmgr.BufMgr.java", "BodyUseAPI": [], "Fixed commit": "12f80d8bc60b3b8ec38e0cc680635b9e4cb3fd05", "Url": "https://api.github.com/repos/JasonLarson44/CS487BufferManager", "Date": "2018-02-07T19:18:25Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tags.trim().isEmpty()) { return new java.util.HashSet<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7540/buggy-version/src.main.java.seedu.address.logic.parser.CsvConverter.java", "BodyUseAPI": [], "Fixed commit": "26defd5dc46321cc67e50fa7b99bc02f2b69b456", "Url": "https://api.github.com/repos/wm28/main", "Date": "2018-10-15T02:11:59Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (command.equals(\"quit\")) { java.lang.System.out.println(\"Game quit.\\n\"); }else { java.lang.System.out.print(\"Unrecognized command.\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6322/buggy-version/src.mymines.Mines.java", "BodyUseAPI": [], "Fixed commit": "313bc7e196b1ffdaceebef57a4c8ec3b192f08f0", "Url": "https://api.github.com/repos/MiloCS/Minesweeper", "Date": "2018-07-29T23:04:14Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null == actor) { org.sunbird.common.models.util.ProjectLogger.log(\"InterServiceCommunicationImpl : getResponse - actorRef is null \", LoggerEnum.INFO); return obj; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7843/buggy-version/actors.core.src.main.java.org.sunbird.actor.core.service.impl.InterServiceCommunicationImpl.java", "BodyUseAPI": [], "Fixed commit": "3ff8c363223717f3411586d1636e0406bcc1670f", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-04-26T11:16:12Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (port_b.isEmpty()) { java.lang.String r = ((java.lang.String) (javax.swing.JOptionPane.showInputDialog(guiClient, \"please enter a port number\", \"Customized Dialog\", javax.swing.JOptionPane.PLAIN_MESSAGE, null, null, \"\"))); port.setText(r); if (!(port_b.isEmpty())) { Submit.setEnabled(true); toggleButton.setText(\"Disconnect\"); }else { javax.swing.JOptionPane.showMessageDialog(null, \"must establish a Port number\", null, javax.swing.JOptionPane.ERROR_MESSAGE); } }else if (ip_b.isEmpty()) { java.lang.String s = ((java.lang.String) (javax.swing.JOptionPane.showInputDialog(guiClient, \"please enter a IP number\", \"Customized Dialog\", javax.swing.JOptionPane.PLAIN_MESSAGE, null, null, \"127.0.0.1\"))); ip.setText(s); if (!(ip_b.isEmpty())) { Submit.setEnabled(true); toggleButton.setText(\"Disconnect\"); }else { javax.swing.JOptionPane.showMessageDialog(null, \"must establish an IP number\", null, javax.swing.JOptionPane.ERROR_MESSAGE); } }else { Submit.setEnabled(true); toggleButton.setText(\"Disconnect\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6891/buggy-version/client_server.client_server.Client.java", "BodyUseAPI": ["java.lang.String.isEmpty()"], "Fixed commit": "74ee22108120538caeeebeb249ec163275937a80", "Url": "https://api.github.com/repos/TroyNech/Networks", "Date": "2018-02-01T22:20:56Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()", "javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(port_b.isEmpty())) && (!(ip_b.isEmpty()))) { Submit.setEnabled(true); toggleButton.setText(\"Disconnect\"); }else { javax.swing.JOptionPane.showMessageDialog(null, \"must establish a Port number and IP address\", null, javax.swing.JOptionPane.ERROR_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6891/buggy-version/client_server.client_server.Client.java", "BodyUseAPI": [], "Fixed commit": "74ee22108120538caeeebeb249ec163275937a80", "Url": "https://api.github.com/repos/TroyNech/Networks", "Date": "2018-02-01T22:20:56Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bean instanceof java.lang.String) { return bean.toString().replaceAll(\"\\\"\", \"\\\\\\\\\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2402/buggy-version/src.main.java.com.blade.kit.json.BeanSerializer.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "5f8ffa25306bf6a1bcc66b503d9f90438c663bb3", "Url": "https://api.github.com/repos/lets-blade/blade", "Date": "2018-06-06T14:17:09Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aksw.simba.lemming.mimicgraph.constraints.IColourMappingRules.getHeadColours(com.carrotsearch.hppc.BitSet,com.carrotsearch.hppc.BitSet)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((possHeadColours.size()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7887/buggy-version/src.main.java.org.aksw.simba.lemming.mimicgraph.generator.AbstractGraphGeneration.java", "BodyUseAPI": [], "Fixed commit": "92c7dacc113161f4bbc933c40e2f68e272f88afc", "Url": "https://api.github.com/repos/dice-group/Lemming", "Date": "2018-09-04T13:06:31Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((units.size()) > 0) { return util.rng.RandomLibs.SelectRandom(units); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4738/buggy-version/FFBEBot.src.util.rng.summon.Pull.java", "BodyUseAPI": ["util.rng.RandomLibs.SelectRandom(java.util.ArrayList<Library.summon.Unit>)"], "Fixed commit": "75edd7bd80226a3c94317ab7a07056883b8b14b3", "Url": "https://api.github.com/repos/Hiddendoom45/FFBEBot", "Date": "2018-10-18T17:28:25Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((units.size()) > 0) { return util.rng.RandomLibs.SelectRandom(units); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4738/buggy-version/FFBEBot.src.util.rng.summon.Pull.java", "BodyUseAPI": ["util.rng.RandomLibs.SelectRandom(java.util.ArrayList<Library.summon.Unit>)"], "Fixed commit": "75edd7bd80226a3c94317ab7a07056883b8b14b3", "Url": "https://api.github.com/repos/Hiddendoom45/FFBEBot", "Date": "2018-10-18T17:28:25Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (russId != 0) { if ((com.facebook.AccessToken.getCurrentAccessToken()) != null) { url = (((((getString(R.string.url)) + \"getOtherRuss?accessToken=\") + (com.facebook.AccessToken.getCurrentAccessToken().getToken())) + \"&type=facebook\") + \"&russId=\") + russId; }else if ((((com.unnamedsoftware.russesamfunnet.Global) (this.getApplication())).getAccessToken()) != null) { url = (((((getString(R.string.url)) + \"getOtherRuss?accessToken=\") + (((com.unnamedsoftware.russesamfunnet.Global) (this.getApplication())).getAccessToken())) + \"&type=russesamfunnet\") + \"&russId=\") + russId; } }else if ((com.facebook.AccessToken.getCurrentAccessToken()) != null) { java.lang.System.out.println(com.facebook.AccessToken.getCurrentAccessToken().getToken()); url = (((getString(R.string.url)) + \"userRuss?accessToken=\") + (com.facebook.AccessToken.getCurrentAccessToken().getToken())) + \"&type=facebook\"; }else if ((((com.unnamedsoftware.russesamfunnet.Global) (this.getApplication())).getAccessToken()) != null) { java.lang.System.out.println(\"User id: \"); java.lang.System.out.println(((com.unnamedsoftware.russesamfunnet.Global) (this.getApplication())).getAccessToken()); url = (((getString(R.string.url)) + \"userRuss?accessToken=\") + (((com.unnamedsoftware.russesamfunnet.Global) (this.getApplication())).getAccessToken())) + \"&type=russesamfunnet\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5200/buggy-version/app.src.main.java.com.unnamedsoftware.russesamfunnet.UserProfile.java", "BodyUseAPI": [], "Fixed commit": "d4630a40fbd52b66bf60df4c440bdebad34e7d05", "Url": "https://api.github.com/repos/UnnamedSoftware/Russesamfunnet.no---Android", "Date": "2018-03-19T11:28:58Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((model.getType()) == null) || (model.getType().toLowerCase().equals(\"null\"))) { dto.setType(APIDTO.TypeEnum.HTTP); }else { dto.setType(APIDTO.TypeEnum.valueOf(model.getType())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/835/buggy-version/components.apimgt.org.wso2.carbon.apimgt.rest.api.publisher.src.main.java.org.wso2.carbon.apimgt.rest.api.publisher.utils.mappings.APIMappingUtil.java", "BodyUseAPI": ["APIDTO.TypeEnum.valueOf(model.getType())", "org.wso2.carbon.apimgt.rest.api.publisher.dto.APIDTO.setType(APIDTO.TypeEnum.valueOf(model.getType()))", "org.wso2.carbon.apimgt.api.model.API.getType()"], "Fixed commit": "21e906162a7d9064e45d810edc12578025d8e050", "Url": "https://api.github.com/repos/ChamNDeSilva/carbon-apimgt", "Date": "2018-03-08T09:06:32Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((periods.size()) > 1) { periods.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8326/buggy-version/app.src.main.java.co.tinab.darchin.model.store.Store.java", "BodyUseAPI": ["java.util.List<co.tinab.darchin.model.store.Period>.remove(int)"], "Fixed commit": "9cb207fdc558b47666d9bd01927175381caf3690", "Url": "https://api.github.com/repos/asr1994/Darchin", "Date": "2018-09-03T07:39:42Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.battery) < 100) { java.lang.System.out.println((\"Robot needs to get charged, the current battert is \" + (battery))); isIdle = false; this.path = floor.getPath(current, floor.getCharging_Station()); goTo(this.path); reCharge(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6878/buggy-version/AmazonWarehouse.src.Robot.java", "BodyUseAPI": [], "Fixed commit": "fa10a979d8605329ce206f3650903a5576050a4e", "Url": "https://api.github.com/repos/Yifdaddy/Amazon-Warehouse", "Date": "2018-03-13T23:07:12Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.hasBlockedActions()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9129/buggy-version/compss.runtime.scheduler.fifoDataScheduler.src.main.java.es.bsc.compss.scheduler.fifoDataScheduler.FIFODataResourceScheduler.java", "BodyUseAPI": [], "Fixed commit": "0ebbfaf0229c6ce67b8f9700e6a9f28698dd0909", "Url": "https://api.github.com/repos/TANGO-Project/compss", "Date": "2018-07-12T07:46:20Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.hasBlockedActions()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9129/buggy-version/compss.runtime.scheduler.lifoScheduler.src.main.java.es.bsc.compss.scheduler.lifoScheduler.LIFOResourceScheduler.java", "BodyUseAPI": [], "Fixed commit": "0ebbfaf0229c6ce67b8f9700e6a9f28698dd0909", "Url": "https://api.github.com/repos/TANGO-Project/compss", "Date": "2018-07-12T07:46:20Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.hasBlockedActions()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9129/buggy-version/compss.runtime.scheduler.fifoScheduler.src.main.java.es.bsc.compss.scheduler.fifoScheduler.FIFOResourceScheduler.java", "BodyUseAPI": [], "Fixed commit": "0ebbfaf0229c6ce67b8f9700e6a9f28698dd0909", "Url": "https://api.github.com/repos/TANGO-Project/compss", "Date": "2018-07-12T07:46:20Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.hasBlockedActions()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9129/buggy-version/compss.runtime.scheduler.loadBalancingScheduler.src.main.java.es.bsc.compss.scheduler.loadBalancingScheduler.LoadBalancingResourceScheduler.java", "BodyUseAPI": [], "Fixed commit": "0ebbfaf0229c6ce67b8f9700e6a9f28698dd0909", "Url": "https://api.github.com/repos/TANGO-Project/compss", "Date": "2018-07-12T07:46:20Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.hasBlockedActions()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9129/buggy-version/compss.runtime.scheduler.dataLocalityScheduler.src.main.java.es.bsc.compss.scheduler.dataScheduler.DataResourceScheduler.java", "BodyUseAPI": [], "Fixed commit": "0ebbfaf0229c6ce67b8f9700e6a9f28698dd0909", "Url": "https://api.github.com/repos/TANGO-Project/compss", "Date": "2018-07-12T07:46:20Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((notificationCenter) != null) { notificationCenter.removeNotificationForPerson(targetId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5882/buggy-version/src.main.java.seedu.address.model.ModelManager.java", "BodyUseAPI": [], "Fixed commit": "3daf9de3d6aa524f8317f5aded0de2052c6d3b52", "Url": "https://api.github.com/repos/CS2103JAN2018-W15-B1/main", "Date": "2018-04-14T04:14:16Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.coppellcoders.icycle.MainActivity.SortedCounts.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (highestCountName.equals(\"otherCount\")) { diffMeter = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7309/buggy-version/app.src.main.java.com.coppellcoders.icycle.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0aaeb62bea3d6dd71064526df1b1202e432297f0", "Url": "https://api.github.com/repos/KannaDev/iCycle", "Date": "2018-04-22T04:51:32Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<V, org.jgrapht.traverse.LexBreadthFirstIterator<V, E>.BucketList.Bucket>.get(V)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (B == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9387/buggy-version/jgrapht-core.src.main.java.org.jgrapht.traverse.LexBreadthFirstIterator.java", "BodyUseAPI": [], "Fixed commit": "0698669e4d78abfa042358ffe0f1b901c7587027", "Url": "https://api.github.com/repos/tj-developers/jgrapht", "Date": "2018-07-05T23:58:29Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<V, org.jgrapht.traverse.LexBreadthFirstIterator<V, E>.BucketList.Bucket>.get(V)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (B == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9387/buggy-version/jgrapht-core.src.main.java.org.jgrapht.traverse.LexBreadthFirstIterator.java", "BodyUseAPI": [], "Fixed commit": "0698669e4d78abfa042358ffe0f1b901c7587027", "Url": "https://api.github.com/repos/tj-developers/jgrapht", "Date": "2018-07-05T23:58:29Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeZone) != null) mysqlSource.setServerTimezone(timeZone);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6868/buggy-version/LaunchServer.src.main.java.launchserver.auth.MySQLSourceConfig.java", "BodyUseAPI": [], "Fixed commit": "d0dc623ee1cb632e05e9b5eb080bfc320becc375", "Url": "https://api.github.com/repos/gravit0/Launcher", "Date": "2018-08-17T14:14:22Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.status) != (me.panpf.sketch.request.BaseRequest.Status.CANCELED)) { this.status = status; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7031/buggy-version/sketch.src.main.java.me.panpf.sketch.request.BaseRequest.java", "BodyUseAPI": [], "Fixed commit": "bfa0b143547f8c34fe3cb945156e61f6b3d67190", "Url": "https://api.github.com/repos/panpf/sketch", "Date": "2018-01-01T15:15:47Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(team.getTeamCode())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (emg1 > 0) { row = sheet.getRow(26); if (row == null) { row = sheet.createRow(26); } cell = row.getCell(columnIndex, Row.MissingCellPolicy.CREATE_NULL_AS_BLANK); cell.setCellValue(emg1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5174/buggy-version/src.main.java.net.dflmngr.reports.InsAndOutsReport.java", "BodyUseAPI": ["org.apache.poi.xssf.usermodel.XSSFCell.setCellValue(int)"], "Fixed commit": "a53ca62ea11b12a9c8f7490b1c0a5c44ec4bb96d", "Url": "https://api.github.com/repos/kwlockwo/dfl-manager", "Date": "2018-06-30T01:11:07Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(team.getTeamCode())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (emg2 > 0) { row = sheet.getRow(27); if (row == null) { row = sheet.createRow(27); } cell = row.getCell(columnIndex, Row.MissingCellPolicy.CREATE_NULL_AS_BLANK); cell.setCellValue(emg2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5174/buggy-version/src.main.java.net.dflmngr.reports.InsAndOutsReport.java", "BodyUseAPI": ["org.apache.poi.xssf.usermodel.XSSFCell.setCellValue(int)"], "Fixed commit": "a53ca62ea11b12a9c8f7490b1c0a5c44ec4bb96d", "Url": "https://api.github.com/repos/kwlockwo/dfl-manager", "Date": "2018-06-30T01:11:07Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.error.endsWith(\"RuntimeException\")) { this.error = this.error.substring(0, ((this.error.length()) - (\"RuntimeException\".length()))); }else if (this.error.endsWith(\"Exception\")) { this.error = this.error.substring(0, ((this.error.length()) - (\"Exception\".length()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7816/buggy-version/euler-web-core.src.main.java.net.eulerframework.web.core.exception.web.WebException.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "1e807235256ea6663e1c09531055fc7134bdc9bb", "Url": "https://api.github.com/repos/euler-projects/euler-framework", "Date": "2018-02-28T14:42:53Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.getContextClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (loader == null) { loader = java.lang.ClassLoader.getSystemClassLoader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2732/buggy-version/smart-hadoop-support.smart-hadoop.src.main.java.org.smartdata.hdfs.CompatibilityHelperLoader.java", "BodyUseAPI": [], "Fixed commit": "99225d67fa547d5819dc4cfff76738d2b814fb52", "Url": "https://api.github.com/repos/PHILO-HE/SSM", "Date": "2018-04-25T03:49:37Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.feed_the_beast.ftbutilities.ranks.Rank>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (r != null) { rank.parents.add(r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/713/buggy-version/src.main.java.com.feed_the_beast.ftbutilities.ranks.Ranks.java", "BodyUseAPI": ["rank.parents.add(com.feed_the_beast.ftbutilities.ranks.Rank)"], "Fixed commit": "fd2f27c0366429b1c4c37066f873017ffb447b73", "Url": "https://api.github.com/repos/LatvianModder/FTBUtilities", "Date": "2018-05-22T11:56:25Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.feed_the_beast.ftblib.lib.util.StringUtils.removeAllWhitespace(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(s.isEmpty())) { currentRank.tags.add(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/713/buggy-version/src.main.java.com.feed_the_beast.ftbutilities.ranks.Ranks.java", "BodyUseAPI": ["currentRank.tags.add(java.lang.String)"], "Fixed commit": "fd2f27c0366429b1c4c37066f873017ffb447b73", "Url": "https://api.github.com/repos/LatvianModder/FTBUtilities", "Date": "2018-05-22T11:56:25Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (kms == 0) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4510/buggy-version/app.src.main.java.pt.guilhermeramos.gestorcombustivel.PagarActivity.java", "BodyUseAPI": [], "Fixed commit": "f5edc002e903663d073ba6c2a1f7958db566550d", "Url": "https://api.github.com/repos/xbitres/fuel-manager-android", "Date": "2018-05-30T22:22:34Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentFocus()) != null) { imm.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7196/buggy-version/SwarzedzkiBus.app.src.main.java.com.wblachowski.swarzedzkibus.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "aade5b06f8d7980198a99b0330f4889331d4f0a2", "Url": "https://api.github.com/repos/wblachowski/SwarzedzkiBusV2", "Date": "2018-03-27T09:13:01Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.launchcode.maximo.models.data.BuildingDao.findOne(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (build == null) { model.addAttribute(\"title\", \"New Work Request\"); model.addAttribute(\"buildings\", buildingDao.findAll()); return \"workRequest/add\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8918/buggy-version/src.main.java.org.launchcode.maximo.controllers.WorkRequestController.java", "BodyUseAPI": [], "Fixed commit": "e03890991389d590cfef14d54c331cf57c3322ee", "Url": "https://api.github.com/repos/amanda7641/WRAAM", "Date": "2018-08-15T05:05:08Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (idNiveauManagement == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1978/buggy-version/src.main.java.nc.mairie.spring.dao.metier.poste.NiveauManagementDao.java", "BodyUseAPI": [], "Fixed commit": "4284ee668cbebb852843317d885d73decf285759", "Url": "https://api.github.com/repos/DSI-Ville-Noumea/sirh", "Date": "2018-03-19T22:45:26Z"},
{"Line": "=>695", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nc.mairie.gestionagent.process.agent.NiveauManagementDao.getNiveauManagement(getFichePosteCourant().getIdNiveauManagement())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (niveauManagement == null) { logger.info(\"Aucun niveau de management n'est d\u00e9fini pour la fiche de poste num. {} !\", getFichePosteCourant().getNumFp()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1978/buggy-version/src.main.java.nc.mairie.gestionagent.process.agent.OeAGENTEmploisPoste.java", "BodyUseAPI": [], "Fixed commit": "4284ee668cbebb852843317d885d73decf285759", "Url": "https://api.github.com/repos/DSI-Ville-Noumea/sirh", "Date": "2018-03-19T22:45:26Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (children == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2525/buggy-version/src.main.java.cat.udl.eps.entsoftarch.textannot.controller.TagHierarchyController.java", "BodyUseAPI": [], "Fixed commit": "0cd9545ef3ce342ff89b6ec4ac8760fbffce5e97", "Url": "https://api.github.com/repos/UdL-EPS-SoftArch/TextAnnot-API", "Date": "2018-10-17T11:54:52Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numberOfValidInputs == 1) && (time < 43200000)) { timeToLeaveInMillis += 3600000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4335/buggy-version/tidgui.src.com.frenberg.tid.Tid.java", "BodyUseAPI": [], "Fixed commit": "bc1902bd187f127b7192914781972ab20e2dfd47", "Url": "https://api.github.com/repos/frenberg/simple-time-tool", "Date": "2018-08-22T07:43:54Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (checkFile.exists()) { if (!(checkFile.delete())) { java.lang.String timeStamp = new java.text.SimpleDateFormat(\"yyMMdd_HHmmss\").format(java.util.Calendar.getInstance().getTime()); if (filename.contains(\".\")) { int dotIndex = filename.lastIndexOf(\".\"); filename = (((filename.substring(0, dotIndex)) + \"_\") + timeStamp) + (filename.substring(dotIndex, filename.length())); }else { filename = (filename + \"_\") + timeStamp; } newTCLFilePath = ((batchFolderPath) + \"/\") + filename; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4182/buggy-version/framework.sics.org.gumtree.gumnix.sics.batch.ui.src.org.gumtree.gumnix.sics.batch.ui.buffer.BatchBufferManager.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "05cbca01497325ad4c82b8d39eb68572e3d16f13", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2018-03-22T05:18:21Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((IbanValidator.dataHandler.getMode()) == 1) { IbanValidator.dataHandler.closeFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2715/buggy-version/src.IbanValidator.java", "BodyUseAPI": ["DataHandler.closeFile()"], "Fixed commit": "b4156578ffe8785bfc3f9c71ac956e99a9a2d77a", "Url": "https://api.github.com/repos/DaliaMasilionyte/iban-validator", "Date": "2018-10-21T19:44:53Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((expressionName.length()) > 2) { java.lang.String lastTwo = expressionName.substring(((expressionName.length()) - 2)); if (org.cirdles.squid.tasks.expressions.parsing.ShuntingYard.isNumber(lastTwo)) { index = (java.lang.Integer.parseInt(lastTwo.substring(0, 1))) - 1; java.lang.String baseExpressionName = expressionName.substring(0, ((expressionName.length()) - 2)); if (index >= 0) { retExpTreeKnown = namedExpressionsMap.get(baseExpressionName); if (retExpTreeKnown != null) { retExpTree = new org.cirdles.squid.tasks.expressions.variables.VariableNodeForSummary(baseExpressionName, index); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1218/buggy-version/squidCore.src.main.java.org.cirdles.squid.tasks.expressions.parsing.ExpressionParser.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "0a20ff33d8e2682e6ef300bb75a0833eef477c93", "Url": "https://api.github.com/repos/bowring/Squid", "Date": "2018-06-02T11:54:59Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mFlags.get(position))) { needToFilter = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2716/buggy-version/src.main.java.com.hebaiyi.www.katakuri.adapter.PerViewBottomAdapter.java", "BodyUseAPI": [], "Fixed commit": "1fc3e01400f251c72144204ed44f5f7b067e0b35", "Url": "https://api.github.com/repos/C1over/Katakuri", "Date": "2018-08-02T02:26:53Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"N\".equals(key)) && (comment.isEmpty())) { comment = value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7803/buggy-version/src.main.java.featurecat.lizzie.rules.BoardData.java", "BodyUseAPI": [], "Fixed commit": "426b557233ed994a5840d58b0ce514963af4cd74", "Url": "https://api.github.com/repos/zsalch/lizzie", "Date": "2018-10-23T15:42:22Z"},
{"Line": "=>1892", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ctc.Ctc.dispatched.contains(train))) ctc.Ctc.dispatched.add(train);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3206/buggy-version/ctc.Ctc.java", "BodyUseAPI": ["java.util.ArrayDeque<ctc.Ctc.Train>.add(ctc.Ctc.Train)"], "Fixed commit": "58339ef883b00d88e614d43dccb97f0746508727", "Url": "https://api.github.com/repos/suffolk-northern/main", "Date": "2018-04-24T20:56:11Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getAbsent()) == null) { return 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8344/buggy-version/app.src.main.java.oscar.riksdagskollen.Util.JSONModel.RepresentativeModels.RepresentativeVoteStatistics.java", "BodyUseAPI": [], "Fixed commit": "009e5365f6ddd80089d1076fc33f82c734386669", "Url": "https://api.github.com/repos/OAndell/Riksdagskollen", "Date": "2018-09-29T13:53:15Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.examiner.findFreeCells(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(freeCells.isEmpty())) { cellToMarkNum = freeCells.get(java.util.concurrent.ThreadLocalRandom.current().nextInt(0, ((freeCells.size()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5087/buggy-version/src.main.java.com.paintme.infrastucture.algorithms.SquareWinningAlgorithm.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.size()", "java.util.concurrent.ThreadLocalRandom.nextInt(int,int)", "java.util.List<java.lang.Integer>.get(int)"], "Fixed commit": "7da9b5cb0a41675c8afaedcdf29d6ff9119c8be0", "Url": "https://api.github.com/repos/NataliaSlobodianiuk/PaintME", "Date": "2018-05-14T17:42:03Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.examiner.findFreeCells(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(freeCells.isEmpty())) { cellToMarkNum = freeCells.get(java.util.concurrent.ThreadLocalRandom.current().nextInt(0, ((freeCells.size()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5087/buggy-version/src.main.java.com.paintme.infrastucture.algorithms.SquareBlockingAlgorithm.java", "BodyUseAPI": ["java.util.concurrent.ThreadLocalRandom.nextInt(int,int)", "java.util.List<java.lang.Integer>.get(int)", "java.util.List<java.lang.Integer>.size()"], "Fixed commit": "7da9b5cb0a41675c8afaedcdf29d6ff9119c8be0", "Url": "https://api.github.com/repos/NataliaSlobodianiuk/PaintME", "Date": "2018-05-14T17:42:03Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) mSmallPosterIV.setTransitionName((\"posterImageOfMovie\" + (java.lang.Integer.toString(movie.getId()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1896/buggy-version/app.src.main.java.com.vicksam.popularmovies.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "befc218a9e4acef8aeac0c205d4aafe732c9510a", "Url": "https://api.github.com/repos/vicksam/popular-movies", "Date": "2018-06-13T08:01:01Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((marker) != null) { shelterMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(marker.getPosition(), 11)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3131/buggy-version/app.src.main.java.com.example.team38.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "bc85d82887dc11a241bef7509863814786d229e9", "Url": "https://api.github.com/repos/johnsk95/cs2340_spring2018_team38", "Date": "2018-04-16T03:12:13Z"},
{"Line": "=>1105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.getNodeName().equalsIgnoreCase(\"Conditional\")) { }else { kutch.biff.marvin.configuration.ConfigurationReader.LOGGER.warning((\"Unexpected Tag Type in configuration file: \" + (node.getNodeName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1262/buggy-version/Marvin.src.main.java.kutch.biff.marvin.configuration.ConfigurationReader.java", "BodyUseAPI": ["java.util.logging.Logger.warning((\"Unexpected Tag Type in configuration file: \" + (node.getNodeName())))", "kutch.biff.marvin.utility.FrameworkNode.getNodeName()"], "Fixed commit": "1f0a2c5ff962601bf807a39cda52ecb115b101a9", "Url": "https://api.github.com/repos/intel/Board-Instrumentation-Framework", "Date": "2018-05-30T20:56:24Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((organism) instanceof com.vivarium.model.Vegetal) { if (((com.vivarium.model.Vegetal) (organism)).getEdible()) { g.drawImage(icon, (((int) (this.organism.getPos().getX())) - ((iconSize) / 2)), (((int) (this.organism.getPos().getY())) - ((iconSize) / 2)), iconSize, iconSize, null); } }else { g.drawImage(icon, (((int) (this.organism.getPos().getX())) - ((iconSize) / 2)), (((int) (this.organism.getPos().getY())) - ((iconSize) / 2)), iconSize, iconSize, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1725/buggy-version/src.com.vivarium.view.OrganismView.java", "BodyUseAPI": [], "Fixed commit": "65dbdabc2102adb770d90d9806d9b7920eb2850c", "Url": "https://api.github.com/repos/Piryus/Vivarium", "Date": "2018-01-08T15:21:37Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((consumption.getFeeling()) == 1) { feelingImg.setImageResource(R.drawable.happy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3666/buggy-version/app.src.main.java.com.project.avans.mdodandroid.ConsumptionDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "77aa66819390ec31b5894909b42f306af5a6ccdc", "Url": "https://api.github.com/repos/arjangosens/MDODAndroid", "Date": "2018-06-10T12:47:32Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sasha.queue.Main.getQueuedPlayer(e.getPlayer())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((qp.getPriorityEnum()) == (PriorityEnum.INSTANT)) { (com.sasha.queue.Main.instantBacklog)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3601/buggy-version/src.com.sasha.queue.Main.java", "BodyUseAPI": [], "Fixed commit": "d6a956745c76aafccfc465544ce25842e2d18b59", "Url": "https://api.github.com/repos/EmotionalLove/SashaQueue", "Date": "2018-07-26T06:14:11Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sasha.queue.Main.getQueuedPlayer(e.getPlayer())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((qp.getPriorityEnum()) == (PriorityEnum.PRIORITY)) { (com.sasha.queue.Main.priorityBacklog)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3601/buggy-version/src.com.sasha.queue.Main.java", "BodyUseAPI": [], "Fixed commit": "d6a956745c76aafccfc465544ce25842e2d18b59", "Url": "https://api.github.com/repos/EmotionalLove/SashaQueue", "Date": "2018-07-26T06:14:11Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((rChecked) && (pChecked)) || ((!(rChecked)) && (!(pChecked)))) { orderedTextView.setText(\"Check proper shipping options!\"); }else if ((numOfCoffees) <= 0) { orderedTextView.setText(\"Please enter a number greater than 0!\"); }else if ((numOfCoffees) > 0) { orderedTextView.setText(\"Order has been submitted! Thank you!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8332/buggy-version/app.src.main.java.com.example.android.justjava.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a9ad30f89c85b2e91b6efdb12b90682ce1c57d02", "Url": "https://api.github.com/repos/ConnieJChi/PlaceOrderApp", "Date": "2018-06-05T02:43:08Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((node != null) && ((node.getNextSibling()) != null)) { return ((((node.getNextSibling().getFirstChild()) instanceof com.intellij.psi.impl.source.tree.LeafPsiElement) && (((com.intellij.psi.impl.source.tree.LeafPsiElement) (node.getNextSibling().getFirstChild())).getElementType().equals(JSTokenTypes.LPAR))) && ((node.getNextSibling().getLastChild()) instanceof com.intellij.psi.impl.source.tree.LeafPsiElement)) && (((com.intellij.psi.impl.source.tree.LeafPsiElement) (node.getNextSibling().getLastChild())).getElementType().equals(JSTokenTypes.RPAR)); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6346/buggy-version/src.main.java.com.games.cs.quaty.helper.code.inspection.QuatyParameterInspection.java", "BodyUseAPI": ["node.getNextSibling().getLastChild()", "((com.intellij.psi.impl.source.tree.LeafPsiElement) (node.getNextSibling().getFirstChild())).getElementType().equals(JSTokenTypes.LPAR)", "com.intellij.lang.javascript.psi.JSReferenceExpression.getNextSibling()", "((com.intellij.psi.impl.source.tree.LeafPsiElement) (node.getNextSibling().getFirstChild())).getElementType()", "com.intellij.lang.javascript.psi.JSReferenceExpression.getNextSibling()", "node.getNextSibling().getLastChild()", "node.getNextSibling().getFirstChild()", "((com.intellij.psi.impl.source.tree.LeafPsiElement) (node.getNextSibling().getLastChild())).getElementType()", "node.getNextSibling().getFirstChild()", "com.intellij.lang.javascript.psi.JSReferenceExpression.getNextSibling()", "com.intellij.lang.javascript.psi.JSReferenceExpression.getNextSibling()", "((com.intellij.psi.impl.source.tree.LeafPsiElement) (node.getNextSibling().getLastChild())).getElementType().equals(JSTokenTypes.RPAR)"], "Fixed commit": "13ca7aefca268f481686e6207ab180377e322d88", "Url": "https://api.github.com/repos/BeiKeJieDeLiuLangMao/QuatyHelper", "Date": "2018-01-01T12:23:21Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.inventory.InventoryClickEvent.getInventory()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inv.getItem(2)) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2286/buggy-version/src.main.java.cz.wake.manager.perks.coloranvil.AnvilListener.java", "BodyUseAPI": [], "Fixed commit": "f0e69d3428258e5d1d805398332b830eb3bff228", "Url": "https://api.github.com/repos/craftmania-cz/craftmanager", "Date": "2018-10-21T04:04:57Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(countryCode.equals(\"86\"))) && (phone.startsWith(\"0\"))) { mView.errorMsg(com.common.cklibrary.common.KJActivityStack.create().topActivity().getString(R.string.hintPhoneText2), 0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4492/buggy-version/SillyChildClient.app.src.main.java.com.sillykid.app.loginregister.forgotpassword.RetrievePasswordPresenter.java", "BodyUseAPI": [], "Fixed commit": "bf4e3f4ed5508c536022c9556dd105106778e355", "Url": "https://api.github.com/repos/921668753/SillyChildClient2-Android", "Date": "2018-09-10T07:04:39Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(countryCode.equals(\"86\"))) && (phone.startsWith(\"0\"))) { mView.errorMsg(com.common.cklibrary.common.KJActivityStack.create().topActivity().getString(R.string.hintPhoneText2), 0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4492/buggy-version/SillyChildClient.app.src.main.java.com.sillykid.app.loginregister.bindingaccount.BindingPhonePresenter.java", "BodyUseAPI": [], "Fixed commit": "bf4e3f4ed5508c536022c9556dd105106778e355", "Url": "https://api.github.com/repos/921668753/SillyChildClient2-Android", "Date": "2018-09-10T07:04:39Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(countryCode.equals(\"86\"))) && (phone.startsWith(\"0\"))) { mView.errorMsg(com.common.cklibrary.common.KJActivityStack.create().topActivity().getString(R.string.hintPhoneText2), 0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4492/buggy-version/SillyChildClient.app.src.main.java.com.sillykid.app.loginregister.register.RegisterPresenter.java", "BodyUseAPI": [], "Fixed commit": "bf4e3f4ed5508c536022c9556dd105106778e355", "Url": "https://api.github.com/repos/921668753/SillyChildClient2-Android", "Date": "2018-09-10T07:04:39Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (str.contains(\"X\")) { if ((str.contains(\"+\")) && (str.contains(\"-\"))) if ((str.indexOf(\"+\")) < (str.indexOf(\"-\", 1))) endOfPower = str.indexOf(\"+\"); else endOfPower = str.indexOf(\"-\", 1); else if (str.contains(\"+\")) endOfPower = str.indexOf(\"+\"); else if (str.contains(\"-\")) if ((str.indexOf(\"-\")) == 0) endOfPower = str.indexOf(\"-\", 1); else endOfPower = str.indexOf(\"-\"); else endOfPower = str.length(); result.set(1, java.lang.Integer.parseInt(str.substring(0, endOfPower))); str = str.substring(endOfPower); if ((str.indexOf(\"+\")) == 0) str = str.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5621/buggy-version/src.classes.Formatter.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.set(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.contains(java.lang.String)", "java.lang.String.length()", "java.lang.String.contains(java.lang.String)", "java.lang.String.indexOf(java.lang.String,int)", "java.lang.String.contains(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.indexOf(java.lang.String,int)"], "Fixed commit": "1d3d97ac77c79483d621f01edd4443c7250dd210", "Url": "https://api.github.com/repos/Aaal-E/algebra-for-security-poly", "Date": "2018-10-02T14:13:51Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["by.d1makrat.library_fm.MainActivity.GetPlaycountTask.findViewById(R.id.nav_header)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (nav_view != null) { android.widget.TextView user_registered = ((android.widget.TextView) (nav_view.findViewById(R.id.user_registered))); user_registered.setText(java.lang.String.format(\"%s scrobbles since %s\", playcount, registered)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/842/buggy-version/app.src.main.java.by.d1makrat.library_fm.MainActivity.java", "BodyUseAPI": ["android.view.View.findViewById(R.id.user_registered)"], "Fixed commit": "3dc62531232a03503633c12d6421f46b1320d19b", "Url": "https://api.github.com/repos/DzmitryLakisau/Last.fm-Library-Viewer", "Date": "2017-09-29T22:32:17Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.USE_DEFAULT_BOSSES) return new com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerErisDefault(); else return new com.mjr.extraplanets.tileEntities.dungeonSpawners.TileEntityDungeonSpawnerEris();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1397/buggy-version/src.main.java.com.mjr.extraplanets.blocks.dungeonSpawners.BlockErisDungeonSpawner.java", "BodyUseAPI": [], "Fixed commit": "000c3b2cb0dbbac3f14ef43df58a76ca737fc8c7", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-02-01T19:57:31Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((app) != null) app.appStop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8695/buggy-version/src.evaluation.generic-evaluation-app.src.org.artos.apps.Activator.java", "BodyUseAPI": [], "Fixed commit": "c28b72aa311f2971a5e9fe0b7e96f34de7ff271c", "Url": "https://api.github.com/repos/vladnikolov/arema", "Date": "2018-09-10T13:05:29Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (app == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8695/buggy-version/src.framework.src.arema.framework.Arema.java", "BodyUseAPI": [], "Fixed commit": "c28b72aa311f2971a5e9fe0b7e96f34de7ff271c", "Url": "https://api.github.com/repos/vladnikolov/arema", "Date": "2018-09-10T13:05:29Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fList[i].getName().equals(\"offer1.txt\")) { offerList.add(new de.hda.fbi.ds.ks.Offer(scan.nextLine())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2604/buggy-version/server.src.main.java.de.hda.fbi.ds.ks.ServerHandler.java", "BodyUseAPI": [], "Fixed commit": "168b8b1a92a39f4ac5492f0606026101dcc543d9", "Url": "https://api.github.com/repos/zigfrid100/ds17-18", "Date": "2018-01-14T16:46:48Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fList[i].getName().equals(\"offer2.txt\")) { offerList.add(new de.hda.fbi.ds.ks.Offer(scan.nextLine())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2604/buggy-version/server.src.main.java.de.hda.fbi.ds.ks.ServerHandler.java", "BodyUseAPI": [], "Fixed commit": "168b8b1a92a39f4ac5492f0606026101dcc543d9", "Url": "https://api.github.com/repos/zigfrid100/ds17-18", "Date": "2018-01-14T16:46:48Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fList[i].getName().equals(\"offerSpecial.txt\")) { specialOfferList.addOffer(scan.nextLine()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2604/buggy-version/server.src.main.java.de.hda.fbi.ds.ks.ServerHandler.java", "BodyUseAPI": [], "Fixed commit": "168b8b1a92a39f4ac5492f0606026101dcc543d9", "Url": "https://api.github.com/repos/zigfrid100/ds17-18", "Date": "2018-01-14T16:46:48Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.sahara.melanie.fortify_android.model.User.getInstance().getProgramCompletion()) != null) { trainingCompletion = (java.lang.Integer.toString(com.sahara.melanie.fortify_android.model.User.getInstance().getProgramCompletion())) + \"%\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7509/buggy-version/app.src.main.java.com.sahara.melanie.fortify_android.home.dashboard.DashboardGraphController.java", "BodyUseAPI": [], "Fixed commit": "47818fd2320f20068899fbac72f77434c4dfce9f", "Url": "https://api.github.com/repos/impactcollective/fortify_android", "Date": "2018-03-26T15:39:36Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPermissions) == null) { throw new java.lang.IllegalArgumentException(\"You should use permissions() method before use this.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1270/buggy-version/androidpermission.src.main.java.com.example.kevin.androidpermission.request.AbsPermissionRequest.java", "BodyUseAPI": [], "Fixed commit": "c159cbe3628ee1ded09263da3553c736a5fb79c3", "Url": "https://api.github.com/repos/yinkaiwen/AndroidPermissionUtils", "Date": "2018-02-07T01:51:16Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(com.classic.wages.utils.DataUtil.isEmpty(fileArray))) { for (java.io.File file : fileArray) { add(file); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2434/buggy-version/app.src.main.java.com.classic.wages.utils.FileSearch.java", "BodyUseAPI": [], "Fixed commit": "285ad6c8411f0b974e667aeada385253f1a07115", "Url": "https://api.github.com/repos/qyxxjd/Wages", "Date": "2018-07-04T05:29:40Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.co.reassured.reassuredmobileapp.AddCalendarEvent.findViewById(R.id.eventStart)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((EventStart.getText().toString().length()) < 10) { reason = \"Please enter a valid date.\\n Formats: \\n dd.mm.yyyy \\n dd-mm-yy \\n dd/mm/yyyy\"; }else if (((((!(EventStart.getText().toString().substring(2, 3).contains(\".\"))) || (!(EventStart.getText().toString().substring(5, 6).contains(\".\")))) && ((!(EventStart.getText().toString().substring(2, 3).contains(\"/\"))) || (!(EventStart.getText().toString().substring(5, 6).contains(\"/\"))))) && ((!(EventStart.getText().toString().substring(2, 3).contains(\"-\"))) || (!(EventStart.getText().toString().substring(5, 6).contains(\"-\"))))) && ((!(EventStart.getText().toString().substring(2, 3).contains(\".\"))) || (!(EventStart.getText().toString().substring(5, 6).contains(\".\"))))) { reason = \"Start date is not a valid date \\n Formats: \\n dd.mm.yyyy \\n dd-mm-yy \\n dd/mm/yyyy\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9284/buggy-version/app.src.main.java.uk.co.reassured.reassuredmobileapp.AddCalendarEvent.java", "BodyUseAPI": ["EventStart.getText().toString().substring(2, 3).contains(java.lang.String)", "EventStart.getText().toString().substring(2, 3).contains(java.lang.String)", "EventStart.getText().toString().substring(int,int)", "EventStart.getText().toString().substring(int,int)", "android.widget.EditText.getText()", "EventStart.getText().toString().substring(int,int)", "EventStart.getText().toString().substring(2, 3).contains(java.lang.String)", "EventStart.getText().toString()", "EventStart.getText().toString().substring(int,int)", "EventStart.getText().toString().substring(int,int)", "EventStart.getText().toString().substring(5, 6).contains(java.lang.String)", "EventStart.getText().toString()", "EventStart.getText().toString().substring(int,int)", "EventStart.getText().toString()", "android.widget.EditText.getText()", "EventStart.getText().toString()", "EventStart.getText().toString().substring(int,int)", "EventStart.getText().toString().substring(2, 3).contains(java.lang.String)", "EventStart.getText().toString()", "EventStart.getText().toString()", "EventStart.getText().toString()", "EventStart.getText().toString().substring(5, 6).contains(java.lang.String)", "android.widget.EditText.getText()", "android.widget.EditText.getText()", "EventStart.getText().toString()", "EventStart.getText().toString().substring(5, 6).contains(java.lang.String)", "android.widget.EditText.getText()", "android.widget.EditText.getText()", "EventStart.getText().toString().substring(5, 6).contains(java.lang.String)", "android.widget.EditText.getText()", "android.widget.EditText.getText()", "EventStart.getText().toString().substring(int,int)"], "Fixed commit": "19a262a971e298770792703ac8543e8345be031e", "Url": "https://api.github.com/repos/harvey-fletcher/ReassuredMobileApp", "Date": "2018-02-05T12:11:19Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showDebugInfo) { strDebugMsg = (((\"Evaluating \" + (iWord + 1)) + \" of \") + (m_WordPairs.length)) + \" word pairs\"; java.lang.System.out.println(strDebugMsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9227/buggy-version/HESML_Library.HESML.src.hesml.benchmarks.impl.BenchmarkSingleDatasetSimilarityValues.java", "BodyUseAPI": [], "Fixed commit": "58d365094a9ca0e38e55b8490216e752be6aa68a", "Url": "https://api.github.com/repos/jjlastra/HESML", "Date": "2018-01-28T20:13:43Z"},
{"Line": "=>1386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getType()) == (FunctionBookmark.FUNCTION)) { if ((p.getLine()) < lineno) { lineno = p.getLine(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/102/buggy-version/src.org.uecide.Sketch.java", "BodyUseAPI": ["org.uecide.FunctionBookmark.getLine()", "org.uecide.FunctionBookmark.getLine()"], "Fixed commit": "da980da956fe2b6355b70f63aed48619629bc130", "Url": "https://api.github.com/repos/UECIDE/UECIDE", "Date": "2018-10-27T22:49:48Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((newUrl.startsWith(\"https://\")) && ((newUrl.length()) == 8)) || ((newUrl.startsWith(\"http://\")) && ((newUrl.length()) == 7))) { buffer.append(\"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6077/buggy-version/spring-cloud-openfeign-core.src.main.java.org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.java", "BodyUseAPI": [], "Fixed commit": "d57cea265eedf94451d6824c5e6cbaa89a8cf549", "Url": "https://api.github.com/repos/spring-cloud/spring-cloud-openfeign", "Date": "2018-08-13T18:26:24Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["danbroid.busapp.ui.WebBrowser.getMainView()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (mainView != null) mainView.setRefreshing(refreshing);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8217/buggy-version/app.src.main.java.danbroid.busapp.ui.WebBrowser.java", "BodyUseAPI": ["danbroid.busapp.interfaces.MainView.setRefreshing(boolean)"], "Fixed commit": "36fe335088c6b01e1075686064cf4078e301803b", "Url": "https://api.github.com/repos/danbrough/busstoppa", "Date": "2018-02-23T05:07:26Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStepVideoPlayer) != null) { outState.putLong(pl.piotrskiba.bakingapp.StepDetailFragment.KEY_VIDEO_POSITION, mStepVideoPlayer.getCurrentPosition()); outState.putBoolean(pl.piotrskiba.bakingapp.StepDetailFragment.KEY_PLAY_WHEN_READY, mStepVideoPlayer.getPlayWhenReady()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8768/buggy-version/app.src.main.java.pl.piotrskiba.bakingapp.StepDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "bb406e334a1fe0c7dc75ce8b847ce649d1524765", "Url": "https://api.github.com/repos/PanGargamel/Udacity-Baking-App", "Date": "2018-07-16T15:05:36Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SessionDao.instance.getServiceClient().createTicketForUserTokenID(java.lang.String,net.whydah.sso.user.mappers.UserTokenMapper.fromUserTokenXml(userTokenXml).getUserTokenId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result) { redirectURI = ((redirectURI + (redirectURI.contains(\"&\") ? \"&\" : \"?\")) + \"userticket=\") + newTicket; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4848/buggy-version/src.main.java.net.whydah.sso.extensions.crmcustomer.CRMCustomerController.java", "BodyUseAPI": [], "Fixed commit": "2527f4262e856785db6a13a227e9a80a2ec22efb", "Url": "https://api.github.com/repos/Cantara/Whydah-SSOLoginWebApp", "Date": "2018-05-31T09:56:20Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(element.hasChanges())) { element.setState(XmlElement.State.CLEAN); }else { element.setState(XmlElement.State.TOUCHED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4732/buggy-version/src.main.java.net.robinfriedli.jxp.persist.XmlPersister.java", "BodyUseAPI": ["net.robinfriedli.jxp.api.XmlElement.setState(XmlElement.State.TOUCHED)", "net.robinfriedli.jxp.api.XmlElement.setState(XmlElement.State.CLEAN)"], "Fixed commit": "185c75d738f7f43517e43e064479277b46cd6b67", "Url": "https://api.github.com/repos/robinfriedli/JXP", "Date": "2018-08-24T18:04:12Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((outputFile.getParentFile()) != null) { outputFile.getParentFile().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6029/buggy-version/smooks-cartridges.javabean.src.main.java.org.milyn.javabean.gen.ConfigGenerator.java", "BodyUseAPI": ["java.io.File.getParentFile()", "java.io.File.mkdirs()"], "Fixed commit": "3171aba0ef98115cdf67c1463711da752617718a", "Url": "https://api.github.com/repos/smooks/smooks", "Date": "2018-10-27T14:50:32Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rule.containsKey(\"\\\\<\")) && (java.lang.Character.isDigit(thisToken.charAt(0)))) { processDigitTokens(contextTokens, '<', ((java.util.HashMap) (rule.get(\"\\\\<\"))), matchBegin, currentPosition, matches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/613/buggy-version/src.main.java.edu.utah.bmi.nlp.fastcontext.uima.UIMAContextRuleProcessor.java", "BodyUseAPI": ["java.util.HashMap.get(java.lang.String)", "edu.utah.bmi.nlp.fastcontext.uima.UIMAContextRuleProcessor.processDigitTokens(java.util.List<org.apache.uima.jcas.tcas.Annotation>,char,java.lang.Object,int,int,java.util.LinkedHashMap<java.lang.String, edu.utah.bmi.nlp.context.common.ConTextSpan>)"], "Fixed commit": "417cdf1c3d74c27836c178de9d9db4687c187ed0", "Url": "https://api.github.com/repos/jianlins/FastContext", "Date": "2018-07-09T18:53:40Z"},
{"Line": "=>548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (polygon) { coordinateString.append(xbPosArray[0].getStringValue()); }else { coordinateString.delete(((coordinateString.length()) - 2), coordinateString.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8607/buggy-version/coding.sos-v20.src.main.java.org.n52.sos.decode.GmlDecoderv321.java", "BodyUseAPI": [], "Fixed commit": "c59f9b93960065d02768bc8ffcb09314e40b19e5", "Url": "https://api.github.com/repos/CarstenHollmann/SOS", "Date": "2018-01-24T11:55:48Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.Dialog.getWindow()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (dialogWindow != null) { dialogWindow.setWindowAnimations(R.style.pickerview_dialogAnim); dialogWindow.setGravity(Gravity.CENTER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2252/buggy-version/pickerview.src.main.java.com.bigkoo.pickerview.view.BasePickerView.java", "BodyUseAPI": ["android.view.Window.setGravity(Gravity.CENTER)", "android.view.Window.setWindowAnimations(R.style.pickerview_dialogAnim)"], "Fixed commit": "78b63154caacd0bb4cca34991a546f99a6f3ef9c", "Url": "https://api.github.com/repos/Bigkoo/Android-PickerView", "Date": "2018-01-26T09:48:45Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shuffle) != null) { if (shuffle.equals(\"true\")) { java.util.Collections.shuffle(multipleChoiceCardList); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6269/buggy-version/app.src.main.java.org.liberty.android.fantastischmemo.ui.MCStudyActivity.java", "BodyUseAPI": [], "Fixed commit": "871d57b3b3f80b1399dd606400ccbe83194ead75", "Url": "https://api.github.com/repos/jameelbrochu/AnyMemo", "Date": "2018-04-06T15:03:12Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((host) != null) { return host; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1494/buggy-version/src.main.java.org.glagol_dsl.client.shell.command.MainCommand.java", "BodyUseAPI": [], "Fixed commit": "7a4eadb38d0323b9172ac66258d77b10b94e630c", "Url": "https://api.github.com/repos/glagol-dsl/glagol-dsl-client", "Date": "2018-05-21T10:22:00Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((port) != null) { return port; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1494/buggy-version/src.main.java.org.glagol_dsl.client.shell.command.MainCommand.java", "BodyUseAPI": [], "Fixed commit": "7a4eadb38d0323b9172ac66258d77b10b94e630c", "Url": "https://api.github.com/repos/glagol-dsl/glagol-dsl-client", "Date": "2018-05-21T10:22:00Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((editor) != null) editor.commit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9671/buggy-version/app.src.main.java.com.example.dali_bsf.spectrum.util.ApplicationsManager.java", "BodyUseAPI": [], "Fixed commit": "98a1edcea61c4e4846ac37ef40b428e704d3bac3", "Url": "https://api.github.com/repos/daliBsf/Spectrum", "Date": "2018-06-01T13:16:43Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(preference.getContext())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (preferences.equals(cat_defaults)) { onPreferenceChange(preference, java.util.Arrays.asList(R.array.cat_section_default_values, \"\")); }else onPreferenceChange(preference, getString(R.string.cat_sections_key));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2553/buggy-version/app.src.main.java.com.example.android.guardiannews.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "7f90f00606768e98595d014994580d0ca77ee00a", "Url": "https://api.github.com/repos/fruitcakej/GuardianNews", "Date": "2018-06-05T12:28:07Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.b3log.symphony.util.Symphonys.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(key.equals(request.getParameter(\"key\")))) { response.sendError(HttpServletResponse.SC_FORBIDDEN); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2452/buggy-version/src.main.java.org.b3log.symphony.processor.StatisticProcessor.java", "BodyUseAPI": [], "Fixed commit": "4803cd658d6bad6fb52dad9d1c1d53e09e8e9b72", "Url": "https://api.github.com/repos/b3log/symphony", "Date": "2018-04-04T09:11:00Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getPlayer().getWorld().dropItem(event.getPlayer().getLocation().clone().add(0, 1, 0),org.bukkit.inventory.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(item.isDead())) { net.johnbrooks.mh.events.Location fixedLocation = new net.johnbrooks.mh.events.Location(item.getLocation().getWorld(), ((item.getLocation().getBlockX()) + 0.5F), ((item.getLocation().getBlockY()) + 0.5F), ((item.getLocation().getBlockZ()) + 0.5F)); net.johnbrooks.mh.items.CaptureEgg.useSpawnItem(item.getItemStack(), fixedLocation); item.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/752/buggy-version/src.net.johnbrooks.mh.events.EventManager.java", "BodyUseAPI": ["item.getLocation().getWorld()", "item.getLocation().getBlockY()", "net.johnbrooks.mh.events.Item.getLocation()", "item.getLocation().getBlockZ()", "item.getLocation().getBlockX()", "net.johnbrooks.mh.events.Item.getItemStack()", "net.johnbrooks.mh.events.Item.getLocation()", "net.johnbrooks.mh.events.Item.getLocation()", "net.johnbrooks.mh.events.Item.getLocation()", "net.johnbrooks.mh.events.Item.remove()", "net.johnbrooks.mh.items.CaptureEgg.useSpawnItem(item.getItemStack(),net.johnbrooks.mh.events.Location)"], "Fixed commit": "c47b6564eb43ce55e13efd8872673008a726269b", "Url": "https://api.github.com/repos/WiseHollow/spigot-mobcapture", "Date": "2018-09-05T00:10:55Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prefs.getCamera().equalsIgnoreCase(PreferenceManager.BACK)) { android.graphics.Bitmap bmps = org.havenapp.main.sensors.media.ImageCodec.rotate(rawBitmap, 180, false); bmps.compress(Bitmap.CompressFormat.JPEG, 100, stream); }else { rawBitmap.compress(Bitmap.CompressFormat.JPEG, 100, stream); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3885/buggy-version/src.main.java.org.havenapp.main.sensors.motion.Preview.java", "BodyUseAPI": [], "Fixed commit": "69e7fc6f4717482b23acddfbeba271f83cc02a74", "Url": "https://api.github.com/repos/percy-g2/haven", "Date": "2018-01-17T03:47:48Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alicp.jetcache.CacheLoader<K, V>.load(K)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((v != null) || (config.isCacheNullValue())) { cache.PUT(key, v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/342/buggy-version/jetcache-core.src.main.java.com.alicp.jetcache.RefreshCache.java", "BodyUseAPI": ["com.alicp.jetcache.RefreshCache.RefreshTask.PUT(K,V)"], "Fixed commit": "d98b3576799e1603205d6952d8e8c4a249ad79d1", "Url": "https://api.github.com/repos/alibaba/jetcache", "Date": "2018-02-02T07:09:42Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(serverContext.getGameServer().isLocal())) { console.addLogger(this.rconLoggers.get(client.getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5866/buggy-version/src.seventh.server.ServerNetworkProtocol.java", "BodyUseAPI": [], "Fixed commit": "52a3148633d02e55c00751f3ce30511849bad8d9", "Url": "https://api.github.com/repos/tonysparks/seventh", "Date": "2018-03-14T03:23:23Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isOnline())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4925/buggy-version/app.src.main.java.green_minds.com.finalproject.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e9a691f219e89907120e7773bfa238dcddb84440", "Url": "https://api.github.com/repos/Green-Minds/FinalProject", "Date": "2018-08-07T01:42:27Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((head.next) == null) { LinkedListApp.Node temp = head; head = null; return temp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5161/buggy-version/LinkedList.LinkedListApp.java", "BodyUseAPI": [], "Fixed commit": "58923a4f4c35bf3a5df4502d5ec609c76f951fe2", "Url": "https://api.github.com/repos/wwkb123/DataStructurePractice", "Date": "2018-10-04T18:20:01Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.github.pashmentov96.androidapplication.StorageOfPersons.isGenerated)) { for (int i = 0; i < 5; ++i) { com.github.pashmentov96.androidapplication.StorageOfPersons.personList.add(new com.github.pashmentov96.androidapplication.Person((5 * i), (\"Max\" + (java.lang.String.valueOf(i))), \"Please, give me something\", R.drawable.kotiki)); com.github.pashmentov96.androidapplication.StorageOfPersons.personList.add(new com.github.pashmentov96.androidapplication.Person(((5 * i) + 1), (\"Vasya\" + (java.lang.String.valueOf(i))), \"I am very pretty :)\", R.drawable.kotiki1)); com.github.pashmentov96.androidapplication.StorageOfPersons.personList.add(new com.github.pashmentov96.androidapplication.Person(((5 * i) + 2), (\"Masha\" + (java.lang.String.valueOf(i))), \"Oh.. I very sad now\", R.drawable.kotiki2)); com.github.pashmentov96.androidapplication.StorageOfPersons.personList.add(new com.github.pashmentov96.androidapplication.Person(((5 * i) + 3), (\"Musya\" + (java.lang.String.valueOf(i))), \"I like boxes\", R.drawable.kotiki3)); com.github.pashmentov96.androidapplication.StorageOfPersons.personList.add(new com.github.pashmentov96.androidapplication.Person(((5 * i) + 4), (\"Boris\" + (java.lang.String.valueOf(i))), \"I like sleep\", R.drawable.kotiki4)); } com.github.pashmentov96.androidapplication.StorageOfPersons.isGenerated = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2959/buggy-version/app.src.main.java.com.github.pashmentov96.androidapplication.StorageOfPersons.java", "BodyUseAPI": [], "Fixed commit": "9803b499dd92826818f44c54b6d0ead83da5c09c", "Url": "https://api.github.com/repos/pashmentov96/Android-MIPT", "Date": "2018-10-02T16:24:22Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((elem_info.get_corr_result(std)) != null) { dividend += (elem_info.get_corr_result(std)) * (this.getSE(elem_info.get_secondary())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6245/buggy-version/src.system_utils.ElementCorrelationInfo.java", "BodyUseAPI": ["system_utils.CorrelationInfo.get_secondary()", "system_utils.ElementCorrelationInfo.getSE(elem_info.get_secondary())", "system_utils.CorrelationInfo.get_corr_result(java.lang.String)"], "Fixed commit": "2c49660d7f1ac24753ae9e3fa6fd0cd8ba2fdeb7", "Url": "https://api.github.com/repos/jackHay22/rock_analysis_interface", "Date": "2018-10-16T16:19:19Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isStarted) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4068/buggy-version/app.src.main.java.com.example.seamus.wordfox.RoundResults.RoundEndPresenter.java", "BodyUseAPI": [], "Fixed commit": "455d1fd6b47fed08bcba7bba21faf2f5d04374f9", "Url": "https://api.github.com/repos/seamus91g/WordFox", "Date": "2018-10-23T21:29:26Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((post.get(\"access_token\")) == null) || ((authorization.getIdentity()) == null)) { throw new ai.susi.server.api.aaa.APIException(400, \"Bad access token.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2225/buggy-version/src.ai.susi.server.api.aaa.LoginService.java", "BodyUseAPI": [], "Fixed commit": "a6f05c82aa94cefa96db4b99d58a8ff1786a38f5", "Url": "https://api.github.com/repos/Akshat-Jain/susi_server", "Date": "2018-07-18T03:46:56Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mController) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9247/buggy-version/browser.src.main.java.com.liskovsoft.browser.BrowserActivity.java", "BodyUseAPI": [], "Fixed commit": "dd14c11f76a08c727ad53bdf8f9424aa5b7a4219", "Url": "https://api.github.com/repos/yuliskov/SmartYouTubeTV", "Date": "2018-01-24T09:01:28Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(getResources().getString(R.string.datawedge_intent_key_source))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == decodedSource) { decodedSource = initiatingIntent.getStringExtra(getResources().getString(R.string.datawedge_intent_key_source_legacy)); decodedData = initiatingIntent.getStringExtra(getResources().getString(R.string.datawedge_intent_key_data_legacy)); decodedLabelType = initiatingIntent.getStringExtra(getResources().getString(R.string.datawedge_intent_key_label_type_legacy)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4191/buggy-version/app.src.main.java.com.darryncampbell.datawedgeintentexample1.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d05d55ddd6099df5a7f7c2092e3d69dd20e94c29", "Url": "https://api.github.com/repos/darryncampbell/DataWedge-Intent-Example-1", "Date": "2018-01-11T22:16:53Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (planet.contains(\"eris\")) name = \"planet.Eris\"; else if (planet.contains(\"pluto\")) name = \"planet.Pluto\"; else if (planet.contains(\"ceres\")) name = \"planet.Ceres\"; else if (planet.contains(\"kuiperbelt\")) name = \"planet.kuiperBelt\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2285/buggy-version/src.main.java.com.mjr.planetprogression.item.ResearchPaper.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "6e3c385ea9b65d14e82ec7e7314bef8a04a899b9", "Url": "https://api.github.com/repos/MJRLegends/Planet-Progression", "Date": "2018-03-25T18:07:28Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.tudelft.cs4160.trustchain_android.database.TrustChainDBHelper.getBlock(block.getPublicKey().toByteArray(),block.getSequenceNumber())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((dbBlock == null) || (!(dbBlock.toString().equals(block.toString())))) { java.lang.System.out.println(\"Block inserted\"); dbHelper.insertInDB(block); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1689/buggy-version/app.src.main.java.nl.tudelft.cs4160.trustchain_android.connection.Communication.java", "BodyUseAPI": ["nl.tudelft.cs4160.trustchain_android.database.TrustChainDBHelper.insertInDB(nl.tudelft.cs4160.trustchain_android.block.TrustChainBlock)"], "Fixed commit": "7144579f59506f18c9c881418a5079691ec32913", "Url": "https://api.github.com/repos/blockchain-storage/app", "Date": "2018-01-22T17:49:55Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) { dir.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7773/buggy-version/src.main.java.com.outlook.controller.SearchController.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "765d6036e3ac9fe540561525b72f216ad8c68f3e", "Url": "https://api.github.com/repos/Java-Programming-101/OutlookAnalyzer", "Date": "2018-06-07T00:15:34Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (mathType == (SimpleMath.MathType.MINUS)) { shouldMinus = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/526/buggy-version/src.main.java.com.wynprice.calculator.types.Expression.java", "BodyUseAPI": [], "Fixed commit": "b7a26d0a994c13c9d2b361d6bc6552b517d790b9", "Url": "https://api.github.com/repos/Wyn-Price/Calculator", "Date": "2018-09-12T22:03:17Z"},
{"Line": "=>1216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getSelectedArmy().getKingdom().isProtectedByFaith()) { getSelectedArmy().getKingdom().setTarget((-1)); }else { getSelectedArmy().getKingdom().setTarget(Kingdom.TARGET_BATTLE); getSelectedArmy().getKingdom().setTouchX(getSelectedArmy().getKingdom().getTerrainList().get(getSelectedArmy().getKingdom().getState()).getAbsoluteX()); getSelectedArmy().getKingdom().setTouchY(getSelectedArmy().getKingdom().getTerrainList().get(getSelectedArmy().getKingdom().getState()).getAbsoluteY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2870/buggy-version/strategy.src.main.java.com.luis.strategy.game.GameManager.java", "BodyUseAPI": [], "Fixed commit": "45e127cb6f404ccb1256915f553fd58d17fb299a", "Url": "https://api.github.com/repos/LuisValdesFrances/TheKingIsDead", "Date": "2018-08-22T17:51:30Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m_model.UNDER_WATER) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2461/buggy-version/ricm3.game.game.whaler.edu.ricm3.game.whaler.Entities.Oil.java", "BodyUseAPI": [], "Fixed commit": "d778f73e10fbcfa66b8eedc0e577b4dedabad541", "Url": "https://api.github.com/repos/hughnatt/projet-pla", "Date": "2018-06-13T13:57:05Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isGuiding) { startDirection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6948/buggy-version/app.src.main.java.com.example.gavv.my_groww_project.HelperMapsActivity.java", "BodyUseAPI": [], "Fixed commit": "cd2e245d07b4c98253ba2dfe132ec73587e44acd", "Url": "https://api.github.com/repos/gcipta/GROWW_Chat_Feature_GCW", "Date": "2018-10-02T01:08:12Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.sensor.getType()) == (android.hardware.Sensor.TYPE_PROXIMITY)) { if ((event.values[0]) == 0) { makeHigh(); IS_MEDIUM = false; IS_SILENT = false; IS_HIGH = true; }else { if ((((Z_AXIX) < 0) && ((Y_AXIX) > (-5))) && ((IS_SILENT) == false)) { makeSilent(); IS_HIGH = false; IS_MEDIUM = false; IS_SILENT = true; }else if (((Y_AXIX) < (-5)) && ((IS_MEDIUM) == false)) { IS_HIGH = false; IS_SILENT = false; IS_MEDIUM = true; makeMediam(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3740/buggy-version/app.src.main.java.com.example.musfiq.servicedemo.MyService.java", "BodyUseAPI": [], "Fixed commit": "7d399d5ef3f747f39db7cf405886546cef707024", "Url": "https://api.github.com/repos/smrahman0009/ServiceDemo", "Date": "2018-08-11T05:31:47Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.ss.usermodel.Row.getLastCellNum()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (length < 0) { return new java.util.ArrayList<>(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1148/buggy-version/hutool-poi.src.main.java.cn.hutool.poi.excel.InternalExcelUtil.java", "BodyUseAPI": [], "Fixed commit": "f253500f7c03e82a8926a984015517f5f35ac229", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2018-01-09T17:52:46Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null == rowList) { rowList = new java.util.ArrayList<>(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1148/buggy-version/hutool-poi.src.main.java.cn.hutool.poi.excel.ExcelReader.java", "BodyUseAPI": [], "Fixed commit": "f253500f7c03e82a8926a984015517f5f35ac229", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2018-01-09T17:52:46Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.slg.leoapp.utility.Utils.getController().getSchwarzesBrettActivity()) != null) de.slg.leoapp.utility.Utils.getController().getSchwarzesBrettActivity().refreshUI();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1594/buggy-version/LeoApp.app.src.main.java.de.slg.schwarzes_brett.task.SyncNewsTask.java", "BodyUseAPI": [], "Fixed commit": "a6d01f61128ae7ac51a5074142e58081091dccf5", "Url": "https://api.github.com/repos/Leo-App/android", "Date": "2018-01-20T10:24:01Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.slg.leoapp.utility.Utils.getController().getSurveyActivity()) != null) de.slg.leoapp.utility.Utils.getController().getSurveyActivity().refreshUI();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1594/buggy-version/LeoApp.app.src.main.java.de.slg.umfragen.task.SyncSurveyTask.java", "BodyUseAPI": [], "Fixed commit": "a6d01f61128ae7ac51a5074142e58081091dccf5", "Url": "https://api.github.com/repos/Leo-App/android", "Date": "2018-01-20T10:24:01Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLoading) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9515/buggy-version/app.src.main.java.com.mikehelland.omgtechnogauntlet.OMGSoundPool.java", "BodyUseAPI": [], "Fixed commit": "bc108305930d959458573dc422e632b285f2610a", "Url": "https://api.github.com/repos/mikehelland/techno-gauntlet", "Date": "2018-01-06T00:45:43Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((b.getMCI().getSize()) != 0) && (!(b.getMCI().hasCell(cur)))) { java.lang.System.out.println(b.getMCI().getSize()); b.getMCI().removeAll(); }else if (b.getMCI().hasCell(cur)) { b.getMCI().execute(); b.dropAndFill(); b.makeMove(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4010/buggy-version/src.gamemodel.Match_Strat_Click.java", "BodyUseAPI": ["b.getMCI().execute()", "gamemodel.Board.makeMove()", "java.io.PrintStream.println(b.getMCI().getSize())", "b.getMCI().removeAll()", "gamemodel.Board.getMCI()", "gamemodel.Board.getMCI()", "b.getMCI().getSize()", "b.getMCI().hasCell(gamemodel.Cell)", "gamemodel.Board.getMCI()", "gamemodel.Board.dropAndFill()", "gamemodel.Board.getMCI()"], "Fixed commit": "42ac0b1b0ac4810f1e9a25c9faedc9a46852384e", "Url": "https://api.github.com/repos/Boy-Blu/Match-3", "Date": "2018-09-16T23:02:28Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(datas.containsKey(type))) { android.arch.lifecycle.MutableLiveData<java.util.List<com.cr.gankio.data.GankNews>> data = new android.arch.lifecycle.MutableLiveData(); datas.put(type, data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/416/buggy-version/app.src.main.java.com.cr.gankio.data.network.GankNewsNetworkDataSource.java", "BodyUseAPI": ["java.util.Map<java.lang.String, android.arch.lifecycle.MutableLiveData<java.util.List<com.cr.gankio.data.GankNews>>>.put(java.lang.String,android.arch.lifecycle.MutableLiveData<java.util.List<com.cr.gankio.data.GankNews>>)"], "Fixed commit": "39ed0c4bde3cbc128f65410cae5e7eb41b78ba1b", "Url": "https://api.github.com/repos/Cr321/GankIO", "Date": "2018-01-24T06:38:11Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args) == null) args = new java.lang.String[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6136/buggy-version/buildSrc.orchidMavenPlugin.src.main.java.com.eden.orchid.maven.OrchidGenerateMainMojo.java", "BodyUseAPI": [], "Fixed commit": "bc3c60a5ea68edb495e5c107b02527812350b709", "Url": "https://api.github.com/repos/JavaEden/Orchid", "Date": "2018-10-31T01:21:15Z"},
{"Line": "=>646", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.darkphoenixs.kafka.pool.KafkaConsumer<K, V>.poll(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(records.isEmpty())) adapter.messageAdapter(records);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5314/buggy-version/src.main.java.org.darkphoenixs.kafka.pool.KafkaMessageNewReceiverPool.java", "BodyUseAPI": ["org.darkphoenixs.kafka.pool.KafkaMessageAdapter<?, ?>.messageAdapter(org.darkphoenixs.kafka.pool.ConsumerRecords<K, V>)"], "Fixed commit": "64d43dc3b492382bf101a09a9ddc3ea91d841c02", "Url": "https://api.github.com/repos/DarkPhoenixs/message-queue-client-framework", "Date": "2018-09-07T03:30:29Z"},
{"Line": "=>689", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.darkphoenixs.kafka.pool.KafkaConsumer<K, V>.poll(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(records.isEmpty())) blockingQueue.put(records);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5314/buggy-version/src.main.java.org.darkphoenixs.kafka.pool.KafkaMessageNewReceiverPool.java", "BodyUseAPI": ["java.util.concurrent.BlockingQueue<org.darkphoenixs.kafka.pool.ConsumerRecords<K, V>>.put(org.darkphoenixs.kafka.pool.ConsumerRecords<K, V>)"], "Fixed commit": "64d43dc3b492382bf101a09a9ddc3ea91d841c02", "Url": "https://api.github.com/repos/DarkPhoenixs/message-queue-client-framework", "Date": "2018-09-07T03:30:29Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (somme == null) somme = cdt - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4527/buggy-version/src.agent.planningagent.ValueIterationAgent.java", "BodyUseAPI": [], "Fixed commit": "d2d1cff76443436d45a5d559fedafa7f57f126c4", "Url": "https://api.github.com/repos/OceaneCsn/TP_MDP", "Date": "2018-10-26T17:43:04Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isShowing())) { setTranslationY((-(mHeight))); setAlpha(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/487/buggy-version/minibar.src.main.java.com.mayurrokade.minibar.MinibarView.java", "BodyUseAPI": [], "Fixed commit": "4e7a9c05eb72390781cc3d33cc68004660156ee1", "Url": "https://api.github.com/repos/mayuroks/minibar", "Date": "2018-07-16T19:16:07Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (parent_comment_id != null) { parentComment = commentRepositroy.getOne(java.lang.Long.parseLong(parent_comment_id)); comment.setComment(parentComment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2591/buggy-version/Springboot-In-Practice.springboot-multi-table.src.main.java.springboot.web.api.CommentApi.java", "BodyUseAPI": ["springboot.repositroy.CommentRepositroy.getOne(long)", "java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "94c7efc237a363d41a622f31481c97791558db3d", "Url": "https://api.github.com/repos/Mr-LiuDC/Indulge-In-Java", "Date": "2018-03-13T13:39:41Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<org.sahaj.hotelautomation.models.corridors.Corridor, org.sahaj.hotelautomation.models.corridors.Corridor>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (corridorAlternate != null) corridorAlternate.getAirConditioner().turnOn();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2409/buggy-version/src.main.java.org.sahaj.hotelautomation.crons.RevertCron.java", "BodyUseAPI": ["corridorAlternate.getAirConditioner().turnOn()", "org.sahaj.hotelautomation.models.corridors.Corridor.getAirConditioner()"], "Fixed commit": "239936354a2112b481e5e20a1e93405be0abd9f1", "Url": "https://api.github.com/repos/akjoshi123/HotelAutomation", "Date": "2018-06-17T19:54:16Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xcc.Compilation.executeCommand(xcc.Job)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (t != 0) failureCmd = ((xcc.Job.Command) (j));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5606/buggy-version/java.xcc.Compilation.java", "BodyUseAPI": [], "Fixed commit": "a9c8dac39202ae235962789eef28747602a9e011", "Url": "https://api.github.com/repos/JianpingZeng/xcc", "Date": "2018-06-30T06:45:27Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Integer.valueOf(hour)) == 0) { hour = \"12\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/864/buggy-version/app.src.main.java.com.violenthoboenterprises.taskkiller.MyAdapter.java", "BodyUseAPI": [], "Fixed commit": "963b347d4419f74afe84b04d6e35880c567c6f14", "Url": "https://api.github.com/repos/charliemcg/TaskKillerV2", "Date": "2018-07-10T07:44:18Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((busStop.queueLength()) > 0) { addPassenger(busStop.removePersonFromQueue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2379/buggy-version/src.main.java.Bus.java", "BodyUseAPI": ["Bus.addPassenger(busStop.removePersonFromQueue())", "BusStop.removePersonFromQueue()"], "Fixed commit": "a0838dd9f9cec6738e7f4323a511540273f3a521", "Url": "https://api.github.com/repos/AFed29/BusLab", "Date": "2018-03-06T11:37:35Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Factory.TowerFactory.createTower(towerData.getKey(),int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tower == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6044/buggy-version/TowerDefence.src.Player.java", "BodyUseAPI": [], "Fixed commit": "20b66d9df263d1838a218aa57119f1220ca46ca9", "Url": "https://api.github.com/repos/SharifAIChallenge/AIC18-Server", "Date": "2018-03-07T12:24:55Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(availableRange.containsNow())) { throw new org.springframework.extensions.webscripts.WebScriptException(javax.servlet.http.HttpServletResponse.SC_NOT_FOUND, \"The requested document was not available, outside of range.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3364/buggy-version/platform-mellanarkiv.src.main.java.se.vgregion.alfresco.mellanarkiv.platform.webscripts.RetrieveDocument.java", "BodyUseAPI": [], "Fixed commit": "e469a404eb6823395e5c5d51f538caa02e90a8e4", "Url": "https://api.github.com/repos/Vastra-Gotalandsregionen/alfresco-mellanarkiv", "Date": "2018-05-31T10:56:32Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.vgregion.alfresco.mellanarkiv.platform.webscripts.RetrieveDocument.getProperty(org.alfresco.service.cmr.repository.NodeRef,VgrMaModel.PROP_PUBLIC_INDEX_AVAILABLE_FROM)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dateFrom == null) { throw new org.springframework.extensions.webscripts.WebScriptException(javax.servlet.http.HttpServletResponse.SC_NOT_FOUND, \"The requested document was not available.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3364/buggy-version/platform-mellanarkiv.src.main.java.se.vgregion.alfresco.mellanarkiv.platform.webscripts.RetrieveDocument.java", "BodyUseAPI": [], "Fixed commit": "e469a404eb6823395e5c5d51f538caa02e90a8e4", "Url": "https://api.github.com/repos/Vastra-Gotalandsregionen/alfresco-mellanarkiv", "Date": "2018-05-31T10:56:32Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (box.isCompletelyFilled()) return isVecInsideBox(vec.x, vec.y, vec.z);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9823/buggy-version/src.main.java.com.creativemd.littletiles.common.tiles.vec.advanced.LittleTileSlicedOrdinaryBox.java", "BodyUseAPI": [], "Fixed commit": "72fc4eaf11c6082bf7656c6465f125377e28568d", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2018-03-05T15:21:31Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p_type < 0) || (p_subtype < 0)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8169/buggy-version/core.MessageDirectory.java", "BodyUseAPI": [], "Fixed commit": "56fcaf92785a2eb913ddad7b83b9f3f6305f5331", "Url": "https://api.github.com/repos/hhu-bsinfo/dxnet-src", "Date": "2018-02-14T15:18:11Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lexer.token()) == (com.alibaba.druid.sql.parser.Token.LPAREN)) { com.alibaba.druid.sql.dialect.postgresql.parser.SQLIdentifierExpr array = new com.alibaba.druid.sql.dialect.postgresql.parser.SQLIdentifierExpr(ident); return this.methodRest(array, true); }else { com.alibaba.druid.sql.dialect.postgresql.parser.SQLArrayExpr array = new com.alibaba.druid.sql.dialect.postgresql.parser.SQLArrayExpr(); array.setExpr(new com.alibaba.druid.sql.dialect.postgresql.parser.SQLIdentifierExpr(ident)); accept(Token.LBRACKET); this.exprList(array.getValues(), array); accept(Token.RBRACKET); return primaryRest(array); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/389/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.postgresql.parser.PGExprParser.java", "BodyUseAPI": [], "Fixed commit": "a7c8c933071aaec70a0137ede5e63d23d28d5255", "Url": "https://api.github.com/repos/FlakyTestDetection/druid", "Date": "2018-01-24T13:17:32Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((method.getModifiers()) & (java.lang.reflect.Modifier.PUBLIC)) == 0) || (method.isBridge())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2885/buggy-version/src.main.java.org.springframework.classify.util.MethodInvokerUtils.java", "BodyUseAPI": [], "Fixed commit": "dfd4997531d4f9db68382209034c01fde80bf258", "Url": "https://api.github.com/repos/bountych/spring-retry", "Date": "2015-04-02T05:40:53Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.JarURLConnection.getEntryName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(jarConnectionEntryName.endsWith(\"/\"))) { jarConnectionEntryName += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5501/buggy-version/src.main.java.net.sourceforge.lept4j.util.LoadLibs.java", "BodyUseAPI": [], "Fixed commit": "7443373c03e79848cf25385450d86673380ad34b", "Url": "https://api.github.com/repos/nguyenq/lept4j", "Date": "2018-05-02T23:48:46Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p.follow()) == 1) tuolaji.Main.moneyPool += 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8042/buggy-version/tuolaji.Main.java", "BodyUseAPI": [], "Fixed commit": "62f76b33b85b8ea7a623e677d7a520332ddb2e5e", "Url": "https://api.github.com/repos/into233/games", "Date": "2018-08-13T20:58:01Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (normalsBuffer != null) { org.lwjgl.system.MemoryUtil.memFree(normalsBuffer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8349/buggy-version/src.main.java.com.zcking.furyengine.rendering.Mesh.java", "BodyUseAPI": [], "Fixed commit": "e25cc1a0772c5a24b1516af539823b3249fd63c6", "Url": "https://api.github.com/repos/zcking/fury-engine", "Date": "2018-02-26T02:25:01Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (appId == null) { appId = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9643/buggy-version/src.main.java.org.aerogear.plugin.intellij.mobile.services.configuration.ProjectConfiguration.java", "BodyUseAPI": [], "Fixed commit": "cb151d101f805a02f61bf74df4c547c28d936352", "Url": "https://api.github.com/repos/aerogear/aerogear-mobile-intellij-plugin", "Date": "2018-04-13T13:03:41Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (configuration.get(\"mapreduce.job.inputformat.class\").endsWith(\"DBInputFormat\")) { checkArgument(((configuration.get(DBConfiguration.INPUT_ORDER_BY_PROPERTY)) != null), ((\"Configuration must contain \\\"\" + (org.apache.hadoop.mapreduce.lib.db.DBConfiguration.INPUT_ORDER_BY_PROPERTY)) + \"\\\" when using DBInputFormat\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7909/buggy-version/sdks.java.io.hadoop-input-format.src.main.java.org.apache.beam.sdk.io.hadoop.inputformat.HadoopInputFormatIO.java", "BodyUseAPI": ["org.apache.beam.sdk.io.hadoop.inputformat.HadoopInputFormatIO.Read<K, V>.checkArgument(((configuration.get(DBConfiguration.INPUT_ORDER_BY_PROPERTY)) != null),((\"Configuration must contain \\\"\" + (org.apache.hadoop.mapreduce.lib.db.DBConfiguration.INPUT_ORDER_BY_PROPERTY)) + \"\\\" when using DBInputFormat\"))", "org.apache.hadoop.conf.Configuration.get(DBConfiguration.INPUT_ORDER_BY_PROPERTY)"], "Fixed commit": "cd81d001a6e1e16057f1f8384bb83f2e40758970", "Url": "https://api.github.com/repos/apilloud/beam", "Date": "2018-04-18T14:42:24Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.seeu.darkside.rs.MessageService.createUserMessage(java.lang.Long,com.seeu.darkside.rs.NewMessage<com.seeu.darkside.user.User>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(userId.equals(completeMessageDto.getOwner().getId()))) { messagingTemplate.convertAndSend((\"/topic/user/\" + (completeMessageDto.getOwner().getId())), completeMessageDto); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8865/buggy-version/seeu-message.src.main.java.com.seeu.darkside.rs.RealTimeMessageController.java", "BodyUseAPI": ["completeMessageDto.getOwner().getId()", "com.seeu.darkside.rs.CompleteMessageDto<com.seeu.darkside.user.User>.getOwner()", "org.springframework.messaging.simp.SimpMessageSendingOperations.convertAndSend((\"/topic/user/\" + (completeMessageDto.getOwner().getId())),com.seeu.darkside.rs.CompleteMessageDto<com.seeu.darkside.user.User>)"], "Fixed commit": "62bce27ae3066aadf67a2b68f6b96d5f3e8604c3", "Url": "https://api.github.com/repos/SeeU-Team/seeu-project", "Date": "2018-07-10T11:11:22Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (iDay > 29) { if (toLast == 1) day = \"L\"; else day = \"28\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1578/buggy-version/kuyun-eam.kuyun-eam-common.src.main.java.com.kuyun.eam.util.BaseJob.java", "BodyUseAPI": [], "Fixed commit": "cfd65b69ac5e3723946933990ce32c2883cdc515", "Url": "https://api.github.com/repos/bobshi2005/kuyun", "Date": "2018-02-26T08:52:06Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.util.Objects.nonNull(obj)) { java.util.List<com.hiekn.kse.bean.PostBean> indexTopData = ((java.util.List<com.hiekn.kse.bean.PostBean>) (obj)); if ((postBean.getPageSize()) < ((postBeanList.size()) + (indexTopData.size()))) { postBeanList = postBeanList.subList(0, ((postBean.getPageSize()) - (indexTopData.size()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/330/buggy-version/src.main.java.com.hiekn.kse.service.impl.PostServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c4047770a5adf0402a17a1b472474f47841f04d3", "Url": "https://api.github.com/repos/kse-music/boot", "Date": "2018-07-17T09:03:45Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pasteToFileWin) { output.println(\"window.location.href='/webfilesys/servlet?command=listFiles';\"); }else { output.println(((\"window.location.href='/webfilesys/servlet?command=exp&expand=\" + (de.webfilesys.util.UTF8URLEncoder.encode(actPath))) + \"';\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/782/buggy-version/src.main.java.de.webfilesys.gui.user.ClipboardPasteRequestHandler.java", "BodyUseAPI": [], "Fixed commit": "45013c294c4aa515317ce3240fe97acee5d60355", "Url": "https://api.github.com/repos/fhoehnel/webfilesys", "Date": "2018-01-02T13:55:06Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tech.bison.trainee2017.chess.Chessboard.getSquareOfKing(tech.bison.trainee2017.chess.pieces.Piece.Color)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (squareOfKing == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3420/buggy-version/Bi-Chess.src.tech.bison.trainee2017.chess.Move.java", "BodyUseAPI": [], "Fixed commit": "809ad7975a3ed4a4b757a9e8915b4cb78c4d6e07", "Url": "https://api.github.com/repos/linomeyer/trainee2017", "Date": "2018-06-06T12:56:14Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((moves.size()) != 0) { return moves.get(((moves.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3420/buggy-version/Bi-Chess.src.tech.bison.trainee2017.chess.Game.java", "BodyUseAPI": ["java.util.ArrayList<tech.bison.trainee2017.chess.Move>.size()", "java.util.ArrayList<tech.bison.trainee2017.chess.Move>.get(((moves.size()) - 1))"], "Fixed commit": "809ad7975a3ed4a4b757a9e8915b4cb78c4d6e07", "Url": "https://api.github.com/repos/linomeyer/trainee2017", "Date": "2018-06-06T12:56:14Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isStopRequested()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7454/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.AutoOPs.Auto_Blue_Left.java", "BodyUseAPI": [], "Fixed commit": "84ec602871b0aef60445dbc3a81719398816fee9", "Url": "https://api.github.com/repos/vhundef/KTM_FTC-2017-2018", "Date": "2018-03-11T20:56:55Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isStopRequested()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7454/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.AutoOPs.Auto_Blue_Left.java", "BodyUseAPI": [], "Fixed commit": "84ec602871b0aef60445dbc3a81719398816fee9", "Url": "https://api.github.com/repos/vhundef/KTM_FTC-2017-2018", "Date": "2018-03-11T20:56:55Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((watcher) != null) { watcher.getAntiDupMergeCounter().incrementAndGet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1522/buggy-version/sort-tool.src.main.java.com.saturn.sort.merge.FileMerger.java", "BodyUseAPI": [], "Fixed commit": "535d1bf80d5efb07876eeb195bf60ab6b2337e87", "Url": "https://api.github.com/repos/Tbdgithub/nettylab", "Date": "2018-03-01T03:21:25Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((watcher) != null) { watcher.getMergeCompareCounter().incrementAndGet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1522/buggy-version/sort-tool.src.main.java.com.saturn.sort.merge.FileMerger.java", "BodyUseAPI": [], "Fixed commit": "535d1bf80d5efb07876eeb195bf60ab6b2337e87", "Url": "https://api.github.com/repos/Tbdgithub/nettylab", "Date": "2018-03-01T03:21:25Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.forty11.web.Url.getFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fileName.length()) < 3) { fileName += fileName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4106/buggy-version/src.main.java.io.forty11.web.Web.java", "BodyUseAPI": [], "Fixed commit": "7c7533b15a32ef880c6c042bfb8fc1363f7f290a", "Url": "https://api.github.com/repos/wellsb1/fort_w", "Date": "2018-05-14T16:31:47Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isAdded())) || ((getActivity()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8060/buggy-version/app.src.main.java.com.appian.manutdvietnam.app.match.lineups.LineupsFragment.java", "BodyUseAPI": [], "Fixed commit": "e1b5a947ceccb2a611f146d577a4e93c597da3da", "Url": "https://api.github.com/repos/haipv-ptit/Android_ManUtdVN", "Date": "2018-03-28T12:22:21Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (os.contains(\"win\")) { java.awt.Desktop.getDesktop().browse(uri); }else if (((os.contains(\"nix\")) || (os.contains(\"nux\"))) || ((os.indexOf(\"aix\")) > 0)) if ((java.lang.Runtime.getRuntime().exec(new java.lang.String[]{ \"which\", \"xdg-open\" }).getInputStream().read()) != (-1)) { java.lang.Runtime.getRuntime().exec(new java.lang.String[]{ \"xdg-open\", org.aion.gui.controller.HeaderPaneControls.AION_URL }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4975/buggy-version/modGui.src.org.aion.gui.controller.HeaderPaneControls.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "c5f6e33bbc7c3b7eecf295333d7ef1cd9d257248", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-07-31T17:59:39Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fff.ingood.global.TagManager.getInstance().makeTagsInLayout(android.widget.RelativeLayout,java.lang.String[],int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (iShowTags == 0) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2380/buggy-version/app.src.main.java.com.fff.ingood.activity.IgActivityDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "e866275a3aff888d57ece0f77c47c756e568a953", "Url": "https://api.github.com/repos/elminsterii/IngoodClientAndroid", "Date": "2018-06-30T08:38:19Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isValid) { com.thisamateur.beans.JarLine tempJar = new com.thisamateur.beans.JarLine(rawLine); if (!(\"jar\".equalsIgnoreCase(tempJar.getFileType()))) { continue; } result.add(new com.thisamateur.beans.JarLine(rawLine)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1670/buggy-version/src.main.java.com.thisamateur.beans.DefaultRawLineParser.java", "BodyUseAPI": [], "Fixed commit": "ca3e64521bd5ae14aeaf3c6b0fe4374d1afeaeca", "Url": "https://api.github.com/repos/thisAmateur/maven-dependency-classifier", "Date": "2018-03-07T09:46:07Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["classes.Piece.getRange()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((board.getPieceAt(legalMoves[i])) != null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1352/buggy-version/src.classes.Piece.java", "BodyUseAPI": [], "Fixed commit": "0bf283f8aca23d79b251ff1027a580c43b704b74", "Url": "https://api.github.com/repos/TimVanDyke/Chess", "Date": "2018-02-08T19:11:35Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["classes.Board.getPieceAt(classes.Location)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (capture != null) board.capture(capture);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1352/buggy-version/src.classes.Main.java", "BodyUseAPI": ["classes.Board.capture(classes.Piece)"], "Fixed commit": "0bf283f8aca23d79b251ff1027a580c43b704b74", "Url": "https://api.github.com/repos/TimVanDyke/Chess", "Date": "2018-02-08T19:11:35Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mNameEditText.getText().toString().trim()", "mBreedEditText.getText().toString().trim()", "mWeightEditText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((android.text.TextUtils.isEmpty(petName)) || (android.text.TextUtils.isEmpty(petBreed))) || (android.text.TextUtils.isEmpty(petWeightString))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1694/buggy-version/app.src.main.java.com.example.android.pets.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "14de84f2b89750211e9c965841075b970d7741d1", "Url": "https://api.github.com/repos/voiceinthedark/ud845-Pets", "Date": "2018-07-29T09:15:47Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((valueKeyMap.get(value)) == null) { paymentMethod.setVisible(false); anotherPaymentMethodPanel.setVisible(true); anotherPaymentMethod.setValue(value); }else { paymentMethod.setValue(valueKeyMap.get(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/370/buggy-version/src.main.java.org.iabako.client.ui.layout.widget.payment.PaymentMethodField.java", "BodyUseAPI": ["org.iabako.client.ui.layout.field.InputText.setValue(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Long>.get(java.lang.String)", "org.iabako.client.ui.layout.field.SelectList.setValue(java.lang.Long)"], "Fixed commit": "88ad8fe11db379732879533a9e5ae5b8714cd957", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2018-04-02T09:26:23Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.Integer>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (secItemHM != null) { count = secItemHM.get(secValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2017/buggy-version/src.com.voc.api.industry.CrossRatio.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Fixed commit": "fb41c3b3bb86d292726c64ef8d6adcf716e6fe60", "Url": "https://api.github.com/repos/ideasiii/voc", "Date": "2018-10-31T06:57:09Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (objects != null) { for (T object : objects) { if (object != null) { this.items.add(object); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1929/buggy-version/src.main.java.me.pr0crustes.frontend.gui.classes.elements.ListViewManager.java", "BodyUseAPI": [], "Fixed commit": "d7b5087b0e01ebcc70ae31dd77058529abd722cd", "Url": "https://api.github.com/repos/pr0crustes/PDFToolHelper", "Date": "2018-10-07T15:58:42Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((((key.equalsIgnoreCase(\"pageSize\")) || (key.equalsIgnoreCase(\"page\"))) || (key.equalsIgnoreCase(\"sortBy\"))) || (key.equalsIgnoreCase(\"sortOrder\"))) || (key.equalsIgnoreCase(\"query\"))) || (key.equalsIgnoreCase(\"limit\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4471/buggy-version/src.main.java.uk.ac.ebi.biostudies.controller.Search.java", "BodyUseAPI": [], "Fixed commit": "705863292f38ae7a10055f0015641fbb6dba974a", "Url": "https://api.github.com/repos/EBIBioStudies/ribs", "Date": "2018-09-03T13:34:38Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedFields != null) && (!(selectedFields.has(\"type\")))) { expandedQuery = excludeProjects(expandedQuery); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4471/buggy-version/src.main.java.uk.ac.ebi.biostudies.service.impl.QueryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "705863292f38ae7a10055f0015641fbb6dba974a", "Url": "https://api.github.com/repos/EBIBioStudies/ribs", "Date": "2018-09-03T13:34:38Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dataPacket.getTextData().getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((temp.length()) < 20) { holder.description.setText(dataPacket.getTextData().getData()); }else { holder.description.setText(((dataPacket.getTextData().getData().substring(0, 18)) + \"...\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2449/buggy-version/SESHealth.app.src.main.java.yourteamnumber.seshealthpatient.Model.DataPacket.Models.DataPacketAdapter.java", "BodyUseAPI": [], "Fixed commit": "68abded6c1b97e405ec7eada7aadd867493cc0a5", "Url": "https://api.github.com/repos/nullpointertong/Software-Engineering-Studio-1B-Group-6-", "Date": "2018-09-02T08:16:31Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Historie.size()) != 0) { getConnections(Historie.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8507/buggy-version/SmartRideSkeleton.app.src.main.java.com.example.d064713.smartrideskeleton.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "com.example.d064713.smartrideskeleton.MainActivity.getConnections(java.lang.String)"], "Fixed commit": "5b69e8905b382bc8214a100ce12a2cd9653b65e9", "Url": "https://api.github.com/repos/theCap1/SmartRide", "Date": "2018-06-12T18:29:12Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((date.length()) != 8) { throw new java.security.InvalidParameterException(\"Invalid input. Please double check.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9082/buggy-version/src.com.makebono.algorithms.astronomy.doomsdayrule.WeekDaysCalculatorImpl.java", "BodyUseAPI": [], "Fixed commit": "adccf23aecd7055e203d5373469228a2d7991b0b", "Url": "https://api.github.com/repos/makebono/Algorithms", "Date": "2018-01-30T06:51:28Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (agent.has(\"id\")) rider_id = java.lang.String.valueOf(agent.get(\"id\")); else { shippo.sync.tookan.entitymanager.RiderManager riderManager = new shippo.sync.tookan.entitymanager.RiderManager(); riderManager.setup(); rider_id = (riderManager.getRiderByUserId(agent.getInt(\"userId\")).getId()) + \"\"; riderManager.exit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1894/buggy-version/src.main.java.shippo.sync.tookan.main.TookanSyn.java", "BodyUseAPI": ["org.json.JSONObject.get(java.lang.String)", "shippo.sync.tookan.entitymanager.RiderManager.getRiderByUserId(agent.getInt(\"userId\"))", "java.lang.String.valueOf(agent.get(\"id\"))", "riderManager.getRiderByUserId(agent.getInt(\"userId\")).getId()", "org.json.JSONObject.getInt(java.lang.String)"], "Fixed commit": "9cedcfea864d98fd369dfc5970d87f1298dc2df2", "Url": "https://api.github.com/repos/hoalv/tookan-sync-service", "Date": "2018-07-19T11:17:52Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (body != null) { byte[] encoded = body.toString().getBytes(\"UTF-8\"); bd = new java.lang.String(encoded); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3527/buggy-version/src.main.java.util.Requests.java", "BodyUseAPI": ["org.json.JSONObject.toString()", "body.toString().getBytes(java.lang.String)"], "Fixed commit": "de6a6df533f6eb88580a73259153f27ec6440534", "Url": "https://api.github.com/repos/fsechavarria/Montreal-Web", "Date": "2018-10-18T22:35:45Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(additionalInfo.containsKey(JsonKey.CHANNEL))) { org.sunbird.common.exception.ProjectCommonException.throwClientErrorException(ResponseCode.errorNoRootOrgAssociated, ResponseCode.errorNoRootOrgAssociated.getErrorMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1990/buggy-version/actors.common.src.main.java.org.sunbird.learner.actors.bulkupload.OrgBulkUploadActor.java", "BodyUseAPI": [], "Fixed commit": "7f997982f4bfc2e78e80d0fd2ac78dc77b3a0d4f", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-10-25T12:32:08Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rendererComp instanceof de.cismet.connectioncontext.ConnectionContextStore) { final de.cismet.connectioncontext.ConnectionContext rendererConnectionContext = de.cismet.connectioncontext.ConnectionContext.create(Category.RENDERER, getClass().getSimpleName()); ((de.cismet.connectioncontext.ConnectionContextStore) (rendererComp)).initWithConnectionContext(rendererConnectionContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5135/buggy-version/src.main.java.de.cismet.cids.tools.metaobjectrenderer.CidsObjectRendererFactory.java", "BodyUseAPI": [], "Fixed commit": "21e50ccb01c15b9a56ee2815b868f8eb6cacefcb", "Url": "https://api.github.com/repos/cismet/cids-navigator", "Date": "2018-03-14T09:48:10Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inputsAzimuth.size()) > 1) { finalAnglesAzimuth = javax.media.jai.operator.AddCollectionDescriptor.create(inputsAzimuth, hints); }else { finalAnglesAzimuth = inputsAzimuth.firstElement(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/332/buggy-version/s2tbx-s2msi-resampler.src.main.java.org.esa.s2tbx.s2msi.resampler.S2Resampler.java", "BodyUseAPI": ["java.util.Vector<javax.media.jai.RenderedOp>.firstElement()", "javax.media.jai.operator.AddCollectionDescriptor.create(java.util.Vector<javax.media.jai.RenderedOp>,java.awt.RenderingHints)"], "Fixed commit": "bfa35a325d87c56153082f254c4e99df088f625b", "Url": "https://api.github.com/repos/senbox-org/s2tbx", "Date": "2018-01-15T10:52:33Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inputsZenith.size()) > 1) { finalAnglesZenith = javax.media.jai.operator.AddCollectionDescriptor.create(inputsZenith, hints); }else { finalAnglesZenith = inputsZenith.firstElement(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/332/buggy-version/s2tbx-s2msi-resampler.src.main.java.org.esa.s2tbx.s2msi.resampler.S2Resampler.java", "BodyUseAPI": ["javax.media.jai.operator.AddCollectionDescriptor.create(java.util.Vector<javax.media.jai.RenderedOp>,java.awt.RenderingHints)", "java.util.Vector<javax.media.jai.RenderedOp>.firstElement()"], "Fixed commit": "bfa35a325d87c56153082f254c4e99df088f625b", "Url": "https://api.github.com/repos/senbox-org/s2tbx", "Date": "2018-01-15T10:52:33Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wannagohome.util.SessionUtil.isLogined(session)) { return \"redirect:/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6183/buggy-version/src.main.java.wannagohome.controller.web.UserController.java", "BodyUseAPI": [], "Fixed commit": "c9d2e179898ced268a30d9bd7aa456dc87345a0e", "Url": "https://api.github.com/repos/wwh-techcamp-2018/team3-wannaGoHome", "Date": "2018-08-30T13:48:36Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wannagohome.util.SessionUtil.isLogined(session)) { return \"redirect:/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6183/buggy-version/src.main.java.wannagohome.controller.web.UserController.java", "BodyUseAPI": [], "Fixed commit": "c9d2e179898ced268a30d9bd7aa456dc87345a0e", "Url": "https://api.github.com/repos/wwh-techcamp-2018/team3-wannaGoHome", "Date": "2018-08-30T13:48:36Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (armands9186.gmail.com.androidshop.MainActivity.mFragment.isAdded()) { getSupportFragmentManager().putFragment(outState, \"fragment\", armands9186.gmail.com.androidshop.MainActivity.mFragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4942/buggy-version/app.src.main.java.armands9186.gmail.com.androidshop.MainActivity.java", "BodyUseAPI": ["getSupportFragmentManager().putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment)"], "Fixed commit": "ece2e4f7cdf825ad93c3f391b37df3827bbb57cb", "Url": "https://api.github.com/repos/armands9186/AndroidShop", "Date": "2018-07-25T11:46:32Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.gun0912.tedpermission.TedPermission.isDenied(this, Manifest.permission.CAMERA)) { com.gun0912.tedpermission.TedPermission.with(this).setPermissionListener(permissionlistener).setPermissions(Manifest.permission.CAMERA).check(); }else { scannerView.setResultHandler(this); scannerView.startCamera(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7997/buggy-version/app.src.main.java.im.adamant.android.ui.ScanQrCodeScreen.java", "BodyUseAPI": [], "Fixed commit": "9e6c391f581ecf28af88fd055b0d01e5e2611e3a", "Url": "https://api.github.com/repos/Adamant-im/adamant-android", "Date": "2018-08-18T14:37:50Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.pm.PackageManager.queryIntentActivities(android.content.Intent,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((activities.size()) > 0) { intent.setSourceBounds(launcher.getViewBounds(dateText1)); context.startActivity(intent, launcher.getActivityLaunchOptions(dateText1)); }else { android.widget.Toast.makeText(context, R.string.error_no_calendar, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5743/buggy-version/app.src.main.java.ch.deletescape.lawnchair.pixelify.DateWidgetView.java", "BodyUseAPI": [], "Fixed commit": "6b8b4b57e461babbc26a9b5cdbc9804aca2f3283", "Url": "https://api.github.com/repos/LawnchairLauncher/Lawnchair", "Date": "2018-06-28T12:54:36Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentAccIndex) == ((accs.size()) - 1)) { listFinished = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/779/buggy-version/pint.annotations.src.main.java.edu.scripps.yates.annotations.uniprot.proteoform.xml.ProteoformRetrieverIteratorFromXML.java", "BodyUseAPI": [], "Fixed commit": "8122493e18a09d14696857493b1a1a758e058235", "Url": "https://api.github.com/repos/proteomicsyates/PINT", "Date": "2018-09-01T00:07:30Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState != null) { restoringActivity = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1300/buggy-version/app.src.main.java.org.helpapaw.helpapaw.signalsmap.SignalsMapActivity.java", "BodyUseAPI": [], "Fixed commit": "ac5dc0a61ef02ed0210f5ffff386a5f12455ca57", "Url": "https://api.github.com/repos/HelpAPaw/Android", "Date": "2018-09-29T20:31:19Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(restoringActivity)) { initFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1300/buggy-version/app.src.main.java.org.helpapaw.helpapaw.signalsmap.SignalsMapActivity.java", "BodyUseAPI": [], "Fixed commit": "ac5dc0a61ef02ed0210f5ffff386a5f12455ca57", "Url": "https://api.github.com/repos/HelpAPaw/Android", "Date": "2018-09-29T20:31:19Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["col.get(0).text()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((periodInfo.indexOf(\"(\")) > 2) schedule.get(new java.lang.Integer(dayNum))[(((pNe - 1) * 2) + pCe)] = period;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8062/buggy-version/app.src.main.java.hackthis.team.spartapp.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "25264b62cef0ef5a7290d2eab515c61d3c531793", "Url": "https://api.github.com/repos/THISProgrammingClub/Spartapp", "Date": "2018-09-19T14:57:24Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["col.get(0).text()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((periodInfo.indexOf(\"(\")) > 2) { pNe = java.lang.Integer.parseInt(periodInfo.substring(3, 4)); pCe = (periodInfo.substring(4, 5).equals(\"A\")) ? 0 : 1; }else { pNe = 0; pCe = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8062/buggy-version/app.src.main.java.hackthis.team.spartapp.LoginActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "25264b62cef0ef5a7290d2eab515c61d3c531793", "Url": "https://api.github.com/repos/THISProgrammingClub/Spartapp", "Date": "2018-09-19T14:57:24Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()) instanceof com.meetup.meetup.security.jwt.JwtAuthenticatedProfile)) { java.lang.String authorization = request.getHeader(\"Authorization\"); if (authorization != null) { com.meetup.meetup.security.jwt.JwtAuthToken jwtAuthToken = new com.meetup.meetup.security.jwt.JwtAuthToken(authorization.replaceAll(\"Bearer \", \"\")); org.springframework.security.core.context.SecurityContextHolder.getContext().setAuthentication(jwtAuthToken); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3282/buggy-version/backend.src.main.java.com.meetup.meetup.security.jwt.JwtAuthFilter.java", "BodyUseAPI": [], "Fixed commit": "f9b5df1539d37680d08ec29b7a17977851e2270a", "Url": "https://api.github.com/repos/ydeineka/meetup", "Date": "2018-04-22T18:07:39Z"},
{"Line": "=>1573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bi.nw216a.isChecked()) { if (!(validatorClass.EmptyTextBox(this, bi.nw216aa, getString(R.string.nw216a)))) { return false; } return validatorClass.RangeTextBox(this, bi.nw216aa, 1, 5, getString(R.string.nw216a), \" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8388/buggy-version/app.src.main.java.edu.aku.hassannaqvi.nns_2018.ui.SectionB1Activity.java", "BodyUseAPI": ["edu.aku.hassannaqvi.nns_2018.ui.SectionB1Activity.RangeTextBox(edu.aku.hassannaqvi.nns_2018.ui.SectionB1Activity,bi.nw216aa,int,int,getString(R.string.nw216a),java.lang.String)", "edu.aku.hassannaqvi.nns_2018.ui.SectionB1Activity.EmptyTextBox(edu.aku.hassannaqvi.nns_2018.ui.SectionB1Activity,bi.nw216aa,getString(R.string.nw216a))"], "Fixed commit": "50568d91551c475ea0ba6d116a5f7cabf96357d4", "Url": "https://api.github.com/repos/shznaqvi/nns_2018", "Date": "2018-04-22T11:26:43Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsonNode.get(\"row\").get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (columnsArray == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3574/buggy-version/ksql-rest-app.src.main.java.io.confluent.ksql.rest.util.JsonUtil.java", "BodyUseAPI": [], "Fixed commit": "acc6bf29de9669358ac76213466759a54117654d", "Url": "https://api.github.com/repos/rodesai/ksql", "Date": "2018-05-29T22:56:10Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((\"SystemC\".compareTo(tokenString)) != 0) moduleStack.push(tokenString);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3663/buggy-version/com.minres.scviewer.database.vcd.src.com.minres.scviewer.database.vcd.VCDDbLoader.java", "BodyUseAPI": ["java.util.Stack<java.lang.String>.push(java.lang.String)"], "Fixed commit": "2f11d8ed7b704b9174e99d66d7139d200208b983", "Url": "https://api.github.com/repos/Minres/SCViewer", "Date": "2018-07-16T11:17:58Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((io.github.kaiso.relmongo.annotation.OneToOne.class.equals(annotation)) && (ids instanceof com.mongodb.BasicDBList)) { com.mongodb.BasicDBList list = ((com.mongodb.BasicDBList) (ids)); ids = (list.isEmpty()) ? list : list.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6618/buggy-version/src.main.java.io.github.kaiso.relmongo.events.callback.PersistentPropertyLoadingCallback.java", "BodyUseAPI": [], "Fixed commit": "32a3020021550426bbfdb425ed53d15c363e6501", "Url": "https://api.github.com/repos/kaiso/relmongo", "Date": "2018-06-13T09:31:07Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(autojavadoc.Parser.m.find())) { return \"void\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6635/buggy-version/AutoJavaDoc.src.autojavadoc.Parser.java", "BodyUseAPI": [], "Fixed commit": "a3581feadd28edb0ab1c380a6c63025aa9f3410f", "Url": "https://api.github.com/repos/OxyOCE/autojavadoc", "Date": "2018-05-10T12:10:38Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((files.length) != 0) { this.reader = new com.bushpath.rutils.reader.CsvReader(files.get(0), null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6512/buggy-version/source-node.src.main.java.com.bushpath.nfennel.source-node.RepositoryReader.java", "BodyUseAPI": [], "Fixed commit": "944b9f2085bccc89a9a9bf915b314d4773d7370b", "Url": "https://api.github.com/repos/hamersaw/NaiveFennel", "Date": "2018-07-26T16:56:39Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Objects.nonNull(shape.getId())) { jsonGenerator.writeNumberField(\"id\", shape.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2081/buggy-version/src.main.java.com.verint.serializer.ShapeSerializer.java", "BodyUseAPI": ["com.fasterxml.jackson.core.JsonGenerator.writeNumberField(java.lang.String,shape.getId())", "com.verint.model.Shape.getId()"], "Fixed commit": "9ab866cf8d8ac552f9e6fc07cd32306498b48400", "Url": "https://api.github.com/repos/dratler/verint-shape", "Date": "2018-04-29T11:40:58Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.hasErrors()) { redirectAttributes.addFlashAttribute(\"org.springframework.validation.BindingResult.role\", result); redirectAttributes.addFlashAttribute(\"role\", role); return \"redirect:/roles\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4814/buggy-version/src.main.java.com.rosslogan.instateam.web.controller.RoleController.java", "BodyUseAPI": ["org.springframework.web.servlet.mvc.support.RedirectAttributes.addFlashAttribute(java.lang.String,org.springframework.validation.BindingResult)"], "Fixed commit": "7fd92048501b758be7c2cb49a31c1249889e49a0", "Url": "https://api.github.com/repos/rosslogan702/treehouse-project7-instateam", "Date": "2018-03-20T21:05:14Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(model.containsAttribute(\"role\"))) { model.addAttribute(\"role\", new com.rosslogan.instateam.model.Role()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4814/buggy-version/src.main.java.com.rosslogan.instateam.web.controller.RoleController.java", "BodyUseAPI": ["org.springframework.ui.Model.addAttribute(java.lang.String,com.rosslogan.instateam.model.Role)"], "Fixed commit": "7fd92048501b758be7c2cb49a31c1249889e49a0", "Url": "https://api.github.com/repos/rosslogan702/treehouse-project7-instateam", "Date": "2018-03-20T21:05:14Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client.getLevel()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4882/buggy-version/src.engine.network.packet.PacketWireHandlerUpdate.java", "BodyUseAPI": [], "Fixed commit": "3d5069be1b4f6c20267f27a9660b4493099d5559", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2018-05-02T05:13:10Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prevTurnSpeed) != 0) { updateTargetHeading(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4998/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.team7316.util.subsystems.MecanumDriveBase.java", "BodyUseAPI": [], "Fixed commit": "c2b0191d391b09f0d1c321475118eb001b9c1803", "Url": "https://api.github.com/repos/Iron-Panthers/FTC-2017", "Date": "2018-02-17T19:29:52Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dLines.getTitlepage()) != null) { at.hsol.fountainizer.pdfbox.pager.TitlePager titlePager = controller.getPager(PagerController.PagerType.TITLE_PAGER); titlePager.printContent(dLines.getTitlepage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4850/buggy-version/src.at.hsol.fountainizer.io.FilePrinter.java", "BodyUseAPI": ["at.hsol.fountainizer.parser.content.ParserContent.getTitlepage()", "at.hsol.fountainizer.pdfbox.pager.TitlePager.printContent(dLines.getTitlepage())"], "Fixed commit": "e89b1856d5df87833efd558ec4122cfe08d7b677", "Url": "https://api.github.com/repos/segreeeen/fountainizer", "Date": "2016-01-29T15:43:48Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.kosto.configuration.model.DatabaseItem.getOrder()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (order != null) { indexes.add(order); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4969/buggy-version/src.main.java.net.kosto.configuration.model.AbstractDatabaseItem.java", "BodyUseAPI": ["java.util.Set<java.lang.Integer>.add(java.lang.Integer)"], "Fixed commit": "ab83cd1a114f4931303ceabe693a1be21f8a4a92", "Url": "https://api.github.com/repos/kkrakovych/database-maven-plugin", "Date": "2018-09-15T10:59:55Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bluebot.MainBot.isPublicInstance()) && (bluebot.MainBot.getServerSBDisabled().contains(event.getGuild().getId()))) { event.getTextChannel().sendMessage(\"Full sound list available at : https://bluebot.pw/sound_list.php\").queue(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2754/buggy-version/src.main.java.bluebot.commands.misc.PlaySoundCommand.java", "BodyUseAPI": ["net.dv8tion.jda.core.events.message.MessageReceivedEvent.getTextChannel()", "event.getTextChannel().sendMessage(\"Full sound list available at : https://bluebot.pw/sound_list.php\").queue()", "event.getTextChannel().sendMessage(java.lang.String)"], "Fixed commit": "6d0d1fe996c9e2b82532dd1959bbe01859b3bfb4", "Url": "https://api.github.com/repos/thibautbessone/DiscordBlueBot", "Date": "2018-07-09T17:19:27Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view) != null) { if ((view.getBrowser()) != null) view.getBrowser().dispose(); remove(view); view = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1284/buggy-version/jxbrowser.src.com.servoy.extensions.beans.jxbrowser.ServoyJXBrowser.java", "BodyUseAPI": [], "Fixed commit": "b5c9a8ec10bcdc6b331416d7e14d32b52ef8e13d", "Url": "https://api.github.com/repos/Servoy/jxbrowser_bean", "Date": "2018-02-14T08:38:53Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentUser) != null) { callingData.loadOrgs(listener, errorCallback, progressBar, activity, currentUser); }else { errorCallback.onResponse(new org.ldscd.callingworkflow.web.WebException(org.ldscd.callingworkflow.web.ExceptionType.LDS_AUTH_REQUIRED)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1203/buggy-version/app.src.main.java.org.ldscd.callingworkflow.web.DataManagerImpl.DataManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "9517c36e31871c7f9f236271b54358d277f1643d", "Url": "https://api.github.com/repos/mstauff/cwf-android", "Date": "2018-05-01T22:12:38Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xcodesystemsinterns.studentmanager.Adapters.ExpandAdapter.getChild(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((c.getColumnCount()) == 3) { grade.setText(((\"\" + (c.getInt(2))) + \"/5\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/572/buggy-version/app.src.main.java.com.xcodesystemsinterns.studentmanager.Adapters.ExpandAdapter.java", "BodyUseAPI": ["android.database.Cursor.getInt(int)", "android.widget.TextView.setText(((\"\" + (c.getInt(2))) + \"/5\"))"], "Fixed commit": "b2ceddbfb1f716acc39c5164d3a8655c83021a0b", "Url": "https://api.github.com/repos/Elzawawy/StudentManagerSystem", "Date": "2018-08-20T17:05:45Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((origin.hashCode()) == (localAddress.toString().hashCode())) { printMessage(\"Received data from inside the network\"); destPort = LocalNetwork.RouterPort; }else { printMessage(\"Received data from outside the network\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2537/buggy-version/src.Router.java", "BodyUseAPI": [], "Fixed commit": "8086be2183ea13ef58c2eab1dd25080734db0b19", "Url": "https://api.github.com/repos/Alemas/effective-disco", "Date": "2018-06-04T19:20:07Z"},
{"Line": "=>1660", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((columnsOrdered.length) > 1) && (!columnAddedOrRemoved)) { for (int i = 0; i < ((columnsOrdered.length) - 2); i++) { if ((columnsOrdered[i].getPosition()) > (columnsOrdered[(i + 1)].getPosition())) { orderChanged = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5971/buggy-version/core.src.com.biglybt.ui.common.table.impl.TableViewImpl.java", "BodyUseAPI": ["columnsOrdered[(i + 1)].getPosition()", "columnsOrdered[i].getPosition()"], "Fixed commit": "0244815aeaa230832abf6c3c6cdecad1757f6084", "Url": "https://api.github.com/repos/BiglySoftware/BiglyBT", "Date": "2018-02-14T20:58:39Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.thatsmusic99.headsplus.commands.HeadsPlusCommand.getCommandByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sender.hasPermission(command.getPermission())) { if (command.isMainCommand()) { if ((command.isCorrectUsage(args, sender).get(true)) != null) { return command.fire(args, sender); }else { sender.sendMessage(command.isCorrectUsage(args, sender).get(false)); sender.sendMessage(((((org.bukkit.ChatColor.DARK_RED) + \"Usage: \") + (org.bukkit.ChatColor.RED)) + (command.getUsage()))); if ((command.advancedUsages().length) != 0) { sender.sendMessage(((org.bukkit.ChatColor.DARK_RED) + \"Further usages:\")); for (java.lang.String s : command.advancedUsages()) { sender.sendMessage(((org.bukkit.ChatColor.RED) + s)); } } } }else { new io.github.thatsmusic99.headsplus.commands.maincommand.HelpMenu().fire(args, sender); } }else { sender.sendMessage(noPerms); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1751/buggy-version/main.java.io.github.thatsmusic99.headsplus.commands.HeadsPlusCommand.java", "BodyUseAPI": ["io.github.thatsmusic99.headsplus.commands.IHeadsPlusCommand.isCorrectUsage(java.lang.String[],org.bukkit.command.CommandSender)", "org.bukkit.command.CommandSender.sendMessage(command.isCorrectUsage(args, sender).get(false))", "io.github.thatsmusic99.headsplus.commands.IHeadsPlusCommand.isMainCommand()", "org.bukkit.command.CommandSender.sendMessage(((((org.bukkit.ChatColor.DARK_RED) + \"Usage: \") + (org.bukkit.ChatColor.RED)) + (command.getUsage())))", "org.bukkit.command.CommandSender.sendMessage(((org.bukkit.ChatColor.RED) + s))", "io.github.thatsmusic99.headsplus.commands.maincommand.HelpMenu.fire(java.lang.String[],org.bukkit.command.CommandSender)", "io.github.thatsmusic99.headsplus.commands.IHeadsPlusCommand.advancedUsages()", "io.github.thatsmusic99.headsplus.commands.IHeadsPlusCommand.getUsage()", "command.isCorrectUsage(args, sender).get(boolean)", "command.isCorrectUsage(args, sender).get(boolean)", "io.github.thatsmusic99.headsplus.commands.IHeadsPlusCommand.isCorrectUsage(java.lang.String[],org.bukkit.command.CommandSender)", "io.github.thatsmusic99.headsplus.commands.IHeadsPlusCommand.fire(java.lang.String[],org.bukkit.command.CommandSender)", "org.bukkit.command.CommandSender.sendMessage(((org.bukkit.ChatColor.DARK_RED) + \"Further usages:\"))", "org.bukkit.command.CommandSender.sendMessage(java.lang.String)", "io.github.thatsmusic99.headsplus.commands.IHeadsPlusCommand.advancedUsages()"], "Fixed commit": "86f4501f4a8ec2155a5da04b57d81c5ca6c4545b", "Url": "https://api.github.com/repos/Thatsmusic99/HeadsPlus", "Date": "2018-06-15T17:55:02Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cn.jzvd.JZVideoPlayerManager.getCurrentJzvd()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6998/buggy-version/jiaozivideoplayer.src.main.java.cn.jzvd.JZMediaManager.java", "BodyUseAPI": [], "Fixed commit": "f01ab0cb7378a62b8d744ad81ab6d4464991cd87", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2018-06-28T06:43:12Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isScreenAwake) { android.os.PowerManager.WakeLock wl = powerManager.newWakeLock((((android.os.PowerManager.SCREEN_DIM_WAKE_LOCK) | (android.os.PowerManager.ACQUIRE_CAUSES_WAKEUP)) | (android.os.PowerManager.ON_AFTER_RELEASE)), \"Galarm\"); wl.acquire(10000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2166/buggy-version/android.src.main.java.com.dieam.reactnativepushnotification.modules.RNPushNotificationHelper.java", "BodyUseAPI": [], "Fixed commit": "95892fa7b07f377aa802f1677efe1d7750955cbf", "Url": "https://api.github.com/repos/varungupta85/react-native-push-notification", "Date": "2018-02-05T07:24:49Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((paramID.equals(\"\")) || (paramKey.equals(\"\"))) || (paramKey.equals(\"\"))) { rd = request.getRequestDispatcher(\"Invalid.html\"); rd.forward(request, response); }else { rd = request.getRequestDispatcher(\"AttendanceError.html\"); rd.forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5414/buggy-version/QuickServletApp.src.net.codejava.servlet.QuickServlet.java", "BodyUseAPI": [], "Fixed commit": "f26f281d003e5f0e23786bd935e8c6c22ea6bc3e", "Url": "https://api.github.com/repos/limmil/Tracker", "Date": "2018-07-01T03:44:50Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.evans.dale.finalyearproject.Fragments.OrderPage.CollectedOrders.2.getItemIndex(order.getOrderPushID())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index != (-1)) { mOrderAdapter.remove(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6990/buggy-version/app.src.main.java.com.evans.dale.finalyearproject.Fragments.OrderPage.CollectedOrders.java", "BodyUseAPI": ["com.evans.dale.finalyearproject.Adapters.OrderAdapter.remove(int)"], "Fixed commit": "ec22abeef9d28737c95dc64f137e92ed9e2019cb", "Url": "https://api.github.com/repos/thesymbolx/final_year_project", "Date": "2018-04-06T14:18:31Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mifiel.api.objects.Document.getCallbackUrl()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (callbackUrl != null) { com.mifiel.api.utils.MifielUtils.appendTextParamToHttpBody(entityBuilder, \"callback_url\", callbackUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9157/buggy-version/src.main.java.com.mifiel.api.dao.Documents.java", "BodyUseAPI": ["com.mifiel.api.utils.MifielUtils.appendTextParamToHttpBody(org.apache.http.entity.mime.MultipartEntityBuilder,java.lang.String,java.lang.String)"], "Fixed commit": "e1cb9b6deb0560a78966d6e7f5d6dd51efbced0a", "Url": "https://api.github.com/repos/Mifiel/java-api-client", "Date": "2017-06-07T16:47:09Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mImpl.getView()) != null) { this.removeView(mImpl.getView()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6424/buggy-version/Camera.src.main.java.com.enfle.android.camera.view.CameraView.java", "BodyUseAPI": ["com.enfle.android.camera.view.CameraView.removeView(mImpl.getView())", "com.enfle.android.camera.preview.CameraViewImpl.getView()"], "Fixed commit": "0adefac8db95287ea233bfa040fa6cc063112a0d", "Url": "https://api.github.com/repos/gauravmnit07/cameraview", "Date": "2018-05-07T08:10:09Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.reflect.Modifier.isFinal(var.getAccessedVariable().getModifiers())) throw new org.codehaus.groovy.syntax.RuntimeParserException(((\"The variable [\" + (var.getName())) + \"] may be uninitialized\"), var);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4851/buggy-version/src.main.java.org.codehaus.groovy.classgen.Verifier.java", "BodyUseAPI": ["org.codehaus.groovy.ast.expr.VariableExpression.getName()"], "Fixed commit": "011b98e133048e417f330fb83a5c56294472e8cc", "Url": "https://api.github.com/repos/apache/groovy", "Date": "2018-02-13T07:18:39Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((connection.getLastInteraction()) != null) { if ((connection.getLastInteraction().equals(packetItemInHand)) && (((connection.getLastInteraction().getAmount()) + 1) == (packetItemInHand.getAmount()))) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6785/buggy-version/gomint-server.src.main.java.io.gomint.server.network.handler.PacketInventoryTransactionHandler.java", "BodyUseAPI": ["connection.getLastInteraction().getAmount()", "io.gomint.server.network.PlayerConnection.getLastInteraction()", "io.gomint.server.network.PlayerConnection.getLastInteraction()", "connection.getLastInteraction().equals(io.gomint.inventory.item.ItemStack)"], "Fixed commit": "33af5030d00252fa03d8262486b4e7be4a80df10", "Url": "https://api.github.com/repos/GoMint/GoMint", "Date": "2018-04-17T12:52:56Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clusters.size()) > iClusterId) clusters.set(iClusterId, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7564/buggy-version/client.src.main.java.com.orientechnologies.orient.client.remote.OStorageConfigurationRemote.java", "BodyUseAPI": ["java.util.List<com.orientechnologies.orient.client.remote.OStorageClusterConfiguration>.set(int,<nulltype>)"], "Fixed commit": "8618aae38abad0d77bb892961537158d8cd2fe2c", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2018-03-08T15:01:01Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (middlenames != null) if ((middlenames.size()) > 0) for (java.lang.String mn : middlenames) { nv.validate(mn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9891/buggy-version/src.main.java.logic.human.Name.java", "BodyUseAPI": [], "Fixed commit": "5e98178c2a7f435ab96028e70b2dd1f89299841a", "Url": "https://api.github.com/repos/Dzordzu/BERP", "Date": "2018-10-23T02:01:03Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cosNormConstant == 0) { cosNormConstant = 1; }else { cosNormConstant = 1 / (java.lang.Math.sqrt(cosNormConstant)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3767/buggy-version/src.main.java.cz.zcu.kiv.nlp.ir.trec.CosineSimilarityCalculator.java", "BodyUseAPI": ["java.lang.Math.sqrt(double)"], "Fixed commit": "22b2def88570fea22eb90d0cf957040c55d2901a", "Url": "https://api.github.com/repos/Cajova-Houba/kiv-ir-indexer", "Date": "2018-05-23T17:09:01Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (0 < (args.length)) { try { input = new java.util.Scanner(new java.io.File(args[1])); } catch (java.io.FileNotFoundException ex) { java.lang.System.out.println(\"No File Found!\"); return; } }else { java.lang.System.err.println((\"Invalid arguments count:\" + (args.length))); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3038/buggy-version/src.main.java.Solution.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "b8a8ce22ad265b1de81eb93f128bf6cba703f892", "Url": "https://api.github.com/repos/chittaranjan/VoteCounting", "Date": "2018-10-05T17:06:43Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (recordMetadata != null) { com.citic.helper.SimpleKafkaProducer.LOGGER.debug(\"sent message to topic:{} partition:{} offset:{}\", recordMetadata.topic(), recordMetadata.partition(), recordMetadata.offset()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5118/buggy-version/src.main.java.com.citic.helper.SimpleKafkaProducer.java", "BodyUseAPI": ["com.citic.helper.RecordMetadata.partition()", "com.citic.helper.RecordMetadata.offset()", "org.slf4j.Logger.debug(java.lang.String,recordMetadata.topic(),recordMetadata.partition(),recordMetadata.offset())", "com.citic.helper.RecordMetadata.topic()"], "Fixed commit": "ccdf0a331210f646e5c1fe0d57a9a92379f56720", "Url": "https://api.github.com/repos/blacklovebear/agent-control-server", "Date": "2018-04-24T11:38:14Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((firstPlayer != null) && (secondPlayer != null)) && (thirdPlayer != null)) { if ((event.getTextChannel()) == null) { net.dv8tion.jda.core.entities.PrivateChannel privateChannel = event.getAuthor().openPrivateChannel().complete(); privateChannel.sendMessage(fantasyBot.utility.MessageBuilder.createTop3Message(firstPlayer, secondPlayer, thirdPlayer)).complete(); }else if (!(event.getTextChannel().canTalk())) { net.dv8tion.jda.core.entities.PrivateChannel privateChannel = event.getAuthor().openPrivateChannel().complete(); privateChannel.sendMessage(fantasyBot.utility.MessageBuilder.createTop3Message(firstPlayer, secondPlayer, thirdPlayer)).complete(); }else { event.getTextChannel().sendMessage(fantasyBot.utility.MessageBuilder.createTop3Message(firstPlayer, secondPlayer, thirdPlayer)).complete(); } }else { if ((event.getTextChannel()) == null) { net.dv8tion.jda.core.entities.PrivateChannel privateChannel = event.getAuthor().openPrivateChannel().complete(); privateChannel.sendMessage(fantasyBot.utility.MessageBuilder.createErrorMessage(\"Un classement est impossible \u00e0 mettre en place avec les donn\u00e9es actuel\")).complete(); }else if (!(event.getTextChannel().canTalk())) { net.dv8tion.jda.core.entities.PrivateChannel privateChannel = event.getAuthor().openPrivateChannel().complete(); privateChannel.sendMessage(fantasyBot.utility.MessageBuilder.createErrorMessage(\"Un classement est impossible \u00e0 mettre en place avec les donn\u00e9es actuel\")).complete(); }else { event.getTextChannel().sendMessage(fantasyBot.utility.MessageBuilder.createErrorMessage(\"Un classement est impossible \u00e0 mettre en place avec les donn\u00e9es actuel\")).complete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4690/buggy-version/src.fantasyBot.EventListener.java", "BodyUseAPI": ["net.dv8tion.jda.core.entities.PrivateChannel.sendMessage(fantasyBot.utility.MessageBuilder.createTop3Message(firstPlayer, secondPlayer, thirdPlayer))", "fantasyBot.utility.MessageBuilder.createTop3Message(fantasyBot.player.PlayerStats,fantasyBot.player.PlayerStats,fantasyBot.player.PlayerStats)", "event.getTextChannel().sendMessage(fantasyBot.utility.MessageBuilder.createTop3Message(firstPlayer, secondPlayer, thirdPlayer))", "fantasyBot.utility.MessageBuilder.createTop3Message(fantasyBot.player.PlayerStats,fantasyBot.player.PlayerStats,fantasyBot.player.PlayerStats)", "fantasyBot.utility.MessageBuilder.createTop3Message(fantasyBot.player.PlayerStats,fantasyBot.player.PlayerStats,fantasyBot.player.PlayerStats)", "privateChannel.sendMessage(fantasyBot.utility.MessageBuilder.createTop3Message(firstPlayer, secondPlayer, thirdPlayer)).complete()", "event.getTextChannel().sendMessage(fantasyBot.utility.MessageBuilder.createTop3Message(firstPlayer, secondPlayer, thirdPlayer)).complete()", "privateChannel.sendMessage(fantasyBot.utility.MessageBuilder.createTop3Message(firstPlayer, secondPlayer, thirdPlayer)).complete()", "net.dv8tion.jda.core.entities.PrivateChannel.sendMessage(fantasyBot.utility.MessageBuilder.createTop3Message(firstPlayer, secondPlayer, thirdPlayer))"], "Fixed commit": "f8bcba67eccf2ed095d9736490ae811ed719cea8", "Url": "https://api.github.com/repos/ParallGames/FantasyBot", "Date": "2018-10-01T09:28:55Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tag instanceof com.michaelflisar.changelog.tags.ChangelogTagBugfix) { return 2; }else if (tag instanceof com.michaelflisar.changelog.tags.ChangelogTagProVersion) { return 3; }else { return 4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5883/buggy-version/lib.src.main.java.com.michaelflisar.changelog.classes.ImportanceChangelogSorter.java", "BodyUseAPI": [], "Fixed commit": "12a42ea6ab8b442f5325cb7ba80a32ac799e7fe9", "Url": "https://api.github.com/repos/biagiopietro/changelog", "Date": "2018-09-26T10:13:07Z"},
{"Line": "=>824", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ocdReference.getHasIBMFinalWithDefault()) == false) { typeName = ((refElement.getCardinality()) == 1) ? ocdReference.getTypeName() : (ocdReference.getTypeName()) + \"-factory\"; }else { typeName = ((refElement.getCardinality()) == 1) ? ocdReference.getTypeName() : ocdReference.getTypeName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3072/buggy-version/dev.com.ibm.ws.config.src.com.ibm.ws.config.schemagen.internal.SchemaWriter.java", "BodyUseAPI": ["com.ibm.ws.config.schemagen.internal.TypeBuilder.OCDType.getTypeName()", "com.ibm.ws.config.schemagen.internal.TypeBuilder.OCDType.getTypeName()", "com.ibm.ws.config.schemagen.internal.TypeBuilder.OCDType.getTypeName()", "com.ibm.ws.config.schemagen.internal.TypeBuilder.OCDType.getTypeName()"], "Fixed commit": "3d680dc10355b9a54acbd021b4b986d2d40b5181", "Url": "https://api.github.com/repos/naumanna/open-liberty", "Date": "2018-07-19T19:24:23Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof org.noorm.jdbc.DataAccessException) { throw ((org.noorm.jdbc.DataAccessException) (e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9081/buggy-version/runtime.src.main.java.org.noorm.jdbc.JDBCMetadata.java", "BodyUseAPI": [], "Fixed commit": "49d8235ab04ecf859461b26b233f33fa39a978fd", "Url": "https://api.github.com/repos/UPietruschka/noorm", "Date": "2018-08-12T16:53:53Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (emailAddress.contains(\"@\")) { if (!(isContact(emailAddress))) { ProjectContacts.add(emailAddress); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7296/buggy-version/G51FSE-CW04-Code.src.CompanyProject.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "CompanyProject.isContact(java.lang.String)"], "Fixed commit": "8c9460ad204858b4dfbb67117e97bc7856440e1d", "Url": "https://api.github.com/repos/CallumJoyce/Coursework-4-Unit-Tests", "Date": "2018-05-02T11:15:30Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((core) != null) { core.getUpdateHandler().commit(new org.apache.solr.update.CommitUpdateCommand(solrQueryRequest, false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9222/buggy-version/src.main.java.com.fyr.talend.components.output.SolrIndexerOutput.java", "BodyUseAPI": [], "Fixed commit": "7427be720ed01447eba99b0b3be2470695d6ff0d", "Url": "https://api.github.com/repos/fyrz/fSolrTools", "Date": "2018-09-25T15:51:49Z"},
{"Line": "=>1264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.nd4j.linalg.api.ops.performance.PerformanceTracker.getInstance()) != null) { properties.put(Nd4jEnvironment.MEMORY_BANDWIDTH_KEY, org.nd4j.linalg.api.ops.performance.PerformanceTracker.getInstance().getCurrentBandwidth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4469/buggy-version/nd4j.nd4j-backends.nd4j-backend-impls.nd4j-native.src.main.java.org.nd4j.linalg.cpu.nativecpu.ops.NativeOpExecutioner.java", "BodyUseAPI": [], "Fixed commit": "18fec53620c57d679a7af9741cd65563e9842b55", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2018-07-03T02:31:33Z"},
{"Line": "=>1498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"finalize\".equals(method.getName()))) { method.setAccessible(true); methods.add(method); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2657/buggy-version/powermock-reflect.src.main.java.org.powermock.reflect.internal.WhiteboxImpl.java", "BodyUseAPI": ["java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method)", "java.lang.reflect.Method.setAccessible(boolean)"], "Fixed commit": "d1cb563cfb1de79eab925584a3b5c1ebcbce20d0", "Url": "https://api.github.com/repos/powermock/powermock", "Date": "2017-10-21T20:33:57Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.extjs.gxt.ui.client.GXT.isSafari) { fieldSet.setStyleAttribute(\"overflow\", \"visible\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1887/buggy-version/gwt.src.main.java.org.jahia.ajax.gwt.client.widget.definition.PropertiesEditor.java", "BodyUseAPI": [], "Fixed commit": "40629435e54c1dbbee633ad080cd9dc847729abc", "Url": "https://api.github.com/repos/Jahia/dxm", "Date": "2018-03-22T14:48:55Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsyntaxpane.actions.ActionUtils.getDocumentPosition(com.jpexs.decompiler.flash.gui.editor.LineMarkedEditorPane,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pos != (-1)) { setCaretPosition(pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9072/buggy-version/src.com.jpexs.decompiler.flash.gui.editor.LineMarkedEditorPane.java", "BodyUseAPI": ["com.jpexs.decompiler.flash.gui.editor.LineMarkedEditorPane.setCaretPosition(int)"], "Fixed commit": "0112764b29ac39a9df4b36d405f626e0c7465048", "Url": "https://api.github.com/repos/jindrapetrik/jpexs-decompiler", "Date": "2018-01-07T19:55:30Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.sPW.equals(\"\"))) { json.put(edu.aku.hassannaqvi.dss_census_sur.contracts.PWContract.pWFup.COLUMN_SPW, ((this.sPW) == null ? org.json.JSONObject.NULL : new org.json.JSONObject(this.sPW))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2354/buggy-version/app.src.main.java.edu.aku.hassannaqvi.dss_census_sur.contracts.PWContract.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,((this.sPW) == null ? org.json.JSONObject.NULL : new org.json.JSONObject(this.sPW)))"], "Fixed commit": "ce34c8e65019fc2305ac846ac4c640eb4176158d", "Url": "https://api.github.com/repos/shznaqvi/DSS-Census", "Date": "2018-09-13T10:29:17Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.ibatis.session.SqlSession.selectList(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((list.size()) > 0) return ((model.member.MemConcernDto) (mybatis.selectList(\"MemConcernDAO.getById\", id).get(0)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5679/buggy-version/sevenget.src.main.java.model.member.MemConcernDAO.java", "BodyUseAPI": [], "Fixed commit": "82c99f14262f8e3d18480d32dfb2ffe4adf5260c", "Url": "https://api.github.com/repos/sevenget/finpjt", "Date": "2018-02-23T10:38:13Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (play.isAlive()) Page = ((play.getJ()) / 9) + 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5236/buggy-version/Automouse.src.Panels.RoutinePanel.java", "BodyUseAPI": ["Events.PlayEvent.getJ()"], "Fixed commit": "113b9604dad30f18d62f6e258d676f9a3e37a274", "Url": "https://api.github.com/repos/kingdoo9/AutoClicker", "Date": "2018-10-31T06:19:19Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_AI_Bot) != null) m_AI_Bot.Solved(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6429/buggy-version/app.src.main.java.com.game.team9.slidingpuzzle.NumberMode.java", "BodyUseAPI": [], "Fixed commit": "8cc33f009364ff176e6ef2129577b2a07dd7c6e3", "Url": "https://api.github.com/repos/rshete/SlidingPuzzle", "Date": "2018-01-31T05:53:03Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_Timer) != null) m_Timer.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6429/buggy-version/app.src.main.java.com.game.team9.slidingpuzzle.NumberMode.java", "BodyUseAPI": [], "Fixed commit": "8cc33f009364ff176e6ef2129577b2a07dd7c6e3", "Url": "https://api.github.com/repos/rshete/SlidingPuzzle", "Date": "2018-01-31T05:53:03Z"},
{"Line": "=>5131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ceylon.compiler.typechecker.tree.Tree.Variable.getDeclarationModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((isCeylonBasicType(switchType)) && (varDecl.getUnboxed())) { toTypeExpr = makeJavaType(varType); tmpVarExpr = at(matchCase).Ident(tmpVarName.asName()); }else { tmpVarExpr = at(matchCase).TypeCast(rawToTypeExpr, tmpVarName.makeIdent()); if ((isCeylonBasicType(varType)) && (varDecl.getUnboxed())) { toTypeExpr = makeJavaType(varType); tmpVarExpr = unboxType(tmpVarExpr, varType); }else { toTypeExpr = makeJavaType(varType, org.eclipse.ceylon.compiler.java.codegen.JT_NO_PRIMITIVES); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8810/buggy-version/compiler-java.src.org.eclipse.ceylon.compiler.java.codegen.StatementTransformer.java", "BodyUseAPI": ["org.eclipse.ceylon.model.typechecker.model.TypedDeclaration.getUnboxed()"], "Fixed commit": "50b8c78f949457bd8cf2d091d28e0bcbf725cbe3", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2018-09-11T12:48:38Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Integer.parseInt(toCheck)) < 10) { toCheck = toCheck.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6765/buggy-version/src.controller.CalcolaOraController.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "cc18badb67c466a222dd82855d99bb9e8082b024", "Url": "https://api.github.com/repos/angelavec94/Found-It-", "Date": "2018-02-03T19:48:12Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(document.getLong(org.opencb.opencga.catalog.db.mongodb.AnnotationMongoDBAdaptor.AnnotationSetParams.VARIABLE_SET_ID.key()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(variableSetAnnotationsets.containsKey(variableSetId))) { variableSetAnnotationsets.put(variableSetId, new java.util.HashSet<>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8979/buggy-version/opencga-catalog.src.main.java.org.opencb.opencga.catalog.db.mongodb.AnnotationMongoDBAdaptor.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Set<java.lang.String>>.put(java.lang.String,java.util.HashSet<>)"], "Fixed commit": "eaef67bc3511746b5caa059e17b8d59771d5ec12", "Url": "https://api.github.com/repos/opencb/opencga", "Date": "2018-07-31T14:30:46Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((eu.openanalytics.phaedra.base.util.process.ProcessUtils.isWindows()) && (eu.openanalytics.phaedra.base.fs.SMBHelper.isSMBPath(fsPath))) { java.lang.String fsUser = userName.substring(((userName.indexOf(\"\\\\\")) + 1)); java.lang.String currentUser = java.lang.System.getProperty(\"user.name\"); return fsUser.equalsIgnoreCase(currentUser); }else if (!(eu.openanalytics.phaedra.base.fs.SMBHelper.isSMBPath(fsPath))) { java.nio.file.Path path = java.nio.file.Paths.get(fsPath); try { java.nio.file.Files.createDirectories(path); } catch (java.io.IOException e) { return false; } return java.nio.file.Files.exists(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4236/buggy-version/eu.openanalytics.phaedra.base.fs.src.eu.openanalytics.phaedra.base.fs.nio.NIOInterface.java", "BodyUseAPI": ["java.nio.file.Paths.get(java.lang.String)", "eu.openanalytics.phaedra.base.fs.SMBHelper.isSMBPath(java.lang.String)"], "Fixed commit": "c9d9ba4173b3830f480152219d499dd86aade3cd", "Url": "https://api.github.com/repos/openanalytics/phaedra", "Date": "2018-01-04T13:52:34Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (io.nuls.core.utils.str.StringUtils.isBlank(packageName)) { packageName = \"io.nuls\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6456/buggy-version/core.src.main.java.io.nuls.core.utils.spring.lite.utils.ScanUtil.java", "BodyUseAPI": [], "Fixed commit": "5d2eca2638f729b5441824f186f884bbb9700c70", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-03-02T06:25:35Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((io.nuls.core.utils.str.StringUtils.isBlank(pathName)) || (list == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6456/buggy-version/core.src.main.java.io.nuls.core.utils.spring.lite.utils.ScanUtil.java", "BodyUseAPI": [], "Fixed commit": "5d2eca2638f729b5441824f186f884bbb9700c70", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-03-02T06:25:35Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uaa.repository.app.log.AppLogTagRepository.findOneByNameAndCreatedId(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (one == null) { one = appLogTagRepository.findOneByIdAndCreatedId(tagName, createdid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1359/buggy-version/src.main.java.uaa.service.app.log.AppLogEachService.java", "BodyUseAPI": [], "Fixed commit": "964824a949bb98fba08119bb9ff0d131eb453ab5", "Url": "https://api.github.com/repos/xuxueyang/gediaoUaa", "Date": "2018-08-15T01:52:43Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stringWidth <= 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2130/buggy-version/src.main.java.featurecat.lizzie.gui.LizzieFrame.java", "BodyUseAPI": [], "Fixed commit": "ee7d769023b541b71a56d235768d36ee37562aeb", "Url": "https://api.github.com/repos/zsalch/lizzie", "Date": "2018-10-09T07:09:06Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foursides_perpendicular_flip) { b_foursides_perpendicular_flip = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3461/buggy-version/com.evolutionftc.autopilot.AutopilotHost.java", "BodyUseAPI": [], "Fixed commit": "9ccb0548609577edfc1deb369b23c7bd52d276c5", "Url": "https://api.github.com/repos/aedancullen/ftc-autopilot", "Date": "2018-09-28T01:46:12Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (listedFiles == null) { org.usfirst.frc.team2175.log.RobotLogger.log.log(java.util.logging.Level.SEVERE, ((\"Could not find directory at '\" + (org.usfirst.frc.team2175.log.RobotLogger.BASE_DIRECTORY)) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/485/buggy-version/src.org.usfirst.frc.team2175.log.RobotLogger.java", "BodyUseAPI": [], "Fixed commit": "dc2e81d8bf6eac52e1ebe3d4f4ca8d687fbc4db8", "Url": "https://api.github.com/repos/frc-2175/2018RobotCode", "Date": "2018-02-19T21:34:36Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (listedFiles == null) { org.usfirst.frc.team2175.log.RobotLogger.log.log(java.util.logging.Level.SEVERE, ((\"Could not find directory at '\" + (org.usfirst.frc.team2175.log.RobotLogger.BASE_DIRECTORY)) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/485/buggy-version/src.org.usfirst.frc.team2175.log.RobotLogger.java", "BodyUseAPI": [], "Fixed commit": "dc2e81d8bf6eac52e1ebe3d4f4ca8d687fbc4db8", "Url": "https://api.github.com/repos/frc-2175/2018RobotCode", "Date": "2018-02-19T21:34:36Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.soapboxrace.core.dao.CarClassesDAO.findByHash(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (carClassesEntity == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2099/buggy-version/src.main.java.com.soapboxrace.core.bo.CommerceBO.java", "BodyUseAPI": [], "Fixed commit": "b4239b53f9d751b629bfcf6b685cbd272c862c78", "Url": "https://api.github.com/repos/nilzao/soapbox-race-core", "Date": "2018-05-09T00:12:41Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (configuration.get(\"mapreduce.job.inputformat.class\").endsWith(\"DBInputFormat\")) { checkArgument(((configuration.get(DBConfiguration.INPUT_ORDER_BY_PROPERTY)) != null), ((\"Configuration must contain \\\"\" + (org.apache.hadoop.mapreduce.lib.db.DBConfiguration.INPUT_ORDER_BY_PROPERTY)) + \"\\\" when using DBInputFormat\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8139/buggy-version/sdks.java.io.hadoop-input-format.src.main.java.org.apache.beam.sdk.io.hadoop.inputformat.HadoopInputFormatIO.java", "BodyUseAPI": ["org.apache.beam.sdk.io.hadoop.inputformat.HadoopInputFormatIO.Read<K, V>.checkArgument(((configuration.get(DBConfiguration.INPUT_ORDER_BY_PROPERTY)) != null),((\"Configuration must contain \\\"\" + (org.apache.hadoop.mapreduce.lib.db.DBConfiguration.INPUT_ORDER_BY_PROPERTY)) + \"\\\" when using DBInputFormat\"))", "org.apache.hadoop.conf.Configuration.get(DBConfiguration.INPUT_ORDER_BY_PROPERTY)"], "Fixed commit": "7d068d7b5015d54d297ae3b515d14d7ca7ee4e8e", "Url": "https://api.github.com/repos/apilloud/beam", "Date": "2018-04-19T20:04:16Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((label != null) && (!(label.isEmpty()))) { cypherLabels.append(\":`\").append(label).append('`'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1674/buggy-version/core.src.main.java.org.neo4j.ogm.session.request.strategy.impl.TypesUtil.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(char)"], "Fixed commit": "8e420e199d1a1cca62e8e50fc4f60106616a6164", "Url": "https://api.github.com/repos/neo4j/neo4j-ogm", "Date": "2018-01-18T16:23:39Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Configs.Generic.FIX_VANILLA_DEBUG_RENDERERS.getBooleanValue()) { net.minecraft.client.renderer.GlStateManager.disableLighting(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1889/buggy-version/src.main.java.fi.dy.masa.minihud.event.RenderEventHandler.java", "BodyUseAPI": [], "Fixed commit": "773926f6e021a70ffc82cb355ab06fc7c73be424", "Url": "https://api.github.com/repos/maruohon/minihud", "Date": "2018-02-26T23:09:48Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.user_interface.commands.EditCommand.editParams.containsKey(\"journal\")) org.storage.LibraryStorage.getInstance().updateAll(Resource.JournalArticle, new org.storage.QueryParameters().add(\"article_id\", documentCursor.get(chatId).getId()), new org.storage.QueryParameters().add(\"journal_id\", java.lang.Integer.valueOf(org.user_interface.commands.EditCommand.editParams.get(\"journal\"))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1155/buggy-version/src.main.java.org.user_interface.commands.EditParser.java", "BodyUseAPI": ["org.storage.QueryParameters.add(java.lang.String,java.lang.Integer)", "org.user_interface.commands.EditParser.get(java.lang.String)", "org.storage.LibraryStorage.getInstance().updateAll(Resource.JournalArticle,new org.storage.QueryParameters().add(\"article_id\", documentCursor.get(chatId).getId()),new org.storage.QueryParameters().add(\"journal_id\", java.lang.Integer.valueOf(org.user_interface.commands.EditCommand.editParams.get(\"journal\"))))", "java.lang.Integer.valueOf(org.user_interface.commands.EditCommand.editParams.get(\"journal\"))"], "Fixed commit": "24c5e712b7f6cb7203cdd085edeebb5f1d20af47", "Url": "https://api.github.com/repos/Harrm/LibrarySystem", "Date": "2018-04-02T07:58:37Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.shxhzhxx.urlloader.UrlLoader.start(java.lang.String,java.lang.String,com.shxhzhxx.urlloader.UrlLoader.ProgressObserver,com.shxhzhxx.urlloader.TaskBuilder)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (((-1) == id) && (observer != null)) { observer.onFailed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9803/buggy-version/library.src.main.java.com.shxhzhxx.urlloader.UrlLoader.java", "BodyUseAPI": ["com.shxhzhxx.urlloader.UrlLoader.ProgressObserver.onFailed()"], "Fixed commit": "f515df40f8281679138da4774f29a3a3ec34d3a0", "Url": "https://api.github.com/repos/shxhzhxx/UrlLoader", "Date": "2018-09-14T06:16:34Z"},
{"Line": "=>889", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.cubeList.isEmpty()) { throw new java.lang.IllegalStateException(\"This model contains absolutely no boxes and a box could not be added!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7303/buggy-version/src.main.java.com.minelittlepony.model.AbstractPonyModel.java", "BodyUseAPI": [], "Fixed commit": "bf8025bdafec7c89cabc3dbe0c9b4c51d85dbe68", "Url": "https://api.github.com/repos/MineLittlePony/MineLittlePony", "Date": "2018-08-14T17:05:54Z"},
{"Line": "=>885", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.cubeList.isEmpty()) { result.addBox(0, 0, 0, 0, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7303/buggy-version/src.main.java.com.minelittlepony.model.AbstractPonyModel.java", "BodyUseAPI": ["net.minecraft.client.model.ModelRenderer.addBox(int,int,int,int,int,int)"], "Fixed commit": "bf8025bdafec7c89cabc3dbe0c9b4c51d85dbe68", "Url": "https://api.github.com/repos/MineLittlePony/MineLittlePony", "Date": "2018-08-14T17:05:54Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (Msg.equals(\"\")) { throw new exceptions.WrongMessageException(\"Message is empty\"); }else if (!(Msg.matches(\"^[0-9A-F]+$\"))) { throw new exceptions.NotHexadecimalFormatException(\"Message is Not in Hexadecimal format\", Msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7537/buggy-version/src.iso8583.Message.java", "BodyUseAPI": [], "Fixed commit": "e1d2d31903fcdbc4fbf9dd41e8d734b50b9ff700", "Url": "https://api.github.com/repos/YousifShafee/ISOMessage_project", "Date": "2018-08-01T08:13:00Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.settings.fingerprint.FingerprintEnrollEnrolling.getProgress(mSidecar.getEnrollmentSteps(),mSidecar.getEnrollmentRemaining())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (progress >= (com.android.settings.fingerprint.FingerprintEnrollEnrolling.PROGRESS_BAR_MAX)) { mDelayedFinishRunnable.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8763/buggy-version/src.com.android.settings.fingerprint.FingerprintEnrollEnrolling.java", "BodyUseAPI": [], "Fixed commit": "cfcd1c4b779ad61a824c212f64f69ecde2f49bf0", "Url": "https://api.github.com/repos/MiracleDROID/android_packages_providers_DownloadProvider", "Date": "2017-07-28T17:45:22Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((categories.size()) == 0) { setNoProductBackground(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8954/buggy-version/app.src.main.java.com.example.vipulsinghal.productfinder.retailer_offer_products.presenter.presenter.presenter.OfferProductsActivity.java", "BodyUseAPI": [], "Fixed commit": "1fab46e5b4402f4c55d1ce21aeee226c7559d14b", "Url": "https://api.github.com/repos/vipulsinghal23/ProductFinder", "Date": "2018-08-08T04:54:06Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((productDataModel.getProductOffer()) != null) { if (productDataModel.getProductOffer().getOfferID().equals(offerDataModelCard.getOfferID())) { if (!(categories.contains(productDataModel.getProductCategory()))) { categories.add(productDataModel.getProductCategory()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8954/buggy-version/app.src.main.java.com.example.vipulsinghal.productfinder.retailer_offer_products.presenter.presenter.presenter.OfferProductsActivity.java", "BodyUseAPI": ["com.example.vipulsinghal.productfinder.core.model1.ProductDataModel.getProductCategory()", "java.util.List<java.lang.String>.add(productDataModel.getProductCategory())", "productDataModel.getProductOffer().getOfferID()", "com.example.vipulsinghal.productfinder.core.model1.ProductDataModel.getProductOffer()", "java.util.List<java.lang.String>.contains(productDataModel.getProductCategory())", "productDataModel.getProductOffer().getOfferID().equals(offerDataModelCard.getOfferID())", "com.example.vipulsinghal.productfinder.core.model1.ProductDataModel.getProductCategory()"], "Fixed commit": "1fab46e5b4402f4c55d1ce21aeee226c7559d14b", "Url": "https://api.github.com/repos/vipulsinghal23/ProductFinder", "Date": "2018-08-08T04:54:06Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentCategoryProducts.get(i).getProductOffer()) != null) { if (currentCategoryProducts.get(i).getProductOffer().getOfferID().equals(offerDataModelCard.getOfferID())) { todaysOfferCategoryProducts.add(currentCategoryProducts.get(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8954/buggy-version/app.src.main.java.com.example.vipulsinghal.productfinder.retailer_offer_products.presenter.presenter.presenter.OfferProductsActivity.java", "BodyUseAPI": ["currentCategoryProducts.get(i).getProductOffer().getOfferID().equals(offerDataModelCard.getOfferID())", "java.util.List<com.example.vipulsinghal.productfinder.core.model1.ProductDataModel>.get(int)", "currentCategoryProducts.get(i).getProductOffer().getOfferID()", "java.util.List<com.example.vipulsinghal.productfinder.core.model1.ProductDataModel>.get(int)", "java.util.List<com.example.vipulsinghal.productfinder.core.model1.ProductDataModel>.add(currentCategoryProducts.get(i))", "currentCategoryProducts.get(i).getProductOffer()"], "Fixed commit": "1fab46e5b4402f4c55d1ce21aeee226c7559d14b", "Url": "https://api.github.com/repos/vipulsinghal23/ProductFinder", "Date": "2018-08-08T04:54:06Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4279/buggy-version/eppic-wui.src.main.java.ch.systemsx.sybit.crkwebui.client.homologs.gui.cells.LastTaxonCell.java", "BodyUseAPI": [], "Fixed commit": "f2942c2f23e5a8fcb3e48afae54be2fe63f5e339", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2018-09-23T20:54:31Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (props.getProperty(\"AUTOMATIC_ADD_CARD_ALERT\").equals(\"true\")) { for (org.magic.api.beans.MagicPrice mtgprice : p) { java.lang.String code = \"\"; java.lang.String price = \"\"; java.lang.String quantity = \"\"; org.apache.http.client.methods.HttpPost reqSearch = new org.apache.http.client.methods.HttpPost(((props.getProperty(\"URL\")) + \"/carts/updateInsertion\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6392/buggy-version/src.main.java.org.magic.api.pricers.impl.DeckTutorPricer.java", "BodyUseAPI": ["org.magic.api.pricers.impl.DeckTutorPricer.getProperty(java.lang.String)"], "Fixed commit": "950d92a7cc0661fcf62a1b2551de5cd103fa8bf2", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-01-09T16:48:12Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) > 8) { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/724/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "5305b981a388aae5129d96cd6cb1726be1121ff2", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-npradha", "Date": "2018-09-26T19:02:59Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((extraParams.length) > 0) { java.lang.Object[] extraParamsObj = new java.lang.Object[extraParams.length]; for (int i = 0; i < (extraParams.length); i++) { extraParamsObj[i] = extraParams[i]; } op.setExtraArgs(extraParamsObj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8180/buggy-version/nd4j.nd4j-backends.nd4j-api-parent.nd4j-api.src.main.java.org.nd4j.autodiff.samediff.serde.FlatBuffersMapper.java", "BodyUseAPI": [], "Fixed commit": "970dc39dfde47ade127da981e7430f4577c8b469", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2018-10-04T05:25:43Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(request.getParameter(\"currentComment\").equals(null))) { commentId = java.lang.Long.parseLong(request.getParameter(\"currentComment\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5494/buggy-version/src.friendbook.controller.servlets.CommentServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "java.lang.Long.parseLong(request.getParameter(\"currentComment\"))"], "Fixed commit": "b778c3f9659a3085d381e792e20da38e451a5eb3", "Url": "https://api.github.com/repos/Zdravko1/it_talents_final_project", "Date": "2018-04-22T11:43:34Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bi.kc213a.isChecked()) { if (!(bi.kc21498.isChecked())) { return validatorClass.EmptyTextBox(this, bi.kc214, getString(R.string.kc214)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9560/buggy-version/app.src.main.java.edu.aku.hassannaqvi.kmc.ui.SectionC2Activity.java", "BodyUseAPI": ["bi.kc21498.isChecked()", "edu.aku.hassannaqvi.kmc.ui.SectionC2Activity.EmptyTextBox(edu.aku.hassannaqvi.kmc.ui.SectionC2Activity,bi.kc214,getString(R.string.kc214))"], "Fixed commit": "38c7e5f81d11c26a02bfa084f1a6e5d596eb235b", "Url": "https://api.github.com/repos/shznaqvi/kmc", "Date": "2018-05-16T06:26:58Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bi.kc208a.isChecked()) { if (!(validatorClass.EmptyRadioButton(this, bi.kc209, bi.kc209a, getString(R.string.kc209)))) { return false; } if (bi.kc20996.isChecked()) { if (!(validatorClass.EmptyTextBox(this, bi.kc20996x, getString(R.string.other)))) { return false; } } if (!(validatorClass.EmptyRadioButton(this, bi.kc210, bi.kc210a, getString(R.string.kc210)))) { return false; } if (!(validatorClass.EmptyRadioButton(this, bi.kc211, bi.kc211a, getString(R.string.kc211)))) { return false; } if (!(validatorClass.EmptyRadioButton(this, bi.kc212, bi.kc212a, getString(R.string.kc212)))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9560/buggy-version/app.src.main.java.edu.aku.hassannaqvi.kmc.ui.SectionC2Activity.java", "BodyUseAPI": ["edu.aku.hassannaqvi.kmc.ui.SectionC2Activity.EmptyRadioButton(edu.aku.hassannaqvi.kmc.ui.SectionC2Activity,bi.kc209,bi.kc209a,getString(R.string.kc209))", "bi.kc20996.isChecked()", "edu.aku.hassannaqvi.kmc.ui.SectionC2Activity.EmptyRadioButton(edu.aku.hassannaqvi.kmc.ui.SectionC2Activity,bi.kc212,bi.kc212a,getString(R.string.kc212))", "edu.aku.hassannaqvi.kmc.ui.SectionC2Activity.EmptyTextBox(edu.aku.hassannaqvi.kmc.ui.SectionC2Activity,bi.kc20996x,getString(R.string.other))", "edu.aku.hassannaqvi.kmc.ui.SectionC2Activity.EmptyRadioButton(edu.aku.hassannaqvi.kmc.ui.SectionC2Activity,bi.kc210,bi.kc210a,getString(R.string.kc210))", "edu.aku.hassannaqvi.kmc.ui.SectionC2Activity.EmptyRadioButton(edu.aku.hassannaqvi.kmc.ui.SectionC2Activity,bi.kc211,bi.kc211a,getString(R.string.kc211))"], "Fixed commit": "38c7e5f81d11c26a02bfa084f1a6e5d596eb235b", "Url": "https://api.github.com/repos/shznaqvi/kmc", "Date": "2018-05-16T06:26:58Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scienceLab.isConnected()) { java.lang.Double frequency = scienceLab.getFrequency(knobMarker[knobState], null); saveAndSetData(java.lang.String.valueOf(frequency), getString(R.string.frequency_unit)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2937/buggy-version/app.src.main.java.org.fossasia.pslab.activity.MultimeterActivity.java", "BodyUseAPI": ["org.fossasia.pslab.communication.ScienceLab.getFrequency(java.lang.String,<nulltype>)"], "Fixed commit": "db2325e1c42a6271686419f0762122bb4f3379f3", "Url": "https://api.github.com/repos/abhinavraj23/pslab-android", "Date": "2018-07-13T15:50:59Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (comboBoxprecedence.getSelectionModel().isEmpty()) { java.lang.System.out.println(\"returning to scene1\"); javafx.collections.ObservableList<java.lang.String> bent = javafx.collections.FXCollections.observableArrayList(); bent.addAll(sample.Controller.listNames); comboBoxprecedence.setItems(bent); if (comboBoxprecedence.getSelectionModel().isEmpty()) { java.lang.System.out.println(sample.Controller.listNames); java.lang.System.out.println(\"yesreturn\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6035/buggy-version/src.sample.Controller.java", "BodyUseAPI": ["sample.ComboBox<java.lang.String>.getSelectionModel()", "comboBoxprecedence.getSelectionModel().isEmpty()", "sample.ComboBox<java.lang.String>.setItems(javafx.collections.ObservableList<java.lang.String>)"], "Fixed commit": "18edbaf0cbec485bd3bc7a1086b9bf912fcc9482", "Url": "https://api.github.com/repos/Software-Engineering-sg-13/Pert-graph-and-gantt-chart-generator", "Date": "2018-02-26T21:46:08Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(etcdJson.isValueNode())) { java.lang.String unflattened = new com.github.wnameless.json.unflattener.JsonUnflattener(mousio.etcd4j.EtcdUtil.jsonToString(mousio.etcd4j.EtcdUtil.flattenJson(etcdJson, \"\"))).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(new com.github.wnameless.json.flattener.KeyTransformer() { @java.lang.Override public java.lang.String transform(java.lang.String s) { return s.replaceAll(\"__DOT__\", \"\\\\.\"); } }).unflatten(); return mousio.etcd4j.EtcdUtil.mapper.readTree(unflattened); }else { return etcdJson; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9010/buggy-version/src.main.java.mousio.etcd4j.EtcdUtil.java", "BodyUseAPI": ["new com.github.wnameless.json.unflattener.JsonUnflattener(mousio.etcd4j.EtcdUtil.jsonToString(mousio.etcd4j.EtcdUtil.flattenJson(etcdJson, \"\"))).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(new com.github.wnameless.json.flattener.KeyTransformer() {\n    @java.lang.Override\n    public java.lang.String transform(java.lang.String s) {\n        return s.replaceAll(\"__DOT__\", \"\\\\.\");\n    }\n}).unflatten()", "com.github.wnameless.json.unflattener.JsonUnflattener.withFlattenMode(FlattenMode.MONGODB)", "mousio.etcd4j.EtcdUtil.jsonToString(com.fasterxml.jackson.databind.node.ObjectNode)", "new com.github.wnameless.json.unflattener.JsonUnflattener(mousio.etcd4j.EtcdUtil.jsonToString(mousio.etcd4j.EtcdUtil.flattenJson(etcdJson, \"\"))).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(com.github.wnameless.json.flattener.KeyTransformer)", "mousio.etcd4j.EtcdUtil.flattenJson(com.fasterxml.jackson.databind.JsonNode,java.lang.String)"], "Fixed commit": "d26c5fc98c50850ffef89aafb65d10b473f3f250", "Url": "https://api.github.com/repos/dgutierrez-stratio/etcd4j", "Date": "2018-01-22T13:54:32Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["etcdKeyGetRequest.send().get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (dataTree.getNode().getNodes().isEmpty()) { mousio.etcd4j.EtcdUtil.iterateOverNodes(jNode, dataTree.getNode()); }else { for (mousio.etcd4j.responses.EtcdKeysResponse.EtcdNode node : dataTree.getNode().getNodes()) { mousio.etcd4j.EtcdUtil.iterateOverNodes(jNode, node); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9010/buggy-version/src.main.java.mousio.etcd4j.EtcdUtil.java", "BodyUseAPI": ["mousio.etcd4j.responses.EtcdKeysResponse.getNode()", "dataTree.getNode().getNodes()", "mousio.etcd4j.responses.EtcdKeysResponse.getNode()", "mousio.etcd4j.EtcdUtil.iterateOverNodes(com.fasterxml.jackson.databind.node.ObjectNode,dataTree.getNode())"], "Fixed commit": "d26c5fc98c50850ffef89aafb65d10b473f3f250", "Url": "https://api.github.com/repos/dgutierrez-stratio/etcd4j", "Date": "2018-01-22T13:54:32Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.ByteBuffer.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((_bytes.length) != ((count * (org.aion.p2p.impl.zero.msg.ResActiveNodes.NODE_BYTES_LENGTH)) + 1)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8463/buggy-version/modP2pImpl.src.org.aion.p2p.impl.zero.msg.ResActiveNodes.java", "BodyUseAPI": [], "Fixed commit": "bc58b24b052b4a5982c9605f51a93d830924516c", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-04-12T21:33:53Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isClosed())) client.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1124/buggy-version/grakn-client.src.main.java.ai.grakn.remote.RemoteGraknTx.java", "BodyUseAPI": [], "Fixed commit": "44c3802fa6177ab087e3632f842c71246b6e1c59", "Url": "https://api.github.com/repos/fppt/grakn", "Date": "2018-02-20T13:39:40Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isClosed())) client.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1124/buggy-version/grakn-client.src.main.java.ai.grakn.remote.RemoteGraknTx.java", "BodyUseAPI": [], "Fixed commit": "44c3802fa6177ab087e3632f842c71246b6e1c59", "Url": "https://api.github.com/repos/fppt/grakn", "Date": "2018-02-20T13:39:40Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDead(ship.name)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6103/buggy-version/src.Grid.java", "BodyUseAPI": [], "Fixed commit": "e7ebbfb91d2fab4d459d564fe5b47bc86a2b0635", "Url": "https://api.github.com/repos/davidginesy/Battleship", "Date": "2018-02-04T22:51:12Z"},
{"Line": "=>945", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stepNumber == (-1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6202/buggy-version/vertical-stepper-form.src.main.java.ernestoyaquello.com.verticalstepperform.VerticalStepperFormLayout.java", "BodyUseAPI": [], "Fixed commit": "c52e6f42cf42cd35f8ab2acc8a6d1fd1203c363d", "Url": "https://api.github.com/repos/skela/vertical-stepper-form", "Date": "2018-10-08T09:45:52Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Graph<E>.getNode(E)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tempNode == null) return mReturn;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5782/buggy-version/Graph.java", "BodyUseAPI": [], "Fixed commit": "5c901e2ff886e36a4c114fc91d6649c47c0e9328", "Url": "https://api.github.com/repos/mwhassan/X-Team-Graph-Implementation", "Date": "2018-04-12T18:40:44Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vertex == null) return mReturn;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5782/buggy-version/Graph.java", "BodyUseAPI": [], "Fixed commit": "5c901e2ff886e36a4c114fc91d6649c47c0e9328", "Url": "https://api.github.com/repos/mwhassan/X-Team-Graph-Implementation", "Date": "2018-04-12T18:40:44Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.IFolder.getRawLocation()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rawLocation == null) { throw new org.ietr.dftools.workflow.WorkflowException(((\"Could not find target project for given path [\" + codegenPath) + \"]. Please change path in the scenario editor.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/75/buggy-version/plugins.org.ietr.preesm.pimm.algorithm.src.org.ietr.preesm.pimm.algorithm.spider.codegen.SpiderCodegenTask.java", "BodyUseAPI": [], "Fixed commit": "5198c6f585d7a3fdacf45ec4e8b15ebc65ef9337", "Url": "https://api.github.com/repos/preesm/preesm", "Date": "2018-07-23T12:13:21Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (LevelController.player2Character.equals(\"hunter\")) { if (key == (java.awt.event.KeyEvent.VK_I)) { Arrow.angle -= 1; } if (key == (java.awt.event.KeyEvent.VK_O)) { Arrow.angle += 1; } if (key == (java.awt.event.KeyEvent.VK_J)) { Arrow.initV -= 1; } if (key == (java.awt.event.KeyEvent.VK_K)) { Arrow.initV += 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9586/buggy-version/src.swing.KeyInput.java", "BodyUseAPI": [], "Fixed commit": "657b523117d1e27716c1c0fe24e5732b0be40b60", "Url": "https://api.github.com/repos/First529/Deadshot", "Date": "2018-05-10T09:12:27Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["handler.object.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (this.getBounds().intersects(((java.awt.geom.Rectangle2D) (tempObject.getBounds())))) { if (LevelController.player1Character.equals(\"hunter\")) handler.removeObject(KeyInput.arrow); if (LevelController.player2Character.equals(\"hunter\")) handler.removeObject(KeyInput.arrow2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9586/buggy-version/src.swing.Arrow.java", "BodyUseAPI": [], "Fixed commit": "657b523117d1e27716c1c0fe24e5732b0be40b60", "Url": "https://api.github.com/repos/First529/Deadshot", "Date": "2018-05-10T09:12:27Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.ClipboardManager.getPrimaryClip()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == clipData) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9749/buggy-version/app.src.main.java.com.ron.bonus.alibonus.util.BonusUtil.java", "BodyUseAPI": [], "Fixed commit": "aa59d8984b2a03046b56a0893713cf9c52725820", "Url": "https://api.github.com/repos/nevinguo/AliBonus", "Date": "2018-10-14T14:50:52Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newPos < 0) { newPos = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5359/buggy-version/app.src.main.java.com.erhannis.android.sketchdaw.SketchDAWProcess.java", "BodyUseAPI": [], "Fixed commit": "198610de276e7c8bfe2ddb5c02b006049c1254fa", "Url": "https://api.github.com/repos/Erhannis/SketchDAW", "Date": "2018-02-17T18:51:50Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mskcc.cbio.oncokb.api.pvt.AlterationUtils.findAlteration(org.mskcc.cbio.oncokb.api.pvt.Gene,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (exactMatch == null) { allAlterations.add(oncokbVariant); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9260/buggy-version/web.src.main.java.org.mskcc.cbio.oncokb.api.pvt.PrivateUtilsApiController.java", "BodyUseAPI": [], "Fixed commit": "6f13ea6c36b9f7b74b55b43b516ff766c03c02cb", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2018-02-14T23:14:52Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.calebjones.spacelaunchnow.content.database.SwitchPreferences.getInstance(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(switchPreferences.getAllSwitch())) { lspIds = me.calebjones.spacelaunchnow.content.util.FilterBuilder.getLSPIds(context); locationIds = me.calebjones.spacelaunchnow.content.util.FilterBuilder.getLocationIds(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3953/buggy-version/mobile.src.main.java.me.calebjones.spacelaunchnow.content.data.next.NextLaunchDataRepository.java", "BodyUseAPI": [], "Fixed commit": "bd5abffcfc13b1c61de20d6b717a4c08c0ecaef7", "Url": "https://api.github.com/repos/ItsCalebJones/SpaceLaunchNow-Android", "Date": "2018-10-20T14:07:17Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.size()) > 0) { int rewardLevel = this.floorKey(points); if (this.containsKey(rewardLevel)) { sx.blah.discord.handle.obj.IRole reward = com.danielm59.bcukbot.discord.DiscordBot.getRole(this.get(rewardLevel)); if (!(user.hasRole(reward))) { user.addRole(reward); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1561/buggy-version/src.main.java.com.danielm59.bcukbot.discord.pointSystem.PointsRewards.java", "BodyUseAPI": [], "Fixed commit": "5602ce6b56d3d5c8089737e52b629a2183d6b765", "Url": "https://api.github.com/repos/danielm59/BCUK_BOT", "Date": "2018-06-02T09:26:42Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!ttsEnabled) { stopTextToSpeech(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3711/buggy-version/BotsSDK.korebot.src.main.java.kore.botssdk.utils.TTSSynthesizer.java", "BodyUseAPI": [], "Fixed commit": "3e660f25cfa115a510b5865ff9dee30dc45f2084", "Url": "https://api.github.com/repos/Koredotcom/android-kore-sdk", "Date": "2018-01-08T09:59:10Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.mobile.love.enjoy.consume.service.DataBaseHelper.mDataBaseHelper) == null) { com.mobile.love.enjoy.consume.service.DataBaseHelper.mDataBaseHelper = new com.mobile.love.enjoy.consume.service.DataBaseHelper(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1418/buggy-version/app.src.main.java.com.mobile.love.enjoy.consume.service.DataBaseHelper.java", "BodyUseAPI": [], "Fixed commit": "39cfe7cdcf816fbb977bee38c64a2bfa81556092", "Url": "https://api.github.com/repos/JerryCaicos/LoveEnjoy", "Date": "2018-03-06T07:14:31Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nodeTable.getSpec().findColumnIndex(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tobIndex >= 0) s.setTypeOfBusiness(de.bund.bfr.knime.IO.getCleanString(row.getCell(tobIndex)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8685/buggy-version/de.bund.bfr.knime.openkrise.src.de.bund.bfr.knime.openkrise.FCL_DB_WriterNodeModel.java", "BodyUseAPI": ["de.bund.bfr.knime.IO.getCleanString(row.getCell(tobIndex))", "org.knime.core.data.DataRow.getCell(int)", "de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.Station.setTypeOfBusiness(de.bund.bfr.knime.IO.getCleanString(row.getCell(tobIndex)))"], "Fixed commit": "4ac00d24e0e426c5a59bbc558c515a69659d7680", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2018-01-08T11:49:51Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nodeTable.getSpec().findColumnIndex(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (countryIndex >= 0) s.setCountry(de.bund.bfr.knime.IO.getCleanString(row.getCell(countryIndex)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8685/buggy-version/de.bund.bfr.knime.openkrise.src.de.bund.bfr.knime.openkrise.FCL_DB_WriterNodeModel.java", "BodyUseAPI": ["de.bund.bfr.knime.IO.getCleanString(row.getCell(countryIndex))", "de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.Station.setCountry(de.bund.bfr.knime.IO.getCleanString(row.getCell(countryIndex)))", "org.knime.core.data.DataRow.getCell(int)"], "Fixed commit": "4ac00d24e0e426c5a59bbc558c515a69659d7680", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2018-01-08T11:49:51Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nodeTable.getSpec().findColumnIndex(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (addressIndex >= 0) { address = de.bund.bfr.knime.IO.getCleanString(row.getCell(addressIndex)); s.setAddress(address); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8685/buggy-version/de.bund.bfr.knime.openkrise.src.de.bund.bfr.knime.openkrise.FCL_DB_WriterNodeModel.java", "BodyUseAPI": ["de.bund.bfr.knime.IO.getCleanString(row.getCell(addressIndex))", "org.knime.core.data.DataRow.getCell(int)"], "Fixed commit": "4ac00d24e0e426c5a59bbc558c515a69659d7680", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2018-01-08T11:49:51Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (resolvedType1 == null) { return \"java/lang/Object\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9178/buggy-version/weaver.src.org.aspectj.weaver.bcel.asm.StackMapAdder.java", "BodyUseAPI": [], "Fixed commit": "3a9d9ca0eac6938503acf6a92dfad1fc1c65d567", "Url": "https://api.github.com/repos/eclipse/org.aspectj", "Date": "2018-03-21T19:26:11Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (compare == null) { try { compare = java.lang.Float.parseFloat(filterField.getText()); } catch (java.lang.Exception ex) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3330/buggy-version/src.main.java.edu.pitt.cs.admt.cytoscape.annotations.ui.SearchAnnotationPanel.java", "BodyUseAPI": [], "Fixed commit": "8c696a271083e2643e7c59689c10a16c9b23f567", "Url": "https://api.github.com/repos/bd2kccd/ccd-annotations-cytoscape", "Date": "2018-03-10T04:53:01Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.openConnection()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((con.getResponseCode()) == (java.net.HttpURLConnection.HTTP_OK)) { reader = new java.io.BufferedReader(new java.io.InputStreamReader(de.morigm.smt.Main.getInstance().getDowloadHelper().getDownloadStream((((folder.website) + (folder.name)) + \"/libs\")))); while (reader.ready()) { java.lang.String text = reader.readLine(); boolean b = check(text, folders); if (!b) return 4; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8496/buggy-version/de.morigm.smt.source.SourceManager.java", "BodyUseAPI": [], "Fixed commit": "bb6021504379b9ac06481234f6b548ef1e42e27b", "Url": "https://api.github.com/repos/MoriGM/ServerManagerTool", "Date": "2018-05-13T17:31:18Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.izforge.izpack.core.resource.LocaleHelper.getISO3Country(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(\"\".equals(country3))) { locales.put(country3, locale); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/222/buggy-version/izpack-core.src.main.java.com.izforge.izpack.core.resource.DefaultLocales.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Locale>.put(java.lang.String,java.util.Locale)"], "Fixed commit": "894fdb29f60e77dc1367eac8654dd5d26b81500d", "Url": "https://api.github.com/repos/izpack/izpack", "Date": "2018-03-30T07:30:17Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageMatrix) == null) { android.util.Log.e(getClass().getName(), \"image matrix is null in onDraw\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4397/buggy-version/app.src.main.java.at.searles.fractview.ui.ScaleableImageView.java", "BodyUseAPI": [], "Fixed commit": "498e242070400a8812a4320819667be16417c1cd", "Url": "https://api.github.com/repos/searles/FractviewAndroid", "Date": "2018-03-20T21:36:29Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.api.client.googleapis.auth.oauth2.GoogleCredential.getApplicationDefault()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (credential.createScopedRequired()) { credential = credential.createScoped(java.util.Collections.singleton(StorageScopes.DEVSTORAGE_FULL_CONTROL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2241/buggy-version/halyard-core.src.main.java.com.netflix.spinnaker.halyard.core.registry.v1.GoogleProfileReader.java", "BodyUseAPI": ["com.google.api.client.googleapis.auth.oauth2.GoogleCredential.createScoped(java.util.Set)"], "Fixed commit": "1703a892885566d6e0d5e64a4ee792dea36d042a", "Url": "https://api.github.com/repos/duftler/halyard", "Date": "2018-04-19T17:35:26Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (authorsTopRatedPratilipiIds != null) { log.info((\"Got for TopAuthor-TopContent \" + (authorsTopRatedPratilipiIds.size()))); com.pratilipi.recommendations.dto.Pratilipi ptlp; int count = 0; for (java.lang.Long pId : authorsTopRatedPratilipiIds) { if ((!(userReadPratilipiIds.contains(pId))) && (count < bucketLimit)) { ptlp = new com.pratilipi.recommendations.dto.Pratilipi(); ptlp.setPratilipiId(pId); meta = new java.util.HashMap<java.lang.String, java.lang.Object>(); meta.put(\"recommendationType\", \"TopAuthor-TopContent\"); ptlp.setMeta(meta); pratilipis.add(ptlp); count++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2740/buggy-version/src.main.java.com.pratilipi.recommendations.service.PratilipiService.java", "BodyUseAPI": ["org.apache.log4j.Logger.info(java.lang.String)", "java.util.List<java.lang.Long>.size()"], "Fixed commit": "4224312d034524a814149aee58feaaa0efd161bc", "Url": "https://api.github.com/repos/Pratilipi/ecs-recommendation", "Date": "2018-04-03T11:37:09Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.recommendations.dao.PratilipiDao.getPratilipiById(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pratilipi.getWord_count()) != null) { minWordCount = (pratilipi.getWord_count()) - ((pratilipi.getWord_count()) / 2); maxWordCount = (pratilipi.getWord_count()) + ((pratilipi.getWord_count()) / 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2740/buggy-version/src.main.java.com.pratilipi.recommendations.service.PratilipiService.java", "BodyUseAPI": ["com.pratilipi.recommendations.jdo.Pratilipi.getWord_count()", "com.pratilipi.recommendations.jdo.Pratilipi.getWord_count()", "com.pratilipi.recommendations.jdo.Pratilipi.getWord_count()", "com.pratilipi.recommendations.jdo.Pratilipi.getWord_count()"], "Fixed commit": "4224312d034524a814149aee58feaaa0efd161bc", "Url": "https://api.github.com/repos/Pratilipi/ecs-recommendation", "Date": "2018-04-03T11:37:09Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.therickys93.wikiserver.database.WikiDatabase.getConnections()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (response.isEmpty()) { return \"Nessuna connessione trovata\"; }else { return response; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2794/buggy-version/src.main.java.it.therickys93.wikiserver.wiki.ConnectionsCommand.java", "BodyUseAPI": [], "Fixed commit": "bee3f4ee37b75e7d0d666b9da6f2d66885e7820d", "Url": "https://api.github.com/repos/therickys93/wikiserver", "Date": "2018-04-24T15:44:45Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.ioTHubConnectionType) == (com.microsoft.azure.sdk.iot.device.transport.amqps.IoTHubConnectionType.USE_TRANSPORTCLIENT)) { if ((this.transportClient.getTransportClientState()) == (TransportClient.TransportClientState.OPENED)) { throw new java.lang.IllegalStateException(((\"setOption \" + (SET_CERTIFICATE_PATH)) + \" only works when the transport is closed\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9452/buggy-version/device.iot-device-client.src.main.java.com.microsoft.azure.sdk.iot.device.DeviceClient.java", "BodyUseAPI": [], "Fixed commit": "434063d2f60dbea8e0894ed2af94c3d80b8e5256", "Url": "https://api.github.com/repos/Azure/azure-iot-sdk-java", "Date": "2018-09-25T21:41:37Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((characterDataList) != null) && (!(characterDataList.isEmpty()))) { if ((characterDataList.get(0).getName().compareToIgnoreCase(characterDataList.get(((characterDataList.size()) - 1)).getName())) > 0) { java.util.Collections.sort(characterDataList, com.example.randyperrone.starwarscharacterbio.Model.CharacterData); mAdapter.notifyDataSetChanged(); }else { java.util.Collections.sort(characterDataList, com.example.randyperrone.starwarscharacterbio.Model.CharacterData); mAdapter.notifyDataSetChanged(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1622/buggy-version/app.src.main.java.com.example.randyperrone.starwarscharacterbio.CharacterListFragment.java", "BodyUseAPI": ["java.util.List<java.lang.CharacterData>.get(int)", "java.lang.CharacterData.getName()", "java.lang.CharacterData.getName()", "java.util.Collections.sort(java.util.List<java.lang.CharacterData>,com.example.randyperrone.starwarscharacterbio.Model.CharacterData)", "characterDataList.get(0).getName().compareToIgnoreCase(characterDataList.get(((characterDataList.size()) - 1)).getName())", "java.util.Collections.sort(java.util.List<java.lang.CharacterData>,com.example.randyperrone.starwarscharacterbio.Model.CharacterData)", "java.util.List<java.lang.CharacterData>.size()", "java.util.List<java.lang.CharacterData>.get(int)"], "Fixed commit": "882a7854dbd5e5e7cfaf75b0067cde806fc901a1", "Url": "https://api.github.com/repos/randyperrone/StarWarsCharacterBio", "Date": "2018-10-28T23:55:03Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (chapter > 114) { java.lang.System.out.println(\"Unable to create surah notes\\n\"); java.lang.System.out.println((\"Invalid surah chapter no.\" + \" Please insert a range from surah 1-114\")); }else { com.semakula.Main.diary1.addSurah(name, contents, chapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7586/buggy-version/src.com.semakula.Main.java", "BodyUseAPI": ["com.semakula.SurahList.addSurah(java.lang.String,java.lang.String,int)"], "Fixed commit": "ef53122c143a3c42ad193dbff6ea8ad431e000e9", "Url": "https://api.github.com/repos/SennaSemakula/Quran-Diary", "Date": "2018-05-05T10:01:32Z"},
{"Line": "=>682", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null != sdfDoa) { strSdfDoa = (\"'\" + sdfDoa) + \"'\"; }else { strSdfDoa = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2866/buggy-version/src.com.sicamms.dao.MemberMgmtDao.java", "BodyUseAPI": [], "Fixed commit": "68272460c57d00af736370fcde89b9fce7fe2011", "Url": "https://api.github.com/repos/dhanan85/SICAMMSJFX", "Date": "2018-01-04T06:57:25Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null != sdfDob) { strSdfDob = (\"'\" + sdfDob) + \"'\"; }else { strSdfDob = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2866/buggy-version/src.com.sicamms.dao.MemberMgmtDao.java", "BodyUseAPI": [], "Fixed commit": "68272460c57d00af736370fcde89b9fce7fe2011", "Url": "https://api.github.com/repos/dhanan85/SICAMMSJFX", "Date": "2018-01-04T06:57:25Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (grafeasUrl.equals(\"http://:\")) { grafeasUrl = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4769/buggy-version/src.main.java.com.oracle.sscm.client.plugins.maven.GrafeasBuildMojo.java", "BodyUseAPI": [], "Fixed commit": "244f7e89645e25ad107bc230a068b256da463a2f", "Url": "https://api.github.com/repos/wmhopkins/sscm-client", "Date": "2018-03-16T14:59:46Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(message.getCertifications()[0].equals(com.americancsm.gdpr.webassess.NONE))) { acsmComplexityValue -= (acsmComplexityValue * (message.getCertifications().length)) * 0.05; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5403/buggy-version/src.main.java.com.americancsm.gdpr.webassess.GDPRAssessor.java", "BodyUseAPI": ["com.americancsm.gdpr.webassess.model.GDPRAssessmentInfo.getCertifications()"], "Fixed commit": "55594f02d437266ceb80108c13b4fbf7e85a66f6", "Url": "https://api.github.com/repos/davewolfusa/GDPR-AWS-WebAssessment", "Date": "2018-02-22T01:53:11Z"},
{"Line": "=>3905", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (visibility == (android.view.View.VISIBLE)) { initialAwakenScrollBars(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2563/buggy-version/core.java.android.view.View.java", "BodyUseAPI": [], "Fixed commit": "b19b17ed39d2ffaa799d63878988e1d93a389e07", "Url": "https://api.github.com/repos/sudosurootdev/frameworks_base", "Date": "2010-04-19T22:49:44Z"},
{"Line": "=>5933", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mPrivateFlags) & (android.view.View.AWAKEN_SCROLL_BARS_ON_ATTACH)) != 0) { initialAwakenScrollBars(); mPrivateFlags &= ~(android.view.View.AWAKEN_SCROLL_BARS_ON_ATTACH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2563/buggy-version/core.java.android.view.View.java", "BodyUseAPI": [], "Fixed commit": "b19b17ed39d2ffaa799d63878988e1d93a389e07", "Url": "https://api.github.com/repos/sudosurootdev/frameworks_base", "Date": "2010-04-19T22:49:44Z"},
{"Line": "=>3848", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (visibility == (android.view.View.VISIBLE)) { if ((mAttachInfo) != null) { initialAwakenScrollBars(); }else { mPrivateFlags |= android.view.View.AWAKEN_SCROLL_BARS_ON_ATTACH; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2563/buggy-version/core.java.android.view.View.java", "BodyUseAPI": [], "Fixed commit": "b19b17ed39d2ffaa799d63878988e1d93a389e07", "Url": "https://api.github.com/repos/sudosurootdev/frameworks_base", "Date": "2010-04-19T22:49:44Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.imei.app.service.PushTokenService.queryByUserId(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (pushToken != null) { org.json.JSONObject jsonObject = com.imei.app.util.MessagePushUtil.getInstance().pushSingleMessage(message, pushToken); if ((jsonObject.getInt(\"ret_code\")) != 0) { messageService.delete(message.getId()); return new com.imei.app.util.Result((-1), \"\u6d88\u606f\u53d1\u9001\u5931\u8d25\uff0c\u8bf7\u7a0d\u5019\u91cd\u8bd5\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9790/buggy-version/src.com.imei.app.controller.ImController.java", "BodyUseAPI": ["com.imei.app.util.MessagePushUtil.getInstance().pushSingleMessage(com.imei.app.entity.Message,com.imei.app.entity.PushToken)"], "Fixed commit": "4e3d684f0f78ba37a1e34d428606e79bc635a1bc", "Url": "https://api.github.com/repos/iorizhou/imei_java", "Date": "2018-08-29T06:47:22Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.Ben12345rocks.VotingPlugin.Data.ServerData.getInstance().getVotePartyExtraRequired()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (extra > 0) { return required + extra; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8842/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.VoteParty.VoteParty.java", "BodyUseAPI": [], "Fixed commit": "5378d4e3722765ff182c2e41b55df02720c38011", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2018-05-04T20:57:37Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (scheduledExecutorService == null) { throw new java.lang.IllegalArgumentException(\"scheduledExecutorService cannot be null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6135/buggy-version/device.iot-device-client.src.main.java.com.microsoft.azure.sdk.iot.device.transport.amqps.AmqpsSessionManager.java", "BodyUseAPI": [], "Fixed commit": "31e4c8eef583adf956f274c369d2f6e06ef7ee40", "Url": "https://api.github.com/repos/Azure/azure-iot-sdk-java", "Date": "2018-10-05T18:28:02Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentState) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5217/buggy-version/Robot2018.src.org.usfirst.frc2813.Robot2018.motor.simulated.Simulated.java", "BodyUseAPI": [], "Fixed commit": "4ffe947a2015e05587c30ae89c4a8a16d40c55b0", "Url": "https://api.github.com/repos/Prospect-Robotics/Robot2018", "Date": "2018-03-21T23:03:08Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (rawJsonDocument != null) { return org.avol.tinyservice.url.repository.URLDao.mapper.readValue(rawJsonDocument.content(), org.avol.tinyservice.url.repository.entity.UrlModel.class); }else { throw new org.avol.tinyservice.common.exception.ServiceException(org.avol.tinyservice.common.error.ErrorCode.KEY_NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3060/buggy-version/src.main.java.org.avol.tinyservice.url.repository.URLDao.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readValue(rawJsonDocument.content(),java.lang.Class)", "com.couchbase.client.java.document.RawJsonDocument.content()"], "Fixed commit": "ab038de32d9b415b750d68858fea1c5895261016", "Url": "https://api.github.com/repos/lovababu/tinyurl-service", "Date": "2018-06-11T17:54:14Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.epfl.sweng.favors.database.User.get(ch.epfl.sweng.favors.database.User.StringFields)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((gender == null) || ((gender.length()) == 0)) return ch.epfl.sweng.favors.database.User.UserGender.DEFAULT;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8115/buggy-version/app.src.main.java.ch.epfl.sweng.favors.database.User.java", "BodyUseAPI": [], "Fixed commit": "5b090dcdb46c57084e5f172e13d710e5f4677592", "Url": "https://api.github.com/repos/basbeu/theSofties", "Date": "2018-10-17T01:28:45Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bytesSize <= 0) { return \"0B\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4398/buggy-version/src.main.java.re.vianneyfaiv.persephone.ui.util.Formatters.java", "BodyUseAPI": [], "Fixed commit": "faf678c5cb1c5e6a200a72ae777f1ebdc0acc253", "Url": "https://api.github.com/repos/vianneyfaivre/Persephone", "Date": "2018-05-17T21:45:45Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (colorsCount.get(color2)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9069/buggy-version/src.CubeUtils.java", "BodyUseAPI": [], "Fixed commit": "478b0796e4124753daddd9ea3fc0ff222055a7bf", "Url": "https://api.github.com/repos/UriSha/rubiksCube", "Date": "2018-01-10T21:26:21Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (colorsCount.get(color1)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9069/buggy-version/src.CubeUtils.java", "BodyUseAPI": [], "Fixed commit": "478b0796e4124753daddd9ea3fc0ff222055a7bf", "Url": "https://api.github.com/repos/UriSha/rubiksCube", "Date": "2018-01-10T21:26:21Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kohsuke.stapler.StaplerRequest.bindJSON(java.lang.Class,net.sf.json.JSONObject)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (value != null) { value.setDescription(getDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6791/buggy-version/core.src.main.java.hudson.model.StringParameterDefinition.java", "BodyUseAPI": ["hudson.model.StringParameterValue.setDescription(getDescription())"], "Fixed commit": "26be4dc3dcf8f289b003083dbcc347b06d4fdc5a", "Url": "https://api.github.com/repos/ErikVerheul/jenkins", "Date": "2018-06-01T08:20:20Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (iTypeBinding != null) { exprType = ca.uwaterloo.jrefactoring.utility.ASTNodeUtil.typeFromBinding(ast, iTypeBinding); }else { exprType = ca.uwaterloo.jrefactoring.utility.ASTNodeUtil.typeFromBinding(ast, expr.resolveTypeBinding()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9535/buggy-version/src.ca.uwaterloo.jrefactoring.template.RFTemplate.java", "BodyUseAPI": ["ca.uwaterloo.jrefactoring.utility.ASTNodeUtil.typeFromBinding(ca.uwaterloo.jrefactoring.template.AST,ca.uwaterloo.jrefactoring.template.ITypeBinding)"], "Fixed commit": "8286b3a479872192d76999789e1b186124119bac", "Url": "https://api.github.com/repos/yannickzj/JTestParametrizer", "Date": "2018-08-04T18:47:12Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.qfox.jestful.server.resolver.Action.getURI()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(URI.endsWith(\"/\"))) URI = URI.concat(\"/\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9353/buggy-version/jestful-server.src.main.java.org.qfox.jestful.server.resolver.PathResolver.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)"], "Fixed commit": "2b93ff93686842b30ff3576820a075673eb44ccb", "Url": "https://api.github.com/repos/core-lib/jestful", "Date": "2018-03-01T02:05:12Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(matcher.find())) throw new java.lang.IllegalStateException((((\"uri \" + URI) + \" is not match with \") + pattern));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9353/buggy-version/jestful-server.src.main.java.org.qfox.jestful.server.resolver.PathResolver.java", "BodyUseAPI": [], "Fixed commit": "2b93ff93686842b30ff3576820a075673eb44ccb", "Url": "https://api.github.com/repos/core-lib/jestful", "Date": "2018-03-01T02:05:12Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dto.getTagNames()) != null) { for (java.lang.String tagName : dto.getTagNames()) { com.teammistique.extensionrepository.models.Tag tag = new com.teammistique.extensionrepository.models.Tag(tagName); tags.add(tagService.createTag(tag)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8450/buggy-version/src.main.java.com.teammistique.extensionrepository.services.ExtensionServiceImpl.java", "BodyUseAPI": ["com.teammistique.extensionrepository.models.DTO.ExtensionDTO.getTagNames()"], "Fixed commit": "328061cb489feea9c3012ff2648f4bf6f1f238c1", "Url": "https://api.github.com/repos/TeamMistique/ExtensionRepository", "Date": "2018-09-09T14:27:42Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((id == (Controller.SelectElementHandler.Mouse.RELEASED)) && ((canvas.getMode()) == (Model.Canvas.Mode.ADDMESSAGE))) { Controller.SelectElementHandler.resetRoles(canvas); canvas.setDefaultMode(); java.lang.System.out.println(\"######## Releasing Button + Editing Label Message ########\"); }else if ((id == (Controller.SelectElementHandler.Mouse.RELEASED)) && ((canvas.getMode()) != (Model.Canvas.Mode.DEFAULT))) { Controller.SelectElementHandler.deselectAll(canvas); Controller.SelectElementHandler.resetRoles(canvas); canvas.setDefaultMode(); java.lang.System.out.println(\"######## Releasing Button ########\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7859/buggy-version/src.Controller.SelectElementHandler.java", "BodyUseAPI": ["Controller.Canvas.setDefaultMode()", "Controller.SelectElementHandler.deselectAll(Controller.Canvas)", "Controller.SelectElementHandler.resetRoles(Controller.Canvas)", "Controller.SelectElementHandler.resetRoles(Controller.Canvas)", "Controller.Canvas.setDefaultMode()", "Controller.Canvas.getMode()"], "Fixed commit": "da1c1a7db7145c8f71b4bc228af666f8ee570af7", "Url": "https://api.github.com/repos/woutmees/SWOP2", "Date": "2018-04-09T23:11:26Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pentaho.di.core.Const.splitPath(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((path.length) == 1) { path = org.pentaho.di.core.Const.splitPath(transPath, \"\\\\\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/2451/buggy-version/kettle-sdk-embedding-samples.src.main.java.org.pentaho.di.sdk.samples.embedding.RunningTransformations.java", "BodyUseAPI": [], "Fixed commit": "815df97cb9d4f5b470a03c23d653095ee316ae44", "Url": "https://api.github.com/repos/pentaho-amessier/pdi-sdk-plugins", "Date": "2018-01-15T12:14:07Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(loginUnsuccessfulLBL.isVisible())) { loginSuccesfullLBL.setVisible(true); resetSignIn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9762/buggy-version/src.keystroke.mainFrame.java", "BodyUseAPI": [], "Fixed commit": "7ea89e0b4c19aef69ea0400d06cce25de08d41b2", "Url": "https://api.github.com/repos/maneeshaindrachapa/Bio-metric", "Date": "2018-01-30T12:39:49Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tokens[i].contains(\"username\")) { if (teamSay) { user = ((\"(\" + (tokens[(i + 2)].replace(\">\", \"\"))) + \") \") + (tokens[(i + 3)].replace(\"</span>\", \"\")); }else { user = tokens[(i + 1)].replace(\">\", \"\").split(\"<\")[0]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6231/buggy-version/voter.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "a33ed6da2dffc1370bf0add1eea1a6ad29bb3bec", "Url": "https://api.github.com/repos/Cody8295/KF2AdminTool", "Date": "2018-02-13T20:47:27Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (arg != null) { for (java.lang.String s : arg) { args = ((args) + s) + \",\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/132/buggy-version/src.main.java.io.nuls.api.entity.ContractCallInfo.java", "BodyUseAPI": [], "Fixed commit": "c3ee5882bf1e8049511ed00a3b73de75e38486e4", "Url": "https://api.github.com/repos/nuls-io/API-server", "Date": "2018-10-09T05:51:25Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (arrays != null) { for (java.lang.String[] arg : arrays) { if (arg != null) { for (java.lang.String s : arg) { args = ((args) + s) + \",\"; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/132/buggy-version/src.main.java.io.nuls.api.entity.ContractCallInfo.java", "BodyUseAPI": [], "Fixed commit": "c3ee5882bf1e8049511ed00a3b73de75e38486e4", "Url": "https://api.github.com/repos/nuls-io/API-server", "Date": "2018-10-09T05:51:25Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 1) { return mContext.getString(R.string.category_moscow); }else if (position == 2) { return mContext.getString(R.string.category_sochi); }else { return mContext.getString(R.string.category_volgograd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4728/buggy-version/app.src.main.java.com.example.android.androidbasicsudacityprojectfive.CategoryAdapter.java", "BodyUseAPI": [], "Fixed commit": "c7b8862c157cbf570fcdbf683f97519a406d6d17", "Url": "https://api.github.com/repos/mbacfa/androidBasicsUdacityProjectFive", "Date": "2018-07-03T20:01:56Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tripStop.getDescription().equals(trip.getDestination()))) { stopsDescriptions.add(tripStop.getDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6273/buggy-version/app.src.user.java.mainFunctionality.reservations.ReservationActivity.java", "BodyUseAPI": ["utn.proy2k18.vantrack.mainFunctionality.search.TripStop.getDescription()", "java.util.ArrayList<java.lang.String>.add(tripStop.getDescription())"], "Fixed commit": "5c53c897e6ec3d4fd80d0898b76a8fed7b234ca0", "Url": "https://api.github.com/repos/JuanPabloNicosanti/VanTrackAndroid", "Date": "2018-10-23T03:17:44Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (weight.isEmpty()) { weight = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3291/buggy-version/LostLuggage.src.main.java.is103.lostluggage.Controllers.Service.ServiceInputLuggageViewController.java", "BodyUseAPI": [], "Fixed commit": "6696ba9b4b7333f2a0cfb20e5451ef1592c07675", "Url": "https://api.github.com/repos/MDBoerr/CorendonLostLuggage", "Date": "2018-01-14T19:02:57Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mBinding.VideoView.findViewById(R.id.exo_position)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (videoPosView != null) { videoPosView.setImportantForAccessibility(View.IMPORTANT_FOR_ACCESSIBILITY_NO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1431/buggy-version/LearningMachine.app.src.main.java.com.learningmachine.android.app.ui.video.VideoFragment.java", "BodyUseAPI": ["android.view.View.setImportantForAccessibility(View.IMPORTANT_FOR_ACCESSIBILITY_NO)"], "Fixed commit": "6f8b4e630494ef2155f71f42eb7d0db7fdf872f5", "Url": "https://api.github.com/repos/SmallPlanetAndroid/wallet-android", "Date": "2018-08-29T22:15:28Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mComporator) != null) { java.util.Collections.sort(mAppModels, mComporator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7930/buggy-version/app.src.main.java.com.taleckij_anton.taleckijapp.launcher.launcher_apps_fragment.recycler.AppsAdapter.java", "BodyUseAPI": [], "Fixed commit": "fdea425608519889894f9ad7614ce25bc68b2ee3", "Url": "https://api.github.com/repos/ByMyTry/TaleckijAndroidApp", "Date": "2018-02-13T03:16:17Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(names.containsKey(type))) return java.util.Collections.emptyList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8536/buggy-version/src.main.java.ru.prolog.logic.storage.type.TypeStorageImpl.java", "BodyUseAPI": [], "Fixed commit": "4ab62a075568bcba8445ef2b114811f79115f95d", "Url": "https://api.github.com/repos/FalaleevMaxim/Prolog", "Date": "2018-05-26T19:10:20Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isInPlace())) { return true; }else { org.modeldriven.alf.syntax.expressions.impl.LeftHandSide lhs = this.getLeftHandSide(); org.modeldriven.alf.syntax.expressions.impl.ElementReference parameter = this.getFirstParameter(); return (lhs != null) && (((lhs.getType()) == null) || ((((lhs.getImpl().getAssignedName()) == null) || ((this.getOldAssignment()) != null)) && (lhs.getImpl().isAssignableFrom(parameter, lhs.getImpl().isNullable())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5622/buggy-version/org.modeldriven.alf.src.org.modeldriven.alf.syntax.expressions.impl.SequenceOperationExpressionImpl.java", "BodyUseAPI": [], "Fixed commit": "1f54267a8a142ea343960d6441826d1b0a110291", "Url": "https://api.github.com/repos/ModelDriven/Alf-Reference-Implementation", "Date": "2018-09-17T13:07:28Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) { runtimeSettingsBuilder.consoleOutput(true); runtimeSettingsBuilder.remoteDebuggingEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5278/buggy-version/app.src.common.shared.org.mozilla.vrbrowser.SessionStore.java", "BodyUseAPI": [], "Fixed commit": "9cb3b4375843df9d3cdf653bd97a1601d4db287c", "Url": "https://api.github.com/repos/MozillaReality/FirefoxReality", "Date": "2018-08-01T21:13:09Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Camera.Parameters.getMaxNumMeteringAreas()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (maxNumMeteringAreas > 0) { parameters.setMeteringAreas(fAreas); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1138/buggy-version/android.src.main.java.com.reactnativecomponent.barcode.camera.CameraManager.java", "BodyUseAPI": [], "Fixed commit": "b04c5c5be367cfd306ac215ce3e3a6ada318e52a", "Url": "https://api.github.com/repos/randy-yang/react-native-smart-barcode", "Date": "2018-09-03T08:45:23Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.przemyslawkonik.repository.BudgetRepository.findByUserAndYearAndMonth(userService.getSessionUser(),int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (budget == null) { model.addAttribute(\"budget\", budgetRepo.findLatestByUserId(userService.getSessionUser().getId())); }else { model.addAttribute(\"budget\", budgetRepo.findByUserAndYearAndMonth(userService.getSessionUser(), year, month)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8376/buggy-version/src.main.java.com.github.przemyslawkonik.controller.BudgetController.java", "BodyUseAPI": [], "Fixed commit": "ab89c464fc1238ad265c550633b2133fc8bd60ac", "Url": "https://api.github.com/repos/przemyslawkonik/budget-planner", "Date": "2018-01-11T21:33:20Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cc.corbin.budgettracker.DayViewActivity.findViewById(R.id.totalCurrencySpinner)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (Currencies.integer[totalCurrencySpinner.getSelectedItemPosition()]) { cost = java.lang.String.format(\"%.00f\", 0.0F); }else { cost = java.lang.String.format(\"%.02f\", 0.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/116/buggy-version/app.src.main.java.cc.corbin.budgettracker.DayViewActivity.java", "BodyUseAPI": [], "Fixed commit": "9e9f968e70c3485832ac0d4b7fe544513d51580d", "Url": "https://api.github.com/repos/Shadow0144/BudgetTracker", "Date": "2018-02-20T03:54:44Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (author.has(\"affiliation\")) { if ((author.get(\"affiliation\").asText().length()) > 700) { newAuthor.setAffiliation(author.get(\"affiliation\").asText().substring(0, 699)); }else { newAuthor.setAffiliation(author.get(\"affiliation\").asText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8900/buggy-version/goci-tools.goci-utils.src.main.java.uk.ac.ebi.spot.goci.utils.EuropePMCDeserializer.java", "BodyUseAPI": ["uk.ac.ebi.spot.goci.model.Author.setAffiliation(author.get(\"affiliation\").asText())", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "author.get(\"affiliation\").asText().length()", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "author.get(\"affiliation\").asText()", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "author.get(\"affiliation\").asText()", "uk.ac.ebi.spot.goci.model.Author.setAffiliation(author.get(\"affiliation\").asText().substring(0, 699))", "author.get(\"affiliation\").asText().substring(int,int)", "author.get(\"affiliation\").asText()"], "Fixed commit": "39120604e8102ecf1a9754f69b42492246441759", "Url": "https://api.github.com/repos/EBISPOT/goci", "Date": "2018-02-16T20:44:39Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.getKey().equals(\"Rent Date\")) { rentDateTv.setText(dataSnapshot.getValue(java.lang.String.class)); }else if (dataSnapshot.getKey().equals(\"Rent Type\")) { rentTypeTv.setText(dataSnapshot.getValue(java.lang.String.class)); }else if (dataSnapshot.getKey().equals(\"Images\")) { com.squareup.picasso.Picasso.get().load(dataSnapshot.getValue(java.lang.String.class)).resize(500, 500).centerCrop().into(imageView); }else if (dataSnapshot.getKey().equals(\"Total rent\")) { rentAmountTv.setText(((dataSnapshot.getValue(java.lang.String.class)) + \" Tk\")); }else if (dataSnapshot.getKey().equals(\"Description\")) { descriptionTv.setText(dataSnapshot.getValue(java.lang.String.class)); }else if (dataSnapshot.getKey().equals(\"Floor No\")) { if (dataSnapshot.getValue(java.lang.String.class).equals(\"1\")) { floorTv.setText(((dataSnapshot.getValue(java.lang.String.class)) + \"st floor\")); }else if (dataSnapshot.getValue(java.lang.String.class).equals(\"2\")) { floorTv.setText(((dataSnapshot.getValue(java.lang.String.class)) + \"nd floor\")); }else if (dataSnapshot.getValue(java.lang.String.class).equals(\"3\")) { floorTv.setText(((dataSnapshot.getValue(java.lang.String.class)) + \"rd floor\")); }else { floorTv.setText(((dataSnapshot.getValue(java.lang.String.class)) + \"th floor\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9765/buggy-version/app.src.main.java.com.example.tanvir.to_letapp.activity.DetailsActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(((dataSnapshot.getValue(java.lang.String.class)) + \" Tk\"))", "com.squareup.picasso.Picasso.get().load(dataSnapshot.getValue(java.lang.String.class)).resize(int,int)", "android.widget.TextView.setText(dataSnapshot.getValue(java.lang.String.class))", "com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)", "com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)", "com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)", "dataSnapshot.getKey().equals(java.lang.String)", "dataSnapshot.getKey().equals(java.lang.String)", "com.google.firebase.database.DataSnapshot.getKey()", "dataSnapshot.getKey().equals(java.lang.String)", "com.google.firebase.database.DataSnapshot.getKey()", "dataSnapshot.getValue(java.lang.String.class).equals(java.lang.String)", "dataSnapshot.getValue(java.lang.String.class).equals(java.lang.String)", "com.google.firebase.database.DataSnapshot.getKey()", "com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)", "android.widget.TextView.setText(((dataSnapshot.getValue(java.lang.String.class)) + \"nd floor\"))", "com.squareup.picasso.Picasso.get().load(dataSnapshot.getValue(java.lang.String.class)).resize(500, 500).centerCrop()", "dataSnapshot.getKey().equals(java.lang.String)", "com.squareup.picasso.Picasso.get().load(dataSnapshot.getValue(java.lang.String.class))", "com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)", "dataSnapshot.getValue(java.lang.String.class).equals(java.lang.String)", "com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)", "com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)", "com.google.firebase.database.DataSnapshot.getKey()", "android.widget.TextView.setText(dataSnapshot.getValue(java.lang.String.class))", "com.squareup.picasso.Picasso.get().load(dataSnapshot.getValue(java.lang.String.class)).resize(500, 500).centerCrop().into(android.widget.ImageView)", "com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)", "android.widget.TextView.setText(((dataSnapshot.getValue(java.lang.String.class)) + \"st floor\"))", "com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)", "com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)", "dataSnapshot.getKey().equals(java.lang.String)", "com.google.firebase.database.DataSnapshot.getKey()", "android.widget.TextView.setText(((dataSnapshot.getValue(java.lang.String.class)) + \"th floor\"))", "com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)", "android.widget.TextView.setText(((dataSnapshot.getValue(java.lang.String.class)) + \"rd floor\"))", "com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)", "android.widget.TextView.setText(dataSnapshot.getValue(java.lang.String.class))"], "Fixed commit": "5af075cb45025bfb7fd341705c74e85ce7ff9371", "Url": "https://api.github.com/repos/Alpha-1Soft/Toletapp", "Date": "2018-09-30T09:47:04Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.ualbert.cs.tasko.data.DataManager.getUserByUsername(java.lang.String,ca.ualbert.cs.tasko.OpeningActivity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((curr.getId()) == null) { android.content.Intent intent = new android.content.Intent(this, ca.ualbert.cs.tasko.LoginActivity.class); startActivity(intent); }else { cu.setCurrentUser(curr); android.content.Intent intent = new android.content.Intent(this, ca.ualbert.cs.tasko.MainActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4890/buggy-version/app.src.main.java.ca.ualbert.cs.tasko.OpeningActivity.java", "BodyUseAPI": ["ca.ualbert.cs.tasko.CurrentUser.setCurrentUser(ca.ualbert.cs.tasko.User)"], "Fixed commit": "5dac88cdd013efeef71411255962806f12993125", "Url": "https://api.github.com/repos/CMPUT301W18T14/PraiseTheSun", "Date": "2018-03-28T05:08:15Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(directory.exists())) directory.mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1686/buggy-version/src.main.java.edu.unh.cs980.Main.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "4901cdeaae59f171ab2a717bab03671c58a19c21", "Url": "https://api.github.com/repos/yuanph4ever/TREC-Complex-answer-retrieval-Track", "Date": "2018-04-25T14:57:59Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(messages[0].equals(\"\"))) java.lang.System.out.println(java.lang.String.format(\"NORMAL: %s - %s\", className, messages[0]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3469/buggy-version/SYSC3303_Project.src.UIManager.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String,java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "f027e95ff255d7448b07e75c75412f51478fb3b2", "Url": "https://api.github.com/repos/Algawas/SYSC3303-Group-8", "Date": "2018-08-09T13:09:39Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((e.getMessage().contains(\"not enough space\")) || (e.getMessage().contains(\"Not enough space\"))) || (e.getMessage().contains(\"No space left\"))) res.diskFull = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3469/buggy-version/SYSC3303_Project.src.FileManager.java", "BodyUseAPI": [], "Fixed commit": "f027e95ff255d7448b07e75c75412f51478fb3b2", "Url": "https://api.github.com/repos/Algawas/SYSC3303-Group-8", "Date": "2018-08-09T13:09:39Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ccentre.service.impl.Wiki.getWikiPDF()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (wikiPDF != null) wikiPDFRepository.delete(wikiPDF);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4800/buggy-version/src.main.java.com.ccentre.service.impl.WikiServiceImpl.java", "BodyUseAPI": ["com.ccentre.service.impl.WikiPDFRepository.delete(com.ccentre.service.impl.WikiPDF)"], "Fixed commit": "0dbb6746d0ede0fa7641a13e5ea95e50ac36f1da", "Url": "https://api.github.com/repos/skpavlenko/WS", "Date": "2018-01-07T20:51:08Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (log.isDebugEnabled()) log.debug(((\"setting namespace [\" + namespace) + \"]\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4385/buggy-version/core.src.main.java.nl.nn.adapterframework.pipes.Json2XmlValidator.java", "BodyUseAPI": ["nl.nn.adapterframework.pipes.Json2XmlValidator.debug(java.lang.String)"], "Fixed commit": "efdeb9dafdf2c66531bed489e1a35c33aff977c9", "Url": "https://api.github.com/repos/ibissource/iaf", "Date": "2018-03-19T22:29:37Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (xml.trim().startsWith(\"<?\")) { startPos = (xml.indexOf(\"?>\")) + 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/4385/buggy-version/core.src.main.java.nl.nn.adapterframework.pipes.Json2XmlValidator.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "efdeb9dafdf2c66531bed489e1a35c33aff977c9", "Url": "https://api.github.com/repos/ibissource/iaf", "Date": "2018-03-19T22:29:37Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mozilla.focus.utils.FavIconUtils.getRefinedBitmap(context.getResources(),source.originalIcon,org.mozilla.focus.utils.FavIconUtils.getRepresentativeCharacter(source.url))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (refinedBitmap == (source.originalIcon)) { refinedBitmap = android.graphics.Bitmap.createBitmap(source.originalIcon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6766/buggy-version/app.src.main.java.org.mozilla.focus.tabs.tabtray.FaviconDecoder.java", "BodyUseAPI": ["android.graphics.Bitmap.createBitmap(source.originalIcon)"], "Fixed commit": "4571a1e0ef00e1305095fb13fdc86bafc9a83ff0", "Url": "https://api.github.com/repos/mozilla-tw/Rocket", "Date": "2018-04-10T06:31:32Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getBlock(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (b != null) if (net.minecraftforge.event.ForgeEventFactory.onPlayerInteract(p, (b.isAir(w, x, y, z) ? PlayerInteractEvent.Action.RIGHT_CLICK_AIR : PlayerInteractEvent.Action.RIGHT_CLICK_BLOCK), x, y, z, side, w).isCanceled()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/5193/buggy-version/src.main.java.appeng.items.tools.ToolNetworkTool.java", "BodyUseAPI": ["net.minecraft.block.Block.isAir(net.minecraft.world.World,int,int,int)", "net.minecraftforge.event.ForgeEventFactory.onPlayerInteract(p, (b.isAir(w, x, y, z) ? PlayerInteractEvent.Action.RIGHT_CLICK_AIR : PlayerInteractEvent.Action.RIGHT_CLICK_BLOCK), x, y, z, side, w).isCanceled()", "net.minecraftforge.event.ForgeEventFactory.onPlayerInteract(net.minecraft.entity.player.EntityPlayer,(b.isAir(w, x, y, z) ? PlayerInteractEvent.Action.RIGHT_CLICK_AIR : PlayerInteractEvent.Action.RIGHT_CLICK_BLOCK),int,int,int,int,net.minecraft.world.World)"], "Fixed commit": "3cc48fec60054d18d7e0387002d7dcb9271ff741", "Url": "https://api.github.com/repos/xsun2001/Applied-Energistics-2-Unofficial", "Date": "2018-02-18T12:47:13Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (xyz.rimon.ael.commons.utils.PermissionUtil.hasPermission(context, Manifest.permission.GET_ACCOUNTS)) { if ((email == null) || (email.isEmpty())) { java.lang.String androidId = Settings.Secure.getString(context.getContentResolver(), Settings.Secure.ANDROID_ID); email = androidId + \"@users.sharemyrevenue.net\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/6783/buggy-version/smr.src.main.java.xyz.rimon.smr.commons.Commons.java", "BodyUseAPI": ["Settings.Secure.getString(context.getContentResolver(),Settings.Secure.ANDROID_ID)", "android.app.Activity.getContentResolver()"], "Fixed commit": "6e77d3c6052aa3cc3c1e628125afdac27b49de7e", "Url": "https://api.github.com/repos/sayemkcn/BoostMyRevenue", "Date": "2018-01-05T00:41:32Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((image) != null) { com.squareup.picasso.Picasso.with(this).load(image).into(imgNews); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/1607/buggy-version/app.src.main.java.com.chetana.ramesh.chetana.activities.NewsDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "3786dcdad8836ca404a1b2dd2f8a6d719cf2b31a", "Url": "https://api.github.com/repos/Ramesh-Giri/Chetana", "Date": "2018-07-10T17:21:50Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentFunction) != null) && (isRewritePhase)) { rewriter.insertAfter(ctx.stop, \"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3493/buggy-version/src.main.java.org.apache.sysml.parser.dml.InlineHelper.java", "BodyUseAPI": [], "Fixed commit": "aa718b16150f3d1bfb07acbfcce7f65685c239b6", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2018-09-23T01:09:30Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentFunction) != null) && (isRewritePhase)) { if (((ctx.body) != null) && ((ctx.body.size()) > 0)) rewriter.insertBefore(ctx.body.get(0).start, \"\\n\"); rewriter.insertAfter(ctx.stop, \"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3493/buggy-version/src.main.java.org.apache.sysml.parser.dml.InlineHelper.java", "BodyUseAPI": [], "Fixed commit": "aa718b16150f3d1bfb07acbfcce7f65685c239b6", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2018-09-23T01:09:30Z"},
{"Line": "=>603", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentFunction) != null) && (isRewritePhase)) { if (((ctx.ifBody) != null) && ((ctx.ifBody.size()) > 0)) rewriter.insertBefore(ctx.ifBody.get(0).start, \"\\n\"); if (((ctx.elseBody) != null) && ((ctx.elseBody.size()) > 0)) rewriter.insertBefore(ctx.elseBody.get(0).start, \"\\n\"); rewriter.insertAfter(ctx.stop, \"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3493/buggy-version/src.main.java.org.apache.sysml.parser.dml.InlineHelper.java", "BodyUseAPI": [], "Fixed commit": "aa718b16150f3d1bfb07acbfcce7f65685c239b6", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2018-09-23T01:09:30Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentFunction) != null) && (isRewritePhase)) { if (((ctx.body) != null) && ((ctx.body.size()) > 0)) rewriter.insertBefore(ctx.body.get(0).start, \"\\n\"); rewriter.insertAfter(ctx.stop, \"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3493/buggy-version/src.main.java.org.apache.sysml.parser.dml.InlineHelper.java", "BodyUseAPI": [], "Fixed commit": "aa718b16150f3d1bfb07acbfcce7f65685c239b6", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2018-09-23T01:09:30Z"},
{"Line": "=>677", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentFunction) != null) && (isRewritePhase)) { rewriter.insertAfter(ctx.stop, \"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3493/buggy-version/src.main.java.org.apache.sysml.parser.dml.InlineHelper.java", "BodyUseAPI": [], "Fixed commit": "aa718b16150f3d1bfb07acbfcce7f65685c239b6", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2018-09-23T01:09:30Z"},
{"Line": "=>739", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentFunction) != null) && (isRewritePhase)) { if (((ctx.body) != null) && ((ctx.body.size()) > 0)) rewriter.insertBefore(ctx.body.get(0).start, \"\\n\"); rewriter.insertAfter(ctx.stop, \"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3493/buggy-version/src.main.java.org.apache.sysml.parser.dml.InlineHelper.java", "BodyUseAPI": [], "Fixed commit": "aa718b16150f3d1bfb07acbfcce7f65685c239b6", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2018-09-23T01:09:30Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentFunction) != null) && (isRewritePhase)) { rewriter.insertAfter(ctx.stop, \"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3493/buggy-version/src.main.java.org.apache.sysml.parser.dml.InlineHelper.java", "BodyUseAPI": [], "Fixed commit": "aa718b16150f3d1bfb07acbfcce7f65685c239b6", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2018-09-23T01:09:30Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentFunction) != null) && (isRewritePhase)) { rewriter.insertAfter(ctx.stop, \"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3493/buggy-version/src.main.java.org.apache.sysml.parser.dml.InlineHelper.java", "BodyUseAPI": [], "Fixed commit": "aa718b16150f3d1bfb07acbfcce7f65685c239b6", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2018-09-23T01:09:30Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentFunction) != null) && (isRewritePhase)) { rewriter.insertAfter(ctx.stop, \"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3493/buggy-version/src.main.java.org.apache.sysml.parser.dml.InlineHelper.java", "BodyUseAPI": [], "Fixed commit": "aa718b16150f3d1bfb07acbfcce7f65685c239b6", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2018-09-23T01:09:30Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentFunction) != null) && (isRewritePhase)) { rewriter.insertAfter(ctx.stop, \"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3493/buggy-version/src.main.java.org.apache.sysml.parser.dml.InlineHelper.java", "BodyUseAPI": [], "Fixed commit": "aa718b16150f3d1bfb07acbfcce7f65685c239b6", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2018-09-23T01:09:30Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentFunction) != null) && (isRewritePhase)) { rewriter.insertAfter(ctx.stop, \"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3493/buggy-version/src.main.java.org.apache.sysml.parser.dml.InlineHelper.java", "BodyUseAPI": [], "Fixed commit": "aa718b16150f3d1bfb07acbfcce7f65685c239b6", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2018-09-23T01:09:30Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getDocument()) == (node_view_.getEditorPane().getDocument())) { node_.setScript(node_view_.getEditorPane().getText()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7561/buggy-version/src.controllers.NodeController.java", "BodyUseAPI": ["graph.Node.setScript(node_view_.getEditorPane().getText())", "views.NodeView.getEditorPane()", "node_view_.getEditorPane().getText()"], "Fixed commit": "51891b45a5d13995987fa1d2728efc480b8fc334", "Url": "https://api.github.com/repos/JackMaguire/JD3Bash", "Date": "2018-10-04T14:42:14Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toTheta - (theta)) > (util.MathAngles.PI)) theta += util.MathAngles.PI2; else if ((toTheta - (theta)) < (-(util.MathAngles.PI))) theta -= util.MathAngles.PI2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/3529/buggy-version/src.camera.Camera.java", "BodyUseAPI": [], "Fixed commit": "3f73cef863a976e6f5bff0c93b36f6d8d8bf0813", "Url": "https://api.github.com/repos/mahhov/projectR", "Date": "2018-01-01T21:07:03Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hex.startsWith(\"#\"))) hex = \"#\" + hex;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7670/buggy-version/app.src.main.java.com.bittle.colorpicker.utils.ColorUtil.java", "BodyUseAPI": [], "Fixed commit": "6942e62f4647208f1833a90cd8ceb5112ca0ac32", "Url": "https://api.github.com/repos/oscar0812/ColorPickerEX", "Date": "2018-05-30T05:49:49Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["etcdKeyGetRequest.send().get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (dataTree.getNode().getNodes().isEmpty()) { mousio.etcd4j.EtcdUtil.iterateOverNodes(jNode, dataTree.getNode()); }else { for (mousio.etcd4j.responses.EtcdKeysResponse.EtcdNode node : dataTree.getNode().getNodes()) { mousio.etcd4j.EtcdUtil.iterateOverNodes(jNode, node); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9018/buggy-version/src.main.java.mousio.etcd4j.EtcdUtil.java", "BodyUseAPI": ["mousio.etcd4j.EtcdUtil.iterateOverNodes(com.fasterxml.jackson.databind.node.ObjectNode,dataTree.getNode())", "mousio.etcd4j.responses.EtcdKeysResponse.getNode()", "dataTree.getNode().getNodes()", "mousio.etcd4j.responses.EtcdKeysResponse.getNode()"], "Fixed commit": "c9ed4da1f06e07ffef6a3cf07e6f43470e4b0e4f", "Url": "https://api.github.com/repos/dgutierrez-stratio/etcd4j", "Date": "2018-01-22T13:54:32Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(etcdJson.isValueNode())) { java.lang.String unflattened = new com.github.wnameless.json.unflattener.JsonUnflattener(mousio.etcd4j.EtcdUtil.jsonToString(mousio.etcd4j.EtcdUtil.flattenJson(etcdJson, \"\"))).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(new com.github.wnameless.json.flattener.KeyTransformer() { @java.lang.Override public java.lang.String transform(java.lang.String s) { return s.replaceAll(\"__DOT__\", \"\\\\.\"); } }).unflatten(); return mousio.etcd4j.EtcdUtil.mapper.readTree(unflattened); }else { return etcdJson; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/9018/buggy-version/src.main.java.mousio.etcd4j.EtcdUtil.java", "BodyUseAPI": ["mousio.etcd4j.EtcdUtil.flattenJson(com.fasterxml.jackson.databind.JsonNode,java.lang.String)", "mousio.etcd4j.EtcdUtil.jsonToString(com.fasterxml.jackson.databind.node.ObjectNode)", "new com.github.wnameless.json.unflattener.JsonUnflattener(mousio.etcd4j.EtcdUtil.jsonToString(mousio.etcd4j.EtcdUtil.flattenJson(etcdJson, \"\"))).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(new com.github.wnameless.json.flattener.KeyTransformer() {\n    @java.lang.Override\n    public java.lang.String transform(java.lang.String s) {\n        return s.replaceAll(\"__DOT__\", \"\\\\.\");\n    }\n}).unflatten()", "new com.github.wnameless.json.unflattener.JsonUnflattener(mousio.etcd4j.EtcdUtil.jsonToString(mousio.etcd4j.EtcdUtil.flattenJson(etcdJson, \"\"))).withFlattenMode(FlattenMode.MONGODB).withKeyTransformer(com.github.wnameless.json.flattener.KeyTransformer)", "com.github.wnameless.json.unflattener.JsonUnflattener.withFlattenMode(FlattenMode.MONGODB)"], "Fixed commit": "c9ed4da1f06e07ffef6a3cf07e6f43470e4b0e4f", "Url": "https://api.github.com/repos/dgutierrez-stratio/etcd4j", "Date": "2018-01-22T13:54:32Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { changeFragment(new com.shagalalab.sozlik.dictionary.DictionaryFragment(), DictionaryFragment.TAG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7343/buggy-version/app.src.main.java.com.shagalalab.sozlik.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3d19df4ffada41f0dcf36a228093435d7bad9f85", "Url": "https://api.github.com/repos/shagalalab/sozlik-android", "Date": "2018-06-08T12:26:25Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((list != null) && (!(list.isEmpty()))) { wordResults.clear(); wordResults.addAll(list); notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7343/buggy-version/app.src.main.java.com.shagalalab.sozlik.dictionary.autocomplete.WordAutoCompleteAdapter.java", "BodyUseAPI": ["java.util.List<com.shagalalab.sozlik.model.SozlikDbModel>.addAll(java.util.List<com.shagalalab.sozlik.model.SozlikDbModel>)"], "Fixed commit": "3d19df4ffada41f0dcf36a228093435d7bad9f85", "Url": "https://api.github.com/repos/shagalalab/sozlik-android", "Date": "2018-06-08T12:26:25Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((extSynapticWeights[i][0]) == (this.neuronID)) { int synapseNumber = ((int) (java.lang.Math.round(extSynapticWeights[i][1]))); if (synapseNumber > 0) extContextSynapses[synapseNumber] = new SynapsePackage.ExternalSynapse(extSynapticWeights[i][2], SynapsePackage.SynapseForm.EXCITATORY, this.apicalTuft, (i + 1), alpha); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7256/buggy-version/src.NeuronPackage.PyramidalNeuron.java", "BodyUseAPI": ["java.lang.Math.round(double)"], "Fixed commit": "f3ab3373932aa69da09d453add062e781e271c1b", "Url": "https://api.github.com/repos/lestheprof/PyramidalCells", "Date": "2018-06-01T15:03:59Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((extSynapticWeights[i][0]) == (this.neuronID)) { int synapseNumber = ((int) (java.lang.Math.round(extSynapticWeights[i][1]))); if (synapseNumber > 0) extDrivingSynapses[synapseNumber] = new SynapsePackage.ExternalSynapse(extSynapticWeights[i][2], SynapsePackage.SynapseForm.EXCITATORY, this.basalDendrite, (i + 1), alpha); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/7256/buggy-version/src.NeuronPackage.PyramidalNeuron.java", "BodyUseAPI": ["java.lang.Math.round(double)"], "Fixed commit": "f3ab3373932aa69da09d453add062e781e271c1b", "Url": "https://api.github.com/repos/lestheprof/PyramidalCells", "Date": "2018-06-01T15:03:59Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diffMinMaxY < minY) { diffMinMaxY = maxY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/8398/buggy-version/src.main.java.naturix.JARM.world.ModWorldGeneration.java", "BodyUseAPI": [], "Fixed commit": "62c25eea9e9a507dfdb062beebc8f41a6005c98c", "Url": "https://api.github.com/repos/NicosaurusRex99/JARMGit", "Date": "2018-07-03T06:18:47Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((seam.length) < (width())) { throw new java.lang.IllegalArgumentException(\"Seam length too short\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/591/buggy-version/Algs_Part2_02.src.SeamCarver.java", "BodyUseAPI": [], "Fixed commit": "bf82c725144443a6aca0863a06381ab735687112", "Url": "https://api.github.com/repos/bigbossbeastly/Algs_Part2_02", "Date": "2018-04-15T23:37:44Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((seam.length) < (height())) { throw new java.lang.IllegalArgumentException(\"Seam length too short\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V147/591/buggy-version/Algs_Part2_02.src.SeamCarver.java", "BodyUseAPI": [], "Fixed commit": "bf82c725144443a6aca0863a06381ab735687112", "Url": "https://api.github.com/repos/bigbossbeastly/Algs_Part2_02", "Date": "2018-04-15T23:37:44Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(taskUser.getTaskid().equals(0))) { com.kimn.nanking.assigner.core.model.Task task = this.daoSession.getTaskDao().load(taskUser.getTaskid()); if (task.getState().equals(\"\u4ea4\u529e\")) { taskStatistics.setState1(((taskStatistics.getState1()) + 1)); }else if (task.getState().equals(\"\u529e\u7406\")) { taskStatistics.setState2(((taskStatistics.getState2()) + 1)); }else if (task.getState().equals(\"\u903e\u671f\")) { taskStatistics.setState3(((taskStatistics.getState3()) + 1)); }else if (task.getState().equals(\"\u529e\u7ed3\")) { taskStatistics.setState4(((taskStatistics.getState4()) + 1)); }else { } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3261/buggy-version/Android.app.src.main.java.com.kimn.nanking.assigner.core.core.CoreMysql.java", "BodyUseAPI": ["this.daoSession.getTaskDao().load(taskUser.getTaskid())", "com.kimn.nanking.assigner.core.model.TaskUser.getTaskid()"], "Fixed commit": "5d77dc2012fa10865df55525728361428662a5f9", "Url": "https://api.github.com/repos/UesugiKaneshin/Assigner", "Date": "2018-05-21T02:47:20Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mPlayerView.getPlayer()) != null) { mPlayerView.getPlayer().release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8993/buggy-version/jinglz-player.src.main.java.com.anthonypse.jinglz_player.JinglzPlayer.java", "BodyUseAPI": ["com.google.android.exoplayer2.ui.SimpleExoPlayerView.getPlayer()", "mPlayerView.getPlayer().release()"], "Fixed commit": "b0db38654e0c9661bbc4bda9b9fb3e1e97992b55", "Url": "https://api.github.com/repos/anthonyPSE/VideoPlayerDemo", "Date": "2018-08-20T17:31:22Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.datavec.spark.util.BroadcastHadoopConfigHolder.config) != null) && (!(org.datavec.spark.util.BroadcastHadoopConfigHolder.config.isValid()))) { org.datavec.spark.util.BroadcastHadoopConfigHolder.config = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7088/buggy-version/datavec.datavec-spark.src.main.java.org.datavec.spark.util.BroadcastHadoopConfigHolder.java", "BodyUseAPI": [], "Fixed commit": "5a38d8a7a11d1c7f2e1ca4fe1678619a45273b96", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2018-10-31T09:54:28Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActivityComponent) == null) { mActivityComponent = rss.feed.reader.dagger.components.DaggerActivityComponent.builder().appComponent(getAppComponent()).activityModule(new rss.feed.reader.dagger.modules.ActivityModule(this)).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2967/buggy-version/app.src.main.java.rss.feed.reader.ui.base.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "5f2f9cf7241ed59a557f692876260466d0c54413", "Url": "https://api.github.com/repos/Vovchyk/android-rss-feed-reader", "Date": "2018-01-18T10:39:22Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.plugins.spotinst.cloud.AwsSpotinstCloud.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (pendingInstance != null) { switch (pendingInstance.getStatus()) { case SPOT_PENDING : { handlePendingSpot(pendingInstance); } break; case INSTANCE_INITIATING : { handleInitiatingInstance(pendingInstance); } break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1597/buggy-version/src.main.java.hudson.plugins.spotinst.cloud.AwsSpotinstCloud.java", "BodyUseAPI": ["hudson.plugins.spotinst.cloud.PendingInstance.getStatus()", "hudson.plugins.spotinst.cloud.AwsSpotinstCloud.handlePendingSpot(hudson.plugins.spotinst.cloud.PendingInstance)", "hudson.plugins.spotinst.cloud.AwsSpotinstCloud.handleInitiatingInstance(hudson.plugins.spotinst.cloud.PendingInstance)"], "Fixed commit": "3a0f4fcf58a07c33b9910047c74c60c997a16bfa", "Url": "https://api.github.com/repos/jenkinsci/spotinst-plugin", "Date": "2018-01-04T11:33:10Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(message.getMessage().isEmpty())) { itemChatAdapter.addMessage(message); recycleView.scrollToPosition(((itemChatAdapter.getItemCount()) - 1)); }else if ((!(message.getImageURL().isEmpty())) && (imageDownloaded)) { itemChatAdapter.addMessage(message); recycleView.scrollToPosition(((itemChatAdapter.getItemCount()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3320/buggy-version/app.src.main.java.tech.ntam.babiesandbeyond.view.activities.ChatActivity.java", "BodyUseAPI": ["tech.ntam.babiesandbeyond.model.Message.getImageURL()", "message.getImageURL().isEmpty()", "tech.ntam.babiesandbeyond.view.adapter.ItemChatAdapter.addMessage(tech.ntam.babiesandbeyond.model.Message)", "tech.ntam.babiesandbeyond.view.adapter.ItemChatAdapter.addMessage(tech.ntam.babiesandbeyond.model.Message)"], "Fixed commit": "97e342d7c689cc9479dd289b77d9b4b3710621c1", "Url": "https://api.github.com/repos/ahmed-bassiouny/babiesandbeyond", "Date": "2018-02-06T15:38:13Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((news.getContent()) != null) { news.setContent(news.getContent().replaceAll(\"& lt;\", \"<\").replaceAll(\"& gt;\", \">\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1868/buggy-version/guns-admin.src.main.java.com.stylefeng.guns.modular.news.controller.YxNewsController.java", "BodyUseAPI": ["com.stylefeng.guns.modular.system.model.YxNews.getContent()", "com.stylefeng.guns.modular.system.model.YxNews.setContent(news.getContent().replaceAll(\"& lt;\", \"<\").replaceAll(\"& gt;\", \">\"))", "news.getContent().replaceAll(\"& lt;\", \"<\").replaceAll(java.lang.String,java.lang.String)", "news.getContent().replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "e62365fbbf3f8bff57631880da46d8fe137259ac", "Url": "https://api.github.com/repos/rockzhu/Guns", "Date": "2018-05-10T09:32:19Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (musicController.isRepeating()) { loopButton.setImageResource(R.drawable.ic_repeat_one_green_36dp); }else { loopButton.setImageResource(R.drawable.ic_repeat_white_36dp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7276/buggy-version/MyFirstApp.app.src.main.java.com.example.tom.myfirstapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "42decd3cae4d078c4b532474ca400bbeeabe67cd", "Url": "https://api.github.com/repos/TomR1997/MusicApp", "Date": "2018-09-07T15:47:24Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hs.plugin.Config.loadWorld) == false) { player.sendMessage(((hs.plugin.Config.prefix) + \"The world border is starting to close!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8167/buggy-version/src.hs.plugin.game.HalloweenGame.java", "BodyUseAPI": [], "Fixed commit": "e3dd471c5b45e001bb0c1c29dfe583077fa22a74", "Url": "https://api.github.com/repos/ExcelCyphernia/HalloweenSpecial", "Date": "2018-10-27T14:52:31Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index == (size)) { end.setNext(newNode); newNode.setPrevious(end); end = newNode; }else if (index > 0) { MyLinkedList.Node pos = getNode((index - 1)); newNode.setPrevious(pos); pos.getNext().setPrevious(newNode); newNode.setNext(pos.getNext()); pos.setNext(newNode); }else { start.setPrevious(newNode); newNode.setNext(start); start = newNode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4705/buggy-version/08Links.MyLinkedList.java", "BodyUseAPI": ["MyLinkedList.getNode(int)"], "Fixed commit": "e1dcaaca250c71a42e87d895b6027bc87404587c", "Url": "https://api.github.com/repos/horazio/MKS22X", "Date": "2018-04-11T03:24:56Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getInventory().getType()) != (org.bukkit.event.inventory.InventoryType.CREATIVE)) { event.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1590/buggy-version/src.fr.thomapolis.polishub.listeners.ListenerPlayer.java", "BodyUseAPI": ["org.bukkit.event.inventory.InventoryClickEvent.setCancelled(boolean)"], "Fixed commit": "eca7614bbe443b67073bd510eea49ef0abdc4584", "Url": "https://api.github.com/repos/thomapolis/PolisHub", "Date": "2018-07-14T08:47:26Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((event.getClickedInventory().getType()) == (org.bukkit.event.inventory.InventoryType.CHEST)) || ((event.getClickedInventory().getType()) == (org.bukkit.event.inventory.InventoryType.PLAYER))) { fr.thomapolis.poliscore.polisclass.PolisPlayer polisPlayer = polisHub.getAPI().getPolisPlayer(((org.bukkit.entity.Player) (event.getWhoClicked()))); if (!(polisPlayer.getRank().getPerms().contains(\"hub.inventory\"))) { event.setCancelled(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1590/buggy-version/src.fr.thomapolis.polishub.listeners.ListenerPlayer.java", "BodyUseAPI": ["polisHub.getAPI().getPolisPlayer(((org.bukkit.entity.Player) (event.getWhoClicked())))", "org.bukkit.event.inventory.InventoryClickEvent.getWhoClicked()", "org.bukkit.event.inventory.InventoryClickEvent.setCancelled(boolean)"], "Fixed commit": "eca7614bbe443b67073bd510eea49ef0abdc4584", "Url": "https://api.github.com/repos/thomapolis/PolisHub", "Date": "2018-07-14T08:47:26Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model.getUser()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1781/buggy-version/src.main.java.seedu.inventory.logic.LogicManager.java", "BodyUseAPI": [], "Fixed commit": "d736aaa850f57e0f9adde94764c87302426152e5", "Url": "https://api.github.com/repos/fzdy1914/main", "Date": "2018-10-31T06:41:35Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isClicked) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1704/buggy-version/app.src.main.java.qin.xue.recyclerviewexpand.viewholders.ExpandOutViewHolder.java", "BodyUseAPI": [], "Fixed commit": "5a752e95ab4ec71a4d2d1633a4184c4f0f254b70", "Url": "https://api.github.com/repos/xueqin123/ExpandRecylcerView", "Date": "2018-09-06T07:45:03Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (codeScheme == null) { externalReference = createExternalReference(fromExternalReference, null); }else { throw new fi.vm.yti.codelist.intake.exception.YtiCodeListException(new fi.vm.yti.codelist.intake.model.ErrorModel(HttpStatus.INTERNAL_SERVER_ERROR.value(), ERR_MSG_USER_500)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4775/buggy-version/src.main.java.fi.vm.yti.codelist.intake.dao.impl.ExternalReferenceDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "9d7c6dea4c2efb1e0c6baed7daeabbad769fdfb2", "Url": "https://api.github.com/repos/VRK-YTI/yti-codelist-content-intake-service", "Date": "2018-03-28T10:05:56Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (command.equals(\"END\")) close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2038/buggy-version/src.server.GameServer.java", "BodyUseAPI": [], "Fixed commit": "f2a546bc2d6815b1998248fa0c8c4508ca1bb3ca", "Url": "https://api.github.com/repos/desembr/Top-down-RPG", "Date": "2018-02-15T10:15:48Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 3) { gov.nih.nci.evs.cdisc.GenerateCDISC.gTermSource = args[2]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3148/buggy-version/GenerateCDISC.src.gov.nih.nci.evs.cdisc.GenerateCDISC.java", "BodyUseAPI": [], "Fixed commit": "88565397cf8a195c1ad343a6fdd5e004e831e5f0", "Url": "https://api.github.com/repos/NCIEVS/ops-owl-applications", "Date": "2017-12-19T00:04:36Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((addr) instanceof java.lang.Number) { return java.lang.String.format(\"0x%x (%d align %d)\", addr, getSize(), getAlignment()); }else { return java.lang.String.format(\"%s (%d align %d)\", getAddr(), getSize(), getAlignment()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3082/buggy-version/projects.com.oracle.truffle.llvm.runtime.src.com.oracle.truffle.llvm.runtime.LLVMVarArgCompoundValue.java", "BodyUseAPI": [], "Fixed commit": "99efd7f63a01ae555e7c04707918c3817d0fc65e", "Url": "https://api.github.com/repos/jkreindl/sulong", "Date": "2018-08-14T15:32:11Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((requestData.getAttendeeId()) == null) || ((requestData.getProgramId()) == null)) { throw new com.giridhari.preachingassistant.util.BadRequestException(\"Participant/Program details not mentioned\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1947/buggy-version/src.main.java.com.giridhari.preachingassistant.controller.ProgramAssignmentController.java", "BodyUseAPI": [], "Fixed commit": "6c312ce0f7ba3aba41019efbfe2f7bd613233550", "Url": "https://api.github.com/repos/hariksetra/ISKCON-Preaching-Assistant", "Date": "2018-07-16T18:27:35Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((roomTenantList.size()) == 0) (vacantRooms)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5219/buggy-version/app.src.main.java.net.eazypg.eazypgmanager.Activities.RoomsActivity.java", "BodyUseAPI": [], "Fixed commit": "4bec6d27393d71a5a401873caf333b96992d3f84", "Url": "https://api.github.com/repos/TrentionTech/EazyPGManager", "Date": "2018-10-23T14:21:45Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (size.compareAndSet(mySize, 0)) innerFlush((mySize >= (flushSize) ? FlushReason.SIZE : FlushReason.TIME));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9710/buggy-version/src.main.java.eu.fbk.mpba.sensorflow.chunks.AutoFlushParams.java", "BodyUseAPI": ["eu.fbk.mpba.sensorflow.chunks.AutoFlushParams.innerFlush((mySize >= (flushSize) ? FlushReason.SIZE : FlushReason.TIME))"], "Fixed commit": "79fb86fe83ca3c1afdc92735e81e6eab44b781a2", "Url": "https://api.github.com/repos/MPBA/SensorFlow", "Date": "2018-04-04T14:17:07Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["FlowProccessor.BotStep.process(org.telegram.telegrambots.api.objects.Update,FlowProccessor.BotBaseModelEntity)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!processResult) { execIfNotNull(update, step.invalidMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5812/buggy-version/src.main.java.FlowProccessor.BotFlowProcessor.java", "BodyUseAPI": [], "Fixed commit": "dde8f4a8e01cf2532f98b9dae795eeec0aca069a", "Url": "https://api.github.com/repos/OfryL/telegram-bot-api", "Date": "2018-02-23T23:23:48Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(update(c, pl))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6115/buggy-version/src.main.java.model.Board.java", "BodyUseAPI": [], "Fixed commit": "eae8af533ba59ed591637dfe3eeec11f98f19f91", "Url": "https://api.github.com/repos/KnowingQuasar/Speed", "Date": "2018-10-18T21:04:30Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(update(c, pl))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6115/buggy-version/src.main.java.model.Board.java", "BodyUseAPI": [], "Fixed commit": "eae8af533ba59ed591637dfe3eeec11f98f19f91", "Url": "https://api.github.com/repos/KnowingQuasar/Speed", "Date": "2018-10-18T21:04:30Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.nav_reminder)) { android.content.Intent intent1 = new android.content.Intent(this, com.company.eldhelp.MedicineActivity.class); this.startActivity(intent1); }else if (id == (R.id.nav_event)) { android.content.Intent intent1 = new android.content.Intent(this, com.company.eldhelp.EventActivity.class); this.startActivity(intent1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8708/buggy-version/app.src.main.java.com.company.eldhelp.MedicineActivity.java", "BodyUseAPI": [], "Fixed commit": "1db6b654d42fcf4788ad08bdc88002c1cfc53f60", "Url": "https://api.github.com/repos/alassadi/EldHelp", "Date": "2018-05-07T14:38:50Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flag == (com.fsck.k9.mail.Flag.FORWARDED)) && canCreateForwardedFlag) { flagNames.add(\"$Forwarded\"); }else if (flag == (com.fsck.k9.mail.Flag.DRAFT)) { flagNames.add(\"\\\\Draft\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2658/buggy-version/k9mail-library.src.main.java.com.fsck.k9.mail.store.imap.ImapUtility.java", "BodyUseAPI": [], "Fixed commit": "ddc0e5b5b78a3b34150ec3bf7de861a7690750ee", "Url": "https://api.github.com/repos/BotQ/k-9", "Date": "2018-03-28T18:17:58Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.ballerinalang.util.tracer.TracersStore.getInstance().isInitialized())) { org.ballerinalang.config.ConfigRegistry configRegistry = org.ballerinalang.config.ConfigRegistry.getInstance(); if (configRegistry.getAsBoolean(org.ballerinalang.util.tracer.CONFIG_TRACING_ENABLED)) { org.ballerinalang.util.observability.ObservabilityUtils.addObserver(new org.ballerinalang.util.tracer.BallerinaTracingObserver()); org.ballerinalang.util.tracer.TracersStore.getInstance().loadTracers(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3367/buggy-version/bvm.ballerina-core.src.main.java.org.ballerinalang.util.tracer.TracingLaunchListener.java", "BodyUseAPI": [], "Fixed commit": "cc0993d2fa76ed5f40f7d89f2d55a159d803b4bc", "Url": "https://api.github.com/repos/hevayo/ballerina-lang", "Date": "2018-07-09T09:04:14Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isMyBids) == 0) { menu.getItem(0).setVisible(false); menu.getItem(1).setVisible(true); }else { menu.getItem(0).setVisible(true); menu.getItem(1).setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7742/buggy-version/app.src.main.java.cmput301w18t09.orbid.ListTaskActivity.java", "BodyUseAPI": [], "Fixed commit": "d43372c70cb36d9de16978aafb660fd0f3ac1eb7", "Url": "https://api.github.com/repos/CMPUT301W18T09/CDProjektBlue", "Date": "2018-03-28T18:39:20Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action.isLine()) builder.append(\"println \"); else builder.append(\"print \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6007/buggy-version/compilers.framework.src.main.java.org.thingml.compilers.utils.ThingMLPrettyPrinter.java", "BodyUseAPI": [], "Fixed commit": "4d9c69a838398705e0774f4f85807030fbc26e02", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2018-01-15T21:57:55Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action.isLine()) builder.append(\"errorln \"); else builder.append(\"error \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6007/buggy-version/compilers.framework.src.main.java.org.thingml.compilers.utils.ThingMLPrettyPrinter.java", "BodyUseAPI": [], "Fixed commit": "4d9c69a838398705e0774f4f85807030fbc26e02", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2018-01-15T21:57:55Z"},
{"Line": "=>688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((largestURL != null) && (minFactor < 1.25)) { roundURL = largestURL; factor = 1.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4319/buggy-version/src.lu.fisch.structorizer.gui.IconLoader.java", "BodyUseAPI": [], "Fixed commit": "ab54dec907f0aab50fd02e5dc58189f36b3d1fa6", "Url": "https://api.github.com/repos/fesch/Structorizer.Desktop", "Date": "2018-02-13T03:49:42Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (method.equals(HTTPRequestMethod.POST)) { java.lang.String[] queries = content.toString().split(\"&\"); for (java.lang.String query : queries) { java.lang.String[] qr = query.split(\"=\"); if (2 <= (qr.length)) { this.queries.put(qr[0], qr[1]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2392/buggy-version/Main.src.java.org.anhcraft.spaciouslib.socket.web.HTTPRequestReader.java", "BodyUseAPI": [], "Fixed commit": "73968934c37a17767d6153cf3da3dea0b161a93b", "Url": "https://api.github.com/repos/anhcraft/SpaciousLib", "Date": "2018-07-26T08:22:48Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stack.size()) == 0) { return java.lang.Double.parseDouble(temp); }else { return stack.peek(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7589/buggy-version/09StackCalc.Calculator.java", "BodyUseAPI": ["Stack.peek(int)"], "Fixed commit": "bafda3afb71c7a532c12c38b7c636a4147ed2277", "Url": "https://api.github.com/repos/AntonDanylenko/MKS22X", "Date": "2018-06-15T01:36:22Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.source.getPower(\"KnivesPower\").amount) <= (this.amount)) { this.amount = this.source.getPower(\"KnivesPower\").amount; this.depleted = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2618/buggy-version/src.main.java.blackrusemod.actions.ThrowKnivesAction.java", "BodyUseAPI": ["this.source.getPower(java.lang.String)"], "Fixed commit": "85d46a4dfef5099a949f25f1de05496aa039fea1", "Url": "https://api.github.com/repos/lionpkqq/StS-BlackRuseMod", "Date": "2018-07-11T11:04:56Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!canDelete) { throw new org.springframework.security.access.AccessDeniedException((\"Forbidden operation. \" + ((\"Caused by: 1.you don't have release permission \" + \"or 2. you don't have modification permission \") + \"or 3. you have modification permission but branch has been released\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5406/buggy-version/apollo-portal.src.main.java.com.ctrip.framework.apollo.openapi.v1.controller.NamespaceBranchController.java", "BodyUseAPI": [], "Fixed commit": "45021983abdfc543fd1ea4f7cdb07992c76f6331", "Url": "https://api.github.com/repos/jieqian/apollo", "Date": "2018-09-28T14:29:14Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(metas.isEmpty())) { storage.saveSequenceMetadata(namespaceID, loadID, metas); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5805/buggy-version/src.us.kbase.assemblyhomology.load.Loader.java", "BodyUseAPI": ["us.kbase.assemblyhomology.storage.AssemblyHomologyStorage.saveSequenceMetadata(us.kbase.assemblyhomology.core.NamespaceID,us.kbase.assemblyhomology.core.LoadID,java.util.List<us.kbase.assemblyhomology.core.SequenceMetadata>)"], "Fixed commit": "9b18e724cbd5c8ba88f9ef676dbbd80575ef0cce", "Url": "https://api.github.com/repos/jgi-kbase/AssemblyHomologyService", "Date": "2018-05-03T02:38:24Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lang) == null) { lang = DLNAMediaLang.UND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4799/buggy-version/src.main.java.net.pms.dlna.DLNAMediaSubtitle.java", "BodyUseAPI": [], "Fixed commit": "41593a82270844b5fd8e8c8aa9abaf066d823c31", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2017-09-24T12:29:05Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCreate) { myRef.setValue(group); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3915/buggy-version/app.src.main.java.com.mei.daam.soundsync.FireBaseHandler.java", "BodyUseAPI": [], "Fixed commit": "d57eeeb6d39aaa9ab4da0c11ccd38559740c3bc6", "Url": "https://api.github.com/repos/ghare/SoundSync", "Date": "2018-06-02T21:59:29Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(curPath.contains(dice))) this.DFSWordPath(board, dice, word, curPath, path);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/861/buggy-version/app.src.main.java.com.domain.mel.solver.Solver.java", "BodyUseAPI": ["com.domain.mel.solver.Solver.DFSWordPath(com.domain.mel.solver.Board,com.domain.mel.solver.Dice,java.util.Stack<java.lang.String>,java.util.Stack<com.domain.mel.solver.Dice>,java.util.Stack<com.domain.mel.solver.Dice>)"], "Fixed commit": "3db702c40695b24ce4bb0b183abbd62991e184ea", "Url": "https://api.github.com/repos/arthursmel/BoggleSolver", "Date": "2018-09-20T19:19:34Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sonarsource.slang.externalreport.detekt.DetektXmlReportReader.getAttributeValue(javax.xml.stream.events.StartElement,javax.xml.namespace.QName)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (message.isEmpty()) { com.sonarsource.slang.externalreport.detekt.DetektXmlReportReader.LOG.debug(\"Unexpected error without message for rule: '{}'\", source); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4530/buggy-version/sonar-slang-plugin.src.main.java.com.sonarsource.slang.externalreport.detekt.DetektXmlReportReader.java", "BodyUseAPI": [], "Fixed commit": "cc8b6adbb87ce26e0e86ff7e3088b713eeda4ba2", "Url": "https://api.github.com/repos/SonarSource/slang", "Date": "2018-07-04T10:08:07Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sanstorik.neural_network.face_detection.UserFaceDetector.cropFaceFromImage(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (response == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/832/buggy-version/src.main.java.org.sanstorik.http_server.server.queries.CropFaceQuery.java", "BodyUseAPI": [], "Fixed commit": "dd173fa1aef4d36e81630135e30125ddbd68791b", "Url": "https://api.github.com/repos/sanstorik/server_face_recognition", "Date": "2018-04-23T20:10:57Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(beers.isEmpty())) { mv.addObject(\"beers\", beers); mv.addObject(\"category\", category); mv.addObject(\"brewery\", brewery); mv.addObject(\"breweryId\", beers.get(0).getBrewery().getId()); }else { mv.addObject(\"message\", \"no results found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3068/buggy-version/MVCBeerApp.src.main.java.com.skilldistillery.mvcbeer.controllers.BeerController.java", "BodyUseAPI": ["org.springframework.web.servlet.ModelAndView.addObject(java.lang.String,beers.get(0).getBrewery().getId())", "beers.get(0).getBrewery()", "org.springframework.web.servlet.ModelAndView.addObject(java.lang.String,java.util.List<com.skilldistillery.jpabeer.entities.Beer>)", "java.util.List<com.skilldistillery.jpabeer.entities.Beer>.get(int)", "beers.get(0).getBrewery().getId()"], "Fixed commit": "0d93f2bbb5a32f61645334788d31707299714e3e", "Url": "https://api.github.com/repos/miiaevia/MidtermProject", "Date": "2018-05-03T20:36:04Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mc.currentScreen) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5353/buggy-version/src.main.java.net.tardis.mod.client.overlays.OverlaySonicShades.java", "BodyUseAPI": [], "Fixed commit": "dfa364ea50fa5f1015992524323ad5824c36800e", "Url": "https://api.github.com/repos/Spectre0987/TardisMod", "Date": "2018-08-01T13:20:36Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.CharSequence.toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((text.contains(\".\")) && ((text.substring(((text.indexOf(\".\")) + 1)).length()) > 2)) { mConversionValue.setText(text.substring(0, ((text.length()) - 1))); mConversionValue.setSelection(mConversionValue.getText().length()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4667/buggy-version/app.src.main.java.com.nicoqueijo.android.currencyconverter.adapters.ActiveExchangeRatesRecyclerViewAdapter.java", "BodyUseAPI": ["com.nicoqueijo.android.currencyconverter.helpers.CustomEditText.setText(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "832644838304b638827fce9580de2a41f64f0278", "Url": "https://api.github.com/repos/nicoqueijo/Android-Currency-Converter", "Date": "2018-08-10T18:16:49Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.toString().length()) == 1) { if (s.toString().startsWith(\".\")) { s.insert(0, \"0\"); }else if (s.toString().startsWith(\"0\")) { s.clear(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4667/buggy-version/app.src.main.java.com.nicoqueijo.android.currencyconverter.adapters.ActiveExchangeRatesRecyclerViewAdapter.java", "BodyUseAPI": ["s.toString().startsWith(java.lang.String)", "android.text.Editable.insert(int,java.lang.String)", "android.text.Editable.toString()", "s.toString().startsWith(java.lang.String)", "android.text.Editable.toString()", "android.text.Editable.clear()"], "Fixed commit": "832644838304b638827fce9580de2a41f64f0278", "Url": "https://api.github.com/repos/nicoqueijo/Android-Currency-Converter", "Date": "2018-08-10T18:16:49Z"},
{"Line": "=>1867", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ip.getHostAddress().startsWith(ft2)) { isfilter = true; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5542/buggy-version/cntinker.src.main.java.com.cntinker.util.StringHelper.java", "BodyUseAPI": [], "Fixed commit": "dc5b5b950f1a2c91fc247747a6c8e45c9ba22612", "Url": "https://api.github.com/repos/liubin0821/cntinker", "Date": "2018-03-28T09:28:13Z"},
{"Line": "=>10257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.nd4j.autodiff.samediff.BaseOp) (op)).outputVariable().getVarName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((getArrForVarName(outVarName)) != z) { putOrUpdateArrayForVarName(outVarName, z); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/410/buggy-version/nd4j.nd4j-backends.nd4j-api-parent.nd4j-api.src.main.java.org.nd4j.autodiff.samediff.SameDiff.java", "BodyUseAPI": ["org.nd4j.autodiff.samediff.SameDiff.putOrUpdateArrayForVarName(java.lang.String,org.nd4j.linalg.api.ndarray.INDArray)"], "Fixed commit": "c8efa975f9f352503a71e690d6c78675249905f6", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2018-08-02T07:09:22Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.maxieds.chameleonminilivedebugger.LiveLoggerActivity.serialPort) != null) com.maxieds.chameleonminilivedebugger.LiveLoggerActivity.serialPort.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7903/buggy-version/app.src.main.java.com.maxieds.chameleonminilivedebugger.LiveLoggerActivity.java", "BodyUseAPI": [], "Fixed commit": "0b50deac31a5c20cf1793c4fff5b019d5832f0f7", "Url": "https://api.github.com/repos/maxieds/ChameleonMiniLiveDebugger", "Date": "2018-01-04T07:22:04Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (abbruch > 0) { new de.x8bit.Fantasya.Atlantis.Messages.Debug(((\"Fehler: Einzelbefehl \" + (eb.toString())) + \" enth\u00e4lt eine ung\u00fcltige Richtung!\")); new de.x8bit.Fantasya.Atlantis.Messages.Bewegung((((u + \" kennt die Richtung \") + (auftraege.get(0))) + \" nicht.\"), u); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1444/buggy-version/src.de.x8bit.Fantasya.Host.EVA.util.Reisen.java", "BodyUseAPI": [], "Fixed commit": "61b5c7948c118d74110146b6912cb41258943913", "Url": "https://api.github.com/repos/fantasya-pbem/host", "Date": "2018-05-27T17:24:26Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_SCANNED_DOCUMENT_CROP)) && (resultCode == (RESULT_OK))) { android.os.Bundle croppedDocumentData = capturedData.getExtras(); java.lang.String croppedDocumentImagePath = ((java.lang.String) (croppedDocumentData.get(com.owncloud.android.ui.activity.UploadFilesActivity.CROPPED_SCANNED_DOCUMENT_IMAGE_PATH))); new com.owncloud.android.ui.activity.UploadFilesActivity.CheckAvailableSpaceTask(croppedDocumentImagePath).execute(); }else if (((requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_IMAGE_CAPTURE)) || (requestCode == (com.owncloud.android.ui.activity.UploadFilesActivity.REQUEST_DOCUMENT_SCAN))) && (resultCode == (RESULT_CANCELED))) { if ((image) != null) { image.delete(); com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.UploadFilesActivity.TAG, \"File deleted\"); } setResult(com.owncloud.android.ui.activity.RESULT_CANCELED); finish(); }else if (resultCode == (RESULT_CANCELED)) { setResult(com.owncloud.android.ui.activity.RESULT_CANCELED); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7293/buggy-version/src.com.owncloud.android.ui.activity.UploadFilesActivity.java", "BodyUseAPI": [], "Fixed commit": "d166ed3746442ed33405f905cf550de5ffe56799", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-14T05:32:11Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_compressed) return targetGroup.processBatch(getSourceLookupName(), getSourceUniqueId(), decompressBatch());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9456/buggy-version/xap-core.xap-datagrid.src.main.java.com.gigaspaces.internal.cluster.node.impl.packets.BatchReplicatedDataPacket.java", "BodyUseAPI": [], "Fixed commit": "901d6f5ea0e70de61f4715d4a51ae622699e907d", "Url": "https://api.github.com/repos/xap/xap", "Date": "2018-09-12T05:04:51Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rishiqing.qywx.service.common.corp.CorpStaffManageService.getCorpStaffByCorpIdAndUserId(staff.getCorpId(),staff.getUserId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (null != dbStaff) { com.rishiqing.qywx.service.model.corp.helper.CorpStaffConverter.mergeCorpStaffVO(staff, dbStaff); corpStaffManageService.saveOrUpdateCorpStaff(dbStaff); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6583/buggy-version/service.src.main.java.com.rishiqing.qywx.service.biz.corp.impl.StaffServiceImpl.java", "BodyUseAPI": ["com.rishiqing.qywx.service.common.corp.CorpStaffManageService.saveOrUpdateCorpStaff(com.rishiqing.qywx.service.biz.corp.impl.CorpStaffVO)", "com.rishiqing.qywx.service.model.corp.helper.CorpStaffConverter.mergeCorpStaffVO(com.rishiqing.qywx.service.biz.corp.impl.CorpStaffVO,com.rishiqing.qywx.service.biz.corp.impl.CorpStaffVO)"], "Fixed commit": "3cfaf94ce10e43cffeaa13d698e21146af48196d", "Url": "https://api.github.com/repos/rishiqing/qywx-isv-access", "Date": "2018-05-02T06:20:30Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == target) || (null == old)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6583/buggy-version/service.src.main.java.com.rishiqing.qywx.service.model.corp.helper.CorpStaffConverter.java", "BodyUseAPI": [], "Fixed commit": "3cfaf94ce10e43cffeaa13d698e21146af48196d", "Url": "https://api.github.com/repos/rishiqing/qywx-isv-access", "Date": "2018-05-02T06:20:30Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((filenames == null) || ((filenames.length) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9451/buggy-version/ssjcreator.src.main.java.hcm.ssj.creator.util.DemoHandler.java", "BodyUseAPI": [], "Fixed commit": "81a734cc68ebea565d3c29f4a9d6b6741504d923", "Url": "https://api.github.com/repos/hcmlab/ssj", "Date": "2018-01-15T15:39:21Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null == mirror) { throw new java.lang.RuntimeException(errorMessage); }else { return mirror.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/885/buggy-version/kie-wb-common-stunner.kie-wb-common-stunner-extensions.kie-wb-common-stunner-svg.kie-wb-common-stunner-svg-gen.src.main.java.org.kie.workbench.common.stunner.svg.gen.apt.SVGShapeProcessor.java", "BodyUseAPI": ["javax.lang.model.type.TypeMirror.toString()"], "Fixed commit": "ab47572627611bcfa6ab82f609872629b3164610", "Url": "https://api.github.com/repos/xiezhang7/kie-wb-common", "Date": "2018-10-15T20:49:27Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pat_data.getStatus().equalsIgnoreCase(\"NEW\")) { ref_comment.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6067/buggy-version/app.src.main.java.com.ecmo.android.activity.ViewReferalForm.java", "BodyUseAPI": [], "Fixed commit": "0b6efa5c9b97b1feaf73566abc25db434fb5d517", "Url": "https://api.github.com/repos/Kiru3014/Dr.Care", "Date": "2018-04-18T09:07:29Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pat_data.getComment().isEmpty())) ref_comment.setText(pat_data.getComment());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6067/buggy-version/app.src.main.java.com.ecmo.android.activity.ViewReferalForm.java", "BodyUseAPI": ["com.ecmo.android.model.response.referalformResponse.getComment()", "android.widget.EditText.setText(pat_data.getComment())"], "Fixed commit": "0b6efa5c9b97b1feaf73566abc25db434fb5d517", "Url": "https://api.github.com/repos/Kiru3014/Dr.Care", "Date": "2018-04-18T09:07:29Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.swagger.models.properties.PropertyBuilder.toModel(io.swagger.models.properties.Property)", "io.swagger.converter.ModelConverters.getInstance().readAsProperty(java.lang.reflect.Type)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((model instanceof io.swagger.models.ModelImpl) && (property instanceof io.swagger.models.properties.StringProperty)) { ((io.swagger.models.ModelImpl) (model)).setEnum(((io.swagger.models.properties.StringProperty) (property)).getEnum()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7802/buggy-version/swagger.swagger-generator.generator-core.src.main.java.org.apache.servicecomb.swagger.generator.core.utils.ParamUtils.java", "BodyUseAPI": [], "Fixed commit": "36d7dca071f3b3024c536f685af4c3f79da56917", "Url": "https://api.github.com/repos/jeho0815/ServiceComb-Java-Chassis", "Date": "2018-10-10T17:16:23Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(contentURL))) initializePlayer(contentURL);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4520/buggy-version/app.src.main.java.com.example.android.bakingbuddy.StepDetails.java", "BodyUseAPI": ["com.example.android.bakingbuddy.StepDetails.initializePlayer(java.lang.String)"], "Fixed commit": "41af3efa1d3355e6424196567dac7e75bc1277c1", "Url": "https://api.github.com/repos/guino000/bakingBuddy", "Date": "2018-08-07T20:19:50Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mutationRate) > 0) genome.binomialDeviate(mutationRate);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/454/buggy-version/src.santa.simulator.mutators.AbstractMutator.java", "BodyUseAPI": [], "Fixed commit": "3bf92f0bc9c94abf8cff9716b19465eb356540ba", "Url": "https://api.github.com/repos/brj1/santa-sim", "Date": "2018-03-28T23:18:47Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.matt.flashcards.Settings.dataLoaded) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5334/buggy-version/mobile.src.main.java.com.matt.flashcards.Settings.java", "BodyUseAPI": [], "Fixed commit": "458840592c5667e299bbe4f9c88e530bbd1c8414", "Url": "https://api.github.com/repos/mattrusso9037/Flashcards", "Date": "2018-03-10T04:07:06Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) > 8) { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4023/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "48fc69991061809e2716438c07e7dc3fd50c469e", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-ALBINALSHAIKH", "Date": "2018-10-02T18:05:33Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(directoryName.exists())) { directoryName.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2460/buggy-version/src.ReceiptPrinter.java", "BodyUseAPI": [], "Fixed commit": "5cf632cd547f9a3c8162971ce647846199fcdfb2", "Url": "https://api.github.com/repos/SzaboKrisztian/SuperShine", "Date": "2018-10-26T08:57:15Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (this.path.endsWith(\"\\\\\")) { checkPath = this.path.substring(0, ((this.path.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2460/buggy-version/src.ReceiptPrinter.java", "BodyUseAPI": [], "Fixed commit": "5cf632cd547f9a3c8162971ce647846199fcdfb2", "Url": "https://api.github.com/repos/SzaboKrisztian/SuperShine", "Date": "2018-10-26T08:57:15Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.getCurrency().equalsIgnoreCase(other.getCurrency())) { if ((this.getValue()) < (other.getValue())) return -1; else if ((this.getValue()) > (other.getValue())) return 1; else return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9382/buggy-version/src.coinpurse.Money.java", "BodyUseAPI": ["coinpurse.Valuable.getValue()", "coinpurse.Valuable.getValue()"], "Fixed commit": "ded93bbe2ca1aad4c0ea918067f00aeb8ceb941c", "Url": "https://api.github.com/repos/OOP2018/coinpurse-PittayutSothanakul", "Date": "2018-02-13T20:15:00Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((readOffset) <= (writeOffset)) { for (int i = readOffset; i < (writeOffset); i++) { logEntryList.add(entryBuffer[i]); } }else { for (int i = readOffset; i < (com.meijie.anaconda.core.DefaultLogHolder.ENTRY_BUFFER_SIZE); i++) { logEntryList.add(entryBuffer[i]); } for (int i = 0; i < (writeOffset); i++) { logEntryList.add(entryBuffer[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4424/buggy-version/anaconda-core.src.main.java.com.meijie.anaconda.core.DefaultLogHolder.java", "BodyUseAPI": [], "Fixed commit": "86572f141a8ea4e5a947109747fa11929e70ba43", "Url": "https://api.github.com/repos/meijies/Anaconda", "Date": "2018-08-23T08:14:20Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3818/buggy-version/src.main.java.cf.wynntils.modules.core.instances.PacketFilter.java", "BodyUseAPI": [], "Fixed commit": "04490ec583ce7460cec995d1e5bb9607e0434bcc", "Url": "https://api.github.com/repos/Wynntils/Wynntils", "Date": "2018-10-13T21:27:13Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (App.realm.isInTransaction()) task.deleteFromRealm(); else { App.realm.executeTransaction(new io.realm.Realm.Transaction() { @java.lang.Override public void execute(io.realm.Realm realm) { task.deleteFromRealm(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7336/buggy-version/app.src.main.java.com.shumidub.todoapprealm.realmcontrollers.TasksRealmController.java", "BodyUseAPI": [], "Fixed commit": "1a9b82a04093af900a520451993dc181801e8e7c", "Url": "https://api.github.com/repos/shumidub/todo", "Date": "2018-01-08T14:30:48Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getLong(java.lang.String)", "java.lang.System.currentTimeMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nowMillis - txMillis) < (timeoutSeconds)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2374/buggy-version/jta-core.src.main.java.org.feisoft.jta.TransactionManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "e1fb128c0a85c6010dbb102b457b8fa68cccdd94", "Url": "https://api.github.com/repos/wxbty/meepo", "Date": "2018-08-16T01:46:53Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR1)) { params.addRule(RelativeLayout.ALIGN_PARENT_END); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8742/buggy-version/sdk.src.main.java.com.mercadopago.views.AmountView.java", "BodyUseAPI": [], "Fixed commit": "f1fd15bc7b5720d2e0bbebfba948127c53dadab8", "Url": "https://api.github.com/repos/mercadopago/px-android", "Date": "2018-06-01T17:40:29Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foundPrefix) { numberText = connection.getNumber(); }else { numberText = (connection.getCategory()) + (connection.getNumber()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3219/buggy-version/app.src.main.java.ch.bbcag.findyourway.views.ConnectionListAdapter.java", "BodyUseAPI": [], "Fixed commit": "6080cfc15fc0a7e57d91fc1e6bd5956c1d285c87", "Url": "https://api.github.com/repos/FaKiieZ/FindYourWay", "Date": "2018-06-05T13:09:12Z"},
{"Line": "=>4099", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lexer.token()) == (Token.PARTITION)) { com.alibaba.druid.sql.dialect.mysql.parser.SQLAlterTableDropPartition dropPartition = parseAlterTableDropPartition(false); stmt.addItem(dropPartition); }else if ((lexer.token()) == (Token.IDENTIFIER)) { com.alibaba.druid.sql.dialect.mysql.parser.SQLAlterTableDropColumnItem item = new com.alibaba.druid.sql.dialect.mysql.parser.SQLAlterTableDropColumnItem(); com.alibaba.druid.sql.dialect.mysql.parser.SQLName name = this.exprParser.name(); item.addColumn(name); stmt.addItem(item); if ((lexer.token()) == (Token.COMMA)) { lexer.nextToken(); } if ((lexer.token()) == (Token.DROP)) { parseAlterDrop(stmt); } }else { super.parseAlterDrop(stmt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9198/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.java", "BodyUseAPI": ["com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.token()", "com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.token()", "com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.nextToken()", "com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.token()"], "Fixed commit": "f45e3203f9c3ce72f1ea265680e0efd47b701f9b", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2018-05-17T13:12:02Z"},
{"Line": "=>4113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lexer.token()) == (Token.DROP)) { parseAlterDrop(stmt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9198/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlStatementParser.java", "BodyUseAPI": [], "Fixed commit": "f45e3203f9c3ce72f1ea265680e0efd47b701f9b", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2018-05-17T13:12:02Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nameET.getText().toString()", "usernameET.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((name.equals(\"\")) && (recipientID.equals(\"\"))) || ((name.isEmpty()) && (recipientID.isEmpty()))) { com.example.gibson.myapplication.MainActivity.sendToast(\"Username Or Name Must be fill!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7951/buggy-version/Application.app.src.main.java.com.example.gibson.myapplication.Fragment.ContactFragment.java", "BodyUseAPI": [], "Fixed commit": "a463c90c88b90571254e19325b1eba1eccfaf4ef", "Url": "https://api.github.com/repos/fcu-d0515211/Beacon_Safety_Device", "Date": "2018-06-07T19:15:35Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opentosca.toscana.plugins.kubernetes.docker.util.DockerRegistryCredentials.getRegistryURL()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(registryUrl.endsWith(\"/\"))) { registryUrl = registryUrl + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1417/buggy-version/server.src.main.java.org.opentosca.toscana.plugins.kubernetes.docker.image.PushingImageBuilder.java", "BodyUseAPI": [], "Fixed commit": "1145fd20f080c440d945fd249c08b3dc34460d89", "Url": "https://api.github.com/repos/StuPro-TOSCAna/TOSCAna", "Date": "2018-02-28T16:48:14Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opentosca.toscana.plugins.kubernetes.docker.util.DockerRegistryCredentials.getUsername()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(username.isEmpty())) { username += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1417/buggy-version/server.src.main.java.org.opentosca.toscana.plugins.kubernetes.docker.image.PushingImageBuilder.java", "BodyUseAPI": [], "Fixed commit": "1145fd20f080c440d945fd249c08b3dc34460d89", "Url": "https://api.github.com/repos/StuPro-TOSCAna/TOSCAna", "Date": "2018-02-28T16:48:14Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mItemToAnimateInWhenWindowAnimationIsFinished) != null) { for (android.view.View v : new android.view.View[]{ holder.iconView, holder.labelView, holder.calloutLine }) { if (v != null) { v.setAlpha(1.0F); v.setTranslationX(0.0F); v.setTranslationY(0.0F); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/859/buggy-version/packages.SystemUI.src.com.android.systemui.recent.RecentsPanelView.java", "BodyUseAPI": [], "Fixed commit": "a924076b4f4f8bb77142c928cb7ca24f684c2818", "Url": "https://api.github.com/repos/sudosurootdev/frameworks_base", "Date": "2012-10-17T11:02:55Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dataStore.DataStorer.getLinearComponents()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (c < ((linearComponents.length) - 1)) { double alpha1 = (linearComponents[c].getConAlpha()) + (linearComponents[c].getRowAlpha()); double beta1 = (linearComponents[c].getConBeta()) + (linearComponents[c].getRowBeta()); double alpha2 = (linearComponents[(c + 1)].getConAlpha()) + (linearComponents[(c + 1)].getRowAlpha()); double beta2 = (linearComponents[(c + 1)].getConBeta()) + (linearComponents[(c + 1)].getRowBeta()); maxCap = (beta2 - beta1) / (alpha1 - alpha2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1293/buggy-version/src.solver.MPSWriter.java", "BodyUseAPI": ["linearComponents[(c + 1)].getRowAlpha()", "linearComponents[c].getRowAlpha()", "linearComponents[(c + 1)].getRowBeta()", "linearComponents[c].getConAlpha()", "linearComponents[c].getRowBeta()", "linearComponents[(c + 1)].getConAlpha()", "linearComponents[(c + 1)].getConBeta()", "linearComponents[c].getConBeta()"], "Fixed commit": "dac4952d7242b8c14561560ce8341811f81d4c92", "Url": "https://api.github.com/repos/simccs/SimCCS", "Date": "2018-02-13T23:20:21Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.profileRecylerVieww)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((recyclerView != null) && (staggeredGridLayoutManager != null)) { recyclerView.setLayoutManager(staggeredGridLayoutManager); recyclerView.setAdapter(staggeredRecyclerViewAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4331/buggy-version/app.src.main.java.to.rent.rentto.Profile.ProfileFragment.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.setLayoutManager(android.support.v7.widget.StaggeredGridLayoutManager)", "android.support.v7.widget.RecyclerView.setAdapter(to.rent.rentto.Profile.ProfileRecyclerViewAdapter)"], "Fixed commit": "ce0d253cebd0f5d58c33487145bafd72fa5dd2af", "Url": "https://api.github.com/repos/minhwebc/Rent.To", "Date": "2018-04-12T05:14:46Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (staggeredGridLayoutManager == null) { android.util.Log.d(to.rent.rentto.Profile.ProfileFragment.TAG, \"staggeredgridlayout manger is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4331/buggy-version/app.src.main.java.to.rent.rentto.Profile.ProfileFragment.java", "BodyUseAPI": [], "Fixed commit": "ce0d253cebd0f5d58c33487145bafd72fa5dd2af", "Url": "https://api.github.com/repos/minhwebc/Rent.To", "Date": "2018-04-12T05:14:46Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.profileRecylerVieww)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (recyclerView == null) { android.util.Log.d(to.rent.rentto.Profile.ProfileFragment.TAG, \"RecyclerView is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4331/buggy-version/app.src.main.java.to.rent.rentto.Profile.ProfileFragment.java", "BodyUseAPI": [], "Fixed commit": "ce0d253cebd0f5d58c33487145bafd72fa5dd2af", "Url": "https://api.github.com/repos/minhwebc/Rent.To", "Date": "2018-04-12T05:14:46Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tradeItems.isOpen()) { com.projectmoss.game.item.Item tradeItem = ownedItems.getInventory().removeItem(((java.lang.Integer) (event.getTarget().getUserObject()))); if (tradeItem != null) { tradeItems.getInventory().addItem(tradeItem); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3606/buggy-version/core.src.com.projectmoss.ui.panel.InventoryPanel.java", "BodyUseAPI": ["tradeItems.getInventory().addItem(com.projectmoss.game.item.Item)", "com.projectmoss.ui.panel.ItemGroupPanel.getInventory()"], "Fixed commit": "77b8089e98225f0a357db3f4a115a047ef6187af", "Url": "https://api.github.com/repos/chadmarchand/project-moss", "Date": "2018-05-20T22:35:19Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fromMap)) { if ((task.getStringLocation()) == null) { etLocation.setText(\"No Location Specified\"); }else { etLocation.setText(task.getStringLocation()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6879/buggy-version/app.src.main.java.cmput301w18t09.orbid.AddEditTaskActivity.java", "BodyUseAPI": [], "Fixed commit": "f849012b8de104035279908881f03f31b339e30c", "Url": "https://api.github.com/repos/CMPUT301W18T09/CDProjektBlue", "Date": "2018-04-05T23:11:26Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFullScreen())) { mTintManager.setNavigationBarTintEnabled(true); mTintManager.setNavigationBarTintColor(color); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9182/buggy-version/actionbar.src.main.java.mobi.cangol.mobile.actionbar.ActionBarActivity.java", "BodyUseAPI": [], "Fixed commit": "0471e902d3b2f7bd7a028bdac1f2889998845045", "Url": "https://api.github.com/repos/Cangol/Cangol-actionbar", "Date": "2018-01-29T08:24:52Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { }else { mTintManager.setStatusBarTintEnabled((!fullscreen)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9182/buggy-version/actionbar.src.main.java.mobi.cangol.mobile.actionbar.ActionBarActivity.java", "BodyUseAPI": [], "Fixed commit": "0471e902d3b2f7bd7a028bdac1f2889998845045", "Url": "https://api.github.com/repos/Cangol/Cangol-actionbar", "Date": "2018-01-29T08:24:52Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { }else { mTintManager = new mobi.cangol.mobile.actionbar.SystemBarTintManager(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9182/buggy-version/actionbar.src.main.java.mobi.cangol.mobile.actionbar.ActionBarActivity.java", "BodyUseAPI": [], "Fixed commit": "0471e902d3b2f7bd7a028bdac1f2889998845045", "Url": "https://api.github.com/repos/Cangol/Cangol-actionbar", "Date": "2018-01-29T08:24:52Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFullScreen())) { mTintManager.setStatusBarTintEnabled(true); mTintManager.setStatusBarTintColor(color); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9182/buggy-version/actionbar.src.main.java.mobi.cangol.mobile.actionbar.ActionBarActivity.java", "BodyUseAPI": [], "Fixed commit": "0471e902d3b2f7bd7a028bdac1f2889998845045", "Url": "https://api.github.com/repos/Cangol/Cangol-actionbar", "Date": "2018-01-29T08:24:52Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tdItems[i].fieldName) == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5760/buggy-version/CS186-proj1.src.java.simpledb.TupleDesc.java", "BodyUseAPI": [], "Fixed commit": "b45360f37c9faf9158c87b5ee991cdd37891666e", "Url": "https://api.github.com/repos/playasim/simpleDB", "Date": "2018-09-08T16:56:55Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.dghaghar.mailboxapp.MessageAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((message.data.length()) < 43) { messageData.setText(message.data); }else { messageData.setText(((message.data.substring(0, 43)) + \"...\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3888/buggy-version/app.src.main.java.com.example.dghaghar.mailboxapp.MessageAdapter.java", "BodyUseAPI": ["message.data.substring(int,int)", "android.widget.TextView.setText(message.data)", "android.widget.TextView.setText(((message.data.substring(0, 43)) + \"...\"))"], "Fixed commit": "9a06e2709eb0dc8c5b0b80828a5bd7ac53beabff", "Url": "https://api.github.com/repos/Deep419/MailboxApp", "Date": "2018-04-26T02:30:38Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mifos.mifosxdroid.adapters.ClientNameListAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((client.getFullname()) == null) { clientName = ((client.getFirstname()) + \" \") + (client.getLastname()); }else { clientName = client.getFullname(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4241/buggy-version/mifosng-android.src.main.java.com.mifos.mifosxdroid.adapters.ClientNameListAdapter.java", "BodyUseAPI": ["com.mifos.objects.client.Client.getLastname()", "com.mifos.objects.client.Client.getFirstname()", "com.mifos.objects.client.Client.getFullname()"], "Fixed commit": "fb3fd55b43b3d753a2ffde063a57d13e416e8947", "Url": "https://api.github.com/repos/AkshGautam/android-client", "Date": "2018-02-14T19:55:47Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!useSavedVals) { start = ((textFieldStart.getValue()) != null) ? textFieldStart.getValue().toString() : null; end = (!(isExpanded())) ? null : (textFieldEnd.getValue()) != null ? textFieldEnd.getValue().toString() : null; if ((end == null) && (start != null)) { end = start; } savedStart = start; savedEnd = end; }else { start = savedStart; end = savedEnd; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4474/buggy-version/src.edu.ku.brc.specify.plugins.SeriesProcCatNumPlugin.java", "BodyUseAPI": [], "Fixed commit": "10e80fb1cf63513dfb4956ed5b677bdc859f6204", "Url": "https://api.github.com/repos/specify/specify6", "Date": "2018-04-27T22:36:33Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (task.isSuccessful()) { for (final com.corelabsplus.journalapp.utils.Entry entry : entries) { if (entry.getSynced().equals(getString(R.string.synced_false))) { entry.setSynced(getString(R.string.synced_true)); databaseReference.child(\"users\").child(mAuth.getCurrentUser().getUid()).child(getString(R.string.entries_dir)).push().setValue(entry).addOnCompleteListener(new com.google.android.gms.tasks.OnCompleteListener<java.lang.Void>() { @java.lang.Override public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<java.lang.Void> task) { if (task.isSuccessful()) { entryViewModal.updateEntry(entry); }else { entry.setSynced(getString(R.string.synced_false)); } } }); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8854/buggy-version/app.src.main.java.com.corelabsplus.journalapp.activities.EntriesActivity.java", "BodyUseAPI": ["com.google.android.gms.tasks.Task<java.lang.Void>.isSuccessful()", "databaseReference.child(\"users\").child(mAuth.getCurrentUser().getUid()).child(getString(R.string.entries_dir)).push().setValue(entry).addOnCompleteListener(com.google.android.gms.tasks.OnCompleteListener<java.lang.Void>)"], "Fixed commit": "1dd8fdd54ad1c940a8d0145c87830929a1f2f6b6", "Url": "https://api.github.com/repos/ngabovictor/JournalApp", "Date": "2018-06-30T15:29:09Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (m != null) { try { materialFacade.remove(m); javax.faces.context.FacesContext.getCurrentInstance().addMessage(\"messages\", new javax.faces.application.FacesMessage(javax.faces.application.FacesMessage.SEVERITY_INFO, \"Material borrado exitosamente\", null)); } catch (java.lang.Exception e) { java.lang.System.err.println(e.getLocalizedMessage()); javax.faces.context.FacesContext.getCurrentInstance().addMessage(\"messages\", new javax.faces.application.FacesMessage(javax.faces.application.FacesMessage.SEVERITY_ERROR, e.getLocalizedMessage(), null)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/654/buggy-version/mavenproject1.projectdb.src.main.java.Beans.materialBean.java", "BodyUseAPI": ["Facade.MaterialFacade.remove(Entities.Material)"], "Fixed commit": "9d317b05727e898969d6efee9fd24cce7cdf741f", "Url": "https://api.github.com/repos/alejocastrillon/projectdatabase", "Date": "2018-05-28T01:37:37Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMap) != null) { mMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.newCameraPosition(cameraPosition)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4021/buggy-version/app.src.main.java.com.meisterschueler.ognviewer.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "e742fba4a7aa98f6fd4c63305d9af47d45fde8be", "Url": "https://api.github.com/repos/Meisterschueler/ogn-viewer-android", "Date": "2018-05-11T11:11:11Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.oracle.truffle.r.runtime.RArguments.getCall(com.oracle.truffle.api.frame.Frame)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(caller.hasSysParent())) { caller = caller.getPromiseCaller(); }else { caller = caller.getParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1226/buggy-version/com.oracle.truffle.r.engine.src.com.oracle.truffle.r.engine.RRuntimeASTAccessImpl.java", "BodyUseAPI": ["com.oracle.truffle.r.runtime.RCaller.getPromiseCaller()", "com.oracle.truffle.r.runtime.RCaller.getParent()"], "Fixed commit": "3d9652f06466b9fc7016bb11d53100b0a07c1807", "Url": "https://api.github.com/repos/oracle/fastr", "Date": "2018-05-30T15:43:40Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchRadiusEstimator) != null) estimatedTileTransforms[i] = org.janelia.stitching.TransformedTileOperations.estimateAffineTransformation(tileBoxes[i].getFullTile(), searchRadiusEstimator); else estimatedTileTransforms[i] = org.janelia.stitching.TransformedTileOperations.getTileTransform(tileBoxes[i].getFullTile());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7188/buggy-version/src.main.java.org.janelia.stitching.StitchSubdividedTileBoxPair.java", "BodyUseAPI": [], "Fixed commit": "dbcee48d378886804cd049f8bb6feab153335048", "Url": "https://api.github.com/repos/saalfeldlab/stitching-spark", "Date": "2018-05-24T21:34:52Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.getContextClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cl == null) { cl = com.netflix.spectator.nflx.Versions.class.getClassLoader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6540/buggy-version/spectator-nflx-plugin.src.main.java.com.netflix.spectator.nflx.Versions.java", "BodyUseAPI": [], "Fixed commit": "cc930f70aae36c58af4f6ce2686c5f80856d7b13", "Url": "https://api.github.com/repos/brharrington/spectator", "Date": "2018-05-29T22:03:09Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { com.example.tonyrobb.groupup.MyClassesAdapter adapter = new com.example.tonyrobb.groupup.MyClassesAdapter(getActivity(), sectionList); listViewSections.setAdapter(adapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/203/buggy-version/app.src.main.java.com.example.tonyrobb.groupup.MyClassesFragment.java", "BodyUseAPI": [], "Fixed commit": "acfab4ec3634d91ea9c26dac226f01b385265ccd", "Url": "https://api.github.com/repos/MobileApps5236/GroupUp", "Date": "2018-03-26T00:35:36Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.parser.JSONLexer.token()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (token == (com.alibaba.fastjson.parser.JSONToken.LITERAL_FLOAT)) { java.lang.Number number = lexer.decimalValue(false); longObject = number.longValue(); lexer.nextToken(JSONToken.COMMA); }else { if (token == (com.alibaba.fastjson.parser.JSONToken.LBRACE)) { com.alibaba.fastjson.JSONObject jsonObject = new com.alibaba.fastjson.JSONObject(true); parser.parseObject(jsonObject); longObject = com.alibaba.fastjson.util.TypeUtils.castToLong(jsonObject); }else { java.lang.Object value = parser.parse(); longObject = com.alibaba.fastjson.util.TypeUtils.castToLong(value); } if (longObject == null) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2191/buggy-version/src.main.java.com.alibaba.fastjson.serializer.LongCodec.java", "BodyUseAPI": [], "Fixed commit": "d39e3975bfea1632788e9ccbf29d5b49f3448157", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2018-08-16T11:08:42Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.OptionalDouble.orElse(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (maxMagnitude > 1) { for (int i = 0; i < (nums.length); i++) { nums[i] /= maxMagnitude; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3467/buggy-version/src.trclib.TrcUtil.java", "BodyUseAPI": [], "Fixed commit": "5e4efe5b6031fc6977d4612dea4dc857ddd83104", "Url": "https://api.github.com/repos/coolioasjulio/Frc2018FirstPowerUp", "Date": "2018-08-25T01:03:58Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((user.getUsername()) != null) && (!(user.getUsername().isEmpty()))) oriUser.setUserame(user.getUsername());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7012/buggy-version/src.main.java.com.example.demo.service.UserService.java", "BodyUseAPI": ["com.example.demo.domain.User.setUserame(user.getUsername())", "com.example.demo.domain.User.getUsername()"], "Fixed commit": "4b8764832732e283dd2f0a1be9c35a9372074916", "Url": "https://api.github.com/repos/foil/demo", "Date": "2018-08-06T15:32:43Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getBundle().containsKey(\"perfecto.capabilities.securityToken\")) || (getBundle().containsKey(\"driver.capabilities.securityToken\"))) { org.openqa.selenium.MutableCapabilities dcaps = com.quantum.utils.CloudUtils.getDeviceProperties(((org.openqa.selenium.MutableCapabilities) (driver.getCapabilities()))); com.quantum.utils.ConfigurationUtils.setActualDeviceCapabilities(dcaps.asMap()); com.quantum.utils.ConsoleUtils.logWarningBlocks((\"DEVICE PROPERTIES: \" + (dcaps.toString()))); }else { com.quantum.utils.ConsoleUtils.logWarningBlocks((\"DEVICE PROPERTIES: \" + (driver.getCapabilities().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8557/buggy-version/src.main.java.com.quantum.listeners.PerfectoDriverListener.java", "BodyUseAPI": [], "Fixed commit": "6a70c10dd7964617b6f0d64a82aa030c6ec6c360", "Url": "https://api.github.com/repos/Project-Quantum/Quantum", "Date": "2018-07-04T09:24:50Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (config.getBoolean(Keys.IMAGES_URL_MAKE_ABSOLUTE, true)) org.jbake.util.HtmlUtil.fixImageSourceUrls(fileContents, config);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1459/buggy-version/jbake-core.src.main.java.org.jbake.app.Crawler.java", "BodyUseAPI": ["org.jbake.util.HtmlUtil.fixImageSourceUrls(java.util.Map<java.lang.String, java.lang.Object>,org.apache.commons.configuration.CompositeConfiguration)"], "Fixed commit": "e51c33f62dda9fd9818f23ae3a2d83472c35ba7e", "Url": "https://api.github.com/repos/OndraZizka/jbake", "Date": "2018-07-25T16:39:24Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URI.getScheme()", "java.net.URI.getPort()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((scheme.equalsIgnoreCase(\"http\")) && (port == 80)) || ((scheme.equalsIgnoreCase(\"https\")) && (port == 443))) { return uri.getHost(); }else { return ((uri.getHost()) + \":\") + (uri.getPort()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/334/buggy-version/src.main.java.com.google.devtools.build.lib.remote.blobstore.http.AbstractHttpHandler.java", "BodyUseAPI": [], "Fixed commit": "8bc920fba5af4a8fee69c8722e95403b5a17d977", "Url": "https://api.github.com/repos/GregBowyer/bazel", "Date": "2018-03-29T23:59:55Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currPosition) + 1) == (mMusic.size())) { currPosition = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6724/buggy-version/app.src.main.java.com.hebaiyi.www.topviewmusic.local.view.LocalMusicListActivity.java", "BodyUseAPI": [], "Fixed commit": "204de5bea8a8a48d6d4c0ecf2611035b5a988e93", "Url": "https://api.github.com/repos/C1over/TopView_Music", "Date": "2018-09-29T09:46:32Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.manorrock.oyena.rest.RestMappingMatcher.match(javax.faces.context.FacesContext)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (match != null) { java.lang.Object result = restMethodExecutor.execute(facesContext, match); facesContext.getAttributes().put(((com.manorrock.oyena.rest.RestLifecycle.class.getPackage().getName()) + \".RestResult\"), result); }else { try { facesContext.getExternalContext().responseSendError(404, \"Unable to match request\"); facesContext.responseComplete(); } catch (java.io.IOException ioe) { throw new javax.faces.FacesException(ioe); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2565/buggy-version/rest.src.main.java.com.manorrock.oyena.rest.RestLifecycle.java", "BodyUseAPI": ["com.manorrock.oyena.rest.RestMethodExecutor.execute(javax.faces.context.FacesContext,com.manorrock.oyena.rest.RestMappingMatch)"], "Fixed commit": "ce2b75f872fd5483f34cb97508b3984c4bf44880", "Url": "https://api.github.com/repos/manorrock/oyena", "Date": "2018-05-28T15:37:16Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dmf444.catwalks.client.CatwalkModel.cache.containsKey(cw)) { return dmf444.catwalks.client.CatwalkModel.cache.get(cw); }else { com.google.common.collect.ImmutableList.Builder<net.minecraft.client.renderer.block.model.BakedQuad> builder = new com.google.common.collect.ImmutableList.Builder<>(); java.util.List<net.minecraft.client.renderer.block.model.BakedQuad> railQuads = rails.getQuads(state, side, rand); java.util.List<net.minecraft.client.renderer.block.model.BakedQuad> floorQuads = floor.getQuads(state, side, rand); java.util.function.Function<net.minecraft.client.renderer.block.model.BakedQuad, java.lang.Boolean> filter = (net.minecraft.client.renderer.block.model.BakedQuad q) -> (!(q.hasTintIndex())) || (cw.hasLayer(q.getTintIndex())); for (int it = 0; it < 4; it++) { net.minecraft.util.math.Vec3d offset = new net.minecraft.util.math.Vec3d(((it == 1) || (it == 2) ? 0.5 : 0.0), (-1), (it > 1 ? 0.5 : 0.0)); dmf444.catwalks.client.ModelSlicer.sliceInto(builder, railQuads, cw.railSections.get(it).boundingBoxes.get(it), offset, filter); } return builder.build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1365/buggy-version/src.main.java.dmf444.catwalks.client.CatwalkModel.java", "BodyUseAPI": ["cw.railSections.get(it).boundingBoxes.get(int)", "cw.railSections.get(int)", "dmf444.catwalks.client.CatwalkState.hasLayer(q.getTintIndex())", "java.util.Map<dmf444.catwalks.client.CatwalkState, java.util.List<net.minecraft.client.renderer.block.model.BakedQuad>>.get(dmf444.catwalks.client.CatwalkState)", "dmf444.catwalks.client.ModelSlicer.sliceInto(builder,java.util.List<net.minecraft.client.renderer.block.model.BakedQuad>,cw.railSections.get(it).boundingBoxes.get(it),net.minecraft.util.math.Vec3d,java.util.function.Function<net.minecraft.client.renderer.block.model.BakedQuad, java.lang.Boolean>)"], "Fixed commit": "05c25a0afa37cdc86aa586266ba42d4570e5b7bf", "Url": "https://api.github.com/repos/TeamDmfMM/Catwalks-4", "Date": "2018-06-14T01:40:23Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.block.state.IBlockState.getValue(CatwalkBlock.CATWALK_STATE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cw == null) { cw = new dmf444.catwalks.client.CatwalkState(dmf444.catwalks.client.CatwalkModel.RailSection.OUTER, dmf444.catwalks.client.CatwalkModel.RailSection.OUTER, dmf444.catwalks.client.CatwalkModel.RailSection.OUTER, dmf444.catwalks.client.CatwalkModel.RailSection.OUTER, dmf444.catwalks.client.CatwalkModel.FloorSection.OUTER, dmf444.catwalks.client.CatwalkModel.FloorSection.OUTER, dmf444.catwalks.client.CatwalkModel.FloorSection.OUTER, dmf444.catwalks.client.CatwalkModel.FloorSection.OUTER, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1365/buggy-version/src.main.java.dmf444.catwalks.client.CatwalkModel.java", "BodyUseAPI": [], "Fixed commit": "05c25a0afa37cdc86aa586266ba42d4570e5b7bf", "Url": "https://api.github.com/repos/TeamDmfMM/Catwalks-4", "Date": "2018-06-14T01:40:23Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.getSelectedRow()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (row >= 0) table.editCellAt(row, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3797/buggy-version/src.main.java.org.mastodon.revised.model.tag.TagTable.java", "BodyUseAPI": ["javax.swing.JTable.editCellAt(int,int)"], "Fixed commit": "ed14d10f9f1faa18099ba3a6bdc7516a63046a6f", "Url": "https://api.github.com/repos/fiji/TrackMate3", "Date": "2018-01-17T13:34:58Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pathFollower) != null) { pathFollower.telemetryUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7470/buggy-version/TeamCode.src.main.java.com.evolutionftc.autopilot.AutopilotSystem.java", "BodyUseAPI": [], "Fixed commit": "06bbf88f76d9d553e112439a41985700597dfab4", "Url": "https://api.github.com/repos/aedancullen/marv-mk8", "Date": "2018-01-19T22:56:44Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mUser) != null) { expenseRef.child(mUser.getUid()).child(java.lang.String.valueOf(rowId)).setValue(expense); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9250/buggy-version/app.src.main.java.com.pencilbox.user.smartwallet.ViewModel.MainViewModel.java", "BodyUseAPI": [], "Fixed commit": "e8391266bbc7201dc59ef5c1fe3093e05004eefd", "Url": "https://api.github.com/repos/syedtanvirahmad/smartwallet", "Date": "2018-05-12T05:14:07Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= (args.length)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8213/buggy-version/src.com.bekvon.bukkit.residence.text.help.HelpEntry.java", "BodyUseAPI": [], "Fixed commit": "9a935350699a21c1f94fb9ec62041388303c9b52", "Url": "https://api.github.com/repos/sync667/Residence", "Date": "2018-10-10T14:03:46Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 1) { java.util.Set<java.lang.String> Commands = com.bekvon.bukkit.residence.Residence.getInstance().getHelpPages().getSubCommands(sender, args); java.lang.String PartOfCommand = args[((args.length) - 1)]; org.bukkit.util.StringUtil.copyPartialMatches(PartOfCommand, Commands, completionList); java.util.Collections.sort(completionList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8213/buggy-version/src.com.bekvon.bukkit.residence.utils.TabComplete.java", "BodyUseAPI": ["com.bekvon.bukkit.residence.Residence.getInstance().getHelpPages().getSubCommands(org.bukkit.command.CommandSender,java.lang.String[])"], "Fixed commit": "9a935350699a21c1f94fb9ec62041388303c9b52", "Url": "https://api.github.com/repos/sync667/Residence", "Date": "2018-10-10T14:03:46Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.Jsoup.clean(java.lang.String,org.jsoup.safety.Whitelist.none())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((((((cleanedMessageContent == \"chatbot\") || (cleanedMessageContent == \"Chatbot\")) || (cleanedMessageContent == \"chat bot\")) || (cleanedMessageContent == \"chatBot\")) || (cleanedMessageContent == \"ChatBot\")) || (cleanedMessageContent == \"Chat bot\")) || (cleanedMessageContent == \"chat Bot\")) || (cleanedMessageContent == \"Chat Bot\")) { codeu.model.data.Message messageBot = new codeu.model.data.Message(java.util.UUID.randomUUID(), conversation.getId(), user.getId(), (\"http://www.google.com/search?\" + cleanedMessageContent), java.time.Instant.now()); messageStore.addMessage(messageBot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6222/buggy-version/src.main.java.codeu.controller.ChatServlet.java", "BodyUseAPI": [], "Fixed commit": "921133133871e7f2ad462b66cc2a2abee1adf06c", "Url": "https://api.github.com/repos/sunbini0823/CodeU-Spring-2018", "Date": "2018-05-10T23:21:57Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["stratos.game.plans.Inventory.production(stratos.game.plans.Traded)", "stratos.game.plans.Inventory.consumption(stratos.game.plans.Traded)", "stratos.game.plans.Inventory.production(stratos.game.plans.Traded)", "stratos.game.plans.Inventory.consumption(stratos.game.plans.Traded)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((OC - OP) > (DC - DP)) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/107/buggy-version/src.stratos.game.plans.BringUtils.java", "BodyUseAPI": [], "Fixed commit": "a80e9e2b93a7a15b821ba24087977d62fde8e80d", "Url": "https://api.github.com/repos/Morgan-Allen/Presidium-Graphics-Overhaul", "Date": "2018-01-15T11:41:31Z"},
{"Line": "=>1219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.splicemachine.db.iapi.types.DataValueDescriptor.cloneValue(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (newDefault instanceof com.splicemachine.db.iapi.types.SQLChar) { newDefault.normalize(colDesc.getType(), newDefault); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3553/buggy-version/db-engine.src.main.java.com.splicemachine.db.impl.sql.compile.FromTable.java", "BodyUseAPI": ["com.splicemachine.db.iapi.types.DataValueDescriptor.normalize(colDesc.getType(),com.splicemachine.db.iapi.types.DataValueDescriptor)"], "Fixed commit": "ce33aa3f475b7330146a4f9be1821d2af1ef75ea", "Url": "https://api.github.com/repos/splicemachine/spliceengine", "Date": "2018-03-07T00:26:19Z"},
{"Line": "=>667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.splicemachine.db.iapi.types.DataTypeDescriptor.getTypeId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((columnTypeId.getTypeFormatId()) == (com.splicemachine.db.iapi.services.io.StoredFormatIds.CHAR_TYPE_ID)) && ((defaultValue) != null)) { com.splicemachine.db.iapi.types.DataValueDescriptor newDefault = defaultValue.cloneValue(false); newDefault.normalize(getType(), newDefault); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3553/buggy-version/db-engine.src.main.java.com.splicemachine.db.impl.sql.compile.ColumnDefinitionNode.java", "BodyUseAPI": [], "Fixed commit": "ce33aa3f475b7330146a4f9be1821d2af1ef75ea", "Url": "https://api.github.com/repos/splicemachine/spliceengine", "Date": "2018-03-07T00:26:19Z"},
{"Line": "=>549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dispenserPowered) { com.lothrazar.cyclicmagic.core.registry.BlockRegistry.registerBlock(new com.lothrazar.cyclicmagic.block.dropper.BlockDropperExact(), \"dropper_exact\", GuideCategory.BLOCK); net.minecraftforge.fml.common.registry.GameRegistry.registerTileEntity(com.lothrazar.cyclicmagic.block.dropper.TileEntityDropperExact.class, \"dropper_exact_te\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4448/buggy-version/src.main.java.com.lothrazar.cyclicmagic.module.BlockModule.java", "BodyUseAPI": [], "Fixed commit": "1d7197c308133276af5e080f85a9246d01d22162", "Url": "https://api.github.com/repos/PrinceOfAmber/Cyclic", "Date": "2018-05-04T04:15:53Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.appng.api.support.FieldProcessorImpl.hasFieldErrors(fieldDef.getFields())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (errors) { return errors; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3025/buggy-version/appng-api.src.main.java.org.appng.api.support.FieldProcessorImpl.java", "BodyUseAPI": [], "Fixed commit": "c94df2113b110bd5de76ff4d6b27bfa129048dd6", "Url": "https://api.github.com/repos/appNG/appng", "Date": "2018-06-08T09:37:36Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pieceSprite.coordinates[i].getY()", "pieceSprite.coordinates[i].getX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((y >= 20) || (y < 0)) || (x >= 20)) || (x < 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4957/buggy-version/src.comp1140.ass2.Game.GridSprite.java", "BodyUseAPI": [], "Fixed commit": "8381ab09525fd0f34dfa57b0b1060a8140c4bd8c", "Url": "https://api.github.com/repos/negaex/Blockus-Java", "Date": "2015-10-01T01:03:54Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (match) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7974/buggy-version/1.12.src.main.java.com.blakebr0.extendedcrafting.tile.TileCraftingCore.java", "BodyUseAPI": [], "Fixed commit": "764485b16381120920bef89081fb1ecd432fc442", "Url": "https://api.github.com/repos/BlakeBr0/ExtendedCrafting", "Date": "2018-01-22T06:27:04Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((g.getCompartmentRef()) == null) { glyphCompartmentId = \"default\"; }else { glyphCompartmentId = ((fr.curie.cd2sbgnml.Glyph) (g.getCompartmentRef())).getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1069/buggy-version/src.main.java.fr.curie.cd2sbgnml.CD2SBGNML.java", "BodyUseAPI": ["((fr.curie.cd2sbgnml.Glyph) (g.getCompartmentRef())).getId()", "fr.curie.cd2sbgnml.Glyph.getCompartmentRef()"], "Fixed commit": "2638f760955274e1a931a688970b15ed49b13b8e", "Url": "https://api.github.com/repos/sysbio-curie/cd2sbgnml", "Date": "2018-06-27T18:44:15Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentScreen) != null) { currentScreen.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/28/buggy-version/core.src.main.se.tevej.game.controller.ScreenManager.java", "BodyUseAPI": [], "Fixed commit": "00308b00915d4f27e40e8a8125e17fb0207616da", "Url": "https://api.github.com/repos/Tevej/DayInGothenburgInTime", "Date": "2018-10-21T15:41:08Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.view.ViewCompat.dispatchApplyWindowInsets(android.view.View,insets.replaceSystemWindowInsets(childInsets))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (windowInsetsCompat.isConsumed()) { consumed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5188/buggy-version/qmui.src.main.java.com.qmuiteam.qmui.util.QMUIWindowInsetHelper.java", "BodyUseAPI": [], "Fixed commit": "532439b5dff1f22e8a05db513e1c51c12cdea91d", "Url": "https://api.github.com/repos/QMUI/QMUI_Android", "Date": "2018-02-26T07:51:05Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((filepath != null) && ((filepath.length()) > 0)) && (new java.io.File(filepath).exists())) { return mapper.readValue(new java.io.File(filepath), net.osmand.server.services.api.MotdMessage.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/80/buggy-version/java-tools.OsmAndServer.src.main.java.net.osmand.server.services.api.MotdService.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readValue(java.io.File,java.lang.Class)"], "Fixed commit": "b3946dc1f0ca9cee73753c1fd8cd65aaf9e87df2", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-tools", "Date": "2018-09-01T19:26:41Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (message != null) { message = setting.modifyMessageIfNeeded(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/80/buggy-version/java-tools.OsmAndServer.src.main.java.net.osmand.server.services.api.MotdService.java", "BodyUseAPI": ["net.osmand.server.services.api.MotdService.DiscountSetting.modifyMessageIfNeeded(net.osmand.server.services.api.MotdMessage)"], "Fixed commit": "b3946dc1f0ca9cee73753c1fd8cd65aaf9e87df2", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-tools", "Date": "2018-09-01T19:26:41Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getModelObject()) instanceof org.brixcms.plugin.site.SiteRootNode) { org.brixcms.jcr.wrapper.BrixNode targetNode = ((org.brixcms.plugin.site.folder.FolderNode) (getModelObject())).getRedirectReference().getNodeModel().getObject(); setModelObject(targetNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5415/buggy-version/brix-core.src.main.java.org.brixcms.plugin.site.page.PageRenderingPage.java", "BodyUseAPI": [], "Fixed commit": "07c7107ff3e1f97b5e2ba159f0eef350aadc42f7", "Url": "https://api.github.com/repos/kbachl/brix-cms", "Date": "2018-01-27T10:07:11Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((includeType) == (com.yahoo.bullet.parsing.Window.Unit.ALL)) { if (last != null) { return java.util.Optional.of(java.util.Collections.singletonList(com.yahoo.bullet.parsing.Window.IMPROPER_LAST)); } return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2305/buggy-version/src.main.java.com.yahoo.bullet.parsing.Window.java", "BodyUseAPI": [], "Fixed commit": "d1eb5ccbc609e068dea7956b74a829ba5e2e5238", "Url": "https://api.github.com/repos/akshaisarma/bullet-core", "Date": "2018-01-20T22:05:07Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.therm.thermicscontrol.SystemConfigDataSource.getSystemConfig(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (res == null) { java.util.List<com.therm.thermicscontrol.SystemConfig> systems = dataSource.getAllSystemConfig(); if (!(systems.isEmpty())) { dataSource.setSelectedSystem(systems.get(0).getId()); return systems.get(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4496/buggy-version/ThermicsControl.thermicsControl.src.main.java.com.therm.thermicscontrol.SystemConfigDataSource.java", "BodyUseAPI": [], "Fixed commit": "e200bbbec4f04b0b05e79337a70233a6f1bff9f8", "Url": "https://api.github.com/repos/ifelsedeveloper/thermicsgsm", "Date": "2018-01-16T15:21:48Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.amazonaws.xray.AWSXRay.getGlobalRecorder().getTraceEntity()) != null) com.amazonaws.xray.AWSXRay.getCurrentSegment().putAnnotation(\"parentId\", com.amazonaws.xray.AWSXRay.getGlobalRecorder().getTraceEntity().getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2666/buggy-version/services.name.src.main.java.org.aws.samples.compute.name.NameEndpoint.java", "BodyUseAPI": [], "Fixed commit": "788aab447f6624e629df1ce7c9e21e89b41312ce", "Url": "https://api.github.com/repos/tiffanyfay/aws-microservices-deploy-options", "Date": "2018-03-30T23:38:12Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.amazonaws.xray.AWSXRay.getGlobalRecorder().getTraceEntity()) != null) com.amazonaws.xray.AWSXRay.getCurrentSegment().putAnnotation(\"parentId\", com.amazonaws.xray.AWSXRay.getGlobalRecorder().getTraceEntity().getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2666/buggy-version/services.name.src.main.java.org.aws.samples.compute.name.NameEndpoint.java", "BodyUseAPI": [], "Fixed commit": "788aab447f6624e629df1ce7c9e21e89b41312ce", "Url": "https://api.github.com/repos/tiffanyfay/aws-microservices-deploy-options", "Date": "2018-03-30T23:38:12Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.amazonaws.xray.AWSXRay.getGlobalRecorder().getTraceEntity()) != null) segment.putAnnotation(\"parentId\", xrayRecorder.getTraceEntity().getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2666/buggy-version/services.webapp.src.main.java.org.aws.samples.compute.webapp.WebappController.java", "BodyUseAPI": [], "Fixed commit": "788aab447f6624e629df1ce7c9e21e89b41312ce", "Url": "https://api.github.com/repos/tiffanyfay/aws-microservices-deploy-options", "Date": "2018-03-30T23:38:12Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.amazonaws.xray.AWSXRay.getGlobalRecorder().getTraceEntity()) != null) com.amazonaws.xray.AWSXRay.getCurrentSegment().putAnnotation(\"parentId\", com.amazonaws.xray.AWSXRay.getGlobalRecorder().getTraceEntity().getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2666/buggy-version/services.greeting.src.main.java.org.aws.samples.compute.greeting.GreetingEndpoint.java", "BodyUseAPI": [], "Fixed commit": "788aab447f6624e629df1ce7c9e21e89b41312ce", "Url": "https://api.github.com/repos/tiffanyfay/aws-microservices-deploy-options", "Date": "2018-03-30T23:38:12Z"},
{"Line": "=>1115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (de.tuebingen.ui.InputGUI.RRG.equals(getGram())) { ops.setOurVal(de.tuebingen.ui.InputGUI.RRG, \"\"); }else if (de.tuebingen.ui.InputGUI.CFG.equals(getGram())) { ops.setOurVal(\"c\", \"\"); }else if (de.tuebingen.ui.InputGUI.TAG2RCG.equals(getGram())) { ops.setOurVal(de.tuebingen.ui.InputGUI.TAG2RCG, \"\"); }else if (de.tuebingen.ui.InputGUI.CYKTAG.equals(getGram())) { ops.setVal(de.tuebingen.ui.InputGUI.CYKTAG, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5209/buggy-version/src.de.tuebingen.ui.InputGUI.java", "BodyUseAPI": ["de.tuebingen.ui.CommandLineOptions.setOurVal(java.lang.String,java.lang.String)"], "Fixed commit": "b98d1a573c1a1cffb79ca2ddd987fbfc1d514d34", "Url": "https://api.github.com/repos/spetitjean/TuLiPA-frames", "Date": "2018-02-14T10:44:44Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.activity.CropActivity.findPoints()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (points != null) { mSelectionImageView.setPoints(points); }else { com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.CropActivity.TAG, getResources().getString(R.string.no_contour_found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/935/buggy-version/src.com.owncloud.android.ui.activity.CropActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.QuadrilateralSelectionImageView.setPoints(java.util.List<android.graphics.PointF>)"], "Fixed commit": "e29efb0bcda13e388cdfc548e0fb11f4440d3d2b", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-12T06:43:04Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fields.length) < 1) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3630/buggy-version/src.org.yeastrc.proxl.xml.iprophet.reader.KojakConfReader.java", "BodyUseAPI": [], "Fixed commit": "1017e0ff266c88cd94640d2d63970d8ca3485174", "Url": "https://api.github.com/repos/yeastrc/proxl-import-iprophet", "Date": "2018-09-20T21:29:01Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.google.android.exoplayer2.util.Util.SDK_INT) <= 23) { releasePlayer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5061/buggy-version/app.src.main.java.com.example.vinhphuc.bakingapp.presentation.recipe_step.SingleStepFragment.java", "BodyUseAPI": [], "Fixed commit": "37743483c5b3a14e1b1dc168f1c8628a6058084f", "Url": "https://api.github.com/repos/thvphuc246/BakingApp", "Date": "2018-05-16T12:44:49Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mediaSession) == null) initializeMediaSession();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5061/buggy-version/app.src.main.java.com.example.vinhphuc.bakingapp.presentation.recipe_step.SingleStepFragment.java", "BodyUseAPI": [], "Fixed commit": "37743483c5b3a14e1b1dc168f1c8628a6058084f", "Url": "https://api.github.com/repos/thvphuc246/BakingApp", "Date": "2018-05-16T12:44:49Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.datastax.driver.core.TypeCodec.varchar().deserialize(java.nio.ByteBuffer,com.datastax.driver.core.ProtocolVersion)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((dateStr.length()) == 23) { return java.time.LocalDateTime.parse(dateStr).toLocalDate(); }else if ((dateStr.contains(\"+\")) || (dateStr.contains(\"-\"))) { return java.time.OffsetDateTime.parse(dateStr).toLocalDate(); }else { return java.time.LocalDateTime.parse(dateStr).toLocalDate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6026/buggy-version/src.main.java.com.openlattice.datastore.cassandra.CassandraSerDesFactory.java", "BodyUseAPI": ["java.time.LocalDateTime.toLocalDate()", "java.time.OffsetDateTime.toLocalDate()", "java.time.LocalDateTime.toLocalDate()", "java.lang.String.contains(java.lang.String)", "java.time.LocalDateTime.parse(java.lang.String)", "java.time.LocalDateTime.parse(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.time.OffsetDateTime.parse(java.lang.String)"], "Fixed commit": "2df6d851413770c75d52dc7eb9a3c3460fd04efd", "Url": "https://api.github.com/repos/openlattice/conductor-client", "Date": "2018-04-24T07:27:12Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMode) == (com.nonprofit.aananth.prms.MainActivity.Mode.PERMISSION_GET)) { getDynamicFilePermission(); }else if ((mMode) == (com.nonprofit.aananth.prms.MainActivity.Mode.LOGIN)) { setupLoginScreen(); }else if ((mMode) == (com.nonprofit.aananth.prms.MainActivity.Mode.REND_PAT)) { renderPatientview(); }else { refreshPatRecycleView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9810/buggy-version/app.src.main.java.com.nonprofit.aananth.prms.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1798dc20cf7c2a198569716e4bbde398b5e26781", "Url": "https://api.github.com/repos/aananthcn/prms-android", "Date": "2018-09-16T12:01:05Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.RadioGroup.getCheckedRadioButtonId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (selectedId == (R.id.information_collection_radio_yes)) { android.util.Log.d(\"RADIO_SELECTED\", \"YES\"); current_receiving_treatment = \"yes\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2026/buggy-version/app.src.main.java.com.example.jiashuwu.neurograph.InformationCollectionActivity.java", "BodyUseAPI": [], "Fixed commit": "963bd7c4d8b7af35bc01e7fd1bceab36aef0b399", "Url": "https://api.github.com/repos/JiashuWu/NeuroGraph", "Date": "2018-04-02T00:25:36Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anpilog.budget.ws.service.AccountsService.createAccount(com.anpilog.budget.ws.shared.dto.AccountDTO)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((createdAccount.getBank()) != null) { org.springframework.beans.BeanUtils.copyProperties(createdAccount.getBank(), bankReference); returnValue.setBank(bankReference); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8055/buggy-version/com.anpilog.budget.ws.src.main.java.com.anpilog.budget.ws.ui.entrypoints.AccountsEntryPoint.java", "BodyUseAPI": ["org.springframework.beans.BeanUtils.copyProperties(createdAccount.getBank(),com.anpilog.budget.ws.io.entity.ReferenceEntity)", "com.anpilog.budget.ws.shared.dto.AccountDTO.getBank()"], "Fixed commit": "80fd05f8a1c39fe6768c280e494a62588bb32116", "Url": "https://api.github.com/repos/aianitro/budget6-ws", "Date": "2018-07-17T04:34:29Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (productAmountAfterSell > 0) { java.math.BigDecimal capitalPriceAfterReturnAmount = stock.getCapitalPrice().multiply(new java.math.BigDecimal(stock.getAmount())).add(removeInvoiceDetail.getCapitalPrice().multiply(new java.math.BigDecimal(removeInvoiceDetail.getQuantity()))).divide(new java.math.BigDecimal(productAmountAfterSell), 2, java.math.RoundingMode.HALF_UP); stock.setCapitalPrice(capitalPriceAfterReturnAmount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7747/buggy-version/src.main.java.com.blogspot.wittakarn.business.StockBusiness.java", "BodyUseAPI": ["stock.getCapitalPrice().multiply(new java.math.BigDecimal(stock.getAmount())).add(removeInvoiceDetail.getCapitalPrice().multiply(new java.math.BigDecimal(removeInvoiceDetail.getQuantity()))).divide(java.math.BigDecimal,int,java.math.RoundingMode)"], "Fixed commit": "47f2480e7baaa5757d21dca916b1306f29b7045b", "Url": "https://api.github.com/repos/wittakarn/sesq", "Date": "2018-09-15T16:18:51Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2792/buggy-version/utils.src.main.java.com.gianlu.commonutils.Preferences.BaseAboutFragment.java", "BodyUseAPI": [], "Fixed commit": "de2cf080b9ae553a36105219b6d36d5fad2cb717", "Url": "https://api.github.com/repos/devgianlu/CommonUtils", "Date": "2018-06-08T17:43:21Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((activeStep) == stepNumber) { closeStep(stepNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8431/buggy-version/vertical-stepper-form.src.main.java.ernestoyaquello.com.verticalstepperform.VerticalStepperFormLayout.java", "BodyUseAPI": ["ernestoyaquello.com.verticalstepperform.VerticalStepperFormLayout.closeStep(int)"], "Fixed commit": "8d0d8cca11362c5315c28810e52bee8ef497e93c", "Url": "https://api.github.com/repos/skela/vertical-stepper-form", "Date": "2018-10-05T08:02:50Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.asList(org.springframework.core.io.Resource[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((strict) && (okResourcesLs.isEmpty())) { throw new net.engining.pg.support.core.exception.ErrorMessageException(net.engining.pg.support.core.exception.ErrorCode.CheckError, \"ok\u6807\u8bc6\u6587\u4ef6\u4e0edata\u6587\u4ef6\u6ca1\u6709\u5168\u90e8\u5230\u8fbe\uff01\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8977/buggy-version/pg-batch.pg-batch-help.src.main.java.net.engining.pg.batch.sdk.infrastructure.MultiFilesOkCheckTasklet.java", "BodyUseAPI": [], "Fixed commit": "252a925576b37804918f513dc069c649b9848019", "Url": "https://api.github.com/repos/crazythinking/pg", "Date": "2018-10-19T04:00:30Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBLTLeScanner.groupOfDevices.size()) > 0) { bottomSheetBehavior.setState(BottomSheetBehavior.STATE_EXPANDED); fab.setVisibility(View.INVISIBLE); }else { com.adambirdsall.smartdimmer.Utils.Utils.toast(getApplicationContext(), \"Please select devices before connecting.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/437/buggy-version/SmartDimmer.app.src.main.java.com.adambirdsall.smartdimmer.Activities.DiscoveryActivity.java", "BodyUseAPI": [], "Fixed commit": "7c76e4874cb4635146ffbacecba9876350c1f4b3", "Url": "https://api.github.com/repos/AdamBirdsall/SmartDimmer_Android", "Date": "2018-01-06T23:34:55Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.intellij.refactoring.extractMethodObject.reflect.PsiReflectionAccessUtil.isArrayClass(psiClass)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7756/buggy-version/java.java-impl.src.com.intellij.refactoring.extractMethodObject.reflect.PsiReflectionAccessUtil.java", "BodyUseAPI": [], "Fixed commit": "9ea816d791345070155fbee4257fc111f91ea1a4", "Url": "https://api.github.com/repos/afwang/intellij-community", "Date": "2018-04-12T15:03:21Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((LibraryService.TREE_URI) != null) { java.lang.String[] splittedTreeUri = LibraryService.TREE_URI.getPath().split(\"/\"); for (int i = 0; i < (splitted.length); i++) { if (splittedTreeUri[2].substring(0, ((splittedTreeUri[2].length()) - 1)).equals(splitted[i])) { index = i; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6529/buggy-version/app.src.main.java.v.blade.ui.TagEditorActivity.java", "BodyUseAPI": [], "Fixed commit": "ca176b9304039fa627e2843615d669c76a54e787", "Url": "https://api.github.com/repos/Valou3433/blade-player", "Date": "2018-09-26T15:38:24Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stmt) != null) stmt.output((dep + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2961/buggy-version/src.ast.stmt.ForStmt.java", "BodyUseAPI": [], "Fixed commit": "d9c6840fe044cdf8aa75e3e296a79c31a7b7ea0f", "Url": "https://api.github.com/repos/UsedToBe97/MxstarCompiler", "Date": "2018-05-08T03:27:38Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((enemyInfo.speed) != 0) enemyInfo.direction = unnamed.radar.GeometryUtils.sign(((enemyInfo.speed) * (unnamed.radar.FastTrig.sin(((enemyInfo.heading) - (enemyInfo.bearing))))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5242/buggy-version/radar.MeleeRadar.java", "BodyUseAPI": ["unnamed.radar.FastTrig.sin(((enemyInfo.heading) - (enemyInfo.bearing)))", "unnamed.radar.GeometryUtils.sign(((enemyInfo.speed) * (unnamed.radar.FastTrig.sin(((enemyInfo.heading) - (enemyInfo.bearing))))))"], "Fixed commit": "a7ddc28b52b8e9e70cad3c95d516329fa25fa5d8", "Url": "https://api.github.com/repos/nghiatt90/robocode", "Date": "2018-08-22T13:46:34Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (ontURL != null) { ontArrayList.add(ontURL.toURI().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4749/buggy-version/core.src.main.java.org.apache.sdap.mudrod.ontology.process.LocalOntology.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.net.URI.toString()", "java.net.URL.toURI()"], "Fixed commit": "72e76af905d999bd9b9c41c7e60404e745d5ae9c", "Url": "https://api.github.com/repos/quintinali/incubator-sdap-mudrod", "Date": "2018-05-21T17:30:32Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (logException) { com.weibo.api.motan.util.LoggerUtil.error((\"Exception caught when during method invocation. request:\" + (request.toString())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4960/buggy-version/motan-core.src.main.java.com.weibo.api.motan.rpc.DefaultProvider.java", "BodyUseAPI": [], "Fixed commit": "1e8fa92b921fc78374f863e08b16cdaf573748de", "Url": "https://api.github.com/repos/sunnights/motan", "Date": "2018-07-10T08:54:24Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["managers.EntityManager.getInstance().getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((this.xPos) + dx) == (plr.getXPos())) && (((this.yPos) + dy) == (plr.getYPos()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1067/buggy-version/src.characters.GCharacter.java", "BodyUseAPI": [], "Fixed commit": "149dce5d14b81ddb2b2c346e7fe1cf8da299f7bd", "Url": "https://api.github.com/repos/jeoliva222/DND-Game", "Date": "2018-08-15T18:34:14Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (callback != null) { callback.handleCallback(operation, olderThan); }else { callback(operation, olderThan); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9667/buggy-version/app.src.main.java.at.ac.tuwien.mpe.stablematch.Firebase.FireBaseHandler.java", "BodyUseAPI": ["at.ac.tuwien.mpe.stablematch.Firebase.FireBaseCallback.handleCallback(at.ac.tuwien.mpe.stablematch.Firebase.Operations,boolean)"], "Fixed commit": "9186a191e7ac65923737a4de42b5fcebaccb64ad", "Url": "https://api.github.com/repos/bottersb/mpe_s18_stablematch", "Date": "2018-06-12T19:30:17Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (callback != null) { callback.handleCallback(operation, exists); }else { callback(operation, exists); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9667/buggy-version/app.src.main.java.at.ac.tuwien.mpe.stablematch.Firebase.FireBaseHandler.java", "BodyUseAPI": ["at.ac.tuwien.mpe.stablematch.Firebase.FireBaseCallback.handleCallback(at.ac.tuwien.mpe.stablematch.Firebase.Operations,boolean)"], "Fixed commit": "9186a191e7ac65923737a4de42b5fcebaccb64ad", "Url": "https://api.github.com/repos/bottersb/mpe_s18_stablematch", "Date": "2018-06-12T19:30:17Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["questionTitleEt.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8648/buggy-version/app.src.main.java.com.yanxiu.gphone.faceshowadmin_android.createtasks.create_vote.EditVoteItemFragment.java", "BodyUseAPI": [], "Fixed commit": "41cabcb4f85806acacaef53f64e8ee6c5702c1aa", "Url": "https://api.github.com/repos/caileiYanxiu/FaceShowAdmin_Android", "Date": "2018-07-02T08:26:28Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((variable.startsWith(\"<\")) || (variable.startsWith(\">\"))) { return (variable.substring(0, 1)) + longLocalDate; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1537/buggy-version/src.main.java.com.bizlem.drools.service.impl.GenerateDRLContentImpl.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "78748ea46485cb7597bc6da9d5454a03cc091ee2", "Url": "https://api.github.com/repos/hungbang/drools", "Date": "2018-09-06T15:36:33Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang.StringUtils.chop(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((variable.startsWith(\"<\")) || (variable.startsWith(\">\"))) return (variable.substring(0, 1)) + result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1537/buggy-version/src.main.java.com.bizlem.drools.service.impl.GenerateDRLContentImpl.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "78748ea46485cb7597bc6da9d5454a03cc091ee2", "Url": "https://api.github.com/repos/hungbang/drools", "Date": "2018-09-06T15:36:33Z"},
{"Line": "=>767", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sorry.Board.getPathIndex(p.getLocation().get(0))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentIndex < 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6307/buggy-version/src.main.java.sorry.Main.java", "BodyUseAPI": [], "Fixed commit": "e9a4b88bbfa45c6c4eac0913363df13c7ce6f967", "Url": "https://api.github.com/repos/yuhang-lin/Sorry", "Date": "2018-05-01T04:08:31Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.getIsInPlay()) { if ((cardNum >= 6) && (canMoveToHome(p, cardNum))) { move = p.getColor().getHomeCoords().get(p.getHomeIndex()); }else { if (canMoveToSafe(p, cardNum)) { move = getSafeLocation(p, cardNum); }else { move = getMoveFromInt(board, p, cardNum); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6307/buggy-version/src.main.java.sorry.Main.java", "BodyUseAPI": ["p.getColor().getHomeCoords().get(p.getHomeIndex())", "sorry.Main.canMoveToHome(sorry.Piece,int)", "p.getColor().getHomeCoords()", "sorry.Main.getSafeLocation(sorry.Piece,int)", "sorry.Piece.getHomeIndex()", "sorry.Main.canMoveToSafe(sorry.Piece,int)", "sorry.Main.getMoveFromInt(sorry.Board,sorry.Piece,int)", "sorry.Piece.getColor()"], "Fixed commit": "e9a4b88bbfa45c6c4eac0913363df13c7ce6f967", "Url": "https://api.github.com/repos/yuhang-lin/Sorry", "Date": "2018-05-01T04:08:31Z"},
{"Line": "=>791", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sorry.Board.getPathIndex(p.getLocation().get(0))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentIndex < 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6307/buggy-version/src.main.java.sorry.Main.java", "BodyUseAPI": [], "Fixed commit": "e9a4b88bbfa45c6c4eac0913363df13c7ce6f967", "Url": "https://api.github.com/repos/yuhang-lin/Sorry", "Date": "2018-05-01T04:08:31Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (commandToReturn == null) { throw new seedu.address.logic.commands.exceptions.CommandException(MESSAGE_UNKNOWN_COMMAND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5773/buggy-version/src.main.java.seedu.address.logic.parser.TaskBookParser.java", "BodyUseAPI": [], "Fixed commit": "9a11cae49b308cf4ac405a66eda0cf253d8daf84", "Url": "https://api.github.com/repos/chelseyong/addressbook-level4", "Date": "2018-10-26T15:01:49Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.likya.myra.jef.jobs.ExecuteInShell.getAbstractJobType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((performLogAnalyze(abstractJobType)) != null) { noErrorInLog = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9422/buggy-version/Myra-0.0.1.src.com.likya.myra.jef.jobs.ExecuteInShell.java", "BodyUseAPI": [], "Fixed commit": "c4f2ce7aeb78f965fe95e812bf88e40f7174a39a", "Url": "https://api.github.com/repos/likyateknoloji/Myra", "Date": "2018-01-21T20:48:17Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.steffen.rememo.Logic.FirebaseLogic.EncodeString(user.getEmail().toLowerCase())", "com.example.steffen.rememo.Logic.FirebaseLogic.EncodeString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(selected.equals(current))) { list.add(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7826/buggy-version/app.src.main.java.com.example.steffen.rememo.Fragments.Fragment_Feed.java", "BodyUseAPI": [], "Fixed commit": "a56dceac76b5b071548a07727219296a2acc0ac1", "Url": "https://api.github.com/repos/steffenbirkis/ReMemo", "Date": "2018-04-25T10:44:10Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { mPhotoView.setTransitionName(getIntent().getStringExtra(\"image-transition\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5941/buggy-version/XYZReader.src.main.java.com.example.xyzreader.ui.ArticleDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "c151409d5734c0a71f156749d7502555d4f613a9", "Url": "https://api.github.com/repos/nuhkoca/udacity-xyz-reader-app", "Date": "2018-04-18T22:08:20Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pc == null) { throw new javax.jdo.JDOUserException(\"'null' is not persistence capable.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1912/buggy-version/src.org.zoodb.jdo.impl.PersistenceManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "7bf42bc955d04ec6f7c39315280bd4f2b6e0323c", "Url": "https://api.github.com/repos/tzaeschke/zoodb", "Date": "2018-02-05T15:55:23Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.mmtk.vm.VM.VERIFY_ASSERTIONS) org.mmtk.utility.Log.writeln((\"Remove Region \" + region));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3937/buggy-version/MMTk.src.org.mmtk.policy.MarkBlock.java", "BodyUseAPI": [], "Fixed commit": "e23c843e37664d0fb6474e14211aca5337f3d09f", "Url": "https://api.github.com/repos/wenyuzhao/JikesRVM", "Date": "2018-03-16T05:20:44Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.evensgn.emcompiler.backend.BasicBlock.getLastInst()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((inst.getNextInst()) != null) liveOut.addAll(inst.getNextInst().liveIn);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5286/buggy-version/src.com.evensgn.emcompiler.backend.RegLivelinessAnalysis.java", "BodyUseAPI": ["java.util.Set<com.evensgn.emcompiler.backend.VirtualRegister>.addAll(inst.getNextInst().liveIn)", "com.evensgn.emcompiler.backend.IRInstruction.getNextInst()"], "Fixed commit": "2d3b8753120cf06b80839cf44289ffcdf33c4037", "Url": "https://api.github.com/repos/Evensgn/EM-Compiler", "Date": "2018-06-05T16:04:21Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rhs.getFalseBB().isHasJumpInst())) rhs.getFalseBB().setJumpInst(new com.evensgn.emcompiler.frontend.IRJump(rhs.getFalseBB(), mergeBB));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5286/buggy-version/src.com.evensgn.emcompiler.frontend.IRBuilder.java", "BodyUseAPI": ["com.evensgn.emcompiler.frontend.ExprNode.getFalseBB()", "rhs.getFalseBB().setJumpInst(com.evensgn.emcompiler.frontend.IRJump)", "com.evensgn.emcompiler.frontend.ExprNode.getFalseBB()"], "Fixed commit": "2d3b8753120cf06b80839cf44289ffcdf33c4037", "Url": "https://api.github.com/repos/Evensgn/EM-Compiler", "Date": "2018-06-05T16:04:21Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rhs.getTrueBB().isHasJumpInst())) rhs.getTrueBB().setJumpInst(new com.evensgn.emcompiler.frontend.IRJump(rhs.getTrueBB(), mergeBB));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5286/buggy-version/src.com.evensgn.emcompiler.frontend.IRBuilder.java", "BodyUseAPI": ["rhs.getTrueBB().setJumpInst(com.evensgn.emcompiler.frontend.IRJump)", "com.evensgn.emcompiler.frontend.ExprNode.getTrueBB()", "com.evensgn.emcompiler.frontend.ExprNode.getTrueBB()"], "Fixed commit": "2d3b8753120cf06b80839cf44289ffcdf33c4037", "Url": "https://api.github.com/repos/Evensgn/EM-Compiler", "Date": "2018-06-05T16:04:21Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ItemData.data.itemnumshowninlistCollection.indexOf(((java.lang.Object) (num)))) != (-1)) { ItemData.data.itemnumshowninlistCollection.remove(((java.lang.Object) (num))); (ItemData.data.listnum)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9369/buggy-version/app.src.main.java.com.semibasement.jaquanpaik.joongrous_peaceland.Item_Dialogue.java", "BodyUseAPI": ["ItemData.data.itemnumshowninlistCollection.remove(int)"], "Fixed commit": "9ed638f592f388be8c852cdf3e94ffee73f0baeb", "Url": "https://api.github.com/repos/jaquan1227/Joongrous_peaceland", "Date": "2018-01-27T07:43:59Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.spoofax.interpreter.terms.IStrategoTerm.getAttachment(ImploderAttachment.TYPE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (it == null) { return createStringTerminal(org.spoofax.jsglr.client.imploder.ImploderAttachment.getSort(oldNode), leftToken, rightToken, ((org.spoofax.interpreter.terms.IStrategoString) (oldNode)).stringValue(), false); }else { return createStringTerminal(org.spoofax.jsglr.client.imploder.ImploderAttachment.getSort(oldNode), leftToken, rightToken, ((org.spoofax.interpreter.terms.IStrategoString) (oldNode)).stringValue(), (!(((org.spoofax.interpreter.terms.IStrategoString) (oldNode)).stringValue().equals(it.toString())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9135/buggy-version/org.spoofax.jsglr.src.org.spoofax.jsglr.client.imploder.TermTreeFactory.java", "BodyUseAPI": ["org.spoofax.jsglr.client.imploder.TermTreeFactory.createStringTerminal(org.spoofax.jsglr.client.imploder.ImploderAttachment.getSort(oldNode),org.spoofax.jsglr.client.imploder.IToken,org.spoofax.jsglr.client.imploder.IToken,((org.spoofax.interpreter.terms.IStrategoString) (oldNode)).stringValue(),(!(((org.spoofax.interpreter.terms.IStrategoString) (oldNode)).stringValue().equals(it.toString()))))", "((org.spoofax.interpreter.terms.IStrategoString) (oldNode)).stringValue().equals(it.toString())", "org.spoofax.jsglr.client.imploder.ImploderAttachment.toString()"], "Fixed commit": "f026470b5556030d9e4dcfabb8a0c61a71b806da", "Url": "https://api.github.com/repos/metaborg/jsglr", "Date": "2018-06-02T15:47:19Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.spoofax.interpreter.terms.IStrategoTerm.getAttachment(ImploderAttachment.TYPE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (it == null) { return createNonTerminal(org.spoofax.jsglr.client.imploder.ImploderAttachment.getSort(oldNode), ((org.spoofax.interpreter.terms.IStrategoAppl) (oldNode)).getName(), leftToken, rightToken, children, false, false, false); }else { return createNonTerminal(org.spoofax.jsglr.client.imploder.ImploderAttachment.getSort(oldNode), ((org.spoofax.interpreter.terms.IStrategoAppl) (oldNode)).getName(), leftToken, rightToken, children, it.isCompletion(), it.isNestedCompletion(), it.isSinglePlaceholderCompletion()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9135/buggy-version/org.spoofax.jsglr.src.org.spoofax.jsglr.client.imploder.TermTreeFactory.java", "BodyUseAPI": ["org.spoofax.jsglr.client.imploder.ImploderAttachment.isNestedCompletion()", "org.spoofax.jsglr.client.imploder.ImploderAttachment.isSinglePlaceholderCompletion()", "org.spoofax.jsglr.client.imploder.ImploderAttachment.isCompletion()", "org.spoofax.jsglr.client.imploder.TermTreeFactory.createNonTerminal(org.spoofax.jsglr.client.imploder.ImploderAttachment.getSort(oldNode),((org.spoofax.interpreter.terms.IStrategoAppl) (oldNode)).getName(),org.spoofax.jsglr.client.imploder.IToken,org.spoofax.jsglr.client.imploder.IToken,java.util.List<org.spoofax.interpreter.terms.IStrategoTerm>,it.isCompletion(),it.isNestedCompletion(),it.isSinglePlaceholderCompletion())"], "Fixed commit": "f026470b5556030d9e4dcfabb8a0c61a71b806da", "Url": "https://api.github.com/repos/metaborg/jsglr", "Date": "2018-06-02T15:47:19Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.endeavourhealth.enterprise.core.json.JsonCohortRun.getOrganisation()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (organisations.isEmpty()) { org.endeavourhealth.enterprise.core.json.JsonOrganisation org = new org.endeavourhealth.enterprise.core.json.JsonOrganisation(); org.setId(\"0\"); org.setName(\"All\"); org.setOdsCode(\"All\"); organisations.add(org); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8961/buggy-version/src.enterprise-core.src.main.java.org.endeavourhealth.enterprise.core.database.CohortManager.java", "BodyUseAPI": ["java.util.List<org.endeavourhealth.enterprise.core.json.JsonOrganisation>.add(org.endeavourhealth.enterprise.core.json.JsonOrganisation)"], "Fixed commit": "c5773288a245faacf8536ba27ad79d15dd388c73", "Url": "https://api.github.com/repos/endeavourhealth/Enterprise", "Date": "2018-05-03T13:26:09Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["codeu.model.store.basic.ConversationStore.getConversationWithTitle(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((conversation.isPrivate()) && ((request.getSession().getAttribute(\"user\")) == null)) { response.sendRedirect(\"/conversations\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6664/buggy-version/src.main.java.codeu.controller.ChatServlet.java", "BodyUseAPI": [], "Fixed commit": "bb167684cd54f3a0e4f7976d954860a24315015a", "Url": "https://api.github.com/repos/donnelldebnam/CodeU-Spring-2018-29", "Date": "2018-07-14T21:35:06Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (securityProps != null) { value = securityProps.get(key); if (value != null) return value.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4109/buggy-version/nyla.solutions.core.src.main.java.nyla.solutions.core.util.Config.java", "BodyUseAPI": ["java.util.Map<?, ?>.get(java.lang.String)"], "Fixed commit": "326083a5ad97faeb20d80174e030247cc34463d3", "Url": "https://api.github.com/repos/nyla-solutions/nyla", "Date": "2018-07-27T12:38:24Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oops.getMessage()) == \"CreditCard expiration Date error\") result = this.createEditModelAndView(advertisement, \"advertisement.creditcard.expiration.error\"); else result = this.createEditModelAndView(advertisement, \"advertisement.commit.error\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3458/buggy-version/Acme-Newspaper.src.main.java.controllers.agent.AdvertisementAgentController.java", "BodyUseAPI": [], "Fixed commit": "a7a5e970dcecb4a2968147a5f7850f0fb778fc45", "Url": "https://api.github.com/repos/judamalua/D11-AcceptanceTesting", "Date": "2018-05-01T16:37:14Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(java.nio.file.Files.exists(path))) { java.nio.file.Files.createDirectories(path); logger.info(\"Log folder has been successfully created\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2561/buggy-version/src.main.java.reposense.system.LogsManager.java", "BodyUseAPI": ["java.nio.file.Files.createDirectories(java.nio.file.Path)"], "Fixed commit": "690cfa5d2dc2ec9d056504eb82e3ea961998f0ec", "Url": "https://api.github.com/repos/AdityaA1998/RepoSense", "Date": "2018-06-07T03:56:58Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((player != null) && (me.RockinChaos.itemjoin.utils.Hooks.hasBetterNick())) { de.domedd.betternick.api.nickedplayer.NickedPlayer np = new de.domedd.betternick.api.nickedplayer.NickedPlayer(org.bukkit.Bukkit.getPlayer(player)); if (np.isNicked()) { return org.bukkit.Bukkit.getPlayer(np.getRealName()); }else { return org.bukkit.Bukkit.getPlayer(player); } }else if (args == null) { return org.bukkit.Bukkit.getPlayer(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1700/buggy-version/src.me.RockinChaos.itemjoin.handlers.PlayerHandler.java", "BodyUseAPI": ["org.bukkit.Bukkit.getPlayer(java.lang.String)", "org.bukkit.Bukkit.getPlayer(java.lang.String)", "org.bukkit.Bukkit.getPlayer(java.lang.String)"], "Fixed commit": "e9e2de2707d622c8d20a4645b75b274bdea3168a", "Url": "https://api.github.com/repos/RockinChaos/ItemJoin", "Date": "2018-02-15T05:06:22Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((electron.getClusters().isEmpty()) || (positron.getClusters().isEmpty())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5863/buggy-version/recon.src.main.java.org.hps.recon.particle.HpsReconParticleDriver.java", "BodyUseAPI": [], "Fixed commit": "2fce9629879bd041d9089215c744358ef1d6cc1a", "Url": "https://api.github.com/repos/JeffersonLab/hps-java", "Date": "2018-09-17T20:29:32Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((electron.getClusters()) == null) || ((positron.getClusters()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5863/buggy-version/recon.src.main.java.org.hps.recon.particle.HpsReconParticleDriver.java", "BodyUseAPI": [], "Fixed commit": "2fce9629879bd041d9089215c744358ef1d6cc1a", "Url": "https://api.github.com/repos/JeffersonLab/hps-java", "Date": "2018-09-17T20:29:32Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.getElementsByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((imgs.size()) > 0) { se.setImageURL(imgs.get(0).attr(\"src\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5194/buggy-version/FantasyRadio.src.main.java.ru.sigil.fantasyradio.schedule.ScheduleParser.java", "BodyUseAPI": ["org.jsoup.select.Elements.get(int)", "imgs.get(0).attr(java.lang.String)", "ru.sigil.fantasyradio.schedule.ScheduleEntity.setImageURL(imgs.get(0).attr(\"src\"))"], "Fixed commit": "e37f821ca53c6c613e82bbc75d5bc459d46a76dc", "Url": "https://api.github.com/repos/NamelessOne/FantasyRadio", "Date": "2018-03-08T13:49:03Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((otherPlayersIds.length()) > 0) otherPlayersIds = otherPlayersIds.substring(0, ((otherPlayersIds.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4696/buggy-version/src.main.java.app.commands.Stats.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "a6d03f4b832900a3e49588d6c719c2c86a54c134", "Url": "https://api.github.com/repos/curliq/bot-varush", "Date": "2018-02-25T23:31:49Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFail.get())) { dogCommandCompletionStream.write(com.zuo.dog.proxy.DogEventCompletion.from(dogsNode.getId(), com.zuo.dog.proxy.ExecutionResult.success((start - end)), DogEventType.SUCCESS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2897/buggy-version/sdk.src.main.java.com.zuo.dog.proxy.DogsProxy.java", "BodyUseAPI": [], "Fixed commit": "69b3f300d5815da65eb4107a8e300f96188620dd", "Url": "https://api.github.com/repos/zuoshaoyi/zuo-rate-limiter", "Date": "2018-09-21T14:45:39Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.contains(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (contains) { return \"/sitemap-\" + tag; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8212/buggy-version/src.main.java.cn.northpark.action.DashAction.java", "BodyUseAPI": [], "Fixed commit": "20950ac22abda689bc8ab57ec06e6646da8397da", "Url": "https://api.github.com/repos/liuhouer/np", "Date": "2018-03-13T06:00:03Z"},
{"Line": "=>842", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showFooter) { webViewLayoutParams.setMargins(0, 0, 0, footerSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2189/buggy-version/src.android.InAppBrowser.java", "BodyUseAPI": [], "Fixed commit": "800ba9ff0850838eceb08a1e559de27e0a9c77c5", "Url": "https://api.github.com/repos/hvaughan3/cordova-plugin-inappbrowser", "Date": "2018-09-05T19:17:09Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastTimeMs) == 0) { lastTimeMs = timeMs; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8616/buggy-version/src.main.java.org.usfirst.frc.team4541.superProfiling.SuperHeadingAdjuster.java", "BodyUseAPI": [], "Fixed commit": "f34746c819c6605a714fe24d729c2bf3cf0d164e", "Url": "https://api.github.com/repos/nathan5462/RobotCode2018", "Date": "2018-04-18T03:26:44Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((strNum.length()) == 1) return \"Minus \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/629/buggy-version/app.src.main.java.com.blacktail.numbertowordconverter.Simulation.java", "BodyUseAPI": [], "Fixed commit": "0e82462fcedc01168bc294cca16007c7078c648c", "Url": "https://api.github.com/repos/azraftaohid/Number-to-Word-Converter", "Date": "2018-09-24T15:41:39Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inWord.length()) != 0) { inWord = new java.lang.StringBuilder(inWord.toString().toLowerCase()); inWord.setCharAt(0, java.lang.Character.toUpperCase(inWord.charAt(0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/629/buggy-version/app.src.main.java.com.blacktail.numbertowordconverter.MainActivity.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.StringBuilder.toString()"], "Fixed commit": "0e82462fcedc01168bc294cca16007c7078c648c", "Url": "https://api.github.com/repos/azraftaohid/Number-to-Word-Converter", "Date": "2018-09-24T15:41:39Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jmri.jmrit.consisttool.ConsistFile.fileLocation) == null) { jmri.jmrit.consisttool.ConsistFile.fileLocation = ((((jmri.jmrit.roster.Roster.getDefault().getRosterLocation()) + \"roster\") + (java.io.File.separator)) + \"consist\") + (java.io.File.separator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1259/buggy-version/java.src.jmri.jmrit.consisttool.ConsistFile.java", "BodyUseAPI": [], "Fixed commit": "cab73788f10ce1e78a976a63f34fa47490696f85", "Url": "https://api.github.com/repos/AlanUS/ALM_JMRI", "Date": "2018-01-05T18:35:29Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (credential instanceof nl.esciencecenter.xenon.credentials.PasswordCredential) { nl.esciencecenter.xenon.credentials.PasswordCredential pwUser = ((nl.esciencecenter.xenon.credentials.PasswordCredential) (credential)); context = org.jclouds.ContextBuilder.newBuilder(\"s3\").endpoint(server).credentials(pwUser.getUsername(), new java.lang.String(pwUser.getPassword())).buildView(org.jclouds.blobstore.BlobStoreContext.class); }else { context = org.jclouds.ContextBuilder.newBuilder(\"s3\").endpoint(server).buildView(org.jclouds.blobstore.BlobStoreContext.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1628/buggy-version/src.main.java.nl.esciencecenter.xenon.adaptors.filesystems.s3.S3FileAdaptor.java", "BodyUseAPI": [], "Fixed commit": "8b8cc3718c4310f25dc49692705382e403671978", "Url": "https://api.github.com/repos/NLeSC/Xenon", "Date": "2018-02-28T14:30:02Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((configuration.isDisableSubtitles()) || ((params.sid) == null)) { transcodeOptions.add(\"-sn\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5910/buggy-version/src.main.java.net.pms.encoders.FFMpegVideo.java", "BodyUseAPI": [], "Fixed commit": "8a368b7b48d3d3407fdaf69b1d6976e9bf3a5bf9", "Url": "https://api.github.com/repos/DigitalMediaServer/DigitalMediaServer", "Date": "2018-05-16T18:04:18Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.inl.blacklab.server.util.JsonUtil.getFileProp(com.fasterxml.jackson.databind.JsonNode,java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (dir != null) config.add(dir.getCanonicalPath());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8086/buggy-version/server.src.main.java.nl.inl.blacklab.server.config.OldBlsConfig.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.io.File.getCanonicalPath()"], "Fixed commit": "3367cd738841d74264c09a1c5a7ab14d6e8d10e6", "Url": "https://api.github.com/repos/INL/BlackLab", "Date": "2018-09-04T13:08:21Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((logDatabase) != null) config.setSqliteDatabase(logDatabase.getCanonicalPath());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8086/buggy-version/server.src.main.java.nl.inl.blacklab.server.config.OldBlsConfig.java", "BodyUseAPI": [], "Fixed commit": "3367cd738841d74264c09a1c5a7ab14d6e8d10e6", "Url": "https://api.github.com/repos/INL/BlackLab", "Date": "2018-09-04T13:08:21Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!iffound) cart.AddItems(item);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9476/buggy-version/src.servlet.AddBook.java", "BodyUseAPI": [], "Fixed commit": "a5a768bf8893c14e88ac62ba0409d2904cb82597", "Url": "https://api.github.com/repos/LLipter/starbooks", "Date": "2018-05-30T04:19:43Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCircleCount) <= 0) { result = (getPaddingLeft()) + (getPaddingRight()); }else { result = (((((((mCircleCount) - 1) * (mMinRadius)) * 2) + ((mMaxRadius) * 2)) + (((mCircleCount) - 1) * (mCircleSpacing))) + (getPaddingLeft())) + (getPaddingRight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/193/buggy-version/app.src.main.java.net.lucode.hackware.magicindicatordemo.ext.navigator.ScaleCircleNavigator.java", "BodyUseAPI": [], "Fixed commit": "a31b0f36747d6e6481efdff2b218c21bb01550dd", "Url": "https://api.github.com/repos/hackware1993/MagicIndicator", "Date": "2018-09-29T07:02:44Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["simpledb.BufferPool.LRUCache.get(simpledb.PageId)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (page != null) { page.setBeforeImage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7902/buggy-version/src.java.simpledb.BufferPool.java", "BodyUseAPI": ["simpledb.Page.setBeforeImage()"], "Fixed commit": "0581d9c8f3a5101b342e5d6375b3af11b7215732", "Url": "https://api.github.com/repos/springfieldking/mit-6.830-simpledb-2017", "Date": "2018-02-11T11:07:24Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["site.binghai.lib.service.UnifiedOrderService.findByOrderId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (site.binghai.lib.utils.CompareUtils.inAny(site.binghai.lib.enums.PayBizEnum.valueOf(unifiedOrder.getAppCode()), PayBizEnum.COMMON_PAY, PayBizEnum.VIP_CHARGE)) { unifiedOrder.setStatus(OrderStatusEnum.COMPLETE.getCode()); }else { unifiedOrder.setStatus(OrderStatusEnum.PAIED.getCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3776/buggy-version/biz.src.main.java.site.binghai.biz.service.PayBizServiceFactory.java", "BodyUseAPI": ["site.binghai.lib.entity.UnifiedOrder.setStatus(OrderStatusEnum.COMPLETE.getCode())", "site.binghai.lib.entity.UnifiedOrder.setStatus(OrderStatusEnum.PAIED.getCode())"], "Fixed commit": "13c58ebe7013b82cbb0398ca5e2dbbab1da1b301", "Url": "https://api.github.com/repos/IceSeaHome/qdBanana", "Date": "2018-09-15T18:00:23Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.collections4.CollectionUtils.isEmpty(itemFieldConfigs)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8964/buggy-version/src.main.java.com.itemconfiguration.service.ItemFieldConfigService.java", "BodyUseAPI": [], "Fixed commit": "ff65027cefa6ae02204909a77082291b9a8dc515", "Url": "https://api.github.com/repos/kordunyan/care_label_item_config", "Date": "2018-08-31T09:30:46Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isValid((row + (x[i])), (col + (y[i])))) { if ((KnightBoard.fast[(row + (x[i]))][(col + (y[i]))]) == s) { board[row][col] = level; if (solveFH((row + (x[i])), (col + (y[i])), (level + 1))) { return true; } board[row][col] = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3421/buggy-version/EC01Knights.KnightBoard.java", "BodyUseAPI": ["KnightBoard.solveFH(int,int,int)"], "Fixed commit": "96cb4f750c7d8465d0058d31ade177d49471ee39", "Url": "https://api.github.com/repos/aimran1/MKS22X", "Date": "2018-02-28T05:10:32Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Build.MODEL.equalsIgnoreCase(\"Nexus 5x\")) { camera.setDisplayOrientation(270); }else { camera.setDisplayOrientation(90); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6367/buggy-version/app.src.main.java.com.lotview.app.qrcodescanner.camera.CameraConfigurationManager.java", "BodyUseAPI": [], "Fixed commit": "4db22b55275a46fdfca5cae0dd321cd35ef45b69", "Url": "https://api.github.com/repos/amanbajpai/testset", "Date": "2018-09-21T09:16:34Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.common.io.Files.getFileExtension(newfilename).equals(\"\")) newfilename = (newfilename + \".\") + (com.google.common.io.Files.getFileExtension(inputFile.getName()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8654/buggy-version/src.com.unical.digitalsignature.CAdESSignFactory.java", "BodyUseAPI": [], "Fixed commit": "7323cff2c3184e553feec65f91d9b3e8dce887be", "Url": "https://api.github.com/repos/AlessioScarfone/Java-Digital-Signature", "Date": "2018-10-03T13:54:03Z"},
{"Line": "=>816", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newColumn < 0) || (newColumn > ((mColumnLayout.getChildCount()) - 1))) { newColumn = (newColumn < 0) ? 0 : (mColumnLayout.getChildCount()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5768/buggy-version/library.src.main.java.com.woxthebox.draglistview.BoardView.java", "BodyUseAPI": ["android.widget.LinearLayout.getChildCount()"], "Fixed commit": "ecc509b4fb121fa5bf59f5708ae9c96c1fbfadc5", "Url": "https://api.github.com/repos/sedler/DragListView", "Date": "2018-03-29T13:08:31Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.util.StringUtils.isEmpty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isConfirmEmpty) { model.addAttribute(\"password2Error\", \"Password confirmation cannot be empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9393/buggy-version/src.main.java.com.mvictorl.sweater.controllers.RegistrationController.java", "BodyUseAPI": [], "Fixed commit": "665f216b3e29defb52377c43fef248af3fa8c105", "Url": "https://api.github.com/repos/mvictorl/sweater", "Date": "2018-07-22T17:47:04Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkWin())) { btn[x][y].setEnabled(false); if (turn) { btn[x][y].setText(\"O\"); btnInt[x][y] = 1; }else { btn[x][y].setText(\"X\"); btnInt[x][y] = 2; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6492/buggy-version/app.src.main.java.com.example.lucas.gatouch.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "799efd656f73811a18ac3a29582bdf748ba46bf5", "Url": "https://api.github.com/repos/GoreMazter/Gatouch", "Date": "2018-05-11T01:08:58Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(edtComment.getText())) { edtComment.setError(getResources().getString(R.string.please_comment)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3113/buggy-version/app.src.main.java.com.app.arnontproject.kkminibus.activity.CommentActivity.java", "BodyUseAPI": ["android.widget.EditText.setError(getResources().getString(R.string.please_comment))"], "Fixed commit": "5e81c0260021fb13106d6eff3df74dbe0b8701e5", "Url": "https://api.github.com/repos/arnon010/KKMiniBus", "Date": "2018-04-24T10:04:44Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(edtNameComment.getText())) { edtNameComment.setError(getResources().getString(R.string.please_comment)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3113/buggy-version/app.src.main.java.com.app.arnontproject.kkminibus.activity.CommentActivity.java", "BodyUseAPI": ["android.widget.EditText.setError(getResources().getString(R.string.please_comment))"], "Fixed commit": "5e81c0260021fb13106d6eff3df74dbe0b8701e5", "Url": "https://api.github.com/repos/arnon010/KKMiniBus", "Date": "2018-04-24T10:04:44Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(edtEmailComment.getText())) { edtEmailComment.setError(getResources().getString(R.string.please_comment)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3113/buggy-version/app.src.main.java.com.app.arnontproject.kkminibus.activity.CommentActivity.java", "BodyUseAPI": ["android.widget.EditText.setError(getResources().getString(R.string.please_comment))"], "Fixed commit": "5e81c0260021fb13106d6eff3df74dbe0b8701e5", "Url": "https://api.github.com/repos/arnon010/KKMiniBus", "Date": "2018-04-24T10:04:44Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStepIndex) > 0) { (mStepIndex)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5713/buggy-version/app.src.main.java.io.monteirodev.baking.ui.StepDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "512fcf959e7e45ad75fff7a85cb0b8e9df277f05", "Url": "https://api.github.com/repos/unomonteiro/baking", "Date": "2018-06-02T15:47:46Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStepIndex) < maxIndex) { (mStepIndex)++; timber.log.Timber.d((\"step index \" + (mStepIndex))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5713/buggy-version/app.src.main.java.io.monteirodev.baking.ui.StepDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "512fcf959e7e45ad75fff7a85cb0b8e9df277f05", "Url": "https://api.github.com/repos/unomonteiro/baking", "Date": "2018-06-02T15:47:46Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isInCreativeTab(tab))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/840/buggy-version/src.main.java.net.silentchaos512.sgextraparts.item.ItemGeneric.java", "BodyUseAPI": [], "Fixed commit": "535b61099742ec2f3f7e225bc3f527fc2a6bafe0", "Url": "https://api.github.com/repos/SilentChaos512/SGExtraParts", "Date": "2018-08-31T18:49:22Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<com.fasterxml.jackson.databind.JsonNode>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((txNode.get(\"hash\")) == null) && ((txNode.get(\"content\")) == null)) { txToAdd.setHash(txNode.asText()); }else { txToAdd.setHash(txNode.get(\"hash\").asText()); txToAdd.setContent(txNode.get(\"content\").asText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3544/buggy-version/core.src.main.java.org.nervos.appchain.protocol.core.methods.response.AppBlock.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "txNode.get(\"content\").asText()", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "com.fasterxml.jackson.databind.JsonNode.asText()", "org.nervos.appchain.protocol.core.methods.response.AppBlock.TransactionObject.setHash(txNode.asText())", "org.nervos.appchain.protocol.core.methods.response.AppBlock.TransactionObject.setHash(txNode.get(\"hash\").asText())", "txNode.get(\"hash\").asText()", "org.nervos.appchain.protocol.core.methods.response.AppBlock.TransactionObject.setContent(txNode.get(\"content\").asText())"], "Fixed commit": "d237c5055daea6b9a8338c5b5a78e584091be7dd", "Url": "https://api.github.com/repos/cryptape/appchainj", "Date": "2018-10-11T13:24:38Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.atu.dao.ChnCharsNormal7000Dao.queryByCondition(com.atu.dao.model.ChnCharQueryDO.builder().chnChar(c).build())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.collections4.CollectionUtils.isNotEmpty(chineseCharDOS)) { pinyinStringBuilder.append(chineseCharDOS.get(0).getPinyin()); }else { pinyinStringBuilder.append(\"?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9564/buggy-version/src.main.java.com.atu.repo.ResgainRepo.java", "BodyUseAPI": ["java.lang.StringBuilder.append(chineseCharDOS.get(0).getPinyin())", "java.util.List<com.atu.model.ChineseCharDO>.get(int)", "chineseCharDOS.get(0).getPinyin()"], "Fixed commit": "271d43c1a0ad57af3b2b138df80258dbc07733b8", "Url": "https://api.github.com/repos/atu8292991/namebook", "Date": "2018-05-19T16:27:35Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["app.stundenplan.ms.rats.ratsapp.VertretungsPlanMethoden.kursInfo(android.content.SharedPreferences,java.lang.String,java.lang.String)", "MemoryStundenListe.get(i).getRaum()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(Raum.equals(s.raum))) Raum = s.raum;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9151/buggy-version/app.src.main.java.app.stundenplan.ms.rats.ratsapp.fragment_stundenplan.java", "BodyUseAPI": [], "Fixed commit": "8e28f4e1a37c7837d6af9ac4e7140c7bebf8f57e", "Url": "https://api.github.com/repos/nebur115/RatsApp", "Date": "2018-06-15T12:32:11Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (validateSeminar(groupDTO, validatedGroupDTO)) { com.higgsup.kpi.entity.KpiGroup kpiGroup = kpiGroupOptional.get(); groupDTO.setId(kpiGroup.getId()); com.fasterxml.jackson.databind.ObjectMapper mapper = new com.fasterxml.jackson.databind.ObjectMapper(); org.springframework.beans.BeanUtils.copyProperties(groupDTO, kpiGroup, \"id\"); java.lang.String seminarJson = mapper.writeValueAsString(groupDTO.getAdditionalConfig()); kpiGroup.setAdditionalConfig(seminarJson); kpiGroup.setCreatedDate(new java.sql.Timestamp(java.lang.System.currentTimeMillis())); java.util.Optional<com.higgsup.kpi.entity.KpiGroupType> kpiGroupType = kpiGroupTypeRepo.findById(groupDTO.getGroupType().getId()); if (kpiGroupType.isPresent()) { kpiGroup.setGroupType(kpiGroupType.get()); kpiGroup = kpiGroupRepo.save(kpiGroup); org.springframework.beans.BeanUtils.copyProperties(kpiGroup, validatedGroupDTO); validatedGroupDTO.setGroupType(groupDTO.getGroupType()); validatedGroupDTO.setAdditionalConfig(groupDTO.getAdditionalConfig()); }else { validatedGroupDTO.setMessage(ErrorMessage.NOT_FIND_GROUP_TYPE); validatedGroupDTO.setErrorCode(ErrorCode.NOT_FIND.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9064/buggy-version/src.main.java.com.higgsup.kpi.service.impl.GroupServiceImpl.java", "BodyUseAPI": ["com.higgsup.kpi.service.impl.GroupDTO<com.higgsup.kpi.service.impl.GroupSeminarDetail>.setId(kpiGroup.getId())", "com.higgsup.kpi.service.impl.GroupDTO<com.higgsup.kpi.service.impl.GroupSeminarDetail>.setGroupType(groupDTO.getGroupType())", "com.higgsup.kpi.service.impl.GroupDTO<com.higgsup.kpi.service.impl.GroupSeminarDetail>.getAdditionalConfig()", "com.higgsup.kpi.service.impl.GroupDTO<com.higgsup.kpi.service.impl.GroupSeminarDetail>.getGroupType()", "org.springframework.beans.BeanUtils.copyProperties(com.higgsup.kpi.entity.KpiGroup,com.higgsup.kpi.service.impl.GroupDTO<com.higgsup.kpi.service.impl.GroupSeminarDetail>)", "com.higgsup.kpi.service.impl.GroupDTO<com.higgsup.kpi.service.impl.GroupSeminarDetail>.setMessage(ErrorMessage.NOT_FIND_GROUP_TYPE)", "com.higgsup.kpi.service.impl.GroupDTO<com.higgsup.kpi.service.impl.GroupSeminarDetail>.setErrorCode(ErrorCode.NOT_FIND.getValue())", "com.higgsup.kpi.service.impl.GroupDTO<com.higgsup.kpi.service.impl.GroupSeminarDetail>.getAdditionalConfig()", "com.higgsup.kpi.service.impl.GroupDTO<com.higgsup.kpi.service.impl.GroupSeminarDetail>.getGroupType()", "com.higgsup.kpi.service.impl.GroupDTO<com.higgsup.kpi.service.impl.GroupSeminarDetail>.setAdditionalConfig(groupDTO.getAdditionalConfig())", "groupDTO.getGroupType().getId()", "com.higgsup.kpi.repository.KpiGroupTypeRepo.findById(groupDTO.getGroupType().getId())", "org.springframework.beans.BeanUtils.copyProperties(com.higgsup.kpi.service.impl.GroupDTO<com.higgsup.kpi.service.impl.GroupSeminarDetail>,com.higgsup.kpi.entity.KpiGroup,java.lang.String)", "com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(groupDTO.getAdditionalConfig())"], "Fixed commit": "30de936a83aa798b0f6cae2161b9745219842666", "Url": "https://api.github.com/repos/atulaa1/kpi-be-higgsup", "Date": "2018-09-07T10:03:42Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((resultMap != null) && ((resultMap.get(\"user_id\")) != null)) { resultMap.put(com.yy.online.service.RESULT, com.yy.online.service.SUCCESS); }else { resultMap = new java.util.HashMap<>(); resultMap.put(com.yy.online.service.RESULT, com.yy.online.service.FAIL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4925/buggy-version/youyou_service.src.com.yy.online.service.OnlineServiceImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(com.yy.online.service.RESULT,com.yy.online.service.SUCCESS)"], "Fixed commit": "5a5091ffd754d237608c80a5c0212ed006e486d4", "Url": "https://api.github.com/repos/FishRepository/Seework", "Date": "2018-06-18T09:05:27Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(modelName)) { modelName = queryId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2463/buggy-version/AdminEAP-framework.src.main.java.com.cnpc.framework.base.pojo.EntityInfo.java", "BodyUseAPI": [], "Fixed commit": "ff2ae1e1642b468ca238f1d844c025d8afed7bf0", "Url": "https://api.github.com/repos/vnool/AdminEAP", "Date": "2018-06-03T03:22:55Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(queryId)) { queryId = clazz.getSimpleName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2463/buggy-version/AdminEAP-framework.src.main.java.com.cnpc.framework.base.pojo.EntityInfo.java", "BodyUseAPI": [], "Fixed commit": "ff2ae1e1642b468ca238f1d844c025d8afed7bf0", "Url": "https://api.github.com/repos/vnool/AdminEAP", "Date": "2018-06-03T03:22:55Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (aDate != null) { aCalendar.setTime(aDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9833/buggy-version/TrackIt.src.trackit.Utilities.java", "BodyUseAPI": ["java.util.Calendar.setTime(java.util.Date)"], "Fixed commit": "1bd0498f2d0896976198c32ea098d492ede4eb7c", "Url": "https://api.github.com/repos/ttam007/TrackIt", "Date": "2018-04-21T01:53:25Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (actionState == (android.support.v7.widget.helper.ItemTouchHelper.ACTION_STATE_DRAG)) { isDraging = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5033/buggy-version/app.src.main.java.com.obito.wechatpublishfeed.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a7196ecba4200d75709b2de9e8269284bc6a1ddd", "Url": "https://api.github.com/repos/lazyzwei/WeChatPublishFeed", "Date": "2018-04-16T02:56:56Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["table_dialog.TableDialog.createNewRow(xlsx_reader.TableSchema,xml_catalog_reader.Selection)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (row == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1123/buggy-version/src.table_dialog.TableDialog.java", "BodyUseAPI": [], "Fixed commit": "5806a3fae25415a47ba735c69fde3562b9fa8bbd", "Url": "https://api.github.com/repos/openefsa/EFSA-RCL", "Date": "2018-02-13T14:13:17Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(chat.isEmpty())) { firebaseCallbackGetMessage.onCallbackGetMessages(chat); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7737/buggy-version/app.src.main.java.com.cpe.chat.MessageDAO.java", "BodyUseAPI": ["com.cpe.chat.FirebaseCallbackGetMessage.onCallbackGetMessages(java.util.List<com.cpe.chat.Message>)"], "Fixed commit": "7749be77a847d9c38014d82e1c2904f4f3b6fadf", "Url": "https://api.github.com/repos/skydread1/androidProject", "Date": "2018-10-23T17:21:08Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOpen()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4324/buggy-version/PullToRefresh.src.main.java.com.changf.pulltorefresh.swipe.SwipeView.java", "BodyUseAPI": [], "Fixed commit": "7c6e6519f6a2a0af8a9174f258b8c8f89d090d58", "Url": "https://api.github.com/repos/dxp2020/PullToRefreshView", "Date": "2018-07-05T14:13:24Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getClickedBlock().getType()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9681/buggy-version/src.main.java.me.glaremasters.guilds.listeners.SignListener.java", "BodyUseAPI": [], "Fixed commit": "2d6b57c375292dd35de61259cb55d458d8a6b7ce", "Url": "https://api.github.com/repos/darbyjack/Guilds-Plugin", "Date": "2018-05-31T19:59:32Z"},
{"Line": "=>1237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((messageSentFragment) != null) && (messageSentFragment.isAdded())) { removeFragment(messageSentFragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5676/buggy-version/liveplayer-sdk-ui.src.main.java.com.baijiahulian.live.ui.activity.LiveRoomActivity.java", "BodyUseAPI": ["com.baijiahulian.live.ui.activity.LiveRoomActivity.removeFragment(com.baijiahulian.live.ui.chat.MessageSentFragment)"], "Fixed commit": "8baf1421b731f7778139e625d9e4eefacc042403", "Url": "https://api.github.com/repos/baijia/BJLiveUI-Android", "Date": "2018-03-12T12:44:20Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.red5.io.amf.Input.getString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (key.contains(\".\")) { result.put(key, item); }else { result.put(java.lang.Integer.valueOf(key), item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7378/buggy-version/src.main.java.org.red5.io.amf.Input.java", "BodyUseAPI": ["org.red5.io.utils.ObjectMap<java.lang.Object, java.lang.Object>.put(java.lang.String,java.lang.Object)", "org.red5.io.utils.ObjectMap<java.lang.Object, java.lang.Object>.put(java.lang.Integer,java.lang.Object)", "java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "5e2a3f052b31d431390f9ef1c328b1d9b0a719e8", "Url": "https://api.github.com/repos/videogorillas/red5-io", "Date": "2018-03-17T18:23:43Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.get(Keys.IS_SNEAKING).orElse(false)) { player.sendMessage(org.spongepowered.api.text.Text.of(TextColors.RED, \"You can not sell items while sneaking\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3695/buggy-version/src.main.java.me.nentify.playershops.events.BlockEventHandler.java", "BodyUseAPI": ["org.spongepowered.api.entity.living.player.Player.sendMessage(org.spongepowered.api.text.Text.of(TextColors.RED, \"You can not sell items while sneaking\"))"], "Fixed commit": "99746685936893de2d9358d279c8a65d556e11af", "Url": "https://api.github.com/repos/LukeJS/PlayerShops", "Date": "2016-09-02T18:45:41Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((entity.getDescription().equalsIgnoreCase(\"knife\")) || (entity.getDescription().equalsIgnoreCase(\"weapon\"))) || (entity.getDescription().equalsIgnoreCase(\"hardware\"))) || (entity.getDescription().equalsIgnoreCase(\"cold weapon\"))) { com.example.elavarsan.myfirstproject.MainActivity.COLOR = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6916/buggy-version/app.src.main.java.com.example.elavarsan.myfirstproject.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2ef9b493c5faf61beed1d648d48629252d8459d2", "Url": "https://api.github.com/repos/shamiliammu/myfirstproject", "Date": "2018-03-05T17:09:55Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.k2.Util.Identity.IdentityUtil.getIdMember(java.lang.Class<E>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (id != null) { if (id instanceof java.lang.reflect.Field) return new com.k2.Util.Identity.EntityFieldToKey(entityClass, ((java.lang.reflect.Field) (id))); if (id instanceof java.lang.reflect.Method) return new com.k2.Util.Identity.EntityMethodToKey(entityClass, ((java.lang.reflect.Method) (id))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9085/buggy-version/src.main.java.com.k2.Util.Identity.EntityToKey.java", "BodyUseAPI": [], "Fixed commit": "941b0b8d524c642dc54006a3cb76b2efb2f0985f", "Url": "https://api.github.com/repos/simonemmott/Util", "Date": "2018-03-31T08:49:46Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.biopax.paxtools.io.sbgn.ObjectFactory.createGlyph()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(g.getClazz().equals(org.biopax.paxtools.io.sbgn.OR.getClazz()))) { g.getGlyph().addAll(getInformation(e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7841/buggy-version/sbgn-converter.src.main.java.org.biopax.paxtools.io.sbgn.L3ToSBGNPDConverter.java", "BodyUseAPI": ["g.getGlyph().addAll(java.util.List<org.biopax.paxtools.io.sbgn.Glyph>)", "org.biopax.paxtools.io.sbgn.Glyph.getGlyph()"], "Fixed commit": "caa6b0e68b07fdf382b4484eec2643a35f2d88c0", "Url": "https://api.github.com/repos/BioPAX/Paxtools", "Date": "2018-05-31T14:21:50Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((x < 0) || (y < 0)) || (x >= (size))) || (y >= (size))) { return false; }else { return (treasure[y][x]) > 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2424/buggy-version/TreasureHuntOnConsoleEnhanced.src.main.java.edu.cuny.brooklyn.project.treasure.SquareTreasure.java", "BodyUseAPI": [], "Fixed commit": "906be0c455541172fdded2dd3b7b6d4d18cd8e41", "Url": "https://api.github.com/repos/CISC3120SP18/Project2StartupCode", "Date": "2018-03-14T21:19:28Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.itPATHoer.commons.core.util.Lists.iterable(ids)) { return this.repository.findAllById(ids); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4031/buggy-version/commons-jpa.src.main.java.com.itPATHoer.commons.jpa.service.BaseJpaService.java", "BodyUseAPI": ["JPA.findAllById(java.util.List<ID>)"], "Fixed commit": "ef97c93c869754d2058519c44a77820cf00e845a", "Url": "https://api.github.com/repos/liuyukuai/commons", "Date": "2018-10-15T09:04:49Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1708/buggy-version/app.src.main.java.se.miun.krsa1201.bathingsites.FetchAndDisplayWeatherData.java", "BodyUseAPI": [], "Fixed commit": "e715005dae5fd2b07411a623dcbca598cf3ea231", "Url": "https://api.github.com/repos/Sakarisson/Android-Final-Project", "Date": "2018-06-09T14:37:21Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value.equals(\"\")) { throw new java.lang.Exception(\"Unable to get values\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1708/buggy-version/app.src.main.java.se.miun.krsa1201.bathingsites.FetchAndDisplayWeatherData.java", "BodyUseAPI": [], "Fixed commit": "e715005dae5fd2b07411a623dcbca598cf3ea231", "Url": "https://api.github.com/repos/Sakarisson/Android-Final-Project", "Date": "2018-06-09T14:37:21Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isEmpty(webhook.getErrorChannelUrl()))) { item.put(\"errorChannelUrl\", new com.flightstats.hub.dao.aws.AttributeValue().withN(java.lang.String.valueOf(webhook.getErrorChannelUrl()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2243/buggy-version/src.main.java.com.flightstats.hub.dao.aws.DynamoWebhookDao.java", "BodyUseAPI": ["java.lang.String.valueOf(webhook.getErrorChannelUrl())", "com.flightstats.hub.webhook.Webhook.getErrorChannelUrl()", "com.flightstats.hub.dao.aws.AttributeValue.withN(java.lang.String)", "java.util.Map<java.lang.String, com.flightstats.hub.dao.aws.AttributeValue>.put(java.lang.String,new com.flightstats.hub.dao.aws.AttributeValue().withN(java.lang.String.valueOf(webhook.getErrorChannelUrl())))"], "Fixed commit": "84fffc9520b2a85badfc05a588589bd0bb321b6a", "Url": "https://api.github.com/repos/flightstats/hub", "Date": "2018-02-05T21:38:54Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item.containsKey(\"errorChannelUrl\")) { builder.errorChannelUrl(item.get(\"errorChannelUrl\").getS()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2243/buggy-version/src.main.java.com.flightstats.hub.dao.aws.DynamoWebhookDao.java", "BodyUseAPI": ["Webhook.WebhookBuilder.errorChannelUrl(item.get(\"errorChannelUrl\").getS())", "item.get(\"errorChannelUrl\").getS()", "java.util.Map<java.lang.String, com.flightstats.hub.dao.aws.AttributeValue>.get(java.lang.String)"], "Fixed commit": "84fffc9520b2a85badfc05a588589bd0bb321b6a", "Url": "https://api.github.com/repos/flightstats/hub", "Date": "2018-02-05T21:38:54Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((at.teamgotcha.tamagotchi.helpers.PersistenceHelper.dbhelper) == null) { at.teamgotcha.tamagotchi.helpers.PersistenceHelper.dbhelper = new at.teamgotcha.tamagotchi.helpers.PetDB(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7300/buggy-version/app.src.main.java.at.teamgotcha.tamagotchi.helpers.PersistenceHelper.java", "BodyUseAPI": [], "Fixed commit": "4fc451b8dc0bbddff4f4e6c9bc7dc9554ad93091", "Url": "https://api.github.com/repos/hrsFire/TamaTamaGotchi", "Date": "2018-05-11T18:48:52Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((at.teamgotcha.tamagotchi.helpers.PersistenceHelper.dbhelper) == null) { at.teamgotcha.tamagotchi.helpers.PersistenceHelper.dbhelper = new at.teamgotcha.tamagotchi.helpers.PetDB(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7300/buggy-version/app.src.main.java.at.teamgotcha.tamagotchi.helpers.PersistenceHelper.java", "BodyUseAPI": [], "Fixed commit": "4fc451b8dc0bbddff4f4e6c9bc7dc9554ad93091", "Url": "https://api.github.com/repos/hrsFire/TamaTamaGotchi", "Date": "2018-05-11T18:48:52Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (height == 0) height = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9864/buggy-version/Swidget.src.main.java.swidget.stratus.painters.progressbar.ProgressBarForegroundPainter.java", "BodyUseAPI": [], "Fixed commit": "48709bd07ea49fde6c827ac4a38ef428e3533baa", "Url": "https://api.github.com/repos/nsherry4/Libraries", "Date": "2018-03-07T21:43:11Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.spud.sgsclasscountdownapp.Database.getUpdateType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (updateType.equals(UpdateType.ManualADay)) { dayOfWeek = java.util.Calendar.WEDNESDAY; }else if (updateType.equals(UpdateType.ManualEDay)) { dayOfWeek = java.util.Calendar.THURSDAY; }else if (updateType.equals(UpdateType.ManualFullDay)) { dayOfWeek = java.util.Calendar.MONDAY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7525/buggy-version/app.src.main.java.com.spud.sgsclasscountdownapp.Core.java", "BodyUseAPI": ["com.spud.sgsclasscountdownapp.UpdateType.equals(UpdateType.ManualEDay)", "com.spud.sgsclasscountdownapp.UpdateType.equals(UpdateType.ManualFullDay)"], "Fixed commit": "7d7c6c7b7b2d1efaeec1957a735cdb2eb7645aec", "Url": "https://api.github.com/repos/jeffrypig23/SGSClassCountdown", "Date": "2018-10-10T15:28:06Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (user.getUsername().equals(\"autouser\")) { mGoogleMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(new com.google.android.gms.maps.model.LatLng(user.getLatitude(), user.getLongitude()), 15)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2591/buggy-version/android.app.src.main.java.com.erikterwiel.mountainviews.TrackerFragment.java", "BodyUseAPI": ["com.erikterwiel.mountainviews.User.getLongitude()", "com.google.android.gms.maps.GoogleMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(new com.google.android.gms.maps.model.LatLng(user.getLatitude(), user.getLongitude()), 15))", "com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(com.google.android.gms.maps.model.LatLng,int)", "com.erikterwiel.mountainviews.User.getLatitude()"], "Fixed commit": "77e46b02bc86d545d14533aeb8e5db2a35a3caf1", "Url": "https://api.github.com/repos/erikterwiel/Summitr", "Date": "2018-02-08T18:42:21Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getApplicationContext().getSharedPreferences(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pref.getBoolean(\"LoggedIn\", true)) { android.content.Intent i = new android.content.Intent(this, com.example.ohiostatefitleaderswear.StartWorkout.class); startActivity(i); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7433/buggy-version/ohiostatefitleaderswear.src.main.java.com.example.ohiostatefitleaderswear.Activate.java", "BodyUseAPI": [], "Fixed commit": "23028b6bf31fb7f6a25c96ce4665f793a174b718", "Url": "https://api.github.com/repos/drexelapplab/OhioStateFitLeaders", "Date": "2018-01-15T19:28:22Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextArea[playerId]) == actualArea) nextArea[playerId] = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4918/buggy-version/src.games.gsClever.Logic.MainLogic.java", "BodyUseAPI": [], "Fixed commit": "b185427f30eb0b51928aff875fcf7dcbcae6948e", "Url": "https://api.github.com/repos/nicoonator/gsclever", "Date": "2018-07-16T21:21:47Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.kymjs.common.StringUtils.isEmpty(id_number)) { mView.errorMsg(com.common.cklibrary.common.KJActivityStack.create().topActivity().getString(R.string.pleaseidNumber1), 0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1267/buggy-version/SillyChildGuide.app.src.main.java.com.yinglan.scg.mine.mywallet.mybankcard.AddBankCardPresenter.java", "BodyUseAPI": [], "Fixed commit": "de08645ea52667dd4a159b40af038a600fc5b5d5", "Url": "https://api.github.com/repos/921668753/SillyChildGuide-Android", "Date": "2018-09-27T01:35:21Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((tenPwr3 == 0) && ((n % 1000) == 0))) { result += \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6539/buggy-version/problem17.NumbersTranslation.java", "BodyUseAPI": [], "Fixed commit": "1472d1306f152b40544f244e99aabe47b43242d3", "Url": "https://api.github.com/repos/PoppyFanboy/Exercises-Solutions", "Date": "2018-08-16T23:47:56Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == connection) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/682/buggy-version/src.main.java.com.alipay.remoting.ConnectionPool.java", "BodyUseAPI": [], "Fixed commit": "da2582209e787b175c83268fd458a4fedcdd7526", "Url": "https://api.github.com/repos/alipay/sofa-bolt", "Date": "2018-04-10T10:17:55Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stringBuffer.length()) != 0) { stringBuffer.deleteCharAt(((stringBuffer.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7034/buggy-version/sources.bin.BuildNumber.java", "BodyUseAPI": ["java.lang.StringBuffer.length()", "java.lang.StringBuffer.deleteCharAt(int)"], "Fixed commit": "cf52db689013d799f504b6d78692b60db09ce4fe", "Url": "https://api.github.com/repos/PhuongDTran/stock-performance", "Date": "2018-03-15T04:38:24Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value < 1000) { return java.lang.String.valueOf(value); }else { if (value == 1000) { return java.lang.String.valueOf((count + \",000\")); }else { return java.lang.String.valueOf(((count == 0 ? \"\" : count + \",\") + (value % 1000))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1556/buggy-version/app.src.main.java.hci.android.pandarium.hellochartsintegration.rendering.core.YAxisRenderer.java", "BodyUseAPI": ["java.lang.String.valueOf(int)", "java.lang.String.valueOf(java.lang.String)"], "Fixed commit": "95a117a73597682371219d8bff311f1ed109b040", "Url": "https://api.github.com/repos/SergeyShustikov/HelloChartIntegration", "Date": "2018-03-15T11:49:52Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mEditText.getText().toString().equals(\"\"))) { double res = (java.lang.Double.parseDouble(mEditText.getText().toString())) / ((double) (curr_final)); output.setText((\"\u20b9\" + (reduce_deci(res)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2519/buggy-version/app.src.main.java.com.vikendu.currency_converter.MainActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(mEditText.getText().toString())", "mEditText.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "663baf287ba13bd544ba17c6e273b25b01f13615", "Url": "https://api.github.com/repos/vikendu/currency_converter", "Date": "2018-08-13T12:06:24Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mEditText.getText().toString().equals(\"\"))) { double res = (java.lang.Double.parseDouble(mEditText.getText().toString())) * ((double) (curr_final)); output.setText((\"\u20b9\" + (reduce_deci(res)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2519/buggy-version/app.src.main.java.com.vikendu.currency_converter.MainActivity.java", "BodyUseAPI": ["mEditText.getText().toString()", "android.widget.EditText.getText()", "java.lang.Double.parseDouble(mEditText.getText().toString())"], "Fixed commit": "663baf287ba13bd544ba17c6e273b25b01f13615", "Url": "https://api.github.com/repos/vikendu/currency_converter", "Date": "2018-08-13T12:06:24Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.nio.file.NoSuchFileException) throw new org.springframework.web.server.ResponseStatusException(org.springframework.http.HttpStatus.BAD_REQUEST, \"Diretor\u00f3rio inv\u00e1lido!\", new com.tiagoamp.acervorama.model.AcervoramaBusinessException(\"Diret\u00f3rio inv\u00e1lido\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6118/buggy-version/api.src.main.java.com.tiagoamp.acervorama.resources.ScannerResource.java", "BodyUseAPI": [], "Fixed commit": "df705fdd718135a4cc2a0984dbf9a79ae5c11898", "Url": "https://api.github.com/repos/tiagoamp/acervorama", "Date": "2018-05-10T18:22:52Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start >= 1000) { return new com.googlecode.npackdweb.MessagePage(\"Cannot show results after 1000. Try to filter by a category first.\"); }else { java.lang.String q = req.getParameter(\"q\"); if (q == null) { q = \"\"; } return new com.googlecode.npackdweb.package_.PackagesPage(q, \"created\".equals(req.getParameter(\"sort\")), start, req.getParameter(\"category0\"), req.getParameter(\"category1\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/394/buggy-version/src.main.java.com.googlecode.npackdweb.package_.PackagesAction.java", "BodyUseAPI": [], "Fixed commit": "449a50b4503aee99451ae823587832fb98a89eeb", "Url": "https://api.github.com/repos/tim-lebedkov/npackd-gae-web", "Date": "2018-07-17T18:36:16Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(_searchableListDialog.isAdded())) { _searchableListDialog.show(scanForActivity(_context).getFragmentManager(), \"TAG\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2590/buggy-version/searchablespinnerlibrary.src.main.java.com.toptoche.searchablespinnerlibrary.SearchableSpinner.java", "BodyUseAPI": ["com.toptoche.searchablespinnerlibrary.SearchableListDialog.show(scanForActivity(_context).getFragmentManager(),java.lang.String)"], "Fixed commit": "678a6440b2b9f1a6885e6a48a663b9d4df775a1e", "Url": "https://api.github.com/repos/alouanemed/SearchableSpinner", "Date": "2018-08-31T17:46:40Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.ciphertool.zenith.neural.generate.Zodiac408SampleGenerator.log.isDebugEnabled()) { com.ciphertool.zenith.neural.generate.Zodiac408SampleGenerator.log.debug(\"Random sample of order {}: {}\", markovOrder, sb.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/209/buggy-version/Zenith-Neural.src.main.java.com.ciphertool.zenith.neural.generate.Zodiac408SampleGenerator.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,int,java.lang.String)"], "Fixed commit": "b12d2776bf2c67c2b553cf9d8d05da853373c918", "Url": "https://api.github.com/repos/beldenge/Zenith", "Date": "2018-04-04T22:33:19Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.ciphertool.zenith.neural.generate.Zodiac408SampleGenerator.log.isDebugEnabled()) { com.ciphertool.zenith.neural.generate.Zodiac408SampleGenerator.log.debug(\"Random sample: {}\", sb.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/209/buggy-version/Zenith-Neural.src.main.java.com.ciphertool.zenith.neural.generate.Zodiac408SampleGenerator.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.String)"], "Fixed commit": "b12d2776bf2c67c2b553cf9d8d05da853373c918", "Url": "https://api.github.com/repos/beldenge/Zenith", "Date": "2018-04-04T22:33:19Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.ciphertool.zenith.neural.generate.Zodiac408SampleGenerator.log.isDebugEnabled()) { com.ciphertool.zenith.neural.generate.Zodiac408SampleGenerator.log.debug(\"Random paragraph: {}\", java.lang.String.valueOf(nextSample)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/209/buggy-version/Zenith-Neural.src.main.java.com.ciphertool.zenith.neural.generate.Zodiac408SampleGenerator.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.String)"], "Fixed commit": "b12d2776bf2c67c2b553cf9d8d05da853373c918", "Url": "https://api.github.com/repos/beldenge/Zenith", "Date": "2018-04-04T22:33:19Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.android.devmap.database.RoadStageGoalDatabase.INSTANCE) == null) { new com.example.android.devmap.database.RoadStageGoalDatabase.PopulateDbAsync(com.example.android.devmap.database.RoadStageGoalDatabase.INSTANCE).execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5183/buggy-version/app.src.main.java.com.example.android.devmap.database.RoadStageGoalDatabase.java", "BodyUseAPI": [], "Fixed commit": "f930dd20e1892d895f8d95e455f45c73a610354f", "Url": "https://api.github.com/repos/RJLgit/devmap", "Date": "2018-08-16T07:55:33Z"},
{"Line": "=>551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.engine.atInitialState()) { if (this.actions.atInitial()) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/248/buggy-version/src.main.java.jbse.jvm.Runner.java", "BodyUseAPI": [], "Fixed commit": "1b089d46eb5b1340a1e3f1e0ef2460a41f4ff800", "Url": "https://api.github.com/repos/pietrobraione/jbse", "Date": "2018-07-02T22:34:04Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.nlp.pipeline.Annotation.get(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((potentialMatchingEntityMention.get(CoreAnnotations.CharacterOffsetBeginAnnotation.class)) == (tokens.get(tokenRange.first).beginPosition())) && ((potentialMatchingEntityMention.get(CoreAnnotations.CharacterOffsetEndAnnotation.class)) == (tokens.get(tokenRange.second).endPosition()))) { return potentialMatchingEntityMention.get(CoreAnnotations.TextAnnotation.class); }else { return doc.get(CoreAnnotations.TextAnnotation.class).substring(tokens.get(tokenRange.first).beginPosition(), tokens.get(tokenRange.second).endPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2842/buggy-version/src.edu.stanford.nlp.quoteattribution.Sieves.Sieve.java", "BodyUseAPI": ["java.util.List<edu.stanford.nlp.ling.CoreLabel>.get(tokenRange.first)", "java.util.List<edu.stanford.nlp.ling.CoreLabel>.get(tokenRange.second)", "tokens.get(tokenRange.first).beginPosition()", "tokens.get(tokenRange.second).endPosition()", "edu.stanford.nlp.util.CoreMap.get(java.lang.Class)", "doc.get(CoreAnnotations.TextAnnotation.class).substring(tokens.get(tokenRange.first).beginPosition(),tokens.get(tokenRange.second).endPosition())"], "Fixed commit": "58a4694a5ecf2e51dcb8d2808ed6a116ea0344c3", "Url": "https://api.github.com/repos/stanfordnlp/CoreNLP", "Date": "2018-01-26T01:08:03Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.nlp.pipeline.Annotation.get(java.lang.Class)", "tokens.get(tokenRange.first).get(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((entityMentionsInDoc != null) && (potentialMatchingEntityMentionIndex != null)) { potentialMatchingEntityMention = entityMentionsInDoc.get(potentialMatchingEntityMentionIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2842/buggy-version/src.edu.stanford.nlp.quoteattribution.Sieves.Sieve.java", "BodyUseAPI": ["java.util.List<edu.stanford.nlp.util.CoreMap>.get(java.lang.Integer)"], "Fixed commit": "58a4694a5ecf2e51dcb8d2808ed6a116ea0344c3", "Url": "https://api.github.com/repos/stanfordnlp/CoreNLP", "Date": "2018-01-26T01:08:03Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (error != null) { com.centurylink.mdw.model.StatusResponse sr = new com.centurylink.mdw.model.StatusResponse(javax.servlet.http.HttpServletResponse.SC_INTERNAL_SERVER_ERROR, error.toString()); response.setStatus(sr.getStatus().getCode()); response.getWriter().println(sr.getJson().toString(2)); }else { java.lang.Integer statusCode = ((java.lang.Integer) (request.getAttribute(\"javax.servlet.error.status_code\"))); if (statusCode != null) { if (statusCode == 404) { request.getRequestDispatcher(\"/404\").forward(request, response); }else { com.centurylink.mdw.model.StatusResponse sr = com.centurylink.mdw.model.StatusResponse.forCode(statusCode); response.setStatus(sr.getStatus().getCode()); response.getWriter().println(sr.getJson().toString(2)); } }else { com.centurylink.mdw.model.StatusResponse sr = new com.centurylink.mdw.model.StatusResponse(javax.servlet.http.HttpServletResponse.SC_INTERNAL_SERVER_ERROR, \"Unknown error\"); response.setStatus(sr.getStatus().getCode()); response.getWriter().println(sr.getJson().toString(2)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3425/buggy-version/mdw-hub.src.com.centurylink.mdw.hub.servlet.ErrorServlet.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "ab701d63bcccbbe2d46e6559ab0edb918ff824eb", "Url": "https://api.github.com/repos/CenturyLinkCloud/mdw", "Date": "2018-08-06T16:49:07Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((layout_cost_detail.getVisibility()) == (android.view.View.GONE)) { layout_cost_detail.setVisibility(View.VISIBLE); txtLocation.setText(\"Location\"); txtDestination.setText(\"Destination\"); txt_cost.setText(java.lang.String.valueOf(total_cost)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/563/buggy-version/app.src.main.java.com.logixcess.smarttaPATHpplication.Fragments.MapFragment.java", "BodyUseAPI": ["android.widget.LinearLayout.setVisibility(View.VISIBLE)"], "Fixed commit": "2fe1330a744bb3fde92c4b20fc0f1272d672bb98", "Url": "https://api.github.com/repos/Nomanghous/SmartTaxi", "Date": "2018-08-06T16:08:01Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kaltura.media_server.modules.Utils.getQueryMap(client.getQueryStr())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((queryParameters.get(Constants.REQUEST_PROPERTY_PARTNER_ID)) != null) { partnerId = java.lang.Integer.parseInt(queryParameters.get(Constants.REQUEST_PROPERTY_PARTNER_ID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2440/buggy-version/KalturaWowzaServer.src.main.java.com.kaltura.media_server.modules.AuthenticationModule.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(Constants.REQUEST_PROPERTY_PARTNER_ID)"], "Fixed commit": "694f722d8225e0aa90e6309ddbcf96dc9779c8eb", "Url": "https://api.github.com/repos/kaltura/media-server", "Date": "2018-01-22T10:06:59Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pageSize == null) || (total == null)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8865/buggy-version/cloud_service_proxy_core.src.main.java.com.zxj.cloud_service_proxy_core.bean.page.PageImpl.java", "BodyUseAPI": [], "Fixed commit": "0089fb108a7b968614137062d162f47d0b4d3769", "Url": "https://api.github.com/repos/zhuxiujia/SpringCloudServiceProxy", "Date": "2018-08-03T03:40:22Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((com.mdc.bot.util.Util.userHasRole(s.getSender(), \"God\", s.getServer())) || (com.mdc.bot.util.Util.userHasRole(s.getSender(), \"sd\", s.getServer())))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1993/buggy-version/MDCBot.src.main.java.com.mdc.bot.command.DivinePunishmentCommand.java", "BodyUseAPI": [], "Fixed commit": "b2c1f6c200789b0d2d52bbf2512572e36ac2ebde", "Url": "https://api.github.com/repos/MemeDistributionCo/MDCBot", "Date": "2018-01-17T18:35:36Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((com.mdc.bot.util.Util.userHasRole(s.getSender(), \"God\", s.getServer())) || (com.mdc.bot.util.Util.userHasRole(s.getSender(), \"sd\", s.getServer())))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1993/buggy-version/MDCBot.src.main.java.com.mdc.bot.command.DivinePunishmentCommand.java", "BodyUseAPI": [], "Fixed commit": "b2c1f6c200789b0d2d52bbf2512572e36ac2ebde", "Url": "https://api.github.com/repos/MemeDistributionCo/MDCBot", "Date": "2018-01-17T18:35:36Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pentaho.di.trans.steps.csvinput.PatternMatcherInterface.matchesPattern(byte[],int,int,byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result) endBuffer = ((endBuffer) - (delimiter.length)) + 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1621/buggy-version/engine.src.org.pentaho.di.trans.steps.csvinput.CsvInputData.java", "BodyUseAPI": [], "Fixed commit": "11730c02b4612c93d0b9160d630912724a57eb63", "Url": "https://api.github.com/repos/PATHoaowanghu/pentaho-kettle", "Date": "2018-09-26T14:43:50Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getInterfaces()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((interfaceClasses == null) || ((interfaceClasses.length) == 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/257/buggy-version/src.main.java.io.jboot.aop.JbootInjectManager.java", "BodyUseAPI": [], "Fixed commit": "d9417404553d026b47492570ae057ebeddd40ef7", "Url": "https://api.github.com/repos/yangfuhai/jboot", "Date": "2018-05-16T13:45:01Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3309/buggy-version/android.src.main.java.com.insanityradio.rnaudiostreamer.MusicStreamerService.java", "BodyUseAPI": [], "Fixed commit": "3c60fb0be662202c527b2d5c430455cec094733c", "Url": "https://api.github.com/repos/InsanityRadio/react-native-audio-streamer", "Date": "2018-09-21T13:09:14Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3309/buggy-version/android.src.main.java.com.insanityradio.rnaudiostreamer.MusicStreamerService.java", "BodyUseAPI": [], "Fixed commit": "3c60fb0be662202c527b2d5c430455cec094733c", "Url": "https://api.github.com/repos/InsanityRadio/react-native-audio-streamer", "Date": "2018-09-21T13:09:14Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.pig.common.util.AuthUtils.extractAndDecodeHeader(java.lang.String)", "com.github.pig.auth.component.mobile.ClientDetailsService.loadClientByClientId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(clientDetails.getClientSecret().equals(tokens[1]))) { throw new org.springframework.security.oauth2.common.exceptions.InvalidClientException(\"Given client ID does not match authenticated client\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2999/buggy-version/pig-auth.src.main.java.com.github.pig.auth.component.mobile.MobileLoginSuccessHandler.java", "BodyUseAPI": [], "Fixed commit": "6bb659c83f19bd76b373d28fe8d653c33257fd45", "Url": "https://api.github.com/repos/pig4cloud/pig", "Date": "2018-07-16T08:58:50Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sqlexec.insertMetadata(assetMetadata)) { filesUtility.move(files[i], MigrationConstants.FILE_PROCESSED_LOCATION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6299/buggy-version/src.main.java.com.nttdata.lumileds.opentext.migration.MigrateAssets.java", "BodyUseAPI": [], "Fixed commit": "6aa30336de903475fb4c75ef78759f7143962419", "Url": "https://api.github.com/repos/ngiri22/MigrateAssets", "Date": "2018-07-19T13:00:34Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.size()) == 0) { return javax.ws.rs.core.Response.status(204).entity(\"\").build(); }else { return javax.ws.rs.core.Response.status(201).entity(outputJSON.toString()).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6105/buggy-version/src.main.java.com.calvinku.LibraryManagementSystem.java", "BodyUseAPI": [], "Fixed commit": "05ea506d27ace6f7bf9668cfdc72316d74b55d6e", "Url": "https://api.github.com/repos/cjwku1209/BookManagementService", "Date": "2018-03-19T14:34:41Z"},
{"Line": "=>1520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((partRef.getPart(false)) == (this)) { net.tourbook.tour.TourManager.setTourDataEditor(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3059/buggy-version/bundles.net.tourbook.src.net.tourbook.ui.views.tourDataEditor.TourDataEditorView.java", "BodyUseAPI": [], "Fixed commit": "a403bd5fa73d7f8bad868ee9b2d7ed075a446646", "Url": "https://api.github.com/repos/wolfgang-ch/mytourbook", "Date": "2018-08-11T11:54:36Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_inputsOutputs) == null) { _inputsOutputs = Main.coqtop.execute(_script); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1145/buggy-version/src.main.java.coqatoo.rewriters.TextRewriter.java", "BodyUseAPI": [], "Fixed commit": "eb903eab1dc12cc83ef11dcc8e8d4e6e2cf72f9b", "Url": "https://api.github.com/repos/andrew-bedford/coqatoo", "Date": "2018-01-13T02:40:04Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mAction.equals(com.cybexmobile.fragment.ACTION_BUY)) { mBuyFragment.clearEditTextData(); }else { mSellFragment.clearEditTextData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4549/buggy-version/app.src.main.java.com.cybexmobile.fragment.ExchangeFragment.java", "BodyUseAPI": [], "Fixed commit": "28edbf07c6d5379880aa1e5bc2ec83ac76e20411", "Url": "https://api.github.com/repos/CybexDex/cybex-android", "Date": "2018-07-10T07:47:09Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentTimeout < 0) { currentTimeout = org.emoflon.ibex.tgg.util.ilp.Sat4JWrapper.MAX_TIMEOUT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7005/buggy-version/org.emoflon.ibex.tgg.core.runtime.src.org.emoflon.ibex.tgg.util.ilp.Sat4JWrapper.java", "BodyUseAPI": [], "Fixed commit": "1cb046e9050cef3ffac7e69333322cbcf6823e08", "Url": "https://api.github.com/repos/eMoflon/emoflon-ibex", "Date": "2018-04-25T10:00:14Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((transaction.getCategory()) != null) { if ((transaction.getCategory().getId()) == category) { resultMap.put(transaction.getId(), transaction); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4646/buggy-version/src.main.java.transactions.TransactionController.java", "BodyUseAPI": ["transaction.getCategory().getId()", "transactions.Transaction.getId()", "java.util.LinkedHashMap<java.lang.Integer, transactions.Transaction>.put(transaction.getId(),transactions.Transaction)", "transactions.Transaction.getCategory()"], "Fixed commit": "30473c14489464ce075f725536c129f64eaa89d5", "Url": "https://api.github.com/repos/agilitytestbed/Team-A", "Date": "2018-04-09T20:06:57Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mView) instanceof android.content.Context) { mContext = ((android.content.Context) (mView)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/821/buggy-version/memory-note.src.main.java.com.lgc.memorynote.wordList.WordListPresenter.java", "BodyUseAPI": [], "Fixed commit": "85391ecc1de6b7e24ba36ac27bfaeaf193f11f96", "Url": "https://api.github.com/repos/liuguicen/MemoryNote", "Date": "2018-03-10T19:17:25Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((leftValue > (-1)) && (rightValue > (-1))) mentionsInPreviousParagraph = edu.stanford.nlp.quoteattribution.Sieves.training.SupervisedSieveTraining.eliminateDuplicates(edu.stanford.nlp.quoteattribution.Sieves.training.SupervisedSieveTraining.sieve.findClosestMentionsInSpanBackward(new edu.stanford.nlp.util.Pair(leftValue, rightValue)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2950/buggy-version/src.edu.stanford.nlp.quoteattribution.Sieves.training.SupervisedSieveTraining.java", "BodyUseAPI": ["edu.stanford.nlp.quoteattribution.Sieves.Sieve.findClosestMentionsInSpanBackward(edu.stanford.nlp.util.Pair)", "edu.stanford.nlp.quoteattribution.Sieves.training.SupervisedSieveTraining.eliminateDuplicates(edu.stanford.nlp.quoteattribution.Sieves.training.SupervisedSieveTraining.sieve.findClosestMentionsInSpanBackward(new edu.stanford.nlp.util.Pair(leftValue, rightValue)))"], "Fixed commit": "6cd834b3372d8ada15eab38f7ff98fa1ab7e3f9d", "Url": "https://api.github.com/repos/kno10/CoreNLP", "Date": "2018-02-22T07:17:26Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.nlp.pipeline.Annotation.get(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((leftValue < (tokens.size())) && (rightValue < (tokens.size()))) mentionsInNextParagraph = edu.stanford.nlp.quoteattribution.Sieves.training.SupervisedSieveTraining.sieve.findClosestMentionsInSpanForward(new edu.stanford.nlp.util.Pair(leftValue, rightValue));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2950/buggy-version/src.edu.stanford.nlp.quoteattribution.Sieves.training.SupervisedSieveTraining.java", "BodyUseAPI": ["edu.stanford.nlp.quoteattribution.Sieves.Sieve.findClosestMentionsInSpanForward(edu.stanford.nlp.util.Pair)"], "Fixed commit": "6cd834b3372d8ada15eab38f7ff98fa1ab7e3f9d", "Url": "https://api.github.com/repos/kno10/CoreNLP", "Date": "2018-02-22T07:17:26Z"},
{"Line": "=>649", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getParameter(\"pinpic\")) != null) { if (request.getParameter(\"pinpic\").equalsIgnoreCase(\"all\")) { downloadImageList = pinService.getPinpicImages(pinId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/157/buggy-version/src.main.java.com.stumpner.mediadesk.web.servlet.DownloadServlet.java", "BodyUseAPI": ["request.getParameter(\"pinpic\").equalsIgnoreCase(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "914aa6c7a2263801e572e1f5cc7a92f8bdbef39d", "Url": "https://api.github.com/repos/openMEDIADESK/openMEDIADESK", "Date": "2018-08-27T19:42:54Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((patient.getCurrentPatientStatus()) != (model.fact.PatientStatus.ON_TREATMENT_ARM)) { if ((ecogPatientAssignmentMessage.getPatientAssignment().getPatientAssignmentStatus()) == (model.fact.PatientAssignmentStatus.NO_ARM_ASSIGNED)) { patient.setCurrentPatientStatus(PatientStatus.PENDING_OFF_STUDY); }else { patient.setCurrentPatientStatus(PatientStatus.PENDING_APPROVAL); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6736/buggy-version/src.main.java.processor.EcogPatientAssignmentProcessor.java", "BodyUseAPI": ["model.Patient.setCurrentPatientStatus(PatientStatus.PENDING_APPROVAL)", "model.Patient.setCurrentPatientStatus(PatientStatus.PENDING_OFF_STUDY)"], "Fixed commit": "34c6365fd71413addef2de3abc0b7c97a1a7fe75", "Url": "https://api.github.com/repos/BIAD/nci-adult-match-assignment-delivery-lambda", "Date": "2018-08-17T19:57:09Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lang) == null) { lang = DLNAMediaLang.UND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5218/buggy-version/src.main.java.net.pms.dlna.DLNAMediaSubtitle.java", "BodyUseAPI": [], "Fixed commit": "f75e1b04940ddc09fd6fb343506842b41fe3a8d8", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2017-09-24T12:29:05Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (adresse != null) personne.setAdresse(adresse);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8914/buggy-version/src.main.java.com.example.demo.services.Service1Impl.java", "BodyUseAPI": ["com.example.demo.services.Personne.setAdresse(com.example.demo.services.Adresse)"], "Fixed commit": "0cca1708f5ec56b73d19c75024920efbbe20e1fd", "Url": "https://api.github.com/repos/salah3x/ProjetJEE", "Date": "2018-05-08T12:43:35Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getTarget()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3847/buggy-version/src.main.java.electroblob.wizardry.spell.MindControl.java", "BodyUseAPI": [], "Fixed commit": "a4695bcce1c62b4bfb1b2dee0759c84d30493ba2", "Url": "https://api.github.com/repos/Electroblob77/Wizardry", "Date": "2018-02-18T23:32:54Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(tokens[2].equals(\"\"))) { capacity = java.lang.Integer.parseInt(tokens[2]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5216/buggy-version/app.src.main.java.edu.gatech.cs2340.app.controller.MainActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "c5557b50c77eddbe61608c4c2d399fdfedbf8f82", "Url": "https://api.github.com/repos/emacgregor/2340project", "Date": "2018-02-28T18:14:14Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (uri != null) { com.bumptech.glide.Glide.with(this).load(uri).apply(options).into(profileImageView); }else { com.bumptech.glide.Glide.with(this).load(R.drawable.com_facebook_profile_picture_blank_square).into(profileImageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/607/buggy-version/app.src.main.java.com.unimelb.projectinsta.profile.ProfileFragment.java", "BodyUseAPI": ["com.bumptech.glide.Glide.with(this).load(uri).apply(com.bumptech.glide.request.RequestOptions)", "com.bumptech.glide.Glide.with(this).load(uri).apply(options).into(android.widget.ImageView)", "com.bumptech.glide.Glide.with(this).load(java.lang.String)"], "Fixed commit": "9011c7c3f1f99a6b5c3451fdea65fcaa79583854", "Url": "https://api.github.com/repos/antgit123/insta", "Date": "2018-10-21T01:45:48Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (author == null) { helper.setText(R.id.search_book_author, \"xyy\"); }else { helper.setText(R.id.search_book_author, item.author.username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9814/buggy-version/app.src.main.java.com.main.hooker.hooker.adapter.BookAdapter.java", "BodyUseAPI": [], "Fixed commit": "838e0b8f7d1a8110e8d2b2680c48aabb8f071cc9", "Url": "https://api.github.com/repos/neoming/hooked", "Date": "2018-06-12T09:11:06Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.activity.CropActivity.findPoints()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (points != null) { mSelectionImageView.setPoints(points); }else { com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.CropActivity.TAG, getResources().getString(R.string.no_contour_found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7264/buggy-version/src.com.owncloud.android.ui.activity.CropActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.QuadrilateralSelectionImageView.setPoints(java.util.List<android.graphics.PointF>)"], "Fixed commit": "bf95fb5405cd94083576ee6a8d0eb7717069fe02", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-12T06:43:04Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (n != (-1)) { java.lang.String params = getPath().substring((n + 1)); java.lang.String[] temp = params.split(\"&\"); for (java.lang.String s : temp) { java.lang.String[] p = s.split(\"=\"); urlParams.put(p[0], p[1]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4963/buggy-version/server.HttpReq.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "1776a7bcc1e85c7ba28f00d24ea5d8961444cbfa", "Url": "https://api.github.com/repos/AlexChanson/Elsa", "Date": "2018-03-05T11:18:55Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mUsername.isEmpty()) { mUsername = mFirebaseUser.getEmail(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2154/buggy-version/app.src.main.java.com.srikarmutnuri.chatapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b903c33ce62730c5dedc868398cf7c418b7cc17c", "Url": "https://api.github.com/repos/itssmutnuri/ChatApplication", "Date": "2018-03-06T18:04:41Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputQueryRange) == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3310/buggy-version/src.main.java.edu.umn.cs.spatialHadoop.mapreduce.HTMRecordReader.java", "BodyUseAPI": [], "Fixed commit": "36476bbb72e6639a9726b9a43af43d4620ca048d", "Url": "https://api.github.com/repos/Starcutter/spatialhadoop-htm", "Date": "2018-03-13T12:36:06Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Options.hasKey(\"resultBase64\")) { resultBase64 = Options.getBoolean(\"resultBase64\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2247/buggy-version/android.src.main.java.com.example.react_native_compress_image.CompressImageModule.java", "BodyUseAPI": ["com.facebook.react.bridge.ReadableMap.getBoolean(java.lang.String)"], "Fixed commit": "9290c499f5012d94967e20b69a2a236ce55483bc", "Url": "https://api.github.com/repos/IMMC/react-native-compress-images", "Date": "2018-01-17T06:10:04Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Options.hasKey(\"saveImages\")) { saveImages = Options.getBoolean(\"saveImages\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2247/buggy-version/android.src.main.java.com.example.react_native_compress_image.CompressImageModule.java", "BodyUseAPI": ["com.facebook.react.bridge.ReadableMap.getBoolean(java.lang.String)"], "Fixed commit": "9290c499f5012d94967e20b69a2a236ce55483bc", "Url": "https://api.github.com/repos/IMMC/react-native-compress-images", "Date": "2018-01-17T06:10:04Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\".html\".equals(ext)) { org.paingan.yuiui.YUICompressor.compressHTML(inputFilename, outputFilename, o); txtConsole.append(((jfc.getSelectedFile().getName()) + \" HTML file compress successfully\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7489/buggy-version/src.main.java.org.paingan.yuiui.YUIGUIFrame.java", "BodyUseAPI": [], "Fixed commit": "81d5d623f34605aeecb9cc88cd701fbace336ab3", "Url": "https://api.github.com/repos/paulusyansen/yuiui", "Date": "2018-06-05T04:31:13Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start == 12) { end += 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8835/buggy-version/CalendarProject.src.scheduler.MainGUI.java", "BodyUseAPI": [], "Fixed commit": "1c065f0b43988a4a3ea42f90a3f19459d22e1934", "Url": "https://api.github.com/repos/Hangry9090/CalendarProject", "Date": "2018-04-19T16:50:39Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start == 12) { end += 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8835/buggy-version/CalendarProject.src.scheduler.MainGUI.java", "BodyUseAPI": [], "Fixed commit": "1c065f0b43988a4a3ea42f90a3f19459d22e1934", "Url": "https://api.github.com/repos/Hangry9090/CalendarProject", "Date": "2018-04-19T16:50:39Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zdd.bdc.util.Filedatawalk.data(byte[],boolean,byte[],boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((res.getdataction()) == (Filedatawalkresult.DATA_REPLACE)) { java.nio.ByteBuffer towrite = com.zdd.bdc.util.Fileutil.formatdatapair(res.getvalue1(), java.lang.Integer.parseInt(new java.lang.String(value1maxlength)), false, res.getvalue2(), java.lang.Integer.parseInt(new java.lang.String(value2maxlength)), false); if (reverse) { }else { sbc.position(((sbc.position()) - (towrite.capacity()))); } java.lang.String sync = null; if (java.util.Arrays.equals(res.getvalue1(), value1)) { sync = new java.lang.String(value1, STATIC.CHARSET_DEFAULT).intern(); }else { sync = new java.lang.String(value2, STATIC.CHARSET_DEFAULT).intern(); } synchronized(sync) { com.zdd.bdc.util.Fileutil.write(sbc, towrite); } if (reverse) { sbc.position(((sbc.position()) - (towrite.capacity()))); }else { } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7822/buggy-version/bigcommonutil.src.com.zdd.bdc.util.Fileutil.java", "BodyUseAPI": ["com.zdd.bdc.util.Filedatawalkresult.getvalue1()", "com.zdd.bdc.util.Filedatawalkresult.getvalue1()", "com.zdd.bdc.util.Fileutil.formatdatapair(res.getvalue1(),int,boolean,res.getvalue2(),int,boolean)", "java.util.Arrays.equals(res.getvalue1(),byte[])", "com.zdd.bdc.util.Filedatawalkresult.getvalue2()"], "Fixed commit": "60d12e9eacd4d1383372ad5b27a8e4cfa1fd3e41", "Url": "https://api.github.com/repos/mchangeoutlook/zdd", "Date": "2018-10-23T12:31:37Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.ssehub.kernel_haven.util.logic.Variable.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (isFeature(varName)) { variabilityCC += weight.getWeight(varName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5844/buggy-version/src.net.ssehub.kernel_haven.metric_haven.metric_components.visitors.McCabeVisitor.java", "BodyUseAPI": ["net.ssehub.kernel_haven.metric_haven.metric_components.weights.IVariableWeight.getWeight(java.lang.String)"], "Fixed commit": "f412f8a4d6bed0ce8de3ac9b85d253541cca438c", "Url": "https://api.github.com/repos/KernelHaven/MetricHaven", "Date": "2018-04-30T13:56:55Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((lineText.indexOf('#')) > 0) text = text.substring(0, lineText.indexOf('#'));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3013/buggy-version/src.backend.TextParser.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(char)"], "Fixed commit": "e9a51efca3211e254884cbd3bf626b01944efe2d", "Url": "https://api.github.com/repos/waiweran/MipsInterpreter", "Date": "2018-03-02T20:32:03Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((lineText.indexOf('#')) > 0) text = text.substring(0, lineText.indexOf('#'));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3013/buggy-version/src.backend.TextParser.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(char)"], "Fixed commit": "e9a51efca3211e254884cbd3bf626b01944efe2d", "Url": "https://api.github.com/repos/waiweran/MipsInterpreter", "Date": "2018-03-02T20:32:03Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (acceptLang == null) return get(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4251/buggy-version/web-bundle.src.main.java.com.graphhopper.resources.I18NResource.java", "BodyUseAPI": [], "Fixed commit": "5c980b4627578626268873f9424de35188187441", "Url": "https://api.github.com/repos/boldtrn/graphhopper", "Date": "2018-06-22T13:34:41Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world.getWorldFile()) != null) { mudmap2.backend.WorldFileList.push(new mudmap2.backend.WorldFileList.WorldFileEntry(world.getName(), new java.io.File(world.getWorldFile().getFilename()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6756/buggy-version/src.main.java.mudmap2.frontend.Mainwindow.java", "BodyUseAPI": ["mudmap2.backend.WorldFileList.push(mudmap2.backend.WorldFileList.WorldFileEntry)", "mudmap2.backend.World.getName()", "world.getWorldFile().getFilename()", "mudmap2.backend.World.getWorldFile()"], "Fixed commit": "7352733b809c0c5333ee68b441fa4573aafad055", "Url": "https://api.github.com/repos/Neop/mudmap2", "Date": "2018-04-15T21:45:33Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.braintags.vertx.util.file.JsonReadStream<T>.createContent(T)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((buffer != null) && ((buffer.length()) > 0)) { contentHandler.handle(buffer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2308/buggy-version/src.main.java.de.braintags.vertx.util.file.JsonReadStream.java", "BodyUseAPI": ["io.vertx.core.Handler<io.vertx.core.buffer.Buffer>.handle(io.vertx.core.buffer.Buffer)"], "Fixed commit": "6e0e8b64ac176e7616a786b13354333d64b5c7fe", "Url": "https://api.github.com/repos/BraintagsGmbH/vertx-util", "Date": "2018-03-22T16:26:18Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clearSession) session.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4508/buggy-version/EMF.src.services.gov.epa.emissions.framework.services.data.DatasetDAO.java", "BodyUseAPI": [], "Fixed commit": "3738f218c94d7322f44d4aa5e5346ba633e7baef", "Url": "https://api.github.com/repos/USEPA-OAQPS/emf", "Date": "2018-04-08T01:30:08Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.wurmcraft.wurmtweaks.utils.StackHelper.isOreDictionaryEntry(item)) return new com.wurmcraft.wurmtweaks.utils.IngredientHelper(net.minecraftforge.oredict.OreDictionary.getOres(item.substring(1, ((item.length()) - 1))).toArray(new net.minecraft.item.ItemStack[0]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6133/buggy-version/src.main.java.com.wurmcraft.wurmtweaks.utils.StackHelper.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)", "net.minecraftforge.oredict.OreDictionary.getOres(java.lang.String)", "net.minecraftforge.oredict.OreDictionary.getOres(item.substring(1, ((item.length()) - 1))).toArray(net.minecraft.item.ItemStack[])"], "Fixed commit": "ae4c13acd94cead464af3d1b8740f75cd620ec05", "Url": "https://api.github.com/repos/Wurmcraft/WurmTweaks2", "Date": "2018-04-24T04:34:11Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.getDelimiter()) != null) || (!(this.getDelimiter().isEmpty()))) { str.append(\"\\t DELIMITER [\").append(getDelimiter()).append(\"]\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5166/buggy-version/src.org.avr.fileread.records.BasicRecord.java", "BodyUseAPI": [], "Fixed commit": "28afd0b4eb07017750641c8e307645fad2147965", "Url": "https://api.github.com/repos/Aljamis/FileRead", "Date": "2018-01-10T17:40:39Z"},
{"Line": "=>729", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (pack == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8447/buggy-version/com.eco.bio7.src.com.eco.bio7.rbridge.PackageInstallView.java", "BodyUseAPI": [], "Fixed commit": "4bacdff6a38be51b297ea010c9b0bd03dce0324b", "Url": "https://api.github.com/repos/Bio7/bio7", "Date": "2018-03-31T07:07:54Z"},
{"Line": "=>665", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (listPackages != null) { com.eco.bio7.rbridge.PackageInstallView.allInstalledPackagesList.setItems(listPackages); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8447/buggy-version/com.eco.bio7.src.com.eco.bio7.rbridge.PackageInstallView.java", "BodyUseAPI": ["org.eclipse.swt.widgets.List.setItems(java.lang.String[])"], "Fixed commit": "4bacdff6a38be51b297ea010c9b0bd03dce0324b", "Url": "https://api.github.com/repos/Bio7/bio7", "Date": "2018-03-31T07:07:54Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (osName.toLowerCase().startsWith(\"mac\")) { LibC.INSTANCE.setenv(\"VLC_DATA_PATH\", \"/Applications/VLC.app/Contents/MacOS/share\", 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8638/buggy-version/src.org.teachothers.fishwatchr.FishWatchr.java", "BodyUseAPI": [], "Fixed commit": "6de00b729710265e2e447b66359d7ec2f8152a45", "Url": "https://api.github.com/repos/himawari-san/FishWatchr", "Date": "2018-02-15T12:12:19Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((data.get(\"MonitoredCall\")) != null) { this.nextStop = data.get(\"MonitoredCall\").getAsJsonObject().get(\"StopPointName\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5666/buggy-version/Jransit.Jransit.src.info.BusInfo.java", "BodyUseAPI": [], "Fixed commit": "cf94777c2aa2eacd468945b641eee9ddc88851f4", "Url": "https://api.github.com/repos/Prisoner3D/Jransit", "Date": "2018-02-15T06:01:55Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTaskRoot())) { finish(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9552/buggy-version/app.src.main.java.top.itning.yunshuclassschedule.ui.activity.CustomActivity.java", "BodyUseAPI": [], "Fixed commit": "dc65b0ffdb3509233449263492e935c21e2458c8", "Url": "https://api.github.com/repos/itning/YunShuClassSchedule", "Date": "2018-09-07T07:03:01Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((expArg.getNodeType()) == (org.eclipse.jdt.core.dom.ASTNode.METHOD_INVOCATION)) { org.eclipse.jdt.core.dom.MethodInvocation subCall = ((org.eclipse.jdt.core.dom.MethodInvocation) (expArg)); java.util.List<java.lang.String> subArgs = argNames(subCall.arguments()); methodArgs.addAll(subArgs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6356/buggy-version/plugin.src.main.java.org.autorefactor.refactoring.rules.ExcessiveMethodCallsRefactoring.java", "BodyUseAPI": [], "Fixed commit": "b91700223dd1d40b2db243847bdd9c6cc348766d", "Url": "https://api.github.com/repos/MarcoCouto/AutoRefactorCli", "Date": "2018-09-26T10:14:34Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connectivityManager.getActiveNetworkInfo().isConnected()) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/572/buggy-version/app.src.main.java.s9p.hs.HotspotService.java", "BodyUseAPI": [], "Fixed commit": "5f71b7fed0fbd0af49022a0a3d6efe48b36f3f78", "Url": "https://api.github.com/repos/sd1998/HotspotManager", "Date": "2018-09-29T06:51:38Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mozilla.universalchardet.UniversalDetector.getDetectedCharset()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (encoding == null) encoding = \"UTF-8\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8004/buggy-version/openpdf.src.main.java.com.lowagie.text.xml.simpleparser.SimpleXMLParser.java", "BodyUseAPI": [], "Fixed commit": "cf834abb590ffcdbb48e973dc0b93056d7c84352", "Url": "https://api.github.com/repos/LibrePDF/OpenPDF", "Date": "2018-09-07T10:02:08Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == (-1)) index = 0; else if (index == count_record) index = index - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/110/buggy-version/app.src.main.java.com.example.HomeworkOne.AcWeightGraph.java", "BodyUseAPI": [], "Fixed commit": "314b28d7911a9b6c91541fb480f8dd64ceb84519", "Url": "https://api.github.com/repos/Kafcal/HeightAndWeight", "Date": "2018-01-20T15:04:22Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nc.mairie.spring.ws.ISirhWSConsumer.getListBaseHorairePointageAgent(java.lang.Integer,java.util.Date,java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((null != listBaseHorairePointageDto) && (!(listBaseHorairePointageDto.isEmpty()))) { return listBaseHorairePointageDto.get(0); }else { listBaseHorairePointageDto = sirhConsumer.getListBaseHorairePointageAgent(idAgent, new org.joda.time.DateTime(dateDebut).plusDays(7).toDate(), new org.joda.time.DateTime(dateDebut).plusDays(7).toDate()); if ((null != listBaseHorairePointageDto) && (!(listBaseHorairePointageDto.isEmpty()))) { return listBaseHorairePointageDto.get(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2520/buggy-version/src.main.java.nc.noumea.spring.service.SirhService.java", "BodyUseAPI": ["java.util.List<nc.mairie.gestionagent.dto.BaseHorairePointageDto>.get(int)"], "Fixed commit": "7be29c8b2336a3ae0b98b3e44d03f6e620234209", "Url": "https://api.github.com/repos/DSI-Ville-Noumea/sirh", "Date": "2018-10-30T20:17:12Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (rightValue == null) { left = net.jplugin.core.das.route.impl.algms.TimeBasedSpanUtil.convetToLoalDate(valueType, leftValue); right = dm.maintain(left, (-trackDays)); }else { left = net.jplugin.core.das.route.impl.algms.TimeBasedSpanUtil.convetToLoalDate(valueType, leftValue); right = net.jplugin.core.das.route.impl.algms.TimeBasedSpanUtil.convetToLoalDate(valueType, rightValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6190/buggy-version/net.jplugin.core.das.ts-src.net.jplugin.core.das.route.impl.algms.TimeBasedSpanUtil.java", "BodyUseAPI": ["net.jplugin.core.das.route.impl.algms.TimeBasedSpanUtil.convetToLoalDate(net.jplugin.core.das.route.api.ITsAlgorithm.ValueType,java.lang.Object)"], "Fixed commit": "582321563f1c718745c8bce998ab9e9e9115f8bd", "Url": "https://api.github.com/repos/sunlet/jplugin", "Date": "2018-01-05T02:19:53Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iDs.isEmpty()) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1347/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.evekit.EveKitLocationsGetter.java", "BodyUseAPI": [], "Fixed commit": "068f2d3532923bedf16c103ab7a944d9a1da48f8", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2018-09-18T17:57:03Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cache.get(id)) != null) return cache.get(id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/160/buggy-version/src.main.java.org.magic.api.providers.impl.MagicTheGatheringIOProvider.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.magic.api.beans.MagicEdition>.get(java.lang.String)"], "Fixed commit": "3f045f93207d0119bb71f12d7f59283654f4052a", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-02-03T08:37:26Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((concatenation.getLeftOperand()) == expression) { candidate = concatenation.getRightOperand(); }else if (grandParent instanceof com.jetbrains.php.lang.psi.elements.ConcatenationExpression) { candidate = ((com.jetbrains.php.lang.psi.elements.ConcatenationExpression) (grandParent)).getRightOperand(); }else { candidate = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4411/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.MissingDirectorySeparatorInspector.java", "BodyUseAPI": ["com.jetbrains.php.lang.psi.elements.ConcatenationExpression.getRightOperand()"], "Fixed commit": "ee638f160aae4fa6a19a60bb28e6b540594d4d9a", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2018-04-06T18:14:51Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (counter > 0) job.append(\", \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/236/buggy-version/app.src.main.java.com.salmanitb.alumnisalman.fragment.RegistrationJobFragment.java", "BodyUseAPI": [], "Fixed commit": "f23fbf735aa66a466eb6882ea6927567bd9e7da4", "Url": "https://api.github.com/repos/fadhilimamk/salman-android", "Date": "2018-04-15T09:50:30Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status == (OpenCLLib.CL_DEVICE_NOT_FOUND)) { java.lang.System.out.println(((\"OpenCL::getGpus no device found on plateforms[\" + i) + \"]\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5464/buggy-version/src.com.sheepit.client.hardware.gpu.opencl.OpenCL.java", "BodyUseAPI": [], "Fixed commit": "21ed95adaf3c3927208ca75ffb7ddfdc2e220ff4", "Url": "https://api.github.com/repos/laurent-clouet/sheepit-client", "Date": "2018-08-08T15:41:44Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item.isVisible()) { if (item == (this.selectedItem)) { this.selectedItem.renderButtons(laptop, mc, (x + currentX), y, mouseX, mouseY, windowActive, partialTicks); } currentX += (item.getWidth()) + (this.itemPadding); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3791/buggy-version/src.main.java.com.ocelot.mod.application.component.MenuBar.java", "BodyUseAPI": ["com.ocelot.mod.application.component.MenuBarItem.getWidth()"], "Fixed commit": "77525b677714a8d5c35bac924380a64ee9de26d6", "Url": "https://api.github.com/repos/Ocelot5836/ModelCreatorApp", "Date": "2018-08-02T04:29:15Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hisp.dhis.render.RenderService.fromJson(request.getInputStream(),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((user.getWhatsApp()) != null) && (!(org.hisp.dhis.system.util.ValidationUtils.validateWhatsapp(user.getWhatsApp())))) { throw new org.hisp.dhis.dxf2.webmessage.WebMessageException(org.hisp.dhis.dxf2.webmessage.WebMessageUtils.conflict(((\"Invalid format for WhatsApp value '\" + (user.getWhatsApp())) + \"'\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9572/buggy-version/dhis-2.dhis-web.dhis-web-api.src.main.java.org.hisp.dhis.webapi.controller.user.MeController.java", "BodyUseAPI": ["org.hisp.dhis.dxf2.webmessage.WebMessageUtils.conflict(((\"Invalid format for WhatsApp value '\" + (user.getWhatsApp())) + \"'\"))", "org.hisp.dhis.user.User.getWhatsApp()"], "Fixed commit": "bf1c4645e5a00e298b8fe61955a983b5d1c3f012", "Url": "https://api.github.com/repos/hispindia/dhis2-Core", "Date": "2018-10-04T08:17:40Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (counter != 0) { java.lang.System.out.print(Message.CANNOT_HAVE_INPUT.with_parameter(\"cat\")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/913/buggy-version/src.cs131.pa1.filter.sequential.SequentialCommandBuilder.java", "BodyUseAPI": [], "Fixed commit": "66d4abd5d6e3237698d1ecb0dc08041e2a933ea6", "Url": "https://api.github.com/repos/bibas28/131A_CommandLine", "Date": "2018-10-01T02:32:23Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fileTmp.exists()) { io.antmedia.muxer.Mp4Muxer.logger.error(\"File existssss {}\", fileTmp.getAbsolutePath()); }else { io.antmedia.muxer.Mp4Muxer.logger.error(\"File not existssss {}\", fileTmp.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6886/buggy-version/src.main.java.io.antmedia.muxer.Mp4Muxer.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,java.lang.String)", "org.slf4j.Logger.error(java.lang.String,java.lang.String)", "java.io.File.getAbsolutePath()", "java.io.File.getAbsolutePath()"], "Fixed commit": "3a6cc97a38b91f78906e8b6e6c363159fb370f5c", "Url": "https://api.github.com/repos/ant-media/Ant-Media-Server-Common", "Date": "2018-06-11T08:36:15Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.volume.candle.ticker.tools.CandleDataParse.parseFloat(java.lang.String)", "java.util.Map<java.lang.String, com.volume.candle.ticker.bean.CandleBean>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((bean.low) > priceF) bean.low = priceF;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3484/buggy-version/app.src.main.java.com.volume.candle.ticker.tools.CandleDataParse.java", "BodyUseAPI": [], "Fixed commit": "5f327b99f304688665712aca6c3165594ac073c4", "Url": "https://api.github.com/repos/PATHngping/canvolclient", "Date": "2018-10-31T08:15:37Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(price))) { float priceF = parseFloat(price); if (priceF > 0) { b = true; if ((bean.close) != priceF) bean.close = priceF; if ((bean.high) < priceF) bean.high = priceF; if ((bean.low) > priceF) bean.low = priceF; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3484/buggy-version/app.src.main.java.com.volume.candle.ticker.tools.CandleDataParse.java", "BodyUseAPI": ["com.volume.candle.ticker.tools.CandleDataParse.parseFloat(java.lang.String)"], "Fixed commit": "5f327b99f304688665712aca6c3165594ac073c4", "Url": "https://api.github.com/repos/PATHngping/canvolclient", "Date": "2018-10-31T08:15:37Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.volume.candle.ticker.bean.CandleBean>.get(java.lang.String)", "com.volume.candle.ticker.tools.CandleDataParse.parseFloat(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((bean.close) != priceF) bean.close = priceF;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3484/buggy-version/app.src.main.java.com.volume.candle.ticker.tools.CandleDataParse.java", "BodyUseAPI": [], "Fixed commit": "5f327b99f304688665712aca6c3165594ac073c4", "Url": "https://api.github.com/repos/PATHngping/canvolclient", "Date": "2018-10-31T08:15:37Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lhsJson == null) || (rhsJson == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7740/buggy-version/stdlib.ballerina-builtin.src.main.java.org.ballerinalang.nativeimpl.reflect.Equals.java", "BodyUseAPI": [], "Fixed commit": "0da1ecc878244a946d24e86135f8adb24d932a57", "Url": "https://api.github.com/repos/yasassri/ballerina", "Date": "2018-04-12T02:27:39Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lhsJson == null) && (rhsJson == null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7740/buggy-version/stdlib.ballerina-builtin.src.main.java.org.ballerinalang.nativeimpl.reflect.Equals.java", "BodyUseAPI": [], "Fixed commit": "0da1ecc878244a946d24e86135f8adb24d932a57", "Url": "https://api.github.com/repos/yasassri/ballerina", "Date": "2018-04-12T02:27:39Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.pulsar.functions.worker.rest.api.FunctionsImpl.isNotBlank(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isPkgUrlProvided) { packageLocationMetaDataBuilder.setOriginalFileName(fileDetail.getFileName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/671/buggy-version/pulsar-functions.worker.src.main.java.org.apache.pulsar.functions.worker.rest.api.FunctionsImpl.java", "BodyUseAPI": [], "Fixed commit": "ab9d4f17490e0d24fb76cf8ca21c4d2124329e23", "Url": "https://api.github.com/repos/srkukarni/incubator-pulsar", "Date": "2018-09-15T14:46:26Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.pulsar.functions.worker.rest.api.FunctionsImpl.isNotBlank(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isPkgUrlProvided) { packageLocationMetaDataBuilder.setOriginalFileName(fileDetail.getFileName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/671/buggy-version/pulsar-functions.worker.src.main.java.org.apache.pulsar.functions.worker.rest.api.FunctionsImpl.java", "BodyUseAPI": [], "Fixed commit": "ab9d4f17490e0d24fb76cf8ca21c4d2124329e23", "Url": "https://api.github.com/repos/srkukarni/incubator-pulsar", "Date": "2018-09-15T14:46:26Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eme.model.datatypes.ExtractedDataType.getFullArrayType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (model.contains(dataTypeName)) { addTypeParameters(eDataType, model.getType(dataTypeName)); }else if (!(extractedDataType.getGenericArguments().isEmpty())) { eme.generator.EDataTypeGenerator.logger.error((\"Can not resolve type parameters for \" + (extractedDataType.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2319/buggy-version/src.main.java.eme.generator.EDataTypeGenerator.java", "BodyUseAPI": ["eme.generator.EDataTypeGenerator.addTypeParameters(org.eclipse.emf.ecore.EDataType,model.getType(dataTypeName))", "eme.model.IntermediateModel.getType(java.lang.String)"], "Fixed commit": "d385d2a284852dfc3e87d0340ff7ae4e6a611c6b", "Url": "https://api.github.com/repos/Ecorification/EcoreMetamodelExtraction", "Date": "2018-07-31T12:04:59Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((u.courses) != null) { java.util.ArrayList<java.lang.String> ids = new java.util.ArrayList(u.courses.keySet()); com.mina.collegehelper.model.DatabaseHelper.getCoursesByIds(ids, callback); }else { com.mina.collegehelper.model.DatabaseHelper.getCoursesByIds(new java.util.ArrayList<java.lang.String>(), callback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1134/buggy-version/app.src.main.java.com.mina.collegehelper.model.DatabaseHelper.java", "BodyUseAPI": ["u.courses.keySet()"], "Fixed commit": "8742aa0fa1529b826d1794d72ff719e7f3dc6026", "Url": "https://api.github.com/repos/menasameh/collegeHelper", "Date": "2018-03-10T13:42:30Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t instanceof byte[]) { return ((byte[]) (t)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7266/buggy-version/dorado-core.src.main.java.mobi.f2time.dorado.rest.ObjectSerializer.java", "BodyUseAPI": [], "Fixed commit": "c3be773d477a322c87d7e068b70acff3a836b7ff", "Url": "https://api.github.com/repos/javagossip/dorado", "Date": "2018-10-30T05:08:41Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t instanceof java.io.InputStream) { return mobi.f2time.dorado.rest.util.IOUtils.readBytes(((java.io.InputStream) (t))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7266/buggy-version/dorado-core.src.main.java.mobi.f2time.dorado.rest.ObjectSerializer.java", "BodyUseAPI": [], "Fixed commit": "c3be773d477a322c87d7e068b70acff3a836b7ff", "Url": "https://api.github.com/repos/javagossip/dorado", "Date": "2018-10-30T05:08:41Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.getSelectedRow()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (row >= 0) table.editCellAt(row, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7987/buggy-version/src.main.java.org.mastodon.revised.model.tag.TagTable.java", "BodyUseAPI": ["javax.swing.JTable.editCellAt(int,int)"], "Fixed commit": "84a3599a6b6053b8417fd18736726567589dbdde", "Url": "https://api.github.com/repos/fiji/TrackMate3", "Date": "2018-01-17T13:34:58Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (path.toFile().exists()) { java.nio.file.Files.delete(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6522/buggy-version/src.main.java.uk.gov.cshr.atsadaptor.service.util.PathUtil.java", "BodyUseAPI": ["java.nio.file.Files.delete(java.nio.file.Path)"], "Fixed commit": "05e11f0e774f5be4d91c49701146890a8cd715d2", "Url": "https://api.github.com/repos/Civil-Service-Human-Resources/cshr-ats-adaptor", "Date": "2018-04-24T13:33:58Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) profilePicture.setImageBitmap(ch.epfl.sweng.thegramginers.ProfileFragment.getCroppedAndRoundedBitmap(android.graphics.BitmapFactory.decodeResource(getActivity().getResources(), R.drawable.ic_profile)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1887/buggy-version/app.src.main.java.ch.epfl.sweng.thegramginers.ProfileFragment.java", "BodyUseAPI": [], "Fixed commit": "5ffd0ce8d9ec13e3708130d520555e8ad6447ec4", "Url": "https://api.github.com/repos/burgercode/TheGramginers", "Date": "2018-10-25T18:17:02Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) > 19) { md.putRating(MediaMetadataCompat.METADATA_KEY_RATING, rating); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9313/buggy-version/android.src.main.java.com.tanguyantoine.react.MusicControlModule.java", "BodyUseAPI": [], "Fixed commit": "f6dc274ebe8bddf63d99ccc9d751c5bea84ddd99", "Url": "https://api.github.com/repos/abrown1982/react-native-music-control", "Date": "2018-01-10T20:54:10Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (date.before(startDate)) { if (setAvailability(date, startDate)) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6478/buggy-version/app.src.main.java.tech.cloverfield.kdgplanner.Objects.Classroom.java", "BodyUseAPI": ["tech.cloverfield.kdgplanner.Objects.Classroom.setAvailability(java.util.Date,java.util.Date)"], "Fixed commit": "7bb11d5c1ae05a0e9558afd0140c8831fe787d97", "Url": "https://api.github.com/repos/MarnixWyns/KDGPlanner", "Date": "2018-10-24T12:39:35Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uurLijst.get(i).getStart()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (date.before(startDate)) { if (setAvailability(date, startDate)) return true; }else if (date.after(endDate)) { startDate = uurLijst.get((i + 1)).getStart(); if (date.before(startDate)) { if (setAvailability(date, startDate)) return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6478/buggy-version/app.src.main.java.tech.cloverfield.kdgplanner.Objects.Classroom.java", "BodyUseAPI": ["tech.cloverfield.kdgplanner.Objects.Classroom.setAvailability(java.util.Date,java.util.Date)", "java.util.Date.after(java.util.Date)", "java.util.Date.before(java.util.Date)", "tech.cloverfield.kdgplanner.Objects.Classroom.setAvailability(java.util.Date,java.util.Date)"], "Fixed commit": "7bb11d5c1ae05a0e9558afd0140c8831fe787d97", "Url": "https://api.github.com/repos/MarnixWyns/KDGPlanner", "Date": "2018-10-24T12:39:35Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uurLijst.get(i).getStart()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (date.before(startDate)) { if (setAvailability(date, startDate)) return true; }else if (date.after(endDate)) { if (setAvailability(date, null)) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6478/buggy-version/app.src.main.java.tech.cloverfield.kdgplanner.Objects.Classroom.java", "BodyUseAPI": ["tech.cloverfield.kdgplanner.Objects.Classroom.setAvailability(java.util.Date,java.util.Date)", "tech.cloverfield.kdgplanner.Objects.Classroom.setAvailability(java.util.Date,<nulltype>)", "java.util.Date.after(java.util.Date)"], "Fixed commit": "7bb11d5c1ae05a0e9558afd0140c8831fe787d97", "Url": "https://api.github.com/repos/MarnixWyns/KDGPlanner", "Date": "2018-10-24T12:39:35Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (acceptanceDate == \"\") { acceptanceDate = \"2000-01-01\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5679/buggy-version/src.main.java.pl.coderslab.Order.OrderServletSaveChanges.java", "BodyUseAPI": [], "Fixed commit": "d157f867a9b83fc305a05c91c3aacdaa0527c16b", "Url": "https://api.github.com/repos/JaChudy/Warsztat_Samochodowy", "Date": "2018-08-03T15:50:17Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (startWorkDate == \"\") { startWorkDate = \"2000-01-01\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5679/buggy-version/src.main.java.pl.coderslab.Order.OrderServletSaveChanges.java", "BodyUseAPI": [], "Fixed commit": "d157f867a9b83fc305a05c91c3aacdaa0527c16b", "Url": "https://api.github.com/repos/JaChudy/Warsztat_Samochodowy", "Date": "2018-08-03T15:50:17Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (estimateStartDate == \"\") { estimateStartDate = \"2000-01-01\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5679/buggy-version/src.main.java.pl.coderslab.Order.OrderServletSaveChanges.java", "BodyUseAPI": [], "Fixed commit": "d157f867a9b83fc305a05c91c3aacdaa0527c16b", "Url": "https://api.github.com/repos/JaChudy/Warsztat_Samochodowy", "Date": "2018-08-03T15:50:17Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.config.containsKey(\"format\")) { format = ((java.lang.String) (this.config.get(\"format\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1282/buggy-version/src.main.java.com.sina.bip.hangout.outputs.Clickhouse.java", "BodyUseAPI": ["this.config.get(java.lang.String)"], "Fixed commit": "aea71fd23af74cdb62f83781dc318064adeb4e87", "Url": "https://api.github.com/repos/RickyHuo/hangout-output-clickhouse", "Date": "2018-07-02T09:28:34Z"},
{"Line": "=>1204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["subscriber.getView().getParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (viewGroup != null) { viewGroup.removeView(subscriber.getView()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7421/buggy-version/src.android.OpenTokActivity.java", "BodyUseAPI": ["android.view.ViewGroup.removeView(subscriber.getView())"], "Fixed commit": "15771e61699106e10cb3c964241da63754f53a6d", "Url": "https://api.github.com/repos/fitbasedev/cordova-plugin-tokboxmulti", "Date": "2018-03-23T04:14:17Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeSpent > timeLeft) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/535/buggy-version/clients.src.main.java.org.apache.kafka.clients.consumer.internals.Fetcher.java", "BodyUseAPI": [], "Fixed commit": "bb803cf2440c93973f7beabb1f35af3e699914a2", "Url": "https://api.github.com/repos/ConcurrencyPractitioner/kafka", "Date": "2018-03-03T19:33:47Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.epam.andrei_sterkhov.online_shop.service.BasketService.getItemCount(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (itemCount.isPresent()) { amount = itemCount.get().intValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4847/buggy-version/src.main.java.com.epam.andrei_sterkhov.online_shop.controller.HomeController.java", "BodyUseAPI": ["java.math.BigInteger.intValue()", "java.util.Optional<java.math.BigInteger>.get()"], "Fixed commit": "f1422ca08be2c294a2edc132097a2e37ffd3a3b0", "Url": "https://api.github.com/repos/bess410/online-shop", "Date": "2018-08-06T05:55:00Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (First == false) Str.append(\"\\n\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1136/buggy-version/src.tilda.generation.postgres9.Sql.java", "BodyUseAPI": [], "Fixed commit": "96de5a09a95192985c0b871ef771c5626644aed6", "Url": "https://api.github.com/repos/CapsicoHealth/Tilda", "Date": "2018-02-02T01:04:45Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (judge.hasOptions(this.board, this.status.getCurrent())) { if (judge.isValidChoice(this.board, move, this.status.getCurrent())) { judge.turnTiles(this.board, move, this.status.getCurrent()); }else { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6594/buggy-version/src.Game.Game.java", "BodyUseAPI": ["Game.GameLogic.isValidChoice(Game.Board,Game.Coordinates,this.status.getCurrent())", "Game.GameStatus.getCurrent()", "Game.GameStatus.getCurrent()", "Game.GameLogic.turnTiles(Game.Board,Game.Coordinates,this.status.getCurrent())"], "Fixed commit": "d88972c783b33f56da10b931c13677a9e3950274", "Url": "https://api.github.com/repos/SimSteve/Reversi", "Date": "2018-01-15T15:07:26Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ekstep.genieservices.GenieService.getAsyncService()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((genieAsyncService != null) && ((genieAsyncService.getTelemetryService()) != null)) { genieAsyncService.getTelemetryService().saveTelemetry(impression, new org.ekstep.genieservices.commons.IResponseHandler<java.lang.Void>() { @java.lang.Override public void onSuccess(org.ekstep.genieservices.commons.bean.GenieResponse<java.lang.Void> genieResponse) { } @java.lang.Override public void onError(org.ekstep.genieservices.commons.bean.GenieResponse<java.lang.Void> genieResponse) { } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2764/buggy-version/src.android.org.sunbird.SplashScreen.java", "BodyUseAPI": ["org.sunbird.GenieAsyncService.getTelemetryService()", "genieAsyncService.getTelemetryService().saveTelemetry(org.ekstep.genieservices.commons.bean.telemetry.Impression,org.ekstep.genieservices.commons.IResponseHandler<java.lang.Void>)"], "Fixed commit": "f45071f7ee0d50083e92239bdbb8645b706f17e0", "Url": "https://api.github.com/repos/project-sunbird/cordova-plugin-sunbirdsplash", "Date": "2018-06-13T11:17:44Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) instanceof com.sahara.melanie.fortify_android.community.CommunityActivity) { if ((((com.sahara.melanie.fortify_android.community.CommunityActivity) (getActivity())).getFilters()) != null) { ((com.sahara.melanie.fortify_android.community.CommunityActivity) (getActivity())).getFilters().setVisibility(visibility); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7345/buggy-version/app.src.main.java.com.sahara.melanie.fortify_android.community.post.PostFragment.java", "BodyUseAPI": [], "Fixed commit": "d58053ffd9ef49921aa37f2ef2ef4628de671d31", "Url": "https://api.github.com/repos/impactcollective/fortify_android", "Date": "2018-05-16T17:18:36Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.opencron.common.util.CommonUtils.notEmpty(this.passphrase)) { try { byte[] decodedData = org.opencron.common.util.RSAUtils.decryptByPrivateKey(this.passphrase.getBytes(), OpencronTools.Auth.getPrivateKey()); return new java.lang.String(decodedData); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/97/buggy-version/opencron-server.src.main.java.org.opencron.server.domain.Terminal.java", "BodyUseAPI": ["java.lang.String.getBytes()", "org.opencron.common.util.RSAUtils.decryptByPrivateKey(byte[],OpencronTools.Auth.getPrivateKey())"], "Fixed commit": "ccfc11dd2fc1cd97bcd173fb82e6f9e7bf790e06", "Url": "https://api.github.com/repos/wolfboys/JobX-dev", "Date": "2018-02-03T15:26:36Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (GetVideo(index).has(\"algorithm\")) fn = GetVideo(index).getString(\"algorithm\"); else fn = GetVideo(index).getString(\"localName\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1155/buggy-version/bb.src.main.java.com.richardmcdougall.bb.DownloadManager.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "com.richardmcdougall.bb.DownloadManager.GetVideo(int)", "com.richardmcdougall.bb.DownloadManager.GetVideo(int)"], "Fixed commit": "0b6ad8d77004ff3363f3707865ae5812ba1a47fd", "Url": "https://api.github.com/repos/rjmcdougall/BB", "Date": "2018-04-01T03:29:13Z"},
{"Line": "=>1365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.hasMutGenLimit()) { out.print((\" //mutGenLimit \" + (p.getMutGenLimit()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/92/buggy-version/src.mujava.op.util.MutantCodeWriter.java", "BodyUseAPI": ["java.io.PrintWriter.print((\" //mutGenLimit \" + (p.getMutGenLimit())))", "mujava.op.util.ThrowStatement.getMutGenLimit()"], "Fixed commit": "77afe708f3738c5ab400ff919f0a0fe4d272351a", "Url": "https://api.github.com/repos/saiema/MuJava", "Date": "2018-08-06T22:22:36Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < 0) index = index + (size());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/523/buggy-version/src.CircularList.java", "BodyUseAPI": [], "Fixed commit": "f6558b6f121085e256217519584a9367dd29095a", "Url": "https://api.github.com/repos/kushagra12/PP-Bootcamp-08", "Date": "2018-08-09T08:44:30Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((childCount) < (childColumnBinary.size())) { childCount = childColumnBinary.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7017/buggy-version/src.common.src.main.java.jp.co.yahoo.dataplatform.mds.block.ColumnBinaryTree.java", "BodyUseAPI": ["jp.co.yahoo.dataplatform.mds.block.ColumnBinaryTree.size()"], "Fixed commit": "bd9433c5b7bd8a88027e0fd287237cb3acf5add9", "Url": "https://api.github.com/repos/koijima/multiple-dimension-spread", "Date": "2018-01-17T03:34:20Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentBlock) != null) { currentBlockName.set(((currentBlock.getSection()) + (currentBlock.getNumber()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2580/buggy-version/TrainModel.src.trainmodel.model.TrainModel.java", "BodyUseAPI": [], "Fixed commit": "a5652607568051dde80da23d2b413c4989d7ff82", "Url": "https://api.github.com/repos/michaelplazek/on-track", "Date": "2018-04-12T17:34:42Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (from == to) { throw new com.capgemini.chess.algorithms.implementation.exceptions.EqualFieldCoordinatesException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5923/buggy-version/ChessAlgorithms.src.main.java.com.capgemini.chess.algorithms.implementation.Validation.java", "BodyUseAPI": [], "Fixed commit": "797fa012c924846d926651e0a1d9ed948aaa14b7", "Url": "https://api.github.com/repos/michustarter/StarterKitChess", "Date": "2018-07-18T18:32:38Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((wantedPiece != null) && ((wantedPiece.getColor()) != nextMoveColor)) { otherFileds.add(verified); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5923/buggy-version/ChessAlgorithms.src.main.java.com.capgemini.chess.algorithms.implementation.BoardManager.java", "BodyUseAPI": [], "Fixed commit": "797fa012c924846d926651e0a1d9ed948aaa14b7", "Url": "https://api.github.com/repos/michustarter/StarterKitChess", "Date": "2018-07-18T18:32:38Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o == (this)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3268/buggy-version/src.swise.objects.network.ListEdge.java", "BodyUseAPI": [], "Fixed commit": "43898ed98e321ca27eeffc2f9a63e7a26768cef6", "Url": "https://api.github.com/repos/swise5/swiselib", "Date": "2018-04-24T14:19:19Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model.getEntity(id)) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5699/buggy-version/kingslayer.src.game.message.toServer.GoDirectionRequest.java", "BodyUseAPI": [], "Fixed commit": "378c2dff19c8814dc3f1b2ded28f705f113de80a", "Url": "https://api.github.com/repos/460Game/King-Slayer", "Date": "2018-03-28T06:49:24Z"},
{"Line": "=>4100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((astnode2.getType()) == (org.sbml.jsbml.ASTNode.Type.REAL)) { ((org.sbml.jsbml.math.ASTCnRealNode) (astnode2)).setReal(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9197/buggy-version/core.src.org.sbml.jsbml.ASTNode.java", "BodyUseAPI": [], "Fixed commit": "b0eef4019ab48a514117879932d7d9231960456d", "Url": "https://api.github.com/repos/sbmlteam/jsbml", "Date": "2015-04-23T17:33:46Z"},
{"Line": "=>2818", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInteger()) { return ((org.sbml.jsbml.math.ASTCnIntegerNode) (astnode2)).getNumber(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9197/buggy-version/core.src.org.sbml.jsbml.ASTNode.java", "BodyUseAPI": [], "Fixed commit": "b0eef4019ab48a514117879932d7d9231960456d", "Url": "https://api.github.com/repos/sbmlteam/jsbml", "Date": "2015-04-23T17:33:46Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.salesforce.storm.spout.dynamic.VirtualSpoutIdentifier, java.util.concurrent.BlockingQueue<com.salesforce.storm.spout.dynamic.Message>>.get(com.salesforce.storm.spout.dynamic.VirtualSpoutIdentifier)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (nextQueue == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4125/buggy-version/src.main.java.com.salesforce.storm.spout.dynamic.buffer.RatioMessageBuffer.java", "BodyUseAPI": [], "Fixed commit": "57271fda13877c9becccd8e58f7d813b663ed246", "Url": "https://api.github.com/repos/salesforce/storm-dynamic-spout", "Date": "2018-01-26T02:24:41Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.salesforce.storm.spout.dynamic.buffer.RatioMessageBuffer.NextVirtualSpoutIdGenerator.nextVirtualSpoutId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (nextIndentifier == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4125/buggy-version/src.main.java.com.salesforce.storm.spout.dynamic.buffer.RatioMessageBuffer.java", "BodyUseAPI": [], "Fixed commit": "57271fda13877c9becccd8e58f7d813b663ed246", "Url": "https://api.github.com/repos/salesforce/storm-dynamic-spout", "Date": "2018-01-26T02:24:41Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cursor.isNull(cursor.getColumnIndex(ActivityDiaryContract.Diary.END)))) { mCurrentNote = \"\"; mCurrentDiaryUri = null; mCurrentActivityStartTime.setTime(cursor.getLong(cursor.getColumnIndex(ActivityDiaryContract.Diary.END))); }else if ((mCurrentActivity) == null) { mCurrentActivity = activityWithId(cursor.getInt(cursor.getColumnIndex(ActivityDiaryContract.Diary.ACT_ID))); mCurrentActivityStartTime.setTime(cursor.getLong(cursor.getColumnIndex(ActivityDiaryContract.Diary.START))); mCurrentNote = cursor.getString(cursor.getColumnIndex(ActivityDiaryContract.Diary.NOTE)); mCurrentDiaryUri = android.net.Uri.withAppendedPath(ActivityDiaryContract.Diary.CONTENT_URI, java.lang.Long.toString(cursor.getLong(cursor.getColumnIndex(ActivityDiaryContract.Diary._ID)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8054/buggy-version/app.src.main.java.de.rampro.activitydiary.helpers.ActivityHelper.java", "BodyUseAPI": ["android.database.Cursor.getLong(cursor.getColumnIndex(ActivityDiaryContract.Diary._ID))", "android.database.Cursor.getColumnIndex(ActivityDiaryContract.Diary.END)", "java.lang.Long.toString(cursor.getLong(cursor.getColumnIndex(ActivityDiaryContract.Diary._ID)))", "android.database.Cursor.getColumnIndex(ActivityDiaryContract.Diary._ID)", "de.rampro.activitydiary.helpers.ActivityHelper.activityWithId(cursor.getInt(cursor.getColumnIndex(ActivityDiaryContract.Diary.ACT_ID)))", "java.util.Date.setTime(cursor.getLong(cursor.getColumnIndex(ActivityDiaryContract.Diary.END)))", "android.database.Cursor.getLong(cursor.getColumnIndex(ActivityDiaryContract.Diary.START))", "android.database.Cursor.getColumnIndex(ActivityDiaryContract.Diary.START)", "java.util.Date.setTime(cursor.getLong(cursor.getColumnIndex(ActivityDiaryContract.Diary.START)))", "android.database.Cursor.getColumnIndex(ActivityDiaryContract.Diary.ACT_ID)", "android.database.Cursor.getInt(cursor.getColumnIndex(ActivityDiaryContract.Diary.ACT_ID))", "android.database.Cursor.getColumnIndex(ActivityDiaryContract.Diary.NOTE)", "android.net.Uri.withAppendedPath(ActivityDiaryContract.Diary.CONTENT_URI,java.lang.String)", "android.database.Cursor.getString(cursor.getColumnIndex(ActivityDiaryContract.Diary.NOTE))", "android.database.Cursor.getLong(cursor.getColumnIndex(ActivityDiaryContract.Diary.END))"], "Fixed commit": "70685e1fb5592b15d279cc22e1a3e3af01f90cbe", "Url": "https://api.github.com/repos/ramack/ActivityDiary", "Date": "2018-06-08T20:52:43Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context.hasResult()) || (context.hasError())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8832/buggy-version/structr-modules.structr-api-builder-module.src.main.java.org.structr.flow.engine.ForEachHandler.java", "BodyUseAPI": [], "Fixed commit": "5732d3377e54f000e273ad750d1cb7cd5eac233c", "Url": "https://api.github.com/repos/ckramp/structr", "Date": "2018-09-03T10:18:22Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (JSONmessage.getBoolean(\"isOpened\")) { apps.get(JSONmessage.getLong(\"appID\")).openComponent(JSONmessage.getLong(\"componentID\")); }else { apps.get(JSONmessage.getLong(\"appID\")).closeComponent(JSONmessage.getLong(\"componentID\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5276/buggy-version/src.main.java.net.explorviz.extension.vr.main.MultiUserMode.java", "BodyUseAPI": ["org.json.JSONObject.getLong(java.lang.String)", "apps.get(JSONmessage.getLong(\"appID\")).closeComponent(JSONmessage.getLong(\"componentID\"))", "org.json.JSONObject.getLong(java.lang.String)", "java.util.HashMap<java.lang.Long, net.explorviz.extension.vr.model.ApplicationModel>.get(JSONmessage.getLong(\"appID\"))", "org.json.JSONObject.getLong(java.lang.String)", "apps.get(JSONmessage.getLong(\"appID\")).openComponent(JSONmessage.getLong(\"componentID\"))", "java.util.HashMap<java.lang.Long, net.explorviz.extension.vr.model.ApplicationModel>.get(JSONmessage.getLong(\"appID\"))", "org.json.JSONObject.getLong(java.lang.String)"], "Fixed commit": "7a68b5b5e43cb27a2b24bb5a78b45e6d0f859e2a", "Url": "https://api.github.com/repos/ExplorViz/explorviz-backend-extension-vr", "Date": "2018-10-02T10:59:25Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wrld.widgets.searchbox.view.MenuViewAdapter.getGroup(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.wrld.widgets.searchbox.model.MenuGroup.class.isInstance(expandableListViewGroup)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/477/buggy-version/widgets.src.main.java.com.wrld.widgets.searchbox.view.MenuViewController.java", "BodyUseAPI": [], "Fixed commit": "278f6a591947adb757896c52db6a7a614541e517", "Url": "https://api.github.com/repos/wrld3d/android-api", "Date": "2018-02-15T17:59:02Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (what == (cn.shomes.tfblue.util.http.PlatformDefine.MSG_GET_TRASH_TYPE)) { cn.shomes.tfblue.util.ToastUtils.showOnceLong(activity, \"\u767b\u5f55\u5931\u8d25,\u8bf7\u91cd\u8bd5\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3210/buggy-version/app.src.main.java.cn.shomes.tfblue.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "42f3d3b83143673e055325dfa83defa5abc7dc57", "Url": "https://api.github.com/repos/kayoxu/TFBlue", "Date": "2018-10-24T07:19:52Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (address == null) { throw new java.lang.IllegalArgumentException(\"Address may not be null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1909/buggy-version/src.main.java.com.source.http.matcher.InetAddressMatcher.java", "BodyUseAPI": [], "Fixed commit": "fe2e118c3467a12d58eb18284ef9e4d5d094b3d9", "Url": "https://api.github.com/repos/jrhenderson1988/source", "Date": "2018-08-18T22:39:33Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((decoder) != null) { java.lang.Object tmp = decoder.onDecode(dfRsp); if (tmp != null) { msgWrap = tmp; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7956/buggy-version/src.main.java.fun.lib.actor.core.DFHttpCliHandler.java", "BodyUseAPI": [], "Fixed commit": "d3ae5c72fafc54ec4877592a2be8545d4a3bbb70", "Url": "https://api.github.com/repos/lostsky3000/dfactor", "Date": "2018-04-25T11:46:36Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7901/buggy-version/lib.src.main.java.site.binghai.lib.utils.TimeTools.java", "BodyUseAPI": [], "Fixed commit": "1240caabecde24fe5dc84c6c560eb1d07dd796aa", "Url": "https://api.github.com/repos/IceSeaOnly/sdykt", "Date": "2018-09-11T12:27:13Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((x < 1) || (x > 10)) || ((y < 'A') || (y > 'J'))) { cs361.battleships.models.Result res = new cs361.battleships.models.Result(); res.setResult(cs361.battleships.models.INVALID); res.setShip(null); cs361.battleships.models.Square sq = new cs361.battleships.models.Square(0, 'x'); res.setLocation(sq); return res; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9188/buggy-version/src.main.java.cs361.battleships.models.Board.java", "BodyUseAPI": [], "Fixed commit": "76536458b4ceb08e924640cd06d7dc75ff798b79", "Url": "https://api.github.com/repos/cs361fall2018/project-team-7", "Date": "2018-10-12T22:44:41Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!keepValidating) { throw new mx.nic.lab.rpki.db.exception.ValidationException(validationErrors); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6947/buggy-version/src.main.java.mx.nic.lab.rpki.sqlite.object.SlurmPrefixDbObject.java", "BodyUseAPI": [], "Fixed commit": "3d16e4acbb551ce5f6ce4289f973557c8004b47b", "Url": "https://api.github.com/repos/pcarana/rpki-validator-sqlite-prov", "Date": "2018-10-04T13:09:35Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < 0) index = index + (size());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1070/buggy-version/runelite-client.src.main.java.net.runelite.client.plugins.raids.solver.RotationSolver.java", "BodyUseAPI": [], "Fixed commit": "6d5fea831a7f7cdda587f2b092184a0bdad2a901", "Url": "https://api.github.com/repos/Kamielvf/runelite", "Date": "2018-02-17T23:02:04Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1007/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "3939dbd0481d2e25f1a884a8b5b8d2d7a17038b2", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aion.zero.impl.config.CfgAion.getGenesis()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (genesis.getCumulativeDifficulty().equals(java.math.BigInteger.ZERO)) { genesis.setCumulativeDifficulty(genesis.getDifficultyBI()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6242/buggy-version/modAionImpl.src.org.aion.zero.impl.AionHub.java", "BodyUseAPI": ["org.aion.zero.impl.AionGenesis.setCumulativeDifficulty(genesis.getDifficultyBI())", "org.aion.zero.impl.AionGenesis.getDifficultyBI()"], "Fixed commit": "2eede3b3cce12a2526f43826ad9d0737118f7148", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-06-13T16:21:21Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bestBlock.getCumulativeDifficulty().equals(java.math.BigInteger.ZERO)) { bestBlock.setCumulativeDifficulty(this.repository.getBlockStore().getTotalDifficulty()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6242/buggy-version/modAionImpl.src.org.aion.zero.impl.AionHub.java", "BodyUseAPI": ["org.aion.zero.impl.types.AionBlock.setCumulativeDifficulty(this.repository.getBlockStore().getTotalDifficulty())"], "Fixed commit": "2eede3b3cce12a2526f43826ad9d0737118f7148", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-06-13T16:21:21Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((folderLevel) == (ch.ethz.scu.obit.microscopy.processors.data.MicroscopyProcessor.DATASET_LEVEL)) { isCompositeDataset = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4541/buggy-version/AnnotationToolMicroscopy.ch.ethz.scu.obit.microscopy.processors.data.MicroscopyProcessor.java", "BodyUseAPI": [], "Fixed commit": "2a081665a786c5c48c09e53355ef8a84e9adae27", "Url": "https://api.github.com/repos/aarpon/obit_annotation_tool", "Date": "2018-05-15T08:01:34Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["prykhodko.learnSpring.service.ShoppingService.getProduct(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (item == null) { item = new prykhodko.learnSpring.model.ShoppingItem(\"\", \"\", 0, 0.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7280/buggy-version/src.main.java.prykhodko.learnSpring.controller.ShoppingItemController.java", "BodyUseAPI": [], "Fixed commit": "5a9db776e8d4546d09123fc078eb3f7576027111", "Url": "https://api.github.com/repos/Marpryx/ShoppingList", "Date": "2018-10-03T04:18:34Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getId()) == 0) { shoppingService.addProduct(item); }else { shoppingService.updateProduct(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7280/buggy-version/src.main.java.prykhodko.learnSpring.controller.ShoppingItemController.java", "BodyUseAPI": ["prykhodko.learnSpring.service.ShoppingService.updateProduct(prykhodko.learnSpring.model.ShoppingItem)", "prykhodko.learnSpring.service.ShoppingService.addProduct(prykhodko.learnSpring.model.ShoppingItem)"], "Fixed commit": "5a9db776e8d4546d09123fc078eb3f7576027111", "Url": "https://api.github.com/repos/Marpryx/ShoppingList", "Date": "2018-10-03T04:18:34Z"},
{"Line": "=>886", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kthcorp.cmts.service.SchedTrigger.getMovietitle()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(\"\".equals(movietitle))) { com.kthcorp.cmts.service.JsonArray wordsSnsArray = wordsSnsArray = apiService.getSnsKeywords(movietitle); if (wordsSnsArray == null) wordsSnsArray = new com.kthcorp.cmts.service.JsonArray(); int rtws = insItemsTagsMetaFromWordsSns(wordsSnsArray, sc_id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5847/buggy-version/src.main.java.com.kthcorp.cmts.service.AnalyzeService.java", "BodyUseAPI": ["com.kthcorp.cmts.service.ApiService.getSnsKeywords(java.lang.String)"], "Fixed commit": "9d4bf676edd7b807a388512237a58ed024aaff45", "Url": "https://api.github.com/repos/swordKein/cmts", "Date": "2018-03-20T02:29:05Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (currentLocation != null) { if (!(currentLocation.equals(getResources().getString(R.string.location_current_location_label)))) { url = ((com.trevorwiebe.weather.utils.Utility.BASE_URL) + currentLocation) + \".json\"; }else { url = ((((com.trevorwiebe.weather.utils.Utility.BASE_URL) + latitude) + \",\") + longitude) + \".json\"; } }else { url = ((((com.trevorwiebe.weather.utils.Utility.BASE_URL) + latitude) + \",\") + longitude) + \".json\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6375/buggy-version/app.src.main.java.com.trevorwiebe.weather.activities.MainActivity.java", "BodyUseAPI": ["java.lang.String.equals(getResources().getString(R.string.location_current_location_label))"], "Fixed commit": "1072880ae47fb4e5818921a2f20d0444fe9de30a", "Url": "https://api.github.com/repos/trevorwiebe/Weather", "Date": "2018-03-18T01:28:34Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mIngestion) != null) { mIngestion.reopen(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5054/buggy-version/sdk.appcenter.src.main.java.com.microsoft.appcenter.channel.DefaultChannel.java", "BodyUseAPI": [], "Fixed commit": "f8d0b39b900384740ee577692bdd8d7ce2e1f6c6", "Url": "https://api.github.com/repos/Microsoft/AppCenter-SDK-Android", "Date": "2018-04-04T09:38:35Z"},
{"Line": "=>856", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.host.HostVO.getResourceState()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((resourceState == (com.cloud.resource.ResourceState.Disabled)) || (resourceState == (com.cloud.resource.ResourceState.Maintenance))) || (resourceState == (com.cloud.resource.ResourceState.ErrorInMaintenance))) { com.cloud.agent.manager.AgentManagerImpl.s_logger.info((((((hostShortDesc + \" has disconnected with event \") + event) + \", but is in Resource State of \") + resourceState) + \", so doing nothing\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5611/buggy-version/engine.orchestration.src.com.cloud.agent.manager.AgentManagerImpl.java", "BodyUseAPI": ["org.apache.log4j.Logger.info((((((hostShortDesc + \" has disconnected with event \") + event) + \",  but is in Resource State of \") + resourceState) + \", so doing nothing\"))"], "Fixed commit": "1c18872bbc024d98783c43a1b656282904f4e624", "Url": "https://api.github.com/repos/Slair1/cloudstack", "Date": "2018-03-02T05:32:50Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subWeight == null) { subWeight = new HelperClasses.TokenHelper.SubstitutionWeight() { @java.lang.Override public int getWeight(char a, char b) { return 2; } }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7408/buggy-version/src.HelperClasses.TokenHelper.java", "BodyUseAPI": [], "Fixed commit": "3afd99a4e4ee32b1a4ca33481cac2d4b1c736f4b", "Url": "https://api.github.com/repos/mr-m0nkey/NLP", "Date": "2018-08-25T16:05:10Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (pubKey != null) oUnionAccountValue.setPubKey(com.google.protobuf.ByteString.copyFrom(pubKey));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3703/buggy-version/src.main.java.org.brewchain.account.core.AccountHelper.java", "BodyUseAPI": ["com.google.protobuf.ByteString.copyFrom(byte[])", "AccountValue.Builder.setPubKey(com.google.protobuf.ByteString.copyFrom(pubKey))"], "Fixed commit": "e6f3965a7215025f4b0b78a217cff272f4962d92", "Url": "https://api.github.com/repos/CryptoWorldChain/account", "Date": "2018-05-25T10:39:52Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.axelor.inject.Beans.get(com.axelor.apps.contract.db.repo.ContractVersionRepository.class).copy(com.axelor.apps.contract.db.ContractVersion,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (nextVersion.getIsAutoEnableVersionOnRenew()) { versionService.ongoing(nextVersion, date); }else { versionService.waiting(nextVersion, date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6095/buggy-version/axelor-contract.src.main.java.com.axelor.apps.contract.service.ContractServiceImpl.java", "BodyUseAPI": ["com.axelor.apps.contract.service.ContractVersionService.ongoing(com.axelor.apps.contract.db.ContractVersion,java.time.LocalDate)", "com.axelor.apps.contract.service.ContractVersionService.waiting(com.axelor.apps.contract.db.ContractVersion,java.time.LocalDate)"], "Fixed commit": "81236db961db395949a5123961eaaa1168f47a66", "Url": "https://api.github.com/repos/ego-axelor/axelor-business-suite", "Date": "2018-03-27T15:02:41Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.axelor.inject.Beans.get(com.axelor.apps.contract.db.repo.ContractVersionRepository.class).copy(com.axelor.apps.contract.db.ContractVersion,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (nextVersion.getIsTacitRenewal()) { nextVersion.setSupposedEndDate(durationService.computeDuration(nextVersion.getRenewalDuration(), date)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6095/buggy-version/axelor-contract.src.main.java.com.axelor.apps.contract.service.ContractServiceImpl.java", "BodyUseAPI": ["com.axelor.apps.contract.db.ContractVersion.getRenewalDuration()", "com.axelor.apps.contract.db.ContractVersion.setSupposedEndDate(durationService.computeDuration(nextVersion.getRenewalDuration(), date))", "com.axelor.apps.base.service.DurationService.computeDuration(nextVersion.getRenewalDuration(),java.time.LocalDate)"], "Fixed commit": "81236db961db395949a5123961eaaa1168f47a66", "Url": "https://api.github.com/repos/ego-axelor/axelor-business-suite", "Date": "2018-03-27T15:02:41Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (uri != null) { android.util.Log.d(TAG, (((\"Scan Completed for: \" + path) + \" with uri \") + (uri.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8306/buggy-version/common.src.main.java.com.arnavdhamija.common.FileModule.java", "BodyUseAPI": ["android.net.Uri.toString()", "android.util.Log.d(java.lang.String,(((\"Scan Completed for: \" + path) + \" with uri \") + (uri.toString())))"], "Fixed commit": "1bf2d0dea2b58058846dabc49cbced0ea040dd35", "Url": "https://api.github.com/repos/swifiic/roamnet", "Date": "2018-04-01T09:13:18Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parameterCount > 255) { throw new org.codehaus.janino.util.ClassFile.ClassFileException(((((\"Method \\\"\" + methodName) + \"\\\" has too many parameters (\") + parameterCount) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/19/buggy-version/janino.src.main.java.org.codehaus.janino.util.ClassFile.java", "BodyUseAPI": [], "Fixed commit": "a373ac9bb6d28d51dccb7421ea046d73809d7ce2", "Url": "https://api.github.com/repos/ueshin/janino", "Date": "2018-04-12T12:58:37Z"},
{"Line": "=>882", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cursor) != null) { cursor.moveToFirst(); poolID = cursor.getInt(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2102/buggy-version/app.src.main.java.com.example.paneesh.moneypool.database_helper.MemberOperations.java", "BodyUseAPI": [], "Fixed commit": "02f11e0452abe8c6e25805341e460d261f445e74", "Url": "https://api.github.com/repos/mcbcbosdk/FoggAndroid", "Date": "2018-06-10T23:56:34Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iter > 10000) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1390/buggy-version/src.main.java.ure.areas.ULandscaper.java", "BodyUseAPI": [], "Fixed commit": "c3866f5e447a3a3226d9828539f8be8576b69728", "Url": "https://api.github.com/repos/gilmore606/ure", "Date": "2018-08-19T04:46:22Z"},
{"Line": "=>1015", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ure.areas.ULandscaper.getRandomSpawn(ure.areas.UArea,ure.actors.UActor,int,int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (dest != null) actor.moveToCell(area, dest.x, dest.y);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1390/buggy-version/src.main.java.ure.areas.ULandscaper.java", "BodyUseAPI": ["ure.actors.UActor.moveToCell(ure.areas.UArea,dest.x,dest.y)"], "Fixed commit": "c3866f5e447a3a3226d9828539f8be8576b69728", "Url": "https://api.github.com/repos/gilmore606/ure", "Date": "2018-08-19T04:46:22Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (errorID == 0) { com.squareup.picasso.Picasso.get().load(filePath).into(imageView); }else { com.squareup.picasso.Picasso.get().load(filePath).error(errorID).into(imageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2740/buggy-version/app.src.main.java.controllers.ImageController.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.get().load(filePath).error(int)", "com.squareup.picasso.Picasso.get().load(filePath).error(errorID).into(android.widget.ImageView)"], "Fixed commit": "f0f9749e67234ca9d6a057cc8c0bdd4e6a7e9392", "Url": "https://api.github.com/repos/JakobiObi/UWF-CIS495C-Spotd", "Date": "2018-04-26T08:24:49Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.Hibernate.isInitialized(friend.getFriend())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!initialized) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/397/buggy-version/api.src.main.java.au.com.digitalspider.biblegame.service.UserService.java", "BodyUseAPI": [], "Fixed commit": "01a066646ca8d04af6f6d26d3159a76fe653635a", "Url": "https://api.github.com/repos/digitalspider/biblegame", "Date": "2018-09-26T12:58:12Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mData.getClazses().size()) > 0) { tv_go_class.setVisibility(View.VISIBLE); }else { tv_go_class.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5615/buggy-version/app.src.main.java.com.yanxiu.gphone.faceshowadmin_android.main.ui.activity.ProjectDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "ee5049b0a26cc8acad2020cc93ede64c25178be8", "Url": "https://api.github.com/repos/caileiYanxiu/FaceShowAdmin_Android", "Date": "2018-07-27T04:19:00Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameterMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (skService.isValid(((java.lang.String[]) (parameterMap.get(\"sk\")))[0], request.getHeader(\"origin\"))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2024/buggy-version/src.main.java.me.liexing.apicenter.general.interceptor.ApiSkInterceptor.java", "BodyUseAPI": [], "Fixed commit": "1684326f09d8e27a035ec8b239b206d51d6906c5", "Url": "https://api.github.com/repos/scusjs/apicenter", "Date": "2018-03-13T16:58:59Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((groupId) == (-1)) { com.mifos.mifosxdroid.core.util.Toaster.show(rootView, getString(R.string.error_select_group)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7896/buggy-version/mifosng-android.src.main.java.com.mifos.mifosxdroid.online.generatecollectionsheet.GenerateCollectionSheetFragment.java", "BodyUseAPI": [], "Fixed commit": "daf2061da683c20d8998b91158a3107ba639d331", "Url": "https://api.github.com/repos/himanshu112/android-client", "Date": "2018-02-13T16:44:37Z"},
{"Line": "=>1858", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getBoolean(Helper.SET_CAPITALIZE,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (capitalize) toot_content.append(\"\\n\"); else toot_content.append(\" \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2866/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.activities.TootActivity.java", "BodyUseAPI": [], "Fixed commit": "ebe4b44e7c44594d4ba3323e2cf023221a8cb4ab", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2018-01-06T08:41:16Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((iterationsSoFar) >= 1000) { scope += incrementalBatchSize; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/646/buggy-version/src.cc.mallet.topics.PolylingualTopicModel.java", "BodyUseAPI": [], "Fixed commit": "fc9f442e2190c104b24ef27eb8863728682e6248", "Url": "https://api.github.com/repos/akkikiki/Mallet", "Date": "2018-01-18T04:54:34Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readTree(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (node.has(\"projectVersion\")) { return node.get(\"projectVersion\").asText(\"0.2\"); }else { return \"0.2\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4769/buggy-version/src.main.java.io.makerplayground.version.ProjectVersionControl.java", "BodyUseAPI": ["node.get(\"projectVersion\").asText(java.lang.String)", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)"], "Fixed commit": "6db06413060bd7f8824d856475076e638525c275", "Url": "https://api.github.com/repos/InGarage/MakerPlayGround", "Date": "2018-06-14T08:01:15Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getGroupId()) == null) task.setGroupId(com.devnoob.todo.services.TaskServiceImpl.DEFAULT_GROUP_ID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3019/buggy-version/src.main.java.com.devnoob.todo.services.TaskServiceImpl.java", "BodyUseAPI": ["com.devnoob.todo.models.Task.setGroupId(long)"], "Fixed commit": "11c382593d9c82e77343598e83f4f32c7d5a258a", "Url": "https://api.github.com/repos/fronczek7f/ToDo", "Date": "2018-04-26T22:54:53Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["datastructure.list.Node<T>.getNextNode()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (newNextNode != null) { newNextNode.setPreviousNode(newPreviousNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4588/buggy-version/src.datastructure.list.CustomLinkedList.java", "BodyUseAPI": ["datastructure.list.Node<T>.setPreviousNode(datastructure.list.Node<T>)"], "Fixed commit": "6e68ab5c32e137944077bae1aea8084382bc20e5", "Url": "https://api.github.com/repos/kredki/arrays", "Date": "2018-07-10T09:33:05Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (time == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1060/buggy-version/app.src.main.java.com.elementary.tasks.reminder.filters.DateFilter.java", "BodyUseAPI": [], "Fixed commit": "eb047702545a96ed3e71a2e856815a6cbb65ae7c", "Url": "https://api.github.com/repos/naz013/Reminder", "Date": "2018-03-04T10:05:11Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["calendarApiService.getCalendar().getCalendars().execute().body()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((null != calendarsList) && (null != (calendarsList.getValue()))) { for (final org.zeroclick.meeting.client.api.microsoft.data.Calendar calendarItem : calendarsList.getValue()) { @java.lang.SuppressWarnings(\"PMD.AvoidInstantiatingObjectsInLoops\") final java.lang.StringBuilder calendarId = new java.lang.StringBuilder(); calendarId.append(userId).append('_').append(calendarItem.getId()).append('_').append(apiId); calendars.put(calendarId.toString(), this.toCalendarConfig(calendarItem, userId, apiId)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8978/buggy-version/meeting.client.src.main.java.org.zeroclick.meeting.client.api.microsoft.MicrosoftApiHelper.java", "BodyUseAPI": ["org.zeroclick.meeting.client.api.microsoft.data.PagedResult<java.util.Calendar>.getValue()"], "Fixed commit": "bbe07cfb6e0fb3ba16aa7ce73acd7f43f42743be", "Url": "https://api.github.com/repos/jderuette/zc_meeting", "Date": "2018-04-05T11:23:29Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ru.spbau.lecturenotes.controllers.MainMenuController.getUserInfo()) != null) { setGroupListener(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7206/buggy-version/app.src.main.java.ru.spbau.lecturenotes.activities.MainMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "3386baf5d0f4681d97b1464565fad653e8099ee6", "Url": "https://api.github.com/repos/ashvetNmurfel/lecture-notes", "Date": "2018-02-21T16:27:49Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.simpleweather.simpleweather.activity.CityActivity.list.isEmpty()) { getData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9453/buggy-version/app.src.main.java.com.simpleweather.simpleweather.activity.CityActivity.java", "BodyUseAPI": [], "Fixed commit": "d020ff1a80b3c4681ef1750475f29a52f6624b6c", "Url": "https://api.github.com/repos/TianHongTao/SimpleWeather", "Date": "2018-07-24T03:30:45Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (repeat) { playerNeedsSource = true; startPlayback(); }else { text += \"ended\"; eventEmitter.end(); onStopPlayback(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1372/buggy-version/android-exoplayer.src.main.java.com.brentvatne.exoplayer.ReactExoplayerView.java", "BodyUseAPI": [], "Fixed commit": "7202d94b0a20046306f6851f66608eac46387dbb", "Url": "https://api.github.com/repos/MartinGao/react-native-video", "Date": "2018-02-26T09:40:45Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.greenfoxacademy.todo.services.TodoService.findByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((todo == null) || (name == null)) { return \"redirect:/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8280/buggy-version/week-08.day-03.todo.src.main.java.com.greenfoxacademy.todo.controllers.SearchController.java", "BodyUseAPI": [], "Fixed commit": "e3650fadd365809a6efdda6f5940f37e3c01117b", "Url": "https://api.github.com/repos/green-fox-academy/ChriswellPetii", "Date": "2018-10-11T07:50:45Z"},
{"Line": "=>951", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(rs.next())) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5954/buggy-version/src.gui.Budget.java", "BodyUseAPI": [], "Fixed commit": "c68540b4f02918b2bc5b11277e83a6e0ce5b6d9d", "Url": "https://api.github.com/repos/cradcore/SimpleBudget", "Date": "2018-09-25T03:14:56Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.Double>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) { return this.get_WM_data().get(std).get(\"Actual\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6013/buggy-version/src.system_utils.DataStore.java", "BodyUseAPI": [], "Fixed commit": "c380b590ce1d1e2ec1e7899d570592e29be30b1b", "Url": "https://api.github.com/repos/jackHay22/rock_analysis_interface", "Date": "2018-10-30T16:13:41Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Tokenizer.printNewLine) { java.lang.System.out.println(); Tokenizer.printNewLine = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/776/buggy-version/Tokenizer.java", "BodyUseAPI": [], "Fixed commit": "e70a3a3e4c2192bdaaca9f468405d8b08308ae15", "Url": "https://api.github.com/repos/anthonygraca/Compilers_and_Interpreters", "Date": "2018-01-30T04:34:45Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((this.getPrevious()) instanceof com.azavea.Bus)) time += this.getNode().time(this.getPrevious().getNode());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8915/buggy-version/planner.src.main.java.School.java", "BodyUseAPI": [], "Fixed commit": "27ba144bc65e6fe76a7f232d28b08fdcc0002c10", "Url": "https://api.github.com/repos/jamesmcclain/bus-plan", "Date": "2018-01-05T01:06:30Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((keys == null) || (keys.isEmpty())) { return sql; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2795/buggy-version/src.Util.SQLBuilder.java", "BodyUseAPI": [], "Fixed commit": "708abc56c4332d304df17971829a9b5f3f7fc402", "Url": "https://api.github.com/repos/micromoon1997/WalmartClient", "Date": "2018-03-28T04:12:57Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.atalisas.jdbc.JdbcSelectSession.makeList(java.lang.String,java.lang.Class<T>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((list.size()) == 0) { return null; }else { return list.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4972/buggy-version/src.main.java.com.atalisas.jdbc.JdbcSelectSession.java", "BodyUseAPI": ["java.util.List<T>.get(int)"], "Fixed commit": "3543779085ab9da82b712adbd8154c8cbb4b2840", "Url": "https://api.github.com/repos/AtalisasOwen/OSQL2", "Date": "2018-01-27T04:49:33Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMax) { text.setMaxLines(3); }else { text.setMaxLines(java.lang.Integer.MAX_VALUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1486/buggy-version/app.src.main.java.com.example.hhkx01.bottompanel.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f868bfe27efef2d4fddfc644230a2a1dda3544e5", "Url": "https://api.github.com/repos/li-PATHojun/DragPanel", "Date": "2018-08-22T10:29:22Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getClickedInventory()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9349/buggy-version/src.com.kyuukun.KyuuKun.Core.Util.CustomAnvilHelp.java", "BodyUseAPI": [], "Fixed commit": "e09d214e56e8b02b4c431f668394958e6e4e8395", "Url": "https://api.github.com/repos/KyuuKun/KCore", "Date": "2018-04-23T20:42:30Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mediaPlayer.isPlaying()) { mediaPlayer.pause(); flag = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3054/buggy-version/app.src.main.java.com.xwbx.fgolivewallpaper.fgoWallpaperService.java", "BodyUseAPI": ["android.media.MediaPlayer.pause()"], "Fixed commit": "c143cd9195c58af80ba45ad7fea4ca7c06e758a4", "Url": "https://api.github.com/repos/daflyinbed/fgoLiveWallpaper", "Date": "2018-05-25T06:52:16Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((e.getKeyCode()) != (java.awt.event.KeyEvent.VK_A)) && (Lizzie.board.inAnalysisMode())) Lizzie.board.toggleAnalysis();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8450/buggy-version/src.main.java.featurecat.lizzie.gui.Input.java", "BodyUseAPI": [], "Fixed commit": "df2c42154abd476735725d7290bb8643cbdefa75", "Url": "https://api.github.com/repos/featurecat/lizzie", "Date": "2018-06-01T02:42:41Z"},
{"Line": "=>647", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((powerVal != null) && (!(powerVal.isEmpty()))) { powerVal = powerVal.replaceAll(\"W\", \"\"); powerVal = powerVal.replaceAll(\"w\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5508/buggy-version/src.main.java.com.terragoedge.streetlight.service.StreetlightChicagoService.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "9ca4425c6912f95d0fb8a076d7c3da78a832f99a", "Url": "https://api.github.com/repos/terragotech/streetlight", "Date": "2018-03-16T12:51:39Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((name.length()) > 12) || ((username.length()) < 1)) { java.lang.System.out.println(\"Invalid name\"); }else { this.name = name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6231/buggy-version/src.com.compan.Person.java", "BodyUseAPI": [], "Fixed commit": "063540d5861203e3023c759a3eab390e28ca79c3", "Url": "https://api.github.com/repos/YaniDrenchev/vision_telerik_project", "Date": "2018-05-06T12:43:39Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentIndex) == 0) { mCurrentIndex = (mQuestionBank.length) - 1; }else { mCurrentIndex = ((mCurrentIndex) - 1) % (mQuestionBank.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8897/buggy-version/app.src.main.java.edu.cnm.deepdive.geoquiz.QuizActivity.java", "BodyUseAPI": [], "Fixed commit": "501ea9f043cf651d6e4611fd3c5eb50a5347a213", "Url": "https://api.github.com/repos/bbleck/GeoQuiz", "Date": "2018-10-16T10:51:32Z"},
{"Line": "=>1378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.FUNCTION()) != null) { name = extractTextUnescaped(ctx.FUNCTION().getText()); if ((ctx.selector()) != null) { cz.vutbr.web.csskit.antlr4.Selector sel = visitSelector(ctx.selector()); pseudo = (isPseudoElem) ? rf.createPseudoElement(name, sel) : rf.createPseudoClass(name, sel); }else { java.lang.String value = ((ctx.MINUS()) == null) ? \"\" : \"-\"; if ((ctx.IDENT()) != null) { value += ctx.IDENT().getText(); }else if ((ctx.NUMBER()) != null) { value += ctx.NUMBER().getText(); }else if ((ctx.INDEX()) != null) { value += ctx.INDEX().getText(); }else { throw new java.lang.UnsupportedOperationException(\"unknown state\"); } pseudo = (isPseudoElem) ? rf.createPseudoElement(name, value) : rf.createPseudoClass(name, value); } }else { name = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8136/buggy-version/src.main.java.cz.vutbr.web.csskit.antlr4.CSSParserVisitorImpl.java", "BodyUseAPI": ["CSSParser.PseudoContext.MINUS()", "CSSParser.PseudoContext.FUNCTION()", "CSSParser.PseudoContext.selector()", "CSSParser.PseudoContext.NUMBER()", "ctx.NUMBER().getText()", "ctx.FUNCTION().getText()", "CSSParser.PseudoContext.INDEX()", "CSSParser.PseudoContext.IDENT()", "CSSParser.PseudoContext.INDEX()", "cz.vutbr.web.csskit.antlr4.CSSParserVisitorImpl.visitSelector(ctx.selector())", "CSSParser.PseudoContext.IDENT()", "ctx.IDENT().getText()", "CSSParser.PseudoContext.selector()", "ctx.INDEX().getText()", "cz.vutbr.web.csskit.antlr4.CSSParserVisitorImpl.extractTextUnescaped(ctx.FUNCTION().getText())", "CSSParser.PseudoContext.NUMBER()"], "Fixed commit": "2d42737fbf5e25427afe28738cee4d29d1f4d473", "Url": "https://api.github.com/repos/Mangara/jStyleParser", "Date": "2018-03-21T13:28:23Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((layoutManager) != null) { listState = layoutManager.onSaveInstanceState(); outState.putParcelable(\"state\", listState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5756/buggy-version/app.src.main.java.com.sweetdeveloper.instacoffee.fragments.NewsFragment.java", "BodyUseAPI": [], "Fixed commit": "790193b6f2636c741b980884cbb3057f95645136", "Url": "https://api.github.com/repos/anderson2090/InstaCoffee", "Date": "2018-04-03T22:36:38Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jenkins == null) return new hudson.util.ListBoxModel(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/353/buggy-version/src.main.java.org.jenkinsci.plugins.ParameterizedRemoteTrigger.pipeline.RemoteBuildPipelineStep.java", "BodyUseAPI": [], "Fixed commit": "61e9d5564ba472960f204ec70833553661c16177", "Url": "https://api.github.com/repos/sap-production/parameterized-remote-trigger-plugin", "Date": "2018-03-16T11:36:40Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position <= ((containerList.size()) - 1)) { android.content.Intent intent = new android.content.Intent(getActivity(), example.com.daliynews.NewsActivity.class); intent.putExtra(\"URL\", ((java.util.ArrayList<java.lang.String>) (containerList.get(2))).get(position)); intent.putExtra(\"IMG_URL\", ((java.util.ArrayList<java.lang.String>) (containerList.get(4))).get(position)); startActivity(intent); }else { android.util.Log.e(\"TAG\", (\"Index issue: \" + position)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6332/buggy-version/app.src.main.java.example.com.daliynews.Fragment.TabFragmentHome.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.util.ArrayList<java.lang.String>>.get(int)", "android.util.Log.e(java.lang.String,java.lang.String)", "java.util.ArrayList<java.util.ArrayList<java.lang.String>>.get(int)", "android.content.Intent.putExtra(java.lang.String,java.lang.String)", "android.content.Intent.putExtra(java.lang.String,java.lang.String)"], "Fixed commit": "13ad212c0013784208b84dbc3356c6725d39df49", "Url": "https://api.github.com/repos/dragona/DailyNews", "Date": "2018-04-07T07:01:06Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.asList(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(list.contains(code.substring(i, (i + 5))))) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8470/buggy-version/07Barcode.Barcode.java", "BodyUseAPI": [], "Fixed commit": "a8db697c5ba3eed90a149cd7d85a073891178c33", "Url": "https://api.github.com/repos/DenChen11214/MKS21X", "Date": "2018-01-05T01:58:22Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (users.isEmpty()) return result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1490/buggy-version/app.src.main.java.org.nuclearfog.twidda.backend.TwitterEngine.java", "BodyUseAPI": [], "Fixed commit": "ed3ab20e46faefe7566cbedf862ec70ce765bde6", "Url": "https://api.github.com/repos/NudeDude/Shitter", "Date": "2018-03-26T21:30:12Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (statuses.isEmpty()) return result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1490/buggy-version/app.src.main.java.org.nuclearfog.twidda.backend.TwitterEngine.java", "BodyUseAPI": [], "Fixed commit": "ed3ab20e46faefe7566cbedf862ec70ce765bde6", "Url": "https://api.github.com/repos/NudeDude/Shitter", "Date": "2018-03-26T21:30:12Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.inject.spi.Dependency<?>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((key.getTypeLiteral().getRawType().equals(io.pleo.prop.core.Prop.class)) && ((key.getTypeLiteral().getType()) instanceof java.lang.reflect.ParameterizedType)) { java.lang.reflect.Parameter parameter = parameters.get(dependency.getParameterIndex()); io.pleo.prop.guice.internal.PropResult result; try { result = new io.pleo.prop.guice.internal.PropResult(parameterToProp(parameter, key)); } catch (java.lang.RuntimeException ex) { result = new io.pleo.prop.guice.internal.PropResult(ex); } extractedProps.put(((com.google.inject.Key<io.pleo.prop.core.Prop<?>>) (dependency.getKey())), result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6273/buggy-version/prop-guice.src.main.java.io.pleo.prop.guice.internal.PropMappingVisitor.java", "BodyUseAPI": ["io.pleo.prop.guice.internal.PropMappingVisitor.parameterToProp(java.lang.reflect.Parameter,com.google.inject.Key<?>)"], "Fixed commit": "6ccd220fa3e465791cc5dfac9860ce2292611280", "Url": "https://api.github.com/repos/pleo-io/prop", "Date": "2018-03-21T20:11:04Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((colorMap.size()) > 256) { boolean ignoreAlpha = !((java.lang.Boolean) (org.infinity.resource.Profile.getProperty(Profile.Key.IS_SUPPORTED_BAM_V1_ALPHA))); int startIdx = (((palettes[org.infinity.gui.converter.BamPaletteDialog.TYPE_GENERATED][0]) & 16777215) == 65280) ? 1 : 0; org.infinity.resource.graphics.ColorConvert.sortPalette(palettes[org.infinity.gui.converter.BamPaletteDialog.TYPE_GENERATED], startIdx, org.infinity.gui.converter.BamOptionsDialog.getSortPalette(), ignoreAlpha); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8706/buggy-version/src.org.infinity.gui.converter.BamPaletteDialog.java", "BodyUseAPI": [], "Fixed commit": "9ddec419c9173016daf69e6381638469e1cf7374", "Url": "https://api.github.com/repos/Argent77/NearInfinity", "Date": "2018-06-14T19:09:04Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (\"true\".equalsIgnoreCase(java.lang.System.getenv(\"OMS_RMQ_DIRECT_NAME_SRV\"))) { java.lang.String accessPoints = clientConfig.getAccessPoints(); if ((accessPoints == null) || (accessPoints.isEmpty())) { throw new io.openmessaging.exception.OMSRuntimeException(\"-1\", \"OMS AccessPoints is null or empty.\"); } this.rocketmqPushConsumer.setNamesrvAddr(accessPoints.replace(',', ';')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7715/buggy-version/openmessaging.src.main.java.io.openmessaging.rocketmq.consumer.PushConsumerImpl.java", "BodyUseAPI": [], "Fixed commit": "173f77d2c32019c8f5884a3adeb78d6f83aaa55c", "Url": "https://api.github.com/repos/lindzh/rocketmq", "Date": "2018-04-27T21:01:29Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (\"true\".equalsIgnoreCase(java.lang.System.getenv(\"OMS_RMQ_DIRECT_NAME_SRV\"))) { java.lang.String accessPoints = clientConfig.getAccessPoints(); if ((accessPoints == null) || (accessPoints.isEmpty())) { throw new io.openmessaging.exception.OMSRuntimeException(\"-1\", \"OMS AccessPoints is null or empty.\"); } this.rocketmqPullConsumer.setNamesrvAddr(accessPoints.replace(',', ';')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7715/buggy-version/openmessaging.src.main.java.io.openmessaging.rocketmq.consumer.PullConsumerImpl.java", "BodyUseAPI": [], "Fixed commit": "173f77d2c32019c8f5884a3adeb78d6f83aaa55c", "Url": "https://api.github.com/repos/lindzh/rocketmq", "Date": "2018-04-27T21:01:29Z"},
{"Line": "=>1248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scenario.hasNextNodes(currentNode)) { for (enamel.Node node : scenario.getNextNodes(currentNode)) { comboBoxNextNodes.addItem(node); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9070/buggy-version/Enamel.src.enamel.EditingScreen.java", "BodyUseAPI": ["enamel.Scenario.getNextNodes(enamel.Node)"], "Fixed commit": "fe959089896945c01bf3706bbe21518ca4283a6a", "Url": "https://api.github.com/repos/DSantaguida/EECS2311-Group17", "Date": "2018-02-23T07:29:02Z"},
{"Line": "=>876", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((Ollivanders2API.playerCommon.wandCheck(player, EquipmentSlot.HAND)) < 2) { org.bukkit.Location location = player.getLocation(); location.setY(((location.getY()) + 1.6)); player.getWorld().playEffect(location, Effect.ENDER_SIGNAL, 0); player.getWorld().playSound(location, Sound.ENTITY_PLAYER_LEVELUP, 1, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1431/buggy-version/Ollivanders.src.net.pottercraft.Ollivanders2.OllivandersListener.java", "BodyUseAPI": ["player.getWorld().playSound(org.bukkit.Location,Sound.ENTITY_PLAYER_LEVELUP,int,int)", "org.bukkit.entity.Player.getWorld()", "org.bukkit.entity.Player.getWorld()", "org.bukkit.entity.Player.getLocation()", "player.getWorld().playEffect(org.bukkit.Location,Effect.ENDER_SIGNAL,int)"], "Fixed commit": "a12b0571794319a0b4bb39149887e87aef1ba393", "Url": "https://api.github.com/repos/Azami7/Ollivanders2", "Date": "2018-10-17T04:32:26Z"},
{"Line": "=>1286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((additions != null) && ((additions.tiles) != null)) { for (int i = 0; i < (additions.tiles.length); i++) { seventh.game.net.NetMapAddition addition = additions.tiles[i]; addTile(addition); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/223/buggy-version/src.seventh.client.ClientGame.java", "BodyUseAPI": [], "Fixed commit": "58a801f5fac25ba83e8689fdce2d507c6a7b867b", "Url": "https://api.github.com/repos/tonysparks/seventh", "Date": "2018-08-04T14:00:04Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.onetwo.common.exception.AuthenticationException.class.isInstance(cause)) { throw ((org.springframework.security.core.AuthenticationException) (cause)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/833/buggy-version/core.modules.boot.src.main.java.org.onetwo.boot.module.security.mvc.SecurityWebExceptionResolver.java", "BodyUseAPI": [], "Fixed commit": "cceb552f507fa0a0e893a02ebd7e500f3a64a6ee", "Url": "https://api.github.com/repos/wayshall/onetwo", "Date": "2018-01-29T09:35:47Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((noMovementTimer) != null) { noMovementTimer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1999/buggy-version/app.src.main.java.com.saveyourride.services.ControlService.java", "BodyUseAPI": [], "Fixed commit": "a8a472529c4ec6084d27b3858def732eb0fb3d0e", "Url": "https://api.github.com/repos/pascalpiper/SaveYourRide", "Date": "2018-05-03T11:57:47Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((possibleAccidentTimer) != null) { possibleAccidentTimer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1999/buggy-version/app.src.main.java.com.saveyourride.services.ControlService.java", "BodyUseAPI": [], "Fixed commit": "a8a472529c4ec6084d27b3858def732eb0fb3d0e", "Url": "https://api.github.com/repos/pascalpiper/SaveYourRide", "Date": "2018-05-03T11:57:47Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!hasValidArguments) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6182/buggy-version/src.main.java.com.bean00.helpers.ArgParser.java", "BodyUseAPI": [], "Fixed commit": "ffbf3bbecbe08d48f06b6aeee233e9c7cb50ff2b", "Url": "https://api.github.com/repos/bean00/http-server", "Date": "2018-02-15T17:47:24Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((updateUser.getId()) != id) { throw new java.lang.IllegalArgumentException(\"Updated user id is not the same as given id.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1511/buggy-version/extension-repository.src.main.java.telerikacademy.extensionrepository.services.UserServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "681023333f29eff102679291b2c6a71ba5376fd7", "Url": "https://api.github.com/repos/lusavova/ExtensionRepository", "Date": "2018-09-09T12:02:36Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dataAccess.databaseManagement.manager.PriceManager.getLatestDateOfExchange(presentation.guiForDataUpdate.DataUpdateJPanel.exchangeManager.getExchangeByName(listExchangeName[i]).getExchangeID())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (latestDate != null) { tempDate = new java.util.Date(latestDate.getTime()); if (tempDate.before(minDate)) { minDate = tempDate; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2450/buggy-version/src.presentation.guiForDataUpdate.DataUpdateJPanel.java", "BodyUseAPI": ["java.sql.Date.getTime()"], "Fixed commit": "bd11cac8c8d4a1219b76cda8be701fa934608b01", "Url": "https://api.github.com/repos/tdinhvn/AutoTrading", "Date": "2018-03-31T14:05:52Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (evt.getInteractionPoint().isPresent()) { com.flowpowered.math.vector.Vector3d point = evt.getInteractionPoint().get(); event.precise_location = new com.denizenscript.denizen2sponge.tags.objects.LocationTag(point, world); event.intersection_point = new com.denizenscript.denizen2sponge.tags.objects.LocationTag(point.sub(opt.get().getPosition())); event.impact_normal = new com.denizenscript.denizen2sponge.tags.objects.LocationTag(evt.getTargetSide().asOffset()); }else { org.spongepowered.api.util.blockray.BlockRayHit<org.spongepowered.api.world.World> brh = org.spongepowered.api.util.blockray.BlockRay.from(player).distanceLimit(com.denizenscript.denizen2sponge.utilities.Utilities.getHandReach(player)).build().end().get(); event.precise_location = new com.denizenscript.denizen2sponge.tags.objects.LocationTag(brh.getPosition(), world); event.intersection_point = new com.denizenscript.denizen2sponge.tags.objects.LocationTag(brh.getPosition().sub(brh.getBlockPosition().toDouble())); event.impact_normal = new com.denizenscript.denizen2sponge.tags.objects.LocationTag(brh.getNormal()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5238/buggy-version/src.main.java.com.denizenscript.denizen2sponge.events.player.PlayerLeftClicksBlockScriptEvent.java", "BodyUseAPI": ["evt.getTargetSide().asOffset()", "evt.getInteractionPoint().get()", "InteractBlockEvent.Primary.getTargetSide()", "InteractBlockEvent.Primary.getInteractionPoint()"], "Fixed commit": "3a4c86f2c62ffbe8a525f1627c8e3755f1907ae4", "Url": "https://api.github.com/repos/DenizenScript/Denizen2Sponge", "Date": "2018-02-25T06:55:07Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tab != (jotato.quantumflux.QuantumFluxMod.tab)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6445/buggy-version/src.main.java.jotato.quantumflux.items.ItemCraftingPiece.java", "BodyUseAPI": [], "Fixed commit": "b5ef248949669fcdf7bc993e6105c405fe52c851", "Url": "https://api.github.com/repos/FantasyTeddy/QuantumFlux", "Date": "2018-07-16T21:07:10Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInfiniteSolution()) { paramSol(M1, S1); }else { backSubtitution(M1, S1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/870/buggy-version/Gauss.java", "BodyUseAPI": [], "Fixed commit": "0c77a40cb56fb56107e61c51334bfc62a889e602", "Url": "https://api.github.com/repos/AidilRiski/Tubes-Algeo-01", "Date": "2018-10-04T16:59:43Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (runCalled) event.swap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3040/buggy-version/src.TimingSystem.ChronoTimer.java", "BodyUseAPI": [], "Fixed commit": "edc1216e85faa7a55227535c8fa21f9f756ff14c", "Url": "https://api.github.com/repos/skelath1/ChronoTimer", "Date": "2018-03-27T14:51:39Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_racerQueue.size()) >= 2) { TimingSystem.Racer r1 = _racerQueue.removeFirst(); TimingSystem.Racer r2 = _racerQueue.removeFirst(); _racerQueue.addFirst(r2); _racerQueue.addFirst(r1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3040/buggy-version/src.TimingSystem.RaceTypes.IND.java", "BodyUseAPI": ["java.util.Deque<TimingSystem.Racer>.addFirst(TimingSystem.Racer)", "java.util.Deque<TimingSystem.Racer>.removeFirst()", "java.util.Deque<TimingSystem.Racer>.removeFirst()", "java.util.Deque<TimingSystem.Racer>.addFirst(TimingSystem.Racer)"], "Fixed commit": "edc1216e85faa7a55227535c8fa21f9f756ff14c", "Url": "https://api.github.com/repos/skelath1/ChronoTimer", "Date": "2018-03-27T14:51:39Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (new java.io.File(dataPath).exists()) { fileChooser.setInitialDirectory(new java.io.File(dataPath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1477/buggy-version/src.java-projects.slideshow.MicroEpiSlideshow.java", "BodyUseAPI": ["javafx.stage.FileChooser.setInitialDirectory(java.io.File)"], "Fixed commit": "dea9a369b3231eb612d962b569638548e833e9f9", "Url": "https://api.github.com/repos/mrc-ide/public-events-microbit-epidemic", "Date": "2018-10-08T20:57:30Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geoserver.catalog.Catalog.getStoreByName(java.lang.String,java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (catalog.getResourcesByStore(store, org.geoserver.catalog.ResourceInfo.class).isEmpty()) { catalog.remove(store); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4223/buggy-version/src.community.taskmanager.core.src.main.java.org.geoserver.taskmanager.tasks.DbLocalPublicationTaskTypeImpl.java", "BodyUseAPI": ["org.geoserver.catalog.Catalog.remove(org.geoserver.catalog.DataStoreInfo)"], "Fixed commit": "979d04095de0f717119ba64ca88ef76423f7056a", "Url": "https://api.github.com/repos/DOV-Vlaanderen/geoserver", "Date": "2018-05-29T14:27:59Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((n1.next) != null) && ((n2.next) != null)) { n1.next.data += carry; add(n1.next, n2.next); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9462/buggy-version/src.com.company.SingleLinkedList.java", "BodyUseAPI": ["com.company.SingleLinkedList.add(com.company.SingleLinkedList.Node,com.company.SingleLinkedList.Node)"], "Fixed commit": "d504c4f0f99d14751351608827d78c84e7b2a4c6", "Url": "https://api.github.com/repos/raof01/Prep", "Date": "2018-03-20T03:16:58Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (repository != null) { addRepo(output, repository); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1041/buggy-version/src.java.boa.datagen.forges.github.GitHubJsonRetrieverWorker.java", "BodyUseAPI": ["boa.datagen.forges.github.GitHubJsonRetrieverWorker.addRepo(java.lang.String,com.google.gson.JsonObject)"], "Fixed commit": "d14f9ce63ce5e060ff165bc0be8e8f813757c480", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2018-06-15T20:00:23Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!yp) { java.util.HashMap ypInfo = new java.util.HashMap(); ypInfo.put(\"state\", CopyrightType.COPYRIGHT_YP); ypInfo.put(\"count\", 0); productInfoList.add(ypInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3168/buggy-version/src.main.java.com.ideamoment.emars.product.service.impl.ProductServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "93ded282c14e642efb0757ffd93ff2ad7ef09edb", "Url": "https://api.github.com/repos/chinakite/emars", "Date": "2018-07-11T23:11:29Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!wz) { java.util.HashMap wzInfo = new java.util.HashMap(); wzInfo.put(\"state\", CopyrightType.COPYRIGHT_WZ); wzInfo.put(\"count\", 0); productInfoList.add(wzInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3168/buggy-version/src.main.java.com.ideamoment.emars.product.service.impl.ProductServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "93ded282c14e642efb0757ffd93ff2ad7ef09edb", "Url": "https://api.github.com/repos/chinakite/emars", "Date": "2018-07-11T23:11:29Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!wzgb) { java.util.HashMap wzgbInfo = new java.util.HashMap(); wzgbInfo.put(\"state\", CopyrightType.COPYRIGHT_WZGB); wzgbInfo.put(\"count\", 0); productInfoList.add(wzgbInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3168/buggy-version/src.main.java.com.ideamoment.emars.product.service.impl.ProductServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "93ded282c14e642efb0757ffd93ff2ad7ef09edb", "Url": "https://api.github.com/repos/chinakite/emars", "Date": "2018-07-11T23:11:29Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!sp) { java.util.HashMap spInfo = new java.util.HashMap(); spInfo.put(\"state\", CopyrightType.COPYRIGHT_SP); spInfo.put(\"count\", 0); productInfoList.add(spInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3168/buggy-version/src.main.java.com.ideamoment.emars.product.service.impl.ProductServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "93ded282c14e642efb0757ffd93ff2ad7ef09edb", "Url": "https://api.github.com/repos/chinakite/emars", "Date": "2018-07-11T23:11:29Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.archsystemsinc.qam.service.RadUserService.search(com.archsystemsinc.qam.model.RadUser)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (radUserReturnList != null) { radUserReturn = radUserReturnList.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/1485/buggy-version/src.main.java.com.archsystemsinc.qam.restcontroller.UserRestService.java", "BodyUseAPI": ["java.util.List<com.archsystemsinc.qam.model.RadUser>.get(int)"], "Fixed commit": "f9954cdded42350552eb93b737792e60c70adb22", "Url": "https://api.github.com/repos/Archsystemsllc/radservices", "Date": "2018-03-07T05:02:21Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.text.Editable.getSpanEnd(listSpans[0])", "android.text.Editable.getSpanStart(listSpans[0])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((start > spanStart) && (end < spanEnd)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6406/buggy-version/ARE.app.src.main.java.com.chinalwb.are.styles.ARE_ListNumber.java", "BodyUseAPI": [], "Fixed commit": "ce99cd6224b62a4df3b271ff717e82d84b506eb6", "Url": "https://api.github.com/repos/chinalwb/Android-Rich-text-Editor", "Date": "2018-02-05T10:45:42Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((session) instanceof at.laubi.network.session.ClientSession) { ignoreNextTurn = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6894/buggy-version/app.src.main.java.games.winchester.unodeluxe.models.Game.java", "BodyUseAPI": [], "Fixed commit": "958bd5d065af28731d48217a40645aa7291f5fe1", "Url": "https://api.github.com/repos/cprohinig/se2-uno", "Date": "2018-06-12T16:31:32Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["microbat.mutation.mutation.TraceMutationVisitor.visit(japa.parser.ast.stmt.IfStmt,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((ifStmt.getThenStmt()) != null) { if (((n.getParentNode()) instanceof japa.parser.ast.stmt.IfStmt) && (n == (((japa.parser.ast.stmt.IfStmt) (n.getParentNode())).getElseStmt()))) { microbat.mutation.mutation.MutationNode anotherMuNode = newNode(n.getParentNode()); japa.parser.ast.stmt.IfStmt anotherNewNode = ((japa.parser.ast.stmt.IfStmt) (nodeCloner.visit(((japa.parser.ast.stmt.IfStmt) (n.getParentNode())), null))); anotherNewNode.setElseStmt(n.getThenStmt()); anotherMuNode.add(anotherNewNode, MutationType.REMOVE_IF_CONDITION.name()); }else { japa.parser.ast.Node newNode = ifStmt.getThenStmt().accept(nodeCloner, null); muNode.add(newNode, MutationType.REMOVE_IF_CONDITION.name()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/6963/buggy-version/microbat_trace_predication.src.microbat.mutation.mutation.TraceMutationVisitor.java", "BodyUseAPI": ["ifStmt.getThenStmt().accept(microbat.mutation.mutation.TraceMutationVisitor,<nulltype>)", "japa.parser.ast.stmt.IfStmt.getThenStmt()"], "Fixed commit": "93e1c31d5367719e0f8623b7fd8f6878aca8e4cd", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2018-04-10T03:56:11Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxWidth) == (cn.kkmofang.view.value.Pixel.Auto)) { align = Layout.Alignment.ALIGN_NORMAL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/8404/buggy-version/kk-view.src.main.java.cn.kkmofang.view.Text.java", "BodyUseAPI": [], "Fixed commit": "9be44e6c0df8838ea2aa4c75ec6c4e70b4ab9c28", "Url": "https://api.github.com/repos/hailongz/kk-view", "Date": "2018-05-18T07:55:33Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connected()) { android.util.Log.d(org.godotengine.godot.inapp.InAppManager.TAG, \"onResume: call getUserData\"); com.amazon.device.iap.PurchasingService.getUserData(); android.util.Log.d(org.godotengine.godot.inapp.InAppManager.TAG, \"onResume: getPurchaseUpdates\"); com.amazon.device.iap.PurchasingService.getPurchaseUpdates(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7991/buggy-version/android.src.inapp.InAppManager.java", "BodyUseAPI": [], "Fixed commit": "f4bd526966c64f1845dee013e84c1e3bca8fede5", "Url": "https://api.github.com/repos/binogure-studio/godotamazon", "Date": "2018-05-01T18:51:31Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameterMap()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (pMap.containsKey((\"textquestion\" + questionid))) { java.lang.String tmpKey = \"textquestion\" + questionid; if (!(pMap.get(tmpKey)[0].isEmpty())) { answer.setTextChoice(1); answer.setTextChoiceContent(pMap.get((\"textquestion\" + questionid))[0]); } processedQuestionId.add(questionid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/3539/buggy-version/hospital-wechat.src.main.java.com.hospital.action.surveyAction.java", "BodyUseAPI": ["java.util.Set<java.lang.Integer>.add(int)", "java.util.Map<java.lang.String, java.lang.String[]>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String[]>.get(java.lang.String)", "com.hospital.action.Answer.setTextChoiceContent(java.lang.String)", "java.lang.String.isEmpty()"], "Fixed commit": "eb3ee29884e2a40acf52a708e34517e78198b8df", "Url": "https://api.github.com/repos/lht142934/HospitalSystem", "Date": "2018-04-13T13:16:56Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Objects.equals(key, padding)) return str;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/4880/buggy-version/src.main.java.com.github.andyshao.lang.StringOperation.java", "BodyUseAPI": [], "Fixed commit": "aa80b28dc0d1126018cdc102ee805ff9c5bfc7c7", "Url": "https://api.github.com/repos/Andy-Shao/Gear", "Date": "2018-08-30T06:43:13Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.event.entity.living.LivingDropsEvent.getEntityLiving()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (entity.getEntityString().contains(\":\")) { modifiedName = entity.getEntityString().substring(((entity.getEntityString().indexOf(\":\")) + 1)); }else { modifiedName = entity.getEntityString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/2506/buggy-version/src.main.java.com.gmail.zendarva.parachronology.handlers.MobDrop.java", "BodyUseAPI": ["entity.getEntityString().substring(((entity.getEntityString().indexOf(\":\")) + 1))", "net.minecraft.entity.Entity.getEntityString()", "net.minecraft.entity.Entity.getEntityString()", "net.minecraft.entity.Entity.getEntityString()", "entity.getEntityString().indexOf(java.lang.String)"], "Fixed commit": "6e5813dd9a13ac0b6bf4cb3e2f9f55a0e95bee60", "Url": "https://api.github.com/repos/ZenDarva/Parachronography", "Date": "2018-04-29T03:27:55Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cookies != null) { for (javax.servlet.http.Cookie cooky : cookies) { if (cooky.getName().equals(CustomAuthenticationSuccessHandler.USER_AUTHENTICATION_EXTRA_SECURITY)) { java.lang.String value = cooky.getValue(); java.lang.Object principalFromCookie = com.kalavit.javulna.utils.SerializationUtil.readUserFromFile(java.util.Base64.getDecoder().decode(value)); java.lang.Object principal = org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().getPrincipal(); if ((principal instanceof com.kalavit.javulna.model.User) && (!(principal.equals(principalFromCookie)))) { com.kalavit.javulna.filter.ExtraAuthenticationCheckFilter.LOG.error(\"something is wrong. Principal in cookie is not good. Possible secuirty failure!\"); }else { com.kalavit.javulna.filter.ExtraAuthenticationCheckFilter.LOG.debug(\"the two principals are the same. Good.\"); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9616/buggy-version/src.main.java.com.kalavit.javulna.filter.ExtraAuthenticationCheckFilter.java", "BodyUseAPI": [], "Fixed commit": "54fd168ff635d1ba1b77545a4051c9eafd4a354d", "Url": "https://api.github.com/repos/edu-secmachine/javulna", "Date": "2018-08-28T12:42:06Z"},
{"Line": "=>2130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.android.internal.telephony.imsphone.ImsPhoneCallTracker.DBG) log((\"onCallUpdated: profile is \" + (imsCall.getCallProfile())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9848/buggy-version/src.java.com.android.internal.telephony.imsphone.ImsPhoneCallTracker.java", "BodyUseAPI": [], "Fixed commit": "cc463fe045945c78b98ef65d2a1ac77e7ab78530", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-opt-telephony", "Date": "2018-02-22T19:16:41Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ylyu1.wean.Flusher.counter) == null) java.lang.System.out.println(\"counter is null??\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/9305/buggy-version/src.ylyu1.wean.Flusher.java", "BodyUseAPI": [], "Fixed commit": "6da69c9230f519a7ce03f4edcc26b39a38817046", "Url": "https://api.github.com/repos/squaresLab/genprog4java", "Date": "2018-09-21T18:53:11Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (context.modules.containsKey(primaryClassname)) { module = context.modules.get(primaryClassname); }else if (context.modules.containsKey(secondaryClassname)) { module = context.modules.get(secondaryClassname); }else { java.lang.Class<?> classObject = java.lang.Class.forName(secondaryClassname); java.lang.reflect.Constructor<?> constructor = classObject.getConstructor(); module = constructor.newInstance(); context.modules.put(secondaryClassname, module); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/5024/buggy-version/app.src.main.java.com.jasonette.seed.Launcher.Launcher.java", "BodyUseAPI": ["context.modules.get(java.lang.String)", "context.modules.get(java.lang.String)", "context.modules.put(java.lang.String,java.lang.Object)", "context.modules.containsKey(java.lang.String)"], "Fixed commit": "4a0560b96197cff23d978bc92d1c8b6496d05278", "Url": "https://api.github.com/repos/Jasonette/JASONETTE-Android", "Date": "2018-01-15T13:47:44Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((empIds.getEmpIds().size()) < 1) { com.wmp.model.Skill s = new com.wmp.model.Skill(); s.setId(0); s.setSkill(empIds.getSkill()); s.setCreatedAt(); skillsToAdd.add(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V148/7679/buggy-version/src.main.java.com.wmp.controller.SkillController.java", "BodyUseAPI": ["com.wmp.helper.EmpIds.getSkill()", "com.wmp.model.Skill.setSkill(empIds.getSkill())"], "Fixed commit": "5e250fbb4dfbdd2f81aa06825a9072a8d19b7ef9", "Url": "https://api.github.com/repos/gkizior/SkillTracker-App", "Date": "2018-06-14T19:52:43Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edittext_room.getText().toString().contains(\"|\")) { android.widget.Toast.makeText(getContext(), R.string.username_peek, Toast.LENGTH_LONG).show(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7640/buggy-version/app.src.main.java.hft.wiinf.de.horario.view.NewEventFragment.java", "BodyUseAPI": [], "Fixed commit": "0ca215b03948db860155bbd89da0df687c096efc", "Url": "https://api.github.com/repos/Horario/Horario", "Date": "2018-05-18T12:39:37Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getView()) != null) { org.eyeseetea.malariacare.views.CustomCheckBox selectAllCheckbox = ((org.eyeseetea.malariacare.views.CustomCheckBox) (getView().findViewById(R.id.select_all_orgunits))); selectAllCheckbox.setChecked(value, isClicked); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5294/buggy-version/app.src.main.java.org.eyeseetea.malariacare.fragments.PlannedPerOrgUnitFragment.java", "BodyUseAPI": [], "Fixed commit": "769859133016125906cfaba2619ca1b25e149031", "Url": "https://api.github.com/repos/EyeSeeTea/malariapp", "Date": "2018-04-04T16:37:08Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((letter != ((chars.length) - 1)) && ((chars[letter]) == (chars[(letter + 1)]))) || ((chars[letter]) == (chars[(letter - 1)]))) { i = (rows == 0) ? random.nextInt((rows + 1)) : random.nextInt(rows); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2282/buggy-version/src.encrypt.BookEncryptor.java", "BodyUseAPI": [], "Fixed commit": "d45db96afb74e928cc9e888dbdc9bfee00e731d4", "Url": "https://api.github.com/repos/toshytwx/Book-cipher", "Date": "2018-04-19T20:50:54Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOnPosting == 1) { meetingList = meetingRepo.findAllByGivenPost(keyword, startdate, enddate, curdate, pageable).getContent(); return meetingList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/355/buggy-version/src.main.java.com.summer.demo.Controller.SearchController.java", "BodyUseAPI": [], "Fixed commit": "22bcfd7e943ab553d7fcc3f02c602ecdfa6c8a5d", "Url": "https://api.github.com/repos/buaasummer/Backend", "Date": "2018-07-04T08:57:12Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((formName) != null) for (java.util.Enumeration<java.lang.String> e = data.keys(); e.hasMoreElements();) { java.lang.String nm = e.nextElement(); results.put((((formName) + \".\") + nm), data.get(nm)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8676/buggy-version/makumba.makumba-jsp.src.main.java.org.makumba.forms.responder.FormResponder.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.put((((formName) + \".\") + nm),java.lang.Object)"], "Fixed commit": "44190cdbb788efe2668a02645a3bcfa2e482b590", "Url": "https://api.github.com/repos/makumba/makumba", "Date": "2018-05-07T10:47:12Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Double.parseDouble(entryPercentage.getText().toString())) < 0) || ((java.lang.Double.parseDouble(entryPercentage.getText().toString())) > 100)) { com.bkopellhill.gj.comisionlibre.core.utils.MessageUtil.with(getParent()).show(R.string.error_invalid, R.string.error_invalid_percentage, R.color.colorPrimary); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6523/buggy-version/app.src.main.java.com.bkopellhill.gj.comisionlibre.ui.fragments.AdvancedModeFragment.java", "BodyUseAPI": [], "Fixed commit": "5ada75ffd9c01fd3f8b3a4bc897b0241f2a45d0f", "Url": "https://api.github.com/repos/BKopellhill/CLW", "Date": "2018-01-20T20:27:08Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.android.funkytasks.SearchListViewAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (task.getStatus().equals(\"requested\")) { lowestBidString = \"N/A\"; }else if (task.getStatus().equals(\"bidded\")) { lowestBidString = java.lang.Double.toString(com.example.android.funkytasks.SearchListViewAdapter.getLowestBid(bidsList)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7496/buggy-version/app.src.main.java.com.example.android.funkytasks.SearchListViewAdapter.java", "BodyUseAPI": ["com.example.android.funkytasks.Task.getStatus()", "task.getStatus().equals(java.lang.String)"], "Fixed commit": "c95b853854586ca208bf6a856b2e61fba01c66c2", "Url": "https://api.github.com/repos/CMPUT301W18T20/FunkyTasks", "Date": "2018-03-16T22:28:49Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amount <= 0.0) { missingAmount = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2097/buggy-version/src.sample.AddTransactionController.java", "BodyUseAPI": [], "Fixed commit": "2d1d93f56e719d0efbfec24fe58132f0b5b06d36", "Url": "https://api.github.com/repos/DarrienKennedy/CryptoBudget", "Date": "2018-04-09T18:04:23Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MainActivity.locationListener) != null) { MainActivity.locationManager.removeUpdates(MainActivity.locationListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9895/buggy-version/app.src.main.java.com.example.davea.gpsaccuracy.GetInterval.java", "BodyUseAPI": [], "Fixed commit": "60beaa2f292fe2112978c296afae4c9fdd0c6ba8", "Url": "https://api.github.com/repos/sheppardd1/GPS_Accuracy", "Date": "2018-06-29T20:56:17Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.davea.gpsaccuracy.MainActivity.locationListener) != null) { com.example.davea.gpsaccuracy.MainActivity.locationManager.removeUpdates(com.example.davea.gpsaccuracy.MainActivity.locationListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9895/buggy-version/app.src.main.java.com.example.davea.gpsaccuracy.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "60beaa2f292fe2112978c296afae4c9fdd0c6ba8", "Url": "https://api.github.com/repos/sheppardd1/GPS_Accuracy", "Date": "2018-06-29T20:56:17Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hit.get()) > 0) out.append(java.lang.String.format(\"hit(%d)\\t-> best: %d, worst: %d, avg: %d\\n\", hit.get(), hit_best.get(), hit_worst.get(), ((hit_accu_time.get()) / (hit.get()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3174/buggy-version/src.de.hhu.bsinfo.utils.eval.MultiThreadMeasurementHelper.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicLong.get()", "java.lang.String.format(java.lang.String,long,long,long,long)", "java.lang.StringBuilder.append(java.lang.String)", "java.util.concurrent.atomic.AtomicLong.get()"], "Fixed commit": "dcd261ac6ea15774e5192abbb3f3b73d10026c2f", "Url": "https://api.github.com/repos/huflo/dxram-memory-reference", "Date": "2018-03-08T15:23:32Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (setDefault) { java.lang.System.out.println(\"UDP Default settings.\"); }else { java.lang.System.out.println(\"Custom settings.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2093/buggy-version/srcS.server.udp.ServerUDPManager.java", "BodyUseAPI": [], "Fixed commit": "f2fe8f18188d23e16b4ace49acf594d200cbd0fb", "Url": "https://api.github.com/repos/Junasleu/ServerTests", "Date": "2018-02-10T20:15:59Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.getInstance().isCheckNameMojang()) { org.bukkit.OfflinePlayer p = getOfflinePlayer(); if (p != null) { return p.isBanned(); }else { return false; } }else { for (org.bukkit.OfflinePlayer p : org.bukkit.Bukkit.getBannedPlayers()) { if (p.getUniqueId().toString().equalsIgnoreCase(getUUID())) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7064/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Objects.User.java", "BodyUseAPI": [], "Fixed commit": "ca4f17716b32f153ade5bd9c3514ad9e50b41ec5", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-01-07T23:43:13Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.Job<?, ?>.getLastCompletedBuild()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (lastCompletedBuild != null) { int lastJob = lastCompletedBuild.getNumber(); int minNumber = lastJob - (numToKeep); hudson.model.Run r = job.getFirstBuild(); while (r != null) { if ((r.getNumber()) > minNumber) { break; } remove(lastSuccessfulBuild, lastStableBuild, action, r); r = r.getNextBuild(); } }else { org.jenkinsci.plugins.BuildRotator.BuildRotator.LOGGER.log(java.util.logging.Level.FINE, \"There are no builds to remove for {0}\", job); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5468/buggy-version/src.main.java.org.jenkinsci.plugins.BuildRotator.BuildRotator.java", "BodyUseAPI": ["hudson.model.Run<?, ?>.getNumber()"], "Fixed commit": "afd956adcca96b17ac3e95f76a58c6230799af9e", "Url": "https://api.github.com/repos/romanisb/buildrotator-plugin", "Date": "2018-10-26T06:35:16Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { player.draw(g); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4434/buggy-version/client.EntityManager.java", "BodyUseAPI": [], "Fixed commit": "24a71cd7071daa86e7e561ce04ee7b22e9a0a537", "Url": "https://api.github.com/repos/LogFlames/TopdownShooter", "Date": "2018-08-04T22:25:06Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((entities) != null) && ((entities.size()) > 0)) { for (Entity e : entities.values()) { e.draw(g); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4434/buggy-version/client.EntityManager.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, Entity>.values()"], "Fixed commit": "24a71cd7071daa86e7e561ce04ee7b22e9a0a537", "Url": "https://api.github.com/repos/LogFlames/TopdownShooter", "Date": "2018-08-04T22:25:06Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((words[i].length()) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/574/buggy-version/src.main.java.com.revature.eval.java.core.EvaluationService.java", "BodyUseAPI": [], "Fixed commit": "1f0b91618b6e5d6cada05a84e5c9c4b5564da443", "Url": "https://api.github.com/repos/revatureclass/1806java-nick-week1java-JackH1", "Date": "2018-06-12T15:57:24Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (seqNr == 0) { stateMachineSender.processMsg(StateMachineSender.Msg.timeout0); }else if (seqNr == 1) { stateMachineSender.processMsg(StateMachineSender.Msg.timeout1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5053/buggy-version/src.DatenuebertragungUDP.FileSender.java", "BodyUseAPI": [], "Fixed commit": "2b8dc0602390c3379ded4f406fce8a1ab63c3458", "Url": "https://api.github.com/repos/SimonPreisinger/DatenuebertragungUDP", "Date": "2018-01-21T14:05:20Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (seconds < 10) { return ((java.lang.String.valueOf(minutes)) + \":0\") + (java.lang.String.valueOf(seconds)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/302/buggy-version/app.src.main.java.com.rhettnewton.musicplayer.utils.TimeUtils.java", "BodyUseAPI": ["java.lang.String.valueOf(long)"], "Fixed commit": "cfb76e9627335ddee483f8380e11ce20cf5707b5", "Url": "https://api.github.com/repos/rnewton5/AndroidMusicPlayer", "Date": "2018-03-09T16:51:13Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, ch.njol.skript.aliases.ItemType>.get(forms.getFirst())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (type == null) type = aliases.get(forms.getSecond());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5805/buggy-version/src.main.java.ch.njol.skript.aliases.AliasesProvider.java", "BodyUseAPI": [], "Fixed commit": "ede484b7333d2cee8f13f43d112f1bc23280ec1d", "Url": "https://api.github.com/repos/SkriptLang/Skript", "Date": "2018-08-29T17:30:27Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((holder.avatar) != null) { com.bumptech.glide.Glide.with(context).load(UserListUtils.singleton.getUser(username).getImUserIcon()).diskCacheStrategy(DiskCacheStrategy.ALL).placeholder(R.drawable.ease_default_avatar).into(holder.avatar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4295/buggy-version/easeui.src.main.java.com.hyphenate.easeui.adapter.EaseConversationAdapter.java", "BodyUseAPI": ["com.bumptech.glide.Glide.with(context).load(UserListUtils.singleton.getUser(username).getImUserIcon()).diskCacheStrategy(DiskCacheStrategy.ALL).placeholder(R.drawable.ease_default_avatar).into(android.widget.ImageView)"], "Fixed commit": "3a9ff2616f6b9b4e275be0800a86fac88c26c90c", "Url": "https://api.github.com/repos/GJF19981210/WoDeZhanPai", "Date": "2018-09-20T15:05:32Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expectType == null) { return readList(in, length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3746/buggy-version/hessian-lite.src.main.java.com.alibaba.com.caucho.hessian.io.AbstractDeserializer.java", "BodyUseAPI": [], "Fixed commit": "efd5cae4b294e4c455fdbdcd21cd0d96eec0c3c4", "Url": "https://api.github.com/repos/zonghaishang/dubbo", "Date": "2018-01-17T11:53:10Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expectType == null) { return readLengthList(in, length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3746/buggy-version/hessian-lite.src.main.java.com.alibaba.com.caucho.hessian.io.AbstractDeserializer.java", "BodyUseAPI": [], "Fixed commit": "efd5cae4b294e4c455fdbdcd21cd0d96eec0c3c4", "Url": "https://api.github.com/repos/zonghaishang/dubbo", "Date": "2018-01-17T11:53:10Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((expectKeyType == null) && (expectValueType == null)) { return readMap(in); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3746/buggy-version/hessian-lite.src.main.java.com.alibaba.com.caucho.hessian.io.AbstractDeserializer.java", "BodyUseAPI": [], "Fixed commit": "efd5cae4b294e4c455fdbdcd21cd0d96eec0c3c4", "Url": "https://api.github.com/repos/zonghaishang/dubbo", "Date": "2018-01-17T11:53:10Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sf.name.equals(\"id\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5279/buggy-version/src.main.java.org.flasck.flas.jsgen.Generator.java", "BodyUseAPI": [], "Fixed commit": "a88326a5e23ae48222af0a522711f03132e1f55d", "Url": "https://api.github.com/repos/zinikiGareth/flasckfl", "Date": "2018-08-22T12:10:17Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listPlayersToInsert.size()) > 0) { sledgehammer.conversion.DBObject[] objects = new sledgehammer.conversion.DBObject[listPlayersToInsert.size()]; for (int index = 0; index < (listPlayersToInsert.size()); index++) { objects[index] = listPlayersToInsert.get(index); } collectionMongoPlayers.insert(objects); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4626/buggy-version/mongoconversiontool.src.main.java.sledgehammer.conversion.SQLiteToMongo.java", "BodyUseAPI": ["java.util.List<sledgehammer.conversion.DBObject>.size()", "java.util.List<sledgehammer.conversion.DBObject>.get(int)", "java.util.List<sledgehammer.conversion.DBObject>.size()"], "Fixed commit": "27c5dd35746ec5de069de273c05105d0490c4e65", "Url": "https://api.github.com/repos/JabJabJab/Sledgehammer", "Date": "2018-01-09T11:28:34Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v.getId()) == (R.id.goToShop)) { mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(mDefaultLocation, com.example.indoormapsproject.MapsActivityIndoor.DEFAULT_ZOOM)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7520/buggy-version/app.src.main.java.com.example.indoormapsproject.MapsActivityIndoor.java", "BodyUseAPI": [], "Fixed commit": "f459895f9fb2fd35fd4148af9b9be5c4b5d06099", "Url": "https://api.github.com/repos/sweetyblack000/IndoorMapsProject", "Date": "2018-04-17T12:53:18Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bano.goblin.adapter.DefaultAdapter<T, E, V>.getItems()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((allItems.size()) - startIndex) < toIndex) { toIndexReal = (startIndex + (allItems.size())) - startIndex; }else toIndexReal = allItems.size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5229/buggy-version/goblin-adapter.src.main.java.com.bano.goblin.adapter.DefaultAdapter.java", "BodyUseAPI": ["java.util.List<T>.size()", "java.util.List<T>.size()"], "Fixed commit": "20fb5bfc0e1dcd72c548657dc84b5dfcc66c440d", "Url": "https://api.github.com/repos/alexandregpereira/goblin-adapter", "Date": "2018-07-12T20:39:17Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.net.SocketException) { closeSocket(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1396/buggy-version/app.src.main.java.cs340.TicketClient.Communicator.ClientCommunicator.java", "BodyUseAPI": [], "Fixed commit": "9bd5ba8344bd14b447d3028e1f869f77d7716295", "Url": "https://api.github.com/repos/ben-horrocks/TicketToRide", "Date": "2018-02-12T22:19:37Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.utwente.ing.model.persistentmodel.CustomORM.getCategoryRules(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((categoryRules.size()) > 0) { categoryRules.sort(java.util.Comparator.comparing(CategoryRule::getCategory_id)); for (int i = 0; i < (categoryRules.size()); i++) { if (transactionMatchesCategoryRule(transaction, categoryRules.get(i))) { assignCategoryToTransaction(sessionID, transactionID, categoryRules.get(i).getCategory_id()); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4293/buggy-version/src.main.java.nl.utwente.ing.model.persistentmodel.PersistentModel.java", "BodyUseAPI": ["categoryRules.get(i).getCategory_id()", "nl.utwente.ing.model.persistentmodel.PersistentModel.transactionMatchesCategoryRule(nl.utwente.ing.model.bean.Transaction,categoryRules.get(i))", "java.util.ArrayList<nl.utwente.ing.model.bean.CategoryRule>.get(int)", "nl.utwente.ing.model.persistentmodel.PersistentModel.assignCategoryToTransaction(java.lang.String,long,categoryRules.get(i).getCategory_id())", "java.util.ArrayList<nl.utwente.ing.model.bean.CategoryRule>.sort(java.util.Comparator)", "java.util.ArrayList<nl.utwente.ing.model.bean.CategoryRule>.size()", "java.util.ArrayList<nl.utwente.ing.model.bean.CategoryRule>.get(int)"], "Fixed commit": "ae8e693917e9036b6c7b7d4095b43fea9e715100", "Url": "https://api.github.com/repos/agilitytestbed/Team-D2", "Date": "2018-08-02T14:41:45Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((params[i]) instanceof java.lang.String) { str = ((java.lang.String) (params[i])); }else { str = getObjectMapper().writeValueAsString(params[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7622/buggy-version/lib.src.main.java.ir.atitec.signalgo.HttpCore.java", "BodyUseAPI": ["getObjectMapper().writeValueAsString(java.lang.Object)"], "Fixed commit": "d3440c3ca6f18d2d1203121ac6e5c56f892b87be", "Url": "https://api.github.com/repos/hamedgramzi/signalGoClient", "Date": "2018-09-04T10:44:39Z"},
{"Line": "=>869", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(de.gebit.integrity.scoping.DSLScopeProvider.insideFullBuildCycle)) { java.util.List<org.eclipse.xtext.resource.IEObjectDescription> tempImportedGlobalVariablesFromLocalPackages = new java.util.ArrayList<org.eclipse.xtext.resource.IEObjectDescription>(); for (de.gebit.integrity.dsl.Statement tempStatement : tempRootModel.getStatements()) { if (tempStatement instanceof de.gebit.integrity.dsl.PackageDefinition) { for (de.gebit.integrity.dsl.PackageStatement tempPackageStatement : ((de.gebit.integrity.dsl.PackageDefinition) (tempStatement)).getStatements()) { if (tempPackageStatement instanceof de.gebit.integrity.dsl.VariableDefinition) { tempImportedGlobalVariablesFromLocalPackages.add(org.eclipse.xtext.resource.EObjectDescription.create(((de.gebit.integrity.dsl.VariableDefinition) (tempPackageStatement)).getName().getName(), ((de.gebit.integrity.dsl.VariableDefinition) (tempPackageStatement)).getName())); }else if (tempPackageStatement instanceof de.gebit.integrity.dsl.ConstantDefinition) { tempImportedGlobalVariablesFromLocalPackages.add(org.eclipse.xtext.resource.EObjectDescription.create(((de.gebit.integrity.dsl.ConstantDefinition) (tempPackageStatement)).getName().getName(), ((de.gebit.integrity.dsl.ConstantDefinition) (tempPackageStatement)).getName())); } } } } tempScope = new org.eclipse.xtext.scoping.impl.SimpleScope(tempImportedGlobalVariablesScope, tempImportedGlobalVariablesFromLocalPackages); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6031/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.scoping.DSLScopeProvider.java", "BodyUseAPI": [], "Fixed commit": "7b1e2990104feeecb09b79327f09b4978828226a", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2018-01-26T14:51:15Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x.isVirtual()) { print0((ucase ? \" VIRTUAL\" : \" virtual\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3068/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.visitor.MySqlOutputVisitor.java", "BodyUseAPI": [], "Fixed commit": "26d005ccb1c92bd6af2873aa8d1b27d038f973cc", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2018-05-14T13:26:36Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (game.musicMuted) { volumeDialog.setVisible(true); volumeButton.setText(\"Music Off\"); game.bgMusic.play(); }else { volumeButton.setText(\"Music On\"); game.bgMusic.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8182/buggy-version/adventure-game.core.src.edu.augustana.csc285.game.MainMenuScreen.java", "BodyUseAPI": ["game.bgMusic.stop()", "game.bgMusic.play()"], "Fixed commit": "4e288b062158fe3a16e45eec367a8b9dffe75092", "Url": "https://api.github.com/repos/AugustanaCSC285Fall17/CurlewRepo", "Date": "2018-08-28T19:28:33Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (responseBody != null) { if (!(containerClz.equals(clazz))) { responseBodyName = (((containerClz.getSimpleName()) + \"[\") + (clazz.getSimpleName())) + \"]\"; }else { responseBodyName = clazz.getSimpleName(); } addToModels(clazz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2550/buggy-version/src.main.java.com.github.kongchen.swagger.docgen.spring.SpringMvcApiReader.java", "BodyUseAPI": [], "Fixed commit": "94ee687540a642d6ad321c598b1a4f14105aa194", "Url": "https://api.github.com/repos/leusonmario/swagger-maven-plugin", "Date": "2015-02-09T17:24:31Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (disabled) { error = 0; }else { error = (target) - measure; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3920/buggy-version/src.org.usfirst.frc.team4468.robot.Util.PID.java", "BodyUseAPI": [], "Fixed commit": "ae5637e46bd764a8eaddef5a964ef71f946bc816", "Url": "https://api.github.com/repos/FernbankLINKSRobotics/FRC2018", "Date": "2018-01-15T18:26:18Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mizo0203.lilywhite.repo.objectify.entity.LineTalkRoomConfig.getReminderEnqueuedTaskName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((taskName == null) || (taskName.isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3543/buggy-version/src.main.java.com.mizo0203.lilywhite.repo.Repository.java", "BodyUseAPI": [], "Fixed commit": "61d683ea0ca4dce08d1e336d4055a1ba75c7c841", "Url": "https://api.github.com/repos/mizo0203/lily-white-line-bot", "Date": "2018-01-21T08:46:26Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.body().getMovies()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (movies.isEmpty()) { android.widget.Toast.makeText(this, \"No movies found with this critera\", Toast.LENGTH_LONG).show(); }else { android.content.Intent intent = new android.content.Intent(this, com.example.dan.moviesearchapp.ListOfMoviesActivity.class); intent.putExtra(\"Movies\", movies); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9364/buggy-version/app.src.main.java.com.example.dan.moviesearchapp.MainMenuActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,java.util.ArrayList<com.example.dan.moviesearchapp.Movie>)"], "Fixed commit": "b4db79af414030113a2bc85e396ba99c05803b6e", "Url": "https://api.github.com/repos/drea52693/MovieSearchApp", "Date": "2018-05-23T05:26:03Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((delegate) != null) { delegate.getProfileSuccess(profile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8105/buggy-version/app.src.main.java.com.example.vankien.dating.Controllers.ProfileController.java", "BodyUseAPI": [], "Fixed commit": "63d74a1640f056c804cce0576d1aa8cf2c476a30", "Url": "https://api.github.com/repos/vankien96/Dating", "Date": "2018-03-31T15:16:41Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((net.bootsfaces.component.dataTableColumn.DataTableColumn) (column)).isSearchable())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7919/buggy-version/src.main.java.net.bootsfaces.component.dataTable.DataTableRenderer.java", "BodyUseAPI": [], "Fixed commit": "2c8427770ef557659f6f067d6321975fd4e84f36", "Url": "https://api.github.com/repos/TheCoder4eu/BootsFaces-OSP", "Date": "2018-06-03T09:47:55Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (templn.toBeRemoved()) { templn.unremove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4040/buggy-version/src.DrawPanelTwo.java", "BodyUseAPI": ["Line.unremove()"], "Fixed commit": "b7a3c5b5e5d8b312e12cf35e6359980aa9c0f3fc", "Url": "https://api.github.com/repos/CodyRoberson/cse360p4", "Date": "2018-07-09T16:43:09Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getStatData().getStats()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (stats.isEmpty()) { this.senderSendMessage(\" No statistics yet.\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9092/buggy-version/src.main.java.com.craftyn.casinoslots.command.CasinoStats.java", "BodyUseAPI": [], "Fixed commit": "3ec9d7fb1ca41a604b1aa526d64c5fd894f4c963", "Url": "https://api.github.com/repos/graywolf336/CasinoSlots", "Date": "2018-05-17T05:39:39Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mDepartureListFragment.isAdded()) && (mFavoriteListFragment.isAdded())) { getSupportFragmentManager().putFragment(outState, ch.liip.timeforcoffee.activity.DeparturesActivity.DEPARTURE_LIST_FRAGMENT_KEY, mDepartureListFragment); getSupportFragmentManager().putFragment(outState, ch.liip.timeforcoffee.activity.DeparturesActivity.FAVORITE_LIST_FRAGMENT_KEY, mFavoriteListFragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8358/buggy-version/mobile.src.main.java.ch.liip.timeforcoffee.activity.DeparturesActivity.java", "BodyUseAPI": ["getSupportFragmentManager().putFragment(android.os.Bundle,java.lang.String,ch.liip.timeforcoffee.fragment.FavoritesListFragment)", "getSupportFragmentManager().putFragment(android.os.Bundle,java.lang.String,ch.liip.timeforcoffee.fragment.DepartureListFragment)"], "Fixed commit": "70f7021969ee02ea4c355516d08b86bde72a5540", "Url": "https://api.github.com/repos/timeforcoffee/timeforcoffee-android", "Date": "2018-02-19T17:08:59Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mStationListFragment.isAdded()) && (mFavoriteListFragment.isAdded())) { getSupportFragmentManager().putFragment(outState, ch.liip.timeforcoffee.activity.MainActivity.STATION_LIST_FRAGMENT_KEY, mStationListFragment); getSupportFragmentManager().putFragment(outState, ch.liip.timeforcoffee.activity.MainActivity.FAVORITE_LIST_FRAGMENT_KEY, mFavoriteListFragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8358/buggy-version/mobile.src.main.java.ch.liip.timeforcoffee.activity.MainActivity.java", "BodyUseAPI": ["getSupportFragmentManager().putFragment(android.os.Bundle,java.lang.String,ch.liip.timeforcoffee.fragment.StationListFragment)", "getSupportFragmentManager().putFragment(android.os.Bundle,java.lang.String,ch.liip.timeforcoffee.fragment.FavoritesListFragment)"], "Fixed commit": "70f7021969ee02ea4c355516d08b86bde72a5540", "Url": "https://api.github.com/repos/timeforcoffee/timeforcoffee-android", "Date": "2018-02-19T17:08:59Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mConnectionListFragment.isAdded()) { getSupportFragmentManager().putFragment(outState, ch.liip.timeforcoffee.activity.ConnectionsActivity.CONNECTION_LIST_FRAGMENT_KEY, mConnectionListFragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8358/buggy-version/mobile.src.main.java.ch.liip.timeforcoffee.activity.ConnectionsActivity.java", "BodyUseAPI": ["getSupportFragmentManager().putFragment(android.os.Bundle,java.lang.String,ch.liip.timeforcoffee.fragment.ConnectionListFragment)"], "Fixed commit": "70f7021969ee02ea4c355516d08b86bde72a5540", "Url": "https://api.github.com/repos/timeforcoffee/timeforcoffee-android", "Date": "2018-02-19T17:08:59Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!userExistsInSuggestedList) { if (!(m.getUuid().equals(uuid))) { android.util.Log.d(\"Hash: \", (((\"Adding user: \" + (m.getUsername())) + \"->\") + (feedsSuggest.size()))); feeds.add(m); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8377/buggy-version/app.src.main.java.mobileprogramming.unimelb.com.instagramapplication.DiscoverFragment.java", "BodyUseAPI": [], "Fixed commit": "f07f45559f8685abed8a5f0b57c8d78c450120e7", "Url": "https://api.github.com/repos/atiq25101990/InstagramApplication", "Date": "2018-10-20T16:36:12Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size()) == 0) { return \"[]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6776/buggy-version/SuperArray.java", "BodyUseAPI": [], "Fixed commit": "fa9b47b90c253d8ab838cd6206f9f8c8809dae6f", "Url": "https://api.github.com/repos/qtgeo1248/MKS21X-SuperArray", "Date": "2018-10-26T02:30:28Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size()) == 0) { return \"[]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6776/buggy-version/SuperArray.java", "BodyUseAPI": [], "Fixed commit": "fa9b47b90c253d8ab838cd6206f9f8c8809dae6f", "Url": "https://api.github.com/repos/qtgeo1248/MKS21X-SuperArray", "Date": "2018-10-26T02:30:28Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (ch.cyberduck.core.sparkle.Updater.CLASS)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8110/buggy-version/core.dylib.src.main.java.ch.cyberduck.core.sparkle.Updater.java", "BodyUseAPI": [], "Fixed commit": "d7f058e4e5af82470103606823b02993c3efa08f", "Url": "https://api.github.com/repos/iterate-ch/cyberduck", "Date": "2018-05-20T18:20:35Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["giveitforward.managers.ManageUser.getUserfromUID(updatedUser.getUid())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((updatedUser.getPassword().equals(currentUser.getPassword())) == false) { java.lang.String sha256hex = org.apache.commons.codec.digest.DigestUtils.sha256Hex(((updatedUser.getPassword()) + \"supercalifragilisticexpialidocious\")); updatedUser.setPassword(sha256hex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8070/buggy-version/giveitforward.src.main.java.giveitforward.managers.ManageUser.java", "BodyUseAPI": ["org.apache.commons.codec.digest.DigestUtils.sha256Hex(((updatedUser.getPassword()) + \"supercalifragilisticexpialidocious\"))", "giveitforward.models.User.getPassword()", "giveitforward.models.User.setPassword(java.lang.String)"], "Fixed commit": "cbe2e0398db259a572c69985764c6aa191e8198b", "Url": "https://api.github.com/repos/GiveItForward/Server", "Date": "2018-03-14T06:46:44Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (totalEnergy >= 0) { throw new java.lang.IllegalArgumentException(\"Total energy consuption must be negative\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1122/buggy-version/src.main.java.org.matsim.vsp.ev.dvrp.ChargingTaskImpl.java", "BodyUseAPI": [], "Fixed commit": "fef496b03e9f14252ab8ff66f7feef798d4bb7ef", "Url": "https://api.github.com/repos/matsim-vsp/ev", "Date": "2018-04-09T21:33:52Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.endeavourhealth.transform.tpp.cache.StaffMemberProfileCache.size()) > 0) { org.endeavourhealth.transform.tpp.csv.transforms.staff.SRStaffMemberTransformer.LOG.error((\"Staff cache should be empty but has : \" + (org.endeavourhealth.transform.tpp.cache.StaffMemberProfileCache.size()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4082/buggy-version/src.main.java.org.endeavourhealth.transform.tpp.csv.transforms.staff.SRStaffMemberTransformer.java", "BodyUseAPI": [], "Fixed commit": "f0fb6f211052805bce3597ab173cc658bff58ca6", "Url": "https://api.github.com/repos/endeavourhealth/Transforms", "Date": "2018-06-07T14:49:39Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (occurences.contains(lastOccurence)) { java.lang.Integer index = occurences.get(lastOccurence); painter.setCurrentIndex(index); java.awt.Rectangle rect = comp.modelToView(index); comp.scrollRectToVisible(rect); comp.moveCaretPosition(index); comp.repaint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5767/buggy-version/src.main.java.com.github.schuettec.multiprocman.console.WordSearch.java", "BodyUseAPI": ["java.util.Stack<java.lang.Integer>.get(java.lang.Integer)"], "Fixed commit": "cbb13b07ffd55b07bc8419db706750cf8cfe1b54", "Url": "https://api.github.com/repos/schuettec/multiprocman", "Date": "2018-06-28T10:33:52Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(stringDate)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/499/buggy-version/src.main.java.lyndeson.inventory.utils.DateUtils.java", "BodyUseAPI": [], "Fixed commit": "f5a33a4d81944b91e5400020ca1fbbcc679fc530", "Url": "https://api.github.com/repos/migsarmiento/LyndesonInventory", "Date": "2018-07-28T07:56:49Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Objects.isNull(date)) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/499/buggy-version/src.main.java.lyndeson.inventory.utils.DateUtils.java", "BodyUseAPI": [], "Fixed commit": "f5a33a4d81944b91e5400020ca1fbbcc679fc530", "Url": "https://api.github.com/repos/migsarmiento/LyndesonInventory", "Date": "2018-07-28T07:56:49Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(stringDate)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/499/buggy-version/src.main.java.lyndeson.inventory.utils.DateUtils.java", "BodyUseAPI": [], "Fixed commit": "f5a33a4d81944b91e5400020ca1fbbcc679fc530", "Url": "https://api.github.com/repos/migsarmiento/LyndesonInventory", "Date": "2018-07-28T07:56:49Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(newCustomer.getCustomerNumber())) { try { java.lang.String generateCustomerNumber = customerService.generateCustomerNumber(newCustomer); newCustomer.setCustomerNumber(generateCustomerNumber); } catch (java.lang.Exception e) { net.mscs.properad.rest.CustomerEndpoint.LOG.warn(\"customer Number cannot be created. Persist without customer number.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3294/buggy-version/properad-rest.src.main.java.net.mscs.properad.rest.CustomerEndpoint.java", "BodyUseAPI": ["net.mscs.customer.entities.Customer.setCustomerNumber(java.lang.String)", "net.mscs.customer.services.CustomerService.generateCustomerNumber(net.mscs.customer.entities.Customer)"], "Fixed commit": "d4dd84c1ed7e22453c9fc6880654cbcfb42c6f9e", "Url": "https://api.github.com/repos/mscunds/properad", "Date": "2018-08-10T16:29:15Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["TreeNode.getFrequency()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((queue.get(nextPos).getFrequency()) == value) { queue.set(length, node); }else { for (int j = length - 1; j >= shiftIndex; j--) { queue.set((j + 1), queue.get(j)); } queue.set((prevPos + 1), node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9628/buggy-version/src.PriorityQueue.java", "BodyUseAPI": ["java.util.ArrayList<TreeNode>.set(int,TreeNode)", "java.util.ArrayList<TreeNode>.set(int,queue.get(j))", "java.util.ArrayList<TreeNode>.get(int)", "java.util.ArrayList<TreeNode>.set(int,TreeNode)"], "Fixed commit": "8fb96a94cd2cd6a1d494ec958b003c51009d0080", "Url": "https://api.github.com/repos/anishaas/huffman-cs314", "Date": "2018-05-19T20:51:33Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Countries.get(i).equals(\"Birmingham,GB\")) { java.lang.String country = \"Birmingham\"; weatherInfo.setCountry(country); }else { weatherInfo.setCountry(Countries.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3380/buggy-version/src.main.java.imu.recommender.jobs.UpdateWeather.java", "BodyUseAPI": ["imu.recommender.models.weather.Weather.setCountry(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "223f03defd155be1e4e7254682371837f0183e7d", "Url": "https://api.github.com/repos/mpthimios/optimum_recommender", "Date": "2018-10-12T09:04:15Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (io.nuls.consensus.poc.process.BlockProcess.BB) { if ((block.getHeader().getHeight()) > 7450) { if ((!(io.nuls.kernel.utils.AddressTool.getStringAddressByBytes(block.getHeader().getPackingAddress()).equals(\"Nse3bDxy7g6ddtfeVfuBGftyi1Y3zcTb\"))) && (!(io.nuls.kernel.utils.AddressTool.getStringAddressByBytes(block.getHeader().getPackingAddress()).equals(\"Nse2Jiw9YNSZqm7oecuK1H7cNPH7LaLQ\")))) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1096/buggy-version/consensus-module.poc.consensus-poc-base.src.main.java.io.nuls.consensus.poc.process.BlockProcess.java", "BodyUseAPI": [], "Fixed commit": "d4e249aa5af1f826fc039dc8af20d8288b6cd2d0", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-09-16T05:58:36Z"},
{"Line": "=>1031", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<com.smoftware.elmour.UI.BattleHUD.ScreenState>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (previousScreenState != (com.smoftware.elmour.UI.BattleHUD.ScreenState.FIGHT)) { selectedItemBanner.addAction(com.badlogic.gdx.scenes.scene2d.actions.Actions.sizeBy(0, (-(selectedItemBannerHeight)), ((fadeTime) / 2))); selectedItemBanner.addAction(com.badlogic.gdx.scenes.scene2d.actions.Actions.moveBy(0, selectedItemBannerHeight, ((fadeTime) / 2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4131/buggy-version/core.src.com.smoftware.elmour.UI.BattleHUD.java", "BodyUseAPI": [], "Fixed commit": "5b24083ad9aedf3b79b5795df4e2b76af05f86d6", "Url": "https://api.github.com/repos/smoenssen/elmour", "Date": "2018-10-09T23:50:49Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"https\".equals(url.getProtocol())) { if (com.safframework.tony.common.utils.Preconditions.isNotBlank(url.getQuery())) { httpRequest = webClient.get(443, url.getHost(), (((url.getPath()) + \"?\") + (url.getQuery()))).ssl(true); }else { httpRequest = webClient.get(443, url.getHost(), url.getPath()).ssl(true); } if (com.safframework.tony.common.utils.Preconditions.isNotBlank(header)) { for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : header.entrySet()) { httpRequest.putHeader(entry.getKey(), entry.getValue()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4006/buggy-version/core.src.main.java.com.cv4j.netdiscovery.core.downloader.vertx.VertxDownloader.java", "BodyUseAPI": ["io.vertx.reactivex.ext.web.client.WebClient.get(int,java.lang.String,java.lang.String)", "com.safframework.tony.common.utils.Preconditions.isNotBlank(java.lang.String)", "java.net.URL.getQuery()", "java.net.URL.getHost()", "java.net.URL.getQuery()", "java.net.URL.getPath()", "java.net.URL.getPath()", "io.vertx.reactivex.ext.web.client.WebClient.get(int,java.lang.String,java.lang.String)", "java.net.URL.getHost()", "webClient.get(443, url.getHost(), url.getPath()).ssl(boolean)", "webClient.get(443, url.getHost(), (((url.getPath()) + \"?\") + (url.getQuery()))).ssl(boolean)"], "Fixed commit": "f6fc21dabbcb996d33537e56b2e10783c830482d", "Url": "https://api.github.com/repos/fengzhizi715/NetDiscovery", "Date": "2018-01-28T08:27:03Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((side.speed) >= 0.1) { side.addPoint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3929/buggy-version/src.main.java.frc.robot.Autonomous.CharacterizeDrive.java", "BodyUseAPI": ["frc.robot.Autonomous.CharacterizeDrive.dtSide.addPoint()"], "Fixed commit": "fbeb8c97ddf6020d56d53effa7984f7cd48e6b34", "Url": "https://api.github.com/repos/MillsRoboticsTeam253/BobaBots-Path-Testing", "Date": "2018-10-09T04:03:02Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) != null) { return data.toString(); }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8545/buggy-version/wheel-picker.src.main.java.com.aigestudio.wheelpicker.WheelItem.java", "BodyUseAPI": [], "Fixed commit": "ed39c5c012b66482cae7246997af957864dc3863", "Url": "https://api.github.com/repos/minyushov/WheelPicker", "Date": "2018-09-11T14:39:10Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((icon) != null) { icon.recycle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8545/buggy-version/wheel-picker.src.main.java.com.aigestudio.wheelpicker.WheelItem.java", "BodyUseAPI": [], "Fixed commit": "ed39c5c012b66482cae7246997af957864dc3863", "Url": "https://api.github.com/repos/minyushov/WheelPicker", "Date": "2018-09-11T14:39:10Z"},
{"Line": "=>668", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((DataStore.attendanceLog.getCurrentSession()) != null) { disableButton(createMeetingButton); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9746/buggy-version/app.src.main.java.com.team3543.trcattendance_android.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d73c81101378886d20f07d733d35e70a60772f68", "Url": "https://api.github.com/repos/DrDab/TrcAttendance-Android", "Date": "2018-05-27T18:48:05Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getUserInput().get(\"type\").equals(\"buy\")) tickerData.put(\"ticker_earnings\", ((java.lang.Double.valueOf(getUserInput().get(\"total\").toString())) * (-1))); else tickerData.put(\"ticker_earnings\", java.lang.Double.valueOf(getUserInput().get(\"total\").toString()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1150/buggy-version/app.src.main.java.com.sartainstudios.investmentlogger.CreateTransaction.java", "BodyUseAPI": [], "Fixed commit": "ec931e88bfc2d5f535e1ec2d0d39dcaa2e7de3fe", "Url": "https://api.github.com/repos/jhnsartain3/InvestmentLogger", "Date": "2018-08-10T04:47:24Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ml.qingsu.fuckview.models.ViewModel.fromString(intent.getStringExtra(\"record\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (viewModel != null) { mInfo.setTag(viewModel); mInfo.setText((((context.getString(R.string.click_to_save)) + \" \") + (viewModel.getPath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4938/buggy-version/app.src.main.java.ml.qingsu.fuckview.ui.popups.DumpViewerPopupView.java", "BodyUseAPI": ["ml.qingsu.fuckview.models.ViewModel.getPath()", "android.widget.TextView.setText((((context.getString(R.string.click_to_save)) + \" \") + (viewModel.getPath())))", "android.widget.TextView.setTag(ml.qingsu.fuckview.models.ViewModel)"], "Fixed commit": "d431e3e0099f596c4bc45bf52ac9630a7f70c647", "Url": "https://api.github.com/repos/w568w/fuckView", "Date": "2018-05-05T07:28:12Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((property.getValue()) != null) && ((property.getValue().getType().equals(JSONDataType.OBJECT)) || ((property.getValue().getType().equals(JSONDataType.ARRAY)) && (property.getValue().getItems().getType().equals(JSONDataType.OBJECT))))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4138/buggy-version/plugins.edu.uoc.som.openapitouml.src.edu.uoc.som.openapitouml.generators.ClassDiagramGenerator.java", "BodyUseAPI": [], "Fixed commit": "2464e6f030947f063ca776349c851a8e7fba9b5a", "Url": "https://api.github.com/repos/SOM-Research/openapi-to-uml", "Date": "2018-03-20T11:53:59Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (organisation.getIsService().equals(\"1\")) { hashString += \"service\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2556/buggy-version/API.src.main.java.org.endeavourhealth.datasharingmanager.api.endpoints.OrganisationEndpoint.java", "BodyUseAPI": [], "Fixed commit": "c3214733d07dede76f212d0b978266d536e5149a", "Url": "https://api.github.com/repos/endeavourhealth-discovery/DataSharingManager", "Date": "2018-05-09T09:06:28Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (code != null) { int c = couponDAO.update(orderPO.getId(), userId, code); if (c != 1) { logger.error(\"\u4f18\u60e0\u5238\u4f7f\u7528\u66f4\u65b0,\u54cd\u5e94\u7ed3\u679c: {}\", c); throw new cn.wqisland.exception.WqIslandException(\"\u62b1\u6b49,\u4f7f\u7528\u4f18\u60e0\u5238\u8d2d\u4e70\u5931\u8d25,\u8bf7\u7a0d\u540e\u518d\u8bd5\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4070/buggy-version/src.main.java.cn.wqisland.service.impl.OrderServiceImpl.java", "BodyUseAPI": ["cn.wqisland.service.impl.ICouponDAO.update(orderPO.getId(),java.lang.Integer,java.lang.String)"], "Fixed commit": "a9be50b1d4015a792f724def4e1573fe102837af", "Url": "https://api.github.com/repos/nihao17546/wq-island", "Date": "2018-01-11T02:21:50Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.size()) == 0) { mPaginate.setHasMoreDataToLoad(false); empty.setVisibility(View.VISIBLE); adViewWrapperAdapter.clearAdView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5712/buggy-version/app.src.main.java.com.kabouzeid.gramophone.ui.activities.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "6e96f7e2d8e8703d2996b7afe486c92a180f9b44", "Url": "https://api.github.com/repos/LIYANJU2015/MusicDownloader", "Date": "2018-02-02T07:42:33Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFinishing())) android.widget.Toast.makeText(getApplicationContext(), \"Please select a Bluetooth Device and enter all adjustments\", Toast.LENGTH_LONG).show(); else { android.content.Intent myIntent = new android.content.Intent(view.getContext(), com.example.adamm.gamepad.PatientView.class); startActivityForResult(myIntent, 0); newGameInfo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4237/buggy-version/app.src.main.java.com.example.adamm.gamepad.NewGame.java", "BodyUseAPI": [], "Fixed commit": "fc3189f979089083635821fba973541ac99a71ac", "Url": "https://api.github.com/repos/adammorrone/GamePAD", "Date": "2018-04-06T19:16:49Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_nameSayerModel.getDatabase().size()) > 5) { for (int i = 0; i < 5; i++) { java.util.List<data.Name> subnames = new java.util.ArrayList<data.Name>(); subnames.add(_nameSayerModel.getDatabase().get(rnd.nextInt(_nameSayerModel.getDatabase().size()))); subnames.add(_nameSayerModel.getDatabase().get(rnd.nextInt(_nameSayerModel.getDatabase().size()))); data.FullName fullName = new data.FullName((((subnames.get(0).toString()) + \" \") + (subnames.get(1).toString())), subnames); _randomizedPlaylist.getFullNames().add(fullName); } _defaultNames.setItems(javafx.collections.FXCollections.observableArrayList(_randomizedPlaylist.getFullNames())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/435/buggy-version/src.controllers.StartScreenController.java", "BodyUseAPI": ["java.util.List<data.Name>.add(_nameSayerModel.getDatabase().get(rnd.nextInt(_nameSayerModel.getDatabase().size())))", "_nameSayerModel.getDatabase().get(int)", "_nameSayerModel.getDatabase().get(int)", "java.util.Random.nextInt(_nameSayerModel.getDatabase().size())", "data.NameSayerModel.getDatabase()", "_nameSayerModel.getDatabase().size()", "data.NameSayerModel.getDatabase()", "java.util.List<data.Name>.add(_nameSayerModel.getDatabase().get(rnd.nextInt(_nameSayerModel.getDatabase().size())))", "data.NameSayerModel.getDatabase()", "_nameSayerModel.getDatabase().size()", "java.util.Random.nextInt(_nameSayerModel.getDatabase().size())", "data.NameSayerModel.getDatabase()"], "Fixed commit": "d3593519b5b6cbcf6c2aa84b35dd5115b8527c27", "Url": "https://api.github.com/repos/radcoolman/NameSayer", "Date": "2018-10-07T09:40:24Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["id.cathode.currencyconverterrp_usd.MainActivity.findViewById(R.id.ammountEditText)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ammountEditText.getText().toString().isEmpty()) { android.widget.Toast.makeText(getApplicationContext(), \"Please input a number\", Toast.LENGTH_SHORT).show(); }else { int parseInt = java.lang.Integer.parseInt(ammountEditText.getText().toString()); java.lang.Double convertResult = parseInt * 6.9E-5; android.widget.Toast.makeText(getApplicationContext(), java.lang.String.format(\"USD %.2f\", convertResult), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9095/buggy-version/app.src.main.java.id.cathode.currencyconverterrp_usd.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "ammountEditText.getText().toString()", "java.lang.Integer.parseInt(ammountEditText.getText().toString())"], "Fixed commit": "17a244891fcec63c525de0dfbc9efc0b7100d2d9", "Url": "https://api.github.com/repos/yusufatw/CurrencyConverterIDRtoUSD", "Date": "2018-09-11T06:08:21Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.beam.runners.fnexecution.environment.ProcessManager.INHERIT_IO) { pb.inheritIO(); }else { pb.redirectErrorStream(true); if (java.lang.System.getProperty(\"os.name\", \"\").startsWith(\"Windows\")) { pb.redirectOutput(new java.io.File(\"nul\")); }else { pb.redirectOutput(new java.io.File(\"/dev/null\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8378/buggy-version/runners.java-fn-execution.src.main.java.org.apache.beam.runners.fnexecution.environment.ProcessManager.java", "BodyUseAPI": [], "Fixed commit": "17963b603b3ac21d84787b6435993e09617013ff", "Url": "https://api.github.com/repos/tweise/beam", "Date": "2018-08-30T09:32:02Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLabelBaoHanh) { org.jsoup.nodes.Element productBrand = productSpecifications.get(1).selectFirst(\"td.attribute-value\"); productInformation.setProductBrand(productBrand.text()); }else { org.jsoup.nodes.Element productBrand = productSpecifications.get(0).selectFirst(\"td.attribute-value\"); productInformation.setProductBrand(productBrand.text()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4080/buggy-version/src.main.java.com.dineshonjava.thongtinnhanhang.crawler.Controller.ProductInformationParser.java", "BodyUseAPI": [], "Fixed commit": "381139f52a8f3fbe02833c5b58ea772df8437494", "Url": "https://api.github.com/repos/HTNL123456/ProductInformationCrawler", "Date": "2018-06-14T07:36:06Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["productSpecifications.get(0).selectFirst(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.dineshonjava.thongtinnhanhang.crawler.Utils.StringUtils.removeAccent(lable.text()).equals(\"Bao hanh (thang)\")) { isLabelBaoHanh = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4080/buggy-version/src.main.java.com.dineshonjava.thongtinnhanhang.crawler.Controller.ProductInformationParser.java", "BodyUseAPI": [], "Fixed commit": "381139f52a8f3fbe02833c5b58ea772df8437494", "Url": "https://api.github.com/repos/HTNL123456/ProductInformationCrawler", "Date": "2018-06-14T07:36:06Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fightStart) && (((laurence.getMovementState()) != (MainCharacter.MovementState.RUNNING)) || ((laurence.getMovementState()) != (MainCharacter.MovementState.ATTACKING)))) laurence.setMovementState(MainCharacter.MovementState.RUNNING);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2191/buggy-version/core.src.mx.com.nullpointer.levels.LevelTwo.java", "BodyUseAPI": ["mx.com.nullpointer.levels.LevelTwo.setMovementState(MainCharacter.MovementState.RUNNING)"], "Fixed commit": "593012a08110e42ed99e8266797db611054b58de", "Url": "https://api.github.com/repos/JavierRMota/In-Another-Kingdom", "Date": "2018-04-06T13:14:53Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(saveDoc())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5707/buggy-version/src.view.Main.java", "BodyUseAPI": [], "Fixed commit": "4f46aeba57b79891f63961d9085df978b7c45567", "Url": "https://api.github.com/repos/RuiHeHubGit/TextEditor", "Date": "2018-08-08T07:48:25Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (in == null) { throw new java.io.IOException(\"Input stream must not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3128/buggy-version/library.java.net.openid.appauth.Utils.java", "BodyUseAPI": [], "Fixed commit": "07495abf57bdfcb682d8e2a7f7c7546b632ab527", "Url": "https://api.github.com/repos/hnljp/AppAuth-Android", "Date": "2018-10-01T23:56:10Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (ap.hasKey(\"peakf\")) spoints = org.seqcode.data.io.RegionFileUtilities.loadStrandedPointsFromMotifFile(gconf.getGenome(), ap.getKeyValue(\"peakf\"), win);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/211/buggy-version/src.org.seqcode.projects.chexmix.shapealign.alignment.ShapeAlignConfig.java", "BodyUseAPI": [], "Fixed commit": "3ee66c3037e87ed4757f5e5161c9e40d829eacc3", "Url": "https://api.github.com/repos/seqcode/chexmix", "Date": "2018-02-13T19:24:46Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getDate()) != null) { intent.putExtra(\"date\", task.getFormattedDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8037/buggy-version/app.src.main.java.com.example.tidy.detailActivities.NormalCategory.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,task.getFormattedDate())", "com.example.tidy.objects.Task.getFormattedDate()"], "Fixed commit": "161cbbd9f3386a481e38d4c81feee75742efd22d", "Url": "https://api.github.com/repos/reakz11/Tidy", "Date": "2018-06-16T21:03:21Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<backend.value.Instruction.AllocaInst>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ai.isUseEmpty()) { ai.eraseFromParent(); backend.transform.scalars.SROA.NumReplaced.inc(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2770/buggy-version/java.backend.transform.scalars.SROA.java", "BodyUseAPI": ["backend.value.Instruction.AllocaInst.eraseFromParent()"], "Fixed commit": "b973c292ae9dca3c9293b40cb6b606bd1659680f", "Url": "https://api.github.com/repos/JianpingZeng/xcc", "Date": "2018-07-27T12:16:13Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (derivedParameter.paramName.equals(\"mapreduce.map.java.opts\")) { java.lang.String parentParamName = \"mapreduce.map.memory.mb\"; if (jobSuggestedParamValueMap.containsKey(parentParamName)) { paramValue = 0.75 * (jobSuggestedParamValueMap.get(parentParamName)); } }else if (derivedParameter.paramName.equals(\"mapreduce.input.fileinputformat.split.maxsize\")) { java.lang.String parentParamName = \"pig.maxCombinedSplitSize\"; if (jobSuggestedParamValueMap.containsKey(parentParamName)) { paramValue = jobSuggestedParamValueMap.get(parentParamName); } }else if (derivedParameter.paramName.equals(\"spark.executor.memoryOverhead\")) { java.lang.String parentParamName = \"spark.executor.memory\"; if (jobSuggestedParamValueMap.containsKey(parentParamName)) { paramValue = java.lang.Math.max(384, ((jobSuggestedParamValueMap.get(parentParamName)) * 0.1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5005/buggy-version/app.com.linkedin.drelephant.tuning.ParamGenerator.java", "BodyUseAPI": ["derivedParameter.paramName.equals(java.lang.String)", "derivedParameter.paramName.equals(java.lang.String)"], "Fixed commit": "e3c9d6174fb6f84e05d9302b86730308895c543a", "Url": "https://api.github.com/repos/arpang/dr-elephant", "Date": "2018-03-29T09:13:26Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIntent().getStringExtra(\"profit\")) == null) profitView.setText(\"0 $\"); else profitView.setText(((manager.roundDouble(((java.lang.Double.parseDouble(getIntent().getStringExtra(\"profit\"))) * 1.2), 2)) + \" $\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8239/buggy-version/app.src.main.java.at.ac.univie.hci.btctracker.Activities.PortfolioActivity.java", "BodyUseAPI": [], "Fixed commit": "36c3bd9e2dbac217d36a4ee6f67c24d7174a4360", "Url": "https://api.github.com/repos/dnlrbz/Bitcoin-tracker", "Date": "2018-05-14T18:10:48Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIntent().getStringExtra(\"profit\")) == null) profitView.setText(\"0 \u20ac\"); else profitView.setText(((manager.roundDouble(java.lang.Double.parseDouble(getIntent().getStringExtra(\"profit\")), 2)) + \" \u20ac\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8239/buggy-version/app.src.main.java.at.ac.univie.hci.btctracker.Activities.PortfolioActivity.java", "BodyUseAPI": [], "Fixed commit": "36c3bd9e2dbac217d36a4ee6f67c24d7174a4360", "Url": "https://api.github.com/repos/dnlrbz/Bitcoin-tracker", "Date": "2018-05-14T18:10:48Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(cityIdsString.equals(\"\"))) { progressBar.setVisibility(View.VISIBLE); controller.loadSavedCities(cityIdsString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2901/buggy-version/app.src.main.java.com.mattcasanova.weatherreport.activities.CityListActivity.java", "BodyUseAPI": ["com.mattcasanova.weatherreport.controllers.MasterController.loadSavedCities(java.lang.String)"], "Fixed commit": "9e4d78ff24f0fc1921e46e04af8c4ad2a5c5bd68", "Url": "https://api.github.com/repos/mattCasanova/weather-report", "Date": "2018-06-14T22:46:19Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (testName && (!(mName.equals(de.mName)))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/357/buggy-version/app.src.main.java.fr.ralala.worktime.models.DayEntry.java", "BodyUseAPI": [], "Fixed commit": "31eb08d86e822102f893ebee6dddbcddc846819e", "Url": "https://api.github.com/repos/Keidan/WorkTime", "Date": "2018-03-11T14:09:49Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hasModifiedResidue) != null) { for (org.reactome.server.graph.domain.relationship.HasModifiedResidue modifiedResidue : hasModifiedResidue) { for (int i = 0; i < (modifiedResidue.getStoichiometry()); i++) { rtn.add(modifiedResidue.getAbstractModifiedResidue()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9023/buggy-version/src.main.java.org.reactome.server.graph.domain.model.EntityWithAccessionedSequence.java", "BodyUseAPI": [], "Fixed commit": "f7923ba612ef0839b12cb8ab689009f8ca524261", "Url": "https://api.github.com/repos/reactome/graph-core", "Date": "2018-05-14T12:50:13Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasModifiedResidue == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9023/buggy-version/src.main.java.org.reactome.server.graph.domain.model.EntityWithAccessionedSequence.java", "BodyUseAPI": [], "Fixed commit": "f7923ba612ef0839b12cb8ab689009f8ca524261", "Url": "https://api.github.com/repos/reactome/graph-core", "Date": "2018-05-14T12:50:13Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eamApiService.selectTicket(ete).get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((eamTicket.getImagePath()) != null) { for (java.lang.String uuid : com.google.common.base.Splitter.on(',').trimResults().omitEmptyStrings().split(eamTicket.getImagePath())) { imageList.add((((fileUploaderService.getServerInfo().getEndpoint_show()) + \"/\") + uuid)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3782/buggy-version/kuyun-eam.kuyun-eam-admin.src.main.java.com.kuyun.eam.admin.controller.manager.EamTicketBaseController.java", "BodyUseAPI": ["com.kuyun.eam.vo.EamTicketVO.getImagePath()", "com.google.common.base.Splitter.on(',').trimResults().omitEmptyStrings().split(eamTicket.getImagePath())"], "Fixed commit": "c6bdb295c74a221792d04699a24105c02f0923bf", "Url": "https://api.github.com/repos/bobshi2005/kuyun", "Date": "2018-01-08T12:31:23Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getConnectionState()) == (com.hurence.opc.ConnectionState.CONNECTED)) { awaitDisconnected(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2180/buggy-version/src.main.java.com.hurence.opc.util.AutoReconnectOpcOperations.java", "BodyUseAPI": [], "Fixed commit": "15ea75726273ce3809beec9433a9c90155a9ab21", "Url": "https://api.github.com/repos/Hurence/opc-simple", "Date": "2018-04-16T15:00:09Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<android.support.v4.app.Fragment>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fragment instanceof me.listenzz.navigation.AwesomeFragment) { children.add(((me.listenzz.navigation.AwesomeFragment) (fragment))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8670/buggy-version/navigation.src.main.java.me.listenzz.navigation.AwesomeActivity.java", "BodyUseAPI": [], "Fixed commit": "794277147cf7ca746355dd988cae5549339eadb2", "Url": "https://api.github.com/repos/listenzz/AndroidNavigation", "Date": "2018-04-21T09:39:31Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDisabled) { button.setAttribute(\"disabled\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2403/buggy-version/src.main.java.teammates.ui.pagedata.InstructorCourseEditPageData.java", "BodyUseAPI": [], "Fixed commit": "4740f0fd28ac34e8783209e0e2ef0d309c8ade39", "Url": "https://api.github.com/repos/wenmogu/teammates", "Date": "2018-03-25T11:51:40Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.isDirectory()) { searchApkInFolder(file, appsPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2381/buggy-version/src.main.java.paprika.launcher.arg.PaprikaArgParser.java", "BodyUseAPI": ["paprika.launcher.arg.PaprikaArgParser.searchApkInFolder(java.io.File,java.util.List<java.lang.String>)"], "Fixed commit": "a41357c29495ad50069853ca33299439d825dafc", "Url": "https://api.github.com/repos/Sriki13/paprika", "Date": "2018-07-27T18:56:22Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(oilLeak)) oilLeak = (java.lang.Math.random()) < ((minecraftflightsimulator.systems.ConfigSystem.getDoubleConfig(\"EngineLeakProbability\")) * 10);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/254/buggy-version/main.java.minecraftflightsimulator.entities.parts.EntityEngine.java", "BodyUseAPI": [], "Fixed commit": "2177fe2071d5ffee18d224cdf391edc23fd5d3f6", "Url": "https://api.github.com/repos/DonBruce64/MinecraftTransportSimulator", "Date": "2017-02-22T00:05:22Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fuelLeak)) fuelLeak = (java.lang.Math.random()) < (minecraftflightsimulator.systems.ConfigSystem.getDoubleConfig(\"EngineLeakProbability\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/254/buggy-version/main.java.minecraftflightsimulator.entities.parts.EntityEngine.java", "BodyUseAPI": [], "Fixed commit": "2177fe2071d5ffee18d224cdf391edc23fd5d3f6", "Url": "https://api.github.com/repos/DonBruce64/MinecraftTransportSimulator", "Date": "2017-02-22T00:05:22Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fuelLeak)) fuelLeak = (java.lang.Math.random()) < ((minecraftflightsimulator.systems.ConfigSystem.getDoubleConfig(\"EngineLeakProbability\")) * 10);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/254/buggy-version/main.java.minecraftflightsimulator.entities.parts.EntityEngine.java", "BodyUseAPI": [], "Fixed commit": "2177fe2071d5ffee18d224cdf391edc23fd5d3f6", "Url": "https://api.github.com/repos/DonBruce64/MinecraftTransportSimulator", "Date": "2017-02-22T00:05:22Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(brokenStarter)) brokenStarter = (java.lang.Math.random()) < 0.05;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/254/buggy-version/main.java.minecraftflightsimulator.entities.parts.EntityEngine.java", "BodyUseAPI": [], "Fixed commit": "2177fe2071d5ffee18d224cdf391edc23fd5d3f6", "Url": "https://api.github.com/repos/DonBruce64/MinecraftTransportSimulator", "Date": "2017-02-22T00:05:22Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(oilLeak)) oilLeak = (java.lang.Math.random()) < (minecraftflightsimulator.systems.ConfigSystem.getDoubleConfig(\"EngineLeakProbability\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/254/buggy-version/main.java.minecraftflightsimulator.entities.parts.EntityEngine.java", "BodyUseAPI": [], "Fixed commit": "2177fe2071d5ffee18d224cdf391edc23fd5d3f6", "Url": "https://api.github.com/repos/DonBruce64/MinecraftTransportSimulator", "Date": "2017-02-22T00:05:22Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cmptr.getStartNumber()) < 20) dispStr = (((((\"Numer \" + (cmptr.getStartNumber())) + \"\\r\\n\") + name) + \" \\r\\n\") + surname) + \" \"; else if (((cmptr.getStartNumber()) >= 20) && ((cmptr.getStartNumber()) < 100)) dispStr = (((((\"Numer \" + (cmptr.getStartNumber())) + \"\\r\\n\") + name) + \" \\r\\n\") + surname) + \" \"; else dispStr = (((((\"Nume\" + (cmptr.getStartNumber())) + \"\\r\\n\") + name) + \" \\r\\n\") + surname) + \" \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3994/buggy-version/src.pl.jeleniagora.mks.display.DisplayNameSurnameAndStartNum.java", "BodyUseAPI": ["pl.jeleniagora.mks.types.LugerCompetitor.getStartNumber()", "pl.jeleniagora.mks.types.LugerCompetitor.getStartNumber()", "pl.jeleniagora.mks.types.LugerCompetitor.getStartNumber()", "pl.jeleniagora.mks.types.LugerCompetitor.getStartNumber()", "pl.jeleniagora.mks.types.LugerCompetitor.getStartNumber()"], "Fixed commit": "b62b50899cc14db7caca29a04b06a11b343e18cd", "Url": "https://api.github.com/repos/SP8EBC/MKS_JG", "Date": "2018-09-13T21:28:06Z"},
{"Line": "=>1083", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pos <= (allParas.get(docNum).get(i).length())) { java.lang.String paraText = (allParas.get(docNum).get(i).substring(0, pos)) + (org.languagetool.openoffice.Main.ZERO_WIDTH_SPACE); if (pos < ((allParas.get(docNum).get(i).length()) - 1)) { paraText += allParas.get(docNum).get(i).substring((pos + 1)); } allParas.get(docNum).set(i, paraText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/215/buggy-version/languagetool-office-extension.src.main.java.org.languagetool.openoffice.Main.java", "BodyUseAPI": ["java.util.List<java.util.List<java.lang.String>>.get(int)", "java.lang.String.substring(int)", "java.lang.String.length()", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.util.List<java.lang.String>>.get(int)", "java.lang.String.substring(int,int)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.util.List<java.lang.String>>.get(int)", "java.util.List<java.lang.String>.set(int,java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.util.List<java.lang.String>>.get(int)"], "Fixed commit": "d6cbfa86044501e3b2138204d8ba7ba51b4b1206", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2018-05-21T12:49:00Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(product.getProductUnitType().getName().equals(\"pack\"))) { product.setPacketSize(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2653/buggy-version/phms.src.main.java.com.joh.phms.service.ProductServiceImpl.java", "BodyUseAPI": ["com.joh.phms.model.Product.setPacketSize(<nulltype>)"], "Fixed commit": "adbdeaea0e21d331b31feb9bbb65b53fdbc3bd3f", "Url": "https://api.github.com/repos/jawharomer/phms", "Date": "2018-10-31T06:29:11Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(product.getProductUnitType().getName().equals(\"pack\"))) { product.setPacketSize(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2653/buggy-version/phms.src.main.java.com.joh.phms.service.ProductServiceImpl.java", "BodyUseAPI": ["com.joh.phms.model.Product.setPacketSize(<nulltype>)"], "Fixed commit": "adbdeaea0e21d331b31feb9bbb65b53fdbc3bd3f", "Url": "https://api.github.com/repos/jawharomer/phms", "Date": "2018-10-31T06:29:11Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mdataIds == null) || ((mdataIds.size()) == 0)) return new java.util.ArrayList<org.nextprot.api.core.domain.Mdata>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1856/buggy-version/core.src.main.java.org.nextprot.api.core.dao.impl.MdataDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "2e68914dc855b9b4377bda198c608df6eae540c7", "Url": "https://api.github.com/repos/calipho-sib/nextprot-api", "Date": "2018-02-07T13:08:45Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((prop.getProperty(key)) != null) num = java.lang.Double.parseDouble(prop.getProperty(key));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4576/buggy-version/src.main.java.org.team639.lib.TextSettings.java", "BodyUseAPI": ["java.util.Properties.getProperty(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "6df5d0d885a05a5eeca525395555ba7bc7dc1108", "Url": "https://api.github.com/repos/CRRobotics/2017ruckus", "Date": "2018-01-22T16:57:14Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.wynprice.noctrl.KeyBindSet.mc.player) != null) { com.wynprice.noctrl.KeyBindSet.mc.player.sendStatusMessage(new net.minecraft.util.text.TextComponentTranslation(\"noctrl.current_changed\", this.name), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8381/buggy-version/src.main.java.com.wynprice.noctrl.KeyBindSet.java", "BodyUseAPI": ["com.wynprice.noctrl.KeyBindSet.mc.player.sendStatusMessage(net.minecraft.util.text.TextComponentTranslation,boolean)"], "Fixed commit": "9f8d0696702718191ff8e7ddd9e2d8e142c478b7", "Url": "https://api.github.com/repos/Wyn-Price/NoCtrl", "Date": "2018-09-08T18:15:35Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(outputString.isEmpty())) { cz.zcu.kiv.WorkflowDesigner.Block.logger.info(outputString); stdOut.append(outputString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5578/buggy-version/src.main.java.cz.zcu.kiv.WorkflowDesigner.Block.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "org.apache.commons.logging.Log.info(java.lang.String)"], "Fixed commit": "bc4096e8496591834341144a9b81734f253b6c17", "Url": "https://api.github.com/repos/pintojoey/workflow_designer", "Date": "2018-06-11T09:19:44Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(errorString.isEmpty())) { cz.zcu.kiv.WorkflowDesigner.Block.logger.error(errorString); stdErr.append(errorString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5578/buggy-version/src.main.java.cz.zcu.kiv.WorkflowDesigner.Block.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "org.apache.commons.logging.Log.error(java.lang.String)"], "Fixed commit": "bc4096e8496591834341144a9b81734f253b6c17", "Url": "https://api.github.com/repos/pintojoey/workflow_designer", "Date": "2018-06-11T09:19:44Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.web.context.request.ServletWebRequest.getResponse()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (response == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6712/buggy-version/spar-wings-monolith.src.main.java.jp.xet.sparwings.spring.web.error.handler.RestExceptionHandler.java", "BodyUseAPI": [], "Fixed commit": "fb3ca08d329f6cfba3935e4e38d76a22a5dc7aa8", "Url": "https://api.github.com/repos/dai0304/spar-wings", "Date": "2018-03-18T13:17:51Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (locale == null) { locale = java.util.Locale.getDefault(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6712/buggy-version/spar-wings-monolith.src.main.java.jp.xet.sparwings.spring.web.error.handler.DefaultRestErrorResolver.java", "BodyUseAPI": [], "Fixed commit": "fb3ca08d329f6cfba3935e4e38d76a22a5dc7aa8", "Url": "https://api.github.com/repos/dai0304/spar-wings", "Date": "2018-03-18T13:17:51Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (io.github.ydq.jquery.JQuery.DEBUG.get()) { java.lang.System.out.println(java.lang.String.format(\"\\n\\n\\n>>>>>> URL:\\t\\t\\t%s\\n>>>>>> Method:\\t\\t\\t%s\\n>>>>>> Param:\\t\\t\\t%s\\n>>>>>> Cookie:\\t\\t\\t%s\\n>>>>>> ContentType:\\t%s\\n>>>>>> UserAgent:\\t\\t%s\\n>>>>>> Referer:\\t\\t%s\\n>>>>>> Timeout:\\t\\t%s\\n>>>>>> Header:\\t\\t\\t%s\\n\\n\", url, io.github.ydq.jquery.JQuery.METHOD.get(), data, io.github.ydq.jquery.JQuery.COOKIE.get(), io.github.ydq.jquery.JQuery.CONTENT_TYPE.get().meta, io.github.ydq.jquery.JQuery.USER_AGENT.get(), io.github.ydq.jquery.JQuery.REFERER.get(), io.github.ydq.jquery.JQuery.TIMEOUT.get(), io.github.ydq.jquery.JQuery.HEADER.get())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9170/buggy-version/src.main.java.io.github.ydq.jquery.JQuery.java", "BodyUseAPI": [], "Fixed commit": "dcfaa5530ed3d700af1754e48e866d7cf7223772", "Url": "https://api.github.com/repos/ydq/JQuery", "Date": "2018-08-17T06:43:12Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (res == null) { res = new org.kie.workbench.common.services.backend.compiler.impl.DefaultKieCompilationResponseOffProcess(false, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1064/buggy-version/kie-wb-common-services.kie-wb-common-compiler.kie-wb-common-compiler-offprocess.src.main.java.org.kie.workbench.common.services.backend.compiler.offprocess.impl.ClientIPCImpl.java", "BodyUseAPI": [], "Fixed commit": "2ed6ca5af612af43a794219b8da7528b5f8839e0", "Url": "https://api.github.com/repos/desmax74/kie-wb-common", "Date": "2018-08-15T21:16:41Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mickaelbrenoit.business.service.ItemService.findByUniversalProductCode(item.getUniversalProductCode())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((itemAlreadyExists != null) && (!(itemAlreadyExists.getUniversalProductCode().equals(currentUpc)))) { com.mickaelbrenoit.web.controller.EmployeeController.LOGGER.info(\"THIS ITEM ALREADY EXISTS !!!\"); model.addAttribute(\"typeitems\", typeItemService.findAll()); model.addAttribute(\"categories\", categoryService.findAll()); model.addAttribute(\"upcalreadyexists\", item.getUniversalProductCode()); model.addAttribute(\"currentupc\", currentUpc); return \"emp/edititem\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7754/buggy-version/mediatheque-group3.src.main.java.com.mickaelbrenoit.web.controller.EmployeeController.java", "BodyUseAPI": ["org.springframework.ui.Model.addAttribute(java.lang.String,java.lang.Long)"], "Fixed commit": "2bd9cb3f64336fe7cb03a166815fedc769785b84", "Url": "https://api.github.com/repos/MickaelBRENOIT/Mediatheque", "Date": "2018-01-21T21:58:04Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bindingResult.hasErrors()) { model.addAttribute(\"typeitems\", typeItemService.findAll()); model.addAttribute(\"categories\", categoryService.findAll()); model.addAttribute(\"currentupc\", currentUpc); return \"emp/edititem\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7754/buggy-version/mediatheque-group3.src.main.java.com.mickaelbrenoit.web.controller.EmployeeController.java", "BodyUseAPI": [], "Fixed commit": "2bd9cb3f64336fe7cb03a166815fedc769785b84", "Url": "https://api.github.com/repos/MickaelBRENOIT/Mediatheque", "Date": "2018-01-21T21:58:04Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.apu.olxcrawler.parser.OlxSearchParser.getPagesBlockFromContent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (innerContent == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9858/buggy-version/src.main.java.com.apu.olxcrawler.parser.OlxSearchParser.java", "BodyUseAPI": [], "Fixed commit": "d78eb15ea739f9cc7494cf731a7ca6031ab5bfe0", "Url": "https://api.github.com/repos/anikeec/OlxCrawler", "Date": "2018-02-28T15:32:10Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (eSearchResults == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1239/buggy-version/src.main.java.reciter.controller.ReCiterController.java", "BodyUseAPI": [], "Fixed commit": "78a89b1435d17552e4cea948d167e53fdc38f4ef", "Url": "https://api.github.com/repos/wcmc-its/ReCiter", "Date": "2018-08-13T15:17:00Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((password.length()) < 6) { android.widget.Toast.makeText(getApplicationContext(), getString(R.string.password_shot), Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(getApplicationContext(), getString(R.string.create_account_error), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4129/buggy-version/app.src.main.java.com.grrigore.tripback_up.SingUpActivity.java", "BodyUseAPI": [], "Fixed commit": "4f520d78ab63a81a170202df018efa3f529af99a", "Url": "https://api.github.com/repos/grrigore/Trip-Back-up", "Date": "2018-07-04T12:52:22Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["etPassword.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((password.length()) < 6) { android.widget.Toast.makeText(getApplicationContext(), getString(R.string.password_shot), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4129/buggy-version/app.src.main.java.com.grrigore.tripback_up.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4f520d78ab63a81a170202df018efa3f529af99a", "Url": "https://api.github.com/repos/grrigore/Trip-Back-up", "Date": "2018-07-04T12:52:22Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (times == 0) { this.timesPerPeriod = 1; }else { this.timesPerPeriod = times; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2776/buggy-version/app.src.main.java.comjianzhaojohnhabit_rabbit.httpsgithub.habit_rabbit.Habit.java", "BodyUseAPI": [], "Fixed commit": "3422e82e4f6e6fb6870586aabb056263a7ee1b8a", "Url": "https://api.github.com/repos/jianzhaojohn/Habit-Rabbit", "Date": "2018-03-27T00:10:03Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (times == 0) { this.timesPerPeriod = 1; }else { this.timesPerPeriod = times; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2776/buggy-version/app.src.main.java.comjianzhaojohnhabit_rabbit.httpsgithub.habit_rabbit.Habit.java", "BodyUseAPI": [], "Fixed commit": "3422e82e4f6e6fb6870586aabb056263a7ee1b8a", "Url": "https://api.github.com/repos/jianzhaojohn/Habit-Rabbit", "Date": "2018-03-27T00:10:03Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, javafx.scene.layout.Pane>.get(newValue.getValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (newPane != null) { horizontalLayout.getChildren().add(newPane); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1217/buggy-version/src.main.java.com.ksatstuttgart.usoc.gui.setup.LayoutCreator.java", "BodyUseAPI": ["horizontalLayout.getChildren().add(javafx.scene.layout.Pane)"], "Fixed commit": "970b10aa9afe6b89aa4295ff17112257d9a23692", "Url": "https://api.github.com/repos/aerospaceresearch/Universal-Space-Operations-Center", "Date": "2018-05-17T21:08:13Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (oldValue != null) { oldPane = componentsMap.get(oldValue.getValue()); horizontalLayout.getChildren().remove(oldPane); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1217/buggy-version/src.main.java.com.ksatstuttgart.usoc.gui.setup.LayoutCreator.java", "BodyUseAPI": ["javafx.scene.control.TreeItem<java.lang.String>.getValue()", "java.util.Map<java.lang.String, javafx.scene.layout.Pane>.get(oldValue.getValue())"], "Fixed commit": "970b10aa9afe6b89aa4295ff17112257d9a23692", "Url": "https://api.github.com/repos/aerospaceresearch/Universal-Space-Operations-Center", "Date": "2018-05-17T21:08:13Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.startsWith(\" \\t\")) { line = line.replaceFirst(\" \\t\", \"\\t\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8298/buggy-version/modules.util.source-formatter.src.main.java.com.liferay.source.formatter.checks.JSONWhitespaceCheck.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "4755f44d566c6973f08157083249731f0ca07393", "Url": "https://api.github.com/repos/adolfopa/liferay-portal", "Date": "2018-05-04T19:37:27Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((amqpMethod.toInt()) == 40) { arguments.put(new AShortString(\"path\"), new AShortString(buffer)); arguments.put(new AShortString(\"reserved-1\"), new AOctet(buffer)); arguments.put(new AShortString(\"reserved-2\"), new AOctet(buffer)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7747/buggy-version/AMQPMethodFrame.java", "BodyUseAPI": [], "Fixed commit": "cc21b5356e0cb60bb344e427885e073ea22951b2", "Url": "https://api.github.com/repos/petcap/AMQPTester", "Date": "2018-05-25T12:19:55Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endTime == null) { endTime = java.time.LocalTime.MAX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5114/buggy-version/src.main.java.ru.javawebinar.topjava.web.meal.MealRestController.java", "BodyUseAPI": [], "Fixed commit": "a1fd7a0122125a11dbc5f15148630e0f859c4c84", "Url": "https://api.github.com/repos/ArthursGitHub/topjava", "Date": "2018-03-13T15:26:02Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endDate == null) { endDate = java.time.LocalDate.MAX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5114/buggy-version/src.main.java.ru.javawebinar.topjava.web.meal.MealRestController.java", "BodyUseAPI": [], "Fixed commit": "a1fd7a0122125a11dbc5f15148630e0f859c4c84", "Url": "https://api.github.com/repos/ArthursGitHub/topjava", "Date": "2018-03-13T15:26:02Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (bufferedImage == null) return java.util.Optional.empty();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6816/buggy-version/src.toolset.imagetools.BufferedImageIO.java", "BodyUseAPI": [], "Fixed commit": "a35fabc3bd8e6583b1d8e15383772b527c059aba", "Url": "https://api.github.com/repos/kamil-sita/XIS", "Date": "2018-10-27T17:41:27Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalCnt > 0) elapsedTime = elapsedTime / totalCnt;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5568/buggy-version/src.main.java.team.three.msgconsumer.business.Reporter.java", "BodyUseAPI": [], "Fixed commit": "25552e02f3e3a56379d18a00a97338fb41ae1dba", "Url": "https://api.github.com/repos/jeiiess/msgconsumer", "Date": "2018-10-30T07:58:34Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["feedbackText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(feedbackDetails.isEmpty())) { mDatabase = com.google.firebase.database.FirebaseDatabase.getInstance(); mRef = mDatabase.getReference(\"UserFeedback\"); mRef.child(mAuth.getCurrentUser().getUid()).child(\"123\").setValue(feedbackDetails); setResult(com.myapp.railwayapp.Activities.RESULT_OK); finish(); }else { android.widget.Toast.makeText(this, \"No text entered\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1954/buggy-version/app.src.main.java.com.myapp.railwayapp.Activities.FeedbackActivity.java", "BodyUseAPI": ["mRef.child(mAuth.getCurrentUser().getUid()).child(\"123\").setValue(java.lang.String)"], "Fixed commit": "f369511255ff1769ae40018a2bda652f9fe48052", "Url": "https://api.github.com/repos/anirudh1107/MyApp", "Date": "2018-01-10T07:58:25Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.izforge.izpack.api.data.Variables.get(java.lang.String)", "com.izforge.izpack.api.data.Variables.get(java.lang.String)", "com.izforge.izpack.api.data.Variables.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((!(isBlank(installPath))) && (isBlank(installDrive))) || ((isBlank(installPath)) && (isBlank(defaultInstallDrive)))) { parent.getNavigator().setNextEnabled(false); preview = \"Warning: The application may only be installed to a letter drive. Installing to a network or \" + \"OneDrive location is not possible.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2983/buggy-version/open-sphere-install.open-sphere-install-panels.src.main.java.io.opensphere.installer.panels.jre.OpenSphereTargetPanel.java", "BodyUseAPI": [], "Fixed commit": "387c441c81c3e69ff1b20f603a9f780caf8544c0", "Url": "https://api.github.com/repos/ngageoint/opensphere-desktop", "Date": "2018-05-21T21:27:20Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(includeConcepts)) { input.add(CoherentTypeExtractor.YAGOTYPES); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2349/buggy-version/src.main.java.fromWikipedia.MentionLinkLikelihoodExtractor.java", "BodyUseAPI": [], "Fixed commit": "6352c4372d5dd9fa6edf90eac6473c224d51918d", "Url": "https://api.github.com/repos/yago-naga/yago3", "Date": "2018-04-27T09:40:49Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.zxing.client.result.AddressBookParsedResult.getURLs()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((urls.length) > 0) { url = urls[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7813/buggy-version/rogerthat.src.main.java.com.google.zxing.client.android.encode.QRCodeEncoder.java", "BodyUseAPI": [], "Fixed commit": "5941a117b5f2f40778382dfc1a7f0bade4624497", "Url": "https://api.github.com/repos/rogerthat-platform/rogerthat-android-client", "Date": "2018-07-03T10:11:34Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.String.class.isAssignableFrom(this.assets.getClass())) { this.transaction.setAsset(new com.bigchaindb.builders.Asset(((java.lang.String) (this.assets)))); }else { this.transaction.setAsset(new com.bigchaindb.builders.Asset(this.assets, this.assetsDataClass)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8048/buggy-version/src.main.java.com.bigchaindb.builders.BigchainDbTransactionBuilder.java", "BodyUseAPI": ["com.bigchaindb.builders.Transaction.setAsset(com.bigchaindb.builders.Asset)"], "Fixed commit": "c48565624a6d05b0754be115739ee1d420ae8b1c", "Url": "https://api.github.com/repos/bigchaindb/java-bigchaindb-driver", "Date": "2018-08-14T23:55:41Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.onetwo.common.spring.Springs.getInstance().isActive()) { if (org.onetwo.dbm.mapping.IdGeneratorFactory.logger.isWarnEnabled()) { org.onetwo.dbm.mapping.IdGeneratorFactory.logger.warn(\"spring application is not active: {}\", org.onetwo.common.spring.Springs.getInstance().getAppContext()); } customIdGenerator = org.onetwo.common.spring.Springs.getInstance().getBean(dg.generatorClass()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8365/buggy-version/src.main.java.org.onetwo.dbm.mapping.IdGeneratorFactory.java", "BodyUseAPI": [], "Fixed commit": "a9212c4a9367df24aaca0c14bae5b64aa7b7b5b4", "Url": "https://api.github.com/repos/wayshall/dbm", "Date": "2018-09-25T13:40:27Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isFileDownloaded(event.getFile())) { startFileActivity(event.getFile(), event.getFiles()); }else { android.support.design.widget.Snackbar.make(getParentView(), R.string.message_progress_file_downloading, Snackbar.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5235/buggy-version/src.main.java.org.amahi.anywhere.activity.OfflineFilesActivity.java", "BodyUseAPI": ["org.amahi.anywhere.activity.OfflineFilesActivity.startFileActivity(event.getFile(),event.getFiles())", "org.amahi.anywhere.bus.FileOpeningEvent.getFiles()", "org.amahi.anywhere.bus.FileOpeningEvent.getFile()"], "Fixed commit": "42e35bfce98d80f211bb4ce4d6400451666ee788", "Url": "https://api.github.com/repos/ArihantJain456/amahi-android", "Date": "2018-05-24T16:41:49Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (mp != null) this.level = mp.getLevel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2065/buggy-version/src.types.src.ch.specchio.types.MetadataUpdateDescriptor.java", "BodyUseAPI": [], "Fixed commit": "e9d61739811926ac34496c10d36ff2e0eb3e8428", "Url": "https://api.github.com/repos/ahueni/SPECCHIO", "Date": "2018-10-13T08:50:05Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirst) isFirst = false; else if (tree) bufferedWriter.append(\",\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5608/buggy-version/src.main.java.fr.inria.yajta.processor.Logger.java", "BodyUseAPI": [], "Fixed commit": "80c9a38aae107f51a4246cddba7e1d043b6ab551", "Url": "https://api.github.com/repos/diverse-project/yajta-mirror", "Date": "2018-01-22T12:32:54Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cursor) >= (values.size())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8553/buggy-version/base-artefacts.src.main.java.step.datapool.inmemory.JsonStringDataPoolImpl.java", "BodyUseAPI": [], "Fixed commit": "687bee182e01b72d7c0f89219f4b63be054b5b9d", "Url": "https://api.github.com/repos/exense/step", "Date": "2018-02-20T13:11:36Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataSourceType.equals(\"json\")) { conf = new step.datapool.inmemory.JsonStringDataPoolConfiguration(); }else { throw new java.lang.RuntimeException((\"Unsupported data source type: \" + dataSourceType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8553/buggy-version/base-artefacts.src.main.java.step.datapool.DataPoolFactory.java", "BodyUseAPI": [], "Fixed commit": "687bee182e01b72d7c0f89219f4b63be054b5b9d", "Url": "https://api.github.com/repos/exense/step", "Date": "2018-02-20T13:11:36Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mills <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9274/buggy-version/app.src.main.java.com.elementary.tasks.core.services.EventJobService.java", "BodyUseAPI": [], "Fixed commit": "14b5c120e8cab34cf86a0d27549c62681e5cdc37", "Url": "https://api.github.com/repos/naz013/Reminder", "Date": "2018-03-04T09:24:16Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((due == 0) || (mills <= 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9274/buggy-version/app.src.main.java.com.elementary.tasks.core.services.EventJobService.java", "BodyUseAPI": [], "Fixed commit": "14b5c120e8cab34cf86a0d27549c62681e5cdc37", "Url": "https://api.github.com/repos/naz013/Reminder", "Date": "2018-03-04T09:24:16Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.TagInfo.getTid()", "model.TagInfo.getEpc()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentEPC.equals(currentTID)) { pass.setState(\"UNENCODED\"); com.sqlite.domain.ContextManager.incrUnEncodedCount(); return pass; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6194/buggy-version/src.main.java.com.sqlite.domain.OIC.java", "BodyUseAPI": [], "Fixed commit": "273c8c16d595eb36bbd27b10ab20612d3fcd0981", "Url": "https://api.github.com/repos/Jay0001cn/zd", "Date": "2018-01-09T10:07:24Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(target.isRTL())) { x += width; }else { x -= width; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/766/buggy-version/CodenameOne.src.com.codename1.ui.layouts.FlowLayout.java", "BodyUseAPI": [], "Fixed commit": "44efebcf3968ea542e8d4b3b87dd04af185f1e4d", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2018-02-05T12:35:31Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isRTL())) { cmd.setIcon(com.codename1.ui.FontImage.createMaterial(FontImage.MATERIAL_ARROW_BACK, \"TitleCommand\", iconSize)); }else { cmd.setIcon(com.codename1.ui.FontImage.createMaterial(FontImage.MATERIAL_ARROW_FORWARD, \"TitleCommand\", iconSize)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/766/buggy-version/CodenameOne.src.com.codename1.ui.Toolbar.java", "BodyUseAPI": [], "Fixed commit": "44efebcf3968ea542e8d4b3b87dd04af185f1e4d", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2018-02-05T12:35:31Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((rgBuild == null) || ((rgBuild.getBuild()) == null)) || ((rgBuild.getBuild().getBuiltOn()) == null)) { throw new java.lang.IllegalArgumentException(\"RgBuild or node there it was built is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5587/buggy-version/src.main.java.org.jenkinsci.plugins.radargun.util.Functions.java", "BodyUseAPI": [], "Fixed commit": "a39294aa1ffb77f5c8f95f2a6ae8cd79c4bc8b9b", "Url": "https://api.github.com/repos/jenkinsci/radargun-plugin", "Date": "2018-04-06T12:13:24Z"},
{"Line": "=>660", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ucaCFLink.getLinkB()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1604/buggy-version/xstampp.astpa.src.xstampp.astpa.ui.causalfactors.CausalFactorsView.java", "BodyUseAPI": [], "Fixed commit": "a977699b7491ee061162407ec2b5ab516ea2b54d", "Url": "https://api.github.com/repos/SE-Stuttgart/XSTAMPP", "Date": "2018-09-19T07:35:13Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameNumber.getText()) == null) { ErrorMessage error = new ErrorMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4211/buggy-version/TransAmerica.UI.PopUp.java", "BodyUseAPI": [], "Fixed commit": "fc2591219ab2d768d344d9724f693420b9718a86", "Url": "https://api.github.com/repos/TheSphereWizard/TransAmerica", "Date": "2018-03-16T18:05:15Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameNumber.getText()) == null) { ErrorMessage error = new ErrorMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4211/buggy-version/TransAmerica.UI.PopUp.java", "BodyUseAPI": [], "Fixed commit": "fc2591219ab2d768d344d9724f693420b9718a86", "Url": "https://api.github.com/repos/TheSphereWizard/TransAmerica", "Date": "2018-03-16T18:05:15Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dto.getBirthday()) != null) { user.setBirthday(dto.getBirthday()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3601/buggy-version/src.main.java.cn.wanlinus.emooc.service.impl.UserServiceImpl.java", "BodyUseAPI": ["cn.wanlinus.emooc.domain.User.setBirthday(dto.getBirthday())", "cn.wanlinus.emooc.service.impl.UserInformationDTO.getBirthday()"], "Fixed commit": "b8ee99a98cfc6512fbf4cb986a5052f6ef739eca", "Url": "https://api.github.com/repos/wanlinus/emooc", "Date": "2018-05-30T07:15:37Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lattice.incomparableType.keySet().contains(fst.getValue())) { java.util.List<org.sat4j.core.VecInt> resultList = new java.util.ArrayList<>(); for (javax.lang.model.element.AnnotationMirror incomparable : lattice.incomparableType.get(fst.getValue())) { resultList.add(checkers.inference.solver.backend.maxsat.VectorUtils.asVec((-(checkers.inference.solver.backend.maxsat.MathUtils.mapIdToMatrixEntry(snd.getId(), typeToInt.get(incomparable), lattice))))); } org.sat4j.core.VecInt[] resultArray = new org.sat4j.core.VecInt[resultList.size()]; return resultList.toArray(resultArray); }else { return emptyValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8389/buggy-version/src.checkers.inference.solver.backend.maxsat.encoder.MaxSATComparableConstraintEncoder.java", "BodyUseAPI": ["lattice.incomparableType.get(fst.getValue())", "checkers.inference.model.ConstantSlot.getValue()"], "Fixed commit": "086c173d5d4dc0a13f71064275195e797a24857a", "Url": "https://api.github.com/repos/opprop/checker-framework-inference", "Date": "2018-01-26T11:07:45Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lattice.incomparableType.keySet().contains(snd.getValue())) { java.util.List<org.sat4j.core.VecInt> resultList = new java.util.ArrayList<>(); for (javax.lang.model.element.AnnotationMirror incomparable : lattice.incomparableType.get(snd.getValue())) { resultList.add(checkers.inference.solver.backend.maxsat.VectorUtils.asVec((-(checkers.inference.solver.backend.maxsat.MathUtils.mapIdToMatrixEntry(fst.getId(), typeToInt.get(incomparable), lattice))))); } org.sat4j.core.VecInt[] resultArray = new org.sat4j.core.VecInt[resultList.size()]; return resultList.toArray(resultArray); }else { return emptyValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8389/buggy-version/src.checkers.inference.solver.backend.maxsat.encoder.MaxSATComparableConstraintEncoder.java", "BodyUseAPI": ["checkers.inference.model.ConstantSlot.getValue()", "lattice.incomparableType.get(snd.getValue())"], "Fixed commit": "086c173d5d4dc0a13f71064275195e797a24857a", "Url": "https://api.github.com/repos/opprop/checker-framework-inference", "Date": "2018-01-26T11:07:45Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.getOriginalFilename().isEmpty())) { java.io.File previousProfilePicture = new java.io.File(dir, previousProfilePictureName); if (previousProfilePicture.exists()) { previousProfilePicture.delete(); } file.transferTo(new java.io.File(dir, file.getOriginalFilename())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7583/buggy-version/Blog.src.main.java.io.codecrafts.controller.SettingsController.java", "BodyUseAPI": ["org.springframework.web.multipart.MultipartFile.transferTo(java.io.File)", "org.springframework.web.multipart.MultipartFile.getOriginalFilename()"], "Fixed commit": "8dd9f41def25feadfb2428e4de5496819ab23287", "Url": "https://api.github.com/repos/vickyrare/workspace", "Date": "2018-05-13T23:16:00Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.getOriginalFilename().isEmpty())) { storageService.store(file); previousProfilePictureName = updatedUser.getProfilePicture(); updatedUser.setProfilePicture(file.getOriginalFilename()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7583/buggy-version/Blog.src.main.java.io.codecrafts.controller.SettingsController.java", "BodyUseAPI": ["org.springframework.web.multipart.MultipartFile.getOriginalFilename()", "io.codecrafts.storage.StorageService.store(org.springframework.web.multipart.MultipartFile)", "io.codecrafts.model.User.setProfilePicture(file.getOriginalFilename())"], "Fixed commit": "8dd9f41def25feadfb2428e4de5496819ab23287", "Url": "https://api.github.com/repos/vickyrare/workspace", "Date": "2018-05-13T23:16:00Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(activeProjectors.keySet().contains(id))) { no.ntnu.vislab.vislabcontroller.DummyBase.Device device = new no.ntnu.vislab.vislabcontroller.DummyBase.DummyBase().getSingle(id); projector = new no.ntnu.vislab.barkof22.BarkoF22Projector(java.net.InetAddress.getByName(device.getIp()), device.getPort()); activeProjectors.put(device.getId(), projector); }else { projector = activeProjectors.get(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9179/buggy-version/src.main.java.no.ntnu.vislab.vislabcontroller.webcontroller.BarkoF22Controller.java", "BodyUseAPI": ["no.ntnu.vislab.vislabcontroller.DummyBase.DummyBase.getSingle(int)", "java.util.HashMap<java.lang.Integer, no.ntnu.vislab.barkof22.BarkoF22Projector>.put(device.getId(),no.ntnu.vislab.barkof22.BarkoF22Projector)", "java.util.HashMap<java.lang.Integer, no.ntnu.vislab.barkof22.BarkoF22Projector>.get(int)"], "Fixed commit": "3e52706c97cf38bc324e4b81b1803c2efe36eef1", "Url": "https://api.github.com/repos/Device-Controller/Controller", "Date": "2018-03-20T10:58:18Z"},
{"Line": "=>663", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lang == null) { lang = language; if (lang == null) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5196/buggy-version/languagetool-gui-commons.src.main.java.org.languagetool.gui.Configuration.java", "BodyUseAPI": [], "Fixed commit": "bdda18a8b30da833bae1ad439513c6575d483d46", "Url": "https://api.github.com/repos/strn/languagetool-sr", "Date": "2018-01-05T12:43:08Z"},
{"Line": "=>614", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((styleRepeatSentences) >= 0) { props.setProperty(org.languagetool.gui.Configuration.STYLE_REPEAT_KEY, java.lang.Integer.toString(styleRepeatSentences)); setValueToRule(\"STYLE_REPEATED_WORD_RULE\", styleRepeatSentences, lang); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5196/buggy-version/languagetool-gui-commons.src.main.java.org.languagetool.gui.Configuration.java", "BodyUseAPI": [], "Fixed commit": "bdda18a8b30da833bae1ad439513c6575d483d46", "Url": "https://api.github.com/repos/strn/languagetool-sr", "Date": "2018-01-05T12:43:08Z"},
{"Line": "=>618", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((longSentencesWords) >= 0) { props.setProperty(org.languagetool.gui.Configuration.LONG_SENTENCES_KEY, java.lang.Integer.toString(longSentencesWords)); setValueToRule(\"TOO_LONG_SENTENCE\", longSentencesWords, lang); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5196/buggy-version/languagetool-gui-commons.src.main.java.org.languagetool.gui.Configuration.java", "BodyUseAPI": [], "Fixed commit": "bdda18a8b30da833bae1ad439513c6575d483d46", "Url": "https://api.github.com/repos/strn/languagetool-sr", "Date": "2018-01-05T12:43:08Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nc.noumea.mairie.abs.dao.IAbsencesDao.getListeAbsWithEtatAndTypeAbsence(java.util.List<java.lang.Integer>,EtatAbsenceEnum.VALIDEE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(listMaladiesAnticipees.isEmpty())) { try { sendMailForMaladies(listMaladiesAnticipees); } catch (java.lang.Exception e) { logger.warn(\"An error occured while trying to send MaladiesEnCoursEmailInformation.\"); logger.warn(\"Here follows the exception : \", e); incidentRedmine.addException(e, 999999); } }else { logger.debug(\"Il n'y a pas de maladie passant \u00e0 l'\u00e9tat 'Prise' \u00e0 ce jour.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5940/buggy-version/src.main.java.nc.noumea.mairie.sirh.job.AbsencePriseJob.java", "BodyUseAPI": ["nc.noumea.mairie.sirh.job.AbsencePriseJob.sendMailForMaladies(java.util.List<java.lang.Integer>)"], "Fixed commit": "3a78e8dcc68e4d5147e76f0298548781ba39e6bb", "Url": "https://api.github.com/repos/DSI-Ville-Noumea/sirh-jobs", "Date": "2018-03-23T01:20:11Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.eslamwael74.inq.expmeal.Model.Meal>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((meal.getCategory()) == 0) category = getString(R.string.breakfast); else if ((meal.getCategory()) == 1) category = getString(R.string.lunch); else category = getString(R.string.dinner);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4285/buggy-version/app.src.main.java.com.eslamwael74.inq.expmeal.Widget.ListViewWidgetService.java", "BodyUseAPI": ["com.eslamwael74.inq.expmeal.Model.Meal.getCategory()"], "Fixed commit": "2f09615ec2840c7990c40c804ea554afdabead12", "Url": "https://api.github.com/repos/eslamwael74/ExpMeal", "Date": "2018-02-22T10:18:24Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getIntent().getFlags()) & (android.content.Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT)) != 0) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5130/buggy-version/app.src.main.java.com.wftd.kongyan.SplashActivity.java", "BodyUseAPI": [], "Fixed commit": "4a99432ac042bbd2deef71df5f5716b7ec31731a", "Url": "https://api.github.com/repos/AndSync/kongyan", "Date": "2018-07-03T07:38:25Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) { return stringBuilder.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1238/buggy-version/src.main.java.org.freeeed.search.web.searchviews.ResultHighlight.java", "BodyUseAPI": [], "Fixed commit": "8ae92772cda02ff6c7162c29e2e607b96d33e1a9", "Url": "https://api.github.com/repos/shmsoft/FreeEedUI", "Date": "2018-05-16T11:52:55Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selectedEvent.getInstitute().getId().intValue()) == (-1)) { selectedEvent.setInstitute(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4696/buggy-version/src.com.baseerah.ui.beans.EventsBean.java", "BodyUseAPI": ["com.baseerah.dal.dao.Event.setInstitute(<nulltype>)"], "Fixed commit": "19333c80d36b55f90d3fb1f21f4d726c5782ede1", "Url": "https://api.github.com/repos/azeemirshad/baseerah", "Date": "2018-05-22T07:35:14Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selectedEvent.getCampus().getId().intValue()) == (-1)) { selectedEvent.setCampus(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4696/buggy-version/src.com.baseerah.ui.beans.EventsBean.java", "BodyUseAPI": ["com.baseerah.dal.dao.Event.setCampus(<nulltype>)"], "Fixed commit": "19333c80d36b55f90d3fb1f21f4d726c5782ede1", "Url": "https://api.github.com/repos/azeemirshad/baseerah", "Date": "2018-05-22T07:35:14Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getMessenger().getRequest(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (requestFrom != null) { player.send(new org.alexdev.kepler.messages.outgoing.messenger.NEW_FRIEND(requestFrom)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6467/buggy-version/Kepler-Server.src.main.java.org.alexdev.kepler.messages.incoming.messenger.MESSENGER_ACCEPTBUDDY.java", "BodyUseAPI": ["org.alexdev.kepler.game.player.Player.send(org.alexdev.kepler.messages.outgoing.messenger.NEW_FRIEND)"], "Fixed commit": "7b1f8a3b3e50e7bfc50b864aa1fb36af72f043d1", "Url": "https://api.github.com/repos/emansom/Kepler", "Date": "2018-08-03T21:43:28Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (requestFrom != null) { friend.send(new org.alexdev.kepler.messages.outgoing.messenger.NEW_FRIEND(requestFrom)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6467/buggy-version/Kepler-Server.src.main.java.org.alexdev.kepler.messages.incoming.messenger.MESSENGER_ACCEPTBUDDY.java", "BodyUseAPI": ["org.alexdev.kepler.game.player.Player.send(org.alexdev.kepler.messages.outgoing.messenger.NEW_FRIEND)"], "Fixed commit": "7b1f8a3b3e50e7bfc50b864aa1fb36af72f043d1", "Url": "https://api.github.com/repos/emansom/Kepler", "Date": "2018-08-03T21:43:28Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((android.support.v4.app.ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION }, MY_PERMISSION_REQUEST_LOCATION); }else { launch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1927/buggy-version/SmartCity.app.src.main.java.com.example.baptiste.smartcity.activities.LogInActivity.java", "BodyUseAPI": [], "Fixed commit": "322f0348e877e3b601b08de46354edb4a422edda", "Url": "https://api.github.com/repos/baptman86/android", "Date": "2018-05-23T08:51:51Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.regex.Pattern.compile(\"^([\\\\s\\\\S]*)(%)([\\\\s\\\\S]*)$\").matcher(value.trim()).find()) { bd = new java.math.BigDecimal(value.replaceAll(\"%\", \"\")); bd1 = new java.math.BigDecimal(\"100\"); st = bd.divide(bd1); return st; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8125/buggy-version/src.com.xiyu.caiwu.CheckValue.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "8e8871f53d53d789bd9ab8bfebc9ce5aa4d3f546", "Url": "https://api.github.com/repos/zhiming-su/com.xiyu.zgyxs.caiwu", "Date": "2018-07-13T06:01:41Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (priority < (container.getPriority())) nearestPriority = java.lang.Math.min(container.getPriority(), nearestPriority);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6256/buggy-version/src.core.lombok.eclipse.HandlerLibrary.java", "BodyUseAPI": ["java.lang.Math.min(long,long)", "lombok.eclipse.HandlerLibrary.VisitorContainer.getPriority()"], "Fixed commit": "35fe755b87f194621b5f328e4773f1f406f8ccc9", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2018-08-20T21:44:31Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((widthRatio == 0.0) || (heightRatio == 0.0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9045/buggy-version/src.GUI.ImageTabController.java", "BodyUseAPI": [], "Fixed commit": "efb8ecae62c863d3ba32125e64c9218cd64dfbf5", "Url": "https://api.github.com/repos/ShinSeijuro/PhotoEditor", "Date": "2018-05-06T13:26:24Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFitToView()) { doFitToView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9045/buggy-version/src.GUI.ImageTabController.java", "BodyUseAPI": [], "Fixed commit": "efb8ecae62c863d3ba32125e64c9218cd64dfbf5", "Url": "https://api.github.com/repos/ShinSeijuro/PhotoEditor", "Date": "2018-05-06T13:26:24Z"},
{"Line": "=>1054", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((this.brokerController.getMessageStore()) instanceof org.apache.rocketmq.store.DefaultMessageStore)) { response.setCode(ResponseCode.REQUEST_CODE_NOT_SUPPORTED); response.setRemark(java.lang.String.format(\"The ViewBrokerStatsData command not supported in this messageStore\")); return response; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2352/buggy-version/broker.src.main.java.org.apache.rocketmq.broker.processor.AdminBrokerProcessor.java", "BodyUseAPI": [], "Fixed commit": "df321f7e0996bdb4bec3a75dcbad1d9792bc0ab3", "Url": "https://api.github.com/repos/Hellojungle/rocketmq", "Date": "2018-08-21T07:53:17Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (contentView)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8713/buggy-version/rotatecontrolview.src.main.java.pub.tanzby.rotatecontrolview.RotateControlView.java", "BodyUseAPI": [], "Fixed commit": "acb9b6e88da64200991da747d4ff4b57b6a1bbb2", "Url": "https://api.github.com/repos/tanzby/RotateControlView", "Date": "2018-04-12T09:59:17Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentGame) != null) currentGame.addAnObserver(o);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3248/buggy-version/TicketToRideClient.app.src.main.java.Model.WaitingFacade.java", "BodyUseAPI": [], "Fixed commit": "f7fc54aeb71d7f6de1247840f5d29621dedfec9e", "Url": "https://api.github.com/repos/massielislas/TicketToRidePhase3", "Date": "2018-06-09T18:49:44Z"},
{"Line": "=>639", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { canvas.clipOutPath(mPath); }else { canvas.clipPath(mPath, Region.Op.XOR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6446/buggy-version/cropper.src.main.java.com.theartofdev.edmodo.cropper.CropOverlayView.java", "BodyUseAPI": [], "Fixed commit": "f04290cef0748e9ae6f0c43b63776bf976860d0d", "Url": "https://api.github.com/repos/wakim/Android-Image-Cropper", "Date": "2018-10-18T02:04:51Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { canvas.clipOutPath(mPath); }else { canvas.clipPath(mPath, Region.Op.INTERSECT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6446/buggy-version/cropper.src.main.java.com.theartofdev.edmodo.cropper.CropOverlayView.java", "BodyUseAPI": [], "Fixed commit": "f04290cef0748e9ae6f0c43b63776bf976860d0d", "Url": "https://api.github.com/repos/wakim/Android-Image-Cropper", "Date": "2018-10-18T02:04:51Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((null == modelName) || (\"\".equals(modelName))) { paramJo.put(\"model_name\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7055/buggy-version/src.main.java.com.inspur.da.dsw.manage.controller.VizPipelineController.java", "BodyUseAPI": [], "Fixed commit": "af20db161b0b70980cc3ba141a607896beb691a3", "Url": "https://api.github.com/repos/xuande/idsw", "Date": "2018-03-17T06:02:06Z"},
{"Line": "=>3211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((traitType.getSelectedItem()) != null) { dataMonitor.setTraitName(traitType.getSelectedItem().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3688/buggy-version/app.src.main.java.com.fieldbook.tracker.MainActivity.java", "BodyUseAPI": ["com.fieldbook.tracker.DataMonitor.setTraitName(traitType.getSelectedItem().toString())", "traitType.getSelectedItem().toString()", "android.widget.Spinner.getSelectedItem()"], "Fixed commit": "cb0f418d5adf22d4ea7374caf64df503bc30a63a", "Url": "https://api.github.com/repos/Jessssica33/Field-Book", "Date": "2018-07-13T18:42:36Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { android.app.FragmentTransaction transaction = getFragmentManager().beginTransaction(); transaction.add(R.id.game_surface, com.seakernel.stardroid.GameFragment.newInstance(), com.seakernel.stardroid.MainActivity.GAME_FRAGMENT_TAG); transaction.add(R.id.game_overlay, com.seakernel.stardroid.StartOverlayFragment.newInstance(), com.seakernel.stardroid.MainActivity.START_FRAGMENT_TAG); transaction.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4948/buggy-version/Stardroid.app.src.main.java.com.seakernel.stardroid.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b8eb9a469b8ba6202d6da110294bbc42d49c5214", "Url": "https://api.github.com/repos/CalvinKern/Stardroid", "Date": "2017-12-27T21:45:25Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DEBUG) java.lang.System.out.println(((this.myResult.getString(\"kill_number\")) + \" AAAAAAAAAA\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6022/buggy-version/src.araxxorDropLogger.DatabaseConnector.java", "BodyUseAPI": [], "Fixed commit": "f14ef5730eceb9579d420c18afa95d7edc115e92", "Url": "https://api.github.com/repos/swoldemi/Araxxor-Drop-Logger", "Date": "2018-03-16T07:52:43Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DEBUG) java.lang.System.out.println(((this.myResult.getString(\"barry\")) + \" AAAAAAAAAA\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6022/buggy-version/src.araxxorDropLogger.DatabaseConnector.java", "BodyUseAPI": [], "Fixed commit": "f14ef5730eceb9579d420c18afa95d7edc115e92", "Url": "https://api.github.com/repos/swoldemi/Araxxor-Drop-Logger", "Date": "2018-03-16T07:52:43Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.d8.myapplication.DataController.readJsonFile(Information.RECEIPTSLOCALFILENAME,v.getContext())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (json.equals(\"null\")) { com.example.d8.myapplication.DataController.storeJsonToLocal(\"[]\", Information.RECEIPTSLOCALFILENAME, getActivity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8646/buggy-version/app.src.main.java.com.example.d8.myapplication.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "0483a0e34c0ba836b45819989751b4567fdc0289", "Url": "https://api.github.com/repos/jevuu/e-ceipt", "Date": "2018-06-19T03:31:56Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.isNsfw()) && (me.ccrama.redditslide.SettingValues.getIsNSFWEnabled())) { ((android.widget.ImageView) (rootView.findViewById(R.id.thumbimage2))).setImageResource(R.drawable.nsfw); }else { if ((firstUrl.isEmpty()) && (!(s.getThumbnail().isEmpty()))) { ((me.ccrama.redditslide.Reddit) (getContext().getApplicationContext())).getImageLoader().displayImage(s.getThumbnail(), ((android.widget.ImageView) (rootView.findViewById(R.id.thumbimage2)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7807/buggy-version/app.src.main.java.me.ccrama.redditslide.Fragments.MediaFragment.java", "BodyUseAPI": ["net.dean.jraw.models.Submission.getThumbnail()", "((me.ccrama.redditslide.Reddit) (getContext().getApplicationContext())).getImageLoader().displayImage(s.getThumbnail(),((android.widget.ImageView) (rootView.findViewById(R.id.thumbimage2))))", "net.dean.jraw.models.Submission.getThumbnail()", "s.getThumbnail().isEmpty()"], "Fixed commit": "c189298da2c24cfaf8621a078ebbd4bdd84ed501", "Url": "https://api.github.com/repos/ccrama/Slide", "Date": "2018-01-03T17:32:03Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tweet.twitterCard.showSummaryCard()) { java.lang.String url = tweet.entities.urls.get(0).url; return com.tynmarket.serenade.model.util.TweetUtil.replaceChRef(tweet.text.replace(url, \"\")); }else { return com.tynmarket.serenade.model.util.TweetUtil.replaceChRef(tweet.text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4915/buggy-version/app.src.main.java.com.tynmarket.serenade.model.util.TweetUtil.java", "BodyUseAPI": ["com.tynmarket.serenade.model.util.TweetUtil.replaceChRef(tweet.text)", "com.tynmarket.serenade.model.util.TweetUtil.replaceChRef(tweet.text.replace(url, \"\"))", "tweet.text.replace(java.lang.String,java.lang.String)", "tweet.entities.urls.get(int)"], "Fixed commit": "b937f76fb21f79cf745ce9dc15b4579ee1a53cc9", "Url": "https://api.github.com/repos/tynmarket/Serenade", "Date": "2018-04-28T11:36:42Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, com.larryTheCoder.panels.Panel.PanelType>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (type == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9465/buggy-version/src.main.java.com.larryTheCoder.panels.Panel.java", "BodyUseAPI": [], "Fixed commit": "d2630de31e44f2af210835734ca90e7b37cca359", "Url": "https://api.github.com/repos/Nukkit-coders/ASkyBlock-Nukkit", "Date": "2018-05-01T17:33:02Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (specCarNumberService.isWhiteList(map.get(\"carNumber\"))) { com.PATHomo.main.service.PunishInfoService.log.infof(\"\u8be5\u53f7\u7801\u662f\u767d\u540d\u5355\u4e2d\u7684\u53f7\u7801\uff1a%s\", map.get(\"carNumber\")); return new org.nutz.lang.util.NutMap().addv(\"upload\", 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/837/buggy-version/src.main.java.com.PATHomo.main.service.PunishInfoService.java", "BodyUseAPI": ["org.nutz.log.Log.infof(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "ca3cf4b438691ae9920f4c0cb75876856c49fa78", "Url": "https://api.github.com/repos/hcxPATHomo/CarPlateNumber", "Date": "2018-01-11T19:07:28Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.github.runningforlife.photosniffer.utils.MiscUtil.isConnected(mContext))) { mView.onNetworkState(NetState.STATE_DISCONNECT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6029/buggy-version/app.src.main.java.com.github.runningforlife.photosniffer.presenter.PresenterBase.java", "BodyUseAPI": [], "Fixed commit": "090645163b154a288f57c0c7ce8c45e149af18f3", "Url": "https://api.github.com/repos/runningforlife/PhotoFans", "Date": "2018-01-07T23:19:35Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ($.isSimpleType(type)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9329/buggy-version/src.main.java.act.util.ReflectedInvokerHelper.java", "BodyUseAPI": [], "Fixed commit": "ab503b3c3e4704cc64ce64d9ffabfcf6813e20e6", "Url": "https://api.github.com/repos/actframework/actframework", "Date": "2018-08-16T00:49:50Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (distance == 0) { latlon[0] = this.destination.getLoc().getLat(); latlon[1] = this.destination.getLoc().getLon(); return latlon; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8500/buggy-version/src.main.java.model.Route.java", "BodyUseAPI": [], "Fixed commit": "2ba490862596b9e3fb5885d806adb9fc6e6f0f9b", "Url": "https://api.github.com/repos/swanaka/ship-simulation", "Date": "2018-03-19T16:52:18Z"},
{"Line": "=>1750", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.atlas.repository.store.graph.v1.EntityGraphMapper.getTraitNames(org.apache.atlas.repository.graphdb.AtlasVertex)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isNotEmpty(traitNames)) { deleteClassifications(guid, traitNames); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9127/buggy-version/repository.src.main.java.org.apache.atlas.repository.store.graph.v1.EntityGraphMapper.java", "BodyUseAPI": ["org.apache.atlas.repository.store.graph.v1.EntityGraphMapper.deleteClassifications(java.lang.String,java.util.List<java.lang.String>)"], "Fixed commit": "295595db4828f4f85977fa809ba53d723d18c668", "Url": "https://api.github.com/repos/apache/atlas", "Date": "2018-03-27T17:13:30Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.common.cklibrary.utils.JsonUtil.getInstance().json2Obj(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.kymjs.common.StringUtils.isEmpty(serviceDetailsBean.getData().getStore().getCreate_remark())) { tv_merchantsRemark.setText(getString(R.string.noRemarks)); }else { tv_merchantsRemark.setText(serviceDetailsBean.getData().getStore().getCreate_remark()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6997/buggy-version/SillyChildClient.app.src.main.java.com.sillykid.app.mine.myorder.goodorder.aftersalesdetails.ServiceDetailsActivity.java", "BodyUseAPI": ["serviceDetailsBean.getData().getStore().getCreate_remark()", "com.sillykid.app.entity.mine.myorder.goodorder.aftersalesdetails.ServiceDetailsBean.getData()", "android.widget.TextView.setText(serviceDetailsBean.getData().getStore().getCreate_remark())", "serviceDetailsBean.getData().getStore()"], "Fixed commit": "cde7e3b4c409527a4d6dafad785fab05f28206e8", "Url": "https://api.github.com/repos/921668753/SillyChildClient-Android", "Date": "2018-07-03T10:02:55Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.common.cklibrary.utils.JsonUtil.getInstance().json2Obj(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.kymjs.common.StringUtils.isEmpty(serviceDetailsBean.getData().getSHZ().getRefund_remark())) { tv_remark.setText(getString(R.string.noRemarks)); }else { tv_remark.setText(serviceDetailsBean.getData().getStore().getCreate_remark()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6997/buggy-version/SillyChildClient.app.src.main.java.com.sillykid.app.mine.myorder.goodorder.aftersalesdetails.ServiceDetailsActivity.java", "BodyUseAPI": ["com.sillykid.app.entity.mine.myorder.goodorder.aftersalesdetails.ServiceDetailsBean.getData()", "serviceDetailsBean.getData().getStore().getCreate_remark()", "serviceDetailsBean.getData().getStore()", "android.widget.TextView.setText(serviceDetailsBean.getData().getStore().getCreate_remark())"], "Fixed commit": "cde7e3b4c409527a4d6dafad785fab05f28206e8", "Url": "https://api.github.com/repos/921668753/SillyChildClient-Android", "Date": "2018-07-03T10:02:55Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (traceId != null) org.slf4j.MDC.put(\"traceId\", traceId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4966/buggy-version/tracing.common-tracing-opentracing.src.main.java.com.diamondq.common.tracing.opentracing.mdc.MDCBaseSpan.java", "BodyUseAPI": [], "Fixed commit": "cf716301ce9d5f00670c173d7196c770ae5fe00f", "Url": "https://api.github.com/repos/diamondq/dq-common-java", "Date": "2018-01-10T21:18:57Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length()) == 0) { return new seedu.addressbook.commands.IncorrectCommand(java.lang.String.format(seedu.addressbook.parser.MESSAGE_INVALID_COMMAND_FORMAT, DeleteMCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2979/buggy-version/src.seedu.addressbook.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "3596f97280a2b7bd1c04701fa4d549aae086ec58", "Url": "https://api.github.com/repos/YezhongZ/addressbook-level2", "Date": "2018-09-11T16:02:49Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringArrayExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (userData != null) { int duration = android.widget.Toast.LENGTH_LONG; android.widget.Toast toast = android.widget.Toast.makeText(this, (\"Logged in as : \" + (userData[0])), duration); toast.setGravity(((android.view.Gravity.TOP) | (android.view.Gravity.CENTER_HORIZONTAL)), 0, 0); toast.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9668/buggy-version/app.src.main.java.pp2.fullsailuniversity.secondbuild.MainMenu.java", "BodyUseAPI": ["android.widget.Toast.makeText(pp2.fullsailuniversity.secondbuild.MainMenu,java.lang.String,int)"], "Fixed commit": "9bd901b7979a4f97c37a0e815f517a3253d5e5f5", "Url": "https://api.github.com/repos/Tom819s/QuizMasterMonth2", "Date": "2018-10-23T20:36:44Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((group.getId()) == null) { group.setStatus(0); group.setCreatetime(new java.util.Date()); group.setUpdatetime(new java.util.Date()); group.setDeleteflag(false); group.setCreateuser(com.opensource.soft.BlogServer.user.common.shiro.ShiroUser.getUserId()); return groupMapper.insert(group); }else { group.setStatus(0); group.setUpdatetime(new java.util.Date()); group.setDeleteflag(false); return groupMapper.updateById(group); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3519/buggy-version/user.src.main.java.com.opensource.soft.BlogServer.user.group.service.impl.GroupServiceImpl.java", "BodyUseAPI": ["com.opensource.soft.BlogServer.user.group.data.Group.setCreatetime(java.util.Date)", "com.opensource.soft.BlogServer.user.group.data.Group.setStatus(int)", "com.opensource.soft.BlogServer.user.group.data.Group.setUpdatetime(java.util.Date)", "com.opensource.soft.BlogServer.user.group.data.Group.setUpdatetime(java.util.Date)", "com.opensource.soft.BlogServer.user.group.data.Group.setCreateuser(com.opensource.soft.BlogServer.user.common.shiro.ShiroUser.getUserId())", "com.opensource.soft.BlogServer.user.group.data.Group.setStatus(int)", "com.opensource.soft.BlogServer.user.group.data.Group.setDeleteflag(boolean)", "com.opensource.soft.BlogServer.user.group.data.Group.setDeleteflag(boolean)", "com.opensource.soft.BlogServer.user.group.mapper.GroupMapper.insert(com.opensource.soft.BlogServer.user.group.data.Group)", "com.opensource.soft.BlogServer.user.group.mapper.GroupMapper.updateById(com.opensource.soft.BlogServer.user.group.data.Group)"], "Fixed commit": "5016f6a03376c93075f3bca53855cbde345892db", "Url": "https://api.github.com/repos/blogserver/BlogServer", "Date": "2018-04-15T09:09:53Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (roles == null) return authorityGrantList;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9151/buggy-version/src.main.java.com.ispirit.digitalsky.domain.UserPrincipal.java", "BodyUseAPI": [], "Fixed commit": "c85041f039cfb77271b851e7f0f1082ce3e36e3c", "Url": "https://api.github.com/repos/pravds/digital-sky-api", "Date": "2018-07-22T16:02:15Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.erudika.scoold.utils.ScooldUtils.getAuthUser(javax.servlet.http.HttpServletRequest)", "com.erudika.scoold.utils.ScooldUtils.getValidSpaceId(com.erudika.scoold.core.Profile,getCookieValue(req, com.erudika.scoold.ScooldServer.SPACE_COOKIE))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (utils.canAccessSpace(authUser, currentSpace)) { tagslist = utils.getParaClient().findTags(\"\", itemcount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4224/buggy-version/src.main.java.com.erudika.scoold.controllers.TagsController.java", "BodyUseAPI": ["com.erudika.scoold.utils.ScooldUtils.getParaClient()", "utils.getParaClient().findTags(java.lang.String,com.erudika.para.utils.Pager)"], "Fixed commit": "9bb37d66f931194d35c1e833d41d7b797db51aa0", "Url": "https://api.github.com/repos/Erudika/scoold", "Date": "2018-10-24T16:07:09Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (evt.isCancelable()) evt.setCanceled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1570/buggy-version/src.main.java.imagicthecat.blockprotectfieldgenerator.shared.ForgeEventHandler.java", "BodyUseAPI": ["net.minecraftforge.event.entity.player.PlayerInteractEvent.setCanceled(boolean)"], "Fixed commit": "8efa4e0d75cb688685f5e92fb0c98aee610827ab", "Url": "https://api.github.com/repos/ImagicTheCat/BlockProtectFieldGenerator", "Date": "2018-01-28T00:42:53Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((extendsData.getCurrentVersion()) <= (io.nuls.protocol.base.version.NulsVersionManager.getMainVersion())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7839/buggy-version/consensus-module.poc.consensus-poc-base.src.main.java.io.nuls.consensus.poc.process.NulsProtocolProcess.java", "BodyUseAPI": [], "Fixed commit": "e2beeb51e5fd1170893be9253c8ade80763bc091", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-10-18T05:43:33Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((extendsData.getCurrentVersion()) <= (io.nuls.protocol.base.version.NulsVersionManager.getMainVersion())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7839/buggy-version/consensus-module.poc.consensus-poc-base.src.main.java.io.nuls.consensus.poc.process.NulsProtocolProcess.java", "BodyUseAPI": [], "Fixed commit": "e2beeb51e5fd1170893be9253c8ade80763bc091", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-10-18T05:43:33Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filepath) != null) { java.io.File file = new java.io.File(filepath); if (file.exists()) { logger.log(\"Deleting existing file...\"); if (!(file.delete())) { logger.logCritical(\"Error deleting existing file\"); } } try { if (!(file.exists())) { if (!(file.createNewFile())) { logger.logCritical(\"Error creating file\"); } } logger.log(\"Writing to disk...\"); java.io.FileWriter fw = new java.io.FileWriter(file); for (Context c : contexts) { for (javafx.util.Pair<java.lang.Object, java.lang.Object> keyValuePairs : c.getMap()) { fw.write(((((\"Key: \" + (java.lang.String.valueOf(keyValuePairs.getKey()))) + \" Value: \") + (java.lang.String.valueOf(keyValuePairs.getValue()))) + '\\n')); fw.flush(); } } fw.close(); } catch (java.lang.Exception e) { logger.logCritical((\"Error while writing to file: \" + (e.getMessage()))); } }else { logger.logCritical(\"Output file not specified: use 'config.addOutputPath(String path);'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5161/buggy-version/OutputWriter.java", "BodyUseAPI": [], "Fixed commit": "96a5fa7369dc7575f1801c8cf44843d4a8024fb1", "Url": "https://api.github.com/repos/OliverBathurst/Map-Reduce-Prototype", "Date": "2018-01-19T17:08:59Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(scriptTupleRunners.containsKey(script))) { scriptTupleRunners.put(script, runtime.startScript(script, false)); new java.lang.Thread(() -> { try { scriptTupleRunners.get(script).join(); } catch (java.lang.InterruptedException t) { } scriptTupleRunners.remove(script); }).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7335/buggy-version/src.com.shtick.utils.scratch.runner.standard.blocks.WhenKeyPressed.java", "BodyUseAPI": ["java.util.HashMap<com.shtick.utils.scratch.runner.core.elements.ScriptTuple, com.shtick.utils.scratch.runner.core.ScriptTupleRunner>.put(com.shtick.utils.scratch.runner.core.elements.ScriptTuple,runtime.startScript(script, false))", "java.lang.Thread.start()", "java.util.HashMap<com.shtick.utils.scratch.runner.core.elements.ScriptTuple, com.shtick.utils.scratch.runner.core.ScriptTupleRunner>.get(com.shtick.utils.scratch.runner.core.elements.ScriptTuple)", "java.util.HashMap<com.shtick.utils.scratch.runner.core.elements.ScriptTuple, com.shtick.utils.scratch.runner.core.ScriptTupleRunner>.remove(com.shtick.utils.scratch.runner.core.elements.ScriptTuple)", "com.shtick.utils.scratch.runner.core.ScratchRuntime.startScript(com.shtick.utils.scratch.runner.core.elements.ScriptTuple,boolean)", "scriptTupleRunners.get(script).join()"], "Fixed commit": "1fcffc1155227e6ad73ed2cd84d70042614a9daa", "Url": "https://api.github.com/repos/seanmcox/scratch-runner-blocks-standard", "Date": "2018-03-02T21:57:28Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(scriptTupleRunners.containsKey(script))) { scriptTupleRunners.put(script, runtime.startScript(script, false)); new java.lang.Thread(() -> { try { scriptTupleRunners.get(script).join(); } catch (java.lang.InterruptedException t) { } scriptTupleRunners.remove(script); }).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7335/buggy-version/src.com.shtick.utils.scratch.runner.standard.blocks.WhenKeyPressed.java", "BodyUseAPI": ["com.shtick.utils.scratch.runner.core.ScratchRuntime.startScript(com.shtick.utils.scratch.runner.core.elements.ScriptTuple,boolean)", "java.util.HashMap<com.shtick.utils.scratch.runner.core.elements.ScriptTuple, com.shtick.utils.scratch.runner.core.ScriptTupleRunner>.get(com.shtick.utils.scratch.runner.core.elements.ScriptTuple)", "scriptTupleRunners.get(script).join()", "java.util.HashMap<com.shtick.utils.scratch.runner.core.elements.ScriptTuple, com.shtick.utils.scratch.runner.core.ScriptTupleRunner>.remove(com.shtick.utils.scratch.runner.core.elements.ScriptTuple)", "java.util.HashMap<com.shtick.utils.scratch.runner.core.elements.ScriptTuple, com.shtick.utils.scratch.runner.core.ScriptTupleRunner>.put(com.shtick.utils.scratch.runner.core.elements.ScriptTuple,runtime.startScript(script, false))", "java.lang.Thread.start()"], "Fixed commit": "1fcffc1155227e6ad73ed2cd84d70042614a9daa", "Url": "https://api.github.com/repos/seanmcox/scratch-runner-blocks-standard", "Date": "2018-03-02T21:57:28Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (project.getName().equals(TalendMavenConstants.PROJECT_NAME)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2959/buggy-version/main.plugins.org.talend.designer.maven.src.main.java.org.talend.designer.maven.utils.MavenProjectUtils.java", "BodyUseAPI": [], "Fixed commit": "6272900de0bc7fa887adef3052d5a1a384dda42d", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2018-01-13T17:22:26Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(model[i][j].isRevealed())) { model[i][j].setRevealed(true); updateGameStateReveal(i, j); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2458/buggy-version/app.src.main.java.com.ait.dboshko1.minesweeper.model.MSModel.java", "BodyUseAPI": ["com.ait.dboshko1.minesweeper.model.MSModel.updateGameStateReveal(int,int)", "model[i][j].setRevealed(boolean)"], "Fixed commit": "5850eaa8d04347c2f5b795cf37e0da449544ea00", "Url": "https://api.github.com/repos/douglassboshkoff/AndroidMinesweeper", "Date": "2018-03-19T10:04:47Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getInterpreter()) != null) { getInterpreter().onClear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9175/buggy-version/sponge-core.src.main.java.org.openksavi.sponge.core.kb.DefaultScriptKnowledgeBase.java", "BodyUseAPI": [], "Fixed commit": "aabfbd66863bfdac33f8a0626a2003d6a39df7ba", "Url": "https://api.github.com/repos/softelnet/sponge", "Date": "2018-07-11T08:48:02Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getInterpreter()) != null) { getInterpreter().onShutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9175/buggy-version/sponge-core.src.main.java.org.openksavi.sponge.core.kb.DefaultScriptKnowledgeBase.java", "BodyUseAPI": [], "Fixed commit": "aabfbd66863bfdac33f8a0626a2003d6a39df7ba", "Url": "https://api.github.com/repos/softelnet/sponge", "Date": "2018-07-11T08:48:02Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((textFile.length()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1749/buggy-version/butterfly-utilities.src.main.java.com.paypal.butterfly.utilities.operations.EolHelper.java", "BodyUseAPI": [], "Fixed commit": "decf5c1c6dc358d07a773365560fabae99bd8100", "Url": "https://api.github.com/repos/amriteya/butterfly", "Date": "2018-07-06T18:33:50Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.paypal.butterfly.utilities.operations.properties.AddProperty.getAbsoluteFile(java.io.File,com.paypal.butterfly.extensions.api.TransformationContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fileToBeChanged.length()) != 0) { org.codehaus.plexus.util.FileUtils.fileAppend(fileToBeChanged.getAbsolutePath(), com.paypal.butterfly.utilities.operations.EolHelper.findEolDefaultToOs(fileToBeChanged)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1749/buggy-version/butterfly-utilities.src.main.java.com.paypal.butterfly.utilities.operations.properties.AddProperty.java", "BodyUseAPI": ["com.paypal.butterfly.utilities.operations.EolHelper.findEolDefaultToOs(java.io.File)", "org.codehaus.plexus.util.FileUtils.fileAppend(java.lang.String,com.paypal.butterfly.utilities.operations.EolHelper.findEolDefaultToOs(fileToBeChanged))", "java.io.File.getAbsolutePath()"], "Fixed commit": "decf5c1c6dc358d07a773365560fabae99bd8100", "Url": "https://api.github.com/repos/amriteya/butterfly", "Date": "2018-07-06T18:33:50Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vega.automation.service.TestcaseMasterService.testcase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.collections4.CollectionUtils.isNotEmpty(list)) { com.vega.automation.dto.TestscenarioMaster scenario = null; for (com.vega.automation.entity.TestcaseMaster testcase : list) { com.vega.automation.dto.TestcaseMaster targettestCase = new com.vega.automation.dto.TestcaseMaster(); if (((null != testcase) && (null != targettestCase)) && (null != (testcase.getTestscenarioMaster()))) { org.springframework.beans.BeanUtils.copyProperties(testcase, targettestCase); scenario = new com.vega.automation.dto.TestscenarioMaster(); org.springframework.beans.BeanUtils.copyProperties(testcase.getTestscenarioMaster(), scenario); targettestCase.setTestscenarioMaster(scenario); result.add(targettestCase); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6882/buggy-version/src.main.java.com.vega.automation.controller.VegaController.java", "BodyUseAPI": [], "Fixed commit": "c8cfac1163f70dc7420b885dfa52b07fd0c95fd3", "Url": "https://api.github.com/repos/anandCG/vegaAutomation", "Date": "2018-08-06T12:40:00Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mMenuLayout.isMoving())) menuItem.action();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1791/buggy-version/app.src.main.java.com.huxq17.example.floatball.floatball.menu.FloatMenu.java", "BodyUseAPI": [], "Fixed commit": "c5861243b63c66161b2fa4e2a1ab514d4b4685ca", "Url": "https://api.github.com/repos/huxq17/FloatBall", "Date": "2018-01-13T12:06:37Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (red > blue) { turn = FourInARowTile.BLUE; }else { turn = FourInARowTile.RED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9043/buggy-version/app.src.main.java.jaw.minigames.model.minigamemodule.fourinarow.FourInARow.java", "BodyUseAPI": [], "Fixed commit": "a2296010177e80feff9eefbeb940287e2e8dc24c", "Url": "https://api.github.com/repos/JohanWennerbeck/minigames", "Date": "2018-06-28T09:08:26Z"},
{"Line": "=>607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (assetIndex < (mImageSpecArrayList.size())) { if ((mImageSpecArrayList.get(assetIndex)) != null) { newHighlightedCheckableImage.setAlpha(0.3F); }else { newHighlightedCheckableImage.setHighlightBorderSizePixels(resources.getDimensionPixelSize(R.dimen.checkable_image_highlight_border_size)); newHighlightedCheckableImage.setHighlightBorderColour(resources.getColor(R.color.photobook_target_image_highlight)); newHighlightedCheckableImage.setHighlightBorderShowing(true); } mCurrentlyHighlightedAssetIndex = assetIndex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1055/buggy-version/KitePrintSDK.src.main.java.ly.kite.journey.creation.photobook.PhotobookAdaptor.java", "BodyUseAPI": ["java.util.ArrayList<ly.kite.ordering.ImageSpec>.get(int)"], "Fixed commit": "6d1f9e137d213fe8edb72327271cf506c7f57f50", "Url": "https://api.github.com/repos/OceanLabs/Android-Print-SDK", "Date": "2018-05-10T16:40:50Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (run) { edu.asu.ser516.projecttwo.team04.util.Log.e((\"Failed to accept a socket connection to a client on port \" + (PORT)), edu.asu.ser516.projecttwo.team04.ServerModel.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5490/buggy-version/src.edu.asu.ser516.projecttwo.team04.ServerModel.java", "BodyUseAPI": [], "Fixed commit": "e4311dd80ea9920e1f9e811a01524b8b3fe9f840", "Url": "https://api.github.com/repos/SER516/ProjectTwo_Team04", "Date": "2018-02-22T00:34:52Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((textureFirst) + (imageSel)) >= (com.vistamaresoft.pnb.Gui.NUM_OF_TEXTURES)) imageSel = ((com.vistamaresoft.pnb.Gui.NUM_OF_TEXTURES) - (textureFirst)) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7426/buggy-version/src.com.vistamaresoft.pnb.Gui.java", "BodyUseAPI": [], "Fixed commit": "e169c6bb3296ea25b8c105b24651002ecc618e99", "Url": "https://api.github.com/repos/mgavioli/RisingWorld-PlanksNbeams", "Date": "2018-06-03T19:55:35Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.crossoverRate) > (rand.nextDouble())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9748/buggy-version/src.tw.edu.nctu.dcslab.WTACluster.Algorithm.GeneticAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "9338ae394e041168cd6e8d52294b5d52998bcd35", "Url": "https://api.github.com/repos/timfan3939/NCTU-WTA-Cluster", "Date": "2018-01-31T08:27:04Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) > 9) res = res.substring(0, 8); else res = res.substring(0, res.length());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4218/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "1116e43826042f0b00be0c69bda378195b9cad90", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-jahess47", "Date": "2018-10-04T17:15:04Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hImaginedState) == null) { makeImaginedTransition(hs, a); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1148/buggy-version/src.main.java.edu.umbc.cs.maple.palm.rmax.agent.RmaxModel.java", "BodyUseAPI": [], "Fixed commit": "b6d44556bd0178e6418eda5ca6e2cf4e412d92b4", "Url": "https://api.github.com/repos/MAPLE-Robot-Subgoaling/MAPLE-PALM", "Date": "2018-07-10T17:41:32Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((pdfDocument != null) && (!(pdfDocument.isClosed()))) { pdfDocument.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8878/buggy-version/grassroot-integration.src.main.java.za.org.grassroot.integration.PdfGeneratingServiceImpl.java", "BodyUseAPI": ["com.itextpdf.kernel.pdf.PdfDocument.close()"], "Fixed commit": "580ec92cac33e48d637d1af98baccb7462876e76", "Url": "https://api.github.com/repos/grassrootza/grassroot-platform", "Date": "2018-03-14T19:40:01Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(docDir.exists())) { if (docDir.mkdir()) { com.lgsim.engine.graphEditor.graph.document.DocumentContext.log.debug(\"make directory {}\", docDir); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4535/buggy-version/graph.src.main.java.com.lgsim.engine.graphEditor.graph.document.DocumentContext.java", "BodyUseAPI": ["java.io.File.mkdir()", "org.slf4j.Logger.debug(java.lang.String,java.io.File)"], "Fixed commit": "125f33b500eedd7eed9f95630e83cf95ade4b210", "Url": "https://api.github.com/repos/lgsimu/graph-editor", "Date": "2018-04-27T05:10:06Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((m_animation) == null) || ((m_animation) != p_animation)) { m_animation = p_animation; m_clock.restart(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1722/buggy-version/src.graphics.Sprite.java", "BodyUseAPI": [], "Fixed commit": "180c27149abcf3bc839811e31a4ccba8ef1ee558", "Url": "https://api.github.com/repos/HHSProgrammingClub/smash-my-buttons", "Date": "2018-08-01T02:26:36Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((m_animation) == null) || (!(p_animationName.equals(m_animation.getName())))) { m_animation = m_texture.getAnimation(p_animationName); m_clock.restart(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1722/buggy-version/src.graphics.Sprite.java", "BodyUseAPI": ["graphics.Texture.getAnimation(java.lang.String)"], "Fixed commit": "180c27149abcf3bc839811e31a4ccba8ef1ee558", "Url": "https://api.github.com/repos/HHSProgrammingClub/smash-my-buttons", "Date": "2018-08-01T02:26:36Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { eg.edu.cu.fci.ecampus.fci_e_campus.fragments.OverviewFragment fragment = new eg.edu.cu.fci.ecampus.fci_e_campus.fragments.OverviewFragment(); getSupportFragmentManager().beginTransaction().add(R.id.fragment_container, fragment).commit(); setTitle(getString(R.string.title_activity_overview)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/350/buggy-version/app.src.main.java.eg.edu.cu.fci.ecampus.fci_e_campus.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4d7224a21f3fd4bbb09dd2777517e84e8e786546", "Url": "https://api.github.com/repos/FCI-E-campus/fci-e-campus-android", "Date": "2018-07-03T00:21:57Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { throw new java.lang.IllegalArgumentException(((\"null value for \" + (parameter.getName())) + \" given, null values are not allowed\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4028/buggy-version/Backend.src.org.edu_sharing.metadataset.v2.MetadataSearchHelper.java", "BodyUseAPI": [], "Fixed commit": "5fcc99e8f0a6c62203cdb7b7a16ea3e7506621c2", "Url": "https://api.github.com/repos/edu-sharing/Edu-Sharing", "Date": "2018-02-19T09:28:59Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGatt) != null) mGatt.disconnect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8675/buggy-version/app.src.main.java.solutions.s4y.itag.ble.ITagGatt.java", "BodyUseAPI": [], "Fixed commit": "e42df8f517f9e13f780816edcb39d060f8b6dcc4", "Url": "https://api.github.com/repos/s4ysolutions/itag", "Date": "2018-10-25T15:51:09Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) == 0) { throw new java.lang.IllegalArgumentException(\"Empty list\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8168/buggy-version/src.main.java.randoop.util.Randomness.java", "BodyUseAPI": [], "Fixed commit": "ee3a3de4dfc2eb73d530a086b90ae606da4af35f", "Url": "https://api.github.com/repos/randoop/randoop", "Date": "2018-06-08T13:18:23Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) == 0) { throw new java.lang.IllegalArgumentException(\"Empty list\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8168/buggy-version/src.main.java.randoop.util.Randomness.java", "BodyUseAPI": [], "Fixed commit": "ee3a3de4dfc2eb73d530a086b90ae606da4af35f", "Url": "https://api.github.com/repos/randoop/randoop", "Date": "2018-06-08T13:18:23Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buffer.length()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5277/buggy-version/src.main.java.jp.mizunaka.mylang.Lexer.java", "BodyUseAPI": [], "Fixed commit": "e0abdf4bccb9ae7c538f401960e88481defe13aa", "Url": "https://api.github.com/repos/mi-nakano/mylang", "Date": "2018-04-28T01:51:43Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPowerLevel()) < 1) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9202/buggy-version/src.main.java.cn.nukkit.blockentity.BlockEntityBeacon.java", "BodyUseAPI": [], "Fixed commit": "072d98a332a9af7da2b8d7aa153c9530fb54785c", "Url": "https://api.github.com/repos/Rover656/Nukkit", "Date": "2018-09-03T10:40:21Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.company.Main.printMatrices) alignator.printAlignMatrix();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/864/buggy-version/src.com.company.Main.java", "BodyUseAPI": [], "Fixed commit": "f98ecf29c3b1ba599bcefe085f97756851bfbc73", "Url": "https://api.github.com/repos/faraday-m/sequence-alignments", "Date": "2018-03-01T11:45:42Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.company.Main.printMatrices) alignator.printSubMatrix();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/864/buggy-version/src.com.company.Main.java", "BodyUseAPI": [], "Fixed commit": "f98ecf29c3b1ba599bcefe085f97756851bfbc73", "Url": "https://api.github.com/repos/faraday-m/sequence-alignments", "Date": "2018-03-01T11:45:42Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCombileLine) { canvas.drawLine(lastOpen[0], lastOpen[1], x, y, mPaintLinkLine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/248/buggy-version/app.src.main.java.com.example.administrator.zoushitu.ChartView.java", "BodyUseAPI": [], "Fixed commit": "c24660888554cd9002c159412a6de58f52d7a12d", "Url": "https://api.github.com/repos/jkl2323/ZoushiTu", "Date": "2018-09-10T09:09:32Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((keys.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7145/buggy-version/src.core.keyChain.RollingKeySeries.java", "BodyUseAPI": [], "Fixed commit": "d198608cc2bc4631f924ba8936b2fbd9bf984887", "Url": "https://api.github.com/repos/repeats/Repeat", "Date": "2018-07-15T19:01:22Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsFile.contains(\",\")) jsFile = ((jsFile.length()) > 1) ? jsFile.substring(0, jsFile.lastIndexOf(',')) : jsFile;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6319/buggy-version/src.main.java.de.viadee.bpm.vPAV.output.JsOutputWriter.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(char)", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "cab61ab6d0337e2157ed918e397319f39c68fc2a", "Url": "https://api.github.com/repos/viadee/vPAV", "Date": "2018-03-05T20:59:21Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GameLogic.Cell.getVerticalCoordinate()", "GameLogic.Cell.getHorizontalCoordinate()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isValidCell((currentTankCellHorizontalCoordinate - (CELL_OFFSET)), currentTankCellVerticalCoordinate)) { allAdjacentCell.add(gameBoard[(currentTankCellHorizontalCoordinate - (CELL_OFFSET))][currentTankCellVerticalCoordinate]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6329/buggy-version/src.GameLogic.TankPlacement.java", "BodyUseAPI": ["java.util.ArrayList<GameLogic.Cell>.add(gameBoard[(currentTankCellHorizontalCoordinate - (CELL_OFFSET))][currentTankCellVerticalCoordinate])"], "Fixed commit": "a60dac890cce3ae3b67dab798dcf15e896a85ccb", "Url": "https://api.github.com/repos/WanatabeShin/a3", "Date": "2018-02-13T01:52:46Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((gameBoard[tShape[i][0]][tShape[i][1]].getCellCoordinate()) == null) || ((currentTank.getListOfTankCell()) == null)) { flag = false; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6329/buggy-version/src.GameLogic.TankPlacement.java", "BodyUseAPI": [], "Fixed commit": "a60dac890cce3ae3b67dab798dcf15e896a85ccb", "Url": "https://api.github.com/repos/WanatabeShin/a3", "Date": "2018-02-13T01:52:46Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GameLogic.Cell.getHorizontalCoordinate()", "GameLogic.Cell.getVerticalCoordinate()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isValidCell(currentTankCellHorizontalCoordinate, (currentTankCellVerticalCoordinate - (CELL_OFFSET)))) { allAdjacentCell.add(gameBoard[currentTankCellHorizontalCoordinate][(currentTankCellVerticalCoordinate - (CELL_OFFSET))]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6329/buggy-version/src.GameLogic.TankPlacement.java", "BodyUseAPI": ["java.util.ArrayList<GameLogic.Cell>.add(gameBoard[currentTankCellHorizontalCoordinate][(currentTankCellVerticalCoordinate - (CELL_OFFSET))])"], "Fixed commit": "a60dac890cce3ae3b67dab798dcf15e896a85ccb", "Url": "https://api.github.com/repos/WanatabeShin/a3", "Date": "2018-02-13T01:52:46Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GameLogic.Cell.getVerticalCoordinate()", "GameLogic.Cell.getHorizontalCoordinate()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isValidCell(currentTankCellHorizontalCoordinate, (currentTankCellVerticalCoordinate + (CELL_OFFSET)))) { allAdjacentCell.add(gameBoard[currentTankCellHorizontalCoordinate][(currentTankCellVerticalCoordinate + (CELL_OFFSET))]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6329/buggy-version/src.GameLogic.TankPlacement.java", "BodyUseAPI": ["java.util.ArrayList<GameLogic.Cell>.add(gameBoard[currentTankCellHorizontalCoordinate][(currentTankCellVerticalCoordinate + (CELL_OFFSET))])"], "Fixed commit": "a60dac890cce3ae3b67dab798dcf15e896a85ccb", "Url": "https://api.github.com/repos/WanatabeShin/a3", "Date": "2018-02-13T01:52:46Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((conf.get(\"minRatioMetric\", 3.0)) instanceof java.lang.Double) { minRiskRatio = ((double) (conf.get(\"minRatioMetric\", 3.0))); }else { minRiskRatio = ((double) ((int) (conf.get(\"minRatioMetric\", 3)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4097/buggy-version/core.src.main.java.edu.stanford.futuredata.macrobase.pipeline.BasicBatchPipeline.java", "BodyUseAPI": [], "Fixed commit": "af534e446926cc25ce3c35b72c6cd98701b88126", "Url": "https://api.github.com/repos/stanford-futuredata/macrobase", "Date": "2018-04-20T23:03:38Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((conf.get(\"minSupport\", 0.01)) instanceof java.lang.Double) { minSupport = ((double) (conf.get(\"minSupport\", 0.01))); }else { minSupport = ((double) ((int) (conf.get(\"minSupport\", 0)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4097/buggy-version/core.src.main.java.edu.stanford.futuredata.macrobase.pipeline.BasicBatchPipeline.java", "BodyUseAPI": [], "Fixed commit": "af534e446926cc25ce3c35b72c6cd98701b88126", "Url": "https://api.github.com/repos/stanford-futuredata/macrobase", "Date": "2018-04-20T23:03:38Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.round(float)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (bmi != 0) { prefs.edit().putInt(\"BMI\", bmi).apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2004/buggy-version/app.src.main.java.com.example.ethan.dream_fit.bmi_calculator.java", "BodyUseAPI": ["prefs.edit().putInt(\"BMI\", bmi).apply()", "prefs.edit().putInt(java.lang.String,int)"], "Fixed commit": "e6f41f19275b7fe5c13ddb0acc97892fc9fc9f17", "Url": "https://api.github.com/repos/MatthewDBarrett/DreamFit", "Date": "2018-05-27T12:10:08Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fields.length) < 1) { line = br.readLine(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1103/buggy-version/src.main.org.yeastrc.proxl.xml.metamorph.reader.LinkerProcessorFromConfFile.java", "BodyUseAPI": [], "Fixed commit": "a2fedd170c676b50ee410fe8a3ef976fc3eb517b", "Url": "https://api.github.com/repos/yeastrc/proxl-import-metamorpheus", "Date": "2018-09-20T22:29:07Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fields.length) < 1) { line = br.readLine(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1103/buggy-version/src.main.org.yeastrc.proxl.xml.metamorph.reader.LinkerProcessorFromConfFile.java", "BodyUseAPI": [], "Fixed commit": "a2fedd170c676b50ee410fe8a3ef976fc3eb517b", "Url": "https://api.github.com/repos/yeastrc/proxl-import-metamorpheus", "Date": "2018-09-20T22:29:07Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parameters.length) > 0) { for (int i = 0; i < (parameters.length); i++) { parameters[i] = actionParameterInjector.produce(actionMappingMatch.getMethod().getParameterTypes()[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6105/buggy-version/action.src.main.java.com.manorrock.oyena.action.DefaultActionMethodExecutor.java", "BodyUseAPI": [], "Fixed commit": "03dfbfee0d23bbec5c4ae012a2dc55a7e402dac0", "Url": "https://api.github.com/repos/manorrock/oyena", "Date": "2018-03-28T06:08:35Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextLoad.contains(\"zmqCurveSeckey\")) { curveSecKey = java.nio.file.Files.readAllBytes(f.toPath()); }else { curvePubKey = java.nio.file.Files.readAllBytes(f.toPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1822/buggy-version/modApiServer.src.org.aion.api.server.zmq.ProtocolProcessor.java", "BodyUseAPI": [], "Fixed commit": "91c64b1343e930e75fed91cf4aafe615e572ba99", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-09-10T16:07:32Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (neiSynOp.isNeighbor(message[0])) handleTable.update(new DistanceVector(message[0], message[0], ((ID) + (message[0])), java.lang.Integer.parseInt(message[1])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5148/buggy-version/src.Router.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "Router.HandleTable.update(DistanceVector)"], "Fixed commit": "425006dbe0d8e4c8e95fa4068edb7cb6b7d89ac5", "Url": "https://api.github.com/repos/too-weak/RouterNetwork", "Date": "2018-07-23T01:58:47Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nodeIndex >= (numNodes)) { throw new java.lang.IllegalArgumentException((((\"Provided nodeIndex \" + nodeIndex) + \" greater then numNodes \") + (numNodes))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4659/buggy-version/hollow.src.main.java.com.netflix.hollow.core.memory.encoding.FixedLengthMultipleOccurrenceElementArray.java", "BodyUseAPI": [], "Fixed commit": "df4187c4f30a3478318ab8543a91a4d7ccd34654", "Url": "https://api.github.com/repos/akhaku/hollow", "Date": "2018-09-26T17:44:56Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (packageID.version.value.equals(Names.DEFAULT_VERSION.getValue())) { packageID.version.value = pathList.get(0).toFile().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3149/buggy-version/compiler.ballerina-lang.src.main.java.org.wso2.ballerinalang.compiler.packaging.converters.PathConverter.java", "BodyUseAPI": [], "Fixed commit": "2af91ccd19e5170c5265b0176d121b389ffa34af", "Url": "https://api.github.com/repos/NatashaWso2/ballerina", "Date": "2018-06-06T13:07:16Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (timestampObj instanceof java.lang.Integer) { result.timestamp = ((int) (timestampObj)) * 1.0; }else if (timestampObj instanceof java.lang.Double) { result.timestamp = ((double) (timestampObj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6767/buggy-version/android.app.src.main.java.com.reactnativenavigation.params.parsers.ScreenParamsParser.java", "BodyUseAPI": [], "Fixed commit": "d02bccf2642e77b27fd76ad385a7aee0c79d51ce", "Url": "https://api.github.com/repos/spritlesoftware/react-native-navigation", "Date": "2018-06-04T16:27:51Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (propertyValue != null) properties.put(propertyName, propertyValue); else properties.remove(propertyName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4999/buggy-version/src.upsimulator.core.PMembrane.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)"], "Fixed commit": "5207a19443eee1a19e190910975e64fb73f4fe9a", "Url": "https://api.github.com/repos/quancs/UPSimulator", "Date": "2018-04-08T03:59:36Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((auth.getUser()) == null) { throw new com.zmdev.goldenbag.exception.AuthorizationException(\"\u8bf7\u767b\u9646\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3205/buggy-version/src.main.java.com.zmdev.goldenbag.web.assessment.SummaryController.java", "BodyUseAPI": [], "Fixed commit": "3c10046e342edd816e342cbe84a1e1e642dd7509", "Url": "https://api.github.com/repos/ty666/golden-bag-backend", "Date": "2018-08-02T19:48:06Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (predicates.isEmpty()) predicates.add(com.github.dakusui.crest.matcherbuilders.ObjectMatcherBuilder.alwaysTrue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9781/buggy-version/src.main.java.com.github.dakusui.crest.matcherbuilders.ObjectMatcherBuilder.java", "BodyUseAPI": ["java.util.List<java.util.function.Predicate<? super OUT>>.add(com.github.dakusui.crest.matcherbuilders.ObjectMatcherBuilder.alwaysTrue())"], "Fixed commit": "cb456b47c9756cbbd1f4a815e1ce615d95ea6d10", "Url": "https://api.github.com/repos/dakusui/thincrest", "Date": "2018-10-26T19:39:26Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mList.get(position).getDurations().size()) > 0) { holder.tvDuration.setText(mList.get(position).getDurations().get(0)); }else { holder.tvDuration.setText(\"\u6682\u65e0\u7247\u957f\u4fe1\u606f\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2620/buggy-version/app.src.main.java.com.haocent.android.appwikipedia.ui.movie.intheaters.InTheatersAdapter.java", "BodyUseAPI": ["java.util.List<MovieInTheaters.SubjectsBean>.get(int)", "mList.get(position).getDurations()", "android.widget.TextView.setText(mList.get(position).getDurations().get(0))", "mList.get(position).getDurations().get(int)"], "Fixed commit": "27113a4e1b137633afc1dca9802c1f057128812c", "Url": "https://api.github.com/repos/cnwutianhao/AppWikipedia", "Date": "2018-05-15T05:39:12Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(timeSlider.isValueChanging())) { timeSlider.setValue(ms); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/899/buggy-version/src.audioviz.PlayerController.java", "BodyUseAPI": ["javafx.scene.control.Slider.setValue(double)"], "Fixed commit": "11424f8d1aa1f45bb9b82b9249ab251129ad9d77", "Url": "https://api.github.com/repos/kjbwcb/AudoioViz", "Date": "2018-02-06T17:33:22Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((org.mycore.frontend.cli.MCRCommandLineInterface.class.getClassLoader()) instanceof java.net.URLClassLoader)) { java.lang.System.out.println(\"Current ClassLoader is not extendable at runtime. Using workaround.\"); java.lang.Thread.currentThread().setContextClassLoader(new java.net.URLClassLoader(new java.net.URL[0])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/423/buggy-version/mycore-base.src.main.java.org.mycore.frontend.cli.MCRCommandLineInterface.java", "BodyUseAPI": [], "Fixed commit": "bc746c4314311f594fddda5b255c19426fddd1a5", "Url": "https://api.github.com/repos/MyCoRe-Org/mycore", "Date": "2018-07-11T11:53:09Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mThrowable) != null) { mThrowable.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4179/buggy-version/matrxretrofit.src.main.java.cn.meiauto.matrxretrofit.util.ServerException.java", "BodyUseAPI": [], "Fixed commit": "417b2b04dce77217dc273d561969b809aa0f65c3", "Url": "https://api.github.com/repos/liyang77723/MATNetwork", "Date": "2018-05-25T01:49:27Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (counter < 7) { predictSeconds = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4267/buggy-version/java.src.botenanna.behaviortree.tasks.TaskBallTowardsGoal.java", "BodyUseAPI": [], "Fixed commit": "f6272016dec9e76d47fbfb8689b5ccfbf1dea00c", "Url": "https://api.github.com/repos/NicEastvillage/RLBot-Boten-Anna", "Date": "2018-03-20T10:26:12Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getCreatorEventId()) < 0) event.setCreatorEventId(event.save());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9251/buggy-version/app.src.main.java.hft.wiinf.de.horario.controller.EventController.java", "BodyUseAPI": ["hft.wiinf.de.horario.model.Event.setCreatorEventId(event.save())", "hft.wiinf.de.horario.model.Event.save()"], "Fixed commit": "ecd619e0db625fd48f0ac6638a53ab21f8af8121", "Url": "https://api.github.com/repos/Horario/Horario", "Date": "2018-05-22T17:45:42Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (warnOnError) { org.exist.indexing.lucene.AnalyzerConfig.LOG.warn((message + \". Will retry...\")); }else { org.exist.indexing.lucene.AnalyzerConfig.LOG.error(message, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6211/buggy-version/extensions.indexes.lucene.src.org.exist.indexing.lucene.AnalyzerConfig.java", "BodyUseAPI": [], "Fixed commit": "c0ca03faa4b62b73af7ce80bbac38e68a2011fb7", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-02-17T16:09:39Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (warnOnError) { org.exist.indexing.lucene.AnalyzerConfig.LOG.warn((message + \". Will retry...\")); }else { org.exist.indexing.lucene.AnalyzerConfig.LOG.error(message, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6211/buggy-version/extensions.indexes.lucene.src.org.exist.indexing.lucene.AnalyzerConfig.java", "BodyUseAPI": [], "Fixed commit": "c0ca03faa4b62b73af7ce80bbac38e68a2011fb7", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-02-17T16:09:39Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pack.getLengthInfo().getReturnLen()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (returnLen > 0) { byte[] origin = packBaos.toByteArray(); byte[] copy = new byte[(origin.length) - returnLen]; java.lang.System.arraycopy(origin, returnLen, copy, 0, ((origin.length) - returnLen)); doc = org.dom4j.DocumentHelper.parseText(new java.lang.String(copy, pack.getEncoding())); }else { doc = org.dom4j.DocumentHelper.parseText(new java.lang.String(packBaos.toByteArray(), pack.getEncoding())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8861/buggy-version/src.main.java.com.hu.tran.xcomm.core.ResponseHandler.java", "BodyUseAPI": ["java.lang.System.arraycopy(byte[],int,byte[],int,int)"], "Fixed commit": "e4de5186e5e71db8865ab47e179c89b35a8e6627", "Url": "https://api.github.com/repos/huPATHotian9527/xcomm", "Date": "2018-06-28T02:49:48Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dom4j.Element.element(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (returnLen == null) { lengthInfo.setReturnLen(0); }else { lengthInfo.setReturnLen(java.lang.Integer.parseInt(returnLen.getText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8861/buggy-version/src.main.java.com.hu.tran.xcomm.core.PackMapper.java", "BodyUseAPI": ["org.dom4j.Element.getText()", "java.lang.Integer.parseInt(returnLen.getText())", "com.hu.tran.xcomm.common.LengthInfo.setReturnLen(int)"], "Fixed commit": "e4de5186e5e71db8865ab47e179c89b35a8e6627", "Url": "https://api.github.com/repos/huPATHotian9527/xcomm", "Date": "2018-06-28T02:49:48Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.mike.mp3player.client.PermissionsProcessor.getPermissionFromRequestCode(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != permission) { if (permission.equals(android.Manifest.permission.WRITE_EXTERNAL_STORAGE)) { if (((grantResults.length) == 1) && ((grantResults[0]) == (android.content.pm.PackageManager.PERMISSION_GRANTED))) { ((com.example.mike.mp3player.client.MainActivity) (parentActivity)).buildMediaLibrary(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7786/buggy-version/app.src.main.java.com.example.mike.mp3player.client.PermissionsProcessor.java", "BodyUseAPI": ["java.lang.String.equals(android.Manifest.permission.WRITE_EXTERNAL_STORAGE)"], "Fixed commit": "040f19a4f20a54d208155612203e9fa0555d822c", "Url": "https://api.github.com/repos/goldy1992/Mp3Player", "Date": "2018-10-16T17:57:58Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isPositioned)) { set_Motors_Power_timed((-0.15), (-0.15), (-0.15), (-0.15), 400); isPositioned = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7218/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.AutoOPs.Auto_Red_Left.java", "BodyUseAPI": [], "Fixed commit": "8798b8ff92a1f61fcf110383abae6bc077595cfe", "Url": "https://api.github.com/repos/vhundef/KTM_FTC-2017-2018", "Date": "2018-03-22T09:11:30Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scores.containsKey(player.getPlayerId())) { teamScore = teamScore + (scores.get(player.getPlayerId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8849/buggy-version/src.main.java.net.dflmngr.handlers.ScoresCalculatorHandler.java", "BodyUseAPI": ["net.dflmngr.model.entity.DflSelectedPlayer.getPlayerId()", "java.util.Map<java.lang.Integer, java.lang.Integer>.get(player.getPlayerId())"], "Fixed commit": "760f19c4400e273896aad601f65420b5ce9a8af3", "Url": "https://api.github.com/repos/kwlockwo/dfl-manager", "Date": "2018-03-23T08:56:14Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.dflmngr.model.service.DflPlayerScoresService.get(net.dflmngr.model.entity.keys.DflPlayerScoresPK)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (playerScore != null) { scores.put(selectedPlayer.getPlayerId(), playerScore.getScore()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8849/buggy-version/src.main.java.net.dflmngr.handlers.ScoresCalculatorHandler.java", "BodyUseAPI": ["net.dflmngr.model.entity.DflPlayerScores.getScore()", "java.util.Map<java.lang.Integer, java.lang.Integer>.put(selectedPlayer.getPlayerId(),playerScore.getScore())"], "Fixed commit": "760f19c4400e273896aad601f65420b5ce9a8af3", "Url": "https://api.github.com/repos/kwlockwo/dfl-manager", "Date": "2018-03-23T08:56:14Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentOS.contains(\"windows\")) { classpath = classpath.replaceAll(\"file:/\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/139/buggy-version/src.main.java.FinalProject.DAL.AlgorithmLoader.java", "BodyUseAPI": [], "Fixed commit": "914ee10429cd4f94476d7d5067f07cf562f1b2fb", "Url": "https://api.github.com/repos/miamiHits/FinalProject", "Date": "2018-06-11T09:14:07Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (block < 3) row = 0; else if (block < 6) row = 1; else if (block < 9) row = 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3329/buggy-version/java.maksim_huretski.myapplication.Executor.java", "BodyUseAPI": [], "Fixed commit": "5d6eef22551fceeb69c71d9eecdf4db233961101", "Url": "https://api.github.com/repos/mhuretski/SudokuMobileApp", "Date": "2018-08-15T14:16:28Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.usernameBox.textProperty().get().isEmpty()) || (this.passwordBox.textProperty().get().isEmpty())) { this.showErrorMessage(\"Please have correct input\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6624/buggy-version/BudgetApp.src.budget.codebehinds.LoadModalController.java", "BodyUseAPI": [], "Fixed commit": "f7c1fd99e26a42fed818370ab251544cd832661a", "Url": "https://api.github.com/repos/Sharkhon/SE2-Team1", "Date": "2018-04-18T02:36:39Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mGoogleApiClient.isConnected()) { if (currentPermission == (android.content.pm.PackageManager.PERMISSION_GRANTED)) { LocationServices.FusedLocationApi.requestLocationUpdates(mGoogleApiClient, mLocationRequest, this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7050/buggy-version/app.src.main.java.org.espmobile.esp_mobile.MapEnabledCompatActivity.java", "BodyUseAPI": ["LocationServices.FusedLocationApi.requestLocationUpdates(com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.location.LocationRequest,org.espmobile.esp_mobile.MapEnabledCompatActivity)"], "Fixed commit": "44f2805828b0a9603b858c7bd3255f9b36539168", "Url": "https://api.github.com/repos/justinshapiro/esp-android", "Date": "2018-04-30T00:02:21Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTexIcon) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9082/buggy-version/library.src.main.java.com.hyena.coretext.blocks.CYLatexBlock.java", "BodyUseAPI": [], "Fixed commit": "99432ce5a08ba3b4bf34c2d41049b614a40465c6", "Url": "https://api.github.com/repos/sunyangyang/AndroidCoreText", "Date": "2018-03-02T02:21:20Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.northwestern.cbits.purple_robot_manager.activities.PermissionsActivity.allPermissions(edu.northwestern.cbits.purple_robot_manager.activities.StartActivity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (allPermissions.contains(permission)) { if ((android.support.v4.content.ContextCompat.checkSelfPermission(this, permission)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { hasRequired = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9424/buggy-version/src.edu.northwestern.cbits.purple_robot_manager.activities.StartActivity.java", "BodyUseAPI": ["android.support.v4.content.ContextCompat.checkSelfPermission(edu.northwestern.cbits.purple_robot_manager.activities.StartActivity,java.lang.String)"], "Fixed commit": "7ce49457fa99c38e3ec7399efc0db1f5d8343224", "Url": "https://api.github.com/repos/audaciouscode/Purple-Robot-Android", "Date": "2018-07-03T01:16:31Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.northwestern.cbits.purple_robot_manager.activities.PermissionsActivity.allPermissions(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (allPermissions.contains(permission)) { if ((android.support.v4.content.ContextCompat.checkSelfPermission(context, permission)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { missing = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9424/buggy-version/src.edu.northwestern.cbits.purple_robot_manager.logging.PermissionsCheck.java", "BodyUseAPI": ["android.support.v4.content.ContextCompat.checkSelfPermission(android.content.Context,java.lang.String)"], "Fixed commit": "7ce49457fa99c38e3ec7399efc0db1f5d8343224", "Url": "https://api.github.com/repos/audaciouscode/Purple-Robot-Android", "Date": "2018-07-03T01:16:31Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uk.gov.hmcts.sscs.service.AirLookupService.LOG.isDebugEnabled()) { uk.gov.hmcts.sscs.service.AirLookupService.LOG.debug(java.lang.String.format(\"Post code: {0} Regional office: {1}\", postcodeCell.getRichStringCellValue().getString().toLowerCase().trim(), adminGroupCell.getRichStringCellValue().getString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6183/buggy-version/src.main.java.uk.gov.hmcts.sscs.service.AirLookupService.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "292b6e81cfdbe1ba0b6ea1e2e9a9e5866974fc93", "Url": "https://api.github.com/repos/hmcts/sscs-tribunals-case-api", "Date": "2018-09-25T12:41:28Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uk.gov.hmcts.sscs.service.AirLookupService.LOG.isDebugEnabled()) { uk.gov.hmcts.sscs.service.AirLookupService.LOG.debug(java.lang.String.format(\"Venue map has {0} venue ids\", lookupAirVenueNameByPostCode.keySet().size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6183/buggy-version/src.main.java.uk.gov.hmcts.sscs.service.AirLookupService.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "292b6e81cfdbe1ba0b6ea1e2e9a9e5866974fc93", "Url": "https://api.github.com/repos/hmcts/sscs-tribunals-case-api", "Date": "2018-09-25T12:41:28Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uk.gov.hmcts.sscs.service.AirLookupService.LOG.isDebugEnabled()) { uk.gov.hmcts.sscs.service.AirLookupService.LOG.debug(\"Successfully loaded lookup data for postcode endpoint\"); uk.gov.hmcts.sscs.service.AirLookupService.LOG.debug(java.lang.String.format(\"Regional centre data has {0} post codes\", lookupRegionalCentreByPostCode.keySet().size())); uk.gov.hmcts.sscs.service.AirLookupService.LOG.debug(java.lang.String.format(\"Air Venue data has {0} post codes\", lookupAirVenueNameByPostCode.keySet().size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6183/buggy-version/src.main.java.uk.gov.hmcts.sscs.service.AirLookupService.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)", "org.slf4j.Logger.debug(java.lang.String)", "org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "292b6e81cfdbe1ba0b6ea1e2e9a9e5866974fc93", "Url": "https://api.github.com/repos/hmcts/sscs-tribunals-case-api", "Date": "2018-09-25T12:41:28Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((dn == null) || (dn == \"\")) { throw new java.io.IOException(\"Distinguished Name from JWT Payload is empty or blank.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2262/buggy-version/src.main.java.org.venice.beachfront.bfapi.auth.jwt.JWTAuthProvider.java", "BodyUseAPI": [], "Fixed commit": "c783de808df6f645f3175c71847f2655f37ce943", "Url": "https://api.github.com/repos/venicegeo/bf-api", "Date": "2018-06-20T13:28:49Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.JarURLConnection.getEntryName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(jarConnectionEntryName.endsWith(\"/\"))) { jarConnectionEntryName += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7631/buggy-version/src.main.java.net.sourceforge.tess4j.util.LoadLibs.java", "BodyUseAPI": [], "Fixed commit": "18d7cac41773aabc0885b8f7656b64bd54907fe5", "Url": "https://api.github.com/repos/nguyenq/tess4j", "Date": "2018-05-02T20:41:09Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (absoluteUris.isEmpty()) { org.opencms.ui.client.CmsWidgetSetEntryPoint.callNativeFunction(callback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2261/buggy-version/src-gwt.org.opencms.ui.client.CmsWidgetSetEntryPoint.java", "BodyUseAPI": [], "Fixed commit": "07de3ca6866f8ea9dbb131a49e5b6fe5baa36953", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2018-02-26T10:37:33Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gnuhpc.bigdata.model.JMXConfiguration.getExclude()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (exclude == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4160/buggy-version/src.main.java.org.gnuhpc.bigdata.model.JMXComplexAttribute.java", "BodyUseAPI": [], "Fixed commit": "4dd6536ad02bc2c7d977fb9bb7140456bbd607af", "Url": "https://api.github.com/repos/tinawenqiao/Kafka-zk-restapi", "Date": "2018-10-18T05:54:03Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (swipeRefreshLayout.isRefreshing()) { swipeRefreshLayout.setRefreshing(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3852/buggy-version/app.src.main.java.tweet.com.mytweet.fragments.ProfileFragment.java", "BodyUseAPI": ["android.support.v4.widget.SwipeRefreshLayout.setRefreshing(boolean)"], "Fixed commit": "ff9dd7324633c417735b243a185760cb5d8d62bc", "Url": "https://api.github.com/repos/KeelanM90/MyTweet-android", "Date": "2018-01-07T22:29:02Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (swipeRefreshLayout.isRefreshing()) { swipeRefreshLayout.setRefreshing(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3852/buggy-version/app.src.main.java.tweet.com.mytweet.fragments.FollowedTimelineFragment.java", "BodyUseAPI": ["android.support.v4.widget.SwipeRefreshLayout.setRefreshing(boolean)"], "Fixed commit": "ff9dd7324633c417735b243a185760cb5d8d62bc", "Url": "https://api.github.com/repos/KeelanM90/MyTweet-android", "Date": "2018-01-07T22:29:02Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((existingTask) != null) existingTask.setLocation(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3663/buggy-version/app.src.main.java.ca.ualberta.cs.w18t11.whoselineisitanyway.view.CreateModifyTaskActivity.java", "BodyUseAPI": [], "Fixed commit": "7f3161e9158b9adf4da948515fd24e64d53d5644", "Url": "https://api.github.com/repos/CMPUT301W18T11/WhoseLineIsItAnyway", "Date": "2018-04-09T16:30:10Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((urns != null) && (!(urns.isEmpty()))) { java.util.stream.IntStream.range(0, urns.size()).forEach(( index) -> { java.lang.String url = urls.get(index); java.lang.String urn = urns.get(index); urnToUrls.put(urn, java.net.URI.create(url)); urlToUrns.put(java.net.URI.create(url), urn); }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/805/buggy-version/weblab-cross-context.src.main.java.ucles.weblab.common.xc.service.RestCrossContextConverter.java", "BodyUseAPI": [], "Fixed commit": "28dc8ee0c3a772a6e946aaec57533f615ba082c4", "Url": "https://api.github.com/repos/cambridgeweblab/api-schema", "Date": "2016-06-15T19:11:43Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sparktemplate.dataprepare.Dataset<sparktemplate.dataprepare.Row>.columns()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((symbolicalColumnNames.length) + 1) == (ds.columns().length)) { throw new java.lang.RuntimeException((\"Each column is symbolical, cannot use removeStrings: \" + (sparktemplate.dataprepare.DataPrepareClassification.removeStrings))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7180/buggy-version/src.main.java.sparktemplate.dataprepare.DataPrepareClassification.java", "BodyUseAPI": [], "Fixed commit": "858f00af3a97419e2e80185c760dc2797f5f865a", "Url": "https://api.github.com/repos/enexer/SparkProject", "Date": "2018-08-07T01:41:55Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((function.getReturnType().getMode()) == (TypeProtos.DataMode.OPTIONAL)) { allNullable = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6546/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.planner.sql.TypeInferenceUtils.java", "BodyUseAPI": [], "Fixed commit": "7a8b7f8b0a42f28da6fc7b86b61825869a9e3188", "Url": "https://api.github.com/repos/vvysotskyi/drill", "Date": "2018-10-23T15:51:27Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (errorResponse != null) { android.util.Log.d(TAG, (\"getJsonHttpResponseHandler: onFailure: errorResponseJsonString -> \" + (errorResponse.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8415/buggy-version/app.src.main.java.com.kavi.droid.exchange.services.connections.ApiCalls.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,(\"getJsonHttpResponseHandler: onFailure: errorResponseJsonString -> \" + (errorResponse.toString())))", "org.json.JSONObject.toString()"], "Fixed commit": "fac74121b807843ecf5c71d2610f766c36ff4372", "Url": "https://api.github.com/repos/kavi707/Exchange-T", "Date": "2018-01-29T04:33:37Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (retries > 0) { try { java.lang.Thread.sleep(((10 * retries) * 1000)); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/796/buggy-version/src.scratch.kevin.bbp.BBP_Wrapper.java", "BodyUseAPI": ["java.lang.Thread.sleep(int)"], "Fixed commit": "263f1520106a6167a3dbf45fb1502819c2c2b919", "Url": "https://api.github.com/repos/opensha/opensha-dev", "Date": "2018-04-16T04:32:58Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((galleryItemList) == null) { galleryItemList = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9228/buggy-version/app.src.main.java.com.santra.sanchita.iforgot.ui.gallery.GalleryActivity.java", "BodyUseAPI": [], "Fixed commit": "b234d7e1b9a1c88c247dcb5c2f486ef81543d340", "Url": "https://api.github.com/repos/santrasanchita13/IForgot", "Date": "2018-03-26T12:30:43Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((buildingComponents.getCdnaStart()) != null) && (buildingComponents.getCdnaStart().equals(buildingComponents.getCdnaEnd()))) { return buildingComponents.getCdnaStart().toString(); }else { return ((buildingComponents.getCdnaStart().toString()) + \"_\") + (buildingComponents.getCdnaEnd().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9037/buggy-version/cellbase-core.src.main.java.org.opencb.cellbase.core.variant.annotation.hgvs.HgvsDeletionCalculator.java", "BodyUseAPI": ["org.opencb.cellbase.core.variant.annotation.hgvs.BuildingComponents.getCdnaStart()", "buildingComponents.getCdnaStart().toString()", "org.opencb.cellbase.core.variant.annotation.hgvs.BuildingComponents.getCdnaEnd()", "buildingComponents.getCdnaStart().toString()", "buildingComponents.getCdnaEnd().toString()", "org.opencb.cellbase.core.variant.annotation.hgvs.BuildingComponents.getCdnaStart()"], "Fixed commit": "1e228de965c46495331d035dcbc210438b473913", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2018-04-11T14:16:57Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((buildingComponents.getStart()) != (buildingComponents.getEnd())) { allele.append(org.opencb.cellbase.core.variant.annotation.hgvs.UNDERSCORE).append(buildingComponents.getReferenceEnd()).append(buildingComponents.getEnd()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9037/buggy-version/cellbase-core.src.main.java.org.opencb.cellbase.core.variant.annotation.hgvs.HgvsDeletionCalculator.java", "BodyUseAPI": ["allele.append(org.opencb.cellbase.core.variant.annotation.hgvs.UNDERSCORE).append(buildingComponents.getReferenceEnd()).append(buildingComponents.getEnd())", "org.opencb.cellbase.core.variant.annotation.hgvs.BuildingComponents.getReferenceEnd()", "java.lang.StringBuilder.append(buildingComponents.getReferenceEnd())", "org.opencb.cellbase.core.variant.annotation.hgvs.BuildingComponents.getEnd()"], "Fixed commit": "1e228de965c46495331d035dcbc210438b473913", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2018-04-11T14:16:57Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type.isInterface()) && (type.isAnnotationPresent(org.apache.dubbo.common.extension.SPI.class))) { org.apache.dubbo.common.extension.ExtensionLoader<T> loader = org.apache.dubbo.common.extension.ExtensionLoader.getExtensionLoader(type); if (!(loader.getSupportedExtensions().isEmpty())) { return loader.getAdaptiveExtension(); } return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/331/buggy-version/dubbo-config.dubbo-config-spring.src.main.java.org.apache.dubbo.config.spring.extension.SpringExtensionFactory.java", "BodyUseAPI": ["org.apache.dubbo.common.extension.ExtensionLoader.getExtensionLoader(java.lang.Class<T>)"], "Fixed commit": "3014082bc658c009696b7a835377b9d75845afa8", "Url": "https://api.github.com/repos/yunxiyi/incubator-dubbo", "Date": "2018-07-09T09:00:19Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source.current) == '*') state = 7; else if (source.atEOF) { java.lang.System.err.println(\"Comment has to be closed with '*/' before EOF\"); state = 0; }else state = 6;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4977/buggy-version/Project1Java.src.csc426.Scanner.java", "BodyUseAPI": [], "Fixed commit": "b719b843a145a7302128f5d396428395da7a8e8d", "Url": "https://api.github.com/repos/ShutoAraki/YASL-Compiler", "Date": "2018-09-11T18:13:18Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.player.EntityPlayer.getHeldItem(net.minecraft.util.EnumHand)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((state.getValue(com.mrcrayfish.furniture.blocks.BlockBarStool.COLOUR)) != (15 - (heldItem.getItemDamage()))) { worldIn.setBlockState(pos, state.withProperty(com.mrcrayfish.furniture.blocks.BlockBarStool.COLOUR, (15 - (heldItem.getItemDamage())))); heldItem.shrink(1); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/94/buggy-version/src.main.java.com.mrcrayfish.furniture.blocks.BlockBarStool.java", "BodyUseAPI": ["net.minecraft.world.World.setBlockState(net.minecraft.util.math.BlockPos,state.withProperty(com.mrcrayfish.furniture.blocks.BlockBarStool.COLOUR, (15 - (heldItem.getItemDamage()))))", "net.minecraft.item.ItemStack.getItemDamage()", "net.minecraft.block.state.IBlockState.withProperty(net.minecraft.block.properties.PropertyInteger,(15 - (heldItem.getItemDamage())))", "net.minecraft.item.ItemStack.shrink(int)"], "Fixed commit": "82b152d2b7f20a162878d8d08b43a1fbd2b02252", "Url": "https://api.github.com/repos/Ocelot5836/MrCrayfishFurnitureMod", "Date": "2018-03-31T04:07:54Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["processing.event.KeyEvent.getKeyCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (keyCode == 69) { g.getPlayer().rotatePower(true); }else if (keyCode == 81) { g.getPlayer().rotatePower(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7770/buggy-version/src.game.Handlers.KeyHandler.java", "BodyUseAPI": [], "Fixed commit": "fe848660ca1e73e7c7e51f69d84f7c5415476a6c", "Url": "https://api.github.com/repos/acherry125/Worship", "Date": "2018-04-17T00:40:04Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.value) instanceof java.lang.Number) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6912/buggy-version/ParseTree.java", "BodyUseAPI": [], "Fixed commit": "8a0c37b5e959524524b4f89c38b3e9d6a68b1a39", "Url": "https://api.github.com/repos/achalagarwal/Math-Space", "Date": "2018-02-23T16:42:10Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((bytes.length) < (15 + v)) { throw new pacSat.frames.FrameException((\"Not enough bytes for a valid S, I or UI Frame: \" + (bytes.length))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9552/buggy-version/src.pacSat.frames.Ax25Frame.java", "BodyUseAPI": [], "Fixed commit": "ae84e6863244720eca2ce39c7932df6908205a85", "Url": "https://api.github.com/repos/ac2cz/Falcon", "Date": "2018-07-23T23:30:55Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zes.squad.gmh.mapper.ProductAmountMapper.selectByProductAndStore(po.getProductId(),java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (existingProductAmountPo == null) { com.zes.squad.gmh.entity.po.ProductAmountPo productAmountPo = new com.zes.squad.gmh.entity.po.ProductAmountPo(); productAmountPo.setProductId(po.getProductId()); productAmountPo.setAmount(po.getProductAmount()); productAmountPo.setStoreId(storeId); record = productAmountMapper.insert(productAmountPo); ensureConditionSatisfied((record == 1), \"\u4fee\u6539\u4ea7\u54c1\u4f59\u91cf\u5931\u8d25\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4493/buggy-version/gmh-service.src.main.java.com.zes.squad.gmh.service.impl.ProductConvertStockServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "d0db93dbd25fac5be499aed38f8ba79421ec45e6", "Url": "https://api.github.com/repos/ZES-BJTU/gmh", "Date": "2018-04-21T09:26:04Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zes.squad.gmh.mapper.StockAmountMapper.selectByStockAndStore(po.getStockId(),java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (existingStockAmountPo == null) { com.zes.squad.gmh.entity.po.StockAmountPo stockAmountPo = new com.zes.squad.gmh.entity.po.StockAmountPo(); stockAmountPo.setStockId(po.getStockId()); stockAmountPo.setAmount(po.getStockAmount()); stockAmountPo.setStoreId(storeId); record = stockAmountMapper.insert(stockAmountPo); ensureConditionSatisfied((record == 1), \"\u4fee\u6539\u5e93\u5b58\u4f59\u91cf\u5931\u8d25\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4493/buggy-version/gmh-service.src.main.java.com.zes.squad.gmh.service.impl.ProductConvertStockServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "d0db93dbd25fac5be499aed38f8ba79421ec45e6", "Url": "https://api.github.com/repos/ZES-BJTU/gmh", "Date": "2018-04-21T09:26:04Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < (dataOrder.size())) { java.lang.String temp = dataOrder.get(i); firstTenLines.append(temp).append(\"\\t\").append(dataLabels.get(temp)).append(\"\\t\").append(dataPoints.get(temp)).append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6782/buggy-version/FinalProject.DataViLiJ.src.dataProcessors.Data.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "b4aa244bc1cd61e63c54a4d2dfc6e920a7775233", "Url": "https://api.github.com/repos/TanWeixin98/Algorithm-Visualizer", "Date": "2018-04-09T04:43:01Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataPath) != null) { applicationTemplate.getDataComponent().saveData(dataPath); ((ui.AppUI) (applicationTemplate.getUIComponent())).disableSaveButton(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6782/buggy-version/FinalProject.DataViLiJ.src.actions.AppActions.java", "BodyUseAPI": [], "Fixed commit": "b4aa244bc1cd61e63c54a4d2dfc6e920a7775233", "Url": "https://api.github.com/repos/TanWeixin98/Algorithm-Visualizer", "Date": "2018-04-09T04:43:01Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((vilij.components.ConfirmationDialog) (dialog)).getSelectedOption()) == (ConfirmationDialog.Option.YES)) { handleSaveRequest(); }else if ((((vilij.components.ConfirmationDialog) (dialog)).getSelectedOption()) == (ConfirmationDialog.Option.NO)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6782/buggy-version/FinalProject.DataViLiJ.src.actions.AppActions.java", "BodyUseAPI": ["vilij.components.Dialog.getSelectedOption()"], "Fixed commit": "b4aa244bc1cd61e63c54a4d2dfc6e920a7775233", "Url": "https://api.github.com/repos/TanWeixin98/Algorithm-Visualizer", "Date": "2018-04-09T04:43:01Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.ntnu.iot_storytelling_sensor.Configuration.isSensor()) m_context.checkBirdVisibility(bird_visibility);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1824/buggy-version/app.src.main.java.edu.ntnu.iot_storytelling_sensor.Manager.FirebaseManager.java", "BodyUseAPI": [], "Fixed commit": "59f94074fbb04e6daff70892c944c99e981ca1f5", "Url": "https://api.github.com/repos/itsStRaNge/iot_storytelling_frontend", "Date": "2018-10-26T08:51:59Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.intuit.karate.CoverageStructure.noOfBranches) != 0) java.lang.System.out.println(((\"Coverage: \" + ((com.intuit.karate.CoverageStructure.branches.size()) / (com.intuit.karate.CoverageStructure.noOfBranches))) + \"%\\n\")); else java.lang.System.out.println(\"No Branches\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4720/buggy-version/karate-core.src.main.java.com.intuit.karate.CoverageStructure.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "cebd35cc60e849b829ed354a402e1ae426619b4e", "Url": "https://api.github.com/repos/andrewbwogi/karate-DIY-coverage", "Date": "2018-02-25T09:42:49Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(context).getString(context.getString(R.string.key_default_category),java.lang.String)", "com.zjp.translateit.dao.WordbookDao.getCategories()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(categories.contains(defaultCategory))) { categories.add(defaultCategory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6998/buggy-version/app.src.main.java.com.zjp.translateit.view.DictView.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "b0bbcee7febbcb8cbc87064dc774729542cc362c", "Url": "https://api.github.com/repos/zunpiau/TranslateIt", "Date": "2018-01-29T12:00:03Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((strings[0].length()) > 3) { code = ((strings[0].substring(0, 3)) + \".\") + (strings[0].substring(3)); }else { code = strings[0].substring(0, 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5263/buggy-version/src.main.java.mydatachoice.icd.ICD10Service.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "1b7f035fcab208ee87b92090e41e149cd159661d", "Url": "https://api.github.com/repos/hguan6/icdValuesetMapping", "Date": "2018-01-11T01:23:53Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((response.getStatus()) != (Status.OK.getStatusCode())) && ((response.getStatus()) != (Status.ACCEPTED.getStatusCode()))) { throw new java.lang.RuntimeException((\"While executing GET request: \" + (response.readEntity(java.lang.String.class)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4686/buggy-version/src.main.java.net.tirasa.connid.bundles.scimv11.service.SCIMv11Service.java", "BodyUseAPI": ["javax.ws.rs.core.Response.readEntity(java.lang.Class)"], "Fixed commit": "f474ea6b6a4217f08fdfb12bad7f32cc582aa340", "Url": "https://api.github.com/repos/Tirasa/ConnIdSCIMv11Bundle", "Date": "2018-05-15T14:06:45Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.wolfNum) > 0) { while (!allSame) { for (java.lang.Character c : this.table) { if (c instanceof Wolf) { if ((this.currentVictim) == null) { this.currentVictim = ((Wolf) (c)).kill_vote(this.table); this.currentVictim.incrementWolfVote(); }else { if ((this.currentVictim) != (((Wolf) (c)).kill_vote(this.table))) { java.lang.System.out.println(\"The wolves need to agree on one target.\"); java.lang.System.out.println(\"Please discuss and vote again!\"); this.currentVictim.resetWolfVote(); break; } } } } if ((currentVictim) != null) { if ((this.currentVictim.getWolfVotes()) == (this.wolfNum)) { allSame = true; this.currentVictim.resetWolfVote(); }else { this.currentVictim = null; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2338/buggy-version/src.Game.java", "BodyUseAPI": [], "Fixed commit": "d530b4989d1449abba7b4620415ae8a8e6a70823", "Url": "https://api.github.com/repos/HengguangZhou/Werewolf", "Date": "2018-07-25T14:31:41Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentVictim) != null) { if ((this.currentVictim.getWolfVotes()) == (this.wolfNum)) { allSame = true; this.currentVictim.resetWolfVote(); }else { this.currentVictim = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2338/buggy-version/src.Game.java", "BodyUseAPI": [], "Fixed commit": "d530b4989d1449abba7b4620415ae8a8e6a70823", "Url": "https://api.github.com/repos/HengguangZhou/Werewolf", "Date": "2018-07-25T14:31:41Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (app.getQuery().contains(\" \")) throw new dictionary.NotFoundException(\"Cant find\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6759/buggy-version/DictionaryApp.src.gui.SearchButtonListener.java", "BodyUseAPI": [], "Fixed commit": "a0c352151ff7290373eb3e05e77eba992b41ad8f", "Url": "https://api.github.com/repos/mishrasunny174/Dictionary", "Date": "2018-03-25T12:28:07Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.paintme.infrastucture.algorithms.SquareWinningAlgorithm.findWinningMove(char,com.paintme.infrastucture.BoardType,com.paintme.infrastucture.Field,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cellToMarkNum == (-1)) { cellToMarkNum = this.findBlockMove(color, boardType, field, cells); if (cellToMarkNum == (-1)) { java.util.List<java.lang.Integer> freeCells = this.examiner.findFreeCells(cells); cellToMarkNum = freeCells.get(java.util.concurrent.ThreadLocalRandom.current().nextInt(0, ((freeCells.size()) - 1))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7287/buggy-version/src.main.java.com.paintme.infrastucture.algorithms.SquareWinningAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "88fff9ffb1815621b453d0fdddbfda0e3905350c", "Url": "https://api.github.com/repos/NataliaSlobodianiuk/PaintME", "Date": "2018-05-14T15:40:59Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.miachm.SODS.io.OdsWritter.getValueType(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(valueType.equals(\"string\"))) { cell.setAttribute(\"office:value\", (\"\" + v)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4453/buggy-version/src.com.github.miachm.SODS.io.OdsWritter.java", "BodyUseAPI": [], "Fixed commit": "ac7e845bd4dd839eccb6b3338dbd3f6369b0bf2d", "Url": "https://api.github.com/repos/miachm/SODS", "Date": "2018-02-26T19:49:28Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentCycle < (com.wit.moderncomparch.tomasulo.Main.instructions.length)) { if (com.wit.moderncomparch.tomasulo.Main.CheckRegisters(com.wit.moderncomparch.tomasulo.Main.instructions[currentCycle], registerBusyBits)) { com.wit.moderncomparch.tomasulo.Execute.execute(com.wit.moderncomparch.tomasulo.Main.instructions[currentCycle], latency, currentCycle); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4517/buggy-version/src.com.wit.moderncomparch.tomasulo.Main.java", "BodyUseAPI": ["com.wit.moderncomparch.tomasulo.Execute.execute(com.wit.moderncomparch.tomasulo.Main.instructions[currentCycle],int,int)", "com.wit.moderncomparch.tomasulo.Main.CheckRegisters(com.wit.moderncomparch.tomasulo.Main.instructions[currentCycle],java.lang.Boolean[])"], "Fixed commit": "435fd7185abbad04e4c979f4e500c34cd7f42f17", "Url": "https://api.github.com/repos/MattLumm/Tomasulo-s-algorithm", "Date": "2018-04-12T19:00:31Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentCycle < (com.wit.moderncomparch.tomasulo.Main.instructions.length)) { com.wit.moderncomparch.tomasulo.Issue.queueToReservation(com.wit.moderncomparch.tomasulo.Main.instructions[currentCycle]); com.wit.moderncomparch.tomasulo.Main.instructions[currentCycle].setIssue(currentCycle); com.wit.moderncomparch.tomasulo.Main.flipRegisterBusyBit(com.wit.moderncomparch.tomasulo.Main.instructions[currentCycle].getRegs()[0], registerBusyBits); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4517/buggy-version/src.com.wit.moderncomparch.tomasulo.Main.java", "BodyUseAPI": ["com.wit.moderncomparch.tomasulo.Main.flipRegisterBusyBit(com.wit.moderncomparch.tomasulo.Main.instructions[currentCycle].getRegs()[0],java.lang.Boolean[])", "com.wit.moderncomparch.tomasulo.Main.instructions[currentCycle].getRegs()", "com.wit.moderncomparch.tomasulo.Main.instructions[currentCycle].setIssue(int)", "com.wit.moderncomparch.tomasulo.Issue.queueToReservation(com.wit.moderncomparch.tomasulo.Main.instructions[currentCycle])"], "Fixed commit": "435fd7185abbad04e4c979f4e500c34cd7f42f17", "Url": "https://api.github.com/repos/MattLumm/Tomasulo-s-algorithm", "Date": "2018-04-12T19:00:31Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((executingInstruction.getWriteResult()) == 0) { executingInstruction.setWriteResult(currentCycle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4517/buggy-version/src.com.wit.moderncomparch.tomasulo.ExecuteUnit.java", "BodyUseAPI": ["com.wit.moderncomparch.tomasulo.Instruction.setWriteResult(int)"], "Fixed commit": "435fd7185abbad04e4c979f4e500c34cd7f42f17", "Url": "https://api.github.com/repos/MattLumm/Tomasulo-s-algorithm", "Date": "2018-04-12T19:00:31Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["room.getItemManager().getById(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (item.hasBehaviour(ItemBehaviour.TELEPORTER)) { if (!(item.getTile().touches(player.getRoomUser().getTile()))) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4584/buggy-version/Kepler-Server.src.main.java.org.alexdev.kepler.messages.incoming.rooms.items.SETSTUFFDATA.java", "BodyUseAPI": ["item.getTile().touches(player.getRoomUser().getTile())", "org.alexdev.kepler.game.item.Item.getTile()"], "Fixed commit": "dff96e49c3260845eb2b0850eb8c8543594c252c", "Url": "https://api.github.com/repos/emansom/Kepler", "Date": "2018-07-20T11:50:37Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((contactInfoForType.get(j).getNumber().length()) >= 12) { numberContact = contactInfoForType.get(j).getNumber().substring(4, 12); }else { numberContact = contactInfoForType.get(j).getNumber(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3755/buggy-version/app.src.main.java.com.example.marinaangelovska.insights.Service.MessagesService.java", "BodyUseAPI": ["java.util.List<com.example.marinaangelovska.insights.Model.NodeMessage>.get(int)", "contactInfoForType.get(j).getNumber().substring(int,int)", "java.util.List<com.example.marinaangelovska.insights.Model.NodeMessage>.get(int)", "contactInfoForType.get(j).getNumber()", "contactInfoForType.get(j).getNumber()"], "Fixed commit": "217f4aa3d701faaa211adc82882cf6b0059fd899", "Url": "https://api.github.com/repos/marinaangelovska/Insights", "Date": "2018-02-08T16:42:36Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (matcher.find()) { if ((limit > 0) && ((matcher.group(1)) == null)) { sql1 += \"\\nLIMIT \" + limit; } if ((offset > 0) && ((matcher.group(2)) == null)) { sql1 += \"\\nOFFSET \" + offset; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7652/buggy-version/query.src.main.java.org.apache.kylin.query.util.QueryUtil.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "a74cb8a8258d46e2021aacd63c3a6d131b09ede1", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2018-03-13T00:22:10Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((addr) == null) addr = tinyDB.getString(MainActivity.WIFI_ADDRESS); else if (\"\".equals(addr)) addr = \"http://homerouter.cpe\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4690/buggy-version/app.src.main.java.app.ultimatex.wifiroutersignal.SignalNotifyService.java", "BodyUseAPI": [], "Fixed commit": "71308e983f824893a8a7246e3ff33bc4f432ee67", "Url": "https://api.github.com/repos/lakinduakash/WifiRouterSignal", "Date": "2018-06-03T16:58:27Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.size) > (1 << 16)) { throw new org.roaringbitmap.InvalidRoaringFormat(\"Size too large\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1110/buggy-version/roaringbitmap.src.main.java.org.roaringbitmap.buffer.MutableRoaringArray.java", "BodyUseAPI": [], "Fixed commit": "50515ad921d2c2c2232d7b8a5ffff7af36218696", "Url": "https://api.github.com/repos/ppiotrow/RoaringBitmap", "Date": "2018-04-09T17:41:33Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.size) > (1 << 16)) { throw new org.roaringbitmap.InvalidRoaringFormat(\"Size too large\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1110/buggy-version/roaringbitmap.src.main.java.org.roaringbitmap.RoaringArray.java", "BodyUseAPI": [], "Fixed commit": "50515ad921d2c2c2232d7b8a5ffff7af36218696", "Url": "https://api.github.com/repos/ppiotrow/RoaringBitmap", "Date": "2018-04-09T17:41:33Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (roomType == null) { android.widget.Toast.makeText(getContext(), \"Rum ikke fundet! Pr\u00f8v igen\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6034/buggy-version/app.src.main.java.dk.lundudvikling.joinedlists.Fragments.JoinRoomFragment.java", "BodyUseAPI": [], "Fixed commit": "6c0d6b07ad7c606fa2c2b8e370df93a4c5bc14e4", "Url": "https://api.github.com/repos/MartinALund/JoinedLists", "Date": "2018-01-18T18:13:56Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (AdventureMode.GameState.MenuMode)) { playerMovement.keyReleased(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8781/buggy-version/src.AdventureMode.java", "BodyUseAPI": [], "Fixed commit": "7d7c24ce516e3fbf8736499d4f8e5d6ad8a6d102", "Url": "https://api.github.com/repos/Bupton64/GroupAssignment", "Date": "2018-01-09T21:36:47Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openforis.collect.earth.app.service.UpdateIniUtils.getVersionAvailableOnline()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(newestVersionOnline)) { java.lang.Object[] possibleValues = new java.lang.Object[]{ remindLater, doItNow, doNotBother }; int chosenOption = javax.swing.JOptionPane.showOptionDialog(null, org.openforis.collect.earth.app.view.Messages.getString(\"EarthApp.57\"), (((org.openforis.collect.earth.app.view.Messages.getString(\"EarthApp.58\")) + (org.openforis.collect.earth.app.view.Messages.getString(\"EarthApp.6\"))) + (updateIniUtils.convertToDate(newestVersionOnline))), javax.swing.JOptionPane.DEFAULT_OPTION, javax.swing.JOptionPane.INFORMATION_MESSAGE, null, possibleValues, possibleValues[0]); if (chosenOption != (javax.swing.JOptionPane.CLOSED_OPTION)) { if (possibleValues[chosenOption].equals(doItNow)) { org.openforis.collect.earth.app.view.CheckForUpdatesListener checkForUpdatesListener = new org.openforis.collect.earth.app.view.CheckForUpdatesListener(); checkForUpdatesListener.actionPerformed(null); }else if (possibleValues[chosenOption].equals(doNotBother)) { org.openforis.collect.earth.app.desktop.EarthApp.getLocalProperties().setValue(EarthProperty.LAST_IGNORED_UPDATE, newestVersionOnline); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1360/buggy-version/collect-earth.collect-earth-app.src.main.java.org.openforis.collect.earth.app.desktop.EarthApp.java", "BodyUseAPI": ["org.openforis.collect.earth.app.service.LocalPropertiesService.setValue(EarthProperty.LAST_IGNORED_UPDATE,java.lang.String)", "javax.swing.JOptionPane.showOptionDialog(<nulltype>,org.openforis.collect.earth.app.view.Messages.getString(\"EarthApp.57\"),(((org.openforis.collect.earth.app.view.Messages.getString(\"EarthApp.58\")) + (org.openforis.collect.earth.app.view.Messages.getString(\"EarthApp.6\"))) + (updateIniUtils.convertToDate(newestVersionOnline))),int,int,<nulltype>,java.lang.Object[],java.lang.Object)", "org.openforis.collect.earth.app.service.UpdateIniUtils.convertToDate(java.lang.String)"], "Fixed commit": "a96420a613f7e52478a932b0f3701f9d39670cdf", "Url": "https://api.github.com/repos/openforis/collect-earth", "Date": "2018-05-23T19:52:59Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.conf.HiveConf.getVar(org.apache.hadoop.conf.Configuration,ConfVars.HIVE_PROTO_EVENTS_BASE_PATH)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(hiveEventsDir)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2807/buggy-version/metastore.src.java.org.apache.hadoop.hive.metastore.HiveProtoEventsCleanerTask.java", "BodyUseAPI": [], "Fixed commit": "d77bfbcf6972e8b6a5aba71e0269de86720ccb1e", "Url": "https://api.github.com/repos/sankarh/hive", "Date": "2018-07-02T12:36:52Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eventsBasePaths.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2807/buggy-version/metastore.src.java.org.apache.hadoop.hive.metastore.HiveProtoEventsCleanerTask.java", "BodyUseAPI": [], "Fixed commit": "d77bfbcf6972e8b6a5aba71e0269de86720ccb1e", "Url": "https://api.github.com/repos/sankarh/hive", "Date": "2018-07-02T12:36:52Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x) < 10) { first = \"0\" + (x); }else { first = \"\" + (x); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9791/buggy-version/src.Model.Position.java", "BodyUseAPI": [], "Fixed commit": "983e932d84d1f5bc4d9e45b1d4a6eeff411b763c", "Url": "https://api.github.com/repos/JacobEkedahl/Snake", "Date": "2018-06-14T00:44:19Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((y) < 10) { second = \"0\" + (y); }else { second = \"\" + (y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9791/buggy-version/src.Model.Position.java", "BodyUseAPI": [], "Fixed commit": "983e932d84d1f5bc4d9e45b1d4a6eeff411b763c", "Url": "https://api.github.com/repos/JacobEkedahl/Snake", "Date": "2018-06-14T00:44:19Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((numb != null) && ((numb.length) > 1)) { if (((methodName.trim().equals(\"min_length\")) || (methodName.trim().equals(\"max_length\"))) || (methodName.trim().equals(\"between_length\"))) { if (methodName.trim().equals(\"min_length\")) { numberInBetween(viewtyp, i, java.lang.Integer.parseInt(numb[1]), 0); } if (methodName.trim().equals(\"max_length\")) { numberInBetween(viewtyp, i, 0, java.lang.Integer.parseInt(numb[1])); } if (methodName.trim().equals(\"between_length\")) { java.lang.String[] betnum = numb[1].split(\"\\\\,\"); numberInBetween(viewtyp, i, java.lang.Integer.parseInt(betnum[0]), java.lang.Integer.parseInt(betnum[1])); } } if (methodName.trim().equals(\"comparePassword\")) { comparePassword(viewtyp, i, numb[1]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6813/buggy-version/app.src.main.java.com.emxcel.validator.FormValidationUtils.java", "BodyUseAPI": ["com.emxcel.validator.FormValidationUtils.numberInBetween(android.view.View,int,int,int)", "java.lang.Integer.parseInt(java.lang.String)", "com.emxcel.validator.FormValidationUtils.numberInBetween(android.view.View,int,int,int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.split(java.lang.String)", "com.emxcel.validator.FormValidationUtils.comparePassword(android.view.View,int,java.lang.String)"], "Fixed commit": "456c938788f2f9c7bdf93cf59a8b7a62f588075c", "Url": "https://api.github.com/repos/abhijitsojitra/Validator", "Date": "2018-02-05T07:06:28Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (logosEnabled) { logoWatermarkService.addLogosToImage(shot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1737/buggy-version/src.main.java.org.openbooth.service.imageprocessing.impl.ImageProcessorImpl.java", "BodyUseAPI": [], "Fixed commit": "5050ed18deda8ef7bea3fc6f7b26ca8eec446a5e", "Url": "https://api.github.com/repos/wurmf/OpenBooth", "Date": "2018-05-17T16:09:57Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Optional<seedu.superta.model.student.Student>.get()", "java.util.Optional<seedu.superta.model.tutorialgroup.TutorialGroup>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(tutorialGroup.getStudents().contains(student))) { throw new seedu.superta.model.student.exceptions.StudentNotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1338/buggy-version/src.main.java.seedu.superta.model.ModelManager.java", "BodyUseAPI": [], "Fixed commit": "350c96a0dcbdb1065b85f25f80a15266549e6781", "Url": "https://api.github.com/repos/Caephler/main", "Date": "2018-10-31T07:39:38Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (image != null) { com.example.cassandrakane.goalz.utils.Util.setImage(image, mContext.getResources(), profileView, R.color.orange); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2132/buggy-version/app.src.main.java.com.example.cassandrakane.goalz.adapters.ChatAdapter.java", "BodyUseAPI": ["com.example.cassandrakane.goalz.utils.Util.setImage(com.parse.ParseFile,mContext.getResources(),android.widget.ImageView,R.color.orange)"], "Fixed commit": "1185617c5b3b3e14a25e42e7c9eba6e19468f0b5", "Url": "https://api.github.com/repos/FBX-2018-TeamTBD/goals", "Date": "2018-08-06T21:13:42Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(ingress.data.gdpr.parsers.impl.SEPARATOR_TAB)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tmp.length) < 10) { line = (line + \"\\n\") + (lines.get((++i))); ingress.data.gdpr.parsers.impl.MissionsParser.LOGGER.warn(\"Line {} and {} now merged to {}\", (i - 1), i, line); tmp = line.split(ingress.data.gdpr.parsers.impl.SEPARATOR_TAB); if ((tmp.length) < 10) { return ingress.data.gdpr.models.reports.ReportDetails.error(java.lang.String.format(\"Expecting a row of mission version at line %d with at least %d columns in it, but got only %d columns: %s\", i, 10, tmp.length, line)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2774/buggy-version/parsers.src.main.java.ingress.data.gdpr.parsers.impl.MissionsParser.java", "BodyUseAPI": [], "Fixed commit": "d776a18c9e79d7d1eeb23b28528024f2c4752e57", "Url": "https://api.github.com/repos/ingresspub/ingress.data.gdpr", "Date": "2018-10-11T06:17:40Z"},
{"Line": "=>860", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (seq.startsWith(\".\")) { return seq.substring(1); }else if (seq.endsWith(\".\")) { return seq.substring(0, ((seq.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1674/buggy-version/src.main.java.edu.scripps.yates.utilities.fasta.FastaParser.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.length()", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "ea5dd34380b438ba52c5250f4f2e1e41c0fa8143", "Url": "https://api.github.com/repos/proteomicsyates/utilities", "Date": "2018-05-26T02:44:18Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getInstructorType()) != null) { return this.getInstructorType().getDescription(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9617/buggy-version/src.main.java.edu.ucdavis.dss.ipa.entities.InstructorTypeCost.java", "BodyUseAPI": [], "Fixed commit": "e6b717aa4aae68869f367c9403b165b1a1d50cc6", "Url": "https://api.github.com/repos/ucdavis/ipa-web", "Date": "2018-03-22T18:13:55Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.core.ObjectCodec.readTree(com.fasterxml.jackson.core.JsonParser)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (node.has(\"budgetId\")) { edu.ucdavis.dss.ipa.entities.Budget budget = new edu.ucdavis.dss.ipa.entities.Budget(); budget.setId(node.get(\"budgetId\").longValue()); instructorTypeCost.setBudget(budget); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9617/buggy-version/src.main.java.edu.ucdavis.dss.ipa.api.deserializers.InstructorTypeCostDeserializer.java", "BodyUseAPI": ["edu.ucdavis.dss.ipa.entities.Budget.setId(node.get(\"budgetId\").longValue())", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "node.get(\"budgetId\").longValue()"], "Fixed commit": "e6b717aa4aae68869f367c9403b165b1a1d50cc6", "Url": "https://api.github.com/repos/ucdavis/ipa-web", "Date": "2018-03-22T18:13:55Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deviation > amount) { throw new java.lang.IllegalArgumentException(\"deviation is larger than Max power. please try again\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1075/buggy-version/java-template.Consumer.src.vgu.consumer.ConsumerFactory.java", "BodyUseAPI": [], "Fixed commit": "9538f3deef19f332e499a194056ed19ecbe8457c", "Url": "https://api.github.com/repos/deadmanproqn/VGU-Local-Power-Simulation", "Date": "2018-10-13T04:07:19Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.mobile.device.DeviceResolver.resolveDevice(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((device.isMobile()) || (device.isTablet())) { url = (getRootPath(request)) + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4205/buggy-version/dhis-2.dhis-web.dhis-web-commons.src.main.java.org.hisp.dhis.security.MappedRedirectStrategy.java", "BodyUseAPI": [], "Fixed commit": "e8f41243401ad4742cf7548d91da8721a486c29e", "Url": "https://api.github.com/repos/vietnguyen/dhis2-core", "Date": "2018-08-23T12:49:15Z"},
{"Line": "=>575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needsPrepare) { return false; }else { return (1 == attempt) && (((586 == (e.getErrorCode())) || (8179 == (e.getErrorCode()))) || (99586 == (e.getErrorCode()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/636/buggy-version/src.main.java.com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.java", "BodyUseAPI": [], "Fixed commit": "dbefa1cde4568985cfc819c14c50110a3f4276af", "Url": "https://api.github.com/repos/AfsanehR/mssql-jdbc", "Date": "2018-01-31T23:28:36Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(res.isEmpty())) return res;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6923/buggy-version/src.ast.MethodCallNode.java", "BodyUseAPI": [], "Fixed commit": "14f4e4771565c6693b381bf3b0ec29dc81298ce9", "Url": "https://api.github.com/repos/giusdp/FOOLC", "Date": "2018-10-29T09:25:49Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCancel) == null) { alertButtonListView.addFooterView(itemView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7236/buggy-version/app.src.main.java.com.example.alan.hundred.alert.AlertView.java", "BodyUseAPI": [], "Fixed commit": "18eb9864849ab62ee1cc6b758537d31dad618e76", "Url": "https://api.github.com/repos/foxalan/Hundred", "Date": "2018-01-11T07:42:20Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.InputStream.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (currentByte != (-1)) { outputStream.write(currentByte); }else { eof = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6477/buggy-version/src.com.diana.parser.FileMover.java", "BodyUseAPI": ["java.io.OutputStream.write(byte)"], "Fixed commit": "be896564ebd07f51952fa57d06c2ba7383e9c1d5", "Url": "https://api.github.com/repos/SergeyRusetsky/files_mover", "Date": "2018-07-18T06:59:38Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fracLength > 1) { java.lang.String padding = (fracLength == 3) ? \"0\" : \"00\"; timeString = ((timeString.substring(0, index)) + padding) + (timeString.substring(index, timeString.length())); }else { throw new io.github.x0b.rfc3339parser.Rfc3339Exception(\"Invalid delimiter\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/722/buggy-version/rfc3339parser.src.main.java.io.github.x0b.rfc3339parser.Rfc3339.java", "BodyUseAPI": [], "Fixed commit": "49315e5fe14f45a8240708cf5214c243ae3451a9", "Url": "https://api.github.com/repos/x0b/rfc3339parser", "Date": "2018-06-06T05:59:37Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arrayInitialization) { string = processArrayInitialization(); }else if (isShorthand()) { string = processShorthand(); }else if (isCommaStatement()) { java.lang.StringBuilder result = new java.lang.StringBuilder(); java.lang.String[] words = line.split(\"\\\\s+\"); for (java.lang.String word : words) { if (isDataType(word)) result.append(word.toUpperCase()).append(\" \"); else if (word.equals(\",\")) result.append(\"and \"); else result.append(word).append(\" \"); } string = result.toString(); }else { string = processStatement(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6064/buggy-version/src.Line.java", "BodyUseAPI": [], "Fixed commit": "af3a44ab2a02bdf738e5927631d24c49d64c6585", "Url": "https://api.github.com/repos/tuxdux/algorithm-writer", "Date": "2018-10-22T20:45:50Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!(line.contains(\"=\"))) && (line.contains(\"}\"))) { line = line.replace(\"}\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6064/buggy-version/src.Line.java", "BodyUseAPI": [], "Fixed commit": "af3a44ab2a02bdf738e5927631d24c49d64c6585", "Url": "https://api.github.com/repos/tuxdux/algorithm-writer", "Date": "2018-10-22T20:45:50Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getCurrentTeam()) != null) com.bil496.studifyapp.util.Status.whenEnterTeam(this, user.getCurrentTeam().getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7621/buggy-version/app.src.main.java.com.bil496.studifyapp.LoginActivity.java", "BodyUseAPI": ["user.getCurrentTeam().getId()", "com.bil496.studifyapp.util.Status.whenEnterTeam(com.bil496.studifyapp.LoginActivity,user.getCurrentTeam().getId())", "com.bil496.studifyapp.model.User.getCurrentTeam()"], "Fixed commit": "832213c8a2f18c5adc0b5207069a1a92a5903663", "Url": "https://api.github.com/repos/Bil496/StudifyAndroidClient", "Date": "2018-03-25T16:10:18Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getCurrentTopic()) != null) com.bil496.studifyapp.util.Status.whenEnterTopic(getBaseContext(), user.getCurrentTopic().getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7621/buggy-version/app.src.main.java.com.bil496.studifyapp.LoginActivity.java", "BodyUseAPI": ["user.getCurrentTopic().getId()", "com.bil496.studifyapp.model.User.getCurrentTopic()", "com.bil496.studifyapp.util.Status.whenEnterTopic(getBaseContext(),user.getCurrentTopic().getId())"], "Fixed commit": "832213c8a2f18c5adc0b5207069a1a92a5903663", "Url": "https://api.github.com/repos/Bil496/StudifyAndroidClient", "Date": "2018-03-25T16:10:18Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Gdx.input.isKeyJustPressed(Input.Keys.F5)) { dungeonGenerator.make_map(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5663/buggy-version/core.src.com.sad.function.rogue.screens.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "3330fb6a0a408c1da72e1e01cf7bf2267c377925", "Url": "https://api.github.com/repos/Dragonegger2/Roguelike2", "Date": "2018-01-19T13:21:32Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (localVersion.contains(\"-\")) { java.lang.String[] lvSplit = localVersion.split(\"-\"); localVersion = lvSplit[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/31/buggy-version/src.main.java.moe.plushie.dakimakuramod.common.UpdateCheck.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "acb10d5fafa66ac4cdd0bc3da7fc7b2ddaa28bfa", "Url": "https://api.github.com/repos/RiskyKen/DakimakuraMod", "Date": "2018-02-24T12:47:50Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (args[i].sameAtom(d)) { return d; }else { mil.MILProgram.report((((\"replacing reference to top level \" + d) + \" with \") + (args[i]))); return args[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2689/buggy-version/src.mil.Return.java", "BodyUseAPI": ["mil.MILProgram.report((((\"replacing reference to top level \" + d) + \" with \") + (args[i])))"], "Fixed commit": "e59a36930fe85a66e9a3e429987875753ef31810", "Url": "https://api.github.com/repos/EmiliaPaz/mil-tools", "Date": "2018-10-22T17:42:01Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == (ts.head)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2689/buggy-version/src.mil.TopLevel.java", "BodyUseAPI": [], "Fixed commit": "e59a36930fe85a66e9a3e429987875753ef31810", "Url": "https://api.github.com/repos/EmiliaPaz/mil-tools", "Date": "2018-10-22T17:42:01Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["exnihilocreatio.tiles.TileSieve.getBlockType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(blocktype instanceof exnihilocreatio.blocks.BlockSieve)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2205/buggy-version/src.main.java.exnihilocreatio.client.renderers.RenderSieve.java", "BodyUseAPI": [], "Fixed commit": "a2e15abfe8d27027f926ee46db785e21b2440bf8", "Url": "https://api.github.com/repos/BloodyMods/ExNihiloCreatio", "Date": "2018-03-18T13:34:09Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentItem.getCategory()) != null) { newItemCategory.setSelection(com.track.brachio.donationtracker.model.Item.findItemTypePosition(currentItem.getCategory())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7901/buggy-version/app.src.main.java.com.track.brachio.donationtracker.EditItemActivity.java", "BodyUseAPI": ["com.track.brachio.donationtracker.model.Item.findItemTypePosition(currentItem.getCategory())", "com.track.brachio.donationtracker.model.Item.getCategory()", "android.widget.Spinner.setSelection(com.track.brachio.donationtracker.model.Item.findItemTypePosition(currentItem.getCategory()))"], "Fixed commit": "6cc2a989526643bfd2363dc466c8bef8b4d86606", "Url": "https://api.github.com/repos/rtierney123/DonationTrackerGit", "Date": "2018-10-22T21:08:20Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (implType.isAssignableFrom(interfaceType)) { java.lang.Class<?> type = com.lgsim.engine.graphEditor.util.ImplementationUtil.table.get(interfaceType); if (type == null) { com.lgsim.engine.graphEditor.util.ImplementationUtil.table.put(interfaceType, implType); }else { com.lgsim.engine.graphEditor.util.ImplementationUtil.log.error(\"already register {} to {}\", interfaceType, type); } }else { com.lgsim.engine.graphEditor.util.ImplementationUtil.log.error(\"not capable types {} {}\", interfaceType.getCanonicalName(), implType.getCanonicalName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4302/buggy-version/util.src.main.java.com.lgsim.engine.graphEditor.util.ImplementationUtil.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,java.lang.Class<?>,java.lang.Class<?>)", "java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)", "java.lang.Class<?>.getCanonicalName()", "java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Class<?>,java.lang.Class<?>)", "java.lang.Class<?>.getCanonicalName()", "org.slf4j.Logger.error(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "e1f0af9a48db5f4c51e6c6c8a7f02540b0150065", "Url": "https://api.github.com/repos/lgsimu/graph-editor", "Date": "2018-04-26T06:34:18Z"},
{"Line": "=>959", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scale) == 0) { scale = getPageScale(w, h); setInitialScale(scale); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3326/buggy-version/app.src.main.java.org.sil.bloom.reader.ReaderActivity.java", "BodyUseAPI": [], "Fixed commit": "d6b71f9d4e40d9488251175a8db08dcb4c48d2b7", "Url": "https://api.github.com/repos/BloomBooks/BloomReader", "Date": "2018-04-20T13:42:04Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ninos.firebase.Database.getUserId().equals(userId)) { requestOptions = new com.bumptech.glide.request.RequestOptions().placeholder(placeHolderId).error(placeHolderId).diskCacheStrategy(DiskCacheStrategy.NONE).skipMemoryCache(true); }else { requestOptions = new com.bumptech.glide.request.RequestOptions().placeholder(placeHolderId).error(placeHolderId).diskCacheStrategy(DiskCacheStrategy.AUTOMATIC); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/381/buggy-version/app.src.main.java.com.ninos.activities.ProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "e8f630928e4c3e1e660d1bb825a75dde96eb8978", "Url": "https://api.github.com/repos/ninosapp/Ninos", "Date": "2018-01-25T08:34:31Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (resource != null) { android.support.v7.graphics.Palette.from(resource).generate(new android.support.v7.graphics.Palette.PaletteAsyncListener() { @java.lang.Override public void onGenerated(android.support.v7.graphics.Palette palette) { if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { android.view.Window window = getWindow(); window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS); window.setStatusBarColor(palette.getDominantColor(Color.BLACK)); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/381/buggy-version/app.src.main.java.com.ninos.activities.ProfileActivity.java", "BodyUseAPI": ["android.support.v7.graphics.Palette.from(android.graphics.Bitmap)", "android.support.v7.graphics.Palette.from(resource).generate(android.support.v7.graphics.Palette.PaletteAsyncListener)"], "Fixed commit": "e8f630928e4c3e1e660d1bb825a75dde96eb8978", "Url": "https://api.github.com/repos/ninosapp/Ninos", "Date": "2018-01-25T08:34:31Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(edu.umn.cs.spatialHadoop.indexing.MetadataUtil.isContainedPartition(partitionsToAppend, currentPartition))) { partitionsToAppend.add(currentPartition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2943/buggy-version/src.main.java.edu.umn.cs.spatialHadoop.indexing.RTreeInserter.java", "BodyUseAPI": ["java.util.ArrayList<edu.umn.cs.spatialHadoop.indexing.Partition>.add(edu.umn.cs.spatialHadoop.indexing.Partition)"], "Fixed commit": "d3c000a6231817da3066f8b8f353b58f29eaac8c", "Url": "https://api.github.com/repos/tinvukhac/spatialhadoop2", "Date": "2018-02-09T05:10:27Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operand1) == 0.0) { operand1 = value; }else { operand1 *= value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3256/buggy-version/Calculator.app.src.main.java.com.taialexanderjones.calculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "414fe4b7a85192c4d52d52d5d260bd53512bdfbd", "Url": "https://api.github.com/repos/taiJones00/Android", "Date": "2018-01-04T18:41:56Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operand1) == 0.0) { operand1 = value; }else { operand1 %= value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3256/buggy-version/Calculator.app.src.main.java.com.taialexanderjones.calculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "414fe4b7a85192c4d52d52d5d260bd53512bdfbd", "Url": "https://api.github.com/repos/taiJones00/Android", "Date": "2018-01-04T18:41:56Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.ArrayUtils.isEmpty(prompt)) { return new java.lang.String[0]; }else { if (prompt[0].trim().toLowerCase().contains(\"password\")) { return new java.lang.String[]{ password }; }else { return new java.lang.String[]{ otc }; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3499/buggy-version/src.main.java.no.neic.tryggve.TwoStepsAuth.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.contains(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "b6bab92a5b6cb95535aa2b37aaf5b21eff6634f1", "Url": "https://api.github.com/repos/neicnordic/sftpbeamer", "Date": "2018-09-06T08:29:34Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pet instanceof virtualpetamok.OrganCat) { for (virtualpetamok.VirtualPet cat : shelter.values()) { if (cat instanceof virtualpetamok.OrganCat) { ((virtualpetamok.OrganCat) (pet)).clean = ((virtualpetamok.OrganCat) (cat)).clean; ((virtualpetamok.OrganCat) (pet)).waste = ((virtualpetamok.OrganCat) (cat)).waste; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3753/buggy-version/src.main.java.virtualpetamok.VirtualPetShelter.java", "BodyUseAPI": [], "Fixed commit": "8665e1ba8723c3d8a36c009a9682e32f752fad50", "Url": "https://api.github.com/repos/ViVong/virtual-pet-amok", "Date": "2018-09-26T05:12:54Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((int) (c)) == 216) { java.lang.System.out.println(\"****************\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9749/buggy-version/epe.src.main.java.com.softwarelma.epe.p2.encodings.EpeEncodings.java", "BodyUseAPI": [], "Fixed commit": "f2113b577d5da02df52097dabc2fd4eb78010a3c", "Url": "https://api.github.com/repos/softwarelma/epe", "Date": "2018-03-15T17:05:25Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.creativemd.littletiles.common.action.block.LittleActionPlaceStack.loadTe(net.minecraft.entity.player.EntityPlayer,net.minecraft.world.World,net.minecraft.util.math.BlockPos,boolean)", "java.util.HashMap<net.minecraft.util.math.BlockPos, com.creativemd.littletiles.common.tiles.place.PlacePreviews>.get(net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(te.isSpaceForLittleTile(tiles.get(j).box))) { if ((te.getContext()) != contextBefore) te.convertTo(contextBefore); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6615/buggy-version/src.main.java.com.creativemd.littletiles.common.action.block.LittleActionPlaceStack.java", "BodyUseAPI": ["com.creativemd.littletiles.common.tileentity.TileEntityLittleTiles.convertTo(com.creativemd.littletiles.common.utils.grid.LittleGridContext)", "com.creativemd.littletiles.common.tileentity.TileEntityLittleTiles.getContext()"], "Fixed commit": "0cab57007c055a73a9ad2ecfdb4631311f4d5f29", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2018-10-18T14:33:24Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.creativemd.littletiles.common.action.block.LittleActionPlaceStack.loadTe(net.minecraft.entity.player.EntityPlayer,net.minecraft.world.World,net.minecraft.util.math.BlockPos,boolean)", "java.util.HashMap<net.minecraft.util.math.BlockPos, com.creativemd.littletiles.common.tiles.place.PlacePreviews>.get(net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(te.isSpaceForLittleTileStructure(tiles.get(j).box))) { if ((te.getContext()) != contextBefore) te.convertTo(contextBefore); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6615/buggy-version/src.main.java.com.creativemd.littletiles.common.action.block.LittleActionPlaceStack.java", "BodyUseAPI": ["com.creativemd.littletiles.common.tileentity.TileEntityLittleTiles.getContext()", "com.creativemd.littletiles.common.tileentity.TileEntityLittleTiles.convertTo(com.creativemd.littletiles.common.utils.grid.LittleGridContext)"], "Fixed commit": "0cab57007c055a73a9ad2ecfdb4631311f4d5f29", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2018-10-18T14:33:24Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inclIdx > 0) && (sepIndex == (-1))) otherIdx = inclIdx; else if ((sepIndex > 0) && (inclIdx == (-1))) otherIdx = sepIndex; else otherIdx = (inclIdx < sepIndex) ? inclIdx : sepIndex;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8569/buggy-version/src.graph.GraphBuilder.java", "BodyUseAPI": [], "Fixed commit": "92bed59513581085a198b562fdc4bdf1b9c1639b", "Url": "https://api.github.com/repos/hsun0120/ClinicalTrialAnnotator", "Date": "2018-01-14T07:54:48Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(s3url.isEmpty())) { s3CB.setEndpointConfiguration(new com.amazonaws.client.builder.AwsClientBuilder.EndpointConfiguration(s3url, s3region)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9513/buggy-version/src.main.java.edu.harvard.iq.dataverse.dataaccess.S3AccessIO.java", "BodyUseAPI": [], "Fixed commit": "13a9980a522ac22cf785f39d114a978a12f328ed", "Url": "https://api.github.com/repos/scholarsportal/dataverse", "Date": "2018-09-21T12:33:13Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.core.model.process.ProcessUtils.isTestContainer(org.talend.core.model.process.IProcess)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isTestcaseProcess) { org.talend.core.runtime.process.LastGenerationInfo.getInstance().getHighPriorityModuleNeeded().addAll(nodeNeededModules); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/319/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.utils.JavaProcessUtil.java", "BodyUseAPI": [], "Fixed commit": "808da88b70092f0e1b9e136ebdd61a068c2f6cb1", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2018-07-02T02:24:55Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mWeightEditText.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(weightString))) { weight = java.lang.Integer.parseInt(weightString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3242/buggy-version/app.src.main.java.com.example.android.pets.EditorActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "70d3f48736ebe442a36e6d2c752a7b7130249e64", "Url": "https://api.github.com/repos/r4dixx/ud845-Pets", "Date": "2018-07-26T17:43:18Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mWeightEditText.getText().toString().trim()", "mNameEditText.getText().toString().trim()", "mBreedEditText.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((((mCurrentPetUri) == null) && (android.text.TextUtils.isEmpty(nameString))) && (android.text.TextUtils.isEmpty(breedString))) && (android.text.TextUtils.isEmpty(weightString))) && ((mGender) == (com.example.android.pets.data.PetContract.PetEntry.GENDER_UNKNOWN))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3242/buggy-version/app.src.main.java.com.example.android.pets.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "70d3f48736ebe442a36e6d2c752a7b7130249e64", "Url": "https://api.github.com/repos/r4dixx/ud845-Pets", "Date": "2018-07-26T17:43:18Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkedTypeResultShow == 0) { this.mCheckedTypeResultShow = R.id.on_email_radio_button; }else { this.mCheckedTypeResultShow = checkedTypeResultShow; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5002/buggy-version/app.src.main.java.com.example.android.tretyakovgalleryquiz.ResultFragment.java", "BodyUseAPI": [], "Fixed commit": "75ec853330c261c8a249603ef8fa5094f5c2585c", "Url": "https://api.github.com/repos/kazakovaNet/TretyakovGalleryQuiz", "Date": "2018-02-05T10:25:11Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (owlapi == null) return spatial;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1854/buggy-version/oto-common.src.main.java.edu.arizona.biosemantics.oto.common.ontologylookup.search.search.SynRingVariation.java", "BodyUseAPI": [], "Fixed commit": "13ea44124d238df4ff60398133086f15f7fd017e", "Url": "https://api.github.com/repos/biosemantics/oto", "Date": "2018-09-28T15:51:07Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getActivity().isDestroyed())) { getActivity().runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { mProgressDialog.dismiss(); android.widget.Toast.makeText(mContext, getResources().getString(R.string.update_success), Toast.LENGTH_SHORT).show(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/650/buggy-version/app.src.main.java.me.dounx.nintendoeshophelper.SettingsFragment.java", "BodyUseAPI": [], "Fixed commit": "e518ec3098af99815b0fb6a2b18763dbce216b99", "Url": "https://api.github.com/repos/Dounx/NintendoSwitchEShopHelper", "Date": "2018-03-30T13:17:16Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nikr.eve.jeveasset.io.local.SettingsReader.read(java.lang.String,java.lang.String,XmlType.DYNAMIC_BACKUP)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!ok) { settings.setSettingsLoadError(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2516/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.local.SettingsReader.java", "BodyUseAPI": [], "Fixed commit": "7fa9ba014ecdbeba311027422c4ecd78fdee9b82", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2018-08-30T11:35:46Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBinding) != null) { mBinding.navigation.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3266/buggy-version/app.src.main.java.it.communikein.udacity_municipality.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "583a83d411147545d369f905a15424299529bc51", "Url": "https://api.github.com/repos/communikein/udacity-municipality-app", "Date": "2018-01-05T19:55:43Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(to.contains(\"@mail.FSM.com\"))) to += \"@mail.FSM.com\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/152/buggy-version/app.src.main.java.ncku.firesimplemail.ActivityTaskWrite.java", "BodyUseAPI": [], "Fixed commit": "ab2c806b5a70382fa2d2041183f02b397112daa8", "Url": "https://api.github.com/repos/petermouse/FireSimpleMail", "Date": "2018-06-21T18:10:54Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(to.contains(\"@mail.FSM.com\"))) to += \"@mail.FSM.com\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/152/buggy-version/app.src.main.java.ncku.firesimplemail.ActivityTaskWrite.java", "BodyUseAPI": [], "Fixed commit": "ab2c806b5a70382fa2d2041183f02b397112daa8", "Url": "https://api.github.com/repos/petermouse/FireSimpleMail", "Date": "2018-06-21T18:10:54Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((label == null) || (!(schema.getShapeMap().containsKey(label)))) throw new java.lang.Exception((\"Unknown label: \" + label));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7689/buggy-version/shex.src.main.java.fr.univLille.cristal.shex.validation.RecursiveValidation.java", "BodyUseAPI": [], "Fixed commit": "f79f975f7583b88726cec2f9f16768253cf14a5d", "Url": "https://api.github.com/repos/iovka/shex-java", "Date": "2018-04-19T12:08:41Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(schema.getShapeMap().containsKey(label))) throw new java.lang.Exception((\"Unknown label: \" + label));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7689/buggy-version/shex.src.main.java.fr.univLille.cristal.shex.validation.RefineValidation.java", "BodyUseAPI": [], "Fixed commit": "f79f975f7583b88726cec2f9f16768253cf14a5d", "Url": "https://api.github.com/repos/iovka/shex-java", "Date": "2018-04-19T12:08:41Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (this.mAuthority)) { request.setAuthority(new java.net.URL(mAuthority)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8121/buggy-version/adal.src.main.java.com.microsoft.aad.adal.TokenCacheAccessor.java", "BodyUseAPI": [], "Fixed commit": "2e7953f42e5971f1af6a573e57fd660aa391f89e", "Url": "https://api.github.com/repos/AzureAD/azure-activedirectory-library-for-android", "Date": "2018-09-18T19:56:33Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((value == null) && (globalValues.containsKey(key))) { java.util.List<java.lang.Object> valueList = globalValues.get(key); if (!(valueList.isEmpty())) { value = valueList.get(((valueList.size()) - 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9161/buggy-version/src.main.java.org.gdl2.runtime.TemplateFiller.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.Object>>.get(java.lang.String)"], "Fixed commit": "eebb4fbaca2173bb308e363927b7c179e3b506a1", "Url": "https://api.github.com/repos/gdl-lang/gdl2", "Date": "2018-08-03T12:44:21Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mw02.isChecked()) { edu.aku.hassannaqvi.kmc_hhlisting.ui.AddMarriedWomenActivity.dTotal = java.lang.Integer.valueOf(mw03.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/730/buggy-version/app.src.main.java.edu.aku.hassannaqvi.kmc_hhlisting.ui.AddMarriedWomenActivity.java", "BodyUseAPI": [], "Fixed commit": "8ea6dbc37dc9856a31af2e5cfe86a64bc4582e6b", "Url": "https://api.github.com/repos/shznaqvi/PSSP-HHListing", "Date": "2018-03-12T10:40:08Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bigkoo.pickerview.utils.ChinaDate.leapMonth(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((leapMonth != 0) && ((month > (leapMonth - 1)) || isLeap)) { wv_month.setCurrentItem((month + 1)); }else { wv_month.setCurrentItem(month); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2720/buggy-version/pickerview.src.main.java.com.bigkoo.pickerview.view.WheelTime.java", "BodyUseAPI": ["com.contrarywind.view.WheelView.setCurrentItem(int)", "com.contrarywind.view.WheelView.setCurrentItem(int)"], "Fixed commit": "82cc78fb43ad797caf663b7eceb2ab3db809a4fd", "Url": "https://api.github.com/repos/Bigkoo/Android-PickerView", "Date": "2018-06-12T14:55:02Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFragment) != null) { getSupportFragmentManager().putFragment(outState, \"FRAG\", mFragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7706/buggy-version/LifestyleApp.app.src.main.java.com.example.lifestyleapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d49f2e3c553e4f73e87a37b5e6e9e2693a4c253e", "Url": "https://api.github.com/repos/westleya/AppDesignProject", "Date": "2018-10-29T15:39:31Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (result == null) { result = new com.netflix.spinnaker.halyard.core.registry.v1.BillOfMaterials.Artifact(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8842/buggy-version/halyard-core.src.main.java.com.netflix.spinnaker.halyard.core.registry.v1.BillOfMaterials.java", "BodyUseAPI": [], "Fixed commit": "85e705905fe0497f91bb70af58f824e1269ef476", "Url": "https://api.github.com/repos/lwander/halyard", "Date": "2018-04-09T21:01:20Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (worldName == null) { chosenGameWorld = worlds.get(Core.r.nextInt(worlds.size())); }else { for (java.io.File file : worlds) { if (file.getName().contains(worldName)) { chosenGameWorld = file; break; } } if (chosenGameWorld == null) { chosenGameWorld = worlds.get(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2816/buggy-version/src.Splatoon.GameManagement.WorldManager.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)"], "Fixed commit": "f88e90b2ff149040516a314188a3ae46239769cb", "Url": "https://api.github.com/repos/Toxidius/Splatoon", "Date": "2018-05-23T07:04:04Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9624/buggy-version/src.main.java.cc.hyperium.addons.customrp.utils.Mode.java", "BodyUseAPI": [], "Fixed commit": "592726406199dc6d3529d284e125b85c2c67f2d2", "Url": "https://api.github.com/repos/HyperiumClient/Hyperium", "Date": "2018-07-26T02:06:53Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9624/buggy-version/src.main.java.cc.hyperium.addons.customrp.utils.Mode.java", "BodyUseAPI": [], "Fixed commit": "592726406199dc6d3529d284e125b85c2c67f2d2", "Url": "https://api.github.com/repos/HyperiumClient/Hyperium", "Date": "2018-07-26T02:06:53Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((region.getId()) == null) { region = region.withId(nextId.getAndIncrement()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6669/buggy-version/rekolekcje-engine.src.main.java.pl.oaza.warszawa.dor.rekolekcje.api.parish.domain.InMemoryRegionsRepository.java", "BodyUseAPI": ["pl.oaza.warszawa.dor.rekolekcje.api.parish.domain.Region.withId(long)"], "Fixed commit": "bdb6a8c27d51f169ed6264f6a02cc583fe18539e", "Url": "https://api.github.com/repos/oaza-waw/rekolekcje-api", "Date": "2018-07-05T16:14:13Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isNested) { target.append(\"_id\", ((source.getId()) != null ? new org.bson.types.ObjectId(source.getId()) : new org.bson.types.ObjectId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5260/buggy-version/sitewhere-mongodb.src.main.java.com.sitewhere.mongodb.device.MongoDeviceEvent.java", "BodyUseAPI": [], "Fixed commit": "cb28fed5244bda86e0218813138b7f56d4f15a68", "Url": "https://api.github.com/repos/sitewhere/sitewhere", "Date": "2018-09-29T14:34:31Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPagerItem) == null) currentPagerItem = \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1089/buggy-version/app.src.main.java.com.ieeevit.componentbankredefined.Activities.AdminTabbedActivity.java", "BodyUseAPI": [], "Fixed commit": "b674bc1ca53b801d89b4c000e25ca55ee43d7919", "Url": "https://api.github.com/repos/yashvardhan-kukreja/Component-Bank-Android", "Date": "2018-03-09T03:31:48Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (textView.getText().equals(\"\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4548/buggy-version/app.src.main.java.com.nixesea.barcodereader.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "69e2d0a4331cf1ad9314f8b0026ed4a46d93a02a", "Url": "https://api.github.com/repos/NixesEA/BarcodeReader", "Date": "2018-07-04T10:16:00Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((str.length()) > 0) { for (int i = 1; i < (str.length()); i++) { char c = str.charAt(i); if (java.lang.Character.isUpperCase(c)) { sb.append(' '); } sb.append(c); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6282/buggy-version/src.main.java.quellatalo.nin.fx.StringUtils.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.charAt(int)"], "Fixed commit": "07c244ad233e428eb42fd6ba36492dabb7eb22fa", "Url": "https://api.github.com/repos/quellatalo/table_view_x", "Date": "2018-06-14T02:40:05Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tok.equalsIgnoreCase(\"Emergency\")) { types.add(RegistrationType.EMERGENCY); }else if (((tok.equalsIgnoreCase(\"Other\")) || (tok.equalsIgnoreCase(\"Patient\"))) || (tok.equalsIgnoreCase(\"Remotely Registered\"))) { types.add(RegistrationType.OTHER); }else { throw new org.endeavourhealth.core.exceptions.TransformException((\"Unmapped registration type \" + tok)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4462/buggy-version/src.main.java.org.endeavourhealth.transform.tpp.csv.transforms.patient.SRPatientRegistrationTransformer.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "f4563bfcdd0720e696946d009f19a4eb3fad60e7", "Url": "https://api.github.com/repos/endeavourhealth/Transforms", "Date": "2018-08-12T13:13:46Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (types.contains(RegistrationType.EMERGENCY)) { return org.endeavourhealth.common.fhir.schema.RegistrationType.EMERGENCY; }else if (types.contains(RegistrationType.PRE_REGISTRATION)) { return org.endeavourhealth.common.fhir.schema.RegistrationType.PRE_REGISTRATION; }else if (types.contains(RegistrationType.PRIVATE)) { return org.endeavourhealth.common.fhir.schema.RegistrationType.PRIVATE; }else if (types.contains(RegistrationType.TEMPORARY)) { return org.endeavourhealth.common.fhir.schema.RegistrationType.TEMPORARY; }else if (types.contains(RegistrationType.IMMEDIATELY_NECESSARY)) { return org.endeavourhealth.common.fhir.schema.RegistrationType.IMMEDIATELY_NECESSARY; }else { return types.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4462/buggy-version/src.main.java.org.endeavourhealth.transform.tpp.csv.transforms.patient.SRPatientRegistrationTransformer.java", "BodyUseAPI": ["java.util.List<org.endeavourhealth.common.fhir.schema.RegistrationType>.contains(RegistrationType.IMMEDIATELY_NECESSARY)", "java.util.List<org.endeavourhealth.common.fhir.schema.RegistrationType>.contains(RegistrationType.TEMPORARY)", "java.util.List<org.endeavourhealth.common.fhir.schema.RegistrationType>.get(int)", "java.util.List<org.endeavourhealth.common.fhir.schema.RegistrationType>.contains(RegistrationType.PRIVATE)", "java.util.List<org.endeavourhealth.common.fhir.schema.RegistrationType>.contains(RegistrationType.PRE_REGISTRATION)"], "Fixed commit": "f4563bfcdd0720e696946d009f19a4eb3fad60e7", "Url": "https://api.github.com/repos/endeavourhealth/Transforms", "Date": "2018-08-12T13:13:46Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getRepositoryConfig(configuration).getLocal()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((local != null) && (!(io.jenkins.updatebot.support.Strings.empty(local.getName())))) { name = local.getName(); }else if (gitRepositoryInfo != null) { name = ((gitRepositoryInfo.getOrganisation()) + \"/\") + (gitRepositoryInfo.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6524/buggy-version/updatebot-core.src.main.java.io.jenkins.updatebot.commands.PushSourceChanges.java", "BodyUseAPI": ["io.jenkins.updatebot.model.GitRepositoryConfig.getName()"], "Fixed commit": "64b5f57d13d96cc077ff63ad9818f8b157fd562a", "Url": "https://api.github.com/repos/jstrachan/updatebot", "Date": "2018-08-25T00:35:27Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tableConfigs.isEmpty()) { issues.add(context.createConfigIssue(Groups.TABLE.name(), com.streamsets.pipeline.stage.origin.jdbc.table.TableJdbcConfigBean.TABLE_CONFIG, JdbcErrors.JDBC_66)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/353/buggy-version/jdbc-lib.src.main.java.com.streamsets.pipeline.stage.origin.jdbc.table.TableJdbcConfigBean.java", "BodyUseAPI": [], "Fixed commit": "d34c35cdae96a88ffbf9dc6c8d8c107f3a270652", "Url": "https://api.github.com/repos/tjworks/tapdata", "Date": "2018-07-12T02:29:36Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contextSequence == null) { if (contextItem == null) { throw new org.exist.xquery.functions.fn.XPathException(this, ErrorCodes.XPDY0002, \"Context item is absent\"); } contextSequence = contextItem.toSequence(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5823/buggy-version/src.org.exist.xquery.functions.fn.FnHasChildren.java", "BodyUseAPI": [], "Fixed commit": "614c6e7b70d6b6975529821f4415e5f13707b717", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-02-23T13:28:19Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isVisible()) { com.google.android.exoplayer2.upstream.DefaultDataSourceFactory dataSourceFactory = new com.google.android.exoplayer2.upstream.DefaultDataSourceFactory(getContext(), \"ST. Agent\", new com.google.android.exoplayer2.upstream.DefaultBandwidthMeter()); com.google.android.exoplayer2.source.ExtractorMediaSource.Factory extMediaSourceFactory = new com.google.android.exoplayer2.source.ExtractorMediaSource.Factory(dataSourceFactory); com.google.android.exoplayer2.source.ExtractorMediaSource mediaSource = extMediaSourceFactory.createMediaSource(videoUri); player.prepare(mediaSource); if ((playerInitialPosition) > 0) player.seekTo(playerInitialPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7644/buggy-version/app.src.main.java.free.rm.skytube.gui.fragments.YouTubePlayerV2Fragment.java", "BodyUseAPI": [], "Fixed commit": "57b87e124cfe38594b26eafee6576bc697dd816f", "Url": "https://api.github.com/repos/ram-on/SkyTube", "Date": "2018-05-20T16:26:54Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index == 0) { throw new java.lang.IllegalArgumentException(\"search keys must not start with '.'\"); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4091/buggy-version/src.main.java.com.keildraco.config.data.DataQuery.java", "BodyUseAPI": [], "Fixed commit": "5f85a635b4dbf11d7524a9fd80479ffd38cba964", "Url": "https://api.github.com/repos/dshadowwolf/simple-java-config", "Date": "2018-08-03T01:59:18Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index == 0) { throw new java.lang.IllegalArgumentException(\"search keys cannot start with a '.'\"); }else if (this.has(itemName)) { return this.items.get(itemName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4091/buggy-version/src.main.java.com.keildraco.config.interfaces.ParserInternalTypeBase.java", "BodyUseAPI": [], "Fixed commit": "5f85a635b4dbf11d7524a9fd80479ffd38cba964", "Url": "https://api.github.com/repos/dshadowwolf/simple-java-config", "Date": "2018-08-03T01:59:18Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deck.isUsingTTS()) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6251/buggy-version/app.src.main.java.com.ABCDeve1opers.flashbot.view.DeckBrowserActivity.java", "BodyUseAPI": [], "Fixed commit": "3e669fd8122b444b2e4deb410ae9d7803ddbec62", "Url": "https://api.github.com/repos/ABCDeve1opers/FlashBot", "Date": "2018-10-24T13:12:28Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(param.getKey().equals(\"order\"))) url += (((param.getKey()) + \"=\") + (param.getValue())) + \"&\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7059/buggy-version/src.main.java.com.kineticdata.bridgehub.adapter.kineticcore.KineticCoreSubmissionHelper.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()"], "Fixed commit": "77c7632002c186455d92d0405db22173aea8c5b7", "Url": "https://api.github.com/repos/kineticdata/kinetic-bridgehub-adapter-kineticcore", "Date": "2018-04-26T18:42:53Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CoroUtil.util.CoroUtilEntOrParticle.getWorld(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (world == null) { return 1.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5155/buggy-version/src.main.java.weather2.util.WeatherUtilEntity.java", "BodyUseAPI": [], "Fixed commit": "73b5fc4dc673bde327b926de37a88b1d6b34db3c", "Url": "https://api.github.com/repos/Corosauce/weather2", "Date": "2018-08-02T18:14:18Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (floatingButtonMenuState) { hideFabMenu(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2986/buggy-version/app.src.main.java.com.example.ering.trekinsync.fragments.FabMenuFragment.java", "BodyUseAPI": [], "Fixed commit": "66aa50bda449d9a81389ad9a2020bd425c0a7c12", "Url": "https://api.github.com/repos/ErinCGallagher/TrekInSync", "Date": "2018-03-08T23:17:40Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (state == null) { assignmentList.get(code).setState(null); }else { assignmentList.get(code).setState(state); if (state == false) { if (!(refundCustomer(code))) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5060/buggy-version/src.server.DogSitter.java", "BodyUseAPI": ["assignmentList.get(code).setState(java.lang.Boolean)"], "Fixed commit": "6233c16fcd69ab64b66c0f029ab5514c992cd022", "Url": "https://api.github.com/repos/IngSW-unipv/Progetto-F18", "Date": "2018-07-24T09:43:08Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sysml.hops.estim.EstimatorMatrixHistogram.MatrixHistogram.getNonZeros()", "org.apache.sysml.hops.estim.EstimatorMatrixHistogram.MatrixHistogram.getNonZeros()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((N1 == 0) | (N2 == 0)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1175/buggy-version/src.main.java.org.apache.sysml.hops.estim.EstimatorMatrixHistogram.java", "BodyUseAPI": [], "Fixed commit": "d9115a5a04bb28b2ef3770039906912b3a3ea304", "Url": "https://api.github.com/repos/johannaSommer/systemml", "Date": "2018-08-13T22:46:31Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (leftPathTrimmed.isEmpty()) { return rightPath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3356/buggy-version/src.main.java.net.snowflake.client.jdbc.SnowflakeUtil.java", "BodyUseAPI": [], "Fixed commit": "eeb11bf9397e7faf12c06d67d2b82c42b22e30e9", "Url": "https://api.github.com/repos/snowflakedb/snowflake-jdbc", "Date": "2018-02-09T19:12:04Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ret != null) { ret.mCallbackReceiver = wrappedCallback; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4692/buggy-version/src.java.com.android.internal.telephony.gsm.GsmMmiCode.java", "BodyUseAPI": [], "Fixed commit": "73522c5e9ae5e3f0d6e5167e3d3417b18eaaedba", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-opt-telephony", "Date": "2018-02-21T21:03:20Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Objects.equals(id, menu.getParentId())) { idSet.addAll(findNotOptionalParnetId(menu.getId(), menuList)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9528/buggy-version/src.main.java.com.mine.oa.service.impl.MenuServiceImpl.java", "BodyUseAPI": ["com.mine.oa.service.impl.MenuServiceImpl.findNotOptionalParnetId(menu.getId(),java.util.List<com.mine.oa.entity.MenuPO>)", "java.util.Set<java.lang.Integer>.addAll(java.util.Set<java.lang.Integer>)", "com.mine.oa.entity.MenuPO.getId()"], "Fixed commit": "fb5bced651561b11535c60c634d77bd24910f50d", "Url": "https://api.github.com/repos/systemlp/mine-oa-service", "Date": "2018-02-07T08:24:28Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (element != null) { for (int i = 0; i < (predicateData.length); i++) { if (element.equals(predicateData[i])) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8376/buggy-version/src.HomeWork.FirstTask.Predicate.java", "BodyUseAPI": ["java.lang.Object.equals(java.lang.Object)"], "Fixed commit": "6d5d422b1806c31f6ae53c13d255aa9272b95d31", "Url": "https://api.github.com/repos/Murcast/HomeWork", "Date": "2018-04-20T17:45:25Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(jdz.statsTracker.hooks.LeaderHeadsHook.enabled)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6188/buggy-version/src.jdz.statsTracker.hooks.LeaderHeadsHook.java", "BodyUseAPI": [], "Fixed commit": "2c90092736f14b57e3c587830a04371f3be20c8b", "Url": "https://api.github.com/repos/Jonodonozym/gcStatsTracker", "Date": "2018-09-04T03:04:49Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isProducer) { if (!(config.containsKey(AWSConfigConstants.AWS_REGION))) { throw new java.lang.IllegalArgumentException(java.lang.String.format(\"For FlinkKinesisProducer AWS region ('%s') must be set in the config.\", AWSConfigConstants.AWS_REGION)); } }else { if (!((config.containsKey(AWSConfigConstants.AWS_REGION)) ^ (config.containsKey(ConsumerConfigConstants.AWS_ENDPOINT)))) { throw new java.lang.IllegalArgumentException(java.lang.String.format(\"For FlinkKinesisConsumer either AWS region ('%s') or AWS endpoint ('%s') must be set in the config.\", AWSConfigConstants.AWS_REGION, AWSConfigConstants.AWS_ENDPOINT)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9593/buggy-version/flink-connectors.flink-connector-kinesis.src.main.java.org.apache.flink.streaming.connectors.kinesis.util.KinesisConfigUtil.java", "BodyUseAPI": [], "Fixed commit": "cae4fc83e313d4dcde4a3defec50b50c919420a3", "Url": "https://api.github.com/repos/diego-carvallo-tx/flink", "Date": "2018-10-03T16:01:42Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (accs.isEmpty()) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4861/buggy-version/pint.queries.src.main.java.edu.scripps.yates.proteindb.queries.dataproviders.protein.ProteinProviderFromProteinAccs.java", "BodyUseAPI": [], "Fixed commit": "7ebc45d68291b82079e3ede88802f7a8c6544807", "Url": "https://api.github.com/repos/proteomicsyates/PINT", "Date": "2018-08-23T21:48:54Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (singleVertex) { org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getWindow().getVertexWindow().renew(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3096/buggy-version/src.org.nschmidt.ldparteditor.vertexwindow.VertexWindow.java", "BodyUseAPI": [], "Fixed commit": "488bfb7499e360bc54a022f91f41b2525421f1a3", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2018-06-08T21:21:31Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.exists()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (web) { return webname; }else { mWidth = 0; mHeight = 0; mName = null; return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2418/buggy-version/app.src.main.java.com.ds.avare.utils.BitmapHolder.java", "BodyUseAPI": [], "Fixed commit": "e64e150f6fb998a9c04438b26c4a3f4778bbb2a7", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2018-09-02T20:03:23Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) > 8) { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8572/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "08935c8fc5c085caabe34ad781a1244f33f49365", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-nkmolnar", "Date": "2018-09-27T12:55:42Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (stopReason_i == (org.python.pydev.debug.model.remote.AbstractDebuggerCommand.CMD_THREAD_SUSPEND)) { reason = org.eclipse.debug.core.DebugEvent.CLIENT_REQUEST; }else if (stopReason_i == (org.python.pydev.debug.model.remote.AbstractDebuggerCommand.CMD_SET_BREAK)) { reason = org.eclipse.debug.core.DebugEvent.BREAKPOINT; }else if (stopReason_i == (org.python.pydev.debug.model.remote.AbstractDebuggerCommand.CMD_ADD_EXCEPTION_BREAK)) { reason = org.eclipse.debug.core.DebugEvent.BREAKPOINT; }else { org.python.pydev.debug.core.PydevDebugPlugin.log(IStatus.ERROR, (\"Unexpected reason for suspension: \" + stopReason_i), null); reason = org.eclipse.debug.core.DebugEvent.UNSPECIFIED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6931/buggy-version/plugins.org.python.pydev.debug.src.org.python.pydev.debug.model.AbstractDebugTarget.java", "BodyUseAPI": ["org.python.pydev.debug.core.PydevDebugPlugin.log(IStatus.ERROR,java.lang.String,<nulltype>)"], "Fixed commit": "adbb137991e9172b2489bd8a9db6872b0fb4af5b", "Url": "https://api.github.com/repos/fabioz/Pydev", "Date": "2018-02-24T13:01:01Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((upc.length()) == 13) { int multiple = 3; int sum = 0; for (int i = 0; i < 13; i++) { if ((i % 2) == 0) { sum = sum + (java.lang.Character.getNumericValue(upc.charAt(i))); }else { sum = sum + ((java.lang.Character.getNumericValue(upc.charAt(i))) * multiple); } } return (sum % 10) == 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1523/buggy-version/app.src.main.java.com.enrandomlabs.jasensanders.v1.shopenator.Utility.java", "BodyUseAPI": ["java.lang.Character.getNumericValue(char)", "java.lang.String.charAt(int)", "java.lang.Character.getNumericValue(char)", "java.lang.String.charAt(int)"], "Fixed commit": "a95a153ec95fd0acdbd90ae0b6c8cf11f6c90730", "Url": "https://api.github.com/repos/jasensanders/Shopenator", "Date": "2018-09-06T20:44:31Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((upc.length()) == 12) { int multiple = 3; int sum = 0; for (int i = 0; i < 12; i++) { if ((i % 2) == 0) { sum = sum + ((java.lang.Character.getNumericValue(upc.charAt(i))) * multiple); }else { sum = sum + (java.lang.Character.getNumericValue(upc.charAt(i))); } } return (sum % 10) == 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1523/buggy-version/app.src.main.java.com.enrandomlabs.jasensanders.v1.shopenator.Utility.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.Character.getNumericValue(char)", "java.lang.Character.getNumericValue(char)", "java.lang.String.charAt(int)"], "Fixed commit": "a95a153ec95fd0acdbd90ae0b6c8cf11f6c90730", "Url": "https://api.github.com/repos/jasensanders/Shopenator", "Date": "2018-09-06T20:44:31Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["team.android.projects.com.bookit.searchengine.GoogleBooksSearchEngine.mBooks.volumes().list(query).setMaxResults(querySize).execute()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((volumes == null) || ((volumes.getTotalItems()) == 0)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9280/buggy-version/app.src.main.java.team.android.projects.com.bookit.searchengine.GoogleBooksSearchEngine.java", "BodyUseAPI": [], "Fixed commit": "e39ed4ff62a4b026ed89e629a6748f907cde6fbb", "Url": "https://api.github.com/repos/woojiahao/bookit", "Date": "2018-08-06T03:53:40Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == 0) { return \"board/index\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1855/buggy-version/src.main.java.com.killi8n.board.controllers.BoardController.java", "BodyUseAPI": [], "Fixed commit": "ee007bc7497d7f58a0de3f1cb4d1b35ddcbbbf81", "Url": "https://api.github.com/repos/killi8n/SpringLastTermBoard", "Date": "2018-06-08T07:30:44Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m.getLastLocation()) != null) { map.updateLocation(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7227/buggy-version/src.main.java.eichlerjiri.movementtracker.MovementTracker.java", "BodyUseAPI": [], "Fixed commit": "6cb445d5313ff53f7f9e3a1017a9aecfa18f6b1c", "Url": "https://api.github.com/repos/eichlerjiri/movement-tracker", "Date": "2018-06-14T13:01:23Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["item.getProd().leftHand().followRestriction()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((fr != null) && (!(fr.isEmptyCC()))) { final_range = final_range.difference(item.getProd().leftHand().followRestriction()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3469/buggy-version/org.metaborg.sdf2table.src.main.java.org.metaborg.sdf2table.parsetable.State.java", "BodyUseAPI": [], "Fixed commit": "8ec52373b6d81f519729c2099b005737110eba56", "Url": "https://api.github.com/repos/metaborg/sdf", "Date": "2018-03-19T13:15:19Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debug) { onLocationChanged(locator.getLastLocation(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3850/buggy-version/app.src.main.java.de.htwberlin.f4.ai.ma.indoorroutefinder.paperchase.PlayPaperchaseActivity.java", "BodyUseAPI": [], "Fixed commit": "59584cd4fc28bff1bf6370b6e8ce6e7b9241a133", "Url": "https://api.github.com/repos/LocationBasedSystems/Schnitzeljagd", "Date": "2018-01-17T19:57:41Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (newLocation != null) { if (((currentClueId) + 1) < (paperchase.getClueList().size())) { currentNodeText.setText(((((\"Current: \" + (newLocation.getId())) + \" (Ziel: \") + (paperchase.getClueList().get(((currentClueId) + 1)).getLoc().getId())) + \")\")); if (newLocation.getId().equals(paperchase.getClueList().get(((currentClueId) + 1)).getLoc().getId())) { next(false); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3850/buggy-version/app.src.main.java.de.htwberlin.f4.ai.ma.indoorroutefinder.paperchase.PlayPaperchaseActivity.java", "BodyUseAPI": ["de.htwberlin.f4.ai.ma.indoorroutefinder.node.Node.getId()", "newLocation.getId().equals(paperchase.getClueList().get(((currentClueId) + 1)).getLoc().getId())", "android.widget.TextView.setText(((((\"Current: \" + (newLocation.getId())) + \"  (Ziel: \") + (paperchase.getClueList().get(((currentClueId) + 1)).getLoc().getId())) + \")\"))", "de.htwberlin.f4.ai.ma.indoorroutefinder.node.Node.getId()"], "Fixed commit": "59584cd4fc28bff1bf6370b6e8ce6e7b9241a133", "Url": "https://api.github.com/repos/LocationBasedSystems/Schnitzeljagd", "Date": "2018-01-17T19:57:41Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.mozilla.focus.Inject.isUnderEspressoTest())) { mLottieAnimationView.playAnimation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/346/buggy-version/app.src.main.java.org.mozilla.focus.fragment.ScreenCaptureDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "31131c6e07e3047711acde30fd59b1d59a592565", "Url": "https://api.github.com/repos/mozilla-tw/Rocket", "Date": "2018-08-17T06:23:18Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<?>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (obj.has(jsonkey_TableName)) { java.lang.Object entityData = converter.entityFor(jsonkey_TableName, obj.get(jsonkey_TableName)); if (entityData != null) { entity.insertOrReplace(entityData); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5364/buggy-version/app.src.main.java.com.github.deckyfx.dbhelper.DbUtils.java", "BodyUseAPI": ["org.json.JSONObject.get(java.lang.String)", "com.github.deckyfx.dbhelper.DbUtils.JSONImportConverter.entityFor(java.lang.String,obj.get(jsonkey_TableName))"], "Fixed commit": "4011db33bf0f8bb5d12c75d9eaa1eff5139dca83", "Url": "https://api.github.com/repos/deckyfx/dbhelper", "Date": "2018-03-02T06:53:16Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.deckyfx.dbhelper.DbUtils.JSONImportConverter.entityFor(java.lang.String,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (entityData != null) { entity.insertOrReplace(entityData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5364/buggy-version/app.src.main.java.com.github.deckyfx.dbhelper.DbUtils.java", "BodyUseAPI": ["com.github.deckyfx.dbhelper.Entity<java.lang.Object, java.lang.Long>.insertOrReplace(java.lang.Object)"], "Fixed commit": "4011db33bf0f8bb5d12c75d9eaa1eff5139dca83", "Url": "https://api.github.com/repos/deckyfx/dbhelper", "Date": "2018-03-02T06:53:16Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (srcRcd.getFieldValue(\"canctb\").equals(0)) { java.lang.System.out.println(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4229/buggy-version/plugin.accounti.SendAccountsMovementTask.java", "BodyUseAPI": [], "Fixed commit": "b31b0d9740e92f6f5e70f4c564e6f413ee3fceca", "Url": "https://api.github.com/repos/terry1013/accounti", "Date": "2018-07-03T19:34:34Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.trueRange) != null) { this.trueRange.update(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7126/buggy-version/src.main.java.jp.miraiakari.domain.technical.RecentPrices.java", "BodyUseAPI": [], "Fixed commit": "890d69a1ad3e280dbcfe5595196d2cfbf8dbe2ea", "Url": "https://api.github.com/repos/hecateball/miraiakari", "Date": "2018-01-11T00:34:40Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.exponentialMovingAverage) != null) { this.exponentialMovingAverage.update(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/7126/buggy-version/src.main.java.jp.miraiakari.domain.technical.RecentPrices.java", "BodyUseAPI": [], "Fixed commit": "890d69a1ad3e280dbcfe5595196d2cfbf8dbe2ea", "Url": "https://api.github.com/repos/hecateball/miraiakari", "Date": "2018-01-11T00:34:40Z"},
{"Line": "=>1567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(JsonKey.ROLES)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isNotEmpty(roles)) { java.lang.String response = org.sunbird.learner.util.Util.validateRoles(roles); if (!(JsonKey.SUCCESS.equalsIgnoreCase(response))) { return ResponseMessage.Message.INVALID_ROLE; } roles = roles.stream().map(( s) -> s.trim()).collect(java.util.stream.Collectors.toList()); userMap.put(JsonKey.ROLES, roles); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5929/buggy-version/actors.common.src.main.java.org.sunbird.learner.actors.bulkupload.BulkUploadBackGroundJobActor.java", "BodyUseAPI": ["java.util.stream.Stream<java.lang.String>.collect(java.util.stream.Collector<java.lang.String, ?, java.util.List<java.lang.String>>)", "java.util.stream.Stream<java.lang.String>.map(java.util.function.Function<? super java.lang.String, ? extends java.lang.String>)", "java.util.List<java.lang.String>.stream()", "org.sunbird.learner.util.Util.validateRoles(java.util.List<java.lang.String>)"], "Fixed commit": "002288f6fab0b02d709faf5e5147ecc398992a15", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-09-21T13:03:09Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) { getSupportActionBar().setTitle(\"Photo Blog\"); getSupportActionBar().setDisplayHomeAsUpEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6283/buggy-version/app.src.main.java.com.example.eldho.toolbarsample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6ab1c9941f14041f21a2f58930b8958f46d79860", "Url": "https://api.github.com/repos/Eldhopj/ToolBarSample", "Date": "2018-09-10T09:48:34Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["codeu.model.store.basic.UserStore.getUser(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (user.isAdmin()) { request.setAttribute(\"admin\", \"Welcome to the Administration Account.\"); request.getRequestDispatcher(\"/WEB-INF/view/activity.jsp\").forward(request, response); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9061/buggy-version/src.main.java.codeu.controller.LoginServlet.java", "BodyUseAPI": [], "Fixed commit": "10e192198d706acac5f4a25773bae6df7ff0eb02", "Url": "https://api.github.com/repos/donnelldebnam/CodeU-Spring-2018-29", "Date": "2018-07-23T18:46:55Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((p.x) < 0) || ((p.y) < 0)) || ((p.x) >= (map.length))) || ((p.y) >= (map[0].length))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9380/buggy-version/fr.main.model.units.Path.java", "BodyUseAPI": [], "Fixed commit": "5becd114873afbece4c5bb62bcbb81f3d72cb54b", "Url": "https://api.github.com/repos/Peaupote/advance-war", "Date": "2018-03-03T17:58:29Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.adorsys.encobject.filesystem.BucketPathFileHelper.getAsFile(baseDir).list(org.adorsys.encobject.filesystem.FileSystemExtendedStorageConnection.DirectoryFilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dirs == null) { return list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3882/buggy-version/extendedstoreconnection.impls.filesystemstoreconnection.src.main.java.org.adorsys.encobject.filesystem.FileSystemExtendedStorageConnection.java", "BodyUseAPI": [], "Fixed commit": "5256ba9733d0000224edb43eb4f22a39eaff18cc", "Url": "https://api.github.com/repos/adorsys/cryptoutils", "Date": "2018-04-16T06:35:24Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isUserAdmin) { addDomHandler(new org.iabako.client.ui.layout.widget.user.createdby.ClickHandler() { public void onClick(org.iabako.client.ui.layout.widget.user.createdby.ClickEvent clickEvent) { org.iabako.client.navigation.NavigationController.getInstance().goTo(new org.iabako.client.ui.layout.widget.user.createdby.AttachedToUserPopup(parentForm, businessEntity)); } }, org.iabako.client.ui.layout.widget.user.createdby.ClickEvent.getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9143/buggy-version/src.main.java.org.iabako.client.ui.layout.widget.user.createdby.AttachedToUserPanel.java", "BodyUseAPI": [], "Fixed commit": "c1aa2bb0774e912a0a25fb50a07600977af6dcea", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2018-02-12T16:41:47Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arr.length) <= 1) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/5241/buggy-version/src.main.java.com.alayam.algo.MaxProfit.java", "BodyUseAPI": [], "Fixed commit": "1590d6255b8160ce97ed61e183c63502add0e99c", "Url": "https://api.github.com/repos/sivacj521/algosample", "Date": "2018-04-23T03:47:18Z"},
{"Line": "=>1259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cache) { com.alibaba.fastjson.util.TypeUtils.mappings.put(className, clazz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6783/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": [], "Fixed commit": "3954f8557127451c34d8c7e4d2b72aca60e13d3a", "Url": "https://api.github.com/repos/GulajavaMinistudio/fastjson", "Date": "2018-03-22T03:01:30Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameBoard[row][(col + index)]) != 0) { canShiftRight = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6479/buggy-version/src.Grid.java", "BodyUseAPI": [], "Fixed commit": "7f3f2e21985d822f1500c5adc28024d3b189c5cd", "Url": "https://api.github.com/repos/ChewyChiyu/Tetris", "Date": "2018-02-04T01:20:05Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { value = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1428/buggy-version/src.main.java.br.uefs.compiler.parser.semantic.Parameter.java", "BodyUseAPI": [], "Fixed commit": "967b222632f3a12365cb8e1f35a8772beee4d5c1", "Url": "https://api.github.com/repos/heitorgo1/compiler-uefs-20181", "Date": "2018-07-29T22:33:33Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Parameter.Array.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((id.read()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1428/buggy-version/src.main.java.br.uefs.compiler.parser.semantic.functions.InsertSymbol.java", "BodyUseAPI": [], "Fixed commit": "967b222632f3a12365cb8e1f35a8772beee4d5c1", "Url": "https://api.github.com/repos/heitorgo1/compiler-uefs-20181", "Date": "2018-07-29T22:33:33Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { value = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1428/buggy-version/src.main.java.br.uefs.compiler.parser.Symbol.java", "BodyUseAPI": [], "Fixed commit": "967b222632f3a12365cb8e1f35a8772beee4d5c1", "Url": "https://api.github.com/repos/heitorgo1/compiler-uefs-20181", "Date": "2018-07-29T22:33:33Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) == null) { finish(); startActivity(new android.content.Intent(getApplicationContext(), com.example.t.groupproject.Login.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/4384/buggy-version/app.src.main.java.com.example.t.groupproject.UserInfo.java", "BodyUseAPI": [], "Fixed commit": "6489bb1651f3cd7b398114c415d817dcbff2b11a", "Url": "https://api.github.com/repos/PATHoxiuzhe/CSCI3130-PROJECT", "Date": "2018-07-30T18:40:28Z"},
{"Line": "=>533", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useHtsjdkIndexCaching) samReaderFactory.enable(SamReaderFactory.Option.CACHE_FILE_BASED_INDEXES); else samReaderFactory.disable(SamReaderFactory.Option.CACHE_FILE_BASED_INDEXES);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6271/buggy-version/uk.ac.sanger.artemis.components.alignment.BamView.java", "BodyUseAPI": [], "Fixed commit": "4ab241f46d66e789bc13f565ed89d48c6de42269", "Url": "https://api.github.com/repos/sanger-pathogens/Artemis", "Date": "2018-05-29T12:26:12Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isValid) { result.append(\"\\n\").append(countStr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/9225/buggy-version/src.main.java.com.hualing365.jiuxiu.controller.WxController.java", "BodyUseAPI": [], "Fixed commit": "575a39a3886e8f5e590496face42a2c3f9355222", "Url": "https://api.github.com/repos/727288151/jiuxiu", "Date": "2018-06-10T15:44:14Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((classificationBouncedDialog) != null) { classificationBouncedDialog.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8361/buggy-version/ZWBH-Android.app.src.main.java.com.ruitukeji.zwbh.mine.mywallet.accountdetails.AccountDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "9439fa0990591e7a5f0546f0de66ad9af0c36029", "Url": "https://api.github.com/repos/921668753/wztx-shipper-android", "Date": "2018-01-26T03:44:06Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((classificationBouncedDialog) == null) && ((list) != null)) && ((list.size()) > 0)) { chooseClassification(list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8361/buggy-version/ZWBH-Android.app.src.main.java.com.ruitukeji.zwbh.mine.mywallet.accountdetails.AccountDetailsActivity.java", "BodyUseAPI": ["com.ruitukeji.zwbh.mine.mywallet.accountdetails.AccountDetailsActivity.chooseClassification(java.util.List<ClassificationBouncedBean.ResultBean>)"], "Fixed commit": "9439fa0990591e7a5f0546f0de66ad9af0c36029", "Url": "https://api.github.com/repos/921668753/wztx-shipper-android", "Date": "2018-01-26T03:44:06Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.startsWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isAbsolutePath) { return com.intellij.openapi.util.IconLoader.findIcon(resource.substring(1), loader.getClassLoader()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2506/buggy-version/workbench.mps-platform.source_gen.jetbrains.mps.ide.icons.IconLoadingUtil.java", "BodyUseAPI": [], "Fixed commit": "e590ffe829676be5bb5c1e1e15565fefe94eafd4", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2018-07-30T15:44:57Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codeborne.selenide.impl.ScreenShotLaboratory.takeScreenshotAsImage(com.codeborne.selenide.impl.WebElement,com.codeborne.selenide.impl.WebElement)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dest == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/1461/buggy-version/src.main.java.com.codeborne.selenide.impl.ScreenShotLaboratory.java", "BodyUseAPI": [], "Fixed commit": "bab205b9935796c603a22579fe71f1f72e41b635", "Url": "https://api.github.com/repos/andrejska/selenide", "Date": "2018-04-12T07:26:39Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(getDiagram().getName().equals(cName))) getDiagram().setName(cName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/2328/buggy-version/de.tu_bs.cs.isf.mbse.eggcubator.src.de.tu_bs.cs.isf.mbse.eggcubator.tabbedProperties.LevelSection.java", "BodyUseAPI": ["getDiagram().setName(java.lang.String)"], "Fixed commit": "ada90da0aec2ac5f50741f8e89737936b7efee36", "Url": "https://api.github.com/repos/Adomat/egg", "Date": "2018-01-25T11:49:15Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bgTime < (now())) autosensDataTable.put(bgTime, autosensData);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6760/buggy-version/app.src.main.java.info.nightscout.androidaps.plugins.IobCobCalculator.IobCobThread.java", "BodyUseAPI": ["android.support.v4.util.LongSparseArray<info.nightscout.androidaps.plugins.IobCobCalculator.AutosensData>.put(long,info.nightscout.androidaps.plugins.IobCobCalculator.AutosensData)"], "Fixed commit": "81ad4c54f3fb544ae3e856952e0751555b774f0e", "Url": "https://api.github.com/repos/triplem/AndroidAPS", "Date": "2018-06-25T20:20:00Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (info.nightscout.androidaps.Config.logAutosensData) info.nightscout.androidaps.plugins.IobCobCalculator.IobCobThread.log.debug((\"Sensitivity result: \" + (sensitivity.toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6760/buggy-version/app.src.main.java.info.nightscout.androidaps.plugins.IobCobCalculator.IobCobThread.java", "BodyUseAPI": [], "Fixed commit": "81ad4c54f3fb544ae3e856952e0751555b774f0e", "Url": "https://api.github.com/repos/triplem/AndroidAPS", "Date": "2018-06-25T20:20:00Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bgTime < (now())) autosensDataTable.put(bgTime, autosensData);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/6760/buggy-version/app.src.main.java.info.nightscout.androidaps.plugins.IobCobCalculator.IobCobOref1Thread.java", "BodyUseAPI": ["android.support.v4.util.LongSparseArray<info.nightscout.androidaps.plugins.IobCobCalculator.AutosensData>.put(long,info.nightscout.androidaps.plugins.IobCobCalculator.AutosensData)"], "Fixed commit": "81ad4c54f3fb544ae3e856952e0751555b774f0e", "Url": "https://api.github.com/repos/triplem/AndroidAPS", "Date": "2018-06-25T20:20:00Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isFinishing())) { progressDialog.setMessage(getString(R.string.login_progressDialog)); progressDialog.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/3338/buggy-version/SESHealth.app.src.main.java.team7.seshealthpatient.Activities.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "2eb785d20066e935933cd0c577751eb483f5465a", "Url": "https://api.github.com/repos/mtdelotavo/HealthClientApp", "Date": "2018-09-02T12:38:10Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (transactionStatus == null) { throw new java.lang.RuntimeException((((((\"can not determine the transaction status of \" + appId) + \" \") + busCode) + \" \") + innerMethod)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V149/8234/buggy-version/easytrans-core.src.main.java.com.yiqiniu.easytrans.filter.MetaDataFilter.java", "BodyUseAPI": [], "Fixed commit": "29d99e8c67995b47c5e27b9a76da09487c041e06", "Url": "https://api.github.com/repos/QNJR-GROUP/EasyTransaction", "Date": "2018-09-27T16:48:32Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.stream.Stream.of(args).anyMatch(( k) -> k.equals(\"--gui\"))) { sb.append((\" -splash:\" + (java.nio.file.Paths.get(\"resources\", \"splash.png\").toAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2282/buggy-version/src.main.java.org.semux.JvmOptions.java", "BodyUseAPI": [], "Fixed commit": "8b4f140daf9069e104c22fd0bcd602cbc94a6850", "Url": "https://api.github.com/repos/semuxgo/semux-core", "Date": "2018-08-01T13:55:55Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((randomFile.length()) > 8192) { for (int i = 0; i < 1024; i++) { this.lastSaveTimes[i] = randomFile.readInt(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/355/buggy-version/gomint-server.src.main.java.io.gomint.server.world.anvil.RegionFile.java", "BodyUseAPI": [], "Fixed commit": "72c4c2fa9bc365eb53d81227175890231cd7fa16", "Url": "https://api.github.com/repos/GoMint/GoMint", "Date": "2018-06-03T16:44:49Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hilo) != null) { if (!(hilo.isAlive())) { txtLog.requestFocus(); reset(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/228/buggy-version/AsdChallenge.src.app.App.java", "BodyUseAPI": [], "Fixed commit": "d6d22ae2a2bff43aac89b016d9ce5e18d36c6a14", "Url": "https://api.github.com/repos/pperezp/asd-challenge", "Date": "2018-04-26T14:06:13Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.broadinstitute.hellbender.tools.walkers.validation.basicshortmutpileup.BasicSomaticShortMutationValidator.calculateBasicValidationResult(htsjdk.variant.variantcontext.Genotype,htsjdk.variant.variantcontext.Allele,org.broadinstitute.hellbender.utils.pileup.ReadPileup,int,int,int,org.broadinstitute.hellbender.utils.SimpleInterval,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (basicValidationResult != null) { results.add(basicValidationResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1597/buggy-version/src.main.java.org.broadinstitute.hellbender.tools.walkers.validation.basicshortmutpileup.ValidateBasicSomaticShortMutations.java", "BodyUseAPI": ["java.util.List<org.broadinstitute.hellbender.tools.walkers.validation.basicshortmutpileup.BasicValidationResult>.add(org.broadinstitute.hellbender.tools.walkers.validation.basicshortmutpileup.BasicValidationResult)"], "Fixed commit": "a3772fef9b5871066546c64b5daa7eacac3fc8b6", "Url": "https://api.github.com/repos/broadinstitute/gatk", "Date": "2018-07-22T03:10:32Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (direction == (android.support.v7.widget.helper.ItemTouchHelper.UP)) { itemHelper.Markers.remove(itemHelper.Markers.get(viewHolder.getAdapterPosition())); itemHelper.notifyItemRemoved(viewHolder.getAdapterPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4142/buggy-version/app.src.main.java.com.example.hadwa.myapplication.ItemDragHelper.java", "BodyUseAPI": [], "Fixed commit": "81e549288a7a01e954be7bbae72db30b76a679a4", "Url": "https://api.github.com/repos/hadwa/SDC-Dashboard", "Date": "2018-04-25T15:15:08Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((maze[row][col]) == ' ') { maze[row][col] = '@'; path += 1; for (int m = 0; m < 4; m++) { int j = solve((row + (moves[m][0])), (col + (moves[m][1]))); if (j != (-1)) { return j; } } return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6993/buggy-version/04Maze.Maze.java", "BodyUseAPI": ["Maze.solve(int,int)"], "Fixed commit": "a0083f708a7f1e6dc3e2046c9960e788f20d5b6a", "Url": "https://api.github.com/repos/Trollicorn/MKS22X", "Date": "2018-03-04T03:45:00Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((maze[row][col]) == '@') && (!(surroundingsEmpty(row, col)))) { maze[row][col] = '.'; path -= 1; return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6993/buggy-version/04Maze.Maze.java", "BodyUseAPI": [], "Fixed commit": "a0083f708a7f1e6dc3e2046c9960e788f20d5b6a", "Url": "https://api.github.com/repos/Trollicorn/MKS22X", "Date": "2018-03-04T03:45:00Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maze[row][col]) == 'E') { return path; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6993/buggy-version/04Maze.Maze.java", "BodyUseAPI": [], "Fixed commit": "a0083f708a7f1e6dc3e2046c9960e788f20d5b6a", "Url": "https://api.github.com/repos/Trollicorn/MKS22X", "Date": "2018-03-04T03:45:00Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Maze.solve(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (j != (-1)) { return j; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6993/buggy-version/04Maze.Maze.java", "BodyUseAPI": [], "Fixed commit": "a0083f708a7f1e6dc3e2046c9960e788f20d5b6a", "Url": "https://api.github.com/repos/Trollicorn/MKS22X", "Date": "2018-03-04T03:45:00Z"},
{"Line": "=>1869", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(message.equals(\"Idle\"))) logger.info(\"{}\", message);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7717/buggy-version/src.main.java.com.researchworx.cresco.plugins.gobjectIngestion.folderprocessor.ObjectFS.java", "BodyUseAPI": ["com.researchworx.cresco.library.utilities.CLogger.info(java.lang.String,java.lang.String)"], "Fixed commit": "8e723cdfae8fe2acc5e7ab22cf33ab1b14281087", "Url": "https://api.github.com/repos/ResearchWorx/Cresco-GObjectIngestion-Plugin", "Date": "2018-08-01T16:52:36Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.griffin.core.measure.repo.GriffinMeasureRepo.findNameByOrganization(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.griffin.core.measure.CollectionUtils.isEmpty(orgs)) { throw new org.apache.griffin.core.measure.GriffinException.NotFoundException(ORGANIZATION_NAME_DOES_NOT_EXIST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6043/buggy-version/service.src.main.java.org.apache.griffin.core.measure.MeasureOrgServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "87f147ff705a7b6d88538113717cbdcc94170680", "Url": "https://api.github.com/repos/forshareIT/incubator-griffin", "Date": "2018-05-03T10:53:11Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (k == 0) { locationService.createProvince(new finley.gmair.model.district.Province(province)); locationService.createCity(new finley.gmair.model.district.City(city), province.getString(\"id\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6504/buggy-version/location.src.main.java.finley.gmair.location.LocationApplication.java", "BodyUseAPI": [], "Fixed commit": "c98fbc2118ccf0eaee496459afaceaf25b270054", "Url": "https://api.github.com/repos/sunshinezxf/Gmair", "Date": "2018-03-26T03:09:40Z"},
{"Line": "=>576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((playerMan.getCurrentQuestName()) == \"No Escape From Reality\") { playerMan.setMonsterGen(4); if (((playerMan.getNpcDeaths()) == 2) || ((playerMan.getNpcDeaths()) == 3)) { playerMan.setQuestStage(22); }else { playerMan.setQuestStage(21); } playerMan.changeQuest(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/645/buggy-version/src.MapControl.java", "BodyUseAPI": ["java.lang.Character.setQuestStage(int)", "java.lang.Character.getNpcDeaths()", "java.lang.Character.setMonsterGen(int)", "java.lang.Character.setQuestStage(int)", "java.lang.Character.getNpcDeaths()", "java.lang.Character.changeQuest()"], "Fixed commit": "d62977ad64571ec6ef1ca905829e193bd17e5352", "Url": "https://api.github.com/repos/Bupton64/GroupAssignment", "Date": "2018-01-29T18:38:34Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.webfilesys.WebFileSys.getInstance().getPollFilesysChangesInterval()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pollInterval > 0) { new de.webfilesys.DirTreeStatusInspector(dirTreeStatus).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2497/buggy-version/src.main.java.de.webfilesys.gui.xsl.XslUnixDirTreeHandler.java", "BodyUseAPI": [], "Fixed commit": "93d3079a565402ea4476257640d9b7a847e108a1", "Url": "https://api.github.com/repos/fhoehnel/webfilesys", "Date": "2018-10-26T18:07:17Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((taishu.getMaxtai()) > 0) && ((taishu.getValue()) > (taishu.getMaxtai()))) { if ((value) > 500) { value = 500; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6004/buggy-version/src.main.java.com.anbang.qipai.ruianmajiang.cqrs.c.domain.RuianMajiangHushu.java", "BodyUseAPI": [], "Fixed commit": "465bb06717ced65180972f9469739545620ee244", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_ruianmajiang", "Date": "2018-09-27T05:31:49Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(this.balanceFactor(current))) > 1) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5556/buggy-version/src.BalancedSearchTree.java", "BodyUseAPI": [], "Fixed commit": "88ea4dfd0496dadbac52a5180b2365d21149b592", "Url": "https://api.github.com/repos/nuratavatar/p2", "Date": "2018-02-22T02:43:17Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (templatesMap.containsKey(templateName)) templatesMap.get(templateName).repaint();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9395/buggy-version/src.main.java.edu.ucsf.rbvi.boundaryLayout.internal.ui.TemplateThumbnailPanel.java", "BodyUseAPI": ["javax.swing.JPanel.repaint()", "java.util.Map<java.lang.String, javax.swing.JPanel>.get(java.lang.String)"], "Fixed commit": "5ff366561ff3f58a2fa607812b6a201660617812", "Url": "https://api.github.com/repos/RBVI/boundaryLayout", "Date": "2018-07-21T00:06:43Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allPhotoMode) || (favphotomode)) { menu.findItem(R.id.action_cover).setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2917/buggy-version/app.src.main.java.org.fossasia.phimpme.gallery.activities.SingleMediaActivity.java", "BodyUseAPI": [], "Fixed commit": "ac1bfd42c947634ca253944e4d67297ff81e9f75", "Url": "https://api.github.com/repos/ashley8jain/phimpme-android", "Date": "2018-02-21T09:49:54Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (action.equals(\"register\")) { java.lang.String username = request.getParameter(\"username\"); session.setAttribute(\"username\", username); }else if (action.equals(\"add\")) { listItems = ((java.util.ArrayList<java.lang.String>) (session.getAttribute(\"listItems\"))); if (listItems == null) { listItems = new java.util.ArrayList(); } java.lang.String toAdd = request.getParameter(\"add\"); if (toAdd != null) { listItems.add(toAdd); session.setAttribute(\"listItems\", listItems); } }else if (action.equals(\"delete\")) { }else if (action.equals(\"logout\")) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9433/buggy-version/src.java.servlets.ShoppingListServlet.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "243da93b4a7d7e7d07917d6aed9c7431cd1cc6d1", "Url": "https://api.github.com/repos/h-roberts/week05Lab", "Date": "2018-10-11T18:30:07Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["base.Tour.getCities()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((cities.size()) == 0) { insertionPoint = 0; }else { insertionPoint = randomGenerator.nextInt(cities.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3174/buggy-version/src.mutation.DisplacementMutation.java", "BodyUseAPI": ["random.MersenneTwisterFast.nextInt(cities.size())", "java.util.ArrayList<base.City>.size()"], "Fixed commit": "ea51eea85ceab51336954dd9d22edde711551bd2", "Url": "https://api.github.com/repos/AndreasMemmel/tsp-03", "Date": "2018-02-09T14:32:05Z"},
{"Line": "=>721", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numbytes * 8) != numpixels) numbytes++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1913/buggy-version/src.main.java.edu.stanford.epad.common.pixelmed.TIFFMasksToDSOConverter.java", "BodyUseAPI": [], "Fixed commit": "c65a3aef23b64b579841f7fdff862bc6c7a914f3", "Url": "https://api.github.com/repos/RubinLab/epad-common", "Date": "2018-06-29T19:35:38Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (movies == null) { throw new com.google.gson.JsonSyntaxException(\"No Movies found.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3616/buggy-version/app.src.main.java.de.philippveit.popmov.util.JsonUtil.java", "BodyUseAPI": [], "Fixed commit": "cdf8a37eaf25e0ea094db2b7ac196081805ef351", "Url": "https://api.github.com/repos/kruemelnerd/PopMov", "Date": "2018-02-23T17:17:59Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allPhotoMode) || (favphotomode)) { menu.findItem(R.id.action_cover).setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/632/buggy-version/app.src.main.java.org.fossasia.phimpme.gallery.activities.SingleMediaActivity.java", "BodyUseAPI": [], "Fixed commit": "f13bbec53e772a4fee5eb3bc527445c02490e0ef", "Url": "https://api.github.com/repos/sauravvishal8797/phimpme-android", "Date": "2018-02-13T20:13:40Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForList(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((list.get(i).get(\"price\")) != null) currentPair.setBuyValues(java.lang.Float.valueOf(((java.lang.String) (list.get(i).get(\"price\")))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3919/buggy-version/src.main.java.ru.exmo.dao.tradingClientDAO.java", "BodyUseAPI": ["ru.exmo.model.data.currencyPair.setBuyValues(java.lang.Float)", "java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.get(int)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Float.valueOf(java.lang.Object)"], "Fixed commit": "6a7488c38d18cf0117a7b09053571aa2bde06137", "Url": "https://api.github.com/repos/AndreyEvdoshenko/EXMO", "Date": "2018-01-21T19:37:00Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.queryForList(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((list.get(0).get(\"price\")) != null) pair.setBuyValues(java.lang.Float.valueOf(((java.lang.String) (list.get(0).get(\"price\")))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3919/buggy-version/src.main.java.ru.exmo.dao.tradingClientDAO.java", "BodyUseAPI": ["java.lang.Float.valueOf(java.lang.Object)", "java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.get(int)", "ru.exmo.model.data.currencyPair.setBuyValues(java.lang.Float)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "6a7488c38d18cf0117a7b09053571aa2bde06137", "Url": "https://api.github.com/repos/AndreyEvdoshenko/EXMO", "Date": "2018-01-21T19:37:00Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTextBold) == (com.flyco.tablayout.SlidingTabLayout.TEXT_BOLD_BOTH)) { tv_tab_title.getPaint().setFakeBoldText(true); }else if ((mTextBold) == (com.flyco.tablayout.SlidingTabLayout.TEXT_BOLD_NONE)) { tv_tab_title.getPaint().setFakeBoldText(false); }else if ((mTextBold) == (com.flyco.tablayout.SlidingTabLayout.TEXT_BOLD_WHEN_SELECT)) { if ((mViewPager.getCurrentItem()) == i) { updateTabSelection(i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2658/buggy-version/FlycoTabLayout_Lib.src.main.java.com.flyco.tablayout.SlidingTabLayout.java", "BodyUseAPI": [], "Fixed commit": "ecbb67740d31fbfcdb31c1019b26134bee2622c4", "Url": "https://api.github.com/repos/jhwing/FlycoTabLayout", "Date": "2018-09-09T14:52:51Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(toAdd.getTeamName().toString().equals(seedu.address.logic.commands.UNSPECIFIED_FIELD))) { model.assignPersonToTeam(toAdd, toAdd.getTeamName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9136/buggy-version/src.main.java.seedu.address.logic.commands.AddCommand.java", "BodyUseAPI": ["seedu.address.logic.commands.AddCommand.assignPersonToTeam(seedu.address.model.person.Person,toAdd.getTeamName())", "seedu.address.model.person.Person.getTeamName()"], "Fixed commit": "e9bdca04abbe11fa077dbb8f006b974de83980df", "Url": "https://api.github.com/repos/CS2103JAN2018-F14-B1/main", "Date": "2018-03-30T08:41:22Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.address.model.person.Person.getTeamName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(teamName.toString().equals(seedu.address.logic.commands.UNSPECIFIED_FIELD))) { throw new seedu.address.logic.commands.exceptions.CommandException(seedu.address.commons.core.Messages.MESSAGE_TEAM_NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9136/buggy-version/src.main.java.seedu.address.logic.commands.AddCommand.java", "BodyUseAPI": [], "Fixed commit": "e9bdca04abbe11fa077dbb8f006b974de83980df", "Url": "https://api.github.com/repos/CS2103JAN2018-F14-B1/main", "Date": "2018-03-30T08:41:22Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((grey[i][j]) > pgmMaxShade) { pgmMaxShade = grey[i][j]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1513/buggy-version/WS4.PPMImage.java", "BodyUseAPI": [], "Fixed commit": "794035af3b19270d50dfc6e32c26c5e68007b3e1", "Url": "https://api.github.com/repos/EternalXiao/SW", "Date": "2018-10-31T16:05:25Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["datasetCreatorFromTaxonomy.ResumeDataset.AnalyzerWikipediaGraph.getDocumentLabels(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((labels.size()) >= 2) writerLabelsTest.write(((((((splitted[((splitted.length) - 1)]) + \",\") + (labels.get(0))) + \",\") + (labels.get(1))) + \"\\n\")); else writerLabelsTest.write(((((splitted[((splitted.length) - 1)]) + \",\") + (labels.get(0))) + \"\\n\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7895/buggy-version/resumeDataset.src.main.java.datasetCreatorFromTaxonomy.ResumeDataset.CreateDataset.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "java.io.FileWriter.write(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)", "java.io.FileWriter.write(java.lang.String)"], "Fixed commit": "8384d55214c3311aea7a1878a0a902d90d169ad7", "Url": "https://api.github.com/repos/luilom/DataSourceClassificator", "Date": "2018-01-09T09:35:02Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstUpdate) { firstUpdate = false; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8201/buggy-version/core.src.entities.entitymeta.Entity.java", "BodyUseAPI": [], "Fixed commit": "067da9f6012a656e790156ce102ae5358c17f84f", "Url": "https://api.github.com/repos/CuseCose/Aeronef", "Date": "2018-06-03T00:53:26Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((items.length) == 2) { contact.setName(items[0]); contact.setUrl(items[1]); }else if ((items.length) == 3) { contact.setName(((items[0]) + (items[1]))); contact.setUrl(items[2]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8192/buggy-version/src.main.java.com.contacts.reader.CsvReader.java", "BodyUseAPI": ["com.contacts.dto.ContactDto.setUrl(java.lang.String)", "com.contacts.dto.ContactDto.setUrl(java.lang.String)", "com.contacts.dto.ContactDto.setName(java.lang.String)", "com.contacts.dto.ContactDto.setName(java.lang.String)"], "Fixed commit": "4046f039ece8a9087fda285da35a6da24170851d", "Url": "https://api.github.com/repos/caydogdu/contacts", "Date": "2018-10-21T13:51:40Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["aliguvenc.musicapp.helper.PreferencesManager.getFavoriteList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (trackList == null) { trackList = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/42/buggy-version/app.src.main.java.aliguvenc.musicapp.helper.PreferencesManager.java", "BodyUseAPI": [], "Fixed commit": "c22ce57e170603ed917a18a36e5515ecc567a4ed", "Url": "https://api.github.com/repos/aliguvenc/MusicApp", "Date": "2018-01-07T19:12:08Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currentTemperatureField.getText().toString().equals(\"\"))) { currentTemperatureField.startAnimation(animTemperature); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5994/buggy-version/app.src.main.java.com.example.stmak.wuzzupweather.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.startAnimation(android.view.animation.Animation)"], "Fixed commit": "a1c57468a225f1699ac53acaddd37f4bfa423ed9", "Url": "https://api.github.com/repos/stKhaDgar/WuzzupWeather", "Date": "2018-06-06T17:51:37Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((tokenClaimsSet) != null) && ((!((tokenClaimsSet) instanceof org.geant.idpextension.oidc.token.support.RefreshTokenClaimsSet)) && (!((tokenClaimsSet) instanceof org.geant.idpextension.oidc.token.support.AuthorizeCodeClaimsSet)))) { log.error(\"{} No tokn grant if of illegal type\", getLogPrefix()); org.opensaml.profile.action.ActionSupport.buildEvent(profileRequestContext, EventIds.INVALID_PROFILE_CTX); return false; }else if ((tokenClaimsSet) == null) { subjectCtx = profileRequestContext.getSubcontext(net.shibboleth.idp.authn.context.SubjectContext.class, false); if ((subjectCtx) == null) { log.error(\"{} No subject context\", getLogPrefix()); org.opensaml.profile.action.ActionSupport.buildEvent(profileRequestContext, EventIds.INVALID_PROFILE_CTX); return false; } idGenerator = idGeneratorLookupStrategy.apply(profileRequestContext); if ((idGenerator) == null) { log.debug(\"{} No identifier generation strategy\", getLogPrefix()); org.opensaml.profile.action.ActionSupport.buildEvent(profileRequestContext, EventIds.INVALID_PROFILE_CTX); return false; } if ((((profileRequestContext.getInboundMessageContext()) == null) || ((profileRequestContext.getInboundMessageContext().getMessage()) == null)) || (!((profileRequestContext.getInboundMessageContext().getMessage()) instanceof com.nimbusds.openid.connect.sdk.AuthenticationRequest))) { log.debug(\"{} No authentication request avalailable\", getLogPrefix()); org.opensaml.profile.action.ActionSupport.buildEvent(profileRequestContext, EventIds.INVALID_MSG_CTX); return false; } authenticationRequest = ((com.nimbusds.openid.connect.sdk.AuthenticationRequest) (profileRequestContext.getInboundMessageContext().getMessage())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7556/buggy-version/idp-oidc-extension-impl.src.main.java.org.geant.idpextension.oidc.profile.impl.SetAccessTokenToResponseContext.java", "BodyUseAPI": [], "Fixed commit": "e03382b03d6ec477bb306330eae8170583bc1863", "Url": "https://api.github.com/repos/CSCfi/shibboleth-idp-oidc-extension", "Date": "2018-05-22T11:40:27Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["FlippyFour.getRotationNum()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (number.equals(\"6\")) { number = \"5\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5619/buggy-version/Animation.java", "BodyUseAPI": [], "Fixed commit": "29e62c4b4fabfc4d4626cface520f3820a28b338", "Url": "https://api.github.com/repos/JasonLin43212/Flippy-Four", "Date": "2018-01-21T02:30:45Z"},
{"Line": "=>3907", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.biglybt.ui.swt.Composite.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((newParent.getData(com.biglybt.ui.swt.Utils.RELAYOUT_UP_STOP_HERE)) != null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7622/buggy-version/uis.src.com.biglybt.ui.swt.Utils.java", "BodyUseAPI": [], "Fixed commit": "049f001435f642899573451f9365ab6a0d107e81", "Url": "https://api.github.com/repos/BiglySoftware/BiglyBT", "Date": "2018-01-23T10:18:26Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.inputmethod.InputConnection.getSelectedText(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(selectedText)) inputConnection.deleteSurroundingText(1, 0); else inputConnection.commitText(\"\", 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6031/buggy-version/app.src.main.java.com.zann1x.asciiboard.MainInputService.java", "BodyUseAPI": [], "Fixed commit": "02f58e9a31ade5a2bc4bea9dbaf4719872c7d885", "Url": "https://api.github.com/repos/zann1x/AsciiBoard", "Date": "2018-01-21T20:35:23Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.paraMap.containsKey(key)) { return this.paraMap.get(key); }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4065/buggy-version/TopicalPhrases.src.phraseMining.UnStem.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "3a25bf4bb6eca2d158f049830f2e35f275136413", "Url": "https://api.github.com/repos/JSybrandt/ToPMine", "Date": "2018-04-26T17:53:40Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(recipesConfig.getParentFile().mkdirs())) { throw new java.lang.Exception(\"Could not create missing parent directory\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5106/buggy-version/src.main.java.org.eientei.gtce2oc.GTCE2OCModContainer.java", "BodyUseAPI": [], "Fixed commit": "0bb3e7ca569d82945ef9379ed25895ad0b774f7c", "Url": "https://api.github.com/repos/eientei/gtce2oc", "Date": "2018-10-13T21:27:47Z"},
{"Line": "=>1618", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sub.getExpressions(1).getKind()) == (boa.types.Ast.Expression.ExpressionKind.PAREN)) divResults.set(((divResults.size()) - 1), ((boa.types.Ast.Expression) (divResults.get(((divResults.size()) - 1)))).getExpressions(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4257/buggy-version/src.java.boa.functions.BoaNormalFormIntrinsics.java", "BodyUseAPI": [], "Fixed commit": "a34b609be14c1c245cffa83b7d24890c46c73f11", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2018-08-24T19:29:26Z"},
{"Line": "=>1302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["boa.types.Ast.Expression.getExpressions(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((subExp2.getKind()) == (boa.types.Ast.Expression.ExpressionKind.PAREN)) subExp2 = subExp2.getExpressions(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4257/buggy-version/src.java.boa.functions.BoaNormalFormIntrinsics.java", "BodyUseAPI": ["boa.types.Ast.Expression.getExpressions(int)"], "Fixed commit": "a34b609be14c1c245cffa83b7d24890c46c73f11", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2018-08-24T19:29:26Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((exc.getResponse()) == null) { exc.setResponse(com.predic8.membrane.core.interceptor.oauth2.OAuth2Util.createParameterizedJsonErrorResponse(exc, jsonGen, \"error\", \"invalid_request\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/164/buggy-version/core.src.main.java.com.predic8.membrane.core.interceptor.oauth2.processors.DefaultEndpointProcessor.java", "BodyUseAPI": ["com.predic8.membrane.core.interceptor.oauth2.OAuth2Util.createParameterizedJsonErrorResponse(com.predic8.membrane.core.exchange.Exchange,com.predic8.membrane.core.interceptor.oauth2.processors.DefaultEndpointProcessor,java.lang.String,java.lang.String)", "com.predic8.membrane.core.exchange.Exchange.setResponse(com.predic8.membrane.core.interceptor.oauth2.OAuth2Util.createParameterizedJsonErrorResponse(exc, jsonGen, \"error\", \"invalid_request\"))"], "Fixed commit": "bf45257ad400251aa1afc8f49c3a592b48d67a2e", "Url": "https://api.github.com/repos/precoder/service-proxy", "Date": "2018-09-21T11:30:32Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (presetList.startsWith(\"|\")) { presetList = presetList.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1942/buggy-version/app.src.main.java.com.example.philipp.ledcontroller.recyclerview.PresetRecyclerViewAdapter.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "1c5230ed07d38df73f0ca0ea10b1c1a66d030f1e", "Url": "https://api.github.com/repos/PhilippThoelke/led-controller", "Date": "2018-08-09T10:00:28Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (presetList.endsWith(\"|\")) { presetList = presetList.substring(0, ((presetList.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1942/buggy-version/app.src.main.java.com.example.philipp.ledcontroller.recyclerview.PresetRecyclerViewAdapter.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "1c5230ed07d38df73f0ca0ea10b1c1a66d030f1e", "Url": "https://api.github.com/repos/PhilippThoelke/led-controller", "Date": "2018-08-09T10:00:28Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owlike.genson.reflect.TypeUtil.getRawClass(java.lang.reflect.Type)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.Object.class.equals(clazz)) return match;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4697/buggy-version/genson.src.main.java.com.owlike.genson.reflect.TypeUtil.java", "BodyUseAPI": [], "Fixed commit": "b41a1c232fe5f35c55810db84f9ae297af1d54d2", "Url": "https://api.github.com/repos/aseovic/genson", "Date": "2018-06-14T02:57:31Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((current - (nums[startIndex])) == target) { count++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8477/buggy-version/leetcode.494.Solution.java", "BodyUseAPI": [], "Fixed commit": "d942979786e151a810fe94b70ff1828e7862c8ae", "Url": "https://api.github.com/repos/charlie-curtis/coding_sites", "Date": "2018-10-20T05:42:27Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentProfile.equals(login)) || (myFollowing.contains(currentProfile))) { queueForProfiles.pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6082/buggy-version/src.main.java.ru.mail.olg1997.BotManager.java", "BodyUseAPI": [], "Fixed commit": "46e3f8f11db75c10836aa16da0cc92bc10543ded", "Url": "https://api.github.com/repos/lel9/instagram_bot", "Date": "2018-08-26T13:42:42Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((courseTracker.getNumCourses()) < (GraduateDatabase.NUM_COURSES)) { java.lang.System.out.println(\"Not enough courses for top six!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7273/buggy-version/Student.java", "BodyUseAPI": [], "Fixed commit": "302893852642b470b940cd19831635272a78e582", "Url": "https://api.github.com/repos/alice-cai/graduate-information-system", "Date": "2018-01-23T16:19:18Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((orgUnitEvidences.size()) > 0) { reciter.algorithm.evidence.targetauthor.department.strategy.DepartmentStringMatchStrategy.slf4jLogger.info((((\"Pmid: \" + (reCiterArticle.getArticleId())) + \" \") + (orgUnitEvidences.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4178/buggy-version/src.main.java.reciter.algorithm.evidence.targetauthor.department.strategy.DepartmentStringMatchStrategy.java", "BodyUseAPI": ["org.slf4j.Logger.info((((\"Pmid: \" + (reCiterArticle.getArticleId())) + \" \") + (orgUnitEvidences.toString())))", "java.util.List<reciter.engine.analysis.evidence.OrganizationalUnitEvidence>.toString()"], "Fixed commit": "f1ae5064d24c28012f6db53d14d7f4b5b471761b", "Url": "https://api.github.com/repos/wcmc-its/ReCiter", "Date": "2018-07-13T15:53:14Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(AppData.isUserRegistering)) { checkYesterday(); }else { userRecordedYesterday = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5159/buggy-version/app.src.main.java.CKD.Android.Mood.java", "BodyUseAPI": [], "Fixed commit": "21dc330024616993324e12a9559f806db96f87c1", "Url": "https://api.github.com/repos/rav-singh/CKDApp", "Date": "2018-03-20T18:39:04Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((holder.movie.getPosterPath()) != null) com.squareup.picasso.Picasso.with(context).load(((com.necatisozer.mymovies.ui.movielist.MovieRecyclerViewAdapter.IMAGE_BASE_URL) + (holder.movie.getPosterPath()))).into(holder.imageViewPoster);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6621/buggy-version/app.src.main.java.com.necatisozer.mymovies.ui.movielist.MovieRecyclerViewAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(context).load(((com.necatisozer.mymovies.ui.movielist.MovieRecyclerViewAdapter.IMAGE_BASE_URL) + (holder.movie.getPosterPath()))).into(android.widget.ImageView)", "com.necatisozer.mymovies.data.api.model.Movie.getPosterPath()", "com.squareup.picasso.Picasso.with(context).load(((com.necatisozer.mymovies.ui.movielist.MovieRecyclerViewAdapter.IMAGE_BASE_URL) + (holder.movie.getPosterPath())))"], "Fixed commit": "19432e7749b33bb6e17bd247fc0d3e1b4ee96aee", "Url": "https://api.github.com/repos/necatisozer/MyMovies", "Date": "2018-02-07T00:58:44Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((holder.getPosterUrl()) != null) com.squareup.picasso.Picasso.with(getContext()).load(holder.getPosterUrl()).into(poster);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6621/buggy-version/app.src.main.java.com.necatisozer.mymovies.ui.moviedetails.MovieDetailsFragment.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(getContext()).load(holder.getPosterUrl()).into(android.widget.ImageView)", "com.necatisozer.mymovies.ui.moviedetails.MovieDetailsViewHolder.getPosterUrl()", "com.squareup.picasso.Picasso.with(getContext()).load(holder.getPosterUrl())"], "Fixed commit": "19432e7749b33bb6e17bd247fc0d3e1b4ee96aee", "Url": "https://api.github.com/repos/necatisozer/MyMovies", "Date": "2018-02-07T00:58:44Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (envVariables != null) for (java.lang.String pair : envVariables) ((org.hobbit.sdk.docker.AbstractDockerizer) (component)).addEnvironmentVariable(pair);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8155/buggy-version/src.main.java.org.hobbit.sdk.utils.ComponentsExecutor.java", "BodyUseAPI": [], "Fixed commit": "1495ebefa7b32ea1ea4a2963487f7067658fd515", "Url": "https://api.github.com/repos/hobbit-project/java-sdk", "Date": "2018-10-16T15:32:07Z"},
{"Line": "=>588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isNpc())) { if (this.getPlayer().getUsername().equalsIgnoreCase(\"Tanner\")) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5870/buggy-version/src.com.vencillio.rs2.entity.Entity.java", "BodyUseAPI": [], "Fixed commit": "2eebaeb6972c4a535e410c89f08afeb36099acb8", "Url": "https://api.github.com/repos/tannermon11/RSPS", "Date": "2018-05-14T08:49:41Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iter.isNextWordCursorWord()) { if (((processedCommand.getArguments()) != null) || (((processedCommand.getArgument()) != null) && ((processedCommand.getArgument().getValue()) == null))) { processedCommand.setCompleteStatus(new org.aesh.command.impl.parser.CompleteStatus(CompleteStatus.Status.ARGUMENT, word.word())); }else { processedCommand.setCompleteStatus(new org.aesh.command.impl.parser.CompleteStatus(CompleteStatus.Status.ARGUMENT_ERROR, null)); } }else { setCompletionArgStatus(word.word()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4671/buggy-version/aesh.src.main.java.org.aesh.command.impl.parser.AeshCommandLineParser.java", "BodyUseAPI": [], "Fixed commit": "ac125289367e7372367bcf909f54b808304435d3", "Url": "https://api.github.com/repos/aeshell/aesh", "Date": "2018-10-15T19:30:12Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((headerLengh) == null) || ((header) == null)) || ((originalContentLenght) == null)) || ((compressedBits) == null)) throw new jhuffman.util.files.MissingDataException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4737/buggy-version/JHuffman2018Setup_v1.3.src.jhuffman.util.files.HuffmanFile.java", "BodyUseAPI": [], "Fixed commit": "ad31702fc590aa20307deb476652129d4f36e89a", "Url": "https://api.github.com/repos/vaalecav/algo2-compresor", "Date": "2018-10-25T20:34:53Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(tmpDirPath.endsWith(java.io.File.separator))) { tmpDirPath = tmpDirPath + (java.io.File.separator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2973/buggy-version/src.main.java.de.gishmo.gwtbootstartermvp4g2.server.resource.ProjectService.java", "BodyUseAPI": [], "Fixed commit": "c2bad5b9a054e71ea069e21825705f887e32b9b1", "Url": "https://api.github.com/repos/mvp4g/gwt-boot-starter-mvp4g2", "Date": "2018-04-01T21:34:33Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(projectRootFolder.endsWith(java.io.File.separator))) { projectRootFolder = projectRootFolder + (java.io.File.pathSeparator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2973/buggy-version/src.main.java.de.gishmo.gwtbootstartermvp4g2.server.resource.ProjectService.java", "BodyUseAPI": [], "Fixed commit": "c2bad5b9a054e71ea069e21825705f887e32b9b1", "Url": "https://api.github.com/repos/mvp4g/gwt-boot-starter-mvp4g2", "Date": "2018-04-01T21:34:33Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mHasQuit) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8377/buggy-version/app.src.main.java.com.keyeswest.trackme.SegmentPlotter.java", "BodyUseAPI": [], "Fixed commit": "ec0150215dd4569b118607eef3bac5e1d63e28fc", "Url": "https://api.github.com/repos/chipk215/CapstoneProject", "Date": "2018-05-12T17:35:04Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isSubscriber(stage)) { if (stage instanceof org.reactivestreams.utils.spi.Stage.Subscriber) { firstSubscriber = ((org.reactivestreams.utils.spi.Stage.Subscriber) (stage)).getSubscriber(); }else if (stage instanceof org.reactivestreams.utils.spi.Stage.Processor) { firstSubscriber = ((org.reactivestreams.utils.spi.Stage.Processor) (stage)).getProcessor(); } }else if (stage.hasInlet()) { org.reactivestreams.utils.impl.GraphLogic.SubscriberInlet inlet = new org.reactivestreams.utils.impl.GraphLogic.SubscriberInlet(org.reactivestreams.utils.impl.GraphLogic.DEFAULT_BUFFER_HIGH_WATERMARK, org.reactivestreams.utils.impl.GraphLogic.DEFAULT_BUFFER_LOW_WATERMARK); builderPorts.add(inlet); currentInlet = inlet; firstSubscriber = inlet; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6067/buggy-version/impl.src.main.java.org.reactivestreams.utils.impl.GraphLogic.java", "BodyUseAPI": ["org.reactivestreams.utils.spi.Stage.hasInlet()"], "Fixed commit": "ce31f312eafaae154bd6bb49bc41615cdb3c6252", "Url": "https://api.github.com/repos/lightbend/reactive-streams-utils", "Date": "2018-03-16T10:21:48Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(inlet.isFinished())) { inlet.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6067/buggy-version/impl.src.main.java.org.reactivestreams.utils.impl.FlatMapStage.java", "BodyUseAPI": ["org.reactivestreams.utils.impl.FlatMapStage.finish()"], "Fixed commit": "ce31f312eafaae154bd6bb49bc41615cdb3c6252", "Url": "https://api.github.com/repos/lightbend/reactive-streams-utils", "Date": "2018-03-16T10:21:48Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mockWorld.getProjectile().getHasHit()) { }else { drawObject(mockWorld.getProjectile()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9571/buggy-version/core.src.views.game_world.GameWorldDrawer.java", "BodyUseAPI": ["views.game_world.GameWorldDrawer.drawObject(mockWorld.getProjectile())", "models.MockGameWorld.getProjectile()"], "Fixed commit": "08d2234ddb70676ab0a69fdb280bbbb03fa9fbd8", "Url": "https://api.github.com/repos/jorgenmortensen/CastleCrush", "Date": "2018-04-16T14:59:11Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastIndex == 0) { java.nio.file.DirectoryStream<java.nio.file.Path> stream = null; try { stream = java.nio.file.Files.newDirectoryStream(dir.toPath(), new de.milchreis.phobox.core.file.filter.DirectoryFilter()); for (java.nio.file.Path path : stream) { java.io.File file = path.toFile(); if (((isRoot && (file.isDirectory())) && (file.getName().equals(\"phobox\"))) || (file.isHidden())) { continue; } if (((file.isFile()) && (de.milchreis.phobox.utils.ListHelper.endsWith(file.getName(), PhoboxConfigs.SUPPORTED_VIEW_FORMATS))) || (file.isDirectory())) { response.add(photoService.getItem(file)); } } } catch (java.io.IOException e) { de.milchreis.phobox.server.api.PhotosService.log.warn((\"Error while scanning directory: \" + (e.getLocalizedMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1667/buggy-version/src.main.java.de.milchreis.phobox.server.api.PhotosService.java", "BodyUseAPI": [], "Fixed commit": "8e8afaf80890c782b494c2490d1f1a8a00e1f723", "Url": "https://api.github.com/repos/Milchreis/phobox", "Date": "2018-06-01T18:29:47Z"},
{"Line": "=>1190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enableLock) { getLock().longOpenLock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/464/buggy-version/app.src.main.java.com.dchip.door.smartdoorsdk.deviceControl.DeviceImpl.java", "BodyUseAPI": [], "Fixed commit": "9b684d83f401863eb70165349d0fa9f888a7ce71", "Url": "https://api.github.com/repos/llakcs/SDoor", "Date": "2018-02-27T06:15:46Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bluetoothAdapter.isEnabled()) && ((mBTDevice) != null)) { startBTConnection(mBTDevice, com.example.mirella.bluetoothproject.BluetoothActivity.MY_UUID_INSECURE); android.widget.Toast.makeText(getApplicationContext(), \"Creating the connection...\", Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(getApplicationContext(), \"Bluetooth not on or the device not chosen\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5576/buggy-version/app.src.main.java.com.example.mirella.bluetoothproject.BluetoothActivity.java", "BodyUseAPI": [], "Fixed commit": "83e3042beff2bf6a1cec6d808a1b5dac541f739e", "Url": "https://api.github.com/repos/MirellaU/BluetoothProject", "Date": "2018-10-18T09:46:46Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bluetoothAdapter.isEnabled()) && ((mBTDevice) != null)) { byte[] bytes = send_text.getText().toString().getBytes(java.nio.charset.Charset.defaultCharset()); mBluetoothConnection.write(bytes); }else { android.widget.Toast.makeText(getApplicationContext(), \"Bluetooth not on or the device not chosen\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5576/buggy-version/app.src.main.java.com.example.mirella.bluetoothproject.BluetoothActivity.java", "BodyUseAPI": [], "Fixed commit": "83e3042beff2bf6a1cec6d808a1b5dac541f739e", "Url": "https://api.github.com/repos/MirellaU/BluetoothProject", "Date": "2018-10-18T09:46:46Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (slot < 0) slot = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/171/buggy-version/src.main.java.io.github.tehstoneman.betterstorage.common.inventory.CrateStackHandler.java", "BodyUseAPI": [], "Fixed commit": "3d05dca11e35c84accf43b8a276b41963e589ebe", "Url": "https://api.github.com/repos/TehStoneMan/BetterStorageToo", "Date": "2018-09-25T23:39:31Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (slot >= (indexSlots.size())) slot = (indexSlots.size()) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/171/buggy-version/src.main.java.io.github.tehstoneman.betterstorage.common.inventory.CrateStackHandler.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.size()"], "Fixed commit": "3d05dca11e35c84accf43b8a276b41963e589ebe", "Url": "https://api.github.com/repos/TehStoneMan/BetterStorageToo", "Date": "2018-09-25T23:39:31Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<com.sendbird.android.FileMessage, com.dinuscxj.progressbar.CircleProgressBar>.get(com.sendbird.android.FileMessage)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (circleProgressBar != null) { circleProgressBar.setProgress(percent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8983/buggy-version/app.src.main.java.com.sendbird.android.sample.groupchannel.GroupChatAdapter.java", "BodyUseAPI": ["com.dinuscxj.progressbar.CircleProgressBar.setProgress(int)"], "Fixed commit": "62d26d8f2b609f10048f21a43dba4317aea32869", "Url": "https://api.github.com/repos/smilefam/SendBird-Android", "Date": "2018-04-04T04:49:29Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.UUID.fromString(main.getConfig().getString(((\"Archived.\" + index) + \".player\")))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.bukkit.Bukkit.getOnlinePlayers().contains(org.bukkit.Bukkit.getPlayer(playerID))) { author = org.bukkit.Bukkit.getPlayer(playerID).getName(); }else { offline = org.bukkit.Bukkit.getOfflinePlayer(playerID); author = offline.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3542/buggy-version/ServerReport.src.us.cyberplex.serverreport.ReportData.java", "BodyUseAPI": ["org.bukkit.Bukkit.getPlayer(playerID).getName()", "org.bukkit.Bukkit.getPlayer(java.util.UUID)", "org.bukkit.Bukkit.getOfflinePlayer(java.util.UUID)"], "Fixed commit": "f052d0cebcabf76414c522b10a1163ba7f3ac8f4", "Url": "https://api.github.com/repos/zackatack108/ServerReport", "Date": "2018-06-08T04:30:26Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.UUID.fromString(main.getConfig().getString(((\"Reports.\" + index) + \".player\")))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.bukkit.Bukkit.getOnlinePlayers().contains(org.bukkit.Bukkit.getPlayer(playerID))) { author = org.bukkit.Bukkit.getPlayer(playerID).getName(); }else { offline = org.bukkit.Bukkit.getOfflinePlayer(playerID); author = offline.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3542/buggy-version/ServerReport.src.us.cyberplex.serverreport.ReportData.java", "BodyUseAPI": ["org.bukkit.Bukkit.getOfflinePlayer(java.util.UUID)", "org.bukkit.Bukkit.getPlayer(java.util.UUID)", "org.bukkit.Bukkit.getPlayer(playerID).getName()"], "Fixed commit": "f052d0cebcabf76414c522b10a1163ba7f3ac8f4", "Url": "https://api.github.com/repos/zackatack108/ServerReport", "Date": "2018-06-08T04:30:26Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.System.getProperty(dr.app.checkpoint.BeastCheckpointer.FORCE_RESUME)) != null) { forceResume = java.lang.Boolean.parseBoolean(java.lang.System.getProperty(dr.app.checkpoint.BeastCheckpointer.FORCE_RESUME)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9382/buggy-version/src.dr.app.checkpoint.BeastCheckpointer.java", "BodyUseAPI": ["java.lang.Boolean.parseBoolean(java.lang.String)", "java.lang.System.getProperty(java.lang.String)"], "Fixed commit": "8f265d56f96ccefecaae10f3ca16f1f2639b93af", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2018-06-05T10:03:15Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.minecraft.client.Minecraft.getMinecraft().ingameGUI.getChatGUI().getChatOpen()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8252/buggy-version/main.java.de.diamondCoding.fastJoin.events.TickListener.java", "BodyUseAPI": [], "Fixed commit": "3f6d03235770c1fd9902ad1fd9c29b8591a50acf", "Url": "https://api.github.com/repos/DiamondCodingYT/fastJoin", "Date": "2018-07-27T12:06:10Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array1.length) > (colIndex)) { value1 = array1[colIndex]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3649/buggy-version/main.plugins.org.talend.dataquality.src.org.talend.dataquality.indicators.mapdb.compartor.DBMapSpecialColCompartor.java", "BodyUseAPI": [], "Fixed commit": "6bce8421906032b8924b99bebad26f87289130b9", "Url": "https://api.github.com/repos/Talend/tdq-studio-se", "Date": "2018-07-09T08:47:07Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array2.length) > (colIndex)) { value2 = array2[colIndex]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3649/buggy-version/main.plugins.org.talend.dataquality.src.org.talend.dataquality.indicators.mapdb.compartor.DBMapSpecialColCompartor.java", "BodyUseAPI": [], "Fixed commit": "6bce8421906032b8924b99bebad26f87289130b9", "Url": "https://api.github.com/repos/Talend/tdq-studio-se", "Date": "2018-07-09T08:47:07Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.muni.fi.pa165.pokemons.facade.TrainerFacade.getById(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((trainer.getGym()) == null) { trainerFacade.deleteTrainer(trainer); redirectAttributes.addFlashAttribute(\"alert_success\", ((((\"Trainer \\\"\" + (trainer.getName())) + \" \") + (trainer.getSurname())) + \"\\\" was deleted.\")); }else { redirectAttributes.addFlashAttribute(\"alert_success\", ((((((\"Trainer \\\"\" + (trainer.getName())) + \" \") + (trainer.getSurname())) + \"\\\" is Gym Leader. Please delete gym\") + (trainer.getGym().getCityName())) + \" first.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3903/buggy-version/Spring-mvc.src.main.java.cz.muni.fi.pa165.pokemons.controllers.TrainerController.java", "BodyUseAPI": ["cz.muni.fi.pa165.pokemons.facade.TrainerFacade.deleteTrainer(cz.muni.fi.pa165.pokemons.DTO.TrainerDTO)", "org.springframework.web.servlet.mvc.support.RedirectAttributes.addFlashAttribute(java.lang.String,((((\"Trainer \\\"\" + (trainer.getName())) + \" \") + (trainer.getSurname())) + \"\\\" was deleted.\"))", "cz.muni.fi.pa165.pokemons.DTO.TrainerDTO.getSurname()", "cz.muni.fi.pa165.pokemons.DTO.TrainerDTO.getGym()", "cz.muni.fi.pa165.pokemons.DTO.TrainerDTO.getName()", "cz.muni.fi.pa165.pokemons.DTO.TrainerDTO.getSurname()", "org.springframework.web.servlet.mvc.support.RedirectAttributes.addFlashAttribute(java.lang.String,((((((\"Trainer \\\"\" + (trainer.getName())) + \" \") + (trainer.getSurname())) + \"\\\" is Gym Leader. Please delete gym\") + (trainer.getGym().getCityName())) + \" first.\"))", "cz.muni.fi.pa165.pokemons.DTO.TrainerDTO.getName()", "trainer.getGym().getCityName()"], "Fixed commit": "c533a4350d6a5f08b356b9e5441d002093f341d8", "Url": "https://api.github.com/repos/PeterTopor94/TournamentManager", "Date": "2018-01-10T17:25:21Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNavigationView) != null) { for (int i = 0; i < (mDisplays.size()); i++) { mNavigationView.getMenu().getItem(i).setChecked(false); } mNavigationView.getMenu().getItem(mDisplayNumber).setChecked(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/273/buggy-version/app.src.main.java.org.adaptlab.chpir.android.survey.SurveyFragment.java", "BodyUseAPI": [], "Fixed commit": "7de571645314ba64dc7983632743ffd567c7ad4b", "Url": "https://api.github.com/repos/DukeMobileTech/AndroidSurvey", "Date": "2018-02-20T20:03:02Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.runa.wfe.service.delegate.Delegates.getExecutorService().getExecutor(getLoggedUser(request),form.getId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (getLoggedUser(request).getActor().equals(actor)) { getLoggedUser(request).getActor().setActive(form.isActive()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7028/buggy-version/wfe-web.src.main.java.ru.runa.af.web.action.UpdateStatusAction.java", "BodyUseAPI": ["ru.runa.af.web.action.UpdateStatusAction.getLoggedUser(javax.servlet.http.HttpServletRequest)", "getLoggedUser(request).getActor()", "getLoggedUser(request).getActor().setActive(form.isActive())"], "Fixed commit": "5bf4a0d300f542eec2e84fad6900f42c23974a15", "Url": "https://api.github.com/repos/estet90/runawfe-server", "Date": "2018-02-09T16:58:18Z"},
{"Line": "=>1118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sentPacket.getType()) == (com.comphenix.protocol.PacketType.Play.Server.ENTITY_VELOCITY)) { if ((disguise.getType()) == (me.libraryaddict.disguise.disguisetypes.DisguiseType.FALLING_BLOCK)) { packets.clear(); } }else if ((sentPacket.getType()) == (com.comphenix.protocol.PacketType.Play.Server.ENTITY_HEAD_ROTATION)) { if ((disguise.getType().isPlayer()) && ((entity.getType()) != (org.bukkit.entity.EntityType.PLAYER))) { org.bukkit.Location loc = entity.getLocation(); byte pitch = me.libraryaddict.disguise.utilities.PacketsManager.getPitch(disguise.getType(), me.libraryaddict.disguise.disguisetypes.DisguiseType.getType(entity.getType()), ((byte) ((int) (((loc.getPitch()) * 256.0F) / 360.0F)))); byte yaw = me.libraryaddict.disguise.utilities.PacketsManager.getYaw(disguise.getType(), entity.getType(), sentPacket.getBytes().read(0)); com.comphenix.protocol.events.PacketContainer rotation = new com.comphenix.protocol.events.PacketContainer(com.comphenix.protocol.PacketType.Play.Server.ENTITY_HEAD_ROTATION); com.comphenix.protocol.reflect.StructureModifier<java.lang.Object> mods = rotation.getModifier(); mods.write(0, entity.getEntityId()); mods.write(1, yaw); com.comphenix.protocol.events.PacketContainer look = new com.comphenix.protocol.events.PacketContainer(com.comphenix.protocol.PacketType.Play.Server.ENTITY_LOOK); look.getIntegers().write(0, entity.getEntityId()); look.getBytes().write(0, yaw); look.getBytes().write(1, pitch); packets.clear(); packets.addPacket(look); packets.addPacket(rotation); } }else { packets.setUnhandled(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6875/buggy-version/src.me.libraryaddict.disguise.utilities.PacketsManager.java", "BodyUseAPI": ["com.comphenix.protocol.events.PacketContainer.getBytes()", "com.comphenix.protocol.events.PacketContainer.getType()", "sentPacket.getBytes().read(int)", "me.libraryaddict.disguise.utilities.PacketsManager.getYaw(disguise.getType(),entity.getType(),sentPacket.getBytes().read(0))"], "Fixed commit": "8d0aa545c14c2869bd92e131a5cb22e3f60b3c48", "Url": "https://api.github.com/repos/libraryaddict/LibsDisguises", "Date": "2018-01-10T12:36:22Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parent) for (int edgeTime = 0; edgeTime < (this.getEdgeCount()); edgeTime++) { parent = ((((this.getFromTime(edgeTime)) == (child.getFromTime(edgeTime))) && ((this.getToTime(edgeTime)) == (child.getToTime(edgeTime)))) && ((this.isOutgoing(edgeTime)) == (child.isOutgoing(edgeTime)))) && ((this.getEdgeLabel(edgeTime)) == (child.getEdgeLabel(edgeTime))); if (!parent) { break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/4615/buggy-version/src.main.java.org.biiig.dmgm.impl.graph.DFSCode.java", "BodyUseAPI": [], "Fixed commit": "e6a91f01832e688731b81132a52c0f7569d37f3e", "Url": "https://api.github.com/repos/p3et/dmgm", "Date": "2018-01-23T13:27:14Z"},
{"Line": "=>647", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(response.hasResponseBody())) { return org.killbill.billing.client.KillBillHttpClient.createEmptyResult(clazz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5710/buggy-version/src.main.java.org.killbill.billing.client.KillBillHttpClient.java", "BodyUseAPI": [], "Fixed commit": "253a862840cf08ea5c1fbd60bbb98d28ed50e0a5", "Url": "https://api.github.com/repos/killbill/killbill-client-java", "Date": "2018-03-14T01:08:05Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(distinctIds.add(field.id()))) { handleError(node, (\"duplicate id found: \" + (field.id()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6761/buggy-version/sbe-tool.src.main.java.uk.co.real_logic.sbe.xml.Message.java", "BodyUseAPI": ["uk.co.real_logic.sbe.xml.Message.handleError(org.w3c.dom.Node,(\"duplicate id found: \" + (field.id())))", "uk.co.real_logic.sbe.xml.Field.id()"], "Fixed commit": "88a7b45dbd8dc1458b861cd98c7a07353050cee0", "Url": "https://api.github.com/repos/PKRoma/simple-binary-encoding", "Date": "2018-10-09T11:25:57Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Optional<com.brohoof.brohoofeconomy.Account>.get()", "java.util.Optional<com.brohoof.brohoofeconomy.Account>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (source.equals(target)) { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"You can't send money to yourself!\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9835/buggy-version/src.main.java.com.brohoof.brohoofeconomy.CommandHandler.java", "BodyUseAPI": [], "Fixed commit": "c44a90ac08a7efdb1056c0b000de27ce51225154", "Url": "https://api.github.com/repos/EquestriaCubed/BrohoofEconomy", "Date": "2018-02-13T16:38:59Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.school.magic.spiderCreator.SQSiteHandler.getNewsURLList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((urlList != null) && ((urlList.size()) > 0)) { for (java.lang.String newsUrls : urlList) { sqSiteHandler.setNewsURL(newsUrls); spider = com.school.magic.pageProcessor.SQProcessor.getSpider(sqSiteHandler).thread(1); spiderList.add(spider); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5293/buggy-version/src.main.java.com.school.magic.spiderCreator.SpiderGenerator.java", "BodyUseAPI": [], "Fixed commit": "2219fe21236e9264564c3724b2f264d0aad5d332", "Url": "https://api.github.com/repos/RogerGu007/spiderBBS", "Date": "2018-04-25T16:07:13Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hh10.isChecked()) { edu.aku.hassannaqvi.kmc_hhlisting.core.AppMain.cTotal = java.lang.Integer.valueOf(hh11.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1121/buggy-version/app.src.main.java.edu.aku.hassannaqvi.kmc_hhlisting.ui.HouseholdInfoActivity.java", "BodyUseAPI": [], "Fixed commit": "4cd51ebe8b0fcc6f9a73e281c39e7e07a4c91695", "Url": "https://api.github.com/repos/shznaqvi/PSSP-HHListing", "Date": "2018-03-12T07:26:39Z"},
{"Line": "=>616", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(channel.isMute())) { explicitlyMutedChannels.remove(channel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3957/buggy-version/clients.src.main.java.org.apache.kafka.common.network.Selector.java", "BodyUseAPI": ["java.util.Set<org.apache.kafka.common.network.KafkaChannel>.remove(org.apache.kafka.common.network.KafkaChannel)"], "Fixed commit": "00886c396c588360426a4008f892b3e282827c60", "Url": "https://api.github.com/repos/jonlee2/kafka", "Date": "2018-05-22T07:57:27Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) { timer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9728/buggy-version/app.src.main.java.uk.ac.cam.cl.waytotheclinic.LocationFragment.java", "BodyUseAPI": [], "Fixed commit": "31eb2b25732faeced9a80d91af0a8f8856f542d4", "Url": "https://api.github.com/repos/team-papa/waytotheclinic", "Date": "2018-03-03T10:47:46Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_results.getNodesExpanded()) >= 44) { java.lang.System.out.println((\"check \" + (_results.getNodesExpanded()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3141/buggy-version/src.ai.aiSelection.AlphaBetaSearch.AlphaBetaSearch.java", "BodyUseAPI": ["ai.aiSelection.AlphaBetaSearch.AlphaBetaSearchResults.getNodesExpanded()", "java.io.PrintStream.println((\"check \" + (_results.getNodesExpanded())))"], "Fixed commit": "3f5abf633c215dfb2c8e4e3c40c41014a040f6b6", "Url": "https://api.github.com/repos/rubensolv/MicroRTS", "Date": "2018-04-19T19:49:16Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.time.Duration.between(_searchTimer, java.time.Instant.now()).toMillis()) >= ((_params.getTimeLimit()) - 5)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3141/buggy-version/src.ai.aiSelection.AlphaBetaSearch.AlphaBetaSearch.java", "BodyUseAPI": [], "Fixed commit": "3f5abf633c215dfb2c8e4e3c40c41014a040f6b6", "Url": "https://api.github.com/repos/rubensolv/MicroRTS", "Date": "2018-04-19T19:49:16Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getActivity()) != null) && ((getActivity()) instanceof org.wordpress.android.ui.main.WPMainActivity)) { ((org.wordpress.android.ui.main.WPMainActivity) (getActivity())).showQuickStartSnackBar(title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7838/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.reader.ReaderPostListFragment.java", "BodyUseAPI": [], "Fixed commit": "3e31ddfeaf76d4d70e3ac9528601998b8b8bc14f", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2018-07-03T05:14:47Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((instance.getSequenceID()) > 0) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8887/buggy-version/extensions.tutorials.src.main.java.eu.amidst.tutorial.usingAmidst.examples.DynamicModelInference.java", "BodyUseAPI": [], "Fixed commit": "fe6b7103cd9f3dcf0dece39f90af7c1860ccfa4d", "Url": "https://api.github.com/repos/amidst/toolbox", "Date": "2018-01-09T08:12:01Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dep == (-1)) condition += \"depNo > 0 \"; else condition += java.lang.String.format(\"depNo = %d \", dep);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6071/buggy-version/src.Service.ProjectReader.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.Integer)"], "Fixed commit": "71243250f732387f169a49a7c3a89916a52f5498", "Url": "https://api.github.com/repos/whynot-s/SHSJ", "Date": "2018-07-10T02:00:49Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { mChannel = new android.app.NotificationChannel(CHANNEL_ID, \"nobel\", android.app.NotificationManager.IMPORTANCE_HIGH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2439/buggy-version/app.src.main.java.com.example.aflah.tracki_master.App.java", "BodyUseAPI": [], "Fixed commit": "9b1df4fd7ebde6d0237e3410c164ba35e8e35cd9", "Url": "https://api.github.com/repos/dinopuguh/tracki-android", "Date": "2018-10-31T15:35:40Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((outputFile.getParentFile()) != null) outputFile.getParentFile().mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/2867/buggy-version/src.main.java.nl.unimaas.ids.DescriptiveStatistics.java", "BodyUseAPI": ["java.io.File.mkdirs()", "java.io.File.getParentFile()"], "Fixed commit": "bb8cc7526a259722c2fa892440807240cde17fc7", "Url": "https://api.github.com/repos/MaastrichtU-IDS/dqa_descriptive_statistics", "Date": "2018-01-29T10:59:19Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((size) == 0) && (index == 0)) { start = data; end = data; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/3051/buggy-version/08LinkedList.MyLinkedList.java", "BodyUseAPI": [], "Fixed commit": "4373feccdb693bc1d73953b62afc30c148ec2133", "Url": "https://api.github.com/repos/DamianWasilewicz/MKS22X", "Date": "2018-04-10T19:34:26Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.project.hepet.service.GoodsService.goodsAllDetail(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((goods == null) || (1 != (goods.getStatus().intValue()))) { modelMap.put(\"info\", \"\u5546\u54c1\u672a\u4e0a\u67b6\"); return \"common_result\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5835/buggy-version/hepet.hepet-web.src.main.java.com.project.hepet.web.controller.GoodsController.java", "BodyUseAPI": [], "Fixed commit": "8a31ae2b35838420469194799295aa7231010fdc", "Url": "https://api.github.com/repos/louisJong/hepet", "Date": "2018-01-18T10:34:41Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (session == null) { response.setStatus(403); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/729/buggy-version/src.rpc.RecommendItem.java", "BodyUseAPI": [], "Fixed commit": "73c79028bfda647470e530828a2786330edf0b00", "Url": "https://api.github.com/repos/williamwxz/Jupiter", "Date": "2018-08-15T14:56:18Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((edge.getType().isContainment()) == containment) { org.emoflon.ibex.common.utils.EMFManipulationUtils.deleteEdge(edge.getSource(), edge.getTarget(), edge.getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8420/buggy-version/org.emoflon.ibex.common.src.org.emoflon.ibex.common.utils.EMFManipulationUtils.java", "BodyUseAPI": ["org.emoflon.ibex.common.utils.EMFEdge.getSource()", "org.emoflon.ibex.common.utils.EMFEdge.getTarget()", "org.emoflon.ibex.common.utils.EMFEdge.getType()", "org.emoflon.ibex.common.utils.EMFManipulationUtils.deleteEdge(edge.getSource(),edge.getTarget(),edge.getType())"], "Fixed commit": "2a0bcf66695e2463df9b9936644d46dccd3bafff", "Url": "https://api.github.com/repos/eMoflon/emoflon-ibex", "Date": "2018-05-21T12:18:06Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["view.getClass().getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (viewAnnotation != null) { java.lang.Class<? extends uk.q3c.krail.core.navigate.sitemap.annotations.ViewLayout> layoutClass = viewAnnotation.layout(); if (layoutClass == (uk.q3c.krail.core.navigate.sitemap.annotations.View.NO_LAYOUT)) { return null; }else if (layoutClass == (uk.q3c.krail.core.navigate.sitemap.annotations.View.UNDEFINED_LAYOUT)) { return getDefault(view); }else { return get(layoutClass); } }else { return getDefault(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/1851/buggy-version/src.main.java.uk.q3c.krail.core.view.DefaultLayoutFactory.java", "BodyUseAPI": ["uk.q3c.krail.core.navigate.sitemap.annotations.View.layout()"], "Fixed commit": "819fabba391fbc072208d587a1ca2a775432986b", "Url": "https://api.github.com/repos/lelmarir/krail", "Date": "2018-07-26T09:47:31Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, com.xilinx.rapidwright.device.Part>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((p == null) && (!(partName.startsWith(\"xc\")))) { p = com.xilinx.rapidwright.device.PartNameTools.partMap.get((\"xc\" + partName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/5328/buggy-version/com.xilinx.rapidwright.device.PartNameTools.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, com.xilinx.rapidwright.device.Part>.get(java.lang.String)"], "Fixed commit": "c0cdb797a2c51b717ee0d7fc0a4e9e975358ec1f", "Url": "https://api.github.com/repos/Xilinx/RapidWright", "Date": "2018-10-15T20:20:40Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xyz.dcme.account.AccountManager.hasLoginAccount(getActivity())) { mBottomBar.show(); mBottomBar.setComment(comment); }else { xyz.dcme.account.AccountManager.getAccount(getActivity(), mLoginHandler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/7685/buggy-version/app.src.main.java.xyz.dcme.agg.frag.article.ArticleFragment.java", "BodyUseAPI": [], "Fixed commit": "984d2187aa51ccdaa9d117e5d4910fb96c52ae09", "Url": "https://api.github.com/repos/caoshen/agg", "Date": "2018-04-30T08:43:31Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((snake.direction) == (com.sms.tetris_snake.Direction.RIGHT)) if (((c.getRow()) == (snCell.getRow())) && (((snCell.getColumn()) - (c.getColumn())) == (-1))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8275/buggy-version/app.src.main.java.com.sms.tetris_snake.models.TetrisCanvas.java", "BodyUseAPI": [], "Fixed commit": "061fd0f7269568279ce1717fea3f861b41a4779b", "Url": "https://api.github.com/repos/sukhyna-mykola/TetrisSnake", "Date": "2018-10-25T06:57:46Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((snake.direction) == (com.sms.tetris_snake.Direction.UP)) if ((((c.getRow()) - (snCell.getRow())) == (-1)) && ((snCell.getColumn()) == (c.getColumn()))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8275/buggy-version/app.src.main.java.com.sms.tetris_snake.models.TetrisCanvas.java", "BodyUseAPI": [], "Fixed commit": "061fd0f7269568279ce1717fea3f861b41a4779b", "Url": "https://api.github.com/repos/sukhyna-mykola/TetrisSnake", "Date": "2018-10-25T06:57:46Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((snake.direction) == (com.sms.tetris_snake.Direction.DOWN)) if ((((c.getRow()) - (snCell.getRow())) == 1) && ((snCell.getColumn()) == (c.getColumn()))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8275/buggy-version/app.src.main.java.com.sms.tetris_snake.models.TetrisCanvas.java", "BodyUseAPI": [], "Fixed commit": "061fd0f7269568279ce1717fea3f861b41a4779b", "Url": "https://api.github.com/repos/sukhyna-mykola/TetrisSnake", "Date": "2018-10-25T06:57:46Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((snake.direction) == (com.sms.tetris_snake.Direction.LEFT)) if (((c.getRow()) == (snCell.getRow())) && (((snCell.getColumn()) - (c.getColumn())) == 1)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/8275/buggy-version/app.src.main.java.com.sms.tetris_snake.models.TetrisCanvas.java", "BodyUseAPI": [], "Fixed commit": "061fd0f7269568279ce1717fea3f861b41a4779b", "Url": "https://api.github.com/repos/sukhyna-mykola/TetrisSnake", "Date": "2018-10-25T06:57:46Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.izforge.izpack.api.data.Variables.get(java.lang.String)", "com.izforge.izpack.api.data.Variables.get(java.lang.String)", "com.izforge.izpack.api.data.Variables.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((!(isBlank(installPath))) && (isBlank(installDrive))) || ((isBlank(installPath)) && (isBlank(defaultInstallDrive)))) { parent.getNavigator().setNextEnabled(false); preview = \"Warning: The application may only be installed to a letter drive. Installing to a network or \" + \"OneDrive location is not possible.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/6750/buggy-version/open-sphere-install.open-sphere-install-panels.src.main.java.io.opensphere.installer.panels.jre.OpenSphereTargetPanel.java", "BodyUseAPI": [], "Fixed commit": "9abc4e5b19b7dc91158e40953ad46eae2ca38187", "Url": "https://api.github.com/repos/ngageoint/opensphere-desktop", "Date": "2018-05-21T21:27:20Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (botch_player == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9461/buggy-version/src.main.java.com.jaoafa.jaoSuperAchievement.jaoAchievement.Botch.java", "BodyUseAPI": [], "Fixed commit": "2291ad7addcf8ffde9d0e276c627bab0de070f4f", "Url": "https://api.github.com/repos/jaoafa/jao-Super-Achievement", "Date": "2018-05-09T09:01:44Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.meta.SkullMeta.getOwningPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (offplayer == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V150/9461/buggy-version/src.main.java.com.jaoafa.jaoSuperAchievement.jaoAchievement.WhoIsTheBear.java", "BodyUseAPI": [], "Fixed commit": "2291ad7addcf8ffde9d0e276c627bab0de070f4f", "Url": "https://api.github.com/repos/jaoafa/jao-Super-Achievement", "Date": "2018-05-09T09:01:44Z"}]}
